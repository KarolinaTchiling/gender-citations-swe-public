FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Wang, K
   Wang, JY
   Poskitt, CM
   Chen, XX
   Sun, J
   Cheng, P
AF Wang, Kun
   Wang, Jingyi
   Poskitt, Christopher M.
   Chen, Xiangxiang
   Sun, Jun
   Cheng, Peng
TI K-ST: A Formal Executable Semantics of the Structured Text Language for
   PLCs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Formal executable semantics; PLC programming; Structured text; K
   framework; OpenPLC
ID VERIFICATION; PROGRAMS
AB Programmable Logic Controllers (PLCs) are responsible for automating process control in many industrial systems (e.g. in manufacturing and public infrastructure), and thus it is critical to ensure that they operate correctly and safely. The majority of PLCs are programmed in languages such as Structured Text (ST). However, a lack of formal semantics makes it difficult to ascertain the correctness of their translators and compilers, which vary from vendor-to-vendor. In this work, we develop K-ST, a formal executable semantics for ST in the $\boldsymbol{\mathbb{K}}$K framework. Defined with respect to the IEC 61131-3 standard and PLC vendor manuals, K-ST is a high-level reference semantics that can be used to evaluate the correctness and consistency of different ST implementations. We validate K-ST by executing 567 ST programs extracted from GitHub and comparing the results against existing commercial compilers (i.e., CODESYS, CX-Programmer, and GX Works2). We then apply K-ST to validate the implementation of the open source OpenPLC platform, comparing the executions of several test programs to uncover five bugs and nine functional defects in the compiler.
C1 [Wang, Kun; Wang, Jingyi; Chen, Xiangxiang; Cheng, Peng] Zhejiang Univ, Coll Control Sci & Engn, Hangzhou 310027, Zhejiang, Peoples R China.
   [Poskitt, Christopher M.; Sun, Jun] Singapore Management Univ, Sch Comp & Informat Syst, Singapore 188065, Singapore.
C3 Zhejiang University; Singapore Management University
RP Wang, JY; Cheng, P (corresponding author), Zhejiang Univ, Coll Control Sci & Engn, Hangzhou 310027, Zhejiang, Peoples R China.
EM kunwang_yml@zju.edu.cn; wangjyee@zju.edu.cn; cposkitt@smu.edu.sg;
   chenxiangx@zju.edu.cn; junsun@smu.edu.sg; lunarheart@zju.edu.cn
RI Wang, Jingyi/AHE-1352-2022; Poskitt, Christopher M/S-1002-2016
OI Wang, Jingyi/0000-0001-7113-7635; Poskitt, Christopher
   M/0000-0002-9376-2471; Cheng, Peng/0000-0002-4453-2274; Wang,
   Kun/0000-0001-5523-1330; Sun, Jun/0000-0002-3545-1392
FU National Key R&D Program of China [2020YFB2010900]; NSFC [61833015,
   62293511]; Provincial Key R&D Program of Zhejiang [2020C01038,
   SN-ZJU-SIAS-001]; Starry Night Science Fund of Zhejiang University
   Shanghai Institute for Advanced Study;  [2021C01032]
FX This work was supported in part by the National Key R & D Program of
   China under Grant 2020YFB2010900; in part by NSFC under Grants 61833015
   and 62293511; in part by the Provincial Key R & D Program of Zhejiang
   under Grants 2020C01038 and 2021C01032; and in part by the Starry Night
   Science Fund of Zhejiang University Shanghai Institute for Advanced
   Study under Grant SN-ZJU-SIAS-001
CR Adiego B. F., 2014, IFAC Proc., V47, P3333
   Adiego BF, 2015, IEEE T IND INFORM, V11, P1400, DOI 10.1109/TII.2015.2489184
   Alves TR, 2014, IEEE GLOB HUMANIT C, P585, DOI 10.1109/GHTC.2014.6970342
   [Anonymous], 2013, Programmable Controllers-Part 3: Programming Languages
   Antonsen T. M., 2020, PLC Controls With Structured Text (ST), V3: IEC 61131-3 and Best Practice ST Programming
   Bauer N, 2004, LECT NOTES COMPUT SC, V3147, P517
   Blech JO, 2011, LECT NOTES COMPUT SC, V7041, P58, DOI 10.1007/978-3-642-24690-6_6
   Bogdanas D, 2015, ACM SIGPLAN NOTICES, V50, P445, DOI [10.1145/2775051.2676982, 10.1145/2676726.2676982]
   Bohlender D, 2018, IFAC PAPERSONLINE, V51, P428, DOI 10.1016/j.ifacol.2018.06.336
   Canet G, 2000, IEEE SYS MAN CYBERN, P2449, DOI 10.1109/ICSMC.2000.884359
   Chen JJ, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3363562
   Darvas D., 2016, P 23 PH D MIN S, P6
   Darvas D., 2015, P 15 INT C ACC LARG, P907
   Darvas D, 2016, LECT NOTES COMPUT SC, V9681, P508, DOI 10.1007/978-3-319-33693-0_32
   Darvas D, 2014, LECT NOTES COMPUT SC, V8461, P284, DOI 10.1007/978-3-662-43613-4_18
   Ellison C, 2012, ACM SIGPLAN NOTICES, V47, P533, DOI 10.1145/2103621.2103719
   Garcia L, 2016, 2016 RESILIENCE WEEK (RWS), P67, DOI 10.1109/RWEEK.2016.7573309
   Garcia LA, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23313
   Guo SJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P326, DOI 10.1145/3106237.3106245
   Hailesellasie Muluken, 2018, Journal of Hardware and Systems Security, V2, P1
   Heiner M., 1997, Tech. Rep. I-20/1997
   Hohnka MJ, 2019, J AEROSP INFORM SYST, V16, P409, DOI 10.2514/1.I010699
   Huang YH, 2019, IEEE ACCESS, V7, P14593, DOI 10.1109/ACCESS.2019.2894026
   Huuck R, 2005, ELECTRON NOTES THEOR, V115, P3, DOI 10.1016/j.entcs.2004.09.026
   Janicke H, 2015, ELECTRONICS-SWITZ, V4, P995, DOI 10.3390/electronics4040995
   Jiao J, 2020, P IEEE S SECUR PRIV, P1695, DOI 10.1109/SP40000.2020.00066
   John KH, 2010, IEC 61131-3: PROGRAMMING INDUSTRIAL AUTOMATION SYSTEMS, SECOND EDITION, P1, DOI 10.1007/978-3-642-12015-2
   Keliris A, 2018, Arxiv, DOI arXiv:1812.03478
   Kuzmin EV, 2013, 2013 TOOLS & METHODS OF PROGRAM ANALYSIS (TMPA 2013), P15, DOI [10.1109/TMPA.2013.10, 10.1109/TMPA.2013.7163716]
   Langner R, 2011, IEEE SECUR PRIV, V9, P49, DOI 10.1109/MSP.2011.67
   Liang GQ, 2017, IEEE T POWER SYST, V32, P3317, DOI 10.1109/TPWRS.2016.2631891
   Mader A, 1999, PROCEEDINGS OF THE 11TH EUROMICRO CONFERENCE ON REAL-TIME SYSTEMS, P106, DOI 10.1109/EMRTS.1999.777456
   Maler O., 1996, Proceedings of the Seventh Israeli Conference on Computer Systems and Software Engineering, P23, DOI 10.1109/ICCSSE.1996.554845
   Marcozzi M, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360581
   Markovic F., 2015, Automated test generation for structured text languageusing UPPAAL model checker
   Martí-Oliet N, 2002, THEOR COMPUT SCI, V285, P121, DOI 10.1016/S0304-3975(01)00357-7
   McCracken Daniel D, 2003, Encyclopedia of Computer Science, P129
   McKeeman William M., 1998, DIGIT TECH J, V10, P100
   McLaughlin S, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23043
   Mertke T, 2002, IEEE SYS MAN CYBERN, P2700
   Nipkow T., 2014, Concrete Semantics, P75
   Nochvay A., 2019, Security research: CODESYS runtime, a PLC control framework
   Blech JO, 2013, Arxiv, DOI arXiv:1301.3047
   Ovatman T, 2016, SOFTW SYST MODEL, V15, P937, DOI 10.1007/s10270-014-0448-7
   Park D, 2015, ACM SIGPLAN NOTICES, V50, P346, DOI [10.1145/2813885.2737991, 10.1145/2737924.2737991]
   Perlroth N., 2018, New York Times
   Rawlings BC, 2018, COMPUT CHEM ENG, V114, P211, DOI 10.1016/j.compchemeng.2017.11.004
   Roos N., 2008, P INT MULT COMP SCI, P20
   Rosu G, 2017, NATO SCI PEAC SECUR, V50, P186, DOI 10.3233/978-1-61499-810-5-186
   Rosu G, 2014, ELECTRON NOTES THEOR, V304, P3, DOI 10.1016/j.entcs.2014.05.002
   Sadolewski J, 2011, E-INFORMATICA, V5, P65, DOI 10.2478/v10233-011-0031-3
   Schumi R, 2021, LECT NOTES COMPUT SC, V12649, P269, DOI 10.1007/978-3-030-71500-7_14
   Spenneberg Ralf, 2016, Black Hat Asia
   Stefanescu A, 2016, ACM SIGPLAN NOTICES, V51, P74, DOI [10.1145/2983990.2984027, 10.1145/3022671.2984027]
   Tychalas D, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P2847
   Tychalas D, 2018, IEEE I C ELECT CIRC, P477, DOI 10.1109/ICECS.2018.8618042
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P216, DOI [10.1145/2666356.2594334, 10.1145/2594291.2594334]
   Wang F, 2018, PROCEEDINGS 2018 12TH INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE 2018), P44, DOI 10.1109/TASE.2018.00014
   Xiong JW, 2021, IEEE T IND INFORM, V17, P2632, DOI 10.1109/TII.2020.2999716
   Yang XJ, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P283
   Zetter K., 2017, Motherboard
   Zhang M, 2019, P IEEE S SECUR PRIV, P522, DOI 10.1109/SP.2019.00034
NR 62
TC 0
Z9 0
U1 4
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2023
VL 49
IS 10
BP 4796
EP 4813
DI 10.1109/TSE.2023.3315292
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA Y1NF7
UT WOS:001102997400014
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Bansal, A
   Eberhart, Z
   Karas, Z
   Huang, Y
   Mcmillan, C
AF Bansal, Aakash
   Eberhart, Zachary
   Karas, Zachary
   Huang, Yu
   Mcmillan, Collin
TI Function Call Graph Context Encoding for Neural Source Code
   Summarization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Source coding; Context modeling; Decoding; Algorithms; Software
   engineering; Machine translation; Automatic documentation generation;
   context-aware models; neural networks; source code summarization
ID PROGRAM COMPREHENSION; SOFTWARE MAINTENANCE; MENTAL MODELS; INFORMATION
AB Source code summarization is the task of writing natural language descriptions of source code. The primary use of these descriptions is in documentation for programmers. Automatic generation of these descriptions is a high value research target due to the time cost to programmers of writing these descriptions themselves. In recent years, a confluence of software engineering and artificial intelligence research has made inroads into automatic source code summarization through applications of neural models of that source code. However, an Achilles' heel to a vast majority of approaches is that they tend to rely solely on the context provided by the source code being summarized. But empirical studies in program comprehension are quite clear that the information needed to describe code much more often resides in the context in the form of Function Call Graph surrounding that code. In this paper, we present a technique for encoding this call graph context for neural models of code summarization. We implement our approach as a supplement to existing approaches, and show statistically significant improvement over existing approaches. In a human study with 20 programmers, we show that programmers perceive generated summaries to generally be as accurate, readable, and concise as human-written summaries.
C1 [Bansal, Aakash; Eberhart, Zachary; Karas, Zachary; Huang, Yu; Mcmillan, Collin] Univ Notre Dame, Dept Comp Sci & Engn, Notre Dame, IN 46556 USA.
   [Bansal, Aakash; Eberhart, Zachary; Karas, Zachary; Huang, Yu; Mcmillan, Collin] Univ Vanderbilt, Dept Comp Sci, Tennessee, IL USA.
C3 University of Notre Dame
RP Bansal, A (corresponding author), Univ Notre Dame, Dept Comp Sci & Engn, Notre Dame, IN 46556 USA.; Bansal, A (corresponding author), Univ Vanderbilt, Dept Comp Sci, Tennessee, IL USA.
EM abansal1@nd.edu; zacharyeberhart@gmail.com; z.karas@vanderbilt.edu;
   yu.huang@vanderbilt.edu; cmc@nd.edu
OI Huang, Yu/0000-0003-2730-5077; McMillan, Collin/0009-0005-0887-1083
FU NSF [CCF-2211428, CCF-2100035]
FX This work was supported by NSF under Grants CCF-2211428 and CCF-2100035.
CR Aghajani E, 2020, PROC INT CONF SOFTW, P590, DOI 10.1145/3377811.3380405
   Allamanis M., 2018, INT C LEARN REPR ICL
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Alon U., 2019, PROC 7 INT C LEARN R
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Armaly A, 2018, IEEE T SOFTWARE ENG, V44, P712, DOI 10.1109/TSE.2017.2729548
   Badihi S, 2017, IEEE SOFTWARE, V34, P71, DOI 10.1109/MS.2017.45
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Banerjee S., 2005, P ACL WORKSH INTR EX, P65
   Bansal A, 2021, INT C PROGRAM COMPRE, P253, DOI 10.1109/ICPC52881.2021.00032
   BIGGERSTAFF TJ, 1993, PROC INT CONF SOFTW, P482, DOI 10.1109/ICSE.1993.346017
   Binkley D, 2007, FoSE 2007: Future of Software Engineering, P104, DOI 10.1109/FOSE.2007.27
   Briand LC, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P13, DOI 10.1109/CSMR.2003.1192406
   Cer D, 2018, Arxiv, DOI [arXiv:1803.11175, DOI 10.48550/ARXIV.1803.11175]
   Chaudhary Janhavi R, 2018, Int. J. Sci. Res. Sci. Eng. Technol, V4, P145
   Chen K, 2016, Arxiv, DOI [arXiv:1511.05960, DOI 10.48550/ARXIV.1511.05960,ARXIV]
   Collard ML, 2011, IEEE INT WORK C SO, P173, DOI 10.1109/SCAM.2011.19
   Dabre R, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3406095
   Dell N., 2012, P SIGCHI C HUMAN FAC, P1321, DOI [DOI 10.1145/2207676.2208589, 10.1145/2207676.2208589]
   Eaddy M, 2008, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2008.39
   Forward A., 2002, Proceedings of the 2002 ACM symposium on Document engineering, P26, DOI 10.1145/585058.585065
   Fowkes J, 2017, IEEE T SOFTWARE ENG, V43, P1095, DOI 10.1109/TSE.2017.2664836
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Haldar R, 2020, Arxiv, DOI arXiv:2005.06980
   Haque S, 2022, Arxiv, DOI arXiv:2204.01632
   Haque S, 2020, IEEE WORK CONF MIN S, P300, DOI 10.1145/3379597.3387449
   Haque S, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P330, DOI 10.1109/SANER50967.2021.00038
   Hill E., 2007, Proceedings of the 22nd International Conference on Automated Software Engineering, P14
   Hossain MZ, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3295748
   Hu X, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2269
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   Jiang SY, 2017, EMPIR SOFTW ENG, V22, P631, DOI 10.1007/s10664-016-9441-9
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Kramer D., 1999, Seventeenth Annual International Conference on Computer Documentation. Conference Proceedings, P147, DOI 10.1145/318372.318577
   Krinke J, 2006, J SYST SOFTWARE, V79, P1249, DOI 10.1016/j.jss.2006.02.040
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   LaToza Thomas D., 2010, P 32 ACM IEEE INT C, P185, DOI DOI 10.1145/1806799.1806829
   Lawrance J, 2013, IEEE T SOFTWARE ENG, V39, P197, DOI 10.1109/TSE.2010.111
   LeClair A, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P3931
   LeClair A, 2021, PROC IEEE INT CONF S, P286, DOI 10.1109/ICSME52107.2021.00032
   LeClair A, 2020, INT C PROGRAM COMPRE, P184, DOI 10.1145/3387904.3389268
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   LETOVSKY S, 1987, J SYST SOFTWARE, V7, P325, DOI 10.1016/0164-1212(87)90032-X
   Levesque LL, 2001, J ORGAN BEHAV, V22, P135, DOI 10.1002/job.87
   Li J, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P155, DOI 10.1109/ASE51524.2021.9678724
   Liang YD, 2018, AAAI CONF ARTIF INTE, P5229
   Lin CY, 2004, ROUGE: A Package for Automatic Evaluation of Summaries, P74, DOI DOI 10.1253/JCJ.34.1213
   LITTMAN DC, 1987, J SYST SOFTWARE, V7, P341, DOI 10.1016/0164-1212(87)90033-1
   [刘尚鹏 Liu Shangpeng], 2022, [高分子通报, Polymer Bulletin], P1
   Loyola P, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 2, P287, DOI 10.18653/v1/P17-2045
   Lu Y., 2017, Software Engineering and Methodology Domains, P3, DOI DOI 10.1177/2378023117740700
   Luong MT, 2015, Arxiv, DOI arXiv:1508.04025
   McBurney P. W., 2014, P 22 INT C PROGRAM C, P279
   McBurney PW, 2016, IEEE T SOFTWARE ENG, V42, P103, DOI 10.1109/TSE.2015.2465386
   McBurney PW, 2016, J SOFTW-EVOL PROC, V28, P120, DOI 10.1002/smr.1768
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Nie PY, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3338906.3338965
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Rodeghero P, 2017, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.2017.13
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   Roy D, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1105, DOI 10.1145/3468264.3468588
   Sa Gao, 2019, 2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER). Proceedings, P414, DOI 10.1109/SANER.2019.8667994
   Sharma Himanshu, 2020, 2020 International Conference on Power Electronics & IoT Applications in Renewable Energy and its Control (PARC), P325, DOI 10.1109/PARC49193.2020.236619
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Sridhara G., 2010, P IEEE ACM INT C AUT, P43, DOI DOI 10.1145/1858996.1859006
   Sutskever I, 2014, ADV NEUR IN, V27
   Ahmad WU, 2020, Arxiv, DOI arXiv:2005.00653
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wei BL, 2020, IEEE INT CONF AUTOM, P349, DOI 10.1145/3324884.3416578
   Williams RJ, 1989, NEURAL COMPUT, V1, P270, DOI 10.1162/neco.1989.1.2.270
   Xu K., 2018, P C EMP METH NAT LAN
   Zhang BW, 2016, IEEE INT CONF AUTOM, P625, DOI 10.1145/2970276.2970342
   Zhou Y, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111257
   Zhou ZY, 2022, INFORM SOFTWARE TECH, V143, DOI 10.1016/j.infsof.2021.106761
   Zugner D., 2021, P INT C LEARN REPR
NR 78
TC 0
Z9 0
U1 2
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2023
VL 49
IS 9
BP 4268
EP 4281
DI 10.1109/TSE.2023.3279774
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA S4DL9
UT WOS:001070689400001
DA 2024-07-18
ER

PT J
AU Abgaz, Y
   McCarren, A
   Elger, P
   Solan, D
   Lapuz, N
   Bivol, M
   Jackson, G
   Yilmaz, M
   Buckley, J
   Clarke, P
AF Abgaz, Yalemisew
   McCarren, Andrew
   Elger, Peter
   Solan, David
   Lapuz, Neil
   Bivol, Marin
   Jackson, Glenn
   Yilmaz, Murat
   Buckley, Jim
   Clarke, Paul
TI Decomposition of Monolith Applications Into Microservices Architectures:
   A Systematic Review
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Microservice architectures; Computer architecture; Systematics; Software
   systems; Bibliographies; Task analysis; Scalability; Monolith
   application decomposition; monolith to microservices migration;
   microservices architecture; microservices identification; static
   analysis; dynamic analysis
ID MIGRATION
AB Microservices architecture has gained significant traction, in part owing to its potential to deliver scalable, robust, agile, and failure-resilient software products. Consequently, many companies that use large and complex software systems are actively looking for automated solutions to decompose their monolith applications into microservices. This paper rigorously examines 35 research papers selected from well-known databases using a Systematic Literature Review (SLR) protocol and snowballing method, extracting data to answer the research questions, and presents the following four contributions. First, the Monolith to Microservices Decomposition Framework (M2MDF) which identifies the major phases and key elements of decomposition. Second, a detailed analysis of existing decomposition approaches, tools and methods. Third, we identify the metrics and datasets used to evaluate and validate monolith to microservice decomposition processes. Fourth, we propose areas for future research. Overall, the findings suggest that monolith decomposition into microservices remains at an early stage and there is an absence of methods for combining static, dynamic, and evolutionary data. Insufficient tool support is also in evidence. Furthermore, standardised metrics, datasets, and baselines have yet to be established. These findings can assist practitioners seeking to understand the various dimensions of monolith decomposition and the community's current capabilities in that endeavour. The findings are also of value to researchers looking to identify areas to further extend research in the monolith decomposition space.
C1 [Abgaz, Yalemisew; Lapuz, Neil; Jackson, Glenn; Clarke, Paul] Dublin City Univ, SFI Res Ctr Software, Sch Comp, Dublin D09 N920, Ireland.
   [Abgaz, Yalemisew; Lapuz, Neil; Jackson, Glenn; Clarke, Paul] Lero, Dublin D09 N920, Ireland.
   [McCarren, Andrew] Dublin City Univ, Dublin D09 N920, Ireland.
   [McCarren, Andrew] Dublin City Univ, Insight, SFI Res Ctr Data Analyt, Sch Comp, Dublin D09 N920, Ireland.
   [Elger, Peter; Bivol, Marin] fourTheorem Ltd, Rubicon, Cork Inst Technol, Cork T12 Y275, Ireland.
   [Solan, David] FINEOS Corp Ltd, Dublin D03 FT97, Ireland.
   [Yilmaz, Murat] Gazi Univ, Fac Engn, Dept Comp Engn, TR-06560 Ankara, Turkiye.
   [Buckley, Jim] Lero, Limerick V94 T9PX, Ireland.
   [Buckley, Jim] Univ Limerick, Dept CSIS, Limerick V94 T9PX, Ireland.
C3 Dublin City University; Dublin City University; Dublin City University;
   Gazi University; University of Limerick
RP Abgaz, Y (corresponding author), Dublin City Univ, SFI Res Ctr Software, Sch Comp, Dublin D09 N920, Ireland.
EM yalemisewm.abgaz@dcu.ie; andrew.mccarren@dcu.ie;
   peter.elger@fourtheorem.com; david.solan@fineos.com;
   Neil.lapuz2@mail.dcu.ie; marin.bivol@fourtheorem.com; gjackson@live.ie;
   my@gazi.edu.tr; Jim.Buckley@lero.ie; paul.m.clarke@dcu.ie
RI Clarke, Paul/JAX-9606-2023; Yilmaz, Murat/O-8060-2018
OI Clarke, Paul/0000-0002-4487-627X; solan, david/0009-0005-1067-7319;
   Yilmaz, Murat/0000-0002-2446-3224
FU Department of Enterprise, Trade and Employment, Ireland [DTIF
   DT20180116]; SFI, Science Foundation Ireland [SFI 13/RC/2094_P2]
FX This work was supported in part by the Department of Enterprise, Trade
   and Employment, Ireland (https://enterprise.gov.ie/en/) under the
   Disruptive Technologies Innovation Fund under Grant DTIF DT20180116, and
   in part by SFI, Science Foundation Ireland (https://www.sfi.ie/) under
   Grant SFI 13/RC/2094_P2 to Lero -the Science Foundation Ireland Research
   Centre for Software.& nbsp;
CR Abdellatif M, 2021, J SYST SOFTWARE, V173, DOI 10.1016/j.jss.2020.110868
   Abdullah M, 2019, J SYST SOFTWARE, V151, P243, DOI 10.1016/j.jss.2019.02.031
   Abgaz Yalemisew, 2023, Zenodo, DOI 10.5281/ZENODO.7899996
   Agarwal S, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, ICWS 2021, P758, DOI 10.1109/ICWS53863.2021.00104
   Ahmadvand M, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P68, DOI [10.1109/REW.2016.026, 10.1109/REW.2016.14]
   Al-Debagy O, 2021, SCALABLE COMPUT-PRAC, V22, P39, DOI 10.12694/scpe.v22i1.1836
   Al-Debagy O, 2020, 2020 IEEE 15TH INTERNATIONAL CONFERENCE OF SYSTEM OF SYSTEMS ENGINEERING (SOSE 2020), P289, DOI 10.1109/SoSE50414.2020.9130466
   [Anonymous], 2019, P IEEE OP C EL EL IN, DOI DOI 10.1109/ESTREAM.2019.8732170
   [Anonymous], 2020, CLOUD COMPUTING SERV, DOI DOI 10.1007/978-3-030-49432-2_7
   Arasteh B, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2408
   Assunçao WKG, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P377, DOI 10.1109/SANER50967.2021.00042
   Athanasopoulos D, 2015, IEEE T SERV COMPUT, V8, P550, DOI 10.1109/TSC.2014.2310195
   Auer F, 2021, INFORM SOFTWARE TECH, V137, DOI 10.1016/j.infsof.2021.106600
   Auer F, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234197
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Bajaj D., 2020, PROC INF COMMUN COMP, P111, DOI DOI 10.1007/978-981-15-9671-19
   Balalaie A, 2018, SOFTWARE PRACT EXPER, V48, P2019, DOI 10.1002/spe.2608
   Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   Ball T, 1999, LECT NOTES COMPUT SC, V1687, P216, DOI 10.1145/318774.318944
   Bandara C, 2020, INT CONF ADV ICT, P95, DOI 10.1109/ICTer51097.2020.9325443
   Baresi L, 2017, LECT NOTES COMPUT SC, V10465, P19, DOI 10.1007/978-3-319-67262-5_2
   Bozkurt M, 2013, SOFTW TEST VERIF REL, V23, P261, DOI 10.1002/stvr.1470
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Brito M, 2021, 36TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2021, P1409, DOI 10.1145/3412841.3442016
   Brogi A, 2018, LECT NOTES COMPUT SC, V10729, P219, DOI 10.1007/978-3-319-74781-1_16
   Bucchiarone Antonio, 2020, Software Engineering Aspects of Continuous Development and New Paradigms of Software Production and Deployment. Second International Workshop, DEVOPS 2019. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12055), P15, DOI 10.1007/978-3-030-39306-9_2
   Bushong V, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11177856
   Cao Lingli, 2022, ICSCA 2022: 2022 11th International Conference on Software and Computer Applications., P136, DOI 10.1145/3524304.3524325
   Cartaxo Bruno, 2018, 22 INT C EV ASS SOFT, P24, DOI DOI 10.1145/3210459.3210462
   Carvalho Luiz, 2020, GECCO'20. Proceedings of the 2020 Genetic and Evolutionary Computation Conference Companion, P305, DOI 10.1145/3377929.3390030
   Carvalho L, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P26, DOI 10.1145/3336294.3336319
   Cassel D., 2017, COBOL Is Everywhere. Who Will Maintain It?
   Chen R, 2017, ASIA PAC SOFWR ENG, P466, DOI 10.1109/APSEC.2017.53
   Chinosi M, 2012, COMPUT STAND INTER, V34, P124, DOI 10.1016/j.csi.2011.06.002
   Christoforou A, 2019, PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING (ENASE), P134, DOI 10.5220/0007732101340146
   Clarke P, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP), P86, DOI [10.1145/2904354.2904369, 10.1109/ICSSP.2016.019]
   Cojocaru M, 2019, INT CONF CLOUD COMP, P78, DOI 10.1109/CloudCom.2019.00023
   Cojocaru MD, 2019, INT SYMP PARA DISTR, P84, DOI 10.1109/ISPDC.2019.00021
   da Silva HC, 2019, ADV INTELL SYST, V800, P575, DOI 10.1007/978-3-030-14070-0_81
   da Silva HHOS, 2019, CLOSER: PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P37, DOI 10.5220/0007618400370047
   Daoud M, 2021, J SYST ARCHITECT, V118, DOI 10.1016/j.sysarc.2021.102200
   De Alwis AAC, 2021, LECT NOTES COMPUT SC, V12751, P432, DOI 10.1007/978-3-030-79382-1_26
   De Alwis AAC, 2020, LECT NOTES COMPUT SC, V12127, P3, DOI 10.1007/978-3-030-49435-3_1
   De Alwis AAC, 2018, LECT NOTES COMPUT SC, V11236, P37, DOI 10.1007/978-3-030-03596-9_3
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Dehghani M, 2022, SOFTW SYST MODEL, V21, P1115, DOI 10.1007/s10270-022-00977-3
   Dennis A., 2012, Systems Analysis and Design, V5th
   Desai U, 2021, AAAI CONF ARTIF INTE, V35, P72
   Despoudis F., 2017, UNDERSTANDING SOLID
   Di Francesco P, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P29, DOI 10.1109/ICSA.2018.00012
   Di Francesco P, 2019, J SYST SOFTWARE, V150, P77, DOI 10.1016/j.jss.2019.01.001
   Dragoni N., 2017, PRESENT ULTERIOR SOF, P195, DOI DOI 10.1007/978-3-319-67425-4_12
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Eski S, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234195
   Eyitemi FD, 2020, IEEE INT SYMP SERV O, P65, DOI 10.1109/SOSE49046.2020.00015
   Fernández DM, 2019, SOFTW SYST MODEL, V18, P2777, DOI 10.1007/s10270-019-00714-3
   Freire AFAA, 2021, SOFTWARE PRACT EXPER, V51, P1280, DOI 10.1002/spe.2956
   Fritzsch J, 2019, PROC IEEE INT CONF S, P481, DOI 10.1109/ICSME.2019.00081
   Fritzsch J, 2019, LECT NOTES COMPUT SC, V11350, P128, DOI 10.1007/978-3-030-06019-0_10
   Furda A, 2018, IEEE SOFTWARE, V35, P63, DOI 10.1109/MS.2017.440134612
   Garriga M, 2018, LECT NOTES COMPUT SC, V10729, P203, DOI 10.1007/978-3-319-74781-1_15
   Ghofrani J., 2018, PROC ZEUS, P1
   Gholami MF, 2016, J SYST SOFTWARE, V120, P31, DOI 10.1016/j.jss.2016.06.068
   Grogan J, 2020, COMM COM INF SC, V1251, P58, DOI 10.1007/978-3-030-56441-4_5
   Gupta N., 2020, MICROSERVICE MINISER
   Gysel M, 2016, LECT NOTES COMPUT SC, V9846, P185, DOI 10.1007/978-3-319-44482-6_12
   Harwood Tracy G., 2003, MARKETING REV, V3, P479, DOI [DOI 10.1362/146934703771910080, 10.1362/146934703771910080]
   Hassan S, 2020, SOFTWARE PRACT EXPER, V50, P1651, DOI 10.1002/spe.2869
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hitz M., 1995, P INT S APPL CORP CO, P25
   IBM Corporation, 2021, MICR ENT 2021 REAL B
   Jamshidi P, 2017, SOFTWARE PRACT EXPER, V47, P1159, DOI 10.1002/spe.2442
   Jantunen S, 2014, J SYST SOFTWARE, V95, P32, DOI 10.1016/j.jss.2014.03.050
   Jin WX, 2021, IEEE T SOFTWARE ENG, V47, P987, DOI 10.1109/TSE.2019.2910531
   Kalia AK, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1214, DOI 10.1145/3468264.3473915
   Kalske M, 2018, LECT NOTES COMPUT SC, V10544, P32, DOI 10.1007/978-3-319-74433-9_3
   Kamimura M, 2018, ASIA PAC SOFWR ENG, P571, DOI 10.1109/APSEC.2018.00072
   Kazanavicius J., 2020, P DOCT CONS FORUMDB, P25
   Kingma D. P., 2014, arXiv
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Krause A, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2020), P9, DOI 10.1109/ICSA-C50368.2020.00011
   Kuhn HW, 2005, NAV RES LOG, V52, P7, DOI 10.1002/nav.20053
   Lapuz N, 2021, COMM COM INF SC, V1442, P301, DOI 10.1007/978-3-030-85521-5_20
   Lewis James, 2014, Microservices
   Li SS, 2021, INFORM SOFTWARE TECH, V131, DOI 10.1016/j.infsof.2020.106449
   Li SS, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.008
   Lichtenthäler R, 2020, SICS SOFTWARE, V35, P89, DOI 10.1007/s00450-019-00414-9
   Lin D., 1998, Machine Learning. Proceedings of the Fifteenth International Conference (ICML'98), P296
   Loukides M., 2020, Microservices Adoption in 2020
   Mahanta P, 2020, LECT NOTES COMPUT SC, V11878, P143, DOI 10.1007/978-3-030-40907-4_14
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Mathai A., 2022, PROC 31 INT JOINT C, P3905, DOI [10.24963/ijcai.2022/542, DOI 10.24963/IJCAI.2022/542]
   Matias T, 2020, LECT NOTES COMPUT SC, V12292, P315, DOI 10.1007/978-3-030-58923-3_21
   Mazlami G, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P524, DOI 10.1109/ICWS.2017.61
   Mendonça NC, 2021, IEEE SOFTWARE, V38, P17, DOI 10.1109/MS.2021.3080335
   Model B. P., 2011, NOT BPMN VERS 2 0, P22
   Moller Anders., 2018, Static Program Analysis
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   Namiot D., 2014, International Journal of Open Information Technologies, V2, P24
   Newman S., 2015, BUILDING MICROSERVIC
   Nielson F., 1999, DATA FLOW ANAL, P35, DOI [10.1007/978--3-662-03811-6_2, DOI 10.1007/978--3-662-03811-6_2]
   Nitin V, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556960
   Nortal, 2017, AR MON SOFTW APPL DO
   Nunes L, 2019, LECT NOTES COMPUT SC, V11681, P37, DOI 10.1007/978-3-030-29983-5_3
   O'Connor RV, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1866
   Pahl C, 2016, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, VOL 1 (CLOSER), P137, DOI 10.5220/0005785501370146
   PAULK MC, 1993, IEEE SOFTWARE, V10, P18, DOI 10.1109/52.219617
   Pautasso C, 2017, IEEE SOFTWARE, V34, P91, DOI 10.1109/MS.2017.24
   Pigazzini I, 2019, LECT NOTES COMPUT SC, V11681, P247, DOI 10.1007/978-3-030-29983-5_17
   Ponce F, 2019, P INT C CHIL COMPUT, DOI [10.1109/sccc49216.2019.8966423, 10.1109/SCCC49216.2019.8966423]
   Qian LF, 2023, INFORM SOFTWARE TECH, V158, DOI 10.1016/j.infsof.2023.107171
   Rahman M. I., 2019, JOINT PROC INFORTE S, V2520, P1
   Razzaq A, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3280988
   Ren ZS, 2018, INTERNETWARE'18: PROCEEDINGS OF THE TENTH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE, DOI 10.1145/3275219.3275230
   Resnik P, 1995, INT JOINT CONF ARTIF, P448
   Rochimah S., 2023, Rekayasa Sistem dan Teknologi Informasi, V7, P263, DOI DOI 10.29207/RESTI.V7I2.4866
   Rosenblatt H.J., 2013, Systems analysis and design
   Saidani I, 2019, LECT NOTES COMPUT SC, V11895, P58, DOI 10.1007/978-3-030-33702-5_5
   Santos Ana, 2021, SBCARS '21: 15th Brazilian Symposium on Software Components, Architectures, and Reuse, P51, DOI 10.1145/3483899.3483908
   Schütz SW, 2013, LECT NOTES BUS INF P, V150, P130
   Sellami Khaled, 2022, EASE 2022: The International Conference on Evaluation and Assessment in Software Engineering 2022, P201, DOI 10.1145/3530019.3530040
   Sellami K, 2022, LECT NOTES COMPUT SC, V13740, P203, DOI 10.1007/978-3-031-20984-0_14
   Selmadji A, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P157, DOI 10.1109/ICSA47634.2020.00023
   Selmadji A, 2018, LECT NOTES COMPUT SC, V11116, P65, DOI 10.1007/978-3-319-99819-0_5
   Silva M., 2011, 2 WORKSH SOFTW ENG S, P213, DOI 10.1145/1987875.1987912
   Smith T., 2018, NEW RES SHOWS 63 ENT
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Strauss A., 1990, BASICS QUALITATIVE R
   Sun XX, 2024, EXPERT SYST, V41, DOI 10.1111/exsy.13158
   Taibi D, 2019, CLOSER: PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P153, DOI 10.5220/0007755901530164
   Taibi D, 2017, IEEE CLOUD COMPUT, V4, P22, DOI 10.1109/MCC.2017.4250931
   Tiobe T. S. C., 2021, TIOB IND JAN 2021
   Tozzi C., 2018, 6 REASONS NOT ADOPT
   Trabelsi I, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2503
   van Hoorn Andre, 2012, 3 JOINT WOSP SIPEW I, P247, DOI DOI 10.1145/2188286.2188326
   Velepucha Victor, 2021, 2021 Second International Conference on Information Systems and Software Technologies (ICI2ST), P135, DOI 10.1109/ICI2ST51859.2021.00027
   Villamizar M, 2017, SERV ORIENTED COMPUT, V11, P233, DOI 10.1007/s11761-017-0208-y
   Vural H., P INT C COMP SCI APP
   Waseem M, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110798
   Wohlin C., 2013, P 8 INT JOINT C SOFT, pIS
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Wolfart D, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P149, DOI 10.1145/3463274.3463334
   WU ZB, 1994, 32ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P133
   YOURDON E, 1979, STRUCTURED DESIGN FU
   Zhang YK, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P135, DOI 10.1109/ICSA47634.2020.00021
   Zimmermann O, 2017, COMPUT SCI-RES DEV, V32, P301, DOI 10.1007/s00450-016-0337-0
   Zitzler E., 2001, TIK-Report, V103, P1
NR 148
TC 5
Z9 5
U1 14
U2 23
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2023
VL 49
IS 8
BP 4213
EP 4242
DI 10.1109/TSE.2023.3287297
PG 30
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA P3WA9
UT WOS:001049968200015
OA Green Published, Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Wang, C
   Peng, X
   Xing, ZC
   Meng, XJ
AF Wang, Chong
   Peng, Xin
   Xing, Zhenchang
   Meng, Xiujie
TI Beyond Literal Meaning: Uncover and Explain Implicit Knowledge in Code
   Through Wikipedia-Based Concept Linking
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Internet; Encyclopedias; Online services; Color; Software
   development management; Training; Concept; code semantics; knowledge;
   program comprehension
AB When reusing or modifying code, developers need to understand the implicit knowledge behind a piece of code in addition to the literal meaning of code. Such implicit knowledge involves related concepts and their explanations. Uncovering and understanding the implicit knowledge in code are challenging due to the extensive use of abbreviations, scattered expressions of concepts, and ambiguity of concept mentions. In this paper, we propose an automatic approach (called CoLiCo) that can uncover implicit concepts in code and link the uncovered concepts to Wikipedia. Based on a trained identifier embedding model, CoLiCo identifies Wikipedia concepts mentioned in a given code snippet and excerpts a paragraph-level explanation from Wikipedia for each concept. During the process, CoLiCo resolves identifier abbreviation (i.e., concepts mentioned in the form of abbreviations) and identifier aggregation (i.e., concepts mentioned by an aggregation of multiple identifiers) based on identifier embedding and mining of identifier abbreviation/aggregation relations. Experimental study shows that CoLiCo outperforms a general entity linking approach by 38.7% in the correctness of concept linking and identifies 96.7% more correct concept linkings on a dataset with 629 code snippets. The concept linking is significant for program understanding in 54% code snippets. Our user study shows that CoLiCo can significantly shorten the time and improve the correctness in code comprehension tasks that intensively involve implicit knowledge.
C1 [Wang, Chong; Peng, Xin; Meng, Xiujie] Fudan Univ, Sch Comp Sci, Shanghai Key Lab Data Sci, Shanghai 200437, Peoples R China.
   [Xing, Zhenchang] Australian Natl Univ, Canberra, ACT 2601, Australia.
C3 Fudan University; Australian National University
RP Peng, X (corresponding author), Fudan Univ, Sch Comp Sci, Shanghai Key Lab Data Sci, Shanghai 200437, Peoples R China.
EM wangchong20@fudan.edu.cn; pengxin@fudan.edu.cn;
   zhenchang.xing@anu.edu.au; xjmeng20@fudan.edu.cn
RI liu, sha/JXL-6600-2024; Wang, Yanan/JVZ-7957-2024; Liu,
   Liu/JXM-8208-2024; wang, xueting/JPY-2782-2023; zhao,
   sheng/JWO-6127-2024; lin, yuan/JXL-9592-2024; Liu, Jingyi/JWP-6326-2024
OI Wang, Chong/0000-0003-1424-6290; Peng, Xin/0000-0003-3376-2581; Xing,
   Zhenchang/0000-0001-7663-1421
FU National Natural Science Foundation of China [61972098]
FX This work was supported by the National Natural Science Foundation of
   China under Grant 61972098
CR Abebe SL, 2015, SCI COMPUT PROGRAM, V98, P680, DOI 10.1016/j.scico.2014.09.012
   Adar E, 2004, BIOINFORMATICS, V20, P527, DOI 10.1093/bioinformatics/btg439
   Ahmad W., 2020, P 58 ANN M ASS COMPU, P4998, DOI 10.18653/v1/2020.acl-main.449
   Allamanis M, 2016, PR MACH LEARN RES, V48
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   BIGGERSTAFF TJ, 1993, PROC INT CONF SOFTW, P482, DOI 10.1109/ICSE.1993.346017
   Caprile B, 2000, PROC IEEE INT CONF S, P97, DOI 10.1109/ICSM.2000.883022
   Chen QY, 2018, IEEE INT CONF AUTOM, P826, DOI 10.1145/3238147.3240471
   Corazza A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P233, DOI 10.1109/ICSM.2012.6405277
   en.wikipedia, 2021, REL LUM
   Falleri J.-R, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P4, DOI 10.1109/ICPC.2010.12
   Fucci D, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/3338906.3338943
   github, 2022, REPLICATION PACKAGE
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Haiduc S, 2008, INT C PROGRAM COMPRE, P113, DOI 10.1109/ICPC.2008.29
   Hill E., 2008, P 2008 INT WORKING C, P79
   Javalang, 2021, about us
   Jiang YJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P131, DOI 10.1145/3338906.3338929
   Jiawei Han, 2000, SIGMOD Record, V29, P1, DOI 10.1145/335191.335372
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Lawrie D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P113, DOI 10.1109/ICSM.2011.6080778
   Lawrie Dawn, 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P3, DOI 10.1109/WCRE.2010.10
   Lawrie D, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P213, DOI 10.1109/SCAM.2007.17
   LeClair A, 2020, INT C PROGRAM COMPRE, P184, DOI 10.1145/3387904.3389268
   Madani N, 2010, EUR CON SFTWR MTNCE, P68, DOI 10.1109/CSMR.2010.31
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Moro A., 2014, Trans. Assoc. Computat. Ling., V2, P231, DOI [10.1162/tacl_a_00179, DOI 10.1162/TACL_A_00179]
   Nassif M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09918-4
   Peng X, 2017, SCI CHINA INFORM SCI, V60, DOI 10.1007/s11432-015-0860-9
   Peng X, 2013, J SYST SOFTWARE, V86, P664, DOI 10.1016/j.jss.2012.10.270
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Perozzi B, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P701, DOI 10.1145/2623330.2623732
   Rahman MM, 2015, IEEE INT WORK C SO, P81, DOI 10.1109/SCAM.2015.7335404
   Rajlich V, 2002, PROG COMPREHEN, P271, DOI 10.1109/WPC.2002.1021348
   Robillard MP, 2020, SIGCSE 2020: PROCEEDINGS OF THE 51ST ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P72, DOI 10.1145/3328778.3366832
   SALTON G, 1988, INFORM PROCESS MANAG, V24, P513, DOI 10.1016/0306-4573(88)90021-0
   Sridhara G, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P101, DOI 10.1145/1985793.1985808
   stackoverflow, 2021, STACK OV QUEST 43549
   Treude C, 2017, PROC IEEE INT CONF S, P509, DOI 10.1109/ICSME.2017.24
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Vassallo Carmine, 2014, Proceedings of the 22nd International Conference on Program Comprehension, P106
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wang C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P97, DOI 10.1145/3338906.3338963
   Wei BL, 2019, ADV NEUR IN, V32
   Weyssow M, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2022), P21, DOI [10.1109/ICSE-NIER55298.2022.9793511, 10.1145/3510455.3512771]
   Wikipedia, 2021, About us
   Wikipedia2vec, 2021, US
   Wilson LA, 2012, J INF KNOWL MANAG, V11, DOI 10.1142/S0219649212500189
   Wordnet, 2021, US
   Ye DH, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P90, DOI 10.1109/SANER.2016.10
   Zhang TY, 2019, PROC INT CONF SOFTW, P316, DOI 10.1109/ICSE.2019.00046
   Zuckerman M., 2019, P 13 WORKSHOP GRAPHB, P32
NR 53
TC 4
Z9 4
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2023
VL 49
IS 5
BP 3226
EP 3240
DI 10.1109/TSE.2023.3250029
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA G8MH8
UT WOS:000991628700010
DA 2024-07-18
ER

PT J
AU Khalajzadeh, H
   Shahin, M
   Obie, HO
   Agrawal, P
   Grundy, J
AF Khalajzadeh, Hourieh
   Shahin, Mojtaba
   Obie, Humphrey O.
   Agrawal, Pragya
   Grundy, John
TI Supporting Developers in Addressing Human-Centric Issues in Mobile Apps
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Mobile applications; Software development management; Internet;
   Taxonomy; Software systems; Australia; Security; Human-centric issues;
   GitHub repositories; Google Play Store; human aspects; machine learning;
   deep learning
ID SOFTWARE; USABILITY; PEOPLE
AB Failure to consider the characteristics, limitations, and abilities of diverse end-users during mobile app development may lead to problems for end-users, such as accessibility and usability issues. We refer to this class of problems as human-centric issues. Despite their importance, there is a limited understanding of the types of human-centric issues that are encountered by end-users and taken into account by the developers of mobile apps. In this paper, we examine what human-centric issues end-users report through Google App Store reviews, what human-centric issues are a topic of discussion for developers on GitHub, and whether end-users and developers discuss the same human-centric issues. We then investigate whether an automated tool might help detect such human-centric issues and whether developers would find such a tool useful. To do this, we conducted an empirical study by extracting and manually analysing a random sample of 1,200 app reviews and 1,200 issue comments from 12 diverse projects that exist on both Google App Store and GitHub. Our analysis led to a taxonomy of human-centric issues that characterises human-centric issues into three-high level categories: App Usage, Inclusiveness, and User Reaction. We then developed machine learning and deep learning models that are promising in automatically identifying and classifying human-centric issues from app reviews and developer discussions. A survey of mobile app developers shows that the automated detection of human-centric issues has practical applications. Guided by our findings, we highlight some implications and possible future work to further understand and better incorporate addressing human-centric issues into mobile app development.
C1 [Khalajzadeh, Hourieh] Deakin Univ, Fac Sci Engn & Built Environm, Sch Informat Technol, Melbourne, VIC 3125, Australia.
   [Shahin, Mojtaba] RMIT Univ, Sch Comp Technol, Melbourne, VIC 3000, Australia.
   [Obie, Humphrey O.; Agrawal, Pragya; Grundy, John] Monash Univ, Fac IT, Dept Software Syst & Cybersecur, Melbourne, VIC 3800, Australia.
C3 Deakin University; Royal Melbourne Institute of Technology (RMIT);
   Monash University
RP Khalajzadeh, H (corresponding author), Deakin Univ, Fac Sci Engn & Built Environm, Sch Informat Technol, Melbourne, VIC 3125, Australia.
EM hkhalajzadeh@deakin.edu.au; mojtaba.shahin@rmit.edu.au;
   humphrey.obie@monash.edu; pagr0009@student.monash.edu;
   john.grundy@monash.edu
RI Khalajzadeh, Hourieh/AAR-6188-2020; Grundy, John/AAF-1716-2019
OI Khalajzadeh, Hourieh/0000-0001-9958-0102; Grundy,
   John/0000-0003-4928-7076
FU ARC Laureate Program [FL190100035]; ARC Discovery [DP200100020];
   Australian Research Council [FL190100035] Funding Source: Australian
   Research Council
FX This work was supported in part by ARC Laureate Program under Grant
   FL190100035, and in part by ARC Discovery DP200100020.
CR Abualhaija S, 2020, EMPIR SOFTW ENG, V25, P5454, DOI 10.1007/s10664-020-09864-1
   Alshayban A, 2020, PROC INT CONF SOFTW, P1323, DOI 10.1145/3377811.3380392
   Andreasen M.S., 2006, INFORM TECHNOLOGY CO, V35, P303
   [Anonymous], 2021, OP SOURC IOS APPS
   [Anonymous], 2021, OP SOURC ANDR APPS P
   Barcellini F, 2008, INTERACT COMPUT, V20, P141, DOI 10.1016/j.intcom.2007.10.004
   Bhargava Prajjwal, 2021, arXiv
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Brunet J., 2014, P 11 WORK C MIN SOFT, P340
   Cabrera-Diego LA, 2020, KNOWL-BASED SYST, V195, DOI 10.1016/j.knosys.2020.105633
   Chen MH, 2019, IEEE ACCESS, V7, P13149, DOI 10.1109/ACCESS.2019.2893448
   Chen QY, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3434280
   Cheng A.-S., 2010, PROC 73 ASIS T ANN M
   D. S. S. Exchange, 2018, WORD2VEC EMB TF IDF
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Dam HK, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P627, DOI 10.1109/ICSE.2015.209
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Fazzini M, 2022, 9TH IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS, MOBILESOFT 2022, P38, DOI 10.1145/3524613.3527814
   Fredrickson BL, 2001, AM PSYCHOL, V56, P218, DOI 10.1037/0003-066X.56.3.218
   GeeksforGeeks, 2020, SNOWB STEMM NLP
   Genc-Nayebi N, 2017, J SYST SOFTWARE, V125, P207, DOI 10.1016/j.jss.2016.11.027
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Grundy J., 2020, ENASE, P229, DOI DOI 10.5220/0009806002290238
   Grundy J., 2020, INT C EVALUATION NOV, P444
   Grundy J, 2022, COMM COM INF SC, V1556, P241, DOI 10.1007/978-3-030-96648-5_11
   Gupta S, 2019, PROCEDIA COMPUT SCI, V161, P466, DOI 10.1016/j.procs.2019.11.146
   Hartzel K, 2003, COMMUN ACM, V46, P167, DOI 10.1145/903893.903933
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Huggingface, 2021, PREPR DAT
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Hussain W, 2022, IEEE T SOFTWARE ENG, V48, P5158, DOI 10.1109/TSE.2022.3140230
   Hussain W, 2022, IEEE T SOFTWARE ENG, V48, P1818, DOI 10.1109/TSE.2020.3038802
   Huynh K, 2021, P INT COMP SOFTW APP, P408, DOI 10.1109/COMPSAC51774.2021.00064
   Jadhav P, 2022, VALUATION METRICS MU
   Khalajzadeh H., 2022, ARXIV
   Khalajzadeh Hourieh, 2022, Zenodo, DOI 10.5281/ZENODO.6982529
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Ko A., 2011, iConference, P106
   Kouchaki S, 2020, FRONT MICROBIOL, V11, DOI 10.3389/fmicb.2020.00667
   Kulyk O, 2007, LECT NOTES COMPUT SC, V4417, P13
   Li Conghui, 2021, ARXIV
   Li T, 2006, PROC INT C TOOLS ART, P86
   Liu HW, 2014, INFORM SCIENCES, V281, P310, DOI 10.1016/j.ins.2014.05.013
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Liu YH, 2019, Arxiv, DOI arXiv:1907.11692
   Malgaonkar S, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106798
   Mao JY, 2005, COMMUN ACM, V48, P105, DOI 10.1145/1047671.1047677
   Mathews C, 2021, PROCEEDINGS OF THE 16TH INTERNATIONAL CONFERENCE ON SOFTWARE TECHNOLOGIES (ICSOFT), P386, DOI 10.5220/0010576503860397
   Mazuera-Rozo A, 2020, EMPIR SOFTW ENG, V25, P1644, DOI 10.1007/s10664-019-09795-6
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1067, DOI 10.1007/s10664-015-9375-7
   Miller T, 2015, J SYST SOFTWARE, V105, P54, DOI 10.1016/j.jss.2015.03.044
   Mo WK, 2015, ASIA PAC SOFWR ENG, P56, DOI 10.1109/APSEC.2015.48
   Murgia A., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P262
   Murphy KP., 2022, PROBABILISTIC MACHIN
   Nasab AR, 2021, J SYST SOFTWARE, V181, DOI 10.1016/j.jss.2021.111046
   Nurwidyantoro A., 2021, PROC IEEE ACM INT S
   Obie HO, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P29, DOI 10.1109/ICSE-SEIS52602.2021.00012
   Ortu M, 2015, Proceedings of the 11th International Conference on Predictive Models and Data Analytics in Software Engineering, PROMISE'15, P1, DOI DOI 10.1145/2810146.2810147
   Ortu M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P480, DOI [10.1145/2901739.2903505, 10.1109/MSR.2016.059]
   Palacio DN, 2019, PROC IEEE INT CONF S, P140, DOI 10.1109/ICSME.2019.00024
   Paul S., 2019, DETAILED CASE STUDY
   Peters F, 2019, IEEE T SOFTWARE ENG, V45, P615, DOI 10.1109/TSE.2017.2787653
   Pletea D., 2014, 11 WORKING C MSR, P348, DOI [10.1145/2597073.2597117, DOI 10.1145/2597073.2597117]
   Prana GAA, 2019, EMPIR SOFTW ENG, V24, P1296, DOI 10.1007/s10664-018-9660-3
   Prathibhamol CP, 2016, 2016 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P2708, DOI 10.1109/ICACCI.2016.7732470
   Ramos G, 2021, BEHAV RES THER, V147, DOI 10.1016/j.brat.2021.103990
   Rauf I., 2020, P IEEEACM 42 INT C S, P141
   Read J, 2011, MACH LEARN, V85, P333, DOI 10.1007/s10994-011-5256-5
   Roccetti M, 2020, HUM-CENTRIC COMPUT I, V10, DOI 10.1186/s13673-020-0213-6
   Sanh V, 2020, Arxiv, DOI arXiv:1910.01108
   Sorower Mohammad S., 2010, A Literature Survey on Algorithms for Multi-Label Learning
   Stock SE, 2008, J INTELL DISABIL RES, V52, P1155, DOI 10.1111/j.1365-2788.2008.01099.x
   Tsay J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P144, DOI 10.1145/2635868.2635882
   Twidale M.B., 2005, P 38 ANN HAWAII INT, p198c
   Valdez RS, 2012, HEALTH TECHNOL-GER, V2, P225, DOI 10.1007/s12553-012-0031-6
   Whittle J, 2021, IEEE SOFTWARE, V38, P106, DOI 10.1109/MS.2019.2956701
   Winter E, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267427
   Wirtz Simone, 2009, P IEA, V17
   Xu Y, 2018, J ANAL TEST, V2, P249, DOI 10.1007/s41664-018-0068-2
   Yusop NSM, 2017, IEEE T SOFTWARE ENG, V43, P848, DOI 10.1109/TSE.2016.2638427
NR 83
TC 3
Z9 3
U1 2
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2149
EP 2168
DI 10.1109/TSE.2022.3212329
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600041
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Schaefer, B
   van der Aa, H
   Leopold, H
   Stuckenschmidt, H
AF Schaefer, Bernhard
   van der Aa, Han
   Leopold, Henrik
   Stuckenschmidt, Heiner
TI Sketch2Process: End-to-End BPMN Sketch Recognition Based on Neural
   Networks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Unified modeling language; Shape; Flowcharts; Target recognition; Image
   edge detection; Handwriting recognition; Transforms; Requirements
   engineering; business process modeling; graphics recognition and
   interpretation
ID REQUIREMENTS
AB Process models play an important role in various software engineering contexts. Among others, they are used to capture business-related requirements and provide the basis for the development of process-oriented applications in low-code/no-code settings. To support modelers in creating, checking, and maintaining process models, dedicated tools are available. While these tools are generally considered as indispensable to capture process models for their later use, the initial version of a process model is often sketched on a whiteboard or a piece of paper. This has been found to have great advantages, especially with respect to communication and collaboration. It, however, also creates the need to subsequently transform the model sketch into a digital counterpart that can be further processed by modeling and analysis tools. Therefore, to automate this task, various so-called sketch recognition approaches have been defined in the past. Yet, these existing approaches are too limited for use in practice, since they, for instance, require sketches to be created on a digital device or do not address the recognition of edges or textual labels. Against this background, we use this paper to introduce Sketch2Process, the first end-to-end sketch recognition approach for process models captured using BPMN. Sketch2Process uses a neural network-based architecture to recognize the shapes, edges, and textual labels of highly expressive process models, covering 25 types of BPMN elements. To train and evaluate our approach, we created a dataset consisting of 704 hand-drawn and manually annotated BPMN models. Our experiments demonstrate that our approach is highly accurate and consistently outperforms the state of the art.
C1 [Schaefer, Bernhard; van der Aa, Han; Stuckenschmidt, Heiner] Univ Mannheim, Data & Web Sci Grp, D-68131 Mannheim, Germany.
   [Leopold, Henrik] Kuhne Logist Univ, D-20457 Hamburg, Germany.
C3 University of Mannheim; Kuhne Logistics University
RP Schaefer, B (corresponding author), Univ Mannheim, Data & Web Sci Grp, D-68131 Mannheim, Germany.
EM bernhard@informatik.uni-mannheim.de; han@informatik.uni-mannheim.de;
   henrik.leopold@the-klu.org; heiner@informatik.uni-mannheim.de
OI van der Aa, Han/0000-0002-4200-4937; Stuckenschmidt,
   Heiner/0000-0002-0209-3859
CR Sánchez JA, 2017, PROC INT CONF DOC, P1383, DOI 10.1109/ICDAR.2017.226
   Antinori A, 2022, PROC DEMONSTRATION R, V3216, P107
   Antunes P, 2013, J NETW COMPUT APPL, V36, P1466, DOI 10.1016/j.jnca.2013.03.014
   Badreddin O, 2021, J OBJECT TECHNOL, V20, DOI 10.5381/jot.2021.20.2.a1
   Bartelt C., 2013, PROC WORKSHOPMODELS, P25
   Bergig O, 2009, INT SYM MIX AUGMENT, P87, DOI 10.1109/ISMAR.2009.5336490
   Bhowmik S, 2018, INT J DOC ANAL RECOG, V21, P1, DOI 10.1007/s10032-018-0296-z
   Bresler M, 2016, INT CONF FRONT HAND, P48, DOI [10.1109/ICFHR.2016.0022, 10.1109/ICFHR.2016.19]
   Bresler M, 2016, INT J DOC ANAL RECOG, V19, P253, DOI 10.1007/s10032-016-0269-z
   Brieler F., 2008, PROC WORK C ADV VIS, P181
   Brieler F, 2010, J VISUAL LANG COMPUT, V21, P81, DOI 10.1016/j.jvlc.2009.12.002
   Brown R, 2011, BUS PROCESS MANAG J, V17, P546, DOI 10.1108/14637151111136414
   Buslaev A, 2020, INFORMATION, V11, DOI 10.3390/info11020125
   Casella G, 2008, J VISUAL LANG COMPUT, V19, P225, DOI 10.1016/j.jvlc.2007.04.002
   Chakraborty S, 2010, J ASSOC INF SYST, V11, P212
   Chen Q, 2008, SOFTWARE PRACT EXPER, V38, P961, DOI 10.1002/spe.856
   Cherubini M, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P557
   Costagliola G, 2014, J VISUAL LANG COMPUT, V25, P955, DOI 10.1016/j.jvlc.2014.10.021
   Coyette A, 2007, LECT NOTES COMPUT SC, V4662, P124
   Davis Brian, 2019, 2019 International Conference on Document Analysis and Recognition (ICDAR). Proceedings, P134, DOI 10.1109/ICDAR.2019.00030
   Deufemia V., 2012, Information systems: crossroads for organization, management, accounting and engineering, P217
   Doermann D, 2003, PROC INT CONF DOC, P606
   Douglas D.H., 1973, Cartographica: The International Journal for Geographic Information and Geovisualization, V10, P112, DOI [https://doi.org/10.3138/FM57-6770-U75U-7727, DOI 10.1002/9780470669488.CH2]
   Dumas M., 2018, FUNDAMENTALS BUSINES
   Frank U., 2021, 70 ICB
   Howard AG, 2017, Arxiv, DOI arXiv:1704.04861
   Gervais P, 2020, Arxiv, DOI arXiv:2002.09303
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Gorschek T, 2014, J SYST SOFTWARE, V95, P176, DOI 10.1016/j.jss.2014.03.082
   Hammond T. A., 2009, GRAPH INTERFACE, V2009, P157
   He KM, 2017, IEEE I CONF COMP VIS, P2980, DOI [10.1109/ICCV.2017.322, 10.1109/TPAMI.2018.2844175]
   Johnson Timothy E., 1963, P SPRING JOINT COMP, P347
   Julca-Aguilar F, 2020, INT J DOC ANAL RECOG, V23, P143, DOI 10.1007/s10032-019-00349-6
   Julca-Aguilar FD, 2018, 2018 13TH IAPR INTERNATIONAL WORKSHOP ON DOCUMENT ANALYSIS SYSTEMS (DAS), P151, DOI 10.1109/DAS.2018.79
   KURTOGLU T., 2002, Sketch Understanding: Papers from the 2002 Spring Symposium, P78
   Leopold H, 2016, IEEE SOFTWARE, V33, P26, DOI 10.1109/MS.2015.81
   Leopold H, 2014, IEEE T SOFTWARE ENG, V40, P818, DOI 10.1109/TSE.2014.2327044
   Lin TY, 2017, PROC CVPR IEEE, P936, DOI 10.1109/CVPR.2017.106
   Moyano CG, 2022, INFORM SOFTWARE TECH, V152, DOI 10.1016/j.infsof.2022.107028
   Ouyang C, 2009, ACM T SOFTW ENG METH, V19, DOI 10.1145/1555392.1555395
   Paszke A, 2019, ADV NEUR IN, V32
   Paulson Brandon, 2008, 13th International Conference on Intelligent User Interfaces. IUI 2008, P1, DOI 10.1145/1378773.1378775
   Pittke F, 2015, IEEE T SOFTWARE ENG, V41, P526, DOI 10.1109/TSE.2015.2396895
   Ren SQ, 2017, IEEE T PATTERN ANAL, V39, P1137, DOI 10.1109/TPAMI.2016.2577031
   Sahay A, 2020, EUROMICRO CONF PROC, P171, DOI 10.1109/SEAA51224.2020.00036
   Schäfer B, 2021, LECT NOTES COMPUT SC, V12821, P614, DOI 10.1007/978-3-030-86549-8_39
   Schäfer B, 2021, LECT NOTES COMPUT SC, V12751, P344, DOI 10.1007/978-3-030-79382-1_21
   Schäfer B, 2021, INT J DOC ANAL RECOG, V24, P3, DOI 10.1007/s10032-020-00361-1
   Schäfer B, 2019, PROC INT CONF DOC, P7, DOI 10.1109/ICDARW.2019.00007
   Schmidt Michael, 2013, Human-Computer Interaction. Interaction Modalities and Techniques. 15th International Conference, HCI International 2013. Proceedings. LNCS 8007, P479, DOI 10.1007/978-3-642-39330-3_51
   van der Linden D, 2019, SOFTW SYST MODEL, V18, P1813, DOI 10.1007/s10270-018-0667-4
   Vincent P., 2019, G00361584 GARTN
   Walny J, 2011, IEEE T VIS COMPUT GR, V17, P2508, DOI 10.1109/TVCG.2011.251
   Waszkowski R, 2019, IFAC PAPERSONLINE, V52, P376, DOI 10.1016/j.ifacol.2019.10.060
   Wong J., 2021, GARTNER
   Wu J, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P1200
   Wu Y., 2019, DETECTRON2
   Yang JW, 2018, LECT NOTES COMPUT SC, V11205, P690, DOI 10.1007/978-3-030-01246-5_41
   Yu B., 2003, PROC INT C COMPUT GR, P141
   Zapp M., 2017, PROC INT C WIRTSCHAF, P1283
   Zhang J, 2019, PROC CVPR IEEE, P11527, DOI 10.1109/CVPR.2019.01180
NR 61
TC 0
Z9 0
U1 2
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2621
EP 2641
DI 10.1109/TSE.2022.3228308
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600069
DA 2024-07-18
ER

PT J
AU Yaraghi, AS
   Bagherzadeh, M
   Kahani, N
   Briand, LC
AF Yaraghi, Ahmadreza Saboor
   Bagherzadeh, Mojtaba
   Kahani, Nafiseh
   Briand, Lionel C.
TI Scalable and Accurate Test Case Prioritization in Continuous Integration
   Contexts
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Feature extraction; Codes; Testing; History; Training; Data collection;
   Computational modeling; Machine learning; software testing; test case
   prioritization; test case selection; continuous integration
AB Continuous Integration (CI) requires efficient regression testing to ensure software quality without significantly delaying its CI builds. This warrants the need for techniques to reduce regression testing time, such as Test Case Prioritization (TCP) techniques that prioritize the execution of test cases to detect faults as early as possible. Many recent TCP studies employ various Machine Learning (ML) techniques to deal with the dynamic and complex nature of CI. However, most of them use a limited number of features for training ML models and evaluate the models on subjects for which the application of TCP makes little practical sense, due to their small regression testing time and low number of failed builds. In this work, we first define, at a conceptual level, a data model that captures data sources and their relations in a typical CI environment. Second, based on this data model, we define a comprehensive set of features that covers all features previously used by related studies. Third, we develop methods and tools to collect the defined features for 25 open-source software systems with enough failed builds and whose regression testing takes at least five minutes. Fourth, relying on the collected dataset containing a comprehensive feature set, we answer four research questions concerning data collection time, the effectiveness of ML-based TCP, the impact of the features on effectiveness, the decay of ML-based TCP models over time, and the trade-off between data collection time and the effectiveness of ML-based TCP techniques.
C1 [Yaraghi, Ahmadreza Saboor; Bagherzadeh, Mojtaba; Briand, Lionel C.] Univ Ottawa, Sch EECS, Ottawa, ON K1N 6N5, Canada.
   [Kahani, Nafiseh] Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
   [Briand, Lionel C.] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, L-4365 Esch Sur Alzette, Luxembourg.
C3 University of Ottawa; Carleton University; University of Luxembourg
RP Yaraghi, AS (corresponding author), Univ Ottawa, Sch EECS, Ottawa, ON K1N 6N5, Canada.
EM asabo018@uottawa.ca; bagherzadeh.mojtaba@gmail.com;
   kahani@sce.carleton.ca; lbriand@uottawa.ca
OI Saboor Yaraghi, Ahmadreza/0000-0002-1922-3234; Briand,
   Lionel/0000-0002-1393-1010
FU Research Grant from Huawei Technologies Canada; Mitacs Canada; Natural
   Sciences and Engineering Research Council of Canada (NSERC)
FX This work was supported in part by a Research Grant from Huawei
   Technologies Canada, Mitacs Canada, as well as the Canada Research Chair
   and Discovery Grant programs of the Natural Sciences and Engineering
   Research Council of Canada (NSERC).
CR Almaghairbe R, 2017, SOFTWARE QUAL J, V25, P803, DOI 10.1007/s11219-016-9339-1
   Aman H, 2020, EUROMICRO CONF PROC, P80, DOI 10.1109/SEAA51224.2020.00023
   Bagherzadeh M, 2022, IEEE T SOFTWARE ENG, V48, P2836, DOI 10.1109/TSE.2021.3070549
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Beller M, 2017, IEEE WORK CONF MIN S, P447, DOI 10.1109/MSR.2017.24
   Berger ED, 2019, ACM T PROGR LANG SYS, V41, DOI 10.1145/3340571
   Bertolino A, 2020, PROC INT CONF SOFTW, P1, DOI 10.1145/3377811.3380369
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Busjaeger B, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P975, DOI 10.1145/2950290.2983954
   Cao Z., 2007, P 24 INT C MACHINE L, P129, DOI DOI 10.1145/1273496.1273513
   Carlson Ryan, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P382, DOI 10.1109/ICSM.2011.6080805
   Chen JJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P656, DOI 10.1145/3236024.3236053
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   di Biase M, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P113, DOI 10.1109/TechDebt.2019.00030
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Elsner D, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P491, DOI 10.1145/3460319.3464834
   Freund Y, 2004, J MACH LEARN RES, V4, P933, DOI 10.1162/1532443041827916
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   Friedman M, 1937, J AM STAT ASSOC, V32, P675, DOI 10.2307/2279372
   Gepperth A., 2016, EUR S ART NEUR NETW, P1
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Hasnain M, 2019, ASIAPAC SIGN INFO PR, P96, DOI 10.1109/APSIPAASC47483.2019.9023052
   Hindle A, 2009, INT C PROGRAM COMPRE, P30, DOI 10.1109/ICPC.2009.5090025
   Jahan H, 2019, J INTELL FUZZY SYST, V36, P6181, DOI 10.3233/JIFS-181998
   Jeffrey D, 2006, P INT COMP SOFTW APP, P411
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Kandil P, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1794
   Khalid Z, 2019, 2019 IEEE 10TH ANNUAL INFORMATION TECHNOLOGY, ELECTRONICS AND MOBILE COMMUNICATION CONFERENCE (IEMCON), P1013, DOI [10.1109/IEMCON.2019.8936202, 10.1109/iemcon.2019.8936202]
   Kim JM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P119, DOI 10.1109/ICSE.2002.1007961
   Lachmann R, 2016, 2016 15TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2016), P361, DOI [10.1109/ICMLA.2016.0065, 10.1109/ICMLA.2016.163]
   Levin Stanislav, 2017, P 13 INT C PREDICTIV, P97
   Lima JAP, 2022, IEEE T SOFTWARE ENG, V48, P453, DOI 10.1109/TSE.2020.2992428
   Lima Jackson A. Prado, 2020, P INT SYST SOFTW PRO, P1, DOI [10.1145/3382025.3414967, DOI 10.1145/3382025.3414967]
   Machalica M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P91, DOI 10.1109/ICSE-SEIP.2019.00018
   Mandieh M, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106269
   Mattis T, 2020, IEEE WORK CONF MIN S, P385, DOI 10.1145/3379597.3387458
   Memon A, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P233, DOI 10.1109/ICSE-SEIP.2017.16
   Metzler D, 2007, INFORM RETRIEVAL, V10, P257, DOI 10.1007/s10791-006-9019-z
   Mirarab Siavash, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P278, DOI 10.1109/ICST.2008.57
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   NEMENYI P, 1962, BIOMETRICS, V18, P263
   Noor T.B., 2017, P 13 INT C PREDICTIV, P2
   Palma F, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P80, DOI 10.1145/3273934.3273944
   Pan RQ, 2021, Arxiv, DOI arXiv:2106.13891
   Peng Q., 2020, P 29 ACM SIGSOFT INT, P324, DOI DOI 10.1145/3395363.3397383
   Lima JAP, 2020, PROCEEDINGS OF THE 5TH BRAZILIAN SYMPOSIUM ON SYSTEMATIC AND AUTOMATED SOFTWARE TESTING, SAST 2020, P21, DOI 10.1145/3425174.3425210
   Ranklib, 2020, US
   Rosenbauer Lukas, 2020, GECCO'20. Proceedings of the 2020 Genetic and Evolutionary Computation Conference Companion, P1798, DOI 10.1145/3377929.3398128
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Scientific Toolworks Inc., 2020, UND
   Sharma M. M., 2019, INT J ENG ADV TECHNO, V9, P2742
   Shi TT, 2020, PR INT CONF DATA SC, P663, DOI 10.1109/DSAA49011.2020.00076
   Singh A., 2019, INT J RECENT TECHNOL, V8, P700
   Somasundaram R. S., 2011, International Journal of Computer Applications, V21, P14
   Songyu Chen, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P1, DOI 10.1109/ICST.2011.38
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Spieker H, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P12, DOI 10.1145/3092703.3092709
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   Tonella P, 2006, PROC IEEE INT CONF S, P123
   Torres-Jimenez J, 2014, INT SYMP SYMB NUMERI, P20, DOI 10.1109/SYNASC.2013.10
   Wikipedia, 2021, TF IDF WIK FREE ENC
   Wikipedia contributors, 2022, 68 95 99 7 RUL WIK F
   Wu QA, 2010, INFORM RETRIEVAL, V13, P254, DOI 10.1007/s10791-009-9112-1
   Yabin Wang, 2012, Proceedings of the 2012 IEEE Sixth International Conference on Software Security and Reliability (SERE 2012), P138, DOI 10.1109/SERE.2012.18
   Yoo S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P201
   Zafar S, 2019, INT SYMP EMP SOFTWAR, P59, DOI 10.1109/esem.2019.8870174
   Zhu YK, 2015, IEEE I CONF COMP VIS, P19, DOI 10.1109/ICCV.2015.11
NR 71
TC 13
Z9 13
U1 2
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1615
EP 1639
DI 10.1109/TSE.2022.3184842
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, GF
   Li, L
   Su, ZP
   Shao, ZS
   Li, MQ
   Li, B
   Yao, X
AF Zhang, Guofu
   Li, Lei
   Su, Zhaopin
   Shao, Zhisheng
   Li, Miqing
   Li, Bin
   Yao, Xin
TI New Reliability-Driven Bounds for Architecture-Based Multi-Objective
   Testing Resource Allocation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Reliability; Testing; Software reliability; Costs; Reliability theory;
   Search problems; Software systems; Multi-objective testing resource
   allocation; architecture-based model; preference over reliability;
   region of interest; lower and upper bounds
ID TEST-CASE GENERATION; SOFTWARE-RELIABILITY; EVOLUTIONARY ALGORITHMS;
   PARAMETER-ESTIMATION; MOEA/D; MODEL; COST
AB The multi-objective testing resource allocation problem (MOTRAP) aims at seeking a good trade-off between system reliability, testing cost, and testing time, which is of significant importance to facilitate the testing planning. Yet most studies focus on the time constraint but rarely consider the practical reliability requirement. In this work, we address MOTRAP on an architecture-based model (ABM) with the personalized preference over reliability. More specifically, we first present a reliability-constrained MOTRAP model on the basis of ABM and illustrate how to use this model for real-world systems. Then, to leverage the problem's knowledge, we develop new lower and upper bounds on testing time invested in different components from both theoretical and algorithmic perspectives on the basis of the Lagrange multiplier and half-interval search. Importantly, these new derived bounds have strong implications due to the fact that they can be easily employed by optimizers as the limits of variables to prune the search space to the region of interests of the decision maker and locate feasible solutions with the expected reliability. Finally, we evaluate the proposed bounds in popular multi-objective optimizers for MOTRAP on application and empirical cases. Experimental results demonstrate that our new bounds practically improve the search performance of optimizers, and decision makers can easily combine these new bounds with off-the-shelf optimizers to find higher-quality solutions that they are interested in, which greatly soothes away stress on optimizer and solution selections of decision makers.
C1 [Zhang, Guofu; Li, Lei; Su, Zhaopin; Shao, Zhisheng] Hefei Univ Technol, Sch Comp Sci & Informat Engn, Hefei 230601, Peoples R China.
   [Zhang, Guofu; Li, Lei; Su, Zhaopin; Shao, Zhisheng] Hefei Univ Technol, Key Lab Knowledge Engn Big Data, Minist Educ, Hefei 230601, Peoples R China.
   [Zhang, Guofu; Li, Lei; Su, Zhaopin; Shao, Zhisheng] Hefei Univ Technol, Intelligent Interconnected Syst Lab Anhui Prov, Hefei 230009, Peoples R China.
   [Zhang, Guofu; Li, Lei; Su, Zhaopin; Shao, Zhisheng] Hefei Univ Technol, Anhui Prov Key Lab Ind Safety & Emergency Technol, Hefei 230601, Peoples R China.
   [Li, Miqing; Yao, Xin] Univ Birmingham, Sch Comp Sci, CERCIA, Birmingham B15 2TT, England.
   [Li, Bin] Univ Sci & Technol China, Sch Informat Sci & Technol, Hefei 230027, Peoples R China.
   [Yao, Xin] Southern Univ Sci & Technol, Dept Comp Sci & Engn, Guangdong Prov Key Lab Brain Inspired Intelligent, Shenzhen 518055, Peoples R China.
C3 Hefei University of Technology; Hefei University of Technology; Hefei
   University of Technology; Hefei University of Technology; University of
   Birmingham; Chinese Academy of Sciences; University of Science &
   Technology of China, CAS; Southern University of Science & Technology
RP Su, ZP (corresponding author), Hefei Univ Technol, Sch Comp Sci & Informat Engn, Hefei 230601, Peoples R China.; Su, ZP (corresponding author), Hefei Univ Technol, Key Lab Knowledge Engn Big Data, Minist Educ, Hefei 230601, Peoples R China.; Su, ZP (corresponding author), Hefei Univ Technol, Intelligent Interconnected Syst Lab Anhui Prov, Hefei 230009, Peoples R China.
EM zgf@hfut.edu.cn; leili88@mail.hfut.edu.cn; szp@hfut.edu.cn;
   zshshao@mail.hfut.edu.cn; M.Li.8@cs.bham.ac.uk; binli@ustc.edu.cn;
   xiny@sustc.edu.cn
RI Li, Miqing/P-4153-2015
OI Li, Miqing/0000-0002-8607-9607; li, bin/0000-0002-2332-3959; Zhang,
   Guofu/0000-0002-6794-348X
FU Anhui Provincial Key Research and Development Program [202004d07020011,
   202104d07020001]; Anhui Provincial Natural Science Foundation
   [2208085MF166]; National Natural Science Foundation of China [U19B2044];
   MOE (Ministry of Education in China) Project of Humanities and Social
   Sciences [19YJC870021]; Guangdong Provincial Key Laboratory
   [2020B121201001]; Fundamental Research Funds for the Central
   Universities [PA2021GDSK0073, PA2021GDSK0074]
FX This work was supported in part by Anhui Provincial Key Research and
   Development Program under Grant 202004d07020011 and 202104d07020001, in
   part by Anhui Provincial Natural Science Foundation under Grant
   2208085MF166, in part by the National Natural Science Foundation of
   China under Grant U19B2044, in part by the MOE (Ministry of Education in
   China) Project of Humanities and Social Sciences under Grant
   19YJC870021, in part by the Guangdong Provincial Key Laboratory under
   Grant 2020B121201001, and the Fundamental Research Funds for the Central
   Universities under Grant PA2021GDSK0073 and Grant PA2021GDSK0074.
CR Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Chen WN, 2013, IEEE T SOFTWARE ENG, V39, P1, DOI 10.1109/TSE.2012.17
   Choudhary A, 2017, IET SOFTW, V11, P286, DOI 10.1049/iet-sen.2015.0171
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Emmerich MTM, 2018, NAT COMPUT, V17, P585, DOI 10.1007/s11047-018-9685-y
   Fan Z, 2019, SOFT COMPUT, V23, P12491, DOI 10.1007/s00500-019-03794-x
   Ferreira TN, 2017, INFORM SOFTWARE TECH, V90, P55, DOI 10.1016/j.infsof.2017.05.003
   Fiondella L, 2012, IEEE T RELIAB, V61, P580, DOI 10.1109/TR.2012.2192016
   Fleck M, 2017, IEEE T SOFTWARE ENG, V43, P1009, DOI 10.1109/TSE.2017.2654255
   Gokhale SS, 2005, IEEE T SOFTWARE ENG, V31, P643, DOI 10.1109/TSE.2005.86
   Goseva-Popstojanova K, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P22, DOI 10.1109/ISSRE.2001.989455
   Hsu CJ, 2011, IEEE T RELIAB, V60, P158, DOI 10.1109/TR.2011.2104490
   Huang CY, 2006, J SYST SOFTWARE, V79, P653, DOI 10.1016/j.jss.2005.06.039
   Jha PC, 2009, COMPUT IND ENG, V57, P1122, DOI 10.1016/j.cie.2009.05.001
   Li MQ, 2022, IEEE T SOFTWARE ENG, V48, P1771, DOI 10.1109/TSE.2020.3036108
   Liang J, 2023, IEEE T EVOLUT COMPUT, V27, P201, DOI 10.1109/TEVC.2022.3155533
   Lo JH, 2002, P INT COMP SOFTW APP, P7, DOI 10.1109/CMPSAC.2002.1044526
   López-Camacho E, 2014, BIOINFORMATICS, V30, P437, DOI 10.1093/bioinformatics/btt679
   Lyu MR, 2002, IEEE T RELIAB, V51, P183, DOI 10.1109/TR.2002.1011524
   Marculescu B, 2018, J SYST SOFTWARE, V142, P156, DOI 10.1016/j.jss.2018.04.061
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Pietrantuono R, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110462
   Pietrantuono R, 2018, IEEE T EVOLUT COMPUT, V22, P347, DOI 10.1109/TEVC.2017.2691060
   Pietrantuono R, 2010, IEEE T SOFTWARE ENG, V36, P323, DOI 10.1109/TSE.2010.6
   Pradhan D, 2021, IEEE T SOFTWARE ENG, V47, P86, DOI 10.1109/TSE.2018.2882176
   Ramírez A, 2019, IEEE T SOFTWARE ENG, V45, P760, DOI 10.1109/TSE.2018.2803055
   Shahbazi A, 2016, IEEE T SOFTWARE ENG, V42, P361, DOI 10.1109/TSE.2015.2487958
   Singh LK, 2015, IET SOFTW, V9, P65, DOI 10.1049/iet-sen.2014.0108
   Su ZP, 2021, IEEE T EVOLUT COMPUT, V25, P537, DOI 10.1109/TEVC.2021.3055538
   Tian Y, 2021, IEEE T EVOLUT COMPUT, V25, P102, DOI 10.1109/TEVC.2020.3004012
   Vale T, 2016, J SYST SOFTWARE, V111, P128, DOI 10.1016/j.jss.2015.09.019
   Wang Z, 2010, IEEE T RELIAB, V59, P563, DOI 10.1109/TR.2010.2057310
   Wu HY, 2021, IEEE T SOFTWARE ENG, V47, P2549, DOI 10.1109/TSE.2019.2955687
   Xie M, 2003, IEEE T SOFTWARE ENG, V29, P471, DOI 10.1109/TSE.2003.1199075
   Yang B, 2015, IEEE T RELIAB, V64, P497, DOI 10.1109/TR.2014.2372411
   Yu SS, 2013, 2013 IEEE WORKSHOP ON MEMETIC COMPUTING (MC), P1, DOI 10.1109/MC.2013.6608200
   Zeephongsekul P, 2016, IEEE T RELIAB, V65, P1571, DOI 10.1109/TR.2016.2570557
   Zhang GF, 2017, IEEE T RELIAB, V66, P1193, DOI 10.1109/TR.2017.2738660
   Zhang QF, 2007, IEEE T EVOLUT COMPUT, V11, P712, DOI 10.1109/TEVC.2007.892759
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
   Zitzler E, 1998, LECT NOTES COMPUT SC, V1498, P292, DOI 10.1007/BFb0056872
   Zitzler E, 2008, LECT NOTES COMPUT SC, V5252, P373, DOI 10.1007/978-3-540-88908-3_14
NR 43
TC 0
Z9 0
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2513
EP 2529
DI 10.1109/TSE.2022.3223875
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600063
DA 2024-07-18
ER

PT J
AU Wang, SM
   Huang, LG
   Gao, AM
   Ge, JD
   Zhang, TF
   Feng, HT
   Satyarth, I
   Li, M
   Zhang, H
   Ng, V
AF Wang, Simin
   Huang, Liguo
   Gao, Amiao
   Ge, Jidong
   Zhang, Tengfei
   Feng, Haitao
   Satyarth, Ishna
   Li, Ming
   Zhang, He
   Ng, Vincent
TI Machine/Deep Learning for Software Engineering: A Systematic Literature
   Review
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Task analysis; Software; Data models; Complexity theory; Codes;
   Predictive models; Analytical models; Software engineering; machine
   learning; deep learning
ID DEFECT PREDICTION; BUG LOCALIZATION; CLASSIFICATION; REPRESENTATION;
   PERFORMANCE; MODELS; REPRODUCIBILITY; COMPONENTS; AGREEMENT; TUTORIAL
AB Since 2009, the deep learning revolution, which was triggered by the introduction of ImageNet, has stimulated the synergy between Software Engineering (SE) and Machine Learning (ML)/Deep Learning (DL). Meanwhile, critical reviews have emerged that suggest that ML/DL should be used cautiously. To improve the applicability and generalizability of ML/DL-related SE studies, we conducted a 12-year Systematic Literature Review (SLR) on 1,428 ML/DL-related SE papers published between 2009 and 2020. Our trend analysis demonstrated the impacts that ML/DL brought to SE. We examined the complexity of applying ML/DL solutions to SE problems and how such complexity led to issues concerning the reproducibility and replicability of ML/DL studies in SE. Specifically, we investigated how ML and DL differ in data preprocessing, model training, and evaluation when applied to SE tasks, and what details need to be provided to ensure that a study can be reproduced or replicated. By categorizing the rationales behind the selection of ML/DL techniques into five themes, we analyzed how model performance, robustness, interpretability, complexity, and data simplicity affected the choices of ML/DL models.
C1 [Wang, Simin; Huang, Liguo; Gao, Amiao; Satyarth, Ishna] Southern Methodist Univ, Dept Comp Sci, Dallas, TX 75275 USA.
   [Ge, Jidong; Zhang, Tengfei; Feng, Haitao; Li, Ming; Zhang, He] Nanjing Univ, Nanjing 210093, Jiangsu, Peoples R China.
   [Ng, Vincent] Univ Texas Dallas, Human Language Technol Res Inst, Richardson, TX 75083 USA.
C3 Southern Methodist University; Nanjing University; University of Texas
   System; University of Texas Dallas
RP Huang, LG (corresponding author), Southern Methodist Univ, Dept Comp Sci, Dallas, TX 75275 USA.; Ge, JD; Zhang, H (corresponding author), Nanjing Univ, Nanjing 210093, Jiangsu, Peoples R China.; Ng, V (corresponding author), Univ Texas Dallas, Human Language Technol Res Inst, Richardson, TX 75083 USA.
EM siminw@smu.edu; lghuang@lyle.smu.edu; amiaog@smu.edu; gjd@nju.edu.cn;
   terryzhang1009@foxmail.com; fenghaitaofht@gmail.com; isatyarth@smu.edu;
   lim@lamda.nju.edu.cn; hezhang@nju.edu.cn; vince@hlt.utdallas.edu
OI Huang, LiGuo/0000-0001-7790-0195
FU NSF [2034508]; NSF of Jiangsu Province [BK20201250]; Oversea Open
   Research Funding State Key Laboratory for Novel Software Technology,
   Nanjing University
FX This work was supported in part by NSF under Grant 2034508, in part by
   NSF of Jiangsu Province under Grant BK20201250, and in part by The
   Oversea Open Research Funding State Key Laboratory for Novel Software
   Technology, Nanjing University.
CR Agrawal A, 2021, IEEE T SOFTWARE ENG, V47, P2182, DOI 10.1109/TSE.2019.2945020
   Ahmad T, 2020, IEEE ACCESS, V8, P195000, DOI 10.1109/ACCESS.2020.3033888
   Ahmad W., 2020, P 58 ANN M ASS COMPU, P4998, DOI 10.18653/v1/2020.acl-main.449
   Ahmad WU, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P2655
   Akbarinasaji S, 2018, J SYST SOFTWARE, V136, P173, DOI 10.1016/j.jss.2017.02.021
   Alahmadi M, 2020, EMPIR SOFTW ENG, V25, P1536, DOI 10.1007/s10664-019-09759-w
   Allamanis M, 2016, PR MACH LEARN RES, V48
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   Lam AN, 2017, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2017.24
   Andreou AS, 2016, J SYST SOFTWARE, V122, P72, DOI 10.1016/j.jss.2016.09.001
   Phan AV, 2017, PROC INT C TOOLS ART, P45, DOI 10.1109/ICTAI.2017.00019
   Anish PR, 2016, PROC INT CONF SOFTW, P843, DOI 10.1145/2884781.2884801
   [Anonymous], 2008, Guide to Advanced Empirical Software Engineering
   [Anonymous], 2022, Beautiful soup
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Ao Shuang, 2021, P ADV NEUR INF PROC, V34, P10444
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Bai YD, 2020, PROC INT CONF SOFTW, P1560, DOI 10.1145/3377811.3380354
   Bao LF, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3392093
   Bao LF, 2019, IEEE T SOFTWARE ENG, V45, P823, DOI 10.1109/TSE.2018.2802916
   Bao LF, 2018, EMPIR SOFTW ENG, V23, P1313, DOI 10.1007/s10664-017-9547-8
   Bao LF, 2017, IEEE WORK CONF MIN S, P170, DOI 10.1109/MSR.2017.58
   Barriga A., 2020, ACM IEEE INT C MOD D, P24
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Bengio Y, 2013, IEEE T PATTERN ANAL, V35, P1798, DOI 10.1109/TPAMI.2013.50
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Bernal-Cárdenas C, 2020, PROC INT CONF SOFTW, P309, DOI 10.1145/3377811.3380328
   Bertolino A, 2020, PROC INT CONF SOFTW, P1, DOI 10.1145/3377811.3380369
   Bhat M, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P85, DOI 10.1109/ICSA.2018.00018
   Bhatia S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P60, DOI 10.1145/3180155.3180219
   Bielik P, 2016, PR MACH LEARN RES, V48
   Bishop Christopher M., 2006, Pattern Recognition and Machine Learning, V4
   Blincoe K, 2015, IEEE T SOFTWARE ENG, V41, P969, DOI 10.1109/TSE.2015.2431680
   BLUMER A, 1987, INFORM PROCESS LETT, V24, P377, DOI 10.1016/0020-0190(87)90114-1
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Bowes D, 2018, SOFTWARE QUAL J, V26, P525, DOI 10.1007/s11219-016-9353-3
   Broman K., 2017, RECOMMENDATIONS FUND
   Brownlee Jason, 2021, DIFFERENCE CLASSIFIC
   Bruna J., 2014, P INT C LEARN REPR
   Buratti L, 2020, Arxiv, DOI arXiv:2006.12641
   Cai RC, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P291
   Cambronero J, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P964, DOI 10.1145/3338906.3340458
   Carino S, 2015, IEEE INT CONF AUTOM, P138, DOI 10.1109/ASE.2015.70
   Carrozza G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P262, DOI 10.1109/ICST.2013.21
   Chan WK, 2009, J SYST SOFTWARE, V82, P422, DOI 10.1016/j.jss.2008.07.019
   Chaparro O, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P86, DOI 10.1145/3338906.3338947
   Charte D, 2018, INFORM FUSION, V44, P78, DOI 10.1016/j.inffus.2017.12.007
   Chen CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P665, DOI 10.1145/3180155.3180222
   Chen D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P456, DOI 10.1145/3236024.3236050
   Chen JS, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1202, DOI 10.1145/3368089.3409691
   Chen JF, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110616
   Chen JY, 2020, PROC INT CONF SOFTW, P578, DOI 10.1145/3377811.3380389
   Chen JJ, 2020, IEEE INT CONF AUTOM, P78, DOI 10.1145/3324884.3416570
   Chen X, 2020, EMPIR SOFTW ENG, V25, P1382, DOI 10.1007/s10664-019-09793-8
   Chen YQ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P962, DOI 10.1109/ASE.2019.00093
   Chen ZP, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P841, DOI 10.1145/3338906.3338977
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Chen ZQ, 2019, ASIA PAC SOFWR ENG, P78, DOI 10.1109/APSEC48747.2019.00020
   Cho KYHY, 2014, Arxiv, DOI [arXiv:1406.1078, DOI 10.3115/V1/D14-1179, 10.48550/ARXIV.1406.1078, DOI 10.48550/ARXIV.1406.1078]
   Clark K, 2020, Arxiv, DOI arXiv:2003.10555
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   COHN D, 1994, MACH LEARN, V15, P201, DOI 10.1023/A:1022673506211
   Dalpiaz F, 2019, INT REQUIR ENG CONF, P142, DOI 10.1109/RE.2019.00025
   Dang YN, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P53, DOI 10.1109/ICSE-SEIP.2017.6
   Dargan JL, 2016, REQUIR ENG, V21, P553, DOI 10.1007/s00766-015-0232-4
   de Sousa NT, 2021, Arxiv, DOI arXiv:2110.10404
   Deshmukh J, 2017, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSME.2017.69
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Di Stefano JS, 2002, PROC INT C TOOLS ART, P246, DOI 10.1109/TAI.2002.1180811
   Dietterich TG, 2000, LECT NOTES COMPUT SC, V1857, P1, DOI 10.1007/3-540-45014-9_1
   Dinella E, 2020, ICLR
   Domingos P, 1999, DATA MIN KNOWL DISC, V3, P409, DOI 10.1023/A:1009868929893
   Dong GL, 2020, IEEE INT CONF AUTOM, P499, DOI 10.1145/3324884.3416592
   Drain Dawn, 2021, MAPS 2021: Proceedings of the 5th SIGPLAN International Symposium on Machine Programming, P1, DOI 10.1145/3460945.3464951
   Duong Long, 2017, P 21 C COMP NAT LANG, P379
   Emam SS, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2789209
   Ethayarajh K, 2019, Arxiv, DOI [arXiv:1909.00512, DOI 10.18653/V1/D19]
   Fakhoury S, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P602, DOI 10.1109/SANER.2018.8330265
   Fan Y, 2017, PROC IEEE INT CONF S, P80, DOI 10.1109/ICSME.2017.57
   Fan YR, 2020, IEEE T SOFTWARE ENG, V46, P495, DOI 10.1109/TSE.2018.2864217
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fritz T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P402, DOI 10.1145/2568225.2568266
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Fu XQ, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3379345
   Fucci D, 2019, INT C PROGRAM COMPRE, P311, DOI 10.1109/ICPC.2019.00050
   Gao CY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P163, DOI 10.1109/ASE.2019.00025
   García S, 2016, KNOWL-BASED SYST, V98, P1, DOI 10.1016/j.knosys.2015.12.006
   Gerasimou S, 2020, PROC INT CONF SOFTW, P702, DOI 10.1145/3377811.3380391
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Girardi D, 2020, PROC INT CONF SOFTW, P666, DOI 10.1145/3377811.3380374
   Girardi D, 2020, INT REQUIR ENG CONF, P32, DOI 10.1109/RE48521.2020.00016
   Glorot X., 2010, INT C ARTIFICIAL INT, P249
   Godefroid P, 2017, IEEE INT CONF AUTOM, P50, DOI 10.1109/ASE.2017.8115618
   Golagha M, 2020, IEEE INT CONF SOFTW, P4, DOI 10.1109/ICST46399.2020.00012
   Gonzalez D, 2020, IEEE WORK CONF MIN S, P431, DOI 10.1145/3379597.3387473
   González-Barahona JM, 2012, EMPIR SOFTW ENG, V17, P75, DOI 10.1007/s10664-011-9181-9
   Gray D, 2012, IET SOFTW, V6, P549, DOI 10.1049/iet-sen.2011.0132
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Gu Y, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P2225
   Guo D., 2021, ICLR
   Guo J, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2017.9
   Ha H, 2019, PROC INT CONF SOFTW, P1095, DOI 10.1109/ICSE.2019.00113
   Habayeb M, 2018, IEEE T SOFTWARE ENG, V44, P1224, DOI 10.1109/TSE.2017.2757480
   Hadj-Kacem M, 2019, IEEE IJCNN
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Han S, 2009, IEEE INT CONF AUTOM, P332, DOI 10.1109/ASE.2009.64
   Han ZB, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P456, DOI 10.1109/SANER.2018.8330232
   Han ZB, 2017, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSME.2017.52
   Hand DJ, 2001, MACH LEARN, V45, P171, DOI 10.1023/A:1010920819831
   Harer J., 2018, P ADV NEURAL INF PRO, P7944
   Hassan A. E., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P503, DOI 10.1145/1810295.1810451
   Hassan A.E, 2010, Proceedings of the FSE/SDP workshop on Future of Software Engineering Research, P161
   He JJ, 2020, INT C PROGRAM COMPRE, P117, DOI 10.1145/3387904.3389263
   Hellendoorn VJ, 2019, PROC INT CONF SOFTW, P960, DOI 10.1109/ICSE.2019.00101
   Heo K, 2017, PROC INT CONF SOFTW, P519, DOI 10.1109/ICSE.2017.54
   Herbold S, 2017, EMPIR SOFTW ENG, V22, P1866, DOI 10.1007/s10664-016-9468-y
   Hey T, 2020, INT REQUIR ENG CONF, P169, DOI 10.1109/RE48521.2020.00028
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hönel S, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110673
   Hossin M., 2015, INT J DATA MIN KNOWL, V5, P1, DOI DOI 10.5121/IJDKP.2015.5201
   Huang X, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1207, DOI 10.1145/3180155.3180235
   IEEE Standard Glossary of Software Engineering Terminology, 1990, 610121990 IEEE, P1
   Islam MJ, 2020, PROC INT CONF SOFTW, P1135, DOI 10.1145/3377811.3380378
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Jamshidi P, 2017, IEEE INT CONF AUTOM, P497, DOI 10.1109/ASE.2017.8115661
   Jia Y, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P540, DOI 10.1109/ICSE.2015.71
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   Jiang X., 2021, P 37 C UNCERTAINTY A, V161, P54
   Jiarpakdee J, 2022, IEEE T SOFTWARE ENG, V48, P166, DOI 10.1109/TSE.2020.2982385
   Jiarpakdee J, 2020, EMPIR SOFTW ENG, V25, P3590, DOI 10.1007/s10664-020-09848-1
   Jing XY, 2016, PROC INT CONF SOFTW, P607, DOI 10.1145/2884781.2884827
   Kahles J, 2019, IEEE INT CONF SOFTW, P379, DOI 10.1109/ICST.2019.00047
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kanade A, 2020, PR MACH LEARN RES, V119
   Kang HJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1, DOI 10.1109/ASE.2019.00011
   Kapur R, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3384517
   Kästner C, 2020, 2020 ACM/IEEE 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-SEET 2020), P45, DOI 10.1145/3377814.3381714
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P1597, DOI 10.1109/TSE.2013.24
   Kim Y, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3345628
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V3, P1
   Koc U, 2019, IEEE INT CONF SOFTW, P288, DOI 10.1109/ICST.2019.00036
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Krishna R, 2016, IEEE INT CONF AUTOM, P122, DOI 10.1145/2970276.2970339
   Kurtanovic Z, 2017, INT REQUIR ENG CONF, P61, DOI 10.1109/RE.2017.86
   Lacomis Jeremy, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P628, DOI 10.1109/ASE.2019.00064
   Lai SW, 2015, AAAI CONF ARTIF INTE, P2267
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Laradji IH, 2015, INFORM SOFTWARE TECH, V58, P388, DOI 10.1016/j.infsof.2014.07.005
   Larrucea X, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.1989
   Le T., 2019, P INT C LEARN REPR
   LeClair A, 2020, INT C PROGRAM COMPRE, P184, DOI 10.1145/3387904.3389268
   LeClair A, 2018, PROC IEEE INT CONF S, P461, DOI 10.1109/ICSME.2018.00056
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Lewis M, 2019, Arxiv, DOI [arXiv:1910.13461, DOI 10.48550/ARXIV.1910.13461]
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Li M, 2012, AUTOMAT SOFTW ENG, V19, P201, DOI 10.1007/s10515-011-0092-1
   Li MY, 2020, IEEE INT CONF AUTOM, P336, DOI 10.1145/3324884.3416627
   Li Y, 2020, PROC INT CONF SOFTW, P602, DOI 10.1145/3377811.3380345
   Li Y, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360588
   Li ZD, 2019, IEEE ACCESS, V7, P145348, DOI 10.1109/ACCESS.2019.2945478
   Liang HL, 2019, IEEE ACCESS, V7, P116309, DOI 10.1109/ACCESS.2019.2936948
   Liang YD, 2018, AAAI CONF ARTIF INTE, P5229
   Lin B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P94, DOI 10.1145/3180155.3180195
   Lin Y, 2018, IEEE INT CONF AUTOM, P509, DOI 10.1145/3238147.3238163
   Ling W, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P599
   Liu BC, 2018, IEEE INT CONF AUTOM, P667, DOI 10.1145/3238147.3238199
   Liu F, 2020, IEEE INT CONF AUTOM, P473, DOI 10.1145/3324884.3416591
   Liu HR, 2020, INT C PROGRAM COMPRE, P94, DOI 10.1145/3387904.3389272
   Liu HT, 2016, INT CONF SEMANT, P1, DOI [10.1109/SKG.2016.11, 10.1109/SKG.2016.009]
   Liu P, 2017, PROC INT CONF SOFTW, P643, DOI 10.1109/ICSE.2017.65
   Liu X, 2019, AAAI CONF ARTIF INTE, P1044
   Liu XY, 2018, PROC IEEE INT CONF S, P393, DOI 10.1109/ICSME.2018.00047
   Liu YH, 2019, Arxiv, DOI arXiv:1907.11692
   Liu YZ, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.2112
   Liu Z, 2020, IEEE INT CONF AUTOM, P398, DOI 10.1145/3324884.3416547
   Liu ZX, 2019, AUTOMAT SOFTW ENG, V26, P241, DOI 10.1007/s10515-019-00254-6
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   López-Martín C, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110592
   Lu X, 2018, Arxiv, DOI arXiv:1812.04863
   Lutellier Thibaud, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P101, DOI 10.1145/3395363.3397369
   Ma DY, 2020, ASIA PAC SOFWR ENG, P188, DOI 10.1109/APSEC51365.2020.00027
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Ma P, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110769
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Mahmood Z, 2018, INFORM SOFTWARE TECH, V99, P148, DOI 10.1016/j.infsof.2018.02.003
   Majumder S, 2018, IEEE WORK CONF MIN S, P554, DOI 10.1145/3196398.3196424
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   Malhotra R, 2017, EMPIR SOFTW ENG, V22, P2806, DOI 10.1007/s10664-016-9488-7
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Mao DY, 2019, IEEE INT CONF SOFTW, P160, DOI 10.1109/ICST.2019.00025
   Martínez-Fernandez S, 2021, Arxiv, DOI arXiv:2105.01984
   Mashhadi MJ, 2020, IEEE INT CONF AUTOM, P299, DOI 10.1145/3324884.3416559
   Mastropaolo A, 2021, PROC INT CONF SOFTW, P336, DOI 10.1109/ICSE43902.2021.00041
   McBurney PW, 2018, IEEE T SOFTWARE ENG, V44, P897, DOI 10.1109/TSE.2017.2716950
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Medeiros N, 2017, PROC INT SYMP SOFTW, P216, DOI 10.1109/ISSRE.2017.11
   Mensah S, 2018, INFORM SOFTWARE TECH, V94, P1, DOI 10.1016/j.infsof.2017.09.010
   Mensah S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P340, DOI 10.1109/QRS.2017.44
   Karampatsis RM, 2020, Arxiv, DOI arXiv:2004.13214
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   Minku L, 2015, INT SYMP EMP SOFTWAR, P172, DOI 10.1109/ESEM.2015.7321199
   Mirakhorli M, 2016, IEEE T SOFTWARE ENG, V42, P206, DOI 10.1109/TSE.2015.2479217
   Mitchell T. M., ANNU REV COMPUT SCI, P870
   Mittas N, 2015, J SYST SOFTWARE, V99, P120, DOI 10.1016/j.jss.2014.09.025
   Moran K, 2020, IEEE T SOFTWARE ENG, V46, P196, DOI 10.1109/TSE.2018.2844788
   Mori T, 2019, EMPIR SOFTW ENG, V24, P779, DOI 10.1007/s10664-018-9638-1
   Mu DL, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P924, DOI 10.1109/ASE.2019.00090
   Müller SC, 2016, PROC INT CONF SOFTW, P452, DOI 10.1145/2884781.2884803
   Muyang Liu, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P286, DOI 10.1145/3395363.3397375
   Nagashima Y, 2018, IEEE INT CONF AUTOM, P362, DOI 10.1145/3238147.3238210
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Natella R, 2013, IEEE T SOFTWARE ENG, V39, P80, DOI 10.1109/TSE.2011.124
   Neysiani BS, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106344
   Ni C, 2022, IEEE T SOFTWARE ENG, V48, P786, DOI 10.1109/TSE.2020.3001739
   Niu CA, 2022, Arxiv, DOI arXiv:2201.01549
   Niu HR, 2017, EMPIR SOFTW ENG, V22, P259, DOI 10.1007/s10664-015-9421-5
   Niyaz Q., 2016, A Deep Learning based DDoS Detection System in Software-Defined Networking (SDN)
   Oliveira ALI, 2010, INFORM SOFTWARE TECH, V52, P1155, DOI 10.1016/j.infsof.2010.05.009
   Osman H, 2013, PROC IEEE INT CONF S, P140, DOI 10.1109/ICSM.2013.25
   Ott J, 2018, IEEE WORK CONF MIN S, P376, DOI 10.1145/3196398.3196402
   Owhadi-Kareshk M, 2019, INT SYMP EMP SOFTWAR, P363
   Parloff R., 2016, Why deep learning is suddenly changing your life
   Parra E, 2015, INFORM SOFTWARE TECH, V67, P180, DOI 10.1016/j.infsof.2015.07.006
   Pascarella L, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P592, DOI 10.1109/SANER.2018.8330264
   Pecorelli F, 2019, INT C PROGRAM COMPRE, P93, DOI 10.1109/ICPC.2019.00023
   Peng Dinglan, 2021, P MACHINE LEARNING R, V139, P8476
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Perini A, 2009, INFORM SOFTWARE TECH, V51, P1021, DOI 10.1016/j.infsof.2008.12.001
   Phan L., 2021, arXiv
   Phannachitta P, 2020, INFORM SOFTWARE TECH, V125, DOI 10.1016/j.infsof.2020.106330
   Pizzolotto D, 2020, PROC IEEE INT CONF S, P232, DOI 10.1109/ICSME46990.2020.00031
   Podgurski A, 2020, PROC IEEE INT CONF S, P382, DOI 10.1109/ICSME46990.2020.00044
   Porter M., 2022, PORTER STEMMING ALGO
   Qi Weizhen, 2021, arXiv, DOI 10.48550/ARXIV.2104.08006
   Qian ZZ, 2016, P INT COMP SOFTW APP, P93, DOI 10.1109/COMPSAC.2016.183
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Raffel C, 2020, J MACH LEARN RES, V21
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Rao N. S., 2018, PROC IEEE ANN INT SY, P1
   Reddy S, 2020, PROC INT CONF SOFTW, P1410, DOI 10.1145/3377811.3380399
   Ren SQ, 2017, IEEE T PATTERN ANAL, V39, P1137, DOI 10.1109/TPAMI.2016.2577031
   Ren XX, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3324916
   Result A., 2017, ARTIFACT REV BADGING
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Rodrigues IM, 2020, IEEE WORK CONF MIN S, P43, DOI 10.1145/3379597.3387470
   Romansky S, 2017, PROC IEEE INT CONF S, P273, DOI 10.1109/ICSME.2017.79
   Roziere B., 2021, arXiv
   Sabor KK, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2019.106205
   Sainani A, 2020, INT REQUIR ENG CONF, P147, DOI 10.1109/RE48521.2020.00026
   Saini V, 2019, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.2019.00023
   Saini V, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P354, DOI 10.1145/3236024.3236026
   Saldana J., 2011, FUNDAMENTALS QUALITA
   Samuel A. L., 1988, SOME STUDIES MACHINE
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Scrapy, 2022, US
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shi L, 2020, PROC INT CONF SOFTW, P641, DOI 10.1145/3377811.3380356
   Shi L, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1444, DOI 10.1145/3368089.3417053
   Shi ST, 2019, AAAI CONF ARTIF INTE, P4910
   Shimagaki J, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268927
   Shu Y., 2020, ESEM 20 ACM IEEE INT, P1, DOI 10.1145/3382494.3410677
   Song LY, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P468, DOI 10.1145/3236024.3236052
   Song LY, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3295700
   Song QB, 2016, J SYST SOFTWARE, V118, P85, DOI 10.1016/j.jss.2016.05.002
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Stanik C, 2018, PROC IEEE INT CONF S, P172, DOI 10.1109/ICSME.2018.00027
   Stapleton S, 2020, INT C PROGRAM COMPRE, P2, DOI 10.1145/3387904.3389258
   Sultana KZ, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2303
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Sun ZY, 2019, AAAI CONF ARTIF INTE, P7055
   Sutskever I, 2014, ADV NEUR IN, V27
   Svyatkovskiy A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1433, DOI 10.1145/3368089.3417058
   Tabassum S, 2020, PROC INT CONF SOFTW, P554, DOI 10.1145/3377811.3380403
   Tai KS, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P1556
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tang GG, 2020, 2020 INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE 2020), P1, DOI 10.1109/TASE49443.2020.00010
   Tantithamthavorn C., 2021, MONASH U
   Tantithamthavorn C, 2021, IEEE SOFTWARE, V38, P115, DOI 10.1109/MS.2021.3072088
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Nguyen T, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P551, DOI 10.1145/3236024.3236036
   Theisen C, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106204
   Thung F, 2015, INT C PROGRAM COMPRE, P60, DOI 10.1109/ICPC.2015.15
   Tian HY, 2020, IEEE INT CONF AUTOM, P981, DOI 10.1145/3324884.3416532
   Tian YJ, 2022, INFORM FUSION, V80, P146, DOI 10.1016/j.inffus.2021.11.005
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Chekam TT, 2020, EMPIR SOFTW ENG, V25, P434, DOI 10.1007/s10664-019-09778-7
   Tufano M, 2019, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSME.2019.00046
   Tufano M, 2018, IEEE WORK CONF MIN S, P542, DOI 10.1145/3196398.3196431
   Uddin G, 2017, IEEE INT CONF AUTOM, P159, DOI 10.1109/ASE.2017.8115629
   Udeshi S, 2018, IEEE INT CONF AUTOM, P98, DOI 10.1145/3238147.3238165
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   Vendome C, 2017, PROC INT CONF SOFTW, P118, DOI 10.1109/ICSE.2017.19
   Wahba Y., 2020, EVALUATING EFFECTIVE, P198
   Wan Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P13, DOI 10.1109/ASE.2019.00012
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wang BL, 2020, IEEE ACCESS, V8, P142446, DOI 10.1109/ACCESS.2020.3013645
   Wang HB, 2017, IEEE T SOFTWARE ENG, V43, P556, DOI 10.1109/TSE.2016.2615615
   Wang JJ, 2019, INFORM SOFTWARE TECH, V110, P139, DOI 10.1016/j.infsof.2019.03.003
   Wang SW, 2020, IEEE INT CONF AUTOM, P968, DOI 10.1145/3324884.3416590
   Wang Simin, 2022, Zenodo, DOI 10.5281/ZENODO.5977109
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/SANER48275.2020.9054857, 10.1109/saner48275.2020.9054857]
   Wang XY, 2014, IEEE T SOFTWARE ENG, V40, P773, DOI 10.1109/TSE.2014.2323972
   Wang X, 2021, Arxiv, DOI arXiv:2108.04556
   Wang X, 2020, IEEE INT CONF AUTOM, P871, DOI 10.1145/3324884.3416583
   Wang YW, 2020, INT REQUIR ENG CONF, P180, DOI 10.1109/RE48521.2020.00029
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Wei BL, 2020, IEEE INT CONF AUTOM, P349, DOI 10.1145/3324884.3416578
   Weisong Sun, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P419, DOI 10.1145/3383219.3383279
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   Wen M, 2020, IEEE T SOFTWARE ENG, V46, P1155, DOI 10.1109/TSE.2018.2876256
   White M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P479, DOI [10.1109/saner.2019.8668043, 10.1109/SANER.2019.8668043]
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   White TD, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P307, DOI 10.1145/3293882.3330551
   Wikipedia contributors, 2021, FEAT SCAL WIK FREE E
   Witten I., 2002, ACM Sigmod Rec., V31, P76, DOI [10.1145/507338.507355, DOI 10.1145/507338.507355]
   WOLD S, 1987, CHEMOMETR INTELL LAB, V2, P37, DOI 10.1016/0169-7439(87)80084-9
   Wu LW, 2020, INT C PROGRAM COMPRE, P139, DOI 10.1145/3387904.3389252
   Wu YM, 2020, IEEE INT CONF AUTOM, P821, DOI 10.1145/3324884.3416562
   Wu ZK, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P488, DOI 10.1145/3338906.3338958
   Xia H, 2020, PROC INT CONF SOFTW, P886, DOI 10.1145/3377811.3380357
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xiao Y, 2019, INFORM SOFTWARE TECH, V105, P17, DOI 10.1016/j.infsof.2018.08.002
   Xiao Y, 2017, ASIA PAC SOFWR ENG, P338, DOI 10.1109/APSEC.2017.40
   Xiao Yan, 2018, P 22 INT C EV ASS SO, P101
   Xie T, 2009, COMPUTER, V42, P55, DOI 10.1109/MC.2009.256
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Xu BW, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI [10.1145/3239235.3240503, 10.1109/PESGM.2018.8586232]
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Xu JX, 2021, IEEE T RELIAB, V70, P613, DOI 10.1109/TR.2020.3040191
   Xu ZW, 2019, IEEE T RELIAB, V68, P893, DOI 10.1109/TR.2018.2884143
   Xu Z, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110402
   Xue KX, 2009, INT CONF QUAL SOFTW, P315, DOI 10.1109/QSIC.2009.48
   Yan M, 2017, INT SYMP EMP SOFTWAR, P344, DOI 10.1109/ESEM.2017.48
   Yan M, 2017, INFORM SOFTWARE TECH, V92, P1, DOI 10.1016/j.infsof.2017.07.003
   Yan RB, 2018, J SYST SOFTWARE, V137, P67, DOI 10.1016/j.jss.2017.11.001
   Yang Feng, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P177, DOI 10.1145/3395363.3397357
   Yang LX, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106397
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Ye DH, 2016, PROC IEEE INT CONF S, P389, DOI 10.1109/ICSME.2016.11
   Ye X, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P1438, DOI 10.1109/ICMLA.2018.00234
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Ye X, 2016, IEEE T SOFTWARE ENG, V42, P379, DOI 10.1109/TSE.2015.2479232
   Yefet N, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428230
   Yin PC, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P440, DOI 10.18653/v1/P17-1041
   Yu H, 2019, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2019.00021
   Yu X, 2017, PROC INT SYMP SOFTW, P78, DOI 10.1109/ISSRE.2017.18
   Zaidi SFA, 2020, IEEE ACCESS, V8, P213729, DOI 10.1109/ACCESS.2020.3040065
   Zampetti F, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P355, DOI [10.1109/SANER48275.2020.9054868, 10.1109/saner48275.2020.9054868]
   Zhang D, 2003, SOFTWARE QUAL J, V11, P87, DOI 10.1023/A:1023760326768
   Zhang F, 2017, IEEE T SOFTWARE ENG, V43, P476, DOI 10.1109/TSE.2016.2599161
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zhang J, 2020, IEEE INT CONF AUTOM, P29, DOI 10.1145/3324884.3416568
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhang J, 2019, IEEE T SOFTWARE ENG, V45, P898, DOI 10.1109/TSE.2018.2809496
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang JF, 2021, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, ACL-IJCNLP 2021, P4454
   Zhang JL, 2020, INT C PROGRAM COMPRE, P219, DOI 10.1145/3387904.3389281
   Zhang R, 2020, PROC INT CONF SOFTW, P1159, DOI 10.1145/3377811.3380362
   Zhang TH, 2020, ASIA PAC SOFWR ENG, P81, DOI 10.1109/APSEC51365.2020.00016
   Zhang W, 2020, PROC IEEE INT CONF S, P727, DOI 10.1109/ICSME46990.2020.00082
   Zhang W, 2019, INFORM SOFTWARE TECH, V110, P121, DOI 10.1016/j.infsof.2019.03.001
   Zhang W, 2015, INFORM SOFTWARE TECH, V58, P58, DOI 10.1016/j.infsof.2014.10.005
   Zhang X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P807, DOI 10.1145/3338906.3338931
   Zhang ZY, 2020, EMPIR SOFTW ENG, V25, P859, DOI 10.1007/s10664-019-09755-0
   Zhang ZW, 2018, IET SOFTW, V12, P527, DOI 10.1049/iet-sen.2017.0198
   Zhang Z, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2312
   Zhang Z, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P445, DOI [10.1109/saner.2019.8668002, 10.1109/SANER.2019.8668002]
   Zhao DH, 2020, PROC INT CONF SOFTW, P1286, DOI 10.1145/3377811.3380411
   Zhao DH, 2019, PROC INT CONF SOFTW, P350, DOI 10.1109/ICSE.2019.00049
   Zhao GL, 2019, EMPIR SOFTW ENG, V24, P2140, DOI 10.1007/s10664-019-09696-8
   Zhao JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P342, DOI 10.1145/3236024.3236066
   Zheng W, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110659
   Zheng Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P784, DOI 10.1109/ASE.2019.00077
   Zhou TC, 2019, INFORM SOFTWARE TECH, V114, P204, DOI 10.1016/j.infsof.2019.07.003
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
   Zhou YM, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2556777
   Zhou ZY, 2020, SOFTWARE PRACT EXPER, V50, P2313, DOI 10.1002/spe.2893
   Zhu K, 2020, IET SOFTW, V14, P185, DOI 10.1049/iet-sen.2019.0278
   Zou YZ, 2015, IEEE INT CONF AUTOM, P1, DOI 10.1109/ASE.2015.24
   Zou Y, 2020, IEEE INT CONF AUTOM, P931, DOI 10.1145/3324884.3416541
NR 397
TC 10
Z9 11
U1 9
U2 30
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2023
VL 49
IS 3
BP 1188
EP 1231
DI 10.1109/TSE.2022.3173346
PG 44
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA A1QF2
UT WOS:000952938700013
DA 2024-07-18
ER

PT J
AU Garg, A
   Ojdanic, M
   Degiovanni, R
   Chekam, TT
   Papadakis, M
   Le Traon, Y
AF Garg, Aayush
   Ojdanic, Milos
   Degiovanni, Renzo
   Chekam, Thierry Titcheu
   Papadakis, Mike
   Le Traon, Yves
TI Cerebro: Static Subsuming Mutant Selection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Java; Codes; Machine learning; Costs; Supervised learning;
   Reliability; Mutant; mutation; mutation testing; subsuming mutant;
   mutant prediction; static selection; static mutant selection; static
   subsuming mutant selection; static subsuming mutant prediction;
   encoder-decoder; machine translation; tf-seq2seq
ID MUTATION; REDUCTION
AB Mutation testing research has indicated that a major part of its application cost is due to the large number of low utility mutants that it introduces. Although previous research has identified this issue, no previous study has proposed any effective solution to the problem. Thus, it remains unclear how to mutate and test a given piece of code in a best effort way, i.e., achieving a good trade-off between invested effort and test effectiveness. To achieve this, we propose Cerebro, a machine learning approach that statically selects subsuming mutants, i.e., the set of mutants that resides on the top of the subsumption hierarchy, based on the mutants ' surrounding code context. We evaluate Cerebro using 48 and 10 programs written in C and Java, respectively, and demonstrate that it preserves the mutation testing benefits while limiting application cost, i.e., reduces all cost application factors such as equivalent mutants, mutant executions, and the mutants requiring analysis. We demonstrate that Cerebro has strong inter-project prediction ability, which is significantly higher than two baseline methods, i.e., supervised learning on features proposed by state-of-the-art, and random mutant selection. More importantly, our results show that Cerebro 's selected mutants lead to strong tests that are respectively capable of killing 2 times higher than the number of subsuming mutants killed by the baselines when selecting the same number of mutants. At the same time, Cerebro reduces the cost-related factors, as it selects, on average, 68% fewer equivalent mutants, while requiring 90% fewer test executions than the baselines.
C1 [Garg, Aayush; Ojdanic, Milos; Degiovanni, Renzo; Papadakis, Mike; Le Traon, Yves] Univ Luxembourg, Esch Sur Alzette, Luxembourg.
   [Chekam, Thierry Titcheu] SES, Betzdorf, Luxembourg.
C3 University of Luxembourg
RP Garg, A (corresponding author), Univ Luxembourg, Esch Sur Alzette, Luxembourg.
EM aayush.garg@uni.lu; milos.ojdanic@uni.lu; renzo.degiovanni@uni.lu;
   thierry.titcheu.chekam@ses.com; michail.papadakis@uni.lu;
   yves.letraon@uni.lu
RI LE TRAON, Yves/T-2911-2019; Degiovanni, Renzo/KUF-0926-2024
OI Degiovanni, Renzo/0000-0003-1611-3969; Papadakis,
   Mike/0000-0003-1852-2547; Garg, Aayush/0000-0002-2507-8846; LE TRAON,
   Yves/0000-0002-1045-4861
FU Luxembourg National Research Funds (FNR) through the INTER Project
   [INTER/ANR/18/12632675/SATOCROSS]
FX This work was supported by Luxembourg National Research Funds (FNR)
   through the INTER Project under Grant INTER/ANR/18/12632675/SATOCROSS.
CR Abadi M., 2015, TENSORFLOW LARGE SCA, V1
   Ammann P, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P21, DOI 10.1109/ICST.2014.13
   Ammann Paul, 2008, Introduction to software testing, V1st
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Bandanau D, 2016, INT CONF ACOUST SPEE, P4945, DOI 10.1109/ICASSP.2016.7472618
   Britz D., 2017, P 2017 C EMPIRICAL M, P1442, DOI [10.18653/v1/D17-1151, DOI 10.18653/V1/D17-1151]
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Chekam TT, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3425497
   Chekam TT, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1080, DOI 10.1145/3338906.3341180
   Chekam TT, 2017, PROC INT CONF SOFTW, P597, DOI 10.1109/ICSE.2017.61
   Chen LC, 2018, IEEE INT CONF SOFTW, P58, DOI 10.1109/ICST.2018.00016
   Cho K., 2014, PROCS C EMPIRICAL ME, P1724, DOI DOI 10.3115/V1/D14-1179
   Coles H., 2016, P 25 INT S SOFTWARE, P449
   Collard ML, 2016, PROC IEEE INT CONF S, P649, DOI 10.1109/ICSME.2016.36
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Domínguez-Jiménez JJ, 2011, INFORM SOFTWARE TECH, V53, P1108, DOI 10.1016/j.infsof.2011.03.008
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Gong DW, 2017, INFORM SOFTWARE TECH, V81, P82, DOI 10.1016/j.infsof.2016.05.001
   Hariri F, 2019, IEEE INT CONF SOFTW, P114, DOI 10.1109/ICST.2019.00021
   Hestness J, 2017, Arxiv, DOI arXiv:1712.00409
   Jia YQ, 2014, PROCEEDINGS OF THE 2014 ACM CONFERENCE ON MULTIMEDIA (MM'14), P675, DOI 10.1145/2647868.2654889
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Jia Yue, 2016, P 25 INT S SOFTWARE, P354
   Jozefowicz R, 2016, Arxiv, DOI arXiv:1602.02410
   Just R, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P284, DOI 10.1145/3092703.3092732
   Kintis M, 2018, IEEE T SOFTWARE ENG, V44, P308, DOI 10.1109/TSE.2017.2684805
   Kintis M, 2015, SOFTW TEST VERIF REL, V25, P508, DOI 10.1002/stvr.1529
   Kintis M, 2010, ASIA PAC SOFWR ENG, P300, DOI 10.1109/APSEC.2010.42
   Kurtz B, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P571, DOI 10.1145/2950290.2950322
   Kurtz B, 2014, IEEE ICST WORKSHOP, P176, DOI 10.1109/ICSTW.2014.20
   Mahajan D, 2018, LECT NOTES COMPUT SC, V11206, P185, DOI 10.1007/978-3-030-01216-8_12
   Marcozzi M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P456, DOI 10.1145/3180155.3180191
   Mastropaolo A, 2021, PROC INT CONF SOFTW, P336, DOI 10.1109/ICSE43902.2021.00041
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   Mirshokraie S, 2015, IEEE T SOFTWARE ENG, V41, P429, DOI 10.1109/TSE.2014.2371458
   Morrison P., 2015, P 2015 S BOOTCAMP SC
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Oquab M, 2014, PROC CVPR IEEE, P1717, DOI 10.1109/CVPR.2014.222
   Papadakis Mike, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P121, DOI 10.1109/ISSRE.2010.38
   Papadakis Mike, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P90, DOI 10.1109/ICSTW.2010.50
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Papadakis M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P537, DOI 10.1145/3180155.3180183
   Papadakis M, 2018, IEEE ICST WORKSHOP, P32, DOI 10.1109/ICSTW.2018.00025
   Petrovic G, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P163, DOI 10.1145/3183519.3183521
   Raffel C, 2023, Arxiv, DOI [arXiv:1910.10683, 10.48550/arXiv.1910.10683]
   Russakovsky O, 2015, INT J COMPUT VISION, V115, P211, DOI 10.1007/s11263-015-0816-y
   Shazeer N., 2017, Outrageously large neural networks: The sparsely-gated mixture-of-experts layer
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shewalkar A, 2019, J ARTIF INTELL SOFT, V9, P235, DOI 10.2478/jaiscr-2019-0006
   Sun CA, 2017, INFORM SOFTWARE TECH, V81, P65, DOI 10.1016/j.infsof.2016.02.006
   Sutskever I, 2014, ADV NEUR IN, V27
   Tang GB, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P4263
   Chekam TT, 2020, EMPIR SOFTW ENG, V25, P434, DOI 10.1007/s10664-019-09778-7
   Tufano M, 2019, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSME.2019.00046
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang B, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P295, DOI 10.1145/3092703.3092714
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Zhang J, 2019, IEEE T SOFTWARE ENG, V45, P898, DOI 10.1109/TSE.2018.2809496
   Zhang L., 2013, P 2013 INT S SOFTW T, P235
   Zhang LM, 2013, IEEE INT CONF AUTOM, P92, DOI 10.1109/ASE.2013.6693070
   Zhuang Liu, 2021, Chinese Computational Linguistics: 20th China National Conference, CCL 2021, Proceedings. Lecture Notes in Computer Science, Lecture Notes in Artificial Intelligence (12869), P471, DOI 10.1007/978-3-030-84186-7_31
NR 66
TC 9
Z9 9
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 24
EP 43
DI 10.1109/TSE.2022.3140510
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA L1HD8
UT WOS:001020827200002
OA hybrid
DA 2024-07-18
ER

PT J
AU Li, H
   Cogo, FR
   Bezemer, CP
AF Li, Hao
   Cogo, Filipe R. R.
   Bezemer, Cor-Paul
TI An Empirical Study of Yanked Releases in the Rust Package Registry
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Ecosystems; Software; Packaging; Indexes; Libraries; Safety; Computer
   bugs; Software ecosystems; release deprecation; yanking; rust; cargo
AB Cargo, the software packaging manager of Rust, provides a yank mechanism to support release-level deprecation, which can prevent packages from depending on yanked releases. Most prior studies focused on code-level (i.e., deprecated APIs) and package-level deprecation (i.e., deprecated packages). However, few studies have focused on release-level deprecation. In this study, we investigate how often and how the yank mechanism is used, the rationales behind its usage, and the adoption of yanked releases in the Cargo ecosystem. Our study shows that 9.6% of the packages in Cargo have at least one yanked release, and the proportion of yanked releases kept increasing from 2014 to 2020. Package owners yank releases for other reasons than withdrawing a defective release, such as fixing a release that does not follow semantic versioning or indicating a package is removed or replaced. In addition, we found that 46% of the packages directly adopted at least one yanked release and the yanked releases propagated through the dependency network, which leads to 1.4% of the releases in the ecosystem having unresolved dependencies.
C1 [Li, Hao; Bezemer, Cor-Paul] Univ Alberta, Analyt Software GAmes & Repository Data ASGAARD La, T6G 2R3 AP, Edmonton, AB, Canada.
   [Cogo, Filipe R. R.] Huawei, Ctr Software Excellence, Kingston, ON K7K 1B7, Canada.
C3 University of Alberta; Huawei Technologies
RP Bezemer, CP (corresponding author), Univ Alberta, Analyt Software GAmes & Repository Data ASGAARD La, T6G 2R3 AP, Edmonton, AB, Canada.
EM li.hao@ualberta.ca; filipe.roseiro.cogo1@huawei.com; bezemer@ualberta.ca
RI Li, Hao/IWE-2049-2023
OI Li, Hao/0000-0003-4468-5972; Bezemer, Cor-Paul/0000-0002-0474-5718
FU ECE-Huawei Research Initiative (HERI) at the University of Alberta;
   ECE-Huawei Research Initiative (HERI) at the University of Alberta;
   ECE-Huawei Research Initiative (HERI) at the University of Alberta
FX This work was supported by ECE-Huawei Research Initiative (HERI) at the
   University of Alberta.
CR Avelino Guilherme, 2019, INT SYMP EMP SOFTWAR, P1, DOI DOI 10.1109/esem.2019.8870181
   Cerpa N, 2009, COMMUN ACM, V52, P130, DOI 10.1145/1610252.1610286
   Chacon S., 2014, Pro Git
   Claes M, 2014, PROC IEEE INT CONF S, P597, DOI 10.1109/ICSME.2014.104
   Claes M, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P308, DOI 10.1109/CSMR-WCRE.2014.6747183
   Coelho J, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240501
   Coelho J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P186, DOI 10.1145/3106237.3106246
   Cogo FR, 2021, IEEE T SOFTWARE ENG, V48, P2208, DOI 10.1109/TSE.2021.3055123
   Cogo FR, 2021, IEEE T SOFTWARE ENG, V47, P2457, DOI 10.1109/TSE.2019.2952130
   Constantinou E, 2018, Arxiv, DOI arXiv:1812.04868
   COX DR, 1955, BIOMETRIKA, V42, P80, DOI 10.1093/biomet/42.1-2.80
   Decan A, 2021, IEEE T SOFTWARE ENG, V47, P1226, DOI 10.1109/TSE.2019.2918315
   Decan A, 2021, SCI COMPUT PROGRAM, V208, DOI 10.1016/j.scico.2021.102656
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Decan A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P493, DOI 10.1109/SANER.2016.12
   Evans AN, 2020, PROC INT CONF SOFTW, P246
   German DM, 2013, EUR CON SFTWR MTNCE, P243, DOI 10.1109/CSMR.2013.33
   Iaffaldano G, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON SOFTWARE HEALTH (SOHEAL 2019), P9, DOI 10.1109/SoHeal.2019.00009
   Imminni SK, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P625, DOI 10.1145/2889160.2889174
   Khondhu J., 2013, P IFIP INT C OP SOUR, P61
   Lin DY, 2018, EMPIR SOFTW ENG, V23, P771, DOI 10.1007/s10664-017-9531-3
   Long J.D., 2003, Ordinal Analysis of Behavioral Data
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Maqsood J., 2017, P 2017 INT C MAN ENG, P145, DOI 10.1145/3034950.3034957
   Matsakis N. D., 2014, P 2014 ACM SIGADA AN, V34, P103, DOI [DOI 10.1145/2663171.2663188, 10.1145/2663171.2663188]
   Robbes R., 2012, P ACM SIGSOFT 20 INT, P1, DOI 10.1145/2393596.2393662
   Romano J., 2006, P ANN M SO ASS I RES
   Sawant AA, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P561, DOI 10.1145/3180155.3180170
   Serebrenik A., 2015, Proceedings of the 2015 European Conference on Software Architecture Workshops, P40
   Strobl Roman, 2013, PROC COMPANION PUB C, P85
   Valiev M, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P644, DOI 10.1145/3236024.3236062
   Wang JW, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P233, DOI 10.1145/3368089.3409735
   Wang Y, 2020, PROC INT CONF SOFTW, P125, DOI 10.1145/3377811.3380426
   Wittern E, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P351, DOI [10.1145/2901739.2901743, 10.1109/MSR.2016.043]
   Xi YG, 2019, 11TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2019), DOI 10.1145/3361242.3361246
   Yasmin J, 2020, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSME46990.2020.00024
   Zerouali A, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P589, DOI [10.1109/saner.2019.8667997, 10.1109/SANER.2019.8667997]
NR 38
TC 0
Z9 0
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 437
EP 449
DI 10.1109/TSE.2022.3152148
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA L1HD8
UT WOS:001020827200023
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alami, A
   Pardo, R
   Cohn, ML
   Wasowski, A
AF Alami, Adam
   Pardo, Raul
   Cohn, Marisa Leavitt
   Wasowski, Andrzej
TI Pull Request Governance in Open Source Communities
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Pull Request; open source; decision making; governance
ID SOFTWARE; MOTIVATION; RECOMMENDATION; PROJECTS
AB Pull requests facilitate inclusion and improvement of contributions in distributed software projects, especially in open source communities. An author makes a pull request to present a contribution as a candidate for inclusion in a code base. The request is inspected by maintainers and reviewers. The initiated process of review and collaborative improvement can be loaded with debates, opinions, and emotions. It heavily influences the atmosphere in the community. It can demotivate and detract contributors or it can fail to guard the code quality. Both problems put the existence of a community at risk. This mixed methods study aims to elucidate the mechanisms of evaluating pull requests in diverse open source software communities from the perspectives of developers and maintainers. We interviewed 30 participants from five different communities and conducted a survey with N=387 respondents. The data shows that acceptance of contributions in open source depends not only on technical criteria, but also significantly on social and strategic aspects. As a result, we identify three governance styles for pull requests: (1) protective, (2) equitable, and (3) lenient. While the protective style values trustworthiness and reliability of the contributor, the lenient style believes in creating a positive and welcoming environment where contributors are mentored to evolve contributions until the community standards are met. Each of the governance styles safeguards the quality of the project code in different ways. We hope that this material will help researchers and community managers to obtain a more nuanced view on the peculiarities of different communities and the strengths and weakness of their pull requests evaluation process.
C1 [Alami, Adam; Pardo, Raul; Cohn, Marisa Leavitt; Wasowski, Andrzej] IT Univ Copenhagen, DK-1165 Copenhagen, Denmark.
C3 IT University Copenhagen
RP Alami, A (corresponding author), IT Univ Copenhagen, DK-1165 Copenhagen, Denmark.
EM adaa@itu.dk; raup@itu.dk; mcoh@itu.dk; wasowski@itu.dk
RI Alami, Adam/KBR-2703-2024
OI Wasowski, Andrzej/0000-0003-0532-2685; Alami, Adam/0000-0003-4483-0105
FU EU's Horizon 2020 Research and Innovation Program [732287 ROSIN]
FX This work was supported by the EU's Horizon 2020 Research and Innovation
   Program, under Grant 732287 ROSIN.
CR Adler P.S., 2002, ACAD MANAGE REV, V27, P17
   Alami Adam, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P220, DOI 10.1145/3383219.3383242
   Alami A, 2019, PROC INT CONF SOFTW, P1073, DOI 10.1109/ICSE.2019.00111
   Albert S., 1985, RES ORGAN BEHAV, V7, P263, DOI DOI 10.1177/1059601112473815
   Alreck P.L., 1995, SURVEY RES HDB, V2nd
   [Anonymous], 2013, P 16 C COMP SUPP COO
   [Anonymous], 2008, Proceedings of the 2008 international working conference on Mining software repositories
   Berger T, 2014, INFORM SOFTWARE TECH, V56, P1520, DOI 10.1016/j.infsof.2014.05.005
   Bevir M., 2012, GOVERNANCE VERY SHOR
   Bitzer J, 2007, J COMP ECON, V35, P160, DOI 10.1016/j.jce.2006.10.001
   COLEMAN D, 1994, COMPUTER, V27, P44, DOI 10.1109/2.303623
   Creswell J. W., 2007, DESIGNING CONDUCTING
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   de Laat PB, 2010, ETHICS INF TECHNOL, V12, P327, DOI 10.1007/s10676-010-9230-x
   Dey T, 2020, P 14 ACM IEEE INT S, P1
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Farnsworth V, 2016, BRIT J EDUC STUD, V64, P139, DOI 10.1080/00071005.2015.1133799
   Ford D, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P51, DOI 10.1109/ICSE-SEIS.2019.00014
   Furia CA, 2021, IEEE T SOFTWARE ENG, V47, P1786, DOI 10.1109/TSE.2019.2935974
   Gavrilets S, 2017, P NATL ACAD SCI USA, V114, P6068, DOI 10.1073/pnas.1703857114
   Gerosa M, 2021, PROC INT CONF SOFTW, P1046, DOI 10.1109/ICSE43902.2021.00098
   Ghauri P., 2020, RES METHODS BUSINESS
   Gibbs G.R., 2007, Analyzing qualitative data, DOI [10.4135/9781849208574, DOI 10.4135/9781849208574.N4, DOI 10.4135/9781849208574]
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Hars A, 2002, INT J ELECTRON COMM, V6, P25
   Heckathorn DD, 1997, SOC PROBL, V44, P174, DOI 10.1525/sp.1997.44.2.03x0221m
   Hertel G, 2003, RES POLICY, V32, P1159, DOI 10.1016/S0048-7333(03)00047-7
   Jiang J, 2017, INFORM SOFTWARE TECH, V84, P48, DOI 10.1016/j.infsof.2016.10.006
   Kruschke J, 2014, DOING BAYESIAN DATA, DOI [DOI 10.1016/B978-0-12-405888-0.09999-2, DOI 10.1016/B978-0-12-405888-0.00001-5]
   Kruschke JK, 2018, PSYCHON B REV, V25, P155, DOI 10.3758/s13423-017-1272-1
   Kruschke JK, 2018, ADV METH PRACT PSYCH, V1, P270, DOI 10.1177/2515245918771304
   Lakhani K. R., 2003, WHY HACKERS DO WHAT, DOI [10.2139/ssrn.443040, DOI 10.2139/SSRN.443040]
   Li ZX, 2022, IEEE T SOFTWARE ENG, V48, P2173, DOI 10.1109/TSE.2021.3053403
   Li ZX, 2022, IEEE T SOFTWARE ENG, V48, P1309, DOI 10.1109/TSE.2020.3018726
   Miles M.B., 2014, Qualitative data analysis: A methods sourcebook, V3rd
   Paluck Elizabeth Levy., 2010, IRC Policy Briefcase
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Qiu HS, 2019, PROC INT CONF SOFTW, P688, DOI 10.1109/ICSE.2019.00078
   Rahman M. M, 2014, P 11 WORK C MIN SOFT, P364, DOI DOI 10.1145/2597073.2597121
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Salvatier J, 2016, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.55
   Saunders B, 2018, QUAL QUANT, V52, P1893, DOI 10.1007/s11135-017-0574-8
   Sim SE, 1998, PROC INT CONF SOFTW, P361, DOI 10.1109/ICSE.1998.671389
   Soares DM, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1541, DOI 10.1145/2695664.2695856
   Soares DM, 2015, 2015 IEEE 14TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P960, DOI 10.1109/ICMLA.2015.41
   Steinmacher I, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P256, DOI 10.1145/3180155.3180208
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Stewart KJ, 2006, MIS QUART, V30, P291
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Tsay J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P144, DOI 10.1145/2635868.2635882
   von Krogh G, 2012, MIS QUART, V36, P649
   Yu Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P367, DOI 10.1109/MSR.2015.42
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Yue Yu, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P335, DOI 10.1109/APSEC.2014.57
   Zhu JX, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P871, DOI 10.1145/2950290.2950364
NR 59
TC 0
Z9 0
U1 8
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 4838
EP 4856
DI 10.1109/TSE.2021.3128356
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Li, R
   Diao, WR
   Li, Z
   Yang, SS
   Li, S
   Guo, SQ
AF Li, Rui
   Diao, Wenrui
   Li, Zhou
   Yang, Shishuai
   Li, Shuang
   Guo, Shanqing
TI Android Custom Permissions Demystified: A Comprehensive Security
   Evaluation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Smart phones; Security; Runtime; Tools; Fuzzing; Philosophical
   considerations; Design methodology; Android security; custom permission;
   automatic analysis
AB Permission is the fundamental security mechanism for protecting user data and privacy on Android. Given its importance, security researchers have studied the design and usage of permissions from various aspects. However, most of the previous research focused on the security issues of system permissions. Overlooked by many researchers, an app can use custom permissions to share its resources and capabilities with other apps. However, the security implications of using custom permissions have not been fully understood. In this paper, we systematically evaluate the design and implementation of Android custom permissions. Notably, we built an automatic fuzzing tool, called CuPerFuzzer+, to detect custom permission related vulnerabilities existing in the Android OS. CuPerFuzzer+ treats the operations of the permission mechanism as a black-box and executes massive targeted test cases to trigger privilege escalation. In the experiments, CuPerFuzzer+ discovered 5,932 effective cases with 47 critical paths successfully. Through investigating these vulnerable cases and analyzing the source code of Android OS, we further identified a series of severe design shortcomings lying in the Android permission framework, including dangling custom permission, inconsistent permission-group mapping, custom permission elevating, inconsistent permission definition, dormant permission group, and inconsistent permission type. Exploiting these shortcomings, a malicious app can access unauthorized platform resources. On top of these observations, we propose three general design guidelines to secure custom permissions. Our findings have been acknowledged by the Android security team and assigned CVE-2020-0418, CVE-2021-0306, CVE-2021-0307, and CVE-2021-0317.
C1 [Li, Rui; Diao, Wenrui; Li, Zhou; Yang, Shishuai; Li, Shuang; Guo, Shanqing] Shandong Univ, Key Lab Cryptol Technol & Informat Secur, Minist Educ, Qingdao 266237, Shandong, Peoples R China.
   [Li, Rui; Diao, Wenrui; Yang, Shishuai; Li, Shuang; Guo, Shanqing] Shandong Univ, Sch Cyber Sci & Technol, Qingdao 266237, Shandong, Peoples R China.
   [Li, Zhou] Univ Calif Irvine, Irvine, CA USA.
C3 Shandong University; Shandong University; University of California
   System; University of California Irvine
RP Diao, WR (corresponding author), Shandong Univ, Key Lab Cryptol Technol & Informat Secur, Minist Educ, Qingdao 266237, Shandong, Peoples R China.; Diao, WR (corresponding author), Shandong Univ, Sch Cyber Sci & Technol, Qingdao 266237, Shandong, Peoples R China.
EM leiry@mail.sdu.edu.cn; diaowenrui@sdu.edu.cn; zhou.li@uci.edu;
   shishuai@mail.sdu.edu.cn; lishuang1024@mail.sdu.edu.cn;
   guoshanqing@sdu.edu.cn
OI Li, Zhou/0000-0002-9401-1012; Diao, Wenrui/0000-0003-0916-8806
FU National Natural Science Foundation of China [61902148, 91546203]; Major
   Scientific and Technological Innovation Projects of Shandong Province,
   China [2018CXGC0708, 2019JZZY010132]; Qilu Young Scholar Program of
   Shandong University
FX This work was partially supported by the National Natural Science
   Foundation of China under Grants 61902148 and 91546203, Major Scientific
   and Technological Innovation Projects of Shandong Province, China under
   Grants 2018CXGC0708 and 2019JZZY010132, and the Qilu Young Scholar
   Program of Shandong University.
CR android, SECURITY UPDATES RES
   android, ANDROID DEBUG BRIDGE
   android, PACKAGEMANAGER
   android, PERMISSIONCONTROLLER
   android, PERMISSIONS OVERVIEW
   android, APPPERMISSIONS JAVA
   android, RUNTIME PERMISSIONS
   android, GOOGLE PLAY INSTANT
   [Anonymous], 2014, 11 USENIX S NETW SYS
   [Anonymous], 2017, ARCH@ CPSWeek
   Arp D, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23247
   Au Kathy Wain Yee, 2012, P 2012 ACM C COMP CO, P217
   Backes M, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P1101
   Bagheri H, 2015, LECT NOTES COMPUT SC, V9109, P73, DOI 10.1007/978-3-319-19249-9_6
   Barrera D, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P73, DOI 10.1145/1866307.1866317
   Bonné B, 2017, PROCEEDINGS OF THIRTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY (SOUPS 2017), P195
   cs.android, PACKAGEMANAGERSERVIC
   cs.android, UTILS JAVA
   cs.android, ANDROIDMANIFEST XML
   Dawoud A, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23398
   developer.android, ACCESS DEVICE LOCATI
   developers.google, FACTORY IMAGES NEXUS
   Diao WR, 2019, PROCEEDINGS OF THE 22ND INTERNATIONAL SYMPOSIUM ON RESEARCH IN ATTACKS, INTRUSIONS AND DEFENSES, P261
   docs.oracle, SIGNING JAR FILES
   Fang ZR, 2016, ASIA CCS'16: PROCEEDINGS OF THE 11TH ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P747, DOI 10.1145/2897845.2897914
   Felt A. P., 2011, PROC 20 USENIX SECUR, P331
   Felt AP, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P627
   Felt AP, 2012, P 8 S USABLE PRIVACY, P1, DOI DOI 10.1145/2335356.2335360
   Fragkaki Elli, 2012, Computer Security - ESORICS 2012. Proceedings 17th European Symposium on Research in Computer Security, P1, DOI 10.1007/978-3-642-33167-1_1
   Gamba J, 2020, P IEEE S SECUR PRIV, P1039, DOI 10.1109/SP40000.2020.00013
   Ganov S, 2016, BUG 33860747
   github, 2020, ANDROGUARD
   github, APKTOOL
   Huang JJ, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P977
   issuetracker, 2018, PERMISSIONS ARE INST
   JEON J, 2012, P 2 ACM WORKSH SEC P, DOI 10.1145/2381934.2381938
   jiguang, JPUSH
   Junyi S, 2020, JIEBA
   Moltmann P. P, 2018, GIVE PLATFORM PERMIS
   Moltmann P. P, 2018, REMOVE GROUPING PLAT
   Murphy M. L., 2014, VULNERABILITIES CUST
   Raval Nisarg, 2019, P 17 ANN INT C MOB S, P180
   roid, DEFINE CUSTOM APP PE
   Rui Li, 2021, 2021 IEEE Symposium on Security and Privacy (SP), P70, DOI 10.1109/SP40001.2021.00070
   Sadeghi A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P846, DOI 10.1145/3180155.3180172
   Scrapy, OPEN SOURCE COLLABOR
   Shen BY, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P751
   source.android, BUILDING ANDROID
   Tate C., 2013, BUG 11242510
   Thanaki J, 2017, PYTHON NATURAL LANG, P102
   Tuncay G.S., 2020, P 29 USENIX SEC S US, P415
   Tuncay GS, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23210
   Wei XT, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P31
   Wijesekera P, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P499
   Xing LY, 2014, P IEEE S SECUR PRIV, P393, DOI 10.1109/SP.2014.32
   Xu W, 2013, PROC INT SYMP SOFTW, P400, DOI 10.1109/ISSRE.2013.6698893
   Yan Z, 2020, ANDPERMISSION
   yuntongxun, RONGLING CLOUD COMMU
   Zhang Yuan., 2013, Proceedings of the 2013 ACM SIGSAC Conference on Computer #38; Communications Security, CCS'13, P611
   Zhauniarovich Y, 2016, LECT NOTES COMPUT SC, V9854, P346, DOI 10.1007/978-3-319-45719-2_16
   Zhu Sencun, 2015, P 5 ACM C DAT APPL S, P61, DOI DOI 10.1145/2699026.2699114
NR 61
TC 3
Z9 3
U1 2
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4465
EP 4484
DI 10.1109/TSE.2021.3119980
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800013
DA 2024-07-18
ER

PT J
AU Eismann, S
   Scheuner, J
   Van Eyk, E
   Schwinger, M
   Grohmann, J
   Herbst, N
   Abad, C
   Iosup, A
AF Eismann, Simon
   Scheuner, Joel
   Van Eyk, Erwin
   Schwinger, Maximilian
   Grohmann, Johannes
   Herbst, Nikolas
   Abad, Cristina
   Iosup, Alexandru
TI The State of Serverless Applications: Collection, Characterization, and
   Community Consensus
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Open source software; Systematics; Production; Logic gates; Software
   engineering; Computer architecture; Buildings; Serverless; FaaS;
   serverless applications; survey; community consensus; FAIR dataset
AB Over the last five years, all major cloud platform providers have increased their serverless offerings. Many early adopters report significant benefits for serverless-based over traditional applications, and many companies are considering moving to serverless themselves. However, currently there exist only few, scattered, and sometimes even conflicting reports on when serverless applications are well suited and what the best practices for their implementation are. We address this problem in the present study about the state of serverless applications. We collect descriptions of 89 serverless applications from open-source projects, academic literature, industrial literature, and domain-specific feedback. We analyze 16 characteristics that describe why and when successful adopters are using serverless applications, and how they are building them. We further compare the results of our characterization study to 10 existing, mostly industrial, studies and datasets; this allows us to identify points of consensus across multiple studies, investigate points of disagreement, and overall confirm the validity of our results. The results of this study can help managers to decide if they should adopt serverless technology, engineers to learn about current practices of building serverless applications, and researchers and platform providers to better understand the current landscape of serverless applications.
C1 [Eismann, Simon; Schwinger, Maximilian; Grohmann, Johannes; Herbst, Nikolas] Univ Wurzburg, Dept Software Engn, D-97070 Wurzburg, Germany.
   [Scheuner, Joel] Chalmers I Univ Gothenburg, Div Software Engn, S-41296 Gothenburg, Sweden.
   [Van Eyk, Erwin; Iosup, Alexandru] Vrije Univ Amsterdam, Massivizing Comp Syst, NL-1081 Amsterdam, Netherlands.
   [Schwinger, Maximilian] German Aerosp Ctr, Cologne, Germany.
   [Abad, Cristina] Escuela Super Politecn Litoral, Dept Elect Engn & Comp Sci, Guayaquil 09015863, Ecuador.
C3 University of Wurzburg; Vrije Universiteit Amsterdam; Helmholtz
   Association; German Aerospace Centre (DLR); Escuela Superior Politecnica
   del Litoral
RP Eismann, S (corresponding author), Univ Wurzburg, Dept Software Engn, D-97070 Wurzburg, Germany.
EM simon.eismann@uni-wuerzburg.de; scheuner@chalmers.se;
   E.vanEyk@atlarge-research.com; schwinger@chalmers.se;
   johannes.grohmann@uni-wuerzburg.de; nikolas.herbst@uni-wuerzburg.de;
   cabadr@espol.edu.ec; A.losup@atlarge-research.com
RI Iosup, Alexandru/G-4069-2012
OI Abad, Cristina/0000-0002-9263-673X; Eismann, Simon/0000-0003-1224-4945;
   Herbst, Nikolas/0000-0003-3462-6426; Grohmann,
   Johannes/0000-0001-9643-6543
FU NWO; Wallenberg AI, Autonomous Systems and Software Program (WASP) -
   Knut and Alice Wallenberg Foundation
FX This work was partially supported by the NWO projects Vidi MagnaData and
   TOP2 OffSense and the Wallenberg AI, Autonomous Systems and Software
   Program (WASP) funded by the Knut and Alice Wallenberg Foundation.
CR Adzic G, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P884, DOI 10.1145/3106237.3117767
   Ali-Eldin A, 2014, INT CONF UTIL CLOUD, P566, DOI 10.1109/UCC.2014.87
   Back T, 2018, LECT NOTES COMPUT SC, V11116, P146, DOI 10.1007/978-3-319-99819-0_11
   Baldini I, 2017, PROCEEDINGS OF THE 2017 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!'17), P89, DOI 10.1145/3133850.3133855
   Bhattacharjee A, 2019, INT CONF CLOUD ENG, P23, DOI 10.1109/IC2E.2019.00-10
   Blomer J., 2019, PROC EPJ WEB C, V214
   Brockwell SE, 2001, STAT MED, V20, P825, DOI 10.1002/sim.650
   Castro P, 2019, COMMUN ACM, V62, P44, DOI 10.1145/3368454
   Chan M., 2018, CONTAINERS VS SERVER
   Coffey A., 1996, MAKING SENSE QUALITA
   Crespo-Cepeda R, 2019, ACM-BCB'19: PROCEEDINGS OF THE 10TH ACM INTERNATIONAL CONFERENCE ON BIOINFORMATICS, COMPUTATIONAL BIOLOGY AND HEALTH INFORMATICS, P663, DOI 10.1145/3307339.3343462
   Eismann S., 2020, SPEC RG
   Eismann S, 2021, IEEE SOFTWARE, V38, P32, DOI 10.1109/MS.2020.3023302
   Eivy A, 2017, IEEE CLOUD COMPUT, V4, P6, DOI 10.1109/MCC.2017.32
   Figiela K, 2018, CONCURR COMP-PRACT E, V30, DOI 10.1002/cpe.4792
   Fouladi S, 2019, PROCEEDINGS OF THE 2019 USENIX ANNUAL TECHNICAL CONFERENCE, P475
   Gartner, 2018, WORLDW IAAS PUBL CLO
   Goh KI, 2008, EPL-EUROPHYS LETT, V81, DOI 10.1209/0295-5075/81/48002
   Guest G., 2011, sage publications
   Gwet KL., 2014, Handbook of inter-rater reliability: The definitive guide to measuring the extent of agreement among raters, V4th ed.
   HELLERSTEIN J. M., 2018, 9 BIENNIAL C INNOVAT
   Hendrickson Scott, 2016, P USENIX HOT CLOUD
   IDC, 2018, FUTURESCAPE WORLDW I
   Ishakian V, 2018, INT CONF CLOUD ENG, P257, DOI 10.1109/IC2E.2018.00052
   Jonas Eric, 2019, Cloud Programming Simplified: A Berkeley View on Serverless Computing
   Kounev S., 2021, P SERVERLESS COMPUTI, V11, P56
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Laul M, 2018, SERVERLESS CASE STUD
   Lee H, 2018, PROCEEDINGS 2018 IEEE 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING (CLOUD), P442, DOI 10.1109/CLOUD.2018.00062
   Leitner P, 2019, J SYST SOFTWARE, V149, P340, DOI 10.1016/j.jss.2018.12.013
   Levinson E, 2020, SERVERLESS COMMUNITY
   Lloyd W, 2018, INT CONF CLOUD ENG, P159, DOI 10.1109/IC2E.2018.00039
   Maenhaut PJ, 2020, J NETW SYST MANAG, V28, P197, DOI 10.1007/s10922-019-09504-0
   MAKRIDAKIS S, 1993, INT J FORECASTING, V9, P527, DOI 10.1016/0169-2070(93)90079-3
   Malishev N., 2019, AWS LAMBDA COLD STAR
   Moellering S, 2020, FIELD NOTES OPTIMIZE
   Myers J. L., 2010, RES DESIGN STAT ANAL
   Orfin A., 2018, DROPLR SCALES MILLIO
   Pahl C, 2019, IEEE T CLOUD COMPUT, V7, P677, DOI 10.1109/TCC.2017.2702586
   Pavlov I., 2019, SERVERLESS DEV TREND
   Research and Markets, 2017, 772 BILL FUNCT AS A
   Scheuner J, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110708
   Shahrad M, 2020, PROCEEDINGS OF THE 2020 USENIX ANNUAL TECHNICAL CONFERENCE, P205
   Spillner J., 2019, SERVERLESS LIT DATAS, DOI [10.5281/zenodo.1175423, DOI 10.5281/ZENODO.1175423]
   Spillner J, 2018, COMM COM INF SC, V796, P154, DOI 10.1007/978-3-319-73353-1_11
   Taibi D, 2020, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE (CLOSER), P181, DOI 10.5220/0009578501810192
   Tu Zhucheng, 2018, P 2018 C N AM CHAPTE, P6
   van Eyk E, 2019, IEEE INTERNET COMPUT, V23, P7, DOI 10.1109/MIC.2019.2952061
   van Eyk E, 2017, PROCEEDINGS OF THE 2ND INTERNATIONAL WORKSHOP ON SERVERLESS COMPUTING (WOSC '17), P1, DOI 10.1145/3154847.3154848
   van Eyk E, 2018, COMPANION OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P21, DOI 10.1145/3185768.3186308
   van Eyk E, 2018, IEEE INTERNET COMPUT, V22, P8, DOI 10.1109/MIC.2018.053681358
   Walter J, 2019, SYSTEMATIC DATA TRAN
   Wang L, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P133
   Williams A, 2017, AUTODESK GOES SERVER
   Witte P. A., 2019, ARXIV
   Yussupov Vladimir, 2019, P 12 IEEE ACM INT C, P229, DOI [DOI 10.1145/3344341, 10.1145/3344341.3368803]
NR 56
TC 25
Z9 25
U1 2
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 4152
EP 4166
DI 10.1109/TSE.2021.3113940
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800024
OA Green Published
DA 2024-07-18
ER

PT J
AU Lamothe, M
   Li, H
   Shang, WY
AF Lamothe, Maxime
   Li, Heng
   Shang, Weiyi
TI Assisting Example-Based API Misuse Detection via Complementary
   Artificial Examples
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Detectors; Software; Tools; Usability; Java; Data mining; Task analysis;
   API-misuse detection; mining software repositories; empirical software
   engineering; software reuse
AB Application Programming Interfaces (APIs) allow their users to reuse existing software functionality without implementing it by themselves. However, using external functionality can come at a cost. Because developers are decoupled from the API's inner workings, they face the possibility of misunderstanding, and therefore misusing APIs. Prior research has proposed state-of-the-art example-based API misuse detectors that rely on existing API usage examples mined from existing code bases. Intuitively, without a varied dataset of API usage examples, it is challenging for the example-based API misuse detectors to differentiate between infrequent but correct API usages and API misuses. Such mistakes lead to false positives in the API misuse detection results, which was reported in a recent study as a major limitation of the state-of-the-art. To tackle this challenge, in this paper, we first undertake a qualitative study of 384 falsely detected API misuses. We find that around one third of the false-positives are due to missing alternative correct API usage examples. Based on the knowledge gained from the qualitative study, we uncover five patterns which can be followed to generate artificial examples for complementing existing API usage examples in the API misuse detection. To evaluate the usefulness of the generated artificial examples, we apply a state-of-the-art example-based API misuse detector on 50 open source Java projects. We find that our artificial examples can complement the existing API usage examples by preventing the detection of 55 false API misuses. Furthermore, we conduct a pre-designed experiment in an automated API misuse detection benchmark (MUBench), in order to evaluate the impact of generated artificial examples on recall. We find that the API misuse detector covers the same true positive results with and without the artificial example, i.e., obtains the same recall of 94.7 percent. Our findings highlight the potential of improving API misuse detection by pattern-guided source code transformation techniques.
C1 [Lamothe, Maxime; Li, Heng] Polytech Montreal, Dept Comp Engn & Software Engn, Montreal, PQ H3T 1J4, Canada.
   [Shang, Weiyi] Concordia Univ, Gina Cody Sch Engn & Comp Sci, Montreal, PQ H3G 1M8, Canada.
C3 Universite de Montreal; Polytechnique Montreal; Concordia University -
   Canada
RP Lamothe, M (corresponding author), Polytech Montreal, Dept Comp Engn & Software Engn, Montreal, PQ H3T 1J4, Canada.
EM maxime.lamothe@polymtl.ca; heng.li@polymtl.ca; shang@encs.concordia.ca
OI Li, Heng/0000-0001-5441-6763
CR Acharya M, 2009, LECT NOTES COMPUT SC, V5503, P370
   Amann S, 2019, IEEE T SOFTWARE ENG, V45, P1170, DOI 10.1109/TSE.2018.2827384
   Amann S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P464, DOI [10.1145/2901739.2903506, 10.1109/MSR.2016.055]
   [Anonymous], Pipeline
   [Anonymous], 2020, PACKAGE JAVA UTIL ST
   Artstein R, 2008, COMPUT LINGUIST, V34, P555, DOI 10.1162/coli.07-034-R2
   Avazpour I, 2014, Recomm Syst Softw Eng, P245
   Baudry B, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2807593
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1275, DOI 10.1007/s10664-014-9325-9
   Dagenais B, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P481, DOI 10.1145/1368088.1368154
   Daqing Hou, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P233, DOI 10.1109/ICSM.2011.6080790
   Daye Nam, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P615, DOI 10.1109/ASE.2019.00063
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Egele M., 2013, P 2013 ACM SIGSAC C, P73
   Fowkes J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P254, DOI 10.1145/2950290.2950319
   Glassman EL, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174154
   Harrand N, 2019, GENET PROGRAM EVOL M, V20, P531, DOI 10.1007/s10710-019-09355-3
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Kintis M, 2018, IEEE T SOFTWARE ENG, V44, P308, DOI 10.1109/TSE.2017.2684805
   Krippendorff K., 2013, Content analysis, V3rd
   Krippendorff Klaus, 2011, COMPUTING KRIPPENDOR, DOI DOI 10.1002/9781405186407.WBIECR029
   Lamothe M, 2020, PROC INT CONF SOFTW, P912, DOI 10.1145/3377811.3380433
   Legunsen O, 2016, IEEE INT CONF AUTOM, P602, DOI 10.1145/2970276.2970356
   Li H, 2021, IEEE T SOFTWARE ENG, V47, P2858, DOI 10.1109/TSE.2020.2970422
   Li HW, 2018, PROC IEEE INT CONF S, P183, DOI 10.1109/ICSME.2018.00028
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Lindig C., 2015, The Art and Science of Analyzing Software Data, P17, DOI [10.1016/B978-0-12-411519-4.00002-1, DOI 10.1016/B978-0-12-411519-4.00002-1]
   Liu P., P IEEE ACM INT C SOF, V2021, P308
   Macvean M.Maly., 2016, Proceedings of the 2016 CHI Conference Extended Abstracts on Human Factors in Computing Systems, V7, P849, DOI [10.1145/2851581.2851602, DOI 10.1145/2851581.2851602]
   Martin R. C., 2018, CLEAN CODE
   McDonald Nora, 2019, Proceedings of the ACM on Human-Computer Interaction, V3, DOI 10.1145/3359174
   Monperrus M, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430541
   Monperrus M, 2010, LECT NOTES COMPUT SC, V6183, P2, DOI 10.1007/978-3-642-14107-2_2
   Murphy L, 2018, 2018 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P249, DOI 10.1109/VLHCC.2018.8506523
   Nguyen TT, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P383, DOI 10.1145/1595696.1595767
   Pradel M, 2012, PROC INT CONF SOFTW, P288, DOI 10.1109/ICSE.2012.6227185
   Pradel M, 2012, PROC INT CONF SOFTW, P925, DOI 10.1109/ICSE.2012.6227127
   Ramanathan MK, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P123, DOI 10.1145/1250734.1250749
   Ren XX, 2020, IEEE INT CONF AUTOM, P461, DOI 10.1145/3324884.3416551
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Stylos Jeffrey., 2008, Proc. of the 16th International Symposium on Foundations of Software Eng, P105
   Sven Amann, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P265, DOI 10.1109/MSR.2019.00053
   Nguyen TT, 2015, IEEE INT CONF AUTOM, P795, DOI 10.1109/ASE.2015.109
   Thummalapenta S, 2009, IEEE INT CONF AUTOM, P283, DOI 10.1109/ASE.2009.72
   Thummalapenta S, 2009, PROC INT CONF SOFTW, P496, DOI 10.1109/ICSE.2009.5070548
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Wang JW, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P233, DOI 10.1145/3368089.3409735
   Wang J, 2013, IEEE WORK CONF MIN S, P319, DOI 10.1109/MSR.2013.6624045
   Wang TT, 2014, FRONT COMPUT SCI-CHI, V8, P996, DOI 10.1007/s11704-014-3430-1
   Wasylkowski A, 2009, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2009.30
   Wasylkowski Andrzej, 2007, P 6 JOINT M EUROPEAN, P35, DOI [10.1145/1287624.1287632, DOI 10.1145/1287624.1287632]
   Wen M, 2019, PROC INT CONF SOFTW, P866, DOI 10.1109/ICSE.2019.00093
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
   Zhong H, 2020, PROC INT CONF SOFTW, P899, DOI 10.1145/3377811.3380922
   Zhong H, 2019, IEEE T SOFTWARE ENG, V45, P319, DOI 10.1109/TSE.2017.2782280
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
NR 57
TC 0
Z9 1
U1 1
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3410
EP 3422
DI 10.1109/TSE.2021.3093246
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500012
DA 2024-07-18
ER

PT J
AU Edison, H
   Wang, XF
   Conboy, K
AF Edison, Henry
   Wang, Xiaofeng
   Conboy, Kieran
TI Comparing Methods for Large-Scale Agile Software Development: A
   Systematic Literature Review
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Bibliographies; Systematics; Software; Tools; Measurement; Information
   systems; Libraries; Large-scale agile; critical assessment; challenges
   and success factors; systematic literature review
ID SUCCESS FACTORS; PROJECTS; COORDINATION; CHALLENGES
AB Following the highly pervasive and effective use of agile methods at the team level, many software organisations now wish to replicate this success at the organisational level, adopting large-scale agile methods such as SAFe, Scrum-at-Scale, and others. However, this has proven significantly challenging. An analysis of the extant literature reveals a disparate set of studies across each individual method, with no cross-method comparison based on empirical evidence. This systematic literature review compares the main large-scale agile methods, namely SAFe, LeSS, Scrum-at-Scale, DAD, and the Spotify model. It is the first study to analyse and compare each of the method's principles, practices, tools, and metrics in a standardised manner. For each method, it presents not just the original method specifications but also all extensions and modifications to each method proposed by subsequent empirical research. It includes in this comparison not just commercial large-scale methods but also those that have been custom-built in organisations such as Nokia, Ericsson, and others. Based on the findings reported in this study, practitioners can make a more informed decision as to which commercial method or method component or, indeed, custom-built method is better suited to their needs. Our study reveals a number of theoretical and practical issues in the current literature, such as an emphasis on the practices of commercial frameworks at the expense of their underlying principles, or indeed any of the custom method. A set of challenges and success factors associated with the use of large-scale agile methods are identified. The study also identifies a number of research gaps to be addressed across methods.
C1 [Edison, Henry] Univ So Denmark, Maersk Mc Kinney Moller Inst, DK-5230 Odense, Denmark.
   [Wang, Xiaofeng] Free Univ Bozen Bolzano, Comp Sci, Bolzano, Italy.
   [Conboy, Kieran] Natl Univ Ireland Galway, Business Informat Syst, Galway H91 7K33, Ireland.
C3 University of Southern Denmark; Free University of Bozen-Bolzano
RP Edison, H (corresponding author), Univ So Denmark, Maersk Mc Kinney Moller Inst, DK-5230 Odense, Denmark.
EM hedis@mmmi.sdu.dk; xiaofeng.wang@unibz.it; Kieran.Conboy@nuigalway.ie
RI Edison, Henry/AAA-9989-2020
OI Edison, Henry/0000-0002-9494-8059
FU Science Foundation Ireland [13/RC/2094_P2]
FX This work was supported in part by Science Foundation Ireland grant
   13/RC/2094_P2.
CR Abrar MF, 2019, IEEE ACCESS, V7, P22660, DOI 10.1109/ACCESS.2019.2896212
   Alqudah M., 2016, International Journal on Advanced Science, Engineering and Information Technology, V6, P1, DOI [DOI 10.18517/IJASEIT.6.6.1374, 10.18517/IJASEIT.6.6.1374]
   Alsaqaf W, 2017, LECT NOTES COMPUT SC, V10153, P219, DOI 10.1007/978-3-319-54045-0_17
   [Anonymous], 2004, XP Ser
   [Anonymous], 2019, 13 ANN STATE AGILE R
   [Anonymous], 2010, Practices for Scaling Lean & Agile Development: Large, Multisite, and Offshore Product Development with Large-Scale Scrum
   Arizmendi MR, 2019, IFAC PAPERSONLINE, V52, P579, DOI 10.1016/j.ifacol.2019.12.609
   Barlow JB, 2011, COMMUN ASSOC INF SYS, V29
   BENINGTON HD, 1983, ANN HIST COMPUT, V5, P350
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Conboy K, 2019, IEEE SOFTWARE, V36, P44, DOI 10.1109/MS.2018.2884865
   de Almeida Biolchini JC, 2007, ADV ENG INFORM, V21, P133, DOI 10.1016/j.aei.2006.11.006
   Díaz J, 2011, SOFTWARE PRACT EXPER, V41, P921, DOI 10.1002/spe.1087
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dingsoyr Torgeir, 2013, Software Engineering Notes, V38, P33, DOI 10.1145/2507288.2507322
   Dittrich Y, 2016, INFORM SOFTWARE TECH, V70, P220, DOI 10.1016/j.infsof.2015.07.001
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Ghantous G.B., 2017, PACIS 2017 Proc, P96
   Glass RL, 2004, COMMUN ACM, V47, P89, DOI 10.1145/990680.990686
   Gregor S, 2006, MIS QUART, V30, P611
   Hansson C, 2006, J SYST SOFTWARE, V79, P1295, DOI 10.1016/j.jss.2005.12.020
   Hoegl M, 2004, ORGAN SCI, V15, P38, DOI 10.1287/orsc.1030.0053
   Hossain E, 2009, INT CONF GLOBAL SOFT, P175, DOI 10.1109/ICGSE.2009.25
   Jalali S, 2012, J SOFTW-EVOL PROC, V24, P643, DOI 10.1002/smr.561
   Kalenda M, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1954
   Kischelewski B., 2020, PROC 28 EUR C INF SY, P1
   Kiss F, 2018, FED CONF COMPUT SCI, P969, DOI 10.15439/2018F53
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Klünder J, 2018, PROCEEDINGS OF THE 2018 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS (ICSSP 2018), P1, DOI 10.1145/3202710.3203146
   Klünder JAC, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2168
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Kuhrmann M, 2017, EMPIR SOFTW ENG, V22, P2852, DOI 10.1007/s10664-016-9492-y
   Laanti M, 2011, INFORM SOFTWARE TECH, V53, P276, DOI 10.1016/j.infsof.2010.11.010
   Leffingwell D., 2018, SAFE 4 5 REFERENCE G
   Lous P, 2017, INT CONF GLOBAL SOFT, P1, DOI 10.1109/ICGSE.2017.13
   Matalonga S, 2013, INT J SOFTW ENG KNOW, V23, P1289, DOI 10.1142/S021819401350040X
   Matook S., 2014, P 20 AM C INF SYST, P1
   Nurdiani I., 2011, 2011 Sixth IEEE International Conference on Global Software Engineering Workshop, P36, DOI 10.1109/ICGSE-W.2011.16
   Oppenheim BW, 2011, SYSTEMS ENG, V14, P29, DOI 10.1002/sys.20161
   Paasivaara M, 2017, INT CONF GLOBAL SOFT, P36, DOI 10.1109/ICGSE.2017.15
   Paige RF, 2017, EMPIR SOFTW ENG, V22, P2453, DOI 10.1007/s10664-017-9498-0
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Pernstål J, 2013, J SYST SOFTWARE, V86, P2797, DOI 10.1016/j.jss.2013.06.035
   Petkov D., 2010, STRATEGIC INFORM SYS, P315
   Putta A, 2018, LECT NOTES COMPUT SC, V11271, P334, DOI 10.1007/978-3-030-03673-7_24
   Ranganath P., 2011, Proceedings of the 2011 Agile Conference, P187, DOI 10.1109/AGILE.2011.40
   Reifer DJ, 2003, IEEE SOFTWARE, V20, P12, DOI 10.1109/MS.2003.1207448
   Reinertsen D.G., 2009, The Principles of Product Development Flow: Second Generation Lean Product Development
   Rizvi B, 2015, J SOFTW-EVOL PROC, V27, P723, DOI 10.1002/smr.1718
   ROCKART JF, 1979, HARVARD BUS REV, V57, P81
   Rolland K., 2016, P 37 ICIS INT C INF, P1
   Royce W. W., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P328
   Saeeda H, 2015, INT J ADV COMPUT SC, V6, P63
   Saracevic T., 1995, SIGIR Forum, P138
   Schwaber K., 2017, The Scrum GuideTM The Definitive Guide to Scrum: The Rules of the Game
   Schwaber K., 2001, Agile software development with scrum
   Shameem M, 2017, 2017 24TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE WORKSHOPS (APSECW), P17, DOI 10.1109/APSECW.2017.22
   Sinha R, 2020, ISOFT: PROCEEDINGS OF THE 13TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, DOI 10.1145/3385032.3385037
   Turk D, 2005, J DATABASE MANAGE, V16, P62, DOI 10.4018/jdm.2005100104
   Tüzün E, 2019, J SYST SOFTWARE, V149, P63, DOI 10.1016/j.jss.2018.11.021
   Uludag Ö, 2018, LECT NOTES BUS INF P, V314, P232, DOI 10.1007/978-3-319-91602-6_16
   Vallon R, 2018, INFORM SOFTWARE TECH, V96, P161, DOI 10.1016/j.infsof.2017.12.004
   VLIET H., 2007, SOFTWARE ENG PRINCIP
   Yeo K. T., 2002, International Journal of Project Management, V20, P241, DOI 10.1016/S0263-7863(01)00075-8
NR 66
TC 49
Z9 50
U1 11
U2 50
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 2709
EP 2731
DI 10.1109/TSE.2021.3069039
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500002
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Hort, M
   Kechagia, M
   Sarro, F
   Harman, M
AF Hort, Max
   Kechagia, Maria
   Sarro, Federica
   Harman, Mark
TI A Survey of Performance Optimization for Mobile Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Mobile applications; Optimization; Smart phones; Performance evaluation;
   Energy consumption; Software; Hardware; Mobile applications; Android;
   non-functional performance optimization; software optimization;
   literature survey
ID ENERGY-CONSUMPTION; SOFTWARE; MEMORY; REQUIREMENTS; SMARTPHONES;
   PATTERNS; DEVICES
AB To ensure user satisfaction and success of mobile applications, it is important to provide highly performant applications. This is particularly important for resource-constrained systems such as mobile devices. Thereby, non-functional performance characteristics, such as energy and memory consumption, play an important role for user satisfaction. This paper provides a comprehensive survey of non-functional performance optimization for Android applications. We collected 156 unique publications, published between 2008 and 2020, that focus on the optimization of performance of mobile applications. We target our search at four performance characteristics: responsiveness, launch time, memory and energy consumption. For each performance characteristic, we categorize optimization approaches based on the method used in the corresponding publications. Furthermore, we identify research gaps in the literature for future work.
C1 [Hort, Max; Kechagia, Maria; Sarro, Federica; Harman, Mark] UCL, Dept Comp Sci, London WC1E 6BT, England.
   [Harman, Mark] Facebook London, London W1T 1FB, England.
C3 University of London; University College London; Facebook Inc
RP Sarro, F (corresponding author), UCL, Dept Comp Sci, London WC1E 6BT, England.
EM max.hort.19@ucl.ac.uk; m.kechagia@ucl.ac.uk; f.sarro@ucl.ac.uk;
   mark.harman@ucl.ac.uk
OI Sarro, Federica/0000-0002-9146-442X; Kechagia, Maria/0000-0001-9092-3244
FU ERC Advanced fellowship [741278]
FX This work was supported by ERC Advanced fellowship under Grant 741278
   (EPIC). We would like to thank the members of the community who kindly
   provided comments and feedback on an earlier draft of this article. Our
   living surveys[21] has been inspired by Allamanis et al. [296].
CR Bokhari MA, 2020, Arxiv, DOI arXiv:2004.04500
   Afjehei SS, 2019, EMPIR SOFTW ENG, V24, P3484, DOI 10.1007/s10664-019-09703-y
   Al-Subaihin AA, 2021, IEEE T SOFTWARE ENG, V47, P300, DOI 10.1109/TSE.2019.2891715
   Alam F, 2014, DES AUT TEST EUROPE
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Amalfitano D, 2020, IEEE ACCESS, V8, P12217, DOI 10.1109/ACCESS.2020.2966522
   Anand Bhojan., 2011, P 9 INT C MOBILE SYS, P57
   [Anonymous], 2011, PROC 9 USENIX C FILE
   [Anonymous], 2011, Proceedings of the 13th international conference on Human computer interaction with mobile devices and services, DOI [10.1145/2037373.2037383, DOI 10.1145/2037373.2037383]
   [Anonymous], 2013, P 28 ANN ACM S APPL
   [Anonymous], 2013, PROC 5 WORKSHOP MOBI, DOI DOI 10.1145/2457413.2457417
   [Anonymous], 2013, SOFTWARE REQUIREMENT
   [Anonymous], 2010, PROC 8 INT C MOBILE, DOI [DOI 10.1145/1814433, 10.1145/1814433.1814441, DOI 10.1145/1814433.1814441]
   [Anonymous], 2015, Proceedings of the 2015 USENIX Conference on Usenix Annual Technical Conference
   [Anonymous], 2010, P USENIX ANN TECH C
   [Anonymous], 2006, P LIN S
   [Anonymous], 2012, P USENIX ANN TECH C
   [Anonymous], 2012, Cuckoo: A computation offloading framework for smartphones, DOI DOI 10.1007/978-3-642-29336-84
   [Anonymous], 2009, P LINUX S, P19
   [Anonymous], 2014, PROC 6 WORKSHOP POWE
   [Anonymous], 2012, 10 USENIX S OP SYST
   [Anonymous], 2012, INT J CONTROL AUTOMA
   Anwer S, 2014, PROCEEDINGS OF THE 1ST INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2014), P62, DOI 10.1145/2593902.2593918
   BAER JL, 1991, SUPERCOMPUTING 91, P176
   Baeza-Yates R, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P285, DOI 10.1145/2684822.2685302
   Baik K, 2014, I SYMP CONSUM ELECTR
   Balasubramanian N, 2009, IMC'09: PROCEEDINGS OF THE 2009 ACM SIGCOMM INTERNET MEASUREMENT CONFERENCE, P280
   Banerjee Abhijeet, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P1, DOI 10.1109/MOBILESoft.2017.1
   Banerjee A, 2018, IEEE T SOFTWARE ENG, V44, P470, DOI 10.1109/TSE.2017.2689012
   Banerjee A, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P139, DOI [10.1109/MobileSoft.2016.038, 10.1145/2897073.2897086]
   Banerjee A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P588, DOI 10.1145/2635868.2635871
   Batyuk L, 2009, L N INST COMP SCI SO, V7, P381
   Baumann Paul, 2017, Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, V1, DOI 10.1145/3090052
   Bezerra P. T., 2013, P 8 ACM WORKSH PERF, P189, DOI DOI 10.1145/2512840.2512867
   Bhattacharya P, 2013, EUR CON SFTWR MTNCE, P133, DOI 10.1109/CSMR.2013.23
   Boehm B. W., 1978, CHARACTERISTICS SOFT, V1
   Bokhari M, 2016, PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'16 COMPANION), P1139, DOI 10.1145/2908961.2931691
   Bokhari MA, 2019, IEEE C EVOL COMPUTAT, P1330, DOI 10.1109/CEC.2019.8790246
   Bokhari MA, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCO'17 COMPANION), P1501, DOI 10.1145/3067695.3082519
   Bokhari MA, 2018, PROCEEDINGS OF THE 15TH EAI INTERNATIONAL CONFERENCE ON MOBILE AND UBIQUITOUS SYSTEMS: COMPUTING, NETWORKING AND SERVICES (MOBIQUITOUS 2018), P207, DOI 10.1145/3286978.3287014
   Bolla R, 2014, 2014 EIGHTH INTERNATIONAL CONFERENCE ON NEXT GENERATION MOBILE APPS, SERVICES AND TECHNOLOGIES (NGMAST), P123, DOI 10.1109/NGMAST.2014.10
   Bruce BR, 2019, IEEE T SOFTWARE ENG, V45, P1150, DOI 10.1109/TSE.2018.2827066
   Bruce BR, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1327, DOI 10.1145/2739480.2754752
   Chang YM, 2019, INT CONF BIG DATA, P185, DOI [10.1109/bigcomp.2019.8679428, 10.1109/IRMMW-THz.2019.8874259]
   Chang YM, 2013, ACM T EMBED COMPUT S, V13, DOI 10.1145/2539036.2539049
   Chen F, 2006, ISLPED '06: Proceedings of the 2006 International Symposium on Low Power Electronics and Design, P412, DOI 10.1109/LPE.2006.4271878
   Chen HD, 2014, COMPUT GRAPH-UK, V38, P61, DOI 10.1016/j.cag.2013.10.020
   Chen M, 2018, IEEE J SEL AREA COMM, V36, P587, DOI 10.1109/JSAC.2018.2815360
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Chen X., 2013, Proceedings of the 14th Workshop on Mobile Computing Systems and Applications, Jekyll Island, Georgia, USA, P1, DOI DOI 10.1145/2444776.2444781
   Chen Xiang., 2013, Proceedings of the 14th Workshop on Mobile Computing Systems and Applications, P3, DOI 10.1145/2525526.2525848
   Chen XM, 2015, MOBICOM '15: PROCEEDINGS OF THE 21ST ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING, P40, DOI 10.1145/2789168.2790107
   Cheng CC, 2013, IEEE INFOCOM SER, P2742
   Cheng KT, 2013, INT CONF SYST SIGNAL, P187, DOI 10.1109/IWSSIP.2013.6623485
   Cheng-Min Lin, 2011, Proceedings of the 2011 2nd International Conference on Innovations in Bio-Inspired Computing and Applications (IBICA 2011), P320, DOI 10.1109/IBICA.2011.85
   Cheon Y., 2017, IMPACTS JAVA LANGUAG
   Chilimbi TM, 2004, ACM SIGPLAN NOTICES, V39, P156, DOI 10.1145/1037187.1024412
   Cho M, 2013, ETRI J, V35, P259, DOI 10.4218/etrij.13.0112.0203
   Choi B, 2018, CONEXT'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON EMERGING NETWORKING EXPERIMENTS AND TECHNOLOGIES, P27, DOI 10.1145/3281411.3281416
   Chon Y., 2011, P 9 ACM C EMBEDDED N, P82
   Christakis M, 2016, IEEE INT CONF AUTOM, P332, DOI 10.1145/2970276.2970347
   Chun BG, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P301
   Chung L, 2009, LECT NOTES COMPUT SC, V5600, P363, DOI 10.1007/978-3-642-02463-4_19
   Chung YF, 2013, ACM T EMBED COMPUT S, V12, DOI 10.1145/2435227.2435233
   Cito J, 2016, IEEE INT CONF AUTOM, P702, DOI 10.1145/2970276.2970324
   Cohen R., 2014, OVERVIEW EMBEDDED AP, P1
   Corral Luis, 2014, Mobile Web Information Systems. 11th International Conference (MobiWIS 2014). Proceedings: LNCS 8640, P29, DOI 10.1007/978-3-319-10359-4_3
   Corral L., 2014, P 3 INT WORKSHOP GRE, P31, DOI DOI 10.1145/2593743.2593748
   Cruz Luis, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P205, DOI 10.1109/MOBILESoft.2017.21
   Cruz Luis, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P46, DOI 10.1109/MOBILESoft.2017.19
   Cruz L., 2018, PROC CIBSE 21 IBEROA
   Cruz L, 2021, IEEE T SOFTWARE ENG, V47, P2260, DOI 10.1109/TSE.2019.2946163
   Cruz L, 2019, PROC IEEE INT CONF S, P29, DOI 10.1109/ICSME.2019.00013
   Cruz L, 2019, EMPIR SOFTW ENG, V24, P2209, DOI 10.1007/s10664-019-09682-0
   Dalmasso I, 2013, INT WIREL COMMUN, P323, DOI 10.1109/IWCMC.2013.6583580
   Dan Han, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P83, DOI 10.1109/WCRE.2012.18
   Das PK, 2016, INT CONF ADV COMPU, P759, DOI 10.1109/IACC.2016.145
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Ding Aaron Yi, 2013, 2013 IEEE International Conference on Sensing, Communications and Networking (SECON), P487, DOI 10.1109/SAHCN.2013.6645020
   Dong MA, 2009, DES AUT CON, P652
   Donghan Yu, 2017, Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, V1, DOI 10.1145/3161413
   Duan R., 2011, Proceedings of the International Green Com- puting Conference and Workshops, P1
   Dutta K, 2018, ACM T WEB, V12, DOI 10.1145/3125778
   Falaki Hossein., 2010, Diversity in smartphone usage, P179, DOI DOI 10.1145/1814433.1814453
   Feng RT, 2019, IEEE ICST WORKSHOP, P285, DOI 10.1109/ICSTW.2019.00067
   Ferrari A, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATION WORKSHOPS (PERCOM WORKSHOPS), P421, DOI 10.1109/PERCOMW.2015.7134075
   Ferrucci F, 2015, LECT NOTES COMPUT SC, V9459, P271, DOI 10.1007/978-3-319-26844-6_20
   Finkelstein A, 2017, INFORM SOFTWARE TECH, V87, P119, DOI 10.1016/j.infsof.2017.03.002
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Gao C., 2018, P 1 INT WORKSH ADV M, P13
   Gao CY, 2021, INFORM SOFTWARE TECH, V132, DOI 10.1016/j.infsof.2020.106471
   Gao CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P48, DOI 10.1145/3180155.3180218
   Georgiou S, 2018, IEEE WORK CONF MIN S, P303, DOI 10.1145/3196398.3196414
   Gerlitz T., 2013, P 11 INT WORKSH JAV, P108
   Gordon M.S., 2015, P 13 ANN INT C MOB S, P137, DOI [10.1145/2742647.2742649, DOI 10.1145/2742647.2742649]
   Gordon M. S., 2012, P 10 USENIX C OP SYS, P93
   Grady R.B., 1987, SOFTWARE METRICS EST, V1
   Gudla SK, 2017, WWW'17 COMPANION: PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P785, DOI 10.1145/3041021.3054206
   Gupta N., 2009, COMPCACHE IN MEMORY
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Habchi S, 2018, IEEE INT CONF AUTOM, P6, DOI 10.1145/3238147.3238197
   Han J, 2020, IEEE ACCESS, V8, P11031, DOI 10.1109/ACCESS.2020.2965548
   Hao S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P92, DOI 10.1109/ICSE.2013.6606555
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Harty J, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON APP MARKET ANALYTICS (WAMA '19), P26, DOI 10.1145/3340496.3342761
   Harty J, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P62, DOI 10.1109/MOBILESoft.2019.00019
   He ST, 2015, MOBICOM '15: PROCEEDINGS OF THE 21ST ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING, P27, DOI 10.1145/2789168.2790117
   He YN, 2011, LECT NOTES COMPUT SC, V6985, P350, DOI 10.1007/978-3-642-24403-2_27
   Hecht G, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P59, DOI [10.1145/2897073.2897100, 10.1109/MobileSoft.2016.030]
   Hecht G, 2015, IEEE INT CONF AUTOM, P236, DOI 10.1109/ASE.2015.46
   Higgins B.D., 2012, P 10 INT C MOBILE SY, P155, DOI [DOI 10.1145/2307636.2307651, 10.1145/2307636.2307651]
   Hong D. K., 2019, PROC IEEEACM 6 INT C, P50
   Hoque MA, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2840723
   Hoque MA, 2014, IEEE COMMUN SURV TUT, V16, P579, DOI 10.1109/SURV.2012.111412.00051
   Hort M., SURVEY PERFORMANCE O
   Hsiu PC, 2016, ACM T EMBED COMPUT S, V15, DOI 10.1145/2829946
   Hu Cuixiong, 2011, Proceedings of the 6th International Workshop on Automation of Software Test, P77
   Huang Junxian., 2010, MobiSys, P165, DOI [10.1145/1814433.1814452, DOI 10.1145/1814433.1814452]
   Huang YB, 2014, I SYMPOS LOW POWER E, P369, DOI 10.1145/2627369.2627612
   Huangfu JJ, 2015, LECT NOTES COMPUT SC, V9464, P3, DOI 10.1007/978-3-319-26979-5_1
   Hussein A., 2015, 8 ACM INT SYST STOR, P1
   Inukollu N., 2014, International Journal of Software Engineering Applications, DOI [DOI 10.5121/IJSEA.2014.5502, 10.5121/ijsea.2014.5502]
   Romero OJ, 2019, Arxiv, DOI arXiv:1906.02061
   Jabbarvand R., 2016, P 25 INT S SOFTWARE, P425, DOI DOI 10.1145/2931037.2931067
   Jabbarvand R, 2019, PROC INT CONF SOFTW, P1119, DOI 10.1109/ICSE.2019.00115
   Jabbarvand R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P208, DOI 10.1145/3106237.3106244
   Jae Kyu Lee, 2011, Proceedings of the 2011 3rd International Conference on Awareness Science and Technology (iCAST), P386, DOI 10.1109/ICAwST.2011.6163105
   Jeong S., 2013, Proceedings of the 2013 USENIX conference on Annual Technical Conference, P309
   Jeong Sooman, 2013, SOFTW ENG 2013 WORKS, P327
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Joo Yongsoo., 2011, FAST, P259
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Jung W, 2012, CODES+ISSS'12:PROCEEDINGS OF THE TENTH ACM INTERNATIONAL CONFERENCE ON HARDWARE/SOFTWARE-CODESIGN AND SYSTEM SYNTHESIS, P353
   Kang Y, 2015, Arxiv, DOI arXiv:1512.07950
   Kang Y, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P410, DOI 10.1145/2950290.2950316
   Karlsson J, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P110, DOI 10.1109/ICRE.1996.491435
   Karlsson J, 1998, INFORM SOFTWARE TECH, V39, P939, DOI 10.1016/S0950-5849(97)00053-0
   Kechagia M, 2015, EMPIR SOFTW ENG, V20, P1785, DOI 10.1007/s10664-014-9343-7
   Khairy A, 2013, INT WIREL COMMUN, P329, DOI 10.1109/IWCMC.2013.6583581
   Khalid H, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P610, DOI 10.1145/2635868.2635909
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Kim D, 2017, PERVASIVE MOB COMPUT, V40, P528, DOI 10.1016/j.pmcj.2017.01.004
   Kim D, 2013, IEEE T CONSUM ELECTR, V59, P556, DOI 10.1109/TCE.2013.6626238
   Kim H., 2013, IEEE T AUTOM SCI ENG, P1, DOI DOI 10.1109/ISR.2013.6695682
   Kim H, 2009, 2009 THIRD IEEE INTERNATIONAL CONFERENCE ON SECURE SOFTWARE INTEGRATION AND RELIABILITY IMPROVEMENT, PROCEEDINGS, P171, DOI 10.1109/SSIRI.2009.28
   Kim H, 2015, IEEE MICRO, V35, P15, DOI 10.1109/MM.2015.9
   Kim JM, 2012, ADV INTEL SOFT COMPU, V133, P667
   Kim J, 2019, IEEE ACCESS, V7, P129930, DOI 10.1109/ACCESS.2019.2937852
   Kim SH, 2017, ACM T EMBED COMPUT S, V16, DOI 10.1145/3126509
   Kim SH, 2016, ACM T EMBED COMPUT S, V15, DOI 10.1145/2894755
   Kim SH, 2015, ACM SIGPLAN NOTICES, V50, P1, DOI 10.1145/2754169.2754179
   Kim SH, 2014, I SYMP CONSUM ELECTR, P27
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kosta S, 2012, IEEE INFOCOM SER, P945, DOI 10.1109/INFCOM.2012.6195845
   Kwon S, 2015, 2015 PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON EMBEDDED SOFTWARE (EMSOFT), P207, DOI 10.1109/EMSOFT.2015.7318276
   Kwon Yongin., 2013, P 2013 USENIX C ANN, P297
   Kwon YW, 2013, PROC IEEE INT CONF S, P170, DOI 10.1109/ICSM.2013.28
   Lane ND, 2010, IEEE COMMUN MAG, V48, P140, DOI 10.1109/MCOM.2010.5560598
   Lee B., 2015, P 6 AS PAC WORKSH SY, P19
   Lee G, 2019, IEEE T MOBILE COMPUT, V18, P871, DOI 10.1109/TMC.2018.2844202
   Lee J, 2017, IEEE J SEL AREA COMM, V35, P1013, DOI 10.1109/JSAC.2017.2676918
   Lee K, 2013, IEEE ACM T NETWORK, V21, P536, DOI 10.1109/TNET.2012.2218122
   Lee S, 2010, INTERNATIONAL CONFERENCE ON CONTROL, AUTOMATION AND SYSTEMS (ICCAS 2010), P1160
   Lee U, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P2327, DOI 10.1145/2556288.2557366
   Li C, 2017, INT WIREL COMMUN, P2169, DOI 10.1109/IWCMC.2017.7986619
   Li D, 2013, P 2013 INT S SOFTW T, P78, DOI DOI 10.1145/2483760.2483780
   Li D, 2016, PROC INT CONF SOFTW, P249, DOI 10.1145/2884781.2884867
   Li D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P527, DOI 10.11455/2568225.2568321
   Li D, 2014, PROC IEEE INT CONF S, P121, DOI 10.1109/ICSME.2014.34
   Li L, 2017, INFORM SOFTWARE TECH, V88, P67, DOI 10.1016/j.infsof.2017.04.001
   Li SS, 2016, J PARALLEL DISTR COM, V95, P124, DOI 10.1016/j.jpdc.2016.02.004
   Li WJ, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P355, DOI [10.1109/saner.2019.8668030, 10.1109/SANER.2019.8668030]
   Lim G, 2013, IEEE ICCE, P649, DOI 10.1109/ICCE.2013.6487055
   Lim SL, 2015, IEEE T SOFTWARE ENG, V41, P40, DOI 10.1109/TSE.2014.2360674
   Lin C.-W., 2014, Proceedings of the 51st Annual Design Automation Conference (DAC'14), P1
   Lin CH, 2014, IEEE T COMPUT, V63, P335, DOI 10.1109/TC.2012.210
   Lin H., 2018, P 2018 55 ACMESDAIEE, P1, DOI DOI 10.1109/DAC.2018.8465887
   Lin HY, 2017, I SYMPOS LOW POWER E
   Lin Y, 2015, IEEE INT CONF AUTOM, P224, DOI 10.1109/ASE.2015.50
   Lin Y, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P341, DOI 10.1145/2635868.2635903
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Linares-Vásquez M, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241742
   Linares-Vásquez M, 2017, J SYST SOFTWARE, V130, P1, DOI 10.1016/j.jss.2017.04.018
   Linares-Vásquez M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P143, DOI 10.1145/2786805.2786847
   Linares-Vásquez M, 2015, PROC IEEE INT CONF S, P352, DOI 10.1109/ICSM.2015.7332486
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Liu YP, 2014, IEEE T SOFTWARE ENG, V40, P911, DOI 10.1109/TSE.2014.2323982
   Lu X, 2016, PROC INT CONF SOFTW, P3, DOI 10.1145/2884781.2884828
   Lyu YJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P310, DOI 10.1145/3213846.3213865
   Ma J, 2017, P INT COMP SOFTW APP, P23, DOI 10.1109/COMPSAC.2017.161
   Mahmoudi M, 2018, IEEE WORK CONF MIN S, P220, DOI 10.1145/3196398.3196434
   Malavolta I, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P17, DOI 10.1109/ICSE-NIER.2019.00013
   Mao B, 2019, IEEE T COMPUT AID D, V38, P1017, DOI 10.1109/TCAD.2018.2834395
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Martin W, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P435, DOI 10.1145/2950290.2950320
   Martins A., 2018, PROC INT C MACH LEAR, P58
   Mazuera-Rozo A, 2020, EMPIR SOFTW ENG, V25, P1644, DOI 10.1007/s10664-019-09795-6
   Metri G, 2014, UBICOMP'14: PROCEEDINGS OF THE 2014 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING, P33, DOI 10.1145/2632048.2632082
   Miettinen A. P., 2010, P 2 USENIX C HOT TOP, V10, P4
   Min Woo Kim, 2012, 2012 International Conference on Information Networking (ICOIN 2012), P468, DOI 10.1109/ICOIN.2012.6164445
   Minelli R, 2013, EUR CON SFTWR MTNCE, P144, DOI 10.1109/CSMR.2013.24
   Ming Mao, 2012, 2012 IEEE 5th International Conference on Cloud Computing (CLOUD), P423, DOI 10.1109/CLOUD.2012.103
   Mittal R, 2012, MOBICOM 12: PROCEEDINGS OF THE 18TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING, P317
   Mohan P., 2013, P 8 ACM EUR C COMP S, P267, DOI DOI 10.1145/2465351.2465378
   Montella R, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.4286
   Morales R, 2018, IEEE T SOFTWARE ENG, V44, P1176, DOI 10.1109/TSE.2017.2757486
   Morisset R, 2017, CC'17: PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION, P1, DOI 10.1145/3033019.3033021
   Morrison A, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173918
   Muhuri PK, 2020, IEEE T FUZZY SYST, V28, P558, DOI 10.1109/TFUZZ.2019.2911049
   Nagata K., 2012, Proceedings of the 2012 8th International Conference on Computing Technology and Information Management (NCM and ICNIT), P76
   Nagata K, 2013, 2013 FIRST INTERNATIONAL SYMPOSIUM ON COMPUTING AND NETWORKING (CANDAR), P636, DOI 10.1109/CANDAR.2013.116
   Nagata K, 2012, 2012 9TH INTERNATIONAL CONFERENCE ON UBIQUITOUS INTELLIGENCE & COMPUTING AND 9TH INTERNATIONAL CONFERENCE ON AUTONOMIC & TRUSTED COMPUTING (UIC/ATC), P578, DOI 10.1109/UIC-ATC.2012.133
   Nguyen D. T., 2013, PROC ACM C PERVASIVE, P319
   Nguyen D.T., 2015, PROC ANN INT C MOBIL, P287, DOI DOI 10.1145/2742647.2742661
   Nguyen DT, 2013, UBICOMP'13: PROCEEDINGS OF THE 2013 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING, P677, DOI 10.1145/2493432.2493505
   Nguyen DP, 2016, COMP SEMICOND INTEGR, P158
   Ning Ding, 2013, Performance Evaluation Review, V41, P29
   Nistor A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P562, DOI 10.1109/ICSE.2013.6606602
   Nistor A, 2013, IEEE WORK CONF MIN S, P237, DOI 10.1109/MSR.2013.6624035
   Nixon K.W., 2014, P 6 USENIX C POWER A, P5
   Noei E, 2017, EMPIR SOFTW ENG, V22, P3088, DOI 10.1007/s10664-017-9507-3
   Nurminen J., 2010, Consumer Communications and Networking Conference (CCNC), 2010, V7th, P1
   Okur S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1117, DOI 10.1145/2568225.2568309
   Ongkosit T., 2014, Proceedings of the 2nd International Workshop on Software Development Lifecycle for Mobile, P1
   Oshin T. O., 2012, 2012 IEEE 11th International Conference on Trust, Security and Privacy in Computing and Communications (TrustCom), P1698, DOI 10.1109/TrustCom.2012.184
   Padmanabhan V. N., 1996, Computer Communication Review, V26, P22, DOI 10.1145/235160.235164
   Paek J., 2010, Proceedings of the 8th international conference on Mobile systems, applications, and services, P299
   Parate A, 2013, UBICOMP'13: PROCEEDINGS OF THE 2013 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING, P275, DOI 10.1145/2493432.2493490
   Pathak A., 2012, Mobisys, DOI DOI 10.1145/2307636.2307661
   Pathak Abhijit D., 2012, Proceedings of the PCIM ASIA 2012. International Conference and Exhibition for Power Electronics, Intelligent Motion, Renewable Energy and Energy Management, P29
   Pathak A, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P153
   Petke J, 2018, IEEE T EVOLUT COMPUT, V22, P415, DOI 10.1109/TEVC.2017.2693219
   Vu PM, 2015, IEEE INT CONF AUTOM, P749, DOI 10.1109/ASE.2015.85
   Prodduturi R, 2013, EFFECTIVE HANDLING L
   Pyles AR, 2012, UBICOMP'12: PROCEEDINGS OF THE 2012 ACM INTERNATIONAL CONFERENCE ON UBIQUITOUS COMPUTING, P11
   Pyles AJ, 2011, UBICOMP'11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON UBIQUITOUS COMPUTING, P325
   Qian H, 2015, INT J NETW DISTRIB C, V3, P150
   Ra M.-R., 2010, 8th International Conference on Mobile systems, Applications, and Services, P255
   Ra M.-R., 2011, P 9 INT C MOB SYST A, P43
   Rao K, 2017, INT S HIGH PERF COMP, P169, DOI 10.1109/HPCA.2017.32
   ROMAN GC, 1985, COMPUTER, V18, P14
   Saarinen A, 2012, ACM SIGCOMM COMP COM, V42, P297, DOI 10.1145/2377677.2377739
   Saarinen Aki., 2012, Proceedings of the seventh ACM international workshop on Mobility in the evolving internet architecture, P3
   Saborido R, 2018, EMPIR SOFTW ENG, V23, P2829, DOI 10.1007/s10664-018-9607-8
   Saborido R, 2017, INT C PROGRAM COMPRE, P143, DOI 10.1109/ICPC.2017.25
   Saborido R, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P438, DOI 10.1109/SANER.2016.64
   Sadeghi A, 2017, IEEE T SOFTWARE ENG, V43, P492, DOI 10.1109/TSE.2016.2615307
   Sahin Cagri., 2014, Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, p36:1, DOI 10.1145/2652524.2652538
   Santhanakrishnan G, 2016, INTERNATIONAL CONFERENCE ON INFORMATION SOCIETY (I-SOCIETY 2016), P133, DOI 10.1109/i-Society.2016.7854196
   Schubert S, 2012, 2012 IEEE INTERNATIONAL CONFERENCE ON GREEN COMPUTING AND COMMUNICATIONS, CONFERENCE ON INTERNET OF THINGS, AND CONFERENCE ON CYBER, PHYSICAL AND SOCIAL COMPUTING (GREENCOM 2012), P515, DOI 10.1109/GreenCom.2012.86
   Shahriar H, 2014, IEEE HI ASS SYS ENGR, P176, DOI 10.1109/HASE.2014.32
   Shepard C., 2011, ACM SIGMETRICS Performance Evaluation Review, V38, P15, DOI /10.1145/1925019.1925023
   Shin C, 2012, UBICOMP'12: PROCEEDINGS OF THE 2012 ACM INTERNATIONAL CONFERENCE ON UBIQUITOUS COMPUTING, P173, DOI 10.1145/2370216.2370243
   Shuai Hao, 2012, 2012 First International Workshop on Green and Sustainable Software (GREENS), P1, DOI 10.1109/GREENS.2012.6224263
   Shye Alex, 2009, Proceedings of the 2009 42nd Annual IEEE/ACM International Symposium on Microarchitecture (MICRO 2009), P168, DOI 10.1145/1669112.1669135
   Singh A, 2016, 2016 INTERNATIONAL CONFERENCE ON INTERNET OF THINGS AND APPLICATIONS (IOTA), P112, DOI 10.1109/IOTA.2016.7562705
   Sinha A, 2001, DES AUT CON, P220, DOI 10.1109/DAC.2001.935508
   Song W, 2014, ACM T EMBED COMPUT S, V13, DOI 10.1145/2544375.2544380
   Stephenson M, 2015, 2015 ACM/IEEE 42ND ANNUAL INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE (ISCA), P185, DOI 10.1145/2749469.2750375
   Sylve J, 2012, DIGIT INVEST, V8, P175, DOI 10.1016/j.diin.2011.10.003
   Tasneem Kashif, 2019, INT J COMPUTER APPL, V182, P36
   Thongkaew S., 2015, J INF PROCESS, V23, P118
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Tolia N, 2006, COMPUTER, V39, P46, DOI 10.1109/MC.2006.101
   Tseng PH, 2014, DES AUT CON
   Vall ~ee-Rai R., 2010, CASCON 1 DECADE HIGH, P214, DOI DOI 10.1145/1925805.1925818
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Vimal K, 2015, PROCEEDINGS OF THE 2015 IEEE RECENT ADVANCES IN INTELLIGENT COMPUTATIONAL SYSTEMS (RAICS), P162, DOI 10.1109/RAICS.2015.7488407
   Wan M, 2015, IEEE ICST WORKSHOP
   Wang Y, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P48, DOI [10.1145/2897073.2897097, 10.1109/MobileSoft.2016.029]
   Welke P, 2016, UBICOMP'16: PROCEEDINGS OF THE 2016 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING, P519, DOI 10.1145/2971648.2971707
   Willocx M, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P38, DOI [10.1145/2897073.2897092, 10.1109/MobileSoft.2016.028]
   Wohlin C., 2012, Experimentation in Software Engineering
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
   Xia M., 2013, PROC WORKSHOP POWER, P1
   Xiao Y., 2010, Proc. 1st Int. Conf. on Energy-efficient Computing and Networking, P75
   Xu GQ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P151, DOI 10.1145/1368088.1368110
   Yan Tingxin, 2012, P 10 INT C MOB SYST, P113, DOI 10.1145/2307636
   Yang SQ, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON THE ENGINEERING OF MOBILE-ENABLED SYSTEMS (MOBS), P1, DOI 10.1109/MOBS.2013.6614215
   Yang Y, 2018, IEEE T WIREL COMMUN, V17, P693, DOI 10.1109/TWC.2017.2769646
   Zhang JP, 2019, IEEE C ELEC DEVICES, DOI 10.1109/edssc.2019.8753994
   Zhang L, 2013, IEEE SENS J, V13, P3775, DOI 10.1109/JSEN.2013.2274074
   Zhang LD, 2012, CODES+ISSS'12:PROCEEDINGS OF THE TENTH ACM INTERNATIONAL CONFERENCE ON HARDWARE/SOFTWARE-CODESIGN AND SYSTEM SYNTHESIS, P363
   Zhang L, 2010, PROCEEDINGS OF 2010 INTERNATIONAL CONFERENCE ON PUBLIC ADMINISTRATION (6TH), VOL II, P105, DOI 10.1145/1878961.1878982
   Zhang L, 2013, IEEE INT CONF AUTOM, P4, DOI 10.1109/ASE.2013.6693061
   Zhang M., 2011, P 10 ACM WORKSH HOT, P1
   Zhao WH, 2019, PROC IEEE INT CONF S, P449, DOI 10.1109/ICSME.2019.00077
   Zhao X, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P603
   Zhao YX, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P176, DOI 10.1145/3180155.3180249
   Zhao ZJ, 2014, UBICOMP'14: PROCEEDINGS OF THE 2014 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING, P21, DOI 10.1145/2632048.2632080
   Zhong K, 2016, IEEE T COMPUT AID D, V35, P1577, DOI 10.1109/TCAD.2015.2512904
   Zhong K, 2014, 2014 INTERNATIONAL CONFERENCE ON EMBEDDED SOFTWARE (EMSOFT), DOI 10.1145/2656045.2656049
   Zhuang Z., 2010, P 8 INT C MOB SYST A, P315, DOI DOI 10.1145/1814433.1814464
   Zou X., 2013, P ACM C PERV UB COMP, P167
NR 296
TC 14
Z9 14
U1 4
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 2879
EP 2904
DI 10.1109/TSE.2021.3071193
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500011
OA Green Published
DA 2024-07-18
ER

PT J
AU Li, ZX
   Yu, Y
   Wang, T
   Yin, G
   Li, SS
   Wang, HM
AF Li, Zhixing
   Yu, Yue
   Wang, Tao
   Yin, Gang
   Li, ShanShan
   Wang, Huaimin
TI Are You Still Working on This? An Empirical Study on Pull Request
   Abandonment
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tools; Collaboration; Sustainable development; Open source software;
   Manuals; Maintenance engineering; Computer bugs; Pull request
   abandonment; pull-based development; open source software
ID MOTIVATIONS; DEVELOPERS
AB The great success of numerous community-based open source software (OSS) is based on volunteers continuously submitting contributions, but ensuring sustainability is a persistent challenge in OSS communities. Although the motivations behind and barriers to OSS contributors' joining and retention have been extensively studied, the impacts of, reasons for and solutions to contribution abandonment at the individual level have not been well studied, especially for pull-based development. To bridge this gap, we present an empirical study on pull request abandonment based on a sizable dataset. We manually examine 321 abandoned pull requests on GitHub and then quantify the manual observations by surveying 710 OSS developers. We find that while the lack of integrators' responsiveness and the lack of contributors' time and interest remain the main reasons that deter contributors from participation, limitations during the processes of patch updating and consensus reaching can also cause abandonment. We also show the significant impacts of pull request abandonment on project management and maintenance. Moreover, we elucidate the strategies used by project integrators to cope with abandoned pull requests and highlight the need for a practical handover mechanism. We discuss the actionable suggestions and implications for OSS practitioners and tool builders, which can help to upgrade the infrastructure and optimize the mechanisms of OSS communities.
C1 [Li, Zhixing; Yu, Yue; Wang, Tao; Yin, Gang; Wang, Huaimin] Natl Univ Def Technol, Coll Comp, Key Lab Parallel & Distributed Comp, Changsha 410073, Hunan, Peoples R China.
   [Li, ShanShan] Natl Univ Def Technol, Coll Comp, Changsha 410073, Hunan, Peoples R China.
C3 National University of Defense Technology - China; National University
   of Defense Technology - China
RP Yu, Y (corresponding author), Natl Univ Def Technol, Coll Comp, Key Lab Parallel & Distributed Comp, Changsha 410073, Hunan, Peoples R China.
EM lizhixing15@nudt.edu.cn; yuyue@nudt.edu.cn; taowang2005@nudt.edu.cn;
   yingang@nudt.edu.cn; shanshanli@nudt.edu.cn; hmwang@nudt.edu.cn
RI Li, Shanshan/HLH-7747-2023
OI Li, Zhixing/0000-0002-7981-5418; Yu, Yue/0000-0002-9865-2212
FU National Grand RD Plan Grant [2020AAA0103504]; National Natural Science
   Foundation of China [61702534]
FX This work was supported by National Grand R&D Plan Grant No.
   2020AAA0103504 and National Natural Science Foundation of China Grant
   No. 61702534.
CR [Anonymous], 2021, LIST 20 LESS POPULAR
   [Anonymous], 2020, SurveyMonkey
   [Anonymous], 2013, P 16 C COMP SUPP COO
   [Anonymous], 2020, CHECKSTYLE
   [Anonymous], 2021, SURVEYS
   [Anonymous], 2020, SLACK
   [Anonymous], 2011, P 19 ACM SIGSOFT S 1
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Begel A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P12, DOI 10.1145/2568225.2568233
   Bonaccorsi A., 2006, Knowledge Technology & Policy, V18, P40, DOI 10.1007/s12130-006-1003-9
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Borst JP, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2971, DOI 10.1145/2702123.2702156
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Campbell JL, 2013, SOCIOL METHOD RES, V42, P294, DOI 10.1177/0049124113500475
   Izquierdo JLC, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P479, DOI 10.1109/SANER.2015.7081860
   Crowston K., 2005, First Monday, V10, DOI 10.5210/fm.v10i2.1207
   Crowston K., 2006, P IEEE 39 HAW INT C, DOI DOI 10.1109/HICSS.2006.101
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Di Penta Massimiliano, 2012, P ACM SIGSOFT 20 INT, P1
   Fagerholm Fabian, 2014, P 8 ACM IEEE INT S E, DOI DOI 10.1145/2652524.2652540
   Foucault M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P829, DOI 10.1145/2786805.2786870
   Gamalielsson J, 2014, J SYST SOFTWARE, V89, P128, DOI 10.1016/j.jss.2013.11.1077
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Groves R. M., 2011, Survey methodology
   Gumm DC, 2006, IEEE SOFTWARE, V23, P45, DOI 10.1109/MS.2006.122
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   Hannebauer Christoph., 2014, Proceedings of the 1st International Workshop on CrowdSourcing in Software Engineering, CSI-SE 2014, P11
   Hars A, 2002, INT J ELECTRON COMM, V6, P25
   Hilton M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P197, DOI 10.1145/3106237.3106270
   Huang WJ, 2016, ACM CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW 2016), P717, DOI 10.1145/2818048.2819950
   Iaffaldano G, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON SOFTWARE HEALTH (SOHEAL 2019), P9, DOI 10.1109/SoHeal.2019.00009
   Iyer RN, 2021, IEEE T SOFTWARE ENG, V47, P2632, DOI 10.1109/TSE.2019.2960357
   Izquierdo-Cortazar D., 2009, 2009 42 HAW INT C SY, P1, DOI DOI 10.1109/HICSS.2009.498
   Kavaler D, 2019, EMPIR SOFTW ENG, V24, P3904, DOI 10.1007/s10664-019-09728-3
   Kononenko O, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P124, DOI 10.1145/3183519.3183542
   Lakhani K.R., 2005, Perspectives on free and open source software, P3, DOI DOI 10.2139/SSRN.443040
   Lee A, 2017, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2017.25
   Li ZX, 2022, IEEE T SOFTWARE ENG, V48, P1309, DOI 10.1109/TSE.2020.3018726
   Lin B, 2017, INT CONF GLOBAL SOFT, P66, DOI 10.1109/ICGSE.2017.11
   Ma WWY, 2017, PROC INT CONF SOFTW, P381, DOI 10.1109/ICSE.2017.42
   Manotas I, 2016, PROC INT CONF SOFTW, P237, DOI 10.1145/2884781.2884810
   Miller C, 2019, IFIP ADV INF COMM TE, V556, P116, DOI 10.1007/978-3-030-20883-7_11
   O'Grady NP, 2002, CLIN INFECT DIS, V35, P1281, DOI 10.1086/502007
   Overney C, 2020, PROC INT CONF SOFTW, P1209, DOI 10.1145/3377811.3380410
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Parkinson C.N., 1957, PARKINSONS LAW PURSU
   Pinto G, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P110, DOI 10.1145/3195836.3195858
   Pinto G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P112, DOI 10.1109/SANER.2016.68
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   Qiu HS, 2019, PROC INT CONF SOFTW, P688, DOI 10.1109/ICSE.2019.00078
   Rastogi A, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240504
   Rastogi A, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P665, DOI 10.1145/2889160.2891035
   Raymond Eric, 1999, KNOWLEDGE TECHNOLOGY, V12, P23, DOI DOI 10.1007/S12130-999-1026-0
   Roberts JA, 2006, MANAGE SCI, V52, P984, DOI 10.1287/mnsc.1060.0554
   Schilling A., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P3446, DOI 10.1109/HICSS.2012.644
   Shihab E, 2009, PROC IEEE INT CONF S, P147, DOI 10.1109/ICSM.2009.5306333
   Spencer D., 2009, CARD SORTING DESIGNI
   Steinmacher I, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P256, DOI 10.1145/3180155.3180208
   Steinmacher I, 2016, PROC INT CONF SOFTW, P273, DOI 10.1145/2884781.2884806
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Steinmacher I, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P25, DOI 10.1109/CHASE.2013.6614728
   Storey Margaret-Anne, 2013, P 2013 C COMPUTER SU, P103
   Terrell J, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.111
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   van der Veen E, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P357, DOI 10.1109/MSR.2015.40
   Vasilescu B, 2016, PROC INT CONF SOFTW, P994, DOI 10.1145/2884781.2884875
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Wessel Mairieli, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274451
   Wolf M. J., 2002, ACM SIGCSE B, V34, P317
   Wolff-Marting Vincent, 2013, 2013 IEEE 12th International Conference on Intelligent Software Methodologies, Tools and Techniques (SoMeT 2013), P9, DOI 10.1109/SoMeT.2013.6645669
   Ye YW, 2003, PROC INT CONF SOFTW, P419
   Yu Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P367, DOI 10.1109/MSR.2015.42
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
   Zhou SR, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P350, DOI 10.1145/3338906.3338918
   Zhu JX, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P871, DOI 10.1145/2950290.2950364
   Zimmermann T, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P137
   Zou WQ, 2021, IEEE T SOFTWARE ENG, V47, P2084, DOI 10.1109/TSE.2019.2942301
   Zou WQ, 2019, EMPIR SOFTW ENG, V24, P3871, DOI 10.1007/s10664-019-09720-x
NR 82
TC 12
Z9 16
U1 1
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2022
VL 48
IS 6
BP 2173
EP 2188
DI 10.1109/TSE.2021.3053403
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2D5IM
UT WOS:000811580600021
DA 2024-07-18
ER

PT J
AU Hussain, W
   Perera, H
   Whittle, J
   Nurwidyantoro, A
   Hoda, R
   Shams, RA
   Oliver, G
AF Hussain, Waqar
   Perera, Harsha
   Whittle, Jon
   Nurwidyantoro, Arif
   Hoda, Rashina
   Shams, Rifat Ara
   Oliver, Gillian
TI Human Values in Software Engineering: Contrasting Case Studies of
   Practice
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Software engineering; Privacy; Security; Companies; Human
   factors; Artificial intelligence; Engineering human values; software
   engineering; human values in software practice; challenges in human
   values; case studies of practice; ethics; responsible innovations;
   non-functional requirements
ID FRAMEWORK; PRIVACY; DESIGN; IMPACT
AB The growing diffusion of software in society and its influence on people demands from its creators that their work carefully considers human values such as transparency, social responsibility, and equality. But how do software practitioners address human values in software engineering practice? We interviewed 31 software practitioners from two organizations, each having a strong values framework, with the aim to understand: (a) practitioners' perceptions of human values and their role in software engineering; (b) practices that practitioners use to address human values in software; and (c) challenges they face during this process. We report our findings from two contrasting case organizations on how practitioners "engineer" values in their unique organizational settings. We found evidence that organizational culture significantly contributes to how values are addressed in software. We summarize recommendations from the practitioners to support proactive engineering of values-conscious software.
C1 [Hussain, Waqar; Perera, Harsha; Whittle, Jon; Nurwidyantoro, Arif; Hoda, Rashina; Shams, Rifat Ara; Oliver, Gillian] Monash Univ, Fac Infrmat Technol, Clayton, Vic 3800, Australia.
C3 Monash University
RP Hussain, W (corresponding author), Monash Univ, Fac Infrmat Technol, Clayton, Vic 3800, Australia.
EM Waqar.Hussain@monash.edu; Harsha.Perera@monash.edu;
   Jon.Whittle@monash.edu; Arif.Nurwidyantoro@monash.edu;
   Rashina.Hoda@monash.edu; Rifat.Shams@monash.edu;
   Gillian.Oliver@monash.edu
RI Nurwidyantoro, Arif/GOP-1594-2022; Oliver, Gillian C/A-7845-2010
OI Nurwidyantoro, Arif/0000-0001-8683-3078; Hussain,
   Waqar/0000-0003-1508-4174; Shams, Rifat Ara/0000-0002-9426-3068; Oliver,
   Gillian/0000-0003-2943-5035; Perera, Harsha/0000-0002-1662-3208; Hoda,
   Rashina/0000-0001-5147-8096
CR Aldewereld Huib, 2015, Design for values information and communication technologies in software development, P831
   Almaliki M, 2015, INT CONF RES CHAL, P100, DOI 10.1109/RCIS.2015.7128868
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2008, GUIDE ADV EMPIRICAL
   [Anonymous], 2012, P SIGCHI C HUM FACT, DOI DOI 10.1145/2207676.2208562
   Barceló JA, 2014, SOC SCI COMPUT REV, V32, P417, DOI 10.1177/0894439313511943
   Bardi A, 2009, J PERS SOC PSYCHOL, V97, P913, DOI 10.1037/a0016617
   Baxter P, 2008, QUAL REP, V13, P544
   BIRD F, 1987, J BUS ETHICS, V6, P1, DOI 10.1007/BF00382943
   Blincoe K, 2019, IEEE SOFTWARE, V36, P51, DOI 10.1109/MS.2019.2917428
   Braun V., 2012, APA HDB RES METHODS, P57, DOI [https://doi.org/10.1037/13620-004, 10.1007/978-981-10-2779-6_103-1, 10.1037/13620-004]
   Burnett M, 2016, INTERACT COMPUT, V28, P760, DOI 10.1093/iwc/iwv046
   Cao L, 2009, EUR J INFORM SYST, V18, P332, DOI 10.1057/ejis.2009.26
   Cath C, 2018, PHILOS T R SOC A, V376, DOI 10.1098/rsta.2018.0080
   Cheng An-Shou, 2010, Proceedings of the American Society for Information Science and Technology, V47, DOI [DOI 10.1002/meet.14504701232, 10.1002/meet.14504701232, DOI 10.1002/MEET.14504701232]
   Cope DG, 2014, ONCOL NURS FORUM, V41, P89, DOI 10.1188/14.ONF.89-91
   Dawson D., 2019, ARTIFICIAL INTELLIGE
   Detweiler C., 2014, P REFSQ WORKSH, P2
   Edelman, 2018, BRANDS TAKE STAND
   Ferrario MA, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P553, DOI 10.1145/2889160.2889219
   Ferretti L, 2020, SCIENCE, V368, P619, DOI 10.1126/science.abb6936
   Fowler M., 2001, Software Development, V9, P28
   Friedman B, 2013, PHILOS ENG TECHNOL, V16, P55, DOI 10.1007/978-94-007-7844-3_4
   Gralla P., 2016, AMAZON PRIME RACIST
   Graziotin D, 2015, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.18
   Graziotin D, 2014, PEERJ, V2, DOI 10.7717/peerj.289
   Houghton Catherine, 2013, Nurse Res, V20, P12
   Jurkiewicz CL, 2004, J BUS ETHICS, V49, P129, DOI 10.1023/B:BUSI.0000015843.22195.b9
   Khan IA, 2011, COGN TECHNOL WORK, V13, P245, DOI 10.1007/s10111-010-0164-1
   Kollewe Julia, 2016, VW PROFITS 20 DIESEL
   Kujala S., 2009, Journal of Information Technology Theory and Application (JITTA), V9, P4
   Lindberg T, 2011, UNDERST INNOV, P3, DOI 10.1007/978-3-642-13757-0_1
   Mellblom E, 2019, IEEE SOFTWARE, V36, P57, DOI 10.1109/MS.2019.2924769
   Mougouei D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P780, DOI 10.1145/3236024.3264843
   Mulholland M., 2018, OUR SHARED RESPONSIB
   Müller SC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P688, DOI 10.1109/ICSE.2015.334
   Norman RMG, 2010, SOC PSYCH PSYCH EPID, V45, P751, DOI 10.1007/s00127-009-0117-2
   Pachal P, 2015, GOOGLE PHOTOS IDENTI
   Parmelee M., 2019, A generation disrupted
   Patton M. Q, 2004, Qualitative research & evaluation methods, V4
   Perera C, 2020, INFORM SCIENCES, V512, P238, DOI 10.1016/j.ins.2019.09.061
   Perera H, 2020, PROC INT CONF SOFTW, P409, DOI 10.1145/3377811.3380393
   Perera H, 2019, INT REQUIR ENG CONF, P404, DOI 10.1109/RE.2019.00053
   Persad Umesh, 2007, Universal Access in the Information Society, V6, P119, DOI 10.1007/s10209-007-0083-y
   Peters AK, 2015, INT CONF GLOBAL SOFT, P61, DOI 10.1109/ICGSE.2015.20
   Poels K, 2012, CYBERPSYCH BEH SOC N, V15, P1, DOI 10.1089/cyber.2010.0040
   Raso F. A., 2018, ARTIF INTELL, V2018
   Ravi K. V. V. N, 2016, US Patent, Patent No. [9,250,884, 9250884]
   Regulation P., 2016, Regulation (eu), V679
   Rierson L., 2017, Developing Safety-Critical Software: A Practical Guide for Aviation Software and DO-178C Compliance
   Rokeach M., NATURE HUMAN VALUES
   Sablich Justin, 2017, PRICE GOUGING HURRIC
   Schneidewind L., 2012, 2012 First International Workshop on Usability and Accessibility Focused Requirements Engineering (UsARE), P1, DOI 10.1109/UsARE.2012.6226786
   Schön EM, 2017, COMPUT STAND INTER, V49, P79, DOI 10.1016/j.csi.2016.08.011
   Schwaber K., 2011, Scrum Alliance, V21, P19, DOI [10.1002/9781119203278.app2, DOI 10.1002/9781119203278.APP2]
   Schwartz S.H., 2007, Risorsa Uomo, V13, P261
   Schwartz SH, 1999, APPL PSYCHOL-INT REV, V48, P23, DOI 10.1080/026999499377655
   SCHWARTZ SH, 1994, J SOC ISSUES, V50, P19, DOI 10.1111/j.1540-4560.1994.tb01196.x
   SCHWARTZ SH, 1992, ADV EXP SOC PSYCHOL, V25, P1, DOI 10.1016/s0065-2601(08)60281-6
   Schwartz SH, 2012, J PERS SOC PSYCHOL, V103, P663, DOI 10.1037/a0029393
   Seckler M, 2015, COMPUT HUM BEHAV, V45, P39, DOI 10.1016/j.chb.2014.11.064
   Serebrenik A, 2017, CEUR WORKSHOP PROC, P1
   Simoes J, 2013, COMPUT HUM BEHAV, V29, P345, DOI 10.1016/j.chb.2012.06.007
   Smith EK, 2016, 9TH IEEE/ACM INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2016), P15, DOI [10.1145/2897586.2897596, 10.1109/CHASE.2016.011]
   Spiekermann S., 2017, Proceedings, V1, P159, DOI DOI 10.3390/IS4SI-2017-04084
   Spiekermann S, 2019, P IEEE, V107, P600, DOI 10.1109/JPROC.2018.2866769
   Thew S, 2018, REQUIR ENG, V23, P443, DOI 10.1007/s00766-017-0273-y
   Van den Hoven J., 2015, HDB ETHICS VALUES TE, DOI DOI 10.1007/978-94-007-6970-0
   Walker S, 2015, VALUES MOST VALUED U
   Winter E, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267427
   Yin R.K., 2017, Case Study Research and Applications: Design and Methods
   Zakour A.Ben., 2004, Proceedings of the 7th Annual Conference of the Southern Association for Information Systems, P156
NR 72
TC 22
Z9 23
U1 10
U2 30
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2022
VL 48
IS 5
BP 1818
EP 1833
DI 10.1109/TSE.2020.3038802
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 1I8CJ
UT WOS:000797454000021
DA 2024-07-18
ER

PT J
AU Rodríguez-Pérez, G
   Nagappan, M
   Robles, G
AF Rodriguez-Perez, Gema
   Nagappan, Meiyappan
   Robles, Gregorio
TI Watch Out for Extrinsic Bugs! A Case Study of Their Impact in
   Just-In-Time Bug Prediction Models on the OpenStack Project
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Predictive models; Software; Data models; Control
   systems; Analytical models; Context modeling; Bugs; extrinsic bugs;
   intrinsic bugs; mislabeled bugs; bug-introducing changes; just-in-time;
   bug prediction
AB Intrinsic bugs are bugs for which a bug-introducing change can be identified in the version control system of a software. In contrast, extrinsic bugs are caused by external changes to a software, such as errors in external APIs; thereby they do not have an explicit bug-introducing change in the version control system. Although most previous research literature has assumed that all bugs are of intrinsic nature, in a previous study, we show that not all bugs are intrinsic. This paper shows an example of how considering extrinsic bugs can affect software engineering research. Specifically, we study the impact of extrinsic bugs in Just-In-Time bug prediction by partially replicating a recent study by McIntosh and Kamei on JIT models. These models are trained using properties of earlier bug-introducing changes. Since extrinsic bugs do not have bug-introducing changes in the version control system, we manually curate McIntosh and Kamei's dataset to distinguish between intrinsic and extrinsic bugs. Then, we address their original research questions, this time removing extrinsic bugs, to study whether bug-introducing changes are a moving target in Just-In-Time bug prediction. Finally, we study whether characteristics of intrinsic and extrinsic bugs are different. Our results show that intrinsic and extrinsic bugs are of different nature. When removing extrinsic bugs the performance is different up to 16 percent Area Under the Curve points. This indicates that our JIT models obtain a more accurate representation of the real world. We conclude that extrinsic bugs negatively impact Just-In-Time models. Furthermore, we offer evidence that extrinsic bugs should be further investigated, as they can significantly impact how software engineers understand bugs.
C1 [Rodriguez-Perez, Gema; Nagappan, Meiyappan] Univ Waterloo, Waterloo, ON N2L 3G1, Canada.
   [Robles, Gregorio] Univ Rey Juan Carlos, Madrid, Spain.
C3 University of Waterloo; Universidad Rey Juan Carlos
RP Rodríguez-Pérez, G (corresponding author), Univ Waterloo, Waterloo, ON N2L 3G1, Canada.
EM gema.rodriguez-perez@uwaterloo.ca; mei.nagappan@uwaterloo.ca;
   grex@gsyc.urjc.es
RI Rodríguez-Pérez, Gema/AAN-7844-2020; Robles, Gregorio/I-2507-2012
OI Rodríguez-Pérez, Gema/0000-0002-0062-8418; Robles,
   Gregorio/0000-0002-1442-6761; Nagappan, Meiyappan/0000-0003-4533-4728
FU Government of Spain through project "BugBirth" [RTI2018-101963-B-100]
FX We acknowledge the support of the Government of Spain through project
   "BugBirth" (RTI2018-101963-B-100). Many thanks to JJ Merchante, who
   devoted tons of hours to classify bugs. We would like to thank as well
   McIntosh and Kamei for their invaluable support, and J.M.
   Gonzalez-Barahona, A. Serebrenik, A. Zaidman, and D.M. German for their
   invaluable feedback and discussions.
CR Ahluwalia A, 2019, IEEE WORK CONF MIN S, P63, DOI 10.1109/MSR.2019.00019
   [Anonymous], 2008, Guide to Advanced Empirical Software Engineering
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Chen T, 2014, PROCEEDINGS OF THE FIFTH INTERNATIONAL SYMPOSIUM ON TEST AUTOMATION & INSTRUMENTATION, VOLS 1 AND 2, P82
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Di Nucci D, 2018, IEEE T SOFTWARE ENG, V44, P5, DOI 10.1109/TSE.2017.2659747
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   German DM, 2009, INFORM SOFTWARE TECH, V51, P1394, DOI 10.1016/j.infsof.2009.04.018
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Gooch J.W., 2011, Encyclopedic Dictionary of Polymers
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nayrolles M, 2018, IEEE WORK CONF MIN S, P153, DOI 10.1145/3196398.3196438
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Prechelt L, 2014, INFORM SOFTWARE TECH, V56, P1377, DOI 10.1016/j.infsof.2014.05.001
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Rodr ~iguez-Perez G, 2018, P 12 INT S EMP SOFTW
   Rodríguez-Pérez G, 2020, EMPIR SOFTW ENG, V25, P1294, DOI 10.1007/s10664-019-09781-y
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Rodríguez-Pérez G, 2016, IFIP ADV INF COMM TE, V472, P192, DOI 10.1007/978-3-319-39225-7_16
   Seiffert C, 2014, INFORM SCIENCES, V259, P571, DOI 10.1016/j.ins.2010.12.016
   Shihab E., 2012, P ACM SIGSOFT 20 INT, P1
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Whitley E, 2002, CRIT CARE, V6, P509, DOI 10.1186/cc1820
   Williams C, 2008, P 2008 WORKSHOP DEFE, P32
   Wohlin C., 2012, Experimentation in Software Engineering
   ZELLER A, 2011, P 5 INT WORKSH COMP, P482
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zhou MH, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P271, DOI 10.1145/1985793.1985831
NR 52
TC 18
Z9 18
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2022
VL 48
IS 4
BP 1400
EP 1416
DI 10.1109/TSE.2020.3021380
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 0N4HC
UT WOS:000782799700017
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Do, LNQ
   Wright, JR
   Ali, K
AF Do, Lisa Nguyen Quang
   Wright, James R.
   Ali, Karim
TI Why Do Software Developers Use Static Analysis Tools? A User-Centered
   Study of Developer Needs and Motivations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tools; Static analysis; Usability; Industries; Computer bugs; Security;
   Program analysis; development tools; integrated environments; graphical
   environments; usability
AB As increasingly complex software is developed every day, a growing number of companies use static analysis tools to reason about program properties ranging from simple coding style rules to more advanced software bugs, to multi-tier security vulnerabilities. While increasingly complex analyses are created, developer support must also be updated to ensure that the tools are used to their best potential. Past research in the usability of static analysis tools has primarily focused on usability issues encountered by software developers, and the causes of those issues in analysis tools. In this article, we adopt a more user-centered approach, and aim at understanding why software developers use analysis tools, which decisions they make when using those tools, what they look for when making those decisions, and the motivation behind their strategies. This approach allows us to derive new tool requirements that closely support software developers (e.g., systems for recommending warnings to fix that take developer knowledge into account), and also open novel avenues for further static-analysis research such as collaborative user interfaces for analysis warnings.
C1 [Do, Lisa Nguyen Quang] Paderborn Univ, D-33102 Paderborn, Germany.
   [Wright, James R.; Ali, Karim] Univ Alberta, Edmonton, AB T6G 2R3, Canada.
C3 University of Paderborn; University of Alberta
RP Do, LNQ (corresponding author), Paderborn Univ, D-33102 Paderborn, Germany.
EM lisa.nguyen@upb.de; james.wright@ualberta.ca; karim.ali@ualberta.ca
OI Nguyen Quang Do, Lisa/0000-0003-3146-7968; Wright,
   James/0000-0001-9622-5842
FU Heinz Nixdorf Foundation; BMBF within the Software Campus initiative;
   DFG project RUNSECURE; NRW Research Training Group on Human Centered
   Systems Security (nerd.nrw); Canadian Institute for Advanced Research
   (CIFAR); Natural Sciences and Engineering Research Council of Canada
   (NSERC)
FX We thank Software AG for making this work possible. This research has
   been partially funded by the Heinz Nixdorf Foundation, by the BMBF
   within the Software Campus initiative, the DFGproject RUNSECURE,
   theNRWResearch Training Group on Human Centered Systems Security
   (nerd.nrw), the Canadian Institute for Advanced Research (CIFAR), and
   the Natural Sciences and Engineering Research Council of Canada (NSERC).
CR Ali K., ARTIFACTS WHY SOFTWA
   [Anonymous], 2002, RTI PROJECT
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Ayewah N., 2008, P 2008 WORKSH DEF LA, P1, DOI DOI 10.1145/1390817.1390819
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   CERN Computer Security, STAT COD AN TOOLS
   Checkmarx, CHECKM HOM PAG
   Checkstyle, CHECKST HOM PAG
   Christakis M, 2016, IEEE INT CONF AUTOM, P332, DOI 10.1145/2970276.2970347
   Do LNQ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P714, DOI 10.1145/3236024.3264830
   Do LNQ, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P307, DOI 10.1145/3092703.3092705
   F. Software, FORT HOM PAG
   Grammatech, COD HOM PAG
   Haihao Shen, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P299, DOI 10.1109/ICST.2011.51
   JetBrains, INT HOM PAG
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Layman Lucas, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P176
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Lowdermilk T., 2013, User-centered design: A developer's guide to building user-friendly applications
   Man-Ching Yuen, 2011, Proceedings of the 2011 IEEE Third International Conference on Privacy, Security, Risk and Trust and IEEE Third International Conference on Social Computing (PASSAT/SocialCom 2011), P766, DOI 10.1109/PASSAT/SocialCom.2011.203
   Moller A., 2017, Static program analysis
   Nanda M. G., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P99, DOI 10.1145/1810295.1810310
   Nguyen Quang Do L, 2020, IEEE T SOFTWARE ENG, P1, DOI DOI 10.1109/TSE.2020.3004525
   OWASP, SOURC COD AN TOOLS
   Software AG, SOFTW AG
   Synopsys, COV HOM PAG
   U. D. of Health & Human Services, US CTR DES BAS
   Vassallo C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P38, DOI 10.1109/SANER.2018.8330195
   Vorobyov K., 2010, P SSV, P1
NR 30
TC 26
Z9 27
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2022
VL 48
IS 3
BP 835
EP 847
DI 10.1109/TSE.2020.3004525
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZU6ZO
UT WOS:000769989900007
DA 2024-07-18
ER

PT J
AU da Silva, JR
   Campagna, DP
   Clua, E
   Sarma, A
   Murta, L
AF da Silva Junior, Jose Ricardo
   Campagna, Daniel Prett
   Clua, Esteban
   Sarma, Anita
   Murta, Leonardo
TI Dominoes: An Interactive Exploratory Data Analysis Tool for Software
   Relationships
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tiles; Data mining; Graphics processing units; Tools; Feature
   extraction; Design tools and techniques; interactive data exploration
   and discovery; evaluation; methodology
ID INFORMATION; SYSTEM
AB Project comprehension questions, such as "which modified artifacts can affect my work?" and "how can I identify the developers who should be assigned to a given task?" are difficult to answer, require an analysis of the project and its data, are context specific, and cannot always be pre-defined. Current research approaches are restricted to post hoc analyses over software repositories. Very few interactive exploratory tools exist since the large amount of data that need to be analyzed prohibits its exploration at interactive rates. Moreover, such analyses typically require the user to create complex scripts or queries to extract the desired information from data. Here we present Dominoes, a tool for interactive data exploration aimed at end users (i.e., project managers or developers). Dominoes allows users to interact with different types and units of data to investigate project relationships and view intermediate results as charts, tables, and graphs. Additionally, it allows users to save the derived data as well as their exploration paths for later use. In a scenario-based evaluation study, participants achieved a success rate of 86 percent in their explorations, with a mean time of 7.25 minutes for answering a set of (project) exploration questions.
C1 [da Silva Junior, Jose Ricardo] Inst Fed Rio de Janeiro, Comp Sci, BR-26660000 Eng Paulo De Frontin, RJ, Brazil.
   [Campagna, Daniel Prett; Clua, Esteban; Murta, Leonardo] Univ Fed Fluminense, Inst Comp, BR-24315375 Niteroi, RJ, Brazil.
   [Sarma, Anita] Oregon State Univ, Elect Engn & Comp Sci, Corvallis, OR 97331 USA.
C3 Instituto Federal do Rio de Janeiro (IFRJ); Universidade Federal
   Fluminense; Oregon State University
RP da Silva, JR (corresponding author), Inst Fed Rio de Janeiro, Comp Sci, BR-26660000 Eng Paulo De Frontin, RJ, Brazil.
EM jose.junior@ifrj.edu.br; danielcampagna@id.uff.br; esteban@ic.uff.br;
   anita.sarma@oregonstate.edu; leomurta@ic.uff.br
RI Clua, Esteban/AAC-7716-2022
OI Clua, Esteban/0000-0001-5650-1718; da Silva Junior, Jose
   Ricardo/0000-0003-2586-1870; Sarma, Anita/0000-0002-1859-1692
FU CAPES; CNPq; FAPERJ; NSF [1815486, 1560526]; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1560526] Funding Source: National Science Foundation
FX We thank the participants of our study. This work is partially funded by
   CAPES, CNPq, FAPERJ, and NSF grants: 1815486 and 1560526.
CR Begel A., 2010, Software Engineering, 2010 ACM/IEEE 32nd International Conference on, V1, P125
   Begel A., 2010, Proceedings of the 18th International Symposium on Foundations of Software Engineering, FSE '10, P381
   Bernstein Abraham., 2007, MSR 07, P10, DOI DOI 10.1109/MSR.2007.21
   BreSS Sebastian, 2014, Transactions on Large-Scale Data- and Knowledge-Centered Systems XV: Selected Papers from ADBIS 2013 Satellite Events: LNCS 8920, P1, DOI 10.1007/978-3-662-45761-0_1
   Cataldo M., 2006, P 2006 20 06 ANN C C, P353, DOI DOI 10.1145/1180875.1180929
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Chan H, 1998, DATA BASE ADV INF SY, V29, P31
   CONWAY ME, 1968, DATAMATION, V14, P28
   da Silva Junior J. R., 2014, P INT C SOFTW ENG KN, P495
   da Silva JR, 2015, INT J SOFTW ENG KNOW, V25, P51, DOI 10.1142/S0218194015400033
   da Silva JR, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P409, DOI 10.1109/SANER.2015.7081851
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Dewan P, 2007, ECSCW 2007: PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK, P159, DOI 10.1007/978-1-84800-031-5_9
   Fritz T., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P175
   Gîrba T, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P113, DOI 10.1109/IWPSE.2005.21
   Green T., 1990, PSYCHOL PROGRAMMING, P118
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Herbsleb J. D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P85, DOI 10.1109/ICSE.1999.840998
   Holmes R., 2008, Proceedings of the International working Conference on Mining Software Repositories, MSR '08, P23
   Kim M, 2018, IEEE T SOFTWARE ENG, V44, P1024, DOI 10.1109/TSE.2017.2754374
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Ko AJ, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P199
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Ko AJ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P301, DOI 10.1145/1368088.1368130
   Kuttal SK, 2014, ACM T COMPUT-HUM INT, V21, DOI 10.1145/2560016
   McIntosh S, 2014, PROC IEEE INT CONF S, P241, DOI 10.1109/ICSME.2014.46
   Minto Shawn, 2007, 4 INT WORKSH MIN SOF, P5
   Morton K., 2012, P 2012 ACM SIGMOD IN, P807, DOI [10.1145/2213836.2213961, DOI 10.1145/2213836.2213961]
   Paul S, 1996, IEEE T SOFTWARE ENG, V22, P202, DOI 10.1109/32.489080
   Prabhu P, 2011, P INT C HIGH PERF CO
   Ragavan SS, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P3509, DOI 10.1145/2858036.2858469
   Sakamoto Y, 2013, 2013 14TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD 2013), P549, DOI 10.1109/SNPD.2013.96
   Sarma A, 2002, P INT COMP SOFTW APP, P1093, DOI 10.1109/CMPSAC.2002.1045155
   Sarma A, 2009, PROC INT CONF SOFTW, P23, DOI 10.1109/ICSE.2009.5070505
   Schümmer T, 2001, ECSCW 2001: PROCEEDINGS OF THE SEVENTH EUROPEAN CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P79
   Sillito J., 2006, Proc. of the ACM SIGSOFT Int'l Symp. on Foundations of Software Engineering, P23, DOI DOI 10.1145/1181775.1181779
   STEWARD DV, 1981, IEEE T ENG MANAGE, V28, P71, DOI 10.1109/TEM.1981.6448589
   Terlecki P, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1695, DOI 10.1145/2723372.2742799
   Voinea L, 2009, EMPIR SOFTW ENG, V14, P316, DOI 10.1007/s10664-008-9068-6
   Xu Shaochun., 2005, Proceedings of the International Symposium on Empirical Software Engineering, P10
NR 40
TC 1
Z9 1
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2022
VL 48
IS 2
BP 377
EP 396
DI 10.1109/TSE.2020.2988241
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZB4EB
UT WOS:000756796100002
OA Bronze
DA 2024-07-18
ER

PT J
AU Do, LNQ
   Bodden, E
AF Do, Lisa Nguyen Quang
   Bodden, Eric
TI Explaining Static Analysis With Rule Graphs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Static analysis; Tools; SQL injection; Task analysis; Computer bugs;
   Cognition; Usability; Program analysis; data-flow analysis; rule graphs;
   analysis configuration; explainability; usability
AB As static data-flow analysis becomes able to report increasingly complex bugs, using an evergrowing set of complex internal rules encoded into flow functions, the analysis tools themselves grow more and more complex. In result, for users to be able to effectively use those tools on specific codebases, they require special configurations-a task which in industry is typically performed by individual developers or dedicated teams. To efficiently use and configure static analysis tools, developers need to build a certain understanding of the analysis' rules, i.e., how the underlying analyses interpret the analyzed code and their reasoning for reporting certain warnings. In this article, we explore how to assist developers in understanding the analysis' warnings, and finding weaknesses in the analysis' rules. To this end, we introduce the concept of rule graphs that expose to the developer selected information about the internal rules of data-flow analyses. We have implemented rule graphs on top of a taint analysis, and show how the graphs can support the abovementioned tasks. Our user study and empirical evaluation show that using rule graphs helps developers understand analysis warnings more accurately than using simple warning traces, and that rule graphs can help developers identify causes for false positives in analysis rules.
C1 [Do, Lisa Nguyen Quang; Bodden, Eric] Paderborn Univ, D-33098 Paderborn, Germany.
   [Bodden, Eric] Fraunhofer IEM, D-33098 Paderborn, Germany.
C3 University of Paderborn
RP Do, LNQ (corresponding author), Paderborn Univ, D-33098 Paderborn, Germany.
EM lisa.nguyen@upb.de; eric.bodden@uni-paderborn.de
RI Bodden, Eric/AAE-1365-2021
OI Bodden, Eric/0000-0003-3470-3647; Nguyen Quang Do,
   Lisa/0000-0003-3146-7968
FU Heinz Nixdorf Foundation; BMBF within the Software Campus initiative;
   DFG project RUNSECURE; NRW Research Training Group on Human Centered
   Systems Security
FX This research has been partially funded by the Heinz Nixdorf Foundation,
   by the BMBF within the Software Campus initiative, the DFG project
   RUNSECURE, and the NRW Research Training Group on Human Centered Systems
   Security (nerd.nrw).
CR Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Ayewah N., 2008, P 2008 WORKSH DEF LA, P1, DOI DOI 10.1145/1390817.1390819
   Berander P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P167
   Bodden Eric, 2012, P ACM SIGPLAN INT WO, P3, DOI DOI 10.1145/2259051.2259052
   Chowdhury I., 2010, Proceedings of the 2010 ACM Symposium on Applied Computing, P1963
   Christakis M, 2016, IEEE INT CONF AUTOM, P332, DOI 10.1145/2970276.2970347
   Cohen W.W., 1995, P 12 INT C MACH LEAR, P115, DOI [DOI 10.1016/B978-1-55860-377-6.50023-2, 10.1016/B978-1-55860-377-6.50023-2]
   Destefanis G, 2012, EUROMICRO CONF PROC, P302, DOI 10.1109/SEAA.2012.63
   Do L. Nguyen Quang, 2019, SOURCE CODE MUDARRI
   Do LNQ, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P307, DOI 10.1145/3092703.3092705
   F-Droid, 2019, BALANCE
   F-Droid, 2019, SPARKLESHARE
   Grammatech, 2019, CODESONAR HOME PAGE
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Jung YB, 2005, LECT NOTES COMPUT SC, V3672, P203
   Khedker U., 2009, Data Flow Analysis: Theory and Practice, V1st
   Kruger Stefan, 2018, EUR C OBJ OR PROGR E, V10, P1
   Lerch J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P98, DOI 10.1145/2635868.2635878
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Mangal R, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P462, DOI 10.1145/2786805.2786851
   MITRE, 2019, CWE89 MITRE
   MITRE, 2019, CWE601 MITRE
   Nanda M. G., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P99, DOI 10.1145/1810295.1810310
   Phang Y., 2009, EVALUATION USABILITY
   Reichheld FF, 2003, HARVARD BUS REV, V81, P46
   Reps T., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P49, DOI 10.1145/199448.199462
   Ruthruff JR, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P341, DOI 10.1145/1368088.1368135
   Ryder B.G, 1983, P 10 ACM SIGACT SIGP, P167, DOI DOI 10.1145/567067.567084
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Schubert Philipp Dominik, 2019, TACAS 19, P393, DOI [DOI 10.1007/978-3-030-17465-1_22, 10.1007/978-3-030-17465-1_22]
   Segal MR, 2004, Machine Learning Benchmarks and Random Forest Regression
   Singer J, 2010, ELECTRON NOTES THEOR, V253, P191, DOI 10.1016/j.entcs.2010.08.042
   Spath J., 2016, PROC EUR C OBJECT OR, p22:1, DOI [10.4230/DARTS.2.1.12, DOI 10.4230/LIPICS.ECOOP.2016.22]
   Späth J, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133923
   Sultana KZ, 2017, IEEE HI ASS SYS ENGR, P69, DOI 10.1109/HASE.2017.18
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Ulanov A, 2017, PROC INT CONF DATA, P1249, DOI 10.1109/ICDE.2017.160
   Vall ~ee-Rai R., 2010, CASCON 1 DECADE HIGH, P214, DOI DOI 10.1145/1925805.1925818
   Vallée-Rai R, 2000, LECT NOTES COMPUT SC, V1781, P18
   Witten I.H., 2016, DATA MINING 4 EDITIO
NR 41
TC 1
Z9 2
U1 2
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2022
VL 48
IS 2
BP 678
EP 690
DI 10.1109/TSE.2020.2999534
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZB4EB
UT WOS:000756796100018
DA 2024-07-18
ER

PT J
AU Abdalkareem, R
   Mujahid, S
   Shihab, E
AF Abdalkareem, Rabe
   Mujahid, Suhaib
   Shihab, Emad
TI A Machine Learning Approach to Improve the Detection of CI Skip Commits
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Machine learning; Decision trees; Feature extraction; Message systems;
   Documentation; Buildings; Continuous integration; travis CI; build
   status; machine learning
AB Continuous integration (CI) frameworks, such as Travis CI, are growing in popularity, encouraged by market trends towards speeding up the release cycle and building higher-quality software. A key facilitator of CI is to automatically build and run tests whenever a new commit is submitted/pushed. Despite the many advantages of using CI, it is known that the CI process can take a very long time to complete. One of the core causes for such delays is the fact that some commits (e.g., cosmetic changes) unnecessarily kick off the CI process. Therefore, the main goal of this paper is to automate the process of determining which commits can be CI skipped through the use of machine learning techniques. We first extracted 23 features from historical data of ten software repositories. Second, we conduct a study on the detection of CI skip commits using machine learning where we built a decision tree classifier. We then examine the accuracy of using the decision tree in detecting CI skip commits. Our results show that the decision tree can identify CI skip commits with an average AUC equal to 0.89. Furthermore, the top node analysis shows that the number of developers who changed the modified files, the CI-Skip rules, and commit message are the most important features to detect CI skip commits. Finally, we investigate the generalizability of identifying CI skip commits through applying cross-project validation, and our results show that the general classifier achieves an average 0.74 of AUC values.
C1 [Abdalkareem, Rabe; Mujahid, Suhaib; Shihab, Emad] Concordia Univ, Data Driven Anal Software DAS Lab, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
C3 Concordia University - Canada
RP Abdalkareem, R (corresponding author), Concordia Univ, Data Driven Anal Software DAS Lab, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
EM rab_abdu@encs.concordia.ca; s_mujahi@encs.concordia.ca;
   eshihab@encs.concordia.ca
RI Abdalkareem, Rabe/AET-2496-2022; Abdalkareem, Rabe/IQV-8842-2023
OI Abdalkareem, Rabe/0000-0001-9914-5434; Mujahid,
   Suhaib/0000-0003-2738-1387
CR Abdalkareem R, 2021, IEEE T SOFTWARE ENG, V47, P448, DOI 10.1109/TSE.2019.2897300
   [Anonymous], 2014, P 29 ACM IEEE INT C, DOI [10.1145/2642937.2643002, DOI 10.1145/2642937.2643002]
   Ansfield K, 2015, CI SKIP BUILD MATRIX
   Bacchelli A, 2012, PROC INT CONF SOFTW, P375, DOI 10.1109/ICSE.2012.6227177
   Bao LF, 2017, IEEE WORK CONF MIN S, P170, DOI 10.1109/MSR.2017.58
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Beller M, 2017, IEEE WORK CONF MIN S, P447, DOI 10.1109/MSR.2017.24
   Brandtner M, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P184, DOI 10.1109/CSMR-WCRE.2014.6747169
   Caruana R., 2006, ACM INT C P SER, P161, DOI DOI 10.1145/1143844.1143865
   Cusumano M.A., 1995, Microsoft secrets how the world's most powerful software company creates technology, shapes markets, and manages people
   Devanbu, 2016, CORRABS160600521
   Dösinger S, 2012, IEEE INT CONF AUTOM, P374, DOI 10.1145/2351676.2351751
   Downs J., 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P82, DOI 10.1109/ICSEA.2010.20
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   EFRON B, 1983, J AM STAT ASSOC, V78, P316, DOI 10.2307/2288636
   Fleiss J., 2003, STAT METHODS RATES P, P598, DOI DOI 10.1002/0471445428.CH18
   FLEISS JL, 1973, EDUC PSYCHOL MEAS, V33, P613, DOI 10.1177/001316447303300309
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   G. project, 2014, GEOSERVER GEOSERVER
   Gallaba K, 2020, IEEE T SOFTWARE ENG, V46, P33, DOI 10.1109/TSE.2018.2838131
   Ghaleb TA, 2019, EMPIR SOFTW ENG, V24, P2102, DOI 10.1007/s10664-019-09695-9
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   GitHub, 2019, GITH ACT DAT MARK GO
   Graham, 2016, CONDITIONALLY IGNORE
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hassan AE, 2006, IEEE INT CONF AUTOM, P189
   Hassan F, 2017, INT SYMP EMP SOFTWAR, P157, DOI 10.1109/ESEM.2017.23
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Hilton M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P197, DOI 10.1145/3106237.3106270
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Iba H., 1996, Parallel Problem Solving from Nature - PPSN IV. International Conference on Evolutionary Computation - The 4th International Conference on Parallel Problem Solving from Nature. Proceedings, P144, DOI 10.1007/3-540-61723-X_978
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kotsiantis SB, 2006, ARTIF INTELL REV, V26, P159, DOI 10.1007/S10462-007-9052-3
   Ladenburger, 2016, EXCLUDE FILES TRIGGE
   Leppanen Marko, 2015, IEEE Software, V32, P64, DOI 10.1109/MS.2015.50
   Macho C, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P541, DOI 10.1109/SANER.2016.22
   Matsumoto K., 2012, 2012 15th International Conference on Network-Based Information Systems (NBiS 2012), P815, DOI 10.1109/NBiS.2012.60
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   McIntosh S, 2014, PROC IEEE INT CONF S, P241, DOI 10.1109/ICSME.2014.46
   Micco J., 2012, GOOGLE TECH TALK
   Miller A, 2008, AGILE 2008, PROCEEDINGS, P289, DOI 10.1109/Agile.2008.8
   Ni AS, 2017, IEEE WORK CONF MIN S, P455, DOI 10.1109/MSR.2017.26
   Parnin C, 2017, IEEE SOFTWARE, V34, P86, DOI 10.1109/MS.2017.86
   Quinlan J.R., 1993, C4.5 : programs for machine learning
   Rahman MM, 2017, IEEE WORK CONF MIN S, P215, DOI 10.1109/MSR.2017.17
   Rausch T, 2017, IEEE WORK CONF MIN S, P345, DOI 10.1109/MSR.2017.54
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   Rossi C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P12, DOI 10.1145/2950290.2994157
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Seo H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P724, DOI 10.1145/2568225.2568255
   Shihab E., 2012, P ACM SIGSOFT 20 INT, P1
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   Shirabad JS, 2001, PROC IEEE INT CONF S, P22, DOI 10.1109/ICSM.2001.972708
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Thung F, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P420, DOI 10.1109/ICSM.2012.6405302
   Unterwaditzer, 2014, FEATURE REQUEST SKIP
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Vasilescu B, 2014, EMPIR SOFTW ENG, V19, P955, DOI 10.1007/s10664-013-9244-1
   Xia X, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962606
   Xia X, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P311, DOI 10.1109/SANER.2015.7081841
   Xie Z, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2875
   Yan M, 2019, IEEE T SOFTWARE ENG, V45, P1211, DOI 10.1109/TSE.2018.2831232
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Ziftci C, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P113, DOI 10.1109/ICSE-SEIP.2017.13
NR 69
TC 26
Z9 26
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2021
VL 47
IS 12
BP 2740
EP 2754
DI 10.1109/TSE.2020.2967380
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XM6HB
UT WOS:000728924600006
DA 2024-07-18
ER

PT J
AU Menghi, C
   Tsigkanos, C
   Pelliccione, P
   Ghezzi, C
   Berger, T
AF Menghi, Claudio
   Tsigkanos, Christos
   Pelliccione, Patrizio
   Ghezzi, Carlo
   Berger, Thorsten
TI Specification Patterns for Robotic Missions
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Service robots; Natural languages; Software engineering;
   Tools; Task analysis; Mission specification; pattern catalog; robotic
   mission; model driven engineering
ID TEMPORAL-LOGIC; LTL; LANGUAGE; POSTER
AB Mobile and general-purpose robots increasingly support everyday life, requiring dependable robotics control software. Creating such software mainly amounts to implementing complex behaviors known as missions. Recognizing this need, a large number of domain-specific specification languages has been proposed. These, in addition to traditional logical languages, allow the use of formally specified missions for synthesis, verification, simulation or guiding implementation. For instance, the logical language LTL is commonly used by experts to specify missions as an input for planners, which synthesize a robot's required behavior. Unfortunately, domain-specific languages are usually tied to specific robot models, while logical languages such as LTL are difficult to use by non-experts. We present a catalog of 22 mission specification patterns for mobile robots, together with tooling for instantiating, composing, and compiling the patterns to create mission specifications. The patterns provide solutions for recurrent specification problems; each pattern details the usage intent, known uses, relationships to other patterns, and-most importantly-a template mission specification in temporal logic. Our tooling produces specifications expressed in the temporal logics LTL and CTL to be used by planners, simulators or model checkers. The patterns originate from 245 mission requirements extracted from the robotics literature, and they are evaluated upon a total of 441 real-world mission requirements and 1251 mission specifications. Five of these reflect scenarios defined with two well-known industrial partners developing human-size robots. We further validate our patterns' correctness with simulators and two different types of real robots.
C1 [Menghi, Claudio] Univ Luxembourg, L-4365 Esch Sur Alzette, Luxembourg.
   [Tsigkanos, Christos] TU Wien, A-1040 Vienna, Austria.
   [Pelliccione, Patrizio; Berger, Thorsten] Chalmers, S-41296 Gothenburg, Sweden.
   [Pelliccione, Patrizio; Berger, Thorsten] Univ Gothenburg, S-40530 Gothenburg, Sweden.
   [Pelliccione, Patrizio] Univ Aquila, I-67100 Laquila, AQ, Italy.
   [Ghezzi, Carlo] Politecn Milan, I-20133 Milan, MI, Italy.
C3 University of Luxembourg; Technische Universitat Wien; Chalmers
   University of Technology; University of Gothenburg; University of
   L'Aquila; Polytechnic University of Milan
RP Menghi, C (corresponding author), Univ Luxembourg, L-4365 Esch Sur Alzette, Luxembourg.
EM claudio.menghi@uni.lu; christos.tsigkanos@tuwien.ac.at;
   patrizio.pelliccione@univaq.it; carlo.ghezzi@polimi.it;
   thorsten.berger@chalmers.se
RI MENGHI, CLAUDIO/AAC-2265-2022; Pelliccione, Patrizio/Q-5118-2019
OI MENGHI, CLAUDIO/0000-0001-5303-8481; Pelliccione,
   Patrizio/0000-0002-5438-2281; Tsigkanos, Christos/0000-0002-9493-3404
FU European Research Council under the European Unions Horizon 2020
   research and innovation programme [731869, 694277]; University of
   Luxembourg
FX This work has received funding from the European Research Council under
   the European Unions Horizon 2020 research and innovation programme
   (grant agreements No 731869 and No 694277) and from the University of
   Luxem-bourg (grant ReACP"). We thank Domenico Bianculli for insightful
   comments. We are grateful for feedback provided by the anonymous TSE
   reviewers.
CR Adam S, 2014, LECT NOTES COMPUT SC, V8810, P207, DOI 10.1007/978-3-319-11900-7_18
   Aiello M, 2007, HANDBOOK OF SPATIAL LOGICS, P1, DOI 10.1007/978-1-4020-5587-4
   ALUR R, 1992, THESIS STANFORD U ST
   [Anonymous], 2017, GOOGLE SCHOLAR ROBOT
   [Anonymous], 2018, ACCOMPANIED MAT DATA
   Arkin R., 2006, MISSIONLAB V7 0
   Aufaure-Portier M.-A., 1996, Interfaces to Databases (IDS-3). Proceedings of the 3rd International Workshop
   Autili M, 2007, AUTOMAT SOFTW ENG, V14, P293, DOI 10.1007/s10515-007-0012-6
   Autili M, 2015, IEEE T SOFTWARE ENG, V41, P620, DOI 10.1109/TSE.2015.2398877
   Aziz A, 1996, LNCS, P269, DOI [DOI 10.1007/3-540-61474-5_75, 10.1007/3-540-61474-5_75, DOI 10.1007/3-540-61474-5]
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Balch T., 2004, TEAMBOTS
   BENARI M, 1983, ACTA INFORM, V20, P207, DOI 10.1007/BF01257083
   Best G, 2016, 2016 IEEE/RSJ INTERNATIONAL CONFERENCE ON INTELLIGENT ROBOTS AND SYSTEMS (IROS 2016), P3164, DOI 10.1109/IROS.2016.7759489
   Bianculli D, 2012, PROC INT CONF SOFTW, P968, DOI 10.1109/ICSE.2012.6227125
   Bishop Christopher M, 2006, PATTERN RECOGN, V128, P1
   Bitsch F., 2001, LNCS, V2187, P176, DOI [10.1007/3-540-45416-018, DOI 10.1007/3-540-45416-018]
   Bivand R, 2013, SPATIAL DATA IMPORT
   Bloem R, 2012, J COMPUT SYST SCI, V78, P911, DOI 10.1016/j.jcss.2011.08.007
   Bozhinoski D, 2015, IEEE INT CONF AUTOM, P801, DOI 10.1109/ASE.2015.104
   Brooks RA., 1991, P 12 INT JOINT C ART, P569
   Broy M., 1991, Proceedings of the Sixth International Workshop on Software Specification and Design (Cat. No.91TH0388-9), P2, DOI 10.1109/IWSSD.1991.213082
   Brugali D, 2005, Proceedings of the 2005 IEEE International Conference on Information Reuse and Integration, P585
   Brugali D, 2007, SPRINGER TRAC ADV RO, V30, P9, DOI 10.1007/978-3-540-68951-5_2
   Brugali D, 2009, IEEE ROBOT AUTOM MAG, V16, P9, DOI 10.1109/MRA.2009.932127
   Brugali Davide, 2007, SOFTWARE ENG EXPT RO, V30
   Buchli J, 2004, LECT NOTES COMPUT SC, V3141, P333
   C^ote C., 2005, PROC WORKSHOP ROBOTI, P1820
   Cardelli L, 2002, LECT NOTES COMPUT SC, V2380, P597
   Cardelli Luca, 2001, TACS, V1, P1
   Ciancia V, 2015, 2015 IEEE NINTH INTERNATIONAL CONFERENCE ON SELF-ADAPTIVE AND SELF-ORGANIZING SYSTEMS WORKSHOPS (SASOW), P74, DOI 10.1109/SASOW.2015.17
   Ciccozzi F, 2016, IEEE ACCESS, V4, P6451, DOI 10.1109/ACCESS.2016.2613642
   Cimatti A., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P495
   Di Ruscio D, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P45, DOI 10.1145/2976767.2976794
   Duret-Lutz A, 2016, LECT NOTES COMPUT SC, V9938, P122, DOI 10.1007/978-3-319-46520-3_8
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   EGENHOFER M, 1989, P 1 S SSD 89, P271
   Emerson E. A., 1990, Handbook of Theoretical Computer Science, VB, P995, DOI [10.1016/b978-0-444-88074-1.50021-4, DOI 10.1016/B978-0-444-88074-1.50021-4]
   Endo Y, 2004, IEEE T SYST MAN CY C, V34, P168, DOI 10.1109/TSMCC.2004.826285
   Fainekos GE, 2009, AUTOMATICA, V45, P343, DOI 10.1016/j.automatica.2008.08.008
   Famelis M, 2012, PROC INT CONF SOFTW, P573, DOI 10.1109/ICSE.2012.6227159
   Finucane C, 2010, IEEE INT C INT ROBOT, P1988, DOI 10.1109/IROS.2010.5650371
   Gamez N, 2013, INFORM SOFTWARE TECH, V55, P563, DOI 10.1016/j.infsof.2012.06.012
   Grunske L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P31, DOI 10.1145/1368088.1368094
   Guo M, 2015, INT J ROBOT RES, V34, P218, DOI 10.1177/0278364914546174
   Guo M, 2013, IEEE INT CONF ROBOT, P5025, DOI 10.1109/ICRA.2013.6631295
   Herring, 1990, CATEGORIZING BINARY, V9, P94
   Holzmann G. J., 2002, Software Engineering Notes, V27, P81, DOI 10.1145/605466.605479
   Hugues L, 2006, LECT NOTES COMPUT SC, V4095, P831
   Humphrey, 2013, P AIAA INF AER C
   Humphrey L., 2017, VERIFIABLE TASK ASSI
   IFR, 2016, WORLD ROB SURV
   Kiyavitskaya N, 2008, REQUIR ENG, V13, P207, DOI 10.1007/s00766-008-0063-7
   Konrad S, 2005, PROC INT CONF SOFTW, P372
   Kontchakov R, 2007, HANDBOOK OF SPATIAL LOGICS, P497, DOI 10.1007/978-1-4020-5587-4_9
   KOYMANS R, 1990, REAL-TIME SYST, V2, P255, DOI 10.1007/BF01995674
   Kramer J, 2007, AUTON ROBOT, V22, P101, DOI 10.1007/s10514-006-9013-8
   Kress-Gazit H, 2011, IEEE ROBOT AUTOM MAG, V18, P108, DOI 10.1109/MRA.2011.943479
   Kress-Gazit H, 2009, IEEE T ROBOT, V25, P1370, DOI 10.1109/TRO.2009.2030225
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Lee IS, 1997, 1997 HIGH-ASSURANCE ENGINEERING WORKSHOP - PROCEEDINGS, P42, DOI 10.1109/HASE.1997.648037
   Lignos C, 2015, AUTON ROBOT, V38, P89, DOI 10.1007/s10514-014-9418-8
   Maler O, 2004, LECT NOTES COMPUT SC, V3253, P152, DOI 10.1007/978-3-540-30206-3_12
   Maniatopoulos S, 2014, IEEE INT CONF ROBOT, P4328, DOI 10.1109/ICRA.2014.6907489
   Maoz S., 2011, INT C ASP OR SOFTW D
   Maoz S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON ROBOTICS SOFTWARE ENGINEERING (ROSE), P17, DOI 10.1145/3196558.3196561
   Maoz S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P362, DOI 10.1145/2950290.2950300
   Maoz S, 2016, ELECTRON P THEOR COM, P58, DOI 10.4204/EPTCS.202.5
   Maoz S, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P96, DOI 10.1145/2786805.2786824
   Menghi Claudio, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering: Companion (ICSE-Companion). Proceedings, P434, DOI 10.1145/3183440.3195044
   Menghi C, 2018, LECT NOTES COMPUT SC, V10951, P399, DOI 10.1007/978-3-319-95582-7_24
   Menghi C, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P99, DOI 10.1109/ICSE-Companion.2019.00048
   Menghi C, 2018, PROC IEEE ACM INT C, P438, DOI 10.1145/3183440.3195046
   Menghi C, 2018, LECT NOTES COMPUT SC, V10802, P169, DOI 10.1007/978-3-319-89363-1_10
   Nenzi L, 2015, LECT NOTES COMPUT SC, V9333, P21, DOI 10.1007/978-3-319-23820-3_2
   NORDMANN A, 2014, P INT C SIM MOD PROG
   Pant YV, 2019, LECT NOTES COMPUT SC, V11460, P355, DOI 10.1007/978-3-030-20652-9_24
   Pant YV, 2018, ACM IEEE INT CONF CY, P186, DOI 10.1109/ICCPS.2018.00026
   Papadimitriou CH, 1999, J COMPUT SYST SCI, V58, P29, DOI 10.1006/jcss.1998.1597
   Paun DO, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P123, DOI 10.1109/ISRE.1999.777992
   Pérez J, 2008, INFORM SOFTWARE TECH, V50, P969, DOI 10.1016/j.infsof.2007.08.007
   Piterman N, 2006, LECT NOTES COMPUT SC, V3855, P364
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Raman Vasumathi, 2013, Robotics: Science and Systems
   Remenska D., 2014, PROPERTY SPECIFICATI, P17
   Ringert J. O., SPECTRA
   Ruchkin  I., 2018, P INT S FORM METH, P165
   Salay, 2012, P WORKSH MOD DRIV EN, P41
   Schillinger P, 2016, IEEE INT CONF ROBOT, P2796, DOI 10.1109/ICRA.2016.7487442
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Shah U.S., 2015, SIGSOFT SOFTW ENG NO, V40, P1
   Shao Zhucheng, 2013, SPATIO TEMPORAL HYBR, P337
   Smith MH, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P14
   Smith SL, 2011, INT J ROBOT RES, V30, P1695, DOI 10.1177/0278364911417911
   Spanoudakis G, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P1518, DOI 10.1145/1244002.1244327
   Srinivas S, 2013, 2013 IEEE INTERNATIONAL CONFERENCE ON ROBOTICS AND BIOMIMETICS (ROBIO), P704, DOI 10.1109/ROBIO.2013.6739543
   Stentz A., 1996, Proceedings AAAI 1996 Spring Symposium on Planning with Incomplete Information for Robot Problems, P110
   Sun HY, 2015, ASIA PAC SOFWR ENG, P254, DOI 10.1109/APSEC.2015.58
   Taha S., 2013, COMPOSITIONAL AUTOMA
   Takacs Balint, 2009, 2009 IEEE International Conference on Robotics and Automation (ICRA), P742, DOI 10.1109/ROBOT.2009.5152703
   Tsigkanos C, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P38, DOI 10.1145/3106237.3106299
   Ulusoy A, 2011, IEEE INT C INT ROBOT, P3087, DOI 10.1109/IROS.2011.6048524
   Wei W., 2016, PROC INT C SYST
   Wolff EM, 2013, IEEE INT C INT ROBOT, P4332, DOI 10.1109/IROS.2013.6696978
   Wortmann A., 2014, REQUIREMENTS MODELIN
   Xu Chu Ding, 2011, IEEE Robotics & Automation Magazine, V18, P75, DOI 10.1109/MRA.2011.942117
   Yoo C, 2016, INT J ROBOT RES, V35, P438, DOI 10.1177/0278364915595278
NR 107
TC 39
Z9 41
U1 1
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2021
VL 47
IS 10
BP 2208
EP 2224
DI 10.1109/TSE.2019.2945329
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WH1IX
UT WOS:000707441900010
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Fowze, F
   Tian, D
   Hernandez, G
   Butler, K
   Yavuz, T
AF Fowze, Farhaan
   Tian, Dave
   Hernandez, Grant
   Butler, Kevin
   Yavuz, Tuba
TI ProXray: Protocol Model Learning and Guided Firmware Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Protocols; Universal Serial Bus; Bluetooth; Hidden Markov models;
   Analytical models; Microprogramming; Feature extraction; Protocol
   learning; model extraction; firmware; symbolic execution
ID ABSTRACTION; EXECUTION
AB The number of Internet of Things (IoT) has reached 7 billion globally in early 2018 and are nearly ubiquitous in daily life. Knowing whether or not these devices are safe and secure to use is becoming critical. IoT devices usually implement communication protocols such as USB and Bluetooth within firmware to allow a wide range of functionality. Thus analyzing firmware using domain knowledge from these protocols is vital to understand device behavior, detect implementation bugs, and identify malicious components. Unfortunately, due to the complexity of these protocols, there is usually no formal specification available that can help automate the firmware analysis; as a result significant manual effort is currently required to study these protocols and to reverse engineer the device firmware. In this paper, we propose a new firmware analysis methodology using symbolic execution called ProXray, which can learn a protocol model from known firmware, and apply the model to recognize the protocol relevant fields and detect functionality within unknown firmware automatically. After the training phase, ProXray can fully automate the firmware analysis process while supporting user's queries in the form of protocol relevant constraints. We have applied ProXray to the USB and the Bluetooth protocols by learning protocol constraint models from firmware that implement these protocols. We are then able to map protocol fields and identify USB functionality automatically within all 6 unknown USB firmware while achieving more than an order of magnitude speedup in reaching protocol relevant targets in unknown Bluetooth firmware. Our model achieved high coverage of the USB and Bluetooth specifications for several important protocol fields. ProXray provides a new method to apply domain knowledge to firmware analysis automatically.
C1 [Fowze, Farhaan; Yavuz, Tuba] Univ Florida, Elect & Comp Engn, Gainesville, FL 32611 USA.
   [Tian, Dave; Hernandez, Grant] Univ Florida, Herbert Wertheim Coll Engn, CISE Dept, Gainesville, FL 32611 USA.
   [Butler, Kevin] Univ Florida, Comp & Informat Sci & Engn, Gainesville, FL 32611 USA.
C3 State University System of Florida; University of Florida; State
   University System of Florida; University of Florida; State University
   System of Florida; University of Florida
RP Yavuz, T (corresponding author), Univ Florida, Elect & Comp Engn, Gainesville, FL 32611 USA.
EM farhaan104@ufl.edu; root@davetingjian.org; grant.hernandez@ufl.edu;
   butler@ufl.edu; tuba@ece.ufl.edu
FU US National Science Foundation [CNS-1815883]; Semiconductor Research
   Corporation
FX We would like to thank the anonymous reviewers for the insightful
   feedback and for helping us improve the readability of the paper. This
   work is supported by the US National Science Foundation under grant
   CNS-1815883 and by the Semiconductor Research Corporation.
CR Aarts F, 2013, IEEE ICST WORKSHOP, P461, DOI 10.1109/ICSTW.2013.60
   Aarts F, 2010, LECT NOTES COMPUT SC, V6435, P188, DOI 10.1007/978-3-642-16573-3_14
   [Anonymous], 2014, BLUETOOTH CORE SPECI
   [Anonymous], 2017, REFERENCE MANUAL KQU
   armis lab, 2017, BLUEBORNE
   armis lab, 2018, BLEEDINGBIT
   Ball T, 2001, ACM SIGPLAN NOTICES, V36, P203, DOI 10.1145/381694.378846
   Bazhaniuk O., 2015, P 9 USENIX C OFFENSI, P8
   Beyer D., 2012, P FSE ACM, P57, DOI DOI 10.1145/2393596.2393664
   Blanchet B., 2010, Proverif: Cryptographic protocol verifier in the formal model
   Bluetooth SIG, 2017, BLUETOOTH MESH NETWO
   Bluetooth SIG, 2016, BLUETOOTH CORE SPECI
   Bocic I, 2017, PROC INT CONF SOFTW, P724, DOI 10.1109/ICSE.2017.72
   Boonstoppel P, 2008, LECT NOTES COMPUT SC, V4963, P351, DOI 10.1007/978-3-540-78800-3_27
   Brennan T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P535, DOI 10.1145/3106237.3106303
   Cadar C, 2005, LECT NOTES COMPUT SC, V3639, P2
   Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Cassel S, 2016, FORM ASP COMPUT, V28, P233, DOI 10.1007/s00165-016-0355-5
   Caudill A, 2014, GITHUB, V26
   Chalupar G., 2014, P 8 USENIX WORKSHOP
   Cho C. Y., 2011, 20 USENIX SECUR S
   Cho CY, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P426, DOI 10.1145/1866307.1866355
   Compaq Hewlett-Packard Intel Microsoft NEC and Phillips, 2000, UNIVERSAL SERIAL BUS
   Corbett J. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P439, DOI 10.1109/ICSE.2000.870434
   Daca P, 2016, LECT NOTES COMPUT SC, V9583, P328, DOI 10.1007/978-3-662-49122-5_16
   Davidson D, 2013, P 22 USENIX C SEC WA, P463
   de Ruiter J, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P193
   Dwyer MB, 2001, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.2001.919092
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Fiterau-Brostean P, 2017, SPIN'17: PROCEEDINGS OF THE 24TH ACM SIGSOFT INTERNATIONAL SPIN SYMPOSIUM ON MODEL CHECKING OF SOFTWARE, P142, DOI 10.1145/3092282.3092289
   Fiterau-Brostean P, 2016, LECT NOTES COMPUT SC, V9780, P454, DOI 10.1007/978-3-319-41540-6_25
   Godefroid Patrice, 2008, Network and Distributed Systems Security
   Guo SJ, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P854, DOI 10.1145/2786805.2786841
   Hernandez G, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2245, DOI 10.1145/3133956.3134050
   Hewlett-Packard and Intel and Microsoft and NEC and ST-NXP Wireless and Texas Instruments, 2008, UNIVERSAL SERIAL BUS
   Hong HS, 2003, PROC INT CONF SOFTW, P232
   Jackson D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P194, DOI 10.1109/ICSE.1999.841009
   Jackson D., 1994, SIGSOFT Software Engineering Notes, V19, P2, DOI 10.1145/195274.195281
   Jaffar J., 2013, P 2013 9 JOINT M FDN, P48
   Jeon J, 2016, PROC INT CONF SOFTW, P156, DOI 10.1145/2884781.2884856
   Johnson PC, 2017, ANN COMPUT SECURITY, P528, DOI 10.1145/3134600.3134630
   Knudsen PV, 1998, PROC INT SYMP SYST, P111, DOI 10.1109/ISSS.1998.730610
   Kothari N, 2008, 2008 INTERNATIONAL CONFERENCE ON INFORMATION PROCESSING IN SENSOR NETWORKS, PROCEEDINGS, P271, DOI 10.1109/IPSN.2008.62
   Kroening D., 2016, Decision Procedures: an Algorithmic Point of View
   Laeuger Arnim, 2015, EZHID FIRMWARE PROJE
   Li Y, 2013, ACM SIGPLAN NOTICES, V48, P19, DOI [10.1145/2509136.2509553, 10.1145/2544173.2509553]
   Lueth K. L., 2018, State of the IoT 2018: Number of IoT devices now at 7B-Market accelerating
   LXR, 2018, UNUSUAL DEVICES
   Marinescu Paul Dan, 2013, ACM Symposium on the Foundations of Software Engineering, P235, DOI [10.1145/2491411.2491438, DOI 10.1145/2491411.2491438]
   Nguyen T.T., 2013, P 2013 9 JOINT M FDN, P532, DOI DOI 10.1145/2491411.2491458
   Nohl K., 2014, BADUSB ON ACCESSORIE
   Pustogarov I, 2017, PROCEEDINGS OF THE 2017 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIA CCS'17), P757, DOI 10.1145/3052973.3053038
   Qi DW, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522925
   Ramalingam G., 2006, 28th International Conference on Software Engineering Proceedings, P192, DOI 10.1145/1134285.1134313
   Ringwald M, 2016, BTSTACK
   S. Bluetooth, 2016, BLUETOOTH CORE SPECI
   Santelices R.A., 2010, P 19 INT S SOFTW TES, P195, DOI [DOI 10.1145/1831708.1831733, 10.1145/1831708.1831733]
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Seo H, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P413, DOI 10.1145/2635868.2635872
   Shoshitaishvili Y, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23294
   Syzkaller, 2018, FOUND LINUX KERNEL U
   T. Instruments, 2017, MSP430 USB DEVELOPER
   The USBDeviceWorking Group, 2015, USBCLASS CODES
   Tian D, 2018, P IEEE S SECUR PRIV, P1032, DOI 10.1109/SP.2018.00037
   USB 3.0 Promoter Group, 2016, UNIVERSAL SERIAL BUS
   Vaandrager F, 2017, COMMUN ACM, V60, P85, DOI 10.1145/2967606
   Wang HJ, 2017, IEEE T SOFTWARE ENG, V43, P252, DOI 10.1109/TSE.2016.2584063
   Zaddach J, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23229
NR 69
TC 4
Z9 7
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2021
VL 47
IS 9
BP 1907
EP 1928
DI 10.1109/TSE.2019.2939526
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UR3QY
UT WOS:000696667700009
OA hybrid
DA 2024-07-18
ER

PT J
AU Liu, ZX
   Xia, X
   Lo, D
   Xing, ZC
   Hassan, AE
   Li, SP
AF Liu, Zhongxin
   Xia, Xin
   Lo, David
   Xing, Zhenchang
   Hassan, Ahmed E.
   Li, Shanping
TI Which Variables Should I Log?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Task analysis; Recurrent neural networks; Tools; Compounds; Vocabulary;
   Software maintenance; Log; logging variable; word embedding;
   representation learning
ID CHARACTERIZING LOGGING PRACTICES
AB Developers usually depend on inserting logging statements into the source code to collect system runtime information. Such logged information is valuable for software maintenance. A logging statement usually prints one or more variables to record vital system status. However, due to the lack of rigorous logging guidance and the requirement of domain-specific knowledge, it is not easy for developers to make proper decisions about which variables to log. To address this need, in this work, we propose an approach to recommend logging variables for developers during development by learning from existing logging statements. Different from other prediction tasks in software engineering, this task has two challenges: 1) Dynamic labels - different logging statements have different sets of accessible variables, which means in this task, the set of possible labels of each sample is not the same. 2) Out-of-vocabulary words - identifiers' names are not limited to natural language words and the test set usually contains a number of program tokens which are out of the vocabulary built from the training set and cannot be appropriately mapped to word embeddings. To deal with the first challenge, we convert this task into a representation learning problem instead of a multi-label classification problem. Given a code snippet which lacks a logging statement, our approach first leverages a neural network with an RNN (recurrent neural network) layer and a self-attention layer to learn the proper representation of each program token, and then predicts whether each token should be logged through a unified binary classifier based on the learned representation. To handle the second challenge, we propose a novel method to map program tokens into word embeddings by making use of the pre-trained word embeddings of natural language tokens. We evaluate our approach on 9 large and high-quality Java projects. Our evaluation results show that the average MAP of our approach is over 0.84, outperforming random guess and an information-retrieval-based method by large margins.
C1 [Liu, Zhongxin; Li, Shanping] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310027, Peoples R China.
   [Liu, Zhongxin] Zhejiang Univ, Ningbo Res Inst, Ningbo 315100, Peoples R China.
   [Liu, Zhongxin] PengCheng Lab, Shenzhen 518066, Peoples R China.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
   [Xing, Zhenchang] Australian Natl Univ, Res Sch Comp Sci, Canberra, ACT 0200, Australia.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
C3 Zhejiang University; Zhejiang University; Monash University; Singapore
   Management University; Australian National University; Queens University
   - Canada
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
EM liu_zx@zju.edu.cn; xin.xia@monash.edu; davidlo@smu.edu.sg;
   zhenchang.xing@anu.edu.au; ahmed@cs.queensu.ca; shan@zju.edu.cn
RI Xia, Xin/AAD-6217-2022; KHALIFA, AHMED khalifa/HKF-2246-2023; Lo,
   David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; KHALIFA, AHMED
   khalifa/0000-0002-2918-7572; Lo, David/0000-0002-4367-7201
FU National Key Research and Development Program of China [2018YFB1003904];
   NSFC Program [61972339]
FX This research was partially supported by the National Key Research and
   Development Program of China (2018YFB1003904) and NSFC Program (No.
   61972339).
CR [Anonymous], 2019, SIMPLE LOGGING FACAD
   [Anonymous], 2019, WEBISITE FASTTEXT
   [Anonymous], 1997, NEURAL COMPUT
   [Anonymous], 2019, WEBSITE GLOVE
   [Anonymous], 2014, Advances in Neural Information Processing Systems
   [Anonymous], 2019, OPEN SOURCE DEEP LEA
   Baeza-Yates R A, 2011, MODERN INFORM RETRIE
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bahdanau Dzmitry, 2015, 3 INT C LEARN REP IC
   Bengio Y, 2003, J MACH LEARN RES, V3, P1137, DOI 10.1162/153244303322533223
   Chen BY, 2017, EMPIR SOFTW ENG, V22, P330, DOI 10.1007/s10664-016-9429-5
   Chen K., 2013, EFFICIENT ESTIMATION, P2
   Chiu J.P., 2016, Named entity recognition with bidirectional lstm-cnns, V4, P357, DOI 10.1162/tacl_a_00104
   Cho K., 2014, PROCS C EMPIRICAL ME, P1724, DOI DOI 10.3115/V1/D14-1179
   Cinque M, 2013, IEEE T SOFTWARE ENG, V39, P806, DOI 10.1109/TSE.2012.67
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Fu QA, 2009, IEEE DATA MINING, P149, DOI 10.1109/ICDM.2009.60
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   He PJ, 2018, IEEE INT CONF AUTOM, P178, DOI 10.1145/3238147.3238193
   Joulin A., 2017, P 15 C EUR CHAPT ASS, P427, DOI DOI 10.18653/V1/E17-2068
   Kabinna S, 2018, EMPIR SOFTW ENG, V23, P290, DOI 10.1007/s10664-017-9518-0
   Kingma D. P., 2014, arXiv
   Kolen JF, 2009, A Field Guide to Dynamical Recurrent Networks, DOI [DOI 10.1109/9780470544037.CH14, 10.1109/9780470544037]
   Landauer TK, 1997, PSYCHOL REV, V104, P211, DOI 10.1037/0033-295X.104.2.211
   Li H, 2018, EMPIR SOFTW ENG, V23, P2655, DOI 10.1007/s10664-018-9595-8
   Li H, 2017, EMPIR SOFTW ENG, V22, P1684, DOI 10.1007/s10664-016-9456-2
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   Luong M.-T., 2015, P 2015 C EMPIRICAL M, DOI DOI 10.18653/V1/D15-1166
   Mariani Leonardo, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P117, DOI 10.1109/ISSRE.2008.48
   Mikolov T., 2013, INT C LEARN REPR SCO, DOI 10.48550/ARXIV.1301.3781
   Mnih V, 2014, ADV NEUR IN, V27
   Nagaraj K, 2012, P 9 USENIX C NETW SY, P353
   Pecchia A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P169, DOI 10.1109/ICSE.2015.145
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Schuster M, 1997, IEEE T SIGNAL PROCES, V45, P2673, DOI 10.1109/78.650093
   Shang WY, 2015, EMPIR SOFTW ENG, V20, P1, DOI 10.1007/s10664-013-9274-8
   Shang WY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P402, DOI 10.1109/ICSE.2013.6606586
   Shang WY, 2014, J SOFTW-EVOL PROC, V26, P3, DOI 10.1002/smr.1579
   Turney PD, 2010, J ARTIF INTELL RES, V37, P141, DOI 10.1613/jair.2934
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang Peilu., 2015, CoRR
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Yuan D., 2012, P 2012 USENIX S OP S, P293
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Yuan D, 2012, ACM T COMPUT SYST, V30, DOI 10.1145/2110356.2110360
   Yuan D, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P143
   Zhao X, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P565, DOI 10.1145/3132747.3132778
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
   Zou DQ, 2016, J COMPUT SCI TECH-CH, V31, P1038, DOI 10.1007/s11390-016-1678-7
NR 52
TC 29
Z9 30
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2021
VL 47
IS 9
BP 2012
EP 2031
DI 10.1109/TSE.2019.2941943
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UR3QY
UT WOS:000696667700015
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Sohn, J
   Yoo, S
AF Sohn, Jeongju
   Yoo, Shin
TI Empirical Evaluation of Fault Localisation Using Code and Change Metrics
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Measurement; Debugging; Genetic programming; Feature extraction; Support
   vector machines; Training; Fault localisation; SBSE; genetic programming
AB Fault localisation aims to reduce the debugging efforts of human developers by highlighting the program elements that are suspected to be the root cause of the observed failure. Spectrum Based Fault Localisation (SBFL), a coverage based approach, has been widely studied in many researches as a promising localisation technique. Recently, however, it has been proven that SBFL techniques have reached the limit of further improvement. To overcome the limitation, we extend SBFL with code and change metrics that have been mainly studied in defect prediction, such as size, age, and churn. FLUCCS, our fault learn-to-rank localisation technique, employs both existing SBFL formul AE and these metrics as input. We investigate the effect of employing code and change metrics for fault localisation using four different learn-to-rank techniques: Genetic Programming, Gaussian Process Modelling, Support Vector Machine, and Random Forest. We evaluate the performance of FLUCCS with 386 real world faults collected from Defects4J repository. The results show that FLUCCS with code and change metrics places 144 faults at the top and 304 faults within the top ten. This is a significant improvement over the state-of-art SBFL formul AE, which can locate 65 and 212 faults at the top and within the top ten, respectively. We also investigate the feasibility of cross-project transfer learning of fault localisation. The results show that, while there exist project-specific properties that can be exploited for better localisation per project, ranking models learnt from one project can be applied to others without significant loss of effectiveness.
C1 [Sohn, Jeongju; Yoo, Shin] Korea Adv Inst Sci & Technol, Sch Comp, Daejon 34141, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Sohn, J (corresponding author), Korea Adv Inst Sci & Technol, Sch Comp, Daejon 34141, South Korea.
EM kasio555@kaist.ac.kr; shin.yoo@kaist.ac.kr
RI Yoo, Shin/E-3247-2015
OI Yoo, Shin/0000-0002-0836-6993; Sohn, Jeongju/0000-0002-8093-2996
FU National Research Foundation of Korea (NRF) - Korea government (MEST)
   [NRF-2016R1C1B1011042]; National Research Foundation of Korea (NRF) -
   Ministry of Science, ICT [2017M3C4A7068179]
FX This work was supported by the National Research Foundation of Korea
   (NRF) grant funded by the Korea government (MEST) (Grant No.
   NRF-2016R1C1B1011042) and by NextGeneration Information Computing
   Development Program through the National Research Foundation of Korea
   (NRF) funded by theMinistry of Science, ICT (2017M3C4A7068179).
CR Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   [Anonymous], 2013, P 2013 INT S SOFTW T
   [Anonymous], 2013, P 2013 INT S SOFTW T, DOI DOI 10.1145/2483760.2483767
   [Anonymous], 2011, ACM T INTEL SYST TEC, DOI DOI 10.1145/1961189.1961199
   Bergstra J, 2013, HYPEROPT DISTRIBUTED
   Bowes David., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, P330, DOI DOI 10.1145/2931037.2931039
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L., 2001, Mach. Learn., V45, P5
   Buitinck L, 2013, ECML PKDD WORKSH LAN, P108, DOI DOI 10.48550/ARXIV.1309.0238
   Cobertura, 2007, COB COD COV UT
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Dallmeier V., 2005, P 6 INT S AUT AN DRI, P99, DOI [10.1145/1085130.1085143, DOI 10.1145/1085130.1085143]
   Ernst M. D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P213, DOI 10.1109/ICSE.1999.841011
   Forrest Stephanie, 2009, P 11 ANN C GEN EV CO, P947
   Fortin FA, 2012, J MACH LEARN RES, V13, P2171
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   GPy, 2012, Technical Report
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   Henderson TAD, 2018, IEEE INT CONF SOFTW, P93, DOI 10.1109/ICST.2018.00019
   Hensman James, 2013, Gaussian processes for big data
   Jones E., 2001, SciPy: Open source scientific tools for Python
   Jones J.A., 2001, Proceedings of ICSE 2001 Workshop on Software Visualization, Toronto, Ontario, Canada, P71
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Lee CP, 2014, NEURAL COMPUT, V26, P781, DOI 10.1162/NECO_a_00571
   Lee H. J., 2011, THESIS U MELBOURNE P
   Lee T., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering, P311
   Maamar M, 2017, AUTOMAT SOFTW ENG, V24, P341, DOI 10.1007/s10515-015-0189-z
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Poli R., 2008, A Field Guide to Genetic Programming
   Rasmussen CE, 2005, ADAPT COMPUT MACH LE, P1
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Shi JQ, 2007, BIOMETRICS, V63, P714, DOI 10.1111/j.1541-0420.2007.00758.x
   Shin Yoo, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P244, DOI 10.1007/978-3-642-33119-0_18
   Snelson E., 2006, Adv. Neural Inf. Process. Syst., P1257
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   Sridhara G, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P101, DOI 10.1145/1985793.1985808
   Tassey G., 2002, EC IMPACTS INADEQUAT
   Tie-Yan Liu, 2009, Foundations and Trends in Information Retrieval, V3, P225, DOI 10.1561/1500000016
   Wong WE, 2007, P INT COMP SOFTW APP, P449
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Xiaoyuan Xie, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P224, DOI 10.1007/978-3-642-39742-4_17
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   Yoo S, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3078840
   Yoo Shin, 2014, RN1414 U COLL LOND
   Zhang M, 2017, P 26 ACM SIGS INT S, P261, DOI DOI 10.1145/3092703.3092731
NR 60
TC 9
Z9 11
U1 3
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2021
VL 47
IS 8
BP 1605
EP 1625
DI 10.1109/TSE.2019.2930977
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA TZ7YH
UT WOS:000684687400005
DA 2024-07-18
ER

PT J
AU Johnson, B
   Zimmermann, T
   Bird, C
AF Johnson, Brittany
   Zimmermann, Thomas
   Bird, Christian
TI The Effect of Work Environments on Productivity and Satisfaction of
   Software Engineers
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Productivity; Organizations; Software engineering; Interviews;
   Collaboration; Knowledge engineering; Productivity; satisfaction;
   physical environments; work environments; software engineering; program
   management; IT operations; marketing; business program &amp; operations
ID OPEN-PLAN OFFICE; EMPLOYEE REACTIONS; PHYSICAL-ENVIRONMENT;
   JOB-SATISFACTION; DEVELOPERS; PERFORMANCE; WORKSPACE; PERSONALIZATION;
   MOTIVATION; DESIGN
AB The physical work environment of software engineers can have various effects on their satisfaction and the ability to get the work done. To better understand the factors of the environment that affect productivity and satisfaction of software engineers, we explored different work environments at Microsoft. We used a mixed-methods, multiple stage research design with a total of 1,159 participants: two surveys with 297 and 843 responses respectively and interviews with 19 employees. We found several factors that were considered as important for work environments: personalization, social norms and signals, room composition and atmosphere, work-related environment affordances, work area and furniture, and productivity strategies. We built statistical models for satisfaction with the work environment and perceived productivity of software engineers and compared them to models for employees in the Program Management, IT Operations, Marketing, and Business Program & Operations disciplines. In the satisfaction models, the ability to work privately with no interruptions and the ability to communicate with the team and leads were important factors among all disciplines. In the productivity models, the overall satisfaction with the work environment and the ability to work privately with no interruptions were important factors among all disciplines. For software engineers, another important factor for perceived productivity was the ability to communicate with the team and leads. We found that private offices were linked to higher perceived productivity across all disciplines.
C1 [Johnson, Brittany] Univ Massachusetts, Amherst, MA 01003 USA.
   [Zimmermann, Thomas; Bird, Christian] Microsoft Res, Redmond, WA 98052 USA.
C3 University of Massachusetts System; University of Massachusetts Amherst;
   Microsoft
RP Zimmermann, T (corresponding author), Microsoft Res, Redmond, WA 98052 USA.
EM bjohnson@cs.umass.edu; tzimmer@microsoft.com; cbird@microsoft.com
RI Zimmermann, Thomas/C-4377-2019
OI Zimmermann, Thomas/0000-0003-4905-1469
CR Adams B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P78, DOI 10.1109/SANER.2016.108
   Allen T. J., 1977, Managing the flow of technology: technology transfer and the dissemination of technical information within RD organizations
   [Anonymous], 2002, Agile software development
   [Anonymous], 2002, Metrics and Models in Software Quality Engineering
   [Anonymous], 2008, Changing Software Development: Learning to Be Agile
   [Anonymous], 2008, APPL REGRESSION ANAL
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2017, Questionnaire design
   [Anonymous], 2006, Proc. 2006 20th Anniversary Conf. Computer Supported Coop. Work
   [Anonymous], 2010, PROC 18 ACM SIGSOFT
   Avery D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P223, DOI [10.1109/MSR.2016.031, 10.1145/2901739.2901744]
   Babbie Earl R., 2012, The practice of social research
   Baguley T, 2009, BRIT J PSYCHOL, V100, P603, DOI 10.1348/000712608X377117
   Bailey DE, 2002, J ORGAN BEHAV, V23, P383, DOI 10.1002/job.144
   Baron R.A., 1994, Research in Organizational Behavior, V16, P1
   BATEMAN TS, 1983, ACAD MANAGE J, V26, P587, DOI 10.2307/255908
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Bernstein ES, 2018, PHILOS T R SOC B, V373, DOI 10.1098/rstb.2017.0239
   Bicchieri Cristina., 2014, The Stanford Encyclopedia of Philosophy, VSpring 2014
   Bird C., 2015, MSRTR201566
   Bishop T, 2014, MICROSOFTS DEV DIVIS
   Blackburn JD, 1996, IEEE T SOFTWARE ENG, V22, P875, DOI 10.1109/32.553636
   Bloom N., 2014, RAISE PRODUCTIVITY L
   BOEHM BW, 1984, COMPUTER, V17, P30, DOI 10.1109/MC.1984.1659160
   Brennan A, 2002, ENVIRON BEHAV, V34, P279, DOI 10.1177/0013916502034003001
   Brunia S, 2009, J CORP REAL ESTATE, V11, P169, DOI 10.1108/14630010910985922
   Carifio J., 2007, J SOCIAL SCI, V3, P106, DOI [DOI 10.3844/JSSP.2007.106.116, 10.3844/jssp.2007.106.116]
   Carifio J, 2008, MED EDUC, V42, P1150, DOI 10.1111/j.1365-2923.2008.03172.x
   Carmel E., 1999, GLOBAL SOFTWARE TEAM
   Carmichael S. G., 2013, RES CUBICLES ARE ABS
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   Cheng L-T., 2003, ACM QUEUE, V1, P40
   Cidell J, 2010, AREA, V42, P514, DOI 10.1111/j.1475-4762.2010.00952.x
   Congdon C., 2014, BALANCING WE ME BEST
   Congdon C, 2014, HARVARD BUS REV, V92, P50
   Costa Jr P.T., 2008, The SAGE Handbook of Personality Theory and Assessment, V2, P179, DOI [10.4135/9781849200479.n9, DOI 10.4135/9781849200479.N9]
   Cranny C.J., 1992, JOB SATISFACTION PEO
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Danielsson CB, 2009, J ARCHIT PLAN RES, V26, P241
   Davis MC, 2011, INT REV IND ORGAN PS, V26, P193
   DeMarco T., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P268
   DeMarco T., 2013, Peopleware: productive projects and teams
   DeRango K., 2005, 0395 UPJ I, DOI [10.2139/ssrn.429180, DOI 10.2139/SSRN.429180]
   Deutskens E, 2004, MARKET LETT, V15, P21, DOI 10.1023/B:MARK.0000021968.86465.00
   Devanbu P, 1996, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.1996.493415
   Dolbier CL, 2005, AM J HEALTH PROMOT, V19, P194, DOI 10.4278/0890-1171-19.3.194
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Edwards L, 2002, Contract
   Evans GW, 2000, J APPL PSYCHOL, V85, P779, DOI 10.1037/0021-9010.85.5.779
   Feifer J., 2014, 2 CUBE DWELLERS ARGU
   FELDMAN DC, 1984, ACAD MANAGE REV, V9, P47, DOI 10.2307/258231
   Fleming, 2010, P 2010 ACM IEEE INT, P1, DOI DOI 10.1145/1852786.1852824
   Ford D, 2017, INT SYMP EMP SOFTWAR, P394, DOI 10.1109/ESEM.2017.54
   Fowler M., 2001, Software Development, V9, P28
   Franca A. C. C., 2012, 2012 26th Brazilian Symposium on Software Engineering (SBES), P61, DOI 10.1109/SBES.2012.28
   França ACC, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P9, DOI 10.1109/CHASE.2013.6614726
   França ACC, 2014, INFORM SOFTWARE TECH, V56, P79, DOI 10.1016/j.infsof.2013.06.006
   Franca C., 2014, Motivated software engineers are engaged and focused, while satisfied ones are happy, P32
   Frick RW, 1999, THEOR PSYCHOL, V9, P183, DOI 10.1177/095935439992002
   GIBSON JAMES J., 1966
   Goldberg CB, 2000, J ORGAN BEHAV, V21, P665, DOI 10.1002/1099-1379(200009)21:6<665::AID-JOB48>3.0.CO;2-P
   Graziotin D., 2017, P 21 INT C EVALUATIO, P324, DOI [DOI 10.1145/3084226.3084242, 10.1145/3084226.3084242]
   Graziotin D, 2018, J SYST SOFTWARE, V140, P32, DOI 10.1016/j.jss.2018.02.041
   Graziotin D, 2015, J SOFTW-EVOL PROC, V27, P467, DOI 10.1002/smr.1673
   Graziotin D, 2013, LECT NOTES COMPUT SC, V7983, P50, DOI 10.1007/978-3-642-39259-7_7
   Guest G, 2006, FIELD METHOD, V18, P59, DOI 10.1177/1525822X05279903
   Hammershoj A., 2010, International Conference on Intelligence in Next Generation Networks, P1
   Haynes BP, 2007, J CORP REAL ESTATE, V9, P97, DOI 10.1108/14630010710828108
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Hoppock R., 1935, JOB SATISFACTION
   Hudson W., 2013, ENCY HUMAN COMPUTER, V2nd
   Jamieson Susan, 2004, Med Educ, V38, P1217, DOI 10.1111/j.1365-2929.2004.02012.x
   JONES C, 1994, COMPUTER, V27, P98, DOI 10.1109/2.312055
   Judge TA, 2001, PSYCHOL BULL, V127, P376, DOI 10.1037//0033-2909.127.3.376
   Kaufman L., 2014, GOOGLE GOT IT WRONG
   Kelly A, 2014, SOFTWARE DEV PROTOTY
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Leaman A, 1999, BUILD RES INF, V27, P4, DOI 10.1080/096132199369615
   Lee KE, 2015, J ENVIRON PSYCHOL, V42, P182, DOI 10.1016/j.jenvp.2015.04.003
   Lingwood A., 2015, WORKSPACE DESIGN SUR
   Locke E., 1976, The handbook of industrial and organizational psychology, P1297
   MCCUE GM, 1978, IBM SYST J, V17, P4, DOI 10.1147/sj.171.0004
   McNaught C, 2010, QUAL REP, V15, P630
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   MILES AK, 2000, THESIS FLORIDA STATE
   MOBLEY WH, 1977, J APPL PSYCHOL, V62, P237, DOI 10.1037/0021-9010.62.2.237
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Murphy Bernadette., 2013, Empirical Software Engineering and Measurement, 2013 ACM/IEEE International Symposium on, P75, DOI DOI 10.1109/ESEM.2013.21
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Nielsen C., 2016, HARVARD BUS REV
   Norman G, 2010, ADV HEALTH SCI EDUC, V15, P625, DOI 10.1007/s10459-010-9222-y
   O'Neill M., 2008, Open plan and enclosed private offices
   OLDHAM GR, 1988, J APPL PSYCHOL, V73, P253, DOI 10.1037/0021-9010.73.2.253
   OLDHAM GR, 1979, ADMIN SCI QUART, V24, P267, DOI 10.2307/2392497
   OLDHAM GR, 1983, ADMIN SCI QUART, V28, P542, DOI 10.2307/2393008
   ONEILL MJ, 1994, ENVIRON BEHAV, V26, P504, DOI 10.1177/001391659402600403
   Paiva E, 2010, INNOVATIONS IN COMPUTING SCIENCES AND SOFTWARE ENGINEERING, P99, DOI 10.1007/978-90-481-9112-3_17
   Peck C, 2002, SOUTHEAST SYMP SYSTE, P339, DOI 10.1109/SSST.2002.1027063
   Petersen K, 2011, INFORM SOFTWARE TECH, V53, P317, DOI 10.1016/j.infsof.2010.12.001
   Pittman T., 2013, WHAT FACTORS DRIVE W
   Pollack L., 2014, DO IT SOFTWARE DEV
   PORTER LW, 1974, J APPL PSYCHOL, V59, P603, DOI 10.1037/h0037335
   Potvin R, 2016, COMMUN ACM, V59, P78, DOI 10.1145/2854146
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Preacher KJ, 2011, PSYCHOL METHODS, V16, P93, DOI 10.1037/a0022658
   RASCH RH, 1992, MIS QUART, V16, P395, DOI 10.2307/249535
   Romano S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240496
   Ruhe M., 2008, TUMI0832 I INF
   S. E. Staff, 2002, WORK PHYS ENV IMP BO
   Scharf T., 1990, AM SOC TEST MATER
   Sharp H, 2009, INFORM SOFTWARE TECH, V51, P219, DOI 10.1016/j.infsof.2008.05.009
   Singer L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P211, DOI 10.1145/2568225.2568305
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Spector P.E., 1997, JOB SATISFACTION APP
   Spencer D., 2009, CARD SORTING DESIGNI
   Stone NJ, 1998, J ENVIRON PSYCHOL, V18, P175, DOI 10.1006/jevp.1998.0084
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Storey Margaret-Anne, 2014, FUT SOFTW ENG P, P100, DOI 10.1145/2593882.2593887
   Sudhakar GP, 2012, SERB J MANAG, V7, P65, DOI 10.5937/sjm1201065S
   Trendowicz A, 2009, ADV COMPUT, V77, P185, DOI 10.1016/S0065-2458(09)01206-6
   Veitch JA, 2007, J ENVIRON PSYCHOL, V27, P177, DOI 10.1016/j.jenvp.2007.04.002
   Vischer JC, 2007, STRESS HEALTH, V23, P175, DOI 10.1002/smi.1134
   Vitharana P, 2003, COMMUN ACM, V46, P67, DOI 10.1145/859670.859671
   Waber B, 2014, HARVARD BUS REV, V92, P68
   Wagner S., 2008, Software Productivity Analysis and Cost Estimation (SPACE 2008), P1
   Wanous JP, 1997, J APPL PSYCHOL, V82, P247, DOI 10.1037/0021-9010.82.2.247
   Wasserman L., 2004, ALL STAT CONCISE COU, V26
   Wells M, 2002, ENVIRON BEHAV, V34, P300, DOI 10.1177/0013916502034003002
   Wells MM, 2000, J ENVIRON PSYCHOL, V20, P239, DOI 10.1006/jevp.1999.0166
   Wright T A, 2000, J Occup Health Psychol, V5, P84, DOI 10.1037/1076-8998.5.1.84
   Yilmaz M, 2011, COMM COM INF SC, V172, P155
   Zimmermann T, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P137
NR 134
TC 17
Z9 19
U1 6
U2 43
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2021
VL 47
IS 4
BP 736
EP 757
DI 10.1109/TSE.2019.2903053
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA RP8GH
UT WOS:000641961100003
DA 2024-07-18
ER

PT J
AU Jiang, H
   Zhou, ZD
   Ren, ZL
   Zhang, JX
   Li, XC
AF Jiang, He
   Zhou, Zhide
   Ren, Zhilei
   Zhang, Jingxuan
   Li, Xiaochen
TI CTOS: Compiler Testing for Optimization Sequences of LLVM
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Compiler testing; optimization sequences; LLVM; program representation;
   software testing
ID BUGS
AB Optimization sequences are often employed in compilers to improve the performance of programs, but may trigger critical compiler bugs, e.g., compiler crashes. Although many methods have been developed to automatically test compilers, no systematic work has been conducted to detect compiler bugs when applying arbitrary optimization sequences. To resolve this problem, two main challenges need to be addressed, namely the acquisition of representative optimization sequences and the selection of representative testing programs, due to the enormous number of optimization sequences and testing programs. In this study, we propose CTOS, a novel compiler testing method based on differential testing, for detecting compiler bugs caused by optimization sequences of LLVM. CTOS first leverages the technique Doc2Vec to transform optimization sequences into vectors to capture the information of optimizations and their orders simultaneously. Second, a method based on the region graph and call relationships is developed in CTOS to construct the vector representations of the testing program, such that the semantics and the structure information of programs can be captured simultaneously. Then, with the vector representations of optimization sequences and testing programs, a "centroid" based selection scheme is proposed to address the above two challenges. Finally, CTOS takes in the representative optimization sequences and testing programs as inputs, and tests each testing program with all the representative optimization sequences. If there is an output that is different from the majority of others of a given testing program, then the corresponding optimization sequence is deemed to trigger a compiler bug. Our evaluation demonstrates that CTOS significantly outperforms the baselines by up to 24.76% similar to 50.57% in terms of the bug-finding capability on average. Within seven month evaluations on LLVM, we have reported 104 valid bugs within 5 types, of which 21 have been confirmed or fixed. Most of those bugs are crash bugs (57) and wrong code bugs (24). 47 unique optimizations are identified to be faulty and 15 of them are loop related optimizations.
C1 [Jiang, He; Zhou, Zhide; Ren, Zhilei] Dalian Univ Technol, Sch Software, Dalian 116024, Peoples R China.
   [Jiang, He; Zhou, Zhide; Ren, Zhilei] Dalian Univ Technol, Key Lab Ubiquitous Network & Serv Software Liaoni, Dalian 116024, Peoples R China.
   [Jiang, He] DUT Artificial Intelligence Inst, Dalian 116024, Peoples R China.
   [Zhang, Jingxuan] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 210016, Peoples R China.
   [Li, Xiaochen] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, L-4365 Esch Sur Alzette, Luxembourg.
C3 Dalian University of Technology; Dalian University of Technology;
   Nanjing University of Aeronautics & Astronautics; University of
   Luxembourg
RP Jiang, H (corresponding author), Dalian Univ Technol, Sch Software, Dalian 116024, Peoples R China.; Jiang, H (corresponding author), Dalian Univ Technol, Key Lab Ubiquitous Network & Serv Software Liaoni, Dalian 116024, Peoples R China.
EM jianghe@dlut.edu.cn; cszide@gmail.com; zren@dlut.edu.cn;
   jxzhang@nuaa.edu.cn; xiaochen.li@uni.lu
RI zhang, jingxuan/KVZ-3600-2024
FU National Natural Science Foundation of China [61772107, 61722202,
   61902181, 62032004]
FX We would like to thank the LLVM developers for analyzing and fixing our
   reported bugs. This work was supported in part by the National Natural
   Science Foundation of China under Grants 61772107, 61722202, 61902181,
   and 62032004.
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   [Anonymous], 2021, 40929 LLVM
   [Anonymous], 2016, ARXIV160705368
   [Anonymous], 2021, 40927 LLVM
   [Anonymous], 2019, REGION GRAPH
   [Anonymous], 2021, 40925 LLVM
   [Anonymous], 2021, 40928 LLVM
   [Anonymous], 2021, 40926 LLVM
   [Anonymous], 2021, 40933 LLVM
   Ansel J, 2014, INT CONFER PARA, P303, DOI 10.1145/2628071.2628092
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Ashouri AH, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3197978
   Ashouri AH, 2017, ACM T ARCHIT CODE OP, V14, DOI 10.1145/3124452
   Babokin V. L. Dmitry, 2021, YARPGEN
   Balestrat A., 2021, CCG RANDOM C CODE GE
   Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   Chen JJ, 2021, IEEE T SOFTWARE ENG, V47, P261, DOI 10.1109/TSE.2018.2889771
   Chen JJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P305, DOI 10.1109/ASE.2019.00037
   Chen JJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P223, DOI 10.1145/3338906.3338957
   Chen JJ, 2017, PROC INT CONF SOFTW, P700, DOI 10.1109/ICSE.2017.70
   Chen JJ, 2016, PROC INT CONF SOFTW, P180, DOI 10.1145/2884781.2884878
   Chen Y, 2013, ACM SIGPLAN NOTICES, V48, P197, DOI 10.1145/2499370.2462173
   Clang, 2021, Clang: a c language family frontend for LLVM
   Fursin G, 2011, INT J PARALLEL PROG, V39, P296, DOI 10.1007/s10766-010-0161-2
   Groce A., 2012, P INT S SOFTW TEST A, P78, DOI DOI 10.1145/2338965.2336763
   Haas A, 2017, ACM SIGPLAN NOTICES, V52, P185, DOI [10.1145/3062341.3062363, 10.1145/3140587.3062363]
   Hagberg A. A., 2008, EXPLORING NETWORK ST, P11, DOI DOI 10.1016/J.JELECTROCARD.2010.09.003
   Harris ZS, 1954, WORD, V10, P146, DOI 10.1080/00437956.1954.11659520
   Hodován R, 2018, PROCEEDINGS OF THE 9TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON AUTOMATING TEST CASE DESIGN, SELECTION, AND EVALUATION (A-TEST '18), P45, DOI 10.1145/3278186.3278193
   Holmes J, 2020, SOFTW TEST VERIF REL, V30, DOI 10.1002/stvr.1727
   Huang QJ, 2019, ANN IEEE SYM FIELD P, P307, DOI 10.1109/FCCM.2019.00049
   JOHNSON R, 1994, SIGPLAN NOTICES, V29, P171, DOI 10.1145/773473.178258
   Kuhn D. R., 2010, NIST SPECIAL PUBLICA, V800, P142
   Kulkarni P, 2004, ACM SIGPLAN NOTICES, V39, P171, DOI 10.1145/996893.996863
   Kulkarni P.A., 2005, ACM T ARCHIT CODE OP, V2, P165
   Kulkarni S, 2012, ACM SIGPLAN NOTICES, V47, P147, DOI 10.1145/2398857.2384628
   Le V, 2015, ACM SIGPLAN NOTICES, V50, P386, DOI [10.1145/2814270.2814319, 10.1145/2858965.2814319]
   Le Vu, 2015, P 2015 INT S SOFTW T, P327, DOI DOI 10.1145/2771783.2771785
   Lidbury C, 2015, ACM SIGPLAN NOTICES, V50, P65, DOI [10.1145/2737924.2737986, 10.1145/2813885.2737986]
   Lindig C., 2005, AADEBUG, P3
   LLVM Compiler Community, 2021, LLVM LANG REF MAN
   LLVM Compiler Community, 2021, LLVMS AN TRANSF PASS
   LOVEMAN DB, 1977, J ACM, V24, P121, DOI 10.1145/321992.322000
   Martins LGA, 2016, ACM T ARCHIT CODE OP, V13, DOI 10.1145/2883614
   McKeeman William M., 1998, DIGIT TECH J, V10, P100
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Novikov A., 2019, Journal of Open Source Software, V4, P1230, DOI [10.21105/joss.01230, DOI 10.21105/JOSS.01230, 10 . 21105 / joss . 01230]
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Pelleg D., 2000, P 17 INT C MACH LEAR, DOI DOI 10.1007/3-540-44491-2_3
   Purini S, 2013, ACM T ARCHIT CODE OP, V9, DOI 10.1145/2400682.2400715
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Regehr J, 2012, ACM SIGPLAN NOTICES, V47, P335, DOI 10.1145/2345156.2254104
   Rehurek R., 2010, P LREC 2010 WORKSH N, P45, DOI DOI 10.13140/2.1.2393.1847
   Rust, 2021, RUST PROGR LANG
   Schubert PD, 2019, LECT NOTES COMPUT SC, V11428, P393, DOI 10.1007/978-3-030-17465-1_22
   Sheridan F, 2007, SOFTWARE PRACT EXPER, V37, P1475, DOI 10.1002/spe.812
   Sun CN, 2016, PROC INT CONF SOFTW, P203, DOI 10.1145/2884781.2884879
   Sun CN, 2016, ACM SIGPLAN NOTICES, V51, P849, DOI 10.1145/3022671.2984038
   Swift, 2021, SWIFT PROGR LANG
   Vanhatalo J, 2009, DATA KNOWL ENG, V68, P793, DOI 10.1016/j.datak.2009.02.015
   Vegdahl S. R., 1982, MICRO 15. Proceedings of the 15th Annual Workshop on Microprogramming, P125
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P216, DOI [10.1145/2666356.2594334, 10.1145/2594291.2594334]
   Yang XJ, 2011, ACM SIGPLAN NOTICES, V46, P283, DOI 10.1145/1993316.1993532
   Zhang QR, 2017, ACM SIGPLAN NOTICES, V52, P347, DOI [10.1145/3062341.3062379, 10.1145/3140587.3062379]
   Zhao C, 2009, 2009 ICSE WORKSHOP ON AUTOMATION OF SOFTWARE TEST, P36, DOI 10.1109/IWAST.2009.5069039
NR 66
TC 13
Z9 13
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 11
PY 2021
VL 48
IS 7
BP 2339
EP 2358
DI 10.1109/TSE.2021.3058671
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5ZF
UT WOS:000825974100001
DA 2024-07-18
ER

PT J
AU Jiarpakdee, J
   Tantithamthavorn, C
   Hassan, AE
AF Jiarpakdee, Jirayus
   Tantithamthavorn, Chakkrit
   Hassan, Ahmed E.
TI The Impact of Correlated Metrics on the Interpretation of Defect Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Measurement; Analytical models; Analysis of variance; Complexity theory;
   Software quality; Computer bugs; Correlation; Software quality
   assurance; defect models; hypothesis testing; correlated metrics; model
   specification
ID PREDICTING FAULTS; SOFTWARE QUALITY; RESEARCHER BIAS; CODE CHURN;
   STRATEGIES; COMPLEXITY
AB Defect models are analytical models for building empirical theories related to software quality. Prior studies often derive knowledge from such models using interpretation techniques, e.g., ANOVA Type-I. Recent work raises concerns that correlated metrics may impact the interpretation of defect models. Yet, the impact of correlated metrics in such models has not been investigated. In this paper, we investigate the impact of correlated metrics on the interpretation of defect models and the improvement of the interpretation of defect models when removing correlated metrics. Through a case study of 14 publicly- available defect datasets, we find that (1) correlated metrics have the largest impact on the consistency, the level of discrepancy, and the direction of the ranking of metrics, especially for ANOVA techniques. On the other hand, we find that removing all correlated metrics (2) improves the consistency of the produced rankings regardless of the ordering of metrics (except for ANOVA Type-I); (3) improves the consistency of ranking of metrics among the studied interpretation techniques; (4) impacts the model performance by less than 5 percentage points. Thus, when one wishes to derive sound interpretation from defect models, one must (1) mitigate correlated metrics especially for ANOVA analyses; and (2) avoid using ANOVA Type-I even if all correlated metrics are removed.
C1 [Jiarpakdee, Jirayus; Tantithamthavorn, Chakkrit] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
C3 Monash University; Queens University - Canada
RP Jiarpakdee, J (corresponding author), Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
EM jirayus.jiar@gmail.com; chakkrit.tantithamthavorn@monash.edu;
   ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Tantithamthavorn,
   Chakkrit/0000-0002-5516-9984
FU Australian Government through the Australian Research Council's
   Discovery Early Career Researcher Award (DECRA) [DE200100941];
   Australian Research Council [DE200100941] Funding Source: Australian
   Research Council
FX The work of C. Tantithamthavorn was supported in part by the Australian
   Government through the Australian Research Council's Discovery Early
   Career Researcher Award (DECRA) funding scheme (DE200100941).
CR [Anonymous], 1997, P INT C NEUR INF PRO
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Barnett JG, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P496, DOI [10.1109/MSR.2016.063, 10.1145/2901739.2903496]
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bettenburg Nicolas, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P124, DOI 10.1109/ICPC.2010.46
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bird C, 2009, COMMUN ACM, V52, P85, DOI 10.1145/1536616.1536639
   Bowes David., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, P330, DOI DOI 10.1145/2931037.2931039
   Breiman L., 2001, Mach. Learn., V45, P5
   Breiman Leo., 2006, randomforest: Breiman and cutler's random forests for classification and regression
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Chambers J.M., 1991, Statistical Models in S
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Di Penta M, 2008, PROC IEEE INT CONF S, P217, DOI 10.1109/ICSM.2008.4658070
   Efron B., 1993, INTRO BOOTSTRAP, VVolume 914, DOI DOI 10.1007/978-1-4899-4541-9
   Fox J., 2015, Applied regression and generalized linear models
   Friedman J., 2001, ELEMENTS STAT LEARNI, V1, DOI DOI 10.1007/978-0-387-84858-7
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gil Y, 2017, EMPIR SOFTW ENG, V22, P2585, DOI 10.1007/s10664-017-9513-5
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gunes Koru A., 2005, P 2005 WORKSHOP PRED, P1
   Guo L, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P417
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Harrell FE Jr, 2017, Vanderbilt Univ, P229
   Harrell FE, 2015, SPRINGER SER STAT, P1, DOI 10.1007/978-3-319-19425-7_1
   Harrell Jr F. E., 2013, HMISC HARRELL MISCEL
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hemmati H, 2013, IEEE WORK CONF MIN S, P343, DOI 10.1109/MSR.2013.6624048
   Herraiz I, 2011, ICSOFT 2011: PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATABASE TECHNOLOGIES, VOL 2, P5
   Jiarpakdee J., 2018, ONLINE APPENDIX THE
   Jiarpakdee J, 2018, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSME.2018.00018
   Jiarpakdee J, 2016, IEEE INT SYMP SOFTW, P51, DOI 10.1109/ISSREW.2016.30
   Kabinna S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P326, DOI 10.1109/SANER.2016.29
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Keung J, 2013, AUTOMAT SOFTW ENG, V20, P543, DOI 10.1007/s10515-012-0108-5
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kirbas S., 2017, J SOFTW EVOL PROCESS, V29, P2047
   Kraemer HC, 2003, J AM ACAD CHILD PSY, V42, P1524, DOI 10.1097/00004583-200312000-00022
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lu HH, 2014, PROC INT SYMP SOFTW, P312, DOI 10.1109/ISSRE.2014.35
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McIntosh S., 2014, 11 MSR, P192, DOI DOI 10.1145/2597073.2597076
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Mende Thilo., 2010, P 6 INT C PREDICTIVE, P5
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Misirli AT, 2016, EMPIR SOFTW ENG, V21, P605, DOI 10.1007/s10664-015-9370-z
   Morales R, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P171, DOI 10.1109/SANER.2015.7081827
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nam J., 2017, IEEE Transactions on Software Engineering, V44, P874, DOI 10.1109/TSE.2017.2720603
   R. C. Team and contributors worldwide, 2017, STATS R STATS PACK R
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Rajbahadur GK, 2017, IEEE WORK CONF MIN S, P135, DOI 10.1109/MSR.2017.4
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shihab E., 2012, THESIS QUEENS U KING
   Shihab E, 2012, INT SYMP EMP SOFTWAR, P301, DOI 10.1145/2372251.2372305
   Shihab Emad., 2010, P 2010 ACM IEEE INT, P4
   Shimagaki J, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P212, DOI 10.1145/2889160.2889243
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Tantithamthavorn C., 2017, Scottknottesd: The Scott-Knott Effect Size Difference (esd) Test
   Tantithamthavorn C., 2019, P INT C SOFTW ENG
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P867, DOI 10.1145/2889160.2889256
   Tantithamthavorn C, 2016, IEEE T SOFTWARE ENG, V42, P1092, DOI 10.1109/TSE.2016.2553030
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Zhang F, 2017, IEEE T SOFTWARE ENG, V43, P476, DOI 10.1109/TSE.2016.2599161
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 88
TC 41
Z9 42
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2021
VL 47
IS 2
BP 320
EP 331
DI 10.1109/TSE.2019.2891758
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QG7HE
UT WOS:000617753400006
DA 2024-07-18
ER

PT J
AU Sui, YL
   Xue, JL
AF Sui, Yulei
   Xue, Jingling
TI Value-Flow-Based Demand-Driven Pointer Analysis for C and C plus
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE C plus plus languages; Resource management; Open source software;
   Sensitivity; Reachability analysis; Instruction sets; Registers; Strong
   updates; value flow; pointer analysis; flow sensitivity
ID TO ANALYSIS; HEAP CLONING; UNDECIDABILITY; SENSITIVITY
AB We present Supa, a value-flow-based demand-driven flow- and context-sensitive pointer analysis with strong updates for C and C++ programs. Supa enables computing points-to information via value-flow refinement, in environments with small time and memory budgets. We formulate Supa by solving a graph-reachability problem on an inter-procedural value-flow graph representing a program's def-use chains, which are pre-computed efficiently but over-approximately. To answer a client query (a request for a variable's points-to set), Supa reasons about the flow of values along the pre-computed def-use chains sparsely (rather than across all program points), by performing only the work necessary for the query (rather than analyzing the whole program). In particular, strong updates are performed to filter out spurious def-use chains through value-flow refinement as long as the total budget is not exhausted. We have implemented Supa on top of LLVM (4.0.0) together with a comprehensive micro-benchmark suite after a years-long effort (consisting of around 400 test cases, including hand-written ones and the ones extracted from real programs). We have evaluated Supa by choosing uninitialized pointer detection and C++ virtual table resolution as two major clients, using 24 real-world programs including 18 open-source C programs and 6 large CPU2000/2006 C++ benchmarks. For uninitialized pointer client, Supa achieves improved precision as the analysis budget increases, with its flow-sensitive (context-insensitive) analysis reaching 97.4 percent of that achieved by whole-program Sparse Flow-Sensitive analysis (SFS) by consuming about 0.18 seconds and 65 KB of memory per query, on average (with a budget of at most 10,000 value-flow edges per query). With context-sensitivity also considered, Supa becomes more precise for some programs but also incurs more analysis times. To further demonstrate the effectiveness of Supa, we have also evaluated Supa in resolving C++ virtual tables by querying the function pointers at every virtual callsite. Compared to analysis without strong updates for heap objects, Supa's demand-driven context-sensitive strong update analysis reduces 7.35 percent spurious virtual table targets with only 0.4 secs per query, on average.
C1 [Sui, Yulei] Univ Technol Sydney UTS, Ctr Artificial Intelligence CAI, Ultimo, NSW 2007, Australia.
   [Xue, Jingling] Univ New South Wales UNSW, Sydney, NSW 2052, Australia.
C3 University of Technology Sydney; University of New South Wales Sydney
RP Sui, YL (corresponding author), Univ Technol Sydney UTS, Ctr Artificial Intelligence CAI, Ultimo, NSW 2007, Australia.
EM yulei.sui@uts.edu.au; jingling@cse.unsw.edu.au
RI Xue, Jingling/AAE-1991-2020; Sui, Yulei/AAL-5915-2020
OI Xue, Jingling/0000-0003-0380-3506; Sui, Yulei/0000-0002-9510-6574
FU Australia Research Council [DE170101081, DP170103956, DP180104069];
   Australian Research Council [DE170101081] Funding Source: Australian
   Research Council
FX This work is supported by Australia Research Council grants,
   DE170101081, DP170103956 and DP180104069.
CR Acharya M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P746, DOI 10.1145/1985793.1985898
   [Anonymous], 1999, THESIS
   [Anonymous], 1992, ACM LETT PROGRAM LAN
   [Anonymous], 1994, Program analysis and specialization for the C programming language
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Balatsouras G, 2016, LECT NOTES COMPUT SC, V9837, P84, DOI 10.1007/978-3-662-53413-7_5
   Blackshear S, 2013, ACM SIGPLAN NOTICES, V48, P275, DOI 10.1145/2499370.2462186
   Choi J.-D., 1993, Conference Record of the Twentieth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P232, DOI 10.1145/158511.158639
   Choi Jong-Deok, 1991, P 18 ACM SIGPLANSIGA, P55, DOI DOI 10.1145/99583.99594
   Chow F., 1996, Compiler Construction. 6th International Conference, CC'96. Proceedings, P253
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   Das M, 2000, ACM SIGPLAN NOTICES, V35, P35, DOI 10.1145/358438.349309
   EMAMI M, 1994, SIGPLAN NOTICES, V29, P242, DOI 10.1145/773473.178264
   Fan XK, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P329, DOI 10.1145/3092703.3092729
   Feng Y, 2015, ACM SIGPLAN NOTICES, V50, P520, DOI [10.1145/2858965.2814284, 10.1145/2814270.2814284]
   Fink SJ, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1348250.1348255
   Guyer S., 2003, STATIC ANAL, P1073
   Hardekopf B, 2011, INT SYM CODE GENER, P289, DOI 10.1109/CGO.2011.5764696
   Hardekopf B, 2009, ACM SIGPLAN NOTICES, V44, P226, DOI 10.1145/1594834.1480911
   Heintze N, 2001, ACM SIGPLAN NOTICES, V36, P24, DOI 10.1145/381694.378802
   Hind M, 1998, LECT NOTES COMPUT SC, V1503, P57
   *ISO, 1990, 9899 ISOIEC
   KAM JB, 1977, ACTA INFORM, V7, P305, DOI 10.1007/BF00290339
   Kastrinis G, 2013, ACM SIGPLAN NOTICES, V48, P423, DOI 10.1145/2499370.2462191
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Lattner C, 2007, ACM SIGPLAN NOTICES, V42, P278, DOI 10.1145/1273442.1250766
   Lhoták O, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P3, DOI 10.1145/1926385.1926389
   Li L, 2011, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON COMPUTER SCIENCE IN SPORT (IACSS2011), P343
   Lu Y, 2013, LECT NOTES COMPUT SC, V7791, P61, DOI 10.1007/978-3-642-37051-9_4
   Nagaraj V, 2013, INT CONFER PARA, P19, DOI 10.1109/PACT.2013.6618800
   Oh H, 2012, ACM SIGPLAN NOTICES, V47, P229, DOI 10.1145/2345156.2254092
   Pearce DJ, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1290520.1290524
   Ramalingam G, 2002, THEOR COMPUT SCI, V277, P119, DOI 10.1016/S0304-3975(00)00315-7
   RAMALINGAM G, 1994, ACM T PROGR LANG SYS, V16, P1467, DOI 10.1145/186025.186041
   Reps T., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P49, DOI 10.1145/199448.199462
   Reps T, 2000, ACM T PROGR LANG SYS, V22, P162, DOI 10.1145/345099.345137
   Shang Lei, 2012, P 10 INT S CODE GENE, P264
   Spath J., 2016, PROC EUR C OBJECT OR, p22:1, DOI [10.4230/DARTS.2.1.12, DOI 10.4230/LIPICS.ECOOP.2016.22]
   Sridharan M, 2005, ACM SIGPLAN NOTICES, V40, P59, DOI 10.1145/1103845.1094817
   Sridharan M, 2006, ACM SIGPLAN NOTICES, V41, P387, DOI 10.1145/1133981.1134027
   Su Y, 2016, IEEE T PARALL DISTR, V27, P353, DOI 10.1109/TPDS.2015.2397933
   Sui YL, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P460, DOI 10.1145/2950290.2950296
   Sui YL, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION (CC 2016), P265, DOI 10.1145/2892208.2892235
   Sui YL, 2016, INT SYM CODE GENER, P160, DOI 10.1145/2854038.2854043
   Sui YL, 2014, IEEE T SOFTWARE ENG, V40, P107, DOI 10.1109/TSE.2014.2302311
   Sui YL, 2013, INT SYM CODE GENER, P1
   Sui Yulei, 2012, P INT S SOFTW TEST A, P254, DOI [DOI 10.1145/2338965.2336784, DOI 10.1145/04000800.2336784]
   Tavares A, 2014, LECT NOTES COMPUT SC, V8409, P18
   Whaley J, 2004, ACM SIGPLAN NOTICES, V39, P131, DOI 10.1145/996893.996859
   WILSON RP, 1995, SIGPLAN NOTICES, V30, P1, DOI 10.1145/223428.207111
   Yan Dacong, 2011, P 2011 INT S SOFTW T, P155, DOI [10.1145/2001420.2001440, DOI 10.1145/2001420.2001440]
   Ye D., 2014, Proceedings of Annual IEEE/ACM International Symposium on Code Generation and Optimization, P154, DOI DOI 10.1145/2544137.2544154
   Ye S, 2014, LECT NOTES COMPUT SC, V8723, P319, DOI 10.1007/978-3-319-10936-7_20
   Yu HT, 2010, INT SYM CODE GENER, P218
   Zhang QR, 2014, ACM SIGPLAN NOTICES, V49, P829, DOI [10.1145/2660193.2660213, 10.1145/2714064.2660213]
   Zhang X, 2014, ACM SIGPLAN NOTICES, V49, P239, DOI [10.1145/2594291.2594327, 10.1145/2666356.2594327]
   Zhao JZ, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P427
   Zheng X, 2008, POPL'08: PROCEEDINGS OF THE 35TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P197, DOI 10.1145/1328438.1328464
NR 58
TC 19
Z9 23
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2020
VL 46
IS 8
BP 812
EP 835
DI 10.1109/TSE.2018.2869336
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA NB6VD
UT WOS:000560651400001
OA Green Published
DA 2024-07-18
ER

PT J
AU Chen, JF
   Nair, V
   Krishna, R
   Menzies, T
AF Chen, Jianfeng
   Nair, Vivek
   Krishna, Rahul
   Menzies, Tim
TI "Sampling" as a Baseline Optimizer for Search-Based Software Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Search-based SE; sampling; evolutionary algorithms
ID MULTIOBJECTIVE EVOLUTIONARY ALGORITHMS; ABDUCTION; SELECTION; SYSTEMS
AB Increasingly, Software Engineering (SE) researchers use search-based optimization techniques to solve SE problems with multiple conflicting objectives. These techniques often apply CPU-intensive evolutionary algorithms to explore generations of mutations to a population of candidate solutions. An alternative approach, proposed in this paper, is to start with a very large population and sample down to just the better solutions. We call this method "SWAY", short for "the sampling way". This paper compares SWAY versus state-of-the-art search-based SE tools using seven models: five software product line models; and two other software process control models (concerned with project management, effort estimation, and selection of requirements) during incremental agile development. For these models, the experiments of this paper show that SWAY is competitive with corresponding state-of-the-art evolutionary algorithms while requiring orders of magnitude fewer evaluations. Considering the simplicity and effectiveness of SWAY, we, therefore, propose this approach as a baseline method for search-based software engineering models, especially for models that are very slow to execute.
C1 [Chen, Jianfeng; Nair, Vivek; Krishna, Rahul; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Menzies, T (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM jchen37@ncsu.edu; vivekaxl@gmail.com; rkrish11@ncsu.edu; tim@menzies.us
RI Krishna, Rahul/HJG-7915-2022; Krishna, Rahul/AAF-1168-2022; Nair,
   Vivek/AAH-6229-2019; Menzies, Tim/X-7680-2019; Krishna,
   Rahul/AEX-7754-2022
OI Krishna, Rahul/0000-0002-5899-6651; Nair, Vivek/0000-0002-7318-1530;
   Menzies, Tim/0000-0002-5040-3196; Krishna, Rahul/0000-0002-5899-6651
CR [Anonymous], ARXIV170808127
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2000, P 2 ANN C GENETIC EV
   [Anonymous], 1995, Empirical methods for artificial intelligence
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Ardagna D, 2014, LECT NOTES COMPUT SC, V8636, P61
   Balyo T, 2017, AAAI CONF ARTIF INTE, P5061
   Balyo T, 2016, ARTIF INTELL, V241, P45, DOI 10.1016/j.artint.2016.08.007
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Bianchi Leonora, 2009, Natural Computing, V8, P239, DOI 10.1007/s11047-008-9098-4
   Boehm B, 2003, COMPUTER, V36, P57, DOI 10.1109/MC.2003.1204376
   Boehm B., 2003, BALANCING AGILITY DI
   Cantú-Paz E, 2004, LECT NOTES COMPUT SC, V3102, P947
   Chen JF, 2018, INFORM SOFTWARE TECH, V95, P281, DOI 10.1016/j.infsof.2017.08.007
   Chung KM, 2003, NEURAL COMPUT, V15, P2643, DOI 10.1162/089976603322385108
   Deb K., 2000, Parallel Problem Solving from Nature PPSN VI. 6th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1917), P849
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   DEB K, 2001, SCALABLE TEST PROBLE
   Domingos P, 2012, COMMUN ACM, V55, P78, DOI 10.1145/2347736.2347755
   Droste S, 2002, THEOR COMPUT SCI, V276, P51, DOI 10.1016/S0304-3975(01)00182-7
   Faloutsos C., 1995, SIGMOD Record, V24, P163, DOI 10.1145/568271.223812
   Ferrucci F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P462, DOI 10.1109/ICSE.2013.6606592
   Fortin FA, 2012, J MACH LEARN RES, V13, P2171
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Harman M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P5, DOI 10.1145/2648511.2648513
   Harman M, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1029
   Harman M, 2014, LECT NOTES COMPUT SC, V8636, P240
   Henard C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P517, DOI 10.1109/ICSE.2015.69
   HOLLAND JH, 1992, SCI AM, V267, P66, DOI 10.1038/scientificamerican0792-66
   HOLTE RC, 1993, MACH LEARN, V11, P63, DOI 10.1023/A:1022631118932
   Jacob L, 2016, 2016 INTERNATIONAL CONFERENCE ON ENERGY EFFICIENT TECHNOLOGIES FOR SUSTAINABILITY (ICEETS), P96, DOI 10.1109/ICEETS.2016.7582906
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kosub S., 2016, ARXIV161202696
   Krall J., 2014, P AAAI WORKSH, P21
   Krall J, 2016, IEEE T HUM-MACH SYST, V46, P221, DOI 10.1109/THMS.2015.2509980
   Krall J, 2015, IEEE T SOFTWARE ENG, V41, P1001, DOI 10.1109/TSE.2015.2432024
   Lau S.Q., 2006, Domain analysis of e-commerce systems using feature-based model templates
   Lekkalapudi N.K., 2014, Cross trees: Visualizing estimations using decision trees
   Mendonça M, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P108
   Menzies Tim, 2009, Software Process: Improvement and Practice, V14, P213, DOI 10.1002/spip.414
   Menzies T, 2002, IEEE T KNOWL DATA EN, V14, P1362, DOI 10.1109/TKDE.2002.1047773
   Menzies T, 2000, IEEE SOFTWARE, V17, P107, DOI 10.1109/52.877876
   Menzies T, 1997, ARTIF INTELL MED, V10, P145, DOI 10.1016/S0933-3657(97)00391-6
   Menzies T., 2007, P 22 IEEE ACM INT C, P303, DOI [10.1145/1321631.1321676, DOI 10.1145/1321631.1321676]
   Menzies T., 2005, P 20 INT FOR COCOMO, V2005
   Menzies T, 2009, PROC INT CONF SOFTW, P540, DOI 10.1109/ICSE.2009.5070552
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Nair V, 2016, LECT NOTES COMPUT SC, V9962, P96, DOI 10.1007/978-3-319-47106-8_7
   Oliveira VPL, 2016, LECT NOTES COMPUT SC, V9962, P112, DOI 10.1007/978-3-319-47106-8_8
   Ong YS, 2003, AIAA J, V41, P687, DOI 10.2514/2.1999
   Ouni A, 2017, INFORM SOFTWARE TECH, V83, P55, DOI 10.1016/j.infsof.2016.11.007
   Owen D, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P237
   Owen D, 2002, 7TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P119, DOI 10.1109/HASE.2002.1173112
   Platt J, 2005, P 10 INT WORKSH ART, P261
   Port Dan, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P268, DOI 10.1109/ASE.2008.37
   Sarro F, 2017, IEEE T SOFTWARE ENG, V43, P898, DOI 10.1109/TSE.2017.2650914
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   Shahrzad H, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P693, DOI 10.1145/2908812.2908911
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Siegmund N, 2012, PROC INT CONF SOFTW, P167, DOI 10.1109/ICSE.2012.6227196
   Van Veldhuizen D. A., 1998, GEN PROGR C, P221
   Veerappa V, 2011, INT REQUIR ENG CONF, P89, DOI 10.1109/RE.2011.6051654
   Wang HD, 2017, J SYST SOFTWARE, V124, P274, DOI 10.1016/j.jss.2016.06.065
   Wang S, 2016, PROC INT CONF SOFTW, P631, DOI 10.1145/2884781.2884880
   Wang SA, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1493
   Wang Tiantian, 2013, P 2013 9 JOINT M FDN, P455
   Whigham PA, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2738037
   Wolpert D. H., 1997, IEEE Transactions on Evolutionary Computation, V1, P67, DOI 10.1109/4235.585893
   Yoo S, 2013, EMPIR SOFTW ENG, V18, P550, DOI 10.1007/s10664-013-9247-y
   Zhang Y., 2016, SBSE REPOSITORY REPO
   Zhou AM, 2006, IEEE C EVOL COMPUTAT, P892
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
   Zuluaga M., 2013, INT C MACH LEARN, V28, P462
NR 78
TC 22
Z9 22
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2019
VL 45
IS 6
BP 597
EP 614
DI 10.1109/TSE.2018.2790925
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ID5AF
UT WOS:000471686800004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Scalabrino, S
   Bavota, G
   Russo, B
   Di Penta, M
   Oliveto, R
AF Scalabrino, Simone
   Bavota, Gabriele
   Russo, Barbara
   Di Penta, Massimiliano
   Oliveto, Rocco
TI Listening to the Crowd for the Release Planning of Mobile Apps
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Release planning; mobile apps; mining software repositories
ID USER REVIEWS
AB The market for mobile apps is getting bigger and bigger, and it is expected to be worth over 100 Billion dollars in 2020. To have a chance to succeed in such a competitive environment, developers need to build and maintain high-quality apps, continuously astonishing their users with the coolest new features. Mobile app marketplaces allow users to release reviews. Despite reviews are aimed at recommending apps among users, they also contain precious information for developers, reporting bugs and suggesting new features. To exploit such a source of information, developers are supposed to manually read user reviews, something not doable when hundreds of them are collected per day. To help developers dealing with such a task, we developed CLAP (Crowd Listener for releAse Planning), a web application able to (i) categorize user reviews based on the information they carry out, (ii) cluster together related reviews, and (iii) prioritize the clusters of reviews to be implemented when planning the subsequent app release. We evaluated all the steps behind CLAP, showing its high accuracy in categorizing and clustering reviews and the meaningfulness of the recommended prioritizations. Also, given the availability of CLAP as a working tool, we assessed its applicability in industrial environments.
C1 [Scalabrino, Simone] Univ Molise, I-86100 Campobasso, Italy.
   [Oliveto, Rocco] Univ Molise, Dept Biosci & Terr, I-86100 Campobasso, Italy.
   [Oliveto, Rocco] Univ Molise, Comp Sci Program, I-86100 Campobasso, Italy.
   [Oliveto, Rocco] Univ Molise, Lab Comp Sci & Sci Computat, I-86100 Campobasso, Italy.
   [Bavota, Gabriele] USI, CH-6904 Lugano, Switzerland.
   [Russo, Barbara] Free Univ Bozen Bolzano, Fac Comp Sci, I-39100 Bolzano, South Tyrol, Italy.
   [Di Penta, Massimiliano] Univ Sannio, I-82100 Benevento, Italy.
C3 University of Molise; University of Molise; University of Molise;
   University of Molise; Free University of Bozen-Bolzano; University of
   Sannio
RP Scalabrino, S (corresponding author), Univ Molise, I-86100 Campobasso, Italy.
EM simone.scalabrino@unimol.it; gabriele.bavota@usi.ch;
   barbara.russo@unibz.it; dipenta@unisannio.it; rocco.oliveto@unimol.it
RI Di Penta, Massimiliano/AAF-9656-2021; Li, Wang/M-1612-2019; Scalabrino,
   Simone/AAC-7669-2019; Russo, Barbara/AAA-8850-2019
OI Scalabrino, Simone/0000-0003-1764-9685; Russo,
   Barbara/0000-0003-3737-9264; Di Penta, Massimiliano/0000-0002-0340-9747;
   BAVOTA, Gabriele/0000-0002-2216-3148
FU SNF project JITRA [172479]
FX Bavota was supported in part by the SNF project JITRA, No. 172479.
CR Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Chen N, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P305, DOI 10.1145/2684822.2685305
   Ciurumelea A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2017.7884612
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Dumitru H, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P181, DOI 10.1145/1985793.1985819
   Ester M., 1996, KDD 96, P226, DOI DOI 10.5555/3001460.3001507
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Guzman E, 2015, IEEE INT CONF AUTOM, P771, DOI 10.1109/ASE.2015.88
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Hayes J. H., 2011, P 6 INT WORKSH TRAC, P50
   Hu MQ, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P755
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Porter MF, 2006, PROGRAM-ELECTRON LIB, V40, P211, DOI [10.1108/00330330610681286, 10.1108/eb046814]
   Ruiz IJM, 2014, IEEE SOFTWARE, V31, P86, DOI 10.1109/MS.2014.79
   Scalabrino S., 2017, REPLICATION PACKAGE
   Socher Richard, 2013, Long Papers, P455
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Wen Z, 2004, PROG COMPREHEN, P194, DOI 10.1109/WPC.2004.1311061
   Zhang YM, 2013, PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON ELECTRIC AND ELECTRONICS, P141
NR 35
TC 42
Z9 43
U1 1
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2019
VL 45
IS 1
BP 68
EP 86
DI 10.1109/TSE.2017.2759112
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HH4ZO
UT WOS:000455735600004
DA 2024-07-18
ER

PT J
AU Palomba, F
   Panichella, A
   Zaidman, A
   Oliveto, R
   De Lucia, A
AF Palomba, Fabio
   Panichella, Annibale
   Zaidman, Andy
   Oliveto, Rocco
   De Lucia, Andrea
TI The Scent of a Smell: An Extensive Comparison Between Textual and
   Structural Smells
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Code smells; empirical study; mining software repositories
ID CODE-SMELLS; IDENTIFICATION; IMPACT; REFACTORINGS; BAD
AB Code smells are symptoms of poor design or implementation choices that have a negative effect on several aspects of software maintenance and evolution, such as program comprehension or change- and fault-proneness. This is why researchers have spent a lot of effort on devising methods that help developers to automatically detect them in source code. Almost all the techniques presented in literature are based on the analysis of structural properties extracted from source code, although alternative sources of information (e.g., textual analysis) for code smell detection have also been recently investigated. Nevertheless, some studies have indicated that code smells detected by existing tools based on the analysis of structural properties are generally ignored (and thus not refactored) by the developers. In this paper, we aim at understanding whether code smells detected using textual analysis are perceived and refactored by developers in the same or different way than code smells detected through structural analysis. To this aim, we set up two different experiments. We have first carried out a software repository mining study to analyze how developers act on textually or structurally detected code smells. Subsequently, we have conducted a user study with industrial developers and quality experts in order to qualitatively analyze how they perceive code smells identified using the two different sources of information. Results indicate that textually detected code smells are easier to identify and for this reason they are considered easier to refactor with respect to code smells detected using structural properties. On the other hand, the latter are often perceived as more severe, but more difficult to exactly identify and remove.
C1 [Palomba, Fabio; Zaidman, Andy] Delft Univ Technol, NL-2628 CD Delft, Netherlands.
   [Panichella, Annibale] Univ Luxembourg, SnT Ctr, L-4365 Esch Sur Alzette, Luxembourg.
   [Oliveto, Rocco] Univ Molise, I-86100 Campobasso, Italy.
   [De Lucia, Andrea] Univ Salerno, Dept Comp Sci, Software Engn, I-84084 Fisciano, Italy.
C3 Delft University of Technology; University of Luxembourg; University of
   Molise; University of Salerno
RP Palomba, F (corresponding author), Delft Univ Technol, NL-2628 CD Delft, Netherlands.
EM f.palomba@tudelft.nl; annibale.panichella@uni.lu;
   a.e.zaidman@tudelft.nl; rocco.oliveto@unimol.it; adelucia@unisa.it
RI De Lucia, Andrea/AAG-6781-2020; Panichella, Annibale/AAJ-8443-2020;
   Zaidman, Andy/O-6542-2014
OI Palomba, Fabio/0000-0001-9337-5116; Panichella,
   Annibale/0000-0002-7395-3588; De Lucia, Andrea/0000-0002-4238-1425;
   Zaidman, Andy/0000-0003-2413-3935
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Aniche M, 2016, IEEE INT WORK C SO, P41, DOI 10.1109/SCAM.2016.19
   [Anonymous], 2016, 2016 IEEE 24th International Conference on Program Comprehension (ICPC)
   Arcoverde R., 2011, WORKSH REF TOOLS, P33
   Athanasiou D, 2014, IEEE T SOFTWARE ENG, V40, P1100, DOI 10.1109/TSE.2014.2342227
   Atkinson D. C., 2005, Proceedings. 12th Asia-Pacific Software Engineering Conference
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bavota G., 2014, Recommendation Systems in Software Engineering, P387
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Bavota G, 2014, EMPIR SOFTW ENG, V19, P1617, DOI 10.1007/s10664-013-9256-x
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Bavota G, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P692, DOI 10.1109/ICSE.2013.6606615
   Bavota G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559935
   Bavota G, 2013, EMPIR SOFTW ENG, V18, P901, DOI 10.1007/s10664-012-9226-8
   Bavota G, 2012, PROC INT CONF SOFTW, P1419, DOI 10.1109/ICSE.2012.6227233
   Bavota Gabriele., 2010, Proceedings of the IEEE International Conference on Software Maintenance ICSM, P1
   Boussaa Mohamed, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P50, DOI 10.1007/978-3-642-39742-4_6
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Candela I, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2928268
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Conover W. J., 1998, PRACTICAL NONPARAMET, V3rd
   Cullum J. K., 1998, LANCZOS ALGORITHMS L
   Cunningham W., 1993, OOPS MESSENGER, V4, P29, DOI DOI 10.1145/157710.157715
   D'Ambros Marco, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P23, DOI 10.1109/QSIC.2010.58
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Fernandes E, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915984
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Fokaefs M, 2012, J SYST SOFTWARE, V85, P2241, DOI 10.1016/j.jss.2012.04.013
   Fontana F. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P450, DOI 10.1109/ICSTW.2011.12
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P609, DOI 10.1109/SANER.2016.84
   Fontana FA, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a5
   Fontana FA, 2013, PROC IEEE INT CONF S, P396, DOI 10.1109/ICSM.2013.56
   Fowler M., 2017, REFACTORING CATALOG
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gatrell M, 2015, SCI COMPUT PROGRAM, V102, P44, DOI 10.1016/j.scico.2014.12.002
   Girvan M, 2002, P NATL ACAD SCI USA, V99, P7821, DOI 10.1073/pnas.122653799
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Hall M, 2014, PROC IEEE INT CONF S, P466, DOI 10.1109/ICSME.2014.75
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   HendersonSellers B, 1996, OBJECT ORIENTED SYST, V3, P143
   Hosmer DW, 2000, APPL LOGISTIC REGRES
   inCode Team, 2017, INC TOOL
   iPlasma Team, 2017, IPL TOOL
   Jaccard P., 1901, B SOC VAUD SCI NAT, V37, P547, DOI DOI 10.5169/SEALS-266450
   Kessentini M., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, P113
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Kuusela H, 2000, AM J PSYCHOL, V113, P387, DOI 10.2307/1423365
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   LETOVSKY S, 1987, J SYST SOFTWARE, V7, P325, DOI 10.1016/0164-1212(87)90032-X
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Likas A, 2003, PATTERN RECOGN, V36, P451, DOI 10.1016/S0031-3203(02)00060-2
   Lim E, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.130
   Lozano Angelo., 2007, Ninth International Workshop on Principles of software evolution, P31
   Mäntylä MV, 2006, EMPIR SOFTW ENG, V11, P395, DOI 10.1007/s10664-006-9002-8
   Marcus A, 2005, PROC IEEE INT CONF S, P133
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Marinescu R, 2012, IBM J RES DEV, V56, DOI 10.1147/JRD.2012.2204512
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Moonen L., 2008, Software Evolution, P173
   Munro MJ, 2005, 2005 11th International Symposium on Software Metrics (METRICS), P124
   Oizumi W, 2016, PROC INT CONF SOFTW, P440, DOI 10.1145/2884781.2884868
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Oliveto R, 2010, EUR CON SFTWR MTNCE, P248, DOI 10.1109/CSMR.2010.47
   Palomba Fabio, 2016, 2016 IEEE International Conference on Software Maintenance and Evolution (ICSME), P244, DOI 10.1109/ICSME.2016.27
   Palomba F., 2017, P INT C SOFTW MAINT
   Palomba F., 2017, ONLINE APPENDIX EXTE, DOI [10.6084/m9.figshare.3102244, DOI 10.6084/M9.FIGSHARE.3102244]
   Palomba F, 2017, INT C PROGRAM COMPRE, P176, DOI 10.1109/ICPC.2017.38
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Pelleg D., 2000, P 17 INT C MACH LEAR, DOI DOI 10.1007/3-540-44491-2_3
   Peters R, 2012, EUR CON SFTWR MTNCE, P411, DOI 10.1109/CSMR.2012.79
   Pietrzak B, 2005, FRONT ARTIF INTEL AP, V130, P353
   Porter MF, 2006, PROGRAM-ELECTRON LIB, V40, P211, DOI [10.1108/00330330610681286, 10.1108/eb046814]
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Riel AJ., 1996, Object-Oriented Design Heuristics
   SACKETT DL, 1979, J CHRON DIS, V32, P51, DOI 10.1016/0021-9681(79)90012-2
   Sahin D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2675067
   Sales V, 2013, WORK CONF REVERSE EN, P232, DOI 10.1109/WCRE.2013.6671298
   Shaw M., 1989, Proceedings of Fifth International Workshop on Software Specification and Design (Cat. No.89CH2717-7), P143, DOI 10.1145/75199.75222
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Shull F., 2013, PERSPECTIVES FUTURE, P179, DOI DOI 10.1007/978-3-642-37395-4_12
   Silva D, 2014, 22 INT C PROGRAM COM, P146
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   Simons Chris, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P47, DOI 10.1007/978-3-319-22183-0_4
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Travassos G. H., 1999, SIGPLAN Notices, V34, P47, DOI 10.1145/320385.320389
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   van Emden E., 2002, P WORK C REV ENG
   Vidal SA, 2016, AUTOMAT SOFTW ENG, V23, P501, DOI 10.1007/s10515-014-0175-x
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   Wang XG, 2011, SYST ENG PROC, V1, P35, DOI 10.1016/j.sepro.2011.08.007
   Wang Y, 2009, PROC IEEE INT CONF S, P413, DOI 10.1109/ICSM.2009.5306290
   Webster BruceF., 1995, PITFALLS OBJECT ORIE
   Yamashita A, 2015, PROC IEEE INT CONF S, P121, DOI 10.1109/ICSM.2015.7332458
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
NR 110
TC 40
Z9 47
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2018
VL 44
IS 10
BP 977
EP 1000
DI 10.1109/TSE.2017.2752171
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GX5PZ
UT WOS:000447803400004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Huber, N
   Brosig, F
   Spinner, S
   Kounev, S
   Bähr, M
AF Huber, Nikolaus
   Brosig, Fabian
   Spinner, Simon
   Kounev, Samuel
   Baehr, Manuel
TI Model-Based Self-Aware Performance and Resource Management Using the
   Descartes Modeling Language
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Autonomic; self-aware; adaptation; model-based; modeling language;
   performance; efficiency
ID ARCHITECTURE-LEVEL; SYSTEMS; ADAPTATION
AB Modern IT systems have increasingly distributed and dynamic architectures providing flexibility to adapt to changes in the environment and thus enabling higher resource efficiency. However, these benefits come at the cost of higher system complexity and dynamics. Thus, engineering systems that manage their end-to-end application performance and resource efficiency in an autonomic manner is a challenge. In this article, we present a holistic model-based approach for self-aware performance and resource management leveraging the Descartes Modeling Language (DML), an architecture-level modeling language for online performance and resource management. We propose a novel online performance prediction process that dynamically tailors the model solving depending on the requirements regarding accuracy and overhead. Using these prediction capabilities, we implement a generic model-based control loop for proactive system adaptation. We evaluate our model-based approach in the context of two representative case studies showing that with the proposed methods, significant resource efficiency gains can be achieved while maintaining performance requirements. These results represent the first end-to-end validation of our approach, demonstrating its potential for self-aware performance and resource management in the context of modern IT systems and infrastructures.
C1 [Huber, Nikolaus; Brosig, Fabian; Spinner, Simon; Kounev, Samuel] Univ Wurzburg, Chair Software Engn, Dept Comp Sci, D-97070 Wurzburg, Germany.
   [Baehr, Manuel] Blue Yonder GmbH & Co KG, D-76149 Karlsruhe, Germany.
C3 University of Wurzburg
RP Huber, N (corresponding author), Univ Wurzburg, Chair Software Engn, Dept Comp Sci, D-97070 Wurzburg, Germany.
EM nikolaus.huber@uni-wuerzburg.de; fabian.brosig@uni-wuerzburg.de;
   simon.spinner@uni-wuerzburg.de; samuel.kounev@uni-wuerzburg.de;
   manuel.baehr@blue-yonder.com
FU Deutsche Forschungsgemeinschaft (DFG) [KO 3445/11-1, KO 3445/15-1]
FX This work was funded by the Deutsche Forschungsgemeinschaft (DFG) under
   grant No. KO 3445/11-1 and grant No. KO 3445/15-1. Parts of this work
   have been done during Fabian Brosig's summer internship at
   Salesforce.com. We acknowledge the many fruitful discussions with Jurgen
   Walter and Simon Eismann from the Chair of Software Engineering,
   University of Wurzburg.
CR Abdelzaher TF, 2002, IEEE T PARALL DISTR, V13, P80, DOI 10.1109/71.980028
   Almeida J, 2010, J PARALLEL DISTR COM, V70, P344, DOI 10.1016/j.jpdc.2009.08.009
   Amazon Web Services, 2010, AMAZ AUT
   Amoui M, 2012, J SYST SOFTWARE, V85, P2720, DOI 10.1016/j.jss.2012.05.033
   [Anonymous], P 8 INT ACM SIGSOFT
   [Anonymous], 2010, P 7 INT C AUT COMP I, DOI DOI 10.1145/1809049.1809084
   [Anonymous], 1998, Queueing networks and Markov chains: modeling and performance evaluation with computer science applications
   [Anonymous], 2000, Simulation Modeling and Analysis
   Becker M., 2012, PROC 8 INT ACM SIGSO, P117
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Bencomo N, 2009, LECT NOTES COMPUT SC, V5525, P183, DOI 10.1007/978-3-642-02161-9_10
   Bennani MN, 2005, ICAC 2005: Second International Conference on Autonomic Computing, Proceedings, P229
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Brosig F., 2014, THESIS
   Brosig F, 2014, SCI COMPUT PROGRAM, V90, P71, DOI 10.1016/j.scico.2013.06.004
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Cheng SW, 2012, J SYST SOFTWARE, V85, P2860, DOI 10.1016/j.jss.2012.02.060
   Cunha I, 2007, 2007 10TH IFIP/IEEE INTERNATIONAL SYMPOSIUM ON INTEGRATED NETWORK MANAGEMENT (IM 2009), VOLS 1 AND 2, P129, DOI 10.1109/INM.2007.374777
   de Lemos Rogerio., 2013, Software Engineering for Self-Adaptive Systems II, volume 7475 of Lecture Notes in Computer Science, V7475, P265
   Eskenazi E, 2004, LECT NOTES COMPUT SC, V3054, P280
   Franks G., 2011, LAYERED QUEUEING NET
   Franks G, 2009, IEEE T SOFTWARE ENG, V35, P148, DOI 10.1109/TSE.2008.74
   Gambi A, 2013, IEEE INTERNET COMPUT, V17, P40, DOI 10.1109/MIC.2012.142
   Garlan D., 2009, Autonomic Computing and Networking, P31, DOI [DOI 10.1007/978-0-387-89828-5, DOI 10.1007/978-0-387-89828-52]
   Geihs K, 2009, SOFTWARE PRACT EXPER, V39, P385, DOI 10.1002/spe.900
   Gilmore S, 2005, LECT NOTES COMPUT SC, V3670, P200
   Gorsler Fabian, 2014, P 5 ACM SPEC INT C P, P99
   Gueyoung Jung, 2008, 2008 International Conference on Autonomic Computing (ICAC '08), P23, DOI 10.1109/ICAC.2008.21
   Haibo Mi, 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P514, DOI 10.1109/SCC.2010.69
   Hallsteinsen S, 2012, J SYST SOFTWARE, V85, P2840, DOI 10.1016/j.jss.2012.07.052
   Herbst NR, 2014, CONCURR COMP-PRACT E, V26, P2053, DOI 10.1002/cpe.3224
   Huber N, 2014, SERV ORIENTED COMPUT, V8, P73, DOI 10.1007/s11761-013-0144-4
   Jung GY, 2010, INT CON DISTR COMP S, DOI 10.1109/ICDCS.2010.88
   KEPHART J., 2007, P 4 INT C AUTONOMIC, P24, DOI DOI 10.1109/ICAC.2007.12
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kounev S., 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P621, DOI 10.1109/SCC.2010.94
   Kounev S., 2015, Dagstuhl Rep., V5, P164, DOI [10.4230/DagRep.5.1.164, DOI 10.4230/DAGREP.5.1.164]
   Kounev S., 2014, DESCARTES MODELING L
   Kounev S, 2006, IEEE T SOFTWARE ENG, V32, P486, DOI 10.1109/TSE.2006.69
   Kounev S, 2016, COMPUTER, V49, P53, DOI 10.1109/MC.2016.198
   Kounev S, 2011, LECT NOTES COMPUT SC, V6977, P10, DOI 10.1007/978-3-642-24749-1_2
   Koziolek H., 2008, THESIS
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Li J, 2009, CLOUD: 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING CHALLENGES OF CLOUD COMPUTING, P15, DOI 10.1109/CLOUD.2009.5071528
   Martens A., 2010, P 1 JOINT WOSP SIPEW, P105, DOI [DOI 10.1145/1712605.1712624, 10.1145]
   Meier P., 2011, Proceedings of the 2011 IEEE 19th International Symposium on Modelling, Analysis & Simulation of Computer and Telecommunication Systems (MASCOTS 2011), P339, DOI 10.1109/MASCOTS.2011.23
   Menasce D.A., 2000, SCALING E BUSINESS T
   Menasce D.A., 2010, WOSP SIPEW 10, P27
   Menascé DA, 2011, IEEE SOFTWARE, V28, P78, DOI 10.1109/MS.2011.22
   Microsoft Developer Network (MSDN), 2012, AUT WIND AZ
   Morin B, 2009, COMPUTER, V42, P44, DOI 10.1109/MC.2009.327
   OMG, 2015, MET FAC MOF VERS 2 5
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Padala P., 2014, VMWARE TECH J, V3, P12
   ROLIA JA, 1995, IEEE T SOFTWARE ENG, V21, P689, DOI 10.1109/32.403785
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Spinner S., 2012, P 33 INT C APPL THEO, P388
   Tesauro G, 2005, 3RD INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P65
   Verma A, 2008, LECT NOTES COMPUT SC, V5346, P243, DOI 10.1007/978-3-540-89856-6_13
   VMware, 2006, RES MAN VMWARE DRS
   Vogel T, 2014, ACM T AUTON ADAP SYS, V8, DOI 10.1145/2555612
   Weyns D, 2012, ACM T AUTON ADAP SYS, V7, DOI 10.1145/2168260.2168268
   WOODSIDE CM, 1995, IEEE T COMPUT, V44, P20, DOI 10.1109/12.368012
   Zhang Q., 2007, 4 INT C AUTONOMIC CO, P27
NR 64
TC 28
Z9 31
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2017
VL 43
IS 5
BP 432
EP 452
DI 10.1109/TSE.2016.2613863
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EU9BO
UT WOS:000401332400003
DA 2024-07-18
ER

PT J
AU Zhang, MX
   Wu, YW
   Lu, S
   Qi, SX
   Ren, JL
   Zheng, WM
AF Zhang, Mingxing
   Wu, Yongwei
   Lu, Shan
   Qi, Shanxiang
   Ren, Jinglei
   Zheng, Weimin
TI A Lightweight System for Detecting and Tolerating Concurrency Bugs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Concurrency bugs; software reliability; bug tolerating
AB Along with the prevalence of multi-threaded programs, concurrency bugs have become one of the most important sources of software bugs. Even worse, due to the non-deterministic nature of concurrency bugs, these bugs are both difficult to detect and fix even after the detection. As a result, it is highly desired to develop an all-around approach that is able to not only detect them during the testing phase but also tolerate undetected bugs during production runs. However, existing bug-detecting and bug-tolerating tools are usually either 1) constrained in types of bugs they can handle or 2) requiring specific hardware supports for achieving an acceptable overhead. In this paper, we present a novel program invariant, name Anticipating Invariant (AI), that can detect most types of concurrency bugs. More importantly, AI can be used to anticipate many concurrency bugs before any irreversible changes have been made. Thus it enables us to develop a software-only system that is able to forestall failures with a simple thread stalling technique, which does not rely on execution roll-back and hence has good performance. Experiments with 35 real-world concurrency bugs demonstrate that AI is capable of detecting and tolerating many important types of concurrency bugs, including both atomicity and order violations. It has also exposed two new bugs (confirmed by developers) that were never reported before in the literature. Performance evaluation with 6 representative parallel programs shows that AI incurs negligible overhead (< 1%) for many nontrivial desktop and server applications.
C1 [Zhang, Mingxing; Wu, Yongwei; Ren, Jinglei; Zheng, Weimin] Tsinghua Univ, Tsinghua Natl Lab Informat Sci & Technol TNLIST, Dept Comp Sci & Technol, Beijing 100084, Peoples R China.
   [Zhang, Mingxing; Wu, Yongwei; Ren, Jinglei; Zheng, Weimin] Tsinghua Univ Shenzhen, Res Inst, Shenzhen 518057, Peoples R China.
   [Zhang, Mingxing; Wu, Yongwei; Ren, Jinglei; Zheng, Weimin] Tsinghua Univ, Yangtze Delta Reg Inst, Technol Innovat Ctr Yinzhou, Ningbo 315000, Zhejiang, Peoples R China.
   [Lu, Shan] Univ Chicago, Dept Comp Sci, Chicago, IL 60637 USA.
   [Qi, Shanxiang] UBER Growth Team, San Francisco, CA USA.
C3 Tsinghua University; Tsinghua University; Tsinghua Shenzhen
   International Graduate School; Tsinghua University; University of
   Chicago
RP Zhang, MX (corresponding author), Tsinghua Univ, Tsinghua Natl Lab Informat Sci & Technol TNLIST, Dept Comp Sci & Technol, Beijing 100084, Peoples R China.; Zhang, MX (corresponding author), Tsinghua Univ Shenzhen, Res Inst, Shenzhen 518057, Peoples R China.; Zhang, MX (corresponding author), Tsinghua Univ, Yangtze Delta Reg Inst, Technol Innovat Ctr Yinzhou, Ningbo 315000, Zhejiang, Peoples R China.
EM zhangmx12@mails.tsinghua.edu.cn; wuyw@mails.tsinghua.edu.cn;
   shanlu@cs.uchicago.edu; qi@uber.com; renjl10@mails.tsinghua.edu.cn;
   zwm-dcs@mails.tsinghua.edu.cn
RI Luo, Shan/JEP-7010-2023; WU, ZHEN/GRN-7688-2022; zheng,
   wei/IQT-9639-2023
OI WU, ZHEN/0000-0001-8719-057X; 
FU Natural Science Foundation of China [61433008, 61373145, 61170210,
   U1435216]; National Basic Research (973) Program of China
   [2014CB340402]; National High-Tech R&D (863) Program of China
   [2013AA01A213]; Chinese Special Project of Science and Technology
   [2013zx01039002-002]; US National Science Foundation (NSF) [CCF-1217582,
   CCF-1439091]; Direct For Computer & Info Scie & Enginr; Division of
   Computing and Communication Foundations [1439091] Funding Source:
   National Science Foundation
FX The authors from Tsinghua University are sponsored by the Natural
   Science Foundation of China (61433008, 61373145, 61170210, U1435216),
   the National Basic Research (973) Program of China (2014CB340402),
   National High-Tech R&D (863) Program of China (2013AA01A213), Chinese
   Special Project of Science and Technology (2013zx01039002-002). Shan
   Lu's research is partly supported by US National Science Foundation
   (NSF) grant CCF-1217582 and CCF-1439091. An earlier version of this work
   [1] appeared in Proceedings of the 22nd ACM SIGSOFT International
   Symposium on Foundations of Software Engineering (FSE '14).
CR [Anonymous], 2016, BUG REP TIM CLOS STA
   [Anonymous], 2005, REV MICR SEC B REL P
   [Anonymous], 2001, INTRO ALGORITHMS
   Burckhardt S, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P167
   BURNIM J, 2011, ASPLOS 16 16 INT C, P79, DOI DOI 10.1145/1950365.1950377
   Chilimbi TM, 2004, ACM SIGPLAN NOTICES, V39, P156, DOI 10.1145/1037187.1024412
   Cowan C., 2000, Proceedings of the National Information Systems Security Conference (NISSC), P16
   Edelstein O, 2002, IBM SYST J, V41, P111, DOI 10.1147/sj.411.0111
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Flanagan C, 2004, ACM SIGPLAN NOTICES, V39, P256, DOI 10.1145/982962.964023
   Flanagan C, 2003, ACM SIGPLAN NOTICES, V38, P338, DOI 10.1145/780822.781169
   Flanagan C, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P121, DOI 10.1145/1542476.1542490
   Gu Z., 2010, ICSE 10, V1, P55, DOI DOI 10.1145/1806799.1806812
   Huang J., 2011, ISSTA, P144, DOI [10.1145/2001420.2001438, DOI 10.1145/2001420.2001438]
   Jie Yu, 2010, Proceedings 2010 43rd Annual IEEE/ACM International Symposium on Microarchitecture (MICRO 2010), P263, DOI 10.1109/MICRO.2010.56
   Jin G., 2012, 10 USENIX S OP SYST, P221
   Jin GL, 2010, ACM SIGPLAN NOTICES, V45, P241, DOI 10.1145/1932682.1869481
   Khoshnood Sepideh, 2015, P 2015 INT S SOFTW E, P165
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Li D, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P35
   Liu P, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P318, DOI 10.1145/2635868.2635881
   Liu P, 2014, ACM SIGPLAN NOTICES, V49, P543, DOI [10.1145/2714064.2660217, 10.1145/2660193.2660217]
   Liu P, 2012, PROC INT CONF SOFTW, P299, DOI 10.1109/ICSE.2012.6227184
   Lu Lanyue., 2013, Proceedings of the 11th USENIX Conference on File and Storage Technologies, FAST'13, P31
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Lu S, 2006, ACM SIGPLAN NOTICES, V41, P37, DOI 10.1145/1168918.1168864
   Lu Zhang, 2014, 2014 17th International Symposium on Electromagnetic Launch Technology (EML), P1, DOI 10.1109/EML.2014.6920212
   Lucia Brandon, 2009, Proceedings of the 2009 42nd Annual IEEE/ACM International Symposium on Microarchitecture (MICRO 2009), P553, DOI 10.1145/1669112.1669181
   Lucia B, 2008, CONF PROC INT SYMP C, P277, DOI 10.1109/ISCA.2008.4
   Lucia B, 2013, ACM SIGPLAN NOTICES, V48, P39, DOI 10.1145/2499368.2451121
   Lucia B, 2010, CONF PROC INT SYMP C, P222, DOI 10.1145/1816038.1815988
   Luo Qingzhou., 2013, International Symposium on Software Testing and Analysis, ISSTA'13, Lugano, Switzerland, July 15-20, 2013, P156
   Marino D, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P134, DOI 10.1145/1542476.1542491
   MIN SL, 1991, SIGPLAN NOTICES, V26, P235, DOI 10.1145/106973.106996
   Musuvathi M., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, P267
   Musuvathi M, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P446, DOI 10.1145/1250734.1250785
   Muzahid A., 2010, Proceedings 2010 43rd Annual IEEE/ACM International Symposium on Microarchitecture (MICRO 2010), P287, DOI 10.1109/MICRO.2010.32
   Muzahid A, 2009, CONF PROC INT SYMP C, P337, DOI 10.1145/1555815.1555797
   Narayanasamy S, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P22, DOI 10.1145/1250734.1250738
   NETZER RHB, 1991, SIGPLAN NOTICES, V26, P133
   Park C.-S., 2008, FSE, P135
   Park C.-S., 2011, P 2011 INT C HIGH PE, p51:1
   Park S, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P645
   Park S, 2009, ACM SIGPLAN NOTICES, V44, P25, DOI 10.1145/1508284.1508249
   Sasturkar Amit., 2005, PPOPP 05, P83, DOI DOI 10.1145/1065944.1065956
   Savage S, 1997, ACM T COMPUT SYST, V15, P391, DOI 10.1145/269005.266641
   Sen K, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P11, DOI 10.1145/1375581.1375584
   Serebryany K., 2011, RV, P110, DOI [10.1007/978-3-642-29860-8_9, 10.1007/, DOI 10.1007/978-3-642-29860-8_9]
   Shi Y, 2010, ACM SIGPLAN NOTICES, V45, P160, DOI 10.1145/1932682.1869474
   Veeraraghavan K, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P369
   Volos H, 2012, ASPLOS XVII: SEVENTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P211
   Wang C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P221, DOI 10.1145/1985793.1985824
   Wang Yin, 2008, 8 USENIX S OP SYST D, P281
   WOO SC, 1995, ACM COMP AR, P24, DOI 10.1109/ISCA.1995.524546
   Wu JH, 2010, BIOMED ENG ONLINE, V9, DOI 10.1186/1475-925X-9-75
   Xu M, 2005, ACM SIGPLAN NOTICES, V40, P1, DOI 10.1145/1064978.1065013
   Yu J, 2009, CONF PROC INT SYMP C, P325, DOI 10.1145/1555815.1555796
   Yu JJ, 2012, PROCEEDINGS OF THE ASME TURBO EXPO 2012, VOL 7, PTS A AND B, P485, DOI 10.1145/2398857.2384651
   Yu Y., 2005, P 20 ACM S OP SYST P, P221
   Zhang MX, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P330, DOI 10.1145/2635868.2635885
   Zhang W, 2013, ACM SIGPLAN NOTICES, V48, P113, DOI 10.1145/2499368.2451129
   Zhang W, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P179
   Zhou P, 2004, INT SYMP MICROARCH, P269
NR 63
TC 10
Z9 11
U1 0
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2016
VL 42
IS 10
BP 899
EP 917
DI 10.1109/TSE.2016.2531666
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EA5KP
UT WOS:000386659500001
OA Bronze
DA 2024-07-18
ER

PT J
AU Coppa, E
   Demetrescu, C
   Finocchi, I
AF Coppa, Emilio
   Demetrescu, Camil
   Finocchi, Irene
TI Input-Sensitive Profiling
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Performance profiling; asymptotic analysis; dynamic program analysis;
   instrumentation
ID EFFICIENT; FRAMEWORK; ACCURATE
AB In this article we present a building block technique and a toolkit towards automatic discovery of workload-dependent performance bottlenecks. From one or more runs of a program, our profiler automatically measures how the performance of individual routines scales as a function of the input size, yielding clues to their growth rate. The output of the profiler is, for each executed routine of the program, a set of tuples that aggregate performance costs by input size. The collected profiles can be used to produce performance plots and derive trend functions by statistical curve fitting techniques. A key feature of our method is the ability to automatically measure the size of the input given to a generic code fragment: to this aim, we propose an effective metric for estimating the input size of a routine and show how to compute it efficiently. We discuss several examples, showing that our approach can reveal asymptotic bottlenecks that other profilers may fail to detect and can provide useful characterizations of the workload and behavior of individual routines in the context of mainstream applications, yielding several code optimizations as well as algorithmic improvements. To prove the feasibility of our techniques, we implemented a Valgrind tool called aprof and performed an extensive experimental evaluation on the SPEC CPU2006 benchmarks. Our experiments show that aprof delivers comparable performance to other prominent Valgrind tools, and can generate informative plots even from single runs on typical workloads for most algorithmically-critical routines.
C1 [Coppa, Emilio; Finocchi, Irene] Univ Roma La Sapienza, Dept Comp Sci, Rome, Italy.
   [Demetrescu, Camil] Univ Roma La Sapienza, Dept Comp Control & Management Engn, Rome, Italy.
C3 Sapienza University Rome; Sapienza University Rome
RP Coppa, E (corresponding author), Univ Roma La Sapienza, Dept Comp Sci, Rome, Italy.
EM coppa@di.uniroma1.it; demetres@dis.uniroma1.it; finocchi@di.uniroma1.it
RI Finocchi, Irene/G-7404-2012; Demetrescu, Camil/H-9904-2012
OI FINOCCHI, Irene/0000-0002-6394-6798; COPPA, EMILIO/0000-0002-8094-871X
FU Italian Ministry of Education, University, and Research (MIUR) under
   PRIN [2012C4E3KT]
FX The authors would like to thank Randal Bryant and David O'Hallaron for
   their feedback on the difficulty of discovering asymptotic
   inefficiencies in large software applications, and to Matthew Hammer for
   many useful discussions. We are also indebted to Umberto Ferraro
   Petrillo for hosting our experiments on the Intel Xeon cluster machine
   described in Section 7.1 and to Bruno Aleandri for developing an earlier
   version of aprof. This work was supported in part by the Italian
   Ministry of Education, University, and Research (MIUR) under PRIN
   2012C4E3KT national research project "AMANDA-Algorithmics for MAssive
   and Networked DAta". A preliminary version of this work appeared in the
   Proceedings of the 33rd ACM SIGPLAN Conference on Programming Language
   Design and Implementation (PLDI 2012) [1].
CR Ammons G, 1997, ACM SIGPLAN NOTICES, V32, P85, DOI 10.1145/258916.258924
   [Anonymous], 2014, V8 OP SOURC JAVASCRI
   [Anonymous], 2014, CRYPTOJS JAVASCRIPT
   [Anonymous], 2014, SPOOLES 2 2 SPARSE O
   Arnold M, 2001, ACM SIGPLAN NOTICES, V36, P168, DOI 10.1145/381694.378832
   Ball T, 1996, PROCEEDINGS OF THE 29TH ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE - MICRO-29, P46, DOI 10.1109/MICRO.1996.566449
   Ball T., 1998, Conference Record of POPL '98: 25th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P134, DOI 10.1145/268946.268958
   Bienia C, 2008, PACT'08: PROCEEDINGS OF THE SEVENTEENTH INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, P72, DOI 10.1145/1454115.1454128
   Bond MD, 2005, INT SYM CODE GENER, P205, DOI 10.1109/CGO.2005.28
   Bond MD, 2007, ACM SIGPLAN NOTICES, V42, P97, DOI 10.1145/1297105.1297035
   Bryant R. E., 1987, 24th ACM/IEEE Design Automation Conference Proceedings 1987, P9, DOI 10.1145/37888.37890
   Bryant R. E., 2011, COMMUNICATION
   Bryant RandalE., 2010, COMPUTER SYSTEMS PRO, V2nd
   Campbell, 2002, EXPT QUASIEXPERIMENT
   Chambers J.M., 1983, Graphical Methods for Data Analysis
   Coppa E, 2012, ACM SIGPLAN NOTICES, V47, P89, DOI 10.1145/2345156.2254076
   Coppa Emilio, 2014, P CGO 14, V230, P239, DOI DOI 10.1145/2581122.2544143
   D'Elia DC, 2011, ACM SIGPLAN NOTICES, V46, P516, DOI 10.1145/1993316.1993559
   de Barros M. C., 2012, WF SIMPLE WORD FREQU
   Demetrescu C., 2003, Bulletin of the European Association for Theoretical Computer Science, P48
   Dhondt G., 2014, CALCULIX FREE SOFTWA
   DOBOSIEWICZ W, 1980, INFORM PROCESS LETT, V11, P5, DOI 10.1016/0020-0190(80)90022-8
   Froyd N., 2005, P 19 ANN INT C SUPER, P81
   Genome bioinformatics research laboratory, 2014, RES DAT
   Goldsmith Simon F., 2007, P 6 JOINT M EUR SOFT, P395, DOI 10.1145/1287624.1287681
   Graham SusanL., 1982, Best of PLDI, P49
   HALL RJ, 1995, IEEE T SOFTWARE ENG, V21, P481, DOI 10.1109/32.391375
   HALL RJ, 1993, PROCEEDINGS OF THE SUMMER 1993 USENIX CONFERENCE, P1
   Henning J. L., 2006, SIGARCH COMPUT ARCHI, V34, P1, DOI [DOI 10.1145/1186736.1186737, 10.1145/1186736.1186737]
   Hirzel M., 2001, 4th ACM Workshop on Feedback-Directed and Dynamic Optimization, P117
   Johnson D. S., 2002, Data structures, near neighbor searches, and methodology: Fifth and sixth DIMACS implementation challenges. Papers related to the DIMACS challenge on dictionaries and priority queues (1995-1996) and the DIMACS challenge on near neighbor searches (1998-1999), P215
   Jones E., 2014, SCIPY OPEN SOURCE LI
   Joshi R, 2004, INT SYM CODE GENER, P239, DOI 10.1109/CGO.2004.1281678
   Knuth D. E., 1973, BIT (Nordisk Tidskrift for Informationsbehandling), V13, P313, DOI 10.1007/BF01951942
   Küstner T, 2010, LECT NOTES COMPUT SC, V6043, P177
   Kuvyrkov M., 2014, EMBEDDED GLIBC VARIA
   Marin G, 2004, SIGMETRICS PERFORM E, P2, DOI DOI 10.1145/1005686.1005691
   McGeoch C, 2002, LECT NOTES COMPUT SC, V2547, P93
   McGeoch CC, 2007, COMMUN ACM, V50, P27, DOI 10.1145/1297797.1297818
   McGeoch CC, 1997, LECT NOTES COMPUT SC, V1280, P41
   Melski D, 1999, LECT NOTES COMPUT SC, V1575, P47
   Moret B. M. E., 2002, Data structures, near neighbor searches, and methodology: Fifth and sixth DIMACS implementation challenges. Papers related to the DIMACS challenge on dictionaries and priority queues (1995-1996) and the DIMACS challenge on near neighbor searches (1998-1999), P197
   Mytkowicz T, 2010, ACM SIGPLAN NOTICES, V45, P187, DOI 10.1145/1809028.1806618
   Nethercote N, 2007, ACM SIGPLAN NOTICES, V42, P89, DOI 10.1145/1273442.1250746
   Ofelt D, 2000, PERF E R SI, V28, P229, DOI 10.1145/345063.339419
   PONDER C, 1988, SOFTWARE PRACT EXPER, V18, P459, DOI 10.1002/spe.4380180506
   Roy S, 2009, INT SYM CODE GENER, P70, DOI 10.1109/CGO.2009.11
   Seward J, 2005, USENIX Association Proceedings of the General Track: 2005 UNENIX Annual Technical Conference, P17
   Spivey JM, 2004, SOFTWARE PRACT EXPER, V34, P249, DOI 10.1002/spe.562
   TARJAN RE, 1985, SIAM J ALGEBRA DISCR, V6, P306, DOI 10.1137/0606031
   TARJAN RE, 1975, J ACM, V22, P215, DOI 10.1145/321879.321884
   The Document Foundation, 2014, LIBREOFFICE FREE OP
   Vaswani K, 2007, ACM SIGPLAN NOTICES, V42, P351, DOI 10.1145/1190215.1190268
   Weidendorfer J, 2004, LECT NOTES COMPUT SC, V3038, P440
   Whaley John., 2000, JAVA 00, P78
   Wilhelm R, 2008, ACM T EMBED COMPUT S, V7, DOI 10.1145/1347375.1347389
   Xiao Xusheng, 2013, P 2013 INT S SOFTW T, P90, DOI DOI 10.1145/2483760.2483784
   Zaparanuks D, 2012, ACM SIGPLAN NOTICES, V47, P67, DOI 10.1145/2345156.2254074
   Zhuang X, 2006, ACM SIGPLAN NOTICES, V41, P263, DOI 10.1145/1133981.1134012
NR 59
TC 9
Z9 9
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2014
VL 40
IS 12
BP 1185
EP 1205
DI 10.1109/TSE.2014.2339825
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AW4AQ
UT WOS:000346224400003
DA 2024-07-18
ER

PT J
AU Ramasubbu, N
   Kemerer, CF
AF Ramasubbu, Narayan
   Kemerer, Chris F.
TI Managing Technical Debt in Enterprise Software Packages
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Technical debt; enterprise software; software platforms; customer
   satisfaction; software quality; technology adoption; COTS; software
   evolution; software maintenance; software management; longitudinal data
ID CUSTOMER SATISFACTION; HIGH-TECH; PRODUCTS
AB We develop an evolutionary model and theory of software technical debt accumulation to facilitate a rigorous and balanced analysis of its benefits and costs in the context of a large commercial enterprise software package. Our theory focuses on the optimization problem involved in managing technical debt, and illustrates the different tradeoff patterns between software quality and customer satisfaction under early and late adopter scenarios at different lifecycle stages of the software package. We empirically verify our theory utilizing a ten year longitudinal data set drawn from 69 customer installations of the software package. We then utilize the empirical results to develop actionable policies for managing technical debt in enterprise software product adoption.
C1 [Ramasubbu, Narayan; Kemerer, Chris F.] Univ Pittsburgh, Joseph M Katz Grad Sch Business, Pittsburgh, PA 15260 USA.
C3 Pennsylvania Commonwealth System of Higher Education (PCSHE); University
   of Pittsburgh
RP Ramasubbu, N (corresponding author), Univ Pittsburgh, Joseph M Katz Grad Sch Business, Pittsburgh, PA 15260 USA.
EM narayanr@pitt.edu; ckemerer@katz.pitt.edu
RI Ramasubbu, Narayan/N-1364-2019; RAMASUBBU, Narayanasamy/E-8571-2012
OI Ramasubbu, Narayan/0000-0002-6959-0729; 
CR [Anonymous], 2011, P 2 WORKSHOP MANAGIN
   Baldwin C. Y., 2011, FINDING TECHNICAL DE
   Boehm B., 2012, 3 INT WORKSH MAN TEC
   Bohnet J., 2011, Proceedings of the 2nd Workshop on Managing Technical Debt, P9, DOI [DOI 10.1145/1985362.1985365, 10.1145/1985362.1985365]
   BRIDGES E, 1995, MARKET SCI, V14, P61, DOI 10.1287/mksc.14.1.61
   Brondum J., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P7, DOI 10.1109/MTD.2012.6226003
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Brown YN., 2011, 2 INT WORKSH MAN TEC
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   Cunningham W., 1993, OOPS MESSENGER, V4, P29, DOI DOI 10.1145/157710.157715
   Curtis B, 2012, IEEE SOFTWARE, V29, P34, DOI 10.1109/MS.2012.156
   de Groot J., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P37, DOI 10.1109/MTD.2012.6225998
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Ernst N. A., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P61, DOI 10.1109/MTD.2012.6226002
   Fontana F. A., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P15, DOI 10.1109/MTD.2012.6225993
   Fowler M., 2013, TECHNICAL DEBT
   GILL GK, 1991, IEEE T SOFTWARE ENG, V17, P1284, DOI 10.1109/32.106988
   Golder PN, 1997, MARKET SCI, V16, P256, DOI 10.1287/mksc.16.3.256
   Gomes R., 2011, P 2 WORKSH MAN TECHN, P27, DOI DOI 10.1145/1985362.1985369
   Groenveld P, 2007, RES TECHNOL MANAGE, V50, P49, DOI 10.1080/08956308.2007.11657472
   Guo Y., 2011, 2 WORKSH MAN TECHN D, P31, DOI [10.1145/1985362.1985370, DOI 10.1145/1985362.1985370]
   Harter DE, 2012, IEEE T SOFTWARE ENG, V38, P810, DOI 10.1109/TSE.2011.63
   Heintz J., 2011, 2 INT WORKSH MAN TEC
   Izurieta Clemente, 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P23, DOI 10.1109/MTD.2012.6225995
   KEKRE S, 1995, MANAGE SCI, V41, P1456, DOI 10.1287/mnsc.41.9.1456
   KEMERER CF, 1992, IEEE T SOFTWARE ENG, V18, P1011, DOI 10.1109/32.177370
   Kemerer CF, 1999, IEEE T SOFTWARE ENG, V25, P493, DOI 10.1109/32.799945
   Kemerer CF, 2009, IEEE T SOFTWARE ENG, V35, P534, DOI 10.1109/TSE.2009.27
   Klinger T, 2011, P 2 WORKSHOP MANAGIN, P35
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   LaMantia MJ, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P83, DOI 10.1109/WICSA.2008.49
   Letouzey JL, 2012, IEEE SOFTWARE, V29, P44, DOI 10.1109/MS.2012.129
   Lim E, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.130
   Lindvall M, 2004, COMPUTER, V37, P26, DOI 10.1109/MC.2004.231
   MacCormack A, 2001, MANAGE SCI, V47, P133, DOI 10.1287/mnsc.47.1.133.10663
   MAHAJAN V, 1995, MARKET SCI, V14, pG79, DOI 10.1287/mksc.14.3.G79
   Mahajan V., 2000, NEW PRODUCT DIFFUSIO
   McConnell S., 2013, 4 INT WORKSH TECH DE
   McGregor J. D., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P27, DOI 10.1109/MTD.2012.6225996
   Morgenthaler J.D., 2012, Proc. of the 3rd Int'l Workshop on Managing Technical Debt (MTD), P1, DOI DOI 10.1109/MTD.2012.6225994
   Nichols W., 2011, 2 INT WORKSH MAN TEC
   Nugroho A, 2011, P 2 WORKSH MAN TECHN, P1
   OLSEN NC, 1995, IEEE SOFTWARE, V12, P28, DOI 10.1109/52.406754
   Petrick IJ, 2004, TECHNOL FORECAST SOC, V71, P81, DOI 10.1016/S0040-1625(03)00064-7
   Ramasubbu N, 2008, DECIS SUPPORT SYST, V44, P509, DOI 10.1016/j.dss.2007.06.005
   Ramasubbu N, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P51, DOI 10.1109/MTD.2013.6608679
   Rogers EM, 2003, DIFFUSION INNOVATION
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Seaman C., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P45, DOI 10.1109/MTD.2012.6225999
   Seaman C, 2011, ADV COMPUT, V82, P25, DOI 10.1016/B978-0-12-385512-1.00002-5
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Snipes W., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P54, DOI 10.1109/MTD.2012.6226001
   Succi G, 2001, IEEE T SOFTWARE ENG, V27, P473, DOI 10.1109/32.922717
   Sullivan K. J., 2001, Software Engineering Notes, V26, P99, DOI 10.1145/503271.503224
   Woodard CJ, 2013, MIS QUART, V37, P537, DOI 10.25300/MISQ/2013/37.2.10
   Zazworka N., 2011, P 2 WORKSH MAN TECHN, P39
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
NR 57
TC 28
Z9 32
U1 1
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2014
VL 40
IS 8
BP 758
EP 772
DI 10.1109/TSE.2014.2327027
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA AR9MG
UT WOS:000343898400002
DA 2024-07-18
ER

PT J
AU Chen, HY
   Tse, TH
AF Chen, Huo Yan
   Tse, T. H.
TI Equality to Equals and Unequals: A Revisit of the Equivalence and
   Nonequivalence Criteria in Class-Level Testing of Object-Oriented
   Software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; equivalence criterion; nonequivalence criterion;
   algebraic specification; object-oriented software
ID ALGEBRAIC SPECIFICATIONS; IMPLEMENTATION
AB Algebraic specifications have been used in the testing of object-oriented programs and received much attention since the 1990s. It is generally believed that class-level testing based on algebraic specifications involves two independent aspects: the testing of equivalent and nonequivalent ground terms. Researchers have cited intuitive examples to illustrate the philosophy that even if an implementation satisfies all the requirements specified by the equivalence of ground terms, it may still fail to satisfy some of the requirements specified by the nonequivalence of ground terms. Thus, both the testing of equivalent ground terms and the testing of nonequivalent ground terms have been considered as significant and cannot replace each other. In this paper, we present an innovative finding that, given any canonical specification of a class with proper imports, a complete implementation satisfies all the observationally equivalent ground terms if and only if it satisfies all the observationally nonequivalent ground terms. As a result, these two aspects of software testing cover each other and can therefore replace each other. These findings provide a deeper understanding of software testing based on algebraic specifications, rendering the theory more elegant and complete. We also highlight a couple of important practical implications of our theoretical results.
C1 [Chen, Huo Yan] Jinan Univ, Dept Comp Sci, Guangzhou 510632, Guangdong, Peoples R China.
   [Tse, T. H.] Univ Hong Kong, Dept Comp Sci, Pokfulam, Hong Kong, Peoples R China.
C3 Jinan University; University of Hong Kong
RP Chen, HY (corresponding author), Jinan Univ, Dept Comp Sci, Guangzhou 510632, Guangdong, Peoples R China.
EM ab1mn5yz9@hotmail.com; thtse@cs.hku.hk
RI Tse, T.H./C-6590-2008
OI Tse, T.H./0000-0002-0460-8377
FU National Science Foundation of China [60173038]; General Research Fund
   of the Research Grant Council of Hong Kong [717811, 716612]; Australian
   Research Council [LP100200208]; CuiTeck Inc. in Montreal; Australian
   Research Council [LP100200208] Funding Source: Australian Research
   Council
FX This research was supported by a grant from the National Science
   Foundation of China (project no. 60173038), grants from the General
   Research Fund of the Research Grant Council of Hong Kong (project nos.
   717811 and 716612), and a linkage grant from the Australian Research
   Council (project no. LP100200208). Part of the research was conducted
   when Huo Yan Chen was in Canada supported by CuiTeck Inc. in Montreal.
   Part of the research was conducted when T. H. Tse was serving as a
   distinguished visiting scholar at the Key Laboratory of Computer
   Science, Institute of Software, Chinese Academy of Sciences, Beijing,
   China.
CR Aiguier M, 2006, LECT NOTES COMPUT SC, V3997, P203
   [Anonymous], 1978, CURRENT TRENDS PROGR
   Antoy S, 2000, IEEE T SOFTWARE ENG, V26, P55, DOI 10.1109/32.825766
   BERNOT G, 1991, SOFTWARE ENG J, V6, P387, DOI 10.1049/sej.1991.0040
   BERNOT G, 1991, LECT NOTES COMPUT SC, V494, P99
   Bidoit Michel., 2004, CASL USER MANUAL INT
   Bo Yu, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P190, DOI 10.1109/ICST.2008.39
   BORBA P, 1994, P INT WORKSH INF SYS
   BOUGE L, 1986, J SYST SOFTWARE, V6, P343, DOI 10.1016/0164-1212(86)90004-X
   Chen HY, 2009, INT CONF QUAL SOFTW, P108, DOI 10.1109/QSIC.2009.22
   Chen HY, 2000, INFORM SOFTWARE TECH, V42, P677, DOI 10.1016/S0950-5849(00)00112-9
   Chen HY, 2001, ACM T SOFTW ENG METH, V10, P56, DOI 10.1145/366378.366380
   Chen TY, 2001, J SYST SOFTWARE, V58, P65, DOI 10.1016/S0164-1212(01)00028-0
   Ciupa I, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P71, DOI 10.1145/1368088.1368099
   DAUCHY P, 1993, J SYST SOFTWARE, V21, P229, DOI 10.1016/0164-1212(93)90025-S
   Doong R.-K., 1993, THESIS POLYTECHNIC U
   GANNON J, 1981, ACM T PROGR LANG SYS, V3, P211, DOI 10.1145/357139.357140
   Gaudel Marie-Claude, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P209, DOI 10.1007/978-3-540-78917-8_7
   Gaudel MC, 1995, LECT NOTES COMPUT SC, V915, P82
   GOGUEN J, 1988, LECT NOTES COMPUT SC, V308, P258
   GUTTAG JV, 1978, ACTA INFORM, V10, P27, DOI 10.1007/BF00260922
   Hierons RM, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459354
   Hong Z, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P91, DOI 10.1109/QSIC.2003.1319090
   Huo Yan Chen, 1998, ACM Transactions on Software Engineering and Methodology, V7, P250, DOI 10.1145/287000.287004
   Jalote P., 1983, Proceedings COMPSAC 83: The IEEE Computer Society's Seventh International Computer Software and Applications Conference, P508
   Kong L, 2007, P INT COMP SOFTW APP, P717
   LeGall P, 1996, LECT NOTES COMPUT SC, V1130, P342
   Machado P., 1998, P 7 INT C ALG METH S, V1548, P502
   Machado PDL, 2002, LECT NOTES COMPUT SC, V2420, P506
   Machado PDL, 2000, LECT NOTES COMPUT SC, V1816, P529
   Roong-Ko Doong, 1994, ACM Transactions on Software Engineering and Methodology, V3, P101, DOI 10.1145/192218.192221
   WEYUKER EJ, 1986, IEEE T SOFTWARE ENG, V12, P1128, DOI 10.1109/TSE.1986.6313008
   ZILLES SN, 1974, 11 MIT
NR 33
TC 8
Z9 8
U1 0
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2013
VL 39
IS 11
BP 1549
EP 1563
DI 10.1109/TSE.2013.33
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 245YN
UT WOS:000326501200006
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Peters, F
   Menzies, T
   Gong, L
   Zhang, HY
AF Peters, Fayola
   Menzies, Tim
   Gong, Liang
   Zhang, Hongyu
TI Balancing Privacy and Utility in Cross-Company Defect Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Privacy; classification; defect prediction
ID STATIC CODE ATTRIBUTES; K-ANONYMITY; MODEL
AB Background: Cross-company defect prediction (CCDP) is a field of study where an organization lacking enough local data can use data from other organizations for building defect predictors. To support CCDP, data must be shared. Such shared data must be privatized, but that privatization could severely damage the utility of the data. Aim: To enable effective defect prediction from shared data while preserving privacy. Method: We explore privatization algorithms that maintain class boundaries in a dataset. CLIFF is an instance pruner that deletes irrelevant examples. MORPH is a data mutator that moves the data a random distance, taking care not to cross class boundaries. CLIFF+MORPH are tested in a CCDP study among 10 defect datasets from the PROMISE data repository. Results: We find: 1) The CLIFFed+MORPHed algorithms provide more privacy than the state-of-the-art privacy algorithms; 2) in terms of utility measured by defect prediction, we find that CLIFF+MORPH performs significantly better. Conclusions: For the OO defect data studied here, data can be privatized and shared without a significant degradation in utility. To the best of our knowledge, this is the first published result where privatization does not compromise defect prediction.
C1 [Peters, Fayola; Menzies, Tim] W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
   [Gong, Liang; Zhang, Hongyu] Tsinghua Univ, Sch Software, Beijing 100084, Peoples R China.
C3 West Virginia University; Tsinghua University
RP Peters, F (corresponding author), W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
EM fayolapeters@gmail.com; tim@menzies.us;
   gongliang10@mails.tsinghua.edu.cn; hongyu@tsinghua.edu.cn
RI Menzies, Tim/X-7680-2019; zhang, hongyu/ABC-3702-2021
OI Menzies, Tim/0000-0002-5040-3196; zhang, hongyu/0000-0002-3063-9425
FU US National Science Foundation [CCF: 1017330]; Qatar/West Virginia
   University [NPRP 09-12-5-2-470]
FX The authors would like to thank the anonymous reviewers whose comments
   helped them improve the quality of this paper. The work was funded by US
   National Science Foundation grant CCF: 1017330 and the Qatar/West
   Virginia University grant NPRP 09-12-5-2-470.
CR Agrawal R, 2000, SIGMOD REC, V29, P439, DOI 10.1145/335191.335438
   [Anonymous], 1998, Tech. Rep.
   [Anonymous], 2006, GESTS International Transactions on Computer Science and Engineering
   Olvera-López JA, 2010, PATTERN ANAL APPL, V13, P131, DOI 10.1007/s10044-008-0142-x
   Bezdek JC, 2000, LECT NOTES COMPUT SC, V1876, P1
   Bezdek JC, 2001, INT J INTELL SYST, V16, P1445, DOI 10.1002/int.1068
   Bishop C. M., 1995, NEURAL NETWORKS PATT
   BOEHM BW, 1988, IEEE T SOFTWARE ENG, V14, P1462, DOI 10.1109/32.6191
   Brickell Justin, 2008, P 14 ACM SIGKDD INT, P70, DOI [10.1145/1401890.1401904, DOI 10.1145/1401890.1401904]
   Brighton H, 2002, DATA MIN KNOWL DISC, V6, P153, DOI 10.1023/A:1014043630878
   Budi A, 2011, ACM SIGPLAN NOTICES, V46, P447, DOI 10.1145/1993316.1993551
   Castañón MLG, 2008, ACTA HORTIC, P319, DOI 10.1145/1346281.1346322
   Chin A., 2012, N CAROLINA LAW REV, V90
   Clause J., 2011, P 33 INT C SOFTW ENG, P2130
   Dabney J.B., 2006, P 2 INT C PRED MOD S
   Dinur Irit, 2003, P 22 ACM SIGMOD SIGA, P202
   Dwork C, 2008, LECT NOTES COMPUT SC, V4978, P1, DOI 10.1007/978-3-540-79228-4_1
   Dwork C, 2006, LECT NOTES COMPUT SC, V4052, P1
   Fung BCM, 2010, ACM COMPUT SURV, V42, DOI 10.1145/1749603.1749605
   Giannella C., 2009, COMPUTING RES REPOSI
   Grechanik Mark, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P368, DOI 10.1109/ISSRE.2010.13
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Jalali O., 2008, P 4 INT WORKSH PRED
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Jureczko M, 2010, ACM INT C P SERIES, DOI [10.1145/1868328.1868342, DOI 10.1145/1868328.1868342]
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kim SW, 2003, PATTERN ANAL APPL, V6, P232, DOI 10.1007/s10044-003-0191-0
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kocaguneli E, 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, P321, DOI DOI 10.1145/1858996.1859061
   Kocaguneli E, 2011, INT SYMP EMP SOFTWAR, P255, DOI 10.1109/ESEM.2011.34
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lewis D. D., 1998, Machine Learning: ECML-98. 10th European Conference on Machine Learning. Proceedings, P4, DOI 10.1007/BFb0026666
   Li J., 2007, P INT WORKSH PRED MO
   Machanavajjhala A., 2007, ACM T KNOWL DISCOV D
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   Osuna E, 1997, PROC CVPR IEEE, P130, DOI 10.1109/CVPR.1997.609310
   Park H, 2010, INFORM SYST, V35, P933, DOI 10.1016/j.is.2010.06.002
   Peters F., 2010, THESIS
   Peters F, 2012, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.2012.6227194
   Platt JC, 1999, ADVANCES IN KERNEL METHODS, P185
   REED R, 1993, IEEE T NEURAL NETWOR, V4, P740, DOI 10.1109/72.248452
   Sweeney L, 2002, INT J UNCERTAIN FUZZ, V10, P557, DOI 10.1142/S0218488502001648
   Taneja K., 2011, ESECFSE, P201
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   Tosun Aye, 2009, P 5 INT C PRED MOD S
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Verykios VS, 2004, SIGMOD REC, V33, P50, DOI 10.1145/974121.974131
   Weyuker EJ, 2008, EMPIR SOFTW ENG, V13, P539, DOI 10.1007/s10664-008-9082-8
   Zhang Qiu-yu, 2007, Proceedings International Conference on Informatics and Control Technologies 2006, P116
   Zhu D, 2009, DECIS SUPPORT SYST, V48, P133, DOI 10.1016/j.dss.2009.07.003
NR 56
TC 94
Z9 107
U1 0
U2 24
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2013
VL 39
IS 8
BP 1054
EP 1068
DI 10.1109/TSE.2013.6
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 191BU
UT WOS:000322388400002
DA 2024-07-18
ER

PT J
AU Sjoberg, DIK
   Yamashita, A
   Anda, BCD
   Mockus, A
   Dybå, T
AF Sjoberg, Dag I. K.
   Yamashita, Aiko
   Anda, Bente C. D.
   Mockus, Audris
   Dyba, Tore
TI Quantifying the Effect of Code Smells on Maintenance Effort
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Maintainability; object-oriented design; product metrics; code churn
ID BAD SMELLS; SOFTWARE; SKILL
AB Context: Code smells are assumed to indicate bad design that leads to less maintainable code. However, this assumption has not been investigated in controlled studies with professional software developers. Aim: This paper investigates the relationship between code smells and maintenance effort. Method: Six developers were hired to perform three maintenance tasks each on four functionally equivalent Java systems originally implemented by different companies. Each developer spent three to four weeks. In total, they modified 298 Java files in the four systems. An Eclipse IDE plug-in measured the exact amount of time a developer spent maintaining each file. Regression analysis was used to explain the effort using file properties, including the number of smells. Result: None of the 12 investigated smells was significantly associated with increased effort after we adjusted for file size and the number of changes; Refused Bequest was significantly associated with decreased effort. File size and the number of changes explained almost all of the modeled variation in effort. Conclusion: The effects of the 12 smells on maintenance effort were limited. To reduce maintenance effort, a focus on reducing code size and the work practices that limit the number of changes may be more beneficial than refactoring code smells.
C1 [Sjoberg, Dag I. K.; Yamashita, Aiko; Anda, Bente C. D.] Univ Oslo, Dept Informat, NO-0316 Oslo, Norway.
   [Mockus, Audris] Avaya Labs Res, Basking Ridge, NJ 07920 USA.
   [Dyba, Tore] Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
C3 University of Oslo; Avaya; University of Oslo
RP Sjoberg, DIK (corresponding author), Univ Oslo, Dept Informat, POB 1080 Blindern, NO-0316 Oslo, Norway.
EM dagsj@ifi.uio.no; aiko@simula.no; bentea@ifi.uio.no; audris@avaya.com;
   tore.dyba@sintef.no
RI Mockus, Audris/AEY-3361-2022
OI Mockus, Audris/0000-0002-7987-7598
FU Research Council of Norway through the projects AGILE [179851/I40];
   TeamIT [193236/I40]
FX The authors thank G. Bergersen for providing useful discussions and
   support in selecting the developers, H.C. Benestad for providing
   technical support during the planning stage of the study, and the
   anonymous referees for their comments. This study was partly funded by
   the Research Council of Norway through the projects AGILE, Grant
   179851/I40, and TeamIT, Grant 193236/I40.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Anda Bente, 2007, 2007 IEEE International Conference on Software Maintenance, P204, DOI 10.1109/ICSM.2007.4362633
   Anda BCD, 2009, IEEE T SOFTWARE ENG, V35, P407, DOI 10.1109/TSE.2008.89
   [Anonymous], 2008, BORL TOG
   [Anonymous], 2010, 2010 IEEE International Conference on Software Maintenance, DOI [10.1109/ICSM.2010.5609564, DOI 10.1109/ICSM.2010.5609564]
   Arisholm E, 2000, J SYST SOFTWARE, V53, P3, DOI 10.1016/S0164-1212(00)00003-0
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Bergersen GR, 2011, INT SYMP EMP SOFTWAR, P305, DOI 10.1109/ESEM.2011.39
   Bergersen GR, 2011, J INDIVID DIFFER, V32, P201, DOI 10.1027/1614-0001/a000052
   D'Ambros Marco, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P23, DOI 10.1109/QSIC.2010.58
   Deligiannis I, 2004, J SYST SOFTWARE, V72, P129, DOI 10.1016/S0164-1212(03)00240-1
   Deligiannis I, 2003, J SYST SOFTWARE, V65, P127, DOI 10.1016/S0164-1212(02)00054-7
   Dyba T, 2012, P ACM IEEE INT S EMP
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   El-Emam K., 2000, 44142 NRC
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Kampenes VB, 2009, INFORM SOFTWARE TECH, V51, P71, DOI 10.1016/j.infsof.2008.04.006
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Layman Lucas M., 2008, Proceedings of the 2008 International Workshop on Cooperative and Human Aspects of Software Engineering. CHASE '08, P73
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Lozano A, 2008, PROC IEEE INT CONF S, P227, DOI 10.1109/ICSM.2008.4658071
   Marinescu R., 2002, THESIS POLITEHNICA U
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Monden A, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P87, DOI 10.1109/METRIC.2002.1011328
   Nagappan Nachiappan, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P364
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   R. Foundation, 2011, R PROJ STAT COMP
   Rahman Foyzur, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P72, DOI 10.1109/MSR.2010.5463343
   Riaz M, 2009, INT SYMP EMP SOFTWAR, P368, DOI 10.1109/esem.2009.5314233
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Sjoberg DIK, 2012, INT SYMP EMP SOFTWAR, P107, DOI 10.1145/2372251.2372269
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
NR 42
TC 207
Z9 219
U1 1
U2 27
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2013
VL 39
IS 8
BP 1144
EP 1156
DI 10.1109/TSE.2012.89
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 191BU
UT WOS:000322388400007
DA 2024-07-18
ER

PT J
AU Lee, J
   Shin, I
AF Lee, Jinkyu
   Shin, Insik
TI EDZL Schedulability Analysis in Real-Time Multicore Scheduling
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Earliest Deadline first until Zero-Laxity (EDZL); real-time scheduling;
   schedulability analysis; multicore platform; real-time systems
ID PERIODIC TASK SYSTEMS; MULTIPROCESSOR PLATFORMS; ALGORITHMS
AB In real-time systems, correctness depends not only on functionality but also on timeliness. A great number of scheduling theories have been developed for verification of the temporal correctness of jobs (software) in such systems. Among them, the Earliest Deadline first until Zero-Laxity (EDZL) scheduling algorithm has received growing attention thanks to its effectiveness in multicore real-time scheduling. However, the true potential of EDZL has not yet been fully exploited in its schedulability analysis as the state-of-the-art EDZL analysis techniques involve considerable pessimism. In this paper, we propose a new EDZL multicore schedulability test. We first introduce an interesting observation that suggests an insight toward pessimism reduction in the schedulability analysis of EDZL. We then incorporate it into a well-known existing Earliest Deadline First (EDF) schedulability test, resulting in a new EDZL schedulability test. We demonstrate that the proposed EDZL test not only has lower time complexity than existing EDZL schedulability tests, but also significantly improves the schedulability of EDZL by up to 36.6 percent compared to the best existing EDZL schedulability tests.
C1 [Lee, Jinkyu] Univ Michigan, Dept Elect Engn & Comp Sci, Ann Arbor, MI 48109 USA.
   [Shin, Insik] Korea Adv Inst Sci & Technol, Dept Comp Sci, Taejon 305701, South Korea.
C3 University of Michigan System; University of Michigan; Korea Advanced
   Institute of Science & Technology (KAIST)
RP Shin, I (corresponding author), Korea Adv Inst Sci & Technol, Dept Comp Sci, 291 Daehakro, Taejon 305701, South Korea.
EM jinkyul@umich.edu; insik.shin@cs.kaist.ac.kr
RI Shin, Insik/C-1706-2011
FU BRL [2009-0086964]; BSRP [2010-0006650, 2012-R1A1A1014930]; NCRC
   [2012-0000980]; NIPA [H0503-12-1041]; KEIT [2011-10041313]; DGIST CPS
   Global Center; KIAT [M002300089]; Korea Government (MEST/MKE)
FX Insik Shin is the corresponding author. This work was supported in part
   by BRL (2009-0086964), BSRP (2010-0006650, 2012-R1A1A1014930), NCRC
   (2012-0000980), NIPA (H0503-12-1041), KEIT (2011-10041313), DGIST CPS
   Global Center, and KIAT (M002300089) funded by the Korea Government
   (MEST/MKE).
CR Baker T. P, 2005, TR050601 FLOR STAT U
   Baker TP, 2008, REAL-TIME SYST, V40, P264, DOI 10.1007/s11241-008-9061-6
   Baruah SK, 2004, IEEE T COMPUT, V53, P781, DOI 10.1109/TC.2004.16
   Baruah SK, 1996, ALGORITHMICA, V15, P600, DOI 10.1007/BF01940883
   Bertogna M, 2005, EUROMICRO, P209, DOI 10.1109/ECRTS.2005.18
   Bertogna M, 2009, IEEE T PARALL DISTR, V20, P553, DOI 10.1109/TPDS.2008.129
   Chao YH, 2008, INFORM PROCESS LETT, V107, P158, DOI 10.1016/j.ipl.2008.02.014
   Cho S, 2002, IEICE T COMMUN, VE85B, P2859
   Cirinei M, 2007, EUROMICRO, P9, DOI 10.1109/ECRTS.2007.14
   Goossens J, 2003, REAL-TIME SYST, V25, P187, DOI 10.1023/A:1025120124771
   Kato S, 2008, RTCSA 2008: 14TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS - PROCEEDINGS, P197, DOI 10.1109/RTCSA.2008.11
   Lee CG, 2001, IEEE T SOFTWARE ENG, V27, P805, DOI 10.1109/32.950317
   Lee J, 2012, REAL-TIME SYST, V48, P716, DOI 10.1007/s11241-012-9157-x
   Lee J, 2011, IEEE REAL TIME, P235, DOI 10.1109/RTAS.2011.30
   Lee J, 2011, J SYST SOFTWARE, V84, P2324, DOI 10.1016/j.jss.2011.07.002
   LEE SK, 1994, 1994 IEEE REGION 10'S NINTH ANNUAL INTERNATIONAL CONFERENCE, THEME - FRONTIERS OF COMPUTER TECHNOLOGY, VOLS 1 AND 2, P607, DOI 10.1109/TENCON.1994.369148
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   Mok A. K., 1983, THESIS MIT
   Park M, 2005, IEICE T INF SYST, VE88D, P658, DOI 10.1093/ietisy/e88-d.3.658
   Sha L, 2004, REAL-TIME SYST, V28, P101, DOI 10.1023/B:TIME.0000045315.61234.1e
   Srinivasan A, 2002, INFORM PROCESS LETT, V84, P93, DOI 10.1016/S0020-0190(02)00231-4
   Wei H.-W., 2007, P IEEE INT C EMB REA, P120
NR 22
TC 10
Z9 11
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2013
VL 39
IS 7
BP 910
EP 916
DI 10.1109/TSE.2012.75
PG 7
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 174AO
UT WOS:000321125200002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Natella, R
   Cotroneo, D
   Duraes, JA
   Madeira, HS
AF Natella, Roberto
   Cotroneo, Domenico
   Duraes, Joao A.
   Madeira, Henrique S.
TI On Fault Representativeness of Software Fault Injection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software fault injection; experimental dependability evaluation;
   software reliability; fault-tolerant systems
ID TOLERANT SOFTWARE; MUTATION; DEPENDABILITY; SYSTEM
AB The injection of software faults in software components to assess the impact of these faults on other components or on the system as a whole, allowing the evaluation of fault tolerance, is relatively new compared to decades of research on hardware fault injection. This paper presents an extensive experimental study (more than 3.8 million individual experiments in three real systems) to evaluate the representativeness of faults injected by a state-of-the-art approach (G-SWFIT). Results show that a significant share (up to 72 percent) of injected faults cannot be considered representative of residual software faults as they are consistently detected by regression tests, and that the representativeness of injected faults is affected by the fault location within the system, resulting in different distributions of representative/nonrepresentative faults across files and functions. Therefore, we propose a new approach to refine the faultload by removing faults that are not representative of residual software faults. This filtering is essential to assure meaningful results and to reduce the cost (in terms of number of faults) of software fault injection campaigns in complex software. The proposed approach is based on classification algorithms, is fully automatic, and can be used for improving fault representativeness of existing software fault injection approaches.
C1 [Natella, Roberto; Cotroneo, Domenico] Univ Naples Federico II, Natl Interuniv Consortium Informat CINI, I-80126 Naples, Italy.
   [Natella, Roberto; Cotroneo, Domenico] Univ Naples Federico II, Dept Comp & Control Engn, I-80126 Naples, Italy.
   [Duraes, Joao A.] Inst Engn Coimbra, P-3030199 Coimbra, Portugal.
   [Madeira, Henrique S.] Univ Coimbra, Dept Comp Engn DEI, P-3030290 Coimbra, Portugal.
   [Madeira, Henrique S.] Univ Coimbra, Res Ctr, Ctr Informat & Syst, P-3030290 Coimbra, Portugal.
C3 University of Naples Federico II; University of Naples Federico II;
   Universidade de Coimbra; Universidade de Coimbra
RP Natella, R (corresponding author), Univ Naples Federico II, Natl Interuniv Consortium Informat CINI, Complesso Univ Monte St Angelo,Via Cinthia,Edific, I-80126 Naples, Italy.
EM roberto.natella@unina.it; cotroneo@unina.it; jduraes@isec.pt;
   henrique@dei.uc.pt
RI Durães, João/AAA-6167-2022; Natella, Roberto/AAT-7087-2020; Madeira,
   Henrique/M-9392-2013
OI Durães, João/0000-0002-9697-9991; Natella, Roberto/0000-0003-1084-4824;
   Madeira, Henrique/0000-0001-8146-4664
FU CRITICAL-STEP FP7 European project
FX This work was supported by the CRITICAL-STEP FP7 European project
   (http://www.critical-step.eu).
CR Aidemark J, 2001, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P83, DOI 10.1109/DSN.2001.941394
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2004, NASAGB871913
   [Anonymous], P INT S FAULT TOL CO
   [Anonymous], 262626 ISO
   [Anonymous], P INT C VER LARG DAT
   Arlat J, 2002, IEEE T COMPUT, V51, P138, DOI 10.1109/12.980005
   ARLAT J, 1990, IEEE T SOFTWARE ENG, V16, P166, DOI 10.1109/32.44380
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   AVIZIENIS A, 1985, IEEE T SOFTWARE ENG, V11, P1491, DOI 10.1109/TSE.1985.231893
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Carreira J, 1998, IEEE T SOFTWARE ENG, V24, P125, DOI 10.1109/32.666826
   Chandra S., 1998, P IEEE 28 FAULT TOL
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Christmansson J, 1996, DIG PAP INT SYMP FAU, P304, DOI 10.1109/FTCS.1996.534615
   CRISTIAN F, 1982, IEEE T COMPUT, V31, P531, DOI 10.1109/TC.1982.1676035
   Cukier M, 1999, IEEE T COMPUT, V48, P707, DOI 10.1109/12.780878
   Delamaro M.E., 1996, P C PERFORMABILITY C, P79
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Duraes JA, 2006, IEEE T SOFTWARE ENG, V32, P849, DOI 10.1109/TSE.2006.113
   EnterpriseDB's Postgres Plus Users by Application Type, 2011, ENTERPRISEDBS POSTGR
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   GCC Documentation, 2012, GCC DOCUMENTATION
   GEIST R, 1992, IEEE T COMPUT, V41, P550, DOI 10.1109/12.142681
   Ghosh AK, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P231, DOI 10.1109/ISSRE.1998.730886
   Gray J, 1985, TR857 TAND
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   Hsueh MC, 1997, COMPUTER, V30, P75, DOI 10.1109/2.585157
   HUDAK J, 1993, IEEE T RELIAB, V42, P190, DOI 10.1109/24.229487
   Jarboui T, 2002, 2002 PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P51, DOI 10.1109/PRDC.2002.1185618
   KAO WL, 1993, IEEE T SOFTWARE ENG, V19, P1105, DOI 10.1109/32.256857
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   Knight JC, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P547, DOI 10.1109/ICSE.2002.1007998
   Koopman P, 2000, IEEE T SOFTWARE ENG, V26, P837, DOI 10.1109/32.877845
   Lyu MichaelR., 1995, Software Fault Tolerance
   Madeira H, 2000, DSN 2000: INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P417, DOI 10.1109/ICDSN.2000.857571
   Martins E, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P483, DOI 10.1109/DSN.2002.1028934
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Moraes R, 2006, EDCC 2006: SIXTH EUROPEAN DEPENDABLE COMPUTING CONFERENCE, PROCEEDINGS, P53
   MUSA J, 1996, SOFTWARE RELIABILITY
   MySQL Market Share, 2011, MARK SHAR
   Ng WT, 2001, IEEE T COMPUT, V50, P322, DOI 10.1109/12.919278
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   POWELL D, 1995, IEEE T COMPUT, V44, P261, DOI 10.1109/12.364537
   QEMU Virtualization Software, 2012, QEMU VIRT SOFTW
   Rufino J., 2007, P DAT SYST AER C
   SAFE Software Fault Emulation Tool, 2012, SAFE SOFTWARE FAULT
   SciTools Understand Tool, 2012, SCITOOLS UND TOOL
   Sheskin David, 2011, Handbook of Parametric and Nonparametric Statistical Procedures
   Sridharan Mohan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P378, DOI 10.1109/ISSRE.2010.16
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   Stott D. T., 2000, Proceedings IEEE International Computer Performance and Dependability Symposium. IPDS 2000, P91, DOI 10.1109/IPDS.2000.839467
   TPC-C OLTP Benchmark, 2012, TPC C OLTP BENCHM
   Voas J, 1997, IEEE SOFTWARE, V14, P73, DOI 10.1109/52.595959
   Weyuker EJ, 1998, IEEE SOFTWARE, V15, P54, DOI 10.1109/52.714817
   Witten I. H., 2005, DATA MINING PRACTICA
   WONG WE, 1995, J SYST SOFTWARE, V31, P185, DOI 10.1016/0164-1212(94)00098-0
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
NR 62
TC 107
Z9 116
U1 1
U2 26
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2013
VL 39
IS 1
BP 80
EP 96
DI 10.1109/TSE.2011.124
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 063KJ
UT WOS:000312996800004
DA 2024-07-18
ER

PT J
AU Andrikopoulos, V
   Benbernou, S
   Papazoglou, MP
AF Andrikopoulos, Vasilios
   Benbernou, Salima
   Papazoglou, Michael P.
TI On the Evolution of Services
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Services engineering; service evolution; versioning; service
   compatibility
AB In an environment of constant change and variation driven by competition and innovation, a software service can rarely remain stable. Being able to manage and control the evolution of services is therefore an important goal for the Service-Oriented paradigm. This work extends existing and widely adopted theories from software engineering, programming languages, service-oriented computing, and other related fields to provide the fundamental ingredients required to guarantee that spurious results and inconsistencies that may occur due to uncontrolled service changes are avoided. The paper provides a unifying theoretical framework for controlling the evolution of services that deals with structural, behavioral, and QoS level-induced service changes in a type-safe manner, ensuring correct versioning transitions so that previous clients can use a versioned service in a consistent manner.
C1 [Andrikopoulos, Vasilios] Univ Stuttgart, IAAS, D-70569 Stuttgart, Germany.
   [Benbernou, Salima] Univ Paris 05, Lab Informat Paris Descartes LIPADE, F-75270 Paris, France.
   [Papazoglou, Michael P.] Tilburg Univ, ERISS, Informat Management Dept, NL-5000 LE Tilburg, Netherlands.
C3 University of Stuttgart; Universite Paris Cite; Tilburg University
RP Andrikopoulos, V (corresponding author), Univ Stuttgart, IAAS, Univ Str 38, D-70569 Stuttgart, Germany.
EM vasilios.andrikopoulos@iaas.uni-stuttgart.de;
   salima.benbernou@parisdescartes.fr; M.P.Papazoglou@uvt.nl
RI Andrikopoulos, Vasilios/IVH-6273-2023
OI Papazoglou, Michael/0000-0002-2482-2282
FU European Community [215483]
FX The research leading to these results has received funding from the
   European Community's Seventh Framework Programme FP7/2007-2013 under
   grant agreement 215483 (S-Cube). The authors wish to thank the reviewers
   for the many insightful comments and constructive criticism that have
   resulted in substantially improving the quality of this paper. They
   would also like to thank the members of ERISS, and especially Michael
   Parkin, Michele Mancioppi, and Oktay Turetken, as well as Barbara
   Pernici, Hossein Siadat, and Mariagrazia Fugini at Politecnico di Milano
   for their feedback and support while writing and improving this paper.
   They also thank Juan Vara and David Granada in the Kybele Research Group
   at the University Rey Juan Carlos for their invaluable help with the
   prototype implementation.
CR Alanen M, 2003, LECT NOTES COMPUT SC, V2863, P2
   ALLEN JF, 1983, COMMUN ACM, V26, P832, DOI 10.1145/182.358434
   Andrikopoulos V., 2010, CTR DISSERTATION SER
   Andrikopoulos V, 2008, LECT NOTES COMPUT SC, V5074, P359, DOI 10.1007/978-3-540-69534-9_28
   Andrikopoulos V, 2009, LECT NOTES COMPUT SC, V5565, P290, DOI 10.1007/978-3-642-02144-2_25
   [Anonymous], 1997, Object-oriented software construction
   [Anonymous], 2003, Eclipse Modeling Framework
   Ardagna B, 2007, IEEE SOFTWARE, V24, P39, DOI 10.1109/MS.2007.174
   Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   Becker Karin, 2008, 2008 IEEE International Conference on Web Services (ICWS), P161, DOI 10.1109/ICWS.2008.43
   Becker S, 2006, LECT NOTES COMPUT SC, V3938, P193
   Belguidoum M, 2008, ELECTRON NOTES THEOR, V215, P75, DOI 10.1016/j.entcs.2008.06.022
   Benatallah B, 2006, DATA KNOWL ENG, V58, P327, DOI 10.1016/j.datak.2005.07.006
   Bennett K. H., 2000, P C FUT SOFTW ENG, P73
   Brogi A, 2006, LECT NOTES COMPUT SC, V4294, P27
   Brown K., 2004, Best practices for web services versioning
   Canal C, 2008, IEEE T SOFTWARE ENG, V34, P546, DOI 10.1109/TSE.2008.31
   Castagna G, 2009, ACM T PROGR LANG SYS, V31, DOI 10.1145/1538917.1538920
   Colombo M, 2006, LECT NOTES COMPUT SC, V4294, P191
   Comuzzi M, 2009, ACM T WEB, V3, DOI 10.1145/1541822.1541825
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   Dumas M, 2006, LECT NOTES COMPUT SC, V4102, P65
   Endrei M, 2006, MOVING FORWARD WEB S
   Epifani I, 2009, PROC INT CONF SOFTW, P111, DOI 10.1109/ICSE.2009.5070513
   Estublier J, 2005, ACM T SOFTW ENG METH, V14, P383, DOI 10.1145/1101815.1101817
   Fang R, 2007, 2007 IEEE International Conference on Web Services, Proceedings, P406
   Gehlert A., 2008, CD JRA 1 3 2 QUALITY
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Jerijrvi K., 2008, CONTRACT VERSIONING
   Johnson J., 2004, U PISA, P147
   Juric MB, 2009, J SYST SOFTWARE, V82, P1326, DOI 10.1016/j.jss.2009.03.001
   Kaminski P, 2006, CASCON, V23, P303
   Kazhamiakin R., 2009, CD IA 3 2 1 INITIAL
   Kongdenfha W, 2006, LECT NOTES COMPUT SC, V4294, P15
   Kuester JM, 2010, LECT NOTES COMPUT SC, V6138, P201, DOI 10.1007/978-3-642-13595-8_17
   Leitner P, 2008, P IEEE I C SERV COMP, P59, DOI 10.1109/SCC.2008.21
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   Mancioppi M, 2008, LECT NOTES COMPUT SC, V5364, P302, DOI 10.1007/978-3-540-89652-4_24
   Narayan A., 2007, DESIGNING VERSIONING
   NEZHAD H.R. MOTAHARI., 2007, 16th international conference on World Wide Web (WWW '07), P993, DOI [10.1145/1242572.1242706, DOI 10.1145/1242572.1242706]
   Orchard D., 2007, EXTENDING V IN PRESS
   Papazoglou M., 2007, Web Services: Principles and Technology
   Papazoglou MP, 2007, COMPUTER, V40, P38, DOI 10.1109/MC.2007.400
   Papazoglou MP, 2008, LECT NOTES COMPUT SC, V5074, P1
   Parachuri D., 2008, SERVICE VERSIONING S
   PELTZ C, 2004, DESIGN STRATEGIES WE
   Ponge J, 2010, ACM T SOFTW ENG METH, V19, DOI 10.1145/1734229.1734230
   Ponnekanti SR, 2004, LECT NOTES COMPUT SC, V3231, P331
   Robinson I., 2008, THOUGHTWORKS ANTHOLO, P101
   Ryu SH, 2008, ACM T WEB, V2, DOI 10.1145/1346237.1346241
   Stuckenholz A, 2005, ACM SIGSOFT SOFTWARE, V30, P7
   Vara J., 2010, TR29032010 U RJ CARL
   Weinreich R, 2007, 21ST INTERNATIONAL CONFERENCE ON ADVANCED NETWORKING AND APPLICATIONS WORKSHOPS/SYMPOSIA, VOL 2, PROCEEDINGS, P570
   Xing ZC, 2007, AUTOMAT SOFTW ENG, V14, P215, DOI 10.1007/s10515-007-0007-3
   Yu Q, 2008, VLDB J, V17, P537, DOI 10.1007/s00778-006-0020-3
NR 55
TC 78
Z9 85
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2012
VL 38
IS 3
BP 609
EP 628
DI 10.1109/TSE.2011.22
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 947FP
UT WOS:000304414400008
DA 2024-07-18
ER

PT J
AU Bishop, P
   Bloomfield, R
   Littlewood, B
   Povyakalo, A
   Wright, D
AF Bishop, Peter
   Bloomfield, Robin
   Littlewood, Bev
   Povyakalo, Andrey
   Wright, David
TI Toward a Formalism for Conservative Claims about the Dependability of
   Software-Based Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Bayesian probability; safety case; software reliability
ID SAFETY-CRITICAL SOFTWARE; RELIABILITY
AB In recent work, we have argued for a formal treatment of confidence about the claims made in dependability cases for software-based systems. The key idea underlying this work is "the inevitability of uncertainty": It is rarely possible to assert that a claim about safety or reliability is true with certainty. Much of this uncertainty is epistemic in nature, so it seems inevitable that expert judgment will continue to play an important role in dependability cases. Here, we consider a simple case where an expert makes a claim about the probability of failure on demand (pfd) of a subsystem of a wider system and is able to express his confidence about that claim probabilistically. An important, but difficult, problem then is how such subsystem (claim, confidence) pairs can be propagated through a dependability case for a wider system, of which the subsystems are components. An informal way forward is to justify, at high confidence, a strong claim, and then, conservatively, only claim something much weaker: "I'm 99 percent confident that the pfd is less than 10(-5), so it's reasonable to be 100 percent confident that it is less than 10(-3)." These conservative pfds of subsystems can then be propagated simply through the dependability case of the wider system. In this paper, we provide formal support for such reasoning.
C1 [Bishop, Peter; Bloomfield, Robin; Littlewood, Bev; Povyakalo, Andrey; Wright, David] City Univ London, Ctr Software Reliabil, London EC1V 0HB, England.
   [Bishop, Peter; Bloomfield, Robin] Adelard LLP, London EC1V 0HB, England.
C3 City University London
RP Bishop, P (corresponding author), City Univ London, Ctr Software Reliabil, London EC1V 0HB, England.
EM pgb@adelard.com; reb@adelard.com; b.littlewood@csr.city.ac.uk;
   andrey@csr.city.ac.uk; d.r.wright@city.ac.uk
OI Bishop, Peter/0000-0003-3307-5159
FU United Kingdom Engineering and Physical Sciences Research Council; EPSRC
   [EP/E000517/1] Funding Source: UKRI
FX The work reported here was partially supported by the United Kingdom
   Engineering and Physical Sciences Research Council under the INDEED
   project.
CR [Anonymous], 1998, The Use of Computers in Safety-Critical Applications
   [Anonymous], 1992, SOFTWARE CONSIDERATI
   BISHOP PG, 1995, P 14 IFAC C COMP SAF
   BLOOMFIELD R, 2003, P INT C DEP SYST NET
   Bloomfield R., 1998, Technical report
   BLOOMFIELD R, 2007, P INT C DEP SYST NET
   BUTLER RW, 1993, IEEE T SOFTWARE ENG, V19, P3, DOI 10.1109/32.210303
   *CIV AV AUTH, 2001, SW01 REG OBJ SOFTW S
   COOKE RM, 2008, RELIABILITY ENG SYST, V93
   GORSKI J, 2004, P NATO ADV RES WORKS
   GUIHO G, 1990, P 12 INT C SOFTW ENG
   HUNNS DM, 1991, P NUCL ENG INT SEP, P38
   *INT EL COMM, 2000, IEC61508 1 7
   Kelly T., 2004, P WORKSH ASS CAS DEP
   LITTLEWOOD B, 1993, COMMUN ACM, V36, P69, DOI 10.1145/163359.163373
   Littlewood B, 1997, IEEE T SOFTWARE ENG, V23, P673, DOI 10.1109/32.637384
   Littlewood B, 2007, IEEE T SOFTWARE ENG, V33, P347, DOI 10.1109/TSE.2007.1002
   MAY J, 1995, SOFTWARE ENG J, V10, P206, DOI 10.1049/sej.1995.0026
   *MIN DEF, 2007, DEF STAN 00 56 ISS 4
   *MIN DEF, 1996, DEF STAN 00 56 ISS 2
   OBERKAMPF WL, 2004, REL ENG SYST SAF, P85
   PARNAS DL, 1990, COMMUN ACM, V33, P636, DOI 10.1145/78973.78974
   PENNY J, 2001, P 9 SAF CRIT SYST S
   2006, SAFETY ASSESSMENT PR
NR 24
TC 29
Z9 30
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2011
VL 37
IS 5
BP 708
EP 717
DI 10.1109/TSE.2010.67
PG 10
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 823YC
UT WOS:000295162900007
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Simons, CL
   Parmee, IC
   Gwynllyw, R
AF Simons, Christopher L.
   Parmee, Ian C.
   Gwynllyw, Rhys
TI Interactive, Evolutionary Search in Upstream Object-Oriented Class
   Design
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software design; evolutionary computation; interactive search
ID SOFTWARE-DEVELOPMENT; GENETIC ALGORITHM; SUPPORT; MODEL
AB Although much evidence exists to suggest that early life cycle software engineering design is a difficult task for software engineers to perform, current computational tool support for software engineers is limited. To address this limitation, interactive search-based approaches using evolutionary computation and software agents are investigated in experimental upstream design episodes for two example design domains. Results show that interactive evolutionary search, supported by software agents, appears highly promising. As an open system, search is steered jointly by designer preferences and software agents. Directly traceable to the design problem domain, a mass of useful and interesting class designs is arrived at which may be visualized by the designer with quantitative measures of structural integrity, such as design coupling and class cohesion. The class designs are found to be of equivalent or better coupling and cohesion when compared to a manual class design for the example design domains, and by exploiting concurrent execution, the runtime performance of the software agents is highly favorable.
C1 [Simons, Christopher L.; Parmee, Ian C.] Univ W England, Dept Comp Sci, Bristol BS16 1QY, Avon, England.
   [Gwynllyw, Rhys] Univ W England, Dept Math & Stat, Bristol BS16 1QY, Avon, England.
C3 University of West England; University of West England
RP Simons, CL (corresponding author), Univ W England, Dept Comp Sci, Bristol BS16 1QY, Avon, England.
EM chris.simons@uwe.ac.uk; ian.parmee@uwe.ac.uk; rhys.gwynllyw@uwe.ac.uk
CR [Anonymous], IBM RAT SOFTW ARCH
   [Anonymous], 2009, The Enterprise Architect
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 2006, Interactive Computation
   Beck K., 2000, EXTREME PROGRAMMING
   BHAGWAT A, 2003, OBJECT ORIENTED ANAL
   Bradley J.T., 2003, Proceedings of 2nd International Workshop on Process Algebras and Stochastically Timed Activities, P1
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   BROOKS FP, 1995, MYTHICL MAN MONTH
   Bryce RC, 2007, SOFTW TEST VERIF REL, V17, P159, DOI 10.1002/stvr.365
   Coello C. A. C., 2007, EVOLUTIONARY ALGORIT, V5
   Cvetkovic D, 2002, AI EDAM, V16, P331, DOI 10.1017/S0890060402165012
   Damian D, 2005, EMPIR SOFTW ENG, V10, P255, DOI 10.1007/s10664-005-1288-4
   Deb K., 2010, MULTIOBJECTIVE OPTIM
   Durillo JJ, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P49, DOI 10.1109/SSBSE.2009.21
   Egyed A, 2006, IEEE T SOFTWARE ENG, V32, P299, DOI 10.1109/TSE.2006.48
   Eiben AE, 1999, IEEE T EVOLUT COMPUT, V3, P124, DOI 10.1109/4235.771166
   Evans E., 2011, DOMAIN DRIVEN DESIGN
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   GLASS RL, 2003, FACTS FACILITIES SOF, P81
   Goldfeld D, 2006, INT MATH RES NOTICES, V2006
   Guindon R., 1990, Human-Computer Interaction, V5, P305, DOI 10.1207/s15327051hci0502&3_6
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1098
   Harrison R., 1998, Empirical Software Engineering, V3, P255, DOI 10.1023/A:1009784121652
   Hermadi I, 2003, IEEE C EVOL COMPUTAT, P85, DOI 10.1109/CEC.2003.1299560
   Huang SJ, 2008, EUR J OPER RES, V188, P898, DOI 10.1016/j.ejor.2007.07.002
   Khoshgoftaar TM, 2007, IEEE T RELIAB, V56, P237, DOI 10.1109/TR.2007.896763
   Klein G, 2004, IEEE INTELL SYST, V19, P91, DOI 10.1109/MIS.2004.74
   LAWSON B, 2004, WHAT DESIGNERS KNOW, P17
   Lo SC, 2004, INT J SOFTW ENG KNOW, V14, P429, DOI 10.1142/S0218194004001701
   Lobo F.G., 2007, PARAMETER SETTING EV
   LUI D, 2004, P 17 INT C IND ENG A, P295
   Machwe AT, 2006, DES SOC PUB DS, P283
   Machwe A, 2006, IEEE C EVOL COMPUTAT, P165, DOI 10.1109/CEC.2006.1688304
   MAES P, 1994, COMMUN ACM, V37, P31, DOI 10.1145/176789.176792
   Mala GSA, 2006, LECT NOTES ARTIF INT, V4099, P1155, DOI 10.1007/978-3-540-36668-3_152
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   MICH L, 2002, P 3 INT C DAT MIN, P321
   Milner Robin., 2006, Interactive Computation, P1, DOI [10.1007/3-540-34874-3_1, DOI 10.1007/3-540-34874-3_1]
   Negroponte Nicholas., 1996, BEING DIGITAL
   O'Keeffe M., 2004, "Workshop on Directions in Software Engineering Environments (WoDiSEE2004)" W2S Workshop - 26th International Conference on Software Engineering, P75, DOI 10.1049/ic:20040214
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   Parmee I.C., 2001, EVOLUTIONARY ADAPTIV
   Parmee IC, 2004, Design 2004: Proceedings of the 8th International Design Conference, Vols 1-3, P1441
   Parmee IC, 2005, ANALYST, V130, P29, DOI 10.1039/b307211h
   Parmee IC, 2002, AI EDAM, V16, P185, DOI 10.1017/S0890060402163050
   PARMEE IC, 2002, P 6 INT C ART INT DE, P249
   PARMEE IC, 2001, P EV AD COMP ENG DES, P205
   Rech J, 2007, IEEE SOFTWARE, V24, P72, DOI 10.1109/MS.2007.110
   Sharma B, 2005, IEEE C EVOL COMPUTAT, P668
   Simons CL, 2007, ENG OPTIMIZ, V39, P631, DOI 10.1080/03052150701382974
   Simons CL, 2009, IEEE SYS MAN CYBERN, P2503, DOI 10.1109/ICSMC.2009.5346344
   Simons CL, 2008, IEEE C EVOL COMPUTAT, P869, DOI 10.1109/CEC.2008.4630898
   SIMONS CL, 2008, EXAMPLE EVENT LOG DE
   SIMONS CL, 2009, USE CASE SPECIFICATI
   Svetinovic D, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P189, DOI 10.1109/RE.2005.17
   Takagi H, 2001, P IEEE, V89, P1275, DOI 10.1109/5.949485
   Wirfs-Brock Rebecca, 2003, Object Design: Roles, Responsibilities, and Collaborations
   Wooldridge M. J., 2002, INTRO MULTIAGENT SYS
   Zannier C, 2007, INFORM SOFTWARE TECH, V49, P637, DOI 10.1016/j.infsof.2007.02.010
   ZHANG Y, 2008, REPOSITORY PUBLICATI
   Zhang YY, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1129
   2009, SELECT ARCHITECT
NR 65
TC 59
Z9 63
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2010
VL 36
IS 6
BP 798
EP 816
DI 10.1109/TSE.2010.34
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 682SU
UT WOS:000284424100006
DA 2024-07-18
ER

PT J
AU Georg, G
   Anastasakis, K
   Bordbar, B
   Houmb, SH
   Ray, I
   Toahchoodee, M
AF Georg, Geri
   Anastasakis, Kyriakos
   Bordbar, Behzad
   Houmb, Siv Hilde
   Ray, Indrakshi
   Toahchoodee, Manachai
TI Verification and Trade-Off Analysis of Security Properties in UML System
   Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Aspect-oriented modeling (AOM); Bayesian belief network (BBN); security
   analysis; trade-off analysis
AB Designing secure systems is a nontrivial task. Incomplete or faulty designs can cause security mechanisms to be incorrectly incorporated in a system, allowing them to be bypassed and resulting in a security breach. We advocate the use of the Aspect-Oriented Risk-Driven Development (AORDD) methodology for developing secure systems. This methodology begins with designers defining system assets, identifying potential attacks against them, and evaluating system risks. When a risk is unacceptable, designers must mitigate the associated threat by incorporating security mechanisms methodically into the system design. Designers next formally evaluate the resulting design to ensure that the threat has been mitigated, while still allowing development to meet other project constraints. In this paper, we focus on the AORDD analysis, which consists of: 1) a formal security evaluation and 2) a trade-off analysis that enables system designers to position alternative security solutions against each other. The formal security evaluation uses the Alloy Analyzer to provide assurance that an incorporated security mechanism performs as expected and makes the system resilient to previously identified attacks. The trade-off analysis uses a Bayesian Belief Network topology to allow equally effective security mechanisms to be compared against system security requirements and other factors such as time-to-market and budget constraints.
C1 [Georg, Geri; Ray, Indrakshi; Toahchoodee, Manachai] Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80523 USA.
   [Anastasakis, Kyriakos; Bordbar, Behzad] Univ Birmingham, Sch Comp Sci, Birmingham B15 2TT, W Midlands, England.
   [Houmb, Siv Hilde] Telenor GBDR, Serv Platform Grp, N-7004 Trondheim, Norway.
C3 Colorado State University; University of Birmingham
RP Georg, G (corresponding author), Colorado State Univ, Dept Comp Sci, 1100 Ctr Ave Mall, Ft Collins, CO 80523 USA.
EM georg@cs.colostate.edu; k.anastasakis@cs.bham.ac.uk;
   b.bordbar@cs.bham.ac.uk; siv-hilde.houmb@telenor.com;
   iray@cs.colostate.edu; toahchoo@cs.colostate.edu
FU US Air Force Office of Scientific Research [FA9550-07-1-0042]
FX This work was partially supported by the US Air Force Office of
   Scientific Research under Award No. FA9550-07-1-0042.
CR *1CORAS, 2000, IST200025031 1CORAS
   Anastasakis K, 2007, LECT NOTES COMPUT SC, V4735, P436
   [Anonymous], 1998, PROBABILISTIC REASON
   [Anonymous], 1998, NDSS
   *AS NZS, 2004, AUSTR NZ STAND HB 43
   *AS NZS, 2004, AUSTR NZ STAND RISK
   Basin D, 2006, ACM T SOFTW ENG METH, V15, P39, DOI 10.1145/1125808.1125810
   Basin D, 2009, INFORM SOFTWARE TECH, V51, P815, DOI 10.1016/j.infsof.2008.05.011
   Benaroch M, 2002, J MANAGE INFORM SYST, V19, P43
   Bordbar B., 2005, IADIS AC, P209
   Daneva M., 2006, TRCTIT0611 U TWENT
   DIMITRAKOS T, 2002, P I3E2002, P159
   FINETTI BD, 1973, THEORY PROBABILITY, V2
   FINETTI BD, 1973, THEORY PROBABILITY, V1
   France R, 2004, IEE P-SOFTW, V151, P173, DOI 10.1049/ip-sen:20040920
   Frantz S, 2004, NAT REV DRUG DISCOV, V3, P193, DOI 10.1038/nrd1358
   G G., 2001, LNI, German Informatics Society, VP-7, P128
   GEORG G, 2008, SECURITY PROPERTY VE
   Georg G, 2009, INFORM SOFTWARE TECH, V51, P846, DOI 10.1016/j.infsof.2008.05.004
   Gogolla M., 2005, Software Systems Modeling, V4, P386
   Gran BA, 2002, USE BAYESIAN BELIEF
   Houmb SH, 2007, INTEGRATING SECURITY AND SOFTWARE ENGINEERING: ADVANCES AND FUTURE VISIONS, P190
   Houmb S.H., 2007, Decision Support for Choice of Security Solution
   Houmb SH, 2005, IEEE INT C ENG COMP, P195
   *HUGIN, 2007, HUG EXP A S
   *ISO, 2007, 145084 ISO
   *ISO, 2007, 14508 ISO
   *ISO IEC, 2001, 133355 ISOIEC
   ISO/IEC Information technology - code of practice for information security management, 2000, INF TECHN COD PRACT
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jensen FV, 1996, INTRO BAYESIAN NETWO
   Kazman R., 2000, Tech. Rep. CMU/SEI-2000-TR-004
   Kazman Rick., 2002, Making Architecture Design Decisions: An Economic Approach
   Littlewood B., 1993, Journal of Computer Security, V2, P211
   Lowe G., 1996, Tools and Algorithms for the Construction and Analysis of Systems. Second International Workshop, TACAS '96. Proceedings, P147
   MASSONI T, 2004, P INT WORKSH CRIT SY, P100
   NEEDHAM RM, 1978, COMMUN ACM, V21, P993, DOI 10.1145/359657.359659
   *OMG, 2002, UN MOD LANG SUP VERS
   *OMG, 2005, XML MET INT XMI V2 0
   OMG, 2006, OBJ CONSTR LANG VERS
   *SERENE, 1999, 22187 SERENE
   Sonnenreich W, 2006, J RES PRACT INF TECH, V38, P45
   STOLEN K, 2002, BUSINESS COMPONENT B, P189
   Straw G, 2004, LECT NOTES COMPUT SC, V3273, P84
   *TLSWG, 1996, SSL 3 0 SPEC
   TORLAK E, 2005, KNOWLEDGE FLOW ANAL
   Vaziri M, 2000, TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS - TOOLS 34, PROCEEDINGS, P555
   Wu T., 2000, The SRP Authentication and Key Exchange System
   ZIEMANN P, 2002, P UML 02 WORKSH TECH, P53
   [No title captured]
NR 50
TC 19
Z9 20
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2010
VL 36
IS 3
BP 338
EP 356
DI 10.1109/TSE.2010.36
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 601PB
UT WOS:000278073400005
DA 2024-07-18
ER

PT J
AU Uzuncaova, E
   Khurshid, S
   Batory, D
AF Uzuncaova, Engin
   Khurshid, Sarfraz
   Batory, Don
TI Incremental Test Generation for Software Product Lines
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software/program verification; testing and debugging; software
   engineering.
AB Recent advances in mechanical techniques for systematic testing have increased our ability to automatically find subtle bugs, and hence, to deploy more dependable software. This paper builds on one such systematic technique, scope-bounded testing, to develop a novel specification-based approach for efficiently generating tests for products in a software product line. Given properties of features as first-order logic formulas in Alloy, our approach uses SAT-based analysis to automatically generate test inputs for each product in a product line. To ensure soundness of generation, we introduce an automatic technique for mapping a formula that specifies a feature into a transformation that defines incremental refinement of test suites. Our experimental results using different data structure product lines show that an incremental approach can provide an order of magnitude speedup over conventional techniques. We also present a further optimization using dedicated integer constraint solvers for feature properties that introduce integer constraints, and show how to use a combination of solvers in tandem for solving Alloy formulas.
C1 [Uzuncaova, Engin] Microsoft Corp, Redmond, WA 98052 USA.
   [Khurshid, Sarfraz] Univ Texas Austin, Dept Elect & Comp Engn, Austin, TX 78712 USA.
   [Batory, Don] Univ Texas Austin, Dept Comp Sci, Austin, TX 78712 USA.
C3 Microsoft; University of Texas System; University of Texas Austin;
   University of Texas System; University of Texas Austin
RP Uzuncaova, E (corresponding author), Microsoft Corp, 1 Microsoft Way, Redmond, WA 98052 USA.
EM enginuz@microsoft.com; khurshid@ece.utexas.edu; batory@cs.utexas.edu
FU US National Science Foundation (NSF) [CCF-0438786, CCF-0724979,
   IIS-0438967, CCF-0702680, CCF-0845628]; US Air Force Office of
   Scientific Research [FA9550-09-1-0351]; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [0845628] Funding Source: National Science Foundation
FX This paper is based upon work partially supported by the US National
   Science Foundation (NSF) under grant nos. CCF-0438786, CCF-0724979,
   IIS-0438967, CCF-0702680, and CCF-0845628, and US Air Force Office of
   Scientific Research grant FA9550-09-1-0351. An earlier version of this
   paper appeared in the Proceedings of the 19th IEEE International
   Symposium on Software Reliability Engineering (ISSRE 2008).
CR ADJIEWINOTO W, 1999, P 17 ACM S OP SYST P
   [Anonymous], PROCEEDINGS OF THE 2
   [Anonymous], 1991, Basic Category Theory for Computer Scientists
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Batory D., 1992, ACM Transactions on Software Engineering and Methodology, V1, P355, DOI 10.1145/136586.136587
   Batory D, 2000, IEEE T SOFTWARE ENG, V26, P441, DOI 10.1109/32.846301
   Calder M, 2003, COMPUT NETW, V41, P115, DOI 10.1016/S1389-1286(02)00352-3
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cormen T.H., 1990, Introduction to Algorithms
   CZARNECKI K, 2006, P 5 INT C GEN PROGR
   De Moura Leonardo, 2008, P 14 INT C TOOLS ALG
   EEN N, 2003, P 6 INT C THEOR APPL
   Godefroid P., 2005, P 2005 ACM SIGPLAN C
   Goodenough J. B., 1975, IEEE Transactions on Software Engineering, VSE-1, P156, DOI 10.1109/TSE.1975.6312836
   GRIESKAMP W, 2002, P INT S SOFTW TEST A
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   LEAVENS GT, 1998, 9806I TR IOW STAT U
   Lin AH, 2005, THESIS MIT
   Liskov B., 2000, PROGRAM DEV JAVA ABS
   Roggenbach M, 2006, THEOR COMPUT SCI, V354, P42, DOI 10.1016/j.tcs.2005.11.007
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   TRUJILLO S, 2007, P 29 INT C SOFTW ENG
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 60
TC 50
Z9 56
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2010
VL 36
IS 3
BP 309
EP 322
DI 10.1109/TSE.2010.30
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 601PB
UT WOS:000278073400003
DA 2024-07-18
ER

PT J
AU Chuang, SN
   Chan, ATS
AF Chuang, Siu-Nam
   Chan, Alvin T. S.
TI Dynamic QoS Adaptation for Mobile Middleware
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Middleware; mobile applications; mobile computing support services;
   mobile environments; fuzzy set; QoS
ID FUZZY; SPECIFICATION
AB Computation and networking resources in mobile operating environments are much scarcer and more dynamic than in desktop operating environments. Mobile applications can leverage on the benefits of adaptive computing to optimize the quality-of-service (QoS) delivery based on dynamic contextual situations. Fuzzy control models have been successfully applied to various distributed network QoS management systems. However, existing models are either application-specific or limited to abstract modeling and simple conceptual scenarios that do not take into account overall model scalability. Specifically, the large number of QoS parameters in a mobile operating environment causes the rule-explosion problem, in which an exponential increase in the number of rules correspondingly increases the demand for processing power to infer the rules. Hierarchical fuzzy systems were introduced to reduce the number of rules using hierarchical fuzzy control, in which correlated linguistic variables are hierarchically inferred and grouped into abstract linguistic variables. In this paper, we propose a mobile QoS management framework that uses a hierarchical fuzzy control model to support a highly extensible and structured adaptation paradigm. The proposed framework integrates several levels of QoS abstractions derived from user-perceived requirements. It also maps these abstractions to appropriate QoS resources that drive the development of mobile services that mitigate the effects of varying mobile environments.
C1 [Chuang, Siu-Nam; Chan, Alvin T. S.] Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
C3 Hong Kong Polytechnic University
RP Chuang, SN (corresponding author), Hong Kong Polytech Univ, Dept Comp, PQ806,Mong Man Wai Bldg, Kowloon, Hong Kong, Peoples R China.
EM cssiunam@comp.polyu.edu.hk; cstschan@comp.polyu.edu.hk
FU HK Polytechnic University [G-U154]; RGC Collaborative Research Fund [ERD
   34]
FX This project was supported by the HK Polytechnic University Central
   Research Grant G-U154 and the RGC Collaborative Research Fund ERD 34.
CR Al-bar A, 2001, 21ST INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOPS, PROCEEDINGS, P246, DOI 10.1109/CDCS.2001.918713
   ANGIN O, 1998, IEEE PERSONAL CO AUG
   [Anonymous], 1998, Fuzzy control
   [Anonymous], IEEE J SELECTED AREA
   Bellavista P, 2003, IEEE T SOFTWARE ENG, V29, P1086, DOI 10.1109/TSE.2003.1265523
   Braden R., 1997, 2205 IETF RFC
   CAMPBELL AT, 1996, P IFIP 5 INT WORKSH
   Capra L, 2003, IEEE T SOFTWARE ENG, V29, P929, DOI 10.1109/TSE.2003.1237173
   Carlsson C, 1996, FUZZY SET SYST, V78, P139, DOI 10.1016/0165-0114(95)00165-4
   Chalmers Dan, 1999, IEEE Communications Surveys & Tutorials, V2, P2, DOI 10.1109/COMST.1999.5340514
   Chan ATS, 2003, IEEE T SOFTWARE ENG, V29, P1072, DOI 10.1109/TSE.2003.1265522
   CHEMOUIL P, 1995, IEEE COMMUN MAG, V33, P70, DOI 10.1109/35.391441
   Chung SN, 2004, IEEE INTERNET COMPUT, V8, P26, DOI 10.1109/MIC.2004.1273483
   Cukier M, 1998, SYM REL DIST SYST, P245, DOI 10.1109/RELDIS.1998.740506
   FU Y, 2002, P USENIX ANN TECHN C
   Goyal VK, 2001, IEEE SIGNAL PROC MAG, V18, P74, DOI 10.1109/79.952806
   GU X., 2001, An xml-based quality of service enabling language for the web
   Jin JW, 2004, IEEE MULTIMEDIA, V11, P74, DOI 10.1109/MMUL.2004.16
   Julien C, 2006, IEEE T SOFTWARE ENG, V32, P281, DOI 10.1109/TSE.2006.47
   Koliver C, 2002, REAL-TIME SYST, V23, P143, DOI 10.1023/A:1015302604246
   KUHNS F, 1999, P IFIP 6 INT WORKSH, P81
   NAHRSTEDT K, 1995, IEEE MULTIMEDIA, V2, P53, DOI 10.1109/93.368603
   Nahrstedt K, 1996, IEEE J SEL AREA COMM, V14, P1263, DOI 10.1109/49.536367
   Obraczka K., 1998, Proceedings of the SIGMETRICS Symposium on Parallel and Distributed Tools, P81, DOI 10.1145/281035.281044
   PARK D, 1992, FUZZY SET SYST, V49, P151, DOI 10.1016/0165-0114(92)90321-T
   Pitsillides A, 1997, IEEE J SEL AREA COMM, V15, P209, DOI 10.1109/49.552071
   RAJU GVS, 1991, INT J CONTROL, V54, P1201, DOI 10.1080/00207179108934205
   Ross T. J., 2004, FUZZY LOGIC ENG APPL
   SINGH R, 2000, P VIS COMM IM PROC J
   Tsang DHK, 1998, IEEE T FUZZY SYST, V6, P504, DOI 10.1109/91.728442
   Yager R.R., 1981, DECISION SCI, V12, P589
   Yager RR, 1998, IEEE T SYST MAN CY C, V28, P55, DOI 10.1109/5326.661090
   P 6 INT WORKSH NETW
NR 33
TC 18
Z9 20
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2008
VL 34
IS 6
BP 738
EP 752
DI 10.1109/TSE.2008.44
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 376HR
UT WOS:000261175200002
DA 2024-07-18
ER

PT J
AU van der Meulen, MJP
   Revilla, MA
AF van der Meulen, Meine J. P.
   Revilla, Miguel A.
TI The Effectiveness of Software Diversity in a Large Population of
   Programs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Reliability; fault tolerance; redundant design
AB In this paper, we first present an exploratory analysis of the aspects of multiple-version software diversity using 36,123 programs written to the same specification. We do so within the framework of the theories of Eckhardt and Lee and Littlewood and Miller. We analyze programming faults made, explore failure regions and difficulty functions, and show how effective 1-out-of-2 diversity is and how language diversity increases this effectiveness. The second part of this paper generalizes the findings about 1-out-of-2 diversity and its special case language diversity by performing statistical analyses of 89,402 programs written to 60 specifications. Most observations in the exploratory analysis are confirmed; however, although the benefit of language diversity can be observed, its effectiveness appears to be low.
C1 [van der Meulen, Meine J. P.] Det Norske Veritas, Hovik, Norway.
   [Revilla, Miguel A.] Univ Valladolid, Fac Ciencias, Dept Matemat Aplicada, E-47011 Valladolid, Spain.
C3 Universidad de Valladolid
RP van der Meulen, MJP (corresponding author), Det Norske Veritas, Hovik, Norway.
EM meine.van.der.meulen@dnv.com; revilla@mac.cie.uva.es
FU UK Engineering and Physical Sciences Research Council
FX This work was supported in part by the UK Engineering and Physical
   Sciences Research Council via the Interdisciplinary Research
   Collaboration on the Dependability of Computer Based Systems (DIRC) and
   via the Diversity with Off-The-Shelf Components (DOTS) project,
   GR/N23912.
CR AVIZIENIS A, 1988, P 18 INT S FAULT TOL, P15
   BISHOP PG, 1986, IEEE T SOFTWARE ENG, V12, P929, DOI 10.1109/TSE.1986.6313048
   ECKHARDT DE, 1991, IEEE T SOFTWARE ENG, V17, P692, DOI 10.1109/32.83905
   ECKHARDT DE, 1985, IEEE T SOFTWARE ENG, V11, P1511, DOI 10.1109/TSE.1985.231895
   GMEINER L, 1980, SAFETY COMPUTER CONT
   KELLY J, 1983, P 13 INT S FAULT TOL
   LITTLEWOOD B, 1989, IEEE T SOFTWARE ENG, V15, P1596, DOI 10.1109/32.58771
   LYU MR, 1993, IEEE T RELIAB, V42, P179, DOI 10.1109/24.229486
   Skiena S., 2003, TEXTS COMP SCI, DOI 10.1007/b97559
   van der Meulen MJP, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P101, DOI 10.1109/ISSRE.2004.7
   VANDERMEULEN M, 2006, P 24 INT C COMP SAF, P302
NR 11
TC 15
Z9 16
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2008
VL 34
IS 6
BP 753
EP 764
DI 10.1109/TSE.2008.70
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 376HR
UT WOS:000261175200003
DA 2024-07-18
ER

PT J
AU Halfond, WGJ
   Orso, A
   Manolios, P
AF Halfond, William G. J.
   Orso, Alessandro
   Manolios, Panagiotis
TI WASP: Protecting web applications using positive tainting and
   syntax-aware evaluation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE security; SQL injection; dynamic tainting; runtime monitoring
ID CHECKING
AB Many software systems have evolved to include a Web-based component that makes them available to the public via the Internet and can expose them to a variety of Web-based attacks. one of these attacks is SQL injection, which can give attackers unrestricted access to the databases that underlie Web applications and has become increasingly frequent and serious. This paper presents a new highly automated approach for protecting Web applications against SQL injection that has both conceptual and practical advantages over most existing techniques. From a conceptual standpoint, the approach is based on the novel idea of positive tainting and on the concept of syntax-aware evaluation. From a practical standpoint, our technique is precise and efficient, has minimal deployment requirements, and incurs a negligible performance overhead in most cases. We have implemented our techniques in the Web Application SQL-injection Preventer (WASP) tool, which we used to perform an empirical evaluation on a wide range of Web, applications that we subjected to a large and varied set of attacks and legitimate accesses. WASP was able to stop all of the otherwise successful attacks and did not generate any false positives.
C1 [Halfond, William G. J.; Orso, Alessandro] Georgia Inst Technol, Coll Comp, Atlanta, GA 30332 USA.
   [Manolios, Panagiotis] Northeastern Univ, Coll Comp & Informat Sci, Boston, MA 02115 USA.
C3 University System of Georgia; Georgia Institute of Technology;
   Northeastern University
RP Halfond, WGJ (corresponding author), Georgia Inst Technol, Coll Comp, Klaus Advanced Comp Bldg,266 Ferst Dr, Atlanta, GA 30332 USA.
EM whalfond@cc.gatech.edu; orso@cc.gatech.edu; pete@ccs.neu.edu
RI Halfond, William GJ/AAT-2382-2021
OI Halfond, William GJ/0000-0003-4951-9367; Manolios,
   Panagiotis/0000-0003-0519-9699
CR Anley C., 2002, ADV SQL INJECTION SQ
   [Anonymous], 2005, TOP 10 MOST CRIT WEB
   [Anonymous], P IEEE INT S SEC SOF
   Boyd SW, 2004, LECT NOTES COMPUT SC, V3089, P292
   BUEHRER G, 2005, P 5 INT WORKSH SOFTW, P106, DOI DOI 10.1145/1108473.1108496
   Clause J., 2007, P 2007 INT S SOFTW T, DOI [10.1145/1273463.1273490, DOI 10.1145/1273463.1273490]
   Cook WR, 2005, PROC INT CONF SOFTW, P97
   Gould C, 2004, PROC INT CONF SOFTW, P645, DOI 10.1109/ICSE.2004.1317486
   Gould C, 2004, PROC INT CONF SOFTW, P697, DOI 10.1109/ICSE.2004.1317494
   Haldar V., 2005, P 21 ANN COMPUTER SE, P303, DOI DOI 10.1109/CSAC.2005.21
   Halfond William G. J., 2006, P 14 ACM SIGSOFT INT, P175, DOI [10.1145/1181775.1181797, DOI 10.1145/1181775.1181797]
   Halfond WilliamG. J., 2005, P 20 IEEEACM INT C A, P174, DOI DOI 10.1145/1101908
   Howard M., 2003, Writing Secure Code
   Huang XG, 2004, CHINESE J ELECTRON, V13, P40
   Huang Yao-Wen, 2003, Proceedings of the 12th International Conference on World Wide Web, P148
   Jovanovic N., 2006, PLAS 2006. Proceedings of the 2006 Programming Languages and Analysis for Security Workshop, P27, DOI 10.1145/1134744.1134751
   Jovanovic N., 2006, P IEEE S SEC PRIV
   LIVSHITS VB, 2005, P 14 US SEC S AUG
   Maor O., 2004, SQL INJECTION SIGNAT
   Martin Michael., 2005, OOPSLA '05: Proceedings of the 20th annual ACM SIGPLAN conference on Object oriented programming systems languages and applications, P365
   McClure RA, 2005, PROC INT CONF SOFTW, P88
   Newsome J., 2005, Dynamic taint analysis for automatic detection, analysis, and signature generation of exploits on commodity software
   Nguyen-Tuong A, 2005, P 20 IFIP INT INF SE
   PIETRASZEK T, 2005, P 8 INT S REC ADV IN
   SALTZER J, 1973, P 4 ACM S OP SYST PR
   Scott David., 2002, P 11 INT WORLD WIDE, P396
   Su Z., 2006, Conference record of the 33rd ACM SIGPLAN-SIGACT symposium on principles of programming languages, P372, DOI DOI 10.1145/1111037.1111070
   VALEUR F, 2005, P C DET INTR MALW VU
   Wassermann Gary., 2004, P FSE WORKSHOP SPECI, P70
   XIE Y, 2006, P 15 US SEC S AUG
   XU W, 2006, P 15 US SEC S AUG
NR 31
TC 83
Z9 112
U1 0
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2008
VL 34
IS 1
BP 65
EP 81
DI 10.1109/TSE.2007.70748
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 265QH
UT WOS:000253375500006
DA 2024-07-18
ER

PT J
AU Inoue, K
   Yokomori, R
   Yamamoto, T
   Matsushita, M
   Kusumoto, S
AF Inoue, K
   Yokomori, R
   Yamamoto, T
   Matsushita, M
   Kusumoto, S
TI Ranking significance of software components based on use relations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 25th International Conference on Software Engineering (ICSE 2003)
CY MAY 03-10, 2003
CL PORTLAND, OR
SP IEEE, IEEE Comp Soc, Tech Council Software Engn, ACM, ACM SIGSOFT, IBM, NORTHROP GRUMMAN Space Technol, BMW, NOKIA, SUN Microsyst, DaimlerChrysler, Microsoft Res
DE component rank; graph representation model; reuse models; program
   analysis; reusable libraries
AB Collections of already developed programs are important resources for efficient development of reliable software systems. In this paper, we propose a novel graph-representation model of a software component library ( repository), called component rank model. This is based on analyzing actual usage relations of the components and propagating the significance through the usage relations. Using the component rank model, we have developed a Java class retrieval system named SPARS-J and applied SPARS-J to various collections of Java files. The result shows that SPARS-J gives a higher rank to components that are used more frequently. As a result, software engineers looking for a component have a better chance of finding it quickly. SPARS-J has been used by two companies, and has produced promising results.
C1 Osaka Univ, Software Engn Lab, Dept Comp Sci, Grad Sch Informat Sci & Technol, Osaka 5608531, Japan.
   Ritsumeikan Univ, Dept Comp Sci, Coll Informat Sci & Engn, Shiga 5258577, Japan.
C3 Osaka University; Ritsumeikan University
RP Osaka Univ, Software Engn Lab, Dept Comp Sci, Grad Sch Informat Sci & Technol, 1-3 Machikaneyamacho, Osaka 5608531, Japan.
EM inoue@ist.osaka-u.ac.jp; yokomori@ist.osaka-u.ac.jp;
   tetsuo@cs.ritsumei.ac.jp; matusita@ist.osaka-u.ac.jp;
   kusumoto@ist.osaka-u.ac.jp
CR [Anonymous], 2000, AUTOMATED SOFTWARE E
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   Chatzigeorgiou A, 2004, PROC INT CONF SOFTW, P656, DOI 10.1109/ICSE.2004.1317487
   EDELSTEIN O, 1999, P 4 INT WORKSH NGITS, P229
   Etzkorn LH, 2001, INFORM SOFTWARE TECH, V43, P295, DOI 10.1016/S0950-5849(00)00169-5
   FUJIWARA H, 2002, INFORMATION PROCESSI, V23, P155
   FUJIWARA H, 2002, THESIS OSAKA U
   Guo J., 2000, Proceedings Seventh IEEE International Conference and Workshop on the Engineering of Computer Based Systems (ECBS 2000), P92, DOI 10.1109/ECBS.2000.839866
   Inoue K, 2003, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2003.1201184
   ISODA S, 1992, P 14 INT C SOFTW ENG, P320
   Keepence B, 1999, IEEE SOFTWARE, V16, P102, DOI 10.1109/52.776957
   Kleinberg JM, 1999, J ACM, V46, P604, DOI 10.1145/324133.324140
   KOBORI K, 2003, P INT WORKSH COMM DR
   KRAFT R, 1999, P WORLD C WWW INT, P626
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   MAAREK YS, 1991, IEEE T SOFTWARE ENG, V17, P800, DOI 10.1109/32.83915
   Mili A, 1998, ANN SOFTW ENG, V5, P349, DOI 10.1023/A:1018964121953
   Page L., 1999, PAGERANK CITATION RA
   PAUL S, 1994, IEEE T SOFTWARE ENG, V20, P463, DOI 10.1109/32.295894
   PINSKI G, 1976, INFORM PROCESS MANAG, V12, P297, DOI 10.1016/0306-4573(76)90048-0
   POULIN J, 1995, P ACM SIGSOFT S SOFT, P160
   SALTON G, 1991, SCIENCE, V253, P974, DOI 10.1126/science.253.5023.974
   Seacord RC, 1998, IEEE INTERNET COMPUT, V2, P62, DOI 10.1109/4236.735988
   Spink A, 2002, COMPUTER, V35, P107, DOI 10.1109/2.989940
   Stewart W.J., 1995, Introduction to the Numerical Solution of Markov Chains
   UMEMORI F, 2004, THESIS OSAKA U
   WASHIZAKI H, 2002, P INT S EMP SOFTW EN, P19
   YAO YY, 1995, J AM SOC INFORM SCI, V46, P133, DOI 10.1002/(SICI)1097-4571(199503)46:2<133::AID-ASI6>3.0.CO;2-Z
   Ye YW, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P513, DOI 10.1109/ICSE.2002.1007995
NR 29
TC 88
Z9 107
U1 2
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2005
VL 31
IS 3
BP 213
EP 225
DI 10.1109/TSE.2005.38
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 917IE
UT WOS:000228453500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Luqi
   Zhang, L
   Berzins, V
   Qiao, Y
AF Luqi
   Zhang, L
   Berzins, V
   Qiao, Y
TI Documentation driven development for complex real-time systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software development; documentation; agility; information
   representation; complex systems; real-time systems
AB This paper presents a novel approach for development of complex real-time systems, called the documentation-driven development (DDD) approach. This approach can enhance integration of computer aided software development activities, which encompass the entire life cycle. DDD will provide a mechanism to monitor and quickly respond to changes in requirements and provide a friendly communication and collaboration environment to enable different stakeholders to be easily involved in development processes and, therefore, significantly improve the agility of software development for complex real-time systems. DDD will also support automated software generation based on a computational model and some relevant techniques. DDD includes two main parts: a documentation management system (DMS) and a process measurement system (PMS). DMS will create, organize, monitor, analyze, and transform all documentation associated with the software development process. PMS will monitor the frequent changes in requirements and assess the effort and success possibility of development. A case study was conducted by a tool set that realized part of the proposed approach.
C1 USN, Postgrad Sch, Software Engn Automat Ctr, Dept Comp Sci, Monterey, CA 93943 USA.
C3 United States Department of Defense; United States Navy; Naval
   Postgraduate School
RP Luqi (corresponding author), USN, Postgrad Sch, Software Engn Automat Ctr, Dept Comp Sci, 833 Dyer Rd, Monterey, CA 93943 USA.
EM luqi@nps.edu; lzhang@nps.edu; berzins@nps.edu; yqiao@nps.edu
CR Abrahamsson P., 2002, Agile Software Development Methods: Review and Analysis
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   ALUR R, 2002, P C INT DES PROC TEC
   [Anonymous], P 2 INT WORKSH RUNT
   Beck K., 2000, EXTREME PROGRAMMING
   Bjorner NS, 2001, THEOR COMPUT SCI, V253, P27, DOI 10.1016/S0304-3975(00)00088-8
   BOEHM B, 2002, P 17 INT FOR COCOMO
   Boehm BW., 1981, Software Engineering Economics
   Broy M, 2001, IEEE T SOFTWARE ENG, V27, P42, DOI 10.1109/32.895987
   BROY M, 2001, P 1 INT WORKSH EMB S, P51
   Burton R.M., 1998, STRATEGIC ORG DIAGNO
   CAMPOS S, 1995, P WORKSH LANG COMP T, P70
   Clarke D, 1997, THIRD IEEE REAL-TIME TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P112, DOI 10.1109/RTTAS.1997.601349
   Cockburn A., 2002, AGILE SOFTWARE DEV
   CORBETT J, 2002, INT J SOFTWARE TOOLS
   DeMarco T, 2003, COMPUTER, V36, P5
   Deng XG, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P442, DOI 10.1109/ICSE.2002.1007989
   DEVANBU P, 1990, 12TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P249, DOI 10.1109/ICSE.1990.63631
   DUPONT JP, 2002, THESIS NAVAL POSTGRA
   Fowler M., 2001, Software Development, V9, P28
   FRENCH J, 1997, APPL HYPERTEXT STRUC
   Garlan D, 2003, LECT NOTES COMPUT SC, V2648, P166
   Goldin L., 1997, Automated Software Engineering, V4, P375, DOI 10.1023/A:1008617922496
   Hall E.M., 1997, Managing Risk: Methods for Software Systems Development
   Highsmith JamesA., 2000, ADAPTIVE SOFTWARE DE
   Hoffman D, 2003, J SYST SOFTWARE, V66, P143, DOI 10.1016/S0164-1212(02)00055-9
   Hong HS, 2002, LECT NOTES COMPUT SC, V2280, P327
   Johnson N.L., 1994, CONTINUOUS UNIVARIAT, V1
   KAROLAK D, 1996, SOFTWARE ENG MANAGEM
   LIANG X, 2003, P ICSE 2003 WORKSH S, P1
   LUQI, 1993, COMPUT LANG, V18, P77, DOI 10.1016/0096-0551(93)90013-Q
   LUQI, 1988, IEEE T SOFTWARE ENG, V14, P1409, DOI 10.1109/32.6186
   LUQI, 2003, P 7 WORLD MULT SYST, V6, P237
   LUQI X, 2003, P 21 INT SYST SAF C, P1060
   LUQI Y, 2002, P MONT WORKSH RAD IN, P265
   Lyu M.R., 1995, SOFTWARE RELIABILITY
   Martin J., 1991, Rapid Application Development
   MURRAH M, 2002, THESIS NAVAL POSTGRA
   NOGUEIRA JC, 2000, THESIS NAVAL POSTGRA
   Palmer S.R., 2002, PRACTICAL GUIDE FEAT
   PARIS C, 1996, P INT C COMPUTATIONA
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   PUETT J, 2003, THESIS NAVAL POSTGRA
   SABOE M, 2002, THESIS NAVAL POSTGRA
   Schwaber K., 2001, Agile software development with scrum
NR 45
TC 10
Z9 10
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2004
VL 30
IS 12
BP 936
EP 952
DI 10.1109/TSE.2004.100
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881RI
UT WOS:000225886200007
DA 2024-07-18
ER

PT J
AU Padberg, F
   Ragg, T
   Schoknecht, R
AF Padberg, F
   Ragg, T
   Schoknecht, R
TI Using machine learning for estimating the defect content after an
   inspection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE defect content estimation; software inspections; nonlinear regression;
   neural networks; empirical methods
ID SOFTWARE; PREDICTION; BACKPROPAGATION; MODELS
AB We view the problem of estimating the defect content of a document after an inspection as a machine learning problem: The goal is to learn from empirical data the relationship between certain observable features of an inspection (such as the total number of different defects detected) and the number of,defects actually contained in the document. We show that some :features can carry significant nonlinear information about the defect content. Therefore, we use a nonlinear regression technique,, neural networks, to solve the learning problem. To select the best among all neural networks trained on a given data set, one usually reserves part of the data set for later cross-validation; in contrast,we use a,technique which leaves the full data set for training. This is an advantage when the data set is Small. We validate our approach on a known empirical inspection data set. For that benchmark, our novel approach clearly outperforms both linear regression and the current standard methods in Software engineering for estimating the defect content, such as capture-recapture. The validation also shows that our machine learning approach can be successful even when the empirical inspection data set is small.
C1 Univ Karlsruhe, Fak Informat, D-76131 Karlsruhe, Germany.
   Quantiom Bioinformat GMBH, D-76356 Weingarten, Germany.
C3 Helmholtz Association; Karlsruhe Institute of Technology
RP Univ Karlsruhe, Fak Informat, Fasanengarten 5, D-76131 Karlsruhe, Germany.
EM padberg@ira.uka.de; thomas.ragg@quantiom.de; schokn@uka.de
CR Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   Biffl S, 2001, PROC INT CONF SOFTW, P145, DOI 10.1109/ICSE.2001.919089
   Bishop C. M., 1995, NEURAL NETWORKS PATT
   Briand LC, 2000, IEEE T SOFTWARE ENG, V26, P518, DOI 10.1109/32.852741
   Briand LC, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P32, DOI 10.1109/ISSRE.1998.730766
   Cover Thomas A., 1991, ELEM INF THEORY, DOI 10.1002/047174882X
   Ebrahimi NB, 1997, IEEE T SOFTWARE ENG, V23, P529, DOI 10.1109/32.624308
   EICK SG, 1992, P INT C SOFTW ENG IC, V14, P59
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Gilb Tom, 1993, Software inspections
   KARUNANITHI N, 1992, IEEE T SOFTWARE ENG, V18, P563, DOI 10.1109/32.148475
   Khoshgoftaar TM, 1996, IEEE T RELIAB, V45, P456, DOI 10.1109/24.537016
   KHOSHGOFTAAR TM, 1992, P INT S SOFTW REL EN, V3, P83
   Lanubile F, 1997, J SYST SOFTWARE, V38, P225, DOI 10.1016/S0164-1212(96)00153-7
   MACKAY DJC, 1992, NEURAL COMPUT, V4, P415, DOI [10.1162/neco.1992.4.3.415, 10.1162/neco.1992.4.3.448]
   PADBERG F, 2002, P INT C SOFTW ENG IC, V24, P58
   Ragg T, 2002, NEUROCOMPUTING, V43, P127, DOI 10.1016/S0925-2312(01)00624-5
   RAGG T, 2001, P KI 2001 ADV ART IN, P48
   RAGG T, 2002, P INT C ART NEUR NET, P516
   RIEDMILLER M, 1994, COMP STAND INTER, V16, P265, DOI 10.1016/0920-5489(94)90017-5
   RUMELHART DE, 1986, NATURE, V323, P533, DOI 10.1038/323533a0
   Runeson P., 1998, Empirical Software Engineering, V3, P381, DOI 10.1023/A:1009728205264
   Silverman, 2018, DENSITY ESTIMATION S, DOI 10.1201/9781315140919
   VANDERWIEL SA, 1993, IEEE T SOFTWARE ENG, V19, P1045, DOI 10.1109/32.256852
   Wohlin C, 1998, PROC INT CONF SOFTW, P400, DOI 10.1109/ICSE.1998.671393
NR 25
TC 14
Z9 16
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2004
VL 30
IS 1
BP 17
EP 28
DI 10.1109/TSE.2004.1265733
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 757QD
UT WOS:000187572200002
DA 2024-07-18
ER

PT J
AU Cleland-Huang, J
   Chang, CK
   Christensen, M
AF Cleland-Huang, J
   Chang, CK
   Christensen, M
TI Event-based traceability for managing evolutionary change
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE change management; traceability; requirements management; evolutionary
   change; software maintenance; impact analysis
ID SOFTWARE
AB Although the benefits of requirements traceability are widely recognized, the actual practice of maintaining a traceability scheme is not always entirely successful. The traceability infrastructure underlying a software system tends to erode over its lifetime, as time-pressured practitioners fail to consistently maintain links and update impacted artifacts each time a change occurs, even with the support of automated systems. This paper proposes a new method of traceability based upon event-notification and is applicable even in a heterogeneous and globally distributed development environment. Traceable artifacts are no longer tightly coupled but are linked through an event service, which creates an environment in which change is handled more efficiently, and artifacts and their related links are maintained in a restorable state. The method also supports enhanced project management for the process of updating and maintaining the system artifacts.
C1 Depaul Univ, Sch Comp Sci Telecommun & Informat Syst, Chicago, IL 60604 USA.
   Iowa State Univ, Dept Comp Sci, Ames, IA 50011 USA.
C3 DePaul University; Iowa State University
RP Depaul Univ, Sch Comp Sci Telecommun & Informat Syst, 242 S Wabash Ave, Chicago, IL 60604 USA.
EM jhuang@acs.depaul.edu; chang@cs.iastate.edu; markchri@concentric.net
CR Ambriola V., 1997, ACM Transactions on Software Engineering and Methodology, V6, P283, DOI 10.1145/258077.258080
   [Anonymous], P PROC SENS SOFTW EN
   [Anonymous], SOFTWARE ENG PRACTIO
   [Anonymous], 2000, RATIONAL UNIFIED PRO
   Antoniol G, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P240, DOI 10.1109/WCRE.2000.891475
   AZELBORN B, 2000, BUILDING BETTER TRAC
   Barnard D.T., 1995, 95372 QUEENS U DEP C
   Bersoff E., 1980, SOFTWARE CONFIGURATI
   BOEHM BW, 1973, DATAMATION, V19, P48
   Cleland-Huang J, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P212
   Cleland-Huang J, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P289, DOI 10.1109/ICRE.2002.1048540
   CLELANDHUANG J, 2002, THESIS U ILLINOIS CH
   CLELANDHUANG J, 2002, IEEE P INT COMP SOFT
   CLELANDHUANG J, IN PRESS AUTOMATING
   CONKLIN J, 1989, J AM SOC INFORM SCI, V40, P200, DOI 10.1002/(SICI)1097-4571(198905)40:3<200::AID-ASI11>3.0.CO;2-U
   COOKE J, 1991, TOOLS TECHNIQUES MAI, P10
   Dart S., 1991, Proceedings of the 3rd International Workshop on Software Configuration Management, P1, DOI 10.1145/111062.111063
   Davis A.M., 1990, SOFTWARE REQUIREMENT
   DEBELLIS M, 1992, AO07 CDRL
   DEBELLIS M, 1992, P 7 KNOWL BAS SOFTW
   DEVANBU P, 1991, COMMUN ACM, V34, P34, DOI 10.1145/103167.103172
   Domges R, 1998, COMMUN ACM, V41, P54, DOI 10.1145/290133.290149
   Fjelstad R.K., 1986, APPL PROGRAM MAINTEN
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GEPPERT, 1998, P IFIP INT C DISTR S
   GLINZ M, 2000, P 4 INT C REQ ENG
   GOTEL O, 1995, P 2 IEEE INT S REQ E
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   GOTEL OCZ, 1996, THESIS IMPERIAL COLL
   GREEN C, 1986, READINGS ARTIFICIAL
   GUPTA S, 1998, JAVA REPORT, V3
   JAMES L, 1997, P IEEE WORKSH ENG CO
   Jarke M, 1998, COMMUN ACM, V41, P32, DOI 10.1145/290133.290145
   JOHNSON WL, 1992, IEEE T SOFTWARE ENG, V18, P853, DOI 10.1109/32.163603
   JOHNSON WL, 1990, IEEE INT C SOFTWARE, P238
   JOHNSON WL, 1991, P 6 ANN KNOWL BAS SO, P57
   KAINDL H, 1993, ACM SOFTWARE ENG NOT, V18, P30
   LAPEYRE A, 1999, 4 ERAS REQUIREMENTS
   LEE J, 1990, ARTIF INTELL, P105
   LEE J, 1990, P COMP SUPP COOP WOR
   Leffingwell D., 1997, CALCULATING YOUR RET
   LIU F, 2001, NOTIFICATION PROCESS
   MacLean A., 1991, Human-Computer Interaction, V6, P201, DOI 10.1207/s15327051hci0603&4_2
   MACLEAN A, 1989, P HUM FACT COMP SYST
   Martin J., 1983, SOFTWARE MAINTENANCE
   Palmer J., 1997, SOFTWARE REQUIREMENT
   Parnas D., 1972, COMMUN ACM, V14, P221
   Pinheiro FAC, 1996, IEEE SOFTWARE, V13, P52, DOI 10.1109/52.506462
   Pohl K, 1999, ACM T SOFTW ENG METH, V8, P343, DOI 10.1145/322993.322995
   POHL K, 1997, P 6 EUR SOFTW ENG C
   Pohl K., 1996, Requirements engineering: An overview
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   *RAT SOFTW CORP, 2001, USE CAS MAN RAT ROS
   *SEAMEN, 1997, SOFTW ENG ACT MECH
   SELKOW SM, 1977, INFORM PROCESS LETT, V6, P184, DOI 10.1016/0020-0190(77)90064-3
   SPENCE I, 1999, TRACEABILITY STRATEG
   STRENS MR, 1996, P IEEE S WORKSH ENG
   Sugden RC, 1996, IEEE SYMPOSIUM AND WORKSHOP ON ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P457, DOI 10.1109/ECBS.1996.494574
   *SWORDIES, 2000, SWISS WORKFL DISTR E
   *TRAMS, 2000, T ACT DAT MECH WORKF
   TRYGGESETH E, 1997, P IEEE INT C SOFT MA
   Weidenhaupt K, 1998, IEEE SOFTWARE, V15, P34, DOI 10.1109/52.663783
   WIRTH N, 1971, COMMUN ACM, V14, P221, DOI 10.1145/362575.362577
   ZOWGHI D, 1997, P 3 IEEE S REQ ENG J
   2003, EBT ONLINE DEMO
   2000, DRAFT RECOMMENDATION
   1999, EVE EVENT DRIVEN DIS
   2000, M NET M NET ONLINE D
   2002, INT COUNCIL SYSTEMS
NR 69
TC 135
Z9 174
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2003
VL 29
IS 9
BP 796
EP 810
DI 10.1109/TSE.2003.1232285
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 719EY
UT WOS:000185191700003
DA 2024-07-18
ER

PT J
AU Herbsleb, JD
   Mockus, A
AF Herbsleb, JD
   Mockus, A
TI An empirical study of speed and communication in globally distributed
   software development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE global development; collaboration; delay; speed; awareness; informal
   communication
ID DESIGN
AB Global software development is rapidly becoming the norm for technology companies. Previous qualitative research suggests that distributed development may increase development cycle time for individual work items (modification requests). We use both data from the source code change management system and survey data to model the extent of delay in a distributed software development organization and explore several possible mechanisms for this delay. One key finding is that distributed work items appear to take about two and one-half times as long to complete as similar items where all the work is colocated. The data strongly suggest a mechanism for the delay, i.e., that distributed work items involve more people than comparable same-site work items, and the number of people involved is strongly related to the calendar time to complete a work item. We replicate the analysis of change data in a different organization with a different product and different sites and confirm our main findings. We also report survey results showing differences between same-site and distributed social networks, testing several hypotheses about characteristics of distributed social networks that may be related to delay. We discuss implications of our findings for practices and collaboration technology that have the potential for dramatically speeding distributed software development.
C1 Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
   Avaya Labs Res, Basking Ridge, NJ 07920 USA.
C3 Carnegie Mellon University; Avaya
RP Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
EM jherbsleb@acm.org; audris@avaya.com
RI Mockus, Audris/AEY-3361-2022
OI Mockus, Audris/0000-0002-7987-7598
CR Abel M.J., 1990, INTELLECTUAL TEAMWOR, P489
   ACKERMAN MS, 1998, P ACM 1998 C COMP SU, P39, DOI DOI 10.1145/289444.289461
   Allen T. J., 1977, Managing the flow of technology: technology transfer and the dissemination of technical information within RD organizations
   Battin RD, 2001, IEEE SOFTWARE, V18, P70, DOI 10.1109/52.914750
   BROOKS GFP, 1995, MYTHICAL MAN MONTH E
   Carmel E., 1999, GLOBAL SOFTWARE TEAM
   CHURCHILL EF, 1999, P INT ACM SIGGROUP C, P40
   CONWAY ME, 1968, DATAMATION, V14, P28
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Cusumano M.A., 1998, COMPETING INTERNET T
   Dourish P., 1992, PORTHOLES, P541, DOI DOI 10.1145/142750.142982
   Ebert C, 2001, IEEE SOFTWARE, V18, P62, DOI 10.1109/52.914748
   Edwards D., 2000, Introduction to graphical modelling, V2nd edn.
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   FISH R, 1992, P CHI 92, P37, DOI DOI 10.1145/142750.142755
   Galbraith J., 1977, ORG DESIGN
   GRINTDER RE, 1998, P ACM C COMP SUPP CO
   Grinter RE, 1999, P 1999 ACM INT C SUP, P306, DOI DOI 10.1145/320297.320333
   Handel M., 2002, P 2002 ACM C COMP SU, P1, DOI [10.1145/587078.587080, DOI 10.1145/587078.587080]
   Herbsleb J. D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P85, DOI 10.1109/ICSE.1999.840998
   HERBSLEB JD, 1995, HUM-COMPUT INTERACT, V10, P249, DOI 10.1207/s15327051hci1002&3_4
   Herbsleb JD, 2001, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.2001.919083
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   HERBSLEB JD, 1908, P ACM C COMP HUM INT, P171
   Hindus D., 1996, CSCW 96, P238
   Isaacs E., 2002, Proceedings of CHI '02: Hubbub: A Sound-Enhanced Mobile Instant Messenger that Supports Awareness and Opportunistic Interactions, P179
   Kraut R.E., 1990, Intellectual Teamwork, P149
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   McGrath J.E., 1990, INTELLECTUAL TEAMWOR, P23
   Mockus A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P503, DOI 10.1109/ICSE.2002.1007994
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Mockus A, 2001, IEEE SOFTWARE, V18, P30, DOI 10.1109/52.914737
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Nardi B.A., 2000, P 2000 ACM C COMP SU, P79, DOI DOI 10.1145/358916.358975
   OBATA A, 1998, P ACM 1998 C COMP SU, P1
   Olson G., 1996, ACM C COMPUTER SUPPO, P419
   Palen Leysia., 1999, CHI 99, P17
   Parnas D.L., 1972, COMMUN ACM, V15, P12
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   Whittaker J, 1990, GRAPHICAL MODELS APP
NR 40
TC 467
Z9 528
U1 0
U2 49
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2003
VL 29
IS 6
BP 481
EP 494
DI 10.1109/TSE.2003.1205177
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 685XV
UT WOS:000183290400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Biffl, S
   Halling, M
AF Biffl, S
   Halling, M
TI Investigating the defect detection effectiveness, and cost benefit of
   nominal inspect-ion teams
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software inspection; reading techniques; cost-benefit modeling;
   empirical software engineering
AB Inspection is an effective but also expensive quality assurance activity to find defects early during software development. The defect detection process, team size, and staff hours invested can have a considerable impact on the defect detection effectiveness and cost-benefit of an inspection. In this paper, we use empirical data and a probabilistic model to estimate this impact for nominal (noncommunicating) inspection teams in an experiment context. Further, the analysis investigates how cutting off the inspection after a certain time frame would influence inspection performance. Main findings of the investigation are: 1) Using Combinations of different reading techniques in a team is considerably more effective than using the best single technique only (regardless of the observed level of effort). 2) For optimizing the inspection performance, determining the optimal process. mix in a team is more important than adding an inspector (above a certain team size) in our model. 3) A high level of defect detection effectiveness is much more costly to achieve than a moderate level-since the average cost for the defects found by the inspector last added to a team increases more than linearly with growing effort investment. The work provides an initial baseline of inspection, performance with regard to process diversity and effort in inspection teams. We encourage further studies on the topic of time usage with defect detection techniques and its effect on inspection effectiveness in a variety of inspection contexts to support inspection planning with limited resources.
C1 Vienna Univ Technol, Inst Software Technol, A-1040 Vienna, Austria.
   Johannes Kepler Univ Linz, Syst Engn & Automat Dept, A-4040 Linz, Austria.
C3 Technische Universitat Wien; Johannes Kepler University Linz
RP Vienna Univ Technol, Inst Software Technol, Karlspl 13, A-1040 Vienna, Austria.
EM Stefan.Biffl@tuwien.ac.at; mh@sea.uni-linz.ac.at
RI Biffl, Stefan/AAP-6073-2020
OI Biffl, Stefan/0000-0002-3413-7780; Halling, Michael/0000-0003-0922-3318
CR [Anonymous], 2000, Kluwer international series in software engineering
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   BIFFL S, 2000, P EUR 2000 TRACK SOF
   BIFFL S, 2001, P INT C SOFTW ENG
   BIFFL S, 2002, P IEEE INT SOFTW MET
   BIFFL S, 2001, P IEEE INT SOFTW MET
   Briand LC, 2000, IEEE T SOFTWARE ENG, V26, P518, DOI 10.1109/32.852741
   CIOLKOWSKI M, 1997, ISERN9713 FRAUNH I E
   CURTIS B, 1986, P EMP STUD PROGR 1 W, P256
   Gilb Tom, 1993, Software inspections
   HALLING M, 2001, P C AUT SOFTW ENG AS
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Humphrey WattsS., 2000, Introduction to the team software process
   Johnson P. M., 1998, Empirical Software Engineering, V3, P9, DOI 10.1023/A:1009787822215
   JOHNSON PM, 1996, 9606 U HAW DEPT INF
   Laitenberger O, 2000, J SYST SOFTWARE, V50, P5, DOI 10.1016/S0164-1212(99)00073-4
   LAITENBERGER O, 2000, THESIS U KAISERSLAUT
   LAITENBERGER O, 1999, P INT C SOFTW ENG
   Miller J., 1998, Empirical Software Engineering, V3, P37, DOI 10.1023/A:1009735805377
   Porter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P41, DOI 10.1145/268411.268421
   PORTER AA, 1994, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.1994.296770
   PORTON R, 1995, CINEASTE, V21, P6
   Robson C., 1993, Real world research, V2nd
   SHULL F, 1998, THESIS U MARYLAND CO
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   TRAVASSOS G, 1999, P C OBJ OR PROGR SYS
   VOTTA L, 1993, ACM SOFTWARE ENG NOT, V18, P107
   Waters D., 1997, Quantitative methods for business, V2nd
NR 28
TC 41
Z9 42
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2003
VL 29
IS 5
BP 385
EP 397
DI 10.1109/TSE.2003.1199069
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 675HM
UT WOS:000182688000001
DA 2024-07-18
ER

PT J
AU von Stein, M
   Shriver, D
   Elbaum, S
AF von Stein, Meriel
   Shriver, David
   Elbaum, Sebastian
TI DeepManeuver: Adversarial Test Generation for Trajectory Manipulation of
   Autonomous Vehicles
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Test pattern generators; Generators; Test generation; adversarial
   testing; autonomous systems
ID DEEP; VISION
AB Adversarial test generation techniques aim to produce input perturbations that cause a DNN to compute incorrect outputs. For autonomous vehicles driven by a DNN, however, the effect of such perturbations are attenuated by other parts of the system and are less effective as vehicle state evolves. In this work we argue that for adversarial testing perturbations to be effective on autonomous vehicles, they must account for the subtle interplay between the DNN and vehicle states. Building on that insight, we develop DeepManeuver, an automated framework that interleaves adversarial test generation with vehicle trajectory physics simulation. Thus, as the vehicle moves along a trajectory, DeepManeuver enables the refinement of candidate perturbations to: (1) account for changes in the state of the vehicle that may affect how the perturbation is perceived by the system; (2) retain the effect of the perturbation on previous states so that the current state is still reachable and past trajectory is preserved; and (3) result in multi-target maneuvers that require fulfillment of vehicle state sequences (e.g. reaching locations in a road to navigate a tight turn). Our assessment reveals that DeepManeuver can generate perturbations to force maneuvers more effectively and consistently than state-of-the-art techniques by 20.7 percentage points on average. We also show DeepManeuver's effectiveness at disrupting vehicle behavior to achieve multi-target maneuvers with a minimum 52% rate of success.
C1 [von Stein, Meriel; Elbaum, Sebastian] Univ Virginia, Charlottesville, VA 22903 USA.
   [Shriver, David] Software Engn Inst, AI Div, Pittsburgh, PA 15213 USA.
C3 University of Virginia; Software Engineering Institute
RP von Stein, M (corresponding author), Univ Virginia, Charlottesville, VA 22903 USA.
EM meriel@virginia.edu; dls2fc@virginia.edu; selbaum@virginia.edu
RI Shriver, David/HHS-1880-2022
OI Shriver, David/0000-0003-0208-6517; Elbaum,
   Sebastian/0000-0001-9592-1352; von Stein, Meriel/0000-0003-4641-4199
FU NSF [1924777, 2312487]; AFOSR [FA9550-21-1-0164]
FX This work was supported in part by the NSF Awards 1924777 and 2312487,
   and in part by the AFOSR Award FA9550-21-1-0164.
CR Adel A, 2020, PROCEEDINGS OF 2020 INTERNATIONAL CONFERENCE ON INNOVATIVE TRENDS IN COMMUNICATION AND COMPUTER ENGINEERING (ITCE), P170, DOI [10.1109/itce48509.2020.9047787, 10.1109/ITCE48509.2020.9047787]
   Afzal A, 2020, IEEE INT CONF SOFTW, P96, DOI 10.1109/ICST46399.2020.00020
   Akhtar N, 2018, IEEE ACCESS, V6, P14410, DOI 10.1109/ACCESS.2018.2807385
   Althoff M, 2018, IEEE INT VEH SYM, P1326, DOI 10.1109/IVS.2018.8500374
   [Anonymous], 2019, Waymo open dataset: An autonomous driving dataset
   BeamNG, 2020, BeamNGpy: Python API to BeamNG.drive
   BeamNG, 2020, Beamng.drive vehicle simulator
   Ben Abdessalem R, 2018, IEEE INT CONF AUTOM, P143, DOI 10.1145/3238147.3238192
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Bojarski M, 2016, Arxiv, DOI [arXiv:1604.07316, 10.48550/arXiv.1604.07316]
   Boloor A, 2019, IEEE I C EMBED SOFTW, DOI 10.1109/icess.2019.8782514
   Carlini N, 2017, Arxiv, DOI arXiv:1608.04644
   Cellan-Jones R., BBC
   Chen J, 2019, IEEE ACCESS, V7, P181083, DOI 10.1109/ACCESS.2019.2959031
   Corcoba V., 2018, Artificial Intelligence Research and Development, P287
   Dola S, 2021, PROC INT CONF SOFTW, P226, DOI 10.1109/ICSE43902.2021.00032
   Duan RJ, 2020, PROC CVPR IEEE, P997, DOI 10.1109/CVPR42600.2020.00108
   Dwarakanath A, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P118, DOI 10.1145/3213846.3213858
   Feng S, 2021, NAT COMMUN, V12, DOI 10.1038/s41467-021-21007-8
   Fremont DJ, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P63, DOI 10.1145/3314221.3314633
   Gambi A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P318, DOI 10.1145/3293882.3330566
   Gambi A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3338906.3338942
   Geiger A, 2013, INT J ROBOT RES, V32, P1231, DOI 10.1177/0278364913491297
   Gerasimou S, 2020, PROC INT CONF SOFTW, P702, DOI 10.1145/3377811.3380391
   Goodfellow I.J., 2015, PROC 3 INT C LEARN R
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   Harris M., The Guardian
   Huang XW, 2020, COMPUT SCI REV, V37, DOI 10.1016/j.cosrev.2020.100270
   Isidore C., 2014, CNN
   Kim J, 2018, Arxiv, DOI arXiv:1808.08444
   Levin T., BUSINESS INSIDER
   Lin YC, 2017, IEEE T INTELL TRANSP, V18, P3179, DOI 10.1109/TITS.2017.2673778
   Moosavi-Dezfooli SM, 2017, PROC CVPR IEEE, P86, DOI 10.1109/CVPR.2017.17
   Nie J, 2021, IEEE T INTELL VEHICL, V6, P310, DOI 10.1109/TIV.2020.3027319
   Patel N, 2019, IEEE INT C INT ROBOT, P5916, DOI [10.1109/IROS40897.2019.8968267, 10.1109/iros40897.2019.8968267]
   Pavlitskaya S, 2020, IEEE INT C INTELL TR, DOI 10.1109/itsc45102.2020.9294426
   Pei KX, 2019, COMMUN ACM, V62, P137, DOI 10.1145/3361566
   Riccio V, 2020, Arxiv, DOI arXiv:2007.02787
   Santana E, 2016, Arxiv, DOI arXiv:1608.01230
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Shorten C, 2019, J BIG DATA-GER, V6, DOI 10.1186/s40537-019-0197-0
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Tian YC, 2020, PROC INT CONF SOFTW, P1122, DOI 10.1145/3377811.3380400
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   TramŠr F, 2016, Arxiv, DOI arXiv:1510.02377
   Tuncali CE, 2020, IEEE T INTELL VEHICL, V5, P265, DOI 10.1109/TIV.2019.2955903
   Tuncali CE, 2018, IEEE INT VEH SYM, P1555
   Udacity, 2016, Udacity Self-Driving Car Driving Data
   Uesato J, 2018, Arxiv, DOI arXiv:1812.01647
   Ul Haq F, 2020, IEEE INT CONF SOFTW, P85, DOI 10.1109/ICST46399.2020.00019
   von Stein M, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3559500
   Wang JY, 2021, PROC INT CONF SOFTW, P300, DOI 10.1109/ICSE43902.2021.00038
   Woodlief T, 2022, PROC INT CONF SOFTW, P1958, DOI 10.1145/3510003.3510212
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Zelun Kong, 2020, 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR). Proceedings, P14242, DOI 10.1109/CVPR42600.2020.01426
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhou HS, 2020, PROC INT CONF SOFTW, P347, DOI 10.1145/3377811.3380422
   Zhou ZQ, 2019, COMMUN ACM, V62, P61, DOI 10.1145/3241979
NR 59
TC 2
Z9 2
U1 2
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2023
VL 49
IS 10
BP 4496
EP 4509
DI 10.1109/TSE.2023.3301443
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA Y1NF7
UT WOS:001102997400001
DA 2024-07-18
ER

PT J
AU Dinella, E
   Mytkowicz, T
   Svyatkovskiy, A
   Bird, C
   Naik, M
   Lahiri, S
AF Dinella, Elizabeth
   Mytkowicz, Todd
   Svyatkovskiy, Alexey
   Bird, Christian
   Naik, Mayur
   Lahiri, Shuvendu
TI DeepMerge: Learning to Merge Programs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Merge conflicts; conflict resolution; software maintenance; software
   tools
AB In collaborative software development, program merging is the mechanism to integrate changes from multiple programmers. Merge algorithms in modern version control systems report a conflict when changes interfere textually. Merge conflicts require manual intervention and frequently stall modern continuous integration pipelines. Prior work found that, although costly, a large majority of resolutions involve re-arranging text without writing any new code. Inspired by this observation we propose the first data-driven approach to resolve merge conflicts with a machine learning model. We realize our approach in a tool DeepMerge that uses a novel combination of (i) an edit-aware embedding of merge inputs and (ii) a variation of pointer networks, to construct resolutions from input segments. We also propose an algorithm to localize manual resolutions in a resolved file and employ it to curate a ground-truth dataset comprising 8,719 non-trivial resolutions in JavaScript programs. Our evaluation shows that, on a held out test set, DeepMerge can predict correct resolutions for 37% of non-trivial merges, compared to only 4% by a state-of-the-art semistructured merge technique. Furthermore, on the subset of merges with upto 3 lines (comprising 24% of the total dataset), DeepMerge can predict correct resolutions with 78% accuracy.
C1 [Dinella, Elizabeth; Naik, Mayur] Univ Penn, CIS, Philadelphia, PA USA.
   [Mytkowicz, Todd; Lahiri, Shuvendu] Res Software Engn, Microsoft Res, Redmond, WA 98052 USA.
   [Svyatkovskiy, Alexey] Microsoft Corp, DevDiv, Redmond, WA 98052 USA.
   [Bird, Christian] Microsoft Corp, Microsoft Res, Redmond, WA 98052 USA.
C3 University of Pennsylvania; Microsoft; Microsoft; Microsoft
RP Bird, C (corresponding author), Microsoft Corp, Microsoft Res, Redmond, WA 98052 USA.
EM elizabeth.a.dinella@gmail.com; toddm@microsoft.com;
   alsvyatk@microsoft.com; cbird@microsoft.com; mhnaik@cis.upenn.edu;
   shuvendu@microsoft.com
CR Alon U., 2019, PROC 7 INT C LEARN R
   [Anonymous], 2015, Advances in neural information processing systems
   Apel S., 2011, P 19 ACM SIGSOFT S 1, P190, DOI DOI 10.1145/2025113.2025141
   Apel S, 2012, IEEE INT CONF AUTOM, P120, DOI 10.1145/2351676.2351694
   Apel Sven., 2010, VAMOS, P13
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Brun Y., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), P168, DOI [10.1145/2025113.2025139, DOI 10.1145/2025113.2025139]
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P1385, DOI 10.1109/TSE.2020.3020502
   Cho K., 2014, PROCS C EMPIRICAL ME, P1724, DOI DOI 10.3115/V1/D14-1179
   Clement CB, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P9052
   Dinella E., 2020, INT C LEARN REPR ICL
   Ferreira F, 2020, Arxiv, DOI arXiv:1909.11436
   Ghiotto G, 2020, IEEE T SOFTWARE ENG, V46, P892, DOI 10.1109/TSE.2018.2871083
   Godefroid P, 2017, IEEE INT CONF AUTOM, P50, DOI 10.1109/ASE.2017.8115618
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gu JT, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1631
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Hollander M., 2014, Nonparametric Statistical Methods, Solutions Manual, Vthird
   Jensen SH, 2009, LECT NOTES COMPUT SC, V5673, P238, DOI 10.1007/978-3-642-03237-0_17
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Kashyap V, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P121, DOI 10.1145/2635868.2635904
   Khanna S, 2007, LECT NOTES COMPUT SC, V4855, P485
   Lessenich O, 2015, AUTOMAT SOFTW ENG, V22, P367, DOI 10.1007/s10515-014-0151-5
   Li XC, 2018, Arxiv, DOI arXiv:1805.04825
   Lin CY, 2003, HLT-NAACL 2003: HUMAN LANGUAGE TECHNOLOGY CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE MAIN CONFERENCE, P150
   Martinez M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P492, DOI 10.1145/2591062.2591114
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   Mitchell M., 2012, RES DESIGN EXPLAINED, V8th
   Pan R, 2021, PROC INT CONF SOFTW, P785, DOI 10.1109/ICSE43902.2021.00077
   Panthaplackel S, 2021, AAAI CONF ARTIF INTE, V35, P13622
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Shen B, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1291, DOI 10.1109/ASE51524.2021.9678937
   Smith R., 1998, GNU DIFF3 DISTRIB GN
   Sousa M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276535
   Sutskever I., 2014, ADV NEURAL INFORM PR, V4, P3104, DOI DOI 10.5555/2969033.2969173
   Svyatkovskiy A, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2727, DOI 10.1145/3292500.3330699
   Tavares AT, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1014, DOI 10.1109/ASE.2019.00098
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Westfechtel B., 1991, Proceedings of the 3rd International Workshop on Software Configuration Management, P68, DOI 10.1145/111062.111071
   Wuu Yang, 1992, ACM Transactions on Software Engineering and Methodology, V1, P310, DOI 10.1145/131736.131756
   Yin P., 2019, PROC INT C LEARN REP
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhou QY, 2018, AAAI CONF ARTIF INTE, P4987
NR 47
TC 4
Z9 4
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1599
EP 1614
DI 10.1109/TSE.2022.3183955
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ghaleb, TA
   Hassan, S
   Zou, Y
AF Ghaleb, Taher A.
   Hassan, Safwat
   Zou, Ying
TI Studying the Interplay Between the Durations and Breakages of Continuous
   Integration Builds
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Measurement; Software development management; Codes; Time
   measurement; Software engineering; Servers; Continuous integration (CI);
   build performance; build duration; build breakage; empirical software
   engineering; mining software repositories; questionnaire survey
AB The Continuous Integration (CI) practice allows developers to build software projects automatically and more frequently. However, CI builds may undergo long build durations or frequent build breakages, which we refer to as build performance. Both long durations and frequent breakages of CI builds can impede developers from engaging in other development activities. Prior research has conducted independent studies on build durations or build breakages. However, there is little attention to the possible interplay between reducing build durations and build breakages. In particular, it is unclear from prior studies (i) whether and how build performance is influenced by the context of projects; (ii) whether the actions to reduce build durations would reduce or increase build breakages; and (iii) whether fixing build breakages would lead to longer or faster builds. It is important for developers to understand the practices that make both timely and passing CI builds. In this paper, we conduct experimental and survey studies on the practices that can have dual or inverse associations with two build performance measures: build durations and build breakages. To this end, we extend an existing dataset called TravisTorrent to exclude inactive projects and collect recent builds of active projects. As a result, we study 924,616 CI builds from 588 GitHub projects that are linked with Travis CI. In addition, we survey developers who contributed to the projects in our dataset to get their feedback on our experimental observations. First, we investigate project-level metrics and find that project characteristics have a significant association with build durations and breakages. In addition, we investigate how build-level metrics are associated with both build durations and breakages and observe an evident interplay between them. In particular, we observe that actions to fix build breakages (e.g., retrying or waiting for build commands) not only increase build durations but also do not guarantee passing builds. We also find that improving the build performance of a project is dependent on the current build durations and breakages of that project. Furthermore, we analyze how build performance changes over time and observe nearly a third of projects in which one performance measure is sacrificed in favor of the other, especially when not possible to achieve both together. The majority of our experimental observations are confirmed by survey results, which provide useful insights though some survey responses disagree with some of our experimental observations. Our work (a) provides developers with development and building practices to maintain timely and passing CI builds, and (b) encourages researchers to highlight any potential dual or inverse side effects when reporting actionable findings about CI builds.
C1 [Ghaleb, Taher A.] Univ Ottawa, Sch EECS, Ottawa, ON K1N 6N5, Canada.
   [Hassan, Safwat] Univ Toronto, Fac Informat, Toronto, ON M5S 0A5, Canada.
   [Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON K7L 3N6, Canada.
C3 University of Ottawa; University of Toronto; Queens University - Canada
RP Ghaleb, TA (corresponding author), Univ Ottawa, Sch EECS, Ottawa, ON K1N 6N5, Canada.
EM tghaleb@uottawa.ca; safwat.hassan@utoronto.ca; ying.zou@queensu.ca
RI Ghaleb, Taher A/I-9457-2018; Hassan, Safwat/JWP-1498-2024; Zou,
   Ying/KLC-9380-2024
OI Ghaleb, Taher A/0000-0001-9336-7298; 
CR AGRESTI A, 1989, PSYCHOL BULL, V105, P290, DOI 10.1037/0033-2909.105.2.290
   Ammons G., 2006, P 2006 INT WORKSH DY, P81, DOI [10.1145/1138912.1138928, DOI 10.1145/1138912.1138928]
   [Anonymous], 2002, proceedings of the 6th conference on Natural language learning-Volume 20
   [Anonymous], STUDYING INTERPLAY D
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Beller M, 2017, IEEE WORK CONF MIN S, P447, DOI 10.1109/MSR.2017.24
   Brooks G, 2008, AGILE 2008, PROCEEDINGS, P294, DOI 10.1109/Agile.2008.41
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Domingos P, 2012, COMMUN ACM, V55, P78, DOI 10.1145/2347736.2347755
   Dybå T, 2012, INT SYMP EMP SOFTWAR, P19, DOI 10.1145/2372251.2372256
   Faraway JulianJ., 2016, EXTENDING LINEAR MOD, V124
   Fatima S, 2023, IEEE T SOFTWARE ENG, V49, P1912, DOI 10.1109/TSE.2022.3201209
   Felidré W, 2019, INT SYMP EMP SOFTWAR, P192, DOI 10.1109/ESEM.2019.8870152
   Fowler M., 2006, Continuous integration
   Gallaba K, 2022, IEEE T SOFTWARE ENG, V48, P2040, DOI 10.1109/TSE.2020.3048335
   Gallaba K, 2020, IEEE T SOFTWARE ENG, V46, P33, DOI 10.1109/TSE.2018.2838131
   Ghaleb TA, 2021, IEEE T SOFTWARE ENG, V47, P1998, DOI 10.1109/TSE.2019.2941880
   Ghaleb TA, 2019, EMPIR SOFTW ENG, V24, P2102, DOI 10.1007/s10664-019-09695-9
   Harrell F.E., 2001, Regression modeling strategies: with applications to linear models, logistic regression, and survival analysis
   Hilton M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P197, DOI 10.1145/3106237.3106270
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Islam MR, 2017, IEEE WORK CONF MIN S, P467, DOI 10.1109/MSR.2017.30
   Jain Romit, 2019, Progress in Advanced Computing and Intelligent Engineering. Proceedings of ICACIE 2017. Advances in Intelligent Systems and Computing (AISC 714), P17, DOI 10.1007/978-981-13-0224-4_2
   Jin XH, 2020, PROC INT CONF SOFTW, P13, DOI 10.1145/3377811.3380437
   Kamei Fernando, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P183, DOI 10.1145/3422392.3422442
   Lewis A. J., 2009, MIXED EFFECTS MODELS
   Luo Y, 2017, 2017 14TH WEB INFORMATION SYSTEMS AND APPLICATIONS CONFERENCE (WISA 2017), P139, DOI 10.1109/WISA.2017.17
   Ni AS, 2017, IEEE WORK CONF MIN S, P455, DOI 10.1109/MSR.2017.26
   Nicolai J, 2021, GITHUB WELCOMES ALL
   Pan RQ, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10066-6
   Pinheiro P., 2010, Linear and nonlinear mixed effects models. R package version 3.1-97
   Rasmusson J., 2004, PROC EXTREME PROGRAM, P557
   Rausch T, 2017, IEEE WORK CONF MIN S, P345, DOI 10.1109/MSR.2017.54
   Rogers RO, 2004, LECT NOTES COMPUT SC, V3092, P68
   Saidani I, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-021-00319-5
   Saidani I, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106392
   Sarle W, 1990, Sas/stat user's guide: The varclus procedure
   Spencer D., 2009, CARD SORTING DESIGNI
   Ståhl D, 2014, J SYST SOFTWARE, V87, P48, DOI 10.1016/j.jss.2013.08.032
   Vandekerckhove Joachim, 2015, The Oxford Handbook of Computational and Mathematical Psychology, P300, DOI DOI 10.1093/OXFORDHB/9780199957996.013.14
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Vasilescu B, 2014, PROC IEEE INT CONF S, P401, DOI 10.1109/ICSME.2014.62
   Vassallo C, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P327, DOI 10.1145/3368089.3409709
   Vassallo C, 2019, PROC INT CONF SOFTW, P105, DOI 10.1109/ICSE.2019.00028
   Xia J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P311, DOI 10.1109/QRS-C.2017.59
   Yamashita K., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P344
   Zoltagharinia M, 2017, IEEE WORK CONF MIN S, P312, DOI 10.1109/MSR.2017.7
NR 47
TC 1
Z9 1
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2476
EP 2497
DI 10.1109/TSE.2022.3222160
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600061
DA 2024-07-18
ER

PT J
AU Jesse, K
   Devanbu, PT
   Sawant, A
AF Jesse, Kevin
   Devanbu, Premkumar T.
   Sawant, Anand
TI Learning to Predict User-Defined Types
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Annotations; Codes; Vocabulary; Encoding; Task analysis; Software
   development management; Training; Multi-Task learning; representation
   learning; transfer learning; type inference
AB TypeScript is a widely adopted gradual typed language where developers can optionally type variables, functions, parameters and more. Probabilistic type inference approaches with ML (machine learning) work well especially for commonly occurring types such as boolean, number, and string. TypeScript permits a wide range of types including developer defined class names and type interfaces. These developer defined types, termed user-defined types, can be written within the realm of language naming conventions. The set of user-defined types is boundless and existing bounded type guessing approaches are an imperfect solution. Existing works either under perform in user-defined types or ignore user-defined types altogether. This work leverages a BERT-style pre-trained model, with multi-task learning objectives, to learn how to type user-defined classes and interfaces. Thus we present DiverseTyper, a solution that explores the diverse set of user-defined types by uniquely aligning classes and interfaces declarations to the places in which they are used. DiverseTyper surpasses all existing works including those that model user-defined types.
C1 [Jesse, Kevin; Devanbu, Premkumar T.; Sawant, Anand] Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
C3 University of California System; University of California Davis
RP Jesse, K (corresponding author), Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
EM krjesse@ucdavis.edu; ptdevanbu@ucdavis.edu; asawant@ucdavis.edu
OI Sawant, Anand/0000-0002-5816-8020; Jesse, Kevin/0000-0003-0484-1766
FU NSF CISE (SHF) [1414172, 2107592]
FX This work was supported by NSF CISE (SHF) under Grants 1414172 and
   2107592.
CR Ahmad Wasi Uddin., 2021, Unified pre-training for program understanding and generation
   Ahmed Toufique, 2021, arXiv
   Allamams M, 2019, PROCEEDINGS OF THE 2019 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!' 19), P143, DOI 10.1145/3359591.3359735
   Allamanis M, 2018, Arxiv, DOI arXiv:1711.00740
   Allamanis M, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P91, DOI 10.1145/3385412.3385997
   An JH, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P459, DOI 10.1145/1926385.1926437
   [Anonymous], 2008, PROC INT C MACHINE L
   [Anonymous], 2006, PROC IEEE COMPUT SOC
   Bender EM, 2021, PROCEEDINGS OF THE 2021 ACM CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, FACCT 2021, P610, DOI 10.1145/3442188.3445922
   Bender Emily M, 2020, P 58 ANN M ASS COMP, P5185
   Bierman G, 2014, LECT NOTES COMPUT SC, V8586, P257
   Bommasani R., 2021, arXiv, DOI [DOI 10.48550/ARXIV.2108.07258, 10.48550/arXiv.2108.07258]
   Bracha G., 2004, Pluggable type systems
   Caruana R, 1998, LECT NOTES COMPUT SC, V1524, P165
   Clark K, 2020, Arxiv, DOI arXiv:2003.10555
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Peters ME, 2018, Arxiv, DOI [arXiv:1802.05365, 10.48550/arXiv.1802.05365]
   Esteva A, 2017, NATURE, V542, P115, DOI 10.1038/nature21056
   Feng Z., 2020, EMNLP
   Gao Z, 2017, PROC INT CONF SOFTW, P758, DOI 10.1109/ICSE.2017.75
   github, MYP
   github, PYT
   Gong T, 2019, IEEE ACCESS, V7, P141627, DOI 10.1109/ACCESS.2019.2943604
   Guo DY, 2021, Arxiv, DOI arXiv:2009.08366
   Hanenberg S, 2014, EMPIR SOFTW ENG, V19, P1335, DOI 10.1007/s10664-013-9289-1
   Li LH, 2019, Arxiv, DOI [arXiv:1908.03557, DOI 10.48550/ARXIV.1908.03557]
   Hellendoorn VJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P152, DOI 10.1145/3236024.3236051
   Huang JT, 2013, INT CONF ACOUST SPEE, P7304, DOI 10.1109/ICASSP.2013.6639081
   Jesse K, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1483, DOI 10.1145/3468264.3473135
   Kanade A., 2020, Learning and evaluating contextual embedding of source code
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Karmakar A, 2021, Arxiv, DOI arXiv:2108.11308
   Kendall A, 2018, PROC CVPR IEEE, P7482, DOI 10.1109/CVPR.2018.00781
   Kokkinos I, 2017, PROC CVPR IEEE, P5454, DOI 10.1109/CVPR.2017.579
   Kudo T, 2018, CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018): PROCEEDINGS OF SYSTEM DEMONSTRATIONS, P66
   Liebel L, 2018, Arxiv, DOI [arXiv:1805.06334, DOI 10.48550/ARXIV.1805.06334]
   Liu F, 2020, IEEE INT CONF AUTOM, P473, DOI 10.1145/3324884.3416591
   Liu SK, 2019, PROC CVPR IEEE, P1871, DOI 10.1109/CVPR.2019.00197
   Liu YH, 2019, Arxiv, DOI arXiv:1907.11692
   Livshits B, 2015, COMMUN ACM, V58, P44, DOI 10.1145/2644805
   Mir AM, 2022, Arxiv, DOI arXiv:2101.04470
   Malik RS, 2019, PROC INT CONF SOFTW, P304, DOI 10.1109/ICSE.2019.00045
   Mnih V, 2015, NATURE, V518, P529, DOI 10.1038/nature14236
   Kipf TN, 2017, Arxiv, DOI arXiv:1609.02907
   Pradel M, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P209, DOI 10.1145/3368089.3409715
   Radford A., 2018, Improving language understanding by generative pre-training
   Raffel C, 2023, Arxiv, DOI [arXiv:1910.10683, 10.48550/arXiv.1910.10683]
   Rastogi A, 2015, ACM SIGPLAN NOTICES, V50, P167, DOI [10.1145/2775051.2676971, 10.1145/2676726.2676971]
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Raychev V, 2015, ACM SIGPLAN NOTICES, V50, P111, DOI [10.1145/2775051.2677009, 10.1145/2676726.2677009]
   Ren B.M., 2013, Proceedings of the 28th Annual ACM Symposium on Applied Computing, SAC '13, P1565, DOI DOI 10.1145/2480362.2480655
   Sawant AA, 2021, IEEE SOFTWARE, V38, P118, DOI 10.1109/MS.2021.3086338
   Schroff F, 2015, PROC CVPR IEEE, P815, DOI 10.1109/CVPR.2015.7298682
   Sennrich R, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1715
   She DD, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P737, DOI 10.1145/3368089.3409723
   Siek J, 2007, LECT NOTES COMPUT SC, V4609, P2
   Stuchlik A, 2012, ACM SIGPLAN NOTICES, V47, P97, DOI 10.1145/2168696.2047861
   Sun C, 2019, IEEE I CONF COMP VIS, P7463, DOI 10.1109/ICCV.2019.00756
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Vaswani A, 2017, ADV NEUR IN, V30
   Pandi IV, 2021, Arxiv, DOI arXiv:2004.00348
   Wei JY, 2020, Arxiv, DOI arXiv:2005.02161
   Yang Z., 2019, Advances in neural information processing systems, P5753, DOI DOI 10.5555/3454287.3454804
NR 64
TC 1
Z9 2
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1508
EP 1522
DI 10.1109/TSE.2022.3178945
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600007
DA 2024-07-18
ER

PT J
AU Ndukwe, IG
   Licorish, SA
   MacDonell, SG
AF Ndukwe, Ifeanyi G.
   Licorish, Sherlock A.
   MacDonell, Stephen G.
TI Perceptions on the Utility of Community Question and Answer Websites
   Like Stack Overflow to Software Developers
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Community question answering portals; crowdsourced knowledge; stack
   overflow
ID CODE; STACKOVERFLOW
AB Software developers make use of on crowdsourcing during development. Beyond learning from others, developers use online portals such as Stack Overflow as a vehicle for collaboration. However, little is known about developers' experiences on such platforms, particularly around problems that are encountered online. Such insights could benefit software developers in terms of recommendations for pitfalls to avoid, ways to exploit crowdsourced knowledge, and the provision of insights to improve online code sharing communities. We interviewed 50 practitioners to fill this gap, where outcomes show that software developers' use of online portals is targeted, and such portals are a lifeline to modern software development. Practitioners are facilitated with code solutions and debugging, often in a very timely fashion. While these experiences are largely positive, practitioners also encounter negative experiences online, some of which could be significantly deleterious to the community. We discuss the implications of these findings, such as creating awareness of the quality and reliability of code snippets, improving code searches, code validation and outdated code detection and attribution of code snippets.
C1 [Ndukwe, Ifeanyi G.; Licorish, Sherlock A.; MacDonell, Stephen G.] Univ Otago, Dept Informat Sci, Dunedin 9016, New Zealand.
C3 University of Otago
RP Ndukwe, IG (corresponding author), Univ Otago, Dept Informat Sci, Dunedin 9016, New Zealand.
EM glory.ndukwe@otago.ac.nz; sherlock.licorish@otago.ac.nz;
   stephen.macdonell@otago.ac.nz
OI Licorish, Sherlock/0000-0001-7318-2421
CR Abdalkareem R, 2017, INFORM SOFTWARE TECH, V88, P148, DOI 10.1016/j.infsof.2017.04.005
   Abdalkareem R, 2017, IEEE SOFTWARE, V34, P53, DOI 10.1109/MS.2017.31
   Acar Y, 2016, P IEEE S SECUR PRIV, P289, DOI 10.1109/SP.2016.25
   Agostinho S., 2005, International Journal of Qualitative Methods, V4, P13, DOI DOI 10.1177/160940690500400102
   Althoff Tim., 2014, Proceedings of the International AAAI Conference on Web and Social Media, V8, P12, DOI 10.1609/icwsm.v8i1.14547
   Anand D, 2015, ADV INTELL SYST, V340, P639, DOI 10.1007/978-81-322-2247-7_65
   [Anonymous], 2011, P 2 INT WORKSHOP WEB
   Asaduzzaman M, 2013, IEEE WORK CONF MIN S, P97, DOI 10.1109/MSR.2013.6624015
   Babbie E.R., 2020, PRACTICE SOCIAL RES
   Bai W, 2019, 2019 IEEE SECURE DEVELOPMENT (SECDEV 2019), P34, DOI 10.1109/SecDev.2019.00016
   Baltes S, 2019, EMPIR SOFTW ENG, V24, P1259, DOI 10.1007/s10664-018-9650-5
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Beyer S, 2018, INT C PROGRAM COMPRE, P211, DOI 10.1145/3196321.3196333
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Buse RPL, 2012, PROC INT CONF SOFTW, P782, DOI 10.1109/ICSE.2012.6227140
   Calefato F, 2018, INFORM SOFTWARE TECH, V94, P186, DOI 10.1016/j.infsof.2017.10.009
   Chatterjee P, 2022, 2022 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON NATURAL LANGUAGE-BASED SOFTWARE ENGINEERING (NLBSE 2022), P21, DOI 10.1145/3528588.3528656
   Chatterjee P, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110454
   Choetkiertikul M, 2015, 2015 24TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC 2015), P155, DOI 10.1109/ASWEC.2015.28
   Cohen J., 1988, STAT POWER ANAL BEHA
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Ferreira Campos Uriel, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P195, DOI 10.1109/MSR.2019.00039
   Fischer F, 2017, P IEEE S SECUR PRIV, P121, DOI 10.1109/SP.2017.31
   Hove SE, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P201
   Hsieh HF, 2005, QUAL HEALTH RES, V15, P1277, DOI 10.1177/1049732305276687
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   huggingface, INTR WORLDS LARG OP
   Jin Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P434, DOI 10.1109/MSR.2015.57
   Kalliamvakou E, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P574, DOI 10.1109/ICSE.2015.74
   Licorish S. A., 2022, P GENETIC EVOLUTIONA, P790
   Lotter A, 2018, 2018 25TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC), P141, DOI 10.1109/ASWEC.2018.00027
   Marshall MN, 1996, FAM PRACT, V13, P522, DOI 10.1093/fampra/13.6.522
   Martie L, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P774, DOI 10.1145/3106237.3106293
   Meldrum S, 2020, Arxiv, DOI arXiv:2010.12282
   Meldrum S, 2020, SCI COMPUT PROGRAM, V199, DOI 10.1016/j.scico.2020.102516
   Nadi S, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P229, DOI [10.1109/SANER48275.2020.9054828, 10.1109/saner48275.2020.9054828]
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Ndukwe IG, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111524
   Nikolaidis N, 2019, EUROMICRO CONF PROC, P87, DOI 10.1109/SEAA.2019.00022
   Palomera D, 2017, INFORM SCIENCES, V381, P20, DOI 10.1016/j.ins.2016.11.006
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Penoyer S, 2018, ISSUES INFORM SYSTEM, V19, P33
   Peterson C. S., 2021, SYM VISUAL LANGUAGES, P1
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Potter WJ, 1999, J APPL COMMUN RES, V27, P258, DOI 10.1080/00909889909365539
   Ragkhitwetsagul C, 2021, IEEE T SOFTWARE ENG, V47, P560, DOI 10.1109/TSE.2019.2900307
   Reiss SP, 2009, PROC INT CONF SOFTW, P243, DOI 10.1109/ICSE.2009.5070525
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sengupta S, 2020, P 53 HAW INT C SYST, P2898, DOI DOI 10.24251/HICSS.2020.354
   Shah C, 2014, J INF SCI, V40, P669, DOI 10.1177/0165551514534140
   Shah C, 2009, LIBR INFORM SCI RES, V31, P205, DOI 10.1016/j.lisr.2009.07.006
   Shrestha N, 2020, PROC INT CONF SOFTW, P691, DOI 10.1145/3377811.3380352
   Sim SE, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063243
   Squire M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P219, DOI 10.1109/ICSE.2015.150
   Srba I, 2016, ACM T WEB, V10, DOI 10.1145/2934687
   Terragni V., 2016, P 25 INT S SOFTWARE, P118
   Thang F. K., 2017, Learning: Research and Practice, V3, P148, DOI [https://doi.org/10.1080/23735082.2017.1335426, DOI 10.1080/23735082.2017.1335426]
   Treude C, 2017, PROC IEEE INT CONF S, P509, DOI 10.1109/ICSME.2017.24
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Wang SW, 2020, IEEE T SOFTWARE ENG, V46, P1024, DOI 10.1109/TSE.2018.2874470
   Wenger EC, 2000, HARVARD BUS REV, V78, P139
   Wu YH, 2019, EMPIR SOFTW ENG, V24, P637, DOI 10.1007/s10664-018-9634-5
   Xia Pei., 2014, Information and Media Technologies, V9, P155, DOI [10.11185/imt.9.155, DOI 10.11185/IMT.9.155]
   Xia X, 2017, EMPIR SOFTW ENG, V22, P3149, DOI 10.1007/s10664-017-9514-4
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Yang D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P391, DOI [10.1109/MSR.2016.047, 10.1145/2901739.2901767]
   Yu DH, 2019, IEEE ACCESS, V7, P35743, DOI 10.1109/ACCESS.2019.2905054
   Zhang HX, 2021, IEEE T SOFTWARE ENG, V47, P2520, DOI 10.1109/TSE.2019.2954319
   Zhou SF, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1202, DOI 10.1109/ASE.2019.00137
   Zolduoarrati E, 2022, J SYST SOFTWARE, V192, DOI 10.1016/j.jss.2022.111427
   Zolduoarrati E, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106667
NR 72
TC 1
Z9 1
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2413
EP 2425
DI 10.1109/TSE.2022.3220236
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600057
DA 2024-07-18
ER

PT J
AU Neelofar, N
   Smith-Miles, K
   Muñoz, MA
   Aleti, A
AF Neelofar, Neelofar
   Smith-Miles, Kate
   Munoz, Mario Andres
   Aleti, Aldeida
TI Instance Space Analysis of Search-Based Software Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Automated software testing; algorithm selection; instance space analysis
ID TEST DATA GENERATION; ALGORITHM PERFORMANCE; SUITE; METRICS; TESTABILITY
AB Search-based software testing (SBST) is now a mature area, with numerous techniques developed to tackle the challenging task of software testing. SBST techniques have shown promising results and have been successfully applied in the industry to automatically generate test cases for large and complex software systems. Their effectiveness, however, has been shown to be problem dependent. In this paper, we revisit the problem of objective performance evaluation of SBST techniques in light of recent methodological advances - in the form of Instance Space Analysis (ISA) - enabling the strengths and weaknesses of SBST techniques to be visualised and assessed across the broadest possible space of problem instances (software classes) from common benchmark datasets. We identify features of SBST problems that explain why a particular instance is hard for an SBST technique, reveal areas of hard and easy problems in the instance space of existing benchmark datasets, and identify the strengths and weaknesses of state-of-the-art SBST techniques. In addition, we examine the diversity and quality of common benchmark datasets used in experimental evaluations.
C1 [Neelofar, Neelofar; Aleti, Aldeida] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Smith-Miles, Kate; Munoz, Mario Andres] Univ Melbourne, Sch Math & Stat, Parkville, Vic 3010, Australia.
C3 Monash University; University of Melbourne
RP Neelofar, N (corresponding author), Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
EM Neelofar.Neelofar@monash.edu; smith-miles@unimelb.edu.au;
   munoz.m@unimelb.edu.au; Aldeida.Aleti@monash.edu
RI Muñoz, Mario Andrés/J-3176-2013; Aleti, Aldeida/AAE-8486-2019; Smith,
   Kate/IZD-4956-2023; Smith-Miles, Kate/B-7493-2008
OI Muñoz, Mario Andrés/0000-0002-7254-2808; Aleti,
   Aldeida/0000-0002-1716-690X; Smith-Miles, Kate/0000-0003-2718-7680
FU Australian Research Council [DP210100041, FL140100012]; Australian
   Research Council [FL140100012] Funding Source: Australian Research
   Council
FX This work was supported by the Australian Research Council under Grants
   DP210100041 and FL140100012.
CR Abdi H, 2010, WIRES COMPUT STAT, V2, P433, DOI 10.1002/wics.101
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Albunian N, 2020, GECCO'20: PROCEEDINGS OF THE 2020 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1204, DOI 10.1145/3377930.3390194
   Aleti A, 2017, AUTOMAT SOFTW ENG, V24, P603, DOI 10.1007/s10515-016-0197-7
   Almugrin S, 2016, J SYST SOFTWARE, V121, P298, DOI 10.1016/j.jss.2016.02.024
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   Andrews JH, 2011, IEEE T SOFTWARE ENG, V37, P80, DOI 10.1109/TSE.2010.46
   Aniche M., 2015, JAV COD METR CALC CK
   [Anonymous], 2013, P INT S SOFTWARE TES
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 2008, P INT S SOFTW TEST A
   Arcuri Andrea, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P469, DOI 10.1109/ICST.2010.16
   Arcuri A., 2009, GECCO '09: Proceedings of the 11th Annual Conf. on Genetic and evolutionary computation, P1649
   Arcuri A, 2008, INFORM SCIENCES, V178, P3075, DOI 10.1016/j.ins.2007.11.024
   Arcuri A, 2017, LECT NOTES COMPUT SC, V10452, P3, DOI 10.1007/978-3-319-66299-2_1
   Arcuri A, 2017, IEEE INT CONF SOFTW, P126, DOI 10.1109/ICST.2017.19
   Baresi Luciano, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P185, DOI 10.1109/ICST.2010.54
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   Bruce D, 2019, LECT NOTES COMPUT SC, V11664, P171, DOI 10.1007/978-3-030-27455-9_13
   Campos J, 2017, LECT NOTES COMPUT SC, V10452, P33, DOI 10.1007/978-3-319-66299-2_3
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chitirala S. C. R., 2015, THESIS U MINNESOTA M
   commons.apache, 2019, COMM COLL
   Cseppento L., 2015, P ICST, P1, DOI DOI 10.1109/ICST.2015.7102587
   Culberson JC, 1998, EVOL COMPUT, V6, P109, DOI 10.1162/evco.1998.6.2.109
   da Cruz RC, 2017, ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P341, DOI 10.5220/0006312703410350
   Daszykowski M, 2001, CHEMOMETR INTELL LAB, V56, P83, DOI 10.1016/S0169-7439(01)00111-3
   de Winter JCF, 2016, PSYCHOL METHODS, V21, P273, DOI 10.1037/met0000079
   Devroey X., 2020, P IEEEACM 42 INT C S, P545, DOI DOI 10.1145/3387940.3392265
   EDELSBRUNNER H, 1983, IEEE T INFORM THEORY, V29, P551, DOI 10.1109/TIT.1983.1056714
   Ferrer J., 2010, INT J SOFTWARE ENG I, V4, P57
   Ferrer J, 2013, INFORM SOFTWARE TECH, V55, P2125, DOI 10.1016/j.infsof.2013.07.007
   Ferrer J, 2012, SOFTWARE PRACT EXPER, V42, P1331, DOI 10.1002/spe.1135
   Fraser G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P121, DOI 10.1109/ICST.2012.92
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P783, DOI 10.1007/s10664-013-9299-z
   Fraser G, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685612
   Fraser G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P362, DOI 10.1109/ICST.2013.51
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Ghani K, 2009, IEEE C EVOL COMPUTAT, P2940, DOI 10.1109/CEC.2009.4983313
   github, 2020, JAV
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Hagberg A. A., 2008, EXPLORING NETWORK ST, P11, DOI DOI 10.1016/J.JELECTROCARD.2010.09.003
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Harman Mark., 2007, Proceedings of the 2007 International Symposium on Software Testing and Analysis. ISSTA'07, P73, DOI [DOI 10.1145/1273463.1273475, http://doi.acm.org/10.1145/1273463.1273475]
   Hinkle D.E., 2003, Applied statistics for the behavioral sciences
   Igel C., 2015, J MATH MODELLING ALG, V3, P313
   Jalote P., 2012, An integrated approach to software engineering
   Jureczko M., 2010, Model Methods Syst Dependability Oficyna Wydawnicza Politech Wroclawskiej, P69
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kang YF, 2017, INT J FORECASTING, V33, P345, DOI 10.1016/j.ijforecast.2016.09.004
   Kaur A., 2010, INT J INNOV MANAGE T, V1
   Kayarvizhy N, 2011, COMM COM INF SC, V142, P397
   Khamprapai W, 2021, MATHEMATICS-BASEL, V9, DOI 10.3390/math9151779
   Kifetew F, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST 2019), P15, DOI 10.1109/SBST.2019.00014
   KOSARAJU SR, 1974, J COMPUT SYST SCI, V9, P232, DOI 10.1016/S0022-0000(74)80043-7
   Lammermann F, 2008, APPL SOFT COMPUT, V8, P1018, DOI 10.1016/j.asoc.2006.06.010
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   McMinn P, 2009, ACM T SOFTW ENG METH, V18, DOI 10.1145/1525880.1525884
   Mu noz M. A., 2020, INSTANCE SPACE ANAL
   Muñoz MA, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCO'17 COMPANION), P1582, DOI 10.1145/3067695.3082532
   Muñoz MA, 2018, MACH LEARN, V107, P109, DOI 10.1007/s10994-017-5629-5
   Muñoz MA, 2017, EVOL COMPUT, V25, P529, DOI [10.1162/evco_a_00194, 10.1162/EVCO_a_00194]
   Muñoz MA, 2021, ACM T KNOWL DISCOV D, V15, DOI 10.1145/3436893
   Myers Glenford J, 2004, The art of software testing, V2
   Oliveira C, 2018, IEEE T RELIAB, V67, P771, DOI 10.1109/TR.2018.2832072
   Panichella A, 2017, LECT NOTES COMPUT SC, V10452, P83, DOI 10.1007/978-3-319-66299-2_6
   Panichella A, 2018, INFORM SOFTWARE TECH, V104, P236, DOI 10.1016/j.infsof.2018.08.009
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Panichella A, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P32, DOI 10.1109/SBST.2017.7
   Panichella A, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P15, DOI 10.1109/SST.2015.10
   Panichella S, 2021, 2021 IEEE/ACM 14TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST 2021), P20, DOI 10.1109/SBST52555.2021.00011
   Prause CR, 2017, LECT NOTES COMPUT SC, V10611, P351, DOI 10.1007/978-3-319-69926-4_25
   Ramler R, 2013, P INT COMP SOFTW APP, P484, DOI 10.1109/COMPSAC.2013.82
   Raulamo-Jurvanen P., 2017, P 21 INT C EV ASS SO, P21, DOI DOI 10.1145/3084226.3084252
   Rice J. R., 1976, Advances in computers, vol.15, P65, DOI 10.1016/S0065-2458(08)60520-3
   Rojas JM, 2017, EMPIR SOFTW ENG, V22, P852, DOI 10.1007/s10664-015-9424-2
   Molina UR, 2018, PROCEEDINGS 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P22, DOI 10.1145/3194718.3194728
   Rueda U, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P19, DOI [10.1145/2897010.2897018, 10.1109/SBST.2016.012]
   Rueda U, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P19, DOI 10.1109/SBST.2015.12
   Scalabrino S, 2016, LECT NOTES COMPUT SC, V9962, P64, DOI 10.1007/978-3-319-47106-8_5
   Schubert E, 2017, ACM T DATABASE SYST, V42, DOI 10.1145/3068335
   Shamshiri S, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1367, DOI 10.1145/2739480.2754696
   Sharma R, 2011, LECT NOTES COMPUT SC, V6603, P262, DOI 10.1007/978-3-642-19811-3_19
   Smith-Miles K., 2019, Matilda: melbourne algorithm test instance library with data analytics
   Smith-Miles K, 2014, COMPUT OPER RES, V45, P12, DOI 10.1016/j.cor.2013.11.015
   Smith-Miles KA, 2008, ACM COMPUT SURV, V41, DOI 10.1145/1456650.1456656
   Suresh Y, 2012, PROC TECH, V1, P420, DOI 10.1016/j.protcy.2012.10.050
   Suri P.R, 2015, International Journal of Computer Applications Technology and Research, V5, P359, DOI 10.7753/IJCATR0405.1006
   Tengeri D, 2016, IEEE ICST WORKSHOP, P174, DOI 10.1109/ICSTW.2016.25
   Teugels JL, 2004, J APPL PROBAB, V41A, P213, DOI 10.1239/jap/1082552200
   Tonella P., 2004, Software Engineering Notes, V29, P119, DOI 10.1145/1013886.1007528
   Varshney Sapna, 2013, Software Engineering Notes, V38, P146, DOI 10.1145/2492248.2492277
   Wang S, 2009, IEEE ICST WORKSHOP, P210, DOI 10.1109/ICSTW.2009.36
   WRIGHT SEWALL, 1932, PROC SIXTH INTERNAT CONGR GENETICS ITHACA NEW YORK, V1, P356
   Wu HY, 2020, IEEE T SOFTWARE ENG, V46, P302, DOI 10.1109/TSE.2018.2852744
   Yang Q, 2009, COMPUT J, V52, P589, DOI 10.1093/comjnl/bxm021
NR 97
TC 3
Z9 3
U1 2
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2642
EP 2660
DI 10.1109/TSE.2022.3228334
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600070
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yandrapally, RK
   Mesbah, A
AF Yandrapally, Rahul Krishna
   Mesbah, Ali
TI Fragment-Based Test Generation for Web Apps
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Test pattern generators; Web pages; Uniform resource locators;
   Load modeling; Analytical models; Visualization; Automatic web app
   exploration; software testing; state abstraction; test generation; web
   application model inference; web application crawling; web page; state
   abstraction and equivalence; web testing
AB Automated model-based test generation presents a viable alternative to the costly manual test creation currently employed for regression testing of web apps. However, existing model inference techniques rely on threshold-based whole-page comparison to establish state equivalence, which cannot reliably identify near-duplicate web pages in modern web apps. Consequently, existing techniques produce inadequate models for dynamic web apps, and fragile test oracles, rendering the generated regression test suites ineffective. We propose a model-based test generation technique, FragGen, that eliminates the need for thresholds, by employing a novel state abstraction based on page fragmentation to establish state equivalence. FragGen also uses fine-grained page fragment analysis to diversify state exploration and generate reliable test oracles. Our evaluation shows that FragGen outperforms existing whole-page techniques by detecting more near-duplicates, inferring better web app models and generating test suites that are better suited for regression testing. On a dataset of 86,165 state-pairs, FragGen detected 123% more near-duplicates on average compared to whole-page techniques. The crawl models inferred by FragGen have 62% more precision and 70% more recall on average. FragGen also generates reliable regression test suites with test actions that have nearly 100% success rate on the same version of the web app even if the execution environment is varied. The test oracles generated by FragGen can detect 98.7% of the visible changes in web pages while being highly robust, making them suitable for regression testing.
C1 [Yandrapally, Rahul Krishna; Mesbah, Ali] Univ British Columbia, Fac Appl Sci, Dept Elect & Comp Engn, Vancouver, BC V6T 1Z4, Canada.
C3 University of British Columbia
RP Yandrapally, RK (corresponding author), Univ British Columbia, Fac Appl Sci, Dept Elect & Comp Engn, Vancouver, BC V6T 1Z4, Canada.
EM rahulyk@ece.ubc.ca; amesbah@ece.ubc.ca
RI Mesbah, Ali/C-3675-2013
OI Mesbah, Ali/0000-0002-8783-7967
FU National Science and Engineering Research Council of Canada (NSERC)
FX This work was supported by the National Science and Engineering Research
   Council of Canada (NSERC) through its Discovery programme.
CR Alegroth E., 2015, 2015 IEEE 8 INT C SO, P1
   Anonymous, 2022, Zenodo
   [Anonymous], XPATH XML PATH LANGU
   [Anonymous], 2018, ANGULAR VERSION SPRI
   [Anonymous], 2017, PHOENIX TRELLO TRIBU
   [Anonymous], DOCUMENT OBJECT MODE
   [Anonymous], 1992, Active perception and robot vision, DOI [10.1007/978-3-642-77225-2_13, DOI 10.1007/978-3-642-77225-2_13]
   [Anonymous], 2018, MANTIS BUG TRACKER
   [Anonymous], 2018, PHP PASSWORD MANAGER
   [Anonymous], 2018, PAGEKIT MODULAR LIGH
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Biagiola M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P142, DOI 10.1145/3338906.3338970
   Biagiola M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P154, DOI 10.1145/3338906.3338948
   Biagiola M, 2017, LECT NOTES COMPUT SC, V10452, P18, DOI 10.1007/978-3-319-66299-2_2
   Cai Deng, 2003, Vips: a vision-based page segmentation algorithm
   Charikar M. S., 2002, P 34 ANN ACM S THEOR, P380
   Choudhary S. R., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P171, DOI 10.1109/ICST.2012.97
   Choudhary SR, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P702, DOI 10.1109/ICSE.2013.6606616
   Christophe L, 2014, PROC IEEE INT CONF S, P141, DOI 10.1109/ICSME.2014.36
   Claroline, 2015, OPEN SOURCE LEARNING
   Dallmeier Valentin, 2012, P WORKSH JAVASCRIPT, P11, DOI [10.1145/2307720.2307722, DOI 10.1145/2307720.2307722]
   Degott C, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P296, DOI 10.1145/3293882.3330569
   Di Lucca G. A, 2001, P 7 IEEE WORKSH EMP, P107
   DimeShift, 2018, EASIEST WAY TRACK YO
   Fard A. M., 2013, PROC IEEE 24 INT S S, P278
   Grechanik M, 2009, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2009.5070540
   Henzinger M., 2006, Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P284, DOI 10.1145/1148170.1148222
   Kiesel J., 2021, P EUR C INF RETR, P62
   Leotta M, 2015, IEEE ICST WORKSHOP
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Linares-Vásquez M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P233, DOI 10.1145/3106237.3106275
   Lowe, 1999, P INT C COMP VIS, P1150, DOI DOI 10.1109/ICCV.1999.790410
   MacOS Mojave, 2020, US
   Mahajan S., 2014, P 29 IEEEACM INT C A
   Mahajan SG, 2015, 2015 2ND INTERNATIONAL CONFERENCE ON EMERGING INFORMATION TECHNOLOGY AND ENGINEERING SOLUTIONS (EITES 2015), P1, DOI 10.1109/EITES.2015.11
   Marchetto Alessandro, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P121, DOI 10.1109/ICST.2008.22
   Memon A. M., 2003, Software Engineering Notes, V28, P118, DOI 10.1145/949952.940088
   Mesbah A, 2012, ACM T WEB, V6, DOI 10.1145/2109205.2109208
   Mesbah A, 2012, IEEE T SOFTWARE ENG, V38, P35, DOI 10.1109/TSE.2011.28
   Mesbah A, 2009, PROC INT CONF SOFTW, P210, DOI 10.1109/ICSE.2009.5070522
   Mirshokraie Shabnam, 2012, Web Engineering. Proceedings 12th International Conference, ICWE 2012, P238, DOI 10.1007/978-3-642-31753-8_18
   Mirshokraie S, 2015, IEEE T SOFTWARE ENG, V41, P429, DOI 10.1109/TSE.2014.2371458
   N. D. Study, 2019, NEAR DUPLICATE STUDY, DOI DOI 10.5281/ZENODO.3385377
   Nishiura K., 2013, PROC INT C SOFTW ENG, P159
   Oliveira RAP, 2015, IEEE ICST WORKSHOP
   Oliver J, 2014, 2013 FOURTH CYBERCRIME AND TRUSTWORTHY COMPUTING WORKSHOP (CTC 2013), P7, DOI 10.1109/CTC.2013.9
   Pawlik M, 2016, INFORM SYST, V56, P157, DOI 10.1016/j.is.2015.08.004
   Pawlik M, 2015, ACM T DATABASE SYST, V40, DOI 10.1145/2699485
   PHP AddressBook, SIMPLE WEB BASED ADD
   Popela T., 2012, THESIS BRNO U TECHNO
   Praphamontripong Upsorn, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P132, DOI 10.1109/ICSTW.2010.38
   Praphamontripong U, 2016, IEEE ICST WORKSHOP, P102, DOI 10.1109/ICSTW.2016.17
   RedHat Linux, 2018, US
   Roest Danny, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P127, DOI 10.1109/ICST.2010.59
   Snoek J., 2012, 26 ANN C NEUR INF PR, P2951
   Stocco A, 2017, SOFTWARE QUAL J, V25, P1007, DOI 10.1007/s11219-016-9331-9
   Stocco A, 2016, LECT NOTES COMPUT SC, V9671, P132, DOI 10.1007/978-3-319-38791-8_8
   Thummalapenta S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P162, DOI 10.1109/ICSE.2013.6606562
   Torsel A-M, 2011, Proceedings of the 2011 IEEE 35th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW 2011). Volume II: Workshops, P137, DOI 10.1109/COMPSACW.2011.32
   Wang Z, 2004, IEEE T IMAGE PROCESS, V13, P600, DOI 10.1109/TIP.2003.819861
   Yandrapally R, 2020, PROC INT CONF SOFTW, P186, DOI 10.1145/3377811.3380416
   Yang B, 2006, IIH-MSP: 2006 INTERNATIONAL CONFERENCE ON INTELLIGENT INFORMATION HIDING AND MULTIMEDIA SIGNAL PROCESSING, PROCEEDINGS, P167
   Yee H, 2001, ACM T GRAPHIC, V20, P39, DOI 10.1145/383745.383748
   Yixue Sun, 2008, 2008 Second International Conference on Future Generation Communication and Networking Symposia (FGCNS), P50, DOI 10.1109/FGCNS.2008.73
   Zauner C., 2010, IMPLEMENTATION BENCH
   Zheng Y, 2021, PROC INT CONF SOFTW, P423, DOI 10.1109/ICSE43902.2021.00048
NR 66
TC 2
Z9 2
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2023
VL 49
IS 3
BP 1086
EP 1101
DI 10.1109/TSE.2022.3171295
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA A1QF2
UT WOS:000952938700008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fu, M
   Tantithamthavorn, C
AF Fu, Michael
   Tantithamthavorn, Chakkrit
TI GPT2SP: A Transformer-Based Agile Story Point Estimation Approach
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Estimation; Transformers; Computer architecture; Planning; Task
   analysis; Training; Artificial intelligence; Agile story point
   estimation; AI for SE; explainable AI
AB Story point estimation is a task to estimate the overall effort required to fully implement a product backlog item. Various estimation approaches (e.g., Planning Poker, Analogy, and expert judgment) are widely-used, yet they are still inaccurate and may be subjective, leading to ineffective sprint planning. Recent work proposed Deep-SE, a deep learning-based Agile story point estimation approach, yet it is still inaccurate, not transferable to other projects, and not interpretable. In this paper, we propose GPT2SP, a Transformer-based Agile Story Point Estimation approach. Our GPT2SP employs a GPT-2 pre-trained language model with a GPT-2 Transformer-based architecture, allowing our GPT2SP models to better capture the relationship among words while considering the context surrounding a given word and its position in the sequence and be transferable to other projects, while being interpretable. Through an extensive evaluation on 23,313 issues that span across 16 open-source software projects with 10 existing baseline approaches for within- and cross-project scenarios, our results show that our GPT2SP approach achieves a median MAE of 1.16, which is (1) 34%-57% more accurate than existing baseline approaches for within-project estimations; (2) 39%-49% more accurate than existing baseline approaches for cross-project estimations. The ablation study also shows that the GPT-2 architecture used in our approach substantially improves Deep-SE by 6%-47%, highlighting the significant advancement of the AI for Agile story point estimation. Finally, we develop a proof-of-concept tool to help practitioners better understand the most important words that contributed to the story point estimation of the given issue with the best supporting examples from past estimates. Our survey study with 16 Agile practitioners shows that the story point estimation task is perceived as an extremely challenging task. In addition, our AI-based story point estimation with explanations is perceived as more useful and trustworthy than without explanations, highlighting the practical need of our Explainable AI-based story point estimation approach.
C1 [Fu, Michael; Tantithamthavorn, Chakkrit] Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
C3 Monash University
RP Tantithamthavorn, C (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
EM yeh.fu@monash.edu; chakkrit@monash.edu
RI Fu, Michael/JPL-0262-2023
OI Fu, Michael/0000-0001-7211-3491; Tantithamthavorn,
   Chakkrit/0000-0002-5516-9984
FU Australian Research Council's Discovery Early Career Researcher Award
   (DECRA) [DE200100941]; Faculty of Information Technology Postgraduate
   Research Scholarship from Monash University (Clayton)
FX This work of Chakkrit Tantithamthavorn was supported in part by
   Australian Research Council's Discovery Early Career Researcher Award
   (DECRA) under Grant DE200100941. The work of Michael Fu was supported in
   part by the Faculty of Information Technology Postgraduate Research
   Scholarship from Monash University (Clayton).
CR AAMODT A, 1994, AI COMMUN, V7, P39
   Abrahamsson P, 2017, Arxiv, DOI arXiv:1709.08439
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2020, STORY POINTS ESTIMAT
   Bergstra J., 2013, ICML, pI
   Bommasani R., 2021, arXiv, DOI [DOI 10.48550/ARXIV.2108.07258, 10.48550/arXiv.2108.07258]
   Choetkiertikul M, 2019, IEEE T SOFTWARE ENG, V45, P637, DOI 10.1109/TSE.2018.2792473
   Commeyne C., 2016, Software Measurements News, V21, P25
   Ding YRB, 2020, IEEE INT CONF AUTOM, P275, DOI 10.1145/3324884.3416587
   Dragicevic S, 2017, J SYST SOFTWARE, V127, P109, DOI 10.1016/j.jss.2017.01.027
   Gage P., 1994, C Users Journal, V12, P23
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Hearty P, 2009, IEEE T SOFTWARE ENG, V35, P124, DOI 10.1109/TSE.2008.76
   Dam HK, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P53, DOI 10.1145/3183399.3183424
   Hong Y., 2022, PROC IEEE INT C SOFT
   Jiang N, 2021, PROC INT CONF SOFTW, P1161, DOI 10.1109/ICSE43902.2021.00107
   Jiarpakdee J, 2022, IEEE T SOFTWARE ENG, V48, P166, DOI 10.1109/TSE.2020.2982385
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Keung JW, 2008, IEEE T SOFTWARE ENG, V34, P471, DOI 10.1109/TSE.2008.34
   Khanan C, 2020, IEEE INT CONF AUTOM, P1336, DOI 10.1145/3324884.3415295
   Kingma D. P., 2014, arXiv
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Kocaguneli E, 2015, EMPIR SOFTW ENG, V20, P813, DOI 10.1007/s10664-014-9300-5
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Li YF, 2009, J SYST SOFTWARE, V82, P241, DOI 10.1016/j.jss.2008.06.001
   Loshchilov I, 2019, Arxiv, DOI arXiv:1711.05101
   Marapelli B., 2020, PROC 5 INT C INNOV T, P1
   Mastropaolo A, 2021, PROC INT CONF SOFTW, P336, DOI 10.1109/ICSE43902.2021.00041
   Panda A, 2015, PROCEDIA COMPUT SCI, V57, P772, DOI 10.1016/j.procs.2015.07.474
   Paszke A, 2019, ADV NEUR IN, V32
   Peng KW, 2021, IEEE T SOFTWARE ENG, V48, P2510, DOI 10.1109/TSE.2021.3062968
   Petric Jean., 2016, Proceedings of the 20th International Conference on Evaluation and Assessment in Software Engineering, page, P13
   Pornprasit C, 2023, IEEE T SOFTWARE ENG, V49, P84, DOI 10.1109/TSE.2022.3144348
   Pornprasit C, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P407, DOI 10.1109/ASE51524.2021.9678763
   Pornprasit C, 2021, IEEE WORK CONF MIN S, P369, DOI 10.1109/MSR52588.2021.00049
   Porru S., 2016, PROC 12 INT C PREDIC, P1
   Praynlin E., 2013, International Journal of Information Technology and Computer Science, V5, P101, DOI 10.5815/ijitcs.2013.09.11
   Radford A., 2019, LANGUAGE MODELS ARE
   Radford Alec, 2018, IMPROVING LANGUAGE U, DOI DOI 10.18653/V1/N18-1202
   Rajapaksha D, 2022, IEEE T SOFTWARE ENG, V48, P2814, DOI 10.1109/TSE.2021.3070559
   Ramos Juan., 2003, USING TF IDF DETERMI, V242, P29
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Sennrich R, 2016, Arxiv, DOI arXiv:1508.07909
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Sundararajan M, 2017, PR MACH LEARN RES, V70
   Tantithamthavorn C, 2020, Arxiv, DOI arXiv:2012.01614
   Tantithamthavorn C, 2021, IEEE SOFTWARE, V38, P115, DOI 10.1109/MS.2021.3072088
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Usman M., 2014, PROMISE '14: Proceedings of the 10th International Conference on Predictive Models in Software Engineering, page, P82
   Usman M., 2015, 15th North American Mine Ventilation Symposium, P1
   Vaswani A, 2017, ADV NEUR IN, V30
   Wattanakriengkrai S, 2022, IEEE T SOFTWARE ENG, V48, P1480, DOI 10.1109/TSE.2020.3023177
   Wolf T, 2020, Arxiv, DOI arXiv:1910.03771
NR 56
TC 10
Z9 10
U1 2
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 611
EP 625
DI 10.1109/TSE.2022.3158252
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900008
DA 2024-07-18
ER

PT J
AU Ferreira, JM
   Rodríguez, FD
   Santos, A
   Dieste, O
   Acuña, ST
   Juristo, N
AF Ferreira, Juan M.
   Rodriguez, Francy D.
   Santos, Adrian
   Dieste, Oscar
   Acuna, Silvia T.
   Juristo, Natalia
TI Impact of Usability Mechanisms: A Family of Experiments on Efficiency,
   Effectiveness and User Satisfaction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Usability mechanism; efficiency; effectiveness; satisfaction;
   experimental software engineering; family of experiments
ID WEB
AB Context: The usability software quality characteristic aims to improve system user performance. In a previous study, we found evidence of the impact of a set of usability features from the viewpoint of users in terms of efficiency, effectiveness and satisfaction. However, the impact level appears to depend on the usability feature and suggest priorities with respect to their implementation depending on how they promote user performance. Objectives: We use a family of three experiments to increase the precision and generalization of the results in the baseline experiment and provide findings regarding the impact on user performance of the Abort Operation, Progress Feedback and Preferences usability mechanisms. Method: We conduct two replications of the baseline experiment in academic settings. We analyse the data of 366 experimental subjects and apply aggregation (meta-analysis) procedures. Results: We find that the Abort Operation and Preferences usability mechanisms appear to improve system usability a great deal with respect to efficiency, effectiveness and user satisfaction. Conclusions: We find that the family of experiments further corroborates the results of the baseline experiment. Most of the results are statistically significant, and, because of the large number of experimental subjects, the evidence that we gathered in the replications is sufficient to outweigh other experiments.
C1 [Ferreira, Juan M.] Univ Nacl Asuncion, Fac Politecn, San Lorenzo 2111, Paraguay.
   [Rodriguez, Francy D.] Univ Catolica Avila, Avila 05002, Spain.
   [Santos, Adrian] Univ Oulu, M3S M Grp, ITEE, Oulu 90014, Finland.
   [Dieste, Oscar] Univ Politecn Madrid, Boadilla Del Monte 28660, Spain.
   [Acuna, Silvia T.] Univ Autonoma Madrid, Madrid 28049, Spain.
   [Juristo, Natalia] Univ Politecn Madrid, Escuela Tecn Super Ingn Informat, Boadilla Del Monte 28660, Spain.
C3 Universidad Nacional de Asuncion; University of Oulu; Universidad
   Politecnica de Madrid; Autonomous University of Madrid; Universidad
   Politecnica de Madrid
RP Ferreira, JM (corresponding author), Univ Nacl Asuncion, Fac Politecn, San Lorenzo 2111, Paraguay.
EM jferreira@pol.una.py; fdiomar.rodriguez@ucavila.es;
   adrian.santos.parrilla@oulu.fi; odieste@fi.upm.es; silvia.acunna@uam.es;
   natalia@fi.upm.es
RI Dieste, Oscar/K-6193-2014; Acuna, Silvia/A-7395-2008; Rodriguez, Francy
   D./K-6497-2014
OI Dieste, Oscar/0000-0002-3060-7853; Acuna, Silvia/0000-0003-2135-6113;
   Rodriguez, Francy D./0000-0002-3354-4819
FU FEDER/Spanish Ministry of Science and Innovation-Research State Agency
   (MASSIVE) [RTI2018-095255-B-I00, PGC2018-097265-B-I00]; Ramp;D programme
   of Madrid FORTE [P2018/TCS-4314]
FX This work was funded in part by the FEDER/Spanish Ministry of Science
   and Innovation-Research State Agency (MASSIVE) under Grants
   RTI2018-095255-B-I00 and PGC2018-097265-B-I00, and in part by the R &
   amp;D programme of Madrid FORTE, under Grant P2018/TCS-4314.
CR Anchundia CE, 2020, IEEE ACCESS, V8, P8992, DOI 10.1109/ACCESS.2020.2964587
   [Anonymous], 2016, QUICKSTORE EXPT APPL
   [Anonymous], 2011, ISO/IEC 25010
   [Anonymous], 2004, 91264 ISOIEC
   [Anonymous], 2010, P 1 INT WORKSH REPL
   [Anonymous], 2002, Meta-Analysis of Controlled Clinical Trials
   Baecker R. M, 2000, READINGS HUMAN COMPU
   Ben Ammar L, 2016, SOFTWARE QUAL J, V24, P301, DOI 10.1007/s11219-014-9266-y
   Borenstein M., 2009, INTRO METAANALYSIS
   Capilla R, 2020, SOFTWARE PRACT EXPER, V50, P2145, DOI 10.1002/spe.2883
   Torrente MCS, 2013, J SYST SOFTWARE, V86, P649, DOI 10.1016/j.jss.2012.10.049
   Charness G, 2012, J ECON BEHAV ORGAN, V81, P1, DOI 10.1016/j.jebo.2011.08.009
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Condori-Fernández N, 2013, SCI COMPUT PROGRAM, V78, P2245, DOI 10.1016/j.scico.2012.07.017
   Debray TPA, 2015, RES SYNTH METHODS, V6, P293, DOI 10.1002/jrsm.1160
   Fang X, 2007, DECIS SUPPORT SYST, V43, P476, DOI 10.1016/j.dss.2006.11.004
   Fernandez A, 2013, J SYST SOFTWARE, V86, P161, DOI 10.1016/j.jss.2012.07.043
   Fernandez A, 2011, INFORM SOFTWARE TECH, V53, P789, DOI 10.1016/j.infsof.2011.02.007
   Ferré X, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.903160
   Ferreira J. M., 2017, PROC 12 IBEROAMERICA
   Ferreira JM, 2020, INFORM SOFTWARE TECH, V117, DOI 10.1016/j.infsof.2019.106195
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   Gupta D, 2020, COMPUTING, V102, P1503, DOI 10.1007/s00607-020-00809-6
   Gupta D, 2019, INT ARAB J INF TECHN, V16, P357
   Gupta D, 2017, J COMPUT SCI-NETH, V23, P195, DOI 10.1016/j.jocs.2017.06.005
   Hintze JL, 1998, AM STAT, V52, P181, DOI 10.2307/2685478
   Hix D., 1993, Developing User Interfaces: Ensuring Usability through Product Process
   Hornbæk K, 2006, INT J HUM-COMPUT ST, V64, P79, DOI 10.1016/j.ijhcs.2005.06.002
   Panach JI, 2021, IEEE T SOFTWARE ENG, V47, P130, DOI 10.1109/TSE.2018.2884706
   Panach JI, 2011, LECT NOTES COMPUT SC, V6949, P640, DOI 10.1007/978-3-642-23768-3_102
   International Organization For Standardization, 1998, ISO 9241-11
   Ivory M.Y., 2001, EMPIRICAL FDN AUTOMA
   Jacoby W, 2021, STAT GRAPHICS VISUAL, DOI [10.4135/9781412985970, DOI 10.4135/9781412985970]
   Johnson J, 2012, J USABILITY STUD, V7, P88
   Juristo N, 2007, IEEE T SOFTWARE ENG, V33, P744, DOI 10.1109/TSE.2007.70741
   Juristo N, 2007, J SYST SOFTWARE, V80, P1506, DOI 10.1016/j.jss.2007.01.006
   Kang M, 2008, J ATHL TRAINING, V43, P215, DOI 10.4085/1062-6050-43.2.215
   Karani A., 2021, Management and Labour Studies, V46, P119, DOI DOI 10.1177/0258042X21989924
   Kitchenham B, 2020, EMPIR SOFTW ENG, V25, P353, DOI 10.1007/s10664-019-09747-0
   Komiyama Toshihiro, 2020, Human-Computer Interaction. Design and User Experience. Thematic Area, HCI 2020 Held as Part of the 22nd International Conference, HCII 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12181), P450, DOI 10.1007/978-3-030-49059-1_33
   Larsen HH, 2020, CHIIR'20: PROCEEDINGS OF THE 2020 CONFERENCE ON HUMAN INFORMATION INTERACTION AND RETRIEVAL, P63, DOI 10.1145/3343413.3377962
   Lumley T, 2002, ANNU REV PUBL HEALTH, V23, P151, DOI 10.1146/annurev.publhealth.23.100901.140546
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Martins AI, 2020, UNIVERSAL ACCESS INF, V19, P515, DOI 10.1007/s10209-019-00659-w
   Moreno AM, 2013, COMPUTER, V46, P100, DOI 10.1109/MC.2013.133
   Moumane K, 2016, SPRINGERPLUS, V5, DOI 10.1186/s40064-016-2171-z
   Neto FGD, 2019, J SYST SOFTWARE, V156, P246, DOI 10.1016/j.jss.2019.07.002
   Piccioni Marco, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P5, DOI 10.1109/ESEM.2013.14
   Pinheiro J.C., 2000, J. Am. Stat. Assoc., V96, P1135, DOI [DOI 10.1198/JASA.2001.S411, 10.1198/jasa.2001.s411]
   Punchoojit L, 2017, ADV HUM-COMPUT INTER, V2017, DOI 10.1155/2017/6787504
   Ricca F, 2018, EMPIR SOFTW ENG, V23, P1743, DOI 10.1007/s10664-017-9563-8
   Rodríguez FD, 2015, INT J SOFTW ENG KNOW, V25, P727, DOI 10.1142/S0218194015500084
   Rodríguez FD, 2015, J SYST SOFTWARE, V105, P107, DOI 10.1016/j.jss.2015.04.023
   Rueda S, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106361
   Sagar K, 2021, CONCURR COMP-PRACT E, V33, DOI 10.1002/cpe.5091
   Santos A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09895-8
   Santos A, 2021, IEEE T SOFTWARE ENG, V47, P1742, DOI 10.1109/TSE.2019.2935720
   Santos A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09907-7
   Santos A, 2020, SOFTWARE QUAL J, V28, P371, DOI 10.1007/s11219-020-09512-3
   Santos A, 2020, IEEE T SOFTWARE ENG, V46, P566, DOI 10.1109/TSE.2018.2864633
   Sauro J., 2005, P C HUMAN FACTORS CO, P401, DOI [10.1145/1054972.1055028, DOI 10.1145/1054972.1055028]
   Seffah A, 2004, COMMUN ACM, V47, P71, DOI 10.1145/1035134.1035136
   Seffah A, 2006, SOFTWARE QUAL J, V14, P159, DOI 10.1007/s11219-006-7600-8
   Shneiderman B., 2010, DESIGNING USER INTER
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Solari M, 2018, INFORM SOFTWARE TECH, V97, P64, DOI 10.1016/j.infsof.2017.12.016
   Taguchi G., 1987, Orthogonal arrays and linear graphs
   Tidwell J., 2010, Designing interfaces: Patterns for effective interaction design
   Tiwari S, 2017, INFORM SOFTWARE TECH, V91, P22, DOI 10.1016/j.infsof.2017.06.003
   Torchiano Marco, 2016, Zenodo
   Vickers Andrew J, 2005, BMC Med Res Methodol, V5, P35, DOI 10.1186/1471-2288-5-35
   Weber S, 2017, 2017 IEEE CYBERSECURITY DEVELOPMENT (SECDEV), P50, DOI 10.1109/SecDev.2017.21
   Welie M., 2000, 2000 PATT LANG PROGR, P13
   West B.T., 2014, Linear mixed models a practical guide using statistical software, DOI 10.1201/b17198
NR 74
TC 1
Z9 1
U1 4
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 251
EP 267
DI 10.1109/TSE.2022.3149586
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA L1HD8
UT WOS:001020827200013
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Tamburri, DA
   Kazman, R
   Fahimi, H
AF Tamburri, Damian A. A.
   Kazman, Rick
   Fahimi, Hamed
TI On the Relationship Between Organizational Structure Patterns and
   Architecture in Agile Teams
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Organizational aspects; Computer architecture; Software architecture;
   Software; Social networking (online); Organizations; Periodic
   structures; Software organisational structures; human aspects in
   software engineering; social software engineering; empirical software
   engineering; industrial mixed-methods research
ID KNOWLEDGE MANAGEMENT; SOFTWARE; DISTANCE; COORDINATION; AWARENESS
AB Forming members of an organisation into coherent groups or teams is an important issue in any large-scale software engineering endeavour, especially so in agile software development where teams rely heavily on self-organisation and organisational flexibility. But is there a recurrent organisational structure pattern in agile software engineering teams? and if so what does that pattern imply, in terms of software architecture quality? We address these questions using mixed-methods research in industry featuring interviews, surveys, and Delphi studies of real agile teams. In our study of 30 agile software teams we found that, out of seven organisational structure patterns that recur across our dataset, a single organisational pattern occurs over 37% of the time. This pattern: (a) reflects young communities (1-12 months old); (b) disappears in established ones (13+ months); and (c) reflects the highest number of architecture smells reported. Finally, we observe a negative correlation between a proposed organisational measure and architecture smells. On the one hand, these insights may serve to aid architects in designing not only their architectures but also their communities to best support their co-evolution. On the other hand, we observe that organisational structures in software engineering influence much more than simply software architectures, and we expect our results to lay the foundations of more structured and rigorous approaches to organisational structure studies and use in software engineering research and practice.
C1 [Tamburri, Damian A. A.] Eindhoven Univ Technol, Jheronimus Acad Data Sci, NL-5612 Eindhoven, Netherlands.
   [Kazman, Rick] Hawaii Univ, SEI CMU, Honolulu, HI 96822 USA.
   [Fahimi, Hamed] CGI Corp, NL-3068 Rotterdam, Netherlands.
C3 Eindhoven University of Technology
RP Tamburri, DA (corresponding author), Eindhoven Univ Technol, Jheronimus Acad Data Sci, NL-5612 Eindhoven, Netherlands.
EM dtamburri@acm.org; kazman@hawaii.edu; hamed.fahimi@cgi.nl
RI Tamburri, Damian Andrew/AAJ-2507-2021
OI Tamburri, Damian Andrew/0000-0003-1230-8961; Kazman,
   Rick/0000-0003-0392-2783
FU European Commission [825480H2020]; U.S. National Science Foundation
   [CCF-1817267]
FX This work was supported in part by European Commission under Grants
   825480H2020 and SODALITE and in part by U.S. National Science Foundation
   underGrant CCF-1817267.
CR Abbas N., 2009, THESIS U SOUTHAMPTON
   Andrews S., 2020, INT J COMPUT SCI SEC, V14, P82
   Andriessen JHE, 2005, COMMUNITIES AND TECHNOLOGIES 2005, P191
   [Anonymous], 2003, FIRSTMONDAY
   Antia M, 2007, J MULTINATL FINANC M, V17, P365, DOI 10.1016/j.mulfin.2006.10.002
   Aranda J., 2008, PROC 1 WORKSHOP SOCI, P1
   Baham C., 2016, PROC AMERICAS C INF
   Bass Len, 2012, SEI S SOFTW
   Bertran IM, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1090, DOI 10.1145/1985793.1986003
   Betz S, 2012, INT SYMP EMP SOFTWAR, P239, DOI 10.1145/2372251.2372295
   Bird Christian, 2006, P MSR, P137, DOI DOI 10.1145/1137983.1138016
   Bjarnason E, 2016, INFORM SOFTWARE TECH, V70, P204, DOI 10.1016/j.infsof.2015.05.004
   Bowman I. T., 1998, PROC CTR ADV STUD C, P123
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Chatha K. A., 2003, THESIS LOUGHBOROUGH
   Chung J., 2015, P 28 INT C NEURAL IN, P2980
   Colfer L., 2010, Harvard Business School Working Paper
   Cowling M, 2003, SMALL BUS ECON, V20, P335, DOI 10.1023/A:1022931020438
   Cross R, 2005, HARVARD BUS REV, V83, P124
   Crowston K, 2006, COMPUTER, V39, P89, DOI 10.1109/MC.2006.152
   de Boer RC, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P32, DOI 10.1109/WICSA.2011.14
   Ding Wei, 2015, PROC 27 INT C SOFTW, P403
   Fouladi RT, 2008, COMMUN STAT-SIMUL C, V37, P928, DOI 10.1080/03610910801943735
   Gallagher S., 2006, JANUS HEAD, V9, P1
   Gelman A., The Garden of Forking Paths: Why Multiple Comparisons Can Be a Problem, Even When There Is No "fishing Expedition" Or "p-hacking" And the Research Hypothesis Was Posited Ahead of Time
   Gnatzy T., 2011, THESIS
   GOODMAN LA, 1961, ANN MATH STAT, V32, P148, DOI 10.1214/aoms/1177705148
   Gould S., 2004, J DECIS SYST, V13, P183
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Herbsleb J. D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P85, DOI 10.1109/ICSE.1999.840998
   Herbsleb JD, 1999, IEEE SOFTWARE, V16, P63, DOI 10.1109/52.795103
   Howison J., ALONE TOGETHER SOCIO
   Iivari J, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P203, DOI 10.1007/978-3-642-12575-1_10
   Jassowski M, 2012, IEEE DES TEST COMPUT, V29, P52, DOI 10.1109/MDT.2012.2208077
   Jiménez M, 2009, LECT NOTES BUS INF P, V16, P107
   Karlsson E., EVOLUTION EROSION SE
   Kazman R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P179, DOI 10.1109/ICSE.2015.146
   Kee J., WHY CHANGE EFFORTS F
   Knoke D., 2008, Social network analysis, V2nd
   Koch G. R., 1992, EXPT SOFTWARE ENG IS, P62
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Kwan I, 2012, IEEE SOFTWARE, V29, P90, DOI 10.1109/MS.2012.3
   LaMantia MJ, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P83, DOI 10.1109/WICSA.2008.49
   Lanubile F, 2013, IEEE SOFTWARE, V30, P18, DOI 10.1109/MS.2013.30
   Lanubile F, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.39
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   Lim M., PRESENTED ANN M I OP, P125
   Magnoni S., 2017, COMMUN ACM
   Maranzato RP, 2011, P ACM INT C COMP OBJ, P125
   Matsubara Y., 2014, PROC 28 PACIFIC ASIA, P658
   Mauerer W, 2022, IEEE T SOFTWARE ENG, V48, P3159, DOI 10.1109/TSE.2021.3082074
   McCarthy E., 1998, AI & Society, V12, P155, DOI 10.1007/BF01206194
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Meyer B., 2014, Agile!
   Mislove A, 2007, IMC'07: PROCEEDINGS OF THE 2007 ACM SIGCOMM INTERNET MEASUREMENT CONFERENCE, P29
   Mo R, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P51, DOI 10.1109/WICSA.2015.12
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Mohr L. B., 1982, Explaining Organizational Behavior
   Moon E, 2014, AMCIS 2014 PROCEEDINGS
   Mulller M., PRELIMINARY STUDY IM
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Nayebi M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P171, DOI 10.1109/ICSE-SEIP.2019.00026
   Nevo D, 2005, DECIS SUPPORT SYST, V39, P549, DOI 10.1016/j.dss.2004.03.002
   Nguyen T, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P45, DOI 10.1109/ICGSE.2008.39
   Paasivaara M, 2012, INT SYMP EMP SOFTWAR, P235, DOI 10.1145/2372251.2372294
   Palomba F, 2021, IEEE T SOFTWARE ENG, V47, P108, DOI 10.1109/TSE.2018.2883603
   Polk R., 2011, Proceedings of the 2011 Agile Conference, P263, DOI 10.1109/AGILE.2011.10
   Prandy K., 1999, International Journal of Sociology Social Policy, V19, P204
   Prikladnicki R, 2012, J SOFTW-EVOL PROC, V24, P119, DOI 10.1002/smr.475
   Quintane E, 2013, SOC NETWORKS, V35, P528, DOI 10.1016/j.socnet.2013.07.001
   Ramchand A, 2012, DATA BASE ADV INF SY, V43, P8, DOI 10.1145/2139011.2139013
   Ratner B., 2009, J. Target. Meas. Anal. Mark, V17, P139, DOI [10.1057/jt.2009.5, DOI 10.1057/JT.2009.5]
   Richardson I, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P35, DOI 10.1007/978-3-642-10294-3_2
   Rohunen A, 2010, LECT NOTES BUS INF, V48, P397
   Rost J, 2009, COMMUN ACM, V52, DOI 10.1145/1538788.1538819
   Ruikar Kirti, 2009, Construction Innovation, V9, P434, DOI 10.1108/14714170910995967
   Ruuska I, 2003, COMMUNITIES AND TECHNOLOGIES, P163
   Ryynanen Harri, 2012, International Journal of Business Information Systems, V11, P324, DOI 10.1504/IJBIS.2012.049569
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Sedighi M, 2016, PROCEEDINGS OF THE 8TH INTERNATIONAL JOINT CONFERENCE ON KNOWLEDGE DISCOVERY, KNOWLEDGE ENGINEERING AND KNOWLEDGE MANAGEMENT, VOL 3 (KMIS), P148
   Sierhuis M., 1997, TECH REP SS 97 01, P1
   Sirota D., ENTHUSIASTIC EMPLOYE
   Sorensen LJ, 2013, SAFETY SCI, V56, P72, DOI 10.1016/j.ssci.2012.05.026
   Svensson J., 2012, PROC EUR C QUAL OFFI, P23
   Syeed M.M., 2013, P 9 INT C OP SOURC S, P109
   T. O. Group, SOA SOURC BOOK
   Tamburri D. A., 2012, PROC 7 IEEE INT C GL, P1
   Tamburri D.A., 2019, PROC HICSS, P1
   Tamburri DA, 2021, IEEE T SOFTWARE ENG, V47, P630, DOI 10.1109/TSE.2019.2901490
   Tamburri DA, 2019, IEEE T COMPUT SOC SY, V6, P20, DOI 10.1109/TCSS.2018.2886433
   Tamburri DA, 2016, IEEE SOFTWARE, V33, P70, DOI 10.1109/MS.2016.144
   Tamburri DA, 2015, J INTERNET SERV APPL, V6, DOI 10.1186/s13174-015-0024-6
   Tamburri DA, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2522968.2522971
   Tamburri DA, 2013, IEEE SOFTWARE, V30, P29, DOI 10.1109/MS.2012.170
   Terada A., 2013, PROC 13 IEEE INT C B, P1
   Torchiano Marco, 2011, P 2 INT WORKSH EM TR, P12, DOI [DOI 10.1145/1985374, 10.1145/1985374.1985379., DOI 10.1145/1985374.1985379]
   VLIET H., 2007, SOFTWARE ENG PRINCIP
   Wang XL, 2001, LECT NOTES COMPUT SC, V2105, P299
   Wasserman S., 1994, Social network analysis: Methods and applications'
   Weinreich R, 2016, INFORM SOFTWARE TECH, V80, P265, DOI 10.1016/j.infsof.2016.09.007
   Wenger E., 1998, Communities of practice: learning, meaning, and identity, DOI [10.1017/CBO9780511803932, DOI 10.1017/CBO9780511803932]
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Xiao L, 2016, PROC INT CONF SOFTW, P488, DOI 10.1145/2884781.2884822
   Xiao L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P967, DOI 10.1145/2568225.2568241
NR 105
TC 2
Z9 2
U1 3
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 325
EP 347
DI 10.1109/TSE.2022.3150415
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA L1HD8
UT WOS:001020827200017
OA hybrid
DA 2024-07-18
ER

PT J
AU Amaral, O
   Abualhaija, S
   Torre, D
   Sabetzadeh, M
   Briand, LC
AF Amaral, Orlando
   Abualhaija, Sallam
   Torre, Damiano
   Sabetzadeh, Mehrdad
   Briand, Lionel C.
TI AI-Enabled Automation for Completeness Checking of Privacy Policies
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Privacy; Metadata; Law; General Data Protection Regulation; Software;
   Organizations; Europe; Requirements engineering; legal compliance;
   privacy policies; the general data protection regulation (GDPR);
   artificial intelligence (AI); conceptual modeling; qualitative research
AB Technological advances in information sharing have raised concerns about data protection. Privacy policies contain privacy-related requirements about how the personal data of individuals will be handled by an organization or a software system (e.g., a web service or an app). In Europe, privacy policies are subject to compliance with the General Data Protection Regulation (GDPR). A prerequisite for GDPR compliance checking is to verify whether the content of a privacy policy is complete according to the provisions of GDPR. Incomplete privacy policies might result in large fines on violating organization as well as incomplete privacy-related software specifications. Manual completeness checking is both time-consuming and error-prone. In this paper, we propose AI-based automation for the completeness checking of privacy policies. Through systematic qualitative methods, we first build two artifacts to characterize the privacy-related provisions of GDPR, namely a conceptual model and a set of completeness criteria. Then, we develop an automated solution on top of these artifacts by leveraging a combination of natural language processing and supervised machine learning. Specifically, we identify the GDPR-relevant information content in privacy policies and subsequently check them against the completeness criteria. To evaluate our approach, we collected 234 real privacy policies from the fund industry. Over a set of 48 unseen privacy policies, our approach detected 300 of the total of 334 violations of some completeness criteria correctly, while producing 23 false positives. The approach thus has a precision of 92.9% and recall of 89.8%. Compared to a baseline that applies keyword search only, our approach results in an improvement of 24.5% in precision and 38% in recall.
C1 [Amaral, Orlando; Abualhaija, Sallam; Torre, Damiano; Sabetzadeh, Mehrdad; Briand, Lionel C.] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, L-4365 Esch Sur Alzette, Luxembourg.
   [Abualhaija, Sallam; Briand, Lionel C.] Univ Ottawa, Sch Elect Engn & Comp Sci, Ottawa, ON K1N 6N5, Canada.
   [Torre, Damiano] Texas A&M Univ Cent Texas, Dept Comp Informat Syst, Killeen, TX 76549 USA.
C3 University of Luxembourg; University of Ottawa; Texas A&M University
   System; Texas A&M University Central Texas
RP Abualhaija, S (corresponding author), Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, L-4365 Esch Sur Alzette, Luxembourg.; Abualhaija, S (corresponding author), Univ Ottawa, Sch Elect Engn & Comp Sci, Ottawa, ON K1N 6N5, Canada.
EM orlando.amaralcejas@uni.lu; m.sabetzadeh@uottawa.ca;
   damiano.torre@tamuct.edu; mehrdad.sabetzadeh@uni.lu; lbriand@uottawa.ca
RI Amaral Cejas, Orlando/KHZ-5400-2024; Torre, Damiano/KHC-4702-2024
OI Amaral Cejas, Orlando/0000-0001-5140-6439; Torre,
   Damiano/0000-0002-1656-3057; Briand, Lionel/0000-0002-1393-1010;
   Abualhaija, Sallam/0000-0001-6095-447X
FU Linklaters, Luxembourg's National Research Fund (FNR)
   [BRIDGES/19/IS/13759068/ARTAGO]; NSERC of Canada
FX This work was supported by Linklaters, Luxembourg's National Research
   Fund (FNR) under Grant BRIDGES/19/IS/13759068/ARTAGO, and NSERC of
   Canada under the Discovery, Discovery Accelerator and CRC programs.
CR Aggarwal C. C., 2018, MACHINE LEARNING TEX
   ALFI, ASS LUX FUND IND 946
   Amaral O., 2021, GLOSSARY COMPLETENES
   Ayala-Rivera V, 2018, INT REQUIR ENG CONF, P136, DOI 10.1109/RE.2018.00023
   Bano M, 2021, IEEE SOFTWARE, V38, P7, DOI 10.1109/MS.2020.3029311
   Bhatia J, 2019, REQUIR ENG, V24, P291, DOI 10.1007/s00766-019-00315-y
   Bhatia J, 2018, INT REQUIR ENG CONF, P159, DOI 10.1109/RE.2018.00025
   Bhatia J, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2907942
   Blacoe W., 2012, P 2012 JOINT C EMP M, P546
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Caramujo J, 2019, REQUIR ENG, V24, P1, DOI 10.1007/s00766-018-0305-2
   Chen D., 2014, P 2014 C EMPIRICAL M, P740, DOI DOI 10.3115/V1/D14-1082
   Chen K., 2013, EFFICIENT ESTIMATION, P2
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   E. D. D. Team, 2020, DEEPLEARNING4J OP SO
   Eckart deCastilho R., 2014, ASS COMPUTATIONAL LI, P1, DOI DOI 10.3115/V1/W14-5201
   Ethayarajh K, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P55
   European Commission, ART 29 WORK PART GUI
   European Union, GEN DAT PROT REG
   Fan M, 2020, PROC INT SYMP SOFTW, P253, DOI 10.1109/ISSRE5003.2020.00032
   Friedl J.E.F., 2006, Mastering Regular Expressions, V3rd Edn.
   Ghosh D., 2015, P 2015 C EMP METH NA, P1003
   Guerriero M, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P172, DOI 10.1145/3194133.3194140
   Harris ZS, 1954, WORD, V10, P146, DOI 10.1080/00437956.1954.11659520
   Hatamian M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09934-4
   Hayes JH, 2014, 2014 IEEE 1ST INTERNATIONAL WORKSHOP ON ARTIFICIAL INTELLIGENCE FOR REQUIREMENTS ENGINEERING (AIRE), P9, DOI 10.1109/AIRE.2014.6894850
   Hirschberg J, 2015, SCIENCE, V349, P261, DOI 10.1126/science.aaa8685
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Huang E.H., 2012, ACL
   Iyyer M, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P1681
   Jordan MI, 2015, SCIENCE, V349, P255, DOI 10.1126/science.aaa8415
   Joshi A., 2016, Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing, P1006
   Jurafsky D., 2009, SPEECH LANGUAGE PROC, V2nd
   Kim Y., 2014, P 2014 C EMP METH NA, P1746, DOI [DOI 10.3115/V1/D14-1181, 10.3115/v1/D14-1181]
   Komninos A., 2016, P 2016 C N AM CHAPT, P1490
   Kumar NVN, 2014, 2014 IEEE FOURTH INTERNATIONAL CONFERENCE ON BIG DATA AND CLOUD COMPUTING (BDCLOUD), P753, DOI 10.1109/BDCloud.2014.89
   Kununka S, 2018, IFIP ADV INF COMM TE, V526, P301, DOI 10.1007/978-3-319-92925-5_20
   Levy O, 2014, PROCEEDINGS OF THE 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 2, P302, DOI 10.3115/v1/p14-2050
   Lippi M, 2019, ARTIF INTELL LAW, V27, P117, DOI 10.1007/s10506-019-09243-2
   Liu Fei, 2014, P COLING 2014 25 INT, P884
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Michaelis LA, 2003, COG LIN RES, V23, P163, DOI 10.1515/9783110219074.163
   Mikheev A, 1999, NINTH CONFERENCE OF THE EUROPEAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS, P1
   Mu J., 2018, PROC INT C LEARN REP
   National Institute of Infectious Diseases (NIID), 2022, Clin Infect Dis
   Nedelchev R., 2020, IFIP INT C ICT SYST, P370, DOI [10.1007/978-3-030-58201-2_25, DOI 10.1007/978-3-030-58201-2_25]
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Perera C, 2020, INFORM SCIENCES, V512, P238, DOI 10.1016/j.ins.2019.09.061
   Peters M, 2018, STUD LATEINAMERIKA, V32, P1, DOI 10.5771/9783845286846
   Pullonen P, 2019, SOFTW SYST MODEL, V18, P3235, DOI 10.1007/s10270-019-00718-z
   Qi Y., 2018, HLT NAACL, P529, DOI 10.18653/v1/N18-2084
   Radford Alec, 2018, IMPROVING LANGUAGE U, DOI DOI 10.18653/V1/N18-1202
   Rodrigues M., 2015, ADV APPL NATURAL LAN
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Sánchez D, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11041762
   Sanderson M, 2010, NAT LANG ENG, V16, P100, DOI 10.1017/S1351324909005129
   Slavin R, 2016, PROC INT CONF SOFTW, P25, DOI 10.1145/2884781.2884855
   Soltana G, 2018, SOFTW SYST MODEL, V17, P851, DOI 10.1007/s10270-016-0542-0
   Tankard Colin, 2016, Network Security, V2016, P5, DOI 10.1016/S1353-4858(16)30056-3
   Tesfay WB, 2018, IWSPA '18: PROCEEDINGS OF THE FOURTH ACM INTERNATIONAL WORKSHOP ON SECURITY AND PRIVACY ANALYTICS, P15, DOI 10.1145/3180445.3180447
   Torre D., 2020, CORR
   Torre D, 2020, INT REQUIR ENG CONF, P136, DOI 10.1109/RE48521.2020.00025
   Torre D, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P1, DOI 10.1109/MODELS.2019.00-20
   Turian J, 2010, ACL 2010: 48TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P384
   Vanezi E, 2020, LECT NOTES BUS INF P, V385, P569, DOI 10.1007/978-3-030-50316-1_40
   Wang S., 2012, Baselines and bigrams: Simple, good sentiment and topic classification, P90
   Wieting J., 2016, 4 INT C LEARN REPR I, P1
   Wilson S, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16), P133, DOI 10.1145/2872427.2883035
   Witten IH, 2011, MOR KAUF D, P1
   Yu L. C., 2017, P 2017 C EMP METH NA, P534
   Zhu XJ, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 2, P632
NR 73
TC 14
Z9 14
U1 4
U2 26
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4647
EP 4674
DI 10.1109/TSE.2021.3124332
PG 28
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800023
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cornejo, O
   Pastore, F
   Briand, LC
AF Cornejo, Oscar
   Pastore, Fabrizio
   Briand, Lionel C.
TI Mutation Analysis for Cyber-Physical Systems: Scalable Solutions and
   Results in the Space Domain
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Embedded software; Optimization; Libraries; Scalability;
   Pipelines; Hardware; Mutation analysis; mutation testing; space
   software; embedded software; cyber-physical systems
ID CONFIDENCE-INTERVALS; SAMPLE-SIZE; BINOMIAL PROPORTION
AB On-board embedded software developed for spaceflight systems (space software) must adhere to stringent software quality assurance procedures. For example, verification and validation activities are typically performed and assessed by third party organizations. To further minimize the risk of human mistakes, space agencies, such as the European Space Agency (ESA), are looking for automated solutions for the assessment of software testing activities, which play a crucial role in this context. Though space software is our focus here, it should be noted that such software shares the above considerations, to a large extent, with embedded software in many other types of cyber-physical systems. Over the years, mutation analysis has shown to be a promising solution for the automated assessment of test suites; it consists of measuring the quality of a test suite in terms of the percentage of injected faults leading to a test failure. A number of optimization techniques, addressing scalability and accuracy problems, have been proposed to facilitate the industrial adoption of mutation analysis. However, to date, two major problems prevent space agencies from enforcing mutation analysis in space software development. First, there is uncertainty regarding the feasibility of applying mutation analysis optimization techniques in their context. Second, most of the existing techniques either can break the real-time requirements common in embedded software or cannot be applied when the software is tested in Software Validation Facilities, including CPU emulators and sensor simulators. In this paper, we enhance mutation analysis optimization techniques to enable their applicability to embedded software and propose a pipeline that successfully integrates them to address scalability and accuracy issues in this context, as described above. Further, we report on the largest study involving embedded software systems in the mutation analysis literature. Our research is part of a research project funded by ESA ESTEC involving private companies (GomSpace Luxembourg and LuxSpace) in the space sector. These industry partners provided the case studies reported in this paper; they include an on-board software system managing a microsatellite currently on-orbit, a set of libraries used in deployed cubesats, and a mathematical library certified by ESA.
C1 [Cornejo, Oscar; Pastore, Fabrizio; Briand, Lionel C.] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, L-4365 Esch Sur Alzette, Luxembourg.
   [Briand, Lionel C.] Univ Ottawa, Chool EECS, Ottawa, ON K1N 6N5, Canada.
C3 University of Luxembourg; University of Ottawa
RP Pastore, F (corresponding author), Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, L-4365 Esch Sur Alzette, Luxembourg.
EM oscar.cornejo@uni.lu; fabrizio.pastore@uni.lu; lionel.briand@uni.lu
RI Pastore, Fabrizio/ABY-9262-2022
OI Pastore, Fabrizio/0000-0003-3541-3641; Briand,
   Lionel/0000-0002-1393-1010
FU European Space Agency [ITT-1-9873/FAQAS]; European Research Council
   (ERC) under the European Union [694277]; NSERC
FX This work was supported by the European Space Agency (ITT-1-9873/FAQAS),
   the European Research Council (ERC) under the European Union's Horizon
   2020 research and innovation programme under Grant 694277 and NSERC
   Discovery and Canada Research Chair programs.
CR Ammann Paul, 2008, Introduction to software testing, V1st
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2009, ECSSEST40C
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bahadur R. R., 1961, REPRESENTATION JOINT, P158
   Baker R, 2013, IEEE T SOFTWARE ENG, V39, P787, DOI 10.1109/TSE.2012.56
   Becker M, 2012, EMSOFT '12: PROCEEDINGS OF THE TENTH AMC INTERNATIONAL CONFERENCE ON EMBEDDED SOFTWARE 2012, P33
   Berenson M., 1998, Basic business statistics
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   Chebyshev P.L., 1867, J Math Pures Appl, V12, P177
   Chekam TT, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3425497
   Chekam TT, 2017, PROC INT CONF SOFTW, P597, DOI 10.1109/ICSE.2017.61
   Chen ZJ, 2013, J PROBAB STAT, V2013, DOI 10.1155/2013/603297
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   Clark JA, 2013, SCI COMPUT PROGRAM, V78, P345, DOI 10.1016/j.scico.2011.03.011
   Clopper CJ, 1934, BIOMETRIKA, V26, P404, DOI 10.1093/biomet/26.4.404
   Cochran W.G., 1977, SAMPLING TECHNIQUES
   Crouzet Y., 2006, PROC 2 WORKSHOP MUTA, P7
   Daran M., 1996, SIGSOFT Software Engineering Notes, V21, P158, DOI [10.1145/229000.226313, 10.1145/226295.226313]
   Delamaro M.E., 1996, P C PERFORMABILITY C, P79
   Delamaro ME, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P11, DOI 10.1109/ICST.2014.12
   Delamaro ME, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P203, DOI 10.1109/ICST.2014.33
   Delgado-Pérez P, 2018, IEEE T RELIAB, V67, P1406, DOI 10.1109/TR.2018.2864678
   Delgado-Pérez P, 2017, SOFTW TEST VERIF REL, V27, DOI 10.1002/stvr.1630
   Delgado-Pérez P, 2015, ANN TELECOMMUN, V70, P137, DOI 10.1007/s12243-014-0445-4
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Deng L, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P84, DOI 10.1109/ICST.2013.20
   Denisov A, 2018, IEEE ICST WORKSHOP, P25, DOI 10.1109/ICSTW.2018.00024
   Derezinska A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P342, DOI 10.1109/ICSTW.2011.54
   Phan DL, 2018, IEEE ICST WORKSHOP, P40, DOI 10.1109/ICSTW.2018.00026
   Eickhoff J, 2009, SPRINGER AEROSP TECH, P1, DOI 10.1007/978-3-642-01276-1
   ESA, 2020, SNAP-ESA Sentinel Application Platform
   European Cooperation for Space Standardization, 2010, ECSSEHB1002A
   European Cooperation for Space Standardization, 2017, ECSSQST80C
   European Space Agency, 2020, ESA VEG LAUNCH
   European Space Agency, 2020, SPACE
   European Space Agency, 2020, MLFS MATH LIB FLIGHT
   European Space Agency, 2020, ESA COMM LIC PERM V2
   European Space Agency, 2017, DGI2017546TTN EUR SP
   European Space Agency, 2008, ESA ISVV GUID
   F. Free Software Foundation, 2020, GCC GNU COMP COLL
   F. Free Software Foundation, 2020, GNU MAK
   F. Free Software Foundation, 2020, GCOV TEST COV PROGR
   Frankl P. G., 1998, Software Engineering Notes, V23, P153, DOI 10.1145/291252.288298
   Free Software Foundation, 2020, GDB GNU PROJ DEB
   Free Software Foundation, 2020, GCC OPT
   Frey J, 2010, AM STAT, V64, P242, DOI 10.1198/tast.2010.09140
   Gaisler Cobham, 2020, RTEMS CROSS COMPILAT
   Gay G, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2934672
   Golagha M, 2020, IEEE INT CONF SOFTW, P4, DOI 10.1109/ICST46399.2020.00012
   Gomspace, 2020, SYST CUB NAN
   Gonçalves L, 2012, J APPL STAT, V39, P2453, DOI 10.1080/02664763.2012.713919
   Gopinath R, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P216, DOI 10.1109/ISSRE.2015.7381815
   Grün BJM, 2009, IEEE ICST WORKSHOP, P192, DOI 10.1109/ICSTW.2009.37
   Harir F, 2016, PROC INT SYMP SOFTW, P105, DOI 10.1109/ISSRE.2016.51
   Hariri F, 2018, IEEE INT CONF AUTOM, P860, DOI 10.1145/3238147.3240482
   Hariri F, 2019, IEEE INT CONF SOFTW, P114, DOI 10.1109/ICST.2019.00021
   Herdt V, 2019, PROCEEDINGS OF THE 2019 56TH ACM/EDAC/IEEE DESIGN AUTOMATION CONFERENCE (DAC), DOI 10.1145/3316781.3317807
   Holling D, 2016, IEEE ICST WORKSHOP, P152, DOI 10.1109/ICSTW.2016.29
   Hyndman RJ, 1996, AM STAT, V50, P361, DOI 10.2307/2684934
   Isasi Y., 2019, ONL P SIM EGSE SPAC
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Jia Yue, 2016, P 25 INT S SOFTWARE, P354
   Just R., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P11, DOI 10.1109/ISSRE.2012.31
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kapinski J, 2016, IEEE CONTR SYST MAG, V36, P45, DOI 10.1109/MCS.2016.2602089
   Keller F, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P114, DOI 10.1109/QRS.2017.22
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   Kintis M, 2018, EMPIR SOFTW ENG, V23, P2426, DOI 10.1007/s10664-017-9582-5
   Kintis M, 2018, IEEE T SOFTWARE ENG, V44, P308, DOI 10.1109/TSE.2017.2684805
   Kintis M, 2010, ASIA PAC SOFWR ENG, P300, DOI 10.1109/APSEC.2010.42
   Kotrlik J., 2001, INF TECHNOL LEARN TO, V19, P43, DOI 10.1067/mge.2001.112642
   KREJCIE RV, 1970, EDUC PSYCHOL MEAS, V30, P607, DOI 10.1177/001316447003000308
   Krishnamoorthy K, 2007, COMMUN STAT-SIMUL C, V36, P1171, DOI 10.1080/03610910701569218
   KUPPER LL, 1978, BIOMETRICS, V34, P69, DOI 10.2307/2529589
   LuxSpace, 2020, ESAIL MAR MICR
   Madeyski L, 2014, IEEE T SOFTWARE ENG, V40, P23, DOI 10.1109/TSE.2013.44
   Namin AS, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P351, DOI 10.1145/1368088.1368136
   National Institute of Standards and Technology, 2002, ANN APPR FED INF PRO
   Newcombe RG, 1998, STAT MED, V17, P857, DOI 10.1002/(SICI)1097-0258(19980430)17:8<857::AID-SIM777>3.0.CO;2-E
   NG TH, 1989, COMMUN STAT THEORY, V18, P3477, DOI 10.1080/03610928908830104
   Offut A. J., 1997, Software Testing, Verification and Reliability, V7, P165, DOI 10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U
   Offutt A. J., 1992, ACM Transactions on Software Engineering and Methodology, V1, P5, DOI 10.1145/125489.125473
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   OFFUTT AJ, 1994, IEEE T SOFTWARE ENG, V20, P337, DOI 10.1109/32.286422
   OHB LuxSpace, 2020, 1 SPAC SYST APPL SER
   Papadakis Mike, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P121, DOI 10.1109/ISSRE.2010.38
   Papadakis Mike, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P90, DOI 10.1109/ICSTW.2010.50
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Papadakis M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P537, DOI 10.1145/3180155.3180183
   Papadakis M, 2018, IEEE ICST WORKSHOP, P32, DOI 10.1109/ICSTW.2018.00025
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Papadakis M, 2014, SCI COMPUT PROGRAM, V95, P298, DOI 10.1016/j.scico.2014.05.012
   Papadakis M, 2012, INFORM SOFTWARE TECH, V54, P915, DOI 10.1016/j.infsof.2012.02.004
   Papadakis M, 2011, SOFTWARE QUAL J, V19, P691, DOI 10.1007/s11219-011-9142-y
   Papadakis M, 2010, ICSOFT 2010: PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 2, P325
   Ramler R., 2017, P S APPL COMP ACM NE, P1401, DOI [10.1145/3019612.3019830, DOI 10.1145/3019612.3019830]
   Mateo PR, 2013, IEEE T SOFTWARE ENG, V39, P570, DOI 10.1109/TSE.2012.39
   Riener H., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P388, DOI 10.1109/ICSTW.2011.55
   Schuler David, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P45, DOI 10.1109/ICST.2010.30
   Schuler D, 2013, SOFTW TEST VERIF REL, V23, P353, DOI 10.1002/stvr.1473
   Schuler D, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P69
   Shin D, 2018, IEEE T SOFTWARE ENG, V44, P914, DOI 10.1109/TSE.2017.2732347
   Tokumoto S, 2016, IEEE INT CONF SOFTW, P320, DOI 10.1109/ICST.2016.18
   Tsiodras T., 2020, COVER ME
   Untch R. H., 1993, SIGSOFT Software Engineering Notes, V18, P139, DOI 10.1145/174146.154265
   Valgrind, 2020, VALGRIND
   Van der Geest PAG, 2005, J STAT COMPUT SIM, V75, P141, DOI 10.1080/0094965042000193224
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Varrette S, 2014, 2014 INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING & SIMULATION (HPCS), P959, DOI 10.1109/HPCSim.2014.6903792
   VOLLSET SE, 1993, STAT MED, V12, P809, DOI 10.1002/sim.4780120902
   WALD A, 1945, ANN MATH STAT, V16, P117, DOI 10.1214/aoms/1177731118
   Wang B, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P295, DOI 10.1145/3092703.3092714
   William Hsu E. S., 1990, SERCTR63P
   Woodward M. R., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P152, DOI 10.1109/WST.1988.5370
   Wu F, 2017, INFORM SOFTWARE TECH, V81, P97, DOI 10.1016/j.infsof.2016.03.002
   Yaacoub T, 2019, IEEE T INFORM THEORY, V65, P3022, DOI 10.1109/TIT.2018.2885405
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Yu-Seung Ma, 2006, 28th International Conference on Software Engineering Proceedings, P827
   Zhang L., 2013, P 2013 INT S SOFTW T, P235
   Zhang LM, 2013, IEEE INT CONF AUTOM, P92, DOI 10.1109/ASE.2013.6693070
   Zhang NF, 2019, J RES NATL INST STAN, V124, DOI 10.6028/jres.124.026
   Zheng H, 2010, 2ND IEEE INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER CONTROL (ICACC 2010), VOL. 2, P431, DOI 10.1109/ICACC.2010.5486640
   Zhou X., 2018, IEEE ACCESS, V6, p52 179
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 126
TC 6
Z9 6
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 3913
EP 3939
DI 10.1109/TSE.2021.3107680
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800011
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Mancini, T
   Melatti, I
   Tronci, E
AF Mancini, Toni
   Melatti, Igor
   Tronci, Enrico
TI Any-Horizon Uniform Random Sampling and Enumeration of Constrained
   Scenarios for Simulation-Based Formal Verification
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Monitoring; Integrated circuit modeling; Contracts; Numerical models;
   Law; Mathematical model; Iterative methods; Simulation-based
   verification; cyber-physical systems; scenario generation
ID SUPERVISORY CONTROL; MODEL; DESIGN
AB Model-based approaches to the verification of non-terminating Cyber-Physical Systems (CPSs) usually rely on numerical simulation of the System Under Verification (SUV) model under input scenarios of possibly varying duration, chosen among those satisfying given constraints. Such constraints typically stem from requirements (or assumptions) on the SUV inputs and its operational environment as well as from the enforcement of additional conditions aiming at, e.g., prioritising the (often extremely long) verification activity, by, e.g., focusing on scenarios explicitly exercising selected requirements, or avoiding vacuity in their satisfaction. In this setting, the possibility to efficiently sample at random (with a known distribution, e.g., uniformly) within, or to efficiently enumerate (possibly in a uniformly random order) scenarios among those satisfying all the given constraints is a key enabler for the practical viability of the verification process, e.g., via simulation-based statistical model checking. Unfortunately, in case of non-trivial combinations of constraints, iterative approaches like Markovian random walks in the space of sequences of inputs in general fail in extracting scenarios according to a given distribution (e.g., uniformly), and can be very inefficient to produce at all scenarios that are both legal (with respect to SUV assumptions) and of interest (with respect to the additional constraints). For example, in our case studies, up to 91% of the scenarios generated using such iterative approaches would need to be neglected. In this article, we show how, given a set of constraints on the input scenarios succinctly defined by multiple finite memory monitors, a data structure (scenario generator) can be synthesised, from which any-horizon scenarios satisfying the input constraints can be efficiently extracted by (possibly uniform) random sampling or (randomised) enumeration. Our approach enables seamless support to virtually all simulation-based approaches to CPS verification, ranging from simple random testing to statistical model checking and formal (i.e., exhaustive) verification, when a suitable bound on the horizon or an iterative horizon enlargement strategy is defined, as in the spirit of bounded model checking.
C1 [Mancini, Toni; Melatti, Igor; Tronci, Enrico] Sapienza Univ Rome, Comp Sci Dept, I-00185 Rome, Italy.
C3 Sapienza University Rome
RP Mancini, T (corresponding author), Sapienza Univ Rome, Comp Sci Dept, I-00185 Rome, Italy.
EM tmancini@di.uniroma1.it; melatti@di.uniroma1.it; tronci@di.uniroma1.it
OI TRONCI, Enrico/0000-0002-0377-3119; Melatti, Igor/0000-0002-6273-6190
FU Italian Ministry of University & Research under Grant Dipartimenti di
   eccellenza 2018-2022 of the Department of Computer Science, Sapienza
   University of Rome; INdAM GNCS Project 2020; Sapienza U. Projects
   [RG11816436BD4F21, RG11916B892E54DB, RP11916B8665242F]; Lazio POR FESR
   Projects [E84G20000150006, F83G17000830007]
FX This work was partially supported by the Italian Ministry of University
   & Research under Grant Dipartimenti di eccellenza 2018-2022 of the
   Department of Computer Science, Sapienza University of Rome; INdAM GNCS
   Project 2020; Sapienza U. Projects RG11816436BD4F21, RG11916B892E54DB,
   RP11916B8665242F; Lazio POR FESR Projects E84G20000150006,
   F83G17000830007.
CR Abbas H, 2013, ACM T EMBED COMPUT S, V12, DOI 10.1145/2465787.2465797
   Achlioptas D, 2018, LECT NOTES COMPUT SC, V10929, P135, DOI 10.1007/978-3-319-94144-8_9
   Adimoolam A., 2017, PROC 29 INT C COMPUT, P483
   Alimguzhin V, 2017, IEEE T AUTOMAT CONTR, V62, P5357, DOI 10.1109/TAC.2017.2694559
   AlTurki Musab, 2011, Algebra and Coalgebra in Computer Science. Proceedings 4th International Conference, CALCO 2011, P386, DOI 10.1007/978-3-642-22944-2_28
   Annapureddy Y, 2011, LECT NOTES COMPUT SC, V6605, P254, DOI 10.1007/978-3-642-19835-9_21
   Baeten J. C. M., 2016, COMPLEX SYSTEMS, P39
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Bak S, 2017, LECT NOTES COMPUT SC, V10426, P401, DOI 10.1007/978-3-319-63387-9_20
   BALEMI S, 1993, IEEE T AUTOMAT CONTR, V38, P1040, DOI 10.1109/9.231459
   Basu A, 2010, LECT NOTES COMPUT SC, V6117, P32, DOI 10.1007/978-3-642-13464-7_4
   Beer I, 2001, FORM METHOD SYST DES, V18, P141, DOI 10.1023/A:1008779610539
   Benveniste A, 2018, FOUND TRENDS ELECTRO, V12, pI, DOI 10.1561/1000000053
   Bogdoll J, 2011, LECT NOTES COMPUT SC, V6722, P59, DOI 10.1007/978-3-642-21461-5_4
   Boström P, 2016, SOFTW SYST MODEL, V15, P1141, DOI 10.1007/s10270-015-0477-x
   Boyer Benoit, 2013, Quantitative Evaluation of Systems. 10th International Conference, QEST 2013. Proceedings: LNCS 8054, P160, DOI 10.1007/978-3-642-40196-1_12
   Chakraborty S, 2020, INT CONF COMPUT INT, DOI 10.1109/CINE48825.2020.234396
   Clarke E.M., 2016, HDB MODEL CHECKING
   Clarke E, 2010, FORM METHOD SYST DES, V36, P97, DOI 10.1007/s10703-009-0076-y
   Clarke EM, 2011, LECT NOTES COMPUT SC, V6996, P1, DOI 10.1007/978-3-642-24372-1_1
   Clarke EM, 1999, MODEL CHECKING, P1
   Dubreil J, 2010, IEEE T AUTOMAT CONTR, V55, P1089, DOI 10.1109/TAC.2010.2042008
   Fainekos GE, 2009, THEOR COMPUT SCI, V410, P4262, DOI 10.1016/j.tcs.2009.06.021
   Fan CC, 2017, LECT NOTES COMPUT SC, V10426, P441, DOI 10.1007/978-3-319-63387-9_22
   Gaudel MC, 2011, LECT NOTES COMPUT SC, V7019, P1, DOI 10.1007/978-3-642-24580-0_1
   Gonschorek T., 2017, P MEMOCODE, P15
   Gradel E., 2007, Finite Model Theory and Its Applications
   Grosu R, 2005, LECT NOTES COMPUT SC, V3440, P271
   Grosu R., 2004, P ISOLA, P165
   HALBWACHS N, 1991, P IEEE, V79, P1305, DOI 10.1109/5.97300
   Havelund K, 2002, LECT NOTES COMPUT SC, V2280, P342
   Hayes B, 2017, IEEE T SMART GRID, V8, P1284, DOI 10.1109/TSG.2016.2596790
   Hoxha B, 2018, INT J SOFTW TOOLS TE, V20, P79, DOI 10.1007/s10009-017-0447-4
   Iordache MV, 2010, P AMER CONTR CONF, P3378
   Jegourel Cyrille, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P576, DOI 10.1007/978-3-642-39799-8_38
   Jegourel C, 2012, LECT NOTES COMPUT SC, V7214, P498, DOI 10.1007/978-3-642-28756-5_37
   Kim Y, 2013, IEEE SOFTWARE, V30, P35, DOI 10.1109/MS.2013.24
   Kupferman O., 2003, International Journal on Software Tools for Technology Transfer, V4, P224, DOI 10.1007/s100090100062
   LAFORTUNE S, 1988, IEEE T AUTOMAT CONTR, V33, P439, DOI 10.1109/9.1222
   Maggioli F, 2020, BIOINFORMATICS, V36, P2165, DOI 10.1093/bioinformatics/btz860
   Mancini Toni, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P296, DOI 10.1007/978-3-642-39799-8_21
   Mancini T, 2021, J LOG ALGEBR METHODS, V120, DOI 10.1016/j.jlamp.2021.100640
   Mancini T, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON COMMUNICATIONS, CONTROL, AND COMPUTING TECHNOLOGIES FOR SMART GRIDS (SMARTGRIDCOMM)
   Mancini T, 2017, INFORM PROCESS LETT, V122, P8, DOI 10.1016/j.ipl.2017.02.001
   Mancini T, 2016, FUND INFORM, V149, P101, DOI 10.3233/FI-2016-1444
   Mancini T, 2016, MICROPROCESS MICROSY, V41, P12, DOI 10.1016/j.micpro.2015.10.010
   Mancini T, 2015, 23RD EUROMICRO INTERNATIONAL CONFERENCE ON PARALLEL, DISTRIBUTED, AND NETWORK-BASED PROCESSING (PDP 2015), P476, DOI 10.1109/PDP.2015.119
   Mancini T, 2015, 2015 EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN (DSD), P478, DOI 10.1109/DSD.2015.35
   Mancini T, 2015, LECT N BIOINFORMAT, V9044, P542, DOI 10.1007/978-3-319-16480-9_52
   Mancini T, 2014, INT CONF SMART GRID, P794, DOI 10.1109/SmartGridComm.2014.7007745
   Mancini T, 2014, 2014 17TH EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN (DSD), P236, DOI 10.1109/DSD.2014.91
   Mancini T, 2014, EUROMICRO WORKSHOP P, P734, DOI 10.1109/PDP.2014.32
   Mari F, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559934
   Meenakshi B, 2006, LECT NOTES COMPUT SC, V4260, P606
   Miskov-Zivanov N., 2013, P ACM BCB, P728
   RAMADGE PJ, 1987, SIAM J CONTROL OPTIM, V25, P206, DOI 10.1137/0325013
   RAMADGE PJG, 1989, P IEEE, V77, P81, DOI 10.1109/5.21072
   Sankaranarayanan Sriram, 2017, ACM SIGBED Review, V14, P24, DOI 10.1145/3076125.3076128
   Sinisi S, 2020, BIOINFORMATICS, V36, P5465, DOI 10.1093/bioinformatics/btaa1026
   Sinisi S, 2021, SIMUL MODEL PRACT TH, V109, DOI 10.1016/j.simpat.2021.102277
   So WC, 1996, IEEE T POWER ELECTR, V11, P24, DOI 10.1109/63.484413
   Sontag E. D, 1998, Mathematical Control Theory: Deterministic Finite Dimensional Systems, V6
   Tripakis S., 2005, ACM T EMBED COMPUT S, V4, P779, DOI DOI 10.1145/1113830.1113834
   Tronci E, 2014, 2014 FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD), P207
   Tronci E, 1996, IEEE DECIS CONTR P, P2237, DOI 10.1109/CDC.1996.572981
   Verzino G, 2012, PROC 12 INT C SPACE
   Whalen M. W., 2006, P INT S SOFTW TEST A, P25
   Whalen M, 2008, LECT NOTES COMPUT SC, V4916, P68
   WILF HS, 1977, ADV MATH, V24, P281, DOI 10.1016/S0001-8708(77)80046-7
   Wonham W. M, 2015, SUPERVISORY CONTROL, P1396
   Younes H. L. S., 2006, International Journal on Software Tools for Technology Transfer, V8, P216, DOI 10.1007/s10009-005-0187-8
   Younes H. L. S., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P223
   Youngjoo Kim, 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P51, DOI 10.1109/ISSRE.2012.35
   Zuliani P, 2013, FORM METHOD SYST DES, V43, P338, DOI 10.1007/s10703-013-0195-3
NR 74
TC 1
Z9 1
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 4002
EP 4013
DI 10.1109/TSE.2021.3109842
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800016
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Menendez, HD
   Clark, D
AF Menendez, Hector D.
   Clark, David
TI Hashing Fuzzing: Introducing Input Diversity to Improve Crash Detection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Instruments; Hash functions; Testing; Software; System testing; Fuzzing;
   Generators; System testing; fuzz testing; HashFuzz; universal hashing
AB The utility of a test set of program inputs is strongly influenced by its diversity and its size. Syntax coverage has become a standard proxy for diversity. Although more sophisticated measures exist, such as proximity of a sample to a uniform distribution, methods to use them tend to be type dependent. We use r-wise hash functions to create a novel, semantics preserving, testability transformation for C programs that we call HashFuzz. Use of HashFuzz improves the diversity of test sets produced by instrumentation-based fuzzers. We evaluate the effect of the HashFuzz transformation on eight programs from the Google Fuzzer Test Suite using four state-of-the-art fuzzers that have been widely used in previous research. We demonstrate pronounced improvements in the performance of the test sets for the transformed programs across all the fuzzers that we used. These include strong improvements in diversity in every case, maintenance or small improvement in branch coverage - up to 4.8 perent improvement in the best case, and significant improvement in unique crash detection numbers - between 28 to 97 perent increases compared to test sets for untransformed programs.
C1 [Menendez, Hector D.] Middlesex Univ London, Comp Sci Dept, London NW4 4BT, England.
   [Clark, David] UCL, Comp Sci Dept, London WC1E 6BT, England.
C3 Middlesex University; University of London; University College London
RP Menendez, HD (corresponding author), Middlesex Univ London, Comp Sci Dept, London NW4 4BT, England.
EM h.menendez@mdx.ac; david.clark@ucl.ac.uk
RI ; Menendez, Hector/C-1883-2014
OI Clark, David/0000-0002-7004-934X; Menendez, Hector/0000-0002-6314-3725
FU EPSRC. [EP/P005888/1]; EPSRC [EP/P005888/1] Funding Source: UKRI
FX The authors would like to thank NVIDIA Corporation with the donation of
   the Titan V GPU used for this research and Robert Feldt for useful
   discussion on how to find a language to explain and present the novelty
   in this work. This work was supported by the InfoTestSS EP/P005888/1
   Research Project from EPSRC.
CR Agorameter, About us
   Almasi MM, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P263, DOI 10.1109/ICSE-SEIP.2017.27
   Alshahwan N., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P181
   Alshahwan N, 2012, PROC INT CONF SOFTW, P1345, DOI 10.1109/ICSE.2012.6227083
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   Androutsopoulos K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P573, DOI 10.1145/2568225.2568314
   Böhme M, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P678, DOI 10.1145/3368089.3409748
   Böhme M, 2019, IEEE T SOFTWARE ENG, V45, P489, DOI 10.1109/TSE.2017.2785841
   Böhme M, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3210309
   Böhme M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2329, DOI 10.1145/3133956.3134020
   Chakraborty Supratik, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P304, DOI 10.1007/978-3-662-46681-0_25
   Chakraborty S, 2016, AAAI CONF ARTIF INTE, P3218
   Chakraborty S, 2013, LECT NOTES COMPUT SC, V8124, P200, DOI 10.1007/978-3-642-40627-0_18
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Choi J, 2019, PROC INT CONF SOFTW, P736, DOI 10.1109/ICSE.2019.00082
   Cover Thomas M, 1999, Elements of information theory
   Diakonikolas I, 2016, Arxiv, DOI arXiv:1611.03579
   Dingning Yang, 2012, 2012 IEEE 11th International Conference on Trust, Security and Privacy in Computing and Communications (TrustCom), P1070, DOI 10.1109/TrustCom.2012.99
   Feldt R, 2016, IEEE INT CONF SOFTW, P223, DOI 10.1109/ICST.2016.33
   Fraser G., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P31, DOI 10.1109/QSIC.2011.19
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Gay G, 2017, IEEE INT CONF SOFTW, P345, DOI 10.1109/ICST.2017.38
   Gomes C.P., 2007, Advances in Neural Information Processing Systems 19, P481
   Google, 2019, GOOGL FUZZ TEST SUIT
   Harman M, 2004, IEEE T SOFTWARE ENG, V30, P3, DOI 10.1109/TSE.2004.1265732
   Helin A., 2006, RADAMSA FUZZER
   Hocevar S, 2011, ZZUF MULTI PURPOSE F
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Klees G, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2123, DOI 10.1145/3243734.3243804
   Krishnamoorthy S, 2010, ASIAN TEST SYMPOSIUM, P59, DOI 10.1109/ATS.2010.19
   Lemieux C, 2018, IEEE INT CONF AUTOM, P475, DOI 10.1145/3238147.3238176
   Li YK, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P533, DOI 10.1145/3338906.3338975
   Liang HL, 2019, INT C PROGRAM COMPRE, P249, DOI 10.1109/ICPC.2019.00044
   Marhuenda Y, 2005, STATISTICS-ABINGDON, V39, P315, DOI 10.1080/02331880500178562
   Masri Wes, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P165, DOI 10.1109/ICST.2010.22
   Masri W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559932
   Masri Wes., 2009, Proceedings of the 2Nd International Workshop on Defects in Large Software Systems: Held in Conjunction with the ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2009), DEFECTS '09, P1
   Matinnejad R, 2016, PROC INT CONF SOFTW, P595, DOI 10.1145/2884781.2884797
   Men ~endez H. D, 2021, OPEN J MACHINE LEARN, V1, P1
   Menendez H., 2020, IEEE T SOFTWARE ENG, DOI 10.1109/TSE.2020.2987377
   Menéndez HD, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447265
   Nilizadeh S, 2019, PROC INT CONF SOFTW, P176, DOI 10.1109/ICSE.2019.00034
   Pacheco Carlos, 2007, COMPANION 22 ACM SIG, P815, DOI DOI 10.1145/1297846.1297902
   Plazar Q, 2019, IEEE INT CONF SOFTW, P240, DOI 10.1109/ICST.2019.00032
   Poulding S, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1279, DOI 10.1145/2576768.2598339
   Rawat S, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23404
   Serebryany Kostya, 2015, LIBFUZZER LIBFUZZER
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Shi QK, 2016, IEEE T RELIAB, V65, P19, DOI 10.1109/TR.2015.2434953
   Smite D, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/ICGSE.2008.22
   Tao Guo, 2013, 2013 Second International Conference on Informatics & Applications (ICIA), P212, DOI 10.1109/ICoIA.2013.6650258
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang JJ, 2019, PROC INT CONF SOFTW, P724, DOI 10.1109/ICSE.2019.00081
   Wang XM, 2009, PROC INT CONF SOFTW, P45, DOI 10.1109/ICSE.2009.5070507
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   You W, 2019, PROC INT CONF SOFTW, P712, DOI 10.1109/ICSE.2019.00080
   Yun I, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P745
   Zalewski Michal, 2019, American fuzzy lop
   Zhao H, 2019, IEEE INT CONF SOFTW, P59, DOI 10.1109/ICST.2019.00016
NR 60
TC 3
Z9 3
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3540
EP 3553
DI 10.1109/TSE.2021.3100858
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500019
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hidellaarachchi, D
   Grundy, J
   Hoda, R
   Madampe, K
AF Hidellaarachchi, Dulaji
   Grundy, John
   Hoda, Rashina
   Madampe, Kashumi
TI The Effects of Human Aspects on the Requirements Engineering Process: A
   Systematic Literature Review
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Software; Systematics; Software engineering; Bibliographies;
   Stakeholders; Meteorology; Taxonomy; Systematic literature review; human
   aspects; human-centric issues; requirements engineering
ID SOFTWARE REQUIREMENTS
AB Requirements Engineering (RE) requires the collaboration of various roles in SE, such as requirements engineers, stakeholders and other developers, and it is thus a very highly human dependent process in software engineering (SE). Identifying how "human aspects" - such as personality, motivation, emotions, communication, gender, culture and geographic distribution - might impact on the RE process would assist us in better supporting successful RE. The main objective of this paper is to systematically review primary studies that have investigated the effects of various human aspects on the RE process. We wanted to identify if any critical human aspects have been found, and what might be the relationships between different human aspects impacting the RE process. A systematic literature review (SLR) was conducted and identified 474 initial primary research studies. These were eventually filtered down to 74 relevant, high-quality primary studies. No primary study to date was found to focus on identifying what are the most influential human aspects on the RE process. Among the studied human aspects, the effects of communication have been considered in many studies of RE. Other human aspects such as personality, motivation and gender have mainly been investigated to date in relation to more general SE studies that include RE as one phase. Findings show that studying more than one human aspect together is beneficial, as this reveals relationships between various human aspects and how they together impact the RE process. However, the majority of these studied combinations of human aspects are unique. From 56.8 percent of studies that identified the effects of human aspects on RE, 40.5 percent identified the positive impact, 30.9 percent negative, 26.2 percent identified both impacts whereas 2.3 percent mentioned that there was no impact. This implies that a variety of human aspects positively or negatively affects the RE process and a well-defined theoretical analysis on the effects of different human aspects on RE remains to be defined and practically evaluated. The findings of this SLR help researchers who are investigating the impact of various human aspects on the RE process by identifying well-studied research areas, and highlight new areas that should be focused on in future research.
C1 [Hidellaarachchi, Dulaji; Grundy, John; Hoda, Rashina; Madampe, Kashumi] Monash Univ, Fac IT, Melbourne, Vic 3800, Australia.
C3 Monash University
RP Grundy, J (corresponding author), Monash Univ, Fac IT, Melbourne, Vic 3800, Australia.
EM dulajidinupama@gmail.com; john.grundy@monash.edu; rashina@gmail.com;
   kashumi.madampe@monash.edu
RI Madampe, Kashumi/AAY-9008-2021; Grundy, John/I-6681-2012
OI Madampe, Kashumi/0000-0003-1363-8786; Hidellaarachchi,
   Dulaji/0000-0003-0217-5317; Grundy, John/0000-0003-4928-7076; Hoda,
   Rashina/0000-0001-5147-8096
FU Monash Faculty of IT PhD scholarships; ARC Laureate Fellowship
   [FL190100035]; ARC Discovery Project [DP200100020]
FX Hidellaarachchi and Madampe are supported by Monash Faculty of IT PhD
   scholarships. Grundy is supported by ARC Laureate Fellowship FL190100035
   and this work is also partially supported by ARC Discovery Project
   DP200100020.
CR Achimugu P, 2014, INFORM SOFTWARE TECH, V56, P568, DOI 10.1016/j.infsof.2014.02.001
   Aldave A, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.110396
   Ali Zahid, 2019, INT J COMPUTER SCI E, V8, P108
   [Anonymous], 2015, 40 YEARS RES PERSONA, V46
   [Anonymous], 2004, PROCEDURES PERFORMIN
   Anu V, 2018, INFORM SOFTWARE TECH, V103, P112, DOI 10.1016/j.infsof.2018.06.011
   Anu V, 2017, LECT NOTES COMPUT SC, V10153, P370, DOI 10.1007/978-3-319-54045-0_26
   Anwar F, 2011, COMM COM INF SC, V181, P600
   Askarinejadamiri Z, 2016, 2016 SECOND INTERNATIONAL CONFERENCE ON WEB RESEARCH (ICWR), P183, DOI 10.1109/ICWR.2016.7498465
   Barroso Anderson S., 2017, ICEIS 2017. Proceedings of the 19th International Conference on Enterprise Information Systems, P53
   Capretz L. F, 2010, WHY WE NEED PERSONAL, V35
   Capretz LF, 2014, IEEE SOFTWARE, V31, P104
   Cesar A., 2014, 2014 ACM IEEE INT S, DOI [DOI 10.1145/2652524.2652545, 10., 10.1145/2652524.2652545]
   Chakraborty A., 2012, Journal of emerging trends in computing and information sciences, V3, P723
   Cheng BHC, 2009, LECT NOTES BUS INF P, V14, P11
   Colomo-Palacios R, 2019, PROC 4 INT WORKSHOP, P23
   Davis CJ, 2006, J COMPUT INFORM SYST, V46, P78, DOI 10.1080/08874417.2006.11645926
   de Ribaupierre H, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON GENDER EQUALITY IN SOFTWARE ENGINEERING (GE 2018), P10, DOI 10.1145/3195570.3195579
   Deak A, 2016, CHALLENGES STRATEGIE, V73
   Feldt R., 2008, INT WORKSHOP COOPERA, P49, DOI DOI 10.1145/1370114.1370127
   Gregoriades A, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P154
   Hall T., 2009, SYSTEMATIC REV THEOR, V18
   Hazzan O, 2004, LECT NOTES COMPUT SC, V3092, P303
   Iriarte C., 2017, 6 INT C SOFTW PROC I, P147, DOI [10.1007/978-3-319-69341-5_14, DOI 10.1007/978]
   John M., 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083000, DOI 10.1145/1082983.1083000]
   Khan AA, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2242
   Kitchenham B., 2007, 2007001 EBSE
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Matturro G, 2019, J UNIVERS COMPUT SCI, V25, P16
   Mohanani R, 2020, IEEE T SOFTWARE ENG, V46, P1318, DOI 10.1109/TSE.2018.2877759
   MORGAN BB, 1993, J GEN PSYCHOL, V120, P277, DOI 10.1080/00221309.1993.9711148
   Murphy G.C., 2010, P FSE SDP WORKSH FUT, P251, DOI DOI 10.1145/1882362.1882414
   Pandey D., 2012, INT J RES DEV A MANA, V1, P2319
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Pirzadeh L., 2010, THESIS CHALMERS U TE, P368
   Reason J., 1991, HUMAN ERROR
   Sach R., 2010, P ACM IEEE INT S EMP
   Saiedian H, 2000, INFORM SOFTWARE TECH, V42, P419, DOI 10.1016/S0950-5849(99)00101-9
   Schwartz SH, 2012, J PERS SOC PSYCHOL, V103, P663, DOI 10.1037/a0029393
   Shah H., 2012, P 4 INT C INT COLL, P77
   Shelby LB, 2008, LEISURE SCI, V30, P96, DOI 10.1080/01490400701881366
   Siddiqi J, 1996, IEEE SOFTWARE, V13, P15, DOI 10.1109/MS.1996.506458
   Soomro A. B., 2016, EFFECT SOFTWARE ENG, V73
   Unkelos-Shpigel N, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P69, DOI 10.1145/3195836.3195843
   Viller S, 1999, INTERACT COMPUT, V11, P665, DOI 10.1016/S0953-5438(98)00049-6
   Wick C. T., 1999, IMPORTANCE TEAM SKIL
   Winter E, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2019), P19, DOI 10.1109/CHASE.2019.00012
   Winter E, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267427
   Yaseen M, 2015, 2015 INTERNATIONAL CONFERENCE ON OPEN SOURCE SYSTEMS & TECHNOLOGIES (ICOSST), P120, DOI 10.1109/ICOSST.2015.7396413
NR 49
TC 16
Z9 16
U1 2
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2022
VL 48
IS 6
BP 2105
EP 2127
DI 10.1109/TSE.2021.3051898
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2D5IM
UT WOS:000811580600017
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sarro, F
   Moussa, R
   Petrozziello, A
   Harman, M
AF Sarro, Federica
   Moussa, Rebecca
   Petrozziello, Alessio
   Harman, Mark
TI Learning From Mistakes: Machine Learning Enhanced Human Expert Effort
   Estimates
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Predictive models; Companies; Software engineering; Estimation
   error; Task analysis; Software measurement; Software effort estimation;
   estimate errors; human expert estimates; human bias; human-competitive
   results
ID DEVELOPMENT EFFORT PREDICTION; SOFTWARE; MODELS; CONFIDENCE; ACCURACY;
   JUDGMENT; SYSTEMS; ERROR
AB In this paper, we introduce a novel approach to predictive modeling for software engineering, named Learning From Mistakes (LFM). The core idea underlying our proposal is to automatically learn from past estimation errors made by human experts, in order to predict the characteristics of their future misestimates, therefore resulting in improved future estimates. We show the feasibility of LFM by investigating whether it is possible to predict the type, severity and magnitude of errors made by human experts when estimating the development effort of software projects, and whether it is possible to use these predictions to enhance future estimations. To this end we conduct a thorough empirical study investigating 402 maintenance and new development industrial software projects. The results of our study reveal that the type, severity and magnitude of errors are all, indeed, predictable. Moreover, we find that by exploiting these predictions, we can obtain significantly better estimates than those provided by random guessing, human experts and traditional machine learners in 31 out of the 36 cases considered (86 percent), with large and very large effect sizes in the majority of these cases (81 percent). This empirical evidence opens the door to the development of techniques that use the power of machine learning, coupled with the observation that human errors are predictable, to support engineers in estimation tasks rather than replacing them with machine-provided estimates.
C1 [Sarro, Federica; Moussa, Rebecca; Petrozziello, Alessio; Harman, Mark] UCL, Dept Comp Sci, London WC1E 6BT, England.
C3 University of London; University College London
RP Sarro, F (corresponding author), UCL, Dept Comp Sci, London WC1E 6BT, England.
EM f.sarro@ucl.ac.uk; rebecca.moussa.18@ucl.ac.uk;
   a.petrozziello@ucl.ac.uk; mark.harman@ucl.ac.uk
OI Sarro, Federica/0000-0002-9146-442X; Moussa, Rebecca/0000-0001-9123-6008
FU ERC Advanced fellowship grant EPIC [741278]; European Research Council
   (ERC) [741278] Funding Source: European Research Council (ERC)
FX This work was supported by the ERC Advanced fellowship grant EPIC
   (741278). The authors would like to thank Barbara Kitchenham, Magne
   Jorgensen, and Stephen G. MacDonell for providing part of the data used
   in this study.
CR Abrahao S, 2018, INFORM SOFTWARE TECH, V104, P144, DOI 10.1016/j.infsof.2018.07.012
   Abran A., 2015, THECOSMIC FUNCTIONAL
   Akbarinasaji S, 2018, J SYST SOFTWARE, V136, P173, DOI 10.1016/j.jss.2017.02.021
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Aly M., 2005, NEURAL NETWORKS, P1
   [Anonymous], 2009, P 5 INT C PRED MOD S
   [Anonymous], 2002, Encyclopedia of Software Engineering, DOI DOI 10.1002/0471028959.SOF282
   [Anonymous], PATTERN RECOGN, DOI DOI 10.1016/J.PATCOG.2017.10.013
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L., 2017, Classification and Regression Trees, DOI [10.1201/9781315139470-8, DOI 10.1201/9781315139470-8, DOI 10.1201/9781315139470]
   Briand L. C., 2002, Encyclopedia of software engineering, P1160, DOI DOI 10.1002/0471028959.SOF282
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P963, DOI 10.1109/32.965338
   Choetkiertikul M, 2019, IEEE T SOFTWARE ENG, V45, P637, DOI 10.1109/TSE.2018.2792473
   Cohen J., 1988, STAT POWER ANAL BEHA
   Connolly T, 1997, MANAGE SCI, V43, P1029, DOI 10.1287/mnsc.43.7.1029
   Corazza A, 2013, EMPIR SOFTW ENG, V18, P506, DOI 10.1007/s10664-011-9187-3
   Corazza A., 2010, Proceedings of the 6th International Conference on Predictive Models in Software Engineering, p4:1, DOI [10.1145/1868328.1868335, DOI 10.1145/1868328.1868335]
   COVER TM, 1967, IEEE T INFORM THEORY, V13, P21, DOI 10.1109/TIT.1967.1053964
   de Freitas M, 2015, IEEE T ENG MANAGE, V62, P495, DOI 10.1109/TEM.2015.2453354
   De Marco L., 2012, 2012 3rd International Workshop on Emerging Trends in Software Metrics (WETSoM), P21, DOI 10.1109/WETSoM.2012.6226988
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Di Martino S, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2020.106308
   Di Martino S, 2016, INFORM SOFTWARE TECH, V72, P90, DOI 10.1016/j.infsof.2015.12.001
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Fernández-Diego M, 2014, INFORM SOFTWARE TECH, V56, P527, DOI 10.1016/j.infsof.2014.01.003
   Ferrucci F, 2010, EUROMICRO CONF PROC, P350, DOI 10.1109/SEAA.2010.59
   Ferrucci F., 2014, Softw. Proj. Manag. Chang. World, P373
   Ferrucci F, 2015, LECT NOTES COMPUT SC, V9459, P271, DOI 10.1007/978-3-319-26844-6_20
   Ferrucci F, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P365, DOI 10.1109/SEAA.2015.23
   Ferrucci F, 2014, EUROMICRO CONF PROC, P293, DOI 10.1109/SEAA.2014.76
   Ferrucci F, 2009, LECT NOTES COMPUT SC, V5891, P307, DOI 10.1007/978-3-642-05415-0_22
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Friedman M, 1937, J AM STAT ASSOC, V32, P675, DOI 10.2307/2279372
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Gencel C, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363106
   Gencel C, 2008, LECT NOTES COMPUT SC, V5338, P196
   Gray A. R., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P216, DOI 10.1109/METRIC.1999.809743
   Gruschke TM, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/13487689.13487693
   Hand DJ, 2001, MACH LEARN, V45, P171, DOI 10.1023/A:1010920819831
   Hollingworth H. L., 1910, J PHILOS PSYCHOL SCI, V7, P461, DOI DOI 10.2307/2012819
   Idri A, 2016, J SYST SOFTWARE, V118, P151, DOI 10.1016/j.jss.2016.05.016
   ISBSG, 2019, INT SOFTW BENCHM STA
   Jimenez M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P695, DOI 10.1145/3338906.3338941
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P993, DOI 10.1109/TSE.2004.103
   Jorgensen M, 2004, EMPIR SOFTW ENG, V9, P297, DOI 10.1023/B:EMSE.0000039881.57613.cb
   Jorgensen Magne, 2014, Lecture Notes on Software Engineering, V2, P327, DOI 10.7763/LNSE.2014.V2.144
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P209, DOI 10.1109/TSE.2004.1274041
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P79, DOI 10.1016/S0164-1212(02)00160-7
   Jorgensen M, 2003, INFORM SOFTWARE TECH, V45, P123, DOI 10.1016/S0950-5849(02)00188-X
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M., 2002, P 14 INT C SOFTW ENG, P425
   Jorgensen M, 2007, INT J FORECASTING, V23, P449, DOI 10.1016/j.ijforecast.2007.05.008
   Jorgensen M, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110448
   Jorgensen M, 2018, INT WORKSH EMPIR ENG, P19, DOI 10.1109/IWESEP.2018.00012
   Jorgensen M, 2012, IEEE T SOFTWARE ENG, V38, P677, DOI 10.1109/TSE.2011.40
   Kahneman D, 1982, JUDGMENT UNCERTAINTY, DOI DOI 10.1097/00001888-199907000-00012
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kocaguneli E, 2015, EMPIR SOFTW ENG, V20, P813, DOI 10.1007/s10664-014-9300-5
   Kocaguneli E, 2013, J SYST SOFTWARE, V86, P1879, DOI 10.1016/j.jss.2013.02.053
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Kultur Y., 2008, SIGSOFT '08/FSE-16: Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering, P330
   Langdon WB, 2016, INFORM SOFTWARE TECH, V73, P16, DOI 10.1016/j.infsof.2016.01.003
   LANGLEY P, 1992, AAAI-92 PROCEEDINGS : TENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, P223
   LEDERER AL, 1995, J SYST SOFTWARE, V31, P125, DOI 10.1016/0164-1212(94)00092-2
   MacDonell SG, 2003, J SYST SOFTWARE, V66, P91, DOI 10.1016/S0164-1212(02)00067-5
   Marín B, 2010, DATA KNOWL ENG, V69, P472, DOI 10.1016/j.datak.2010.01.001
   McConnell S., 2006, Software Estimation: Demystifying the Black Art
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   Mendi Engin, 2014, 2014 IEEE International Symposium on Medical Measurements and Applications (MeMeA), P1, DOI 10.1109/MeMeA.2014.6860020
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Minku L, 2015, INT SYMP EMP SOFTWAR, P172, DOI 10.1109/ESEM.2015.7321199
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   Nash JC, 2000, COMPUT SCI ENG, V2, P29, DOI 10.1109/5992.814654
   NEMENYI P, 1962, BIOMETRICS, V18, P263
   PRAAGMAN J, 1985, EUR J OPER RES, V19, P144, DOI 10.1016/0377-2217(85)90321-2
   Rosenthal JA, 1996, J SOC SERV RES, V21, P37, DOI 10.1300/J079v21n04_02
   Rosenthal R., 1994, The handbook of research synthesis, P231, DOI DOI 10.7758/9781610441377
   Roy MM, 2008, J EXP PSYCHOL-APPL, V14, P266, DOI 10.1037/1076-898X.14.3.266
   Roy MM, 2007, MEM COGNITION, V35, P557, DOI 10.3758/BF03193294
   Sarro F, 2019, LECT NOTES COMPUT SC, V11664, P3, DOI 10.1007/978-3-030-27455-9_1
   Sarro F, 2018, INT REQUIR ENG CONF, P76, DOI 10.1109/RE.2018.00018
   Sarro F, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3234940
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Sigweni B, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916005
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Teigen KH, 2005, APPL COGNITIVE PSYCH, V19, P455, DOI 10.1002/acp.1085
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Trendowicz A., 2014, SOFTWARE PROJECT EFF, P277
   Usman M., 2015, P 19 INT C EVALUATIO, P1, DOI DOI 10.1145/2745802.2745813
   Van Heeringen Harold, 2014, 2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement. (IWSM-MENSURA). Proceedings, P11, DOI 10.1109/IWSM.Mensura.2014.8
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   Whigham PA, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2738037
   Witten I. H., 2005, DATA MINING PRACTICA
   ZIONTS S, 1968, NAV RES LOGIST Q, V15, P449
NR 102
TC 5
Z9 5
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2022
VL 48
IS 6
BP 1868
EP 1882
DI 10.1109/TSE.2020.3040793
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2D5IM
UT WOS:000811580600003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sousa, TB
   Ferreira, HS
   Correia, FF
AF Sousa, Tiago Boldt
   Ferreira, Hugo Sereno
   Correia, Filipe Figueiredo
TI A Survey on the Adoption of Patterns for Engineering Software for the
   Cloud
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cloud computing; Software; Companies; Monitoring; Industries;
   Containers; Scalability; Cloud-computing; patterns; pattern adoption;
   software architecture; microservices; community survey
AB This work takes as a starting point a collection of patterns for engineering software for the cloud and tries to find how they are regarded and adopted by professionals. Existing literature assesses the adoption of cloud computing with a focus on business and technological aspects and falls short in grasping a holistic view of the underlying approaches. Other authors delve into how independent patterns can be discovered (mined) and verified, but do not provide insights on their adoption. We investigate (1) the relevance of the patterns for professional software developers, (2) the extent to which product and company characteristics influence their adoption, and (3) how adopting some patterns might correlate with the likelihood of adopting others. For this purpose, we survey practitioners using an online questionnaire (n = 102). Among other findings, we conclude that most companies use these patterns, with the overwhelming majority (97 percent) using at least one. We observe that the mean pattern adoption tends to increase as companies mature, namely when varying the product operation complexity, active monthly users, and company size. Finally, we search for correlations in the adoption of specific patterns and attempt to infer causation, providing further clues on how some practices depend or influence the adoption of others. We conclude that the adoption of some practices correlates with specific company and product characteristics, and find relationships between the patterns that were not covered by the original pattern language and which might deserve further investigation.
C1 [Sousa, Tiago Boldt; Ferreira, Hugo Sereno; Correia, Filipe Figueiredo] Univ Porto, Fac Engn, P-4099002 Porto, Portugal.
   [Ferreira, Hugo Sereno; Correia, Filipe Figueiredo] INESC TEC, Porto, Portugal.
C3 Universidade do Porto; INESC TEC
RP Sousa, TB (corresponding author), Univ Porto, Fac Engn, P-4099002 Porto, Portugal.
EM tbs@fe.up.pt; hugo.sereno@fe.up.pt; filipe.correia@fe.up.pt
RI Ferreira, Hugo Sereno/W-3035-2018; Correia, Filipe/A-4727-2009
OI Ferreira, Hugo Sereno/0000-0002-4963-3525; Boldt Sousa,
   Tiago/0000-0002-8842-6713; Correia, Filipe/0000-0002-6653-1598
FU Portuguese funding agency, FCT-Fundacao para a Ciencia e a Tecnologia
   [UIDB/50014/2020]
FX The authors would like to thank Mafalda Falcao Ferreira, Henrique
   Ferrolho, and Tiago Almeida for reviewing this work and their valuable
   feedback. This work is financed by National Funds through the Portuguese
   funding agency, FCT-Fundacao para a Ciencia e a Tecnologia within
   project UIDB/50014/2020.
CR Alexander C., 2002, NATURE ORDER BOOK 2
   Alexander C., 1979, The Timeless Way of Building
   Alexander C., 1977, PATTERN LANGUAGE TOW
   Alhabash S, 2017, SOC MEDIA SOC, V3, DOI 10.1177/2056305117691544
   [Anonymous], 2011, INT STAT REV, DOI DOI 10.1111/J.1751-5823.2011.00149_16.X
   [Anonymous], 2017, User guide to the SME definition, DOI DOI 10.2873/620234
   [Anonymous], 2018, KEY FIGURES EUROPE S
   Baltes S, 2020, ARXIV200207764V3
   Binx.io, 2019, CLOUD SURV 2019, P20
   Brikman Y, 2019, TERRAFORM RUNNING
   Bruce M., 2019, Microservices in Action
   Callegaro M., 2015, Web Survey Methodology, DOI DOI 10.4135/9781529799651
   Cito J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P393, DOI 10.1145/2786805.2786826
   Couper MP, 2000, PUBLIC OPIN QUART, V64, P464, DOI 10.1086/318641
   Cycligent, 2015, CONTINUOUS DELIVERY
   Denodo, 2019, DEN GLOB CLOUD SURV, P15
   Erl T., 2019, CLOUD COMPUTING CONC, V51
   Erl Thomas., 2015, Cloud computing design patterns
   Falkenthal M., 2018, PURSUIT PATTERN LANG, V3, P131
   Fehling C., 2014, Cloud Computing Patterns: Fundamentals to Design, Build, and Manage Cloud Applications, DOI DOI 10.1007/978-3-7091-1568-8
   Flores N., 2012, THESIS U PORTO PORTU
   Garfinkel S., 2007, EVALUATION AMAZONS G, P1
   Huber M, 2013, P 1 ACM C ONL SOC NE, P143, DOI DOI 10.1145/2512938.2512942
   Iba T., 2012, HILLSIDENET, P1
   Kohls C., 2010, PROC 16 C PATTERN LA
   Kong, 2020, 2020 DIG INN BENCHM, P18
   Manfreda K.L., 2002, J COMPUTER MEDIATED, V7
   Microsoft, 2017, HLTH ENDP MON PATT
   Microsoft, 2019, CLOUD DESIGN PATTERN
   Morris K., 2015, INFRASTRUCTURE CODE
   Namiot D., 2014, International Journal of Open Information Technologies, V2, P24
   O'Grady NP, 2002, CLIN INFECT DIS, V35, P1281, DOI 10.1086/502007
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   Richardson C., 2017, A pattern language for microservices
   Riehle D., 2020, CS202001 FRIEDR AL U
   RightScale, 2019, RIGHTSC 2019 STAT CL
   Rolland C, 2000, LECT NOTES COMPUT SC, V1789, P176
   Salingaros N.A., 2000, ARQ-ARCHIT RES Q, V4, P149, DOI [https://doi.org/10.1017/S1359135500002591, DOI 10.1017/S1359135500002591]
   Sasabe A., 2016, 23 C PATT LANG PROGR, P1
   Sousa T. B., 2015, P 22 C PATT LANG PRO, P17
   Sousa T. B., 2018, PROC 23 EUR C PATTER
   Sousa T. B., 2018, PROC 23 EUR C PATTER
   Sousa T. B., 2021, **DATA OBJECT**, DOI [10.5281/zenodo.4415778, DOI 10.5281/ZENODO.4415778]
   Sousa TB, 2017, PROCEEDINGS OF THE 22ND EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS (EUROPLOP 2017), DOI 10.1145/3147704.3147720
   Sousa Tiago Boldt., 2016, Proceedings of the 11th Latin-American Conference on Pattern Languages of Programming, P1
   Todd E., 2004, Proceedings of the fifth conference on Australasian user interface, P91
   Verma T., 1993, R191 UCLA COGN SYST
   Wilder B., 2012, Cloud Architecture Patterns
NR 48
TC 7
Z9 12
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2022
VL 48
IS 6
BP 2128
EP 2140
DI 10.1109/TSE.2021.3052177
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2D5IM
UT WOS:000811580600018
DA 2024-07-18
ER

PT J
AU Mercan, H
   Javeed, A
   Yilmaz, C
AF Mercan, Hanefi
   Javeed, Arsalan
   Yilmaz, Cemal
TI Flexible Combinatorial Interaction Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Standards; Software; Computational modeling; Computers;
   Electronic mail; Tools; Combinatorial interaction testing; covering
   arrays; sequence covering arrays; constraint solving; structural
   coverage; coverage criteria
ID COVERING ARRAYS; MODEL; GENERATION; INFERENCE; COVERAGE
AB We present Flexible Combinatorial Interaction Testing (F-CIT), which aims to improve the flexibility of combinatorial interaction testing (CIT) by eliminating the necessity of developing specialized constructors for CIT problems that cannot be efficiently and effectively addressed by the existing CIT constructors. F-CIT expresses the entities to be covered and the space of valid test cases, from which the samples are drawn to obtain full coverage, as constraints. Computing an F-CIT object (i.e., a set of test cases obtaining full coverage under a given coverage criterion) then turns into an interesting constraint solving problem, which we call cov-CSP. cov-CSP aims to divide the constraints, each representing an entity to be covered, into a minimum number of satisfiable clusters, such that a solution for a cluster represents a test case and the collection of all the test cases generated (one per cluster) constitutes an F-CIT object, covering each required entity at least once. To solve the cov-CSP problem, thus to compute F-CIT objects, we first present two constructors. One of these constructors attempts to cover as many entities as possible in a cluster before generating a test case, whereas the other constructor generates a test case first and then marks all the entities accommodated by this test case as covered. We then use these constructors to evaluate F-CIT in three studies, each of which addresses a different CIT problem. In the first study, we develop structure-based F-CIT objects to obtain decision coverage-adequate test suites. In the second study, we develop order-based F-CIT objects, which enhance a number of existing order-based coverage criteria by taking the reachability constraints imposed by graph-based models directly into account when computing interaction test suites. In the third study, we develop usage-based F-CIT objects to address the scenarios, in which standard covering arrays are not desirable due to their sizes, by choosing the entities to be covered based on their usage statistics collected from the field. We also carry out user studies to further evaluate F-CIT. The results of these studies suggest that F-CIT is more flexible than the existing CIT approaches.
C1 [Mercan, Hanefi; Javeed, Arsalan; Yilmaz, Cemal] Sabanci Univ, Fac Engn & Nat Sci, TR-34956 Istanbul, Turkey.
C3 Sabanci University
RP Yilmaz, C (corresponding author), Sabanci Univ, Fac Engn & Nat Sci, TR-34956 Istanbul, Turkey.
EM hanefimercan@sabanciuniv.edu; ajaveed@sabanciuniv.edu;
   cyilmaz@sabanciuniv.edu
RI Javeed, Arsalan/IZE-6482-2023
OI Javeed, Arsalan/0000-0002-8970-6178; Mercan, Hanefi/0000-0002-9171-082X
FU Scientific and Technological Research Council of Turkey [118E204]
FX This research was supported by the Scientific and Technological Research
   Council of Turkey (118E204).
CR Ahlswede R, 2000, IEEE T INFORM THEORY, V46, P1204, DOI 10.1109/18.850663
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   [Anonymous], 2014, APACHE ACTIVEMQ
   [Anonymous], 2018, SATisPy
   [Anonymous], 2018, RADON
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Bazaraa M. S., 2011, LINEAR PROGRAMMING N
   Belli F., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P212, DOI 10.1109/ICSTW.2011.59
   Biere A, 2003, ADV COMPUT, V58, P117
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Bruening D. L., 1999, THESIS MIT CAMBRIDGE
   Bryce RC, 2006, INFORM SOFTWARE TECH, V48, P960, DOI 10.1016/j.infsof.2006.03.004
   Bryce RC, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1082
   Cai X., 2005, Proceedings of the 1st International Workshop on Advances in Model-based Testing, P1, DOI DOI 10.1145/1083274.1083288
   Calpur M. C, 2012, THESIS SABANCI U IST
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen M.B., 2007, P 2007 INT S SOFTW T, P129
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Cohen MB, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P413
   Colbourn C.J., 2004, Le Matematiche, VLIX, P125
   Czerwonka J., 2008, Pairwise testing in the real world: Practical extensions to test-case sce- narios
   Danziger P, 2009, THEOR COMPUT SCI, V410, P5403, DOI 10.1016/j.tcs.2009.07.057
   de Moura L, 2009, LECT NOTES COMPUT SC, V5902, P23, DOI 10.1007/978-3-642-10452-7_3
   Demiroz G., 2012, P 4 INT C ADV SYST T, P9
   Dumlu Emine., 2011, P 2011 INT S SOFTWAR, P243
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Eiter T, 2009, LECT NOTES COMPUT SC, V5689, P40, DOI 10.1007/978-3-642-03754-2_2
   Fouché S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P177
   Galinier P, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'17), P1288, DOI 10.1145/3071178.3071324
   Hopcroft J. E., 2013, Introduction to automata theory, languages, and computation
   Huang RB, 2012, P INT COMP SOFTW APP, P52, DOI 10.1109/COMPSAC.2012.15
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Javeed A., 2015, THESIS SABANCI U IST
   Javeed A., 2015, P IEEE 8 INT C SOFTW, P1
   Jenkins B., 2005, JENNY PAIRWISE TESTI
   Jia Y, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P540, DOI 10.1109/ICSE.2015.71
   Johansen Martin Fagereng, 2012, P 16 INT SOFTWARE PR, P46, DOI [10.1145/2362536.2362547, DOI 10.1145/2362536.2362547]
   Jonas M., 2006, HSIKITR06001 U SKOV
   Katebi H, 2011, LECT NOTES COMPUT SC, V6695, P343
   Kobayashi N., 2002, THESIS OSAKA U OSAKA
   Kuhn D. R., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P601, DOI 10.1109/ICST.2012.147
   Kuhn DR, 2006, 30TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P153
   Kuhn Rick, 2008, IT Professional, V10, P19, DOI 10.1109/MITP.2008.54
   Lawrence J, 2011, ELECTRON J COMB, V18
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Lei Y, 2007, SOFTW TEST VERIF REL, V17, P207, DOI 10.1002/stvr.369
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Lombardy S, 2004, THEOR COMPUT SCI, V328, P77, DOI 10.1016/j.tcs.2004.07.007
   Lu Shan., 2007, P 6 JOINT M EUROPEAN, P533
   Makas M., 2016, LOGIC LOGICAL PHILOS, V26, P63
   Maltais E, 2011, THEOR COMPUT SCI, V412, P6517, DOI 10.1016/j.tcs.2011.07.010
   Memon AM, 2007, SOFTW TEST VERIF REL, V17, P137, DOI 10.1002/stvr.364
   Mercan H., 2016, P 7 WORKSH CONSTR SL, P24
   Mirzaei N, 2016, PROC INT CONF SOFTW, P559, DOI 10.1145/2884781.2884853
   Musuvathi Madan, 2007, Technical Report MSR-TR-2007-149
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   RESCHER N, 1970, THEOR DECIS, V1, P179, DOI 10.1007/BF00154005
   Samuel P, 2008, PROCEEDINGS OF NINTH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING, P879, DOI 10.1109/SNPD.2008.100
   SCHOTCH PK, 1980, J PHILOS LOGIC, V9, P327, DOI 10.1007/BF00248398
   Schroeder PJ, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P49
   Schroeder PJ, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P139, DOI 10.1109/ASE.2002.1115005
   Tamura N., 2008, P 2 INT CSP SOLV COM, P65
   Torres-Jimenez J, 2012, INFORM SCIENCES, V185, P137, DOI 10.1016/j.ins.2011.09.020
   Williams AW, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P246, DOI 10.1109/ISSRE.1996.558835
   Wu HY, 2015, IEEE T EVOLUT COMPUT, V19, P575, DOI 10.1109/TEVC.2014.2362532
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Yilmaz C, 2014, IEEE T SOFTWARE ENG, V40, P43, DOI 10.1109/TSE.2013.53
   Yilmaz C, 2014, COMPUTER, V47, P37, DOI 10.1109/MC.2013.408
   Yilmaz C, 2013, IEEE T SOFTWARE ENG, V39, P684, DOI 10.1109/TSE.2012.65
   Yu LB, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P370, DOI 10.1109/ICST.2013.52
   Yuen TY, 2006, J SYST SOFTWARE, V79, P577, DOI 10.1016/j.jss.2005.05.030
   Yuan X, 2011, IEEE T SOFTWARE ENG, V37, P559, DOI 10.1109/TSE.2010.50
   Ziyuan Wang, 2013, Journal of Software, V8, P3173, DOI 10.4304/jsw.8.12.3173-3181
NR 74
TC 5
Z9 5
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2022
VL 48
IS 3
BP 1030
EP 1066
DI 10.1109/TSE.2020.3010317
PG 37
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZU6ZO
UT WOS:000769989900018
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Reinhartz-Berger, I
   Zamansky, A
AF Reinhartz-Berger, Iris
   Zamansky, Anna
TI Reuse of Similarly Behaving Software Through Polymorphism-Inspired
   Variability Mechanisms
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cloning; Software; Measurement; Software product lines; Java; Object
   oriented modeling; Tools; Variability; reuse; code clones; polymorphism;
   software product line engineering
ID CLONE DETECTION
AB In many cases, software artifacts share similarity across projects and development teams. However, often this similarity is only partially reflected on the level of design and implementation, and therefore the possibilities for its detection are limited in current variability analysis, clone detection, and application search approaches. In this paper, we propose a method for identification and comparison of similarly behaving software. The method, supported by a prototype tool, analyzes the behavioral similarity of object-oriented code artifacts based on shallow (behavior interface) and deep (behavior transformation) descriptions of the exhibited operations. It further recommends on suitable mechanisms inspired by the notion of polymorphism in order to guide and support current and future reuse. The approach was evaluated on two data-sets, obtained following two different scenarios: clone-and-own and independent development by different teams.
C1 [Reinhartz-Berger, Iris; Zamansky, Anna] Univ Haifa, Dept Informat Syst, IL-31905 Haifa, Israel.
C3 University of Haifa
RP Reinhartz-Berger, I (corresponding author), Univ Haifa, Dept Informat Syst, IL-31905 Haifa, Israel.
EM iris@is.haifa.ac.il; annazam@is.haifa.ac.il
OI Zamansky, Anna/0000-0001-8350-4068
FU ISRAEL SCIENCE FOUNDATION [550/19]
FX We would like to thank Sameh Abbas for his help in VarMeR development
   and evaluation. The second author was supported by the ISRAEL SCIENCE
   FOUNDATION (under grant agreement 550/19).
CR [Anonymous], 2016, Feature-Oriented Software Product Lines
   Assunçao WKG, 2017, EMPIR SOFTW ENG, V22, P2972, DOI 10.1007/s10664-017-9499-z
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Berger Thorsten, 2013, 7 INT WORKSH VAR MOD, DOI DOI 10.1145/2430502.2430513
   Bosch J., 2000, Software Architectures for Product Families. International Workshop IW-SAPF-3. Proceedings (Lecture Notes in Computer Science Vol.1951), P117
   Bunge M., 1977, Treatise on Basic Philosophy Volume 3. Ontology I: The Furniture of the World., V3
   CARDELLI L, 1985, COMPUT SURV, V17, P471, DOI 10.1145/6041.6042
   Chen N, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P305, DOI 10.1145/2684822.2685305
   Deissenboeck F, 2012, EUR CON SFTWR MTNCE, P297, DOI 10.1109/CSMR.2012.38
   Dijkman R, 2011, INFORM SYST, V36, P498, DOI 10.1016/j.is.2010.09.006
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P321, DOI 10.1145/1368088.1368132
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Hjaltason GR, 2003, ACM T DATABASE SYST, V28, P517, DOI 10.1145/958942.958948
   Itzik N, 2016, IEEE T SOFTWARE ENG, V42, P687, DOI 10.1109/TSE.2015.2512599
   Jiang LX, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P81
   Juergens E, 2010, EUR CON SFTWR MTNCE, P78, DOI 10.1109/CSMR.2010.33
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Krüger J, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P251, DOI 10.1145/3233027.3236403
   Kunze M., 2011, SERVICES IHRE KOMPOS
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   Lee J., 2013, IEEE T NEURAL NETWOR, V24, P1
   Lehmann D, 2001, J SYMBOLIC LOGIC, V66, P295, DOI 10.2307/2694923
   Martinez Jabier, 2015, P 19 INT C SOFTW PRO, P101, DOI DOI 10.1145/2791060.2791086
   McMillan C, 2012, PROC INT CONF SOFTW, P848, DOI 10.1109/ICSE.2012.6227134
   Mendling J., 2007, WORKSH EV DRIV CHAIN, p[39, 52]
   Mihalcea R., 2006, P 21 NAT C ART INT, V6, P775
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Park HS, 2009, EXPERT SYST APPL, V36, P3336, DOI 10.1016/j.eswa.2008.01.039
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Rahm E, 2001, VLDB J, V10, P334, DOI 10.1007/s007780100057
   RAND WM, 1971, J AM STAT ASSOC, V66, P846, DOI 10.2307/2284239
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   Reinhartz-Berger I., 2019, P MOD EV WORKSH COL
   Reinhartz-Berger I., 2017, CAiSE-Forum-DC, P57
   REINHARTZBERGER I, 2011, P 30 INT C CONC MOD, V6998, P275
   REINHARTZBERGER I, 2016, P 35 INT C CONC MOD, P98
   REINHARTZBERGER I, 2015, P 34 INT C CONC MOD, V9381, P399
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Shu G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P408, DOI 10.1109/ICST.2013.57
   Smith F, 2014, COMPUT IND, V65, P1253, DOI 10.1016/j.compind.2014.07.009
   Steinley D, 2004, PSYCHOL METHODS, V9, P386, DOI 10.1037/1082-989X.9.3.386
   Strachey C., 2000, Higher-Order and Symbolic Computation, V13, P11, DOI 10.1023/A:1010000313106
   Su FH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P702, DOI 10.1145/2950290.2950321
NR 44
TC 4
Z9 5
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2022
VL 48
IS 3
BP 773
EP 785
DI 10.1109/TSE.2020.3001512
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZU6ZO
UT WOS:000769989900003
DA 2024-07-18
ER

PT J
AU Mahadewa, K
   Wang, KL
   Bai, GD
   Shi, L
   Liu, Y
   Dong, JS
   Liang, ZK
AF Mahadewa, Kulani
   Wang, Kailong
   Bai, Guangdong
   Shi, Ling
   Liu, Yan
   Dong, Jin Song
   Liang, Zhenkai
TI Scrutinizing Implementations of Smart Home Integrations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Network security; Smart homes; Zigbee; Protocols; Authentication; Java;
   Wireless fidelity; Internet of Things; IoT security; smart home;
   specification extraction; program analysis
ID SECURITY
AB A key feature of the booming smart home is the integration of a wide assortment of technologies, including various standards, proprietary communication protocols and heterogeneous platforms. Due to customization, unsatisfied assumptions and incompatibility in the integration, critical security vulnerabilities are likely to be introduced by the integration. Hence, this work addresses the security problems in smart home systems from an integration perspective, as a complement to numerous studies that focus on the analysis of individual techniques. We propose HomeScan, an approach that examines the security of the implementations of smart home systems. It extracts the abstract specification of application-layer protocols and internal behaviors of entities, so that it is able to conduct an end-to-end security analysis against various attack models. Applying HomeScan on three extensively-used smart home systems, we have found twelve non-trivial security issues, which may lead to unauthorized remote control and credential leakage.
C1 [Dong, Jin Song] Natl Univ Singapore, Sch Comp, Singapore, Singapore.
   [Dong, Jin Song] Griffith Univ, Nathan, Qld 4111, Australia.
   [Mahadewa, Kulani; Wang, Kailong; Liang, Zhenkai] Natl Univ Singapore, Dept Comp Sci, Singapore, Singapore.
   [Shi, Ling] Natl Univ Singapore, Singapore, Singapore.
   [Bai, Guangdong] Univ Queensland, Brisbane, Qld, Australia.
   [Liu, Yan] Ant Financial, Hangzhou 310000, Peoples R China.
C3 National University of Singapore; Griffith University; National
   University of Singapore; National University of Singapore; University of
   Queensland
RP Bai, GD (corresponding author), Univ Queensland, Brisbane, Qld, Australia.
EM kulani41@comp.nus.edu.sg; shiling@comp.nus.edu.sg; g.bai@uq.edu.au;
   dcswaka@nus.edu.sg; yan.emma.liu@gmail.com; dcsdjs@nus.edu.sg;
   liangzk@comp.nus.edu.sg
RI Bai, Guangdong/GLS-2331-2022
OI Bai, Guangdong/0000-0002-6390-9890; Shi, Ling/0000-0002-2023-0247;
   Mahadewa, Kulani/0000-0002-2388-1790; Liu, Yan/0000-0002-3380-8773
FU National Research Foundation, Prime Minister's Office, Singapore under
   its National Cybersecurity R&D Program (TSUNAMi project)
   [NRF2014NCR-NCR001-21]; Corporate Laboratory@University Scheme; National
   University of Singapore; Singapore Telecommunications Ltd.
FX This work is supported by the National Research Foundation, Prime
   Minister's Office, Singapore under its National Cybersecurity R&D
   Program (TSUNAMi project, Award No.NRF2014NCR-NCR001-21) and
   administered by the National Cybersecurity R&D Directorate, and the
   Corporate Laboratory@University Scheme, National University of
   Singapore, and Singapore Telecommunications Ltd. This article extends
   the preliminary results presented in [1]. It includes a more detailed
   description on the protocol extraction algorithms, a detailed
   description and additional data on the experiment and evaluation.
CR Aizatulin M, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P331
   Bai G., 2013, NDSS
   Bastys I, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P1102, DOI 10.1145/3243734.3243841
   Bu L, 2018, ACM TRANS CYBER-PHYS, V2, DOI 10.1145/3185501
   Celik ZB, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23326
   Celik ZB, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1687
   Cheng JH, 2018, CHI 2018: EXTENDED ABSTRACTS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3170427.3188467
   Choi K, 2016, PROCEEDINGS OF THE 9TH ACM CONFERENCE ON SECURITY & PRIVACY IN WIRELESS AND MOBILE NETWORKS (WISEC'16), P183, DOI 10.1145/2939918.2939921
   Comparetti PM, 2009, P IEEE S SECUR PRIV, P110, DOI 10.1109/SP.2009.14
   Cui WD, 2007, USENIX ASSOCIATION PROCEEDINGS OF THE 16TH USENIX SECURITY SYMPOSIUM, P199
   Das AK, 2016, HOTMOBILE'16: PROCEEDINGS OF THE 17TH INTERNATIONAL WORKSHOP ON MOBILE COMPUTING SYSTEMS AND APPLICATIONS, P99, DOI 10.1145/2873587.2873594
   den Dunnen P., Philips
   Denning T, 2013, COMMUN ACM, V56, P94, DOI 10.1145/2398356.2398377
   Ding WB, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P832, DOI 10.1145/3243734.3243865
   Dos Santos J, 2015, 2015 IEEE 2ND WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P715, DOI 10.1109/WF-IoT.2015.7389142
   Fawaz K, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P1205
   Fernandes E, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23119
   Fernandes E, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P531
   Fernandes E, 2016, P IEEE S SECUR PRIV, P636, DOI 10.1109/SP.2016.44
   Fouladi Behrang., 2013, Honey, im home!!, hacking zwave home automation systems
   Ho G, 2016, ASIA CCS'16: PROCEEDINGS OF THE 11TH ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P461, DOI 10.1145/2897845.2897886
   Hossain MM, 2015, IEEE WORLD CONGR SER, P21, DOI 10.1109/SERVICES.2015.12
   Hsu KH, 2019, IEEE T INF FOREN SEC, V14, P2607, DOI 10.1109/TIFS.2019.2899758
   Jia YHA, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23051
   KELLER RM, 1976, COMMUN ACM, V19, P371, DOI 10.1145/360248.360251
   Le TDB, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P106, DOI 10.1145/3213846.3213876
   Le TDB, 2015, IEEE INT CONF AUTOM, P115, DOI 10.1109/ASE.2015.83
   Lo D., 2006, SIGSOFT FSE, P265
   Michalevsky Y, 2016, MOBICOM'16: PROCEEDINGS OF THE 22ND ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING, P387, DOI 10.1145/2973750.2973778
   Moore H., 2013, Security Flaws in Universal Plug and Play Unplug. Don't Play
   Mouaatamid O.E., 2016, Electron. J. Inf. Technol, V9, P24
   Oren Y, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P353
   Ronen E, 2017, P IEEE S SECUR PRIV, P195, DOI 10.1109/SP.2017.14
   Ryu H., 2015, Ubicomp, P483
   Siby S., 2017, International Workshop on IoT Privacy, Trust, and Security (IoTPTS), P23
   Sicari S, 2015, COMPUT NETW, V76, P146, DOI 10.1016/j.comnet.2014.11.008
   Sun J, 2009, LECT NOTES COMPUT SC, V5643, P709, DOI 10.1007/978-3-642-02658-4_59
   Townsend K., 2017, ATTACKING SMART TVS
   Ye QQ, 2015, IEEE INT C ENG COMP, P90, DOI 10.1109/ICECCS.2015.20
   Zhang LF, 2019, PROC INT CONF SOFTW, P281, DOI 10.1109/ICSE.2019.00043
   Zillner T., 2015, ZIGBEE EXPLOITED The good, the bad and the ugly
NR 41
TC 5
Z9 5
U1 4
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2021
VL 47
IS 12
BP 2667
EP 2683
DI 10.1109/TSE.2019.2960690
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XM6HB
UT WOS:000728924600002
DA 2024-07-18
ER

PT J
AU Wu, HY
   Nie, CH
   Petke, J
   Jia, Y
   Harman, M
AF Wu, Huayao
   Nie, Changhai
   Petke, Justyna
   Jia, Yue
   Harman, Mark
TI Comparative Analysis of Constraint Handling Techniques for Constrained
   Combinatorial Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Combinatorial testing; Software systems; Computational efficiency;
   combinatorial testing; test suite generation; constraint handling;
   constrained covering array; empirical comparison
ID SEARCH
AB Constraints depict the dependency relationships between parameters in a software system under test. Because almost all systems are constrained in some way, techniques that adequately cater for constraints have become a crucial factor for adoption, deployment and exploitation of Combinatorial Testing (CT). Currently, despite a variety of different constraint handling techniques available, the relationship between these techniques and the generation algorithms that use them remains unknown, yielding an important gap and pressing concern in the literature of constrained combination testing. In this article, we present a comparative empirical study to investigate the impact of four common constraint handling techniques on the efficiency of six representative (greedy and search-based) test suite generation algorithms. The results reveal that the Verify technique implemented with the Minimal Forbidden Tuple (MFT) approach is the fastest, while the Replace technique is promising for producing the smallest constrained covering arrays, especially for algorithms that construct test cases one-at-a-time. The results also show that there is an interplay between efficiency of the constraint handler and the test suite generation algorithm into which it is developed.
C1 [Wu, Huayao; Nie, Changhai] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.
   [Wu, Huayao; Nie, Changhai] Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210023, Jiangsu, Peoples R China.
   [Petke, Justyna; Jia, Yue; Harman, Mark] UCL, CREST, Comp Sci, London WC1E 6BT, England.
   [Jia, Yue] Facebook Inc, London W1T 1FB, England.
C3 Nanjing University; Nanjing University; University of London; University
   College London; Facebook Inc
RP Nie, CH (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.; Nie, CH (corresponding author), Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210023, Jiangsu, Peoples R China.
EM hywu@nju.edu.cn; changhainie@nju.edu.cn; j.petke@ucl.ac.uk;
   yue.jia@ucl.ac.uk; mark.harman@ucl.ac.uk
RI Nie, Changhai/IWM-7504-2023
OI Petke, Justyna/0000-0002-7833-6044
FU National Key Research and Development Plan of China [2018YFB1003800];
   National Natural Science Foundation of China [61902174]; Natural Science
   Foundation of Jiangsu Province [BK20190291]; DAASE EPSRC [EP/J017515/1];
   EPSRC [EP/P023991/1]; EPSRC [EP/P023991/1] Funding Source: UKRI
FX The authors would like to thank Yan Wang and Lejin Wang for their help
   in implementing the algorithms. This work was partially supported by the
   National Key Research and Development Plan of China (No.
   2018YFB1003800), National Natural Science Foundation of China (No.
   61902174), and Natural Science Foundation of Jiangsu Province (No.
   BK20190291). This work was also partially supported by the DAASE EPSRC
   Grant (No. EP/J017515/1) and EPSRC Fellowship (No. EP/P023991/1).
CR Ahmed BS, 2017, IEEE ACCESS, V5, P25706, DOI 10.1109/ACCESS.2017.2771562
   Ahmed BS, 2017, INFORM SOFTWARE TECH, V86, P20, DOI 10.1016/j.infsof.2017.02.004
   [Anonymous], 2018, IEEE Standard 1709-2018 (Revision of IEEE Std 1709-2010, P1, DOI [10.1109/IEEESTD.2018.8332112, DOI 10.1109/IEEESTD.2018.8332112]
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bazargani M, 2018, LECT NOTES COMPUT SC, V10784, P778, DOI 10.1007/978-3-319-77538-8_52
   Bryce RC, 2006, INFORM SOFTWARE TECH, V48, P960, DOI 10.1016/j.infsof.2006.03.004
   Bryce RC, 2009, SOFTW TEST VERIF REL, V19, P37, DOI 10.1002/stvr.393
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen M. B., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P495, DOI 10.1145/1810295.1810447
   Cohen M.B., 2007, P 2007 INT S SOFTW T, P129
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Danziger P, 2009, THEOR COMPUT SCI, V410, P5403, DOI 10.1016/j.tcs.2009.07.057
   Duan F, 2017, IEEE ICST WORKSHOP, P181, DOI 10.1109/ICSTW.2017.37
   Fögen K, 2018, IEEE ICST WORKSHOP, P328, DOI 10.1109/ICSTW.2018.00068
   Galinier P, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'17), P1288, DOI 10.1145/3071178.3071324
   Gargantini A, 2017, IEEE ICST WORKSHOP, P239, DOI 10.1109/ICSTW.2017.44
   Gargantini A, 2016, LECT NOTES COMPUT SC, V9962, P49, DOI 10.1007/978-3-319-47106-8_4
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Grindal M., 2006, HSIKITR06001 SCH HUM
   Grindal M, 2007, 2007 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P255, DOI 10.1109/ASWEC.2007.27
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Hartman A, 2004, DISCRETE MATH, V284, P149, DOI 10.1016/j.disc.2003.11.029
   Hnich B, 2005, LECT NOTES COMPUT SC, V3419, P172
   International Organization for Standardization, 2013, 29119 ISOIECIEEE
   Jia Y, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P540, DOI 10.1109/ICSE.2015.71
   Khalsa SK, 2014, PROC INT SYMP SOFTW, P323, DOI 10.1109/ISSRE.2014.15
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Lin JK, 2015, IEEE INT CONF AUTOM, P494, DOI 10.1109/ASE.2015.61
   MANDL R, 1985, COMMUN ACM, V28, P1054, DOI 10.1145/4372.4375
   Manès VJM, 2021, IEEE T SOFTWARE ENG, V47, P2312, DOI 10.1109/TSE.2019.2946563
   Nakagawa H, 2015, 2015 30TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOP (ASEW), P58, DOI 10.1109/ASEW.2015.13
   Nanba T, 2012, IEICE T FUND ELECTR, VE95A, P1501, DOI 10.1587/transfun.E95.A.1501
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Petke J, 2015, IEEE T SOFTWARE ENG, V41, P901, DOI 10.1109/TSE.2015.2421279
   Petke Justyna, 2013, P ESEC FSE 2013, DOI [DOI 10.1145/2491411.2491436, 10.1145/2491411.2491436]
   Salecker E., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P278, DOI 10.1109/ICSTW.2011.79
   Sherwood G., 1994, P 3 INT C SOFTW TEST, P151
   Tatsumi K., 1987, Proceedings of COMPSAC 87. The Eleventh Annual International Computer Software and Applications Conference (Cat. No.87CH2447-1), P285
   Tatsumi K., 1987, P INT C QUAL CONTR I, P615
   Tzoref-Brill R, 2017, PROC INT CONF SOFTW, P621, DOI 10.1109/ICSE.2017.63
   Wang WH, 2008, IEEE HI ASS SYS ENGR, P209, DOI 10.1109/HASE.2008.53
   Williams AW, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P246, DOI 10.1109/ISSRE.1996.558835
   Wu H., 2014, P INT WORKSH SEARCH, P27
   Wu H., 2019, ABS190802480
   Wu HY, 2020, IEEE T SOFTWARE ENG, V46, P302, DOI 10.1109/TSE.2018.2852744
   Yamada A., 2015, 2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST), P1
   Yamada A, 2016, IEEE INT CONF AUTOM, P614, DOI 10.1145/2970276.2970335
   Yu L., 2015, P INT C WIR COMM SIG, P1
   Yu LB, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P242, DOI 10.1109/ICST.2013.35
   Yuan X, 2011, IEEE T SOFTWARE ENG, V37, P559, DOI 10.1109/TSE.2010.50
   Zhang ZQ, 2014, J SYST SOFTWARE, V98, P191, DOI 10.1016/j.jss.2014.09.001
NR 53
TC 9
Z9 9
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2021
VL 47
IS 11
BP 2549
EP 2562
DI 10.1109/TSE.2019.2955687
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WW2QE
UT WOS:000717767100015
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Farzat, FD
   Barros, MD
   Travassos, GH
AF Farzat, Fabio de A.
   Barros, Marcio de O.
   Travassos, Guilherme H.
TI Evolving JavaScript Code to Reduce Load Time
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Syntactics; Genetic programming; Software algorithms;
   Heuristic algorithms; Libraries; Runtime; JavaScript; source code
   improvement; genetic programming; local search
ID SOFTWARE
AB JavaScript is one of the most used programming languages for front-end development of Web applications. The increase in complexity of front-end features brings concerns about performance, especially the load and execution time of JavaScript code. In this paper, we propose an evolutionary program improvement technique to reduce the size of JavaScript programs and, therefore, the time required to load and execute them in Web applications. To guide the development of this technique, we performed an experimental study to characterize the patches applied to JavaScript programs to reduce their size while keeping the functionality required to pass all test cases in their test suites. We applied this technique to 19 JavaScript programs varying from 92 to 15,602 LOC and observed reductions from 0.2 to 73.8 percent of the original code, as well as a relationship between the quality of a program's test suite and the ability to reduce the size of its source code.
C1 [Farzat, Fabio de A.; Travassos, Guilherme H.] COPPE UFRJ, Syst Engn & Comp Sci Program, Cx Postal 68501,Cidade Univ, BR-21941594 Rio De Janeiro, RJ, Brazil.
   [Barros, Marcio de O.] PPGI UNIRIO, Postgrad Informat Syst Dept, AV Pasteur 458, BR-22290250 Rio De Janeiro, RJ, Brazil.
C3 Universidade Federal do Rio de Janeiro; Universidade Federal do Estado
   do Rio de Janeiro
RP Farzat, FD (corresponding author), COPPE UFRJ, Syst Engn & Comp Sci Program, Cx Postal 68501,Cidade Univ, BR-21941594 Rio De Janeiro, RJ, Brazil.
EM ffarzat@cos.ufrj.br; marcio.barros@uniriotec.br; ght@cos.ufrj.br
RI Barros, Marcio/AAD-2848-2022; Travassos, Guilherme Horta/G-2842-2012
OI Barros, Marcio/0000-0001-8136-9624; Travassos, Guilherme
   Horta/0000-0002-4258-0424
FU Nucleo Avancado de Computacao de Alto Desempenho (NACAD) of COPPE/UFRJ;
   CAPES; CNPq
FX This research was developed with the support of the Nucleo Avancado de
   Computacao de Alto Desempenho (NACAD) of COPPE/UFRJ. CAPES and CNPq
   supported this research. Prof. Travassos and Prof. Barros are CNPq
   Researchers.
CR Abramov D., 2017, SCENES IMPROVING REP
   An G, 2018, 2018 ACM/IEEE 4TH INTERNATIONAL GENETIC IMPROVEMENT WORKSHOP (GI@ICSE 2018), P19, DOI 10.1145/3194810.3194814
   Anderson Christopher., 2006, Type inference for JavaScript
   [Anonymous], 2015, Genetic Improvement 2015 Workshop, DOI DOI 10.1145/2739482.2768425
   Arcuri A, 2008, LECT NOTES COMPUT SC, V5361, P61
   Arcuri A, 2008, IEEE C EVOL COMPUTAT, P162, DOI 10.1109/CEC.2008.4630793
   Armstrong R., 1999, Proceedings. The Eighth International Symposium on High Performance Distributed Computing (Cat. No.99TH8469), P115, DOI 10.1109/HPDC.1999.805289
   Bengtsson P., 2016, ADV CLOSURE COMPILER
   Bierman G, 2014, LECT NOTES COMPUT SC, V8586, P257
   Brownlee AEI, 2019, PROCEEDINGS OF THE 2019 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'19), P985, DOI 10.1145/3321707.3321841
   Brownlee J, 2011, CLEVER ALGORITHMS NA, P13
   Cody-Kenny B, 2018, LECT NOTES COMPUT SC, V10784, P769, DOI 10.1007/978-3-319-77538-8_51
   FOGEL DB, 1990, BIOL CYBERN, V63, P111, DOI 10.1007/BF00203032
   FORREST S, 1993, FOUNDATIONS OF GENETIC ALGORITHMS 2, P109
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Harman M, 2012, IEEE INT CONF AUTOM, P1, DOI 10.1145/2351676.2351678
   Landsborough J., 2015, GECCO 15 COMPANION P, DOI [DOI 10.1145/2739482.2768424, 10.1145/2739482.2768424]
   Langdon WB, 2016, LECT NOTES COMPUT SC, V9962, P224, DOI 10.1007/978-3-319-47106-8_16
   Langdon WB, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P951, DOI 10.1145/2576768.2598244
   Langdon WB, 2015, IEEE T EVOLUT COMPUT, V19, P118, DOI 10.1109/TEVC.2013.2281544
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Leach P. J., 2005, 4122 RFC
   Myers EW, 1986, ALGORITHMICA, V1, P251, DOI 10.1007/BF01840446
   Overbey J., 2005, Proceedings of the second international workshop on Software engineering for high performance computing system applications, P37, DOI DOI 10.1145/1145319.1145331
   Petke Justyna, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P257, DOI 10.1007/978-3-642-39742-4_21
   Petke J, 2018, IEEE T EVOLUT COMPUT, V22, P415, DOI 10.1109/TEVC.2017.2693219
   Senaratna N.I., 2005, Genetic Algorithms: The Crossover-Mutation Debate
   Silva D., 2017, ESTUDO LARGA ESCALA
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   White DR, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCO'17 COMPANION), P1549, DOI 10.1145/3067695.3082515
NR 31
TC 1
Z9 1
U1 8
U2 23
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2021
VL 47
IS 8
BP 1544
EP 1558
DI 10.1109/TSE.2019.2928293
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA TZ7YH
UT WOS:000684687400002
DA 2024-07-18
ER

PT J
AU Li, L
   Bissyandé, TF
   Klein, J
AF Li, Li
   Bissyande, Tegawende F.
   Klein, Jacques
TI Rebooting Research on Detecting Repackaged Android Apps: Literature
   Review and Benchmark
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Bibliographies; Malware; Cloning; Systematics; Tools; Aging; Libraries;
   Android; repackaging; clone; literature review; benchmark
AB Repackaging is a serious threat to the Android ecosystem as it deprives app developers of their benefits, contributes to spreading malware on users' devices, and increases the workload of market maintainers. In the space of six years, the research around this specific issue has produced 57 approaches which do not readily scale to millions of apps or are only evaluated on private datasets without, in general, tool support available to the community. Through a systematic literature review of the subject, we argue that the research is slowing down, where many state-of-the-art approaches have reported high-performance rates on closed datasets, which are unfortunately difficult to replicate and to compare against. In this work, we propose to reboot the research in repackaged app detection by providing a literature review that summarises the challenges and current solutions for detecting repackaged apps and by providing a large dataset that supports replications of existing solutions and implications of new research directions. We hope that these contributions will re-activate the direction of detecting repackaged apps and spark innovative approaches going beyond the current state-of-the-art.
C1 [Li, Li] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Bissyande, Tegawende F.; Klein, Jacques] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, L-4365 Esch Sur Alzette, Luxembourg.
C3 Monash University; University of Luxembourg
RP Li, L (corresponding author), Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
EM li.li@monash.edu; tegawende.bissyande@uni.lu; jacques.klein@uni.lu
RI Li, Li/AAR-3316-2020
OI Bissyande, Tegawende F./0000-0001-7270-9869; Li, Li/0000-0003-2990-1614;
   Klein, Jacques/0000-0003-4052-475X
FU Monash-Warwick Alliance Catalyst Fund (2018/2019); European Union, under
   the SPARTA project; Fonds National de la Recherche (FNR), Luxembourg
   [C17/IS/11693861, C15/IS/10449467]; University of Luxembourg, under the
   VulFix project
FX This work was supported by the Monash-Warwick Alliance Catalyst Fund
   (2018/2019), by the European Union, under the SPARTA project, by the
   Fonds National de la Recherche (FNR), Luxembourg, under projects
   CHARACTERIZE C17/IS/11693861 and Recommend C15/IS/10449467, and by the
   University of Luxembourg, under the VulFix project. The authors would
   like to thank the anonymous reviewers who have provided insightful and
   constructive comments that have led to important improvements in several
   parts of the manuscript. The authors also appreciate the help received
   from Timothee Riom who have helped to verify the literature review
   results.
CR Alam S, 2016, INT CONF DIGIT INFO, P79, DOI 10.1109/DICTAP.2016.7544005
   Aldini A, 2015, CONCURR COMP-PRACT E, V27, P2818, DOI 10.1002/cpe.3447
   Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   Ankeny J., 2012, FEDS SEIZE ANDROID A
   [Anonymous], 2016, POKEMON GO NEW TAMPE
   [Anonymous], 2018, DEXGUARD
   [Anonymous], Androguard: Reverse engineering, Malware and good-ware analysis of Android applications
   [Anonymous], 2015, USTWO GAMES
   [Anonymous], 2016, SANDMARK TOOL STUDY
   [Anonymous], 2013, Proceeding of the 11th annual international conference on Mobile systems, applications, and services, DOI [10.1145/2462456.2464461, DOI 10.1145/2462456.2464461]
   [Anonymous], 2014, INT C INFORM SECURIT
   [Anonymous], 2014, P 30 ANN COMP SEC AP
   [Anonymous], 2012, P 2 ACM C DATA APPL, DOI DOI 10.1145/2133601.2133640
   Backes M, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P356, DOI 10.1145/2976749.2978333
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Basit HA, 2009, IEEE T SOFTWARE ENG, V35, P497, DOI 10.1109/TSE.2009.16
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Blackburn SM, 2016, ACM T PROGR LANG SYS, V38, DOI 10.1145/2983574
   Bodden E., 2013, DATENSCHUTZ DATENSIC, V37, P720
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Cesare S, 2013, L N INST COMP SCI SO, V127, P197
   Chen J, 2015, J COMPUT SCI TECH-CH, V30, P942, DOI 10.1007/s11390-015-1573-7
   Chen K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P175, DOI 10.1145/2568225.2568286
   Chen K, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P659
   Cochran W.G., 1977, Sampling techniques, V3rd ed.
   Cordy JR, 2011, CONF PROC INT SYMP C, P219, DOI 10.1109/ICPC.2011.26
   Crussell Jonathan, 2012, Computer Security - ESORICS 2012. Proceedings 17th European Symposium on Research in Computer Security, P37, DOI 10.1007/978-3-642-33167-1_3
   Crussell J., 2013, European Symposium on Research in Computer Security, P182
   Crussell J, 2015, IEEE T MOBILE COMPUT, V14, DOI 10.1109/TMC.2014.2381212
   Deshotels L., 2014, Proceedings of ACM SIGPLAN on Program Protection and Reverse Engineering Workshop 2014, P3, DOI [10.1145/2556464.2556467, DOI 10.1145/2556464.2556467, 10.1145/2556464. 2556467]
   Desnos A., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P5394, DOI 10.1109/HICSS.2012.114
   Desnos A., 2011, Black Hat, 2011, Abu Dhabi, BlackHat'11, P77
   Fan M, 2017, IEEE T INF FOREN SEC, V12, P1772, DOI 10.1109/TIFS.2017.2687880
   Faruki P., 2013, P 6 INT C SEC INF NE, P152, DOI [10.1145/2523514.2523539, DOI 10.1145/2523514.2523539]
   Faruki P, 2015, J INF SECUR APPL, V22, P66, DOI 10.1016/j.jisa.2014.10.011
   Gadyatskaya O, 2016, LECT NOTES COMPUT SC, V10014, P135, DOI 10.1007/978-3-319-47560-8_9
   Gibler C., 2013, P 11 ANN INT C MOB S, P459
   Glanz L, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P638, DOI 10.1145/3106237.3106305
   Gonzalez H., 2014, P INT C SECURITY PRI, P436
   Gonzalez Hugo, 2015, P 8 EUR WORKSH SYST, P7
   Hanna Steve, 2013, Detection of Intrusions and Malware, and Vulnerability Assessment. 9th International Conference, DIMVA 2012. Revised Selected Papers, P62, DOI 10.1007/978-3-642-37300-8_4
   Heqing Huang, 2013, Trust and Trustworthy Computing. 6th International Conference, TRUST 2013. Proceedings: LNCS 7904, P169, DOI 10.1007/978-3-642-38908-5_13
   Ishii Y, 2017, IEICE T INF SYST, VE100D, P1703, DOI 10.1587/transinf.2016ICP0012
   Israel G. D, 1992, SER PROGR EV ORG DEV
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jiao SB, 2015, LECT NOTES COMPUT SC, V9065, P349, DOI 10.1007/978-3-319-17533-1_24
   Jung JH, 2013, WIRELESS PERS COMMUN, V73, P1421, DOI 10.1007/s11277-013-1258-x
   Keele S, 2007, GUIDELINES PERFORMIN
   Kim D, 2016, AUTOMAT SOFTW ENG, V23, P591, DOI 10.1007/s10515-015-0182-6
   Kitchenham B., 2004, ARXIV
   Kohli A, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1059, DOI 10.1145/3106237.3121277
   Kolter JZ, 2006, J MACH LEARN RES, V7, P2721
   Kong PF, 2019, IEEE T RELIAB, V68, P45, DOI 10.1109/TR.2018.2865733
   Li B, 2015, P359
   Li L., 2019, BASELINE APPROACH RE
   Li L., 2016, PROC ISSTA, P318
   Li L, 2016, UNGRAFTING MALICIOUS
   Li L, 2018, PROC INT SYMP SOFTW, P212, DOI 10.1109/ISSRE.2018.00031
   Li L, 2017, IEEE TRUST BIG, P136, DOI 10.1109/Trustcom/BigDataSE/ICESS.2017.230
   Li L, 2017, INFORM SOFTWARE TECH, V88, P67, DOI 10.1016/j.infsof.2017.04.001
   Li L, 2017, IEEE T INF FOREN SEC, V12, P1269, DOI 10.1109/TIFS.2017.2656460
   Li L, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P403, DOI 10.1109/SANER.2016.52
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Li Li, 2017, ARXIV170905281
   Li MH, 2017, PROC INT CONF SOFTW, P335, DOI 10.1109/ICSE.2017.38
   Lin YD, 2013, COMPUT SECUR, V39, P340, DOI 10.1016/j.cose.2013.08.010
   Linares-Vasquez M., 2014, PROC 11 WORK C MININ, P242
   Lindorfer M, 2014, LECT NOTES COMPUT SC, V8550, P51
   Liu Chao, 2006, Proc. 12th ACMSIGKDD Int'l Con. on Knowledge Discovery and Data Mining (KDD 06), P872, DOI DOI 10.1145/1150402.1150522
   Lyu F, 2017, MOB INF SYST, V2017, DOI 10.1155/2017/6958698
   Lyu F, 2016, IEEE TRUST BIG, P511, DOI 10.1109/TrustCom.2016.0104
   Ma Z, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P653, DOI 10.1145/2889160.2889178
   Marastoni N, 2017, PROCEEDINGS OF THE 7TH SOFTWARE SECURITY, PROTECTION, AND REVERSE ENGINEERING WORKSHOP 2017 (SSPREW), DOI 10.1145/3151137.3151138
   Meng Guozhu., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, ISSTA 2016, P306
   Mojica IJ, 2014, IEEE SOFTWARE, V31, P78, DOI 10.1109/MS.2013.142
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   Moon TK, 1996, IEEE SIGNAL PROC MAG, V13, P47, DOI 10.1109/79.543975
   Moran K, 2016, IEEE INT CONF SOFTW, P33, DOI 10.1109/ICST.2016.34
   Niu HF, 2016, INT CONF SYST INFORM, P520, DOI 10.1109/ICSAI.2016.7811010
   Perdisci R, 2008, ANN COMPUT SECURITY, P301, DOI 10.1109/ACSAC.2008.22
   Potharaju R, 2012, LECT NOTES COMPUT SC, V7159, P106, DOI 10.1007/978-3-642-28166-2_11
   Quanlong Guan, 2016, Engineering Secure Software and Systems. 8th International Symposium, ESSoS 2016. Proceedings: LNCS 9639, P89, DOI 10.1007/978-3-319-30806-7_6
   Rasthofer S, 2015, 2015 SCIENCE AND INFORMATION CONFERENCE (SAI), P247, DOI 10.1109/SAI.2015.7237151
   Ren C., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, P635
   Roy C., 2007, 2007541 TR SCH COMP
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Ruiz I. J. M., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P113
   Sahs J., 2012, 2012 European Intelligence and Security Informatics Conference (EISIC), P141, DOI 10.1109/EISIC.2012.34
   Sebastián M, 2016, LECT NOTES COMPUT SC, V9854, P230, DOI 10.1007/978-3-319-45719-2_11
   Soh C, 2015, INT C PROGRAM COMPRE, P163, DOI 10.1109/ICPC.2015.25
   Sun Mingshen., 2015, Proceedings of the 8th ACM Conference on Security Privacy in Wireless and Mobile Networks, P9
   Sun X, 2014, IFIP ADV INF COMM TE, V428, P142
   Tian K, 2020, IEEE T DEPEND SECURE, V17, P64, DOI 10.1109/TDSC.2017.2745575
   Tian K, 2016, 2016 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2016), P262, DOI 10.1109/SPW.2016.33
   Vidas T., 2013, P 3 ACM C DATA APPL, P197, DOI DOI 10.1145/2435349.2435378
   Viennot N., 2014, 2014 ACM INT C MEAS, P221, DOI DOI 10.1145/2637364.2592003
   Wang H., 2015, PROC ISSTA, P71, DOI [10.1145/2771783.2771795, DOI 10.1145/2771783.2771795]
   Wang HY, 2018, IEEE WORK CONF MIN S, P231, DOI 10.1145/3196398.3196412
   Wei H, 2011, NAT COMMUN, V2, DOI 10.1038/ncomms1388
   Wu DJ, 2012, ASIA JT CONF INF SEC, P62, DOI 10.1109/AsiaJCIS.2012.18
   Wu XP, 2015, SECUR COMMUN NETW, V8, P2257, DOI 10.1002/sec.1170
   Yue ST, 2017, INT C PROGRAM COMPRE, P132, DOI 10.1109/ICPC.2017.16
   Zhang BY, 2007, LECT NOTES COMPUT SC, V4610, P468
   Zhang F., 2014, P 2014 ACM C SEC PRI, P25, DOI DOI 10.1145/2627393.2627395
   Zhang YQ, 2015, LECT NOTES COMPUT SC, V9327, P293, DOI 10.1007/978-3-319-24177-7_15
   Zhauniarovich Y, 2014, LECT NOTES COMPUT SC, V8566, P130, DOI 10.1007/978-3-662-43936-4_9
   Zheng M, 2013, IEEE INT CONF TRUST, P163, DOI 10.1109/TrustCom.2013.25
   Zhou W., 2014, P 4 ACM C DATA APPL, P199
   Zhou W., 2013, Proceedings of the third ACM conference on Data and application security and privacy, P185
NR 109
TC 36
Z9 37
U1 0
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2021
VL 47
IS 4
BP 676
EP 693
DI 10.1109/TSE.2019.2901679
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA RP8FK
UT WOS:000641958800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Scalabrino, S
   Bavota, G
   Vendome, C
   Linares-Vásquez, M
   Poshyvanyk, D
   Oliveto, R
AF Scalabrino, Simone
   Bavota, Gabriele
   Vendome, Christopher
   Linares-Vasquez, Mario
   Poshyvanyk, Denys
   Oliveto, Rocco
TI Automatically Assessing Code Understandability
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Complexity theory; Software; Computer bugs; Readability metrics;
   Software measurement; Indexes; Software metrics; code understandability;
   empirical study; negative result
AB Understanding software is an inherent requirement for many maintenance and evolution tasks. Without a thorough understanding of the code, developers would not be able to fix bugs or add new features timely. Measuring code understandability might be useful to guide developers in writing better code, and could also help in estimating the effort required to modify code components. Unfortunately, there are no metrics designed to assess the understandability of code snippets. In this work, we perform an extensive evaluation of 121 existing as well as new code-related, documentation-related, and developer-related metrics. We try to (i) correlate each metric with understandability and (ii) build models combining metrics to assess understandability. To do this, we use 444 human evaluations from 63 developers and we obtained a bold negative result: none of the 121 experimented metrics is able to capture code understandability, not even the ones assumed to assess quality attributes apparently related, such as code readability and complexity. While we observed some improvements while combining metrics in models, their effectiveness is still far from making them suitable for practical applications. Finally, we conducted interviews with five professional developers to understand the factors that influence their ability to understand code snippets, aiming at identifying possible new metrics.
C1 [Scalabrino, Simone; Oliveto, Rocco] Univ Molise, I-86100 Campobasso, CB, Italy.
   [Oliveto, Rocco] Univ Molise, Comp Sci Bachelors & Masters Programs, I-86100 Campobasso, CB, Italy.
   [Oliveto, Rocco] Univ Molise, Software & Knowledge Engn Lab STAKE Lab, I-86100 Campobasso, CB, Italy.
   [Bavota, Gabriele] Univ Svizzera Italiana USI, CH-6900 Lugano, Switzerland.
   [Vendome, Christopher] Miami Univ, Oxford, OH 45056 USA.
   [Poshyvanyk, Denys] Coll William & Mary, Comp Sci, Williamsburg, VA 23187 USA.
   [Linares-Vasquez, Mario] Univ Andes, Bogota 111711, Colombia.
C3 University of Molise; University of Molise; University of Molise;
   Universita della Svizzera Italiana; University System of Ohio; Miami
   University; William & Mary; Universidad de los Andes (Colombia)
RP Scalabrino, S (corresponding author), Univ Molise, I-86100 Campobasso, CB, Italy.
EM simone.scalabrino@unimol.it; gabriele.bavota@usi.ch;
   vendomcg@miamioh.edu; m.linaresv@uniandes.edu.co; denys@cs.wm.edu;
   rocco.olivet@unimol.it
RI Scalabrino, Simone/AAC-7669-2019
OI Scalabrino, Simone/0000-0003-1764-9685; BAVOTA,
   Gabriele/0000-0002-2216-3148; Poshyvanyk, Denys/0000-0002-5626-7586;
   Linares-Vasquez, Mario/0000-0003-0161-2888
FU SNF project JITRA [172479]; NSF [CCF-1525902]
FX Bavota was supported in part by the SNF project JITRA, No. 172479.
   Poshyvanyk was supported in part by the NSF CCF-1525902 grant. Any
   opinions, findings, and conclusions expressed herein are the authors and
   do not necessarily reflect those of the sponsors.
CR Aggarwal KK, 2002, P A REL MAI, P235, DOI 10.1109/RAMS.2002.981648
   AHA DW, 1991, MACH LEARN, V6, P37, DOI 10.1023/A:1022689900470
   [Anonymous], SPEAKING WRITING REF
   [Anonymous], 2001, 912612001E ISOIEC
   [Anonymous], 2010, THINK ALOUD CONTROVE, DOI DOI 10.4324/9780203856338
   Arnaoudova V, 2016, EMPIR SOFTW ENG, V21, P104, DOI 10.1007/s10664-014-9350-8
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bartsch M, 2008, SOFTWARE QUAL J, V16, P23, DOI 10.1007/s11219-007-9022-7
   BIGGS SF, 1993, J BEHAV DECIS MAKING, V6, P187, DOI 10.1002/bdm.3960060303
   Breiman L., 2001, Mach. Learn., V45, P5
   BRINKMAN JA, 1993, ERGONOMICS, V36, P1381, DOI 10.1080/00140139308968007
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Capiluppi A, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P58, DOI 10.1109/CSMR.2004.1281406
   Caprile B, 2000, PROC IEEE INT CONF S, P97, DOI 10.1109/ICSM.2000.883022
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen C, 2016, COMM COM INF SC, V675, P120, DOI 10.1007/978-981-10-3482-4_9
   Cohen J., 1988, STAT POWER ANAL BEHA
   Daka E, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P107, DOI 10.1145/2786805.2786838
   Dorn Jonathan, 2012, THESIS U VIRGINIA
   Enslen E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P71, DOI 10.1109/MSR.2009.5069482
   Flesch RF, 1979, How to write plain English
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   John G. H., 1995, Uncertainty in Artificial Intelligence. Proceedings of the Eleventh Conference (1995), P338
   Kasto N., 2013, P 15 AUSTR COMP ED C, V136, P59
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Kleinberg J., ALGORITHM DESIGN
   Lawrie D, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P139
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Lawrie D, 2007, INNOV SYST SOFTW ENG, V3, P303, DOI 10.1007/s11334-007-0031-2
   LECESSIE S, 1992, APPL STAT-J ROY ST C, V41, P191
   Lin J., 2006, Computer and Information Technology, P192
   Lin JC, 2008, IEEE INT CONF FUZZY, P887, DOI 10.1109/FUZZY.2008.4630475
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Minelli R, 2015, INT C PROGRAM COMPRE, P25, DOI 10.1109/ICPC.2015.12
   Misra S., 2008, 23 INT S COMP INF SC, P1
   Platt JC, 1999, ADVANCES IN KERNEL METHODS, P185
   Posnett D, 2011, P 8 WORKING C MINING, P73
   Rhenius D., 1990, Proceedings of the Human Factors Society 34th Annual Meeting, V2, P1265
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   Scalabrino S., 2019, REPLICATION PACKAGE
   Scalabrino S, 2016, 2016 IEEE 24 INT C P, P1
   Scalabrino S, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1958
   Scalabrino S, 2017, IEEE INT CONF AUTOM, P417, DOI 10.1109/ASE.2017.8115654
   Schmid R., OCULOMOTOR CONTROL C, P385
   Schreck D., 2007, 9 INT WORKSHOP PRINC, P4
   Shevade SK, 2000, IEEE T NEURAL NETWOR, V11, P1188, DOI 10.1109/72.870050
   Shima K, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P48, DOI 10.1109/ISESE.2002.1166925
   Srinivasulu D., 2014, EVALUATION SOFTWARE, P939
   Storey MA, 2005, PROG COMPREHEN, P181, DOI 10.1109/WPC.2005.38
   Storey MAD, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P12, DOI 10.1109/WCRE.1997.624572
   Thongmak M, 2011, COMM COM INF SC, V167, P43
   Trockman A, 2018, IEEE WORK CONF MIN S, P314, DOI 10.1145/3196398.3196441
   Tukey J.W., 1977, EXPLORATORY DATA ANA, V2
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   Williams AM, 1997, BEHAV RES METH INS C, V29, P364, DOI 10.3758/BF03200589
NR 55
TC 36
Z9 38
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2021
VL 47
IS 3
BP 595
EP 613
DI 10.1109/TSE.2019.2901468
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA RA1TM
UT WOS:000631200300008
OA hybrid
DA 2024-07-18
ER

PT J
AU Li, ZH
   Chen, TH
   Yang, JQ
   Shang, WY
AF Li, Zhenhao
   Chen, Tse-Hsun
   Yang, Jinqiu
   Shang, Weiyi
TI Studying Duplicate Logging Statements and Their Relationships With Code
   Clones
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cloning; Manuals; Tools; Static analysis; Maintenance engineering; Java;
   Cloud computing; Log; code smell; duplicate log; code clone; static
   analysis; empirical study
ID SOFTWARE; CCFINDER; SMELLS; BUGS
AB Developers rely on software logs for a variety of tasks, such as debugging, testing, program comprehension, verification, and performance analysis. Despite the importance of logs, prior studies show that there is no industrial standard on how to write logging statements. In this paper, we focus on studying duplicate logging statements, which are logging statements that have the same static text message. Such duplications in the text message are potential indications of logging code smells, which may affect developers' understanding of the dynamic view of the system. We manually studied over 4K duplicate logging statements and their surrounding code in five large-scale open source systems: Hadoop, CloudStack, Elasticsearch, Cassandra, and Flink. We uncovered five patterns of duplicate logging code smells. For each instance of the duplicate logging code smell, we further manually identify the potentially problematic (i.e., require fixes) and justifiable (i.e., do not require fixes) cases. Then, we contact developers to verify our manual study result. We integrated our manual study result and developers' feedback into our automated static analysis tool, DLFinder, which automatically detects problematic duplicate logging code smells. We evaluated DLFinder on the five manually studied systems and three additional systems: Camel, Kafka and Wicket. In total, combining the results of DLFinder and our manual analysis, we reported 91 problematic duplicate logging code smell instances to developers and all of them have been fixed. We further study the relationship between duplicate logging statements, including the problematic instances of duplicate logging code smells, and code clones. We find that 83 percent of the duplicate logging code smell instances reside in cloned code, but 17 percent of them reside in micro-clones that are difficult to detect using automated clone detection tools. We also find that more than half of the duplicate logging statements reside in cloned code snippets, and a large portion of them reside in very short code blocks which may not be effectively detected by existing code clone detection tools. Our study shows that, in addition to general source code that implements the business logic, code clones may also result in bad logging practices that could increase maintenance difficulties.
C1 [Li, Zhenhao; Chen, Tse-Hsun; Yang, Jinqiu; Shang, Weiyi] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
C3 Concordia University - Canada
RP Li, ZH (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
EM l_zhenha@encs.concordia.ca; peterc@encs.concordia.ca;
   jinqiuy@encs.concordia.ca; shang@encs.concordia.ca
OI Li, Zhenhao/0000-0002-4909-1535; Chen, Tse-Hsun/0000-0003-4027-0905
CR Abebe SL, 2011, IEEE INT WORK C SO, P125, DOI 10.1109/SCAM.2011.18
   Ahmed I, 2017, INT SYMP EMP SOFTWAR, P58, DOI 10.1109/ESEM.2017.12
   [Anonymous], SIMPLE LOGGING FACAD
   [Anonymous], CHANGES JOBHISTORY M
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Boslaugh S., 2008, Statistics in a nutshell-a desktop quick reference
   Budgen David., 2003, SOFTWARE DESIGN
   Busany N, 2016, PROC INT CONF SOFTW, P877, DOI 10.1145/2884781.2884805
   Chapman C, 2017, IEEE INT CONF AUTOM, P405, DOI 10.1109/ASE.2017.8115653
   Chen AR, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09893-w
   Chen BY, 2018, IEEE INT CONF AUTOM, P305, DOI 10.1145/3238147.3238214
   Chen BY, 2019, EMPIR SOFTW ENG, V24, P2285, DOI 10.1007/s10664-019-09690-0
   Chen BY, 2017, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.2017.15
   Chen BY, 2017, EMPIR SOFTW ENG, V22, P330, DOI 10.1007/s10664-016-9429-5
   Chen TH, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P243, DOI 10.1109/ICSE-SEIP.2017.26
   Chen TH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P666, DOI 10.1145/2950290.2950303
   Chen TH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1001, DOI 10.1145/2568225.2568259
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P321, DOI 10.1145/1368088.1368132
   Georges A, 2007, ACM SIGPLAN NOTICES, V42, P57, DOI 10.1145/1297105.1297033
   Göde N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P311, DOI 10.1145/1985793.1985836
   Hassan AE, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P713, DOI 10.1145/1368088.1379445
   Hassani M, 2018, EMPIR SOFTW ENG, V23, P3248, DOI 10.1007/s10664-018-9603-z
   He PJ, 2018, IEEE INT CONF AUTOM, P178, DOI 10.1145/3238147.3238193
   He S., 2020, to appear
   Hermans F, 2015, EMPIR SOFTW ENG, V20, P549, DOI 10.1007/s10664-013-9296-2
   Nguyen HV, 2012, IEEE INT CONF AUTOM, P282, DOI 10.1145/2351676.2351724
   Islam JF, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P73, DOI [10.1109/SANER.2019.8667993, 10.1109/saner.2019.8667993]
   Islam JF, 2019, INT C PROGRAM COMPRE, P81, DOI 10.1109/ICPC.2019.00022
   Jiang Lingxiao, 2007, P THE 6 JOINT M EURO, P55, DOI DOI 10.1145/1287624.1287634
   Jinyang Liu, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P863, DOI 10.1109/ASE.2019.00085
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Kabinna S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P154, DOI [10.1145/2901739.2901769, 10.1109/MSR.2016.025]
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser C, 2006, WORK CONF REVERSE EN, P19
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Li H, 2018, EMPIR SOFTW ENG, V23, P2655, DOI 10.1007/s10664-018-9595-8
   Li H, 2017, EMPIR SOFTW ENG, V22, P1684, DOI 10.1007/s10664-016-9456-2
   Li Z., 2021, P 2021 7 INT C COND, P1, DOI DOI 10.1109/CMMNO53328.2021.9467526
   Li ZH, 2020, IEEE INT CONF AUTOM, P361, DOI 10.1145/3324884.3416636
   Li ZH, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P147, DOI 10.1109/ICSE-Companion.2019.00062
   Li ZH, 2019, PROC INT CONF SOFTW, P152, DOI 10.1109/ICSE.2019.00032
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Livieri S, 2007, PROC INT CONF SOFTW, P106
   Log4j, US
   Mannan UA, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P225, DOI [10.1109/MobileSoft.2016.048, 10.1145/2897073.2897094]
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Mondal M, PROC 29 ANN INT C CO, P244
   Mondal M, 2020, INT C PROGRAM COMPRE, P208, DOI 10.1145/3387904.3389262
   Mondal M, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P50, DOI 10.1109/SANER.2018.8330196
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Parnin C, 2008, SOFTVIS 2008: PROCEEDINGS OF THE 4TH ACM SYMPOSIUM ON SOFTWARE VISUALIZATION, P77
   Pecchia A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P169, DOI 10.1109/ICSE.2015.145
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Rahman Foyzur, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P72, DOI 10.1109/MSR.2010.5463343
   Roy CK, 2009, IEEE ICST WORKSHOP, P157, DOI 10.1109/ICSTW.2009.18
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Schumacher Jan., 2010, Proc. ACMIEEE Int. Symp. on Empirical Software Eng. and Measurement. ESEM '10, V8, P1, DOI [10.1145/1852786.1852797, DOI 10.1145/1852786.1852797]
   Shang WY, 2014, PROC IEEE INT CONF S, P21, DOI 10.1109/ICSME.2014.24
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Svajlenko J, 2014, PROC IEEE INT CONF S, P321, DOI 10.1109/ICSME.2014.54
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   Xia X, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962606
   Xia X, 2015, INFORM SOFTWARE TECH, V61, P93, DOI 10.1016/j.infsof.2014.12.006
   Xiao X, 2015, LECT NOTES COMPUT SC, V9458, P335, DOI 10.1007/978-3-319-26529-2_18
   Yang JQ, 2014, EMPIR SOFTW ENG, V19, P1856, DOI 10.1007/s10664-013-9264-x
   Yao KD, 2018, PROCEEDINGS OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P127, DOI 10.1145/3184407.3184416
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Yuan D, 2011, ACM SIGPLAN NOTICES, V46, P3, DOI 10.1145/1961296.1950369
   Yuan Ding, 2014, 11 USENIX S OPERATIN, P249
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
   Zhao X, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P565, DOI 10.1145/3132747.3132778
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
NR 80
TC 8
Z9 9
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 22
PY 2021
VL 48
IS 7
BP 2476
EP 2494
DI 10.1109/TSE.2021.3060918
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5ZB
UT WOS:000825973700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, HX
   Wang, SW
   Li, H
   Chen, TH
   Hassan, AE
AF Zhang, Haoxiang
   Wang, Shaowei
   Li, Heng
   Chen, Tse-Hsun
   Hassan, Ahmed E.
TI A Study of C/C plus plus Code Weaknesses on Stack Overflow
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Code security; C/C plus; empirical software engineering; crowdsourced
   knowledge sharing and management; stack overflow
ID SECURITY
AB Stack Overflow hosts millions of solutions that aim to solve developers' programming issues. In this crowdsourced question answering process, Stack Overflow becomes a code hosting website where developers actively share its code. However, code snippets on Stack Overflow may contain security vulnerabilities, and if shared carelessly, such snippets can introduce security problems in software systems. In this paper, we empirically study the prevalence of the Common Weakness Enumeration- CWE, in code snippets of C/C++ related answers. We explore the characteristics of Code(w) , i.e., code snippets that have CWE instances, in terms of the types of weaknesses, the evolution of Code(w), and who contributed such code snippets. We find that: 1) 36 percent (i.e., 32 out of 89) CWE types are detected in Code(w) on Stack Overflow. Particularly, CWE-119, i.e., improper restriction of operations within the bounds of a memory buffer, is common in both answer code snippets and real-world software systems. Furthermore, the proportion of Code(w )doubled from 2008 to 2018 after normalizing by the total number of C/C++ snippets in each year. 2) In general, code revisions are associated with a reduction in the number of code weaknesses. However, the majority of Code(w) had weaknesses introduced in the first version of the code, and these Code(w) were never revised since then. Only 7.5 percent of users who contributed C/C++ code snippets posted or edited code with weaknesses. Users contributed less code with CWE weakness when they were more active (i.e., they either revised more code snippets or had a higher reputation). We also find that some users tended to have the same CWE type repeatedly in their various code snippets. Our empirical study provides insights to users who share code snippets on Stack Overflow so that they are aware of the potential security issues. To understand the community feedback about improving code weaknesses by answer revisions, we also conduct a qualitative study and find that 62.5 percent of our suggested revisions are adopted by the community. Stack Overflow can perform CWE scanning for all the code that is hosted on its platform. Further research is needed to improve the quality of the crowdsourced knowledge on Stack Overflow.
C1 [Zhang, Haoxiang] Huawei Technol Co Ltd Canada, Ctr Software Excellence, Markham, ON L3R 5A4, Canada.
   [Wang, Shaowei] Univ Manitoba, Dept Comp Sci, Winnipeg, MB R3T 2N2, Canada.
   [Li, Heng] Polytech Montreal, Dept Comp Engn & Software Engn, Montreal, PQ H3T 1J4, Canada.
   [Chen, Tse-Hsun] Concordia Univ, Software Performance Anal & Reliabil SPEAR Lab, Montreal, PQ H3G 1M8, Canada.
   [Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
C3 Huawei Technologies; University of Manitoba; Universite de Montreal;
   Polytechnique Montreal; Concordia University - Canada; Queens University
   - Canada
RP Wang, SW (corresponding author), Univ Manitoba, Dept Comp Sci, Winnipeg, MB R3T 2N2, Canada.
EM hzhang@cs.queensu.ca; shaowei@cs.umanitoba.ca; heng.li@polymtl.ca;
   peterc@encs.concordia.ca; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Chen,
   Tse-Hsun/0000-0003-4027-0905; Li, Heng/0000-0001-5441-6763
CR Abdalkareem R, 2017, INFORM SOFTWARE TECH, V88, P148, DOI 10.1016/j.infsof.2017.04.005
   Acar Y, 2017, 2017 IEEE CYBERSECURITY DEVELOPMENT (SECDEV), P22, DOI 10.1109/SecDev.2017.17
   Acar Y, 2016, P IEEE S SECUR PRIV, P289, DOI 10.1109/SP.2016.25
   Alnaeli SM, 2016, 2016 IEEE 3RD WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P348, DOI 10.1109/WF-IoT.2016.7845497
   Alnaser Sahban, 2016, 2016 IEEE Power and Energy Society General Meeting (PESGM), DOI 10.1109/PESGM.2016.7741202
   An L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P283, DOI 10.1109/SANER.2017.7884629
   [Anonymous], Programming language comparison=Website
   Arusoaie A, 2017, INT SYMP SYMB NUMERI, P161, DOI 10.1109/SYNASC.2017.00035
   Baltes S, 2018, IEEE WORK CONF MIN S, P319, DOI 10.1145/3196398.3196430
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bosu A, 2013, IEEE WORK CONF MIN S, P89, DOI 10.1109/MSR.2013.6624013
   Chen MS, 2019, PROC INT CONF SOFTW, P536, DOI 10.1109/ICSE.2019.00065
   Chen QY, 2018, ASIA PAC SOFWR ENG, P345, DOI 10.1109/APSEC.2018.00049
   Dietz W, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2743019
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ferreira Campos Uriel, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P195, DOI 10.1109/MSR.2019.00039
   Fischer F, 2017, P IEEE S SECUR PRIV, P121, DOI 10.1109/SP.2017.31
   Howard M, 2009, IEEE SECUR PRIV, V7, P68, DOI 10.1109/MSP.2009.69
   Joshi A., 2014, INT J COMPUT SCI MOB, V3, P1251
   Keivanloo I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P664, DOI 10.1145/2568225.2568292
   Khandelwal S, 2017, PROCEEDINGS OF THE 10TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, P122, DOI 10.1145/3021460.3021474
   LANDIS JR, 1977, BIOMETRICS, V33, P363, DOI 10.2307/2529786
   Liu T, 2015, LECT NOTES COMPUT SC, V9109, P589, DOI 10.1007/978-3-319-19249-9_39
   Lopez T, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SECURITY AWARENESS FROM DESIGN TO DEPLOYMENT (SEAD), P26, DOI [10.23919/SEAD.2018.8472850, 10.1145/3194707.3194713]
   Mcheick H., 2010, P INT C COMP SYST AP, P1
   Meng N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P372, DOI 10.1145/3180155.3180201
   MITRE, 2019, 2019 CWE TOP 25 MOST
   MITRE, WEAKN SOFTW WRITT C
   Movshovitz-Attias Dana, 2013, 2013 IEEE/ACM International Conference on Advances in Social Networks Analysis and Mining (ASONAM), P886
   Pletea D., 2014, 11 WORKING C MSR, P348, DOI [10.1145/2597073.2597117, DOI 10.1145/2597073.2597117]
   Pomorova Oksana V., 2013, 2013 IEEE 7th International Conference on Intelligent Data Acquisition and Advanced Computing Systems (IDAACS), P640, DOI 10.1109/IDAACS.2013.6663003
   Rahman Akond, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P200, DOI 10.1109/MSR.2019.00040
   Seacord R, 2006, IEEE SECUR PRIV, V4, P74, DOI 10.1109/MSP.2006.22
   Seacord R., 2013, Secure Coding in C and C++, V2nd
   Slashdot, 2019, WHICH PROGRAMMING LA
   Treude C, 2017, PROC IEEE INT CONF S, P509, DOI 10.1109/ICSME.2017.24
   Verdi M., 2021, ARXIV 191001321
   Wang SW, 2020, IEEE T SOFTWARE ENG, V46, P1024, DOI 10.1109/TSE.2018.2874470
   WhiteSource, WHAT ARE THEMOST SEC
   Wikipedia, VULNERABILITY COMPUT
   Worth D. J., 2009, SCI TECHNOL FACILITI, P1
   Wu YH, 2019, EMPIR SOFTW ENG, V24, P637, DOI 10.1007/s10664-018-9634-5
   Yang D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P391, DOI [10.1109/MSR.2016.047, 10.1145/2901739.2901767]
   Yang JQ, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P51, DOI 10.1109/ICSE-SEIP.2019.00014
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Younan Yves, 2010, International Journal of Secure Software Engineering, V1, P57, DOI 10.4018/jsse.2010040104
   Younan Yves., 2005, Security of memory allocators for c and c++
   Yulianto SV, 2014, 2014 International Conference on Data and Software Engineering (ICODSE)
NR 48
TC 10
Z9 10
U1 2
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 19
PY 2021
VL 48
IS 7
BP 2359
EP 2375
DI 10.1109/TSE.2021.3058985
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5ZI
UT WOS:000825974400001
DA 2024-07-18
ER

PT J
AU Aghajani, E
   Bavota, G
   Linares-Vásquez, M
   Lanza, M
AF Aghajani, Emad
   Bavota, Gabriele
   Linares-Vasquez, Mario
   Lanza, Michele
TI Automated Documentation of Android Apps
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Program comprehension; documentation; Android
ID CODE; CONTEXT
AB Developers do not always have the knowledge needed to understand source code and must refer to different resources (e.g., teammates, documentation, the web). This non-trivial process, called program comprehension, is very time-consuming. While many approaches support the comprehension of a given code at hand, they are mostly focused on defining extractive summaries from the code (i.e., on selecting from a given piece of code the most important statements/comments to comprehend it). However, if the information needed to comprehend the code is not there, their usefulness is limited. We present ADANA, an approach to automatically inject comments describing a given piece of Android code. ADANA reuses the descriptions of similar and well-documented code snippets retrieved from various online resources. Our evaluation has shown that ADANA is able to aid the program comprehension process.
C1 [Aghajani, Emad; Bavota, Gabriele; Lanza, Michele] Univ Svizzera Italiana USI, CH-6900 Lugano, Switzerland.
   [Linares-Vasquez, Mario] Univ Los Andes, Bogota 111711, Colombia.
C3 Universita della Svizzera Italiana; Universidad de los Andes (Colombia)
RP Aghajani, E (corresponding author), Univ Svizzera Italiana USI, CH-6900 Lugano, Switzerland.
EM emad.aghajani@usi.ch; gabriele.bavota@usi.ch;
   m.linaresv@uniandes.edu.co; michele.lanza@usi.ch
RI Aghajani, Emad/AAI-4260-2021; Lanza, Michele/JNQ-9470-2023
OI Aghajani, Emad/0000-0003-4536-3166; Lanza, Michele/0000-0003-4391-0197;
   BAVOTA, Gabriele/0000-0002-2216-3148; Linares-Vasquez,
   Mario/0000-0003-0161-2888
FU Swiss National Science Foundation [172799]
FX The authors would like to thank the participants involved in the
   reported empirical studies. We gratefully acknowledge the financial
   support of the Swiss National Science Foundation for the project PROBE
   (SNF ProjectNo. 172799).
CR ANNIE TT YING., 2013, P 2013 9 JOINT M FDN, P655
   [Anonymous], 2018, REPLICATION PACKAGE
   [Anonymous], 2016, P 25 INT S SOFTW TES
   [Anonymous], 2007, DUBLICATION REDUNDAN
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bajracharya S.K., 2010, P 18 ACM SIGSOFT INT, P157, DOI 10.1145/1882291.1882316
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Buse RPL, 2012, PROC INT CONF SOFTW, P782, DOI 10.1109/ICSE.2012.6227140
   Dragan N, 2006, PROC IEEE INT CONF S, P24
   Dragan N, 2010, PROC IEEE INT CONF S
   Cortés-Coy LF, 2014, IEEE INT WORK C SO, P275, DOI 10.1109/SCAM.2014.14
   Flesch R, 1948, J APPL PSYCHOL, V32, P221, DOI 10.1037/h0057532
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Fluri B, 2009, SOFTWARE QUAL J, V17, P367, DOI 10.1007/s11219-009-9075-x
   Fowkes J, 2017, IEEE T SOFTWARE ENG, V43, P1095, DOI 10.1109/TSE.2017.2664836
   Grissom R. J., EFFECT SIZES RES BRO
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   Jaccard P., 1901, B SOCIT VAUDOISE SCI, V37, P547, DOI [10.5169/seals-266440, DOI 10.5169/SEALS-266440]
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jiang SY, 2017, INT C PROGRAM COMPRE, P320, DOI 10.1109/ICPC.2017.12
   Jiang SY, 2017, INT C PROGRAM COMPRE, P364, DOI 10.1109/ICPC.2017.13
   Kamimura M, 2013, CONF PROC INT SYMP C, P215, DOI 10.1109/ICPC.2013.6613851
   Kim M, 2013, IEEE T SOFTWARE ENG, V39, P45, DOI 10.1109/TSE.2012.16
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Li BY, 2018, INT C PROGRAM COMPRE, P52, DOI 10.1145/3196321.3196339
   Li BY, 2016, IEEE INT CONF SOFTW, P341, DOI 10.1109/ICST.2016.30
   Linares-Vasquez M., 2014, PROC 11 WORK C MININ, P242
   Linares-Vásquez M, 2015, IEEE INT CONF AUTOM, P36, DOI 10.1109/ASE.2015.67
   Linares-Vásquez M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P709, DOI 10.1109/ICSE.2015.229
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   McBurney P. W., 2014, P 22 INT C PROGRAM C, P279
   McBurney PW, 2016, IEEE T SOFTWARE ENG, V42, P103, DOI 10.1109/TSE.2015.2465386
   Mcmillan C, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522930
   Minelli R, 2013, EUR CON SFTWR MTNCE, P144, DOI 10.1109/CSMR.2013.24
   Moreno L, 2017, IEEE T SOFTWARE ENG, V43, P106, DOI 10.1109/TSE.2016.2591536
   Moreno L, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P484, DOI 10.1145/2635868.2635870
   Moreno L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P880, DOI 10.1109/ICSE.2015.98
   Moreno L, 2013, CONF PROC INT SYMP C, P230, DOI 10.1109/ICPC.2013.6613855
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Panichella Sebastiano, 2012, 2012 IEEE 20th International Conference on Program Comprehension, P63
   Panichella S, 2016, PROC INT CONF SOFTW, P547, DOI 10.1145/2884781.2884847
   Ponzanelli L, 2017, PROC INT CONF SOFTW, P94, DOI 10.1109/ICSE.2017.17
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Rahman MM, 2015, IEEE INT WORK C SO, P81, DOI 10.1109/SCAM.2015.7335404
   Rastkar S., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P103, DOI 10.1109/ICSM.2011.6080777
   Rastkar S, 2014, IEEE T SOFTWARE ENG, V40, P366, DOI 10.1109/TSE.2013.2297712
   Robillard MP, 2015, EMPIR SOFTW ENG, V20, P1558, DOI 10.1007/s10664-014-9323-y
   Rodeghero P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P390, DOI 10.1145/2568225.2568247
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Ruiz I. J. M., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P113
   Scalabrino S, 2016, 2016 IEEE 24 INT C P, P1
   Scalabrino S, 2017, IEEE INT CONF AUTOM, P417, DOI 10.1109/ASE.2017.8115654
   Spinellis D, 2010, IEEE SOFTWARE, V27, P18, DOI 10.1109/MS.2010.95
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Vassallo Carmine, 2014, Proceedings of the 22nd International Conference on Program Comprehension, P106
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Wong E, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P380, DOI 10.1109/SANER.2015.7081848
   Ying ATT, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P460, DOI 10.1145/2635868.2635877
NR 61
TC 5
Z9 5
U1 0
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2021
VL 47
IS 1
BP 204
EP 220
DI 10.1109/TSE.2018.2890652
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA PR6XN
UT WOS:000607376900010
DA 2024-07-18
ER

PT J
AU Passos, L
   Queiroz, R
   Mukelabai, M
   Berger, T
   Apel, S
   Czarnecki, K
   Padilla, JA
AF Passos, Leonardo
   Queiroz, Rodrigo
   Mukelabai, Mukelabai
   Berger, Thorsten
   Apel, Sven
   Czarnecki, Krzysztof
   Padilla, Jesus Alejandro
TI A Study of Feature Scattering in the Linux Kernel
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Pre-processor; linux kernel; feature; scattering
ID EVOLUTION; SOFTWARE; CODE
AB Feature code is often scattered across a software system. Scattering is not necessarily bad if used with care, as witnessed by systems with highly scattered features that evolved successfully. Feature scattering, often realized with a pre-processor, circumvents limitations of programming languages and software architectures. Unfortunately, little is known about the principles governing scattering in large and long-living software systems. We present a longitudinal study of feature scattering in the Linux kernel, complemented by a survey with 74, and interviews with nine Linux kernel developers. We analyzed almost eight years of the kernel's history, focusing on its largest subsystem: device drivers. We learned that the ratio of scattered features remained nearly constant and that most features were introduced without scattering. Yet, scattering easily crosses subsystem boundaries, and highly scattered outliers exist. Scattering often addresses a performance-maintenance tradeoff (alleviating complicated APIs), hardware design limitations, and avoids code duplication. While developers do not consciously enforce scattering limits, they actually improve the system design and refactor code, thereby mitigating pre-processor idiosyncrasies or reducing its use.
C1 [Passos, Leonardo; Queiroz, Rodrigo; Czarnecki, Krzysztof] Univ Waterloo, Elect & Comp Engn, Waterloo, ON N2L 3G1, Canada.
   [Mukelabai, Mukelabai; Berger, Thorsten] Chalmers Univ Technol, Comp Sci & Engn, SE-41296 Gothenburg, Sweden.
   [Mukelabai, Mukelabai; Berger, Thorsten] Univ Gothenburg, SE-40530 Gothenburg, Sweden.
   [Apel, Sven] Univ Passau, Informat & Math, DE-94032 Bavaria, Germany.
   [Padilla, Jesus Alejandro] SAP Waterloo, SAP, Waterloo, ON N2L 6R2, Canada.
C3 University of Waterloo; Chalmers University of Technology; University of
   Gothenburg; University of Passau
RP Mukelabai, M (corresponding author), Chalmers Univ Technol, Comp Sci & Engn, SE-41296 Gothenburg, Sweden.
EM lpassos@gsd.uwaterloo.ca; rqueiroz@gsd.uwaterloo.ca;
   mukelabai.mukelabai@cse.gu.se; thorsten.berger@cse.gu.se;
   apel@uni-passau.de; kczarnec@gsd.uwaterloo.ca; jesalepad@gmail.com
OI Passos, Leonardo/0000-0001-6591-993X; Apel, Sven/0000-0003-3687-2233;
   Mukelabai, Mukelabai/0000-0002-3868-4319
FU Vinnova Sweden [2016-02804]; Swedish Research Council [257822902];
   German Research Foundation [AP206/5, AP 206/6, AP 206/11]; Vinnova
   [2016-02804] Funding Source: Vinnova
FX Supported by Vinnova Sweden (project 2016-02804), the Swedish Research
   Council (project 257822902), and the German Research Foundation
   (AP206/5, AP 206/6, and AP 206/11).
CR Abukwaik H, 2018, PROC IEEE INT CONF S, P529, DOI 10.1109/ICSME.2018.00049
   Andam Berima, 2017, P 11 INT WORKSH VAR, P100, DOI DOI 10.1145/3023956.3023967
   [Anonymous], 2005, Technical report CMU/SEI-2005-HB- 004
   [Anonymous], ADV CONFIGURATION PO
   [Anonymous], 2012, P WORKSH MOD SYST SO
   [Anonymous], 2009, Introduction to the Practice of Statistics
   [Anonymous], 2015, P 19 INT C SOFTW PRO, DOI DOI 10.1145/2791060.2791108
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   [Anonymous], 1997, Formal Concept Analysis: Mathematical Foundations
   Apel S, 2008, IEEE T SOFTWARE ENG, V34, P162, DOI 10.1109/TSE.2007.70770
   Behringer B, 2017, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2017.58
   Berger T., 2010, P INT C AUT SOFTW EN, P73, DOI DOI 10.1145/1858996.1859010
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Berger T, 2010, LECT NOTES COMPUT SC, V6287, P498, DOI 10.1007/978-3-642-15579-6_48
   Burger A, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P532, DOI 10.1109/SANER.2018.8330254
   Chaikalis T, 2015, SOFTWARE QUAL J, V23, P79, DOI 10.1007/s11219-013-9204-4
   Corbet Jonathan., 2010, Linux Kernel Development: How Fast it is Going, Who is Doing it, What They are Doing, and Who is Sponsoring It
   Corbet Jonathan, 2005, Linux device drivers, VThird
   Couto MV, 2011, EUR CON SFTWR MTNCE, P191, DOI 10.1109/CSMR.2011.25
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Eaddy M., 2007, 1 INT WORKSHOP ASSES, P2, DOI [10.1109/ACOM.2007.4, DOI 10.1109/ACOM.2007.4]
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Favre JM, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P329, DOI 10.1109/ICSM.1996.565036
   Feitelson DG, 2012, J SYST SOFTWARE, V85, P859, DOI 10.1016/j.jss.2011.10.050
   Figueiredo E, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P183
   Figueiredo E, 2009, INT C PROGRAM COMPRE, P138, DOI 10.1109/ICPC.2009.5090037
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Guo J, EMPIRICAL SOFTW ENG, V21, P1744
   Hubert M, 2008, COMPUT STAT DATA AN, V52, P5186, DOI 10.1016/j.csda.2007.11.008
   Izurieta C., 2006, ISESE 06, P204, DOI DOI 10.1145/1159733.1159765
   Ji Wenbin, 2015, INT SYST SOFTW PROD, P61, DOI DOI 10.1145/2791060.2791107
   Jones M. T, IBM DEV WORKS
   K_astner C., 2011, P 15 INT SOFTW PROD
   Kbuild, KERNEL BUILD INFRAST
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   KRONE M, 1994, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.1994.296765
   Krüger J, 2017, ACM INT CONF PR SER, P105, DOI 10.1145/3168365.3168371
   Kruger J., 2018, Features and How to Find Them: A Survey of Manual Feature Location
   Liebig Jorg, 2011, AOSD 11
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Lotufo R, 2010, LECT NOTES COMPUT SC, V6287, P136, DOI 10.1007/978-3-642-15579-6_10
   Mukelabai M, 2018, PROC IEEE ACM INT C, P81, DOI 10.1145/3183440.3183499
   Nadi S, 2015, IEEE T SOFTWARE ENG, V41, P820, DOI 10.1109/TSE.2015.2415793
   Nadi S, 2014, J SOFTW-EVOL PROC, V26, P730, DOI 10.1002/smr.1595
   Oliveira P, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P254, DOI 10.1109/CSMR-WCRE.2014.6747177
   Passos L., 2013, P 7 INT WORKSH VAR M
   Passos L., 2015, P 14 INT C MODULARIT, P81
   Paul S., 1991, P P 1991 C CTR ADV S, P37
   Queiroz R, 2017, SOFTW SYST MODEL, V16, P77, DOI 10.1007/s10270-015-0483-z
   Robillard MP, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189751
   Robillard MP, 2003, PROC INT CONF SOFTW, P822, DOI 10.1109/ICSE.2003.1201304
   Rothbauer PauletteM., 2008, SAGE ENCY QUALITATIV, P1
   Rubin J., 2013, Domain Engineering, P29, DOI DOI 10.1007/978-3-642-36654-3
   Seiler M, 2017, LECT NOTES COMPUT SC, V10153, P174, DOI 10.1007/978-3-319-54045-0_13
   She S., 2010, VaMoS, P45
   Sincero J., 2007, P INT WORKSH OP SOUR, P2
   SPENCER H, 1992, PROCEEDINGS OF THE SUMMER 1992 USENIX CONFERENCE, P185
   Sullivan Kevin., 2005, SIGSOFT SOFTW ENG NO, V30, P166
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   Vasa R, 2009, PROC IEEE INT CONF S, P179, DOI 10.1109/ICSM.2009.5306322
   Venkateswaran S., 2008, Essential Linux device drivers
   Voelter M, 2015, IEEE SOFTWARE, V32, P46, DOI 10.1109/MS.2014.103
NR 62
TC 17
Z9 18
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2021
VL 47
IS 1
BP 146
EP 164
DI 10.1109/TSE.2018.2884911
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA PR6XN
UT WOS:000607376900007
DA 2024-07-18
ER

PT J
AU Zou, WQ
   Lo, D
   Chen, ZY
   Xia, X
   Feng, Y
   Xu, BW
AF Zou, Weiqin
   Lo, David
   Chen, Zhenyu
   Xia, Xin
   Feng, Yang
   Xu, Baowen
TI How Practitioners Perceive Automated Bug Report Management Techniques
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Software; Software engineering; Bibliographies;
   Conferences; Interviews; Maintenance engineering; Bug report; developer
   perception
ID INFORMATION-RETRIEVAL; LOCALIZATION; SEVERITY
AB Bug reports play an important role in the process of debugging and fixing bugs. To reduce the burden of bug report managers and facilitate the process of bug fixing, a great amount of software engineering research has been invested toward automated bug report management techniques. However, the verdict is still open whether such techniques are actually required and applicable outside the domain of theoretical research. To fill this gap, we conducted a survey among 327 practitioners to gain their insights into various categories of automated bug report management techniques. Specifically, we asked the respondents to rate the importance of such techniques and provide the rationale. To get deeper insights into practitioners' perspective, we conducted follow-up interviews with 25 interviewees selected from the survey respondents. Through the survey and the interviews, we gained a better understanding of the perceived usefulness (or its lack) of different categories of automated bug report management techniques. Based on our findings, we summarized some potential research directions in developing techniques to help developers better manage bug reports.
C1 [Zou, Weiqin; Chen, Zhenyu; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing Shi 210008, Jiangsu Sheng, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Feng, Yang] Univ Calif Irvine, Dept Informat, Irvine, CA 92697 USA.
C3 Nanjing University; Singapore Management University; Monash University;
   University of California System; University of California Irvine
RP Chen, ZY (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing Shi 210008, Jiangsu Sheng, Peoples R China.; Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
EM wqzou@smail.nju.edu.cn; davidlo@smu.edu.sg; zychen@nju.edu.cn;
   xin.xia@monash.edu; yang.feng@uci.edu; bwxu@nju.edu.cn
RI Xia, Xin/AAD-6217-2022; Xu, Baowen/IXW-4882-2023; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Xu, Baowen/0000-0001-7743-1296; Zou,
   Weiqin/0000-0002-0913-1539; Chen, Zhenyu/0000-0002-9592-7022; Lo,
   David/0000-0002-4367-7201
FU National Natural Science Foundation of China [61690201, 61373013]; China
   Scholarship Council Scholarship
FX We are grateful for the survey and interview participants who answered
   our survey questions and provided many insightful comments. We strongly
   thank the anonymous reviewers for their constructive comments. This
   research is partly supported by National Natural Science Foundation of
   China (Grant No. 61690201, 61373013), the China Scholarship Council
   Scholarship.
CR Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   Aniche M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P499, DOI 10.1145/3180155.3180180
   [Anonymous], 2007, 4 INT WORKSHOP MININ
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Armstrong RA, 2014, OPHTHAL PHYSL OPT, V34, P502, DOI 10.1111/opo.12131
   Bavota G, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P692, DOI 10.1109/ICSE.2013.6606615
   Begel A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P12, DOI 10.1145/2568225.2568233
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Broadwell P, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 12TH USENIX SECURITY SYMPOSIUM, P273
   Budi A, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P447
   Canfora G., 2011, 2011 18th Working Conference on Reverse Engineering, P191, DOI 10.1109/WCRE.2011.31
   Carver JC, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962597
   Chaparro O, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P396, DOI 10.1145/3106237.3106285
   Cliff N., 2014, ORDINAL METHODS BEHA
   Coelho J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P186, DOI 10.1145/3106237.3106246
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   El Mezouar M, 2018, EMPIR SOFTW ENG, V23, P1704, DOI 10.1007/s10664-017-9559-4
   Enck W, 2014, ACM T COMPUT SYST, V32, DOI 10.1145/2619091
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P225, DOI 10.1109/WCRE.2012.32
   Fisher RA, 1922, J R STAT SOC, V85, P87, DOI 10.2307/2340521
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Fowkes J, 2017, IEEE T SOFTWARE ENG, V43, P1095, DOI 10.1109/TSE.2017.2664836
   Fritz T, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P487, DOI 10.1145/2556288.2557383
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Hindle A, 2016, EMPIR SOFTW ENG, V21, P368, DOI 10.1007/s10664-015-9387-3
   Hindle A, 2015, EMPIR SOFTW ENG, V20, P479, DOI 10.1007/s10664-014-9312-1
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Joorabchi ME, 2014, P 11 WORK C MIN SOFT, P62, DOI [10.1145/2597073.2597098, DOI 10.1145/2597073.2597098]
   Kagdi H, 2009, INT C PROGRAM COMPRE, P273, DOI 10.1109/ICPC.2009.5090056
   Kasurinen J., 2013, Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering (EASE), Porto de Galinhas, Brazil, P36, DOI DOI 10.1145/2460999.2461004
   Kikas R, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P291, DOI [10.1109/MSR.2016.038, 10.1145/2901739.2901751]
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P1597, DOI 10.1109/TSE.2013.24
   Kim M, 2018, IEEE T SOFTWARE ENG, V44, P1024, DOI 10.1109/TSE.2017.2754374
   Kim M, 2016, PROC INT CONF SOFTW, P96, DOI 10.1145/2884781.2884783
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Laghari G, 2016, IEEE INT CONF AUTOM, P274, DOI 10.1145/2970276.2970308
   Lamkanfi A, 2011, EUR CON SFTWR MTNCE, P249, DOI 10.1109/CSMR.2011.31
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Liu C, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P282, DOI 10.1109/ICST.2013.24
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Lotufo R, 2015, EMPIR SOFTW ENG, V20, P516, DOI 10.1007/s10664-014-9311-2
   McDonald J.H., 2009, HDB BIOL STAT, V2
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Moran K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P673, DOI 10.1145/2786805.2786857
   Moran K, 2016, IEEE INT CONF SOFTW, P33, DOI 10.1109/ICST.2016.34
   Moreno L, 2014, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSME.2014.37
   Murphy-Hill E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1, DOI 10.1145/2568225.2568226
   Ong AD, 2000, J APPL SOC PSYCHOL, V30, P1691, DOI 10.1111/j.1559-1816.2000.tb02462.x
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Rastkar Sarah, 2010, P 32 ACM IEEE INT C, V1, P505, DOI DOI 10.1145/1806799.1806872
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Saha RK, 2014, PROC IEEE INT CONF S, P161, DOI 10.1109/ICSME.2014.38
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Singer L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P211, DOI 10.1145/2568225.2568305
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Spencer D., 2009, CARD SORTING DESIGNI
   Staron M, 2010, INFORM SOFTWARE TECH, V52, P1069, DOI 10.1016/j.infsof.2010.05.005
   Strauss A. L., 1997, Grounded Theory in Practice
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Sun J, 2010, PROCEEDING OF THE THIRD WORLD CONFERENCE ON 3D FABRICS AND THEIR APPLICATIONS, P45
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Thung F., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P205, DOI 10.1109/WCRE.2012.30
   Thung F., 2014, P 29 ACM IEEE INT C, P871
   Thung F, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P767, DOI 10.1145/2635868.2661678
   Thung F, 2015, INT C PROGRAM COMPRE, P60, DOI 10.1109/ICPC.2015.15
   Thung F, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P420, DOI 10.1109/ICSM.2012.6405302
   Tian Y, 2012, APPL MECH MATER, V166-169, P215, DOI 10.4028/www.scientific.net/AMM.166-169.215
   Tian Y, 2015, EMPIR SOFTW ENG, V20, P1354, DOI 10.1007/s10664-014-9331-y
   Treude C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P625, DOI 10.1145/2786805.2786827
   Wang J, 2012, INT SYMP EMP SOFTWAR, P191, DOI 10.1145/2372251.2372287
   Wang SW, 2016, J SOFTW-EVOL PROC, V28, P921, DOI 10.1002/smr.1801
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Xuan JF, 2015, IEEE T KNOWL DATA EN, V27, P264, DOI 10.1109/TKDE.2014.2324590
   Xuan JF, 2012, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2012.6227209
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zhang T, 2016, J SYST SOFTWARE, V117, P166, DOI 10.1016/j.jss.2016.02.034
   Zhang T, 2016, COMPUT J, V59, P741, DOI 10.1093/comjnl/bxv114
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zimmermann T, 2012, PROC INT CONF SOFTW, P1074, DOI 10.1109/ICSE.2012.6227112
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 93
TC 43
Z9 47
U1 1
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2020
VL 46
IS 8
BP 836
EP 862
DI 10.1109/TSE.2018.2870414
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA NB6VD
UT WOS:000560651400002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Hierons, RM
AF Hierons, Robert Mark
TI Testing from Partial Finite State Machines without Harmonised Traces
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering/software/program verification; software
   engineering/testing and debugging; systems and software; checking
   experiment; partial finite state machine
ID TEST-GENERATION; TEST SELECTION; NUMBER; FSM
AB This paper concerns the problem of testing from a partial, possibly non-deterministic, finite state machine (FSM) S. Two notions of correctness (quasi-reduction and quasi-equivalence) have previously been defined for partial FSMs but these, and the corresponding test generation techniques, only apply to FSMs that have harmonised traces. We show how quasi-reduction and quasi-equivalence can be generalised to all partial FSMs. We also consider the problem of generating an m-complete test suite from a partial FSM S: a test suite that is guaranteed to determine correctness as long as the system under test has no more than m states. We prove that we can complete S to form a completely-specified non-deterministic FSM S' such that any m-complete test suite generated from S' can be converted into an m-complete test suite for S. We also show that there is a correspondence between test suites that are reduced for S and S' and also that are minimal for S and S'.
C1 [Hierons, Robert Mark] Brunel Univ London, Dept Comp Sci, Uxbridge UB8 3PH, Middx, England.
C3 Brunel University
RP Hierons, RM (corresponding author), Brunel Univ London, Dept Comp Sci, Uxbridge UB8 3PH, Middx, England.
EM rob.hierons@brunel.ac.uk
OI Hierons, Robert/0000-0002-4771-1446
CR ABOELFOTOH H, 1993, SOFTWARE ENG J, V8, P184, DOI 10.1049/sej.1993.0024
   [Anonymous], 1964, 5 ANN S SWITCH CIRC, DOI DOI 10.1109/SWCT.1964.8
   Bochmann G. V., 1992, PROTOCOL TEST SYSTEM, VIV, P17
   Bonifacio Adilson Luiz, 2014, Software Engineering and Formal Methods. 12th International Conference, SEFM 2014. Proceedings: LNCS 8702, P96, DOI 10.1007/978-3-319-10431-7_8
   Bonifacio AL, 2014, LECT NOTES COMPUT SC, V8687, P80
   Bonifacio Adilson Luiz, 2014, S APPL COMP SAC 2014, P1287
   Boroday SY, 1998, TESTING OF COMMUNICATING SYSTEMS, P101
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Fujiwara S, 1991, P PROT TEST SYST, VIV, P267
   Gaudel MC, 1995, LECT NOTES COMPUT SC, V915, P82
   Grieskamp W, 2011, SOFTW TEST VERIF REL, V21, P55, DOI 10.1002/stvr.427
   Hierons RM, 2010, AUTOMAT SOFTW ENG, V17, P217, DOI 10.1007/s10515-009-0061-0
   Hierons RM, 2004, IEEE T COMPUT, V53, P1330, DOI 10.1109/TC.2004.85
   Hierons RM, 2004, INFORM PROCESS LETT, V90, P287, DOI 10.1016/j.ipl.2004.03.003
   Hierons RM, 1998, COMPUT J, V41, P349, DOI 10.1093/comjnl/41.5.349
   Hierons RM, 2015, COMPUT J, V58, P3089, DOI 10.1093/comjnl/bxv041
   Hwang I, 2001, COMPUT COMMUN, V24, P1213, DOI 10.1016/S0140-3664(00)00327-3
   LUO G, 1994, IEEE T SOFTWARE ENG, V20, P149, DOI 10.1109/32.265636
   Luo G., 1994, P 7 IFIP WORKSH PROT, P95
   Moore E.F., 1956, AUTOMATA STUDIES
   Petrenko A, 2005, IEEE T COMPUT, V54, P1154, DOI 10.1109/TC.2005.152
   Petrenko A., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P310, DOI 10.1109/ICST.2012.111
   Petrenko A., 1996, Testing of Communicating Systems. IFIP TC6 9th International Workshop on Testing of Communicating Systems, P125
   PETRENKO A, 1994, PROC IFIP TC6 WG6 1, V19, P363
   Petrenko A, 2006, LECT NOTES COMPUT SC, V3997, P118
   Simao A, 2008, LECT NOTES COMPUT SC, V5047, P153, DOI 10.1007/978-3-540-68524-1_12
   Simao A, 2010, COMPUT J, V53, P1508, DOI 10.1093/comjnl/bxp073
   TRIPATHY P, 1992, P 5 INT WORKSH PROT, P309
   Vasilevskii M.P., 1973, CYBERNETICS, V4, P653
   Zhang F, 2003, IEEE T SOFTWARE ENG, V29, P1, DOI 10.1109/TSE.2003.1166585
NR 30
TC 7
Z9 7
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2017
VL 43
IS 11
BP 1033
EP 1043
DI 10.1109/TSE.2017.2652457
PG 11
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FM5XS
UT WOS:000415117000003
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Fucci, D
   Erdogmus, H
   Turhan, B
   Oivo, M
   Juristo, N
AF Fucci, Davide
   Erdogmus, Hakan
   Turhan, Burak
   Oivo, Markku
   Juristo, Natalia
TI A Dissection of the Test-Driven Development Process: Does It Really
   Matter to Test-First or to Test-Last?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Test-driven development; empirical investigation; process dimensions;
   external quality; productivity
ID REGRESSION-ANALYSIS; MODEL; TDD
AB Background: Test-driven development (TDD) is a technique that repeats short coding cycles interleaved with testing. The developer first writes a unit test for the desired functionality, followed by the necessary production code, and refactors the code. Many empirical studies neglect unique process characteristics related to TDD iterative nature. Aim: We formulate four process characteristic: sequencing, granularity, uniformity, and refactoring effort. We investigate how these characteristics impact quality and productivity in TDD and related variations. Method: We analyzed 82 data points collected from 39 professionals, each capturing the process used while performing a specific development task. We built regression models to assess the impact of process characteristics on quality and productivity. Quality was measured by functional correctness. Result: Quality and productivity improvements were primarily positively associated with the granularity and uniformity. Sequencing, the order in which test and production code are written, had no important influence. Refactoring effort was negatively associated with both outcomes. We explain the unexpected negative correlation with quality by possible prevalence of mixed refactoring. Conclusion: The claimed benefits of TDD may not be due to its distinctive test-first dynamic, but rather due to the fact that TDD-like processes encourage fine-grained, steady steps that improve focus and flow.
C1 [Fucci, Davide; Turhan, Burak; Oivo, Markku; Juristo, Natalia] Univ Oulu, Dept Informat Proc Sci, Oulu 90014, Finland.
   [Erdogmus, Hakan] Carnegie Mellon Univ, Silicon Valley Campus, Pittsburgh, PA 15213 USA.
   [Juristo, Natalia] Univ Politecn Madrid, Escuela Tecn Super Ingenieros Informat, E-28040 Madrid, Spain.
C3 University of Oulu; Carnegie Mellon University; Universidad Politecnica
   de Madrid
RP Fucci, D (corresponding author), Univ Oulu, Dept Informat Proc Sci, Oulu 90014, Finland.
EM davide.fucci@oulu.fi; hakan.erdogmus@sv.cmu.edu; burak.turhan@oulu.fi;
   Markku.Oivo@oulu.fi; natalia@fi.upm.es
RI Erdogmus, Hakan/HTQ-8803-2023; Fucci, Davide/C-1463-2015; Turhan,
   Burak/G-7400-2011
OI Erdogmus, Hakan/0000-0002-7987-5621; Fucci, Davide/0000-0002-0679-4361;
   Turhan, Burak/0000-0003-1511-2163
FU Academy of Finland Project [278354]; TEKES FiDiPro Programme
FX This research is supported in part by the Academy of Finland Project
   #278354 and the TEKES FiDiPro Programme. We would like to acknowledge
   Dr. Lucas Layman, who designed one of the tasks used in the study. We
   are indebted to the reviewers whose diligence, thoroughness and
   attention to detail were extremely helpful. They identified many
   mistakes and led us to uncover inconsistencies in the data. In
   particular, through their suggestions and insights, we were able to
   revise and improve our measures and analyses considerably.
CR AKAIKE H, 1974, IEEE T AUTOMAT CONTR, VAC19, P716, DOI 10.1109/TAC.1974.1100705
   Aniche Mauricio Finavaro, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P469, DOI 10.1109/ICSTW.2010.16
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   Beck Kent L., 2003, Test Driven Development By Example
   Becker K, 2015, INFORM SOFTWARE TECH, V57, P494, DOI 10.1016/j.infsof.2014.06.003
   Burnham K. P., 2003, MODEL SELECTION MULT
   Burnham KP, 2004, SOCIOL METHOD RES, V33, P261, DOI 10.1177/0049124104268644
   Causevic Adnan, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P223, DOI 10.1049/ic.2012.0029
   Causevic A., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P337, DOI 10.1109/ICST.2011.19
   CLEVELAND WS, 1988, J AM STAT ASSOC, V83, P596, DOI 10.2307/2289282
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Ellis PD, 2010, ESSENTIAL GUIDE TO EFFECT SIZES: STATISTICAL POWER, META-ANALYSIS AND THE INTERPRETATION OF RESEARCH RESULTS, P1
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Erdogmus H., 2009, ENCY SOFTWARE ENG, P1211
   FARRAR DE, 1967, REV ECON STAT, V49, P92, DOI 10.2307/1937887
   Fowler M., 2009, Refactoring: improving the design of existing code
   Fucci Davide, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P103, DOI 10.1109/ESEM.2013.15
   Fucci D., 2014, Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, P10
   Fucci D., 2013, EMPIR SOFTW ENG, V19, P1
   Fucci D., 2016, DISSECTION TEST DRIV
   Fucci Davide., 2014, ACM INT C PROCEEDING, DOI DOI 10.1145/2601248.2601272
   George B., 2003, Proc. of the ACM SAC 2003. SAC 03, P1135, DOI [DOI 10.1145/952532.952753, 10.1145/952532.952753$, DOI 10.1145/952532.952753$]
   Hernandez AS, 2012, WINT SIMUL C PROC
   Jeffries R., 2001, EXTREME PROGRAMMING
   Jeffries R, 2007, IEEE SOFTWARE, V24, P24, DOI 10.1109/MS.2007.75
   Jobson J., 1999, SPRINGER TEXTS STAT
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kou HB, 2010, AUTOMAT SOFTW ENG, V17, P57, DOI 10.1007/s10515-009-0058-8
   Madeyski L, 2006, LECT NOTES COMPUT SC, V4034, P278
   Mann CJ, 2003, EMERG MED J, V20, P54, DOI 10.1136/emj.20.1.54
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   McCrum-Gardner E, 2008, BRIT J ORAL MAX SURG, V46, P38, DOI 10.1016/j.bjoms.2007.09.002
   Misirli A., 2014, P 2 INT WORKSH COND, P25, DOI [10.1145/2593690.2593691, DOI 10.1145/2593690.2593691]
   Müller MM, 2007, EMPIR SOFTW ENG, V12, P593, DOI 10.1007/s10664-007-9048-2
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Pancur M, 2011, INFORM SOFTWARE TECH, V53, P557, DOI 10.1016/j.infsof.2011.02.002
   Peña EA, 2006, J AM STAT ASSOC, V101, P341, DOI 10.1198/016214505000000637
   Rafique Y, 2013, IEEE T SOFTWARE ENG, V39, P835, DOI 10.1109/TSE.2012.28
   Schwaber K., 1997, BUSINESS OBJECT DESI, DOI [10.1007/978-1-4471-0947-1_11, DOI 10.1007/978-1-4471-0947-1_11]
   Turhan B., 2010, MAKING SOFTWARE
   Wang YH, 2004, LECT NOTES COMPUT SC, V3134, P32
   Weissgerber Peter., 2006, Proceedings of the 2006 International Workshop on Mining Software Repositories, MSR '06, P112
   Wohlin C., 2000, EXPT SOFTWARE ENG IN, V6
   Xia YC, 2009, BIOMETRIKA, V96, P133, DOI 10.1093/biomet/asn074
   Yang YH, 2005, BIOMETRIKA, V92, P937, DOI 10.1093/biomet/92.4.937
NR 46
TC 47
Z9 53
U1 7
U2 25
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL 1
PY 2017
VL 43
IS 7
BP 597
EP 614
DI 10.1109/TSE.2016.2616877
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FA8OD
UT WOS:000405704400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wu, TY
   Liu, JR
   Xu, ZB
   Guo, CR
   Zhang, YL
   Yan, J
   Zhang, J
AF Wu, Tianyong
   Liu, Jierui
   Xu, Zhenbo
   Guo, Chaorong
   Zhang, Yanli
   Yan, Jun
   Zhang, Jian
TI Light-Weight, Inter-Procedural and Callback-Aware Resource Leak
   Detection for Android Apps
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Android apps; resource leak; static analysis; byte-code analysis;
   inter-procedural analysis
AB Android devices include many embedded resources such as Camera, Media Player and Sensors. These resources require programmers to explicitly request and release them. Missing release operations might cause serious problems such as performance degradation or system crash. This kind of defects is called resource leak. Despite a large body of existing works on testing and analyzing Android apps, there still remain several challenging problems. In this work, we present Relda2, a light-weight and precise static resource leak detection tool. We first systematically collected a resource table, which includes the resources that the Android reference requires developers release manually. Based on this table, we designed a general approach to automatically detect resource leaks. To make a more precise inter-procedural analysis, we construct a Function Call Graph for each Android application, which handles function calls of user-defined methods and the callbacks invoked by the Android framework at the same time. To evaluate Relda2's effectiveness and practical applicability, we downloaded 103 apps from popular app stores and an open source community, and found 67 real resource leaks, which we have confirmed manually.
C1 [Wu, Tianyong; Liu, Jierui; Yan, Jun; Zhang, Jian] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing, Peoples R China.
   [Wu, Tianyong; Liu, Jierui; Zhang, Jian] Univ Chinese Acad Sci, Beijing, Peoples R China.
   [Yan, Jun] Chinese Acad Sci, Inst Software, Technol Ctr Software Engn, Beijing, Peoples R China.
C3 Chinese Academy of Sciences; Institute of Software, CAS; Chinese Academy
   of Sciences; University of Chinese Academy of Sciences, CAS; Chinese
   Academy of Sciences; Institute of Software, CAS
RP Wu, TY (corresponding author), Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing, Peoples R China.
EM wuty@ios.ac.cn; liujr@ios.ac.cn; xuzb@ios.ac.cn; guocr@ios.ac.cn;
   zhangyl@ios.ac.cn; yanjun@ios.ac.cn; zj@ios.ac.cn
FU National Basic Research (973) Program of China [2014CB340701]; National
   Natural Science Foundation of China [91418206]
FX The authors would like to thank the editor and anonymous reviewers for
   their constructive comments and suggestions that greatly improve their
   article. They also sincerely thank Bin Liang at Renmin University of
   China and Bo Jiang at Beihang University, for their suggestions. This
   work is supported by the National Basic Research (973) Program of China
   under Grant No. 2014CB340701, and the National Natural Science
   Foundation of China under Grant No. 91418206. This paper is a completely
   revised and extended version of a paper [1] presented at the IEEE/ACM
   28th International Conference on Automated Software Engineering
   (ASE'13). This work was done while the authors are/were with the State
   Key Laboratory of Computer Science, Institute of Software, Chinese
   Academy of Sciences. Jun Yan is the corresponding author.
CR Aldrich J., 2009, OOPSLA COMPANION, P1015, DOI DOI 10.1145/1639950
   Amalfitano D, 2012, IEEE INT CONF AUTOM, P258, DOI 10.1145/2351676.2351717
   Anandan S, 2012, MATER SCI FORUM, V712, P1, DOI 10.4028/www.scientific.net/MSF.712.1
   [Anonymous], 2013, MEDIAPLAYER API
   [Anonymous], 2015, SMARTPH MARK SHAR 20
   [Anonymous], 2012, INT S SOFTWARE TESTI
   [Anonymous], 2015, F DROID FREE OPEN SO
   [Anonymous], 2014, GOOGLE PLAY MARKET
   [Anonymous], 2015, ERROR GUESSING
   [Anonymous], 2015, DATA FLOW ANAL
   [Anonymous], 2014, ANDROGUARD
   [Anonymous], 1990, LICS, DOI DOI 10.1109/LICS.1990.113767
   [Anonymous], 2002, CAV, DOI DOI 10.1007/3-540-45657-0
   [Anonymous], 2013, JD GUI
   [Anonymous], UI APPL EXERCISER MO
   [Anonymous], 2016, MANAGED CODE
   [Anonymous], 2016, GUI RIPPER WIKI
   [Anonymous], 2013, REGISTERED SENSOR HA
   [Anonymous], 2013, CAMERA RESOURCE HASN
   [Anonymous], 2015, CALL GRAPH
   [Anonymous], 2013, SENSORMANAGER API
   [Anonymous], 2013, PACKAGE INDEX ANDROI
   [Anonymous], 2013, TOOLS WORK ANDROID D
   [Anonymous], 2013, CAMERA API
   Arnold M, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063241
   Arnold M, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P143
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Azim T, 2013, ACM SIGPLAN NOTICES, V48, P641, DOI [10.1145/2509136.2509549, 10.1145/2544173.2509549]
   Bartkowiak A, 2012, FED CONF COMPUT SCI, P27
   Bierhoff K, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P301
   Bodden E, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P241, DOI 10.1145/1985793.1985827
   Bond MD, 2009, ACM SIGPLAN NOTICES, V44, P277, DOI 10.1145/1508284.1508277
   Cao Y, 2015, P 22 ANN NETW DISTR
   Cherem S, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P480, DOI 10.1145/1250734.1250789
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Enck William., 2010, Proceedings of the USENIX Symposium on Operating Systems Design and Implementation (OSDI), P393
   Fink Stephen., 2006, INT S SOFTWARE TESTI, P133, DOI DOI 10.1145/1146238.1146254
   Garcia R, 2014, ACM T PROGR LANG SYS, V36, DOI 10.1145/2629609
   Gibler C., 2012, P 5 INT C TRUST TRUS, V7344, P291, DOI DOI 10.1007/978-3-642-30921-2
   Guo CR, 2013, IEEE INT CONF AUTOM, P389, DOI 10.1109/ASE.2013.6693097
   Hu Cuixiong, 2011, Proceedings of the 6th International Workshop on Automation of Software Test, P77
   Huang JJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1036, DOI 10.1145/2568225.2568301
   Huang W., 2015, P 2015 INT S SOFTWAR, P106, DOI 10.1145/2771783.2771803
   Jensen C S, 2013, P 2013 INT S SOFTW T, P67, DOI [10.1145/2483760.2483777, DOI 10.1145/2483760.2483777]
   Kim J., 2012, Mobile Security Technologies (MoST) 2012, V12
   Kim KT, 2013, J NANOMATER, V2013, DOI 10.1155/2013/821657
   Liu YP, 2014, IEEE T SOFTWARE ENG, V40, P911, DOI 10.1109/TSE.2014.2323982
   Liu YP, 2013, INT CONF PERVAS COMP, P2, DOI 10.1109/PerCom.2013.6526708
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Mahmood R., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P22, DOI 10.1109/IWAST.2012.6228986
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Mirzaei Nariman, 2012, ACM SIGSOFT Software Engineering Notes, V37, P1, DOI DOI 10.1145/2382756.2382798
   Mitchell N, 2003, LECT NOTES COMPUT SC, V2743, P351
   Pathak A., 2012, Mobisys, DOI DOI 10.1145/2307636.2307661
   Pathak Abhijit D., 2012, Proceedings of the PCIM ASIA 2012. International Conference and Exhibition for Power Electronics, Intelligent Motion, Renewable Energy and Energy Management, P29
   Payet É, 2012, INFORM SOFTWARE TECH, V54, P1192, DOI 10.1016/j.infsof.2012.05.003
   Rountev Atanas, 2014, P ANN IEEEACM INT S, P143
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Shye Alex, 2009, Proceedings of the 2009 42nd Annual IEEE/ACM International Symposium on Microarchitecture (MICRO 2009), P168, DOI 10.1145/1669112.1669135
   STEFFEN B, 1990, LECT NOTES COMPUT SC, V432, P389
   STROM RE, 1986, IEEE T SOFTWARE ENG, V12, P157, DOI 10.1109/TSE.1986.6312929
   Sui Yulei, 2012, P INT S SOFTW TEST A, P254, DOI [DOI 10.1145/2338965.2336784, DOI 10.1145/04000800.2336784]
   Torlak Emina., 2010, P 32 ACMIEEE INT C S, P535
   Visser W, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ASE.2000.873645
   Weimer W, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1330017.1330019
   Xu GQ, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P270
   Xu GQ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P151, DOI 10.1145/1368088.1368110
   Yan D., 2014, INT S CODE GENERATIO, P87
   Yan DC, 2013, PROC INT SYMP SOFTW, P411, DOI 10.1109/ISSRE.2013.6698894
   Yang SQ, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P89, DOI 10.1109/ICSE.2015.31
   Yang W, 2013, LECT NOTES COMPUT SC, V7793, P250, DOI 10.1007/978-3-642-37057-1_19
   Zhang L, 2010, PROCEEDINGS OF 2010 INTERNATIONAL CONFERENCE ON PUBLIC ADMINISTRATION (6TH), VOL II, P105, DOI 10.1145/1878961.1878982
NR 73
TC 36
Z9 43
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2016
VL 42
IS 11
BP 1054
EP 1076
DI 10.1109/TSE.2016.2547385
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ED5BK
UT WOS:000388866100004
DA 2024-07-18
ER

PT J
AU Liu, H
   Liu, QR
   Niu, ZD
   Liu, Y
AF Liu, Hui
   Liu, Qiurong
   Niu, Zhendong
   Liu, Yang
TI Dynamic and Automatic Feedback-Based Threshold Adaptation for Code Smell
   Detection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software refactoring; code smells; feedback control; smell
   identification
ID REFACTORING OPPORTUNITIES; IDENTIFICATION; METRICS
AB Most code smell detection tools expose thresholds to engineers for customization because code smell detection is essentially subjective and application specific. Another reason why engineers should customize these thresholds is that they have different working schedules and different requirements on software quality. They have their own unique need on precision and recall in smell detection. This unique need should be fulfilled by adjusting thresholds of smell detection tools. However, it is difficult for software engineers, especially inexperienced ones, to adjust often contradicting and related thresholds manually. One of the possible reasons is that engineers do not know the exact quantitative relation between threshold values and performance, e.g., precision. In this paper, we propose an approach to adapting thresholds automatically and dynamically. Engineers set a target precision manually according to their working schedules and quality requirements. With feedback from engineers, the proposed approach then automatically searches for a threshold setting to maximize recall while having precision close to the target precision. The proposed approach has been evaluated on open-source applications. Evaluation results suggest that the proposed approach is effective.
C1 [Liu, Hui; Liu, Qiurong; Niu, Zhendong; Liu, Yang] Beijing Inst Technol, Sch Comp Sci & Technol, Beijing 100081, Peoples R China.
C3 Beijing Institute of Technology
RP Liu, H (corresponding author), Beijing Inst Technol, Sch Comp Sci & Technol, Beijing 100081, Peoples R China.
EM Liuhui08@bit.edu.cn; QiurongLiu@bit.edu.cn; ZNiu@bit.edu.cn;
   LiuYang@bit.edu.cn
RI niu, zhendong/KIJ-1559-2024
OI Niu, Zhendong/0000-0002-0576-7572
FU National Natural Science Foundation of China [61272169, 61472034,
   61370137]; Program for New Century Excellent Talents in University
   [NCET-13-0041]; Beijing Higher Education Young Elite Teacher Project
   [YETP1183]; National Strategic Basic Research Program ("973" Program) of
   the Ministry of Science and Technology of China [2012CB720702]; 111
   Project of Beijing Institute of Technology
FX The authors would like to say thanks to the associate editor and the
   anonymous reviewers for their valuable and constructive suggestions. The
   work is funded by the National Natural Science Foundation of China (No.
   61272169, 61472034), Program for New Century Excellent Talents in
   University (No. NCET-13-0041), and Beijing Higher Education Young Elite
   Teacher Project (No. YETP1183). Zhendong Niu is supported by the
   National Natural Science Foundation of China (No. 61370137), the
   National Strategic Basic Research Program ("973" Program) of the
   Ministry of Science and Technology of China (Grant No. 2012CB720702),
   and the 111 Project of Beijing Institute of Technology.
CR [Anonymous], 2012, P 11 ANN INT C ASP O
   [Anonymous], 2010, IEEE INT C SOFTWAREM
   [Anonymous], 2007, DUBLICATION REDUNDAN
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Bavota G, 2011, J SYST SOFTWARE, V84, P397, DOI 10.1016/j.jss.2010.11.918
   Bavota Gabriele., 2010, Proceedings of the IEEE International Conference on Software Maintenance ICSM, P1
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bowes D, 2013, INT WORKS EMERG TREN, P62, DOI 10.1109/WETSoM.2013.6619338
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   Chipperfield A., GENETIC ALGORITHM TO
   Crespo Y., 2006, P 10 ECOOP WORKSH QU, P109
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Fenton NE., 1991, Software Metrics: A Rigorous Approach
   Ferreira KAM, 2012, J SYST SOFTWARE, V85, P244, DOI 10.1016/j.jss.2011.05.044
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Geisser S., 1993, PREDICTIVE INFERENCE
   Göde N, 2009, EUR CON SFTWR MTNCE, P219, DOI 10.1109/CSMR.2009.20
   Jia Y, 2009, P 3 INT WORKSH SOFTW
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Li JY, 2012, PROC INT CONF SOFTW, P310, DOI 10.1109/ICSE.2012.6227183
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Lincke R, 2007, COMPENDIUM SOFTWARE
   Liu H, 2013, IEEE T SOFTWARE ENG, V39, P1112, DOI 10.1109/TSE.2013.4
   Maiga A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P466, DOI 10.1109/WCRE.2012.56
   Maiga A, 2012, IEEE INT CONF AUTOM, P278, DOI 10.1145/2351676.2351723
   Marin M, 2007, ACM T SOFTW ENG METH, V17, DOI 10.1145/1314493.1314496
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Marinescu R, 2001, TOOLS, V39, P173, DOI 10.1109/TOOLS.2001.941671
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Meyers TM, 2007, ACM T SOFTW ENG METH, V17, DOI 10.1145/1314493.1314495
   Mihancea PF, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P92, DOI 10.1109/CSMR.2005.53
   Moha N, 2006, IEEE INT CONF AUTOM, P297
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Munro MatthewJames., 2005, Software Metrics, P15, DOI 10.1109/metrics.2005.38
   Opdyke William F., 1992, THESIS
   Ott L. M., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P71, DOI 10.1109/METRIC.1993.263799
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Poli R., 2008, A Field Guide to Genetic Programming
   Robillard MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2009.161
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Tourwé T, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P91, DOI 10.1109/CSMR.2003.1192416
   Tsantalis N., 2010, EVALUATION IMPROVEME
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Tsantalis N, 2010, J SYST SOFTWARE, V83, P391, DOI 10.1016/j.jss.2009.09.017
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Van Rompaey B, 2007, IEEE T SOFTWARE ENG, V33, P800, DOI 10.1109/TSE.2007.70745
   Wang Tiantian, 2013, P 2013 9 JOINT M FDN, P455
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Wu WT, 2010, NANO REV EXP, V1, DOI 10.3402/nano.v1i0.5730
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
NR 52
TC 23
Z9 25
U1 0
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2016
VL 42
IS 6
BP 544
EP 558
DI 10.1109/TSE.2015.2503740
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DR7BD
UT WOS:000380054100003
DA 2024-07-18
ER

PT J
AU Shi, QK
   Huang, J
   Chen, ZY
   Xu, BW
AF Shi, Qingkai
   Huang, Jeff
   Chen, Zhenyu
   Xu, Baowen
TI Verifying Synchronization for Atomicity Violation Fixing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Atomicity violations; insufficient synchronization; fix; dynamic trace
   analysis; maximal sound verification
AB Atomicity is a fundamental property to guarantee the isolation of a work unit (i.e., a sequence of related events in a thread) from concurrent threads. However, ensuring atomicity is often very challenging due to complex thread interactions. We present an approach to help developers verify whether such work units, which have triggered bugs due to certain violations of atomicity, are sufficiently synchronized or not by locks introduced for fixing the bugs. A key feature of our approach is that it combines the fortes of both bug-driven and change-aware techniques, which enables it to effectively verify synchronizations by testing only a minimal set of suspicious atomicity violations without any knowledge on the to-be-isolated work units, thus being more efficient and practical than other approaches. Besides, unlike existing approaches, our approach effectively utilizes all the inferred execution traces even they may not be completely feasible, such that the verification algorithm can converge much faster. We demonstrate via extensive evaluation that our approach is much more effective and efficient than the state-of-the-arts. Besides, we show that although there have existed sound automatic fixing techniques for atomicity violations, our approach is still necessary and useful for quality assurance of concurrent programs, because the assumption behind our approach is much weaker. We have also investigated one of the largest bug databases and found that insufficient synchronizations are common and difficult to be found in software development.
C1 [Shi, Qingkai; Chen, Zhenyu; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
   [Huang, Jeff] Texas A&M Univ, College Stn, TX 77843 USA.
C3 Nanjing University; Texas A&M University System; Texas A&M University
   College Station
RP Shi, QK; Chen, ZY; Xu, BW (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.; Huang, J (corresponding author), Texas A&M Univ, College Stn, TX 77843 USA.
EM sqk08@software.nju.edu.cn; jeff@cse.tamu.edu; zychen@nju.edu.cn;
   bwxu@nju.edu.cn
RI Xu, Baowen/IXW-4882-2023
OI Xu, Baowen/0000-0001-7743-1296; Shi, Qingkai/0000-0002-8297-8998
FU National Basic Research Program of China (973 Program) [2014CB340702];
   National Natural Science Foundation of China [61170067, 61373013];
   Google Faculty Research Award
FX The authors wish to express deep appreciation to the anonymous reviewers
   for their insightful and constructive comments on an early draft of this
   paper. This research is supported, in part, by National Basic Research
   Program of China (973 Program 2014CB340702), National Natural Science
   Foundation of China (Grant No. 61170067, 61373013). The author, J.
   Huang, is partially supported by the Google Faculty Research Award. Z.
   Chen and B. Xu are the corresponding authors.
CR [Anonymous], P 35 ACM SIGPLAN C P
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering (FSE'11), DOI [10.1145/2025113.2025121, DOI 10.1145/2025113.2025121]
   [Anonymous], LCNS
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Burckhardt S, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P12, DOI 10.1145/1250734.1250737
   Cai Y, 2012, PROC INT CONF SOFTW, P606, DOI 10.1109/ICSE.2012.6227156
   Cerny Pavol, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P951, DOI 10.1007/978-3-642-39799-8_68
   Chen Feng., 2008, ICSE 08, P221
   Deshmukh J, 2009, IEEE INT CONF AUTOM, P480, DOI 10.1109/ASE.2009.14
   Deshmukh JV, 2011, AUTOMAT SOFTW ENG, V18, P325, DOI 10.1007/s10515-011-0085-0
   Elmas T, 2013, ACM SIGPLAN NOTICES, V48, P153, DOI 10.1145/2499370.2462162
   Farzan A., 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, P37
   Flanagan C, 2004, ACM SIGPLAN NOTICES, V39, P256, DOI 10.1145/982962.964023
   Flanagan C, 2003, ACM SIGPLAN NOTICES, V38, P338, DOI 10.1145/780822.781169
   Ganesh V, 2007, LECT NOTES COMPUT SC, V4590, P519
   Gupta A, 2015, ACM SIGPLAN NOTICES, V50, P433, DOI [10.1145/2676726.2677008, 10.1145/2775051.2677008]
   HERLIHY MP, 1990, ACM T PROGR LANG SYS, V12, P463, DOI 10.1145/78969.78972
   Huang J., 2011, ISSTA, P144, DOI [10.1145/2001420.2001438, DOI 10.1145/2001420.2001438]
   Huang J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P847, DOI 10.1109/ICSE.2015.96
   Huang J, 2013, ACM SIGPLAN NOTICES, V48, P141, DOI 10.1145/2499370.2462167
   Huang Jeff., 2010, Proceedings of the Eighteenth ACM SIGSOFT International Symposium on Foundations of Software Engineering, FSE '10, P207, DOI DOI 10.1145/1882291.1882323
   Jagannath Vilas., 2011, P 2011 INT S SOFTWAR, P133
   Jin G., 2012, 10 USENIX S OP SYST, P221
   Jin GL, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P389
   Kahlon V, 2010, LECT NOTES COMPUT SC, V6174, P434, DOI 10.1007/978-3-642-14295-6_39
   Lai Z., 2010, ICSE, P235, DOI [10.1145/1806799.1806836, DOI 10.1145/1806799.1806836]
   Liqiang Wang, 2006, Proceedings of the 2006 ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming PPoPP'06, P137, DOI 10.1145/1122971.1122993
   Liu H, 2014, IEEE T SOFTWARE ENG, V40, P4, DOI 10.1109/TSE.2013.46
   Liu P, 2012, PROC INT CONF SOFTW, P299, DOI 10.1109/ICSE.2012.6227184
   Liu Peng., 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, ESEC/FSE 2013, P158, DOI DOI 10.1145/2491411.2491435
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Lu S, 2006, ACM SIGPLAN NOTICES, V41, P37, DOI 10.1145/1168918.1168864
   Marino D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P322, DOI 10.1109/ICSE.2013.6606578
   Musuvathi M., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, P267
   Park C.-S., 2008, FSE, P135
   Park S, 2009, ACM SIGPLAN NOTICES, V44, P25, DOI 10.1145/1508284.1508249
   Shacham O, 2007, J PARALLEL DISTR COM, V67, P536, DOI 10.1016/j.jpdc.2007.01.006
   Smaragdakis Y, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P387
   Sorrentino Francesco, 2010, P 18 ACM SIGSOFT INT, P37, DOI DOI 10.1145/1882291.1882300
   Tucek J, 2009, ACM SIGPLAN NOTICES, V44, P193, DOI 10.1145/1508284.1508267
   Vallee-Rai R., 1999, Proceedings of the 1999 Conference of the Centre for Advanced Studies on Collaborative Research, CASCON'99, page, P13
   Vaziri M, 2006, ACM SIGPLAN NOTICES, V41, P334, DOI 10.1145/1111320.1111067
   Viennot N, 2013, ACM SIGPLAN NOTICES, V48, P127, DOI 10.1145/2499368.2451130
   Wang C., 2011, FORM ASP COMPUT, V23, P256
   Wang C, 2010, LECT NOTES COMPUT SC, V6015, P328, DOI 10.1007/978-3-642-12002-2_27
   Wei Y, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P191, DOI 10.1145/1985793.1985820
   Yang GW, 2009, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSM.2009.5306334
   Zhou JG, 2012, PROC INT CONF SOFTW, P892, DOI 10.1109/ICSE.2012.6227130
NR 48
TC 8
Z9 8
U1 1
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2016
VL 42
IS 3
BP 285
EP 301
DI 10.1109/TSE.2015.2477820
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DH5MS
UT WOS:000372834200006
DA 2024-07-18
ER

PT J
AU Monden, A
   Hayashi, T
   Shinoda, S
   Shirai, K
   Yoshida, J
   Barker, M
   Matsumoto, K
AF Monden, Akito
   Hayashi, Takuma
   Shinoda, Shoji
   Shirai, Kumiko
   Yoshida, Junichi
   Barker, Mike
   Matsumoto, Kenichi
TI Assessing the Cost Effectiveness of Fault Prediction in Acceptance
   Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Complexity measures; fault prediction; quality assurance; resource
   allocation; simulation
ID SOFTWARE-RELIABILITY; MODELS
AB Until now, various techniques for predicting fault-prone modules have been proposed and evaluated in terms of their prediction performance; however, their actual contribution to business objectives such as quality improvement and cost reduction has rarely been assessed. This paper proposes using a simulation model of software testing to assess the cost effectiveness of test effort allocation strategies based on fault prediction results. The simulation model estimates the number of discoverable faults with respect to the given test resources, the resource allocation strategy, a set of modules to be tested, and the fault prediction results. In a case study applying fault prediction of a small system to acceptance testing in the telecommunication industry, results from our simulation model showed that the best strategy was to let the test effort be proportional to "the number of expected faults in a module x log(module size)." By using this strategy with our best fault prediction model, the test effort could be reduced by 25 percent while still detecting as many faults as were normally discovered in testing, although the company required about 6 percent of the test effort for metrics collection, data cleansing, and modeling. The simulation results also indicate that the lower bound of acceptable prediction accuracy is around 0.78 in terms of an effort-aware measure, Norm(P-opt). The results indicate that reduction of the test effort can be achieved by fault prediction only if the appropriate test strategy is employed with high enough fault prediction accuracy. Based on these preliminary results, we expect further research to assess their general validity with larger systems.
C1 [Monden, Akito; Barker, Mike; Matsumoto, Kenichi] Nara Inst Sci & Technol, Grad Sch Informat Sci, Nara 6300192, Japan.
   [Hayashi, Takuma; Shinoda, Shoji; Shirai, Kumiko; Yoshida, Junichi] NTT West Corp, R&D Ctr, Kita Ku, Osaka 5300057, Japan.
C3 Nara Institute of Science & Technology
RP Monden, A (corresponding author), Nara Inst Sci & Technol, Grad Sch Informat Sci, 8916-5 Takayama, Nara 6300192, Japan.
EM akito-m@is.naist.jp; k.shirai@rdc.west.ntt.co.jp;
   j.yoshida@rdc.west.ntt.co.jp; mbarker@is.naist.jp; matumoto@is.naist.jp
RI MATSUMOTO, KENICHI/AAD-9090-2019
OI MATSUMOTO, KENICHI/0000-0002-7418-9323; Monden,
   Akito/0000-0003-4295-207X
FU Ministry of Education, Culture, Sports, Science and Technology, Japan;
   Japan Society for the Promotion of Science [22500028]; Grants-in-Aid for
   Scientific Research [22500028] Funding Source: KAKEN
FX This work was conducted in part in the StagE Project, the Development of
   Next Generation IT Infrastructure, supported by Ministry of Education,
   Culture, Sports, Science and Technology, Japan. Also, part of this work
   was conducted under Japan Society for the Promotion of Science,
   Grant-in-Aid for Scientific Research (C) (22500028).
CR [Anonymous], 2009, APPL STAT GENETICS R
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Information-Technology Promotion Agency Japan (IPA) Software Engineering Center (SEC), 2010, WHIT PAP SOFTW DEV P
   kamei Y., 2006, P 5 ACM IEEE INT S E, V2, P39
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Khoshgoftaar T. M., 1995, Annals of Software Engineering, V1, P141, DOI 10.1007/BF02249049
   KHOSHGOFTAAR TM, 1999, RECENT ADV RELIABILI, P247
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kitchenham B., 2009, P 5 INT C PRED MOD S
   Knab P., 2006, P 2006 INT WORKSHOP, P119
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Luo Li P., 2006, 28th International Conference on Software Engineering Proceedings, P413, DOI 10.1145/1134285.1134343
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P409, DOI 10.1007/s10515-010-0070-z
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Schroter A., 2006, P ACM IEEE INT S EMP, P18
   Shihab E., 2011, Proceedings of the ACM SIGSOFT symposium and the European Conference on Foundations of Software Engineering, P300
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Tan HBK, 2009, ACM T SOFTW ENG METH, V19, DOI 10.1145/1571629.1571630
   Therneau T., 2012, An introduction to recursive partitioning using the RPART routines
   Tosun A., 2009, P 5 INT C PRED MOD S, P1
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   YAMADA S, 1985, IEEE T SOFTWARE ENG, V11, P1431, DOI 10.1109/TSE.1985.232179
   Zimmermann T., 2007, P ICSE 2007 WORK 3 I, DOI [10.1109/PROMISE.2007.10, DOI 10.1109/PROMISE.2007.10]
NR 33
TC 50
Z9 54
U1 0
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2013
VL 39
IS 10
BP 1345
EP 1357
DI 10.1109/TSE.2013.21
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 228FO
UT WOS:000325171400002
DA 2024-07-18
ER

PT J
AU Milicev, D
   Mijailovic, Z
AF Milicev, Dragan
   Mijailovic, Zarko
TI Capsule-Based User Interface Modeling for Large-Scale Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Graphical user interface (GUI); Unified Modeling Language (UML);
   modeling; model-driven development; software architecture; business
   applications; data-centric applications; information systems
AB We present a novel approach to modeling and implementing user interfaces (UI) of large business applications. The approach is based on the concept of capsule, a profiled structured class from UML which models a simple UI component or a coherent UI fragment of logically and functionally coupled components or other fragments with a clear interface. Consequently, the same modeling concept of capsule with internal structure can be reapplied recursively at successively lower levels of detail within a model, starting from high architectural modeling levels down to the lowest levels of modeling simple UI components. The interface of capsules is defined in terms of pins, while the functional coupling of capsules is specified declaratively by simply wiring their pins. Pins and wires transport messages between capsules, ensuring strict encapsulation. The approach includes a method for formal coupling of capsules' behavior with the underlying object space that provides proper impedance matching between the UI and the business logic while preserving clear separation of concerns between them. We also briefly describe an implementation of a framework that supports the proposed method, including a rich library of ready-to-use capsules, and report on our experience in applying the approach in large-scale industrial systems.
C1 [Milicev, Dragan; Mijailovic, Zarko] Univ Belgrade, Fac Elect Engn, Dept Comp, Belgrade 11120, Serbia.
   [Mijailovic, Zarko] SOL Software, Belgrade 11000, Serbia.
C3 University of Belgrade
RP Milicev, D (corresponding author), Univ Belgrade, Fac Elect Engn, Dept Comp, POB 35-54,Bulevar Kralja Aleksandra 73, Belgrade 11120, Serbia.
EM dmilicev@etf.rs; zarko.mijailovic@sol.rs
CR [Anonymous], 2013, OUTSYSTEMS AGILE PLA
   [Anonymous], 2009, UML 2 2 SUP SPEC
   [Anonymous], 2009, 2 INT S APPL SCI BIO
   Baron M., 2002, P 1 INT WORKSH TASK, P64
   Bodart F., 1993, Human-Computer Interaction. Third International Conference, EWHCI '93. Selected Papers, P83
   BODART F, 1994, P EUR WORKSH DES SPE, P77
   Brambilla M., 2007, WEB ENG MODELLING IM
   Da Silva P., 2000, P 7 INT C DES SPEC V
   da Silva PP, 2003, IEEE SOFTWARE, V20, P62, DOI 10.1109/MS.2003.1207457
   Freund J.E., 2004, MATH STAT APPL, P524
   GAMMA E, 1995, DESIGN PATTERNS
   Goderis S., 2008, THESIS VRIJE U BRUSS
   Groenewegen DM, 2010, IEEE SOFTWARE, V27, P31, DOI 10.1109/MS.2010.92
   Jia XP, 2007, SOFTWARE QUAL J, V15, P27, DOI 10.1007/s11219-006-9002-3
   Johnson P., 1993, P C HUM FACT COMP SY
   Kovacevic S., 1998, P 1 INT WORKSH UN MO, P253
   Landay JA, 2001, COMPUTER, V34, P56, DOI 10.1109/2.910894
   Milicev D, 2002, IEEE T SOFTWARE ENG, V28, P413, DOI 10.1109/TSE.2002.995438
   Milicev D., 2012, TECHNICAL REPORT
   Milicev D., 2009, Model-Driven Development with Executable UML
   Milicev D, 2012, COMPUT SCI INF SYST, V9, P505, DOI 10.2298/CSIS110716006M
   Molina P.J., 2002, COMPUT AIDED DESIGN, P63, DOI DOI 10.1007/978-94-010-0421-3_5
   Monteiro M., 2008, P 14 INT C ENT INF S
   Myers B., 2000, ACM Transactions on Computer-Human Interaction, V7, P3, DOI 10.1145/344949.344959
   Nan Li, 2010, Proceedings of the 2010 13th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing (ISORC 2010). Volume I: Main Symposium, P156, DOI 10.1109/ISORC.2010.35
   Nichols J., 2005, P ACM SIGCHI WORKSH
   NUNES NJ, 2000, P DSV IS, P191
   Patterno F., 2000, P ACM WORK C ADV VIS
   Pawson Richard, 2004, THESIS TRINITY COLL
   Perisic B, 2011, COMPUT SCI INF SYST, V8, P405, DOI 10.2298/CSIS110112010P
   Pitkanen A., 2010, P 1 INT WORKSH USER, P65
   da Cruz AMR, 2010, LECT NOTES COMPUT SC, V6394, P256
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Selic B., 1994, REAL TIME OBJECT ORI
   Trujillo S, 2007, PROC INT CONF SOFTW, P44
   Wilson S., 1993, People and Computers VIII. Proceedings of HCI 93, P217
   Wilson S., 1995, DIS '95. Symposium on Designing Interactive Systems: Processes, Practices, Medthods, and Techniques. Conference Proceedings, P25, DOI 10.1145/225434.225438
   Wong J, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1435
   Woods E, 2010, IEEE SOFTWARE, V27, P54, DOI 10.1109/MS.2010.145
   Xie Q, 2009, PROC IEEE INT CONF S, P395, DOI 10.1109/ICSM.2009.5306286
   Yuan X, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P23, DOI 10.1109/TAIC-PART.2008.10
   Zhang G., 2010, P 5 INT WORKSH MOD D, P45
NR 42
TC 4
Z9 5
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2013
VL 39
IS 9
BP 1190
EP 1207
DI 10.1109/TSE.2013.8
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 207ZG
UT WOS:000323643000002
DA 2024-07-18
ER

PT J
AU Padgham, L
   Zhang, ZY
   Thangarajah, J
   Miller, T
AF Padgham, Lin
   Zhang, Zhiyong
   Thangarajah, John
   Miller, Tim
TI Model-Based Test Oracle Generation for Automated Unit Testing of Agent
   Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Test oracles; unit testing; BDI agents
AB Software testing remains the most widely used approach to verification in industry today, consuming between 30-50 percent of the entire development cost. Test input selection for intelligent agents presents a problem due to the very fact that the agents are intended to operate robustly under conditions which developers did not consider and would therefore be unlikely to test. Using methods to automatically generate and execute tests is one way to provide coverage of many conditions without significantly increasing cost. However, one problem using automatic generation and execution of tests is the oracle problem: How can we automatically decide if observed program behavior is correct with respect to its specification? In this paper, we present a model-based oracle generation method for unit testing belief-desire-intention agents. We develop a fault model based on the features of the core units to capture the types of faults that may be encountered and define how to automatically generate a partial, passive oracle from the agent design models. We evaluate both the fault model and the oracle generation by testing 14 agent systems. Over 400 issues were raised, and these were analyzed to ascertain whether they represented genuine faults or were false positives. We found that over 70 percent of issues raised were indicative of problems in either the design or the code. Of the 19 checks performed by our oracle, faults were found by all but 5 of these checks. We also found that 8 out the 11 fault types identified in our fault model exhibited at least one fault. The evaluation indicates that the fault model is a productive conceptualization of the problems to be expected in agent unit testing and that the oracle is able to find a substantial number of such faults with relatively small overhead in terms of false positives.
C1 [Padgham, Lin; Zhang, Zhiyong; Thangarajah, John] RMIT Univ, Sch Comp Sci & Informat Technol, Melbourne, Vic 3001, Australia.
   [Miller, Tim] Univ Melbourne, Dept Comp & Informat Syst, Parkville, Vic 3010, Australia.
C3 Royal Melbourne Institute of Technology (RMIT); University of Melbourne
RP Padgham, L (corresponding author), RMIT Univ, Sch Comp Sci & Informat Technol, Melbourne, Vic 3001, Australia.
EM lin.padgham@rmit.edu.au; zhiyong.zhang@rmit.edu.au;
   john.thangarajah@rmit.edu.au; tmiller@unimelb.edu.au
RI Thangarajah, John/JZE-3155-2024
OI Thangarajah, John/0000-0002-7699-6444; Padgham, Lin/0000-0002-6974-3318;
   Miller, Tim/0000-0003-4908-6063
CR [Anonymous], 2002, TECHNICAL REPORT
   [Anonymous], 2005, ACM SIGSOFT SOFTW EN, DOI DOI 10.1145/1082983.1082967
   Benfield S.S, 2006, P 5 INT JOINT C AUT, P10
   Binder R. V., 1999, PROGRAMMING MULTIAGE
   Bordini R., 2007, PROGRAMMING MULTIAGE
   Braubach L, 2003, EXP SEARCH INNOVATIO, V3, P76
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Burnstein I., 2002, Practical Software Testing
   Burrafato P., 2002, P 4 INT BIC WORKSH A, P27
   Chi Keen Low, 1999, Autonomous Agents and Multi-Agent Systems, V2, P311, DOI 10.1023/A:1010011219782
   Coelho Roberta, 2007, 2007 IEEE International Conference on Software Maintenance, P425, DOI 10.1109/ICSM.2007.4362655
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Dikenelli O., 2006, AGENT ORIENTED SOFTW, P156
   Dikenelli O., 2008, P 7 INT JOINT C AUT, P1671
   Kissoum Y, 2008, I C COMP SYST APPLIC, P785, DOI 10.1109/AICCSA.2008.4493616
   Knublauch H., 2002, Proceedings of the First International Joint Conference on Autonomous Agents and Multiagent Systems, P704
   Miller T, 2011, LECT NOTES COMPUT SC, V6788, P91, DOI 10.1007/978-3-642-22636-6_6
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Nguyen C. D., 2010, International Journal of Agent-Oriented Software Engineering, V4, P79, DOI 10.1504/IJAOSE.2010.029810
   Nguyen CD, 2012, AUTON AGENT MULTI-AG, V25, P260, DOI 10.1007/s10458-011-9175-4
   Padgham L, 2005, ENG APPL ARTIF INTEL, V18, P173, DOI 10.1016/j.engappai.2004.11.018
   Padgham L., 2004, WILEY SERIES AGENT T
   POUTAKIDIS D, 2002, P 1 INT JOINT C AUT
   Staats M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P391, DOI 10.1145/1985793.1985847
   Tahchiev P., 2010, JUnit in Action, V2nd
   Winikoff M, 2005, MU S ART SOC SIM ORG, V15, P175, DOI 10.1007/0-387-26350-0_7
   Wooldridge M, 2000, AUTON AGENT MULTI-AG, V3, P285, DOI 10.1023/A:1010071910869
   Zhang Z., 2011, THESIS RMIT U MELBOU
   Zhang ZY, 2011, LECT NOTES COMPUT SC, V6038, P66
   [No title captured]
NR 31
TC 42
Z9 45
U1 0
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2013
VL 39
IS 9
BP 1230
EP 1244
DI 10.1109/TSE.2013.10
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 207ZG
UT WOS:000323643000005
DA 2024-07-18
ER

PT J
AU Wilkerson, JW
   Nunamaker, JF
   Mercer, R
AF Wilkerson, Jerod W.
   Nunamaker, Jay F., Jr.
   Mercer, Rick
TI Comparing the Defect Reduction Benefits of Code Inspection and
   Test-Driven Development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Agile programming; code inspections and walk throughs; reliability;
   test-driven development; testing strategies; empirical study
ID SOFTWARE INSPECTIONS; SUPPORT; SYSTEMS
AB This study is a quasi experiment comparing the software defect rates and implementation costs of two methods of software defect reduction: code inspection and test-driven development. We divided participants, consisting of junior and senior computer science students at a large Southwestern university, into four groups using a two-by-two, between-subjects, factorial design and asked them to complete the same programming assignment using either test-driven development, code inspection, both, or neither. We compared resulting defect counts and implementation costs across groups. We found that code inspection is more effective than test-driven development at reducing defects, but that code inspection is also more expensive. We also found that test-driven development was no more effective at reducing defects than traditional programming methods.
C1 [Wilkerson, Jerod W.] Penn State Univ, Sam & Irene Black Sch Business, Erie, PA 16563 USA.
   [Nunamaker, Jay F., Jr.] Univ Arizona, Dept Management Informat Syst, Tucson, AZ 85721 USA.
   [Mercer, Rick] Univ Arizona, Dept Comp Sci, Tucson, AZ 85721 USA.
C3 Pennsylvania Commonwealth System of Higher Education (PCSHE);
   Pennsylvania State University; University of Arizona; University of
   Arizona
RP Wilkerson, JW (corresponding author), Penn State Univ, Sam & Irene Black Sch Business, 281 Burke Ctr,5101 Jordan Rd, Erie, PA 16563 USA.
EM jww16@psu.edu; jnunamaker@CMI.arizona.edu; mercer@cs.arizona.edu
CR ACKERMAN AF, 1989, IEEE SOFTWARE, V6, P31, DOI 10.1109/52.28121
   [Anonymous], 1989, SEI SERIES SOFTWARE
   Aurum A, 2002, SOFTW TEST VERIF REL, V12, P133, DOI 10.1002/stvr.243
   Basili V., 1996, Proceedings of the 21st Annual Software Engineering Workshop, Software Engineering Laboratory Series, SEL-96-002, P59
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   Beck Kent L., 2003, Test Driven Development By Example
   Biffl S., 2006, Automated Software Engineering, V13, P373, DOI 10.1007/s10851-006-8531-5
   Boehm BW., 1981, Software Engineering Economics
   Denger C., 2004, P 3 INT S EMP SOFTW
   Ebenau R.G., 1994, SYSTEMS DESIGN IMPLE
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   FAGAN ME, 1986, IEEE T SOFTWARE ENG, V12, P744, DOI 10.1109/TSE.1986.6312976
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Fox C., 1999, JAVA INSPECTION CHEC
   George B, 2004, INFORM SOFTWARE TECH, V46, P337, DOI 10.1016/j.infsof.2003.09.011
   Gilb Tom, 1993, Software inspections
   Hair F., 2005, Multivariate Data Analysis, V6th
   Humphrey W.S., 1995, SEI SERIES SOFTWARE
   JOHNSON PM, 1994, PROC INT CONF SOFTW, P113, DOI 10.1109/ICSE.1994.296771
   Laitenberger O, 2000, J SYST SOFTWARE, V50, P5, DOI 10.1016/S0164-1212(99)00073-4
   Laitenberger O, 1997, INFORM SOFTWARE TECH, V39, P781, DOI 10.1016/S0950-5849(97)00030-X
   Lanubile F., 2003, Software Process Improvement and Practice, V8, P217, DOI 10.1002/spip.184
   LINGER RC, 1993, PROC INT CONF SOFTW, P2, DOI 10.1109/ICSE.1993.346060
   Maximilien EM, 2003, PROC INT CONF SOFTW, P564, DOI 10.1109/ICSE.2003.1201238
   Meyers L., 2006, APPL MULTIVARIATE RE
   Miller J., 1998, Empirical Software Engineering, V3, P37, DOI 10.1023/A:1009735805377
   Muller M. M., 2002, IEE Proceedings-Software, V149, P131, DOI 10.1049/ip-sen:20020540
   Nagappan N, 2008, EMPIR SOFTW ENG, V13, P289, DOI 10.1007/s10664-008-9062-z
   Nunamaker J. R.  Jr, 1996, Journal of Management Information Systems, V13, P163
   NUNAMAKER JF, 1991, COMMUN ACM, V34, P40, DOI 10.1145/105783.105793
   Parnas DL, 2003, IEEE T SOFTWARE ENG, V29, P674, DOI 10.1109/TSE.2003.1223642
   PORTER AA, 1994, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.1994.296770
   PORTER AA, 1995, IEEE T SOFTWARE ENG, V21, P563, DOI 10.1109/32.391380
   Rodgers T. L., 2004, P 37 ANN HAW INT C S
   Runeson P, 2006, IEEE SOFTWARE, V23, P82, DOI 10.1109/MS.2006.89
   SEARLE SR, 1980, AM STAT, V34, P216, DOI 10.2307/2684063
   Shull F, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P249, DOI 10.1109/METRIC.2002.1011343
   Shull F, 2000, IEEE T SOFTWARE ENG, V26, P1101, DOI 10.1109/32.881720
   Tassey G., 2002, The economic impact of inadequate infrastructure of software testing
   Thelin T, 2004, EMPIR SOFTW ENG, V9, P77, DOI 10.1023/B:EMSE.0000013515.86806.d4
   Thelin T, 2003, IEEE T SOFTWARE ENG, V29, P687, DOI 10.1109/TSE.2003.1223644
   Thelin T, 2001, INFORM SOFTWARE TECH, V43, P925, DOI 10.1016/S0950-5849(01)00201-4
   Tyran CK, 2002, COMMUN ACM, V45, P87, DOI 10.1145/567498.567504
   Van Genuchten M., 1997, Journal of Management Information Systems, V14, P165
   van Genuchten M, 2001, IEEE SOFTWARE, V18, P60, DOI 10.1109/52.922727
   Vitharana O, 2003, IEEE T SOFTWARE ENG, V29, P167, DOI 10.1109/TSE.2003.1178054
NR 47
TC 20
Z9 22
U1 3
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2012
VL 38
IS 3
BP 547
EP 560
DI 10.1109/TSE.2011.46
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 947FP
UT WOS:000304414400004
DA 2024-07-18
ER

PT J
AU Unterkalmsteiner, M
   Gorschek, T
   Islam, AKMM
   Cheng, CK
   Permadi, RB
   Feldt, R
AF Unterkalmsteiner, Michael
   Gorschek, Tony
   Islam, A. K. M. Moinul
   Cheng, Chow Kian
   Permadi, Rahadian Bayu
   Feldt, Robert
TI Evaluation and Measurement of Software Process Improvement-A Systematic
   Literature Review
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Process implementation and change; process measurement;
   metrics/measurement; systematic literature review
ID PRODUCT LIFE-CYCLE; ORGANIZATIONAL-CHANGE; USABILITY MEASUREMENT;
   METRICS SUITE; SIX-SIGMA; QUALITY; EXPERIENCES; CMM; MATURITY;
   TERMINOLOGY
AB BACKGROUND-Software Process Improvement (SPI) is a systematic approach to increase the efficiency and effectiveness of a software development organization and to enhance software products. OBJECTIVE-This paper aims to identify and characterize evaluation strategies and measurements used to assess the impact of different SPI initiatives. METHOD-The systematic literature review includes 148 papers published between 1991 and 2008. The selected papers were classified according to SPI initiative, applied evaluation strategies, and measurement perspectives. Potential confounding factors interfering with the evaluation of the improvement effort were assessed. RESULTS-Seven distinct evaluation strategies were identified, wherein the most common one, "Pre-Post Comparison," was applied in 49 percent of the inspected papers. Quality was the most measured attribute (62 percent), followed by Cost (41 percent), and Schedule (18 percent). Looking at measurement perspectives, "Project" represents the majority with 66 percent. CONCLUSION-The evaluation validity of SPI initiatives is challenged by the scarce consideration of potential confounding factors, particularly given that "Pre-Post Comparison" was identified as the most common evaluation strategy, and the inaccurate descriptions of the evaluation context. Measurements to assess the short and mid-term impact of SPI initiatives prevail, whereas long-term measurements in terms of customer satisfaction and return on investment tend to be less used.
C1 [Unterkalmsteiner, Michael; Gorschek, Tony; Feldt, Robert] Blekinge Inst Technol, Sch Comp, Software Engn Res Lab, SE-37179 Karlskrona, Sweden.
   [Islam, A. K. M. Moinul] Univ Kaiserslautern, Dept Comp Sci, Software Engn Proc & Measurement Res Grp, D-67653 Kaiserslautern, Germany.
   [Cheng, Chow Kian] Gen Elect Healthcare, Healthcare IT, D-79111 Freiburg, Germany.
   [Permadi, Rahadian Bayu] Amadeus SAS, Prod Mkt & Dev, F-06902 Sophia Antipolis, France.
C3 Blekinge Institute Technology; University of Kaiserslautern; General
   Electric; Amadeus
RP Unterkalmsteiner, M (corresponding author), Blekinge Inst Technol, Sch Comp, Software Engn Res Lab, SE-37179 Karlskrona, Sweden.
EM mun@bth.se; tgo@bth.se; moinul.islam@cs.uni-kl.de;
   ChowKian.Cheng@ge.com; rahadian-bayu.permadi@amadeus.com; rfd@bth.se
RI Gorschek, Tony/E-3445-2013
OI Feldt, Robert/0000-0002-5179-4205
FU Industrial Excellence Center EASE-Embedded Applications Software
   Engineering
FX The authors thank the anonymous reviewers whose detailed and judicious
   comments improved the paper considerably. This work was partially funded
   by the Industrial Excellence Center EASE-Embedded Applications Software
   Engineering (http://ease.cs.lth.se).
CR Abrahamsson P, 2002, LECT NOTES COMPUT SC, V2349, P175
   Abrahamsson P, 2002, EUROMICRO CONF PROC, P367, DOI 10.1109/EURMIC.2002.1046223
   Achatz R, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P321, DOI 10.1109/QSIC.2003.1319117
   Ahern D.M., 2001, CMMI SM DISTILLED PR
   Ahmed A., 2004, Proceedings INMIC 2003. 7th International Multi-Topic Conference (IEEE Cat. No.03EX757), P387
   Ajila SA, 2007, J SYST SOFTWARE, V80, P1517, DOI 10.1016/j.jss.2007.01.011
   Alagarsamy K., 2007, P INT C SOFTW ENG AD, P61, DOI DOI 10.1109/ICSEA.2007.73
   Anda B, 2002, LECT NOTES COMPUT SC, V2559, P383
   Anderson S., 1980, Statistical Methods for Comparative Studies
   Andrade J., 1999, Proceedings. Tenth International Workshop on Database and Expert Systems Applications. DEXA 99, P328, DOI 10.1109/DEXA.1999.795188
   [Anonymous], 2009, 2008 ANN REP
   [Anonymous], 1993, CMUSEI93TR024
   [Anonymous], 1995, The Capability Maturity Model: Guidelines for Improving the Software Process
   [Anonymous], 2002, CMUSEI2002TR012
   [Anonymous], P EUR SOFTW PROC IMP
   [Anonymous], 1984, Quality without tears
   [Anonymous], 2002, CMUSEI2002TR011
   [Anonymous], 2006, 2006 TECHNOLOGY MANA
   [Anonymous], 1998, TR215504 ISOIEC
   [Anonymous], 2006, CMUSEI2006TR011
   [Anonymous], 2006, IMPR PROC SMALL SETT
   [Anonymous], 2002, P 12 INT WORKSHOP SO
   [Anonymous], 2009, Project Management: A Systems Approach to Planning, Scheduling and Controlling-10th Edition
   [Anonymous], 2009, ENTERPRISE SME DEFIN
   [Anonymous], 2014, Software engineering: a practitioner's approach
   Ardimento P, 2006, INFORM SOFTWARE TECH, V48, P313, DOI 10.1016/j.infsof.2005.09.010
   Atkinson R., 1999, International Journal of Project Management, V17, P337, DOI [DOI 10.1016/S0263-7863(98)00069-6, 10.1016/S0263-7863(98)00069-6]
   Babar MA, 2009, COMPUTER, V42, P26, DOI 10.1109/MC.2009.233
   Baccarini D., 1999, PROJ MANAG J, V30, P25, DOI DOI 10.1177/875697289903000405
   Baldassarre MT, 2005, PROC IEEE INT CONF S, P283
   BASILI V, 1995, IEEE SOFTWARE, V12, P83, DOI 10.1109/52.469763
   Basili V. R., 1993, Software Engineering - ESEC '93. 4th European Software Engineering Conference Proceedings, P68
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   BASILI VR, 1995, SLOAN MANAGE REV, V37, P55
   Batista J., 2000, Software Process Improvement and Practice, V5, P243, DOI 10.1002/1099-1670(200012)5:4<243::AID-SPIP126>3.0.CO;2-0
   Berry M, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P314, DOI 10.1109/METRIC.2004.1357917
   BEVAN N, 1994, BEHAV INFORM TECHNOL, V13, P132, DOI 10.1080/01449299408914592
   Bevan N, 1999, J SYST SOFTWARE, V49, P89, DOI 10.1016/S0164-1212(99)00070-9
   Biehl RB, 2004, IEEE SOFTWARE, V21, P68, DOI 10.1109/MS.2004.1270765
   Biffl S, 2000, EUROMICRO CONF PROC, pA262
   Birk A, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P105, DOI 10.1109/METRIC.1998.731234
   Boehm B., 2006, 28th International Conference on Software Engineering Proceedings, P12, DOI 10.1145/1134285.1134288
   Borjesson A., 2006, International Journal of Business Information Systems, V1, P310, DOI 10.1504/IJBIS.2006.008602
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Brown M, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P131, DOI 10.1109/METRIC.2004.1357897
   Bruckhaus T, 1996, IEEE SOFTWARE, V13, P29, DOI 10.1109/52.536456
   Bruckhaus T., 1997, THESIS MCGILL U
   Bruntink M, 2006, J SYST SOFTWARE, V79, P1219, DOI 10.1016/j.jss.2006.02.036
   Buchman C. D., 1996, Proceedings of the Twenty-Ninth Hawaii International Conference on System Sciences, P673, DOI 10.1109/HICSS.1996.495521
   Byrnes P., 1996, CMUSEI96TR002
   Caivano D, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P288, DOI 10.1109/CSMR.2005.20
   Calio A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P641, DOI 10.1109/ICSE.2000.870458
   CAMPBELL JP, 1995, ANN EMERG MED, V26, P590, DOI 10.1016/S0196-0644(95)70009-9
   Canfora G, 2006, SOFTWARE PRACT EXPER, V36, P283, DOI 10.1002/spe.697
   Carbone P, 2008, IEEE T INSTRUM MEAS, V57, P235, DOI 10.1109/TIM.2007.909614
   Card D. N., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, DOI 10.1109/CMPSAC.2004.1342834
   Cater-Steel A, 2006, INFORM SOFTWARE TECH, V48, P323, DOI 10.1016/j.infsof.2005.09.012
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cuevas G, 2007, ELECT ROBOT AUTO MEC, P706, DOI 10.1109/CERMA.2007.4367770
   Cugola G., 1998, Software Process Improvement and Practice, V4, P101, DOI 10.1002/(SICI)1099-1670(199809)4:3<101::AID-SPIP103>3.0.CO;2-K
   Damian D, 2005, EMPIR SOFTW ENG, V10, P255, DOI 10.1007/s10664-005-1288-4
   Damian D, 2006, IEEE T SOFTWARE ENG, V32, P433, DOI 10.1109/TSE.2006.61
   Damm LO, 2006, J SYST SOFTWARE, V79, P1001, DOI 10.1016/j.jss.2005.10.015
   DASKALANTONAKIS MK, 1992, IEEE T SOFTWARE ENG, V18, P998, DOI 10.1109/32.177369
   Davis N, 2004, LECT NOTES COMPUT SC, V3281, P91
   Davison R, 2004, INFORM SYST J, V14, P65, DOI 10.1111/j.1365-2575.2004.00162.x
   de Almeida Biolchini JC, 2007, ADV ENG INFORM, V21, P133, DOI 10.1016/j.aei.2006.11.006
   Debou C., 2000, Software Process Improvement and Practice, V5, P55, DOI 10.1002/(SICI)1099-1670(200003)5:1<55::AID-SPIP111>3.0.CO;2-X
   Deming W. E., 1986, OUT CRISIS
   Diaz M, 1997, IEEE SOFTWARE, V14, P75, DOI 10.1109/52.605934
   Dick J, 1997, INFORM SOFTWARE TECH, V39, P551, DOI 10.1016/S0950-5849(97)00013-X
   DION R, 1993, IEEE SOFTWARE, V10, P28, DOI 10.1109/52.219618
   DION R, 1992, IEEE SOFTWARE, V9, P83, DOI 10.1109/52.143121
   Downey Fergal, 2008, Software Process: Improvement and Practice, V13, P327, DOI 10.1002/spip.394
   Dunaway D.K., 2001, CMUSEI2001TR033
   Dybå T, 2005, IEEE T SOFTWARE ENG, V31, P410, DOI 10.1109/TSE.2005.53
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ebert C., 1998, Software Process Improvement and Practice, V4, P21, DOI 10.1002/(SICI)1099-1670(199803)4:1<21::AID-SPIP92>3.0.CO;2-Q
   Ebert C, 2006, IEEE SOFTWARE, V23, P19, DOI 10.1109/MS.2006.88
   Ebert C, 2002, ANN SOFTW ENG, V14, P73, DOI 10.1023/A:1020545406509
   Ebert C, 2001, PROC INT CONF SOFTW, P545, DOI 10.1109/ICSE.2001.919129
   Ebert C, 1999, J SYST SOFTWARE, V46, P25, DOI 10.1016/S0164-1212(98)10086-9
   Ebert C, 2007, J SYST SOFTWARE, V80, P850, DOI 10.1016/j.jss.2006.09.017
   El Emam K, 2000, IEEE T SOFTWARE ENG, V26, P541, DOI 10.1109/32.852742
   ElEmam K, 1996, IEEE SOFTWARE, V13, P109, DOI 10.1109/52.536468
   ELEMAM K, 1998, SPICE THEORY PRACTIC
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Escala D, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P89, DOI 10.1109/METRIC.1998.731230
   Evanco WM, 2003, IEEE T SOFTWARE ENG, V29, P670, DOI 10.1109/TSE.2003.1214331
   Ferreira AIF, 2007, PROC INT CONF SOFTW, P642
   Ferreiro Ferreira Analia Irigoyen, 2008, Software Process: Improvement and Practice, V13, P311, DOI 10.1002/spip.392
   Fitzgerald B, 1999, IEEE SOFTWARE, V16, P37, DOI 10.1109/52.765785
   Fitzpatrick R, 1998, PEOPLE AND COMPUTER XIII, PROCEEDINGS, P3
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   FLORAC WA, 1999, SEI S SOFTW, P1
   Flynn D., 1995, Logistics Information Management, V8, P8, DOI 10.1108/09576059510084966
   Fox C, 1997, COMMUN ACM, V40, P24, DOI 10.1145/255656.255678
   Freimut B, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P163
   French VA, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P337, DOI 10.1109/ICSM.1995.526555
   Fuggetta A., 2000, P C LIM IR FUT SOFTW, P25, DOI DOI 10.1145/336512.336521
   Galinac T, 2007, LECT NOTES COMPUT SC, V4589, P51
   García F, 2006, INFORM SOFTWARE TECH, V48, P631, DOI 10.1016/j.infsof.2005.07.001
   Giraudo G, 2003, EMPIR SOFTW ENG, V8, P59, DOI 10.1023/A:1021720916127
   GOLDENSON D., 2003, DEMONSTRATING IMPACT
   Goldenson D., 1996, ISERN9709
   Golubic S, 2005, ConTEL 2005: Proceedings of the 8th International Conference on Telecommunications, Vols 1 and 2, P457, DOI 10.1109/CONTEL.2005.185929
   Gómez O, 2008, COMM COM INF SC, V10, P165
   Gorschek T, 2004, SOFTWARE PRACT EXPER, V34, P1311, DOI 10.1002/spe.615
   Gorschek T, 2008, INFORM SOFTWARE TECH, V50, P67, DOI 10.1016/j.infsof.2007.10.003
   Gou L, 2008, LECT NOTES COMPUT SC, V5007, P369
   Grable R, 1999, IEEE SOFTWARE, V16, P21, DOI 10.1109/52.754048
   Gray EM, 1998, SOFTWARE QUAL J, V7, P21, DOI 10.1023/A:1008840808887
   Grimstad S, 2006, INFORM SOFTWARE TECH, V48, P302, DOI 10.1016/j.infsof.2005.04.004
   Haley TJ, 1996, IEEE SOFTWARE, V13, P33, DOI 10.1109/52.542292
   Hall T., 2001, New Approaches in Software Measurement. 10th International Workshop, IWSM 2000. Proceedings (Lecture Notes in Computer Science Vol.2006), P73
   Harrison W, 1999, SOFTWARE QUAL J, V8, P211, DOI 10.1023/A:1008971726703
   Hashmi SI, 2008, 7TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE IN CONJUNCTION WITH 2ND IEEE/ACIS INTERNATIONAL WORKSHOP ON E-ACTIVITY, PROCEEDINGS, P519, DOI 10.1109/ICIS.2008.53
   Haugh J. M., 1991, Proceedings. IEEE/AIAA 10th Digital Avionics Systems Conference (Cat. No.91CH3030-4), P220, DOI 10.1109/DASC.1991.177170
   Hayes JH, 2003, J SOFTW MAINT EVOL-R, V15, P297, DOI 10.1002/smr.287
   He Lulu, 2006, 2006 INT S EMP SOFTW, P95
   HENRY J, 1995, J SYST SOFTWARE, V28, P169, DOI 10.1016/0164-1212(94)00053-P
   Herbsleb JD, 1996, PROC INT CONF SOFTW, P323, DOI 10.1109/ICSE.1996.493427
   Hitz M, 1996, IEEE T SOFTWARE ENG, V22, P267, DOI 10.1109/32.491650
   Hössler J, 2006, IEEE INT ENTERP DIST, P367
   Hollenbach C, 1997, COMMUN ACM, V40, P41, DOI 10.1145/255656.255694
   Hollenbach C., 2002, Systems Engineering, V5, P52, DOI 10.1002/sys.10012
   Höst M, 2000, J SYST SOFTWARE, V52, P113, DOI 10.1016/S0164-1212(99)00137-5
   Humphrey W., 1991, J SYSTEMS INTEGRATIO, V1, P321
   Humphrey W.S., 1993, CMUSEI92TR7
   Humphrey WS, 1996, IEEE SOFTWARE, V13, P77, DOI 10.1109/52.493023
   Hwang SM, 2005, LECT NOTES COMPUT SC, V3647, P71
   Hyde K., 2004, Software Process Improvement and Practice, V9, P217, DOI 10.1002/spip.205
   Iversen J, 2006, INT J INFORM MANAGE, V26, P30, DOI 10.1016/j.ijinfomgt.2005.10.006
   Iversen J, 2003, INFORM SYST J, V13, P3, DOI 10.1046/j.1365-2575.2003.00136.x
   Jarvinen J., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P22, DOI 10.1109/METRIC.1999.809722
   Järvinen J, 1999, VTT SYMP, V195, P49
   Jarzabek S, 1998, COMMUN ACM, V41, P93, DOI 10.1145/280324.280338
   Johnson A., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P323, DOI 10.1109/ICSE.1994.296794
   Jung HW, 2004, IEEE SOFTWARE, V21, P88, DOI 10.1109/MS.2004.1331309
   Kaner C., 2004, 10 INT SOFTW METR S
   Karlström D, 2005, SOFTW TEST VERIF REL, V15, P145, DOI 10.1002/stvr.317
   Kautz K, 1999, IEEE SOFTWARE, V16, P14, DOI 10.1109/52.754047
   Kihara H., 1998, Sixteenth Annual Pacific Northwest Software Quality Conference Joint ASQ Software Division's Eighth International Conference on Software Quality, P372
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Krasner H., 1996, Proceedings of the Twenty-Ninth Hawaii International Conference on System Sciences, P693, DOI 10.1109/HICSS.1996.495523
   Kuilboer J.-P., 1999, Journal of Information Technology Management, V10, P35
   Kuntzmann-Combelles A., 1995, Objective Software Quality. Objective Quality: Second Symposium on Software Quality Techniques and Acquisition Criteria. Proceedings, P16
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lane JA, 1997, PROC INT CONF SOFTW, P380, DOI 10.1145/253228.253360
   Larsen J.-O., 1998, System Configuration Management. ECOOP'98 SCM-8 Symposium. Proceedings, P1, DOI 10.1007/BFb0053873
   Lazic Ljubomir, 2008, WSEAS Transactions on Computers, V7, P599
   Lee ES, 2005, LECT NOTES COMPUT SC, V3481, P363
   Lee JW, 2005, PROCEEDINGS OF THE 2005 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P494
   Lee T, 2008, 8TH IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY WORKSHOPS: CIT WORKSHOPS 2008, PROCEEDINGS, P631, DOI 10.1109/CIT.2008.Workshops.120
   Leung HKN, 1998, SECOND EUROMICRO CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P157, DOI 10.1109/CSMR.1998.665789
   List B, 2005, Sixteenth International Workshop on Database and Expert Systems Applications, Proceedings, P941, DOI 10.1109/DEXA.2005.109
   Low G., 1999, STEP '99. Proceedings Ninth International Workshop Software Technology and Engineering Practice, P142, DOI 10.1109/STEP.1999.798787
   Macke D, 2008, LECT NOTES COMPUT SC, V5007, P395, DOI 10.1007/978-3-540-79588-9_34
   Mathiassen L, 2005, IEEE SOFTWARE, V22, P84, DOI 10.1109/MS.2005.159
   McColl-Kennedy J, 2000, TOTAL QUAL MANAGE, V11, pS883
   McGarry F, 2002, 26TH ANNUAL NASA GODDARD SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P83, DOI 10.1109/SEW.2001.992660
   McGarry F, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P52, DOI 10.1109/METRIC.1998.731226
   McGarry F, 2002, IEEE SOFTWARE, V19, P87, DOI 10.1109/MS.2002.1049397
   McKeown K.A., 2000, P 33 HAW INT C SYST, P4046
   McNamara N., 2006, Interactions, V13, P26, DOI 10.1145/1167948.1167972
   Miller P, 2007, QUATIC 2007: 6TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, PROCEEDINGS, P12, DOI 10.1109/QUATIC.2007.30
   Mockus A, 2005, PROC INT CONF SOFTW, P225
   Mohagheghi P, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363104
   Momoh J., 2006, Software Process Improvement and Practice, V11, P295, DOI 10.1002/spip.273
   Morad S, 2005, IEEE INTERNATIONAL CONFERENCE ON SOFTWARE - SCIENCE, TECHNOLOGY AND ENGINEERING, PROCEEDINGS, P110, DOI 10.1109/SWSTE.2005.11
   Moreau B., 2003, Software Process Improvement and Practice, V8, P135, DOI 10.1002/spip.176
   Murugappan M, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1184165
   Murugappan M, 2000, FIRST ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P248, DOI 10.1109/APAQ.2000.883798
   Nelson K. M., 2001, Proceedings of the 34th Annual Hawaii International Conference on System Sciences, DOI 10.1109/HICSS.2001.927160
   Nelson K. M., 2002, Information Technology & Management, V3, P11, DOI 10.1023/A:1013155407674
   Nishiyama T., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P577, DOI 10.1109/ICSE.2000.870450
   Nolan AJ, 1999, IEEE SOFTWARE, V16, P97, DOI 10.1109/52.744576
   ORLIKOWSKI WJ, 1993, MIS QUART, V17, P309, DOI 10.2307/249774
   Otoya S., 1999, STEP '99. Proceedings Ninth International Workshop Software Technology and Engineering Practice, P153, DOI 10.1109/STEP.1999.798788
   Patnayakuni R., 2002, COMMUN ACM, V45, P201
   PAULISH DJ, 1994, COMPUTER, V27, P50, DOI 10.1109/2.312039
   Paulk M.C., 1993, CMUSEI93TR025
   Pearl J., 1998, WHY THERE IS NO STAT
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Pettersson F, 2008, J SYST SOFTWARE, V81, P972, DOI 10.1016/j.jss.2007.08.032
   Pfleeger S., 1997, ADV COMPUT, V44, P127
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   PFLEEGER SL, 1995, J SYST SOFTWARE, V31, P143, DOI 10.1016/0164-1212(94)00094-4
   Bellini CGP, 2008, INT J SOFTW ENG KNOW, V18, P37, DOI 10.1142/S021819400800357X
   Pracchia L., 2004, J CROSSTALK, V17, P20
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P465, DOI 10.1109/32.922716
   PREMKUMAR G, 1995, DATA BASE ADV INF SY, V26, P105
   Raffo DM, 1997, INNOVATION IN TECHNOLOGY MANAGEMENT - THE KEY TO GLOBAL LEADERSHIP, P589, DOI 10.1109/PICMET.1997.653525
   RAGHAVAN VV, 1989, ACM T INFORM SYST, V7, P205, DOI 10.1145/65943.65945
   Ramil JF, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P199, DOI 10.1109/METRIC.2001.915529
   Redzic C, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P396, DOI 10.1109/SERA.2006.61
   Regnell B., 1998, Requirements Engineering, V3, P121, DOI 10.1007/BF02919972
   RICO D, 2004, ROI SOFTWARE PROCESS
   Roan A, 1999, VTT SYMP, V195, P606
   Rocha D.J., 2011, STRENGTHENING VALIDI
   Rooijmans J, 1996, IEEE SOFTWARE, V13, P55, DOI 10.1109/52.476286
   Rozum J.A., 1993, CMUSEI93TR009
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Russ ML, 2000, IEEE SOFTWARE, V17, P96, DOI 10.1109/52.877874
   Sakamoto K., 1996, Proceedings. 1996 Asia-Pacific Software Engineering Conference, P139, DOI 10.1109/APSEC.1996.566749
   Salo O., 2007, Software Process Improvement and Practice, V12, P81, DOI 10.1002/spip.305
   Santos G, 2007, QUATIC 2007: 6TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, PROCEEDINGS, P187, DOI 10.1109/QUATIC.2007.22
   Saracevic T., 1995, SIGIR Forum, P138
   Sargut KU, 2006, SOFTWARE QUAL J, V14, P135, DOI 10.1007/s11219-006-7599-x
   Savioja Erkki, 2007, Software Process: Improvement and Practice, V12, P585, DOI 10.1002/spip.345
   Scacchi W., 2001, ENCY SOFTWARE ENG, P993
   Schalken J, 2006, LECT NOTES COMPUT SC, V4034, P234
   Schneidewind NF, 1999, IEEE T SOFTWARE ENG, V25, P769, DOI 10.1109/32.824387
   Scott L, 2001, 2001 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P182, DOI 10.1109/ASWEC.2001.948512
   Seacord RC, 2003, PROC IEEE INT CONF S, P450, DOI 10.1109/ICSM.2003.1235455
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Seffah A, 2006, SOFTWARE QUAL J, V14, P159, DOI 10.1007/s11219-006-7600-8
   Seshagiri GV, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P67, DOI 10.1109/QSIC.2003.1319087
   SHAH S, 1992, PROC NAECON IEEE NAT, P643, DOI 10.1109/NAECON.1992.220554
   Sharma S, 2000, COMMUN ACM, V43, P80, DOI 10.1145/323830.323848
   SHAW M, 1990, IEEE SOFTWARE, V7, P15, DOI 10.1109/52.60586
   Shen BJ, 2007, LECT NOTES COMPUT SC, V4470, P25
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Sommerville I, 2005, ACM T SOFTW ENG METH, V14, P85, DOI 10.1145/1044834.1044837
   Spork Gunther, 2008, Software Process: Improvement and Practice, V13, P371, DOI 10.1002/spip.399
   Staples M, 2008, INFORM SOFTWARE TECH, V50, P605, DOI 10.1016/j.infsof.2007.07.003
   Staples M, 2007, J SYST SOFTWARE, V80, P1425, DOI 10.1016/j.jss.2006.09.046
   Stavrinoudis D, 2008, FRONT ARTIF INTEL AP, V180, P115, DOI 10.3233/978-1-58603-900-4-115
   Suardi L, 2004, COMMUN ACM, V47, P89, DOI 10.1145/971617.971621
   TANAKA T, 1995, PROC INT CONF SOFTW, P123, DOI 10.1145/225014.225026
   Taneike K, 2008, FUJITSU SCI TECH J, V44, P106
   THOMAS M, 1994, IEEE SOFTWARE, V11, P12, DOI 10.1109/52.300121
   Tischer C, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P269, DOI 10.1109/SPLINE.2007.20
   Titze F., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P618, DOI 10.1109/ICSE.2000.870455
   Trienekens J, 2001, SOFTWARE QUAL J, V9, P269, DOI 10.1023/A:1013715203889
   Trienekens JJM, 2007, SOFTWARE QUAL J, V15, P135, DOI 10.1007/s11219-006-9007-y
   Unterkalmsteiner M., 2010, EXTENDED MAT EVALUAT
   Valett J.D., 1997, EMPIR SOFTW ENG, V2, P133
   van Genuchten M, 2001, IEEE SOFTWARE, V18, P60, DOI 10.1109/52.922727
   van Solingen R, 2004, IEEE SOFTWARE, V21, P32, DOI 10.1109/MS.2004.1293070
   Van Solingen R, 2006, ADV COMPUT, V66, P1, DOI 10.1016/S0065-2458(05)66001-9
   Visconti M., 2000, Proceedings 20th International Conference of the Chilean Computer Science Society, P126, DOI 10.1109/SCCC.2000.890400
   von Konsky BR, 2005, CONF SOFTW ENG EDUC, P215
   von Wangenheim CG, 2006, INFORM SOFTWARE TECH, V48, P890, DOI 10.1016/j.infsof.2005.12.010
   Wang Q, 2005, 2005 International Symposium on Empirical Software Engineering (ISESE), Proceedings, P177
   Weiss DM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P221, DOI 10.1109/ICSE.2002.1007970
   Winkler D, 2007, EUROMICRO CONF PROC, P245
   Winokur M, 1998, EUROMICRO CONF PROC, P800, DOI 10.1109/EURMIC.1998.708105
   Wirth N, 2008, IEEE ANN HIST COMPUT, V30, P32, DOI 10.1109/MAHC.2008.33
   Wohlin C, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P49, DOI 10.1109/ISSRE.1998.730773
   Wohlin C, 2003, LECT NOTES COMPUT SC, V2765, P7
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   WOHLWEND H, 1994, IEEE T SOFTWARE ENG, V20, P833, DOI 10.1109/32.368125
   Xu RZ, 2006, FIRST INTERNATIONAL MULTI-SYMPOSIUMS ON COMPUTER AND COMPUTATIONAL SCIENCES (IMSCCS 2006), PROCEEDINGS, VOL 2, P391, DOI 10.1109/IMSCCS.2006.260
   Zelkowitz MV, 1997, INFORM SOFTWARE TECH, V39, P735, DOI 10.1016/S0950-5849(97)00025-6
   Zettell J., 2001, Product Focused Software Process Improvement. Third International Conference, PROFES 2001. Proceedings (Lecture Notes in Computer Science Vol.2188), P255
   Zhao XS, 2008, 2008 FOURTH INTERNATIONAL CONFERENCE ON INTELLIGENT INFORMATION HIDING AND MULTIMEDIA SIGNAL PROCESSING, PROCEEDINGS, P937, DOI 10.1109/IIH-MSP.2008.63
   Zhao Xiaosong, 2008, 2008 6th IEEE International Conference on Industrial Informatics (INDIN), P1650, DOI 10.1109/INDIN.2008.4618368
   Zhou YM, 2009, IEEE T SOFTWARE ENG, V35, P607, DOI 10.1109/TSE.2009.32
NR 264
TC 140
Z9 154
U1 1
U2 70
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2012
VL 38
IS 2
BP 398
EP 424
DI 10.1109/TSE.2011.26
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 913ZF
UT WOS:000301915200010
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Concas, G
   Marchesi, M
   Murgia, A
   Tonelli, R
   Turnu, I
AF Concas, Giulio
   Marchesi, Michele
   Murgia, Alessandro
   Tonelli, Roberto
   Turnu, Ivana
TI On the Distribution of Bugs in the Eclipse System
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software bug distribution; empirical research; object-oriented systems
ID QUANTITATIVE-ANALYSIS; POWER-LAWS; SOFTWARE; MODEL
AB The distribution of bugs in software systems has been shown to satisfy the Pareto principle, and typically shows a power-law tail when analyzed as a rank-frequency plot. In a recent paper, Zhang showed that the Weibull cumulative distribution is a very good fit for the Alberg diagram of bugs built with experimental data. In this paper, we further discuss the subject from a statistical perspective, using as case studies five versions of Eclipse, to show how log-normal, Double-Pareto, and Yule-Simon distributions may fit the bug distribution at least as well as the Weibull distribution. In particular, we show how some of these alternative distributions provide both a superior fit to empirical data and a theoretical motivation to be used for modeling the bug generation process. While our results have been obtained on Eclipse, we believe that these models, in particular the Yule-Simon one, can generalize to other software systems.
C1 [Concas, Giulio; Marchesi, Michele; Murgia, Alessandro; Tonelli, Roberto; Turnu, Ivana] Univ Cagliari, Dept Elect & Elect Engn, I-09123 Cagliari, Italy.
C3 University of Cagliari
RP Concas, G (corresponding author), Univ Cagliari, Dept Elect & Elect Engn, I-09123 Cagliari, Italy.
EM concas@diee.unica.it; michele@diee.unica.it;
   alessandro.murgia@diee.unica.it; roberto.tonelli@diee.unica.it;
   ivana.turnu@diee.unica.it
RI Marchesi, Michele/U-7048-2019
OI Marchesi, Michele/0000-0003-1540-8773; TONELLI,
   ROBERTO/0000-0002-9090-7698
FU Regione Autonoma della Sardegna (R.A.S.) [L.R.7/2007]
FX The authors thank the anonymous referees who helped to improve the
   quality of the paper. This work was partly supported by a grant from
   Regione Autonoma della Sardegna (R.A.S.) awarded to I. Turnu, PO
   Sardegna FSE 2007-2013, L.R.7/2007 "Promotion of the scientific research
   and technological innovation in Sardinia."
CR Adamic L.A., 2000, 94304 CA INF DYN LAB
   Andersson C, 2007, IEEE T SOFTWARE ENG, V33, P273, DOI 10.1109/TSE.2007.1005
   Baxter G, 2006, ACM SIGPLAN NOTICES, V41, P397, DOI 10.1145/1167515.1167507
   Concas G, 2007, IEEE T SOFTWARE ENG, V33, P687, DOI [10.1109/TSE.2007.1019, 10.1109/TSE.2007.1016]
   Concas G, 2006, PHYSICA A, V370, P817, DOI 10.1016/j.physa.2006.02.024
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Hatton L, 2009, IEEE T SOFTWARE ENG, V35, P566, DOI 10.1109/TSE.2008.105
   Liggesmeyer P., 2009, P SOFTW ENG MAR, P151
   Louridas P, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1391984.1391986
   Mitzenmacher M., 2004, INTERNET MATH, V1, P305, DOI [DOI 10.1080/15427951.2004.10129092, 10.1080/15427951.2004.10129092]
   Narayan G, 2008, TASE 2008: SECOND IFIP/IEEE INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING, PROCEEDINGS, P73, DOI 10.1109/TASE.2008.40
   Newman MEJ, 2005, CONTEMP PHYS, V46, P323, DOI 10.1080/00107510500052444
   Reed W. J., 2002, PHYS REV E, V66, P67
   Reed WJ, 2004, COMMUN STAT-THEOR M, V33, P1733, DOI 10.1081/STA-120037438
   Reed WJ, 2003, PHYSICA A, V319, P469, DOI 10.1016/S0378-4371(02)01507-8
   SIMON HA, 1955, BIOMETRIKA, V42, P425
   Stark CP, 2001, GEOPHYS RES LETT, V28, P1091, DOI 10.1029/2000GL008527
   Wheeldon R, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P45, DOI 10.1109/SCAM.2003.1238030
   WIENEREHRLICH WK, 1984, IEEE T SOFTWARE ENG, V10, P376, DOI 10.1109/TSE.1984.5010250
   Yule GU, 1925, PHILOS T R SOC LON B, V213, P21, DOI 10.1098/rstb.1925.0002
   Zhang HY, 2008, IEEE T SOFTWARE ENG, V34, P301, DOI 10.1109/TSE.2007.70771
   Zhang HY, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P230, DOI 10.1109/ASPEC.2007.64
NR 22
TC 31
Z9 34
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2011
VL 37
IS 6
BP 872
EP 877
DI 10.1109/TSE.2011.54
PG 6
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 854SE
UT WOS:000297513700008
DA 2024-07-18
ER

PT J
AU Salleh, N
   Mendes, E
   Grundy, JC
AF Salleh, Norsaremah
   Mendes, Emilia
   Grundy, John C.
TI Empirical Studies of Pair Programming for CS/SE Teaching in Higher
   Education: A Systematic Literature Review
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Empirical studies; pair programming; systematic review
ID SOFTWARE-DEVELOPMENT; GROUP-PERFORMANCE; ACADEMIC-SUCCESS; PERSONALITY;
   IMPACT; TEAMS; COMPATIBILITY; STUDENTS; MODEL
AB The objective of this paper is to present the current evidence relative to the effectiveness of pair programming (PP) as a pedagogical tool in higher education CS/SE courses. We performed a systematic literature review (SLR) of empirical studies that investigated factors affecting the effectiveness of PP for CS/SE students and studies that measured the effectiveness of PP for CS/SE students. Seventy-four papers were used in our synthesis of evidence, and 14 compatibility factors that can potentially affect PP's effectiveness as a pedagogical tool were identified. Results showed that students' skill level was the factor that affected PP's effectiveness the most. The most common measure used to gauge PP's effectiveness was time spent on programming. In addition, students' satisfaction when using PP was overall higher than when working solo. Our meta-analyses showed that PP was effective in improving students' grades on assignments. Finally, in the studies that used quality as a measure of effectiveness, the number of test cases succeeded, academic performance, and expert opinion were the quality measures mostly applied. The results of this SLR show two clear gaps in this research field: 1) a lack of studies focusing on pair compatibility factors aimed at making PP an effective pedagogical tool and 2) a lack of studies investigating PP for software design/modeling tasks in conjunction with programming tasks.
C1 [Salleh, Norsaremah] Int Islamic Univ Malaysia, Dept Comp Sci, Kuala Lumpur 50728, Malaysia.
   [Salleh, Norsaremah; Mendes, Emilia] Univ Auckland, Dept Comp Sci, Auckland Mail Ctr, Auckland 1142, New Zealand.
   [Grundy, John C.] Swinburne Univ Technol, Fac Informat & Commun Technol, Hawthorn, Vic 3122, Australia.
C3 International Islamic University Malaysia; University of Auckland;
   Swinburne University of Technology
RP Salleh, N (corresponding author), Int Islamic Univ Malaysia, Dept Comp Sci, POB 10, Kuala Lumpur 50728, Malaysia.
EM nsal017@ec.auckland.ac.nz; emilia@cs.auckland.ac.nz; jgrundy@swin.edu.au
RI Grundy, John/AAF-1716-2019; Salleh, Norsaremah/B-9889-2008; Mendes,
   Maria E/B-4207-2015; Salleh, Norsaremah/AFU-5066-2022
OI Grundy, John/0000-0003-4928-7076; Salleh,
   Norsaremah/0000-0001-5625-7014; Mendes, Emilia/0000-0003-0449-5322
FU Ministry of Higher Education Malaysia
FX This research is partially funded by the Ministry of Higher Education
   Malaysia. The authors would like to thank the reviewers and associate
   editor for the insightful comments and suggestions made to this paper,
   and Liz Hardley for the advice and assistance given during the
   literature search process.
CR AHREN TC, 2005, P 35 ANN C FRONT ED
   Al-Kilidar H, 2005, 2005 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P78, DOI 10.1109/ASWEC.2005.24
   Ally M, 2005, LECT NOTES COMPUT SC, V3556, P82
   [Anonymous], 1992, J Pers, V60, P175
   [Anonymous], 1998, MBTI MANUAL GUIDE DE
   [Anonymous], P 11 ANN C INN TECHN
   [Anonymous], 2000, READ PAPER BASICS EV
   BALIJEPALLY V, 2006, THESIS U TEXAS ARLIN
   Bax L, 2007, BMC MED RES METHODOL, V7, DOI 10.1186/1471-2288-7-40
   Beck K., 2000, EXTREME PROGRAMMING
   Beelmann A, 2006, EUR PSYCHOL, V11, P244, DOI 10.1027/1016-9040.11.3.244
   Bellini E, 2005, J SOFTW MAINT EVOL-R, V17, P401, DOI 10.1002/smr.322
   Berenson S.B., 2004, J ED RESOURCES COMPU, V4, DOI DOI 10.1145/1060071.1060074
   Bipp T, 2008, INFORM SOFTWARE TECH, V50, P231, DOI 10.1016/j.infsof.2007.05.006
   Bowers CA, 2000, SMALL GR RES, V31, P305, DOI 10.1177/104649640003100303
   Burch GSJ, 2008, INT REV IND ORGAN PS, V23, P261
   Busato VV, 2000, PERS INDIV DIFFER, V29, P1057, DOI 10.1016/S0191-8869(99)00253-6
   Canfora G, 2005, LECT NOTES COMPUT SC, V3556, P92
   Canfora G, 2004, PROG COMPREHEN, P62, DOI 10.1109/WPC.2004.1311048
   CANFORA G, 2005, P 2005 ACM S APPL CO, P1478
   Canfora G, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P195
   Carver JC, 2007, CONF SOFTW ENG EDUC, P115, DOI 10.1109/CSEET.2007.29
   Chao J, 2006, AGILE 2006, PROCEEDINGS, P89, DOI 10.1109/AGILE.2006.20
   Chaparro E.A., 2005, Proc. 17th Workshop Psychology of Programming Interest Group, P5
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHOI KS, 2004, THESIS NEW JERS I TE
   CIOLKOWSKI M, 2002, P 1 INT WORKSH EMP S
   Cliburn D.C., 2003, J COMPUTING SCI COLL, V19, P20, DOI DOI 10.5555/948737.948741
   COCKBURN A, 2001, P 2 INT C EXTR PROGR
   Comrey AL, 1955, J APPL PSYCHOL, V39, P354, DOI 10.1037/h0045751
   CONARD MA, 2006, J RES PERS, V40, P449
   Costa P. T., 1985, The NEO Personality Inventory Manual
   Creswell J. W., 2013, RES DESIGN QUALITATI
   Crombie I., 1996, The Pocket Guide to Appraisal
   DeClue T., 2003, J COMPUTING SMALL CO, V18, P49
   DOMINO MA, 2003, P 2003 SIGMIS C COMP, P44
   Domino MA, 2007, INFORM TECHNOL MANAG, V8, P297, DOI 10.1007/s10799-007-0016-8
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2007, IEEE SOFTWARE, V24, P12, DOI 10.1109/MS.2007.158
   ELSEVIER BV, 2008, SCOP OV WHAT IS IT
   Farsides T, 2003, PERS INDIV DIFFER, V34, P1225, DOI 10.1016/S0191-8869(02)00111-3
   FELDER RM, 1988, ENG EDUC, V78, P674
   Fink A., 2005, CONDUCTING RES LIT R
   Forsyth D.R., 2006, Group Dynamics, V5th
   Freeman S.F., 2003, ASEE Annual Conference Proceedings, P8885
   Furnham A, 1996, PERS INDIV DIFFER, V21, P303, DOI 10.1016/0191-8869(96)00033-5
   GEHRINGER EF, 2003, P COMP 18 ANN ACM SI, P187
   GEVAERT H, 2007, THESIS U MANITOBA
   HANKS B, 2004, ACM SIGCSE B, V36, P176
   Hanks Brian, 2007, P 3 INT COMP ED RES, P159, DOI [10.1145/1288580.1288601., DOI 10.1145/1288580.1288601]
   HEIBERG S, 2003, P EXTR PROGR AG PROC, P215
   HO CW, 2004, TR200420 N CAR STAT
   Howard E. V., 2006, Journal of Educational Technology Systems, V35, P89, DOI 10.2190/5K87-58W8-G07M-2811
   III TV, 2007, P 6 IEEE ACIS INT C, P302
   James SD, 2002, 6TH WORLD MULTICONFERENCE ON SYSTEMICS, CYBERNETICS AND INFORMATICS, VOL VIII, PROCEEDINGS, P485
   Janes A., 2003, Extreme Programming and Agile Processes in Software Engineering. 4th International Conference, XP 2003. Proceedings (Lecture Notes in Computer Science Vol.2675), P205
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Katira N, 2005, PROC INT CONF SOFTW, P625
   Katira N., 2004, SIGCSE Bulletin, V36, P7, DOI 10.1145/1028174.971307
   Keirsey D., 1984, PLEASE UNDERSTAND ME
   Khan K.S., 2003, SYSTEMATIC REV SUPPO
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kuppuswami S., 2004, Informatics in Education, V3, P251
   Lan Cao, 2004, "8th Internation Conference on Empirical Assessment in Software Engineering (EASE 2004)" Workshop - 26th International Conference on Software Engineering, P21, DOI 10.1049/ic:20040395
   LAYMAN L, 2005, P FRONT ED 35 ANN C, DOI DOI 10.1109/FIE.2005.1611964
   Layman L, 2006, CONF SOFTW ENG EDUC, P159, DOI 10.1109/CSEET.2006.10
   Leedy P.D., 2005, PRACTICAL RES PLANNI, V8th
   LIDDELL WW, 1976, ACAD MANAGE J, V19, P413, DOI 10.5465/255607
   Livermore JA, 2006, Proceedings of the IEEE SoutheastCon 2006, P149, DOI 10.1109/second.2006.1629340
   Lou YP, 2001, REV EDUC RES, V71, P449, DOI 10.3102/00346543071003449
   Lui KM, 2006, INT J HUM-COMPUT ST, V64, P915, DOI 10.1016/j.ijhcs.2006.04.010
   Madeyski L, 2007, LECT NOTES COMPUT SC, V4589, P207
   Madeyski L, 2006, LECT NOTES COMPUT SC, V4034, P278
   Madeyski L, 2005, FRONT ARTIF INTEL AP, V130, P113
   Madeyski L, 2006, LECT NOTES COMPUT SC, V4044, P65
   Martin R., 1994, OO DESIGN QUALITY ME
   MCCONNEL S, 1993, CODE COMPLETE PRACTI
   McDowell C, 2003, PROC INT CONF SOFTW, P602, DOI 10.1109/ICSE.2003.1201243
   McDowell C., 2004, ACM SIGCSE B, V34, P38, DOI [10.1145/563517.563353, DOI 10.1145/563517.563353]
   MCDOWELL C, 2003, ACM SIGCSE B, V35, P60, DOI DOI 10.1145/961290.961531
   Melia S., 2010, P INT S EMP SOFTW EN, P505
   Mendes E., 2006, ITiCSE06. Proceedings of the 11th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education, P108, DOI 10.1145/1140124.1140155
   MENDES E, 2005, ACM SIGCSE B, V37, P296
   Mohammed S, 2003, SMALL GR RES, V34, P651, DOI 10.1177/1046496403257228
   Müller MM, 2007, J SYST SOFTWARE, V80, P1460, DOI 10.1016/j.jss.2006.10.032
   Müller MM, 2006, INFORM SOFTWARE TECH, V48, P335, DOI 10.1016/j.infsof.2005.09.008
   Mujeeb-u-Rehman M., 2006, 2005 Canadian Conference on Electrical and Computer Engineering, P1116
   Müller MM, 2005, J SYST SOFTWARE, V78, P166, DOI 10.1016/j.jss.2004.12.019
   Müller MM, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P151, DOI 10.1109/METRIC.2004.1357899
   Müller MM, 2004, EMPIR SOFTW ENG, V9, P335, DOI 10.1023/B:EMSE.0000039883.47173.39
   NAGAPPAN N, 2003, ACM SIGCSE B, V35, P359
   NAWROCKI J, 2005, P EUROSPI BUD NOV, P28
   Nawrocki J., 2001, P ESCOM 2001, P269
   NEVIN AI, 1994, CREATIVITY COLLABORA
   Nosek JT, 1998, COMMUN ACM, V41, P105, DOI 10.1145/272287.272333
   PHONGPAIBUL M, 2006, ISESE 06, P85
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   Pittenger David J., 1993, Journal of Career Planning and Employment, V54, P48
   SFETSOS P, 2006, P 7 INT C EXTR PROGR, P43
   Shaochun X., 2006, P 5 IEEEACIS INT C C, P500, DOI DOI 10.1109/ICIS-COMSAR.2006.34
   SHAOCHUN X, 2005, P 35 ANN C FRONT ED, P7
   Simon Beth, 2007, P 3 INT COMP ED RES, P73, DOI 10.1145/1288580.1288591
   Slaten KM, 2005, AGILE 2005, PROCEEDINGS, P323, DOI 10.1109/ADC.2005.48
   Slavin R., 1990, COOPERATIVE LEARNING
   SLAVIN RE, 1980, REV EDUC RES, V50, P315, DOI 10.2307/1170149
   SPENCER L, 2003, GOVT CHIEF SOCIAL RE
   Srikanth H, 2004, 17TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P144
   STEINER LD, 2003, ACM SIGCSE B, V35, P363
   THOMAS L, 2003, ACM SIGCSE B, V35, P363, DOI DOI 10.1145/792548.612007
   Tomayko J.E., 2002, J COMPUTER SCI ED, V12, P213, DOI DOI 10.1076/CSED.12.3.213.8614
   VANDEGRIFT T, 2004, ACM SIGCSE B, P2
   VANHANEN J, 2005, P INT S EMP SOFTW EN, P336
   Vygotsky L. S., 1978, Mind in Society: The Development of Higher Psychological Processes, DOI 10.2307/j.ctvjf9vz4
   Werner L.L., 2004, Journal on Educational Resources in Computing, V4, p4
   WILLIAMS, 2002, COMPUTER SCI ED, V12, P197
   WILLIAMS AT, 2007, THESIS PACE U
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
   Williams L, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P143, DOI 10.1109/ISESE.2003.1237973
   Williams L., 2002, PAIR PROGRAMMING ILU
   Williams L., 2006, P AGILE 2006 C
   Williams L. A., 2000, Thirteenth Conference on Software Engineering Education and Training, P59
   WILLIAMS LA, 2000, THESIS U UTAH
   Williams L, 2007, PROC INT CONF SOFTW, P677
   Winkler D, 2006, LECT NOTES COMPUT SC, V4034, P319
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zemke R., 1992, TRAINING, V29, P43
NR 129
TC 173
Z9 190
U1 7
U2 77
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2011
VL 37
IS 4
BP 509
EP 525
DI 10.1109/TSE.2010.59
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 801QT
UT WOS:000293456000004
DA 2024-07-18
ER

PT J
AU Kim, M
   Kim, Y
   Kim, H
AF Kim, Moonzoo
   Kim, Yunho
   Kim, Hotae
TI A Comparative Study of Software Model Checkers as Unit Testing Tools: An
   Industrial Case Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Embedded software verification; software model checking; bounded model
   checking; CEGAR-based model checking; flash file systems
ID ABSTRACTION
AB Conventional testing methods often fail to detect hidden flaws in complex embedded software such as device drivers or file systems. This deficiency incurs significant development and support/maintenance cost for the manufacturers. Model checking techniques have been proposed to compensate for the weaknesses of conventional testing methods through exhaustive analyses. Whereas conventional model checkers require manual effort to create an abstract target model, modern software model checkers remove this overhead by directly analyzing a target C program, and can be utilized as unit testing tools. However, since software model checkers are not fully mature yet, they have limitations according to the underlying technologies and tool implementations, potentially critical issues when applied in industrial projects. This paper reports our experience in applying Blast and CBMC to testing the components of a storage platform software for flash memory. Through this project, we analyzed the strong and weak points of two different software model checking technologies in the viewpoint of real-world industrial application-counterexample-guided abstraction refinement with predicate abstraction and SAT-based bounded analysis.
C1 [Kim, Moonzoo; Kim, Yunho] Korea Adv Inst Sci & Technol, Dept Comp Sci, Taejon 305701, South Korea.
   [Kim, Hotae] Samsung Elect, Linux Lab, Suwon, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST); Samsung;
   Samsung Electronics
RP Kim, M (corresponding author), Korea Adv Inst Sci & Technol, Dept Comp Sci, 373-1 Guseong Dong, Taejon 305701, South Korea.
EM moonzoo@cs.kaist.ac.kr; kimyunho@kaist.ac.kr; hotae.kim@samsung.com
RI Kim, Moonzoo/C-1661-2011
FU Ministry of Knowledge Economy (MKE), Korea, under the Information
   Technology Research Center (ITRC) [NIPA-2009-(C1090-0902-0032)]; Korea
   Ministry of Education, Science and Technology (MEST)/National Research
   Foundation of Korea (NRF) [2009-0063252]; Ministry of Education, Science
   and Technology [2009-0064639]
FX The authors would like to thank Professor Dirk Beyer and Professor
   Daniel Kroening for the valuable discussion on the features of Blast and
   CBMC, respectively. In addition, they thank Professor Yunja Choi at
   Kyungpook National University for the verification of MSR. This research
   was supported by the Ministry of Knowledge Economy (MKE), Korea, under
   the Information Technology Research Center (ITRC) support program
   supervised by the National IT Industry Promotion Agency (NIPA)
   (NIPA-2009-(C1090-0902-0032)), the Engineering Research Center of
   Excellence Program of Korea Ministry of Education, Science and
   Technology (MEST)/National Research Foundation of Korea (NRF) (Grant
   2009-0063252), and Basic Science Research Program through the NRF funded
   by the Ministry of Education, Science and Technology (2009-0064639). A
   preliminary version appeared in ASE 2008 [39].
CR [Anonymous], P C OP SYST DES IMPL
   [Anonymous], P C PROGR LANG DES I
   [Anonymous], 2006, P ACM C COMP COMM SE
   [Anonymous], P INT C FORM METH CO
   BALL T, 2001, P C PROGR LANG DES I
   BALL T, 2004, P INT C INT FORM MET
   Beyer Dirk, 2007, International Journal on Software Tools for Technology Transfer, V9, P505, DOI 10.1007/s10009-007-0044-z
   BEYER D, 2008, P INT C COMP AID VER
   Biere A, 2003, ADV COMPUT, V58, P117
   Butterfield A, 2009, SCI COMPUT PROGRAM, V74, P219, DOI 10.1016/j.scico.2008.09.014
   Chaki S, 2004, IEEE T SOFTWARE ENG, V30, P388, DOI 10.1109/TSE.2004.22
   CHAKRABARTI A, 2001, P INT C COMP AID VER
   CIMATTI A, 2008, P INT C TOOLS ALG CO
   Clarke E, 2004, FORM METHOD SYST DES, V25, P105, DOI 10.1023/B:FORM.0000040025.89719.f3
   Clarke E, 2003, J ACM, V50, P752, DOI 10.1145/876638.876643
   Clarke E, 2001, FORM METHOD SYST DES, V19, P7, DOI 10.1023/A:1011276507260
   CLARKE E, 2005, P INT C TOOLS ALG CO
   CLARKE E, 2004, P INT C TOOLS ALG CO
   Clarke Edmund M., 2001, Model Checking
   COOK B, 2005, P INT C COMP AID VER
   Cousot P, 1996, ACM COMPUT SURV, V28, P324, DOI 10.1145/234528.234740
   D'Silva V, 2008, IEEE T COMPUT AID D, V27, P1165, DOI 10.1109/TCAD.2008.923410
   Detlefs D, 2005, J ACM, V52, P365, DOI 10.1145/1066100.1066102
   Een N., 2003, P INT C THEORY APPL
   FERREIRA MA, 2008, P 4 VDM OV WORKSH
   Gal E, 2005, ACM COMPUT SURV, V37, P138, DOI 10.1145/1089733.1089735
   Graf S, 1997, LECT NOTES COMPUT SC, V1254, P72
   GROCE A, 2008, P WORKSH CONSTR FORM
   GU J, 1996, AM MATH SOC
   Jhala R, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592438
   JOSHI R, 2005, P INTL C VER SOFTW T
   KANG E, 2008, ABSTRACT STATE MACHI
   KIM M, 2008, P IEEE ACM INT C AUT
   KIM M, 2008, P SPIN WORKSH
   KIM M, 2009, P BRAZ S FORM METH
   KOLB E, 2009, P C PERS SYST INF
   KU K, 2007, P INT C AUT SOFTW EN
   Mahnke W, 2009, OPC unified architecture
   McMillan KL, 2005, THEOR COMPUT SCI, V345, P101, DOI 10.1016/j.tcs.2005.07.003
   MCMILLAN KL, 2003, P INT C COMP AID VER
   MUHLBERG JT, 2006, P INT WORKSH FORM ME
   POST H, 2007, P INT C INT FORM MET
   POST H, 2008, P INT C AUT SOFTW EN
   Schlich Bastian, 2009, International Journal on Software Tools for Technology Transfer, V11, P187, DOI 10.1007/s10009-009-0106-5
   SEN K, 2005, P EUR SOFTW ENG C FD
   UTTING M, 2007, PRACT MOD BAS TEST T
   YANG J, 2004, P S OP SYST DES IMPL
   ZHANG L, 2002, P INT C COMP AID VER
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
   2009, P 12 INT C THEOR APP
   2010, CREST AUTOMATIC TEST
   2010, FLASH MEMORY
   2010, SAMSUNG ONCNAND FUSI
NR 53
TC 22
Z9 24
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2011
VL 37
IS 2
BP 146
EP 160
DI 10.1109/TSE.2010.68
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 739ZL
UT WOS:000288760900002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chen, TY
   Tse, TH
   Zhou, ZQ
AF Chen, Tsong Yueh
   Tse, T. H.
   Zhou, Zhi Quan
TI Semi-Proving: An Integrated Method for Program Proving, Testing, and
   Debugging
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software/program verification; symbolic execution; testing and debugging
ID SYMBOLIC EXECUTION; SOFTWARE; TACCLE
AB We present an integrated method for program proving, testing, and debugging. Using the concept of metamorphic relations, we select necessary properties for target programs. For programs where global symbolic evaluation can be conducted and the constraint expressions involved can be solved, we can either prove that these necessary conditions for program correctness are satisfied or identify all inputs that violate the conditions. For other programs, our method can be converted into a symbolic-testing approach. Our method extrapolates from the correctness of a program for tested inputs to the correctness of the program for related untested inputs. The method supports automatic debugging through the identification of constraint expressions that reveal failures.
C1 [Chen, Tsong Yueh] Swinburne Univ Technol, Ctr Software Anal & Testing, Hawthorn, Vic 3122, Australia.
   [Tse, T. H.] Univ Hong Kong, Dept Comp Sci, Pokfulam, Hong Kong, Peoples R China.
   [Zhou, Zhi Quan] Univ Wollongong, Sch Comp Sci & Software Engn, Wollongong, NSW 2522, Australia.
C3 Swinburne University of Technology; University of Hong Kong; University
   of Wollongong
RP Chen, TY (corresponding author), Swinburne Univ Technol, Ctr Software Anal & Testing, Hawthorn, Vic 3122, Australia.
EM tychen@swin.edu.au; thtse@cs.hku.hk; zhiquan@uow.edu.au
RI Tse, T.H./C-6590-2008
OI Tse, T.H./0000-0002-0460-8377; Zhou, Zhi Quan/0000-0003-1769-9367; Chen,
   Tsong/0000-0003-3578-0994
FU Research Grants Council of Hong Kong [717308]; Australian Research
   Council [DP 0771733]; University of Wollongong
FX All correspondence should be addressed to Dr. Zhi Quan Zhou at the
   address shown on the first page of this paper. The authors are grateful
   to Willem Visser for his helps and discussions on symbolic-execution
   techniques using the Java PathFinder model checker [1], [44]. They are
   also grateful to Giovanni Denaro and his group for providing the
   symbolic-execution tool SAVE [21]. They would like to thank Joxan Jaffar
   and Roland Yap for providing a constraint solver [42]. They would also
   like to thank Bernhard Scholz and Phyllis Frankl for their information
   and discussions on symbolic-evaluation techniques. This research is
   supported in part by the General Research Fund of the Research Grants
   Council of Hong Kong (project no. 717308), a Discovery Grant of the
   Australian Research Council (project no. DP 0771733), and a Small Grant
   of the University of Wollongong.
CR Agrawal H, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P143, DOI 10.1109/ISSRE.1995.497652
   AMMANN PE, 1988, IEEE T COMPUT, V37, P418, DOI 10.1109/12.2185
   [Anonymous], 1980, Software Manual for the Elementary Functions
   [Anonymous], 2000, The mathematica book
   [Anonymous], ADV SYMBOLIC ANAL CO
   [Anonymous], 1990, Software testing techniques {
   Artzi Shay., 2008, P 2008 INT S SOFTWAR, P261, DOI [10.1145/1390630.1390662, DOI 10.1145/1390630.1390662]
   BARESI L, 2001, CISTR0102 U OR
   BLUM M, 1995, J ACM, V42, P269, DOI 10.1145/200836.200880
   BLUM M, 1993, J COMPUT SYST SCI, V47, P549, DOI 10.1016/0022-0000(93)90044-W
   Burgstaller B, 2006, LECT NOTES COMPUT SC, V4228, P172
   Chan WK, 2007, INT J WEB SERV RES, V4, P61, DOI 10.4018/jwsr.2007040103
   Chan WK, 2006, INT J SOFTW ENG KNOW, V16, P677, DOI 10.1142/S0218194006002951
   Chen HY, 2001, ACM T SOFTW ENG METH, V10, P56, DOI 10.1145/366378.366380
   Chen T.Y., 2004, PROC 4 IBERO AM S SO, P569
   Chen T. Y., 1998, Technical Report hkust-cs98-01
   Chen TY, 2002, P INT COMP SOFTW APP, P327, DOI 10.1109/CMPSAC.2002.1045022
   Chen TY, 2003, INFORM SOFTWARE TECH, V45, P1, DOI 10.1016/S0950-5849(02)00129-5
   CHEN TY, 2002, ACM SIGSOFT SOFTWARE, V27, P191
   Clarke L. A., 1981, Computer Program Testing. Proceedings of the Summer School on Computer Program Testing, P65
   COENPORISINI A, 2001, ACM SIGSOFT SOFTWARE, V26, P142
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   DILLON LK, 1990, ACM T PROGR LANG SYS, V12, P643, DOI 10.1145/88616.96551
   Fahringer T, 2000, IEEE T PARALL DISTR, V11, P1105, DOI 10.1109/71.888633
   Fahringer T., 2000, Scientific Programming, V8, P73
   GELLER M, 1978, COMMUN ACM, V21, P368, DOI 10.1145/359488.359495
   GERLEK MP, 1995, ACM T PROGR LANG SYS, V17, P85, DOI 10.1145/200994.201003
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid P, 2007, ACM SIGPLAN NOTICES, V42, P47, DOI 10.1145/1190215.1190226
   Godefroid Patrice, 2008, EMSOFT, P207
   Gotlieb A, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P365, DOI 10.1109/ISSRE.2003.1251058
   Gotlieb A, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P34, DOI 10.1109/CMPSAC.2003.1245319
   GULAVANI BS, 2006, P 14 ANN S FDN SOFTW, P117
   Haghighat MR, 1996, ACM T PROGR LANG SYS, V18, P477, DOI 10.1145/233561.233568
   Hailpern B, 2002, IBM SYST J, V41, P4, DOI 10.1147/sj.411.0004
   HALL M, 1999, THEORY GROUPS
   He HF, 2004, LECT NOTES COMPUT SC, V2984, P267
   Howden W. E., 1976, IEEE Transactions on Software Engineering, VSE-2, P208, DOI 10.1109/TSE.1976.233816
   Huo Yan Chen, 1998, ACM Transactions on Software Engineering and Methodology, V7, P250, DOI 10.1145/287000.287004
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   JAFFAR J, 1992, ACM T PROGR LANG SYS, V14, P339, DOI 10.1145/129393.129398
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   KHURSHID S, 2003, P 9 INT C TOOLS ALG
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Korel Bogdan., 1997, P 3 INT WORKSHOP AUT, P43
   LIPTON R, 1991, P DIMACS WORKSH DIST, P191
   LIU C, 2006, P 6 SIAM INT C DAT M
   Liu C, 2006, IEEE T SOFTWARE ENG, V32, P831, DOI 10.1109/TSE.2006.105
   OFFUTT AJ, 1990, SYST INT SOFTW SAF P, P12
   Pezze M., 2008, Software Testing and Analysis: Process, Principles and Techniques
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Tse TH, 2007, COMMUN ACM, V50, P78, DOI 10.1145/1278201.1278210
   Tse TH, 2000, FIRST ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P89, DOI 10.1109/APAQ.2000.883782
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   Yorsh G., 2006, ISSTA 06 P 2006 INT, P145
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zhou ZQ, 2012, SOFTW TEST VERIF REL, V22, P221, DOI 10.1002/stvr.437
NR 59
TC 53
Z9 53
U1 1
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2011
VL 37
IS 1
BP 109
EP 125
DI 10.1109/TSE.2010.23
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 712OS
UT WOS:000286676700008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Moody, DL
AF Moody, Daniel L.
TI The "Physics" of Notations: Toward a Scientific Basis for Constructing
   Visual Notations in Software Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Modeling; analysis; diagrams; communication; visualization; visual
   syntax; concrete syntax
ID FEATURE-INTEGRATION-THEORY; ENTITY-RELATIONSHIP; COGNITIVE DIMENSIONS;
   DESIGN; INFORMATION; FRAMEWORK; SEARCH; REPRESENTATIONS; COMPREHENSION;
   EXPERTISE
AB Visual notations form an integral part of the language of software engineering (SE). Yet historically, SE researchers and notation designers have ignored or undervalued issues of visual representation. In evaluating and comparing notations, details of visual syntax are rarely discussed. In designing notations, the majority of effort is spent on semantics, with graphical conventions largely an afterthought. Typically, no design rationale, scientific or otherwise, is provided for visual representation choices. While SE has developed mature methods for evaluating and designing semantics, it lacks equivalent methods for visual syntax. This paper defines a set of principles for designing cognitively effective visual notations: ones that are optimized for human communication and problem solving. Together these form a design theory, called the Physics of Notations as it focuses on the physical (perceptual) properties of notations rather than their logical (semantic) properties. The principles were synthesized from theory and empirical evidence from a wide range of fields and rest on an explicit theory of how visual notations communicate. They can be used to evaluate, compare, and improve existing visual notations as well as to construct new ones. The paper identifies serious design flaws in some of the leading SE notations, together with practical suggestions for improving them. It also showcases some examples of visual notation design excellence from SE and other fields.
C1 Univ Twente, Dept Informat Syst & Change Management, NL-7500 AE Enschede, Netherlands.
C3 University of Twente
RP Moody, DL (corresponding author), Univ Twente, Dept Informat Syst & Change Management, POB 217, NL-7500 AE Enschede, Netherlands.
EM d.l.moody@utwente.nl
RI Jaafar, Mohamad Farid/B-4563-2010
FU Dutch Research Innovation Agency (SenterNovem)
FX This work originally grew out of a project commissioned by Henry
   Franken, CEO of BiZZdesign B. V., and supported by the Dutch Research
   Innovation Agency (SenterNovem). The author would also like to thank Jos
   van Hillegersberg (Head, Department of Information & Change Management,
   University of Twente) for creating such a stimulating environment in
   which to conduct research.
CR Alexander C., 1970, Notes on the Synthesis of Form
   [Anonymous], 24744 ISOIEC
   [Anonymous], 1975, Psychophysics
   [Anonymous], J RES TECHNOLOGY ED
   [Anonymous], 1981, INFORM ENG
   Avison D., 2006, Information Systems Development-Methodologies, Techniques & Tools
   BACHMAN CW, 1969, DATABASE Q NEWSLETTE, V1
   Baldwin C. Y., 2000, Design Rules: The Power of Modularity, V1
   Bar M, 2006, PSYCHOL SCI, V17, P645, DOI 10.1111/j.1467-9280.2006.01759.x
   Barker R., 1990, CASE METHOD ENTITY R
   BATRA D, 1990, COMMUN ACM, V33, P126, DOI 10.1145/75577.75579
   Bertin J., 1983, SEMIOLOGY GRAPHICS D
   BIEDERMAN I, 1987, PSYCHOL REV, V94, P115, DOI 10.1037/0033-295X.94.2.115
   BLACKWELL AF, 2009, COGNITIVE DIMENSIONS
   BLACKWELL AF, 2003, HCI MODELS THEORIES, P328
   Blankenship J, 2000, J EXP EDUC, V68, P293, DOI 10.1080/00220970009600640
   Bodart F, 2001, INFORM SYST RES, V12, P384, DOI 10.1287/isre.12.4.384.9702
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   Britton C, 1999, HUM-COMPUT INTERACT, V14, P191, DOI 10.1207/s15327051hci1401&2_6
   CARD SK, 1997, P 1997 IEEE S INF VI
   Checkland P.Scholes., 1990, SOFT SYSTEMS METHODO
   Cheng PC, 2001, ARTIF INTELL REV, V15, P79, DOI 10.1023/A:1006641024593
   CHENG PCH, 2007, LEARNING SOLVE COMPL, P97
   CHENG PCH, 2004, P INT C THEOR APPL D
   CITRIN W, 1996, ACM COMPUTING SURVEY, V24
   Costagliola G, 2002, J VISUAL LANG COMPUT, V13, P573, DOI 10.1006/S1045-926X(02)00025-3
   Costagliola G, 2004, ACM T SOFTW ENG METH, V13, P431, DOI 10.1145/1040291.1040293
   Dagit J, 2006, J VISUAL LANG COMPUT, V17, P302, DOI 10.1016/j.jvlc.2006.04.006
   Davies I, 2006, DATA KNOWL ENG, V58, P358, DOI 10.1016/j.datak.2005.07.007
   DeMarco T., 1978, STRUCTURED ANAL SYST
   DIJKSTRA EW, 1972, COMMUN ACM, V15, P859, DOI 10.1145/355604.361591
   DING C, 1990, IEEE T SOFTWARE ENG, V16, P543, DOI 10.1109/32.52777
   Flood R.L., 1993, DEALING COMPLEXITY I
   Gane Chris., 1979, STRUCTURED SYSTEMS A
   Ganek AG, 2003, IBM SYST J, V42, P5, DOI 10.1147/sj.421.0005
   Gehlert A, 2007, ADV ENG INFORM, V21, P119, DOI 10.1016/j.aei.2006.11.004
   Glass RL, 2004, COMMUN ACM, V47, P89, DOI 10.1145/990680.990686
   GOLDSTEIN HH, 1947, PLANNING CODING PROB
   GOLDSTEIN RC, 1990, ENTITY RELATIONSHIP
   Goodman Nelson., 1968, Languages of Art: An Approach to a Theory of Symbols
   Goolkasian P, 2000, J GEN PSYCHOL, V127, P439, DOI 10.1080/00221300009598596
   Goonetilleke RS, 2001, INT J HUM-COMPUT ST, V55, P741, DOI 10.1006/ijhc.2001.0501
   Green D. M., 1966, SIGNAL DETECTION THE
   Green P, 2000, INFORM SYST, V25, P73, DOI 10.1016/S0306-4379(00)00010-7
   Green TRG, 2006, J VISUAL LANG COMPUT, V17, P328, DOI 10.1016/j.jvlc.2006.04.004
   Green T. R. G., 1989, People and Computers V. Proceedings of the Fifth Conference of the British Computer Society Human-Computer Interaction Specialist Group, P443
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Gregor S, 2007, J ASSOC INF SYST, V8, P312, DOI 10.17705/1jais.00129
   Gregor S, 2006, MIS QUART, V30, P611
   Gurr CA, 1999, J VISUAL LANG COMPUT, V10, P317, DOI 10.1006/jvlc.1999.0130
   Hahn J., 1999, ACM Transactions on Computer-Human Interaction, V6, P181, DOI 10.1145/329693.329694
   HALPIN TA, 2005, ORM201 NEUM U
   HAREL D, 1988, COMMUN ACM, V31, P514, DOI 10.1145/42411.42414
   Harel D, 2004, COMPUTER, V37, P64, DOI 10.1109/MC.2004.172
   HITCHMAN S, 1995, EUR J INFORM SYST, V4, P31, DOI 10.1057/ejis.1995.4
   HITCHMAN S, 2004, J CONCEPTUAL MODELLI, V31
   HITCHMAN S, 2002, COMM AIS, V9
   Horn Laurence R., 1984, Meaning, Form, and Use in Context: Linguistic Applications, P11, DOI DOI 10.1007/BF00631074
   International Organization for Standardization, 1985, ISO 5807-1985
   Irani P., 2003, ACM Transactions on Computer-Human Interaction, V10, P1, DOI 10.1145/606658.606659
   Irani P, 2001, IEEE COMPUT GRAPH, V21, P76, DOI 10.1109/38.946634
   Kalyuga S, 2003, EDUC PSYCHOL-US, V38, P23, DOI 10.1207/S15326985EP3801_4
   Kim J, 2000, INFORM SYST RES, V11, P284, DOI 10.1287/isre.11.3.284.12206
   KIMBALL R, 1995, DBMS MAGAZINE
   KOEDINGER KR, 1990, COGNITIVE SCI, V14, P511, DOI 10.1207/s15516709cog1404_2
   Kosslyn S.M., 2006, GRAPH DESIGN EYE MIN, DOI 10.1093/acprof:oso/9780195311846.001.0001
   Kosslyn S.M., 1985, J AM STAT ASSOC, V80, P499
   KOSSLYN SM, 1989, APPL COGNITIVE PSYCH, V3, P185, DOI 10.1002/acp.2350030302
   Lamping J, 1996, J VISUAL LANG COMPUT, V7, P33, DOI 10.1006/jvlc.1996.0003
   Lankhorst M., 2005, ENTERPRISE ARCHITECT
   LARKIN JH, 1987, COGNITIVE SCI, V11, P65, DOI 10.1016/S0364-0213(87)80026-5
   Lee JT, 1997, IEEE EXPERT, V12, P78, DOI 10.1109/64.592267
   LEMON AV, 2000, P 1 INT C THEOR APPL
   Lidwell W., 2003, Universal principles of design
   Lohse G. L., 1993, Human-Computer Interaction, V8, P353, DOI 10.1207/s15327051hci0804_3
   LOHSE GL, 1995, INFORM MANAGE, V29, P79, DOI 10.1016/0378-7206(95)00024-Q
   Lohse GL, 1997, BEHAV INFORM TECHNOL, V16, P297, DOI 10.1080/014492997119707
   Lynch K., 1960, IMAGE CITY
   LYNCH M, 1988, HUM STUD, V11, P201
   MACKINLAY J, 1986, ACM T GRAPHIC, V5, P110, DOI 10.1145/22949.22950
   Marr D., 1982, Vision. A computational investigation into the human representation and processing of visual information
   Masri K, 2008, J DATABASE MANAGE, V19, P22, DOI 10.4018/jdm.2008070102
   Mayer RE, 2003, WEB-BASED LEARNING: WHAT DO WE KNOW? WHERE DO WE GO?, P23
   MCCLOSKEY M, 1983, SCI AM, V248, P122, DOI 10.1038/scientificamerican0483-122
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   MOODY DL, 2007, REV ARCHIMATE ROAD I
   MOODY DL, 2008, P 1 INT C SOFTW LANG
   MOODY DL, 2006, P 15 INT C INF SYST
   MOODY DL, 2009, P IEEE S VIS LANG HU
   MOODY DL, 2009, P 17 IEEE INT C REQ
   MOODY DL, 2007, REV ORES METHODOLOGY
   MOODY DL, 2002, P 10 EUR C INF SYST
   MORRIS SJ, 2006, P INT C THEOR APPL D
   Newell A., 1972, HUMAN PROBLEM SOLVIN, V104
   Niemelä M, 2000, HUM FACTORS, V42, P630, DOI 10.1518/001872000779697999
   Nordbotten JC, 1999, INFORM SYST J, V9, P139, DOI 10.1046/j.1365-2575.1999.00052.x
   Norman D., 1988, PSYCHOL EVERYDAY THI
   NOVICK LP, 2006, DIAGRAMMATIC REPRESE
   Oberlander J., 1996, INFORM DESIGN J, V8, P163
   *OMG, 2005, UN MOD LANG VERS 2 0
   Opdahl A. L., 2002, Software and Systems Modeling, V1, P43
   Paivio A., 1986, Mental representations: A dual coding approach
   PALMER S, 1994, PSYCHON B REV, V1, P29, DOI 10.3758/BF03200760
   PATRIGNANI M, 2003, THESIS U STUDI ROMA
   Peirce Charles Sanders, 1998, The Essential Peirce: Selected Philosophical Writings, V2, P4
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Pinker S., 1990, Artif. Intell. Future Testing, P73
   Popper K. R., 1963, Conjectures Refutations, V1, P33
   Purchase H. C., 2002, Empirical Software Engineering, V7, P233, DOI 10.1023/A:1016344215610
   Purchase HC, 2004, INT J HUM-COMPUT ST, V61, P187, DOI 10.1016/j.ijhcs.2004.01.003
   Quinlan PT, 2003, PSYCHOL BULL, V129, P643, DOI 10.1037/0033-2909.129.5.643
   Renkl A, 2003, EDUC PSYCHOL-US, V38, P15, DOI 10.1207/S15326985EP3801_3
   Rescher N., 1977, Methodological Pragmatism
   Robinson A., 1995, Elements of Cartography, V6th
   ROSS RG, 1996, BUSINESS RULE BOOK
   Rossion B, 2004, PERCEPTION, V33, P217, DOI 10.1068/p5117
   Scaife M, 1996, INT J HUM-COMPUT ST, V45, P185, DOI 10.1006/ijhc.1996.0048
   Scheer A.-W., 2000, ARIS BUSINESS PROCES
   Shaft TM, 2006, MIS QUART, V30, P29
   Shanks G, 2003, COMMUN ACM, V46, P85, DOI 10.1145/944217.944244
   SHANKS GG, 1998, INFORM MANAGE, V35, P19
   Shanks G, 2008, MIS QUART, V32, P553
   Shannon C. E., 1963, The mathematical theory of communication
   Shoval P, 1997, DATA KNOWL ENG, V21, P297, DOI 10.1016/S0169-023X(97)88935-5
   Siau K, 2004, J DATABASE MANAGE, V15, pI
   Siau K., 2001, Journal of Database Management, V12, P26, DOI 10.4018/jdm.2001010103
   Simon H.A., 1996, The Sciences of the Artificial, V3rd ed
   SPENCE I, 1990, J EXP PSYCHOL HUMAN, V16, P683, DOI 10.1037/0096-1523.16.4.683
   Sweller J., 1994, Learning and instruction, P295, DOI DOI 10.1016/0959-4752(94)90003-5
   TREISMAN A, 1991, J EXP PSYCHOL HUMAN, V17, P652, DOI 10.1037/0096-1523.17.3.652
   TREISMAN A, 1982, J EXP PSYCHOL HUMAN, V8, P194, DOI 10.1037/0096-1523.8.2.194
   TREISMAN AM, 1980, COGNITIVE PSYCHOL, V12, P97, DOI 10.1016/0010-0285(80)90005-5
   Tufte ER, 1997, Beautiful Evidence
   Tufte ER, 1990, Envisioning Information
   Turetken O, 2004, COMMUN ACM, V47, P72, DOI 10.1145/1015864.1015866
   VESSEY I, 1991, DECISION SCI, V22, P219, DOI 10.1111/j.1540-5915.1991.tb00344.x
   Vessey I, 1991, INFORM SYST RES, V2, P63, DOI 10.1287/isre.2.1.63
   WAND Y, 1990, IEEE T SOFTWARE ENG, V16, P1282, DOI 10.1109/32.60316
   WATTSPEROTTI J, 1999, INT J HUMAN COMPUTER, V11, P169
   Weber R, 1996, INFORM SYST RES, V7, P137, DOI 10.1287/isre.7.2.137
   WEBER RA, 1997, COOPERS LYBRAND ACCO, V4, P212
   WEIGMANN DA, 1992, CONTEMP EDUC PSYCHOL, V17, P136
   Wertheimer M., 1938, SOURCE BOOK GESTALT, DOI [10.1037/11496-0053, DOI 10.1037/11496-0053, DOI 10.1037/11496-005]
   Wheildon C, 2005, TYPE LAYOUT ARE YOU
   White A., 2002, The elements of graphic design: Space, unity, page architecture, and type
   Winn W., 1990, IEEE Transactions on Professional Communications, V33, P103, DOI 10.1109/47.59083
   WINN W, 1993, CONTEMP EDUC PSYCHOL, V18, P162, DOI 10.1006/ceps.1993.1016
   YU E, 1997, P 3 IEEE INT C REQ E
   ZHANG JJ, 1994, COGNITIVE SCI, V18, P87, DOI 10.1207/s15516709cog1801_3
   Zhang XF, 1997, APPL MATH MODEL, V21, P2, DOI 10.1016/S0307-904X(96)00107-2
NR 152
TC 665
Z9 697
U1 2
U2 48
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2009
VL 35
IS 6
BP 756
EP 779
DI 10.1109/TSE.2009.67
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 524VP
UT WOS:000272172800003
DA 2024-07-18
ER

PT J
AU Shen, WW
   Wang, K
   Egyed, A
AF Shen, Wuwei
   Wang, Kun
   Egyed, Alexander
TI An Efficient and Scalable Approach to Correct Class Model Refinement
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 23rd IEEE International Conference on Software Maintenance
CY OCT 02-05, 2007
CL Paris, FRANCE
SP IEEE, IEEE Comp Soc, IEEE France Sect, TCSE, IEEE Comp Soc, Tech Council Software Engn, Reeng Forum, Univ Waterloo, Univ Studi Sannio
DE Class models; consistency checking; refinement; separation of concerns;
   UML
ID DESIGN; MANAGEMENT
AB Today, programmers benefit immensely from Integrated Development Environments (IDEs), where errors are highlighted within seconds of their introduction. Yet, designers rarely benefit from such an instant feedback in modeling tools. This paper focuses on the refinement of UML-style class models with instant feedback on correctness. Following the Model-Driven Architecture (MDA) paradigm, we strongly believe in the benefit of maintaining high-level and low-level models separately to 1) document the lower level model and 2) continuously ensure the correctness of the low-level model during later evolution (i.e., high-or low-level models may be evolved independently). However, currently the refinement and subsequent evolution lack automated support, let alone an instant feedback on their correctness (i.e., consistency). Traditional approaches to consistency checking fail here because of the computational cost of comparing class models. Our proposed instant approach first transforms the low-level model into an intermediate model that is then easier comparable with the high-level model. The key to computational scalability is the separation of transformation and comparison so that each can react optimally to changes-changes that could happen concurrently in both the high-and low-level class models. We evaluate our approach on eight third-party design models. The empirical data show that the separation of transformation and comparison results in a 6 to 11-fold performance gain and a ninefold reduction in producing irrelevant feedback. While this work emphasizes the refinement of class models, we do believe that the concepts are more generally applicable to other kinds of modeling languages, where transformation and subsequent comparison are computationally expensive.
C1 [Shen, Wuwei] Western Michigan Univ, Dept Comp Sci, Kalamazoo, MI 49008 USA.
   [Wang, Kun] Siemens PLM Software, Ann Arbor, MI 48105 USA.
   [Egyed, Alexander] Johannes Kepler Univ Linz, Inst Syst Engn & Automat SEA, A-4040 Linz, Austria.
C3 Western Michigan University; Siemens AG; Johannes Kepler University Linz
RP Shen, WW (corresponding author), Western Michigan Univ, Dept Comp Sci, Kalamazoo, MI 49008 USA.
EM wuwei.shen@wmich.edu; wangkun@siemens.com; alexander.egyed@jku.at
RI Egyed, Alexander/E-2632-2017
OI Egyed, Alexander/0000-0003-3128-5427
CR ABIANTOUN M, 1999, P 2 INT C UN MOD LAN
   Abrial J-R., 1996, The B Book
   [Anonymous], 1997, Object-oriented software construction
   [Anonymous], P WORKSH GRAPH TRANS
   Badder F, 2003, DESCRIPTION LOGIC HD
   BALZER R, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P158, DOI 10.1109/ICSE.1991.130638
   Berenbach B, 2004, PROC INT CONF SOFTW, P232, DOI 10.1109/ICSE.2004.1317445
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   BOURDEAU RH, 1995, IEEE T SOFTWARE ENG, V21, P799, DOI 10.1109/32.469459
   Easterbrook S, 1996, SOFTWARE ENG J, V11, P31, DOI 10.1049/sej.1996.0004
   Egyed A, 2002, ACM T SOFTW ENG METH, V11, P449, DOI 10.1145/606612.606616
   EGYED A, 1999, P 32 HAW INT C SYST
   EGYED A, 2003, P 6 INT C UN MOD LAN, P121
   EGYED A, 2006, P 28 INT C SOFTW ENG, P381, DOI DOI 10.1145/1134285.1134339
   EGYED A, 2005, P 8 INT C FUND APPR, P310
   EGYED A, 2004, P 7 INT C FUND APPR, P37
   Egyed A, 2007, PROC INT CONF SOFTW, P292
   Engels G., 2001, The Unified Modeling Language; Modeling Languages, Concepts, and Tools, P272, DOI DOI 10.1007/3-540-45441-1_21
   FICKAS S, 1997, P INT C SOFTW ENG WO
   FINKELSTEIN ACW, 1994, IEEE T SOFTWARE ENG, V20, P569, DOI 10.1109/32.310667
   *FSE LTD, 1997, FAIL DIV REF FDR2 US
   Gamma Erich., 1994, DESIGN PATTERNS
   Grundy J, 1998, IEEE T SOFTWARE ENG, V24, P960, DOI 10.1109/32.730545
   Hoare CAR., 1985, Communicating Sequential Processes
   Johann S, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P362, DOI 10.1109/ASE.2004.1342765
   LIEBERHERR KJ, 1994, J FORMAL ASPECTS COM, V6, P391
   Macionis J.J., 2007, SOCIOLOGY
   MORICONI M, 1995, IEEE T SOFTWARE ENG, V21, P356, DOI 10.1109/32.385972
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   Nentwich C, 2003, PROC INT CONF SOFTW, P455, DOI 10.1109/ICSE.2003.1201223
   Nentwich C., 2002, ACM T INTERNET TECHN, V2, P151, DOI [10.1145/514183.514186, DOI 10.1145/514183.514186]
   OMG, 1999, UN MOD LANG SPEC VER
   PFLEEGER SL, 1990, IEEE T SOFTWARE ENG, V16, P320
   Rasch H, 2003, LECT NOTES COMPUT SC, V2884, P229
   ROBBINS JE, 1999, P COSET 99 LOS ANG M, P61
   Shen WW, 2005, IEEE INT C ENG COMP, P421
   Spivey J. M., 1989, The Z Notation: A Reference Manual
   Treharne H., 1999, IFM'99. Proceedings of the 1st International Conference on Integrated Formal Methods, P437
   VANDERSTRAETEN R, 2003, P 6 INT C UN MOD LAN
   WAGNER R, 2003, P WORKSH CONS PROBL, V2
   Whittle J., 2002, P 5 INT C UN MOD LAN, P227
   Yao SZ, 2006, CIC 2006: 15TH INTERNATIONAL CONFERENCE ON COMPUTING, PROCEEDINGS, P289
   Yeung WL, 2004, J UNIVERS COMPUT SCI, V10, P1540
NR 43
TC 7
Z9 8
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2009
VL 35
IS 4
BP 515
EP 533
DI 10.1109/TSE.2009.26
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 474TB
UT WOS:000268305800007
DA 2024-07-18
ER

PT J
AU Lessmann, S
   Baesens, B
   Mues, C
   Pietsch, S
AF Lessmann, Stefan
   Baesens, Bart
   Mues, Christophe
   Pietsch, Swantje
TI Benchmarking classification models for software defect prediction: A
   proposed framework and novel findings
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE complexity measures; data mining; formal methods; statistical methods;
   software defect prediction
ID STATIC CODE ATTRIBUTES; QUANTITATIVE-ANALYSIS; QUALITY; CLASSIFIERS;
   RELIABILITY; ANALOGY; FAULTS
AB Software defect prediction strives to improve software quality and testing efficiency by constructing predictive classification models from code attributes to enable a timely identification of fault-prone modules. Several classification models have been evaluated for this task. However, due to inconsistent findings regarding the superiority of one classifier over another and the usefulness of metric-based classification in general, more research is needed to improve convergence across studies and further advance confidence in experimental results. We consider three potential sources for bias: comparing classifiers over one or a small number of proprietary data sets, relying on accuracy indicators that are conceptually inappropriate for software defect prediction and cross-study comparisons, and, finally, limited use of statistical testing procedures to secure empirical findings. To remedy these problems, a framework for comparative software defect prediction experiments is proposed and applied in a large-scale empirical comparison of 22 classifiers over 10 public domain data sets from the NASA Metrics Data repository. Overall, an appealing degree of predictive accuracy is observed, which supports the view that metric-based classification is useful. However, our results indicate that the importance of the particular classification algorithm may be less than previously assumed since no significant performance differences could be detected among the top 17 classifiers.
C1 [Lessmann, Stefan; Pietsch, Swantje] Univ Hamburg, Inst Informat Syst, D-20146 Hamburg, Germany.
   [Baesens, Bart] Katholieke Univ Leuven, Dept Appl Econ Sci, B-3000 Louvain, Belgium.
   [Mues, Christophe] Univ Southampton, Sch Management, Southampton SO17 1BJ, Hants, England.
C3 University of Hamburg; KU Leuven; University of Southampton
RP Lessmann, S (corresponding author), Univ Hamburg, Inst Informat Syst, Von Melle Pk 5, D-20146 Hamburg, Germany.
EM lessmann@econ.uni-hamburg.de; Bart.Baesens@econ.kuleuven.ac.be;
   c.mues@soton.ac.uk; mailing@swantje-pietsch.de
RI Mues, Christophe/HLH-7473-2023; Lessmann, Stefan/AEG-7736-2022;
   Lessmann, Stefan/J-2931-2013
OI Mues, Christophe/0000-0002-6289-5490; Lessmann,
   Stefan/0000-0001-7685-262X; 
CR Andersson C, 2007, IEEE T SOFTWARE ENG, V33, P273, DOI 10.1109/TSE.2007.1005
   Andersson C, 2007, EMPIR SOFTW ENG, V12, P161, DOI 10.1007/s10664-006-9018-0
   [Anonymous], 2006, ACM SIGKDD INT C KNO, DOI DOI 10.1145/1150402.1150531
   [Anonymous], 2002, The Elements of Statistical Learning: Data Mining, Inference and Prediction
   [Anonymous], 1995, P 12 INT C MACHINE L
   [Anonymous], 1999, P 16 INT C MACH LEAR
   [Anonymous], P 15 INT S SOFTW REL
   Baesens B, 2003, J OPER RES SOC, V54, P627, DOI 10.1057/palgrave.jors.2601545
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bishop C. M., 1995, NEURAL NETWORKS PATT
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   BRIAND LC, 1993, IEEE T SOFTWARE ENG, V19, P1028, DOI 10.1109/32.256851
   CHAPMAN M, 2004, NASA 4 5 FACILITY
   Cleary JG, 1995, P 12 INT C MACH LEAR
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Duda R. O., 2001, PATTERN CLASSIFICATI
   El Emam K, 2001, J SYST SOFTWARE, V55, P301, DOI 10.1016/S0164-1212(00)00079-0
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Fayyad U, 1996, AI MAG, V17, P37
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Freund Y, 1999, MACH LEARN, V37, P277, DOI 10.1023/A:1007662407062
   Ganesan K, 2000, INT J SOFTW ENG KNOW, V10, P139, DOI 10.1142/S0218194000000092
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Khoshgoftaar T., 1999, International Journal of Reliability, Quality and Safety Engineering, V6, P303
   Khoshgoftaar T. M., 1995, Annals of Software Engineering, V1, P141, DOI 10.1007/BF02249049
   Khoshgoftaar TM, 2006, SOFTWARE QUAL J, V14, P85, DOI 10.1007/s11219-006-7597-z
   Khoshgoftaar TM, 2004, EMPIR SOFTW ENG, V9, P229, DOI 10.1023/B:EMSE.0000027781.18360.9b
   Khoshgoftaar TM, 2003, EMPIR SOFTW ENG, V8, P325, DOI 10.1023/A:1025316301168
   Khoshgoftaar TM, 2000, IEEE T RELIAB, V49, P4, DOI 10.1109/24.855532
   Khoshgoftaar TM, 1997, IEEE T NEURAL NETWOR, V8, P902, DOI 10.1109/72.595888
   Koru A.G., 2005, P WORKSH PRED MOD SO, P1
   Landwehr N, 2005, MACH LEARN, V59, P161, DOI 10.1007/s10994-005-0466-3
   Lanubile F, 1997, J SYST SOFTWARE, V38, P225, DOI 10.1016/S0164-1212(96)00153-7
   Li JZ, 2007, EMPIR SOFTW ENG, V12, P65, DOI 10.1007/s10664-006-7552-4
   MACKAY DJC, 1992, NEURAL COMPUT, V4, P720, DOI 10.1162/neco.1992.4.5.720
   Mangasaian OL, 2001, J MACH LEARN RES, V1, P161, DOI 10.1162/15324430152748218
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Menzies T., 2004, P WORKSH PRED SOFTW, P1
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mingers J., 1989, Machine Learning, V4, P227, DOI 10.1023/A:1022604100933
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   OHLSSON MC, 2002, P 8 INT SOFTW METR S
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Ohlsson N., 1997, Empirical Software Engineering, V2, P166, DOI 10.1023/A:1009757419320
   Porter A. A., 1990, Journal of Systems and Software, V12, P209, DOI 10.1016/0164-1212(90)90041-J
   Provost F, 2001, MACH LEARN, V42, P203, DOI 10.1023/A:1007601015854
   ROBERT JB, 1981, PSYCHOMETRIKA, V46, P241
   Sayyad Shirabad J., 2005, The PROMISE Repository of Software Engineering Databases
   SCHNEIDEWIND NF, 1992, IEEE T SOFTWARE ENG, V18, P410, DOI 10.1109/32.135774
   SELBY RW, 1988, IEEE T SOFTWARE ENG, V14, P1743, DOI 10.1109/32.9061
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Suykens JAK, 1999, NEURAL PROCESS LETT, V9, P293, DOI 10.1023/A:1018628609742
   Tipping ME, 2000, ADV NEUR IN, V12, P652
   van Gestel T, 2004, MACH LEARN, V54, P5, DOI 10.1023/B:MACH.0000008082.80494.e0
   Vandecruys O, 2008, J SYST SOFTWARE, V81, P823, DOI 10.1016/j.jss.2007.07.034
   Zar J.H, 2010, Biostatistical Analysis
   Zhang HY, 2007, IEEE T SOFTWARE ENG, V33, P635, DOI 10.1109/TSE.2007.70706
   Zhong S, 2004, IEEE INTELL SYST, V19, P20, DOI 10.1109/MIS.2004.1274907
NR 67
TC 728
Z9 806
U1 4
U2 99
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2008
VL 34
IS 4
BP 485
EP 496
DI 10.1109/TSE.2008.35
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 330JI
UT WOS:000257936500005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Schäfer, T
   Eichberg, M
   Haupt, M
   Mezini, M
AF Schaefer, Thorsten
   Eichberg, Michael
   Haupt, Michael
   Mezini, Mira
TI The SEXTANT software exploration tool
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 21st International Conference on Software Maintenance (ICSM 2005)
CY SEP 26-29, 2005
CL Budapest, HUNGARY
SP IEEE
DE software exploration; program comprehension; reverse engineering;
   software maintenance; software visualization
ID PROGRAM COMPREHENSION; DESIGN; MAINTENANCE
AB In this paper, we discuss a set of functional requirements for software exploration tools and provide initial evidence that various combinations of these features are needed to effectively assist developers in understanding software. We observe that current tools for software exploration only partly support these features. This has motivated the development of SEXTANT, a software exploration tool tightly integrated into the Eclipse IDE that has been developed to fill this gap. By means of case studies, we demonstrate how the requirements fulfilled by SEXTANT are conducive to an understanding needed to perform a maintenance task.
C1 Tech Univ Darmstadt, Software Technol Grp, D-64289 Darmstadt, Germany.
C3 Technical University of Darmstadt
RP Schäfer, T (corresponding author), Tech Univ Darmstadt, Software Technol Grp, Hochschultsr 10, D-64289 Darmstadt, Germany.
EM schaefer@informatik.tu-darmstadt.de;
   eichberg@informatik.tu-darmstadt.de; haupt@informatik.tu-darmstadt.de;
   mezini@informatik.tu-darmstadt.de
CR [Anonymous], P WORKSH EMP STUD PR
   [Anonymous], IBM SYSTEMS J
   [Anonymous], 1980, Winthrop computer systems series
   Bassil S, 2001, PROG COMPREHEN, P7, DOI 10.1109/WPC.2001.921708
   BOAG S, 2005, XQUERY 1 0 XML QUERY
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   CARD SK, 1999, READINGS INFORMATION
   Chen YFR, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P66, DOI 10.1109/ICSM.1995.526528
   Corritore CL, 2001, INT J HUM-COMPUT ST, V54, P1, DOI 10.1006/ijhc.2000.0423
   Dunsmore A, 2000, J SYST SOFTWARE, V52, P121, DOI 10.1016/S0164-1212(99)00138-7
   Eichberg M, 2005, PROC IEEE INT CONF S, P315
   Eichberg M, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P182, DOI 10.1109/WCRE.2004.45
   Eichberg M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P111
   Favre JM, 2002, SIXTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P251, DOI 10.1109/CSMR.2002.995812
   Favre JM, 2001, PROG COMPREHEN, P233, DOI 10.1109/WPC.2001.921734
   GILMORE DJ, 1984, INT J MAN MACH STUD, V21, P31, DOI 10.1016/S0020-7373(84)80037-1
   HARRISON W, 2004, RC23344 IBM RES
   Haupt M., 2005, VEE '05, P142, DOI DOI 10.1145/1064979.1065000
   JANZEN D, 2004, P EUR C OBJ OR PROGR, P195
   Janzen D., 2003, Proceedings of the 2nd Annual Conference on Aspect-Oriented Software Development (AOSD), P178, DOI 10.1145/643603.643622
   Kazman R, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P290, DOI 10.1109/ICSR.1998.685754
   Ko AJ, 2005, PROC INT CONF SOFTW, P126
   Kullbach B, 1999, PROCEEDINGS OF THE THIRD EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P42, DOI 10.1109/CSMR.1999.756681
   Lanza M, 2003, IEEE T SOFTWARE ENG, V29, P782, DOI 10.1109/TSE.2003.1232284
   Lanza M, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P409, DOI 10.1109/CSMR.2003.1192450
   Lintem R., 2003, SoftVis'03: Proceedings of the 2003 ACM symposium on Software visualization, DOI DOI 10.1145/774833.774840
   MALETIC JI, 2002, P INT WORKSH PROGR C
   Mamas E, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P172, DOI 10.1109/WCRE.2000.891464
   McArthur G, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P199, DOI 10.1109/WCRE.2002.1173078
   Mendelzon A, 1995, SOFTWARE-CONC TOOL, V16, P170
   Mosemann R, 2001, PROG COMPREHEN, P79, DOI 10.1109/WPC.2001.921716
   Muller H. A., 1993, Proceedings CASCON '93, P217
   Murphy GC, 2005, LECT NOTES COMPUT SC, V3586, P33
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   Petre M, 1999, INT J HUM-COMPUT ST, V51, P7, DOI 10.1006/ijhc.1999.0267
   Price B. A., 1993, Journal of Visual Languages and Computing, V4, P211, DOI 10.1006/jvlc.1993.1015
   Robillard MP, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P406, DOI 10.1109/ICSE.2002.1007986
   Robitaille S, 2000, PROC IEEE INT CONF S, P22, DOI 10.1109/ICSM.2000.882972
   Schäfer T, 2005, 3RD IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEEDINGS, P64
   SCHAFER T, 2005, P LINK ASP TECHN EV
   Sillito J, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P23, DOI 10.1109/ISESE.2005.1541811
   SIM SE, 1999, P INT C SOFTW MAINT, P381, DOI DOI 10.1109/ICSM.1999.792636
   Singer Janice., 1997, P 1997 C CTR ADV STU, P209
   SOLOWAY E, 1988, COMMUN ACM, V31, P1259, DOI 10.1145/50087.50088
   Stasko J, 1998, SOFTWARE VISUALIZATION, P419
   Storey MAD, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P275, DOI 10.1109/ICSM.1995.526549
   Storey MAD, 1997, IEEE SYMPOSIUM ON INFORMATION VISUALIZATION, PROCEEDINGS, P38, DOI 10.1109/INFVIS.1997.636784
   Storey MAD, 1999, J SYST SOFTWARE, V44, P171, DOI 10.1016/S0164-1212(98)10055-9
   Storey MAD, 2000, SCI COMPUT PROGRAM, V36, P183, DOI 10.1016/S0167-6423(99)00036-2
   TILLEY SR, 1994, INT J SOFTW ENG KNOW, V4, P501, DOI 10.1142/S0218194094000246
   van Gurp J, 2002, J SYST SOFTWARE, V61, P105, DOI 10.1016/S0164-1212(01)00152-2
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   vonMayrhauser A, 1997, P INT COMP SOFTW APP, P630, DOI 10.1109/CMPSAC.1997.625084
   Zayour Iyad, 2000, P 2000 C CTR ADV STU, P16
   [No title captured]
   [No title captured]
   2005, MOF 2 0 XMI MAPPING
NR 57
TC 13
Z9 17
U1 2
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2006
VL 32
IS 9
BP 753
EP 768
DI 10.1109/TSE.2006.94
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 087WU
UT WOS:000240774300009
DA 2024-07-18
ER

PT J
AU Chari, K
   Hevner, A
AF Chari, Kaushal
   Hevner, Alan
TI System test planning of software: An optimization approach
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE nonlinear programming; reliability; test management
ID RELIABILITY ALLOCATION; MODULAR SOFTWARE; DELIVERY TIME; RELEASE TIME;
   MODELS; COST; GENERATION
AB This paper extends an exponential reliability growth model to determine the optimal number of test cases to be executed for various use case scenarios during the system testing of software. An example demonstrates a practical application of the optimization model for system test planning.
C1 Univ S Florida, Dept Informat Syst & Decis Sci, Tampa, FL 33620 USA.
C3 State University System of Florida; University of South Florida
RP Chari, K (corresponding author), Univ S Florida, Dept Informat Syst & Decis Sci, 4202 E Fowler Ave,CIS 1040, Tampa, FL 33620 USA.
EM kchari@coba.usf.edu; ahevner@coba.usf.edu
CR BERTOLINO A, 1994, IEEE T SOFTWARE ENG, V20, P885, DOI 10.1109/32.368137
   CHARI K, 2003, P 8 INFORMS C INF SY
   CHARI K, 2000, P WORKSH INF TECHN S
   Chávez T, 2000, IEEE T SOFTWARE ENG, V26, P907, DOI 10.1109/32.877849
   Clarke L. A., 1976, IEEE Transactions on Software Engineering, VSE-2, P215, DOI 10.1109/TSE.1976.233817
   DALAL SR, 1994, IEEE T SOFTWARE ENG, V20, P318, DOI 10.1109/32.277579
   FORGACS I, 1997, P 6 EUR SOFTW ENG C, P378
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   GOEL AL, 1985, IEEE T SOFTWARE ENG, V11, P1411, DOI 10.1109/TSE.1985.232177
   Gokhale SS, 1998, 1998 IEEE WORKSHOP ON APPLICATION-SPECIFIC SOFTWARE ENGINEERING AND TECHNOLOGY (ASSET 98) - PROCEEDINGS, P86, DOI 10.1109/ASSET.1998.688239
   HARTMANN J, 2000, P INT S SOFTW TEST A, P60
   Helander ME, 1998, IEEE T SOFTWARE ENG, V24, P420, DOI 10.1109/32.689400
   Hou RH, 1996, IEEE T RELIAB, V45, P541, DOI 10.1109/24.556577
   Hou RH, 1997, IEEE T COMPUT, V46, P216, DOI 10.1109/12.565602
   HOWDEN WE, 1977, IEEE T SOFTWARE ENG, V3, P266, DOI 10.1109/TSE.1977.231144
   JORGENSEN PC, 1994, COMMUN ACM, V37, P30, DOI 10.1145/182987.182989
   KOCH HS, 1983, IEEE T SOFTWARE ENG, V9, P323, DOI 10.1109/TSE.1983.236868
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   KUBAT P, 1989, OPER RES LETT, V8, P35, DOI 10.1016/0167-6377(89)90031-X
   Leung YW, 1996, IEICE T INF SYST, VE79D, P1655
   LEUNG YW, 1992, J SYST SOFTWARE, V17, P233, DOI 10.1016/0164-1212(92)90112-W
   Marré M, 2003, IEEE T SOFTWARE ENG, V29, P974, DOI 10.1109/TSE.2003.1245299
   Memon AM, 2001, IEEE T SOFTWARE ENG, V27, P144, DOI 10.1109/32.908959
   NTAFOS SC, 1979, IEEE T SOFTWARE ENG, V5, P520, DOI 10.1109/TSE.1979.234213
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   WANG HS, 1989, J SYST SOFTWARE, V10, P55, DOI 10.1016/0164-1212(89)90062-9
   YAMADA S, 1984, INT J SYST SCI, V15, P905, DOI 10.1080/00207728408926610
   YAMADA S, 1985, IEEE T SOFTWARE ENG, V11, P1431, DOI 10.1109/TSE.1985.232179
   YATES DF, 1989, ACM SIGSOFT, V14, P48, DOI 10.1145/75309.75315
   ZAHEDI F, 1991, IEEE T SOFTWARE ENG, V17, P345, DOI 10.1109/32.90434
NR 30
TC 5
Z9 8
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2006
VL 32
IS 7
BP 503
EP 509
DI 10.1109/TSE.2006.70
PG 7
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 071MF
UT WOS:000239605600005
DA 2024-07-18
ER

PT J
AU Kounev, S
AF Kounev, Samuel
TI Performance modeling and evaluation of distributed component-based
   systems using Queueing Petri Nets
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE performance modeling and prediction; software verification; performance
   evaluation; distributed systems
AB Performance models are used increasingly throughout the phases of the software engineering lifecycle of distributed component-based systems. However, as systems grow in size and complexity, building models that accurately capture the different aspects of their behavior becomes a more and more challenging task. In this paper, we present a novel case study of a realistic distributed component-based system, showing how Queueing Petri Net models can be exploited as a powerful performance prediction tool in the software engineering process. A detailed system model is built in a step-by-step fashion, validated, and then used to evaluate the system performance and scalability. Along with the case study, a practical performance modeling methodology is presented which helps to construct models that accurately reflect the system performance and scalability characteristics. Taking advantage of the modeling power and expressiveness of Queueing Petri Nets, our approach makes it possible to model the system at a higher degree of accuracy, providing a number of important benefits.
C1 TH Darmstadt, Dept Comp Sci, Cambridge CB3 0FD, England.
   Univ Cambridge, Comp Lab, Cambridge CB3 OFD, England.
C3 University of Cambridge; University of Cambridge
RP Kounev, S (corresponding author), TH Darmstadt, Dept Comp Sci, Cambridge CB3 0FD, England.
EM skounev@acm.org
CR Bause F., 1993, P 5 INT WORKSH PETR
   Bause F., 1997, P 9 ITG GI FACHT MES
   Bause F., 2002, Stochastic Petri Nets: An Introduction to the Theory
   BAUSE F, 1993, 461 U DORTM DEP COMP
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   CALZAROSSA M, 1993, P IEEE, V81, P1136, DOI 10.1109/5.236191
   JENSEN K, 1981, COLOURED PETRI NETS, P327
   Kounev S, 2006, PERFORM EVALUATION, V63, P364, DOI 10.1016/j.peva.2005.03.004
   KOUNEV S, 2005, SPECJAPPSERVER2004 N
   KOUNEV S, 2003, P 2003 IEEE INT S PE
   KOUNEV S, 2003, P 29 INT COMP MEAS G
   LOWERS J, 1989, P 1989 INT COMP MEAS, P644
   MALY P, 2000, P 11 INT C COMP PERF
   MENASCE D.A., 1998, CAPACITY PLANNING WE
   Menasce D.A., 2004, PERFORMANCE DESIGN
   Menasce D.A., 2000, SCALING E BUSINESS T
   MENASCE DA, 1999, P 1 ACM C EL COMM, P119
   Menasce DanielA., 1994, CAPACITY PLANNING PE
   Mohr J., 1982, CMG T, V36
   ROSE C, 1978, ACM COMPUTING SURVEY, V10
   Smith C., 1994, ENCY SOFTWARE ENG, P794
   SMITH CU, 2002, PERFORMANCE SOLUTION
   *SPEC, 2004, SPECJAPPSERVER204
   SU L, 2005, P 8 WORKSH COMP ARCH
   WILLIAMS L, 2002, PARALLEL DISTRIBUTED
   WILLIAMS L, 2002, P 28 COMP MEAS GROUP
   WOOD KA, 1995, CANBERRA BIRD NOTES, V20, P34
   Woodside M, 2001, PERFORM EVALUATION, V45, P107, DOI 10.1016/S0166-5316(01)00033-5
   Woodside M., 2002, Tutorial introduction to layered modeling of software performance
   XU J, 2005, P WORKSH SPEC VER CO
NR 30
TC 86
Z9 100
U1 1
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2006
VL 32
IS 7
BP 486
EP 502
DI 10.1109/TSE.2006.69
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 071MF
UT WOS:000239605600004
DA 2024-07-18
ER

PT J
AU Sharma, N
   Joshi, P
   Joshi, RK
AF Sharma, N
   Joshi, P
   Joshi, RK
TI Applicability of Weyuker's Property 9 to object oriented metrics
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software metrics; object oriented design; Weyuker's properties;
   interaction complexity
ID SOFTWARE COMPLEXITY-MEASURES
AB Weyukers Property 9 has received a mixed response regarding its applicability to object oriented software metrics. Contrary to past beliefs, the relevance of this properly to object oriented systems is brought out. In support of the new argument, counterexamples to earlier claims are formulated and two new metrics highlighting a notion of complexity that is capturable through Property 9 are also presented.
C1 Indian Inst Technol, Dept Comp Sci & Engn, Bombay 400076, Maharashtra, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Bombay
RP Indian Inst Technol, Dept Comp Sci & Engn, Bombay 400076, Maharashtra, India.
EM naveen@cse.iitb.ac.cn; padmaja@cse.iitb.ac.in; rkj@cse.iitb.ac.in
CR Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   CHERNIAVSKY JC, 1991, IEEE T SOFTWARE ENG, V17, P636, DOI 10.1109/32.87287
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Fenton NormanE., 1994, SOFTWARE METRICS RIG
   GURSARAN, 2001, IEEE T SOFTWARE ENG, V27, P361
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   Zhang L, 2002, IEEE T SOFTWARE ENG, V28, P526, DOI 10.1109/TSE.2002.1000454
NR 7
TC 15
Z9 21
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2006
VL 32
IS 3
BP 209
EP 211
DI 10.1109/TSE.2006.21
PG 3
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 033LC
UT WOS:000236848300005
DA 2024-07-18
ER

PT J
AU Yilmaz, C
   Cohen, MB
   Porter, AA
AF Yilmaz, C
   Cohen, MB
   Porter, AA
TI Covering Arrays for efficient fault characterization in complex
   configuration spaces
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software testing; distributed continuous quality assurance; fault
   characterization; covering arrays
ID DESIGN
AB Many modern software systems are designed to be highly configurable so they can run on and be optimized for a wide variety of platforms and usage scenarios. Testing such systems is difficult because, in effect, you are testing a multitude of systems, not just one. Moreover, bugs can and do appear in some configurations, but not in others. Our research focuses on a subset of these bugs that are "option-related"-those that manifest with high probability only when specific configuration options take on specific settings. Our goal is not only to detect these bugs, but also to automatically characterize the configuration subspaces (i.e., the options and their settings) in which they manifest. To improve efficiency, our process tests only a sample of the configuration space, which we obtain from mathematical objects called covering arrays. This paper compares two different kinds of covering arrays for this purpose and assesses the effect of sampling strategy on fault characterization accuracy. Our results strongly suggest that sampling via covering arrays allows us to characterize option-related failures nearly as well as if we had tested exhaustively, but at a much lower cost. We also provide guidelines for using our approach in practice.
C1 Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
   Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
C3 University System of Maryland; University of Maryland College Park;
   University of Nebraska System; University of Nebraska Lincoln
RP Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
EM cyilmaz@cs.umd.edu; myra@cse.unl.edu; aporter@cs.umd.edu
RI Yilmaz, Cemal/AAY-4500-2020
OI Yilmaz, Cemal/0000-0003-4124-2295
CR Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   BROWNLIE R, 1992, AT&T TECH J, V71, P41, DOI 10.1002/j.1538-7305.1992.tb00164.x
   Burr K., 1998, P INT C SOFTW TEST A
   Chateauneuf M, 2002, J COMB DES, V10, P217, DOI 10.1002/jcd.10002
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Cohen MB, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P413
   Dalal S. R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P285, DOI 10.1109/ICSE.1999.841019
   Dunietz IS, 1997, PROC INT CONF SOFTW, P205, DOI 10.1145/253228.253271
   Frank E., 1999, Data Mining: Practical Machine Learning Tools and Techniques with Java Implementations
   Kuhn D.R., 2002, Proceedings of 27th Annual NASA Goddard Software Engineering Workshop, 2002, P91, DOI DOI 10.1109/SEW.2002.1199454
   LIBLIT B, 2003, P ACM SIGPLAN 2003 C, P141
   MANDL R, 1985, COMMUN ACM, V28, P1054, DOI 10.1145/4372.4375
   Memon A, 2004, PROC INT CONF SOFTW, P459, DOI 10.1109/ICSE.2004.1317468
   Rijsbergen C.J.V., 1979, INFORM RETRIEVAL, V2nd ed.
   SCHMIDT D, 1998, COMPUTER COMM, V21
   Schmidt D.C., 2002, C NETWORK PROGRAMMIN, V1
   Yilmaz C, 2005, PROC INT CONF SOFTW, P293
   YILMAZ C, 2004, P INT S SOFTW TEST A, P45
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
NR 20
TC 149
Z9 176
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2006
VL 32
IS 1
BP 20
EP 34
DI 10.1109/TSE.2006.8
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 004MK
UT WOS:000234756700002
DA 2024-07-18
ER

PT J
AU Wang, F
AF Wang, F
TI Symbolic parametric safety analysis of linear hybrid systems with
   BDD-like data-structures
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE data-structures; BDD; hybrid automata; verification; model-checking
AB We introduce a new BDD-like data structure called Hybrid-Restriction Diagrams (HRDs) for the representation and manipulation of linear hybrid automata (LHA) state-spaces and present algorithms for weakest precondition calculations. This permits us to reason about the valuations of parameters that make safety properties satisfied. Advantages of our approach include the ability to represent discrete state information and concave polyhedra in a unified scheme, as well as to save both memory consumptions and manipulation times when processing the same substructures in state-space representations. Our experimental results document its efficiency in practice.
C1 Natl Taiwan Univ, Dept Elect Engn, Taipei 106, Taiwan.
C3 National Taiwan University
RP Natl Taiwan Univ, Dept Elect Engn, 1,Sec 4,Roosevelt Rd, Taipei 106, Taiwan.
EM farn@cc.ee.ntu.edu.tw
CR ALUR R, 1995, THEOR COMPUT SCI, V138, P3, DOI 10.1016/0304-3975(94)00202-T
   ALUR R, 1993, REAL-TIME SYSTEMS SYMPOSIUM: PROCEEDINGS, P2, DOI 10.1109/REAL.1993.393520
   Alur R., 1993, Proceedings of the Twenty-Fifth Annual ACM Symposium on the Theory of Computing, P592, DOI 10.1145/167088.167242
   Alur R., 1990, P 17 INT C AUT LANG, P322
   Annichini A, 2001, LECT NOTES COMPUT SC, V2102, P368
   ANNICHINI A, 2000, P INT C COMP AID VER
   [Anonymous], 1993, Hybrid Systems, DOI [DOI 10.1007/3-540-57318-6_30, DOI 10.1007/3-540, DOI 10.1007/3-540-57318-6, 10.1007/3-540-57318-6_30]
   [Anonymous], 1988, P IEEE INT C COMP AI
   [Anonymous], 1997, INT J SOFTWARE TOOLS
   Asarin E, 1997, LECT NOTES COMPUT SC, V1201, P346, DOI 10.1007/BFb0014737
   Balarin F, 1996, REAL TIM SYST SYMP P, P52, DOI 10.1109/REAL.1996.563700
   BEHRMANN G, 1999, P INT C COMP AID VER
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   BURCH JR, 1990, P IEEE S LOG COMP SC
   DILL DL, 1989, P INT C COMP AID VER
   FUJITA M, 1993, IEEE T COMPUT AID D, V12, P6, DOI 10.1109/43.184839
   Henzinger TA, 1995, IEEE REAL TIME, P56, DOI 10.1109/REAL.1995.495196
   HENZINGER TA, 1992, PROCEEDINGS OF THE SEVENTH ANNUAL IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE, P394, DOI 10.1109/LICS.1992.185551
   Minato S., 1990, DAC, Proceedings of the 27th ACM/IEEE Conference, (New York, NY, USA), P52
   MOLLER J, 1999, P ANN C EUR ASS COMP
   PETTERSSON P, 2000, B EUROPEAN ASS THEOR, V70, P40
   WANG F, 2000, P INT C TOOLS ALG CO
   WANG F, 2003, P 8 C IMPL APPL AUT
   WANG F, 2004, P 10 INT C ALG METH
   WANG F, 2003, P INT C FORM TECHN N
   WANG F, 2003, P INT C VER MOD CHEC
   WANG F, 2000, P 24 INT COMP SOFTW
   WANG F, 2001, P WORKSH REAL TIM TO
   WANG F, 1993, P 1 INT S FORM METH
   Wang Farn, 2001, P INT C FORM TECHN N
   Wong-Toi H, 1995, THESIS STANFORD U
NR 31
TC 28
Z9 33
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2005
VL 31
IS 1
BP 38
EP 51
DI 10.1109/TSE.2005.13
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 893QP
UT WOS:000226734600003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Biggerstaff, TJ
AF Biggerstaff, TJ
TI A new architecture for transformation-based generators
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE domain-specific architectures; image processing; inference engines;
   logic programming; optimization; partial evaluation; pattern matching;
   program synthesis; reusable software; search; program transformations
ID SOFTWARE
AB A challenge of many transformation-based generators is that they are trying to achieve three mutually antagonistic goals simultaneously: 1) deeply factored operators and operands to gain the combinatorial programming leverage provided by composition, 2) high-performance code in the generated program, and 3) small (i.e., practical) generation search spaces. The Anticipatory Optimization Generator (AOG) has been built to explore architectures and strategies that address this challenge. The fundamental principle underlying all of AOG's strategies is to solve separate, narrow, and specialized generation problems by strategies that are narrowly tailored to specific problems rather than a single, universal strategy aimed at all problems. A second fundamental notion is the preservation and use of domain-specific information as a way to gain extra leverage on generation problems. This paper will focus on two specific mechanisms: 1) Localization: the generation and merging of implicit control structures and 2) Tag-Directed Transformations: a new control structure for transformation-based optimization that allows differing kinds of retained domain knowledge (e.g., optimization knowledge) to be anticipated, affixed to the component parts in the reuse library, and triggered when the time is right for its use.
C1 SoftwareRegerators, Austin, TX 78730 USA.
RP SoftwareRegerators, 3801 Far View Dr, Austin, TX 78730 USA.
EM aog@softwaregenerators.com
CR [Anonymous], THESIS U CALIFORNIA
   [Anonymous], 1996, ANSI COMMON LISP
   [Anonymous], 1990, Specification and Transformation of Programs: A Formal Approach to Software Development
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   BACON DF, 1994, ACM SURVEYS, V26
   BATORY D, 1993, P S FDN SOFTWARE ENG
   BATORY D, 1994, P ACM SIGS INT S FDN, P110
   Biggerstaff TJ, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P124, DOI 10.1109/ICSR.1998.685737
   BIGGERSTAFF TJ, 1999, P AUT SOFTW ENG C
   BIGGERSTAFF TJ, 1998, MSRTR9855
   BIGGERSTAFF TJ, 2000, SOFTWARE REUSE ADV S
   BIGGERSTAFF TJ, 2002, P INT C SOFTW REUS
   BIGGERSTAFF TJ, 1994, P INT C SOFTW REUS N
   BIGGERSTAFF TJ, 1998, MSRTR9822
   BIGGERSTAFF TJ, 1998, PERSPECTIVE GENERATI
   BOYLE JM, 1989, SOFTWARE REUSABILITY, P361
   Clocksin W., 1987, PROGRAMMING PROLOG
   Cordy JR, 2002, INFORM SOFTWARE TECH, V44, P827, DOI 10.1016/S0950-5849(02)00104-0
   CREW RF, 1997, P USENIX C DOM SPEC
   Elrad T, 2001, COMMUN ACM, V44, P28
   FEATHER M, 1987, PROGRAM SPECIFICATIO
   FICKAS SF, 1985, IEEE T SOFTWARE ENG, V11, P1268, DOI 10.1109/TSE.1985.231878
   Fitzpatrick S, 1997, SCI COMPUT PROGRAM, V28, P1, DOI 10.1016/S0167-6423(96)00015-9
   Graham P., 1994, On LISP: Advanced Techniques for Common Lisp
   Guibas L., 1978, Proceedings of 5th Annal. ACM Symposium on Principles of Programming Languages, P1
   Jones N. D., 1996, ACM COMPUTING SURVEY, V28
   KANT E, 1993, IEEE SOFTWARE    MAY
   KATZ MD, 1992, P INT J SOFTW ENG KN, V2
   Keene S.E., 1989, OBJECT ORIENTED PROG
   KICZALES G, 1997, SPL9708P9710042 XER
   KOTIK GB, 1986, P W C KNOWL BAS ENG
   Malpas J., 1987, PROLOG RELATIONAL LA
   Neighbors JamesM., 1989, SOFTWARE REUSABILITY, P295
   NEIGHBORS JM, 1984, IEEE T SOFTWARE ENG, V10, P564, DOI 10.1109/TSE.1984.5010280
   Ritter G.X., 1996, HDB COMPUTER VISION
   SHEARD T, 2001, P 2 INT WORKSH SEM A
   Smith D.R., 1991, AUTOMATING SOFTWARE, P483
   SRINIVAS YV, 1997, P WORKSH ALG LANG CA, P164
   Steele Jr Guy L., 1990, COMMON LISP LANGUAGE
   Van den Brand MGJ, 2003, ACM T SOFTW ENG METH, V12, P152, DOI 10.1145/941566.941568
   Van den Brand MGJ, 2002, ACM T PROGR LANG SYS, V24, P334, DOI 10.1145/567097.567099
   Visser A, 2001, PATIENT EDUC COUNS, V44, P1, DOI 10.1016/S0738-3991(01)00111-2
   VISSER E, 1999, P INT C REWR TECHN A
   WADLER P, 1990, THEOR COMPUT SCI, V73, P231, DOI 10.1016/0304-3975(90)90147-A
   WILE DS, 1994, POPART PRODUCER PARS
   WILE DS, 1997, P WORKSH ALG LANG CA, P324
   [No title captured]
NR 47
TC 2
Z9 3
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2004
VL 30
IS 12
BP 1036
EP 1054
DI 10.1109/TSE.2004.89
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881RI
UT WOS:000225886200013
DA 2024-07-18
ER

PT J
AU Forax, R
   Duris, E
   Roussel, G
AF Forax, R
   Duris, E
   Roussel, G
TI A reflective implementation of Java multi-methods
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Java; polymorphism; reflection; dynamic class loading
AB In Java, method implementations are chosen at runtime by late-binding with respect to the runtime class of just the receiver argument. However, in order to simplify many programming designs, late-binding with respect to the dynamic type of all arguments is sometimes desirable. This behavior, usually provided by multi-methods, is known as multipolymorphism. This paper presents a new multi-method implementation based on the standard Java reflection mechanism. Provided as a package, it does not require any language extension nor any virtual machine modification. The design issues of this reflective implementation are presented together with a new and simple multi-method dispatch algorithm that efficiently supports class loading at runtime. This implementation provides a practicable and fully portable multi-method solution.
C1 Univ Marne la Vallee, Inst Gaspard Monge, F-77454 Marne La Vallee, France.
C3 Universite Gustave-Eiffel; ESIEE Paris
RP Forax, R (corresponding author), Univ Marne la Vallee, Inst Gaspard Monge, 5 Bd Descartes, F-77454 Marne La Vallee, France.
EM forax@univ-mlv.fr; duris@univ-mlv.fr; roussel@univ-mlv.fr
CR AGRAWAL R, 1991, P OOPSLA 91, P113
   AMIEL E, 1994, P ACM C OBJ OR PROGR, P244
   [Anonymous], [No title captured]
   ATTALI I, 2000, SMARTTOOLS
   BAUMGARTNER G, 2002, OSUCISRC501TR08
   BOURDONCLE F, 1997, POPL 97 24 ACM SIGPL, P302
   BOYLAND J, 1997, P C OBJ OR PROGR SYS, P66
   Bruce K., 1995, Theory and Practice of Object Systems, V1, P221
   Bruneton Eric, 2002, P AD EXT COMP SYST
   CHAMBERS C, 1992, P EUR C OBJ OR PROGR, P33
   CHEN W, 1994, P EUR C OBJ OR PROGR
   CLIFTON C, 2000, P C OBJ OR PROGR SYS
   DAHL OJ, 1973, S47 NORW COMP CTR
   DEAN J, 1996, P 1996 ACM C OBJ OR, P83
   Dujardin E, 1998, ACM T PROGR LANG SYS, V20, P116, DOI 10.1145/271510.271521
   DUJARDIN E, 1996, 2892 INRIA
   DUTCHYN C, 2001, P C OBJ OR TECHN SYS
   FORAX R, 1999, P 1 INT S GEN COMP B
   FORAX R, 2000, P TOOLS PAC 00 C NOV
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gosling J., 2000, The Java Language Specification
   GROTHOFF C, 2003, P EUR C OBJ OR PROGR, P103
   HOLST W, 1998, 9803 U ALB DEPT COMP
   Kiczales G., 1991, The Art of the Metaobject Protocol
   Kizub M., 1998, KIEV LANGUAGE SPECIF
   Lieberherr K., 1996, ADAPTIVE OBJECT ORIE
   LISKOV B, 1988, SIGPLAN NOTICES, V23, P5
   MILLSTEIN T, 1999, P ECOOP 99, P279
   Palsberg J, 1998, P INT COMP SOFTW APP, P9, DOI 10.1109/CMPSAC.1998.716629
   PANG C, 1999, P EUR C OBJ OR PROGR, P304
   PAWLAK R, 2001, P REFL 01 C SEPT
   VIROLI M, 2000, P ACM SIGPLAN C OBJ, P146
   ZIBIN Y, 2002, P 17 ACM C OBJ OR PR, P142
   [No title captured]
NR 34
TC 5
Z9 6
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2004
VL 30
IS 12
BP 1055
EP 1071
DI 10.1109/TSE.2004.90
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881RI
UT WOS:000225886200014
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Balsamo, S
   Di Marco, A
   Inverardi, P
   Simeoni, M
AF Balsamo, S
   Di Marco, A
   Inverardi, P
   Simeoni, M
TI Model-based performance prediction in software development: A survey
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software verification; performance modeling and prediction; integrated
   environments
ID PRODUCT FORM SOLUTION; PROCESS ALGEBRA; DESIGN
AB Over the last decade, a lot of research has been directed toward integrating performance analysis into the software development process. Traditional software development methods focus on software correctness, introducing performance issues later in the development process. This approach does not take into account the fact that performance problems may require considerable changes in design, for example, at the software architecture level, or even worse at the requirement analysis level. Several approaches were proposed in order to address early software performance analysis. Although some of them have been successfully applied, we are still far from seeing performance analysis integrated into ordinary software development. In this paper, we present a comprehensive review of recent research in the field of model-based performance prediction at software development time in order to assess the maturity of the field and point out promising research directions.
C1 Univ Venice, Dipartimento Informat, I-30173 Venice, Italy.
   Univ Aquila, Dipartimento Informat, I-67010 Coppito, Italy.
C3 Universita Ca Foscari Venezia; University of L'Aquila
RP Univ Venice, Dipartimento Informat, Via Torino 155, I-30173 Venice, Italy.
EM balsamo@dsi.unive.it; adimarco@di.univaq.it; inverard@di.univaq.it;
   simeoni@dsi.unive.it
RI Balsamo, Simonetta/AAJ-4796-2021; Simeoni, Marta/HNI-1625-2023
OI Di Marco, Antinisca/0000-0001-7214-9945
CR *ACM, 1998, P ACM INT WORKSH SOF
   *ACM, 2002, P ACM INT WORKSH SOF
   *ACM, 2000, P ACM INT WORKSH SOF
   Ajmone M., 1986, PERFORMANCE MODELS M
   ANDOLFI F, 2000, ACM P 2 INT WORKSH S, P47
   [Anonymous], 1985, EATCS Monographs on Theoretical Computer Science
   [Anonymous], P 1 INT WORKSH SOFTW
   Aquilani F., 2001, Performance Evaluation, V45, P205
   Arief L. B., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P71, DOI 10.1145/350391.350408
   AUSTRY D, 1984, THEOR COMPUT SCI, V30, P91, DOI 10.1016/0304-3975(84)90067-7
   BACCELLI F, 1994, CWI TRACT, V105, P1
   BALBO G, 1988, IEEE T COMPUT, V37, P1251, DOI 10.1109/12.5986
   BALSAMO S, 2002, ACM P INT WORKSH SOF, P190
   BALSAMO S, 2004, 0112004 TR U AQ DIP
   Banks J., 1999, DISCRETE EVENT SYSTE
   Bass Len, 2012, SEI S SOFTW
   BEILNER H, 1994, P 7 INT C MOD TECHN
   Bernardi S., 2002, PROC 3 INT WORKSHOP, P35
   Bernardo M, 1998, THEOR COMPUT SCI, V202, P1, DOI 10.1016/S0304-3975(97)00127-8
   BERNARDO M, 2001, 2 TOWERS 1 0 USER MA
   Bernardo M., 2000, ACM Proc. Int'l Workshop Software and Performance, P1
   Bosch P, 1999, JAVA REP, V4, P10
   BUCHHOLZ P, 1996, THESIS U DORTMUND GE
   BUHR RJA, 1996, CASE MAPS OBJECT ORI
   Coe P. S., 1998, ACM Transactions on Modeling and Computer Simulation, V8, P431, DOI 10.1145/295251.295259
   Cortellessa V., 2000, IEE Proceedings-Software, V147, P61, DOI 10.1049/ip-sen:20000755
   Cortellessa V, 2001, PERFORM EVALUATION, V45, P81, DOI 10.1016/S0166-5316(01)00036-0
   CORTELLESSA V, 2000, ACM P WORKSH SOFTW P, P58
   DEMIGUEL M, 2000, ACM P INT WORKSH SOF, P83
   ENSLOW PH, 1978, COMPUTER, V11, P13, DOI 10.1109/C-M.1978.217901
   FRANKS G, 1995, PERFORM EVALUATION, V24, P117, DOI 10.1016/0166-5316(95)96869-T
   Gilmore S., 1994, Computer Performance Evaluation. Modelling Techniques and Tools. 7th International Conference Proceedings, P353
   GOMAA H, 2000, ACM P WORKSH SOFTW P, P117
   GOMAA H, 2001, LNCS, V2047, P40
   Gotz N., 1992, 492 IMMD7 U ERL NURN
   GRASSI V, 2002, ACM P INT WORKSH SOF, P262
   Gu G.P., 2002, P 3 INT WORKSHOP SOF, P227
   Harrison P, 1995, COMPUT J, V38, P510, DOI 10.1093/comjnl/38.7.510
   Hermanns H, 2002, THEOR COMPUT SCI, V274, P43, DOI 10.1016/S0304-3975(00)00305-4
   Hermanns H, 2000, PERFORM EVALUATION, V39, P5, DOI 10.1016/S0166-5316(99)00056-5
   Hillston J, 1999, PERFORM EVALUATION, V35, P171, DOI 10.1016/S0166-5316(99)00005-X
   HILLSTON J, 1993, CSR2493 U ED DEP COM
   Hoare CAR., 1985, Communicating Sequential Processes
   HOEBEN F, 2000, ACM P INT WORKSH SOF, P77
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   KAHKIPURO P, 2001, P PERF ENG C, P167
   Kant K., 1992, Introduction to computer system performance evaluation
   Kemeny John G., 1976, FINITE MARKOV CHAINS
   KING P, 1999, P 25 UK PERF ENG WOR
   Kleinrock L., 1975, Queueing Systems-Volume 1: Theory, V1
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   LINDEMANN C, 2002, ACM P INT WORKSH SOF, P25
   Menascé DA, 2000, IEEE T SOFTWARE ENG, V26, P1066, DOI 10.1109/32.881718
   MENASCE DA, 1997, P 1997 COMP MEAS GRO
   MENASCE DA, 1998, ACM P INT WORKSH SOF, P63
   *MIL 3 INC, 1999, OPNET MAN
   Milner R., 1989, Communication and concurrency
   *OBJ MAN GROUP, 2002, PTC20020302 OMG
   *OBJECTIME LTD, 1998, DEV 5 1 REF MAN
   *OMG DOC, 2003, UN MOD LANG UML VERS
   Petriu D.C., 1999, PROC APPL GRAPH TRAN, P47
   Petriu DC, 2002, LECT NOTES COMPUT SC, V2324, P159
   PETRIU DC, 2002, P 12 INT C COMP PERF, P141
   Pooley R., 1999, PROCEEDING 15 UK PER, P23
   POOLEY R, 1999, P IEE SOFTWARE, P2
   RAMBAUGH J, 1991, OBJECT ORIENTED MODE
   RANKS R, 1998, ACM P INT WORKSH SOF, P120
   ROLIA JA, 1995, IEEE T SOFTWARE ENG, V21, P689, DOI 10.1109/32.403785
   Sereno M, 1995, COMPUT J, V38, P622, DOI 10.1093/comjnl/38.7.622
   Smith C.U., 1990, Performance engineering of software systems, VSeventh
   Smith CU, 1997, LECT NOTES COMPUT SC, V1245, P135, DOI 10.1007/BFb0022203
   SMITH CU, 2002, PERFORMANCE SOLUTION
   Trivedi K.S., 2001, Probability and statistics with reliability, queueing, and computer science applications, V2nd
   Williams L. G., 2002, Proceedings of the 3rd international workshop on Software and performance, WOSP'02, P179
   WOODSIDE CM, 1995, IEEE T COMPUT, V44, P20, DOI 10.1109/12.368012
   Woodside M, 2001, PERFORM EVALUATION, V45, P107, DOI 10.1016/S0166-5316(01)00033-5
   1997, C SIM
   2004, CSIM PERFORMANCE SIM
   2004, PETRI NETS TOOLS DAT
NR 79
TC 357
Z9 394
U1 1
U2 19
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2004
VL 30
IS 5
BP 295
EP 310
DI 10.1109/TSE.2004.9
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 813JS
UT WOS:000220904000002
DA 2024-07-18
ER

PT J
AU Ocampo, A
   Boggio, D
   Münch, J
   Palladino, G
AF Ocampo, A
   Boggio, D
   Münch, J
   Palladino, G
TI Toward a reference process for developing wireless Internet services
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE mobile services commerce; wireless Internet services; software process
   modeling; process elicitation; reference process model; software project
   management
ID AGILE SOFTWARE-DEVELOPMENT; DESIGN
AB Wireless Internet services such as mobile Web applications promise an enormous market potential. The field is characterized by extreme time-to-market pressure and insufficient knowledge about development procedures and technical constraints. This results in insufficient guidance for project managers and software developers on selecting appropriate development processes, techniques, methods, and tools. In addition, there is an enormous lack of knowledge about the effects (such as effort consumption, defect injection) of such technologies that hinders the transfer of innovative technologies into practice. This article decribes an initial reference process by summarizing essential technologies for the development of wireless Internet services and experience with these technologies on the levels of life cycle processes, engineering processes, and managerial processes. The reference process is based on a comprehensive literature survey and the execution of development projects for wireless Internet services. The goal of the article is to provide domain-specific guidance for project managers and software developers with accompanying lessons learned from the past.
C1 Fraunhofer Inst Expt Software Engn, D-67661 Kaiserslautern, Germany.
   Motorola GSG, I-10147 Turin, Italy.
   Investnet Italia Spa, I-20125 Milan, Italy.
C3 Fraunhofer Gesellschaft
RP Fraunhofer Inst Expt Software Engn, D-67661 Kaiserslautern, Germany.
EM ocampo@iese.fhg.de; ADB005@email.mot.com; muench@iese.fhg.de;
   g.palladino@investbv.com
RI Münch, Jürgen/ABC-2316-2020
OI Münch, Jürgen/0000-0003-0327-8094; Ocampo, Alexis/0000-0002-7451-3074
CR ADAMOPOULOS DX, 2001, COMPUT COMMUN, V24, P294
   Basu K, 2000, IEEE WCNC, P1563
   Beck K., 2000, EXTREME PROGRAMMING
   BECKERKORNSTAED.U, 2002, P 4 INT C PROD FOC S
   BECKERKORNSTAED.U, 1999, P 11 C ADV INF SYST, P119
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   BRINKKEMPER S, 1995, P EUR WORKSH SOFTW P
   BROOKS F, 1995, ESSAYS SOFTWARE ENG
   Buchanan G., 2001, Proceedings of the 10th International Conference on the World Wide Web, P673, DOI [https://doi.org/10.1145/371920.372181, DOI 10.1145/371920.372181]
   BUTTLER MH, 2001, HP200183 HP LAB
   CARLSHAMARE P, 2002, REQUIR ENG, P139
   Chi EH, 2002, IEEE INTERNET COMPUT, V6, P64, DOI 10.1109/4236.991445
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Cockburn A., 2002, AGILE SOFTWARE DEV
   Collberg CS, 2002, IEEE T SOFTWARE ENG, V28, P735, DOI 10.1109/TSE.2002.1027797
   Constantine LL, 2002, IEEE SOFTWARE, V19, P42, DOI 10.1109/52.991331
   COOPER HM, 1982, REV EDUC RES, V52, P291, DOI 10.3102/00346543052002291
   Cushnie J, 2000, LECT NOTES COMPUT SC, V1922, P312
   *DSDM CONS, 2002, DYN SYST DEV METH VE
   ELFAR IK, 2002, P 5 INT SOFTW INT QU
   Friday A, 1999, INTEGR COMPUT-AID E, V6, P143
   GIANNETTI F, 2002, P HP LABS W3C WORKSH, P25
   HAMMAR CM, 2001, IEEE SOFTWARE, V18, P62
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   HIGHSMITH J, 2002, J DEFENSE SOFTWA OCT
   Karlsson AM, 1999, INT J FRACTURE, V96, P381, DOI 10.1023/A:1018328932561
   KARLSSON E, 1997, ACM SIGSOFT SOFTWARE, V22
   KOVARI P, 2001, SG24625900 IBM
   Maurer F, 2002, IEEE INTERNET COMPUT, V6, P86, DOI 10.1109/4236.989006
   MCDERMID JA, 1994, SOFTWARE ENG REFEREN
   MCGARRY F, 1994, SEL94005
   MORI G, 2002, P W3C DEV IND AUTH T
   Nerurkar U, 2001, IEEE SOFTWARE, V18, P69, DOI 10.1109/52.965807
   NIELSEN J, 2000, WAP BACKSLASH
   Nielsen Jakob, 1999, GRACEFUL DEGRADATION
   NILSSON A, 1999, Q LAB
   ODLYZKO A, 1999, AT T LAB RES APR
   OMIDYAR G, 2000, P 1 EUR C UN MULT NE, P1
   RAFFO D, 1999, INT J EMPIRICAL SOFT, V4
   Read K, 2003, IEEE INTERNET COMPUT, V7, P81, DOI 10.1109/MIC.2003.1167345
   RITEL H, 1984, DEV DESIGN METHODOLO, P135
   Roe C, 2002, IEEE SOFTWARE, V19, P34, DOI 10.1109/52.991330
   Rombach H.D., 1995, Advances in Computers, V41, P1
   ROSENFELD L, 1998, INFORMATION ARCHITEC
   Schwabe D, 2002, IEEE INTERNET COMPUT, V6, P34, DOI 10.1109/4236.991441
   Taylor MJ, 2002, INFORM SOFTWARE TECH, V44, P381, DOI 10.1016/S0950-5849(02)00024-1
   Upchurch L, 2001, IEEE SOFTWARE, V18, P84, DOI 10.1109/MS.2001.936222
   WONG C, 2002, P W3C DEV IND AUTH T
   WONG C, 2002, P ACM SIGCHI NZ02 C
   YAU V, 1996, P IEEE INT C IND TEC
   Zettell J., 2001, Product Focused Software Process Improvement. Third International Conference, PROFES 2001. Proceedings (Lecture Notes in Computer Science Vol.2188), P255
   ZHENG P, 2003, P IEEE INFOCOM
NR 53
TC 6
Z9 6
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2003
VL 29
IS 12
BP 1122
EP 1134
DI 10.1109/TSE.2003.1265526
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 751PJ
UT WOS:000187075900007
DA 2024-07-18
ER

PT J
AU Bertolotti, F
   Cazzola, W
AF Bertolotti, Francesco
   Cazzola, Walter
TI CombTransformers: Statement-Wise Transformers for Statement-Wise
   Representations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Programming languages; machine learning; learning representations; code
   search and summarization; method name Gen
AB This study presents a novel category of Transformer architectures known as comb transformers, which effectively reduce the space complexity of the self-attention layer from a quadratic to a subquadratic level. This is achieved by processing sequence segments independently and incorporating X-word embeddings to merge cross-segment information. The reduction in attention memory requirements enables the deployment of deeper architectures, potentially leading to more competitive outcomes. Furthermore, we design an abstract syntax tree (AST)-based code representation to effectively exploit comb transformer properties. To explore the potential of our approach, we develop nine specific instances based on three popular architectural concepts: funnel, hourglass, and encoder-decoder. These architectures are subsequently trained on three code-related tasks: method name generation, code search, and code summarization. These tasks encompass a range of capabilities: short/long sequence generation and classification. In addition to the proposed comb transformers, we also evaluate several baseline architectures for comparative analysis. Our findings demonstrate that the comb transformers match the performance of the baselines and frequently perform better.
C1 [Bertolotti, Francesco; Cazzola, Walter] Univ Milan, Dept Comp Sci, I-20133 Milan, Italy.
C3 University of Milan
RP Cazzola, W (corresponding author), Univ Milan, Dept Comp Sci, I-20133 Milan, Italy.
EM francesco.bertolotti@unimi.it; cazzola@di.unimi.it
RI Bertolotti, Francesco/KBC-4204-2024
OI Bertolotti, Francesco/0000-0002-3867-6175; Cazzola,
   Walter/0000-0002-4652-8113
FU MUR project "T-LADIES" [PRIN 2020TL3X8X]
FX This work was supported in part by the MUR project "T-LADIES" under
   Grant PRIN 2020TL3X8X.
CR Allamanis M, 2016, PR MACH LEARN RES, V48
   Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Alon U., 2019, PROC 7 INT C LEARN R
   Alon U., 2020, PROC ICML
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Alon U, 2018, ACM SIGPLAN NOTICES, V53, P404, DOI [10.1145/3192366.3192412, 10.1145/3296979.3192412]
   Amodio M., 2017, Neural attribute machines for programming generation.
   Beltagy I., 2021, Longformer: The long-document transformer., P1
   Bergstra J., 2011, Adv. Neural Inf. Process. Syst., V24
   Bertolotti F, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3514232
   Burtsev M. S., 2021, Memory transformer, P1
   Butler S, 2011, LECT NOTES COMPUT SC, V6813, P130, DOI 10.1007/978-3-642-22655-7_7
   Celik A., 2017, PROC OOPSLA
   Chen M., 2021, arXiv
   Chen XY, 2018, 32 C NEURAL INFORM P, V31
   Child R., Generating long sequences with sparse transformers
   Choromanski KM, 2020, RETHINKING ATTENTION
   Dai Z., 2020, ADV NEUR IN, V33, P4271
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Donaldson AF, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133917
   Ellis K, 2021, PROCEEDINGS OF THE 42ND ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '21), P835, DOI 10.1145/3453483.3454080
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Graf, 2017, ARXIV160808710, P1, DOI DOI 10.48550/ARXIV.1608.08710
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Haque S, 2020, IEEE WORK CONF MIN S, P300, DOI 10.1145/3379597.3387449
   He JX, 2021, PROCEEDINGS OF THE 42ND ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '21), P296, DOI 10.1145/3453483.3454045
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hill E, 2014, EMPIR SOFTW ENG, V19, P1754, DOI 10.1007/s10664-013-9261-0
   Hoa Khanh Dam, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P46, DOI 10.1109/MSR.2019.00017
   Host EW, 2009, LECT NOTES COMPUT SC, V5653, P294, DOI 10.1007/978-3-642-03013-0_14
   Huang T., 2022, P NEURIPS
   Hucka Michael, 2018, J. Open Source Softw, V3, P653
   Husain H., 2019, CodeSearchNet Challenge: Evaluating the State of Semantic Code Search
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Jacob B, 2018, PROC CVPR IEEE, P2704, DOI 10.1109/CVPR.2018.00286
   Kingma D. P., 2015, P INT C LEARN REPR, P1, DOI DOI 10.1002/9781118900772.ETRDS0277
   Kitaev Nikita, 2020, INT C LEARN REPR
   Kovaleva O, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P4365
   Lan Z., 2019, ARXIV190911942, DOI DOI 10.48550/ARXIV.1909.11942
   LeClair A, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P3931
   Li H, 2018, ADV NEUR IN, V31
   Liu Q., 2020, ARXIV
   Liu Y., 2019, ROBERTA ROBUSTLY OPT
   Luong M.-T., 2015, P 2015 C EMPIRICAL M, DOI DOI 10.18653/V1/D15-1166
   Mastropaolo A, 2021, PROC INT CONF SOFTW, P336, DOI 10.1109/ICSE43902.2021.00041
   Melekhov I, 2017, IEEE INT CONF COMP V, P870, DOI 10.1109/ICCVW.2017.107
   Movshovitz-Attias Dana, 2013, ACL
   Murali V., 2018, P ICLR
   Ott M, 2019, NAACL HLT 2019: THE 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES: PROCEEDINGS OF THE DEMONSTRATIONS SESSION, P48
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Peganov A., 2020, Memory transformer.
   Pradel M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276517
   Raffel C, 2020, J MACH LEARN RES, V21
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Roy A, 2021, T ASSOC COMPUT LING, V9, P53, DOI 10.1162/tacl_a_00353
   Sennrich R, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1715
   Shi K, 2020, J COMPUT LANG, V59, DOI 10.1016/j.cola.2020.100979
   Smith N., 2019, javaParser.
   Tay Y., 2017, Long range arena: A benchmark for efficient transformers.
   Tay Y., 2020, INT C MACHINE LEARNI, P9438, DOI DOI 10.5555/3524938.3525813
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang S., 2017, Linformer: Self-attention with linear complexity.
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Wolf T, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING: SYSTEM DEMONSTRATIONS, P38
   Wu C., 2022, Learning deep semantic model for code search using CodeSearchNet corpus.
   Xu SH, 2019, PROCEEDINGS OF THE 2019 ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION (PEPM '19), P10, DOI 10.1145/3294032.3294079
   Yang J, 2017, IEEE COMPUT SOC CONF, P2025, DOI 10.1109/CVPRW.2017.253
   Yang L, 2020, CIKM '20: PROCEEDINGS OF THE 29TH ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT, P1725, DOI 10.1145/3340531.3411908
   Zaheer M., 2020, ADV NEURAL INFORM PR, P17283, DOI DOI 10.5555/3495724.3497174
NR 71
TC 1
Z9 1
U1 6
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2023
VL 49
IS 10
BP 4677
EP 4690
DI 10.1109/TSE.2023.3310793
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA Y1NF7
UT WOS:001102997400010
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Martinez, M
   Falleri, JR
   Monperrus, M
AF Martinez, Matias
   Falleri, Jean-Remy
   Monperrus, Martin
TI Hyperparameter Optimization for AST Differencing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Training; Software algorithms; Computer bugs; Syntactics; Maintenance
   engineering; Hyperparameter optimization; Software; Software evolution;
   Tree differencing; Abstract Syntax Trees (AST); hyperparameter
   optimization, edit-script
ID SEARCH
AB Computing the differences between two versions of the same program is an essential task for software development and software evolution research. AST differencing is the most advanced way of doing so, and an active research area. Yet, AST differencing algorithms rely on configuration parameters that may have a strong impact on their effectiveness. In this paper, we present a novel approach named DAT (Diff Auto Tuning) for hyperparameter optimization of AST differencing. We thoroughly state the problem of hyper-configuration for AST differencing. We evaluate our data-driven approach DAT to optimize the edit-scripts generated by the state-of-the-art AST differencing algorithm named GumTree in different scenarios. DAT is able to find a new configuration for GumTree that improves the edit-scripts in 21.8% of the evaluated cases.
C1 [Martinez, Matias] Univ Politecn Cataluna, Barcelona 08034, Spain.
   [Falleri, Jean-Remy] Univ Bor deaux, CNRS, Bordeaux INP, LaBRI,UMR 5800, F-33400 Deaux, France.
   [Falleri, Jean-Remy] Inst Univ France, Paris, France.
   [Monperrus, Martin] KTH Royal Inst Technol, S-11428 Stockholm, Sweden.
C3 Universitat Politecnica de Catalunya; Universite de Bordeaux; Centre
   National de la Recherche Scientifique (CNRS); Institut Universitaire de
   France; Royal Institute of Technology
RP Martinez, M (corresponding author), Univ Politecn Cataluna, Barcelona 08034, Spain.
EM matias.martinez@upc.edu; jean-remy.falleri@u-bordeaux.fr;
   monperrus@kth.se
RI Monperrus, Martin/I-3640-2012
OI Monperrus, Martin/0000-0003-3505-3383
FU Spanish Ministry of Science and Innovation [RYC2021-031523-I]; GAISSA
   Spanish research project [TED2021-130923B-I00,]; Wallenberg Artificial
   Intelligence, Autonomous Systems and Software Program (WASP) - Knut and
   Alice Wallenberg Foundation; Swedish Foundation for Strategic Research
   (SSF)
FX This work was supported in part by the Spanish Ministry of Science and
   Innovation under Grant RYC2021-031523-I, in part by the GAISSA Spanish
   research project under Grant TED2021-130923B-I00, in part by the
   Wallenberg Artificial Intelligence, Autonomous Systems and Software
   Program (WASP) funded by Knut and Alice Wallenberg Foundation, and in
   part by the Swedish Foundation for Strategic Research (SSF).
CR Agrawal A, 2022, IEEE T SOFTWARE ENG, V48, P2939, DOI 10.1109/TSE.2021.3073242
   Agrawal A, 2021, IEEE T SOFTWARE ENG, V47, P2182, DOI 10.1109/TSE.2019.2945020
   Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   Akiba T, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2623, DOI 10.1145/3292500.3330701
   Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   Apel S, 2012, IEEE INT CONF AUTOM, P120, DOI 10.1145/2351676.2351694
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Basios M, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P118, DOI 10.1145/3236024.3236043
   Bergstra James, 2015, Computational Science and Discovery, V8, DOI 10.1088/1749-4699/8/1/014008
   Bergstra J., 2011, Adv. Neural Inf. Process. Syst., V24
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Chawathe S. S., 1996, SIGMOD Record, V25, P493, DOI 10.1145/235968.233366
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   de la Torre G, 2018, IEEE WORK CONF MIN S, P492, DOI 10.1145/3196398.3196404
   Decker MJ, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2226
   Dotzler G, 2016, IEEE INT CONF AUTOM, P660, DOI 10.1145/2970276.2970315
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fan YR, 2021, PROC INT CONF SOFTW, P1174, DOI 10.1109/ICSE43902.2021.00108
   Feurer M, 2015, ADV NEUR IN, V28
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Frick V, 2018, PROC IEEE INT CONF S, P264, DOI 10.1109/ICSME.2018.00036
   Hashimoto M, 2008, WORK CONF REVERSE EN, P279, DOI 10.1109/WCRE.2008.44
   Higo Y, 2017, IEEE INT CONF AUTOM, P532, DOI 10.1109/ASE.2017.8115664
   Huang KF, 2018, IEEE INT CONF AUTOM, P679, DOI 10.1145/3238147.3238219
   Hutter Frank, 2011, Learning and Intelligent Optimization. 5th International Conference, LION 5. Selected Papers, P507, DOI 10.1007/978-3-642-25566-3_40
   Jia Y, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P540, DOI 10.1109/ICSE.2015.71
   Kim M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/1985793.1985815
   Kotelyanskii A, 2014, INT CONF QUAL SOFTW, P79, DOI 10.1109/QSIC.2014.43
   Kotthoff L, 2017, J MACH LEARN RES, V18
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Li K., 2020, arXiv
   Lustosa A, 2023, Arxiv, DOI arXiv:2301.06577
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   Matsumoto Junnosuke, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P550, DOI 10.1109/MSR.2019.00082
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Meng N, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P329
   Monperrus M., 2012, Tech. Rep.
   Myers EW, 1986, ALGORITHMICA, V1, P251, DOI 10.1007/BF01840446
   Panichella A, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106411
   Pawlak R, 2016, SOFTWARE PRACT EXPER, V46, P1155, DOI 10.1002/spe.2346
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Shahriari B, 2016, P IEEE, V104, P148, DOI 10.1109/JPROC.2015.2494218
   Shu R, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09906-8
   Sobreira V, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P130, DOI 10.1109/SANER.2018.8330203
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Villalobos-Arias L, 2021, PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE '21), P21, DOI 10.1145/3475960.3475986
   Yang CH, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P15, DOI [10.1109/saner.2019.8668032, 10.1109/SANER.2019.8668032]
   Yedida R, 2022, IEEE T SOFTWARE ENG, V48, P3103, DOI 10.1109/TSE.2021.3079841
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
NR 54
TC 0
Z9 0
U1 2
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2023
VL 49
IS 10
BP 4814
EP 4828
DI 10.1109/TSE.2023.3315935
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA Y1NF7
UT WOS:001102997400015
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ou, WH
   Ding, SHH
   Tian, Y
   Song, L
AF Ou, Weihan
   Ding, Steven H. H.
   Tian, Yuan
   Song, Leo
TI SCS-Gan: Learning Functionality-Agnostic Stylometric Representations for
   Source Code Authorship Verification
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Task analysis; Training; Encoding; Feature extraction; Malware;
   Python; Cyber threat intelligence; representation learning; adversarial
   learning; authorship analysis; code authorship verification
ID IDENTIFICATION; PLAGIARISM
AB In recent years, the number of anonymous script-based fileless malware attacks and software copyright disputes has increased rapidly. In the literature, automated Code Authorship Analysis (CAA) techniques have been proposed to reduce the manual effort in identifying those attacks and issues. Most CAA techniques aim to solve the task of Authorship Attribution (AA), i.e., identifying the actual author of a source code fragment from a given set of candidate authors. However, in many real-world scenarios, investigators do not have a predefined set of authors containing the actual author at the time of investigation, i.e., contradicting AA's assumption. Additionally, existing AA techniques ignore the influence of code functionality when identifying the authorship, which leads to biased matching simply based on code functionality. Different from AA, the task of (extreme) Authorship Verification (AV) is to decide if two texts were written by the same person or not. AV techniques do not need a predefined author set and thus could be applied in more code authorship-related applications than AA. To our knowledge, there is no previous work attempting to solve the AV problem for the source code. To fill the gap, we propose a novel adversarial neural network, namely SCS-Gan, that can learn a stylometric representation of code for automated AV. With the multi-head attention mechanism, SCS-Gan focuses on the code parts that are most informative regarding personal styles and generates functionality-agnostic stylometric representations through adversarial training. We benchmark SCS-Gan and two state-of-the-art code representation models on four out-of-sample datasets collected from a real-world programming competition. Our experiment results show that SCS-Gan outperforms the baselines on all four out-of-sample datasets.
C1 [Ou, Weihan; Ding, Steven H. H.; Tian, Yuan; Song, Leo] Queens Univ, Sch Comp, Toronto, ON K7L 2N8, Canada.
C3 Queens University - Canada
RP Ou, WH (corresponding author), Queens Univ, Sch Comp, Toronto, ON K7L 2N8, Canada.
EM weihan.ou@queensu.ca; steven.ding@queensu.ca; y.tian@queensu.ca;
   leo.song@queensu.ca
OI Song, Zhizhou/0000-0002-1195-0007; Tian, Yuan/0000-0002-2208-3893
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
   Discovery [RGPIN-2020-06962]
FX This work was supported by the Natural Sciences and Engineering Research
   Council of Canada (NSERC) Discovery under Grant RGPIN-2020-06962.
CR Abuhamad M, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P101, DOI 10.1145/3243734.3243738
   Akhtar N, 2018, IEEE ACCESS, V6, P14410, DOI 10.1109/ACCESS.2018.2807385
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Alrabaee S, 2019, LECT NOTES COMPUT SC, V11736, P47, DOI 10.1007/978-3-030-29962-0_3
   Alrabaee S, 2014, DIGIT INVEST, V11, pS94, DOI 10.1016/j.diin.2014.03.012
   Alterkavi S, 2021, MULTIMED TOOLS APPL, V80, P13575, DOI 10.1007/s11042-020-10361-2
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Bayrami P., 2021, PROC 34 IEEE CAN C E, P1
   Bromley J., 1993, International Journal of Pattern Recognition and Artificial Intelligence, V7, P669, DOI 10.1142/S0218001493000339
   Burrows S., 2008, SOURCE CODE AUTHORSH, P32
   Burrows S, 2007, SOFTWARE PRACT EXPER, V37, P151, DOI 10.1002/spe.750
   Burrows S, 2014, SOFTWARE PRACT EXPER, V44, P1, DOI 10.1002/spe.2146
   Caliskan A, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23304
   Caliskan-Islam A, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P255
   Custodio J. E., 2019, PROC WORKING NOTES C, V2380
   Ding SHH, 2019, IEEE T CYBERNETICS, V49, P107, DOI 10.1109/TCYB.2017.2766189
   Donaldson J. L., 1981, SIGCSE Bulletin, V13, P21, DOI 10.1145/953049.800955
   Eddy H T, 1887, Science, V9, P297, DOI 10.1126/science.ns-9.216.297
   Elenbogen B. S., 2008, J. Comput. Sci. Coll, V23, P50
   FAIDHI JAW, 1987, COMPUT EDUC, V11, P11, DOI 10.1016/0360-1315(87)90042-X
   Fang Y, 2020, COMPUT J, V63, P1775, DOI 10.1093/comjnl/bxaa059
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Frantzeskou G., 2006, 28th International Conference on Software Engineering Proceedings, P893, DOI 10.1145/1134285.1134445
   Frantzeskou G, 2006, INT FED INFO PROC, V204, P508
   Goodfellow I, 2020, COMMUN ACM, V63, P139, DOI 10.1145/3422622
   Graves A, 2005, LECT NOTES COMPUT SC, V3697, P799
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Iqbal F., 2010, Proc. of the 25th ACM SIGAPP Symposium on Applied Computing (SAC), P1591
   Kalgutkar V, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3292577
   Kudo T, 2018, CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018): PROCEEDINGS OF SYSTEM DEMONSTRATIONS, P66
   Lagutina K, 2021, PROC CONF OPEN INNOV, P240, DOI 10.23919/FRUCT50888.2021.9347649
   Mateless R, 2021, FUTURE GENER COMP SY, V116, P49, DOI 10.1016/j.future.2020.10.020
   Meng XZ, 2017, LECT NOTES COMPUT SC, V10493, P286, DOI 10.1007/978-3-319-66399-9_16
   Meng XZ, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1097, DOI 10.1145/2950290.2983962
   Mikolov Tomas, 2015, US Patent, Patent No. 9037464
   Pellin B. N, 2000, Using Classification Techniques to Determine Source Code Authorship
   Peng Z., 2021, PROC C LABS EVAL FOR, V2936, P2103
   Pennington J., 2014, P C EMP METH NAT LAN, P1532, DOI DOI 10.3115/V1/D14-1162
   Potha N, 2014, LECT NOTES ARTIF INT, V8445, P313, DOI 10.1007/978-3-319-07064-3_25
   Rexha A, 2018, SCIENTOMETRICS, V115, P223, DOI 10.1007/s11192-018-2661-6
   Rosenblum N, 2011, LECT NOTES COMPUT SC, V6879, P172, DOI 10.1007/978-3-642-23822-2_10
   Ruder S, 2016, Arxiv, DOI arXiv:1609.06686
   Schuster M, 1997, IEEE T SIGNAL PROCES, V45, P2673, DOI 10.1109/78.650093
   Simko Lucy, 2018, Proceedings on Privacy Enhancing Technologies, V2018, P127, DOI 10.1515/popets-2018-0007
   Soler-Company J, 2016, FRONT ARTIF INTEL AP, V288, P303, DOI 10.3233/978-1-61499-696-5-303
   Ullah F, 2019, IEEE ACCESS, V7, P141987, DOI 10.1109/ACCESS.2019.2943639
   Vaswani A, 2017, ADV NEUR IN, V30
   Wikipedia contributors, 2020, SIAMESE NEURAL NETWO
   Zhou J., 2016, T ASS COMPUT LING, V4, P371, DOI [DOI 10.1162/TACL_A_00105, 10.1162/tacl_a_00105]
   Zuo F, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23492
NR 50
TC 0
Z9 0
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1426
EP 1442
DI 10.1109/TSE.2022.3177228
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600003
OA hybrid
DA 2024-07-18
ER

PT J
AU Stocco, A
   Pulfer, B
   Tonella, P
AF Stocco, Andrea
   Pulfer, Brian
   Tonella, Paolo
TI Mind the Gap! A Study on the Transferability of Virtual Versus
   Physical-World Testing of Autonomous Driving Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE AI testing; self-driving cars; simulated testing; real-world testing;
   deep neural networks; autonomous vehicles
AB Safe deployment of self-driving cars (SDC) necessitates thorough simulated and in-field testing. Most testing techniques consider virtualized SDCs within a simulation environment, whereas less effort has been directed towards assessing whether such techniques transfer to and are effective with a physical real-world vehicle. In this paper, we shed light on the problem of generalizing testing results obtained in a driving simulator to a physical platform and provide a characterization and quantification of the sim2real gap affecting SDC testing. In our empirical study, we compare SDC testing when deployed on a physical small-scale vehicle versus its digital twin. Due to the unavailability of driving quality indicators from the physical platform, we use neural rendering to estimate them through visual odometry, hence allowing full comparability with the digital twin. Then, we investigate the transferability of behavior and failure exposure between virtual and real-world environments, targeting both unintended abnormal test data and intended adversarial examples. Our study shows that, despite the usage of a faithful digital twin, there are still critical shortcomings that contribute to the reality gap between the virtual and physical world, threatening existing testing solutions that only consider virtual SDCs. On the positive side, our results present the test configurations for which physical testing can be avoided, either because their outcome does transfer between virtual and physical environments, or because the uncertainty profiles in the simulator can help predict their outcome in the real world.
C1 [Stocco, Andrea; Tonella, Paolo] Univ Svizzera Italiana, CH-6900 Lugano, Switzerland.
   [Pulfer, Brian] Univ Geneva, CH-1205 Geneva, Switzerland.
C3 Universita della Svizzera Italiana; University of Geneva
RP Stocco, A (corresponding author), Univ Svizzera Italiana, CH-6900 Lugano, Switzerland.
EM andrea.stocco@usi.ch; brian.pulfer@usi.ch; paolo.tonella@usi.ch
RI Stocco, Andrea/GVT-6917-2022; Tonella, Paolo/C-1702-2015
OI Stocco, Andrea/0000-0001-8956-3894; Tonella, Paolo/0000-0003-3088-0339
FU ERC [787703]; European Research Council (ERC) [787703] Funding Source:
   European Research Council (ERC)
FX This work was supported by the ERC Advanced 2017 Program ERC under Grant
   787703
CR Afzal A, 2021, IEEE INT CONF SOFTW, P263, DOI 10.1109/ICST49551.2021.00036
   Almeaibed Sadeq, 2021, IEEE Communications Standards Magazine, V5, P40, DOI 10.1109/MCOMSTD.011.2100004
   [Anonymous], 2021, WAYM DRIV
   [Anonymous], 2019, ABOUT US
   [Anonymous], 2017, WAYM SECR TEST
   [Anonymous], 2021, DIYROBOCARS STAND TR
   [Anonymous], 2011, 2626212018 ISO
   [Anonymous], 2021, Replication Package
   [Anonymous], 2021, AWS DEEPR
   Arcaini P, 2021, IEEE INT CONF SOFTW, P295, DOI 10.1109/ICST49551.2021.00042
   Arrieta A. B., 2021, ARXIV
   AYERDI J, IN PRESS, DOI DOI 10.1109/TR.2022.3193070
   Balaji B., 2019, ARXIV
   Bechtel M. G., 2018, ARXIV
   Betz J., 2022, arXiv
   BGR Media LLC, 2018, Waymo's self-driving cars hit 10 million miles
   Biagiola M, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3511701
   Bojarski Mariusz, 2016, arXiv
   Borg M., 2020, ARXIV
   Borji A., 2018, ARXIV
   Bulsara A., 2020, SAE TECHNICAL PAPER
   Cerf VG, 2018, COMMUN ACM, V61, P7, DOI 10.1145/3177753
   Chen ST, 2019, IEEE T INTELL VEHICL, V4, P425, DOI 10.1109/TIV.2019.2919470
   Chollet F, 2015, KERAS
   Codevilla Felipe, 2018, P EUR C COMP VIS, P2
   Coelingh E, 2018, IEEE SPECTRUM, V55, P40, DOI 10.1109/MSPEC.2018.8302386
   Cohen J., 1988, STAT POWER ANAL BEHA
   Deng Y, 2020, arXiv
   Donkey Car, 2021, ABOUT US
   Dosovitskiy A., 2017, P 1 ANN C ROB LEARN, P1, DOI DOI 10.48550/ARXIV.1711.03938
   Gal Y, 2016, PR MACH LEARN RES, V48
   Gambi A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P318, DOI 10.1145/3293882.3330566
   García S, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P593, DOI 10.1145/3368089.3409743
   Ge YM, 2019, IEEE VEHIC NETW CONF, DOI 10.1109/vnc48660.2019.9062813
   Goldfain B., 2018, ARXIV
   Hendrycks D., 2019, arXiv
   Hildebrandt C, 2021, IEEE INT CONF ROBOT, P10912, DOI 10.1109/ICRA48506.2021.9561240
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Hyldmar N, 2019, IEEE INT CONF ROBOT, P3238, DOI [10.1109/icra.2019.8794445, 10.1109/ICRA.2019.8794445]
   Jahangirova G, 2021, IEEE INT CONF SOFTW, P194, DOI 10.1109/ICST49551.2021.00030
   JetRacer, 2019, US
   Kannapiran S, 2020, IEEE INT C INT ROBOT, P2265, DOI 10.1109/IROS45743.2020.9341770
   Kingma D. P., 2014, arXiv
   Kiran BR, 2022, IEEE T INTELL TRANSP, V23, P4909, DOI 10.1109/TITS.2021.3054625
   Kong Z., 2019, ARXIV
   Laurent T, 2020, IEEE INT C ENG COMP, P93, DOI 10.1109/ICECCS51672.2020.00018
   Liu M. M., 2017, ARXIV
   LLC Waymo, 2021, WAYM OP DAT
   Manrique D., 2020, P 14 EUR C SOFTW ARC, P542
   Michelmore R, 2020, IEEE INT CONF ROBOT, P7344, DOI [10.1109/icra40945.2020.9196844, 10.1109/ICRA40945.2020.9196844]
   OKelly Matthew, 2020, Machine Learning Research, V123, P77
   San Omer, 2021, NAT COMPUT SCI, V1, P307, DOI 10.1038/s43588-021-00077-0
   Parthasarathy D., 2021, ARXIV
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Riccio V, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P876, DOI 10.1145/3368089.3409730
   Riccio V, 2020, EMPIR SOFTW ENG, V25, P5193, DOI 10.1007/s10664-020-09881-0
   Scaramuzza D, 2011, IEEE ROBOT AUTOM MAG, V18, P80, DOI 10.1109/MRA.2011.943233
   Srinivasa Siddhartha S., 2019, arXiv
   Stocco Andrea, 2020, 2020 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW), P201, DOI 10.1109/ISSREW51248.2020.00073
   Stocco A., 2022, PROC 37 IEEEACM INT
   Stocco A, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2386
   Stocco A, 2020, PROC INT CONF SOFTW, P359, DOI 10.1145/3377811.3380353
   Team Chauffeur, 2016, STEER ANGL MOD CHAUF
   Team Epoch, 2016, STEER ANGL MOD EP
   Thorn E., 2018, Tech. Rep. DOT HS 812 623
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Udacity, 2017, SELF DRIV CARS DAT
   Ul Haq F, 2020, IEEE INT CONF SOFTW, P85, DOI 10.1109/ICST46399.2020.00019
   Unity3D, 2019, US
   Verma A., 2021, SAE WCX DIG SUMM WAR
   Viitala A., 2020, ARXIV
   Weiss M., 2022, ARXIV
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wu H., 2021, ARXIV
   Yang Z., 2020, ARXIV
   Yin KO, 2021, PROCEEDINGS OF THE 2021 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'21), P1106, DOI 10.1145/3449639.3459332
   Yun H., 2021, 2021 INT C EL INF CO, P1
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang Q, 2019, ARXIV
   Zhou H. -Y., 2018, ARXIV
   Zhou HL, 2021, INT C PATT RECOG, P4436, DOI 10.1109/ICPR48806.2021.9412011
   Zhu Jun-Yan, 2017, arXiv
NR 82
TC 13
Z9 13
U1 6
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1928
EP 1940
DI 10.1109/TSE.2022.3202311
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600029
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Eid, E
   Day, NA
AF Eid, Elias
   Day, Nancy A.
TI Static Profiling of Alloy Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Declarative modeling; Alloy; static analysis
ID LANGUAGE
AB Modeling of software-intensive systems using formal declarative modeling languages offers a means of managing software complexity through the use of abstraction and early identification of correctness issues by formal analysis. Alloy is one such language used for modeling systems early in the development process. Little work has been done to study the styles and techniques commonly used in Alloy models. We present the first static analysis study of Alloy models. We investigate research questions that examine a large corpus of 1,652 Alloy models. To evaluate these research questions, we create a methodology that leverages the power of ANTLR pattern matching and the query language XPath. Our research questions are split into two categories depending on their purpose. The Model Characteristics category aims to identify what language constructs are used commonly. Modeling Practices questions are considerably more complex and identify how modelers are using Alloy's constructs. We also evaluate our research questions on a subset of models from our corpus written by expert modelers. We compare the results of the expert corpus to the results obtained from the general corpus to gain insight into how expert modelers use the Alloy language. We draw conclusions from the findings of our research questions and present actionable items for educators, language and environment designers, and tool developers. Actionable items for educators are intended to highlight underutilized language constructs and features, and help student modelers avoid discouraged practices. Actionable items aimed at language designers present ways to improve the Alloy language by adding constructs or removing unused ones based on trends identified in our corpus of models. The actionable items aimed at environment designers address features to facilitate model creation. Actionable items for tool developers provide suggestions for back-end optimizations.
C1 [Eid, Elias; Day, Nancy A.] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Day, NA (corresponding author), Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
EM eeid@uwaterloo.ca; nday@uwaterloo.ca
OI Day, Nancy/0000-0002-1422-692X
FU NSERC
FX This work was supported in part by the Natural Sciences and Engineering
   Research Council of Canada under Grant NSERC
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   ABZ, 2021, 2021 8 INT C RIG STA
   [Anonymous], 1992, The Z Notation
   [Anonymous], 2021, WHAT DOES IT MEAN RU
   [Anonymous], 2013, UTIL ORDERING MODULE
   [Anonymous], 2018, 500 CHANGE LIST
   [Anonymous], 2021, QUESTIONS TAGGED ALL
   [Anonymous], 2021, The R Project for Statistical Computing
   [Anonymous], 2021, WELCOME ALLOYTOOLS
   [Anonymous], 2021, WHAT IS DIFFERENCE A
   Azevedo Oliveira Diego, 2020, Rigorous State-Based Methods. 7th International Conference, ABZ 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12071), P223, DOI 10.1007/978-3-030-48077-6_15
   Ball T, 2015, COMMUN ACM, V58, P30, DOI 10.1145/2663342
   Bandali A., 2020, THESIS DR CHERITON S
   Boniol F., 2014, CCIS, P1, DOI [10.1007/978-3-319-07512-9_1, DOI 10.1007/978-3-319-07512-9]
   Borger E., 2003, ABSTRACT STATE MACHI
   Briand LC, 2002, ADV COMPUT, V56, P97, DOI 10.1016/S0065-2458(02)80005-5
   Chowdhury I, 2011, J SYST ARCHITECT, V57, P294, DOI 10.1016/j.sysarc.2010.06.003
   Cunha A., 2021, ME TODOS FORMAIS PRO
   Eid E., 2021, THESIS DR CHERITON S
   Eid E., 2022, STATIC PROFILING ALL
   Erata F., 2018, ALLOY KODKOD BENCHMA
   Farheen S, 2020, SOFTW SYST MODEL, V19, P721, DOI 10.1007/s10270-019-00763-8
   HendersonSellers B, 1996, OBJECT ORIENTED SYST, V3, P143
   Hossain T, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P21, DOI 10.1109/REW53955.2021.00010
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Jackson D, 2019, COMMUN ACM, V62, P66, DOI 10.1145/3338843
   Johnson S. C., 1978, COMP SCI TECH REP, P78
   JONES CB, 1991, SYSTEMATIC SOFTWARE
   Lamport L., 2002, SPECIFYING SYSTEMS T
   Lopes CV, 2015, ACM SIGPLAN NOTICES, V50, P675, DOI [10.1145/2858965.2814300, 10.1145/2814270.2814300]
   Nakajima S, 2015, LECT NOTES COMPUT SC, V8979, P97, DOI 10.1007/978-3-319-17404-4_7
   Nelson T., 2022, LOGIC SYSTEMS
   Newcombe C, 2015, COMMUN ACM, V58, P66, DOI 10.1145/2699417
   Huynh N, 2019, COMPUT J, V62, P1707, DOI 10.1093/comjnl/bxz039
   Noble J., 2008, Formal Methods in Computer Science Education, P81
   org.alloytools.alloy, 2021, US
   Parr T., 2013, The Definitive ANTLR 4 Reference
   Sree-Kumar A, 2016, ELECTRON P THEOR COM, P46, DOI 10.4204/EPTCS.206.5
   Sullivan A., 2017, PROC 6 WORKSHOP SOFT
   Sun ZC, 2021, TOP CATAL, V64, P521, DOI 10.1007/s11244-021-01440-1
   Tariq K., 2021, THESIS DR CHERITON S
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Wang WX, 2019, IEEE INT CONF SOFTW, P228, DOI 10.1109/ICST.2019.00031
   Wayne H., 2018, FORMALLY SPECIFYING
   Wust J., 2021, SDMETRICS
   Zave P, 2012, ACM SIGCOMM COMP COM, V42, P50, DOI 10.1145/2185376.2185383
   Zheng GL, 2020, LECT NOTES COMPUT SC, V12076, P29, DOI 10.1007/978-3-030-45234-6_2
NR 49
TC 1
Z9 1
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 743
EP 759
DI 10.1109/TSE.2022.3162985
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900015
OA Green Published
DA 2024-07-18
ER

PT J
AU Parasaram, N
   Barr, ET
   Mechtaev, S
AF Parasaram, Nikhil
   Barr, Earl T.
   Mechtaev, Sergey
TI Trident: Controlling Side Effects in Automated Program Repair
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE program repair; program synthesis; symbolic execution; side effects
AB The goal of program repair is to eliminate a bug in a given program by automatically modifying its source code. The majority of real-world software is written in imperative programming languages. Each function or expression in imperative code may have side effects, observable effects beyond returning a value. Existing program repair approaches have a limited ability to handle side effects. Previous test-driven semantic repair approaches only synthesise patches without side effects. Heuristic repair approaches generate patches with side effects only if suitable code fragments exist in the program or a database of repair patterns, or can be derived from training data. This work introduces Trident, the first test-driven program repair approach that synthesizes patches with side effects without relying on the plastic surgery hypothesis, a database of patterns, or training data. Trident relies on an interplay of several parts. First, it infers a specification for synthesising side-effected patches using symbolic execution with a custom state merging strategy that alleviates path explosion due to side effects. Second, it uses a novel component-based patch synthesis approach that supports lvalues, values that appear on the left-hand sides of assignments. In an evaluation on open-source projects, Trident successfully repaired 6 out of 10 real bugs that require insertion of new code with side effects, which previous techniques do not therefore repair. Evaluated on the ManyBugs benchmark, Trident successfully repaired two new bugs that previous approaches could not. Adding patches with side effects to the search space can exacerbate test-overfitting. We experimentally demonstrate that the simple heuristic of preferring patches with the fewest side effects alleviates the problem. An evaluation on a large number of smaller programs shows that this strategy reduces test-overfitting caused by side-effects, increasing the rate of correct patches from 33.3% to 58.3%.
C1 [Parasaram, Nikhil; Barr, Earl T.; Mechtaev, Sergey] UCL, London WC1E 6BT, England.
C3 University of London; University College London
RP Mechtaev, S (corresponding author), UCL, London WC1E 6BT, England.
EM nikhil.parasaram.19@ucl.ac.uk; e.barr@ucl.ac.uk; mechtaev@gmail.com
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Afzal A, 2021, IEEE T SOFTWARE ENG, V47, P2162, DOI 10.1109/TSE.2019.2944914
   Ahmad Wasi Uddin, 2021, P 2021 C N AM CHAPT, P2655
   Alur R, 2015, NATO SCI PEAC SECUR, V40, P1, DOI 10.3233/978-1-61499-495-4-1
   Anand S, 2008, LECT NOTES COMPUT SC, V4963, P367, DOI 10.1007/978-3-540-78800-3_28
   [Anonymous], DOCKER OS VIRTUALISA
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Barrett C, 2009, FRONT ARTIF INTEL AP, V185, P825, DOI 10.3233/978-1-58603-929-5-825
   BARRON DW, 1963, COMPUT J, V6, P134, DOI 10.1093/comjnl/6.2.134
   Böhme M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P117, DOI 10.1145/3106237.3106255
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Clang, LLVMS DEF FRONT
   D'Antoni L, 2016, LECT NOTES COMPUT SC, V9780, P383, DOI 10.1007/978-3-319-41540-6_21
   Gao X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P8, DOI 10.1145/3293882.3330558
   Gario M., 2015, PROC SMT WORKSHOP, V2015
   Ghanbari A, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1118, DOI 10.1109/ASE.2019.00116
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Jha S., 2010, P 32 ACM IEEE INT C, V1, P215, DOI DOI 10.1145/1806799.1806833
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Jiang N, 2021, PROC INT CONF SOFTW, P1161, DOI 10.1109/ICSE43902.2021.00107
   Kapus T, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P874, DOI 10.1145/3314221.3314610
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kim J, 2019, EMPIR SOFTW ENG, V24, P4071, DOI 10.1007/s10664-019-09742-5
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   Kuznetsov V, 2012, ACM SIGPLAN NOTICES, V47, P193, DOI 10.1145/2345156.2254088
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le XBD, 2018, EMPIR SOFTW ENG, V23, P3007, DOI 10.1007/s10664-017-9577-2
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Leino KRM, 2012, ACM SIGPLAN NOTICES, V47, P411, DOI 10.1145/2398857.2384646
   Long F, 2016, PROC INT CONF SOFTW, P702, DOI 10.1145/2884781.2884872
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Martinez M, 2019, J SYST SOFTWARE, V151, P65, DOI 10.1016/j.jss.2019.01.069
   Mechtaev S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P389, DOI 10.1145/3236024.3236049
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   Polikarpova N, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290385
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qiu XK, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133889
   Sen K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P842, DOI 10.1145/2786805.2786830
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Tan SH, 2017, PROC IEEE ACM INT C, P180, DOI 10.1109/ICSE-C.2017.76
   Nguyen TT, 2021, LECT NOTES COMPUT SC, V12597, P376, DOI 10.1007/978-3-030-67067-2_17
   van Tonder R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/3180155.3180250
   Verma S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P163, DOI 10.1145/3106237.3106263
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   White M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P479, DOI [10.1109/saner.2019.8668043, 10.1109/SANER.2019.8668043]
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Yang JQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P831, DOI 10.1145/3106237.3106274
NR 55
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 4717
EP 4732
DI 10.1109/TSE.2021.3124323
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Almasri, N
   Korel, B
   Tahat, L
AF Almasri, Nada
   Korel, Bogdan
   Tahat, Luay
TI Verification Approach for Refactoring Transformation Rules of
   State-Based Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Unified modeling language; Software; Automata; Tools; Testing;
   Automation; Task analysis; Extended finite state machine; model
   refactoring; refactoring transformation rules; verification of
   transformations; observable behavior; semantic equivalence of models
ID IMPACT
AB With the increased adoption of Model-Driven Engineering (MDE), where models are being used as the primary artifact of software, it is apparent that greater attention to the quality of the models is necessary. Traditionally, refactoring is used to enhance the quality of software systems at the source-code level; however, applying refactoring at the model level will have a more significant improvement on the system. After refactoring a model, proving that it still preserves its original behavior is crucial. In this paper, we present a process for applying refactoring transformations to the Extended Finite State Machine (EFSM) models using verified transformation rules that have been proven to preserve the model's original behavior. We provide a simplified three-step verification approach that can be used to prove that a transformation rule will generate a transformed model that is semantically equivalent to the original model. To do this, we formally define semantical equivalence at three different levels of granularity: models, sub-models, and transitions. Additionally, we introduce five model transformation rules and we demonstrate how our verification approach is used to prove the correctness of these rules. Finally, we present two case studies where we apply the proposed transformation process which adopts the five verified transformation rules. Using model testing, we show that applying a sequence of transformations using the verified transformation rules will keep both the original and the transformed model semantically equivalent. Additionally, the case studies show that model transformation can be used to enhance certain pre-defined model characteristics.
C1 [Almasri, Nada; Tahat, Luay] Gulf Univ Sci & Technol, MIS Dept, Hawally 32093, Kuwait.
   [Korel, Bogdan] IIT, Dept Comp Sci, Chicago, IL 60616 USA.
C3 Gulf University for Science & Technology (GUST); Illinois Institute of
   Technology
RP Almasri, N (corresponding author), Gulf Univ Sci & Technol, MIS Dept, Hawally 32093, Kuwait.
EM almasri.n@gust.edu.kw; korel@iit.edu; tahat.l@gust.edu.kw
RI Almasri, Nada/AAC-1564-2020; Tahat, Luay/K-1917-2018
OI Almasri, Nada/0000-0001-8222-9180; Tahat, Luay/0000-0003-3413-2039
FU Kuwait Foundation for Advancement of Science (KFAS) [P11618QS-01]
FX This work was supported by the Kuwait Foundation for Advancement of
   Science (KFAS) through Project P11618QS-01
CR Ab Rahim L, 2015, SOFTW SYST MODEL, V14, P1003, DOI 10.1007/s10270-013-0358-0
   Almasri N, 2017, SOFTWARE QUAL J, V25, P601, DOI 10.1007/s11219-016-9316-8
   Amrani M, 2015, J OBJECT TECHNOL, V14, DOI 10.5381/jot.2015.14.1.a3
   Androutsopoulos K, 2013, IEEE T SOFTWARE ENG, V39, P892, DOI 10.1109/TSE.2012.72
   Androutsopoulos K, 2009, PROC IEEE INT CONF S, P287, DOI 10.1109/ICSM.2009.5306309
   Androutsopoulos K, 2009, LECT NOTES COMPUT SC, V5503, P216
   Asztalos Mark, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P15, DOI 10.1109/ICST.2010.42
   Baudry B., 2006, PROC WORKSHOP INTEGR
   Baudry B, 2010, COMMUN ACM, V53, P139, DOI 10.1145/1743546.1743583
   Boussaïd I, 2017, AUTOMAT SOFTW ENG, V24, P233, DOI 10.1007/s10515-017-0215-4
   Calegari D, 2013, ELECTRON NOTES THEOR, V292, P5, DOI 10.1016/j.entcs.2013.02.002
   Cariou E., 2010, OCL CONTRACTS VERIFI
   Chen K, 2005, LECT NOTES COMPUT SC, V3748, P115
   CHENG KT, 1993, ACM IEEE D, P86
   Dalal S. R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P285, DOI 10.1109/ICSE.1999.841019
   Dick J., 1993, FME'93: Industrial-Strength Formal Methods. First International Symposium of Formal Methods Europe Proceedings, P268, DOI 10.1007/BFb0024651
   Fleck M, 2017, IEEE T SOFTWARE ENG, V43, P1009, DOI 10.1109/TSE.2017.2654255
   Fleurey F, 2004, SIVOES-MODEVA 2004, PROCEEDINGS, P29, DOI 10.1109/MODEVA.2004.1425846
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Hamdane M. E., 2018, PROC INT C EUROPE MI, P290
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Kolandouz-Rahimi S, 2014, SCI COMPUT PROGRAM, V85, P5, DOI 10.1016/j.scico.2013.07.013
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Korel B, 2004, PROG COMPREHEN, P246, DOI 10.1109/WPC.2004.1311068
   Korel B, 2003, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.2003.1235404
   Korel B, 2002, PROC IEEE INT CONF S, P214, DOI 10.1109/ICSM.2002.1167768
   Korel B, 2018, LECT NOTES COMPUT SC, V11036, P262, DOI 10.1007/978-3-319-99241-9_14
   Krause C., 2021, ECLIPSE FDN ECLIPSE
   Lano K, 2015, FORM ASP COMPUT, V27, P193, DOI 10.1007/s00165-014-0313-z
   Lin YH, 2005, MODEL-DRIVEN SOFTWARE DEVELOPMENT, P219, DOI 10.1007/3-540-28554-7_10
   Lúcio L, 2016, SOFTW SYST MODEL, V15, P647, DOI 10.1007/s10270-014-0429-x
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Mens T, 2006, LECT NOTES COMPUT SC, V4199, P200
   Misbhauddin M, 2015, EMPIR SOFTW ENG, V20, P206, DOI 10.1007/s10664-013-9283-7
   Mkaouer MW, 2014, LECT NOTES COMPUT SC, V8636, P168
   Nierstrasz O., 2013, MODEL DRIVEN ENG LAN
   O'Keeffe M, 2008, J SOFTW MAINT EVOL-R, V20, P345, DOI 10.1002/smr.378
   OMG, 2003, MDA GUID VERS 1 0 1
   Räihä O, 2010, COMPUT SCI REV, V4, P203, DOI 10.1016/j.cosrev.2010.06.001
   Sánchez Cuadrado J, 2006, LECT NOTES COMPUT SC, V4066, P158
   Stenzel K, 2011, LECT NOTES COMPUT SC, V6981, P533, DOI 10.1007/978-3-642-24485-8_39
   Tahat LH, 2001, P INT COMP SOFTW APP, P489, DOI 10.1109/CMPSAC.2001.960658
   Tahat L, 2017, SOFTWARE QUAL J, V25, P703, DOI 10.1007/s11219-016-9330-x
   Tahat L, 2012, SOFTW TEST VERIF REL, V22, P481, DOI 10.1002/stvr.461
   Vaysburg B., 2001, P 18 INT C TEST COMP, P130
   Walkinshaw N, 2016, EMPIR SOFTW ENG, V21, P811, DOI 10.1007/s10664-015-9367-7
   Wang J, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P432, DOI 10.1109/ASWEC.2008.42
   Weis T, 2003, IEEE SOFTWARE, V20, P46, DOI 10.1109/MS.2003.1231151
NR 51
TC 1
Z9 1
U1 2
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 3833
EP 3861
DI 10.1109/TSE.2021.3106589
PG 29
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800007
DA 2024-07-18
ER

PT J
AU Neto, PADS
   Mannan, UA
   de Almeida, ES
   Nagappan, N
   Lo, D
   Kochhar, PS
   Gao, CY
   Ahmed, I
AF da Mota Silveira Neto, Paulo Anselmo
   Mannan, Umme Ayda
   de Almeida, Eduardo Santana
   Nagappan, Nachiappan
   Lo, David
   Kochhar, Pavneet Singh
   Gao, Cuiyun
   Ahmed, Iftekhar
TI A Deep Dive into the Impact of COVID-19 on Software Development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE COVID-19; Software; Pandemics; Productivity; Data mining; Software
   development management; Computer bugs; COVID-19; empirical study; survey
   and mining software repository (MSR)
ID GITHUB
AB The COVID-19 pandemic is considered as the most crucial global health calamity of the century. It has impacted different business sectors around the world and software development is not an exception. This study investigates the impact of COVID-19 on software projects and software development professionals. We conducted a mining software repository study based on 100 GitHub projects developed in Java using ten different metrics. Next, we surveyed 279 software development professionals for better understanding the impact of COVID-19 on daily activities and wellbeing. We identified 12 observations related to productivity, code quality, and wellbeing. Our findings highlight that the impact of COVID-19 is not binary (reduce productivity versus increase productivity) but rather a spectrum. For many of our observations, substantial proportions of respondents have differing opinions from each other. We believe that more research is needed to uncover specific conditions that cause certain outcomes to be more prevalent.
C1 [da Mota Silveira Neto, Paulo Anselmo] Univ Fed Rural Pernambuco, Dept Comp Sci, BR-52171900 Recife, PE, Brazil.
   [Mannan, Umme Ayda] Oregon State Univ, Dept Comp Sci, Corvallis, OR 97331 USA.
   [de Almeida, Eduardo Santana] Univ Fed Bahia, Dept Comp Sci, BR-40170110 Salvador, BA, Brazil.
   [Nagappan, Nachiappan; Kochhar, Pavneet Singh] Microsoft Res, Redmond, WA 98052 USA.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
   [Gao, Cuiyun] Chinese Univ Hong Kong, Dept Comp Sci & Engn, Hong Kong, Peoples R China.
   [Ahmed, Iftekhar] Univ Calif Irvine, Dept Informat, Irvine, CA 92697 USA.
C3 Universidade Federal Rural de Pernambuco (UFRPE); Oregon State
   University; Universidade Federal da Bahia; Microsoft; Singapore
   Management University; Chinese University of Hong Kong; University of
   California System; University of California Irvine
RP Neto, PADS (corresponding author), Univ Fed Rural Pernambuco, Dept Comp Sci, BR-52171900 Recife, PE, Brazil.
EM paulo.motant@ufrpe.br; mannanu@oregonstate.edu; esa@rise.com.br;
   nachin@microsoft.com; davidlo@ismu.edu.sg;
   Pavneet.Kochhar@microsoft.com; gcyydxf@gmail.com; iftekha@uci.edu
RI Silveira, Paulo/AFR-7826-2022; de Almeida, Eduardo/JJC-2493-2023; Lo,
   David/A-2493-2012
OI Almeida, Eduardo/0000-0002-9312-6715; Lo, David/0000-0002-4367-7201;
   Ahmed, Iftekhar/0000-0001-8221-5352
FU INES; CNPq [465614/2014-0]; CAPES [88887.136410/2017-00]; FACEPE
   [APQ-0399-1.03/17]; PRONEX [APQ/0388-1.03/14]
FX This work was supported in part by INES (www.ines.org.br), CNPq under
   Grant 465614/2014-0, in part by CAPES under Grant 88887.136410/2017-00,
   and in part by FACEPE under Grants APQ-0399-1.03/17 and PRONEX
   APQ/0388-1.03/14. Wewould like to thank all the participants in our
   survey.
CR Agrawal A, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P245, DOI 10.1145/3183519.3183549
   Barr ET, 2012, LECT NOTES COMPUT SC, V7212, P316, DOI 10.1007/978-3-642-28872-2_22
   Bhutkar G, 2019, LECT NOTES COMPUT SC, V11749, P754, DOI 10.1007/978-3-030-29390-1_75
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Casalnuovo C, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P396, DOI 10.1145/3092703.3098230
   Cataldo Marcelo., 2008, Proceedings of the 2008 International Workshop on Cooperative and Human Aspects of Software Engineering, CHASE '08, Co-located with the 13th International Conference on Software Engineering, ICSE 2008, May 10, 2008 - May 18, 2008, P25
   Chakraborty I, 2020, SCI TOTAL ENVIRON, V728, DOI 10.1016/j.scitotenv.2020.138882
   Chen Emily, 2020, JMIR Public Health Surveill, V6, pe19273, DOI 10.2196/19273
   Cucinotta Domenico, 2020, Acta Biomed, V91, P157, DOI 10.23750/abm.v91i1.9397
   Delorey D. P., 2007, 1 INT WORKSHOP EMERG, P8
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Dong ES, 2020, LANCET INFECT DIS, V20, P533, DOI 10.1016/S1473-3099(20)30120-1
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Fauci AS, 2020, NEW ENGL J MED, V382, P1268, DOI 10.1056/NEJMe2002387
   Fisher RA, 1922, J R STAT SOC, V85, P87, DOI 10.2307/2340521
   Ford D, 2021, Arxiv, DOI arXiv:2008.11147
   Fucci D, 2020, IEEE T SOFTWARE ENG, V46, P1, DOI 10.1109/TSE.2018.2834900
   Graziotin D, 2018, J SYST SOFTWARE, V140, P32, DOI 10.1016/j.jss.2018.02.041
   Herbsleb J, 2009, COMMUN ACM, V52, P84, DOI 10.1145/1536616.1536638
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Johnson B, 2021, IEEE T SOFTWARE ENG, V47, P736, DOI 10.1109/TSE.2019.2903053
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Krishna R, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P306, DOI 10.1145/3183519.3183548
   Kuutila M, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239245
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Li Q., 2020, NEW ENGL J MED, V382, P1199, DOI [DOI 10.1056/NEJMOA2001316, DOI 10.1056/NEJMoa2001316, 10.1056/NEJMoa2001316]
   Mason Jennifer, 2018, Qualitative Researching
   Menzies T, 2017, EMPIR SOFTW ENG, V22, P1903, DOI 10.1007/s10664-016-9469-x
   Meyer Andre N., 2017, Proceedings of the ACM on Human-Computer Interaction, V1, DOI 10.1145/3134714
   Meyer AN, 2021, IEEE T SOFTWARE ENG, V47, P863, DOI 10.1109/TSE.2019.2904957
   Miller C, 2021, PROC INT CONF SOFTW, P624, DOI 10.1109/ICSE43902.2021.00064
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Murphy-Hill E, 2021, IEEE T SOFTWARE ENG, V47, P582, DOI 10.1109/TSE.2019.2900308
   Rahman A., 2021, J. Softw. Eng. Res. Dev., V9
   Rahman A, 2018, PROCEEDINGS OF THE 4TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN'18), P8, DOI 10.1145/3278142.3278149
   Ralph P, 2020, EMPIR SOFTW ENG, V25, P4927, DOI 10.1007/s10664-020-09875-y
   Ralph P, 2018, SCI COMPUT PROGRAM, V156, P68, DOI 10.1016/j.scico.2018.01.002
   Saldana J., 2015, The coding manual for qualitative researchers
   Shull F., 2008, Guide to Advanced Empirical Software Engineering, DOI DOI 10.1007/978-1-84800-044-5
   Shumway RH, 2011, SPRINGER TEXTS STAT, P1, DOI 10.1007/978-1-4419-7865-3
   Storey MA, 2021, IEEE T SOFTWARE ENG, V47, P2125, DOI 10.1109/TSE.2019.2944354
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Verity R, 2020, LANCET INFECT DIS, V20, P669, DOI 10.1016/S1473-3099(20)30243-7
   Walker PGT, 2020, SCIENCE, V369, P413, DOI 10.1126/science.abc0035
   Wohlin C., 2012, Experimentation in Software Engineering
   Xia X, 2017, PROC IEEE INT CONF S, P318, DOI 10.1109/ICSME.2017.50
   Zhang ED, 2020, Arxiv, DOI arXiv:2004.05125
NR 48
TC 14
Z9 14
U1 1
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3342
EP 3360
DI 10.1109/TSE.2021.3088759
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500008
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Mandrioli, C
   Maggio, M
AF Mandrioli, Claudio
   Maggio, Martina
TI Testing Self-Adaptive Software With Probabilistic Guarantees on
   Performance Metrics: Extended and Comparative Results
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Software; Probabilistic logic; Uncertainty; Tools; Servers;
   Monte Carlo methods; Testing; self-adaptive software; autonomous systems
ID QOS
AB This paper discusses methods to test the performance of the adaptation layer in a self-adaptive system. The problem is notoriously hard, due to the high degree of uncertainty and variability inherent in an adaptive software application. In particular, providing any type of formal guarantee for this problem is extremely difficult. In this paper we propose the use of a rigorous probabilistic approach to overcome the mentioned difficulties and provide probabilistic guarantees on the software performance. We describe the set up needed for the application of a probabilistic approach. We then discuss the traditional tools from statistics that could be applied to analyse the results, highlighting their limitations and motivating why they are unsuitable for the given problem. We propose the use of a novel tool - the Scenario Theory - to overcome said limitations. We conclude the paper with a thorough empirical evaluation of the proposed approach, using three adaptive software applications: the Tele-Assistance Service, the Self-Adaptive Video Encoder, and the Traffic Reconfiguration via Adaptive Participatory Planning. With the first, we empirically expose the trade-off between data collection and confidence in the testing campaign. With the second, we demonstrate how to compare different adaptation strategies. With the third, we discuss the role of the randomisation in the selection of test inputs. In the evaluation, we apply the scenario theory and also classical statistical tools: Monte Carlo and Extreme Value Theory. We provide a complete evaluation and a thorough comparison of the confidence and guarantees that can be given with all the approaches.
C1 [Mandrioli, Claudio; Maggio, Martina] Lund Univ, Dept Automat Control, SE-22100 Lund, Sweden.
   [Maggio, Martina] Saarland Univ, Dept Comp Sci, D-66123 Saarbrucken, Germany.
C3 Lund University; Saarland University
RP Mandrioli, C (corresponding author), Lund Univ, Dept Automat Control, SE-22100 Lund, Sweden.
EM claudio.mandrioli@control.lth.se; maggio@cs.uni-saarland.de
RI Mandrioli, Claudio/ABL-8873-2022
OI Mandrioli, Claudio/0000-0002-7013-1191
FU Wallenberg AI, Autonomous Systems and Software Program (WASP) - Knut and
   Alice Wallenberg Foundation; European Union [871259]; H2020 - Industrial
   Leadership [871259] Funding Source: H2020 - Industrial Leadership
FX This work was supported in part by the Wallenberg AI, Autonomous Systems
   and Software Program (WASP) funded by the Knut and Alice Wallenberg
   Foundation and in part by the European Union's Horizon 2020 research and
   innovation programme under Grant 871259 (ADMORPH). The responsibility
   for the content remains with the authors.
CR Abu-Mostafa Y. S., 2012, Learning from Data: A Short Course
   [Anonymous], 2014, P ACM IEEE INT C AUT, DOI DOI 10.1145/2642937.2642986
   Arcuri Andrea., 2011, ISSTA
   Bahar RI, 2019, IEEE VLSI TEST SYMP
   Baresi L, 2007, IET SOFTW, V1, P219, DOI 10.1049/iet-sen:20070027
   Bertolino Antonia, 2019, From Software Engineering to Formal Methods and Tools, and Back: Essays Dedicated to Stefania Gnesi on the Occasion of Her 65th Birthday. Lecture Notes in Computer Science (LNCS 11865), P56, DOI 10.1007/978-3-030-30985-5_5
   Bertolino A, 2003, LECT NOTES COMPUT SC, V2804, P122
   Bixby R., 2011, SER PRINCETON SERIES
   Böhme M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P5, DOI 10.1109/ICSE-NIER.2019.00010
   Briand L, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P789, DOI 10.1145/2889160.2889212
   Calafiore GC, 2006, IEEE T AUTOMAT CONTR, V51, P742, DOI 10.1109/TAC.2006.875041
   Calafiore GC, 2013, AUTOMATICA, V49, P370, DOI 10.1016/j.automatica.2012.11.012
   Canfora G., 2006, IT Professional, V8, P10, DOI 10.1109/MITP.2006.51
   Caporuscio M, 2017, SOFTWARE PRACT EXPER, V47, P1905, DOI 10.1002/spe.2502
   Cazorla FranciscoJ., 2013, WCET, P64
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Cheng Betty H. C., 2014, Models@run.time. Foundations, Applications, and Roadmaps. LNCS: 8378, P101
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   D'Ippolito N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P688, DOI 10.1145/2568225.2568264
   De Haan L., 2007, Extreme Value Theory: An Introduction
   Dorn J, 2020, IEEE INT CONF AUTOM, P684, DOI 10.1145/3324884.3416620
   Dutta S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P729, DOI 10.1145/3338906.3338972
   Dutta S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P574, DOI 10.1145/3236024.3236057
   Edwards R, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P12, DOI 10.1145/3194133.3194142
   Embrechts P., 2000, DERIVATIVES USE TRAD, V6, P449
   Embrechts P., 1997, MODELLING EXTREMAL E, DOI 10.1007/978-3-642-33483-2
   Filieri A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P283, DOI 10.1109/ASE.2011.6100064
   Filieri A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P299, DOI 10.1145/2568225.2568272
   Fisher RA., 1958, The Genetical Theory of Natural Selection
   GARCIA CE, 1989, AUTOMATICA, V25, P335, DOI 10.1016/0005-1098(89)90002-2
   Gerostathopoulos I, 2019, 2019 IEEE/ACM 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2019), P32, DOI 10.1109/SEAMS.2019.00014
   González CA, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P176, DOI 10.1145/3239372.3239409
   Gulisano V., 2017, Proceedings of the 11th ACM International Conference on Distributed and Event-based Systems, P191
   Gunzburger MD, 1995, Flow control, the IMA volumes in mathematics and its applications
   Hänsel J, 2015, 2015 IEEE NINTH INTERNATIONAL CONFERENCE ON SELF-ADAPTIVE AND SELF-ORGANIZING SYSTEMS WORKSHOPS (SASOW), P134, DOI 10.1109/SASOW.2015.27
   Hervieu Aymeric, 2012, Testing Software and Systems. 24th IFIP WG 6.1 International Conference (ICTSS 2012). Proceedings, P24, DOI 10.1007/978-3-642-34691-0_4
   Hierons RM, 2009, J SYST SOFTWARE, V82, P1804, DOI 10.1016/j.jss.2009.06.030
   Hwang SY, 2007, INFORM SCIENCES, V177, P5484, DOI 10.1016/j.ins.2007.07.011
   Jiménez A, 2005, GROUP DECIS NEGOT, V14, P109, DOI 10.1007/s10726-005-2406-9
   Johnson O., 2004, INFORM THEORY CENTRA
   Joshi K, 2019, PROC INT CONF SOFTW, P608, DOI 10.1109/ICSE.2019.00071
   Korver Brian, 1994, INT J COMPUT APPL
   Lopez PA, 2018, IEEE INT C INTELL TR, P2575, DOI 10.1109/ITSC.2018.8569938
   Maggio C. Martina, 2020, ARTIFACT ESEC FSE 20
   Maggio Martina, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P123, DOI 10.1109/SEAMS.2017.16
   Maggio M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P373, DOI 10.1145/3106237.3106247
   Mandrioli C, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1002, DOI 10.1145/3368089.3409685
   Mehmood MA, 2018, INT CONF SOFTW ENG, P104, DOI 10.1109/ICSESS.2018.8663920
   Micskei Zoltan, 2012, Agent and Multi-Agent Systems. Technologies and Applications. Proceedings 6th KES International Conference, KES-AMSTA 2012, P504, DOI 10.1007/978-3-642-30947-2_55
   Moreno Gabriel A., 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P42, DOI 10.1109/SEAMS.2017.2
   Moreno GA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P1, DOI 10.1145/2786805.2786853
   Munoz F., 2009, ARXIV
   Neves VD, 2018, 2018 IEEE/ACM 6TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS (SESOS 2018), P29, DOI 10.1145/3194754.3194758
   Pournaras E, 2018, ACM T AUTON ADAP SYS, V13, DOI 10.1145/3277668
   Qin Y, 2016, J SYST SOFTWARE, V120, P70, DOI 10.1016/j.jss.2016.07.002
   Ramponi FA, 2018, EUR J OPER RES, V267, P1003, DOI 10.1016/j.ejor.2017.11.022
   Rashid, 2011, INVESTIGATING TESTIN
   Reichstaller A, 2018, INT CONF SELF SELF, P80, DOI 10.1109/SASO.2018.00019
   Robert C., 2005, SPRINGER TEXTS STAT, V47, P243
   Robert Christian P., 2010, M CARLO OPTIMIZATION, P125, DOI 10.1007/978-1-4419-1576-4_5
   Rosario Sidney, 2008, IEEE Transactions on Services Computing, V1, P187, DOI 10.1109/TSC.2008.17
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Santinelli L., 2014, 14th International Workshop on Worst-Case Execution Time Analysis
   Santos I. d. S., 2017, THESIS U FEDERAL CEA
   Shevtsov S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P229, DOI 10.1145/2950290.2950301
   Singh Harnam, 2013, INT J COMPUT APPL, V69, p41s44, DOI 10.5120/11834-7554
   Siqueira BR, 2016, I BRAZILIAN SYMPOSIUM ON SYSTEMATIC AND AUTOMATED SOFTWARE TESTING (SAST 2016), DOI 10.1145/2993288.2993294
   Sutton R. S., 1998, Adaptive Computation and Machine Learning
   Tramontana P, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3339836
   Trubiani C, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P77, DOI 10.1109/ICSE-NIER.2019.00028
   Tse T. H., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P458, DOI 10.1109/CMPSAC.2004.1342879
   Wang H, 2014, ACM T AUTON ADAP SYS, V9, DOI 10.1145/2620000
   Wang YL, 2019, IEEE INT WORKSH MULT, DOI 10.1109/mmsp.2019.8901772
   Wang Z, 2004, IEEE T IMAGE PROCESS, V13, P600, DOI 10.1109/TIP.2003.819861
   Welsh Kristopher, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P290, DOI 10.1109/ICSTW.2010.57
   Weyns D., 2012, P 2012 WORKSH DYN AN, P24
   Weyns D, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P88, DOI 10.1109/SEAMS.2015.27
   Yatoh K., 2015, P 2015 INT S SOFTWAR, P316, DOI DOI 10.1145/2771783.2771805
   Yu L, 2014, INT CONF SOFTW SECUR, P137, DOI 10.1109/SERE.2014.27
   Zeller A., 2019, The fuzzing book
NR 80
TC 1
Z9 1
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3554
EP 3572
DI 10.1109/TSE.2021.3101130
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500020
DA 2024-07-18
ER

PT J
AU Chen, T
   Li, ZH
   Luo, XP
   Wang, XF
   Wang, T
   He, ZY
   Fang, KZ
   Zhang, YF
   Zhu, H
   Li, HW
   Cheng, Y
   Zhang, XS
AF Chen, Ting
   Li, Zihao
   Luo, Xiapu
   Wang, Xiaofeng
   Wang, Ting
   He, Zheyuan
   Fang, Kezhao
   Zhang, Yufei
   Zhu, Hang
   Li, Hongwei
   Cheng, Yan
   Zhang, Xiaosong
TI SigRec: Automatic Recovery of Function Signatures in Smart Contracts
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Smart contracts; Databases; Reverse engineering; Semantics; Lenses;
   Layout; Tools; Smart contract; function signature; Ethereum; automatic
   recovery; type-aware symbolic execution
AB Millions of smart contracts have been deployed onto Ethereum for providing various services, whose functions can be invoked. For this purpose, the caller needs to know the function signature of a callee, which includes its function id and parameter types. Such signatures are critical to many applications focusing on smart contracts, e.g., reverse engineering, fuzzing, attack detection, and profiling. Unfortunately, it is challenging to recover the function signatures from contract bytecode, since neither debug information nor type information is present in the bytecode. To address this issue, prior approaches rely on source code, or a collection of known signatures from incomplete databases or incomplete heuristic rules, which, however, are far from adequate and cannot cope with the rapid growth of new contracts. In this paper, we propose a novel solution that leverages how functions are handled by Ethereum virtual machine (EVM) to automatically recover function signatures. In particular, we exploit how smart contracts determine the functions to be invoked to locate and extract function ids, and propose a new approach named type-aware symbolic execution (TASE) that utilizes the semantics of EVM operations on parameters to identify the number and the types of parameters. Moreover, we develop SigRec, a new tool for recovering function signatures from contract bytecode without the need of source code and function signature databases. The extensive experimental results show that SigRec outperforms all existing tools, achieving an unprecedented 98.7 percent accuracy within 0.074 seconds. We further demonstrate that the recovered function signatures are useful in attack detection, fuzzing and reverse engineering of EVM bytecode.
C1 [Chen, Ting; He, Zheyuan; Fang, Kezhao; Zhang, Yufei; Zhu, Hang; Li, Hongwei; Zhang, Xiaosong] Univ Elect Sci & Technol China, Chengdu 610054, Peoples R China.
   [Li, Zihao; Luo, Xiapu] Hong Kong Polytech Univ, Hong Kong, Peoples R China.
   [Wang, Xiaofeng] Indiana Univ, Bloomington, IN 47405 USA.
   [Wang, Ting] Penn State Univ, State Coll, PA 16801 USA.
   [Cheng, Yan] Ant Grp, Hangzhou 310012, Peoples R China.
C3 University of Electronic Science & Technology of China; Hong Kong
   Polytechnic University; Indiana University System; Indiana University
   Bloomington; Pennsylvania Commonwealth System of Higher Education
   (PCSHE); Pennsylvania State University
RP Luo, XP (corresponding author), Hong Kong Polytech Univ, Hong Kong, Peoples R China.
EM brokendragon@uestc.edu.cn; gforiq@qq.com; csxluo@comp.polyu.edu.hk;
   xw7@indiana.edu; inbox.ting@gmail.com; ecjgvmhc@gmail.com;
   fangkezhao@126.com; 2235285714@qq.com; johnsonzxs@uestc.edu.cn;
   hongweili@uestc.edu.cn; xiaoge.cy@antgroup.com; 568991738@qq.com
RI yu, xiao/KFT-1725-2024; zhang, yu/HNS-5948-2023; zhang,
   weijie/JQX-1450-2023; Zhang, Yufei/HNS-5920-2023; Zhang,
   yufei/HHC-7375-2022; Wang, Jiachen/KFT-0161-2024
OI Zhang, Yufei/0000-0003-1979-6283; Wang, XiaoFeng/0000-0002-0607-4946;
   Li, Zihao/0000-0002-4382-577X
FU National Key R&D Program of China [2018YFB0804100]; National Natural
   Science Foundation of China [61872057]; HK RGC Project [152193/19E];
   National Science Foundation [1951729, 1953813, 1953893]; Division Of
   Computer and Network Systems; Direct For Computer & Info Scie & Enginr
   [1953813, 1953893] Funding Source: National Science Foundation; Div Of
   Information & Intelligent Systems; Direct For Computer & Info Scie &
   Enginr [1951729] Funding Source: National Science Foundation
FX This work was supported in part by the National Key R&D Program of China
   under Grant 2018YFB0804100, in part by the National Natural Science
   Foundation of China under Grant 61872057, in part by the HK RGC Project
   under Grant 152193/19E, and in part by the National Science Foundation
   under Grants 1951729, 1953813, and 1953893.
CR 4byte, 2019, WELC ETH FUNCT SIGN
   Albert E, 2018, LECT NOTES COMPUT SC, V11138, P513, DOI 10.1007/978-3-030-01090-4_30
   Albert E, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P386, DOI 10.1145/3293882.3338999
   Anand K., 2013, Proceedings of the 8th ACM European Conference on Computer Systems, EuroSys '13, P295
   [Anonymous], 2011, P NETW DISTR SYST SE
   [Anonymous], 2010, P 17 ANN NETW DISTR
   Balakrishnan G, 2004, LECT NOTES COMPUT SC, V2985, P5
   Bao T, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P845
   Beregszaszi A., 2017, BITWISE SHIFTING INS
   Brent L, 2018, Arxiv, DOI arXiv:1809.03981
   Caballero J., 2009, PROC NETW DISTRIB SY, P1
   Chen T, 2019, INT CON DISTR COMP S, P1369, DOI 10.1109/ICDCS.2019.00137
   Chen T, 2021, IEEE T EMERG TOP COM, V9, P1433, DOI 10.1109/TETC.2020.2979019
   Chen T, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1503, DOI 10.1145/3319535.3345664
   Chen T, 2018, IEEE INFOCOM SER, P1484, DOI 10.1109/INFOCOM.2018.8486401
   Chen T, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P81, DOI 10.1145/3183399.3183420
   Cheng T. S., 2019, 2019 Compound Semiconductor Week (CSW), DOI 10.1109/ICIPRM.2019.8819142
   ConsenSys, 2019, US
   de Goer F., 2015, PROC 5 PROG PROTECTI, P1
   DEDAUB, 2019, CONTR LIB
   di Angelo M, 2021, Arxiv, DOI arXiv:2001.06909
   di Angelo M, 2020, LECT NOTES COMPUT SC, V12063, P389, DOI 10.1007/978-3-030-54455-3_28
   ElWazeer K, 2013, ACM SIGPLAN NOTICES, V48, P51, DOI 10.1145/2499370.2462165
   Ethereum, 2021, SOL DOC CHANG
   Ethereum, 2019, ETH ETH ETH BLOCKCH
   Ethereum, 2018, SOL V0 5 0 BREAK CHA
   Ethereum, 2017, SOL CALL FUNCT ARR I
   Ethereum, 2019, SOL DOC
   Ethereum, 2021, VYP DOC
   Ethereum Foundation, 2019, OFF GO IMPL ETH PROT
   Eveem, 2019, About us
   Filips123, 2019, COMP NEW WEB3 VERS
   Fröwis M, 2019, LECT NOTES COMPUT SC, V11598, P93, DOI 10.1007/978-3-030-32101-7_7
   Fröwis M, 2017, LECT NOTES COMPUT SC, V10436, P357, DOI 10.1007/978-3-319-67816-0_20
   Ganiev O, 2018, ETHEREUM EVM SMART C
   Grech N, 2019, PROC INT CONF SOFTW, P1176, DOI 10.1109/ICSE.2019.00120
   Guilfanov I, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P357
   Hamilton J, 2009, IEEE INT WORK C SO, P129, DOI 10.1109/SCAM.2009.24
   He JX, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P531, DOI 10.1145/3319535.3363230
   Iperf, 2019, 66 WHO
   JEB, 2019, ETH SMART CONTR DEC
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Kaleem M, 2020, 2020 2ND CONFERENCE ON BLOCKCHAIN RESEARCH & APPLICATIONS FOR INNOVATIVE NETWORKS AND SERVICES (BRAINS), P107, DOI [10.1109/brains49436.2020.9223278, 10.1109/BRAINS49436.2020.9223278]
   Katz O, 2016, ACM SIGPLAN NOTICES, V51, P313, DOI 10.1145/2914770.2837674
   Kristaps, 2019, SOL PROBL BYT DEC
   Lee JongHyup., 2011, P NETWORK DISTRIBUTE
   Luis E, 2017, ENCODE DATA INPUT RA
   MrLuit, 2019, EVM bytecode decompiler
   Nguyen TD, 2020, PROC INT CONF SOFTW, P778, DOI 10.1145/3377811.3380334
   Noonan M, 2016, ACM SIGPLAN NOTICES, V51, P27, DOI [10.1145/2908080.2908119, 10.1145/2980983.2908119]
   Qiao R, 2017, I C DEPEND SYS NETWO, P201, DOI 10.1109/DSN.2017.29
   Shin ECR, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P611
   Suiche M., 2017, DEF CON, V25, P30
   Taducquang, 2019, CANT INST WEB3 VERS
   Torres CF, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P664, DOI 10.1145/3274694.3274737
   Troshina K, 2010, IEEE INT WORK C SO, P179, DOI 10.1109/SCAM.2010.24
   Vessenes P., 2017, ERC20 SHORT ADDRESS
   Wang S, 2017, PROC IEEE INT CONF S, P388, DOI 10.1109/ICSME.2017.59
   Wood G, 2019, Ethereum project yellow paper
   Wuestholz V, 2020, PROC INT CONF SOFTW, P789, DOI 10.1145/3377811.3380388
   Xu ZW, 2017, LECT NOTES COMPUT SC, V10610, P430, DOI 10.1007/978-3-319-68690-5_26
   Zhang JB, 2007, P INT COMP SOFTW APP, P501
   Zhou Y, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1371
NR 63
TC 10
Z9 10
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 3066
EP 3086
DI 10.1109/TSE.2021.3078342
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500021
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wang, WT
   Dumont, F
   Niu, N
   Horton, G
AF Wang, Wentao
   Dumont, Faryn
   Niu, Nan
   Horton, Glen
TI Detecting Software Security Vulnerabilities Via Requirements Dependency
   Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Security; Software; Testing; Manuals; Static analysis; Regulation;
   Scalability; Security requirements; requirements dependency management;
   requirements traceability; vulnerability discovery
AB Cyber attacks targeting software applications have a tremendous impact on our daily life. For example, attackers have utilized vulnerabilities of web applications to steal and gain unauthorized use of sensitive data stored in these systems. Previous studies indicate that security testing is highly precise, and therefore is widely applied to validate individual security requirements. However, dependencies between security requirements may cause additional vulnerabilities. Manual dependency detection faces scalability challenges, e.g., a previous study shows that the pairwise dependency analysis of 40 requirements would take around 12 hours. In this article, we present a novel approach which integrates the interdependency among high-level security requirements, such as those documented in policies, regulations, and standards. We then use automated requirements tracing methods to identify product-level security requirements and their dependencies. Our manual analysis of HIPAA and FIPS 200 leads to the identification of five types of high-level security requirements dependencies, which further inform the automated tracing methods and guide the designs of system-level security tests. Experimental results on five projects in healthcare and education domains show the significant recall improvements at 81 percent. Our case study on a deployed production system uncovers four previously unknown vulnerabilities by using the detected requirements dependencies as test paths, demonstrating our approach's value in connecting requirements engineering with security testing.
C1 [Wang, Wentao; Dumont, Faryn; Niu, Nan] Univ Cincinnati, Dept Elect Engn & Comp Sci, Cincinnati, OH 45221 USA.
   [Horton, Glen] Univ Cincinnati, Univ Cincinnati Lib, Cincinnati, OH 45221 USA.
C3 University System of Ohio; University of Cincinnati; University System
   of Ohio; University of Cincinnati
RP Niu, N (corresponding author), Univ Cincinnati, Dept Elect Engn & Comp Sci, Cincinnati, OH 45221 USA.
EM wang2wt@mail.uc.edu; dumontfn@mail.uc.edu; nan.niu@uc.edu;
   glen.horton@uc.edu
RI Wang, Wentao/KIA-1315-2024
OI Wang, Wentao/0000-0001-9919-7488; Horton, Glen/0000-0001-9741-3212; Niu,
   Nan/0000-0001-5566-2368
FU U.S. National Science Foundation [CCF-1350487]
FX Funding is provided in part by the U.S. National Science Foundation
   (Award CCF-1350487) and theOhioCyber Range.
CR Antunes J, 2010, IEEE T SOFTWARE ENG, V36, P357, DOI 10.1109/TSE.2009.91
   Carlshamre P, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84
   Cleland-Huang J., 2014, FOSE P FUTURE SOFTWA, P55
   Cleland-Huang J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P39
   Emenecker J., 2010, P 32 ACM IEEE INT C, V1, P155, DOI DOI 10.1145/1806799.1806825
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hayes JH, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P138
   Isaac Mike, 2018, FACEBOOK SECURITY BR
   Kafali ÖO, 2017, PROC INT CONF SOFTW, P530, DOI 10.1109/ICSE.2017.55
   Kals S., 2006, P 15 INT C WORLD WID, P247, DOI [DOI 10.1145/1135777.1135817, 10.1145/1135777.1135817]
   Kiezun A, 2009, PROC INT CONF SOFTW, P199, DOI 10.1109/ICSE.2009.5070521
   Kumar, 2014, WORST DAY EBAY MULTI
   National vulnerability database, 2020, CVSS SEVCDISTR OVER
   Nattoch Dag J., 2001, 7 INT WORKSH REQ ENG, P190
   Niu N, 2018, IEEE T COMPUT SOC SY, V5, P1152, DOI 10.1109/TCSS.2018.2872059
   Niu N, 2018, IEEE SOFTWARE, V35, P86, DOI 10.1109/MS.2018.1661332
   Niu N, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P384, DOI 10.1145/2950290.2950354
   Open web application security project, 2020, XSS FILT EVAS CHE SH
   Open web application security project, 2020, OWASP ZED ATT PROX Z
   Panichella A, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P15, DOI 10.1109/SST.2015.10
   Rempel P, 2017, IEEE T SOFTWARE ENG, V43, P777, DOI 10.1109/TSE.2016.2622264
   Robinson WN, 2003, ACM COMPUT SURV, V35, P132, DOI 10.1145/857076.857079
   Ross R.S., 2006, Minimum security requirements for federal information and information systems
   Ruthven I, 2003, KNOWL ENG REV, V18, P95, DOI 10.1017/S0269888903000638
   Scandariato R., 2006, IEEE T SOFTWARE ENG, V32, P4
   Shar LK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P642, DOI 10.1109/ICSE.2013.6606610
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Tripp O., 2013, P 2013 INT S SOFTW T, P347, DOI [DOI 10.1145/2483760.2483776, 10.1145/2483760.2483776]
   United States Department of Education, 2014, PROT STUD PRIV WHIL
   Walden J, 2014, PROC INT SYMP SOFTW, P23, DOI 10.1109/ISSRE.2014.32
   Wang W., 2020, ARTIFACTS DETECTING, DOI [10.7945/q8h2-t712, DOI 10.7945/Q8H2-T712]
   Wang WT, 2019, J IND INF INTEGR, V14, P34, DOI 10.1016/j.jii.2018.11.001
   Wang WT, 2018, IEEE T IND INFORM, V14, P342, DOI 10.1109/TII.2016.2637166
   Wassermann G, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P171, DOI 10.1145/1368088.1368112
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
NR 35
TC 16
Z9 17
U1 3
U2 41
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2022
VL 48
IS 5
BP 1665
EP 1675
DI 10.1109/TSE.2020.3030745
PG 11
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 1I8CJ
UT WOS:000797454000013
OA hybrid
DA 2024-07-18
ER

PT J
AU Cuadrado, JS
   Burgueño, L
   Wimmer, M
   Vallecillo, A
AF Sanchez Cuadrado, Jesus
   Burgueno, Loli
   Wimmer, Manuel
   Vallecillo, Antonio
TI Efficient Execution of ATL Model Transformations Using Static Analysis
   and Parallelism
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Unified modeling language; Analytical models; Engines; Java;
   Scalability; Static analysis; Biological system modeling; Model
   transformation; MDE; ATL; performance; scalability; parallelization
AB Although model transformations are considered to be the heart and soul of Model Driven Engineering (MDE), there are still several challenges that need to be addressed to unleash their full potential in industrial settings. Among other shortcomings, their performance and scalability remain unsatisfactory for dealing with large models, making their wide adoption difficult in practice. This paper presents A2L, a compiler for the parallel execution of ATL model transformations, which produces efficient code that can use existing multicore computer architectures, and applies effective optimizations at the transformation level using static analysis. We have evaluated its performance in both sequential and multi-threaded modes obtaining significant speedups with respect to current ATL implementations. In particular, we obtain speedups between 2.32x and 38.28x for the A2L sequential version, and between 2.40x and 245.83x when A2L is executed in parallel, with expected average speedups of 8.59x and 22.42x, respectively.
C1 [Sanchez Cuadrado, Jesus] Univ Murcia, Dept Informat & Sistemas, Campus Espinardo, Murcia, Spain.
   [Burgueno, Loli] Open Univ Catalonia, IN3, Barcelona 08035, Spain.
   [Vallecillo, Antonio] Univ Malaga, ITIS Software, Bulevar Louis Pasteur 35, Malaga 29071, Spain.
   [Wimmer, Manuel] Johannes Kepler Univ Linz, Business Informat Software Engn, Linz, Austria.
C3 University of Murcia; UOC Universitat Oberta de Catalunya; Universidad
   de Malaga; Johannes Kepler University Linz
RP Cuadrado, JS (corresponding author), Univ Murcia, Dept Informat & Sistemas, Campus Espinardo, Murcia, Spain.
EM jesusc@um.es; lburguenoc@uoc.edu; manuel.wimmer@jku.at; av@lcc.uma.es
RI Vallecillo, Antonio/B-1884-2014; Sanchez Cuadrado, Jesus/L-2365-2013;
   Burgueno, Lola/L-3817-2014
OI Vallecillo, Antonio/0000-0002-8139-9986; Sanchez Cuadrado,
   Jesus/0000-0001-9755-5616; Burgueno, Lola/0000-0002-7779-8810; Wimmer,
   Manuel/0000-0002-1124-7098
FU Spanish Research Projects (AEI/FEDER/UE) [PGC2018-094905-B-I00,
   TIN2015-73968-JIN]; Ramon y Cajal [TIN2016-75944-R]; Austrian Federal
   Ministry for Digital and Economic Affairs; National Foundation for
   Research, Technology and Development; FWF [P28519-N31, P30525-N31]
FX This work was partially funded by Spanish Research Projects
   PGC2018-094905-B-I00, TIN2015-73968-JIN (AEI/FEDER/UE), a Ramon y Cajal
   2017 research grant, and TIN2016-75944-R. Furthermore, this work was
   partially supported and funded by the Austrian Federal Ministry for
   Digital and Economic Affairs, the National Foundation for Research,
   Technology and Development, and by the FWF under the Grant Numbers
   P28519-N31 and P30525-N31.
CR [Anonymous], 2010, OBJECT CONSTRAINT LA
   [Anonymous], 2015, P PROJ SHOWC STAF
   [Anonymous], 2017, ANATLYZER TUTORIAL
   [Anonymous], 2010, THE EPSILON BOOK
   Benelallam A, 2018, J SYST SOFTWARE, V142, P1, DOI 10.1016/j.jss.2018.04.014
   Bergmann G., 2013, THESIS BUDAPEST U TE
   Bergmann Gabor., 2009, Electronic Communication of the European Association of Software Science and Technology, V18, P1
   Bergmayr Alexander, 2014, P 29 ACM IEEE INT C, P647, DOI DOI 10.1145/2642937.2642946
   Besta Maciej, 2019, Demystifying Graph Databases: Analysis and Taxonomy of Data Organization, System Designs, and Graph Queries
   Bousse E, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P150, DOI 10.1109/MODELS.2019.000-6
   Brambilla M., 2017, Model-Driven Software Engineering in Practice, Second Edition, ser. Synthesis Lectures on Software Engineering, VSecond
   Bucchiarone A, 2020, SOFTW SYST MODEL, V19, P5, DOI 10.1007/s10270-019-00773-6
   Burgueno L, 2013, P DOCT S, P9
   Burgueño L, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a7
   Burgueño L, 2016, INFORM SOFTWARE TECH, V79, P17, DOI 10.1016/j.infsof.2016.06.001
   Camargo LC, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1570, DOI 10.1145/3297280.3297596
   Dajsuren Yanja, 2019, AUTOMOTIVE SYSTEMS T
   Daniel G, 2017, IEEE INT CONF AUTOM, P462, DOI 10.1109/ASE.2017.8115658
   Eastman CM, 2011, BOOK BIM HDB GUIDE B
   Guerra E, 2013, SOFTW SYST MODEL, V12, P555, DOI 10.1007/s10270-011-0211-2
   Hoefler T, 2015, PROCEEDINGS OF SC15: THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, DOI 10.1145/2807591.2807644
   Imre Gabor, 2012, Multicore Software Engineering, Performance, and Tools. Proceedings International Conference (MSEPT 2012), P86, DOI 10.1007/978-3-642-31202-1_10
   Jouault F, 2013, REGRESSION TESTS ATL
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kahani N, 2019, SOFTW SYST MODEL, V18, P2361, DOI 10.1007/s10270-018-0665-6
   Kersten T, 2018, PROC VLDB ENDOW, V11, P2209, DOI 10.14778/3275366.3275370
   Kolovos D S., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering. BigMDE'13, V2, P1
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Krause C, 2014, LECT NOTES COMPUT SC, V8411, P325
   Kusel A, 2015, SOFTW SYST MODEL, V14, P537, DOI 10.1007/s10270-013-0343-7
   Le Calvar T, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a2
   LEE AS, 1989, MIS QUART, V13, P33, DOI 10.2307/248698
   Madani S, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.2.a3
   Madani S, 2018, LECT NOTES COMPUT SC, V10890, P115, DOI 10.1007/978-3-319-92997-2_8
   *OMG, 2005, MOF QVT FIN AD SPEC
   Razavi A, 2012, PROC INT CONF SOFTW, P562, DOI 10.1109/ICSE.2012.6227160
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sanchez Cuadrado Jesus, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P1, DOI 10.1007/978-3-642-38883-5_1
   Cuadrado JS, 2018, PROC IEEE ACM INT C, P85, DOI 10.1145/3183440.3183479
   Cuadrado JS, 2018, SOFTW SYST MODEL, V17, P779, DOI 10.1007/s10270-016-0541-1
   Cuadrado JS, 2017, IEEE T SOFTWARE ENG, V43, P868, DOI 10.1109/TSE.2016.2635137
   Cuadrado JS, 2009, LECT NOTES COMPUT SC, V5421, P273, DOI 10.1007/978-3-642-01648-6_29
   Selic B, 2012, SOFTW SYST MODEL, V11, P513, DOI 10.1007/s10270-012-0261-0
   Szárnyas G, 2018, SOFTW SYST MODEL, V17, P1365, DOI 10.1007/s10270-016-0571-8
   Szärnyas G, 2014, LECT NOTES COMPUT SC, V8767, P653, DOI 10.1007/978-3-319-11653-2_40
   Tisi M, 2013, LECT NOTES COMPUT SC, V8107, P656, DOI 10.1007/978-3-642-41533-3_40
   Tisi M, 2011, LECT NOTES COMPUT SC, V6981, P32, DOI 10.1007/978-3-642-24485-8_4
   van Amstel Marcel, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P198, DOI 10.1007/978-3-642-21732-6_14
   Varró D, 2016, SOFTW SYST MODEL, V15, P609, DOI 10.1007/s10270-016-0530-4
   Wagelaar D, 2011, LECT NOTES COMPUT SC, V6981, P623, DOI 10.1007/978-3-642-24485-8_46
   Wei R, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P329, DOI 10.1145/2976767.2976787
   Wimmer M, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a2
   Wohlin C., 2012, EXPT SOFTW ENG
NR 53
TC 6
Z9 7
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2022
VL 48
IS 4
BP 1097
EP 1114
DI 10.1109/TSE.2020.3011388
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 0N4HC
UT WOS:000782799700001
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Zhang, P
   Li, YH
   Ma, WWY
   Yang, YB
   Chen, L
   Lu, HM
   Zhou, YM
   Xu, BW
AF Zhang, Peng
   Li, Yanhui
   Ma, Wanwangying
   Yang, Yibiao
   Chen, Lin
   Lu, Hongmin
   Zhou, Yuming
   Xu, Baowen
TI CBUA: A Probabilistic, Predictive, and Practical Approach for Evaluating
   Test Suite Effectiveness
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Predictive models; Production; Data models; Computational
   modeling; Training; Training data; Effectiveness; test suites; coverage;
   unsupervised model; mutation testing
ID MUTATION
AB Knowing the effectiveness of a test suite is essential for many activities such as assessing the test adequacy of code and guiding the generation of new test cases. Mutation testing is a commonly used defect injection technique for evaluating the effectiveness of a test suite. However, it is usually computationally expensive, as a large number of mutants (buggy versions) are needed to be generated from a production code under test and executed against the test suite. In order to reduce the expensive testing cost, recent studies proposed to use supervised models to predict the effectiveness of a test suite without executing the test suite against the mutants. Nonetheless, the training of such a supervised model requires labeled data, which still depends on the costly mutant execution. Furthermore, existing models are based on traditional supervised learning techniques, which assume that the training and testing data come from the same distribution. But, in practice, software systems are subject to considerable concept drifts, i.e., the same distribution assumption usually does not hold. This can lead to inaccurate predictions of a learned supervised model on the target code as time progresses. To tackle these problems, in this paper, we propose a Coverage-Based Unsupervised Approach (CBUA) for evaluating the effectiveness of a test suite. Given a production code under test, the corresponding mutants, and a test suite, CBUA first collects the coverage information of the mutated statements in the target production code under the execution of the test suite. Then, CBUA employs coverage to estimate the probability of each mutant being alive. As such, a mutation score is computed to evaluate the test suite effectiveness and the predicted labels (i.e., killed or alive) are obtained. The whole process only requires a one-time execution of the test suite against the target production code, without involving any mutant execution and any training data. CBUA can ensure the score monotonicity property (i.e., adding test cases to a test suite does not decrease its mutation score), which may be violated by a supervised approach. The experimental results show that CBUA is very competitive with the state-of-the-art supervised approaches in prediction accuracy. In particular, CBUA is shown to be more effective in finding mutants that are covered but not killed by a test suite, which is helpful in identifying the weaknesses in the current test suite and generating new test cases accordingly. Since CBUA is an easy-to-implement approach with a low cost, we suggest that it should be used as a baseline approach for comparison when any novel prediction approach is proposed in future studies.
C1 [Zhang, Peng; Li, Yanhui; Ma, Wanwangying; Yang, Yibiao; Chen, Lin; Lu, Hongmin; Zhou, Yuming; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.
C3 Nanjing University
RP Li, YH; Chen, L; Zhou, YM; Xu, BW (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.
EM dz1833034@smial.nju.edu.cn; yanhuili@nju.edu.cn; wwyma@smial.nju.edu.cn;
   yangyibiao@nju.edu.cn; lchen@nju.edu.cn; 32493172@qq.com;
   zhouyuming@nju.edu.cn; bwxu@nju.edu.cn
RI Xu, Baowen/IXW-4882-2023; Yang, Yibiao/ABP-4159-2022
OI Xu, Baowen/0000-0001-7743-1296; Yang, Yibiao/0000-0003-1153-2013; Zhang,
   Peng/0000-0003-2902-2249; Li, Yanhui/0000-0003-2282-7175
FU National Key R&D Program of China [2018YFB1003901]; National Natural
   Science Foundation of China [61772259, 61872177, 61832009, 61772263]
FX This work is partially supported by the National Key R&D Program of
   China (2018YFB1003901) and the National Natural Science Foundation of
   China (61772259, 61872177, 61832009, 61772263).
CR Ahmed I, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P547, DOI 10.1145/2950290.2950324
   Ammann P., 2016, SYNTAX BASED TESTING, P320
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Cai X., 2006, THESIS CHINESE U HON
   Cai X., 2005, Proceedings of the 1st International Workshop on Advances in Model-based Testing, P1, DOI DOI 10.1145/1083274.1083288
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cohen J., 1988, STAT POWER ANAL BEHA
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Ekanayake J, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P51, DOI 10.1109/MSR.2009.5069480
   Frankl PG, 1997, J SYST SOFTWARE, V38, P235, DOI 10.1016/S0164-1212(96)00154-9
   Gligoric M, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2660767
   GRANO G, 2019, IN PRESS, DOI DOI 10.1109/TSE.2019.2903057
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Jalbert K., 2012, 2012 Proceedings of the First International Workshop on Realizing Artificial Intelligence Synergies in Software Engineering (RAISE 2012), P42, DOI 10.1109/RAISE.2012.6227969
   Jalbert K., 2012, THESIS U ONTARIO I T
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Just R., 2016, P 26 IEEE ACM INT C, P612
   Just R, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P284, DOI 10.1145/3092703.3092732
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   Kochhar PS, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P560, DOI 10.1109/SANER.2015.7081877
   Kurtz B, 2014, IEEE ICST WORKSHOP, P176, DOI 10.1109/ICSTW.2014.20
   Laurent T, 2019, IEEE ICST WORKSHOP, P83, DOI 10.1109/ICSTW.2019.00036
   Lipton R.J., 1978, P WORKSHOP SOFTWARE, P355
   Mao DY, 2019, IEEE INT CONF SOFTW, P160, DOI 10.1109/ICST.2019.00025
   Namin AS, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P57
   Namin AS, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P351, DOI 10.1145/1368088.1368136
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Rey D., 2011, Wilcoxon-Signed-Rank Test, P1658, DOI [DOI 10.1007/978-3-642-04898-2616, 10.1007/978-3-642-04898-2616]
   Rodríguez I, 2014, IEEE T SOFTWARE ENG, V40, P862, DOI 10.1109/TSE.2014.2331690
   Russell Stuart J., 2010, Artificial Intelligence: A Modern Approach, V3rd
   Schuler D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P297, DOI 10.1145/1595696.1595750
   Tengeri D, 2016, IEEE ICST WORKSHOP, P174, DOI 10.1109/ICSTW.2016.25
   Chekam TT, 2020, EMPIR SOFTW ENG, V25, P434, DOI 10.1007/s10664-019-09778-7
   Watanabe H., 2017, THESIS KTH ROYAL I T
   Yang YB, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P79, DOI 10.1109/ASE.2019.00018
   Yang YB, 2019, PROC INT CONF SOFTW, P488, DOI 10.1109/ICSE.2019.00061
   Zeller A., 2019, Generating Software Tests
   Zhang J, 2019, IEEE T SOFTWARE ENG, V45, P898, DOI 10.1109/TSE.2018.2809496
   Zhang L., 2012, Proceedings of the 2012 International Symposium on Software Testing and Analysis, ISSTA 2012, P331, DOI [10.1145/2338965.2336793, DOI 10.1145/2338965.2336793]
   Zhang YC, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P214, DOI 10.1145/2786805.2786858
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
   Zhou YM, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2556777
   Zliobaite I, 2016, STUD BIG DATA, V16, P91, DOI 10.1007/978-3-319-26989-4_4
NR 50
TC 5
Z9 6
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2022
VL 48
IS 3
BP 1067
EP 1096
DI 10.1109/TSE.2020.3010361
PG 30
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZU6ZO
UT WOS:000769989900019
DA 2024-07-18
ER

PT J
AU Mehrotra, A
   Pejovic, V
   Musolesi, M
AF Mehrotra, Abhinav
   Pejovic, Veljko
   Musolesi, Mirco
TI FutureWare: Designing a Middleware for Anticipatory Mobile Computing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Middleware; Sensors; Predictive models; Context modeling; Machine
   learning; Servers; Mobile applications; Anticipatory computing; mobile
   middleware; mobile sensing; prediction
AB Ubiquitous computing is moving from context-awareness to context-prediction. In order to build truly anticipatory systems developers have to deal with many challenges, from multimodal sensing to modeling context from sensed data, and, when necessary, coordinating multiple predictive models across devices. Novel expressive programming interfaces and paradigms are needed for this new class of mobile and ubiquitous applications. In this paper we present FutureWare, a middleware for seamless development of mobile applications that rely on context prediction. FutureWare exposes an expressive API to lift the burden of mobile sensing, individual and group behavior modeling, and future context querying, from an application developer. We implement FutureWare as an Android library, and through a scenario-based testing and a demo app we show that it represents an efficient way of supporting anticipatory applications, reducing the necessary coding effort by two orders of magnitude.
C1 [Mehrotra, Abhinav; Musolesi, Mirco] UCL, Dept Geog, London WC1E 6BT, England.
   [Pejovic, Veljko] Univ Ljubljana, Fac Comp & Informat Sci, Ljubljana 1000, Slovenia.
C3 University of London; University College London; University of Ljubljana
RP Mehrotra, A (corresponding author), UCL, Dept Geog, London WC1E 6BT, England.
EM a.mehrotra@ucl.ac.uk; veljko.pejovic@fri.uni-lj.si; m.musolesi@ucl.ac.uk
RI Musolesi, Mirco/AFV-8776-2022; Pejović, Veljko/L-2530-2016
OI Musolesi, Mirco/0000-0001-9712-4090; 
FU EPSRC [EP/L018829/2, EP/P016278/1] Funding Source: UKRI
CR [Anonymous], 2011, Proceedings of the 17th annual international conference on Mobile computing and networking, DOI DOI 10.1145/2030613
   Ben Abdesslem F, 2009, MOBIHELD 09, P61
   Breiman L., 2001, Mach. Learn., V45, P5
   Brouwers Niels, 2012, Middleware 2012. ACM/IFIP/USENIX 13th International Middleware Conference. Proceedings, P21, DOI 10.1007/978-3-642-35170-9_2
   Campbell A, 2012, IEEE PERVAS COMPUT, V11, P7, DOI 10.1109/MPRV.2012.41
   Canzian L, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING (UBICOMP 2015), P1293, DOI 10.1145/2750858.2805845
   Clarke S, 2004, DR DOBBS J, V29, pS6
   Cornelius C, 2008, MOBISYS'08: PROCEEDINGS OF THE SIXTH INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P211
   Cristianini N., 2000, INTRO SUPPORT VECTOR
   Das Tathagata., 2010, P 8 INT C MOBILE SYS, P63
   Daughtry J.M., 2009, Proc. CHI 2009, P2771
   Ferreira Denzil, 2015, Frontiers in ICT, V2, P6
   Hong Lu, 2010, Proc. of the 8th ACM Conference on Embedded Networked Sensor Systems, P71, DOI DOI 10.1145/1869983.1869992
   Lane ND, 2015, 16TH INTERNATIONAL WORKSHOP ON MOBILE COMPUTING SYSTEMS AND APPLICATIONS (HOTMOBILE' 15), P117, DOI 10.1145/2699343.2699349
   Lane ND, 2011, UBICOMP'11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON UBIQUITOUS COMPUTING, P355
   Manweiler J, 2013, IEEE INFOCOM SER, P3102
   Mehrotra Abhinav, 2017, Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, V1, DOI [10.1145/3130948, 10.1145/3131901]
   Mehrotra A., 2017, Proceedings of the 1st Workshop on Digital Biomarkers pp, P3, DOI DOI 10.1145/3089341.3089342
   Mehrotra A, 2016, UBICOMP'16: PROCEEDINGS OF THE 2016 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING, P1223, DOI 10.1145/2971648.2971747
   Mehrotra A, 2016, UBICOMP'16 ADJUNCT: PROCEEDINGS OF THE 2016 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING, P1132, DOI 10.1145/2968219.2968299
   Mehrotra A, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P1021, DOI 10.1145/2858036.2858566
   Mehrotra A, 2014, ACM/IFIP/USENIX MIDDLEWARE 2014, P205, DOI 10.1145/2663165.2663331
   Mehrotra A, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING (UBICOMP 2015), P813, DOI 10.1145/2750858.2807544
   Mun M, 2009, MOBISYS'09: PROCEEDINGS OF THE 7TH ACM INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P55
   Nath Suman., 2012, P 10 INT C MOBILE SY, P29
   Neter J., 1996, APPL LINEAR STAT MOD
   Nicholson AJ, 2008, MOBICOM'08: PROCEEDINGS OF THE FOURTEENTH ACM INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING, P46, DOI 10.1145/1409944.1409952
   Noulas A, 2012, IEEE DATA MINING, P1038, DOI 10.1109/ICDM.2012.113
   Pejovic V, 2014, PROCEEDINGS OF THE 2014 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING (UBICOMP'14 ADJUNCT), P1025, DOI 10.1145/2638728.2641284
   Pejovic V, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2693843
   Pielot M, 2014, UBICOMP'14: PROCEEDINGS OF THE 2014 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING, P933, DOI 10.1145/2632048.2632060
   Quercia D., 2009, Proceedings of the third ACM conference on Recommender systems, New York, NY, USA, P273
   Rachuri KK, 2010, UBICOMP 2010: PROCEEDINGS OF THE 2010 ACM CONFERENCE ON UBIQUITOUS COMPUTING, P281
   Rosen R., 1985, Anticipatory systems: Philosophical, mathematical, and methodological foundations (ifsr international series on systems science and engineering)
   Ruiz J, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P197
   Scellato S, 2011, LECT NOTES COMPUT SC, V6696, P152, DOI 10.1007/978-3-642-21726-5_10
   Shin C, 2012, UBICOMP'12: PROCEEDINGS OF THE 2012 ACM INTERNATIONAL CONFERENCE ON UBIQUITOUS COMPUTING, P173, DOI 10.1145/2370216.2370243
   Srinivasan V, 2014, UBICOMP'14: PROCEEDINGS OF THE 2014 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING, P389, DOI 10.1145/2632048.2632052
   Thiagarajan A, 2009, SENSYS 09: PROCEEDINGS OF THE 7TH ACM CONFERENCE ON EMBEDDED NETWORKED SENSOR SYSTEMS, P85
   Wang Tianyu., 2012, P 12 WORKSHOP MOBILE, P1
   Wang Y, 2009, MOBISYS'09: PROCEEDINGS OF THE 7TH ACM INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P179, DOI 10.1016/B978-044306732-7.50020-9
   Yan Tingxin, 2012, P 10 INT C MOB SYST, P113, DOI 10.1145/2307636
   Zhang L, 2010, PROCEEDINGS OF 2010 INTERNATIONAL CONFERENCE ON PUBLIC ADMINISTRATION (6TH), VOL II, P105, DOI 10.1145/1878961.1878982
NR 43
TC 1
Z9 1
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2021
VL 47
IS 10
BP 2107
EP 2124
DI 10.1109/TSE.2019.2943554
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WH1IX
UT WOS:000707441900004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Meyer, AN
   Murphy, GC
   Zimmermann, T
   Fritz, T
AF Meyer, Andre N.
   Murphy, Gail C.
   Zimmermann, Thomas
   Fritz, Thomas
TI Enabling Good Work Habits in Software Developers through Reflective
   Goal-Setting
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Productivity; Software; Employment; Task analysis; Tools; Informatics;
   Monitoring; Productivity; work habits; goals; self-reflection;
   reflective goal-setting; personal analytics; workplace awareness
ID BEHAVIOR; COMMUNICATION; MEMORY; LIFE
AB Software developers are generally interested in developing better habits to increase their workplace productivity and well-being, but have difficulties identifying concrete goals and actionable strategies to do so. In several areas of life, such as the physical activity and health domain, self-reflection has been shown to be successful at increasing people's awareness about a problematic behavior, motivating them to define a self-improvement goal, and fostering goal-achievement. We therefore designed a reflective goal-setting study to learn more about developers' goals and strategies to improve or maintain good habits at work. In our study, 52 professional software developers self-reflected about their work on a daily basis during two to three weeks, which resulted in a rich set of work habit goals and actionable strategies that developers pursue at work. We also found that purposeful, continuous self-reflection not only increases developers' awareness about productive and unproductive work habits (84.5 percent), but also leads to positive self-improvements that increase developer productivity and well-being (79.6 percent). We discuss how tools could support developers with a better trade-off between the cost and value of workplace self-reflection and increase long-term engagement.
C1 [Meyer, Andre N.; Fritz, Thomas] Univ Zurich, Dept Informat, CH-8050 Zurich, Switzerland.
   [Murphy, Gail C.] Univ British Columbia, Vancouver, BC V6T 1Z4, Canada.
   [Zimmermann, Thomas] Microsoft Res, Redmond, WA 98052 USA.
C3 University of Zurich; University of British Columbia; Microsoft
RP Meyer, AN (corresponding author), Univ Zurich, Dept Informat, CH-8050 Zurich, Switzerland.
EM ameyer@ifi.uzh.ch; murphy@cs.ubc.ca; tzimmer@microsoft.com;
   fritz@ifi.uzh.ch
CR Allen David., 2015, GETTING THINGS DONE
   Altmann EM, 2002, COGNITIVE SCI, V26, P39, DOI 10.1207/s15516709cog2601_2
   Amabile T.Kramer., 2011, The progress principle: Using small wins to ignite joy, engagement, and creativity at work
   Amann S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P124, DOI 10.1109/SANER.2016.39
   [Anonymous], 2005, P SIGCHI C HUM FACT, DOI DOI 10.1145/1054972.1055017
   [Anonymous], 2010, CASCON First Decade High Impact Papers, DOI [DOI 10.1145/1925805.1925815, 10.1145/1925805.1925815]
   [Anonymous], 2019, RESCUETIME 0322
   [Anonymous], 2013, REFLECTION LEARNING, DOI DOI 10.4324/9780203822296
   [Anonymous], 2014, P ACM INT JOINT C PE
   Astromskis S, 2017, J SYST SOFTWARE, V132, P85, DOI 10.1016/j.jss.2017.06.072
   Baltes S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P187, DOI 10.1145/3236024.3236061
   Baumer E. P. S., 2014, P C DES INT SYST, P93, DOI [10.1145/2598510.2598598, DOI 10.1145/2598510.2598598]
   Beller M, 2019, IEEE T SOFTWARE ENG, V45, P261, DOI 10.1109/TSE.2017.2776152
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Brockbank Anne, 2007, FACILITATING REFLECT
   Chong J, 2006, CSCW 06, P29, DOI [DOI 10.1145/1180875.1180882, 10.1145/1180875.1180882]
   Claessens BJ, 2010, APPL PSYCHOL-INT REV, V59, P273, DOI 10.1111/j.1464-0597.2009.00390.x
   Clear J, 2018, ATOMIC HABITS TINY C
   Consolvo S, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P405
   Cordeiro F, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3207, DOI 10.1145/2702123.2702154
   COUGER JD, 1990, INFORM MANAGE, V18, P41, DOI 10.1016/0378-7206(90)90062-M
   Czerwinski Mary, 2004, P SIGCHI C HUM FACT, P175, DOI [10.1145/985692.985715, DOI 10.1145/985692.985715]
   Daskalova N, 2016, UIST 2016: PROCEEDINGS OF THE 29TH ANNUAL SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P347, DOI 10.1145/2984511.2984534
   DeMarco T., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P268
   Di Stefano G., 2016, Harvard Business School NOM Unit Working Paper No. 14-093
   Doran G.T., 1981, Management Review. AMA FORUM, V70, p35 36, DOI DOI 10.1177/004057368303900411
   Edelson M, 2011, SCIENCE, V333, P108, DOI 10.1126/science.1203557
   Enns HG, 2006, COMMUN ACM, V49, P105, DOI 10.1145/1121949.1121956
   Epstein DA, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P673, DOI 10.1145/2858036.2858066
   Epstein DA, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING (UBICOMP 2015), P731, DOI 10.1145/2750858.2804250
   Fogg B. J., 2003, PERSUASIVE TECHNOLOG, P89
   Fritz T, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P487, DOI 10.1145/2556288.2557383
   Gasser R, 2006, LECT NOTES COMPUT SC, V3962, P27
   Gonçalves MK, 2011, J UNIVERS COMPUT SCI, V17, P1913
   Gonzalez Victor M, 2004, P SIGCHI C HUMAN FAC, P113, DOI [10.1145/985692.985707, DOI 10.1145/985692.985707]
   Graziotin D, 2015, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.18
   Gustafson K. L., 2002, AFRLHEAZTR20020219
   Herrmanny Katja, 2016, Persuasive Technology. 11th International Conference, PERSUASIVE 2016. Proceedings: LNCS 9638, P15, DOI 10.1007/978-3-319-31510-2_2
   Humphrey WS, 1996, IEEE SOFTWARE, V13, P77, DOI 10.1109/52.493023
   JOHNSON SM, 1971, BEHAV THER, V2, P488, DOI 10.1016/S0005-7894(71)80095-3
   Kalliamvakou E, 2019, IEEE T SOFTWARE ENG, V45, P87, DOI 10.1109/TSE.2017.2768368
   Kersten-van Dijk ET, 2017, HUM-COMPUT INTERACT, V32, P268, DOI 10.1080/07370024.2016.1276456
   Kim YH, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300845
   Kim YH, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P272, DOI 10.1145/2858036.2858428
   Klasnja P, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3063
   Klasnja Predrag, 2009, AMIA Annu Symp Proc, V2009, P338
   Kocielnik R, 2018, DIS 2018: PROCEEDINGS OF THE 2018 DESIGNING INTERACTIVE SYSTEMS CONFERENCE, P881, DOI 10.1145/3196709.3196784
   Krogstie B. R., 2012, 2012 IEEE 12th International Conference on Advanced Learning Technologies (ICALT), P151, DOI 10.1109/ICALT.2012.107
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Lee J., 2015, Proceedings of the 33rd Annual ACM Conference Extended Abstracts on Human Factors in Computing Systems, P2301, DOI DOI 10.1145/2702613.2732870
   Lee J, 2014, PROCEEDINGS OF THE 2014 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING (UBICOMP'14 ADJUNCT), P703, DOI 10.1145/2638728.2641318
   Lee J, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P6837, DOI 10.1145/3025453.3026038
   Li I, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P557
   Li PL, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P700, DOI 10.1109/ICSE.2015.335
   Lin JJ, 2006, LECT NOTES COMPUT SC, V4206, P261
   Locke EA, 2002, AM PSYCHOL, V57, P705, DOI 10.1037//0003-066X.57.9.705
   Mark G, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173666
   Mark G, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P107
   Matthews G., 2007, PSYCHOL FACULTY PRES, V3
   Meyer Andre N., 2017, Proceedings of the ACM on Human-Computer Interaction, V1, DOI 10.1145/3134714
   Meyer AN, 2021, IEEE T SOFTWARE ENG, V47, P863, DOI 10.1109/TSE.2019.2904957
   Meyer AN, 2017, IEEE T SOFTWARE ENG, V43, P1178, DOI 10.1109/TSE.2017.2656886
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Minelli R, 2015, INT C PROGRAM COMPRE, P25, DOI 10.1109/ICPC.2015.12
   Monkaresi H., 2013, P OZCH WORKSH PROGR
   Morisano D, 2010, J APPL PSYCHOL, V95, P255, DOI 10.1037/a0018478
   Muller Jerry, 2018, TYRANNY METRICS, DOI DOI 1174952/THE-TYRANNY-OF-METRICS
   Munson S. A., 2012, 2012 6th International Conference on Pervasive Computing Technologies for Healthcare, P25, DOI 10.4108/icst.pervasivehealth.2012.248691
   Murphy-Hill E, 2021, IEEE T SOFTWARE ENG, V47, P582, DOI 10.1109/TSE.2019.2900308
   Pammer Viktoria, 2015, Design for Teaching and Learning in a Networked World. 10th European Conference on Technology-Enhanced Learning, EC-TEL 2015. Proceedings: LNCS 9307, P467, DOI 10.1007/978-3-319-24258-3_41
   Parnin C, 2011, SOFTWARE QUAL J, V19, P5, DOI 10.1007/s11219-010-9104-9
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   Prasad A., 2012, Proceedings of the 2012 ACM workshop on Privacy in the electronic society, P117, DOI DOI 10.1145/2381966.2381983
   Prestwich A, 2009, PSYCHOL HEALTH, V24, P677, DOI 10.1080/08870440802040715
   Prochaska JO, 1997, AM J HEALTH PROMOT, V12, P38, DOI 10.4278/0890-1171-12.1.38
   Rooksby J, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P284, DOI 10.1145/2858036.2858055
   Rooksby J, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P1163, DOI 10.1145/2556288.2557039
   Schwarz N, 2001, AM J EVAL, V22, P127, DOI 10.1177/109821400102200202
   Sharot T, 2011, NAT NEUROSCI, V14, P1475, DOI 10.1038/nn.2949
   Sharp H, 2009, INFORM SOFTWARE TECH, V51, P219, DOI 10.1016/j.infsof.2008.05.009
   Toscos T., 2006, C HUM FACT COMP SYST, P1873, DOI [10.1145/1125451.1125805, DOI 10.1145/1125451.1125805]
   Travers CJ, 2015, BRIT J EDUC PSYCHOL, V85, P224, DOI 10.1111/bjep.12059
   Treude C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P625, DOI 10.1145/2786805.2786827
   Wagner S., 2008, Software Productivity Analysis and Cost Estimation (SPACE 2008), P1
   Whittaker S, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P1729, DOI 10.1145/2858036.2858193
   Williams A, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173662
   Wiseman R., 2007, Quirkology: How we discover the big truths in small things
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Zimmerman BJ, 2006, CAMBRIDGE HANDBOOK OF EXPERTISE AND EXPERT PERFORMANCE, P705
NR 89
TC 5
Z9 5
U1 1
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2021
VL 47
IS 9
BP 1872
EP 1885
DI 10.1109/TSE.2019.2938525
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA UR3QY
UT WOS:000696667700007
OA Green Published, Bronze
DA 2024-07-18
ER

PT J
AU Sun, CA
   Fu, A
   Poon, PL
   Xie, XY
   Liu, H
   Chen, TY
AF Sun, Chang-Ai
   Fu, An
   Poon, Pak-Lok
   Xie, Xiaoyuan
   Liu, Huai
   Chen, Tsong Yueh
TI METRIC<SUP>+</SUP>: A Metamorphic Relation Identification Technique
   Based on Input Plus Output Domains
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Metamorphic testing; metamorphic relation; category-choice framework;
   fault detection effectiveness
ID SOFTWARE; FRAMEWORK
AB Metamorphic testing is well known for its ability to alleviate the oracle problem in software testing. The main idea of metamorphic testing is to test a software system by checking whether each identified metamorphic relation (MR) holds among several executions. In this regard, identifying MRs is an essential task in metamorphic testing. In view of the importance of this identification task, METRIC (METamorphic Relation Identification based on Category-choice framework) was developed to help software testers identify MRs from a given set of complete test frames. However, during MR identification, METRIC primarily focuses on the input domain without sufficient attention given to the output domain, thereby hindering the effectiveness of METRIC. Inspired by this problem, we have extended METRIC into METRIC+ by incorporating the information derived from the output domain for MR identification. A tool implementing METRIC+ has also been developed. Two rounds of experiments, involving four real-life specifications, have been conducted to evaluate the effectiveness and efficiency of METRIC+. The results have confirmed that METRIC+ is highly effective and efficient in MR identification. Additional experiments have been performed to compare the fault detection capability of the MRs generated by METRIC+ and those by mu MT (another MR identification technique). The comparison results have confirmed that the MRs generated by METRIC+ are highly effective in fault detection.
C1 [Sun, Chang-Ai; Fu, An] Univ Sci & Technol Beijing, Dept Comp Sci & Technol, Beijing 100083, Peoples R China.
   [Poon, Pak-Lok] Cent Queensland Univ, Sch Engn & Technol, Melbourne, Vic 3000, Australia.
   [Xie, Xiaoyuan] Wuhan Univ, Sch Comp Sci, Wuhan 430072, Peoples R China.
   [Liu, Huai; Chen, Tsong Yueh] Swinburne Univ Technol, Dept Comp Sci & Software Engn, Melbourne, Vic 3122, Australia.
C3 University of Science & Technology Beijing; Central Queensland
   University; Wuhan University; Swinburne University of Technology
RP Sun, CA (corresponding author), Univ Sci & Technol Beijing, Dept Comp Sci & Technol, Beijing 100083, Peoples R China.
EM casun@ustb.edu.cn; anfu@xs.ustb.edu.cn; p.poon@cqu.edu.au;
   xxie@whu.edu.cn; hliu@swin.edu.au; tychen@swin.edu.au
RI Poon, Pak-Lok/ADQ-5493-2022; Fu, An/GVT-3917-2022; Liu, Huai/M-4871-2019
OI Liu, Huai/0000-0003-3125-4399; POON, Pak Lok/0000-0003-2840-2418
FU Foundation of China [61872039]; Beijing Natural Science Foundation of
   China [4162040]; Aeronautical Science Foundation of China [2016ZD74004];
   Fundamental Research Funds for the Central Universities [FRF-GF-17-B29]
FX Foundation of China (Grant No. 61872039), the Beijing Natural Science
   Foundation of China (Grant No. 4162040), the Aeronautical Science
   Foundation of China (Grant No. 2016ZD74004), the Fundamental Research
   Funds for the Central Universities (Grant No. FRF-GF-17-B29).
CR [Anonymous], 2018, GRAPHICSFUZZ IS ACQU
   [Anonymous], 2018, How it works
   Cao YX, 2013, INT CONF QUAL SOFTW, P153, DOI 10.1109/QSIC.2013.43
   Chan WK, 2007, INT J WEB SERV RES, V4, P61, DOI 10.4018/jwsr.2007040103
   Chan WK, 2006, INT J SOFTW ENG KNOW, V16, P677, DOI 10.1142/S0218194006002951
   Chen T. Y., 2002, Software Engineering Notes, V27, P191, DOI 10.1145/566171.566202
   Chen T.Y., 2004, PROC 4 IBERO AM S SO, P569
   Chen T.Y., 1998, Metamorphic testing: a new approach for generating next test cases
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Chen TY, 2016, COMPUTER, V49, P48, DOI 10.1109/MC.2016.176
   Chen TY, 2016, J SYST SOFTWARE, V116, P177, DOI 10.1016/j.jss.2015.07.037
   Chen TY, 2011, IEEE T SOFTWARE ENG, V37, P109, DOI 10.1109/TSE.2010.23
   Chen TY, 2009, BMC BIOINFORMATICS, V10, DOI 10.1186/1471-2105-10-24
   Chen TY, 2002, P INT COMP SOFTW APP, P327, DOI 10.1109/CMPSAC.2002.1045022
   Chen TY, 2003, IEEE T SOFTWARE ENG, V29, P577, DOI 10.1109/TSE.2003.1214323
   Chen TY, 2003, INFORM SOFTWARE TECH, V45, P1, DOI 10.1016/S0950-5849(02)00129-5
   Donaldson AF, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133917
   Donaldson AF, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET), P44, DOI [10.1109/MET.2016.016, 10.1145/2896971.2896978]
   Dong Guowei, 2008, Journal of Southeast University (English Edition), V24, P437
   Hong Zhu, 2015, 2015 Second International Conference on Trustworthy Systems and their Applications (TSA). Proceedings, P8, DOI 10.1109/TSA.2015.13
   Hu P., 2006, Proc. of the 3rd International Workshop on Software Quality Assurance, P6
   Jiang MY, 2012, INT CONF SOFTW ENG, P530
   Jiang MY, 2017, J SYST SOFTWARE, V126, P127, DOI 10.1016/j.jss.2016.04.002
   Kanewala U, 2016, SOFTW TEST VERIF REL, V26, P245, DOI 10.1002/stvr.1594
   Kanewala U, 2013, PROC INT SYMP SOFTW, P1, DOI 10.1109/ISSRE.2013.6698899
   KNIGHT JC, 1986, IEEE T SOFTWARE ENG, V12, P96, DOI 10.1109/TSE.1986.6312924
   Kuo FC, 2011, C LOCAL COMPUT NETW, P291, DOI 10.1109/LCN.2011.6115306
   Liu H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P420, DOI 10.1145/2591062.2591109
   Liu H, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P805, DOI 10.1109/ICSE.2015.257
   Liu H, 2014, IEEE T SOFTWARE ENG, V40, P4, DOI 10.1109/TSE.2013.46
   Liu H, 2012, INT CONF QUAL SOFTW, P59, DOI 10.1109/QSIC.2012.10
   Manolache LI, 2001, SOFTWARE PRACT EXPER, V31, P1211, DOI 10.1002/spe.409
   Mouha N, 2018, IEEE T RELIAB, V67, P870, DOI 10.1109/TR.2018.2847247
   Namin AS, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P351, DOI 10.1145/1368088.1368136
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Patel K, 2018, SOFTWARE QUAL J, V26, P1373, DOI 10.1007/s11219-017-9392-4
   Poon PL, 2010, COMMUN ACM, V53, P113, DOI 10.1145/1721654.1721687
   Pullum LL, 2012, 2012 ASE INTERNATIONAL CONFERENCE ON BIOMEDICAL COMPUTING (BIOMEDCOM), P62, DOI 10.1109/BioMedCom.2012.17
   ROSENBLUM DS, 1995, IEEE T SOFTWARE ENG, V21, P19, DOI 10.1109/32.341844
   Segura S, 2018, IEEE T SOFTWARE ENG, V44, P1083, DOI 10.1109/TSE.2017.2764464
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Segura S, 2011, INFORM SOFTWARE TECH, V53, P245, DOI 10.1016/j.infsof.2010.11.002
   Sun CA, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET), P12, DOI [10.1109/MET.2016.011, 10.1145/2896971.2896974]
   Sun CA, 2014, FRONT COMPUT SCI-CHI, V8, P478, DOI 10.1007/s11704-014-3040-y
   Sun CA, 2012, INT J WEB SERV RES, V9, P51, DOI 10.4018/jwsr.2012010103
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P216, DOI [10.1145/2666356.2594334, 10.1145/2594291.2594334]
   Xiao-li Lu, 2010, 2010 Proceedings of 7th International Conference on Ubiquitous Intelligence & Computing and 7th International Conference on Autonomic & Trusted Computing (UIC/ATC 2010), P272, DOI 10.1109/UIC-ATC.2010.75
   Xiaoyuan Xie, 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P1, DOI 10.1109/QSIC.2011.20
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Xie XY, 2013, INFORM SOFTWARE TECH, V55, P866, DOI 10.1016/j.infsof.2012.08.008
   Yu-Seung Ma, 2006, 28th International Conference on Software Engineering Proceedings, P827
   Zhang Jie, 2014, P 29 ACM IEEE INT C, P701, DOI DOI 10.1145/2642937.2642994
   Zhou Z. Q., 2007, TR200706 U HONG KONG
   Zhou ZQ, 2021, IEEE T SOFTWARE ENG, V47, P1164, DOI 10.1109/TSE.2019.2915065
   Zhou ZQ, 2020, IEEE T SOFTWARE ENG, V46, P1120, DOI 10.1109/TSE.2018.2876433
   Zhou ZQ, 2019, COMMUN ACM, V62, P61, DOI 10.1145/3241979
   Zhou ZQ, 2016, IEEE T SOFTWARE ENG, V42, P264, DOI 10.1109/TSE.2015.2478001
   Zhou ZQ, 2012, SOFTW TEST VERIF REL, V22, P221, DOI 10.1002/stvr.437
NR 59
TC 23
Z9 26
U1 1
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2021
VL 47
IS 9
BP 1764
EP 1785
DI 10.1109/TSE.2019.2934848
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UR3QY
UT WOS:000696667700002
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Sobrinho, EVD
   De Lucia, A
   Maia, MD
AF de Paulo Sobrinho, Elder Vicente
   De Lucia, Andrea
   Maia, Marcelo de Almeida
TI A Systematic Literature Review on Bad Smells-5 W's: Which, When, What,
   Who, Where
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Software maintenance; reengineering; bad smell
ID CLONE DETECTION; CODE CLONES; REFACTORING OPPORTUNITIES; WEB
   APPLICATIONS; SOFTWARE; EVOLUTION; IDENTIFICATION; SEARCH; LEVEL;
   INFORMATION
AB Bad smells are sub-optimal code structures that may represent problems needing attention. We conduct an extensive literature review on bad smells relying on a large body of knowledge from 1990 to 2017. We show that some smells are much more studied in the literature than others, and also that some of them are intrinsically inter-related (which). We give a perspective on how the research has been driven across time (when). In particular, while the interest in duplicated code emerged before the reference publications by Fowler and Beck and by Brown et al., other types of bad smells only started to be studied after these seminal publications, with an increasing trend in the last decade. We analyzed aims, findings, and respective experimental settings, and observed that the variability of these elements may be responsible for some apparently contradictory findings on bad smells (what). Moreover, we could observe that, in general, papers tend to study different types of smells at once. However, only a small percentage of those papers actually investigate possible relations between the respective smells (co-studies), i.e., each smell tends to be studied in isolation. Despite of a few relations between some types of bad smells have been investigated, there are other possible relations for further investigation. We also report that authors have different levels of interest in the subject, some of them publishing sporadically and others continuously (who). We observed that scientific connections are ruled by a large "small world" connected graph among researchers and several small disconnected graphs. We also found that the communities studying duplicated code and other types of bad smells are largely separated. Finally, we observed that some venues are more likely to disseminate knowledge on Duplicate Code (which often is listed as a conference topic on its own), while others have a more balanced distribution among other smells (where). Finally, we provide a discussion on future directions for bad smell research.
C1 [de Paulo Sobrinho, Elder Vicente] Univ Fed Triangulo Mineiro, Dept Elect Engn, BR-38025180 Uberaba, Brazil.
   [De Lucia, Andrea] Univ Salerno, I-84084 Fisciano, SA, Italy.
   [Maia, Marcelo de Almeida] Univ Fed Uberlandia, Fac Comp, BR-38408100 Uberlandia, MG, Brazil.
C3 Universidade Federal do Triangulo Mineiro; University of Salerno;
   Universidade Federal de Uberlandia
RP Sobrinho, EVD (corresponding author), Univ Fed Triangulo Mineiro, Dept Elect Engn, BR-38025180 Uberaba, Brazil.
EM eldereng@hotmail.com; adelucia@unisa.it; marcelo.maia@ufu.br
RI De Lucia, Andrea/AAG-6781-2020; Maia, Marcelo/F-3090-2017
OI Maia, Marcelo/0000-0003-3578-1380; De Lucia, Andrea/0000-0002-4238-1425
FU FAPEMIG; CNPq; CAPES
FX The authors would like to thank the partial funding of the Brazilian
   governmental agencies FAPEMIG, CNPq and CAPES.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Abebe S. L., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P235, DOI 10.1109/WCRE.2012.33
   Abebe SL, 2011, IEEE INT WORK C SO, P125, DOI 10.1109/SCAM.2011.18
   Abebe SL, 2009, WORK CONF REVERSE EN, P95, DOI 10.1109/WCRE.2009.26
   Ahmed I, 2015, INT SYMP EMP SOFTWAR, P31, DOI 10.1109/ESEM.2015.7321186
   Ahmed TM, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P99, DOI 10.1109/MSR.2015.17
   Al-Batran B, 2011, LECT NOTES COMPUT SC, V6981, P258, DOI 10.1007/978-3-642-24485-8_19
   Al-Ekram R, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P363, DOI 10.1109/ISESE.2005.1541846
   Al-Omari F., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P405, DOI 10.1109/WCRE.2012.50
   Alalfi MH, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P295, DOI 10.1109/ICSM.2012.6405285
   Altidor J, 2014, ACM SIGPLAN NOTICES, V49, P271, DOI [10.1145/10.1145/2660193.2660203, 10.1145/2714064.2660203]
   Aniche M, 2016, PROC IEEE INT CONF S, P234, DOI 10.1109/ICSME.2016.12
   [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], 2010, 2010 IEEE International Conference on Software Maintenance, DOI [10.1109/ICSM.2010.5609564, DOI 10.1109/ICSM.2010.5609564]
   [Anonymous], 2013, ELECT COMMUN EUR ASS
   [Anonymous], 1993, Computing Science and Statistics
   [Anonymous], 2016, 2016 IEEE 24th International Conference on Program Comprehension (ICPC)
   [Anonymous], 2007, DUBLICATION REDUNDAN
   Antoniol G, 2002, INFORM SOFTWARE TECH, V44, P755, DOI 10.1016/S0950-5849(02)00123-4
   Arnaoudova V, 2016, EMPIR SOFTW ENG, V21, P104, DOI 10.1007/s10664-014-9350-8
   Arnaoudova V, 2013, EUR CON SFTWR MTNCE, P187, DOI 10.1109/CSMR.2013.28
   Arwin C., 2006, P 6 AUSTR COMP SCI C, V48, P277
   Aversano L, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P81
   Baker BS, 2007, IEEE T SOFTWARE ENG, V33, P608, DOI 10.1109/TSE.2007.70720
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Bakota T, 2007, PROC IEEE INT CONF S, P234
   Balazinska M., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P326, DOI 10.1109/WCRE.1999.806971
   Balazinska M., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P292, DOI 10.1109/METRIC.1999.809750
   Balazinska M, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P98, DOI 10.1109/WCRE.2000.891457
   Balint M, 2006, INT C PROGRAM COMPRE, P56, DOI 10.1109/ICPC.2006.25
   Bandi A, 2013, WORK CONF REVERSE EN, P341, DOI 10.1109/WCRE.2013.6671309
   Barbour L., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P273, DOI 10.1109/ICSM.2011.6080794
   Barbour L, 2013, J SOFTW-EVOL PROC, V25, P1139, DOI 10.1002/smr.1597
   Basit H.A., 2005, Proceedings of the 17th International Conference on Software Engineering and Knowledge Engineering, SEKE, P109
   Basit HA, 2005, PROC INT CONF SOFTW, P451
   Basit HA, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P275, DOI 10.1109/ICSM.2012.6405283
   Basit HA, 2009, IEEE T SOFTWARE ENG, V35, P497, DOI 10.1109/TSE.2009.16
   Basit Hamid Abdul, 2005, SIGSOFT Softw. Eng. Notes, V30, P156, DOI [10.1145/1095430.1081733, DOI 10.1145/1095430.1081733]
   Bastian M., 2009, P INT AAAI C WEBL SO, V3, P361
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Bavota G, 2014, EMPIR SOFTW ENG, V19, P1617, DOI 10.1007/s10664-013-9256-x
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Bavota G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P56, DOI 10.1109/ICSM.2012.6405253
   Bavota G, 2011, J SYST SOFTWARE, V84, P397, DOI 10.1016/j.jss.2010.11.918
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bazrafshan S., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P74, DOI 10.1109/SCAM.2012.18
   Bazrafshan S, 2014, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2014.10
   Bazrafshan S, 2013, PROC IEEE INT CONF S, P50, DOI 10.1109/ICSM.2013.16
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Bettenburg N, 2009, WORK CONF REVERSE EN, P85, DOI 10.1109/WCRE.2009.51
   Bian YX, 2013, J SYST SOFTWARE, V86, P2077, DOI 10.1016/j.jss.2013.03.061
   Boussaa Mohamed, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P50, DOI 10.1007/978-3-642-39742-4_6
   Brixtel R, 2010, IEEE INT WORK C SO, P77, DOI 10.1109/SCAM.2010.19
   Brown C, 2010, PEPM '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION, P111, DOI 10.1145/1706356.1706378
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Bruntink M, 2005, IEEE T SOFTWARE ENG, V31, P804, DOI 10.1109/TSE.2005.114
   Bruntink M, 2004, PROC IEEE INT CONF S, P200, DOI 10.1109/ICSM.2004.1357804
   Burrows S, 2007, SOFTWARE PRACT EXPER, V37, P151, DOI 10.1002/spe.750
   Cai DX, 2011, LECT NOTES COMPUT SC, V6603, P432, DOI 10.1007/978-3-642-19811-3_30
   Cai K., 2011, JAVA ACAD RES, P57
   Calefato F., 2004, Journal of Web Engineering, V3, P3
   Carette A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P115, DOI 10.1109/SANER.2017.7884614
   Charpentier A., 2015, P 19 INT C EV ASS SO, P20
   Chatterji D, 2016, EMPIR SOFTW ENG, V21, P1476, DOI 10.1007/s10664-015-9394-4
   Chatterji D, 2013, WORK CONF REVERSE EN, P112, DOI 10.1109/WCRE.2013.6671286
   Chatterji D, 2011, INT SYMP EMP SOFTWAR, P20, DOI 10.1109/ESEM.2011.10
   Chatzigeorgiou A, 2014, INNOV SYST SOFTW ENG, V10, P3, DOI 10.1007/s11334-013-0205-z
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   Chen Jian., 2014, International Workshop of Software Clones, P1
   Chen K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P175, DOI 10.1145/2568225.2568286
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   Cheng X, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P13, DOI 10.1109/SANER.2016.20
   Cheung WT, 2016, EMPIR SOFTW ENG, V21, P517, DOI 10.1007/s10664-015-9368-6
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cordy J. R., 2004, PROC C CTR ADV STUD, P1, DOI DOI 10.1103/PhysRevLett.96.162002
   Cordy JR, 2011, CONF PROC INT SYMP C, P151, DOI 10.1109/ICPC.2011.25
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   D'Ambros Marco, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P23, DOI 10.1109/QSIC.2010.58
   Dang YN, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P369
   Davey N., 1995, International Journal of Applied Software Technology, V1, P219
   de F Carneiro Glauco, 2010, 2010 Proceedings of 24th Brazilian Symposium on Software Engineering (SBES 2010), P128, DOI 10.1109/SBES.2010.21
   De Lucia A, 2004, PROG COMPREHEN, P132, DOI 10.1109/WPC.2004.1311055
   De Lucia A, 2008, PROC IEEE INT CONF S, P27, DOI 10.1109/ICSM.2008.4658051
   de Wit M, 2009, PROC IEEE INT CONF S, P169, DOI 10.1109/ICSM.2009.5306336
   Deissenboeck F, 2012, EUR CON SFTWR MTNCE, P297, DOI 10.1109/CSMR.2012.38
   Deissenboeck F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P603, DOI 10.1145/1368088.1368172
   Demeyer S., 2002, Object-Oriented Reengineering Patterns
   Distefano D, 2010, LECT NOTES COMPUT SC, V6013, P278, DOI 10.1007/978-3-642-12029-9_20
   Neto BFD, 2015, EXPERT SYST APPL, V42, P1652, DOI 10.1016/j.eswa.2014.09.022
   Du BoisB., 2006, IASTED C SOFTWARE EN, P346
   Duala-Ekoko E, 2007, PROC INT CONF SOFTW, P158
   Duala-Ekoko E, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1767751.1767754
   Dubinsky Y, 2013, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2013.13
   Ducasse S, 2006, J SOFTW MAINT EVOL-R, V18, P37, DOI 10.1002/smr.317
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Ettinger R, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P327, DOI 10.1109/SANER.2017.7884633
   Evans WS, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P150, DOI 10.1109/WCRE.2007.15
   Falke R, 2008, EMPIR SOFTW ENG, V13, P601, DOI 10.1007/s10664-008-9073-9
   Fanta R, 1999, J SOFTW MAINT-RES PR, V11, P223, DOI 10.1002/(SICI)1096-908X(199907/08)11:4<223::AID-SMR194>3.0.CO;2-D
   Fard AM, 2013, IEEE INT WORK C SO, P116, DOI 10.1109/SCAM.2013.6648192
   Farine DR, 2012, ANIM BEHAV, V84, P1271, DOI 10.1016/j.anbehav.2012.08.008
   Fenske W, 2015, IEEE INT WORK C SO, P171, DOI 10.1109/SCAM.2015.7335413
   Ferme Vincenzo, 2013, PROC COLOCATED EVENT
   Fernandes E, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915984
   Field A., 2009, Discovering statistics with SPSS, V3rd
   Fokaefs M, 2012, J SYST SOFTWARE, V85, P2241, DOI 10.1016/j.jss.2012.04.013
   Fokaefs M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1037, DOI 10.1145/1985793.1985989
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2015, INT WORKS EMERG TREN, P44, DOI 10.1109/WETSoM.2015.14
   Fontana FA, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P609, DOI 10.1109/SANER.2016.84
   Fontana FA, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P16, DOI 10.1109/MTD.2015.7332620
   Fontana FA, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a5
   Fontana FA, 2013, PROC IEEE INT CONF S, P260, DOI 10.1109/ICSM.2013.37
   Fourati R, 2011, STUD COMPUT INTELL, V364, P17
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fowler M., 2010, Domain-specific languages
   Gabel M, 2010, ACM SIGPLAN NOTICES, V45, P175, DOI 10.1145/1932682.1869475
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P321, DOI 10.1145/1368088.1368132
   Garcia J, 2009, EUR CON SFTWR MTNCE, P255, DOI 10.1109/CSMR.2009.59
   Gawade M, 2014, SOFTWARE PRACT EXPER, V44, P537, DOI 10.1002/spe.2173
   Geiger R, 2006, LECT NOTES COMPUT SC, V3922, P411
   German DM, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P81, DOI 10.1109/MSR.2009.5069483
   Göde N, 2013, J SOFTW-EVOL PROC, V25, P165, DOI 10.1002/smr.520
   Göde N, 2011, EUR CON SFTWR MTNCE, P65, DOI 10.1109/CSMR.2011.11
   Göde N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P311, DOI 10.1145/1985793.1985836
   Göde N, 2009, IEEE INT WORK C SO, P77, DOI 10.1109/SCAM.2009.17
   Göde N, 2009, EUR CON SFTWR MTNCE, P219, DOI 10.1109/CSMR.2009.20
   Greiler M, 2013, IEEE WORK CONF MIN S, P387, DOI 10.1109/MSR.2013.6624053
   Greiler M, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P322, DOI 10.1109/ICST.2013.45
   Guo J, 2008, WORK CONF REVERSE EN, P91, DOI 10.1109/WCRE.2008.12
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Hannemann J, 2002, ACM SIGPLAN NOTICES, V37, P161, DOI 10.1145/583854.582436
   Harder Jan, 2012, 2012 IEEE 20th International Conference on Program Comprehension, P219
   Harder J, 2013, J SOFTW-EVOL PROC, V25
   Harder J, 2013, PROC IEEE INT CONF S, P30, DOI 10.1109/ICSM.2013.14
   Hauptmann B., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P209
   Hecht G, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P59, DOI [10.1145/2897073.2897100, 10.1109/MobileSoft.2016.030]
   Hecht G, 2015, IEEE INT CONF AUTOM, P236, DOI 10.1109/ASE.2015.46
   Hemel A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P357, DOI 10.1109/WCRE.2012.45
   Hermans Felienne, 2016, Proceedings of the 24th International Conference on Program Comprehension, P1, DOI [DOI 10.1109/ICPC.2016, 10.1109/icpc.2016.7503706, DOI 10.1109/ICPC.2016.7503706, 10.1109/ICPC.2016.7503706]
   Higo Y., 2011, 2011 18th Working Conference on Reverse Engineering, P3, DOI 10.1109/WCRE.2011.11
   Higo Y, 2004, LECT NOTES COMPUT SC, V3009, P220
   Higo Y, 2002, LECT NOTES COMPUT SC, V2559, P185
   Higo Y., 2011, Proceedings of the 2011 15th European Conference on Software Maintenance and Reengineering (CSMR 2011), P75, DOI 10.1109/CSMR.2011.12
   Higo Y, 2007, INFORM SOFTWARE TECH, V49, P985, DOI 10.1016/j.infsof.2006.10.005
   Higo Y, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P294, DOI 10.1145/2635868.2635886
   Higo Y, 2008, J SOFTW MAINT EVOL-R, V20, P435, DOI 10.1002/smr.394
   Nguyen HA, 2012, IEEE T SOFTWARE ENG, V38, P1008, DOI 10.1109/TSE.2011.90
   Hotta K., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P250
   Hotta K., 2010, JOINT ERCIM WORK SHO, P73
   Hummel Benjamin., 2010, Software Maintenance, IEEE International Conference on, P1
   Inoue K, 2012, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.2012.6227181
   Islam JF, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P68, DOI 10.1109/SANER.2016.78
   Jaafar F, 2016, EMPIR SOFTW ENG, V21, P896, DOI 10.1007/s10664-015-9361-0
   Jaafar F, 2013, WORK CONF REVERSE EN, P351, DOI 10.1109/WCRE.2013.6671310
   Jablonski Patricia, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P170, DOI 10.1109/ICPC.2010.22
   Jarzabek S, 2006, J SOFTW MAINT EVOL-R, V18, P267, DOI 10.1002/smr.333
   Jiang DX, 2014, INT J INNOV COMPUT I, V10, P1519
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jiang Lingxiao, 2007, P THE 6 JOINT M EURO, P55, DOI DOI 10.1145/1287624.1287634
   Jiang ZM, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P203, DOI 10.1109/SCAM.2007.19
   Jiau HC, 2013, IEEE T SOFTWARE ENG, V39, P1245, DOI 10.1109/TSE.2013.19
   Juergens E., 2010, P 4 INTERNATIONALWOR, P1
   Juergens E, 2010, EUR CON SFTWR MTNCE, P78, DOI 10.1109/CSMR.2010.33
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser C, 2005, PROC IEEE INT CONF S, P305
   Kapser C, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P85, DOI 10.1109/IWPSE.2004.1334772
   Kapser C, 2003, ELISA 03, P67
   Kapser CJ, 2006, J SOFTW MAINT EVOL-R, V18, P61, DOI 10.1002/smr.327
   Kapser C, 2006, WORK CONF REVERSE EN, P19
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Karasneh B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P36, DOI 10.1109/SANER.2016.104
   Kawamitsu N, 2014, IEEE INT WORK C SO, P305, DOI 10.1109/SCAM.2014.17
   Keivanloo I, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P201, DOI 10.1109/SANER.2015.7081830
   Keivanloo I, 2014, SCI COMPUT PROGRAM, V95, P426, DOI 10.1016/j.scico.2013.10.006
   Kessentini M, 2011, CONF PROC INT SYMP C, P81, DOI 10.1109/ICPC.2011.22
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kim H., 2011, P 33 INT C SOFTW ENG
   Kim M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P83
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Kimura S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P575, DOI 10.1109/ICSM.2012.6405324
   Kirk D., 2006, P PROGR SILC, P1
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Kontogiannis K. A., 1996, Automated Software Engineering, V3, P77, DOI 10.1007/BF00126960
   Koschke R., 2008, SOFTWARE EVOLUTION, P15, DOI DOI 10.1007/978-3-540-76440-3_2
   Koschke R, 2006, WORK CONF REVERSE EN, P253
   Koschke R, 2012, EUR CON SFTWR MTNCE, P309, DOI 10.1109/CSMR.2012.37
   Koschke R, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P119, DOI 10.1109/FOSM.2008.4659255
   Kreimer J, 2005, ELECTRON NOTES THEOR, V141, P117, DOI 10.1016/j.entcs.2005.02.059
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Krinke J, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P57, DOI 10.1109/SCAM.2008.14
   Krinke J, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P170, DOI 10.1109/WCRE.2007.7
   Krishnan GP, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P104, DOI 10.1109/CSMR-WCRE.2014.6747160
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Lee M.-W., 2010, Proceedings of the Eighteenth ACM SIGSOFT International Symposium on Foundations of Software Engineering, FSE '10, P167
   Lee S, 2011, SOFTWARE PRACT EXPER, V41, P521, DOI 10.1002/spe.1031
   Li HQ, 2011, LECT NOTES COMPUT SC, V6603, P356, DOI 10.1007/978-3-642-19811-3_25
   Li HQ, 2010, LECT NOTES COMPUT SC, V5937, P104
   Li JY, 2012, PROC INT CONF SOFTW, P310, DOI 10.1109/ICSE.2012.6227183
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Li ZM, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P289
   Ligu E, 2013, PROC IEEE INT CONF S, P392, DOI 10.1109/ICSM.2013.55
   Lin Y, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P164, DOI 10.1145/2568225.2568298
   Lin Y, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P520, DOI 10.1145/2786805.2786871
   Lin Y, 2014, PROC IEEE INT CONF S, P341, DOI 10.1109/ICSME.2014.56
   Linares-Vasquez M., 2014, PROC 11 WORK C MININ, P242
   Linares-Vasquez M, 2014, P 22 INT C PROGR COM, P232
   Liu H, 2016, IEEE T SOFTWARE ENG, V42, P544, DOI 10.1109/TSE.2015.2503740
   Liu H, 2013, IEEE T SOFTWARE ENG, V39, P1112, DOI 10.1109/TSE.2013.4
   Liu H, 2012, IEEE T SOFTWARE ENG, V38, P220, DOI 10.1109/TSE.2011.9
   Livieri S, 2007, PROC INT CONF SOFTW, P106
   Lozano A, 2008, 2008 23RD IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS, PROCEEDINGS, P184
   Lozano A, 2008, PROC IEEE INT CONF S, P227, DOI 10.1109/ICSM.2008.4658071
   Lucia, 2012, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE.2012.6227175
   Macia Bertran I., 2011, P 10 INT C ASP OR SO, P203
   Macia I., 2011, Proceedings of the 2011 Fifth Brazilian Symposium on Software Components, Architectures and Reuse (SBCARS 2011), P41, DOI 10.1109/SBCARS.2011.18
   Macia I, 2013, EUR CON SFTWR MTNCE, P177, DOI 10.1109/CSMR.2013.27
   Macia I, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P662, DOI 10.1109/ICSM.2012.6405348
   Macia I, 2012, EUR CON SFTWR MTNCE, P277, DOI 10.1109/CSMR.2012.35
   Mahouachi R, 2012, LECT NOTES COMPUT SC, V7212, P455, DOI 10.1007/978-3-642-28872-2_31
   Maiga A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P466, DOI 10.1109/WCRE.2012.56
   Mäntylä M, 2003, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSM.2003.1235447
   Mäntylä MV, 2006, EMPIR SOFTW ENG, V11, P395, DOI 10.1007/s10664-006-9002-8
   Mäntylä MV, 2004, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSM.2004.1357825
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Marinescu R, 2012, IBM J RES DEV, V56, DOI 10.1147/JRD.2012.2204512
   Marinescu R., 2002, THESIS POLITEHNICA U
   Marinescu R, 2011, IEEE INT WORK C SO, P65, DOI 10.1109/SCAM.2011.9
   Mayrand J, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P244, DOI 10.1109/ICSM.1996.565012
   Mazinanian D, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P613, DOI 10.1145/2889160.2889168
   Mazinanian D, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P496, DOI 10.1145/2635868.2635879
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Medvidovic Nenad, 2012, AOSD 12, P167
   Mende T, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P163
   Mende T, 2009, J SOFTW MAINT EVOL-R, V21, P143, DOI 10.1002/smr.402
   Merlo E., 2007, P DAGST SEM, V6301, P1
   Mihancea PF, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P92, DOI 10.1109/CSMR.2005.53
   Moha N, 2008, LECT NOTES COMPUT SC, V4961, P276, DOI 10.1007/978-3-540-78743-3_20
   Moha N, 2008, LECT NOTES ARTIF INT, V4933, P289, DOI 10.1007/978-3-540-78137-0_21
   Moha N, 2010, FORM ASP COMPUT, V22, P345, DOI 10.1007/s00165-009-0115-x
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Mondal M., 2014, P 11 WORK C MIN SOFT, P32
   Mondal M, 2015, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSM.2015.7332455
   Mondal M, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P114, DOI 10.1109/CSMR-WCRE.2014.6747161
   Mondal M, 2014, IEEE INT WORK C SO, P11, DOI 10.1109/SCAM.2014.11
   Mondal M, 2014, PROC IEEE INT CONF S, P51, DOI 10.1109/ICSME.2014.27
   Mondal M, 2012, APPL COMPUT REV, V12, P20, DOI 10.1145/2387358.2387360
   Mondal M, 2014, SCI COMPUT PROGRAM, V95, P445, DOI 10.1016/j.scico.2013.11.027
   Mondal M, 2013, CONF PROC INT SYMP C, P103, DOI 10.1109/ICPC.2013.6613838
   Monteiro M., 2005, Proceedings of the 4th international conference on Aspect-oriented software development, P111
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Morales R, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P24, DOI 10.1109/SANER.2016.23
   Morales R, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P171, DOI 10.1109/SANER.2015.7081827
   Munro MJ, 2005, 2005 11th International Symposium on Software Metrics (METRICS), P124
   Murakami H., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P64, DOI 10.1109/SCAM.2012.21
   Murakami H, 2013, CONF PROC INT SYMP C, P93, DOI 10.1109/ICPC.2013.6613837
   Murphy-Hill E, 2010, SOFTVIS 2010: PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON SOFTWARE VISUALIZATION, P5
   Murphy-Hill EmersonR., 2005, OOPSLA 05, P282, DOI 10.1145/1094855.1094963
   Neukirchen H, 2007, LECT NOTES COMPUT SC, V4581, P228
   Nguyen HA, 2009, LECT NOTES COMPUT SC, V5503, P440
   Nguyen TT, 2009, IEEE INT CONF AUTOM, P123, DOI 10.1109/ASE.2009.90
   Oard D. W., 1995, CSTR3514 U MAR I ADV
   Oizumi W, 2016, PROC INT CONF SOFTW, P440, DOI 10.1145/2884781.2884868
   Oizumi W, 2014, 2014 28TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2014), P91, DOI 10.1109/SBES.2014.18
   Oizumi WN., 2015, J. Softw. Eng. Res. Dev, V3, P11, DOI [10.1186/s40411-015-0025-y, DOI 10.1186/S40411-015-0025-Y]
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Oliveira M, 2012, WIRES DATA MIN KNOWL, V2, P99, DOI 10.1002/widm.1048
   Oliveto R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P820, DOI 10.1145/1985793.1985913
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Opdyke WilliamF., 1990, Symposium on Object-Oriented Programming Emphasizing Practical Applications, P145
   Ossher J., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P283, DOI 10.1109/ICSM.2011.6080795
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Palomba Fabio, 2016, 2016 IEEE International Conference on Software Maintenance and Evolution (ICSME), P244, DOI 10.1109/ICSME.2016.27
   Palomba F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P482, DOI 10.1109/MSR.2015.69
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Palomba F, 2014, ADV COMPUT, V95, P201, DOI 10.1016/B978-0-12-800160-8.00004-8
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Park JW, 2014, KNOWL INF SYST, V41, P727, DOI 10.1007/s10115-013-0677-z
   Parnin C, 2013, EMPIR SOFTW ENG, V18, P1047, DOI 10.1007/s10664-012-9236-6
   Parnin C, 2008, SOFTVIS 2008: PROCEEDINGS OF THE 4TH ACM SYMPOSIUM ON SOFTWARE VISUALIZATION, P77
   Pate JR, 2013, J SOFTW-EVOL PROC, V25, P261, DOI 10.1002/smr.579
   Peldszus S, 2016, IEEE INT CONF AUTOM, P578, DOI 10.1145/2970276.2970338
   Pham NH, 2009, PROC INT CONF SOFTW, P276, DOI 10.1109/ICSE.2009.5070528
   Pietrzak B, 2006, LECT NOTES COMPUT SC, V4044, P75
   Piveta EK, 2006, J UNIVERS COMPUT SCI, V12, P811
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Punt L, 2016, PROC IEEE INT CONF S, P67, DOI 10.1109/ICSME.2016.73
   Qian WY, 2013, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2013.15
   Ragkhitwetsagul C, 2016, IEEE INT WORK C SO, P117, DOI 10.1109/SCAM.2016.13
   Rahman Foyzur, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P72, DOI 10.1109/MSR.2010.5463343
   Rahman F, 2012, EMPIR SOFTW ENG, V17, P503, DOI 10.1007/s10664-011-9195-3
   Rahman MS, 2014, IEEE INT WORK C SO, P31, DOI 10.1109/SCAM.2014.13
   Rajapakse DC, 2007, PROC INT CONF SOFTW, P116
   Rasool G, 2015, J SOFTW-EVOL PROC, V27, P867, DOI 10.1002/smr.1737
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   Ratzinger Jacek, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P354
   Rieger M, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P100, DOI 10.1109/WCRE.2004.25
   Romano D., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P437, DOI 10.1109/WCRE.2012.53
   Roy CK, 2010, J SOFTW MAINT EVOL-R, V22, P165, DOI 10.1002/smr.416
   Roy CK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P18, DOI 10.1109/CSMR-WCRE.2014.6747168
   Roy CK, 2008, WORK CONF REVERSE EN, P81, DOI 10.1109/WCRE.2008.54
   Roy CK, 2009, IEEE ICST WORKSHOP, P157, DOI 10.1109/ICSTW.2009.18
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy CK, 2008, INT C PROGRAM COMPRE, P153, DOI 10.1109/ICPC.2008.42
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Saboury A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P294, DOI 10.1109/SANER.2017.7884630
   Sae-Lim N., 2016, P IEEE 24 INT C PROG, P1, DOI [DOI 10.1109/ICPC.2016.7503705, 10.1109/ICPC.2016.7503705]
   Sæbjornsen A, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P117
   Saha R. K., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P293, DOI 10.1109/ICSM.2011.6080796
   Saha RK, 2013, IEEE WORK CONF MIN S, P139, DOI 10.1109/MSR.2013.6624021
   Saha RK, 2010, IEEE INT WORK C SO, P87, DOI 10.1109/SCAM.2010.32
   Sahin D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2675067
   Saini Vaibhav, 2016, 2016 IEEE International Conference on Software Maintenance and Evolution (ICSME), P256, DOI 10.1109/ICSME.2016.94
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Sajnani H, 2015, J SOFTW-EVOL PROC, V27, P402, DOI 10.1002/smr.1707
   Sajnani H, 2014, IEEE INT WORK C SO, P21, DOI 10.1109/SCAM.2014.12
   Salehie M, 2006, INT C PROGRAM COMPRE, P159, DOI 10.1109/ICPC.2006.6
   Sales V, 2013, WORK CONF REVERSE EN, P232, DOI 10.1109/WCRE.2013.6671298
   Schulze S, 2011, IEEE INT WORK C SO, P115, DOI 10.1109/SCAM.2011.12
   Schumacher Jan., 2010, Proc. ACMIEEE Int. Symp. on Empirical Software Eng. and Measurement. ESEM '10, V8, P1, DOI [10.1145/1852786.1852797, DOI 10.1145/1852786.1852797]
   Seaman C, 2011, ADV COMPUT, V82, P25, DOI 10.1016/B978-0-12-385512-1.00002-5
   Selim G. M. K., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P13, DOI 10.1109/WCRE.2010.11
   Selim G. M. K., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P227, DOI 10.1109/WCRE.2010.33
   Sharma T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P189, DOI [10.1109/MSR.2016.028, 10.1145/2901739.2901761]
   Shizhe Fu, 2015, 2015 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM). Proceedings, P1, DOI 10.1109/ESEM.2015.7321194
   Shomrat M, 2013, LECT NOTES COMPUT SC, V7920, P502, DOI 10.1007/978-3-642-39038-8_21
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Soh Z, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P393, DOI 10.1109/SANER.2016.103
   Sousa BL, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1528, DOI 10.1145/3167132.3167295
   Srivisut K, 2007, 6TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE, PROCEEDINGS, P1060, DOI 10.1109/ICIS.2007.68
   Steidl D., 2014, P 22 INT C PROGR COM, P168, DOI [10.1145/2597008.2597805, DOI 10.1145/2597008.2597805]
   Steidl D, 2015, IEEE INT WORK C SO, P151, DOI 10.1109/SCAM.2015.7335411
   Storrle Harald., 2010, ECSA COMPANION VOLUM, P285
   Su Fang-Hsiang, 2016, 2016 IEEE 24th International Conference on Program Comprehension (ICPC), P1, DOI 10.1109/ICPC.2016.7503720
   Suryanarayana G., 2014, Refactoring for Software Design Smells: Managing Technical Debt
   Svajlenko J, 2015, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2015.7332459
   Svajlenko J, 2015, J SOFTW-EVOL PROC, V27, P430, DOI 10.1002/smr.1662
   Svajlenko J, 2014, PROC IEEE INT CONF S, P321, DOI 10.1109/ICSME.2014.54
   Taba SES, 2013, PROC IEEE INT CONF S, P270, DOI 10.1109/ICSM.2013.38
   Tairas R, 2012, INFORM SOFTWARE TECH, V54, P1297, DOI 10.1016/j.infsof.2012.06.011
   Tairas R, 2009, EMPIR SOFTW ENG, V14, P33, DOI 10.1007/s10664-008-9089-1
   Telesford QK, 2011, BRAIN CONNECT, V1, P367, DOI 10.1089/brain.2011.0038
   Thummalapenta S, 2010, EMPIR SOFTW ENG, V15, P1, DOI 10.1007/s10664-009-9108-x
   Tian J., 2005, Software Quality Engineering: Testing, Quality Assurance, and Quantifiable Improvement
   Tiarks R, 2011, SOFTWARE QUAL J, V19, P295, DOI 10.1007/s11219-010-9115-6
   Tiarks R, 2009, IEEE INT WORK C SO, P67, DOI 10.1109/SCAM.2009.16
   Tourwé T, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P91, DOI 10.1109/CSMR.2003.1192416
   Trifu A, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P39
   Tsantalis N, 2015, IEEE T SOFTWARE ENG, V41, P1055, DOI 10.1109/TSE.2015.2448531
   Tsantalis N, 2011, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2011.7
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Uchida S, 2005, J COMPUT INFORM SYST, V45, P1
   Uddin M. S., 2011, 2011 18th Working Conference on Reverse Engineering, P13, DOI 10.1109/WCRE.2011.12
   Uddin MS, 2015, IEEE INT WORK C SO, P161, DOI 10.1109/SCAM.2015.7335412
   Ueda Y, 2002, APSEC 2002: NINTH ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, P327, DOI 10.1109/APSEC.2002.1183002
   Ueda Y, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P67, DOI 10.1109/METRIC.2002.1011326
   Usman M, 2017, INFORM SOFTWARE TECH, V85, P43, DOI 10.1016/j.infsof.2017.01.006
   Vale G, 2014, 2014 EIGHTH BRAZILIAN SYMPOSIUM ON SOFTWARE COMPONENTS, ARCHITECTURES AND REUSE (SBCARS), P84, DOI 10.1109/SBCARS.2014.21
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   van Gurp J, 2002, J SYST SOFTWARE, V61, P105, DOI 10.1016/S0164-1212(01)00152-2
   Van Rompaey B, 2007, IEEE T SOFTWARE ENG, V33, P800, DOI 10.1109/TSE.2007.70745
   Vaucher S, 2009, WORK CONF REVERSE EN, P145, DOI 10.1109/WCRE.2009.23
   Vidal SA, 2016, AUTOMAT SOFTW ENG, V23, P501, DOI 10.1007/s10515-014-0175-x
   Wagner S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P79, DOI 10.1109/SANER.2016.94
   Wake W.C., 2003, Refactoring Workbook, V1st
   Walenstein A, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P285, DOI 10.1109/WCRE.2003.1287259
   Walenstein A., P DUPL RED SIM SOFTW, P1
   Wang CH, 2009, J SYST SOFTWARE, V82, P1600, DOI 10.1016/j.jss.2009.03.077
   Wang Tiantian, 2013, P 2013 9 JOINT M FDN, P455
   Wang W, 2014, PROC IEEE INT CONF S, P331, DOI 10.1109/ICSME.2014.55
   Wang W, 2011, IEEE INT WORK C SO, P95, DOI 10.1109/SCAM.2011.17
   Wang XY, 2014, IEEE T SOFTWARE ENG, V40, P773, DOI 10.1109/TSE.2014.2323972
   Wang XY, 2012, IEEE INT CONF AUTOM, P170, DOI 10.1145/2351676.2351701
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Xiao Chuan., 2008, WWW 08, P131, DOI DOI 10.1145/1367497.1367516
   Xie S, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P94, DOI 10.1109/CSMR-WCRE.2014.6747229
   Xie S, 2013, IEEE WORK CONF MIN S, P149, DOI 10.1109/MSR.2013.6624022
   Xing ZC, 2013, WORK CONF REVERSE EN, P102, DOI 10.1109/WCRE.2013.6671285
   Yamashita A, 2015, PROC IEEE INT CONF S, P121, DOI 10.1109/ICSM.2015.7332458
   Yamashita A, 2014, EMPIR SOFTW ENG, V19, P1111, DOI 10.1007/s10664-013-9250-3
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Yamashita A, 2013, J SYST SOFTWARE, V86, P2639, DOI 10.1016/j.jss.2013.05.007
   Yamashita A, 2013, INFORM SOFTWARE TECH, V55, P2223, DOI 10.1016/j.infsof.2013.08.002
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
   Yang J, 2015, EMPIR SOFTW ENG, V20, P1095, DOI 10.1007/s10664-014-9316-x
   Yoshida N, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P133
   Zazworka N, 2014, SOFTWARE QUAL J, V22, P403, DOI 10.1007/s11219-013-9200-8
   Zhang G, 2013, IEEE INT CONF AUTOM, P497, DOI 10.1109/ASE.2013.6693107
   Zhang G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P285, DOI 10.1109/ICSM.2012.6405284
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
   Zhang Y, 2008, PROC IEEE INT CONF S, P376, DOI 10.1109/ICSM.2008.4658086
   Zibran MF, 2011, 2011 16TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P295, DOI 10.1109/ICECCS.2011.36
   Zibran MF, 2011, IEEE INT WORK C SO, P105, DOI 10.1109/SCAM.2011.21
   Zibran MF, 2011, CONF PROC INT SYMP C, P266, DOI 10.1109/ICPC.2011.45
   Zibran MF, 2013, IET SOFTW, V7, P167, DOI 10.1049/iet-sen.2012.0058
NR 415
TC 41
Z9 44
U1 2
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2021
VL 47
IS 1
BP 17
EP 66
DI 10.1109/TSE.2018.2880977
PG 50
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA PR6XN
UT WOS:000607376900002
DA 2024-07-18
ER

PT J
AU Corley, CS
   Damevski, K
   Kraft, NA
AF Corley, Christopher S.
   Damevski, Kostadin
   Kraft, Nicholas A.
TI Changeset-Based Topic Modeling of Software Repositories
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Task analysis; Standards; Feature extraction; Resource management;
   Software maintenance; Maintenance engineering; Changesets; feature
   location; developer identification; program comprehension; mining
   software repositories; online topic modeling
ID RETRIEVAL
AB The standard approach to applying text retrieval models to code repositories is to train models on documents representing program elements. However, code changes lead to model obsolescence and to the need to retrain the model from the latest snapshot. To address this, we previously introduced an approach that trains a model on documents representing changesets from a repository and demonstrated its feasibility for feature location. In this paper, we expand our work by investigating: a second task (developer identification), the effects of including different changeset parts in the model, the repository characteristics that affect the accuracy of our approach, and the effects of the time invariance assumption on evaluation results. Our results demonstrate that our approach is as accurate as the standard approach for projects with most changes localized to a subset of the code, but less accurate when changes are highly distributed throughout the code. Moreover, our results demonstrate that context and messages are key to the accuracy of changeset-based models and that the time invariance assumption has a statistically significant effect on evaluation results, providing overly-optimistic results. Our findings indicate that our approach is a suitable alternative to the standard approach, providing comparable accuracy while eliminating retraining costs.
C1 [Corley, Christopher S.] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
   [Damevski, Kostadin] Virginia Commonwealth Univ, Dept Comp Sci, Richmond, VA 23284 USA.
   [Kraft, Nicholas A.] ABB Corp Res, Raleigh, NC 27606 USA.
C3 University of Alabama System; University of Alabama Tuscaloosa; Virginia
   Commonwealth University; ABB
RP Kraft, NA (corresponding author), ABB Corp Res, Raleigh, NC 27606 USA.
EM cscorley@crimson.ua.edu; damevski@acm.org; nicholas.a.kraft@us.abb.com
RI Damevski, Kostadin/F-4476-2014
OI Damevski, Kostadin/0000-0001-7799-2026
CR Abadi A, 2008, INT C PROGRAM COMPRE, P103, DOI 10.1109/ICPC.2008.30
   Bassett B, 2013, CONF PROC INT SYMP C, P133, DOI 10.1109/ICPC.2013.6613841
   Begel A., 2010, Software Engineering, 2010 ACM/IEEE 32nd International Conference on, V1, P125
   Bhattacharya P, 2012, J SYST SOFTWARE, V85, P2275, DOI 10.1016/j.jss.2012.04.053
   Bieman JM, 2003, PROG COMPREHEN, P44
   Biggers L. R., 2012, THESIS
   Biggers LR, 2014, EMPIR SOFTW ENG, V19, P465, DOI 10.1007/s10664-012-9224-x
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bissyandé TF, 2013, EUR CON SFTWR MTNCE, P89, DOI 10.1109/CSMR.2013.19
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Chatterji D, 2013, WORK CONF REVERSE EN, P112, DOI 10.1109/WCRE.2013.6671286
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Corley Christopher S., 2014, 2014 IEEE 4th Workshop on Mining Unstructured Data (MUD), P6, DOI 10.1109/MUD.2014.9
   Corley C. S., 2015, P IEEE INT C SOFTW M
   Corley CS, 2015, PROC IEEE INT CONF S, P556, DOI 10.1109/ICSM.2015.7332513
   Croft B., 2010, Search Engines: Information Retrieval in Practice
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   Damevski K, 2018, IEEE T SOFTWARE ENG, V44, P1100, DOI 10.1109/TSE.2017.2748134
   Damevski K, 2016, EMPIR SOFTW ENG, V21, P724, DOI 10.1007/s10664-015-9373-9
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dit B, 2013, IEEE WORK CONF MIN S, P131, DOI 10.1109/MSR.2013.6624019
   Dit B, 2011, CONF PROC INT SYMP C, P11, DOI 10.1109/ICPC.2011.47
   Eaddy M, 2008, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2008.39
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Hoffman M., 2010, ADV NEURAL INFORM PR, V23, P856
   Hossen K., 2014, Proceedings of the 22nd international conference on program comprehension (icpc 2014) (p, P130
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Kagdi H, 2012, J SOFTW-EVOL PROC, V24, P3, DOI 10.1002/smr.530
   Kagdi H, 2008, PROC IEEE INT CONF S, P157, DOI 10.1109/ICSM.2008.4658064
   Linares-Vásquez M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P451, DOI 10.1109/ICSM.2012.6405306
   Liu D, 2007, J BONE MINER RES, V22, pS234
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   McDonald D. W., 2000, CSCW 2000. ACM 2000 Conference on Computer Supported Cooperative Work, P231, DOI 10.1145/358916.358994
   McDonald D. W., 1998, ACM 1998 Conference on Computer Supported Cooperative Work. Proceedings. CSCW 98, P315, DOI 10.1145/289444.289506
   McIntosh S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P141, DOI 10.1145/1985793.1985813
   Minto Shawn, 2007, 4 INT WORKSH MIN SOF, P5
   Moreno L, 2014, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSME.2014.37
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2007, INT C PROGRAM COMPRE, P37
   Rajlich V, 2002, PROG COMPREHEN, P271, DOI 10.1109/WPC.2002.1021348
   Rao S, 2013, WORK CONF REVERSE EN, P62, DOI 10.1109/WCRE.2013.6671281
   Revelle Meghan, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P14, DOI 10.1109/ICPC.2010.10
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   SALTON G, 1988, INFORM PROCESS MANAG, V24, P513, DOI 10.1016/0306-4573(88)90021-0
   Scanniello G, 2011, CONF PROC INT SYMP C, P1, DOI 10.1109/ICPC.2011.13
   Shokripour R, 2013, IEEE WORK CONF MIN S, P2, DOI 10.1109/MSR.2013.6623997
   Singh Vallary, 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P27, DOI 10.1109/MTD.2014.16
   Tamrawi A, 2011, P 19 ACM SIGSOFT S 1, P365, DOI [DOI 10.1145/2025113.2025163, 10.31274/etd-180810-1814, DOI 10.31274/ETD-180810-1814]
   Vasa R, 2007, PROC IEEE INT CONF S, P74
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 56
TC 9
Z9 9
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2020
VL 46
IS 10
BP 1068
EP 1080
DI 10.1109/TSE.2018.2874960
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OA7HI
UT WOS:000577950900002
DA 2024-07-18
ER

PT J
AU Wang, SW
   Chen, TH
   Hassan, AE
AF Wang, Shaowei
   Chen, Tse-Hsun
   Hassan, Ahmed E.
TI How Do Users Revise Answers on Technical Q&A Websites? A Case Study on
   Stack Overflow
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Stack overflow; incentive system; badge; answer revision
AB To ensure the quality of its shared knowledge, Stack Overflow encourages users to revise answers through a badge system, which is based on quantitative measures (e.g., a badge is awarded after revising more than 500 answers). Prior studies show that badges can positively steer the user behavior on Stack Overflow (e.g., increasing user participation). However, little is known whether revision-related badges have a negative impact on the quality of revisions since some studies show that certain users may game incentive systems to gain rewards. In this study, we analyze 3,871,966 revision records that are collected from 2,377,692 Stack Overflow answers. We find that: 1) Users performed a much larger than usual revisions on the badge-awarding days compared to normal days; 25% of the users did not make any more revisions once they received their first revision-related badge. 2) Performing more revisions than usual in a single day increased the likelihood of such revisions being rolled back (e.g., due to undesired or incorrect revisions). 3) Users were more likely to perform text and small revisions if they performed many revisions in a single day. Our findings are concurred by the Stack Overflow community, and they highlight the need for changes to the current badge system in order to provide a better balance between the quality and quantity of revisions.
C1 [Wang, Shaowei; Hassan, Ahmed E.] Queens Univ, Sch Comp, Sch Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
   [Chen, Tse-Hsun] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H4B 1R6, Canada.
C3 Queens University - Canada; Concordia University - Canada
RP Wang, SW (corresponding author), Queens Univ, Sch Comp, Sch Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
EM shaowei@cs.queensu.ca; peterc@encs.concordia.ca; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Chen,
   Tse-Hsun/0000-0003-4027-0905
CR Agichtein E, 2008, P 2008 INT C WEB SEA, P183
   Anderson DE, 2013, VETERINARY TECHNIQUES FOR LLAMAS AND ALPACAS, P95
   [Anonymous], 2010, UNDERSTANDING STAT P
   [Anonymous], 2002, Stat. Methods Inter-Rater Reliab. Assess. Ser.
   Antin J., 2011, CHI 2011 GAMIFICATIO, V7
   Asaduzzaman M, 2013, IEEE WORK CONF MIN S, P97, DOI 10.1109/MSR.2013.6624015
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Boslaugh S., 2008, Statistics in a nutshell-a desktop quick reference
   Calefato F, 2018, INFORM SOFTWARE TECH, V94, P186, DOI 10.1016/j.infsof.2017.10.009
   Calefato F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P430, DOI 10.1109/MSR.2015.56
   Calvo RA, 2011, IEEE T LEARN TECHNOL, V4, P88, DOI 10.1109/TLT.2010.43
   Cavusoglu H., 2015, P ACM C COMPUTER SUP, V2015, P171, DOI DOI 10.1145/2685553.2698999
   Chen T, 2014, PROCEEDINGS OF THE FIFTH INTERNATIONAL SYMPOSIUM ON TEST AUTOMATION & INSTRUMENTATION, VOLS 1 AND 2, P82
   Chen TH, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P165, DOI [10.1109/MSR.2016.026, 10.1145/2901739.2901758]
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Duijn M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P410, DOI 10.1109/MSR.2015.51
   Efron B, 1997, J AM STAT ASSOC, V92, P548, DOI 10.2307/2965703
   Ford D, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174182
   Fox S, 2002, BASIC APPL SOC PSYCH, V24, P273, DOI 10.1207/S15324834BASP2404_3
   Grant S, 2013, IEEE WORK CONF MIN S, P65, DOI 10.1109/MSR.2013.6624007
   Harper FM, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P865
   Hsieh G, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P305
   Hudson N, 2015, PROCEEDINGS 2015 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P189, DOI 10.1109/VLHCC.2015.7357216
   Jan S. T. K., 2017, CORR
   Jones Julie., 2012, Proceedings of the CSCW, P249, DOI DOI 10.1145/2145204.2145244
   Kalliamvakou E, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P574, DOI 10.1109/ICSE.2015.74
   Kittur A, 2008, CSCW: 2008 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, CONFERENCE PROCEEDINGS, P37
   Li G, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1080, DOI 10.1145/2675133.2675155
   Li L, 2015, WWW'15 COMPANION: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P1453, DOI 10.1145/2740908.2742129
   Lowry P.B., 2004, J BUS COMMUN, V41, P66, DOI DOI 10.1177/0021943603259363
   Munteanu C, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P373
   Nguyen THD, 2011, ASIA PAC SOFWR ENG, P282, DOI [10.1109/APSC.2011.59, 10.1109/APSEC.2011.59]
   Ponzanelli L, 2014, PROC IEEE INT CONF S, P541, DOI 10.1109/ICSME.2014.90
   Ponzanelli L, 2014, INT CONF QUAL SOFTW, P343, DOI 10.1109/QSIC.2014.27
   Rahman MM, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P426, DOI 10.1109/MSR.2015.55
   Seaman C, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P149
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shields R, 2017, EDUC INF TECHNOL, V22, P1817, DOI 10.1007/s10639-016-9521-x
   Sun Aixin, 2007, P 16 ACM C INF KNOWL, P243
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P1552, DOI 10.1007/s10664-017-9558-5
   YAO Y, 2013, CORR
   Yao Y, 2015, INFORM SCIENCES, V302, P70, DOI 10.1016/j.ins.2014.12.038
NR 44
TC 21
Z9 22
U1 1
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2020
VL 46
IS 9
BP 1024
EP 1038
DI 10.1109/TSE.2018.2874470
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA NR7JB
UT WOS:000571735900005
DA 2024-07-18
ER

PT J
AU Di Nucci, D
   Panichella, A
   Zaidman, A
   De Lucia, A
AF Di Nucci, Dario
   Panichella, Annibale
   Zaidman, Andy
   De Lucia, Andrea
TI A Test Case Prioritization Genetic Algorithm Guided by the Hypervolume
   Indicator
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Measurement; Greedy algorithms; Genetic algorithms; Testing; Software
   systems; Fault detection; Test case prioritization; genetic algorithm;
   hypervolume
ID MANY-OBJECTIVE OPTIMIZATION; MULTIOBJECTIVE TECHNIQUE; SELECTION;
   FRAMEWORK; COVERAGE
AB Regression testing is performed during maintenance activities to assess whether the unchanged parts of a software behave as intended. To reduce its cost, test case prioritization techniques can be used to schedule the execution of the available test cases to increase their ability to reveal regression faults earlier. Optimal test ordering can be determined using various techniques, such as greedy algorithms and meta-heuristics, and optimizing multiple fitness functions, such as the average percentage of statement and branch coverage. These fitness functions condense the cumulative coverage scores achieved when incrementally running test cases in a given ordering using Area Under Curve (AUC) metrics. In this paper, we notice that AUC metrics represent a bi-dimensional (simplified) version of the hypervolume metric, which is widely used in many-objective optimization. Thus, we propose a Hypervolume-based Genetic Algorithm, namely HGA, to solve the Test Case Prioritization problem when using multiple test coverage criteria. An empirical study conducted with respect to five state-of-the-art techniques shows that (i) HGA is more cost-effective, (ii) HGA improves the efficiency of Test Case Prioritization, (iii) HGA has a stronger selective pressure when dealing with more than three criteria.
C1 [Di Nucci, Dario] Vrije Univ Brussel, B-1050 Brussels, Belgium.
   [Panichella, Annibale; Zaidman, Andy] Delft Univ Technol, NL-2628 CD Delft, Netherlands.
   [De Lucia, Andrea] Univ Salerno, I-84084 Fisciano, SA, Italy.
C3 Vrije Universiteit Brussel; Delft University of Technology; University
   of Salerno
RP Di Nucci, D (corresponding author), Vrije Univ Brussel, B-1050 Brussels, Belgium.
EM dario.di.nucci@vub.be; anni.panico@gmail.com; a.e.zaidman@tudelft.nl;
   adelucia@unisa.it
RI Di Nucci, Dario/Y-9679-2019; De Lucia, Andrea/AAG-6781-2020; Zaidman,
   Andy/O-6542-2014
OI Di Nucci, Dario/0000-0002-3861-1902; De Lucia,
   Andrea/0000-0002-4238-1425; Panichella, Annibale/0000-0002-7395-3588;
   Zaidman, Andy/0000-0003-2413-3935
FU F.R.S.-FNRS; FWO-Vlaanderen EOS Seco-Assist project, EU Project STAMP
   ICT-16-10 [731529]; NWO TestRoots project [016.133.324]
FX This research was partially funded by the F.R.S.-FNRS and FWO-Vlaanderen
   EOS Seco-Assist project, EU Project STAMP ICT-16-10 No.731529, and the
   NWO TestRoots project (016.133.324). We thank Epitropakis, Yoo, Harman,
   and Burke for providing us the data needed for replicating the study on
   the MySQL system. This paper is an extension of "Hypervolume-based
   Search for Test Case Prioritization" that appeared in the Proceedings of
   the Symposium on SearchBased Software Engineering 2015 (SSBSE 2015),
   Bergamo, Italy, pp. 157-172, 2015 [1].
CR [Anonymous], 2003, SOFTWARE TESTING TEC
   [Anonymous], 1992, HOLLAND ADAPTATION N
   [Anonymous], 103 TIK COMP ENG NET
   [Anonymous], 2014, ACM T SOFTWARE ENG M
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Asafuddoula M, 2015, IEEE T EVOLUT COMPUT, V19, P445, DOI 10.1109/TEVC.2014.2339823
   Atkinson KE., 2008, An Introduction to Numerical Analysis
   Auger A, 2009, FOGA'09: PROCEEDINGS OF THE 10TH ACM SIGRVO CONFERENCE ON FOUNDATIONS OF GENETIC ALGORITHMS, P87
   Bader J.M., 2010, HYPERVOLUME BASED SE
   Bader J, 2011, EVOL COMPUT, V19, P45, DOI 10.1162/EVCO_a_00009
   Baker R.D., 1995, Randomization Tests
   Beume N, 2009, IEEE T EVOLUT COMPUT, V13, P1075, DOI 10.1109/TEVC.2009.2015575
   Bryce R.C., 2007, WORKSHOP DOMAIN SPEC, P1
   Bryce RC, 2005, PROC INT CONF SOFTW, P146
   Bryce RC, 2006, INFORM SOFTWARE TECH, V48, P960, DOI 10.1016/j.infsof.2006.03.004
   Canfora G, 2015, SOFTW TEST VERIF REL, V25, P426, DOI 10.1002/stvr.1570
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Cao YX, 2013, INT CONF QUAL SOFTW, P153, DOI 10.1109/QSIC.2013.43
   Chen TY, 1996, INFORM PROCESS LETT, V60, P135, DOI 10.1016/S0020-0190(96)00135-4
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Conover W. J., 1998, PRACTICAL NONPARAMET, V3rd
   De Lucia A., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P145, DOI 10.1109/IWAST.2012.6228983
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   Do HS, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P113
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Elbaum S, 2004, SOFTWARE QUAL J, V12, P185, DOI 10.1023/B:SQJO.0000034708.84524.22
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   Emmerich M, 2005, LECT NOTES COMPUT SC, V3410, P62
   Epitropakis M. G., 2015, P INT S SOFTW TEST A, P234, DOI [DOI 10.1145/2771783.2771788, 10.1145/2771783.2771788]
   Fonseca CM, 1995, EVOL COMPUT, V3, P1, DOI 10.1162/evco.1995.3.1.1
   Harman M., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P111, DOI 10.1109/ICSTW.2011.60
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1098
   Hemmati H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430540
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Henard C, 2013, IEEE ICST WORKSHOP, P188, DOI 10.1109/ICSTW.2013.30
   Huang YC, 2012, J SYST SOFTWARE, V85, P626, DOI 10.1016/j.jss.2011.09.063
   Hughes EJ, 2005, IEEE C EVOL COMPUTAT, P222
   Ishibuchi H., 2010, P 12 ANN C GENETIC E, P527
   Islam MM, 2012, EUR CON SFTWR MTNCE, P21, DOI 10.1109/CSMR.2012.13
   Jiang SW, 2015, IEEE T CYBERNETICS, V45, P2202, DOI 10.1109/TCYB.2014.2367526
   Kukkonen S, 2005, IEEE C EVOL COMPUTAT, P443
   Kukkonen S, 2006, LECT NOTES COMPUT SC, V4193, P553
   Ledru Y, 2012, AUTOMAT SOFTW ENG, V19, P65, DOI 10.1007/s10515-011-0093-0
   Li BD, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2792984
   Li H, 2009, IEEE T EVOLUT COMPUT, V13, P284, DOI 10.1109/TEVC.2008.925798
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Li Z, 2013, INT SYM QUAL ELECT, P112, DOI 10.1109/ISQED.2013.6523598
   Luque G, 2011, STUD COMPUT INTELL, V367, P3, DOI 10.1007/978-3-642-22084-5
   Marchetto A, 2016, IEEE T SOFTWARE ENG, V42, P918, DOI 10.1109/TSE.2015.2510633
   Marchetto A, 2011, LECT NOTES COMPUT SC, V6956, P158, DOI 10.1007/978-3-642-23716-4_16
   Marré M, 2003, IEEE T SOFTWARE ENG, V29, P974, DOI 10.1109/TSE.2003.1245299
   Miller B. L., 1995, Complex Systems, V9, P193
   Moen HJF, 2013, LECT NOTES COMPUT SC, V7811, P128, DOI 10.1007/978-3-642-37140-0_13
   Nucci Dario, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P157, DOI 10.1007/978-3-319-22183-0_11
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Panichella A, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P15, DOI 10.1109/SST.2015.10
   Panichella A, 2015, IEEE T SOFTWARE ENG, V41, P358, DOI 10.1109/TSE.2014.2364175
   Papadakis M, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P1, DOI 10.1109/ICST.2014.11
   Petke Justyna, 2013, P ESEC FSE 2013, DOI [DOI 10.1145/2491411.2491436, 10.1145/2491411.2491436]
   Rogstad E, 2013, INFORM SOFTWARE TECH, V55, P1781, DOI 10.1016/j.infsof.2013.04.004
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Sayyad Abdel Salam, 2013, Proceedings of the 2013 3rd International Workshop on Replication in Empirical Software Engineering Research (RESER 2013), P84, DOI 10.1109/RESER.2013.6
   Srikanth H, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P62, DOI 10.1109/ISESE.2005.1541815
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Yoo S, 2010, J SYST SOFTWARE, V83, P689, DOI 10.1016/j.jss.2009.11.706
   Yu-Chi Huang, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P413, DOI 10.1109/COMPSAC.2010.66
   Yuanyuan Zhang, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P47, DOI 10.1109/SSBSE.2010.16
   Zhang LM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P192, DOI 10.1109/ICSE.2013.6606565
   Zhi Quan Zhou, 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P5584, DOI 10.1109/HICSS.2012.454
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
NR 81
TC 31
Z9 31
U1 2
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2020
VL 46
IS 6
BP 674
EP 696
DI 10.1109/TSE.2018.2868082
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA MC6BB
UT WOS:000543368800004
DA 2024-07-18
ER

PT J
AU Yu, TT
   Huang, ZC
   Wang, C
AF Yu, Tingting
   Huang, Zunchen
   Wang, Chao
TI <i>ConTesa</i>: Directed Test Suite Augmentation for Concurrent Software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Schedules; Instruction sets; Concurrent computing; Tools;
   Context; Regression testing; concurrent programming; symbolic execution;
   dynamic analysis
ID TEST-CASE PRIORITIZATION; MODEL-CHECKING; IMPACT
AB As software evolves, test suite augmentation techniques may be used to identify which part of the program needs to be tested due to code changes and how to generate these new test cases for regression testing. However, existing techniques focus exclusively on sequential software, without considering concurrent software in which multiple threads may interleave with each other during the execution and thus lead to a combinatorial explosion. To fill the gap, we propose ConTesa, the first test suite augmentation tool for concurrent software. The goal is to generate new test cases capable of exercising both code changes and the thread interleavings affected by these code changes. At the center of ConTesa is a two-pronged approach. First, it judiciously reuses the current test inputs while amplifying their interleaving coverage using random thread schedules. Then, it leverages an incremental symbolic execution technique to generate more test inputs and interleavings, to cover the new concurrency-related program behaviors. We have implemented ConTesa and evaluated it on a set of real-world multithreaded Linux applications. Our results show that it can achieve a significantly high interleaving coverage and reveal more bugs than state-of-the-art testing techniques.
C1 [Yu, Tingting; Huang, Zunchen] Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
   [Wang, Chao] Univ Southern Calif, Dept Comp Sci, Los Angeles, CA 90089 USA.
C3 University of Kentucky; University of Southern California
RP Yu, TT (corresponding author), Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
EM tyu@cs.uky.edu; zunchen.h@uky.edu; wang626@usc.edu
RI yu, tingting/HGA-4783-2022
OI Huang, Zunchen/0000-0002-5837-9960
FU U.S. National Science Foundation (NSF) [CCF-1652149, CCF-1722710];
   Office of Naval Research (ONR) [N00014-17-1-2896]
FX This work was supported in part by the U.S. National Science Foundation
   (NSF) under grants CCF-1652149 and CCF-1722710 and the Office of Naval
   Research (ONR) under grant N00014-17-1-2896.
CR Alam KA, 2015, INFORM SYST, V54, P43, DOI 10.1016/j.is.2015.06.003
   Alglave Jade, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P141, DOI 10.1007/978-3-642-39799-8_9
   [Anonymous], CodeSurfer
   [Anonymous], [No title captured]
   [Anonymous], 2010, P ACM SIGSOFT INT S
   [Anonymous], INT S SOFTW TEST AN
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   Burckhardt S, 2010, ACM SIGPLAN NOTICES, V45, P167, DOI 10.1145/1735971.1736040
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cai HP, 2016, IEEE INT CONF AUTOM, P344, DOI 10.1145/2970276.2970352
   Chambwera M, 2014, COMMUNITY-BASED ADAPTATION TO CLIMATE CHANGE: SCALING IT UP, P55
   Chatterjee K, 2010, LECT NOTES COMPUT SC, V6013, P293, DOI 10.1007/978-3-642-12029-9_21
   Coons KE, 2010, PPOPP 2010: PROCEEDINGS OF THE 2010 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING, P15, DOI 10.1145/1693453.1693458
   Demsky B, 2015, ACM SIGPLAN NOTICES, V50, P20, DOI [10.1145/2814270.2814297, 10.1145/2858965.2814297]
   Deng DD, 2013, ACM SIGPLAN NOTICES, V48, P785, DOI [10.1145/2544173.2509539, 10.1145/2509136.2509539]
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Farzan A., 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, P37
   Flanagan C, 2003, ACM SIGPLAN NOTICES, V38, P338, DOI 10.1145/780822.781169
   Gligoric Milos, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P55, DOI 10.1109/ICST.2010.33
   Guo SJ, 2016, IEEE INT CONF AUTOM, P531, DOI 10.1145/2970276.2970332
   Guo SJ, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P854, DOI 10.1145/2786805.2786841
   Hong S, 2015, SOFTW TEST VERIF REL, V25, P334, DOI 10.1002/stvr.1539
   Huang J, 2013, ACM SIGPLAN NOTICES, V48, P141, DOI 10.1145/2499370.2462167
   Huang YS, 2011, IEEE COMP SOC ANN, P144, DOI 10.1109/ISVLSI.2011.16
   Jagannath Vilas., 2011, P 2011 INT S SOFTWAR, P133
   Jalbert N., 2010, Proceedings of the Eighteenth ACM SIGSOFT International Symposium on Foundations of Software Engineering, FSE'10, P57, DOI DOI 10.1145/1882291.1882302
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Joshi S, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P19
   Kahlon V, 2007, LECT NOTES COMPUT SC, V4590, P226
   Kahlon V, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P13, DOI 10.1145/1595696.1595701
   Korel B, 2008, PROC IEEE INT CONF S, P247, DOI 10.1109/ICSM.2008.4658073
   Kusano M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P337, DOI 10.1145/3106237.3106243
   Kusano M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P799, DOI 10.1145/2950290.2950291
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Lu Shan., 2007, P 6 JOINT M EUROPEAN, P533
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Musuvathi M., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, P267
   Naik M, 2009, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2009.5070538
   Nistor A, 2012, PROC INT CONF SOFTW, P727, DOI 10.1109/ICSE.2012.6227145
   Orso A., 2004, Software Engineering Notes, V29, P241, DOI 10.1145/1041685.1029928
   Person Suzette, 2008, P 16 INT S FDN SOFTW, P226, DOI [DOI 10.1145/1453101.1453131, 10.1145/1453101.1453131]
   Popescu D., 2012, P 6 ACM INT C DISTR, P241, DOI [DOI 10.1145/2335484.2335511, 10.1145/2335484.2335511]
   Pradel M, 2012, ACM SIGPLAN NOTICES, V47, P521, DOI 10.1145/2345156.2254126
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Santelices Raul, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P429, DOI 10.1109/ICST.2010.29
   Santelices Raul, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P218, DOI 10.1109/ASE.2008.32
   Sen K., 2007, P 22 IEEE ACM INT C, P323, DOI [DOI 10.1145/1321631.1321679, 10.1145/1321631.1321679]
   Sen K, 2006, LECT NOTES COMPUT SC, V4144, P419
   Sen K, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P11, DOI 10.1145/1375581.1375584
   Taneja K., 2011, Proceedings of ACM International Symposium on Software Testing and Analysis, P1, DOI DOI 10.1145/2001420.2001422
   Terragni V, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P246, DOI 10.1109/ICSE.2015.45
   Tragatschnig S., 2014, Proceedings of Annual ACM Symposium on Applied Computing, P763
   Tragatschnig S, 2015, 2015 IEEE 24TH INTERNATIONAL CONFERENCE ON ENABLING TECHNOLOGIES - INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, P44, DOI 10.1109/WETICE.2015.13
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   von Praun C, 2003, ACM SIGPLAN NOTICES, V38, P115, DOI 10.1145/780822.781145
   Wang C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P221, DOI 10.1145/1985793.1985824
   Williams A, 2005, LECT NOTES COMPUT SC, V3586, P602
   Yoo S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P201
   Yu JJ, 2012, PROCEEDINGS OF THE ASME TURBO EXPO 2012, VOL 7, PTS A AND B, P485, DOI 10.1145/2398857.2384651
   Yu TT, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P48, DOI 10.1145/2568225.2568294
   Yu TT, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P918, DOI 10.1145/2786805.2803201
NR 65
TC 4
Z9 4
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2020
VL 46
IS 4
BP 405
EP 419
DI 10.1109/TSE.2018.2861392
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA LI5MK
UT WOS:000529529700003
DA 2024-07-18
ER

PT J
AU Allamanis, M
   Barr, ET
   Bird, C
   Devanbu, P
   Marron, M
   Sutton, C
AF Allamanis, Miltiadis
   Barr, Earl T.
   Bird, Christian
   Devanbu, Premkumar
   Marron, Mark
   Sutton, Charles
TI Mining Semantic Loop Idioms
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Data-driven tool design; idiom mining; code patterns
ID CODE; USAGE
AB To write code, developers stitch together patterns, like API protocols or data structure traversals. Discovering these patterns can identify inconsistencies in code or opportunities to replace these patterns with an API or a language construct. We present coiling, a technique for automatically mining code for semantic idioms: surprisingly probable, semantic patterns. We specialize coiling for loop idioms, semantic idioms of loops. First, we show that automatically identifiable patterns exist, in great numbers, with a large-scale empirical study of loops over 25MLOC. We find that most loops in this corpus are simple and predictable: 90 percent have fewer than 15LOC and 90 percent have no nesting and very simple control. Encouraged by this result, we then mine loop idioms over a second, buildable corpus. Over this corpus, we show that only 50 loop idioms cover 50 percent of the concrete loops. Our framework opens the door to data-driven tool and language design, discovering opportunities to introduce new API calls and language constructs. Loop idioms show that LINQ would benefit from an Enumerate operator. This can be confirmed by the exitence of a StackOverflow question with 542k views that requests precisely this feature.
C1 [Allamanis, Miltiadis; Sutton, Charles] Univ Edinburgh, Edinburgh EH8 9YL, Midlothian, Scotland.
   [Allamanis, Miltiadis] Microsoft Res, Cambridge, England.
   [Barr, Earl T.] UCL, London WC1E 6BT, England.
   [Bird, Christian; Marron, Mark] Microsoft Res, Redmond, WA 98052 USA.
   [Devanbu, Premkumar] Univ Calif Davis, Davis, CA 95616 USA.
   [Sutton, Charles] Alan Turing Inst, London NW1 2DB, England.
C3 University of Edinburgh; Microsoft; University of London; University
   College London; Microsoft; University of California System; University
   of California Davis
RP Allamanis, M (corresponding author), Univ Edinburgh, Edinburgh EH8 9YL, Midlothian, Scotland.; Allamanis, M (corresponding author), Microsoft Res, Cambridge, England.
EM miallama@microsoft.com; e.barr@ucl.ac.uk; cbird@microsoft.com;
   devanbu@cs.ucdavis.edu; marron@microsoft.com; csutton@inf.ed.ac.uk
RI /AAZ-7265-2020
OI Barr, Earl Theodore/0000-0003-0771-7891
FU Microsoft Research; Engineering and Physical Sciences Research Council
   [EP/K024043/1]; US National Science Foundation [1414172]; EPSRC
   [EP/K024043/1] Funding Source: UKRI; Direct For Computer & Info Scie &
   Enginr [1414172] Funding Source: National Science Foundation; Division
   of Computing and Communication Foundations [1414172] Funding Source:
   National Science Foundation
FX M. Allamanis was supported by Microsoft Research through its PhD
   Scholarship Programme. E. Barr and P. Devanbu were supported by
   Microsoft Research through its Visiting Scholar Programme. C. Sutton was
   supported by the Engineering and Physical Sciences Research Council
   [grant number EP/K024043/1]. P. Devanbu was supported by the US National
   Science Foundation award number 1414172.
CR Acharya Mithun, 2007, P 6 JOINT M EUROPEAN, P25, DOI [DOI 10.1145/1287624.1287630, 10.1145/1287624.1287630]
   Aggarwal C.C., 2014, FREQUENT PATTERN MIN, DOI DOI 10.1007/978-3-319-07821-2
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P472, DOI 10.1145/2635868.2635901
   Allamanis M, 2013, IEEE WORK CONF MIN S, P207, DOI 10.1109/MSR.2013.6624029
   [Anonymous], 2010, BAYESIAN NONPARAMETR
   [Anonymous], UWEETR20100006 U WAS
   [Anonymous], 2007, QUEENS SCH COMPUT T
   [Anonymous], 2012, MACHINE LEARNING PRO
   Barr E. T., 2013, INT S SOFTW TEST AN, P123
   Barthe G, 2013, ACM SIGPLAN NOTICES, V48, P123, DOI 10.1145/2517327.2442529
   Basit HA, 2009, IEEE T SOFTWARE ENG, V35, P497, DOI 10.1109/TSE.2009.16
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Beyls K, 2009, COMPUTER, V42, P62, DOI 10.1109/MC.2009.57
   Binkley D, 2005, PROC IEEE INT CONF S, P27
   Cherem S, 2007, LECT NOTES COMPUT SC, V4420, P172
   Cohn T, 2010, J MACH LEARN RES, V11, P3053
   Couvreur J., 2017, ASYNC MAIN
   Couvreur J., 2017, NONTRAILING NAMED AR
   Dig D., 2009, Proceedings of the 24th ACM SIGPLAN Conference Companion on Object Oriented Programming Systems Languages and Applications, P793
   Dig D, 2011, IEEE SOFTWARE, V28, P17, DOI 10.1109/MS.2011.1
   Fowkes J, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P835, DOI 10.1145/2939672.2939787
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fratantonio Y, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P687, DOI 10.1145/2786805.2786873
   Gafter N., 2017, BINARY LITERALS
   Gelman A., 2014, Chapman & Hall/CRC texts in statistical science, V3rd
   Gershman SJ, 2012, J MATH PSYCHOL, V56, P1, DOI 10.1016/j.jmp.2011.08.004
   Goetz Brian, 2014, State of the Specialization
   Guida A, 2013, FRONT HUM NEUROSCI, V7, DOI 10.3389/fnhum.2013.00590
   Gyori A., 2013, CROSSING GAP IMPERAT, P543
   JetBrains, 2015, RESH
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Joshi A., 1997, HDB FORMAL LANGUAGES
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Kjolstad D. D. F., 2010, P WORKSH CONC APPL P, P1
   Knuth D. E., 1971, Software - Practice and Experience, V1, P105, DOI 10.1002/spe.4380010203
   Ko Amy J., 2018, DESIGNING EVALUATING
   Koschke R, 2006, WORK CONF REVERSE EN, P253
   Kuzborskij I., 2011, THESIS
   Liang Percy., 2010, Proceedings of the 2010 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, P573
   Maleki S., 2011, Proceedings 2011 International Conference on Parallel Architectures and Compilation Techniques (PACT), P372, DOI 10.1109/PACT.2011.68
   Marguerie F., 2008, LINQ IN ACTION
   Marks S., 2017, JEP 277 ENHANCED DEP
   Marron M, 2008, LECT NOTES COMPUT SC, V5335, P94, DOI 10.1007/978-3-540-89740-8_7
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McCallum A.K., 2002, MALLET MACHINE LEARN
   Meijer E., 2011, QUEUE, V9
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Murphy-Bill E, 2008, IEEE SOFTWARE, V25, P38, DOI 10.1109/MS.2008.123
   Nguyen TT, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P383, DOI 10.1145/1595696.1595767
   NUnit, 2016, NUNIT UN TEST FRAM N
   Okur S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1117, DOI 10.1145/2568225.2568309
   Post Matt., 2009, Proc. Association for Computational Linguistics (short paper), P45
   Qiu D, 2017, J SYST SOFTWARE, V123, P160, DOI 10.1016/j.jss.2016.10.017
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Salcianu A, 2005, LECT NOTES COMPUT SC, V3385, P199
   Schutz LE, 2008, REHABIL PSYCHOL, V53, P294, DOI 10.1037/a0012923
   SETHURAMAN J, 1994, STAT SINICA, V4, P639
   StackOverflow, 2008, DO YOU GET IND CURR
   StackOverflow, 2009, ARR SLIC IN C
   StackOverflow, 2010, US LINQ 2D ARR SEL N
   StackOverflow, 2013, SEARCH 2D ARR LINQ
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Wang J, 2013, IEEE WORK CONF MIN S, P319, DOI 10.1109/MSR.2013.6624045
   Xu HY, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P75, DOI 10.1145/1251535.1251548
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
NR 68
TC 9
Z9 11
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2018
VL 44
IS 7
BP 651
EP 668
DI 10.1109/TSE.2018.2832048
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GN3LJ
UT WOS:000438906900003
OA Green Accepted, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Mongiovi, M
   Gheyi, R
   Soares, G
   Ribeiro, M
   Borba, P
   Teixeira, L
AF Mongiovi, Melina
   Gheyi, Rohit
   Soares, Gustavo
   Ribeiro, Marcio
   Borba, Paulo
   Teixeira, Leopoldo
TI Detecting Overly Strong Preconditions in Refactoring Engines
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Refactoring; overly strong preconditions; automated testing; program
   generation
AB Refactoring engines may have overly strong preconditions preventing developers from applying useful transformations. We find that 32 percent of the Eclipse and JRRT test suites are concerned with detecting overly strong preconditions. In general, developers manually write test cases, which is costly and error prone. Our previous technique detects overly strong preconditions using differential testing. However, it needs at least two refactoring engines. In this work, we propose a technique to detect overly strong preconditions in refactoring engines without needing reference implementations. We automatically generate programs and attempt to refactor them. For each rejected transformation, we attempt to apply it again after disabling the preconditions that lead the refactoring engine to reject the transformation. If it applies a behavior preserving transformation, we consider the disabled preconditions overly strong. We evaluate 10 refactorings of Eclipse and JRRT by generating 154,040 programs. We find 15 overly strong preconditions in Eclipse and 15 in JRRT. Our technique detects 11 bugs that our previous technique cannot detect while missing 5 bugs. We evaluate the technique by replacing the programs generated by JDOLLY with the input programs of Eclipse and JRRT test suites. Our technique detects 14 overly strong preconditions in Eclipse and 4 in JRRT.
C1 [Mongiovi, Melina; Gheyi, Rohit; Soares, Gustavo] Univ Fed Campina Grande, Dept Comp & Syst, BR-58429900 Campina Grande, PB, Brazil.
   [Ribeiro, Marcio] Univ Fed Alagoas, Comp Inst, BR-57072900 Maceio, AL, Brazil.
   [Borba, Paulo; Teixeira, Leopoldo] Univ Fed Pernambuco, Informat Ctr, BR-50732970 Recife, PE, Brazil.
C3 Universidade Federal de Campina Grande; Universidade Federal de Alagoas;
   Universidade Federal de Pernambuco
RP Mongiovi, M (corresponding author), Univ Fed Campina Grande, Dept Comp & Syst, BR-58429900 Campina Grande, PB, Brazil.
EM melina@computacao.ufcg.edu.br; rohit@dsc.ufcg.edu.br;
   gsoares@dsc.ufcg.edu.br; marcio@ic.ufal.br; phmb@cin.ufpe.br;
   lmt@cin.ufpe.br
RI Borba, Paulo/C-5617-2013; Teixeira, Leopoldo M/G-5937-2016
OI Borba, Paulo/0000-0002-0381-2843; Mongiovi, Melina/0000-0002-9450-831X;
   Teixeira, Leopoldo/0000-0002-6154-1666
FU National Institute of Science and Technology for Software Engineering
   (INES) [CNPq 307190/2015-3, 465614/2014-0, 306610/2013-2,
   460883/2014-3]; CAPES [175956, 117875]; FACEPE [APQ-0570-1.03/14];
   FAPEAL [PPGs 14/2016]; DEVASSES [PIRSES-GA-2013-612569]
FX We would like to thank Miryung Kim, Jonhnanthan Oliveira, and the
   anonymous reviewers. This work was partially supported by the National
   Institute of Science and Technology for Software Engineering (INES),
   funded by CNPq 307190/2015-3, 465614/2014-0, 306610/2013-2 and
   460883/2014-3, CAPES 175956 and 117875, FACEPE APQ-0570-1.03/14, FAPEAL
   PPGs 14/2016, and DEVASSES PIRSES-GA-2013-612569.
CR [Anonymous], 2007, P 6 JOINT M EUR SOFT
   Balaban I, 2005, ACM SIGPLAN NOTICES, V40, P265, DOI 10.1145/1103845.1094832
   Borba P, 2004, SCI COMPUT PROGRAM, V52, P53, DOI 10.1016/j.scico.2004.03.003
   Eclipse.org, 2017, ECL PROJ
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Fuhrer R, 2005, LECT NOTES COMPUT SC, V3586, P71
   Fuhrer R. M., 2007, P 1 WORKSH REF TOOLS, P30
   Garrido A, 2005, PROC IEEE INT CONF S, P379
   Garrido A, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P323, DOI 10.1109/ASE.2003.1240330
   GLIGORIC M, 2013, PROC EUR CONF OBJ, V7920, P629
   Gligoric M., 2010, P 32 ACM IEEE INT C, P225, DOI 10.1145/1806799.1806835
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Jackson D., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P730, DOI 10.1109/ICSE.2000.870482
   Jagannath V, 2009, LECT NOTES COMPUT SC, V5503, P171
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Kerievsky J., 2004, REFACTORING PATTERNS
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G, 2001, COMMUN ACM, V44, P59, DOI 10.1145/383845.383858
   Li HQ, 2008, LECT NOTES COMPUT SC, V5083, P19
   McKeeman William M., 1998, DIGIT TECH J, V10, P100
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mongiovi M, 2014, PROC IEEE INT CONF S, P371, DOI 10.1109/ICSME.2014.59
   Mongiovi M, 2014, SCI COMPUT PROGRAM, V93, P39, DOI 10.1016/j.scico.2013.11.001
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Murphy-Hill E, 2009, PROC INT CONF SOFTW, P287, DOI 10.1109/ICSE.2009.5070529
   Negara S, 2013, LECT NOTES COMPUT SC, V7920, P552, DOI 10.1007/978-3-642-39038-8_23
   NetBeans.org, 2017, NETBEANS IDE
   Opdyke William F., 1992, THESIS
   Overbey J. L., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P303, DOI 10.1109/ASE.2011.6100067
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Rachatasumrit N, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P357, DOI 10.1109/ICSM.2012.6405293
   Roberts D., 1999, THESIS
   Schäfer M, 2012, IEEE T SOFTWARE ENG, V38, P1233, DOI 10.1109/TSE.2012.13
   Schäfer M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P71, DOI 10.1145/1985793.1985804
   Schäfer M, 2010, ACM SIGPLAN NOTICES, V45, P286, DOI 10.1145/1932682.1869485
   Schäfer M, 2010, LECT NOTES COMPUT SC, V6183, P225, DOI 10.1007/978-3-642-14107-2_11
   Schäfer M, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P277
   Schafer M., 2010, THESIS
   Schafer M., 2009, P 23 EUROPEAN C ECOO, P369, DOI [10.1007/978-3-642-03013-0_17, DOI 10.1007/978-3-642-03013-0_17]
   Schafer Max, 2008, P 3 WORKSH PROGR LAN, P67, DOI [10.1145/1481848.1481859., DOI 10.1145/1481848.1481859]
   SHATTUCK LG, 1994, HUM FAC ERG SOC P, P1080
   Silva L, 2008, SEFM 2008: SIXTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P217, DOI 10.1109/SEFM.2008.29
   Soares G., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P173, DOI 10.1109/ICSM.2011.6080784
   Soares G, 2013, J SYST SOFTWARE, V86, P1006, DOI 10.1016/j.jss.2012.10.040
   Soares G, 2013, IEEE T SOFTWARE ENG, V39, P147, DOI 10.1109/TSE.2012.19
   Soares G, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.63
   Steimann F, 2009, LECT NOTES COMPUT SC, V5653, P419, DOI 10.1007/978-3-642-03013-0_19
   Tip F, 2003, ACM SIGPLAN NOTICES, V38, P13, DOI 10.1145/949343.949308
   Tokuda L., 2001, Automated Software Engineering, V8, P89, DOI 10.1023/A:1008715808855
   Vakilian M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1106, DOI 10.1145/2568225.2568282
NR 51
TC 15
Z9 15
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2018
VL 44
IS 5
BP 429
EP 452
DI 10.1109/TSE.2017.2693982
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GF9RH
UT WOS:000432315500002
DA 2024-07-18
ER

PT J
AU García-Bañuelos, L
   van Beest, NRTP
   Dumas, M
   La Rosa, M
   Mertens, W
AF Garcia-Banuelos, Luciano
   van Beest, Nick R. T. P.
   Dumas, Marlon
   La Rosa, Marcello
   Mertens, Willem
TI Complete and Interpretable Conformance Checking of Business Processes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Process mining; conformance checking; process model; event log; event
   structure
ID PROCESS MODELS; PRECISION
AB This article presents a method for checking the conformance between an event log capturing the actual execution of a business process, and a model capturing its expected or normative execution. Given a process model and an event log, the method returns a set of statements in natural language describing the behavior allowed by the model but not observed in the log and vice versa. The method relies on a unified representation of process models and event logs based on a well-known model of concurrency, namely event structures. Specifically, the problem of conformance checking is approached by converting the event log into an event structure, converting the process model into another event structure, and aligning the two event structures via an error-correcting synchronized product. Each difference detected in the synchronized product is then verbalized as a natural language statement. An empirical evaluation shows that the proposed method can handle real datasets and produces more concise and higher-level difference descriptions than state-of-the-art conformance checking methods. In a survey designed according to the technology acceptance model, practitioners showed a preference towards the proposed method with respect to a state-of-the-art baseline.
C1 [Garcia-Banuelos, Luciano; Dumas, Marlon] Univ Tartu, Software Engn, EE-50090 Tartu, Estonia.
   [van Beest, Nick R. T. P.] CSIRO, Data61, Brisbane, Qld 4000, Australia.
   [La Rosa, Marcello] Queensland Univ Technol, Informat Syst, Brisbane, Qld 4000, Australia.
   [Mertens, Willem] Queensland Univ Technol, Brisbane, Qld 4000, Australia.
C3 University of Tartu; Commonwealth Scientific & Industrial Research
   Organisation (CSIRO); Queensland University of Technology (QUT);
   Queensland University of Technology (QUT)
RP García-Bañuelos, L (corresponding author), Univ Tartu, Software Engn, EE-50090 Tartu, Estonia.
EM luciano.garcia@ut.ee; nick.vanbeest@data61.csiro.au; marlon.dumas@ut.ee;
   m.larosa@qut.edu.au; w.mertens@qut.edu.au
RI Garcia-Banuelos, Luciano/R-1277-2016; La Rosa, Marcello/J-1088-2012; van
   Beest, Nick/AAI-3470-2021; Dumas, Marlon/H-2757-2015
OI Garcia-Banuelos, Luciano/0000-0001-9076-903X; Dumas,
   Marlon/0000-0002-9247-7476; La Rosa, Marcello/0000-0001-9568-4035;
   Mertens, Willem/0000-0002-1635-3041
FU Australian Research Council Discovery Project [DP150103356]; Estonian
   Research Council Project [IUT20-55]
FX We thank Jorge Munoz-Gama for his support with the conformance checking
   ProM plugin, Boudewijn van Dongen for his insights on trace alignment,
   and Abel Armas-Cervantes for his comments on early versions of this
   paper. This research is funded by the Australian Research Council
   Discovery Project DP150103356 and the Estonian Research Council Project
   IUT20-55.
CR Adriansyah A, 2015, INF SYST E-BUS MANAG, V13, P37, DOI 10.1007/s10257-014-0234-7
   Adriansyah A, 2011, IEEE INT ENTERP DIST, P55, DOI 10.1109/EDOC.2011.12
   [Anonymous], 2006, THESIS
   [Anonymous], 2015, ROAD TRAFFIC FINE MA
   [Anonymous], 1997, SAP R 3 BUSINESS BLU
   Armas-Cervantes A, 2016, INFORM SYST, V56, P304, DOI 10.1016/j.is.2015.09.009
   Buijs JCAM, 2013, LECT NOTES BUS INF P, V162, P44
   Conforti R, 2016, INFORM SYST, V56, P284, DOI 10.1016/j.is.2015.07.004
   Cook J. E., 1998, Software Engineering Notes, V23, P35, DOI 10.1145/291252.288214
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   de Medeiros AKA, 2003, LECT NOTES COMPUT SC, V2888, P389
   De Weerdt J., 2011, Proceedings 2011 IEEE Symposium on Computational Intelligence and Data Mining (CIDM 2011), P148, DOI 10.1109/CIDM.2011.5949428
   Dijkman RM, 2008, INFORM SOFTWARE TECH, V50, P1281, DOI 10.1016/j.infsof.2008.02.006
   ESPARZA J, 1994, SCI COMPUT PROGRAM, V23, P151, DOI 10.1016/0167-6423(94)00019-0
   Esparza J, 2002, FORM METHOD SYST DES, V20, P285, DOI 10.1023/A:1014746130920
   Fahland D, 2015, INFORM SYST, V47, P220, DOI 10.1016/j.is.2013.12.007
   Fahland D, 2011, DATA KNOWL ENG, V70, P448, DOI 10.1016/j.datak.2011.01.004
   Field A., 2009, Discovering statistics with SPSS, V3rd
   Garcia L.D., 2015, The Problem of College Readiness, P3
   HART PE, 1968, IEEE T SYST SCI CYB, VSSC4, P100, DOI 10.1109/TSSC.1968.300136
   Kleiner N, 2005, REQUIR ENG, V10, P212, DOI 10.1007/s00766-005-0004-7
   La Rosa M, 2011, EXPERT SYST APPL, V38, P7029, DOI 10.1016/j.eswa.2010.12.012
   Mannhardt F, 2016, COMPUTING, V98, P407, DOI 10.1007/s00607-015-0441-1
   MCMILLAN KL, 1995, FORM METHOD SYST DES, V6, P45, DOI 10.1007/BF01384314
   Munoz-Gama J, 2014, INFORM SYST, V46, P102, DOI 10.1016/j.is.2014.04.003
   Muñoz-Gama J, 2010, LECT NOTES COMPUT SC, V6336, P211, DOI 10.1007/978-3-642-15618-2_16
   NIELSEN M, 1981, THEOR COMPUT SCI, V13, P85, DOI 10.1016/0304-3975(81)90112-2
   PRATT V, 1986, INT J PARALLEL PROG, V15, P33, DOI 10.1007/BF01379149
   Rozinat A, 2008, INFORM SYST, V33, P64, DOI 10.1016/j.is.2007.07.001
   Szwarcfiter J. L., 1976, BIT (Nordisk Tidskrift for Informationsbehandling), V16, P192, DOI 10.1007/BF01931370
   TIERNAN JC, 1970, COMMUN ACM, V13, P722, DOI 10.1145/362814.362819
   Valmari A., 1992, Formal Methods in System Design, V1, P297, DOI 10.1007/BF00709154
   van Beest NRTP, 2015, LECT NOTES COMPUT SC, V9253, P386, DOI 10.1007/978-3-319-23063-4_26
   van der Aalst W, 2004, IEEE T KNOWL DATA EN, V16, P1128, DOI 10.1109/TKDE.2004.47
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   vanden Broucke SKLM, 2014, LECT NOTES COMPUT SC, V8841, P345, DOI 10.1007/978-3-662-45563-0_20
   vanden Broucke SKLM, 2014, IEEE T KNOWL DATA EN, V26, P1877, DOI 10.1109/TKDE.2013.130
   Vanthienen J., 2012, KBI1216 KU LEUV FAC
NR 39
TC 41
Z9 46
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2018
VL 44
IS 3
BP 262
EP 290
DI 10.1109/TSE.2017.2668418
PG 29
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FZ6AL
UT WOS:000427678400003
DA 2024-07-18
ER

PT J
AU Fleck, M
   Troya, J
   Kessentini, M
   Wimmer, M
   Alkhazi, B
AF Fleck, Martin
   Troya, Javier
   Kessentini, Marouane
   Wimmer, Manuel
   Alkhazi, Bader
TI Model Transformation Modularization as a Many-Objective Optimization
   Problem
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Model transformation; modularization; ATL; NSGA-III; MDE; SBSE
ID SOFTWARE; ALGORITHM
AB Model transformation programs are iteratively refined, restructured, and evolved due to many reasons such as fixing bugs and adapting existing transformation rules to new metamodels version. Thus, modular design is a desirable property for model transformations as it can significantly improve their evolution, comprehensibility, maintainability, reusability, and thus, their overall quality. Although language support for modularization of model transformations is emerging, model transformations are created as monolithic artifacts containing a huge number of rules. To the best of our knowledge, the problem of automatically modularizing model transformation programs was not addressed before in the current literature. These programs written in transformation languages, such as ATL, are implemented as one main module including a huge number of rules. To tackle this problem and improve the quality and maintainability of model transformation programs, we propose an automated search-based approach to modularize model transformations based on higher-order transformations. Their application and execution is guided by our search framework which combines an in-place transformation engine and a search-based algorithm framework. We demonstrate the feasibility of our approach by using ATL as concrete transformation language and NSGA-III as search algorithm to find a trade-off between different well-known conflicting design metrics for the fitness functions to evaluate the generated modularized solutions. To validate our approach, we apply it to a comprehensive dataset of model transformations. As the study shows, ATL transformations can be modularized automatically, efficiently, and effectively by our approach. We found that, on average, the majority of recommended modules, for all the ATL programs, by NSGA-III are considered correct with more than 84 percent of precision and 86 percent of recall when compared to manual solutions provided by active developers. The statistical analysis of our experiments over several runs shows that NSGA-III performed significantly better than multi-objective algorithms and random search. We were not able to compare with existing model transformations modularization approaches since our study is the first to address this problem. The software developers considered in our experiments confirm the relevance of the recommended modularization solutions for several maintenance activities based on different scenarios and interviews.
C1 [Fleck, Martin; Wimmer, Manuel] TU Wien, Business Informat Grp, A-1040 Vienna, Austria.
   [Troya, Javier] Univ Seville, Seville 41004, Spain.
   [Kessentini, Marouane] Univ Michigan, Software Engn, Ann Arbor, MI 48109 USA.
   [Alkhazi, Bader] Univ Michigan, Software Engn Lab, Ann Arbor, MI 48109 USA.
C3 Technische Universitat Wien; University of Sevilla; University of
   Michigan System; University of Michigan; University of Michigan System;
   University of Michigan
RP Fleck, M (corresponding author), TU Wien, Business Informat Grp, A-1040 Vienna, Austria.
EM fleck@big.tuwien.ac.at; jtroya@us.es; manuel@umich.edu;
   wimmer@big.tuwien.ac.at; bader@umich.edu
RI Troya, Javier/B-6951-2017
OI Troya, Javier/0000-0002-1314-9694; Alkhazi, Bader/0000-0002-4132-1578
FU Christian Doppler Forschungsgesellschaft; BMWFW, Austria; European
   Commission (FEDER); Spanish Government under CICYT project BELI
   [TIN2015-70560-R]; excellence network SEBASE [TIN2015-71841-REDT];
   Andalusian Government project COPAS [P12-TIC-1867]; Ford Motor Company
   (Ford Alliance Program)
FX This work has been partially supported by the Christian Doppler
   Forschungsgesellschaft and the BMWFW, Austria, by the European
   Commission (FEDER), by Spanish Government under CICYT project BELI
   (TIN2015-70560-R), the excellence network SEBASE (TIN2015-71841-REDT),
   the Andalusian Government project COPAS (P12-TIC-1867), and by the Ford
   Motor Company (Ford Alliance Program).
CR Abdeen H., 2014, INT C AUTOMATED SOFT, P289
   Abdeen H, 2009, WORK CONF REVERSE EN, P103, DOI 10.1109/WCRE.2009.13
   Alhwikem F.H.M., 2016, MODEVVA MODELS 2016, P54
   [Anonymous], 2004, OOPSLA GPCE WORKSH 0
   [Anonymous], 2005, MOF QVT Final Adopted Specification
   [Anonymous], 2013, P AMT, P72
   Anquetil N., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P235, DOI 10.1109/WCRE.1999.806964
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   ARENDT T, 2010, PROC 13 INT CONF, V6394, P121
   Baki I, 2014, LECT NOTES COMPUT SC, V8767, P636, DOI 10.1007/978-3-319-11653-2_39
   Bechikh S, 2011, SOFT COMPUT, V15, P1807, DOI 10.1007/s00500-011-0694-3
   ben Fadhel A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P212, DOI 10.1109/ICSM.2012.6405274
   Bowman Michael, 2007, 2007 IEEE International Conference on Software Maintenance, P124, DOI 10.1109/ICSM.2007.4362625
   Bowman M, 2010, IEEE T SOFTWARE ENG, V36, P817, DOI 10.1109/TSE.2010.70
   Brambilla M., 2012, MODEL DRIVEN SOFTWAR, DOI [10.1007/978-3-031-02546-4, DOI 10.1007/978-3-031-02546-4]
   Burgueño L, 2015, IEEE T SOFTWARE ENG, V41, P490, DOI 10.1109/TSE.2014.2375201
   Cicchetti A, 2011, LECT NOTES COMPUT SC, V6563, P183, DOI 10.1007/978-3-642-19440-5_11
   Clavel M, 2007, All About Maude: A High-Performance Logical Framework
   Cohen J., 1988, STAT POWER ANAL BEHA
   Csertán G, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P267, DOI 10.1109/ASE.2002.1115027
   Cuadrado JS, 2008, LECT NOTES COMPUT SC, V5063, P168, DOI 10.1007/978-3-540-69927-9_12
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   da Silva AR, 2015, COMPUT LANG SYST STR, V43, P139, DOI 10.1016/j.cl.2015.06.001
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 2012, EVOLUTIONARY COMPUTA, P1
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   Denil J, 2014, LECT NOTES COMPUT SC, V8769, P80, DOI 10.1007/978-3-319-11743-0_6
   Eclipse modeling project, 2015, ATLAS TRANSF LANG AT
   Eclipse Modeling Project, 2015, ATL ZOO
   Eiben AE, 2011, SWARM EVOL COMPUT, V1, P19, DOI 10.1016/j.swevo.2011.02.001
   Fatiregun D, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P65
   FATIREGUN D, 2003, PROC INT CONF GEN, V2724, P2511
   Faunes Martin, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P17, DOI 10.1007/978-3-642-38883-5_2
   Feldthaus A, 2013, ACM SIGPLAN NOTICES, V48, P323, DOI [10.1145/2544173.2509520, 10.1145/2509136.2509520]
   Fleck M., 2015, Proc. of NasBASE, P1
   Fleck M, 2016, COMPANION PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON MODULARITY (MODULARITY COMPANION'16), P190, DOI 10.1145/2892664.2892698
   Fleck M, 2016, LECT NOTES COMPUT SC, V9765, P79, DOI 10.1007/978-3-319-42064-6_6
   GLOVER F, 1986, COMPUT OPER RES, V13, P533, DOI 10.1016/0305-0548(86)90048-1
   Greenyer J, 2010, SOFTW SYST MODEL, V9, P21, DOI 10.1007/s10270-009-0121-8
   Harman M., 2002, GEN EV COMP C GECCO, P1351
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Harman M, 2010, LECT NOTES COMPUT SC, V6013, P1, DOI 10.1007/978-3-642-12029-9_1
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   HOLM S, 1979, SCAND J STAT, V6, P65
   JEZEQUEL JM, 2011, PROC 3 INT SUMM SCH, V6491, P201
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Kappel Gerti, 2012, Conceptual Modelling and Its Theoretical Foundations. Essays Dedicated to Bernhard Thalheim on the Occasion of his 60th Birthday, P197, DOI 10.1007/978-3-642-28279-9_15
   KESSENTINI M, 2008, P 11 INT C MOD DRIV, V5301, P159
   Kessentini M, 2012, SOFTW SYST MODEL, V11, P209, DOI 10.1007/s10270-010-0175-7
   Kessentini M, 2010, LECT NOTES COMPUT SC, V6138, P156, DOI 10.1007/978-3-642-13595-8_14
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Klar Felix., 2007, P THE 6 JOINT M EURO, P285
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kurtev I, 2007, SCI COMPUT PROGRAM, V68, P138, DOI 10.1016/j.scico.2007.05.006
   Kusel A, 2015, SOFTW SYST MODEL, V14, P537, DOI 10.1007/s10270-013-0343-7
   Kusel A., 2013, Amt@ models, P1
   Laumanns M, 2002, EVOL COMPUT, V10, P263, DOI 10.1162/106365602760234108
   Lúcio L, 2016, SOFTW SYST MODEL, V15, P647, DOI 10.1007/s10270-014-0429-x
   Mancoridis S, 1998, PROG COMPREHEN, P45, DOI 10.1109/WPC.1998.693283
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Masoud H, 2014, J SYST SOFTWARE, V93, P110, DOI 10.1016/j.jss.2014.02.053
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Milanovic M., 2006, ELECT COMMUN EUR ASS, V5, P1
   Milanovic M., 2007, THESIS
   Mitchell BS, 2008, SOFT COMPUT, V12, P77, DOI 10.1007/s00500-007-0218-3
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Mottu JM, 2006, LECT NOTES COMPUT SC, V4066, P376
   Oakes BJ, 2018, SOFTW SYST MODEL, V17, P815, DOI 10.1007/s10270-016-0548-7
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Rachmawati L, 2009, IEEE T EVOLUT COMPUT, V13, P810, DOI 10.1109/TEVC.2009.2017515
   Rivera JE, 2009, S VIS LANG HUM CEN C, P51, DOI 10.1109/VLHCC.2009.5295300
   Saada H, 2013, IEEE INT CONF AUTOM, P688, DOI 10.1109/ASE.2013.6693134
   Cuadrado JS, 2014, PROC INT SYMP SOFTW, P34, DOI 10.1109/ISSRE.2014.10
   Cuadrado JS, 2014, IEEE T SOFTWARE ENG, V40, P1042, DOI 10.1109/TSE.2014.2339852
   Cuadrado JS, 2009, SOFTW SYST MODEL, V8, P325, DOI 10.1007/s10270-008-0093-0
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Seng O, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1045
   Shelburg Jeffery, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P209, DOI 10.1007/978-3-642-39742-4_16
   Shtern M, 2009, INT C PROGRAM COMPRE, P248, DOI 10.1109/ICPC.2009.5090051
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Thies A., 2010, P 2 INT WORKSH REC S, P1, DOI [10.1145/1808920.1808921, DOI 10.1145/1808920.1808921]
   Tisi M, 2009, LECT NOTES COMPUT SC, V5562, P18, DOI 10.1007/978-3-642-02674-4_3
   Troya J., 2016, Rules and helpers dependencies in atl-technical report
   Troya J, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a5
   Troya J, 2015, IEEE ICST WORKSHOP
   Varró D, 2006, LECT NOTES COMPUT SC, V4199, P410
   Wagelaar D, 2010, SOFTW SYST MODEL, V9, P285, DOI 10.1007/s10270-009-0134-3
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
   Wimmer Manuel., 2007, System Sciences, p285b, DOI DOI 10.1109/HICSS.2007.572
NR 96
TC 41
Z9 44
U1 0
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2017
VL 43
IS 11
BP 1009
EP 1032
DI 10.1109/TSE.2017.2654255
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FM5XS
UT WOS:000415117000002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mertz, J
   Nunes, I
AF Mertz, Jhonny
   Nunes, Ingrid
TI A Qualitative Study of Application-Level Caching
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Application-level caching; qualitative study; pattern; guideline; web
   application
ID WEB; GUIDELINES; USABILITY
AB Latency and cost of Internet-based services are encouraging the use of application-level caching to continue satisfying users' demands, and improve the scalability and availability of origin servers. Despite its popularity, this level of caching involves the manual implementation by developers and is typically addressed in an ad-hoc way, given that it depends on specific details of the application. As a result, application-level caching is a time-consuming and error-prone task, becoming a common source of bugs. Furthermore, it forces application developers to reason about a crosscutting concern, which is unrelated to the application business logic. In this paper, we present the results of a qualitative study of how developers handle caching logic in their web applications, which involved the investigation of ten software projects with different characteristics. The study we designed is based on comparative and interactive principles of grounded theory, and the analysis of our data allowed us to extract and understand how developers address cache-related concerns to improve performance and scalability of their web applications. Based on our analysis, we derived guidelines and patterns, which guide developers while designing, implementing and maintaining application-level caching, thus supporting developers in this challenging task that is crucial for enterprise web applications.
C1 [Mertz, Jhonny; Nunes, Ingrid] Univ Fed Rio Grande do Sul, Inst Informat, BR-90040060 Porto Alegre, RS, Brazil.
   [Nunes, Ingrid] TU Dortmund, D-44227 Dortmund, Germany.
C3 Universidade Federal do Rio Grande do Sul; Dortmund University of
   Technology
RP Mertz, J (corresponding author), Univ Fed Rio Grande do Sul, Inst Informat, BR-90040060 Porto Alegre, RS, Brazil.
EM jmamertz@inf.ufrgs.br; ingridnunes@inf.ufrgs.br
RI Nunes, Ingrid/A-3715-2014
OI Nunes, Ingrid/0000-0002-6879-5829; Mertz, Jhonny/0000-0002-2522-4700
FU CNPq [131550/2015-2, 303232/2015-3]; CAPES [7619-15-4]; Alexander von
   Humboldt [BRA 1184533 HFSTCAPES-P]
FX Jhonny Mertz would like to thank CNPq grant 131550/2015-2. Ingrid Nunes
   thanks for research grants CNPq ref. 303232/2015-3, CAPES ref.
   7619-15-4, and Alexander von Humboldt, ref. BRA 1184533 HFSTCAPES-P. We
   would also like to thank the editor of this journal and anonymous
   reviewers who have provided helpful comments and suggestions on the
   refinement of the paper.
CR Ali W., 2011, INT J ADV SOFT COMPU, V3, P18
   Amza C., 2005, SUPERCOMPUTING ICS 0, P264
   [Anonymous], 2016, RAILS LOW LEVEL CACH
   [Anonymous], 1967, The Discovery of Grounded Theory, DOI [10.2307/588533, DOI 10.2307/588533]
   Atikoglu Berk, 2012, Performance Evaluation Review, V40, P53, DOI 10.1145/2318857.2254766
   Baeza-Yates R, 2007, LECT NOTES COMPUT SC, V4726, P74
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Börstler J, 2016, IEEE T SOFTWARE ENG, V42, P886, DOI 10.1109/TSE.2016.2527791
   Bouchenak S, 2006, LECT NOTES COMPUT SC, V4290, P1
   Candan KS, 2001, SIGMOD RECORD, V30, P532, DOI 10.1145/376284.375736
   Carvajal L, 2013, IEEE T SOFTWARE ENG, V39, P1582, DOI 10.1109/TSE.2013.29
   Della Toffola L, 2015, ACM SIGPLAN NOTICES, V50, P607, DOI [10.1145/2858965.2814290, 10.1145/2814270.2814290]
   Domènech J, 2006, PERFORM EVALUATION, V63, P988, DOI 10.1016/j.peva.2005.11.001
   Einziger G, 2014, EUROMICRO WORKSHOP P, P146, DOI 10.1109/PDP.2014.34
   Fiore M, 2009, IEEE INFOCOM SER, P235, DOI 10.1109/INFCOM.2009.5061926
   Ghandeharizadeh S, 2014, ACM/IFIP/USENIX MIDDLEWARE 2014, P289, DOI 10.1145/2663165.2663317
   Glaser Barney G., 1992, Basic of grounded theory analysis: emergence vs. forcing
   Guerrero C, 2013, J SYST SOFTWARE, V86, P2970, DOI 10.1016/j.jss.2013.04.060
   Guerrero C, 2011, 2011 10TH IEEE INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS (NCA), DOI 10.1109/NCA.2011.55
   Gupta P, 2011, LECT NOTES COMPUT SC, V7049, P329
   Hu Xiameng., 2015, USENIX ANN TECHNICAL, P57
   Hwang Jinho., 2013, Proc. International Conference on Autonomic Computing (ICAC), P33
   Infante A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P730, DOI 10.1145/2591062.2591198
   Jorgensen M, 2005, IEEE T SOFTWARE ENG, V31, P942, DOI 10.1109/TSE.2005.128
   Juristo N, 2007, IEEE T SOFTWARE ENG, V33, P744, DOI 10.1109/TSE.2007.70741
   Larson PÅ, 2004, PROC INT CONF DATA, P177, DOI 10.1109/ICDE.2004.1319994
   Li L, 2006, INT CONF QUAL SOFTW, P303
   Ma H., 2014, P 37 INT ACM SIGIR 1, P983
   Megiddo N, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES (FAST'03), P115
   Mertz J., 2016, QUALITATIVE STUDY AP
   Nadi S, 2015, IEEE T SOFTWARE ENG, V41, P820, DOI 10.1109/TSE.2015.2415793
   Namoun A., 2016, IEEE T SOFTWARE ENG, V99, P1
   Negrao AP, 2015, J INTERNET SERV APPL, V6, DOI 10.1186/s13174-015-0018-4
   Nguyen Khanh, 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, ESEC/FSE 2013, page, P268
   Pal MB, 2014, INT CONF COMM SYST, P393, DOI 10.1109/CSNT.2014.84
   Podlipnig S, 2003, ACM COMPUT SURV, V35, P374, DOI 10.1145/954339.954341
   Pohl Christoph, 2005, THESIS
   Port DRK, 2010, P 9 USENIX S OP SYST, P279
   Qin XL, 2014, COMPUTING, V96, P415, DOI 10.1007/s00607-013-0365-6
   Radhakrishnan G, 2004, BELL LABS TECH J, V9, P165, DOI 10.1002/bltj.20011
   Ramaswamy L, 2005, IEEE T KNOWL DATA EN, V17, P859, DOI 10.1109/TKDE.2005.89
   Ravi J, 2009, J NETW COMPUT APPL, V32, P943, DOI 10.1016/j.jnca.2009.03.005
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Soundararajan G, 2005, DEEC 2005: INTERNATIONAL WORKSHOP ON DATA ENGINEERING ISSUES IN E-COMMERCE, PROCEEDINGS, P132
   Subramanian R, 2006, INT SYMP MICROARCH, P385
   Surapaneni S., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P468, DOI 10.1109/ASE.2011.6100101
   Waddington Daniel, 2013, 2013 IEEE/ACM 6th International Conference on Utility and Cloud Computing (UCC), P123, DOI 10.1109/UCC.2013.34
   Wang Wei, 2014, P 6 AS PAC S INT NOV, P35
   Yang Q, 2003, IEEE T KNOWL DATA EN, V15, P1050, DOI 10.1109/TKDE.2003.1209022
   Zhao B, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0129315
NR 52
TC 12
Z9 12
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2017
VL 43
IS 9
BP 798
EP 816
DI 10.1109/TSE.2016.2633992
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FH6TE
UT WOS:000411309800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Marchetto, A
   Islam, MM
   Asghar, W
   Susi, A
   Scanniello, G
AF Marchetto, Alessandro
   Islam, Md. Mahfuzul
   Asghar, Waseem
   Susi, Angelo
   Scanniello, Giuseppe
TI A Multi-Objective Technique to Prioritize Test Cases
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Regression testing; requirements; testing; test case prioritization
ID TRACEABILITY
AB While performing regression testing, an appropriate choice for test case ordering allows the tester to early discover faults in source code. To this end, test case prioritization techniques can be used. Several existing test case prioritization techniques leave out the execution cost of test cases and exploit a single objective function (e.g., code or requirements coverage). In this paper, we present a multi-objective test case prioritization technique that determines the ordering of test cases that maximize the number of discovered faults that are both technical and business critical. In other words, our new technique aims at both early discovering faults and reducing the execution cost of test cases. To this end, we automatically recover links among software artifacts (i.e., requirements specifications, test cases, and source code) and apply a metric-based approach to automatically identify critical and fault-prone portions of software artifacts, thus becoming able to give them more importance during test case prioritization. We experimentally evaluated our technique on 21 Java applications. The obtained results support our hypotheses on efficiency and effectiveness of our new technique and on the use of automatic artifacts analysis and weighting in test case prioritization.
C1 [Susi, Angelo] Fdn Bruno Kessler, Software Engn Grp, Trento, Italy.
   [Scanniello, Giuseppe] Univ Basilicata, DiMIE, Potenza, Italy.
C3 Fondazione Bruno Kessler; University of Basilicata
RP Susi, A (corresponding author), Fdn Bruno Kessler, Software Engn Grp, Trento, Italy.
EM alex.marchetto@gmail.com; fuzul.islam@gmail.com; waseem960@gmail.com;
   susi@fbk.eu; giuseppe.scanniello@unibas.it
RI Marchetto, Alessandro/AAE-4179-2022; Asghar, Waseem/H-1259-2012
OI Marchetto, Alessandro/0000-0002-6833-896X; Scanniello,
   Giuseppe/0000-0003-0024-7508
CR Abadi A, 2008, INT C PROGRAM COMPRE, P103, DOI 10.1109/ICPC.2008.30
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 1989, INSIGHTS REGRESSION
   [Anonymous], 2009, INTRO INFORM RETRIEV
   [Anonymous], 1983, INTRO MODERN INFORM
   Arafeen MJ, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P312, DOI 10.1109/ICST.2013.12
   Asghar MW, 2013, EUR CON SFTWR MTNCE, P417, DOI 10.1109/CSMR.2013.62
   Atkinson K., 1991, An Introduction to Numerical Analysis
   Baker R.D., 1995, Randomization Tests
   Basili V., 1994, The Goal Question Metric Approach, P528
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Branda R., 2013, P INT C SOFTW ENG AD, P271
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   da Silva B. C., 2011, P 2 INT WORKSH EM TR, P52
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2011, IEEE T SOFTWARE ENG, V37, P205, DOI 10.1109/TSE.2010.89
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Di Nardo D, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P302, DOI 10.1109/ICST.2013.27
   Do H, 2010, IEEE T SOFTWARE ENG, V36, P593, DOI 10.1109/TSE.2010.58
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Fang CR, 2014, SOFTWARE QUAL J, V22, P335, DOI 10.1007/s11219-013-9224-0
   Figueiredo E, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P183
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Islam MM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P654, DOI 10.1109/ICSM.2012.6405346
   Islam MM, 2012, EUR CON SFTWR MTNCE, P21, DOI 10.1109/CSMR.2012.13
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Kavitha R., 2010, 2010 International Conference on Communication Control and Computing Technologies, P826, DOI 10.1109/ICCCCT.2010.5670728
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P97, DOI 10.1007/s10664-007-9053-5
   Klock S., 2011, 6th international workshop on Traceability in emerging forms of software engineering, P24
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Lopez-Herrejon RE, 2007, LECT NOTES COMPUT SC, V4422, P423
   Lormans M., 2005, Proceedings of the 3rd international workshop on Traceability in emerging forms of software engineering, P37
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Marchetto A, 2011, LECT NOTES COMPUT SC, V6956, P158, DOI 10.1007/978-3-642-23716-4_16
   Marchetto A, 2011, EMPIR SOFTW ENG, V16, P103, DOI 10.1007/s10664-010-9149-1
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Marijan D, 2013, PROC IEEE INT CONF S, P540, DOI 10.1109/ICSM.2013.91
   Memon A. M., 2001, Software Engineering Notes, V26, P256, DOI 10.1145/503271.503244
   Mohanty S., 2011, INT J COMPUTER SCI I, V2, P1002
   Nguyen Cu D., 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P636, DOI 10.1109/ICWS.2011.75
   OMG, 2010, 23 OMG
   Pfleeger SL, 2000, IEEE SOFTWARE, V17, P27, DOI 10.1109/52.819965
   Qusef Abdallah, 2010, 2010 IEEE International Conference on Software Maintenance. pp, P1
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Rudiger Lincke., 2008, International Symposium on Software Testing and Analysis, P131, DOI 10.1145/1390630.1390648
   Salehie M, 2011, EUR CON SFTWR MTNCE, P329, DOI 10.1109/CSMR.2011.46
   Shaowei Wang, 2011, 2011 18th Working Conference on Reverse Engineering, P92, DOI 10.1109/WCRE.2011.72
   Sivanandam S., 2008, INTRO GENETIC ALGORI, P15
   Sun W., 2013, Proceedings of the 28th Symposium on Applied Computing, SAC '13, P1074
   Sundaram SK, 2010, REQUIR ENG, V15, P313, DOI 10.1007/s00766-009-0096-6
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Wohlin C., 2012, Experimentation in Software Engineering
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Yoo S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P201
   Yuanyuan Zhang, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P47, DOI 10.1109/SSBSE.2010.16
   Zhang LM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P192, DOI 10.1109/ICSE.2013.6606565
   Zou XC, 2010, EMPIR SOFTW ENG, V15, P119, DOI 10.1007/s10664-009-9114-z
NR 64
TC 52
Z9 55
U1 0
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2016
VL 42
IS 10
BP 918
EP 940
DI 10.1109/TSE.2015.2510633
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EA5KP
UT WOS:000386659500002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sharp, H
   Dittrich, Y
   de Souza, CRB
AF Sharp, Helen
   Dittrich, Yvonne
   de Souza, Cleidson R. B.
TI The Role of Ethnographic Studies in Empirical Software Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Design tools and techniques; human factors in software design; software
   engineering process; computer-supported collaborative work
ID SYSTEM; COORDINATION; EVOLUTION; QUALITY
AB Ethnography is a qualitative research method used to study people and cultures. It is largely adopted in disciplines outside software engineering, including different areas of computer science. Ethnography can provide an in-depth understanding of the socio-technological realities surrounding everyday software development practice, i.e., it can help to uncover not only what practitioners do, but also why they do it. Despite its potential, ethnography has not been widely adopted by empirical software engineering researchers, and receives little attention in the related literature. The main goal of this paper is to explain how empirical software engineering researchers would benefit from adopting ethnography. This is achieved by explicating four roles that ethnography can play in furthering the goals of empirical software engineering: to strengthen investigations into the social and human aspects of software engineering; to inform the design of software engineering tools; to improve method and process development; and to inform research programmes. This article introduces ethnography, explains its origin, context, strengths and weaknesses, and presents a set of dimensions that position ethnography as a useful and usable approach to empirical software engineering research. Throughout the paper, relevant examples of ethnographic studies of software practice are used to illustrate the points being made.
C1 [Sharp, Helen] Open Univ, Walton Hall, Milton Keynes MK7 6AA, Bucks, England.
   [Dittrich, Yvonne] IT Univ Copenhagen, Software & Syst Sect, Rued Langgaards Vej 7, DK-2300 Copenhagen S, Denmark.
   [de Souza, Cleidson R. B.] Vale Inst Technol, Tv Boaventura da Silva 955, BR-66055090 Belem, Para, Brazil.
   [de Souza, Cleidson R. B.] Fed Univ Para, Tv Boaventura da Silva 955, BR-66055090 Belem, Para, Brazil.
C3 Open University - UK; IT University Copenhagen; Instituto Tecnologico
   Vale Desenvolvimento Sustentavel; Universidade Federal do Para
RP Sharp, H (corresponding author), Open Univ, Walton Hall, Milton Keynes MK7 6AA, Bucks, England.
EM helen.sharp@open.ac.uk; ydi@itu.dk; cleidson.desouza@acm.org
RI de Souza, Cleidson R B/J-4409-2014
OI de Souza, Cleidson R B/0000-0003-3240-3122; Dittrich,
   Yvonne/0000-0003-4757-3394; Sharp, Helen/0000-0003-4376-1734
FU CNPq [440880/2013-0, 310468/2014-0]
FX The authors wish to thank attendees at their tutorials during ICSE over
   the last 5 years, and all the collaborators who have supported our
   ethnographic studies. The third author would like to thank the funding
   from CNPq (process numbers 440880/2013-0 and 310468/2014-0).
CR Abelein U, 2013, IEEE SOFTWARE, V30, P17, DOI 10.1109/MS.2013.124
   Anderson B., 1997, WORK ETHNOGRAPHY SYS, P159
   [Anonymous], 1993, Participatory Design: Principles and Practice
   [Anonymous], 2002, Software Design-Cognitive Aspects
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], INFORM RES
   [Anonymous], 2011, REAL WORLD RES
   [Anonymous], 1968, C SPONS NATO SCI COM
   [Anonymous], ROUTLEDGE INT HDB PA
   [Anonymous], 2004, ACTION IS FDN EMBODI, DOI [10.1109/3DUI.2011.5759212, DOI 10.7551/MITPRESS/7221.001.0001]
   [Anonymous], ENCY SOFTWARE ENG
   [Anonymous], 1989, PARTICIPANT OBSERVAT
   [Anonymous], THESIS
   ANZAI Y, 1979, PSYCHOL REV, V86, P124, DOI 10.1037/0033-295X.86.2.124
   Avram G, 2009, COMPUT SUPP COOP W J, V18, P477, DOI 10.1007/s10606-009-9099-6
   Ball LJ, 2000, INT J HUM-COMPUT ST, V53, P147, DOI 10.1006/ijhc.2000.0372
   Belbin R.M., 2022, Team roles at work, DOI 10.4324/9781003163152
   Bendifallah S., 1987, P 11 INT C SOFTW ENG, P260
   Blomberg J, 2013, COMPUT SUPP COOP W J, V22, P373, DOI 10.1007/s10606-012-9183-1
   Blumer Martin., 1984, The Chicago School of Sociology: Institutionalization, Diversity, and the Rise of Sociological Research
   Boden A., 2014, Proceedings of the Conference on Computer Supported Cooperative Work and Social Computing, P1120, DOI DOI 10.1145/2531602.2531621
   Boden A, 2012, J SOFTW-EVOL PROC, V24, P139, DOI 10.1002/smr.473
   Bondarenko O., 2005, CHI 05 P SIGCHI C HU, P121
   Button G., 1994, REQUIREMENTS ENG SOC, P217
   Button G., 2000, Design Studies, V21, P319, DOI DOI 10.1016/S0142-694X(00)00005-3
   Capiluppi A, 2007, PROC INT CONF SOFTW, P511
   Carroll J. M., 2001, CHI 2001 Conference Proceedings. Conference on Human Factors in Computing Systems, P372, DOI 10.1145/365024.365301
   Carstensen P. H., 1995, Scandinavian Journal of Information Systems, V7, P33
   Carstensen P. H., 1996, Computer Supported Cooperative Work (CSCW), V5, P387, DOI 10.1007/BF00136712
   Cataldo M., 2006, P 2006 20 06 ANN C C, P353, DOI DOI 10.1145/1180875.1180929
   Cohn ML, 2009, COMPUT SUPP COOP W J, V18, P401, DOI 10.1007/s10606-009-9100-4
   Crabtree A., 2012, Doing Design Ethnography
   Crabtree A., 2003, DESIGNING COLLABORAT
   Crabtree A, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P879
   Damian D, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P81
   De Souza C., 2005, P 2005 ACM INT C SUP, P197, DOI 10.1145/1099203.1099239
   de Souza C. R. B., 2004, Software Engineering Notes, V29, P221, DOI 10.1145/1041685.1029925
   De Souza C. R. B., 2005, THESIS
   de Souza CRB, 2009, COMPUT SUPP COOP W J, V18, P445, DOI 10.1007/s10606-009-9101-3
   de Souza CRB, 2009, IEEE SOFTWARE, V26, P17, DOI 10.1109/MS.2009.176
   de Souza CRB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1145/1368088.1368122
   Dittrich Y, 2002, SOCIAL THINKING-SOFTWARE PRACTICE, P243
   Dittrich Y, 2004, INFORM SOFTWARE TECH, V46, P603, DOI 10.1016/j.infsof.2003.11.002
   Dittrich Y., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P103, DOI 10.1109/ICGSE.2011.21
   Dittrich Y, 2008, EMPIR SOFTW ENG, V13, P231, DOI 10.1007/s10664-007-9057-1
   Dittrich Y, 2007, INFORM SOFTWARE TECH, V49, P531, DOI 10.1016/j.infsof.2007.02.009
   Dittrich Y, 2016, INFORM SOFTWARE TECH, V70, P220, DOI 10.1016/j.infsof.2015.07.001
   Dittrich Y, 2009, COMPUT SUPP COOP W J, V18, P393, DOI 10.1007/s10606-009-9106-y
   Dourish P, 1998, HUM-COMPUT INTERACT, V13, P395, DOI 10.1207/s15327051hci1304_2
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Engestrom Y., 1999, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V8, P63, DOI 10.1023/A:1008648532192
   Engestrom Y., 1999, PERSPECTIVES ACTIVIT, DOI DOI 10.1017/CBO9780511812774
   Ferreira Jennifer, 2012, Proceedings of the 2012 Agile Conference, P11, DOI 10.1109/Agile.2012.33
   Fetterman D.M., 1998, ETHNOGRAPHY, V2nd
   Floyd C., 1992, Software Development and Reality Construction, P86, DOI DOI 10.1007/978-3-642-76817-0_10
   Floyd C., 1987, COMPUTERS DEMOCRACY, P192
   Garfinkel, 1967, STUDIES ETHNOMETHODO
   Geertz Clifford., 1988, Works and Lives: The Anthropologist as Author
   Geiger R., 2011, 2011 IEEE 38th International Conference on Plasma Sciences (ICOPS), DOI 10.1109/PLASMA.2011.5992899
   Goh DPS, 2007, COMP STUD SOC HIST, V49, P109, DOI 10.1017/S0010417507000424
   Green T. R. G., 1989, People and Computers V. Proceedings of the Fifth Conference of the British Computer Society Human-Computer Interaction Specialist Group, P443
   Grinter R. E., 2003, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V12, P297, DOI 10.1023/A:1025012916465
   Hammersley M., 1995, ETHNOGRAPHY PRINCIPL, P9
   Heath C., 1992, Computer Supported Cooperative Work (CSCW), V1, P69, DOI 10.1007/BF00752451
   Hine C., 2000, Virtual ethnography
   Hovenden FM, 1996, SOFTWARE QUAL J, V5, P25, DOI 10.1007/BF02420942
   Hughes J., 1994, Transcending Boundaries, CSCW '94. Proceedings of the Conference on Computer Supported Cooperative Work, P429, DOI 10.1145/192844.193065
   Humboldt W. V., 1836, HETEROGENEITY LANGUA
   Hutchins E., 1995, COGNITION WILD
   Hutchinson H., 2003, P ACM C HUMAN FACTOR, P17, DOI DOI 10.1145/642611.642616
   Jordan B, 2009, HUM ORGAN, V68, P181, DOI 10.17730/humo.68.2.7x4406g270801284
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Klischewski R, 2002, SOCIAL THINKING-SOFTWARE PRACTICE, P309
   Latour B., 1987, SCI ACTION
   Latour B., 1994, Shaping technology/building society: Studies in sociotechnical change, P225
   LAW J, 1999, SOCIOLOGICAL REV
   Low J, 1996, INFORM SOFTWARE TECH, V38, P77, DOI 10.1016/0950-5849(95)01046-7
   Malinowski B., 1967, ARGONAUTS W PACIFIC
   MARCUS GE, 1995, ANNU REV ANTHROPOL, V24, P95, DOI 10.1146/annurev.an.24.100195.000523
   Martin D, 2007, PROC INT CONF SOFTW, P602
   Mathiassen L., 1998, Scandinavian Journal of Information Systems, V10, P67
   McGrath J.E., 1994, Human-Computer Interaction, V26, P152
   Mi P., 1991, Proceedings. First International Conference on the Software Process. Manufacturing Complex Systems (Cat. No.91TH0418-4), P188
   Millen D. R., 2000, DIS2000. Designing Interactive Systems Processes, Practices, Methods, and Techniques. Conference Proceedings, P280, DOI 10.1145/347642.347763
   Nardi B.A., 1997, HDB HUMAN COMPUTER I, P361
   NAUR P, 1985, MICROPROC MICROPROG, V15, P253, DOI 10.1016/0165-6074(85)90032-8
   Nicolini Davide., 2013, PRACTICE THEORY WORK
   Nygaard K., 1986, INFORM PROCESSING 86, P189
   O'Riain S., 2000, BLACKWELL CULTURAL E, P15
   Passos C, 2012, INT SYMP EMP SOFTWAR, P9, DOI 10.1145/2372251.2372255
   Poderi G., 2020, J PEER PRODUCTION, V14
   Poderi G., 2012, P 12 PART DES C EXPL, V2, P45
   Preece J., 2015, INTERACTION DESIGN, V4
   Prior J, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P160, DOI 10.1109/ASWEC.2008.12
   Robinson H, 2007, INFORM SOFTWARE TECH, V49, P540, DOI 10.1016/j.infsof.2007.02.007
   Rönkkö K, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P204, DOI 10.1109/ISESE.2002.1166941
   Ronkko K., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P433, DOI 10.1007/s10606-005-9004-x
   Ronkko K., 2004, Proc. 8th Conf. Participatory Des.: Artful Integr.: Interweaving Media, V1, P112, DOI DOI 10.1145/1011870.1011884
   Rooksby J, 2009, COMPUT SUPP COOP W J, V18, P559, DOI 10.1007/s10606-009-9098-7
   Sach R, 2011, INT SYMP EMP SOFTWAR, P368, DOI 10.1109/ESEM.2011.50
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Segal J, 2009, COMPUT SUPP COOP W J, V18, P581, DOI 10.1007/s10606-009-9096-9
   Segal J, 2009, IEEE SOFTWARE, V26, P55
   Shapiro D., 1994, Transcending Boundaries, CSCW '94. Proceedings of the Conference on Computer Supported Cooperative Work, P417, DOI 10.1145/192844.193064
   Sharp H, 2004, EMPIR SOFTW ENG, V9, P353, DOI 10.1023/B:EMSE.0000039884.79385.54
   Sharp H, 2004, INT J HUM-COMPUT ST, V61, P219, DOI 10.1016/j.ijhcs.2003.12.011
   Sharp H, 2000, IEEE SOFTWARE, V17, P40, DOI 10.1109/52.819967
   Sharp H., 2000, P WORKSH BEG BORR ST
   Sharp H., 2015, DSDM AND UX DESIGN
   Sharp H., 2007, PHYSICALITY2007, P61
   Sharp H, 2008, INT J HUM-COMPUT ST, V66, P506, DOI 10.1016/j.ijhcs.2007.10.004
   Sharp H, 2012, LECT NOTES BUS INF P, V111, P62
   Sharp H, 2009, INTERACT COMPUT, V21, P108, DOI 10.1016/j.intcom.2008.10.006
   Shull F, 2008, GUIDE ADV EMPIRICAL
   Sigfridsson A, 2007, INT FED INFO PROC, V234, P133
   Sigfridsson A, 2011, INFORM SOFTWARE TECH, V53, P981, DOI 10.1016/j.infsof.2011.01.012
   SIM SE, 2001, EMPIR SOFTW ENG, V6, P85, DOI [DOI 10.1023/A:1009809824225, 10.1023/A:1009809824225]
   Singer Janice, 1997, Proceedings of the 1997 Conference of the Centre for Advanced Studies on Collaborative Research. CASCON '97, P21
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Souza C.R. B. d., 2003, 15 INT C SOFTWARE EN, P196
   SUCHMAN L, 1993, UNDERSTANDING PRACTI
   Suchman L. A., 1987, Plans and situated actions: The problem of human-machine communication
   Teasley S., 2000, CSCW 2000. ACM 2000 Conference on Computer Supported Cooperative Work, P339, DOI 10.1145/358916.359005
   Tell P., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P21, DOI 10.1109/ICGSE.2012.24
   Trainer E., 2005, OOPSLA Workshop on Eclipse Technology Exchange, P26, DOI [10.1145/1117696.1117702, DOI 10.1145/1117696.1117702]
   Trimble J., 2002, CSCW 2002 WOKSH PUBL
   Unphon H, 2009, THESIS
   Unphon H, 2010, J SYST SOFTWARE, V83, P2211, DOI 10.1016/j.jss.2010.06.043
   Viller S, 1999, HUM-COMPUT INTERACT, V14, P9, DOI 10.1207/s15327051hci1401&2_2
   Walsham G, 2002, MIS QUART, V26, P359, DOI 10.2307/4132313
   Weber J., 2013, UX Magazine
   Weinberg GM, 1971, PSYCHOL PROGRAMMING
   Yoon Y., 2014, P IEEE S VIS LANG HU, P1
NR 134
TC 58
Z9 70
U1 0
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2016
VL 42
IS 8
BP 786
EP 804
DI 10.1109/TSE.2016.2519887
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA DT4UE
UT WOS:000381475800004
DA 2024-07-18
ER

PT J
AU Zanjani, MB
   Kagdi, H
   Bird, C
AF Zanjani, Motahareh Bahrami
   Kagdi, Huzefa
   Bird, Christian
TI Automatically Recommending Peer Reviewers in Modern Code Review
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Modern code review; reviewer recommendation; code change; Gerrit
ID BUG
AB Code review is an important part of the software development process. Recently, many open source projects have begun practicing code review through "modern" tools such as GitHub pull-requests and Gerrit. Many commercial software companies use similar tools for code review internally. These tools enable the owner of a source code change to request individuals to participate in the review, i.e., reviewers. However, this task comes with a challenge. Prior work has shown that the benefits of code review are dependent upon the expertise of the reviewers involved. Thus, a common problem faced by authors of source code changes is that of identifying the best reviewers for their source code change. To address this problem, we present an approach, namely cHRev, to automatically recommend reviewers who are best suited to participate in a given review, based on their historical contributions as demonstrated in their prior reviews. We evaluate the effectiveness of cHRev on three open source systems as well as a commercial codebase at Microsoft and compare it to the state of the art in reviewer recommendation. We show that by leveraging the specific information in previously completed reviews (i.e., quantification of review comments and their recency), we are able to improve dramatically on the performance of prior approaches, which (limitedly) operate on generic review information (i.e., reviewers of similar source code file and path names) or source coderepository data. We also present the insights into why our approach cHRev outperforms the existing approaches.
C1 [Zanjani, Motahareh Bahrami; Kagdi, Huzefa] Wichita State Univ, Dept Elect Engn & Comp Sci, Wichita, KS 67260 USA.
   [Bird, Christian] Microsoft Res, Empir Software Engn Grp, Redmond, WA USA.
C3 Wichita State University; Microsoft
RP Zanjani, MB (corresponding author), Wichita State Univ, Dept Elect Engn & Comp Sci, Wichita, KS 67260 USA.
EM mxbahramizanjani@wichita.edu; huzefa.kagdi@wichita.edu;
   cbird@microsoft.com
CR Ackerman A. F., 1984, Software Validation, Inspection - Testing - Verification - Alternatives. Proceedings of the Symposium, P13
   ACKERMAN AF, 1989, IEEE SOFTWARE, V6, P31, DOI 10.1109/52.28121
   [Anonymous], 2004, Software Engineering and Knowledge Engineering
   [Anonymous], 2006, BEST KEPT SECRETS PE
   [Anonymous], LEARNING GERRIT CODE
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2015, Gerrit
   [Anonymous], 2007, 4 INT WORKSHOP MININ
   [Anonymous], 2008, Proceedings of the 2008 international working conference on Mining software repositories
   [Anonymous], 2015, MYLYN REV
   Anvik J., 2006, 28th International Conference on Software Engineering Proceedings, P937, DOI 10.1145/1134285.1134457
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Baysal O., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P447, DOI 10.1109/WCRE.2012.54
   Baysal O, 2013, WORK CONF REVERSE EN, P122, DOI 10.1109/WCRE.2013.6671287
   Baysal O, 2009, INT C PROGRAM COMPRE, P297, DOI 10.1109/ICPC.2009.5090066
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Bernhart Mario, 2010, Proceedings of the 2010 Agile Conference (AGILE 2010), P44, DOI 10.1109/AGILE.2010.18
   Bird C., 2015, LESSONS LEARNED DEPL
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Cheng L-T., 2003, ACM QUEUE, V1, P40
   Czerwonka J, 2013, IEEE SOFTWARE, V30, P64, DOI 10.1109/MS.2013.68
   Fagan ME, 1999, IBM SYST J, V38, P258, DOI 10.1147/sj.382.0258
   Fritz T., 2010, P 32 ACMIEEE INT C S, P385
   Gethers M, 2012, PROC INT CONF SOFTW, P430, DOI 10.1109/ICSE.2012.6227172
   Gonzalez-Barahona JesusM., 2014, Proceedings of the International Workshop on Software Quality and Maintainability (SQM), P1
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Jeong G., 2009, 2009006 ROSAEC MEMO
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Kagdi H, 2008, PROC IEEE INT CONF S, P157, DOI 10.1109/ICSM.2008.4658064
   Kemerer CF, 2009, IEEE T SOFTWARE ENG, V35, P534, DOI 10.1109/TSE.2009.27
   Kim M, 2009, PROC INT CONF SOFTW, P309, DOI 10.1109/ICSE.2009.5070531
   Kollanus S., 2009, Open Softw Eng J, V3, P15, DOI [10.2174/1874107X00903010015, DOI 10.2174/1874107X00903010015]
   Linares-Vásquez M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P451, DOI 10.1109/ICSM.2012.6405306
   Morales R, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P171, DOI 10.1109/SANER.2015.7081827
   Mukadam M., 2013, P INT WORK C MIN SOF
   Porter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P41, DOI 10.1145/268411.268421
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2012, IEEE SOFTWARE, V29, P56, DOI 10.1109/MS.2012.24
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Robbes R, 2013, IEEE WORK CONF MIN S, P297, DOI 10.1109/MSR.2013.6624041
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Wood M, 1997, LECT NOTES COMPUT SC, V1301, P262, DOI 10.1145/267896.267915
   Xia X, 2015, PROC IEEE INT CONF S, P261, DOI 10.1109/ICSM.2015.7332472
   Xia X, 2013, WORK CONF REVERSE EN, P72, DOI 10.1109/WCRE.2013.6671282
   Yu Cong., 2009, EDBT
   Zanjani MB, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P88, DOI 10.1109/MSR.2015.16
   Zhang TY, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P755, DOI 10.1145/2635868.2661675
NR 53
TC 101
Z9 103
U1 0
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2016
VL 42
IS 6
BP 530
EP 543
DI 10.1109/TSE.2015.2500238
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DR7BD
UT WOS:000380054100002
DA 2024-07-18
ER

PT J
AU Autili, M
   Bertolino, A
   De Angelis, G
   Di Ruscio, D
   Di Sandro, A
AF Autili, Marco
   Bertolino, Antonia
   De Angelis, Guglielmo
   Di Ruscio, Davide
   Di Sandro, Alessio
TI A Tool-Supported Methodology for Validation and Refinement of
   Early-Stage Domain Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Domain modeling; early stage model; model driven engineering; model
   refinement; model validation; natural language questionnaires; semantic
   model quality
ID QUALITY
AB Model-driven engineering (MDE) promotes automated model transformations along the entire development process. Guaranteeing the quality of early models is essential for a successful application of MDE techniques and related tool-supported model refinements. Do these models properly reflect the requirements elicited from the owners of the problem domain? Ultimately, this question needs to be asked to the domain experts. The problem is that a gap exists between the respective backgrounds of modeling experts and domain experts. MDE developers cannot show a model to the domain experts and simply ask them whether it is correct with respect to the requirements they had in mind. To facilitate their interaction and make such validation more systematic, we propose a methodology and a tool that derive a set of customizable questionnaires expressed in natural language from each model to be validated. Unexpected answers by domain experts help to identify those portions of the models requiring deeper attention. We illustrate the methodology and the current status of the developed tool MOTHIA, which can handle UML Use Case, Class, and Activity diagrams. We assess MOTHIA effectiveness in reducing the gap between domain and modeling experts, and in detecting modeling faults on the European Project CHOReOS.
C1 [Autili, Marco; Di Ruscio, Davide] Univ Aquila, Dept Informat Engn Comp Sci & Math, I-67100 Laquila, Italy.
   [Bertolino, Antonia; De Angelis, Guglielmo] CNR, ISTI Pisa, I-00185 Rome, Italy.
   [De Angelis, Guglielmo] CNR, IASI Rome, I-00185 Rome, Italy.
   [Di Sandro, Alessio] Univ Toronto, Dept Comp Sci, Toronto, ON M5S 2E4, Canada.
C3 University of L'Aquila; Consiglio Nazionale delle Ricerche (CNR);
   Istituto di Scienza e Tecnologie dell'Informazione "Alessandro Faedo"
   (ISTI-CNR); Consiglio Nazionale delle Ricerche (CNR); Istituto di
   Analisi dei Sistemi ed Informatica "Antonio Ruberti" (IASI-CNR);
   University of Toronto
RP Autili, M; Di Ruscio, D (corresponding author), Univ Aquila, Dept Informat Engn Comp Sci & Math, I-67100 Laquila, Italy.; Bertolino, A; De Angelis, G (corresponding author), CNR, ISTI Pisa, I-00185 Rome, Italy.; De Angelis, G (corresponding author), CNR, IASI Rome, I-00185 Rome, Italy.; Di Sandro, A (corresponding author), Univ Toronto, Dept Comp Sci, Toronto, ON M5S 2E4, Canada.
EM marco.autili@univaq.it; antonia.bertolino@isti.cnr.it;
   davide.diruscio@univaq.it; adisandro@cs.toronto.edu
RI De Angelis, Guglielmo/AAD-1400-2021; Di Sandro, Alessio/AAA-4904-2021;
   Di Ruscio, Davide/AAG-4674-2020; Bertolino, Antonia/ABD-6837-2020;
   AUTILI, Marco/AAG-7127-2020
OI Di Sandro, Alessio/0000-0003-2429-4958; Di Ruscio,
   Davide/0000-0002-5077-6793; Bertolino, Antonia/0000-0001-8749-1356;
   AUTILI, Marco/0000-0001-5951-1567
FU European Project CHOReOS [FP7 IP 257178]
FX This paper describes work undertaken in the context of the European
   Project FP7 IP 257178: CHOReOS. The authors would like to thank
   Alessandro Baroni for his important contribution to the implementation
   of the web-based engine supporting MOTHIA.
CR Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   [Anonymous], THE FUTURE INTERNET
   [Anonymous], 2003, Eclipse Modeling Framework
   [Anonymous], 2007, Software testing and analysis-process, principles and techniques
   Autili Marco, 2012, Large-Scale Complex IT Systems. Development, Operation and Management. 17th Monterey Workshop 2012. Revised Selected Papers, P118, DOI 10.1007/978-3-642-34059-8_6
   Baader F., 2003, DESCRIPTION LOGIC HD
   Bertolino A, 2013, LECT NOTES BUS INF P, V140, P86
   Bertolino A, 2011, J SYST SOFTWARE, V84, P1089, DOI 10.1016/j.jss.2011.01.054
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Broy M, 2011, SOFTW SYST MODEL, V10, P441, DOI 10.1007/s10270-011-0207-y
   Cicchetti A, 2013, SOFTW SYST MODEL, V12, P53, DOI 10.1007/s10270-011-0193-0
   CORBRIDGE C, 1994, KNOWL ACQUIS, V6, P315, DOI 10.1006/knac.1994.1016
   Cordingley E.S., 1989, KNOWLEDGE ELICITATIO, P87
   Dalianis H., 1992, P CAISE 92, P425
   De Angelis G., 2012, P 8 INT C WEB INF SY, P86
   Di Ruscio D, 2012, IEEE SOFTWARE, V29, P78, DOI 10.1109/MS.2012.153
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Ericsson K. A., 1993, PROTOCOL ANAL VERBAL
   FOWLER M, 2003, OBJECT TECHNOLOGY SE
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Garshol LM, 2004, J INF SCI, V30, P378, DOI 10.1177/0165551504045856
   Groner Gerd, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P366, DOI 10.1007/978-3-642-31095-9_24
   Hoshino A., 2005, Proceedings of the Second Workshop on Building Educational Applications Using NLP, P17
   Issarny V, 2011, J INTERNET SERV APPL, V2, P23, DOI 10.1007/s13174-011-0021-3
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Konrad S, 2005, PROC INT CONF SOFTW, P372
   Krogstie John., 2000, Information Systems Engineering: Conceptual Modeling in a quality perspective
   La Rosa M, 2009, SOFTW SYST MODEL, V8, P251, DOI 10.1007/s10270-008-0090-3
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Maiden NAM, 1996, SOFTWARE ENG J, V11, P183, DOI 10.1049/sej.1996.0024
   Miller G.A., 1990, Int. J. Lexicogr, V3, P235, DOI [DOI 10.1093/IJL/3.4.235, 10.1093/ijl/3.4.235]
   Mitkov R, 2003, 2003 INTERNATIONAL CONFERENCE ON NATURAL LANGUAGE PROCESSING AND KNOWLEDGE ENGINEERING, PROCEEDINGS, P15
   Mottu JM, 2006, LECT NOTES COMPUT SC, V4066, P376
   Nelson HJ, 2012, SOFTWARE QUAL J, V20, P201, DOI 10.1007/s11219-011-9136-9
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Paige RF, 2012, SOFTW SYST MODEL, V11, P527, DOI 10.1007/s10270-012-0257-9
   Papasalouros A., 2008, E LEARNING, P427
   Peltz C, 2003, COMPUTER, V36, P46, DOI 10.1109/MC.2003.1236471
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Pons C, 2008, ELECTRON NOTES THEOR, V220, P43, DOI 10.1016/j.entcs.2008.11.005
   Queralt A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089123
   Rugg G., 1992, Knowledge Acquisition, V4, P279, DOI 10.1016/1042-8143(92)90019-W
   Salay R, 2013, LECT NOTES COMPUT SC, V7793, P21, DOI 10.1007/978-3-642-37057-1_3
   Salay R, 2012, LECT NOTES COMPUT SC, V7212, P224, DOI 10.1007/978-3-642-28872-2_16
   Selic B, 2012, SOFTW SYST MODEL, V11, P513, DOI 10.1007/s10270-012-0261-0
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   Turban E., 1993, DECISION SUPPORT EXP, V3rd
   van Lamsweerde A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P5, DOI 10.1109/ICSE.2000.870392
   Wainwright N., 2012, LECT NOTES COMPUTER, V7281, P1
NR 50
TC 4
Z9 5
U1 1
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2016
VL 42
IS 1
BP 2
EP 25
DI 10.1109/TSE.2015.2449319
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DD5UC
UT WOS:000369989000002
DA 2024-07-18
ER

PT J
AU Massey, AK
   Otto, PN
   Antón, AI
AF Massey, Aaron K.
   Otto, Paul N.
   Anton, Annie I.
TI Evaluating Legal Implementation Readiness Decision-Making
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Legal implementation readiness; regulatory compliance software
   engineering; legal requirements; requirements engineering
ID REQUIREMENTS; SECURITY; PRIVACY; KAPPA
AB Software systems are increasingly regulated. Software engineers therefore must determine which requirements have met or exceeded their legal obligations and which requirements have not. Requirements that have met or exceeded their legal obligations are legally implementation ready, whereas requirements that have not met or exceeded their legal obligations need further refinement. In this paper, we examine how software engineers make these determinations using a multi-case study with three cases. Each case involves assessment of requirements for an electronic health record system that must comply with the US Health Insurance Portability and Accountability Act ( HIPAA) and is measured against the evaluations of HIPAA compliance subject matter experts. Our first case examines how individual graduate-level software engineering students assess whether the requirements met or exceeded their HIPAA obligations. Our second case replicates the findings from our first case using a different set of participants. Our third case examines how graduate-level software engineering students assess requirements using the Wideband Delphi approach to deriving consensus in groups. Our findings suggest that the average graduate-level software engineering student is ill-prepared to write legally compliant software with any confidence and that domain experts are an absolute necessity.
C1 [Massey, Aaron K.; Anton, Annie I.] Georgia Inst Technol, Sch Interact Comp, Atlanta, GA 30332 USA.
   [Otto, Paul N.] Assoc Comp Machinery, Washington, DC 20004 USA.
C3 University System of Georgia; Georgia Institute of Technology
RP Massey, AK (corresponding author), Georgia Inst Technol, Sch Interact Comp, Atlanta, GA 30332 USA.
EM akmassey@gatech.edu; potto@acm.org; aianton@cc.gatech.edu
FU NSF ITR [522931]; NSF Cyber Trust [0430166]; Direct For Computer & Info
   Scie & Enginr; Div Of Information & Intelligent Systems [0430166]
   Funding Source: National Science Foundation
FX This work was partially supported by NSF ITR Grant #522931 and NSF Cyber
   Trust Grant #0430166. The authors would like to thank the members of The
   Privacy Place for their feedback on early drafts of this paper. A. K.
   Massey is the corresponding author.
CR [Anonymous], 1992, TR9296 UMIACS
   [Anonymous], 2003, CASE STUDY RES DESIG
   Barth A, 2006, P IEEE S SECUR PRIV, P184, DOI 10.1109/SP.2006.32
   Basili VictorR., 1995, Applying the Goal/Question/Metric Paradigm in the Experience Factory, P21
   Beaver Kevin., 2004, The Practical Guide to HIPAA Privacy and Security Compliance
   Berenbach B., 2010, P 8 C SYST ENG RES
   Boehm BW., 1981, Software Engineering Economics
   Breaux TD, 2008, IEEE T SOFTWARE ENG, V34, P5, DOI 10.1109/TSE.2007.70746
   Breaux TD, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON REQUIREMENTS ENGINEERING AND LAW (RELAW), P57, DOI 10.1109/RELAW.2013.6671347
   Breaux TD, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P225, DOI 10.1109/RE.2009.46
   Carletta J, 1996, COMPUT LINGUIST, V22, P249
   Cleland-Huang J., 2010, P 32 INT C SOFTW ENG
   Cozby P.C., 2009, Methods in Behavioral Research, V10th
   El Kharbili M, 2011, IEEE INT ENTERP DIST, P247, DOI 10.1109/EDOC.2011.23
   El Kharbili M, 2011, INT C COMMERCE BUS, P185, DOI 10.1109/CEC.2011.39
   FLEISS JL, 1973, EDUC PSYCHOL MEAS, V33, P613, DOI 10.1177/001316447303300309
   Ghanavati S., 2011, 2011 Fourth International Workshop on Requirements Engineering and Law, P25, DOI 10.1109/RELAW.2011.6050270
   Ghanavati S, 2014, LECT NOTES COMPUT SC, V8824, P415, DOI 10.1007/978-3-319-12206-9_35
   Ghanavati S, 2014, INT REQUIR ENG CONF, P73, DOI 10.1109/RE.2014.6912249
   Ghanavati S, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P133, DOI 10.1109/RE.2009.42
   Gordon D. G., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P91, DOI 10.1109/RE.2012.6345843
   Gordon DG, 2013, S VIS LANG HUM CEN C, P381, DOI 10.1109/RE.2013.6636760
   Hassan W., 2009, 2009 2 INT WORKSHOP, P7, DOI [10.1109/RELAW.2009.4, DOI 10.1109/RELAW.2009.4]
   Hassan W, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON REQUIREMENTS ENGINEERING AND LAW (RELAW), P44, DOI 10.1109/RELAW.2013.6671345
   Hassan W, 2008, RELAW: 2008 REQUIREMENTS ENGINEERING AND LAW, P44
   Ingolfo S, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P163, DOI 10.1109/SEAMS.2013.6595503
   Jureta I, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON REQUIREMENTS ENGINEERING AND LAW (RELAW), P25, DOI 10.1109/RELAW.2013.6671343
   Massacci F, 2005, COMPUT STAND INTER, V27, P445, DOI 10.1016/j.csi.2005.01.003
   Massey A. K., 2010, TR201022 N CAR STAT
   Massey AK, 2014, INT REQUIR ENG CONF, P83, DOI 10.1109/RE.2014.6912250
   Massey AK, 2013, S VIS LANG HUM CEN C, P4, DOI 10.1109/RE.2013.6636700
   Massey AK, 2011, INT REQUIR ENG CONF, P207, DOI 10.1109/RE.2011.6051661
   Massey AK, 2010, REQUIR ENG, V15, P119, DOI 10.1007/s00766-009-0089-5
   Maxwell J. C., 2011, P 19 IEEE INT REQ EN, P197
   Maxwell J. C., 2010, P 1 ACM INT HLTH INF, P629
   May M.J., 2006, CSFW, P85
   Olson D.L., 2008, ADV DATA MINING TECH, DOI https://doi.org/10.1007/978-3-540-76917-0
   Otto PN, 2007, INT REQUIR ENG CONF, P5, DOI 10.1109/RE.2007.65
   Rifaut A., 2012, 2012 Fifth International Workshop on Requirements Engineering and Law (RELAW), P7, DOI 10.1109/RELAW.2012.6347801
   Stefan Werkstetter, 2013, ULTRACAPACITOR USAGE, P2013
   Yin QJ, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON REQUIREMENTS ENGINEERING AND LAW (RELAW), P21, DOI 10.1109/RELAW.2013.6671342
NR 41
TC 8
Z9 8
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2015
VL 41
IS 6
BP 545
EP 564
DI 10.1109/TSE.2014.2383374
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CK3ZL
UT WOS:000356155700002
DA 2024-07-18
ER

PT J
AU Fernandez-Amoros, D
   Heradio, R
   Cerrada, JA
   Cerrada, C
AF Fernandez-Amoros, David
   Heradio, Ruben
   Cerrada, Jose A.
   Cerrada, Carlos
TI A Scalable Approach to Exact Model and Commonality Counting for Extended
   Feature Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Feature models; formal methods; economic models; software product lines
ID ALGORITHMS; SAT
AB A software product line is an engineering approach to efficient development of software product portfolios. Key to the success of the approach is to identify the common and variable features of the products and the interdependencies between them, which are usually modeled using feature models. Implicitly, such models also include valuable information that can be used by economic models to estimate the payoffs of a product line. Unfortunately, as product lines grow, analyzing large feature models manually becomes impracticable. This paper proposes an algorithm to compute the total number of products that a feature model represents and, for each feature, the number of products that implement it. The inference of both parameters is helpful to describe the standardization/parameterization balance of a product line, detect scope flaws, assess the product line incremental development, and improve the accuracy of economic models. The paper reports experimental evidence that our algorithm has better runtime performance than existing alternative approaches.
C1 [Fernandez-Amoros, David] Spanish Open Univ UNED, Dept Languages & Comp Syst, Madrid, Spain.
   [Heradio, Ruben; Cerrada, Jose A.; Cerrada, Carlos] Spanish Open Univ UNED, Dept Software Engn & Comp Syst, Madrid, Spain.
C3 Universidad Nacional de Educacion a Distancia (UNED); Universidad
   Nacional de Educacion a Distancia (UNED)
RP Fernandez-Amoros, D (corresponding author), Spanish Open Univ UNED, Dept Languages & Comp Syst, Madrid, Spain.
EM david@lsi.uned.es; rheradio@issi.uned.es; jcerrada@issi.uned.es;
   ccerrada@issi.uned.es
RI Cerrada, Carlos/O-2221-2019; Heradio, Ruben/D-3675-2013;
   Fernandez-Amoros, David/ABG-7972-2020; Cerrada, Jose
   Antonio/AAA-4471-2019
OI Cerrada, Carlos/0000-0002-8591-6581; Heradio, Ruben/0000-0002-7131-0482;
   Fernandez-Amoros, David/0000-0003-3758-0195; Cerrada, Jose
   Antonio/0000-0001-5492-5293
FU Spanish Government under the CICYT [DPI-2013-44776-R]; Comunidad de
   Madrid under the RoboCity2030-II excellence research network
   [S2009DPI-1559]
FX The authors are grateful to the anonymous reviewers for their insightful
   feedback. They also thank Roberto Lopez Herrejon and Alexander Egyed at
   the Institute for Software Engineering and Automation (Johannes Kepler
   University of Linz, Austria) for their advice. This work has been
   supported by the Spanish Government under the CICYT project
   DPI-2013-44776-R, and the Comunidad de Madrid under the RoboCity2030-II
   excellence research network S2009DPI-1559.
CR [Anonymous], 2000, Generative programming: methods, tools, and applications
   Bacchus F, 2003, ANN IEEE SYMP FOUND, P340, DOI 10.1109/SFCS.2003.1238208
   Bachmann Felix., 2005, Variability in Software Product Lines
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Bayardo RJ, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P157
   Ben Lamine SB, 2005, LECT NOTES COMPUT SC, V3714, P113
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Benavides D., 2007, THESIS U SEVILLE SEV
   Benavides D, 2006, LECT NOTES COMPUT SC, V4143, P399
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger T., 2010, P INT C AUT SOFTW EN, P73, DOI DOI 10.1145/1858996.1859010
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Böckle G, 2004, IEEE SOFTWARE, V21, P23
   Boehm B, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P156
   Bollig B, 1996, IEEE T COMPUT, V45, P993, DOI 10.1109/12.537122
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Cleaveland J.C., 2001, Program Generators with XML and Java
   Clements Paul C., 2005, CMUSEI2005TR003
   Cohen S., 2003, CMUSEI2003TN017
   Cook S. A., 1971, Proceedings of the 3rd annual ACM symposium on theory of computing, P151
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Czarnecki K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P23, DOI 10.1109/SPLINE.2007.24
   Czarnecki Krzysztof., 2005, Software Process: Improvement and Practice, P2005
   DAVIS M, 1962, COMMUN ACM, V5, P394, DOI 10.1145/368273.368557
   Fernandez-Amoros D., 2009, P 13 INT SOFTW PROD, P41
   Freeman J.W., 1995, IMPROVEMENTS PROPOSI
   Galorath D.D., 2006, SOFTWARE SIZING ESTI
   Gil Y, 2010, LECT NOTES COMPUT SC, V6287, P271, DOI 10.1007/978-3-642-15579-6_19
   Hamadi Youssef, 2009, Journal on Satisfiability, Boolean Modeling and Computation, DOI DOI 10.3233/SAT190070
   In HP, 2006, COMMUN ACM, V49, P85, DOI 10.1145/1183236.1183273
   Kang KC, 2002, IEEE SOFTWARE, V19, P58, DOI 10.1109/MS.2002.1020288
   Kang Kyo C, 1990, Technical Report
   Kübler AJ, 2010, ELECTRON PROC THEOR, P44, DOI 10.4204/EPTCS.29.5
   Lau S.Q., 2006, THESIS U WATERLOO WA
   Mendonca M., 2009, THESIS U WATERLOO WA
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Mendonca M, 2008, GPCE'08: PROCEEDINGS OF THE ACM SIGPLAN SEVENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P13
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Metzger A, 2007, INT REQUIR ENG CONF, P243, DOI 10.1109/RE.2007.61
   Moskewicz MW, 2001, DES AUT CON, P530, DOI 10.1109/DAC.2001.935565
   Nóbrega JP, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P27, DOI 10.1109/SEAA.2008.41
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Pipatsrisawat K., 2006, D152 UCLA COMP SCI D
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Poulin J. S., 1997, INT J APPL SOFTWARE, V3, P20
   PRETOLANI D, 1993, THESIS U PISA
   Sang T, 2005, LECT NOTES COMPUT SC, V3569, P226
   Sang T., 2004, (Springer Science + Busi- ness Media via LNCS (Lecture Notes in Computer Sciences
   Sang Tian., 2005, P 20 NATL C ARTIFICI, V1, P475
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   Silva JPM, 1996, IEEE IC CAD, P220, DOI 10.1109/ICCAD.1996.569607
   Sorensson N., 2005, SAT, V2005, P53
   Thurley M, 2006, LECT NOTES COMPUT SC, V4121, P424
   Tseitin G.S., 1983, STUDIES CONSTRUCTI 2, P466, DOI DOI 10.1007/978-3-642-81955-128
   WESSELIUS JH, 2006, SOFTWARE PRODUCT LIN, P53
NR 55
TC 18
Z9 18
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2014
VL 40
IS 9
BP 895
EP 910
DI 10.1109/TSE.2014.2331073
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AR9MI
UT WOS:000343898600003
OA Green Published
DA 2024-07-18
ER

PT J
AU Liu, YP
   Xu, C
   Cheung, SC
   Lü, J
AF Liu, Yepang
   Xu, Chang
   Cheung, S. C.
   Lu, Jian
TI GreenDroid: Automated Diagnosis of Energy Inefficiency for Smartphone
   Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Smartphone application; energy inefficiency; automated diagnosis;
   sensory data utilization; green computing
AB Smartphone applications' energy efficiency is vital, but many Android applications suffer from serious energy inefficiency problems. Locating these problems is labor-intensive and automated diagnosis is highly desirable. However, a key challenge is the lack of a decidable criterion that facilitates automated judgment of such energy problems. Our work aims to address this challenge. We conducted an in-depth study of 173 open-source and 229 commercial Android applications, and observed two common causes of energy problems: missing deactivation of sensors or wake locks, and cost-ineffective use of sensory data. With these findings, we propose an automated approach to diagnosing energy problems in Android applications. Our approach explores an application's state space by systematically executing the application using Java PathFinder (JPF). It monitors sensor and wake lock operations to detect missing deactivation of sensors and wake locks. It also tracks the transformation and usage of sensory data and judges whether they are effectively utilized by the application using our state-sensitive data utilization metric. In this way, our approach can generate detailed reports with actionable information to assist developers in validating detected energy problems. We built our approach as a tool, GreenDroid, on top of JPF. Technically, we addressed the challenges of generating user interaction events and scheduling event handlers in extending JPF for analyzing Android applications. We evaluated GreenDroid using 13 real-world popular Android applications. GreenDroid completed energy efficiency diagnosis for these applications in a few minutes. It successfully located real energy problems in these applications, and additionally found new unreported energy problems that were later confirmed by developers.
C1 [Liu, Yepang; Cheung, S. C.] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Kowloon, Hong Kong, Peoples R China.
   [Xu, Chang; Lu, Jian] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210008, Jiangsu, Peoples R China.
   [Xu, Chang; Lu, Jian] Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210008, Jiangsu, Peoples R China.
C3 Hong Kong University of Science & Technology; Nanjing University;
   Nanjing University
RP Liu, YP (corresponding author), Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Kowloon, Hong Kong, Peoples R China.
EM andrewust@cse.ust.hk; changxu@nju.edu.cn; scc@cse.ust.hk; lj@nju.edu.cn
RI Liu, Chenyu/KBQ-8899-2024; Xu, Chang/O-4543-2015; Liu,
   Jingyi/JWP-6326-2024; Liu, Yepang/G-6183-2018; Cheung, Shing
   Chi/U-5882-2018
OI Liu, Yepang/0000-0001-8147-8126; Cheung, Shing Chi/0000-0002-3508-7172
FU Research Grants Council of Hong Kong [611813]; National High-Tech
   Research & Development Program (863 program) [2013AA01A213]; National
   Natural Science Foundation of China [61100038, 91318301, 61321491,
   61361120097]; Program for New Century Excellent Talents in University,
   China [NCET-10-0486]
FX This research was partially funded by Research Grants Council (General
   Research Fund 611813) of Hong Kong, National High-Tech Research &
   Development Program (863 program 2013AA01A213), and National Natural
   Science Foundation (61100038, 91318301, 61321491, 61361120097) of China.
   Chang Xu was also partially supported by Program for New Century
   Excellent Talents in University, China (NCET-10-0486). Preliminary ideas
   of this work was discussed in a conference paper (PerCom 2013) [42]. The
   authors greatly thank TSE editors and anonymous reviewers for their
   valuable comments for improving the conference version and this extended
   version. Besides, they would also like to sincerely thank Relda's
   authors [32] for their generous help during our experiments. Chang Xu is
   the corresponding author of this paper.
CR Anandan S, 2012, MATER SCI FORUM, V712, P1, DOI 10.4028/www.scientific.net/MSF.712.1
   [Anonymous], 2010, P ACM IEEE 32 INT C, DOI DOI 10.1145/1806799.1806874
   [Anonymous], 2013, ROBOTIUN TESTING FRA
   [Anonymous], 2010, PROC 8 INT C MOBILE, DOI [DOI 10.1145/1814433, 10.1145/1814433.1814441, DOI 10.1145/1814433.1814441]
   [Anonymous], 2013, OMNIDROID
   [Anonymous], 2013, GPSLOGGER
   [Anonymous], 2013, ANDROID SENSOR MANAG
   [Anonymous], 2013, MYTRACKS
   [Anonymous], 2013, DEX2JAR
   [Anonymous], 2013, CSIPSIMPLE
   [Anonymous], 2013, CRAWLER4J
   [Anonymous], 2013, ANDROID EMULATOR
   [Anonymous], 2013, ANDROID ACTIVITY LIF
   [Anonymous], 2013, ANDROID POWER MANAGE
   [Anonymous], 2013, ANDTWEET
   [Anonymous], 2013, GEOHASHDROID
   [Anonymous], 2013, ANDROID PROCESS LIFE
   [Anonymous], 2013, K9MAIL
   [Anonymous], 2013, ANDROID PLATFORM VER
   [Anonymous], 2013, REAL APKLEECHER
   Arnold M, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063241
   Azim T, 2013, ACM SIGPLAN NOTICES, V48, P641, DOI [10.1145/2509136.2509549, 10.1145/2544173.2509549]
   Clause J., 2007, P 2007 INT S SOFTW T, DOI [10.1145/1273463.1273490, DOI 10.1145/1273463.1273490]
   Dillig I, 2008, ISMM'08: PROCEEDINGS OF THE 2008 INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT, P1
   Dong Mian., 2011, Proceedings of the 9th international conference on Mobile systems, applications, and services, MobiSys '11, P335, DOI DOI 10.1145/1999995.2000027
   Enck William., 2010, Proceedings of the USENIX Symposium on Operating Systems Design and Implementation (OSDI), P393
   Etessami K, 1996, IEEE S LOG, P108, DOI 10.1109/LICS.1996.561310
   Felt AP, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P627
   Guo CR, 2013, IEEE INT CONF AUTOM, P389, DOI 10.1109/ASE.2013.6693097
   Hao S., P 35 INT C SOFTW ENG, P92
   Jensen C S, 2013, P 2013 INT S SOFTW T, P67, DOI [10.1145/2483760.2483777, DOI 10.1145/2483760.2483777]
   Kemerlis VP, 2012, ACM SIGPLAN NOTICES, V47, P121, DOI 10.1145/2365864.2151042
   Kim H, 2008, MOBISYS'08: PROCEEDINGS OF THE SIXTH INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P239
   King D, 2008, LECT NOTES COMPUT SC, V5352, P56, DOI 10.1007/978-3-540-89862-7_4
   Kjærgaard MB, 2009, MOBISYS'09: PROCEEDINGS OF THE 7TH ACM INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P221
   Liu Y., 2012, HKUSTCS1203 HONG KON
   Liu YP, 2013, INT CONF PERVAS COMP, P2, DOI 10.1109/PerCom.2013.6526708
   Ma Xiao., 2013, Proceedings of the 10th USENIX Conference on Networked Systems Design and Implementation, nsdi'13, P57
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mirzaei Nariman, 2012, ACM SIGSOFT Software Engineering Notes, V37, P1, DOI DOI 10.1145/2382756.2382798
   Mittal R, 2012, MOBICOM 12: PROCEEDINGS OF THE 18TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING, P317
   Newsome J., 2005, P ISOC NETW DISTR SY
   Octeau D., 2012, P ACM SIGSOFT 20 INT
   Paek J., 2010, Proceedings of the 8th international conference on Mobile systems, applications, and services, P299
   Park S., 2012, P ACM SIGSOFT 20 INT, V35, P1
   Pasareanu Corina S., 2008, P 2008 INT S SOFTW T, P15, DOI [DOI 10.1145/1390630.1390635, DOI 10.1145/1390630]
   Pathak A., 2011, P 10 ACM WORKSH HOT, P1
   Pathak A., 2012, Mobisys, DOI DOI 10.1145/2307636.2307661
   Pathak Abhijit D., 2012, Proceedings of the PCIM ASIA 2012. International Conference and Exhibition for Power Electronics, Intelligent Motion, Renewable Energy and Energy Management, P29
   Priyantha B, 2011, IEEE PERVAS COMPUT, V10, P12, DOI 10.1109/MPRV.2011.28
   Ra M.-R., 2010, 8th International Conference on Mobile systems, Applications, and Services, P255
   Schwartz EJ, 2010, P IEEE S SECUR PRIV, P317, DOI 10.1109/SP.2010.26
   Torlak Emina., 2010, P 32 ACMIEEE INT C S, P535
   Visser W, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ASE.2000.873645
   Weimer W, 2004, ACM SIGPLAN NOTICES, V39, P419, DOI 10.1145/1035292.1029011
   Yang W, 2013, LECT NOTES COMPUT SC, V7793, P250, DOI 10.1007/978-3-642-37057-1_19
   Zhang LD, 2012, CODES+ISSS'12:PROCEEDINGS OF THE TENTH ACM INTERNATIONAL CONFERENCE ON HARDWARE/SOFTWARE-CODESIGN AND SYSTEM SYNTHESIS, P363
   Zhang L, 2010, PROCEEDINGS OF 2010 INTERNATIONAL CONFERENCE ON PUBLIC ADMINISTRATION (6TH), VOL II, P105, DOI 10.1145/1878961.1878982
NR 58
TC 73
Z9 82
U1 1
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2014
VL 40
IS 9
BP 911
EP 940
DI 10.1109/TSE.2014.2323982
PG 30
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AR9MI
UT WOS:000343898600004
DA 2024-07-18
ER

PT J
AU Wang, XY
   Dang, YN
   Zhang, L
   Zhang, DM
   Lan, E
   Mei, H
AF Wang, Xiaoyin
   Dang, Yingnong
   Zhang, Lu
   Zhang, Dongmei
   Lan, Erica
   Mei, Hong
TI Predicting Consistency-Maintenance Requirement of Code Clones at
   Copy-and-Paste Time
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Code cloning; consistency maintenance; programming aid
ID SUPPORT; SYSTEM
AB Code clones have always been a double edged sword in software development. On one hand, it is a very convenient way to reuse existing code, and to save coding effort. On the other hand, since developers may need to ensure consistency among cloned code segments, code clones can lead to extra maintenance effort and even bugs. Recently studies on the evolution of code clones show that only some of the code clones experience consistent changes during their evolution history. Therefore, if we can accurately predict whether a code clone will experience consistent changes, we will be able to provide useful recommendations to developers on leveraging the convenience of some code cloning operations, while avoiding other code cloning operations to reduce future consistency maintenance effort. In this paper, we define a code cloning operation as consistency-maintenance-required if its generated code clones experience consistent changes in the software evolution history, and we propose a novel approach that automatically predicts whether a code cloning operation requires consistency maintenance at the time point of performing copy-and-paste operations. Our insight is that whether a code cloning operation requires consistency maintenance may relate to the characteristics of the code to be cloned and the characteristics of its context. Based on a number of attributes extracted from the cloned code and the context of the code cloning operation, we use Bayesian Networks, a machine-learning technique, to predict whether an intended code cloning operation requires consistency maintenance. We evaluated our approach on four subjects-two large-scale Microsoft software projects, and two popular open-source software projects-under two usage scenarios: 1) recommend developers to perform only the cloning operations predicted to be very likely to be consistency-maintenance-free, and 2) recommend developers to perform all cloning operations unless they are predicted very likely to be consistency-maintenance-required. In the first scenario, our approach is able to recommend developers to perform more than 50 percent cloning operations with a precision of at least 94 percent in the four subjects. In the second scenario, our approach is able to avoid 37 to 72 percent consistency-maintenance-required code clones by warning developers on only 13 to 40 percent code clones, in the four subjects.
C1 [Wang, Xiaoyin; Zhang, Lu; Mei, Hong] Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing 1100871, Peoples R China.
   [Wang, Xiaoyin] Univ Texas San Antonio, Dept Comp Sci, San Antonio, TX USA.
   [Dang, Yingnong; Zhang, Dongmei] Microsoft Res Asia, Beijing 100871, Peoples R China.
   [Zhang, Lu; Mei, Hong] Peking Univ, Sch Elect Engn & Comp Sci, Inst Software, Beijing 1100871, Peoples R China.
   [Lan, Erica] Microsoft Corp, Redmond, WA 98052 USA.
C3 Peking University; University of Texas System; University of Texas at
   San Antonio (UTSA); Microsoft Research Asia; Microsoft; Peking
   University; Microsoft
RP Wang, XY (corresponding author), Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing 1100871, Peoples R China.
EM Xiaoyin.Wang@utsa.edu; Dang.Yingnong@microsoft.com;
   zhanglu@sei.pku.edu.cn; Zhang.Dongmei@microsoft.com;
   erical@microsoft.com; meih@sei.pku.edu.cn
RI Wang, Xiaoyin/ABA-9508-2020; zhang, dongmei/B-8011-2013
FU National 863 Program of China [2013AA01A605]; National 973 Program of
   China [2011CB302604]; Science Fund for Creative Research Groups of China
   [61121063]; Natural Science Foundation of China [91118004, 61228203,
   61225007]
FX The research was partially sponsored by the National 863 Program of
   China No. 2013AA01A605, the National 973 Program of China No.
   2011CB302604, the Science Fund for Creative Research Groups of China No.
   61121063, and the Natural Science Foundation of China No. 91118004, No.
   61228203 and No. 61225007.
CR Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Cai DX, 2011, LECT NOTES COMPUT SC, V6603, P432, DOI 10.1007/978-3-642-19811-3_30
   Chang CC, 2011, ACM T INTEL SYST TEC, V2, DOI 10.1145/1961189.1961199
   Cheng J, 1999, UNCERTAINTY IN ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P101
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Dang YN, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P369
   Dang Yingnong, 2011, P 5 INT WORKSH SOFTW, P63
   Deissenboeck F, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.129
   Duala-Ekoko E, 2007, PROC INT CONF SOFTW, P158
   El Emam K, 2001, J SYST SOFTWARE, V55, P301, DOI 10.1016/S0164-1212(00)00079-0
   Frank E, 2005, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, P1305, DOI 10.1007/0-387-25465-X_62
   Friedman N, 1997, MACH LEARN, V29, P131, DOI 10.1023/A:1007465528199
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P321, DOI 10.1145/1368088.1368132
   Göde N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P311, DOI 10.1145/1985793.1985836
   Hao D, 2013, LECT NOTES COMPUT SC, V7920, P602, DOI 10.1007/978-3-642-39038-8_25
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Japkowicz N., 2002, Intelligent Data Analysis, V6, P429
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jiang Lingxiao, 2007, P THE 6 JOINT M EURO, P55, DOI DOI 10.1145/1287624.1287634
   Juergens E., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P79, DOI 10.1145/1810295.1810308
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Kim H, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P301, DOI 10.1145/1985793.1985835
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kohavi R., 1995, INT JOINT C ART INT, V2, P1137, DOI DOI 10.1067/MOD.2000.109031
   Krinke J, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P170, DOI 10.1109/WCRE.2007.7
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Navarro G, 2001, ACM COMPUT SURV, V33, P31, DOI 10.1145/375360.375365
   Nguyen T., 2012, IEEE T SOFTWARE ENG, V38, P1008
   Nguyen TT, 2009, IEEE INT CONF AUTOM, P123, DOI 10.1109/ASE.2009.90
   Pearl J., 1988, P 7 C COGN SCI SOC, P329
   Roy CK, 2008, WORK CONF REVERSE EN, P81, DOI 10.1109/WCRE.2008.54
   Roy CK, 2009, IEEE ICST WORKSHOP, P157, DOI 10.1109/ICSTW.2009.18
   SAFAVIAN SR, 1991, IEEE T SYST MAN CYB, V21, P660, DOI 10.1109/21.97458
   Thummalapenta S, 2010, EMPIR SOFTW ENG, V15, P1, DOI 10.1007/s10664-009-9108-x
   Wang X., 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, ASE '10, P457
   Wang X, 2012, CHIN CONT DECIS CONF, P170, DOI 10.1109/CCDC.2012.6242928
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 46
TC 19
Z9 21
U1 0
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2014
VL 40
IS 8
BP 773
EP 794
DI 10.1109/TSE.2014.2323972
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AR9MG
UT WOS:000343898400003
DA 2024-07-18
ER

PT J
AU Groce, A
   Kulesza, T
   Zhang, CQ
   Shamasunder, S
   Burnett, M
   Wong, WK
   Stumpf, S
   Das, S
   Shinsel, A
   Bice, F
   McIntosh, K
AF Groce, Alex
   Kulesza, Todd
   Zhang, Chaoqiang
   Shamasunder, Shalini
   Burnett, Margaret
   Wong, Weng-Keen
   Stumpf, Simone
   Das, Shubhomoy
   Shinsel, Amber
   Bice, Forrest
   McIntosh, Kevin
TI You Are the Only Possible Oracle: Effective Test Selection for End Users
   of Interactive Machine Learning Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Machine learning; end-user testing; test suite size
ID CLASSIFICATION
AB How do you test a program when only a single user, with no expertise in software testing, is able to determine if the program is performing correctly? Such programs are common today in the form of machine-learned classifiers. We consider the problem of testing this common kind of machine-generated program when the only oracle is an end user: e.g., only you can determine if your email is properly filed. We present test selection methods that provide very good failure rates even for small test suites, and show that these methods work in both large-scale random experiments using a "gold standard" and in studies with real users. Our methods are inexpensive and largely algorithm-independent. Key to our methods is an exploitation of properties of classifiers that is not possible in traditional software testing. Our results suggest that it is plausible for time-pressured end users to interactively detect failures-even very hard-to-find failures-without wading through a large number of successful (and thus less useful) tests. We additionally show that some methods are able to find the arguably most difficult-to-detect faults of classifiers: cases where machine learning algorithms have high confidence in an incorrect result.
C1 [Groce, Alex; Kulesza, Todd; Zhang, Chaoqiang; Shamasunder, Shalini; Burnett, Margaret; Wong, Weng-Keen; Das, Shubhomoy; Shinsel, Amber; Bice, Forrest; McIntosh, Kevin] Oregon State Univ, Sch Elect Engn & Comp Sci, Corvallis, OR 97331 USA.
   [Stumpf, Simone] City Univ London, Sch Informat, Ctr HCI Design, London EC1V 0HB, England.
C3 Oregon State University; City University London
RP Groce, A (corresponding author), Oregon State Univ, Sch Elect Engn & Comp Sci, Corvallis, OR 97331 USA.
EM alex@eecs.oregonstate.edu; kuleszto@eecs.oregonstate.edu;
   zhangch@eecs.oregonstate.edu; shalu.s14@gmail.com;
   burnett@eecs.oregonstate.edu; wong@eecs.oregonstate.edu;
   Simone.Stumpf.1@city.ac.uk; dassh@eecs.oregonstate.edu;
   ambershinsel@gmail.com; forrestbice@gmail.com; kevjames3@gmail.com
OI Stumpf, Simone/0000-0001-6482-1973
FU US National Science Foundation (NSF) [0803487]; Div Of Information &
   Intelligent Systems; Direct For Computer & Info Scie & Enginr [0803487]
   Funding Source: National Science Foundation
FX The authors thank our participants, the anonymous reviewers of this
   paper, Marc Fisher II, Travis Moore, Jeremy Goodrich, Nicole Usselman,
   and Kathleen Shaw. This work was supported in part by US National
   Science Foundation (NSF) 0803487.
CR Amershi Saleema, 2012, P SIGCHI C HUM FACT
   [Anonymous], 1998, P INT C SOFTW MAINT
   [Anonymous], J END USER COMPUTING
   [Anonymous], P IEEE S VIS LANG HU
   [Anonymous], 2010, ACTIVE LEARNING LIT
   [Anonymous], 2007, SEKE
   [Anonymous], 2011, ACM T INTEL SYST TEC
   [Anonymous], IEEE STAND ENG GLOSS
   [Anonymous], NEWSGROUP DATA SET
   [Anonymous], 2010, Proceedings of the 19th International Symposium on Software Testing and Analysis, ISSTA'10
   Asuncion A., 2007, Uci machine learning repository
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Blackwell AF, 2002, IEEE 2002 SYMPOSIA ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P2, DOI 10.1109/HCC.2002.1046334
   Brain D., 1999, P 4 AUSTR KNOWL ACQ
   Chen T. Y., 1998, Technical Report hkust-cs98-01
   Chen TY, 2003, INFORM SOFTWARE TECH, V45, P1, DOI 10.1016/S0950-5849(02)00129-5
   Chen Y, 2013, ACM SIGPLAN NOTICES, V48, P197, DOI 10.1145/2499370.2462173
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Dickinson W., 2001, Software Engineering Notes, V26, P246, DOI 10.1145/503271.503243
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Fogarty J, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P29
   Francis P, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P451, DOI 10.1109/ISSRE.2004.43
   Frankl PG, 1997, J SYST SOFTWARE, V38, P235, DOI 10.1016/S0164-1212(96)00154-9
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P202, DOI 10.1109/32.221133
   Glass Alyssa, 2008, 13th International Conference on Intelligent User Interfaces. IUI 2008, P227, DOI 10.1145/1378773.1378804
   Gligoric M., 2013, P 2013 INT S SOFTW T, P302, DOI DOI 10.1145/2483760.2483769
   Grigoreanu V, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P149, DOI 10.1109/VLHCC.2008.4639077
   Groce A., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P161, DOI 10.1109/ISSRE.2012.1
   Harman M., 2012, 2012 Proceedings of the First International Workshop on Realizing Artificial Intelligence Synergies in Software Engineering (RAISE 2012), P1, DOI 10.1109/RAISE.2012.6227961
   Harman M, 2012, INT SYMP EMP SOFTWAR, P1, DOI 10.1145/2372251.2372253
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   HART S G, 1988, P139
   Hastie T., 2003, The Elements of Statistical Learning: Data Mining, Inference, and Prediction
   Isa D, 2008, IEEE T KNOWL DATA EN, V20, P1264, DOI 10.1109/TKDE.2008.76
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Kapoor A, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1343
   Kulesza Todd, 2011, End-User Development. Proceedings Third International Symposium, IS-EUD 2011, P171, DOI 10.1007/978-3-642-21530-8_14
   Kulesza Todd, 2010, Proceedings 2010 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2010), P41, DOI 10.1109/VLHCC.2010.15
   Kulesza T, 2011, ACM T INTERACT INTEL, V1, DOI 10.1145/2030365.2030367
   Kulesza Todd, 2009, P 14 INT C INT US IN, P187
   Lang K., 1995, Machine Learning. Proceedings of the Twelfth International Conference on Machine Learning, P331
   Lewis D. D., 1994, SIGIR '94. Proceedings of the Seventeenth Annual International ACM-SIGIR Conference on Research and Development in Information Retrieval, P3
   Lim BY, 2010, UBICOMP 2010: PROCEEDINGS OF THE 2010 ACM CONFERENCE ON UBIQUITOUS COMPUTING, P13
   Lim BY, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P2119
   MARON ME, 1961, J ACM, V8, P404, DOI 10.1145/321075.321084
   McCallum A.K., 2002, MALLET MACHINE LEARN
   Miller R. C., 2001, 01UIST. Proceedings of the 14th Annual ACM Symposium on User Interface Software and Technology, P81, DOI 10.1145/502348.502361
   Murphy C, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P189
   Raghavan H, 2006, J MACH LEARN RES, V7, P1655
   Raz O, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P302, DOI 10.1109/ICSE.2002.1007977
   Rothermel G, 2001, ACM T SOFTW ENG METH, V10, P110, DOI 10.1145/366378.366385
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Scaffidi C, 2007, ICEIS 2007: PROCEEDINGS OF THE NINTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, P236
   Shen JQ, 2007, 2007 INTERNATIONAL CONFERENCE ON INTELLIGENT USER INTERFACES, P132
   Shetty J, 2004, TECHNICAL REPORT
   Shinsel A, 2011, S VIS LANG HUM CEN C, P47, DOI 10.1109/VLHCC.2011.6070377
   Talbot J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1283
   Tullio J, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P31
   Wasserman L., 2004, ALL STAT
   Wong Weng-Keen, 2011, Proceedings of the 16th international conference on Intelligent user interfaces (IUI '11), P115, DOI 10.1145/1943403.1943423
   Wu TF, 2004, J MACH LEARN RES, V5, P975
   Xie XY, 2009, INT CONF QUAL SOFTW, P135, DOI 10.1109/QSIC.2009.26
   Zadrozny B, 2001, P 18 INT C MACH LEAR, P609, DOI DOI 10.5555/645530.655658
NR 63
TC 33
Z9 37
U1 1
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2014
VL 40
IS 3
BP 307
EP 323
DI 10.1109/TSE.2013.59
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AF4FH
UT WOS:000334666500006
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Ramasubbu, N
AF Ramasubbu, Narayan
TI Governing Software Process Improvements in Globally Distributed Product
   Development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software process improvement (SPI); distributed teams; software
   engineering; process control; action research
ID SYSTEMS-DEVELOPMENT; COMMUNICATION; QUALITY; COORDINATION; CONSEQUENCES;
   MANAGEMENT; DISPERSION; DYNAMICS; PATTERNS; MATURITY
AB Continuous software process improvement (SPI) practices have been extensively prescribed to improve performance of software projects. However, SPI implementation mechanisms have received little scholarly attention, especially in the context of distributed software product development. We took an action research approach to study the SPI journey of a large multinational enterprise that adopted a distributed product development strategy. We describe the interventions and action research cycles enacted over a period of five years in collaboration with the firm, which resulted in a custom SPI framework that catered to both the social and technical needs of the firm's distributed teams. Institutionalizing the process maturity framework got stalled initially because the SPI initiatives were perceived by product line managers as a mechanism for exercising wider controls by the firm's top management. The implementation mechanism was subsequently altered to co-opt product line managers, which contributed to a wider adoption of the SPI framework. Insights that emerge from our analysis of the firm's SPI journey pertain to the integration of the technical and social views of software development, preserving process diversity through the use of a multi-tiered, non-blueprint approach to SPI, the linkage between key process areas and project control modes, and the role of SPI in aiding organizational learning.
C1 Univ Pittsburgh, Joseph M Katz Grad Sch Business, Pittsburgh, PA 15260 USA.
C3 Pennsylvania Commonwealth System of Higher Education (PCSHE); University
   of Pittsburgh
RP Ramasubbu, N (corresponding author), Univ Pittsburgh, Joseph M Katz Grad Sch Business, 354 Mervis Hall, Pittsburgh, PA 15260 USA.
EM narayanr@pitt.edu
RI RAMASUBBU, Narayanasamy/E-8571-2012; Ramasubbu, Narayan/N-1364-2019
OI Ramasubbu, Narayan/0000-0002-6959-0729
CR Aaen I., 2001, Scandinavian Journal of Information Systems, V13, P123
   Aaen I, 2003, IEEE SOFTWARE, V20, P86, DOI 10.1109/MS.2003.1231159
   Ahuja MK, 1999, ORGAN SCI, V10, P741, DOI 10.1287/orsc.10.6.741
   [Anonymous], DISCIPLINE SOFTWARE
   [Anonymous], 1997, Spice: The Theory and Practice of Software Process Improvement and Capability Determination
   Baskerville RL, 1996, MIS QUART, V20, P481, DOI 10.2307/249565
   Boehm BW., 1981, Software Engineering Economics
   Carlson JR, 1999, ACAD MANAGE J, V42, P153, DOI 10.2307/257090
   Carmel E., 1999, GLOBAL SOFTWARE TEAM
   Cheng L.-T., 2004, ACM QUEUE, V1, P42
   Choudhury V, 2003, INFORM SYST RES, V14, P291, DOI 10.1287/isre.14.3.291.16563
   Christensen C., 2003, HUMAN SIDE MANAGING, P622
   Collins R.W., 2003, STRATEGIES MANAGING, P195
   Cramton CD, 2001, ORGAN SCI, V12, P346, DOI 10.1287/orsc.12.3.346.10098
   Cummings J., 2004, MANAGE SCI, V50, P1348
   DAFT RL, 1986, MANAGE SCI, V32, P554, DOI 10.1287/mnsc.32.5.554
   Davis JG, 2001, INFORM SYST FRONT, V3, P377, DOI 10.1023/A:1011469727367
   Deck M, 2001, IEEE SOFTWARE, V18, P21, DOI 10.1109/52.922721
   DONNELLON A, 1993, J PROD INNOVAT MANAG, V10, P377
   Duggan J, 2004, IEEE SOFTWARE, V21, P76, DOI 10.1109/MS.2004.1293077
   EISENHARDT KM, 1985, MANAGE SCI, V31, P134, DOI 10.1287/mnsc.31.2.134
   Espinosa J.A., 2004, SOFTW PROCESS IMPROV, V8, P249
   Espinosa JA, 2003, J MANAGE INFORM SYST, V19, P157
   EVELAND JD, 1988, ACM T INFORM SYST, V6, P354, DOI 10.1145/58566.58568
   Feldman MS, 2003, ADMIN SCI QUART, V48, P94, DOI 10.2307/3556620
   Fisher K., 2000, The Distance Manager: A Hands-on Guide to Managing Off-Site Employees and Virtual Teams
   Fitzgerald B, 1999, IEEE SOFTWARE, V16, P37, DOI 10.1109/52.765785
   FORD RC, 1992, J MANAGE, V18, P267, DOI 10.1177/014920639201800204
   Fuggetta A., 1994, SIGSOFT Software Engineering Notes, V19, P66, DOI 10.1145/182824.182841
   Furst SA, 2004, ACAD MANAGE EXEC, V18, P6, DOI 10.5465/AME.2004.13837468
   Galunic DC, 1998, STRATEGIC MANAGE J, V19, P1193, DOI 10.1002/(SICI)1097-0266(1998120)19:12<1193::AID-SMJ5>3.3.CO;2-6
   Gopal A, 2003, MANAGE SCI, V49, P1671, DOI 10.1287/mnsc.49.12.1671.25120
   Harter DE, 2003, MANAGE SCI, V49, P784, DOI 10.1287/mnsc.49.6.784.16023
   Harter DE, 2000, MANAGE SCI, V46, P451, DOI 10.1287/mnsc.46.4.451.12056
   Herbsleb J, 1997, COMMUN ACM, V40, P30, DOI 10.1145/255656.255692
   Herbsleb J. D., 2003, Software Engineering Notes, V28, P138, DOI 10.1145/949952.940091
   Herbsleb J. D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P85, DOI 10.1109/ICSE.1999.840998
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Hertel G., 2004, EUROPEAN J WORK ORG, V13, P1, DOI DOI 10.1080/13594320344000228
   Iivari J., 1983, INFORM SYSTEMS DESIG
   Iversen JH, 2004, MIS QUART, V28, P395
   Jarvenpaa S. L., 1998, Journal of Management Information Systems, V14, P29
   Jarvenpaa SL, 1999, ORGAN SCI, V10, P791, DOI 10.1287/orsc.10.6.791
   Karolak D.W., 1998, Global Software Development: Managing Virtual Teams and Environments
   Kayworth TR, 2001, J MANAGE INFORM SYST, V18, P7, DOI 10.1080/07421222.2002.11045697
   Kendall M., 1990, Correlation methods
   Kirsch LJ, 1996, ORGAN SCI, V7, P1, DOI 10.1287/orsc.7.1.1
   Kling R., 1980, ADV COMPUT, V19, P249
   KOCH P, 1994, SOFTWARE PROCESS ASS
   Kohli R, 2004, MIS QUART, V28, P363
   Kouvelis P, 2000, MANAGE SCI, V46, P1049, DOI 10.1287/mnsc.46.8.1049.12022
   Kraut R.E., 1990, INTELLECTUAL TEAMWOR, P149
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Krishnan MS, 1999, IEEE T SOFTWARE ENG, V25, P800, DOI 10.1109/32.824401
   Lawler E., 2003, VIRTUAL TEAMS WORK C
   Lipnack J., 1997, Virtual teams: Reaching across space, time, and organizations with technology
   Lurey JS, 2001, INFORM MANAGE, V38, P523, DOI 10.1016/S0378-7206(01)00074-X
   MacGregor E., 2005, ACM SIGSOFT Software Engineering notes, V30, P1
   Majchrzak A., 2000, Information Resources Management Journal, V13, P44, DOI 10.4018/irmj.2000010104
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   Maznevski ML, 2000, ORGAN SCI, V11, P473, DOI 10.1287/orsc.11.5.473.15200
   McDonough EF, 2001, J PROD INNOVAT MANAG, V18, P110, DOI 10.1016/S0737-6782(00)00073-4
   Meyerson D., 1996, Trust in organizations: Frontiers of theory and research, P166, DOI DOI 10.4135/9781452243610.N9
   Moenaert RK, 2000, J PROD INNOVAT MANAG, V17, P360, DOI 10.1016/S0737-6782(00)00048-5
   Montoya-Weiss MM, 2001, ACAD MANAGE J, V44, P1251, DOI 10.5465/3069399
   Mukherjee AS, 1998, MANAGE SCI, V44, pS35, DOI 10.1287/mnsc.44.11.S35
   O'Leary MB, 2007, MIS QUART, V31, P433
   Olson GM, 2000, HUM-COMPUT INTERACT, V15, P139, DOI 10.1207/S15327051HCI1523_4
   Orlikowski W. J., 1992, CSCW '92. Sharing Perspectives. Proceedings of the Conference on Computer-Supported Cooperative Work, P362, DOI 10.1145/143457.143549
   Osterweil LJ, 1997, PROC INT CONF SOFTW, P540, DOI 10.1145/253228.253440
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   PINTO MB, 1993, MANAGE SCI, V39, P1281, DOI 10.1287/mnsc.39.10.1281
   PRAHALAD CK, 1990, HARVARD BUS REV, V68, P79
   Rad P.F., 2003, ACHIEVING PROJECT MA
   Ramasubbu N, 2008, MIS QUART, V32, P437
   Ramasubbu N, 2012, IEEE T SOFTWARE ENG, V38, P1054, DOI 10.1109/TSE.2011.88
   Ravichandran T, 2003, IEEE T ENG MANAGE, V50, P270, DOI 10.1109/TEM.2003.817278
   Rivkin JW, 2003, MANAGE SCI, V49, P290, DOI 10.1287/mnsc.49.3.290.12740
   Robey D, 1996, ACM T INFORM SYST, V14, P30, DOI 10.1145/214174.214178
   Rosen B., 2003, VIRTUAL TEAMS WORK C
   Smith RK, 2001, IEEE T SOFTWARE ENG, V27, P264, DOI 10.1109/32.910861
   Sole D., 2000, P 21 INT C INFORM SY, P581
   Sosa ME, 2004, MANAGE SCI, V50, P1674, DOI 10.1287/mnsc.1040.0289
   Suchan J., 2001, IEEE Transactions on Professional Communication, V44, P174, DOI 10.1109/47.946463
   SUSMAN GI, 1978, ADMIN SCI QUART, V23, P582, DOI 10.2307/2392581
   Tiwana A., 2003, P INT C INF SYST, P259
   Vogel DR, 2001, IEEE T PROF COMMUN, V44, P114, DOI 10.1109/47.925514
   West M., 2008, REAL PROCESS IMPROVE
   Zakaria N., 2004, Creativity and Innovation Management, V13, P15, DOI DOI 10.1111/J.1467-8691.2004.00290.X
NR 89
TC 48
Z9 48
U1 1
U2 25
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2014
VL 40
IS 3
BP 235
EP 250
DI 10.1109/TSE.2013.58
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AF4FH
UT WOS:000334666500002
DA 2024-07-18
ER

PT J
AU Trummer, I
   Faltings, B
   Binder, W
AF Trummer, Immanuel
   Faltings, Boi
   Binder, Walter
TI Multi-Objective Quality-Driven Service Selection-A Fully Polynomial Time
   Approximation Scheme
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Quality-driven service selection; multi-objective optimization;
   approximation algorithms
ID WEB SERVICES; QOS; ALGORITHMS
AB The goal of multi-objective quality-driven service selection (QDSS) is to find service selections for a workflow whose quality-of-service (QoS) values are Pareto-optimal. We consider multiple QoS attributes such as response time, cost, and reliability. A selection is Pareto-optimal if no other selection has better QoS values for some attributes and at least equivalent values for all others. Exact algorithms have been proposed that find all Pareto-optimal selections. They suffer however from exponential complexity. Randomized algorithms scale well but do not offer any formal guarantees on result precision. We present the first approximation scheme for QDSS. It aims at the sweet spot between exact and randomized algorithms: It combines polynomial complexity with formal result precision guarantees. A parameter allows to seamlessly trade result precision against efficiency. We formally analyze complexity and precision guarantees and experimentally compare our algorithm against exact and randomized approaches. Comparing with exact algorithms, our approximation scheme allows to reduce optimization time from hours to seconds. Its approximation error remains below 1.4 percent while randomized algorithms come close to the theoretical maximum.
C1 [Trummer, Immanuel; Faltings, Boi] Ecole Polytech Fed Lausanne, Artificial Intelligence Lab, CH-1015 Lausanne, Switzerland.
   [Binder, Walter] Univ Lugano, Fac Informat, CH-6900 Lugano, Switzerland.
C3 Swiss Federal Institutes of Technology Domain; Ecole Polytechnique
   Federale de Lausanne; Universita della Svizzera Italiana
RP Trummer, I (corresponding author), Ecole Polytech Fed Lausanne, Artificial Intelligence Lab, CH-1015 Lausanne, Switzerland.
EM immanuel.trummer@epfl.ch; boi.faltings@epfl.ch; walter.binder@usi.ch
OI Binder, Walter/0000-0002-2477-2182
FU Swiss National Science Foundation [CRSI22_127386]; European Research
   Council (ERC) [279804]; Swiss National Science Foundation (SNF)
   [CRSI22_127386] Funding Source: Swiss National Science Foundation (SNF)
FX The research presented in this paper has been supported by the Swiss
   National Science Foundation (Sinergia project CRSI22_127386) and by the
   European Research Council (ERC Grant 279804).
CR Aggarwal R, 2004, P IEEE I C SERV COMP, P23
   Ai LF, 2008, 2008 INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE FOR MODELLING CONTROL & AUTOMATION, VOLS 1 AND 2, P738, DOI 10.1109/CIMCA.2008.104
   Al-Masri E., 2007, P 16 INT C WORLD WID, P1257, DOI DOI 10.1145/1242572.1242795
   [Anonymous], 2007, Web Services Business Process Execution Language (BPEL)
   Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   Baresi L, 2006, COMPUTER, V39, P36, DOI 10.1109/MC.2006.362
   Ben Hassine A, 2006, LECT NOTES COMPUT SC, V4273, P130
   Berbner R, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P72
   Bonatti P.A., 2005, Proc. 14th Int'l Conf. World Wide Web (WWW'05), P530
   Canfora G, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1069
   Cao Jiuxin, 2010, Proceedings of the 2010 Asia-Pacific Services Computing Conference (APSCC 2010), P603, DOI 10.1109/APSCC.2010.75
   Claro D., 2005, IEEE INT WORKSH SEM, P32
   Comes D, 2010, LECT NOTES COMPUT SC, V6470, P441, DOI 10.1007/978-3-642-17358-5_30
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Gao CM, 2007, P INT COMP SOFTW APP, P361
   Gao Y, 2005, PDCAT 2005: Sixth International Conference on Parallel and Distributed Computing, Applications and Technologies, Proceedings, P336
   Hernandez-Diaz AG, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P675
   Hochba DS., 1997, ACM SIGACT N, V28, P40, DOI [10.1145/261342.571216, DOI 10.1145/261342.571216]
   Jaeger MC, 2005, LECT NOTES COMPUT SC, V3760, P646
   Klein A, 2010, LECT NOTES COMPUT SC, V6470, P182, DOI 10.1007/978-3-642-17358-5_13
   Kousalya G, 2011, 2011 NINTH IEEE INTERNATIONAL SYMPOSIUM ON PARALLEL AND DISTRIBUTED PROCESSING WITH APPLICATIONS WORKSHOPS (ISPAW), P193, DOI 10.1109/ISPAW.2011.40
   Moser O, 2012, IEEE T SOFTWARE ENG, V38, P828, DOI 10.1109/TSE.2011.43
   Nebro AJ, 2009, MCDM: 2009 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE IN MULTI-CRITERIA DECISION-MAKING, P66
   Nebro AJ, 2008, IEEE T EVOLUT COMPUT, V12, P439, DOI 10.1109/TEVC.2007.913109
   Papadimitriou C.H., 2001, PROC PODS, P52, DOI DOI 10.1145/375551.375560
   Papazoglou MP, 2007, VLDB J, V16, P389, DOI 10.1007/s00778-007-0044-3
   Tang M., 2010, Evolutionary Computation (CEC), 2010 IEEE Congress on, P1
   Wada H, 2008, IEEE CONGRESS ON SERVICES 2008, PT I, PROCEEDINGS, P368, DOI 10.1109/SERVICES-1.2008.77
   Yu Q., P IEEE INT C WEB SER, P481
   Yu Q, 2013, IEEE T KNOWL DATA EN, V25, P776, DOI 10.1109/TKDE.2011.268
   Yu Q, 2010, IEEE T SERV COMPUT, V3, P16, DOI 10.1109/TSC.2010.7
   Yu T, 2005, LECT NOTES COMPUT SC, V3826, P130
   Yu T, 2007, ACM T WEB, V1, DOI 10.1145/1232722.1232728
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
NR 35
TC 41
Z9 42
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2014
VL 40
IS 2
BP 167
EP 191
DI 10.1109/TSE.2013.61
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AF4FD
UT WOS:000334666000005
DA 2024-07-18
ER

PT J
AU Kim, D
   Tao, Y
   Kim, S
   Zeller, A
AF Kim, Dongsun
   Tao, Yida
   Kim, Sunghun
   Zeller, Andreas
TI Where Should We Fix This Bug? A Two-Phase Recommendation Model
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Bug reports; machine learning; patch file prediction
ID PROBABILISTIC RANKING; PREDICTING FAULTS; IMPACT ANALYSIS; ERRORS; TOOL
AB To support developers in debugging and locating bugs, we propose a two-phase prediction model that uses bug reports' contents to suggest the files likely to be fixed. In the first phase, our model checks whether the given bug report contains sufficient information for prediction. If so, the model proceeds to predict files to be fixed, based on the content of the bug report. In other words, our two-phase model "speaks up" only if it is confident of making a suggestion for the given bug report; otherwise, it remains silent. In the evaluation on the Mozilla "Firefox" and "Core" packages, the two-phase model was able to make predictions for almost half of all bug reports; on average, 70 percent of these predictions pointed to the correct files. In addition, we compared the two-phase model with three other prediction models: the Usual Suspects, the one-phase model, and BugScout. The two-phase model manifests the best prediction performance.
C1 [Kim, Dongsun; Tao, Yida; Kim, Sunghun] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Kowloon, Hong Kong, Peoples R China.
   [Zeller, Andreas] Univ Saarlandes Informat, D-66123 Saarbrucken, Germany.
C3 Hong Kong University of Science & Technology
RP Kim, D (corresponding author), Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Clear Water Bay Rd, Kowloon, Hong Kong, Peoples R China.
EM darkrsw@cse.ust.hk; idagoo@cse.ust.hk; humkim@cse.ust.hk; zeller@acm.org
RI ; Kim, Dongsun/B-4856-2015
OI Zeller, Andreas/0000-0003-4719-8803; Kim, Dongsun/0000-0003-0272-6860
CR Acharya M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P746, DOI 10.1145/1985793.1985898
   Alpaydin E, 2004, INTRO MACHINE LEARNI
   Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   [Anonymous], 2008, Guide to Advanced Empirical Software Engineering
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Ashok B, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P373
   Balzer R., 1991, P 13 INT C SOFTW ENG, P158
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   BIGGERSTAFF TJ, 1993, PROC INT CONF SOFTW, P482, DOI 10.1109/ICSE.1993.346017
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Breech B, 2006, PROC IEEE INT CONF S, P55
   Brun Y, 2004, PROC INT CONF SOFTW, P480, DOI 10.1109/ICSE.2004.1317470
   Burger Martin., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, ISSTA '11, P221, DOI DOI 10.1145/2001420.2001447
   Chesley OC, 2007, PROC INT CONF SOFTW, P775
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   Gay G, 2009, PROC IEEE INT CONF S, P351, DOI 10.1109/ICSM.2009.5306315
   Guo PJ, 2011, P ACM 2011 C COMP SU, P395, DOI [10.1145/1958824.1958887., DOI 10.1145/1958824.1958887]
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Khoshgoftaar TM, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P119, DOI 10.1109/METRIC.2004.1357896
   Khoshgoftaar TM, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P364, DOI 10.1109/ISSRE.1996.558896
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Lee T., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering, P311
   Lewis D. D., 1998, Machine Learning: ECML-98. 10th European Conference on Machine Learning. Proceedings, P4, DOI 10.1007/BFb0026666
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liblit B, 2003, ACM SIGPLAN NOTICES, V38, P141, DOI 10.1145/780822.781148
   Liebchen Gemot, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P99
   Liebchen G. A., 2008, P 4 INT WORKSH PRED, P39, DOI [10.1145/1370788.1370799, DOI 10.1145/1370788.1370799]
   Liu C., 2005, P EUR SOFTW ENG C HE, V30, P286
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Manevich R., 2004, Software Engineering Notes, V29, P63, DOI 10.1145/1041685.1029907
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Miller A., 2002, SUBSET SELECTION REG
   Montgomery D. C., 2010, Applied Statistics and Probability for Engineers
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2006, INT C PROGRAM COMPRE, P137, DOI 10.1109/ICPC.2006.17
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Ren XX, 2005, PROC INT CONF SOFTW, P664, DOI 10.1145/1062455.1062598
   Rennie J.D., 2001, IMPROVING MULTICLASS
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   Seo HM, 2012, IEEE INT CONF AUTOM, P180, DOI 10.1145/2351676.2351702
   Shepherd David, 2007, P 6 INT C ASP OR SOF, P212
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Stoerzer Maximilian., 2006, P 14 ACM SIGSOFT INT, P57
   SWARTZ L, 2003, THESIS STANFORD U
   WEISER M, 1982, COMMUN ACM, V25, P446, DOI 10.1145/358557.358577
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Widmer G, 1996, MACH LEARN, V23, P69, DOI 10.1023/A:1018046501280
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 66
TC 121
Z9 140
U1 1
U2 23
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2013
VL 39
IS 11
BP 1597
EP 1610
DI 10.1109/TSE.2013.24
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 245YN
UT WOS:000326501200009
DA 2024-07-18
ER

PT J
AU Moffett, Y
   Dingel, J
   Beaulieu, A
AF Moffett, Yann
   Dingel, Juergen
   Beaulieu, Alain
TI Verifying Protocol Conformance Using Software Model Checking for the
   Model-Driven Development of Embedded Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Component-based software engineering; behavioral interface
   specifications; software modeling; model-driven development; formal
   specification and verification; software model checking
AB To facilitate modular development, the use of state machines has been proposed to specify the protocol (i.e., the sequence of messages) that each port of a component can engage in. The protocol conformance checking problem consists of determining whether the actual behavior of a component conforms to the protocol specifications on its ports. In this paper, we consider this problem in the context of the model-driven development (MDD) of embedded systems based on UML 2, in which UML 2 state machines are used to specify component behavior. We provide a definition of conformance which slightly extends those found in the literature and reduce the conformance check to a state space exploration. We describe a tool implementing the approach using the Java PathFinder software model checker and the MDD tool IBM Rational RoseRT, discuss its application to three case studies, and show how the tool repeatedly allowed us to find unexpected conformance errors with encouraging performance. We conclude that the approach is promising for supporting the modular development of embedded components in the context of industrial applications of MDD.
C1 [Moffett, Yann] CF 18 Avion Syst Engn, Dept Natl Def, Ottawa, ON K1A 0K2, Canada.
   [Dingel, Juergen] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
   [Beaulieu, Alain] Royal Mil Coll Canada, Dept Elect & Comp Engn, Stn Forces, Kingston, ON K7K 7B4, Canada.
C3 Queens University - Canada; Royal Military College - Canada
RP Moffett, Y (corresponding author), CF 18 Avion Syst Engn, Dept Natl Def, DAEPM FT 3-2-2, Ottawa, ON K1A 0K2, Canada.
EM yann.moffett@forces.gc.ca; dingel@cs.queensu.ca; alain.beaulieu@rmc.ca
FU NSERC; IBM Canada; Malina Software Corp.; Canadian Forces Directorate of
   Technical Airworthiness Engineering
FX The authors gratefully acknowledge the support of NSERC, IBM Canada,
   Malina Software Corp., and the Canadian Forces Directorate of Technical
   Airworthiness Engineering and Support. A sincere thank you to Bran Selic
   of Malina Software for sharing his expertise in modeling in general and
   UML-RT and UML 2 in particular with the authors so generously.
CR Abdulla P., 2004, P 1 INT C LEV APPL F
   Allen R., 1997, ACM Transactions on Software Engineering and Methodology, V6, P213, DOI 10.1145/258077.258078
   Baldoni M., 2005, Computational Logic in Multi-Agent Systems. 5th International Workshop, CLIMA V. Revised Selected and Invited Papers (Lecture Notes in Artificial Intelligence Vol.3487), P196
   Ball T, 2011, COMMUN ACM, V54, P68, DOI 10.1145/1965724.1965743
   Bures T, 2008, LECT NOTES COMPUT SC, V5153, P388
   Campbell R. H., 1974, Proceedings of an International Symposium om Operating Systems, P89, DOI 10.1007/BFb0029355
   Cansado A, 2008, LECT NOTES COMPUT SC, V5153, P418
   Engels G., 2001, Software Engineering Notes, V26, P186, DOI 10.1145/503271.503235
   Engels G., 2003, ELECT NOTES THEORETI, V82, P133
   Fahndrich M., 2006, Operating Systems Review, V40, P177, DOI 10.1145/1218063.1217953
   Gay Simon., 2003, Session types for inter-process communication
   Gery E., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P1
   Giese H., 2003, Software Engineering Notes, V28, P38, DOI 10.1145/949952.940078
   Giordano L., 2007, P INT AG LOG THEOR P, P19
   Giordano L, 2007, LECT NOTES COMPUT SC, V4733, P145
   Hunt Galen C., 2007, Operating Systems Review, V41, P37, DOI 10.1145/1243418.1243424
   Jhala R, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592438
   Kofron J, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P1513, DOI 10.1145/1244002.1244326
   Leavens Gary T, 2006, SIGSOFT Softw. Eng. Notes, V31, P1, DOI [10.1145/1127878.1127884, DOI 10.1145/1127878.1127884]
   Liu Z., 2009, P 3 INT S FUND SOFTW
   Moffett Y., 2010, THESIS ROYAL MILITAR
   Moffett Y, 2011, LECT NOTES COMPUT SC, V6981, P410, DOI 10.1007/978-3-642-24485-8_30
   Object Management Group, 2010, PTC20101005 OMG
   OMG: Business process model and notation (BPMN) version 2. 0, 2011, TECHNICAL REPORT
   Parizek P., 2006, P IEEE NASA 30 ANN S
   Pelliccione P, 2009, IEEE T SOFTWARE ENG, V35, P325, DOI 10.1109/TSE.2008.104
   Plasil F, 2002, IEEE T SOFTWARE ENG, V28, P1056, DOI 10.1109/TSE.2002.1049404
   Porres Ivan, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P107, DOI 10.1109/ICST.2010.62
   Rauf I, 2011, APPL COMPUT REV, V11, P19
   Saaltink M., 1999, TR99553702 ORA CAN
   Saaltink M., 1999, TR99553703 ORA CAN
   Schafer T., 2004, ENTCS, V55, P1
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Selic B., 1998, Languages, Compilers, and Tools for Embedded Systems. ACM SIGPLAN Workshop LCTES'98. Proceedings, P250, DOI 10.1007/BFb0057795
   Selic B., 1994, REAL TIME OBJECT ORI
   Selic B., 2011, COMMUNICATION
   Shigo O, 2006, ASPEC 2006: 13TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P191
   Stengel A., 2009, P 18 INT S SOFTW TES
   Tran V., 2008, P 25 C JAP SOC SOFTW
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Weigert T., 2007, P 13 INT SDL FOR C D
   Whittaker P., 2000, P WORKSH FORM DES TE
   Yellin DM, 1997, ACM T PROGR LANG SYS, V19, P292, DOI 10.1145/244795.244801
NR 43
TC 5
Z9 8
U1 0
U2 22
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2013
VL 39
IS 9
BP 1307
EP 1325
DI 10.1109/TSE.2013.14
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 207ZG
UT WOS:000323643000009
DA 2024-07-18
ER

PT J
AU Kamei, Y
   Shihab, E
   Adams, B
   Hassan, AE
   Mockus, A
   Sinha, A
   Ubayashi, N
AF Kamei, Yasutaka
   Shihab, Emad
   Adams, Bram
   Hassan, Ahmed E.
   Mockus, Audris
   Sinha, Anand
   Ubayashi, Naoyasu
TI A Large-Scale Empirical Study of Just-in-Time Quality Assurance
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Maintenance; software metrics; mining software repositories; defect
   prediction; just-in-time prediction
ID OPEN SOURCE SOFTWARE; CODE CHURN; METRICS; CLASSIFICATION; PREDICTION;
   VALIDATION; MODELS; RISK
AB Defect prediction models are a well-known technique for identifying defect-prone files or packages such that practitioners can allocate their quality assurance efforts (e. g., testing and code reviews). However, once the critical files or packages have been identified, developers still need to spend considerable time drilling down to the functions or even code snippets that should be reviewed or tested. This makes the approach too time consuming and impractical for large software systems. Instead, we consider defect prediction models that focus on identifying defect-prone ("risky") software changes instead of files or packages. We refer to this type of quality assurance activity as "Just-In-Time Quality Assurance," because developers can review and test these risky changes while they are still fresh in their minds (i.e., at check-in time). To build a change risk model, we use a wide range of factors based on the characteristics of a software change, such as the number of added lines, and developer experience. A large-scale study of six open source and five commercial projects from multiple domains shows that our models can predict whether or not a change will lead to a defect with an average accuracy of 68 percent and an average recall of 64 percent. Furthermore, when considering the effort needed to review changes, we find that using only 20 percent of the effort it would take to inspect all changes, we can identify 35 percent of all defect-inducing changes. Our findings indicate that "Just-In-Time Quality Assurance" may provide an effort-reducing way to focus on the most risky changes and thus reduce the costs of developing high-quality software.
C1 [Kamei, Yasutaka; Ubayashi, Naoyasu] Kyushu Univ, Grad Sch, Nishi Ku, Fukuoka 8190395, Japan.
   [Kamei, Yasutaka; Ubayashi, Naoyasu] Kyushu Univ, Fac Informat Sci & Elect Engn, Nishi Ku, Fukuoka 8190395, Japan.
   [Shihab, Emad] Rochester Inst Technol, Dept Software Engn, Rochester, NY 14623 USA.
   [Adams, Bram] Ecole Polytech, Dept Genie Informat & Genie Logiciel, Montreal, PQ H3C 3A7, Canada.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
   [Mockus, Audris] Avaya Labs Res, Basking Ridge, NJ 07920 USA.
   [Sinha, Anand] Mabels Labels, Dundas, ON L9H 3R2, Canada.
C3 Kyushu University; Kyushu University; Rochester Institute of Technology;
   Universite de Montreal; Polytechnique Montreal; Queens University -
   Canada; Avaya
RP Kamei, Y (corresponding author), Kyushu Univ, Grad Sch, Nishi Ku, West 2-810,744 Motooka, Fukuoka 8190395, Japan.
EM kamei@ait.kyushu-u.ac.jp; emad.shihab@rit.edu; bram.adams@polymtl.ca;
   ahmed@cs.queensu.ca; audris@avaya.com; Anand_Sinha@yahoo.com;
   ubayashi@ait.kyushu-u.ac.jp
RI Hassan, Ahmed/AAB-7241-2019; Mockus, Audris/AEY-3361-2022; KHALIFA,
   AHMED khalifa/HKF-2246-2023; Ali, Ahmed/HOF-4672-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Mockus,
   Audris/0000-0002-7987-7598; Ubayashi, Naoyasu/0000-0003-1578-7195;
   Adams, Bram/0000-0001-7213-4006
FU Japan Society for the Promotion of Science [24680003, 23800044];
   Grants-in-Aid for Scientific Research [24680003, 23800044] Funding
   Source: KAKEN
FX This research was conducted as part of the Grant-in-Aid for Young
   Scientists(A) 24680003 and (Start-up) 23800044 by the Japan Society for
   the Promotion of Science.
CR [Anonymous], P 24 INT C SOFTW ENG
   [Anonymous], 1976, ICSE 76
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering (FSE'11), DOI [10.1145/2025113.2025121, DOI 10.1145/2025113.2025121]
   [Anonymous], P 32 ACM IEEE INT C
   [Anonymous], P INT C PRED MOD SOF
   [Anonymous], P INT C SOFTW ENG
   [Anonymous], AUTOMAT SOFTW ENG
   [Anonymous], 2008, P INT C SOFTW ENG, DOI DOI 10.1145/1370788.1370793
   [Anonymous], 2010, PROC 18 ACM SIGSOFT
   [Anonymous], P INT C PRED MOD SOF
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Aversano L., 2007, IWPSE 07 9 INT WORKS, P19
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P345, DOI 10.1109/ICSE.1999.841025
   BRIAND LC, 1993, IEEE T SOFTWARE ENG, V19, P1028, DOI 10.1109/32.256851
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   EFRON B, 1983, J AM STAT ASSOC, V78, P316, DOI 10.2307/2288636
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Eyolfson J., 2011, WORKING C MINING SOF, P153, DOI DOI 10.1145/1985441.1985464
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Herraiz I., 2008, Proceedings of the 2008 International Working Conference on Mining Software Repositories. MSR'08, P145
   Herraiz I., 2007, Proceedings of the International Workshop on Mining Software Repositories, P21
   Kamei Yasutaka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P196
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Khoshgoftaar T. M., 2000, Empirical Software Engineering, V5, P313, DOI 10.1023/A:1009896203228
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Leszak M, 2002, J SYST SOFTWARE, V61, P173, DOI 10.1016/S0164-1212(01)00146-7
   Luo Li P., 2006, 28th International Conference on Software Engineering Proceedings, P413, DOI 10.1145/1134285.1134343
   Mallows CL, 2000, TECHNOMETRICS, V42, P87, DOI 10.2307/1271437
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Mockus A, 2005, PROC INT CONF SOFTW, P225
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Mockus A, 2010, Proc. of the 18th Symposium on the Foundations of Software Engineering (FSE), P117
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   Munson JC, 1998, PROC IEEE INT CONF S, P24, DOI 10.1109/ICSM.1998.738486
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Ratzinger J., 2008, Proceedings of the 2008 international working conference on Mining software repositories, P35, DOI [10.1145/1370750.1370759, DOI 10.1145/1370750.1370759]
   Raymond Eric Steven, 2001, The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary
   Shihab E., 2011, Proceedings of the ACM SIGSOFT symposium and the European Conference on Foundations of Software Engineering, P300
   Shihab Emad, 2010, P ACM IEEE INT S EMP, P1
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Vanya A, 2011, EUR CON SFTWR MTNCE, P121, DOI 10.1109/CSMR.2011.18
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zimmermann T., 2004, Proc. of the 1st Int'lWorkshop onMining Software Repositories (MSR), P2, DOI [DOI 10.1049/IC:20040466, 10.1049/ic:20040466]
NR 63
TC 401
Z9 440
U1 2
U2 44
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2013
VL 39
IS 6
BP 757
EP 773
DI 10.1109/TSE.2012.70
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 149RG
UT WOS:000319338200003
DA 2024-07-18
ER

PT J
AU Kalbasi, A
   Krishnamurthy, D
   Rolia, J
   Dawson, S
AF Kalbasi, Amir
   Krishnamurthy, Diwakar
   Rolia, Jerry
   Dawson, Stephen
TI DEC: Service Demand Estimation with Confidence
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Benchmarking; resource demand prediction; statistical regression
AB We present a new technique for predicting the resource demand requirements of services implemented by multitier systems. Accurate demand estimates are essential to ensure the efficient provisioning of services in an increasingly service-oriented world. The demand estimation technique proposed in this paper has several advantages compared with regression-based demand estimation techniques, which many practitioners employ today. In contrast to regression, it does not suffer from the problem of multicollinearity, it provides more reliable aggregate resource demand and confidence interval predictions, and it offers a measurement-based validation test. The technique can be used to support system sizing and capacity planning exercises, costing and pricing exercises, and to predict the impact of changes to a service upon different service customers.
C1 [Kalbasi, Amir; Krishnamurthy, Diwakar] Univ Calgary, Dept Elect & Comp Engn, Calgary, AB T2N 1N4, Canada.
   [Rolia, Jerry] Hewlett Packard Labs, Automated Infrastruct Lab, Bristol BS34 8QZ, Avon, England.
   [Dawson, Stephen] SAP UK Ltd, SAP Res Ctr Belfast, Belfast BT3 9DT, Antrim, North Ireland.
C3 University of Calgary; Hewlett-Packard
RP Kalbasi, A (corresponding author), Univ Calgary, Dept Elect & Comp Engn, 2500 Univ Dr NW, Calgary, AB T2N 1N4, Canada.
EM akalbasi@ucalgary.ca; dkrishna@ucalgary.ca; jerry.rolia@hp.com;
   stephen.dawson@sap.com
RI Kalbasi, Amir/GLN-7604-2022
OI Kalbasi, Amir/0000-0001-9475-3086
FU Natural Sciences and Engineering Research Council (NSERC) Canada;
   Hewlett Packard Labs
FX This work was financially supported by the Natural Sciences and
   Engineering Research Council (NSERC) Canada and Hewlett Packard Labs.
   The authors thank the anonymous reviewers for comments that helped
   improve this paper.
CR Amza C, 2002, I S WORKL CHAR PROC, P3, DOI 10.1109/WWC.2002.1226489
   [Anonymous], 2011, Amazon Elastic Computing Cloud
   [Anonymous], 2011, SAP BUSINESS DESIGN
   [Anonymous], 2011, TPC BENCHMARK W WEB
   [Anonymous], 2011, ENG STAT HDB
   [Anonymous], 1998, HTTPERF TOOL MEASURI, DOI DOI 10.1145/306225.306235
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   Bard Y., 1978, Current trends in programming methodology, vol.III. Software modeling, P1
   Casale G, 2008, EUROMICRO WORKSHOP P, P183, DOI 10.1109/PDP.2008.80
   Dodge Y., 2000, ADAPTIVE REGRESSION
   Draper N. R., 1998, APPL REGRESSION ANAL, V326
   Dujmovic J. J., 1999, MASCOTS '99. Proceedings of the Seventh International Symposium on Modeling, Analysis and Simulation of Computer and Telecommunication Systems, P197, DOI 10.1109/MASCOT.1999.805056
   Kraft S., 2009, P 4 INT C PERF EV ME
   KRISHNAMURTHY D, 2004, THESIS CARLETON U
   Krishnamurthy D, 2006, IEEE T SOFTWARE ENG, V32, P868, DOI 10.1109/TSE.2006.106
   Krishnaswamy U, 2000, IEEE T COMPUT, V49, P1325, DOI 10.1109/12.895853
   Kubokawa T, 2004, COMMUN STAT-THEOR M, V33, P1943, DOI 10.1081/STA-120037452
   Lu Y, 2003, 9TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P208
   Menasce Daniel A., 2008, CMG 08 International Conference Proceedings, p241, 246
   Mi NF, 2007, PERFORM EVALUATION, V64, P1082, DOI 10.1016/j.peva.2007.06.016
   Neter J., 1996, APPL LINEAR STAT MOD, V81, P1126
   Pacifici G, 2008, PERFORM EVALUATION, V65, P531, DOI 10.1016/j.peva.2007.12.001
   Rolia J., 1998, P INT WORKSHOP SOFTW, P219
   Rolia J., 1995, P CASCON C, P54
   Rolia J., 2010, P WOSP SIPEW 10 SAN, P207
   Smola AJ, 2004, STAT COMPUT, V14, P199, DOI 10.1023/B:STCO.0000035301.49549.88
   Stewart C., 2007, Operating Systems Review, V41, P31, DOI 10.1145/1272998.1273002
   Sun X., 1999, THESIS CARLETON U
   Vallamsetty U., 2003, Electronic Commerce Research, V3, P167, DOI 10.1023/A:1021585529079
   Woodside M., 2006, Proceedings. 3rd International Conference on Autonomic Computing (IEEE Cat. No. 06EX1303), P175
   Woodside M, 2008, LECT NOTES COMPUT SC, V5119, P9, DOI 10.1007/978-3-540-69814-2_3
   Yu XH, 2007, ADV INTEL SYS RES, DOI 10.2991/iske.2007.224
   2011, TPC W BENCHMARK
NR 33
TC 16
Z9 18
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2012
VL 38
IS 3
BP 561
EP 578
DI 10.1109/TSE.2011.23
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 947FP
UT WOS:000304414400005
DA 2024-07-18
ER

PT J
AU Kwon, Y
   Agha, G
AF Kwon, YoungMin
   Agha, Gul
TI Verifying the Evolution of Probability Distributions Governed by a DTMC
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Probabilistic model checking; linear temporal logic; Discrete Time
   Markov Chain; pharmacokinetics
AB We propose a new probabilistic temporal logic, iLTL, which captures properties of systems whose state can be represented by probability mass functions (pmfs). Using iLTL, we can specify reachability to a state (i.e., a pmf), as well as properties representing the aggregate (expected) behavior of a system. We then consider a class of systems whose transitions are governed by a Markov Chain-in this case, the set of states a system may be in is specified by the transitions of pmfs from all potential initial states to the final state. We then provide a model checking algorithm to check iLTL properties of such systems. Unlike existing model checking techniques, which either compute the portions of the computational paths that satisfy a specification or evaluate properties along a single path of pmf transitions, our model checking technique enables us to do a complete analysis on the expected behaviors of large-scale systems. Desirable system parameters may also be found as a counterexample of a negated goal. Finally, we illustrate the usefulness of iLTL model checking by means of two examples: assessing software reliability and ensuring the results of administering a drug.
C1 [Kwon, YoungMin] Microsoft Corp, Redmond, WA 98052 USA.
   [Agha, Gul] Univ Illinois, Dept Comp Sci, Urbana, IL 61801 USA.
C3 Microsoft; University of Illinois System; University of Illinois
   Urbana-Champaign
RP Kwon, Y (corresponding author), Microsoft Corp, 1 Microsoft Way, Redmond, WA 98052 USA.
EM ykwon4@cs.uiuc.edu; agha@cs.uiuc.edu
OI Agha, Gul/0000-0002-0580-4206
FU CNS [05-09321]; US Office of Naval Research under US Department of
   Defense MURI [N0014-020100715]
FX The authors thank Eunhee Kim and Kent Cheung for their helpful comments.
   The authors also thank the anonymous referees for numerous comments that
   have helped improve the exposition of this paper. This research has been
   supported in part by CNS 05-09321 and by the US Office of Naval Research
   under US Department of Defense MURI award N0014-020100715.
CR [Anonymous], Probability, Random Variables and Stochastic Processes
   Aziz A, 1995, LECT NOTES COMPUT SC, V939, P155
   Aziz A, 1996, LNCS, P269, DOI [DOI 10.1007/3-540-61474-5_75, 10.1007/3-540-61474-5_75, DOI 10.1007/3-540-61474-5]
   Baier C, 1999, LECT NOTES COMPUT SC, V1664, P146
   Berg BA, 2005, LECT NOTES SER INST, V7, P1
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   BUCHHOLZ P, 1994, J APPL PROBAB, V31, P59, DOI 10.2307/3215235
   BUCHI J, 1960, INT C LOG METH PHIL, P1
   Calder M, 2006, LECT NOTES COMPUT SC, V4210, P63
   CIARDO G, 1990, IEEE T COMPUT, V39, P1251, DOI 10.1109/12.59855
   Ciardo G., 1999, Proceedings 8th International Workshop on Petri Nets and Performance Models (Cat. No.PR00331), P22, DOI 10.1109/PNPM.1999.796529
   CLARKE E, 2000, MODEL CHECKING3
   CLARKE E, 1981, P WORKSH LOG PROGR
   Clarke Edmund M., 1983, C RECORD 10 ANN ACM, P117, DOI [DOI 10.1145/567067.567080, 10.1145/567067]
   Grosu R, 2008, LECT NOTES COMPUT SC, V4981, P229
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Hughes G.E., 1997, Introduction to Modal Logic
   Kemeny John G., 1976, FINITE MARKOV CHAINS
   Kwiatkowska M, 2004, INT CONF QUANT EVAL, P322
   KWON Y, 2005, P INT C QUANT EV SYS
   KWON Y, 2006, P IEEE REAL TIM EMB
   Kwon Y K., 2007, IEEE Power Engineering Society General Meeting, 2007, P1
   Kwon YM, 2004, LECT NOTES COMPUT SC, V3308, P194
   Kwon Y, 2008, LECT NOTES COMPUT SC, V4981, P316
   Lam VV, 2004, INT CONF QUANT EVAL, P136
   Lichtenstein O., 1985, P 12 ACM SIGACT SIGP, P97, DOI DOI 10.1145/318593.318622
   Luenberger D.G., 1989, Linear and Nonlinear Programming, V2nd
   Martyna J, 2007, LECT NOTES COMPUT SC, V4686, P262
   MINER AS, 1999, P 20 INT C APPL THEO, P6
   Pham H., 2000, SOFTWARE RELIABILITY
   Rajgopal J, 2002, IEEE T SOFTWARE ENG, V28, P358, DOI 10.1109/TSE.2002.995424
   Roberts DM, 2007, CLIN PHARMACOKINET, V46, P897, DOI 10.2165/00003088-200746110-00001
   SHARGEL L, 1985, APPL BIOPHARMACEUTIC
   Start Henry., 2002, Probability and Random Processes with Applications to Signal Processing, V3rd
   Strang G., 1988, LINEAR ALGEBRA ITS A
   Tanenbaum A. S., 2003, Computer networks
   Yacoub S. M., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P22, DOI 10.1109/ISSRE.1999.809307
   2010, ILTLCHECKER
NR 39
TC 11
Z9 11
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2011
VL 37
IS 1
BP 126
EP 141
DI 10.1109/TSE.2010.80
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 712OS
UT WOS:000286676700009
DA 2024-07-18
ER

PT J
AU Hannay, JE
   Arisholm, E
   Engvik, H
   Sjoberg, DIK
AF Hannay, Jo E.
   Arisholm, Erik
   Engvik, Harald
   Sjoberg, Dag I. K.
TI Effects of Personality on Pair Programming
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Pair programming; personality; Big Five; expertise; task complexity;
   performance
ID BRIGGS TYPE INDICATOR; TEAM PERFORMANCE; DESIGN; MODEL; COMPLEXITY;
   EXPERTISE; ELEMENTS; STYLE; FIT
AB Personality tests in various guises are commonly used in recruitment and career counseling industries. Such tests have also been considered as instruments for predicting the job performance of software professionals both individually and in teams. However, research suggests that other human-related factors such as motivation, general mental ability, expertise, and task complexity also affect the performance in general. This paper reports on a study of the impact of the Big Five personality traits on the performance of pair programmers together with the impact of expertise and task complexity. The study involved 196 software professionals in three countries forming 98 pairs. The analysis consisted of a confirmatory part and an exploratory part. The results show that: 1) Our data do not confirm a meta-analysis-based model of the impact of certain personality traits on performance and 2) personality traits, in general, have modest predictive value on pair programming performance compared with expertise, task complexity, and country. We conclude that more effort should be spent on investigating other performance-related predictors such as expertise, and task complexity, as well as other promising predictors, such as programming skill and learning. We also conclude that effort should be spent on elaborating on the effects of personality on various measures of collaboration, which, in turn, may be used to predict and influence performance. Insights into such malleable, rather than static, factors may then be used to improve pair programming performance.
C1 [Hannay, Jo E.; Arisholm, Erik] Simula Res Lab, Dept Software Engn, NO-1325 Lysaker, Norway.
   [Hannay, Jo E.; Arisholm, Erik; Sjoberg, Dag I. K.] Univ Oslo, Dept Informat, NO-0316 Oslo, Norway.
   [Engvik, Harald] Univ Oslo, Dept Psychol, NO-0317 Oslo, Norway.
C3 University of Oslo; University of Oslo
RP Hannay, JE (corresponding author), Simula Res Lab, Dept Software Engn, Pb 134, NO-1325 Lysaker, Norway.
EM johannay@simula.no; erika@simula.no; harald.engvik@psykologi.uio.no;
   dagsj@ifi.no
CR Ally M., 2005, Proc. 6th Int'l Conf. Extreme Programming and Agile Process in Software Engineering, Sheffield, P82
   [Anonymous], P 19 C SOFTW ENG ED
   [Anonymous], P 3 INT C EXTR PROGR
   [Anonymous], 1971, The Psychology of Computer Programming
   [Anonymous], THESIS FACULTY NEW J
   [Anonymous], STRUCTURAL EQUATION
   [Anonymous], P 11 ANN C INN TECHN
   [Anonymous], 1994, Statistical Factor Analysis and Related Methods: Theory and Applications
   [Anonymous], P 35 TECHN S COMP SC
   [Anonymous], P 8 IASTED INT C SOF
   [Anonymous], 1946, The Description and Measurement of Personality
   [Anonymous], 2002, Pair Programming Illuminated
   [Anonymous], 1997, Personality: Theory and research
   [Anonymous], P 34 TECHN S COMP SC
   [Anonymous], 1980, Winthrop computer systems series
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Arisholm E., 2002, Nordic Journal of Computing, V9, P231
   Arisholm E, 2007, IEEE T SOFTWARE ENG, V33, P65, DOI 10.1109/TSE.2007.17
   BACHARACH SB, 1989, ACAD MANAGE REV, V14, P496, DOI 10.2307/258555
   Barreto GP, 2001, REV BRAS ZOOTECN, V30, P1
   Barrick MR, 1998, J APPL PSYCHOL, V83, P377, DOI 10.1037/0021-9010.83.3.377
   Beck K., 2003, Extreme Programming
   Bell ST, 2007, J APPL PSYCHOL, V92, P595, DOI 10.1037/0021-9010.92.3.595
   BOLLEN K, 1991, PSYCHOL BULL, V110, P305, DOI 10.1037/0033-2909.110.2.305
   BOLLEN KA, 1992, SOCIOL METHOD RES, V21, P205, DOI 10.1177/0049124192021002004
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P963, DOI 10.1109/32.965338
   Browne MW, 1993, Testing structural equation models, DOI DOI 10.1177/0049124192021002005
   BRYANT S, 2007, J COMPUTER SOC INDIA, V30, P17
   Burkhardt J.-M., 2002, Empirical Software Engineering, V7, P115, DOI 10.1023/A:1015297914742
   Butcher J.N., 1989, Minnesota Multiphasic Personality Inventory-2 (MMPI-2): Manual for administration and scoring, V2nd
   Cao L., 2005, Proceedings of the 38th Annual Hawaii International conference on system sciences Big Island, USA, 6th January, 2005, P1
   Cattell RB, 1957, PERSONALITY MOTIVATI
   Cegielski CG, 2006, COMMUN ACM, V49, P73, DOI 10.1145/1164394.1164397
   CHAO J, 2006, P AG 06 C
   Cheung GW, 2009, ORGAN RES METHODS, V12, P6, DOI 10.1177/1094428107308914
   Cheung GW, 2009, ORGAN RES METHODS, V12, P63, DOI 10.1177/1094428107310091
   Cockburn A., 2002, AGILE SOFTWARE DEV
   Cohen B., 1989, DEV SOCIOLOGICAL KNO
   Constantine L., 1995, Constantine on Peopleware
   COPLIEN JO, 1995, PATTERN LANGUAGES OF PROGRAM DESIGN, P183
   Costa P. T., 1985, The NEO Personality Inventory Manual
   Cramer P., 1991, The development of defense mechanisms: Theory, research and assessment
   Da Cunha AD, 2007, COMMUN ACM, V50, P109, DOI 10.1145/1230819.1241672
   Diamantopoulos A, 2006, BRIT J MANAGE, V17, P263, DOI 10.1111/j.1467-8551.2006.00500.x
   DICKSON DH, 1985, PSYCHOL REP, V57, P367, DOI 10.2466/pr0.1985.57.2.367
   FELDER RM, 1988, ENG EDUC, V78, P674
   Flor N.V., 1991, P 4 ANN WORKSH EMP S, P36
   FORER BR, 1949, J ABNORM SOC PSYCH, V44, P118, DOI 10.1037/h0059240
   Forsyth D.R., 2006, Group Dynamics, V5th
   Freund Rudolf J, 2006, Regression Analysis
   Furnham A, 1996, PERS INDIV DIFFER, V21, P303, DOI 10.1016/0191-8869(96)00033-5
   Gallis H, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P132, DOI 10.1109/ISESE.2003.1237972
   Goldberg L. R., 1992, Psychological Assessment, P26
   Goldberg L. R., 1999, PERSONALITY PSYCHOL, V7, P7, DOI DOI 10.1016/J.JRP.2014.05.003
   Goldberg LR, 2006, J RES PERS, V40, P84, DOI 10.1016/j.jrp.2005.08.007
   GOLDBERG LR, 1990, J PERS SOC PSYCHOL, V59, P1216, DOI 10.1037/0022-3514.59.6.1216
   GOLDBERG LR, 1993, AM PSYCHOL, V48, P26, DOI 10.1037/0003-066X.48.1.26
   Goleman D, 1998, Harv Bus Rev, V76, P93
   Gorsuch R.L., 1983, FACTOR ANAL
   Gregor S, 2006, MIS QUART, V30, P611
   Grenning J, 2001, IEEE SOFTWARE, V18, P27, DOI 10.1109/52.965799
   HAEREM T, 2002, THESIS NORWEGIAN SCH
   Haerem T, 2007, J APPL PSYCHOL, V92, P1320, DOI 10.1037/0021-9010.92.5.1320
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Hannay JE, 2008, IEEE T SOFTWARE ENG, V34, P242, DOI 10.1109/TSE.2008.13
   Hanson WE, 2006, J COUNS DEV, V84, P349, DOI 10.1002/j.1556-6678.2006.tb00414.x
   HASTINGS WK, 1970, BIOMETRIKA, V57, P97, DOI 10.1093/biomet/57.1.97
   Hathaway SR, 1940, J PSYCHOL, V10, P249, DOI 10.1080/00223980.1940.9917000
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Howell D.C., 2007, HDB SOCIAL SCI METHO, P208, DOI [10.4135/9781848607958, DOI 10.4135/9781848607958.N11]
   Jarvis CB, 2003, J CONSUM RES, V30, P199, DOI 10.1086/376806
   Keirsey D., 1984, PLEASE UNDERSTAND ME
   KEIRSEY D, 1988, PLEASE UNDERSTAND ME, V2
   Kichuk SL, 1998, CAN PSYCHOL, V39, P23, DOI 10.1037/h0086792
   Kitchenham B., 2007, 2007001 EBSE
   Kline R.B., 2016, Principles and Practice of Structural Equation Modeling, VFourth
   Lee S.-Y., 2007, Structural equation modeling: A Bayesian approach, VVol. 711, DOI 10.1002/9780470024737
   LINDBLOM CE, 1987, KNOWLEDGE, V8, P509, DOI 10.1177/107554708700800305
   Little R. J. A., 2002, STAT ANAL MISSING DA, DOI DOI 10.1002/9781119013563
   Loehlin J.C., 2003, Latent variable models: An introduction to factor, path, and structural equation analysis, V4th
   Markovsky Barry., 1994, Group Processes: Sociological Analyses, P3
   Marston W.M., 1928, EMOTIONS NORMAL PEOP
   MEEHL PE, 1956, AM PSYCHOL, V11, P263, DOI 10.1037/h0044164
   METROPOLIS N, 1953, J CHEM PHYS, V21, P1087, DOI 10.1063/1.1699114
   Mohammed S, 2003, SMALL GR RES, V34, P651, DOI 10.1177/1046496403257228
   MOORE JE, 1991, P 1991 C SIGCPR, P140
   Myers I. B., 1995, Gifts differing: understanding personality type
   Myers I.B., 1985, A guide to the development and use of the Myers- Briggs Type Indicator
   Neuman GA, 1999, GROUP ORGAN MANAGE, V24, P28, DOI 10.1177/1059601199241003
   NEWELL A, 1958, PSYCHOL REV, V65, P151, DOI 10.1037/h0048495
   Nunnally JC, 1978, PSYCHOMETRIC THEORY, V2nd
   Paul AnnieMurphy., 2005, CULT PERSONALITY TES
   Peeters MAG, 2006, EUR J PERSONALITY, V20, P377, DOI 10.1002/per.588
   Ramanujan S, 2000, J SYST SOFTWARE, V54, P137, DOI 10.1016/S0164-1212(00)00033-9
   Saggino A, 2001, PERS INDIV DIFFER, V30, P3, DOI 10.1016/S0191-8869(00)00004-0
   Saggino A, 1996, PERS INDIV DIFFER, V21, P591, DOI 10.1016/0191-8869(96)00009-8
   Sall J., 2002, Monte carlo calibration of distributions of partition statistics
   SFETSOS P, 2006, P 7 INT C EXTR PROGR, P43
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   Shaft T. M., 1998, Journal of Management Information Systems, V15, P51
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Sjoberg DIK, 2003, LECT NOTES COMPUT SC, V2765, P24
   SMITH DC, 1989, SIGCPR COMPUTER PERS, V12, P12
   SOLOWAY E, 1988, COMMUN ACM, V31, P1259, DOI 10.1145/50087.50088
   Sonnentag S, 1998, J APPL PSYCHOL, V83, P703, DOI 10.1037/0021-9010.83.5.703
   STEINSAPIR J, 1994, AM J THER, V1, P1
   TIPPETTS AS, 1996, NIH PUBLICATION, P272
   Van Fraassen Bas., 1980, The Scientific Image
   Van Vianen A.E. M., 2001, EUR J WORK ORGAN PSY, V10, P97, DOI [10.1080/13594320143000573, DOI 10.1080/13594320143000573]
   Vanhanen J, 2007, EUROMICRO CONF PROC, P211
   Weinberg G.M., 1998, PSYCHOL COMPUTER PRO
   WESTEN D, 1991, J PERS ASSESS, V56, P56, DOI 10.1207/s15327752jpa5601_6
   WHETTEN DA, 1989, ACAD MANAGE REV, V14, P490, DOI 10.2307/258554
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
   Williams L, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P11
   WILLIAMS L, 2006, P AG 06 C
   WIRFSBROCK R, 1989, SIGPLAN NOTICES, V24, P71, DOI 10.1145/74878.74885
   WIRFSBROCK R, 1994, REPORT OBJECT ANAL D, V1
   WOODRUFF CK, 1979, P 17 ANN SE REG C, P124
   2007, INT PERSONALITY ITEM
NR 120
TC 88
Z9 96
U1 6
U2 74
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2010
VL 36
IS 1
BP 61
EP 80
DI 10.1109/TSE.2009.41
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 548TI
UT WOS:000273988900006
DA 2024-07-18
ER

PT J
AU Tsantalis, N
   Chatzigeorgiou, A
AF Tsantalis, Nikolaos
   Chatzigeorgiou, Alexander
TI Identification of Move Method Refactoring Opportunities
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Move Method refactoring; Feature Envy; object-oriented design; Jaccard
   distance; design quality
ID SOFTWARE; METRICS
AB Placement of attributes/methods within classes in an object-oriented system is usually guided by conceptual criteria and aided by appropriate metrics. Moving state and behavior between classes can help reduce coupling and increase cohesion, but it is nontrivial to identify where such refactorings should be applied. In this paper, we propose a methodology for the identification of Move Method refactoring opportunities that constitute a way for solving many common Feature Envy bad smells. An algorithm that employs the notion of distance between system entities (attributes/methods) and classes extracts a list of behavior-preserving refactorings based on the examination of a set of preconditions. In practice, a software system may exhibit such problems in many different places. Therefore, our approach measures the effect of all refactoring suggestions based on a novel Entity Placement metric that quantifies how well entities have been placed in system classes. The proposed methodology can be regarded as a semi-automatic approach since the designer will eventually decide whether a suggested refactoring should be applied or not based on conceptual or other design quality criteria. The evaluation of the proposed approach has been performed considering qualitative, metric, conceptual, and efficiency aspects of the suggested refactorings in a number of open-source projects.
C1 [Tsantalis, Nikolaos; Chatzigeorgiou, Alexander] Univ Macedonia, Dept Appl Math, Thessaloniki 54006, Greece.
C3 University of Macedonia
RP Tsantalis, N (corresponding author), Univ Macedonia, Dept Appl Math, Thessaloniki 54006, Greece.
EM nikos@java.uom.gr; achat@uom.gr
RI Chatzigeorgiou, Alexandros/AAL-6077-2021; Tsantalis,
   Nikolaos/AAR-7845-2020
OI Tsantalis, Nikolaos/0000-0003-2508-3845
CR Abreu FBE, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P90, DOI 10.1109/METRIC.1996.492446
   ABREU FBE, 1995, P 9 EUR C OBJ OR PRO
   [Anonymous], 2003, ALAN APT SERIES
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Binkley AB, 1998, PROC INT CONF SOFTW, P452, DOI 10.1109/ICSE.1998.671604
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P345, DOI 10.1109/ICSE.1999.841025
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P963, DOI 10.1109/32.965338
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   CHAUMUN MA, 2000, P 4 EUR WORK C SOFTW, P45
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   FOKAEFS M, 2007, P INT C SOFTW MAINT, P519
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Ghezzi C., 2003, FUNDAMENTALS SOFTWAR
   Hitz M., 1995, PROC INT S APPL CORP
   Kataoka Y, 2002, PROC IEEE INT CONF S, P576, DOI 10.1109/ICSM.2002.1167822
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   O'Keeffe M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P247
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   REFANIDIS I, 2007, P 17 INT C AUT PLANN
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Simon TR, 2001, SUICIDE LIFE-THREAT, V32, P49, DOI 10.1521/suli.32.1.5.49.24212
   Tahvildari L, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P183, DOI 10.1109/CSMR.2003.1192426
   BAD SMELL IDENTIFICA
NR 33
TC 246
Z9 262
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2009
VL 35
IS 3
BP 347
EP 367
DI 10.1109/TSE.2009.1
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 450NL
UT WOS:000266408000003
DA 2024-07-18
ER

PT J
AU Maqbool, O
   Babri, HA
AF Maqbool, Onaiza
   Babri, Haroon A.
TI Hierarchical clustering for software architecture recovery
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE reengineering; reverse engineering; architecture recovery; hierarchical
   clustering; arbitrary decisions
AB Gaining an architectural level understanding of a software system is important for many reasons. When the description of a system's architecture does not exist, attempts must be made to recover it. In recent years, researchers have explored the use of clustering for recovering a software system's architecture, given only its source code. The main contributions of this paper are given as follows. First, we review hierarchical clustering research in the context of software architecture recovery and modularization. Second, to employ clustering meaningfully, it is necessary to understand the peculiarities of the software domain, as well as the behavior of clustering measures and algorithms in this domain. To this end, we provide a detailed analysis of the behavior of various similarity and distance measures that may be employed for software clustering. Third, we analyze the clustering process of various well- known clustering algorithms by using multiple criteria, and we show how arbitrary decisions taken by these algorithms during clustering affect the quality of their results. Finally, we present an analysis of two recently proposed clustering algorithms, revealing close similarities in their apparently different clustering approaches. Experiments on four legacy software systems provide insight into the behavior of well- known clustering algorithms and their characteristics in the software domain.
C1 Quaid I Azam Univ, Dept Comp Sci, Islamabad, Pakistan.
   Univ Elect Engn & Technol, Dept Elect Engn, Lahore, Pakistan.
C3 Quaid I Azam University
RP Maqbool, O (corresponding author), Quaid I Azam Univ, Dept Comp Sci, Islamabad, Pakistan.
EM onaiza@qau.edu.pk; babri@uet.edu.pk
CR Andreopoulos B, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P79
   Andritsos P, 2005, IEEE T SOFTWARE ENG, V31, P150, DOI 10.1109/TSE.2005.25
   [Anonymous], THESIS U STUTTGART
   [Anonymous], P 6 WORK C REV ENG
   Bojic D., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P23, DOI 10.1109/CSMR.2000.827302
   CHOI A, 1990, IEEE SOFTWARE, V7, P13
   Christl A, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P89
   CONSENS M, 1992, P 14 INT C SOFTW ENG, P138
   CRAWFORD D, 2006, COMMUN ACM, V50, P15
   CRAWFORD D, 2006, COMMUN ACM, V49, P15
   Davey J, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P268, DOI 10.1109/WCRE.2000.891478
   de Oca CM, 1998, PROC IEEE INT CONF S, P16, DOI 10.1109/ICSM.1998.738485
   de Oca CM, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P231, DOI 10.1109/WCRE.1998.723193
   Duda R., 1973, Pattern Classification and Scene Analysis
   Eisenbarth T, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P176, DOI 10.1109/CSMR.2001.914982
   Everitt B., 2001, Cluster analysis
   Fahmy HM, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P51, DOI 10.1109/ASE.2001.989790
   GIRARD JF, 1999, J AUTOMATED SOFTWARE, V6, P357
   HAFIZ SAE, 2000, AUTOMAT SOFTW ENG, V7, P239
   HARRIS DR, 1995, PROC INT CONF SOFTW, P186, DOI 10.1145/225014.225032
   HUTCHENS DH, 1985, IEEE T SOFTWARE ENG, V11, P749, DOI 10.1109/TSE.1985.232524
   ITUA A, 1995, P 2 WORK C REV ENG W, P262
   Ivkovic I, 2005, ITCC 2005: International Conference on Information Technology: Coding and Computing, Vol 2, P365, DOI 10.1109/ITCC.2005.286
   Jain AK, 1999, ACM COMPUT SURV, V31, P264, DOI 10.1145/331499.331504
   Kazman R, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P290, DOI 10.1109/ICSR.1998.685754
   Kazman R, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P154, DOI 10.1109/WCRE.1998.723185
   Koschke R, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P36, DOI 10.1109/WCRE.2003.1287235
   Koschke R, 2000, PROG COMPREHEN, P201, DOI 10.1109/WPC.2000.852494
   KRONE M, 1994, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.1994.296765
   Kuhn A, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P133
   LEGENDRE L., 1983, NUMERICAL ECOLOGY
   Lindig C, 1997, PROC INT CONF SOFTW, P349, DOI 10.1145/253228.253354
   LUCCA GAD, 2004, J SOFTWARE MAINTENAN, V16, P71
   MAAREK Y, 1988, PHOENIX C COMPUTER S, P280
   MAAREK YS, 1991, IEEE T SOFTWARE ENG, V17, P800, DOI 10.1109/32.83915
   Mancoridis S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P50, DOI 10.1109/ICSM.1999.792498
   Maqbool O, 2005, IEEE: 2005 INTERNATIONAL CONFERENCE ON EMERGING TECHNOLOGIES, PROCEEDINGS, P429, DOI 10.1109/ICET.2005.1558920
   Maqbool O, 2006, J SYST SOFTWARE, V79, P1632, DOI 10.1016/j.jss.2006.03.013
   Maqbool O, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P15, DOI 10.1109/CSMR.2004.1281402
   MAQBOOL O, 2006, THESIS LAHORE MANAGE
   Michail A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P167, DOI 10.1109/ICSE.2000.870408
   Mitchell B., 2002, THESIS DREXEL U
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Mitchell T. M., 1997, MACHINE LEARNING
   Muller H. A., 1990, Proceedings. Conference on Software Maintenance 1990 (Cat. No.90CH2921-5), P12, DOI 10.1109/ICSM.1990.131315
   MULLER HA, 1992, P 5 ACM SIGSOFT S SO, P88
   MULLER HA, 1993, SOFTWARE MAINTENANCE, V5, P181
   MULLER HA, 1994, P 62 C ASS CAN FRANC, P41
   MUOLER A, 1994, P 62 C ASS CAN FRANC
   Pollet D, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P137
   Riva C, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P42, DOI 10.1109/WCRE.2000.891451
   Rousidis D, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P276, DOI 10.1109/CSMR.2005.16
   Saeed M, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P301, DOI 10.1109/CSMR.2003.1192438
   Sartipi K, 2003, J SOFTW MAINT EVOL-R, V15, P265, DOI 10.1002/smr.277
   Sartipi K., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P129, DOI 10.1109/CSMR.2000.827321
   SCHWANKE RW, 1989, ACM SIGSOFT, V17, P86, DOI 10.1145/72910.73351
   SCHWANKE RW, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P83, DOI 10.1109/ICSE.1991.130626
   SHIRABAD JS, 2004, P 1 INT WORKSH MIN S, P53
   Shokoufandeh A, 2005, J SYST SOFTWARE, V77, P213, DOI 10.1016/j.jss.2004.03.032
   SHTERN M, P 11 IEEE WORK C REV, P284
   Siff M, 1999, IEEE T SOFTWARE ENG, V25, P749, DOI 10.1109/32.824377
   Snelting G., 1996, ACM Transactions on Software Engineering and Methodology, V5, P146, DOI 10.1145/227607.227613
   Tjortjis C, 2003, PROG COMPREHEN, P125
   Tonella P, 2003, IEEE T SOFTWARE ENG, V29, P495, DOI 10.1109/TSE.2003.1205178
   Tonella P, 2003, FIFTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION THEME: ARCHITECTURE, PROCEEDINGS, P41, DOI 10.1109/WSE.2003.1234007
   Tonella P, 2003, FIFTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION THEME: ARCHITECTURE, PROCEEDINGS, P33, DOI 10.1109/WSE.2003.1234006
   Tonella P, 2001, IEEE T SOFTWARE ENG, V27, P351, DOI 10.1109/32.917524
   TONELLA P, 2000, J SOFTWARE MAINTENAN, V13, P309
   Tzerpos V, 1998, NINTH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P811, DOI 10.1109/DEXA.1998.707499
   TZERPOS V, 2001, THESIS U TORONTO
   van Deursen A, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P122, DOI 10.1109/WICSA.2004.1310696
   van Deursen A., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P246, DOI 10.1109/ICSE.1999.841014
   Wen Z, 2004, PROG COMPREHEN, P194, DOI 10.1109/WPC.2004.1311061
   Wen ZH, 2005, PROG COMPREHEN, P269
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
   Wu JW, 2005, PROC IEEE INT CONF S, P525
   Xiao CC, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P124
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 79
TC 207
Z9 245
U1 0
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2007
VL 33
IS 11
BP 759
EP 780
DI 10.1109/TSE.2007.70732
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 214JZ
UT WOS:000249735100003
DA 2024-07-18
ER

PT J
AU Pickin, S
   Jard, C
   Jéron, T
   Jézéquel, JM
   Le Traon, Y
AF Pickin, Simon
   Jard, Claude
   Jeron, Thierry
   Jezequel, Jean-Marc
   Le Traon, Yves
TI Test synthesis from UML models of distributed software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE formal methods; testing tools; object-oriented design methods
AB The object-oriented software development process is increasingly used for the construction of complex distributed systems. In this context, behavior models have long been recognized as the basis for systematic approaches to requirements capture, specification, design, simulation, code generation, testing, and verification. Two complementary approaches for modeling behavior have proven useful in practice: interaction-based modeling ( e. g., UML sequence diagrams) and state-based modeling ( e. g., UML statecharts). Building on formal V&V techniques, in this article we present a method and a tool for automated synthesis of test cases from scenarios and a state-based design model of the application, remaining entirely within the UML framework. The underlying "on the fly" test synthesis algorithms are based on the input/output labeled transition system formalism, which is particularly appropriate for modeling applications involving asynchronous communication. The method is eminently compatible with classical OO development processes since it can be used to synthesize test cases from the scenarios used in early development stages to model global interactions between actors and components, instead of these test cases being derived manually. We illustrate the system test synthesis process using an air traffic control software example.
C1 Univ Carlos III Madrid, Dept Ingn Telemat, Madrid, Spain.
   ENS Cachan, F-35170 Bruz, France.
   INRIA, IRISA, F-35042 Rennes, France.
   ENST Bretagne, F-35576 Cesson Sevigne, France.
C3 Universidad Carlos III de Madrid; Inria; Universite de Rennes; IMT -
   Institut Mines-Telecom; IMT Atlantique
RP Pickin, S (corresponding author), Univ Carlos III Madrid, Dept Ingn Telemat, Madrid, Spain.
EM Simon.Pickin@uc3m.es; Claude.Jard@bretagne.ens-cachan.fr;
   Thierry.Jeron@irisa.fr; Jean-Marc.Jezequel@irisa.fr;
   Yves.Le_Traon@enstbretagne.fr
RI Jezequel, Jean-Marc/AAF-3854-2019; LE TRAON, Yves/T-2911-2019
OI Jezequel, Jean-Marc/0000-0002-0582-9745; Jeron,
   Thierry/0000-0002-9922-6186; Pickin, Simon James/0000-0002-5506-3602; LE
   TRAON, Yves/0000-0002-1045-4861
CR Atkinson Colin., 2002, COMPONENT BASED PROD
   BADRI M, 2003, P 3 INT WORKSH FORM
   BOGADOV K, 2002, P 2 WORKSH FORM APPR
   BOUSQUET LD, 2001, P UML 2001 WORKSH PR
   BRIAND LC, 2005, J SOFTWARE SYSTEMS M, V4
   BURTON S, 2001, P 1 WORKSH FORM APPR
   CLARKE D, 2002, P 8 INT C TOOLS ALG
   *ETSI, 2005, 201873 ETSI ES 1
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GNESI S, 2004, P 9 IEEE INT C ENG C
   GRABOWSKI J, 1993, SDL 93 USING OBJECTS
   Harel D., 2004, INTEGRATION SOFTWARE
   HARTMAN A, 2004, ACM SIGSOFT SOFTWARE, V29
   HARTMANN J, 2000, P ACM SIGSOFT INT S
   HO W, 1999, P 14 IEEE INT C AUT
   HONG HS, 2000, SOFTWARE TESTING VER, V10
   *INT ORG STAND, 1989, 8807 ISO INT ORG STA
   *ISO IEC, 1994, 96461 ISO IEC INT OR
   JARD C, 2001, ERCIM NEWS
   JARD C, 2005, SOFTWARE TOOLS TECHN, V7
   JARD C, 2003, INT J INFORM SOFTWAR, V45
   KATOEN JP, 2005, SCI COMPUTER PROGRAM, V55
   MAUW S, 1993, SDL 93 USING OBJECTS
   Mellor SJ., 2002, EXECUTABLE UML FDN M
   NEBUT C, 2003, P 18 IEEE INT C AUT
   *OBJ MAN GROUP, 2004, UN MOD LANG TEST PRO
   *OBJ MAN GROUP, 2004, UN MOD LANG SUP
   OFFUTT AJ, 2003, SOFTWARE TESTING VER, V13
   PICKIN S, 2003, THESIS U RENNES
   PICKIN S, 2004, P C INT FORM METH IF
   PICKIN S, 2002, P C FORM TECHN NETW
   SHUHAO L, 2004, P 19 IEEE C AUT SOFT
   Tretmans J, 1996, SOFTWARE-CONC TOOL, V17, P103
   WASOWSKI A, 2004, P LANG COMP TOOLS EM
NR 34
TC 22
Z9 25
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2007
VL 33
IS 4
BP 252
EP 268
DI 10.1109/TSE.2007.39
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 140TQ
UT WOS:000244530000004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sarkar, S
   Rama, GM
   Kak, AC
AF Sarkar, Santonu
   Rama, Girish Maskeri
   Kak, Avinash C.
TI API-based and information-theoretic metrics for measuring the quality of
   software modularization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE metrics/measurement; modules and interfaces; information theory;
   distribution; maintenance and enhancement; maintainability; coupling;
   layered architecture
ID COUPLING MEASUREMENT; FRAMEWORK
AB We present in this paper a new set of metrics that measure the quality of modularization of a non-object-oriented software system. We have proposed a set of design principles to capture the notion of modularity and defined metrics centered around these principles. These metrics characterize the software from a variety of perspectives: structural, architectural, and notions such as the similarity of purpose and commonality of goals. (By structural, we are referring to intermodule coupling-based notions, and by architectural, we mean the horizontal layering of modules in large software systems.) We employ the notion of API (Application Programming Interface) as the basis for our structural metrics. The rest of the metrics we present are in support of those that are based on API. Some of the important support metrics include those that characterize each module on the basis of the similarity of purpose of the services offered by the module. These metrics are based on information-theoretic principles. We tested our metrics on some popular open-source systems and some large legacy-code business applications. To validate the metrics, we compared the results obtained on human-modularized versions of the software (as created by the developers of the software) with those obtained on randomized versions of the code. For randomized versions, the assignment of the individual functions to modules was randomized.
C1 Infosys Technol Ltd, SETLabs, Bangalore 560100, Karnataka, India.
   Purdue Univ, W Lafayette, IN 47907 USA.
C3 Infosys Limited; Purdue University System; Purdue University
RP Sarkar, S (corresponding author), Infosys Technol Ltd, SETLabs, Bldg 19FF,Elect City,Hosur Rd, Bangalore 560100, Karnataka, India.
EM santonu_sarkar@infosys.com; girish_rama@infosys.com; kak@ecn.purdue.edu
OI Sarkar, Santonu/0000-0001-9470-7012
CR Allen E.B., 2001, PROC 7 INT SOFTWARE, P124
   Andritsos P, 2005, IEEE T SOFTWARE ENG, V31, P150, DOI 10.1109/TSE.2005.25
   Arevalo G., 2004, THESIS
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   Bachmann F., 2000, CMUSEI2000SR004
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P1106, DOI 10.1109/TSE.2002.1158285
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHURCHER NI, 1995, IEEE T SOFTWARE ENG, V21, P263, DOI 10.1109/32.372153
   Clements P., 2002, DOCUMENTING SOFTWARE
   DOVAL D, 1999, P INT WORKSH SOFTW T
   EICH B, 1998, DEV ROADMAP
   EMAM KE, 2002, IEEE T SOFTWARE ENG, V28, P494
   Fahmy H, 2000, PROC IEEE INT CONF S, P88, DOI 10.1109/ICSM.2000.883020
   GIRBA T, 2004, P INT C SOFTW MAINT
   Halstead M.H., 1977, OPERATING PROGRAMMIN, V7
   Harman M, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1029
   Hatton L, 1997, IEEE SOFTWARE, V14, P89, DOI 10.1109/52.582978
   HUTCHENS DH, 1985, IEEE T SOFTWARE ENG, V11, P749, DOI 10.1109/TSE.1985.232524
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   Lakos J., 1996, LARGE SCALE C SOFTWA
   MACCORMACK A, 2005, 05016 HARV BUS SCH
   Mahdavi K, 2003, PROC IEEE INT CONF S, P315, DOI 10.1109/ICSM.2003.1235437
   Mancoridis S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P50, DOI 10.1109/ICSM.1999.792498
   Mancoridis S, 1998, PROG COMPREHEN, P45, DOI 10.1109/WPC.1998.693283
   Martin R.C., 2000, Design Principles and Design Patterns
   McCabe T., 1994, CROSSTALK, V7, P5
   Mitchell B., 2002, P 14 INT C SOFTWARE, V27, P431
   Morasca S, 1997, IEEE T SOFTWARE ENG, V23, P187, DOI 10.1109/32.585506
   OMAN P, 1994, J SYST SOFTWARE, V24, P251, DOI 10.1016/0164-1212(94)90067-1
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Pfleeger ShariLawrence., 1997, SOFTWARE METRICS RIG
   Rosenberg J, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P137, DOI 10.1109/METRIC.1997.637174
   RYSSELBERGHE FV, 2004, P ICSM 04 INT C SOFT, P328
   Sarkar S, 2005, 12th Asia-Pacific Software Engineering Conference, Proceedings, P264, DOI 10.1109/APSEC.2005.77
   Sartipi K, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P103, DOI 10.1109/WCRE.2001.957814
   Sartipi K., 2003, THESIS U WATERLOO
   SCHWANKE RW, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P83, DOI 10.1109/ICSE.1991.130626
   Seng O, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1045
   Sharma N, 2006, IEEE T SOFTWARE ENG, V32, P209, DOI 10.1109/TSE.2006.21
   Shokoufandeh A, 2005, J SYST SOFTWARE, V77, P213, DOI 10.1016/j.jss.2004.03.032
   Siff M, 1999, IEEE T SOFTWARE ENG, V25, P749, DOI 10.1109/32.824377
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   Tonella P, 2001, IEEE T SOFTWARE ENG, V27, P351, DOI 10.1109/32.917524
   Wen ZH, 2005, PROG COMPREHEN, P269
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   YOURDON E, 1979, STRUCTURED DESIGN FU
   2003, SOURCE NAVIGATOR 5 4
NR 49
TC 63
Z9 80
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2007
VL 33
IS 1
BP 14
EP 32
DI 10.1109/TSE.2007.256942
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 109ML
UT WOS:000242312200002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU de Leon, DC
   Alves-Foss, J
AF Conte de Leon, Daniel
   Alves-Foss, Jim
TI Hidden implementation dependencies in high assurance and critical
   computing systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE critical systems; data dependencies; emergent properties; formal
   frameworks; high assurance systems; knowledge modeling; set theory;
   software engineering documentation; system development; system safety;
   traceability; work products
ID RECOVERING TRACEABILITY LINKS; DESIGN-CODE TRACEABILITY; OBJECT-ORIENTED
   SOFTWARE; SCENARIO-DRIVEN APPROACH; SAFETY; MODELS
AB Critical and catastrophic failures in high assurance and critical computing systems can arise from unfounded assumptions of independence between system components, requirements, and constraints ( work product sections), which can stem from misunderstandings and miscommunication between system engineers, managers, and operators and from inadequate or incomplete traceability between system work products. In this article, we propose a formal framework for the effective implementation of traceability between work product sections along with a technique for discovering potential causes of critical failures in high assurance and critical computing system models. We introduce a new abstraction of interrelated work product sections called implementation meta-work product and describe how our technique finds these meta-work products. We also demonstrate how this technique can be used to help analysts discover potential causes of safety-related errors in high assurance and critical computing systems by applying it to one case study of a known critical error and to one case study where we anticipate potential safety hazards.
C1 Univ Idaho, Ctr Secur & Dependable Syst, Moscow, ID 83844 USA.
C3 Idaho; University of Idaho
RP de Leon, DC (corresponding author), Univ Idaho, Ctr Secur & Dependable Syst, POB 441008, Moscow, ID 83844 USA.
EM danielc@cs.uidaho.edu; jimaf@uidaho.edu
RI Alves-Foss, James/A-9777-2008
OI Alves-Foss, James/0000-0002-5125-1470
CR Alves-Foss J., 2002, Proceedings of the 35th Annual Hawaii International Conference on System Sciences, P3959, DOI 10.1109/HICSS.2002.994466
   Anderson KM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P524, DOI 10.1109/ICSE.2002.1007996
   [Anonymous], 2001, EVALUATING ACCIDEN 1
   [Anonymous], P 1 INT C FORM CONC
   [Anonymous], P 25 INT C SOFTW ENG
   [Anonymous], 2003, MATH MARK LANG MATHM
   [Anonymous], 1961, Theory of formal systems
   [Anonymous], 1992, Dependability: Basic Concepts and Terminology
   Antonelli G., 1999, Proceedings 1999 IEEE/RSJ International Conference on Intelligent Robots and Systems. Human and Environment Friendly Robots with High Intelligence and Emotional Quotients (Cat. No.99CH36289), P136, DOI 10.1109/IROS.1999.812994
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G, 2001, SOFTWARE PRACT EXPER, V31, P331, DOI 10.1002/spe.374
   Antoniol G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P211, DOI 10.1109/ICSM.1999.792612
   Antoniol G, 2000, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2000.883003
   Antoniol G, 2001, SCI COMPUT PROGRAM, V40, P213, DOI 10.1016/S0167-6423(01)00016-8
   Antoniol G, 1999, PROG COMPREHEN, P151, DOI 10.1109/WPC.1999.777754
   Antoniol G, 2000, ANN SOFTW ENG, V9, P35, DOI 10.1023/A:1018916522804
   Antoniol G, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P240, DOI 10.1109/WCRE.2000.891475
   Antoniol G, 2000, PROG COMPREHEN, P79, DOI 10.1109/WPC.2000.852482
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   AVIZIENIS A, 2001, P WORKSH ROB DEP MAY
   Badros GJ, 2000, COMPUT NETW, V33, P159, DOI 10.1016/S1389-1286(00)00037-2
   Berners-Lee T., 2002, SEMANTIC WEB
   BORBA P, 1995, FORMAL METHODS OBJEC
   *CARN MELL U, 2002, CMUSEI2002TR012 CARN
   *CHISEL, 2006, COMP HUM INT SOFTW E
   Cleland-Huang J, 2005, PROC INT CONF SOFTW, P362
   Cleland-Huang J, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P135, DOI 10.1109/RE.2005.78
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   CLELANDHUANG J, 2005, P 3 INT WORKSH TRAC, P14, DOI DOI 10.1145/1107656.1107660
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Damper RI, 2000, INT J SYST SCI, V31, P811, DOI 10.1080/002077200406543
   DELEON DC, 2006, THESIS U IDAHO MOSCO
   DELEON DC, 2004, P 37 HAW INT C SYST, P279
   Egyed A, 2003, IEEE T SOFTWARE ENG, V29, P116, DOI 10.1109/TSE.2003.1178051
   Egyed A, 2001, PROC INT CONF SOFTW, P123, DOI 10.1109/ICSE.2001.919087
   EGYED A, 2003, P 2 INT WORKSH TRAC
   FEATHER M, 2003, P 25 INT C SOFTW ENG
   Fecko MA, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P52, DOI 10.1109/ICRE.2002.1048505
   FINKELSTEIN ACW, 1994, IEEE T SOFTWARE ENG, V20, P569, DOI 10.1109/32.310667
   Fiutem R, 1998, PROC IEEE INT CONF S, P94, DOI 10.1109/ICSM.1998.738497
   *FZI, 2006, KAON2
   GANSNER E, 2002, DRAWING GRAPHS DOT
   Gansner ER, 2000, SOFTWARE PRACT EXPER, V30, P1203, DOI 10.1002/1097-024X(200009)30:11<1203::AID-SPE338>3.0.CO;2-N
   Ganter B, 1999, Formal concept analysis: Mathematical foundations
   GOGUEN JA, 1999, FOOPS FUNCTIONAL OBJ
   GOGUEN JA, 1999, TOOR SYSTEM TRACING
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   GREENGRASS E, 2000, INFORMATION RETRIEVA
   Hanks K. S., 2003, P 21 INT SYST SAF C
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hayes JH, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P138
   Henrard J, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P11, DOI 10.1109/CSMR.2001.914963
   *IEEE STAND, 1990, 610121990 IEEE STAND
   *INT EL COMM STAND, 1998, 61508 IEC 1
   Isaksen Ulla., 1996, System and software safety in critical systems
   KNIGHT JC, 2004, P 22 INT SYST SAF C
   LEVESON N, 2000, P 3 WORKSH FORM METH, P75
   Leveson N. G., 2006, SYSTEM SAFETY ENG BA
   Leveson NG, 2004, IEEE T DEPEND SECURE, V1, P66, DOI 10.1109/TDSC.2004.1
   Leveson NG, 2000, IEEE T SOFTWARE ENG, V26, P15, DOI 10.1109/32.825764
   Leveson NG, 2004, J SPACECRAFT ROCKETS, V41, P564, DOI 10.2514/1.11950
   LEVESON NG, 1999, 7 ACM SIGSOFT S FDN, P127
   Leveson NG., 2003, A systems theoretic approach to safety engineering
   LEVESON NG, 2001, SAFETY HUMAN CTR APP
   LEVY A, 1999, BASIC SET THEORY
   Lutz R. R, 1992, ANAL SOFTWARE REQUIR
   Lutz R.R., 1993, 1993 P IEEE INT S RE, P126
   Lutz RR, 2004, IEEE T SOFTWARE ENG, V30, P172, DOI 10.1109/TSE.2004.1271171
   MALETIC JI, 2003, P 2 INT WORKSH TRAC
   Mamas E, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P172, DOI 10.1109/WCRE.2000.891464
   McLean J., 1995, HIGH ASSURANCE COMPU
   Michaud J, 2001, PROC IEEE INT CONF S, P250, DOI 10.1109/ICSM.2001.972738
   Modugno F, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P148, DOI [10.1109/ISRE.1997.566862, 10.1007/BF02813026]
   Motik B, 2004, LECT NOTES COMPUT SC, V3298, P549
   NAISHTAT F, 1986, LOGICA COMPUTACION
   Nentwich C, 2003, PROC INT CONF SOFTW, P455, DOI 10.1109/ICSE.2003.1201223
   Nentwich C, 2003, ACM T SOFTW ENG METH, V12, P28, DOI 10.1145/839268.839271
   Nentwich C, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P115, DOI 10.1109/ASE.2001.989797
   Nentwich C., 2002, ACM T INTERNET TECHN, V2, P151, DOI [10.1145/514183.514186, DOI 10.1145/514183.514186]
   *OBJ MAN GROUP, 2001, 21 OBJ MAN GROUP STA
   Pinheiro FAC, 1996, IEEE SOFTWARE, V13, P52, DOI 10.1109/52.506462
   Pohl K, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P76, DOI 10.1109/ICRE.1996.491432
   Pohl K., 1996, Requirements engineering: An overview
   Popper, 1977, SELF ITS BRAIN
   *PROL DEV CTR, 2006, VIS PROL
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   *RTCA, 1992, DO178BED2B RTCA
   *RTCA, 2001, DO248B RTCA
   RUSHBY J, 1994, CSL9301 US NAV RES L
   *SAE EMB COMP SYST, 2004, ARCH AN DES LANG AAD
   SELBERG SA, 2003, 200320 TR I SYST RES
   SETTIMI R, 2002, P 7 INT WORKSH PRINC, P49
   SHERBA SA, 2003, P 2 INT WORKSH TRAC
   Sun J, 2002, ANN SOFTW ENG, V13, P329, DOI 10.1023/A:1016513914276
   TAYLOR C, 2002, P SYST SOFTW TECHN C
   TILLEY T, 2003, USING CONCEPTUAL STR, P227
   TILLEY T, 2003, THESIS U QUEENSLAND
   *U KOBL LAND, 2006, GRAPH EXCHANGE LANG
   *US NATL TRANSP SA, 2000, NTSBAAR0001
   Van Lepthien William., 2004, HYPERTEXT 04, P256, DOI [10.1145/1012807.1012870, DOI 10.1145/1012807.1012870]
   *W3C REC, 1999, XSL TRANSF XSLT
   *W3C REC, 2004, EXT MARK LANG XML 1
   WEISS K, 2001, P DIG AV SYST C, P137
   Winter A, 2002, LECT NOTES COMPUT SC, V2269, P324
   Yu ZF, 2001, PROG COMPREHEN, P293, DOI 10.1109/WPC.2001.921739
   Zalta EdwardN., 2006, STANFORD ENCY PHILOS
NR 106
TC 7
Z9 7
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2006
VL 32
IS 10
BP 790
EP 811
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 096OC
UT WOS:000241385700003
DA 2024-07-18
ER

PT J
AU Briand, LC
   Labiche, Y
   Leduc, J
AF Briand, Lionel C.
   Labiche, Yvan
   Leduc, Johanne
TI Toward the reverse engineering of UML sequence diagrams for distributed
   Java software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 21st International Conference on Software Maintenance (ICSM 2005)
CY SEP 26-29, 2005
CL Budapest, HUNGARY
SP IEEE
DE UML; sequence diagram; reverse engineering; distribution; RMI; AspectJ;
   OCL
ID VISUALIZING INTERACTIONS
AB This paper proposes a methodology and instrumentation infrastructure toward the reverse engineering of UML ( Unified Modeling Language) sequence diagrams from dynamic analysis. One motivation is, of course, to help people understand the behavior of systems with no ( complete) documentation. However, such reverse-engineered dynamic models can also be used for quality assurance purposes. They can, for example, be compared with design sequence diagrams and the conformance of the implementation to the design can thus be verified. Furthermore, discrepancies can also suggest failures in meeting the specifications. Due to size constraints, this paper focuses on the distribution aspects of the methodology we propose. We formally define our approach using metamodels and consistency rules. The instrumentation is based on Aspect-Oriented Programming in order to alleviate the effort overhead usually associated with source code instrumentation. A case study is discussed to demonstrate the applicability of the approach on a concrete example.
C1 Carleton Univ, Software Qual Engn Lab, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
   Siemens Corp Res Inc, Princeton, NJ 08540 USA.
C3 Carleton University; Siemens AG
RP Briand, LC (corresponding author), Carleton Univ, Software Qual Engn Lab, Dept Syst & Comp Engn, 1125 Colonel Dr, Ottawa, ON K1S 5B6, Canada.
EM briand@sce.carleton.ca; labiche@sce.carleton.ca;
   johanne.leduc@siemens.com
OI Labiche, Yvan/0000-0001-8880-4836
CR [Anonymous], 2005, ADDISON WESLEY OBJEC
   [Anonymous], 1990, Software testing techniques {
   AVGUSTINOV P, 2005, PLDI 05, P117
   Bawa N, 2003, PROG COMPREHEN, P292
   Briand L. C., 2004, SCE0404 CARL U
   Briand LC, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P57, DOI 10.1109/WCRE.2003.1287237
   Bruegge B., 2000, Object-Oriented Software Engineering Conquering Complex and Changing Systems
   De Pauw W, 2002, LECT NOTES COMPUT SC, V2269, P151
   Di Lucca GA, 2003, FIFTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION THEME: ARCHITECTURE, PROCEEDINGS, P12, DOI 10.1109/WSE.2003.1234004
   DUFOUR B, 2004, P 19 ANN ACM SIGPLAN, P150
   Elrad T, 2001, COMMUN ACM, V44, P28
   Eriksson Hans-Erik., 1998, UML TOOLKIT
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Ghezzi C., 1991, Fundamentals of Software Engineering
   Gradecki J.D., 2003, MASTERING ASPECTJ AS
   GUEHENEUC YG, 2002, P ECOOP WORKSH OBJ O
   Hofmann R, 1998, PROCEEDINGS OF THE SIXTH EUROMICRO WORKSHOP ON PARALLEL AND DISTRIBUTED PROCESSING - PDP '98, P173, DOI 10.1109/EMPDP.1998.647195
   *IBM, 2005, RAT TEST REAL TIM
   Jerding DF, 1997, PROC INT CONF SOFTW, P360, DOI 10.1145/253228.253356
   Kollmann R, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P22, DOI 10.1109/WCRE.2002.1173061
   Kollmann R, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P58, DOI 10.1109/CSMR.2001.914969
   Kortenkamp D, 2004, FORM METHOD SYST DES, V24, P157, DOI 10.1023/B:FORM.0000017720.64153.57
   MILLS D, 2002, RFC 2030 SIMPLE NETW
   Moe J, 2002, SOFTWARE PRACT EXPER, V32, P889, DOI 10.1002/spe.466
   Nishizawa M., 2004, PROC 3 INT C AOSD LA, P7, DOI DOI 10.1145/976270.976274
   *OBJ MAN GROUP, 2003, PTC030802 OBJ MAN GR
   Oechsle R, 2002, LECT NOTES COMPUT SC, V2269, P176
   Pender T., 2003, UML BIBLE
   RAYNAL M, 1995, LOGICAL TIME WAY CAP
   Richner T, 2002, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.2002.1167745
   Rountev A, 2005, PROC INT CONF SOFTW, P254
   ROUNTEV A, 2005, P ACM WORKSH PROGR A, P96
   Salah M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P238, DOI 10.1109/WCRE.2003.1287254
   SCHUTZ W, 1993, TESTABILITY DISTRIBU
   SINTES T, 2004, SINGLETONS NEEDLES T
   Systä T, 2001, SOFTWARE PRACT EXPER, V31, P371, DOI 10.1002/spe.386
   Terashima Y, 2003, ELECTRON COMM JPN 1, V86, P33, DOI 10.1002/ecja.10059
   Tonella P, 2003, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSM.2003.1235418
   Walker RJ, 1998, ACM SIGPLAN NOTICES, V33, P271, DOI 10.1145/286942.286966
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
NR 40
TC 90
Z9 104
U1 1
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2006
VL 32
IS 9
BP 642
EP 663
DI 10.1109/TSE.2006.96
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 087WU
UT WOS:000240774300003
DA 2024-07-18
ER

PT J
AU Xu, DX
   Nygard, KE
AF Xu, DX
   Nygard, KE
TI Threat-driven modeling and verification of secure software using
   aspect-oriented Petri nets
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software security; modeling; verification; threat modeling; Petri nets;
   aspect-oriented Petri nets; aspect-oriented software development
AB Design-level vulnerabilities are a major source of security risks in software. To improve trustworthiness of software design, this paper presents a formal threat-driven approach, which explores explicit behaviors of security threats as the mediator between security goals and applications of security features. Security threats are potential attacks, i.e., misuses and anomalies that violate the security goals of systems' intended functions. Security threats suggest what, where, and how security features for threat mitigation should be applied. To specify the intended functions, security threats, and threat mitigations of a security design as a whole, we exploit aspect-oriented Petri nets as a unified formalism. Intended functions and security threats are modeled by Petri nets, whereas threat mitigations are modeled by Petri net-based aspects due to the incremental and crosscutting nature of security features. The unified formalism facilitates verifying correctness of security threats against intended functions and verifying absence of security threats from integrated functions and threat mitigations. As a result, our approach can make software design provably secured from anticipated security threats and, thus, reduce significant design-level vulnerabilities. We demonstrate our approach through a systematic case study on the threat-driven modeling and verification of a real-world shopping cart application.
C1 N Dakota State Univ, Dept Comp Sci, Fargo, ND 58105 USA.
C3 North Dakota State University Fargo
RP N Dakota State Univ, Dept Comp Sci, Fargo, ND 58105 USA.
EM dianxiang.xu@ndsu.edu; kendall.nygard@ndsu.edu
CR Alexander I, 2003, IEEE SOFTWARE, V20, P58, DOI 10.1109/MS.2003.1159030
   Allen J, 2000, CMUSEI99TR028
   BUTTYAN L, 1999, SSC1999038 SWISS FED
   CHEN H, 2004, P 11 ANN NETW DISTR, P171
   De Win B, 2001, INT FED INFO PROC, V78, P125
   Deng Y, 2003, IEEE T KNOWL DATA EN, V15, P1099, DOI 10.1109/TKDE.2003.1232267
   DEVANBU P, 2000, FUTURE SOFTWARE ENG, P227
   DING J, 2005, P 17 INT C SOFTW ENG, P560
   DOLEV D, 1983, IEEE T INFORM THEORY, V29, P198, DOI 10.1109/TIT.1983.1056650
   FEIERTAG RJ, 1979, P NAT COMP C, P329
   FILMAN R, 2005, ASPECT ORIENTED SOFT
   Firesmith Donald., 2003, J OBJECT TECHNOL, V2, P53
   Genrich Hartmann J., 1987, PETRI NETS CENTRAL M, P207
   Gollmann D, 2003, LECT NOTES COMPUT SC, V2874, P192
   Haley CharlesB., 2004, PROC AOSD 04, P112, DOI [10.1145/976270.976285, DOI 10.1145/976270.976285]
   HE X, 1996, APPL THEOR PETRI NET, P212
   Helmer G., 2002, Requirements Eng, V7, P177
   HO Y, 1998, P 21 NATL INF SYST S
   Hoglund Greg, 2004, Exploiting Software: How to Break Code
   Howard M., 2003, Writing Secure Code
   JACOBSON I, 1994, ORIENTED SOFTWARE EN
   Jensen K., 1992, COLOURED PETRI NETS, V26
   Landwehr Carl E., 1981, ACM COMPUT SURV, V13, P247
   LODDERSTEDT T, 2002, P UN MOD LANG C
   Lotz V., 1997, Journal of Computer Security, V5, P31
   MARSAN MA, 1995, MODELING GENERALIZED
   McClure S., 2003, Web Hacking: Attacks and Defense
   McDermott J, 2001, 17TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P366, DOI 10.1109/ACSAC.2001.991553
   McDermott J.P., 2000, Proceedings of the 2000 workshop on New security paradigms, NSPW '00, P15, DOI DOI 10.1145/366173.366183
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Neumann P.G., 2004, PRINCIPLED ASSUREDLY
   Ray I, 2004, INFORM SOFTWARE TECH, V46, P575, DOI 10.1016/j.infsof.2003.10.007
   Schneier B, 1999, DR DOBBS J, V24, P21
   SHEYNER O, 2004, P WORKSH FORM METH C, P344
   Sindre G, 2000, 37TH INTERNATIONAL CONFERENCE ON TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS, PROCEEDINGS, P120, DOI 10.1109/TOOLS.2000.891363
   Swiderski F., 2004, Threat modeling
   *US DEP DEF STAND, 1985, 520028STD US DEP DEF
   van Lamsweerde A, 2004, PROC INT CONF SOFTW, P148, DOI 10.1109/ICSE.2004.1317437
   Viega J., 2001, Cutter IT Journal, V14, P31
   Viega J., 2002, BUILDING SECURE SOFT
   WEISSMAN C, 1995, 5540082A NRL
   WING J, 1998, P NSF WORKSH COMP SE
   Xie X, 2000, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED PROCESSING TECHNIQUES AND APPLICATIONS, VOLS I-V, P263
   Xu D., 2005, ICEIS 2005, Proceedings of the Seventh International Conference on Enterprise Information Systems,Miami, USA,May 25-28, 2005, P136
   Xu DX, 2003, IEEE T SOFTWARE ENG, V29, P31, DOI 10.1109/TSE.2003.1166587
   Xu DX, 2003, INT J SOFTW ENG KNOW, V13, P103, DOI 10.1142/S0218194003001184
   [No title captured]
NR 47
TC 97
Z9 114
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2006
VL 32
IS 4
BP 265
EP 278
DI 10.1109/TSE.2006.40
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 036HG
UT WOS:000237061600004
DA 2024-07-18
ER

PT J
AU Fetzer, C
   Felber, P
   Högstedt, K
AF Fetzer, C
   Felber, P
   Högstedt, K
TI Automatic detection and masking of nonatomic exception handling
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT International Conference on Dependable Systems and Networks
CY JUN 22-25, 2003
CL SAN FRANCISCO, CA
SP IEEE Comp Soc, TC Fault Tolerant Comp, IFIP WG 10 4, Software Engn Inst, DARPA, HP, Intel, Cyber Def Agcy, LLC, Google, IBM
DE software engineering; software/program verification; reliability;
   testing and debugging; error handling and recovery; reliability; testing
   tools
ID DEPENDABILITY
AB The development of robust software is a difficult undertaking and is becoming increasingly more important as applications grow larger and more complex. Although modern programming languages such as C++ and Java provide sophisticated exception handling mechanisms to detect and correct runtime error conditions, exception handling code must still be programmed with care to preserve application consistency. In particular, exception handling is only effective if the premature termination of a method due to an exception does not leave an object in an inconsistent state. We address this issue by introducing the notion of failure atomicity in the context of exceptions. We propose practical techniques to automatically detect and mask the nonatomic exception handling situations encountered during program execution. These techniques can be applied to applications written in various programming languages that support exceptions. We perform experimental evaluation on both C++ and Java applications to demonstrate the effectiveness of our techniques and measure the overhead that they introduce.
C1 Tech Univ Dresden, Inst Syst Architecture, Dept Comp Sci, D-01062 Dresden, Germany.
   Inst EURECOM, F-06904 Sophia Antipolis, France.
   AT&T Labs Res, Florham Pk, NJ 07932 USA.
C3 Technische Universitat Dresden; IMT - Institut Mines-Telecom; EURECOM;
   AT&T
RP Tech Univ Dresden, Inst Syst Architecture, Dept Comp Sci, D-01062 Dresden, Germany.
EM cf2@inf.tu-dresden.de; pascal.felber@eurecom.fr; karin@research.att.com
OI Felber, Pascal/0000-0003-1574-6721
CR AIDEMARK J, 2001, P INT C DEP SYST NET
   [Anonymous], P INT S FAULT TOL CO
   *AP SOFTW FDN, 2004, BCEL BYT COD ENG LIB
   ARLAT J, 1990, IEEE T SOFTWARE ENG, V16, P166, DOI 10.1109/32.44380
   BROADWELL P, 2002, P ACM ICS SHAMAN WOR
   CARGILL T, 1994, C REPORT, V6
   Carreira J, 1998, IEEE T SOFTWARE ENG, V24, P125, DOI 10.1109/32.666826
   CRISTIAN F, 1995, SOFTWARE FAULT TOLER, P81
   Fabre JC, 2000, 2000 PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P85, DOI 10.1109/PRDC.2000.897288
   Fetzer C., 2003, P 8 IEEE INT WORKSH
   FETZER C, 2002, P INT C DEP SYST NET
   GOODENOUGH JB, 1975, COMMUN ACM, V18, P683, DOI 10.1145/361227.361230
   GOTO M, 2004, CINT C C INTERPRETER
   Han Seungjae., 1995, DOCTOR: an IntegrateD SOftware fault InjeCTiOn EnviRonment
   HARRIS T, 2003, P 18 ANN ACM SIGPLAN, P388, DOI DOI 10.1145/949305.949340
   Kanawati G.A., 1992, 1992 FTCS 22 INT S F, P336
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kropp NP, 1998, DIG PAP INT SYMP FAU, P230, DOI 10.1109/FTCS.1998.689474
   LEA D, 2004, COLLECTIONS
   Lippert M., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P418, DOI 10.1109/ICSE.2000.870432
   Lowell JA, 1998, HEPATOLOGY, V28, p265A
   Maxion RA, 2000, IEEE T SOFTWARE ENG, V26, P888, DOI 10.1109/32.877848
   Melliar-Smith P. M., 1977, SIGPLAN Notices, V12, P95, DOI 10.1145/390017.808315
   Mitchell S. E., 2001, Ada Letters, V21, P80
   PLANK JS, 1995, PROCEEDINGS OF THE 1995 USENIX TECHNICAL CONFERENCE, P213
   RANDELL JXB, 1999, SOFTWARE FAULT TOLER, P1
   Reuter A, 1993, T PROCESSING CONCEPT
   ROMANOVSKY A, 2001, ADV EXCEPTION HANDLI
   Skillicorn DB, 1998, ACM COMPUT SURV, V30, P123, DOI 10.1145/280277.280278
   SPINCZYK O, 2002, P 40 INT C TECHN OBJ
   2001, ACM SIGADA ADA LETT, V21
   2004, REGEXP
NR 32
TC 19
Z9 23
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2004
VL 30
IS 8
BP 547
EP 560
DI 10.1109/TSE.2004.35
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 837CL
UT WOS:000222605000005
DA 2024-07-18
ER

PT J
AU Lum, WY
   Lau, FCM
AF Lum, WY
   Lau, FCM
TI User-centric content negotiation for effective adaptation service in
   mobile computing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE content adaptation; content negotiation; user preferences; decision
   engine; context awareness; mobile computing
AB We address the challenges of building a good content adaptation service for mobile devices and propose a decision engine that is user-centric with Cos awareness, which can automatically negotiate for the appropriate adaptation decision to use in the synthesis of an optimal adapted version. The QoS-sensitive approach complements the lossy nature of the transcoding operations. The decision engine will look for the best trade off among various parameters in order to reduce the loss of quality in various domains. Quantitative methods are suggested to measure the QoS of the content versions in various quality domains. Based on the particular user perception and other contextual information on the client capability, the network connection, and the requested content, the proposed negotiation algorithm will determine a content version with a good aggregate score. We, have built a prototype document adaptation system for PDF documents to demonstrate the viability of our approach.
C1 Univ Hong Kong, Dept Comp Sci & Informat Syst, Hong Kong, Hong Kong, Peoples R China.
C3 University of Hong Kong
RP Univ Hong Kong, Dept Comp Sci & Informat Syst, Pokfulam Rd, Hong Kong, Hong Kong, Peoples R China.
EM wylum@csis.hku.hk; fcmlau@csis.hku.hk
RI Lau, Francis/AAN-8816-2020; Lau, Francis/C-1834-2009
OI LUM, Vincent Wai-Yip/0000-0003-1709-1845
CR Bickmore Timothy., 1997, PROC WWW 6, P655
   BOBROW DG, 1985, QUALITATIVE REASONIN
   CHEN J, 2000, P INT C AD HYP AD WE
   COMERFORD R, 2000, IEEE SPECTRUM    AUG, P35
   Fox A., 1996, P 5 INT WORLD WID WE
   Han R., 2000, CSCW 2000. ACM 2000 Conference on Computer Supported Cooperative Work, P221, DOI 10.1145/358916.358993
   LI C, 1998, P IEEE INT C AC SPEE
   Lum W. Y., 2002, P 8 ANN INT C MOB CO, P239
   LUM WY, 2002, THESIS U HONG KONG
   Ma WY, 2000, P SOC PHOTO-OPT INS, V3969, P86
   Mogul JC, 2001, COMPUT COMMUN, V24, P155, DOI 10.1016/S0140-3664(00)00310-8
   MOHAN R, 1999, IEEE T MULT, V1
   RICHTER JP, 1998, P 17 ANN JOINT C IEE, V2, P472
   Saha S, 2001, COMPUTER, V34, P54, DOI 10.1109/2.928622
   SHIMADA T, 1997, P 6 WORLD WID WEB C, P1467
   SMITH JR, 1998, P IEEE INT S CIRC SY
   STUARD D, 1998, MOBILE RADIO TEC SEP
   Pham TL, 2001, PERS UBIQUIT COMPUT, V5, P25, DOI 10.1007/s007790170024
   *W3C, 2001, IN PRESS DEV IND PRI
   Wai Yip Lum, 2002, IEEE Pervasive Computing, V1, P41, DOI 10.1109/MPRV.2002.1037721
NR 20
TC 41
Z9 50
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2003
VL 29
IS 12
BP 1100
EP 1111
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 751PJ
UT WOS:000187075900005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Jones, JA
   Harrold, MJ
AF Jones, JA
   Harrold, MJ
TI Test-suite reduction and prioritization for modified condition/decision
   coverage
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT IEEE International Conference on Software Maintenance (ICSM 2001)
CY NOV 07-09, 2001
CL FLORENCE, ITALY
SP IEEE Comp Soc, Tech Council Software Engn, AICA, AIIA, CESVIT, ERCIM, TABOO, UNINFO, IBM Italia, O Grp Technol, Telelog Italia, Univ Florence, Dipartimento Sistemi & Informat
DE test-suite reduction; test-suite prioritization; modified
   condition/decision coverage; testing; critical software
ID FAULT-DETECTION EFFECTIVENESS; MINIMIZATION
AB Software testing is particularly expensive for developers of high-assurance software, such as software that is produced for commercial airborne systems. One reason for this expense is the Federal Aviation Administration's requirement that test suites be modified condition/decision coverage (MC/DC) adequate. Despite its cost, there is evidence that MC/DC is an effective verification technique and can help to uncover safety faults. As the software is modified and new test cases are added to the test suite, the test suite grows and the cost of regression testing increases. To address the test-suite size problem, researchers have investigated the use of test-suite reduction algorithms, which identify a reduced test suite that provides the same coverage of the software according to some criterion as the original test suite, and test-suite prioritization algorithms, which identify an ordering of the test cases in the test suite according to some criteria or goals. Existing test-suite reduction and prioritization techniques, however, may not be effective in reducing or prioritizing MC/DC-adequate test suites because they do not consider the complexity of the criterion. This paper presents new algorithms for test-suite reduction and prioritization that can be tailored effectively for use with MC/DC. The paper also presents the results of empirical studies of these algorithms.
C1 Georgia Inst Technol, Coll Comp, Atlanta, GA 30332 USA.
C3 University System of Georgia; Georgia Institute of Technology
RP Georgia Inst Technol, Coll Comp, Atlanta, GA 30332 USA.
EM harroldl@cc.gatech.edu
CR Chen TY, 1996, INFORM PROCESS LETT, V60, P135, DOI 10.1016/S0020-0190(96)00135-4
   CHEN YF, 1994, PROC INT CONF SOFTW, P211
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   OFFUTT J, 1995, P 12 INT C TEST COMP, P111
   Rothermel G, 1998, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.1998.738487
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Wong WE, 1998, SOFTWARE PRACT EXPER, V28, P347, DOI 10.1002/(SICI)1097-024X(19980410)28:4<347::AID-SPE145>3.0.CO;2-L
   Wong WE, 1997, P INT COMP SOFTW APP, P522, DOI 10.1109/CMPSAC.1997.625062
NR 15
TC 196
Z9 226
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2003
VL 29
IS 3
BP 195
EP 209
DI 10.1109/TSE.2003.1183927
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 651QH
UT WOS:000181331700002
DA 2024-07-18
ER

PT J
AU Casamayor, R
   Cetina, C
   Pastor, O
   Pérez, F
AF Casamayor, Rodrigo
   Cetina, Carlos
   Pastor, Oscar
   Perez, Francisca
TI Studying the Influence and Distribution of the Human Effort in a Hybrid
   Fitness Function for Search-Based Model-Driven Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Interactive SBSE; search-based software engineering; bug localization;
   video games; model-driven engineering
ID SOFTWARE; OPTIMIZATION; ALGORITHMS; TESTS
AB Search-Based Software Engineering (SBSE) offers solutions that efficiently explore large complex problem spaces. To obtain more favorable solutions, human participation in the search process is needed. However, humans cannot handle the same number of solutions as an algorithm. We propose the first hybrid fitness function that combines human effort with human simulations. Human effort refers to human participation for providing evaluations of candidate solutions during the search process, whereas human simulations refer to recreations of a scenario in a specific situation for automatically obtaining the evaluation of candidate solutions. We also propose three variants for the hybrid fitness function that vary in the distribution of human effort in order to study whether the variants influence the performance in terms of solution quality. Specifically, we leverage our hybrid fitness function to locate bugs in software models for the video games of game software engineering. Video games are a fertile domain for these hybrid functions because simulated players are naturally developed as part of the video games (e.g., bots in First-Person Shooters). Our evaluation is at the scale of industrial settings with a commercial video game (Play Station 4 and Steam) and 29 professional video game developers. Hybridizing the fitness function outperforms the results of the best baseline by 33.46% in F-measure. A focus group confirms the acceptance of the hybrid fitness function. Hybridizing the fitness function significantly improves the bug localization process by reducing the amount of tedious manual work and by minimizing the number of bugs that go unnoticed. Furthermore, the variant that obtains the best results is a counter-intuitive result that was under the radar of the interactive SBSE community. These results can help not only video game developers to locate bugs, but they can also inspire SBSE researchers to bring hybrid fitness functions to other software engineering tasks.
C1 [Casamayor, Rodrigo; Cetina, Carlos; Perez, Francisca] Univ San Jorge, SVIT Res Grp, Zaragoza 50830, Spain.
   [Cetina, Carlos] UCL, London WC1E 6BT, England.
   [Pastor, Oscar] Univ Politecn Valencia, Res Ctr Software Prod Methods PROS, Valencia 46022, Spain.
C3 Universidad San Jorge; University of London; University College London;
   Universitat Politecnica de Valencia
RP Casamayor, R (corresponding author), Univ San Jorge, SVIT Res Grp, Zaragoza 50830, Spain.
EM rcasamayor@usj.es; ccetina@usj.es; opastor@dsic.upv.es; mfperez@usj.es
RI Pérez, Francisca/KPH-0503-2024; Pastor Lopez, Oscar/S-4216-2016; Cetina,
   Carlos/P-8682-2017
OI Pastor Lopez, Oscar/0000-0002-1320-8471; Casamayor Moragriega,
   Rodrigo/0000-0001-6718-5642; Cetina, Carlos/0000-0001-8542-5515
FU Ministry of Economy and Competitiveness (MINECO) through the Spanish
   National R+D+i Plan
FX No Statement Available
CR Alizadeh V, 2020, IEEE T SOFTWARE ENG, V46, P932, DOI 10.1109/TSE.2018.2872711
   Alkhazi B, 2020, AUTOMAT SOFTW ENG, V27, P91, DOI 10.1007/s10515-020-00271-w
   Alkhazi B, 2020, INFORM SOFTWARE TECH, V120, DOI 10.1016/j.infsof.2019.106243
   Amal B, 2014, LECT NOTES COMPUT SC, V8636, P31
   Ampatzoglou A, 2010, INFORM SOFTWARE TECH, V52, P888, DOI 10.1016/j.infsof.2010.05.004
   Araújo AA, 2017, AUTOMAT SOFTW ENG, V24, P623, DOI 10.1007/s10515-016-0200-3
   Arcega L, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3472616
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Ariyurek S, 2021, IEEE T GAMES, V13, P50, DOI 10.1109/TG.2019.2947597
   Ariyurek S, 2020, IEEE CONF COMPU INTE, P25, DOI 10.1109/CoG47356.2020.9231670
   Barros Mrciode Oliveira., 2011, RELATE DIA, V5
   Batot E, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P374, DOI 10.1145/2976767.2976785
   Bindewald CV, 2019, PROCEEDINGS OF THE XXXIII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2019, P387, DOI 10.1145/3350768.3351993
   Blasco D, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110804
   Boussaïd I, 2017, AUTOMAT SOFTW ENG, V24, P233, DOI 10.1007/s10515-017-0215-4
   Burgueño L, 2015, IEEE T SOFTWARE ENG, V41, P490, DOI 10.1109/TSE.2014.2375201
   Calinescu R, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P131, DOI 10.1109/ICSA.2017.16
   Casamayor R., PROC 25 INT C MODEL
   Cheng XY, 2020, P INT COMP SOFTW APP, P902, DOI 10.1109/COMPSAC48688.2020.0-152
   Ciborowska A, 2022, PROC INT CONF SOFTW, P946, DOI 10.1145/3510003.3510042
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   CONOVER WJ, 1999, PRACTICAL NONPARAMET
   Debreceni C, 2016, LECT NOTES COMPUT SC, V9633, P104, DOI 10.1007/978-3-662-49665-7_7
   Delgado-Pérez P, 2023, IEEE T SOFTWARE ENG, V49, P2580, DOI 10.1109/TSE.2022.3227418
   Feldt R., 2002, Tech. Rep. 02-16
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Ferdous R, 2021, LECT NOTES COMPUT SC, V12914, P56, DOI 10.1007/978-3-030-88106-1_5
   Fleck M, 2016, J SOFTW-EVOL PROC, V28, P1081, DOI 10.1002/smr.1804
   Font J, 2018, IEEE T EVOLUT COMPUT, V22, P363, DOI 10.1109/TEVC.2017.2751100
   Freire W. M., PROC 36 BRAZILIAN S
   García S, 2010, INFORM SCIENCES, V180, P2044, DOI 10.1016/j.ins.2009.12.010
   Ghannem Adnane, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P96, DOI 10.1007/978-3-642-39742-4_9
   Gómez-Abajo P, 2017, COMPUT LANG SYST STR, V49, P152, DOI 10.1016/j.cl.2016.11.001
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Iftikhar S, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P426, DOI 10.1109/MODELS.2015.7338274
   Ishibuchi H, 2006, IEEE C EVOL COMPUTAT, P1128
   Jakubovski HL, 2019, J SYST SOFTWARE, V151, P194, DOI 10.1016/j.jss.2019.02.028
   Kessentini W., 2020, P 23 ACM IEEE INT C, P68, DOI [10.1145/3239372.3239375, DOI 10.1145/3239372.3239375]
   Kessentini W, 2022, SOFTW SYST MODEL, V21, P1853, DOI 10.1007/s10270-022-00978-2
   Kessentini W, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P101, DOI 10.1145/3239372.3239375
   Khanfir A, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1790, DOI 10.1145/3540250.3558907
   Kolchin A., 2018, Problems Program, V2-3, P115
   Kuviatkovski FH, 2022, 2022 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2022), P68, DOI 10.1109/ICSA-C54293.2022.00057
   Le Calvar T, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1837, DOI 10.1145/3297280.3297461
   Liang HL, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10237-z
   Lin Y, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P535, DOI 10.1145/2950290.2950317
   Lu H, 2016, IEEE INT CONF SOFTW, P57, DOI 10.1109/ICST.2016.17
   Marculescu B, 2018, J SYST SOFTWARE, V142, P156, DOI 10.1016/j.jss.2018.04.061
   Marculescu B, 2015, APPL SOFT COMPUT, V29, P26, DOI 10.1016/j.asoc.2014.12.025
   Martinez J, 2017, HUM-COMPUT INT-SPRIN, P81, DOI 10.1007/978-3-319-60947-8_3
   Martinez J, 2018, LECT NOTES COMPUT SC, V10826, P23, DOI 10.1007/978-3-319-90421-4_2
   Pérez F, 2022, IEEE T SOFTWARE ENG, V48, P4553, DOI 10.1109/TSE.2021.3121253
   Pérez F, 2022, IEEE T SOFTWARE ENG, V48, P713, DOI 10.1109/TSE.2020.3000520
   Procter S, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P117, DOI 10.1109/MODELS.2019.000-9
   Quach S, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10004-6
   Ramírez A, 2021, IEEE C EVOL COMPUTAT, P2395, DOI 10.1109/CEC45853.2021.9504786
   Ramírez A, 2019, IEEE T SOFTWARE ENG, V45, P760, DOI 10.1109/TSE.2018.2803055
   Romano J., 2006, ANN M FLORIDA ASS IN
   Salton G, 1986, Introduction to Modern Information Retrieval
   Cuadrado JS, 2018, SOFTW SYST MODEL, V17, P779, DOI 10.1007/s10270-016-0541-1
   Cuadrado JS, 2017, IEEE T SOFTWARE ENG, V43, P868, DOI 10.1109/TSE.2016.2635137
   Seltman H.J., 2012, Experimental Design and Analysis
   Silva D. N. A. d., 2020, P 15 IB C INF SYST T, P1
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Takagi H, 2001, P IEEE, V89, P1275, DOI 10.1109/5.949485
   Troya J, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241744
   Tufano R, 2022, PROC INT CONF SOFTW, P2303, DOI 10.1145/3510003.3510625
   van Rooijen L, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P3, DOI [10.1109/REW.2016.23, 10.1109/REW.2016.015]
   Wang Zan, 2016, Journal of Software, V27, P879, DOI 10.13328/j.cnki.jos.004970
   Yue T, 2016, PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2016), P691
   Zhang JL, 2020, INT C PROGRAM COMPRE, P219, DOI 10.1145/3387904.3389281
   Zheng Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P784, DOI 10.1109/ASE.2019.00077
   Zubcoff J, 2019, INFORM SOFTWARE TECH, V106, P68, DOI 10.1016/j.infsof.2018.09.004
NR 74
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2023
VL 49
IS 12
BP 5189
EP 5202
DI 10.1109/TSE.2023.3329730
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CL0K1
UT WOS:001125287400005
OA hybrid
DA 2024-07-18
ER

PT J
AU Fu, MC
   Nguyen, V
   Tantithamthavorn, C
   Le, T
   Phung, D
AF Fu, Michael
   Nguyen, Van
   Tantithamthavorn, Chakkrit (Kla)
   Le, Trung
   Phung, Dinh
TI VulExplainer: A Transformer-Based Hierarchical Distillation for
   Explaining Vulnerability Types
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software vulnerability; software security
ID CLASSIFICATION
AB Deep learning-based vulnerability prediction approaches are proposed to help under-resourced security practitioners to detect vulnerable functions. However, security practitioners still do not know what type of vulnerabilities correspond to a given prediction (aka CWE-ID). Thus, a novel approach to explain the type of vulnerabilities for a given prediction is imperative. In this paper, we propose VulExplainer, an approach to explain the type of vulnerabilities. We represent VulExplainer as a vulnerability classification task. However, vulnerabilities have diverse characteristics (i.e., CWE-IDs) and the number of labeled samples in each CWE-ID is highly imbalanced (known as a highly imbalanced multi-class classification problem), which often lead to inaccurate predictions. Thus, we introduce a Transformer-based hierarchical distillation for software vulnerability classification in order to address the highly imbalanced types of software vulnerabilities. Specifically, we split a complex label distribution into sub-distributions based on CWE abstract types (i.e., categorizations that group similar CWE-IDs). Thus, similar CWE-IDs can be grouped and each group will have a more balanced label distribution. We learn TextCNN teachers on each of the simplified distributions respectively, however, they only perform well in their group. Thus, we build a transformer student model to generalize the performance of TextCNN teachers through our hierarchical knowledge distillation framework. Through an extensive evaluation using the real-world 8,636 vulnerabilities, our approach outperforms all of the baselines by 5%-29%. The results also demonstrate that our approach can be applied to Transformer-based architectures such as CodeBERT, GraphCodeBERT, and CodeGPT. Moreover, our method maintains compatibility with any Transformer-based model without requiring any architectural modifications but only adds a special distillation token to the input. These results highlight our significant contributions towards the fundamental and practical problem of explaining software vulnerability.
C1 [Fu, Michael; Nguyen, Van; Tantithamthavorn, Chakkrit (Kla); Le, Trung; Phung, Dinh] Monash Univ, Fac Informat Technol, Melbourne, Australia.
C3 Monash University
RP Tantithamthavorn, C (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Australia.
EM yeh.fu@monash.edu; van.nguyen1@monash.edu; chakkrit@monash.edu;
   trunglm@monash.edu; dinh.phung@monash.edu
RI Nguyen, Van/JXL-5346-2024
OI Nguyen, Van/0000-0002-5838-3409; Tantithamthavorn,
   Chakkrit/0000-0002-5516-9984; Le, Trung/0000-0003-0414-9067; Fu,
   Michael/0000-0001-7211-3491; Phung, Dinh/0000-0002-9977-8247
FU ARC's DECRA Fellowship [DE200100941]
FX Chakkrit (Kla) Tantithamthavorn was supported in part by the ARC's DECRA
   Fellowship (DE200100941).
CR Aghaei E, 2020, L N INST COMP SCI SO, V335, P23, DOI 10.1007/978-3-030-63086-7_2
   [Anonymous], 2016, A real-world vulnerability example of CWE-787
   Aota M, 2020, IEEE SYMP COMP COMMU, P26, DOI 10.1109/iscc50000.2020.9219568
   Babalau I, 2021, INT SYMP SYMB NUMERI, P171, DOI 10.1109/SYNASC54541.2021.00037
   Boyan Zhou, 2020, 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR). Proceedings, P9716, DOI 10.1109/CVPR42600.2020.00974
   Bucilua C., 2006, P 12 ACM SIGKDD INT, P535, DOI DOI 10.1145/1150402.1150464
   Buda M, 2018, NEURAL NETWORKS, V106, P249, DOI 10.1016/j.neunet.2018.07.011
   C. Community, 2021, CWE abstract type (CWE glossary)
   C. Community, 2006, Common weakness enumeration (CWE)
   C. Community, 2022, 2022 CWE top 25 most dangerous software weaknesses
   Cao KD, 2019, ADV NEUR IN, V32
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Cito J, 2023, IEEE SOFTWARE, V40, P84, DOI 10.1109/MS.2023.3255663
   Clark K, 2020, Arxiv, DOI arXiv:2003.10555
   Collell G, 2017, Arxiv, DOI arXiv:1606.08698
   Cui Y, 2019, PROC CVPR IEEE, P9260, DOI 10.1109/CVPR.2019.00949
   Das SS, 2021, 2021 IEEE 8TH INTERNATIONAL CONFERENCE ON DATA SCIENCE AND ADVANCED ANALYTICS (DSAA), DOI 10.1109/DSAA53316.2021.9564227
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Fan JH, 2020, IEEE WORK CONF MIN S, P508, DOI 10.1145/3379597.3387501
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Fu M., 2022, Replication package of VulExplainer
   Fu M, 2022, IEEE WORK CONF MIN S, P608, DOI 10.1145/3524842.3528452
   Fu Michael, 2023, Empirical Software Engineering
   Gong X, 2019, IEEE INT C ENG COMP, P31, DOI 10.1109/ICECCS.2019.00011
   Google, 2022, Key statistics of the google bug bounty program
   Google, 2023, Bard
   Guo D., 2020, INT C LEARN REPR
   Gurfinkel D., 2021, Charting the future of our bug bounty program
   Hin D., 2022, arXiv
   Hinton G., 2015, COMPUT SCI, V2
   Hong Y, 2021, PROC CVPR IEEE, P6622, DOI 10.1109/CVPR46437.2021.00656
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Jiarpakdee J, 2021, IEEE WORK CONF MIN S, P432, DOI 10.1109/MSR52588.2021.00055
   Jiarpakdee J, 2022, IEEE T SOFTWARE ENG, V48, P166, DOI 10.1109/TSE.2020.2982385
   Kang Bingyi, 2020, 8 INT C LEARN REPR I
   Khanan C, 2020, IEEE INT CONF AUTOM, P1336, DOI 10.1145/3324884.3415295
   Dam HK, 2017, Arxiv, DOI arXiv:1708.02368
   Kim Y, 2014, ARXIV PREPRINT ARXIV, DOI 10.3115/v1/D14-1181
   Kipf TN, 2016, ARXIV
   Li Y., 2016, ICLR, P1, DOI DOI 10.48550/ARXIV.1511.05493
   Li Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P292, DOI 10.1145/3468264.3468597
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Lin TY, 2017, IEEE I CONF COMP VIS, P2999, DOI 10.1109/ICCV.2017.324
   Liu Y, 2022, PROC INT SYMP SOFTW, P169, DOI 10.1109/ISSRE55969.2022.00026
   Liuyu Xiang, 2020, Computer Vision - ECCV 2020 16th European Conference. Proceedings. Lecture Notes in Computer Science (LNCS 12350), P247, DOI 10.1007/978-3-030-58558-7_15
   Longhui Wei, 2020, Computer Vision - ECCV 2020. 16th European Conference. Proceedings. Lecture Notes in Computer Science (LNCS 12348), P608, DOI 10.1007/978-3-030-58580-8_36
   Lu S, 2021, P 35 C NEUR INF PROC, P1
   Menon A. K., 2020, arXiv preprint arXiv:2007.07314, P1
   More A, 2016, Arxiv, DOI arXiv:1608.06048
   MSRC, 2021, Microsoft bug bounty programs year in review: $13.6m in rewards
   Na S, 2017, LECT NOTE DATA ENG, V2, P657, DOI 10.1007/978-3-319-49106-6_65
   Nguyen V, 2021, IEEE IJCNN, DOI 10.1109/IJCNN52387.2021.9533907
   NVD, 2000, National vulnerability database (NVD)
   OpenAI, 2022, CHATGPT
   Ozkan S., 2021, Log4j: Security vulnerabilities
   Pornprasit C, 2023, IEEE T SOFTWARE ENG, V49, P84, DOI 10.1109/TSE.2022.3144348
   Pornprasit C, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P407, DOI 10.1109/ASE51524.2021.9678763
   Provost F., 2000, P AAAI 2000 WORKSH I, V68, P1, DOI DOI 10.1109/SOCPAR.2011
   Radford A., 2019, LANGUAGE MODELS ARE
   Rajapaksha D, 2022, IEEE T SOFTWARE ENG, V48, P2814, DOI 10.1109/TSE.2021.3070559
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Sennrich R, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1715
   Shuai B, 2013, 2013 IEEE INTERNATIONAL CONFERENCE ON INFORMATION AND AUTOMATION (ICIA), P312, DOI 10.1109/ICInfA.2013.6720316
   Tantithamthavorn C, 2023, IEEE SOFTWARE, V40, P29, DOI 10.1109/MS.2023.3246686
   Tantithamthavorn C, 2021, IEEE SOFTWARE, V38, P115, DOI 10.1109/MS.2021.3072088
   Tantithamthavorn C, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1, DOI 10.1109/ASE51524.2021.9678580
   Thapa C, 2022, Arxiv, DOI arXiv:2204.03214
   Tianyi Wang, 2021, 2021 IEEE 24th International Conference on Computational Science and Engineering (CSE), P146, DOI 10.1109/CSE53436.2021.00030
   Touvron H, 2021, PR MACH LEARN RES, V139, P7358
   Le THM, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P717, DOI 10.1109/ASE51524.2021.9678622
   Nguyen V, 2019, IEEE IJCNN, DOI 10.1109/ijcnn.2019.8851923
   Nguyen VA, 2022, PROC IEEE ACM INT C, P178, DOI [10.1145/3510454.3516865, 10.1109/ICSE-Companion55297.2022.9793807]
   Vaswani A, 2017, ADV NEUR IN, V30
   Verma V, 2019, PR MACH LEARN RES, V97
   Wang X., 2020, P IEEE C COMM NETW S, P1
   Wattanakriengkrai S, 2022, IEEE T SOFTWARE ENG, V48, P1480, DOI 10.1109/TSE.2020.3023177
   Wei J, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P6382
   Yu Li, 2020, 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR). Proceedings, P10988, DOI 10.1109/CVPR42600.2020.01100
   Zhang Hongyi, 2018, MIXUP EMPIRICAL RISK, DOI DOI 10.48550/ARXIV.1710.09412
   Zhang YS, 2021, AAAI CONF ARTIF INTE, V35, P3447
   Zhou YQ, 2019, ADV NEUR IN, V32
   Zhou ZH, 2006, IEEE T KNOWL DATA EN, V18, P63, DOI 10.1109/TKDE.2006.17
NR 82
TC 5
Z9 5
U1 6
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2023
VL 49
IS 10
BP 4550
EP 4565
DI 10.1109/TSE.2023.3305244
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA Y1NF7
UT WOS:001102997400004
DA 2024-07-18
ER

PT J
AU Li, Y
   Zhang, T
   Luo, XP
   Cai, HP
   Fang, S
   Yuan, DW
AF Li, Yao
   Zhang, Tao
   Luo, Xiapu
   Cai, Haipeng
   Fang, Sen
   Yuan, Dawei
TI Do Pretrained Language Models Indeed Understand Software Engineering
   Tasks?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Overinterpretation; deep learning; pre-trained language model; software
   engineering
ID SOURCE CODE; IMPACT
AB Artificial intelligence (AI) for software engineering (SE) tasks has recently achieved promising performance. In this article, we investigate to what extent the pre-trained language model truly understands those SE tasks such as code search, code summarization, etc. We conduct a comprehensive empirical study on a board set of AI for SE (AI4SE) tasks by feeding them with variant inputs: 1) with various masking rates and 2) with sufficient input subset method. Then, the trained models are evaluated on different SE tasks, including code search, code summarization, and duplicate bug report detection. Our experimental results show that pre-trained language models are insensitive to the given input, thus they achieve similar performance in these three SE tasks. We refer to this phenomenon as overinterpretation, where a model confidently makes a decision without salient features, or where a model finds some irrelevant relationships between the final decision and the dataset. Our study investigates two approaches to mitigate the overinterpretation phenomenon: whole word mask strategy and ensembling. To the best of our knowledge, we are the first to reveal this overinterpretation phenomenon to the AI4SE community, which is an important reminder for researchers to design the input for the models and calls for necessary future work in understanding and implementing AI4SE tasks.
C1 [Li, Yao; Zhang, Tao; Fang, Sen; Yuan, Dawei] Macau Univ Sci & Technol, Sch Comp Sci & Engn, Macau 999078, Peoples R China.
   [Luo, Xiapu] Hong Kong Polytech Univ, Dept Comp, Hong Kong 999077, Peoples R China.
   [Cai, Haipeng] Washington State Univ, Sch Elect Engn & Comp Sci, Pullman, WA 99163 USA.
C3 Macau University of Science & Technology; Hong Kong Polytechnic
   University; Washington State University
RP Zhang, T (corresponding author), Macau Univ Sci & Technol, Sch Comp Sci & Engn, Macau 999078, Peoples R China.
EM 2109853gia30001@student.must.edu.mo; tazhang@must.edu.mo;
   csxluo@comp.polyu.edu.hk; haipeng.cai@wsu.edu; fangsen1996@gmail.com;
   wu.xiguanghua2014@gmail.com
RI Cai, Haipeng/K-7802-2015; Zhang, Tao/E-5634-2012
OI Cai, Haipeng/0000-0002-5224-9970; Zhang, Tao/0000-0002-6272-4069; Li,
   YAO/0000-0002-0474-0159; Fang, Sen/0000-0002-9918-7180; Yuan,
   Dawei/0000-0002-9469-5864
FU Macao Scienceand Technology Development Fund (FDCT), Macau SAR
   [0047/2020/A1, 0014/2022/A]; Hong Kong RGC Project [PolyU15224121];
   HKPolyU Grant [ZVG0]
FX This work was supported in part by Macao Scienceand Technology
   Development Fund (FDCT), Macau SAR under Grands 0047/2020/A1 and
   0014/2022/A, and in part by Hong Kong RGC Project (No.PolyU15224121) and
   HKPolyU Grant (ZVG0).
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Ahmad W., 2020, P 58 ANN M ASS COMPU, P4998, DOI 10.18653/v1/2020.acl-main.449
   Banerjee S., 2005, P ACL WORKSH INTR EX, P65
   Budhiraja A, 2018, PROC IEEE ACM INT C, P193, DOI 10.1145/3183440.3195092
   Carter B, 2019, PR MACH LEARN RES, V89, P567
   Carter Brandon, 2021, Advances in Neural Information Processing Systems, P15395
   Cer Daniel M., 2017, P 11 INT WORKSHOP SE, P1
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Chen S.-Y., 2022, Lib. Ti Tech, V15, P1
   Chen X. Z. Z., 2018, Quora question pairs
   Cito J, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2022), P125, DOI [10.1145/3510457.3513081, 10.1109/ICSE-SEIP55303.2022.9794112]
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Cui YM, 2021, IEEE-ACM T AUDIO SPE, V29, P3504, DOI 10.1109/TASLP.2021.3124365
   Deshmukh J, 2017, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSME.2017.69
   Devlin J., 2018, BERT PRE TRAINING DE
   Dolan W., 2022, P INT WORKSH PAR, P1
   Du XT, 2023, IEEE T DEPEND SECURE, V20, P2696, DOI 10.1109/TDSC.2022.3152239
   Espinoza GZ, 2021, PLOS ONE, V16, DOI 10.1371/journal.pone.0246126
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Fowkes J, 2017, IEEE T SOFTWARE ENG, V43, P1095, DOI 10.1109/TSE.2017.2664836
   Garbin C, 2020, MULTIMED TOOLS APPL, V79, P12777, DOI 10.1007/s11042-019-08453-9
   Gezici B, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10105-2
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Hao R., 2022, J. Softw.: Evol. Process, V24, P1
   Hinton GE, 2006, NEURAL COMPUT, V18, P1527, DOI 10.1162/neco.2006.18.7.1527
   Hu Q, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3511598
   Huang AM, 2014, ADV MATER RES-SWITZ, V1049, P2032, DOI 10.4028/www.scientific.net/AMR.1049-1050.2032
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Ju C, 2018, J APPL STAT, V45, P2800, DOI 10.1080/02664763.2018.1441383
   Kaneko M, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P4248
   King-Shy Goh, 2001, Proceedings of the 2001 ACM CIKM. Tenth International Conference on Information and Knowledge Management, P395
   Kryeziu L., 2022, PROC 11 MEDITERR C E, P1
   Levine Y., 2020, P 9 INT C LEARN REPR, P1
   Li X, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P690, DOI 10.1145/2950290.2950341
   Li Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P292, DOI 10.1145/3468264.3468597
   Lin CY, 2004, ROUGE: A Package for Automatic Evaluation of Summaries, P74, DOI DOI 10.1253/JCJ.34.1213
   Liu YH, 2019, Arxiv, DOI arXiv:1907.11692
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   MALETIC JI, 1994, PROC INT C TOOLS ART, P11, DOI 10.1109/TAI.1994.346519
   McBurney PW, 2016, EMPIR SOFTW ENG, V21, P17, DOI 10.1007/s10664-014-9344-6
   McCann B., 2017, NIPS, V30, P6297
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Nangia N., 2017, 2 WORKSH EV VECT SPA, P1
   Niu HR, 2017, EMPIR SOFTW ENG, V22, P259, DOI 10.1007/s10664-015-9421-5
   Noughi N, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P47, DOI 10.1109/QRS-C.2017.17
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Palomo-Duarte M, 2021, ELECTRONICS-SWITZ, V10, DOI 10.3390/electronics10131566
   Pan C, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11114793
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Perez J, 2022, IEEE T IND INFORM, V18, P620, DOI 10.1109/TII.2021.3074394
   Peters M, 2018, STUD LATEINAMERIKA, V32, P1, DOI 10.5771/9783845286846
   Politowski C, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106278
   Pollock L., 2013, Software Engineering, P94, DOI DOI 10.1007/978-3-642-36054-14
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Qu Y, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09965-5
   Rabin MRI, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P441, DOI 10.1145/3468264.3468539
   Radford Alec, 2018, IMPROVING LANGUAGE U, DOI DOI 10.18653/V1/N18-1202
   Raghothaman M, 2016, PROC INT CONF SOFTW, P357, DOI 10.1145/2884781.2884808
   Rajpurkar P., 2016, ARXIV
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Robertson S., 2004, P 13 ACM INT C INF K, P42
   Safdari N., 2018, Thesis, P1
   Semasaba A. O. A., 2022, J. Softw.: Evol. Process., V24, P1
   Sheoraj Y, 2022, ADV ENG SOFTW, V170, DOI 10.1016/j.advengsoft.2022.103143
   Socher R., 2013, P 2013 C EMP METH NA, V2013, P1631, DOI DOI 10.1371/JOURNAL.PONE.0073791
   Sridhara G., 2010, P IEEE ACM INT C AUT, P43, DOI DOI 10.1145/1858996.1859006
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Tu LF, 2020, T ASSOC COMPUT LING, V8, P621, DOI 10.1162/tacl_a_00335
   Vaswani A, 2017, ADV NEUR IN, V30
   Warstadt A., 2018, Corpus of Linguistic Acceptability
   Wettig Alexander, 2023, P 17 C EUROPEAN CHAP, P2977
   Wu YZ, 2022, IEEE T SERV COMPUT, V15, P551, DOI 10.1109/TSC.2019.2928551
   Xiao GP, 2020, PROC INT SYMP SOFTW, P195, DOI 10.1109/ISSRE5003.2020.00027
   Yan SH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P344, DOI [10.1109/SANER48275.2020.9054840, 10.1109/saner48275.2020.9054840]
   Yang Z., 2019, NIPS
   Zeng Z., 2022, arXiv
   Zheng Zhi-ming, 2008, Computer Engineering and Design, V29, P4302
NR 79
TC 1
Z9 1
U1 4
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2023
VL 49
IS 10
BP 4639
EP 4655
DI 10.1109/TSE.2023.3308952
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA Y1NF7
UT WOS:001102997400008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Deng, Y
   Zheng, X
   Zhang, TY
   Liu, HA
   Lou, GN
   Kim, M
   Chen, TY
AF Deng, Yao
   Zheng, Xi
   Zhang, Tianyi
   Liu, Huai
   Lou, Guannan
   Kim, Miryung
   Chen, Tsong Yueh
TI A Declarative Metamorphic Testing Framework for Autonomous Driving
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Autonomous vehicles; Predictive models; Roads; Ontologies;
   Vehicles; Natural languages; Metamorphic testing; Autonomous driving;
   testing
ID VERIFICATION
AB Autonomous driving has gained much attention from both industry and academia. Currently, Deep Neural Networks (DNNs) are widely used for perception and control in autonomous driving. However, several fatal accidents caused by autonomous vehicles have raised serious safety concerns about autonomous driving models. Some recent studies have successfully used the metamorphic testing technique to detect thousands of potential issues in some popularly used autonomous driving models. However, prior study is limited to a small set of metamorphic relations, which do not reflect rich, real-world traffic scenarios and are also not customizable. This paper presents a novel declarative rule-based metamorphic testing framework called RMT. RMT provides a rule template with natural language syntax, allowing users to flexibly specify an enriched set of testing scenarios based on real-world traffic rules and domain knowledge. RMT automatically parses human-written rules to metamorphic relations using an NLP-based rule parser referring to an ontology list and generates test cases with a variety of image transformation engines. We evaluated RMT on three autonomous driving models. With an enriched set of metamorphic relations, RMT detected a significant number of abnormal model predictions that were not detected by prior work. Through a large-scale human study on Amazon Mechanical Turk, we further confirmed the authenticity of test cases generated by RMT and the validity of detected abnormal model predictions.
C1 [Deng, Yao; Zheng, Xi; Lou, Guannan] Macquarie Univ, Dept Comp, Sydney, NSW 2109, Australia.
   [Zhang, Tianyi] Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
   [Liu, Huai; Chen, Tsong Yueh] Swinburne Univ Technol, Sch Software & Elect Engn, Melbourne, Vic 3122, Australia.
   [Kim, Miryung] Univ Calif Los Angeles, Dept Comp Sci, Los Angeles, CA 90095 USA.
C3 Macquarie University; Purdue University System; Purdue University;
   Swinburne University of Technology; University of California System;
   University of California Los Angeles
RP Zheng, X (corresponding author), Macquarie Univ, Dept Comp, Sydney, NSW 2109, Australia.
EM yao.deng@hdr.mq.edu.au; james.zheng@mq.edu.au; tianyi@purdue.edu;
   hliu@swin.edu.au; lougnroy@gmail.com; miryung@cs.ucla.edu;
   tychen@swin.edu.au
RI Zheng, Xi/AAV-8387-2020; Liu, Huai/M-4871-2019; zhang,
   quan/KHY-9180-2024; xiao, wei/KCK-6954-2024
OI Zheng, Xi/0000-0002-2572-2355; Liu, Huai/0000-0003-3125-4399; Chen,
   Tsong/0000-0003-3578-0994; Deng, Yao/0000-0002-9762-7058
FU Australian Research Council [DP210102447]; ARC [LP190100676]
FX This work was supported in part by Australian Research Council Project
   under Grant DP210102447 and in part by ARC Linkage Project under Grant
   LP190100676.
CR [Anonymous], 2018, FAQs
   [Anonymous], 2003, P 8 INT C PARS TECHN
   [Anonymous], 2017, CG23
   [Anonymous], 2007, Computing Foundations and Practice for Cyber-Physical Systems: A Preliminary Report
   Ayerdi J, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1264, DOI 10.1145/3468264.3473920
   Bagschik G, 2018, IEEE INT VEH SYM, P1813, DOI 10.1109/IVS.2018.8500632
   Belanger J., 2010, Planet Rt, V1, P25
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Ben Abdessalem R, 2016, IEEE INT CONF AUTOM, P63, DOI 10.1145/2970276.2970311
   Bird S., 2009, NATURAL LANGUAGE PRO
   bit, 2021, APOLLO
   Blasi A, 2021, J SYST SOFTWARE, V181, DOI 10.1016/j.jss.2021.111041
   Bojarczuk K., 2021, PROC INT S EMPIR SOF, P1
   Bojarski M, 2016, Arxiv, DOI [arXiv:1604.07316, 10.48550/arXiv.1604.07316]
   Boudette Neal E., 2017, Tesla's self-driving system cleared in deadly crash
   Bradski G., 2008, LEARNING OPENCV COMP, DOI DOI 10.1109/MRA.2009.933612
   Broggi Alberto, 2014, 2014 IEEE Intelligent Vehicles Symposium Proceedings, P648, DOI 10.1109/IVS.2014.6856478
   Chan WK, 2006, INT J SOFTW ENG KNOW, V16, P677, DOI 10.1142/S0218194006002951
   Chen LCE, 2018, LECT NOTES COMPUT SC, V11211, P833, DOI 10.1007/978-3-030-01234-2_49
   Chen TY, 2020, Arxiv, DOI [arXiv:2002.12543, DOI 10.48550/ARXIV.2002.12543]
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Chen TY, 2016, J SYST SOFTWARE, V116, P177, DOI 10.1016/j.jss.2015.07.037
   Deng Y., 2022, PROC ACM JOINT M EUR
   Deng Y, 2021, IEEE T IND INFORM, V17, P7897, DOI 10.1109/TII.2021.3071405
   DOMMEL HW, 1969, IEEE T POWER AP SYST, VPA88, P388, DOI 10.1109/TPAS.1969.292459
   Dosovitskiy A., 2017, P 1 ANN C ROB LEARN, P1, DOI DOI 10.48550/ARXIV.1711.03938
   Dreossi T, 2017, Arxiv, DOI arXiv:1708.03309
   Du XN, 2020, IEEE INT CONF AUTOM, P423, DOI 10.1145/3324884.3416564
   Du XN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P477, DOI 10.1145/3338906.3338954
   Fingas J., 2018, WAYMO LAUNCHES ITS 1
   Gambi A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P318, DOI 10.1145/3293882.3330566
   Gambi A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3338906.3338942
   Geyer J., 2020, arXiv, DOI DOI 10.48550/ARXIV.2004.06320
   github, 2020, SPACY
   Goodfellow I, 2014, ADV NEURAL INFORM PR, P2672
   Gundling C, 2017, CNN MODEL COMP UDACI
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hobbs J.R., 1977, SIGART Newsletter, V61, P28
   Huang XW, 2017, LECT NOTES COMPUT SC, V10426, P3, DOI 10.1007/978-3-319-63387-9_1
   Katz G, 2017, LECT NOTES COMPUT SC, V10426, P97, DOI 10.1007/978-3-319-63387-9_5
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Kim J, 2020, Arxiv, DOI [arXiv:1907.10830, DOI 10.48550/ARXIV.1907.10830]
   Li RJ, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1630, DOI 10.1145/3368089.3417918
   Liu MY, 2017, ADV NEUR IN, V30
   Liu PY, 2006, PROCEEDINGS OF 2006 INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND CYBERNETICS, VOLS 1-7, P2605
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Ma SQ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P175, DOI 10.1145/3236024.3236082
   Mi XH, 2017, PROCEEDINGS OF THE 2017 INTERNET MEASUREMENT CONFERENCE (IMC'17), P398, DOI 10.1145/3131365.3131369
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   Mitra S, 2013, IEEE SECUR PRIV, V11, P28, DOI 10.1109/MSP.2013.77
   Mohit B., 2014, Natural language processing of semitic languages, P221
   Murphy Christian, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P867
   Paulsen B, 2020, PROC INT CONF SOFTW, P714, DOI 10.1145/3377811.3380337
   Paulsen B, 2020, IEEE INT CONF AUTOM, P784, DOI 10.1145/3324884.3416560
   Pedersen T, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P1024
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Pulina L, 2010, LECT NOTES COMPUT SC, V6174, P243, DOI 10.1007/978-3-642-14295-6_24
   Rahman K., 2020, PROC INT C SOFTW ENG, P420
   Ren XH, 2020, PROC IEEE INT CONF S, P717, DOI 10.1109/ICSME46990.2020.00079
   Riccio V, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P876, DOI 10.1145/3368089.3409730
   SANCHEZGASCA JJ, 1995, 1995 IEEE POWER INDUSTRY COMPUTER APPLICATION CONFERENCE, CONFERENCE PROCEEDINGS, P183, DOI 10.1109/PICA.1995.515182
   Schmid H., 1994, Proceedings of the 15th conference on Computational linguistics, P172
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Seokhyun Lee, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P165, DOI 10.1145/3395363.3397346
   Shah S., 2017, Field and service robotics, DOI 10.1007/978-3-319-67361-5_40
   shorturl, 2017, CHAUFFEUR
   Sim J, 2005, PHYS THER, V85, P257
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Singh G, 2018, ADV NEUR IN, V31
   Stocco A., 2021, arXiv
   Studer R, 1998, DATA KNOWL ENG, V25, P161, DOI 10.1016/S0169-023X(97)00056-6
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Tao GH, 2020, PROC INT CONF SOFTW, P986, DOI 10.1145/3377811.3380423
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Udacity, 2017, UD CHALL 2 STEER ANG
   Wang SQ, 2018, ADV NEUR IN, V31
   Wang TC, 2018, PROC CVPR IEEE, P8798, DOI 10.1109/CVPR.2018.00917
   Wicker M, 2018, LECT NOTES COMPUT SC, V10805, P408, DOI 10.1007/978-3-319-89960-2_22
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Yang ZY, 2018, INT C PATT RECOG, P2289, DOI 10.1109/ICPR.2018.8546189
   Yu FS, 2020, Arxiv, DOI arXiv:1805.04687
   Zhang H, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P376, DOI 10.1109/ASE.2019.00043
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang XY, 2016, CAAI T INTELL TECHNO, V1, P4, DOI 10.1016/j.trit.2016.03.003
   Zheng X, 2017, IEEE SYST J, V11, P2614, DOI 10.1109/JSYST.2015.2496293
   Zhou HS, 2020, PROC INT CONF SOFTW, P347, DOI 10.1145/3377811.3380422
   Zhou ZQ, 2019, COMMUN ACM, V62, P61, DOI 10.1145/3241979
NR 90
TC 2
Z9 2
U1 8
U2 19
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1964
EP 1982
DI 10.1109/TSE.2022.3206427
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600031
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Nikolaidis, N
   Mittas, N
   Ampatzoglou, A
   Arvanitou, EM
   Chatzigeorgiou, A
AF Nikolaidis, Nikolaos
   Mittas, Nikolaos
   Ampatzoglou, Apostolos
   Arvanitou, Elvira-Maria
   Chatzigeorgiou, Alexander
TI Assessing TD Macro-Management: A Nested Modeling Statistical Approach
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Software; Logic gates; Informatics; Quality control; Project
   management; Benchmark testing; Technical debt; metrics; measurement;
   quality analysis and evaluation; software maintenance
ID TECHNICAL DEBT
AB Quality improvement can be performed at the: (a) micro-management level: interventions applied at a fine-grained level (e.g., at a class or method level, by applying a refactoring); or (b) macro-management level: interventions applied at a large-scale (e.g., at project level, by using a new framework or imposing a quality gate). By considering that the outcome of any activity can be characterized as the product of impact and scale, in this paper we aim at exploring the impact of Technical Debt (TD) Macro-Management, whose scale is by definition larger than TD Micro-Management. By considering that TD artifacts reside at the micro-level, the problem calls for a nested model solution; i.e., modeling the structure of the problem: artifacts have some inherent characteristics (e.g., size and complexity), but obey the same project management rules (e.g., quality gates, CI/CD features, etc.). In this paper, we use the Under-Bagging based Generalized Linear Mixed Models approach, to unveil project management activities that are associated with the existence of HIGH_TD artifacts, through an empirical study on 100 open-source projects. The results of the study confirm that micro-management parameters are associated with the probability of a class to be classified as HIGH_TD, but the results can be further improved by controlling some project-level parameters. Based on the findings of our nested analysis, we can advise practitioners on macro-technical debt management approaches (such as "control the number of commits per day", "adopt quality control practices", and "separate testing and development teams") that can significantly reduce the probability of all software artifacts to concentrate HIGH_TD. Although some of these findings are intuitive, this is the first work that delivers empirical quantitative evidence on the relation between TD values and project- or process-level metrics.
C1 [Nikolaidis, Nikolaos; Ampatzoglou, Apostolos; Arvanitou, Elvira-Maria; Chatzigeorgiou, Alexander] Univ Macedonia, Dept Appl Informat, Thessaloniki 54636, Greece.
   [Mittas, Nikolaos] Int Hellenic Univ, Dept Chem, Kavala 65404, Greece.
C3 University of Macedonia
RP Ampatzoglou, A (corresponding author), Univ Macedonia, Dept Appl Informat, Thessaloniki 54636, Greece.
EM nnikolaidis@uom.edu.gr; nmittas@chem.ihu.gr; a.ampatzoglou@uom.edu.gr;
   e.arvanitou@uom.edu.gr; achat@uom.edu.gr
RI Chatzigeorgiou, Alexandros/AAL-6077-2021
OI Mittas, Nikolaos/0000-0003-3061-7864; Chatzigeorgiou,
   Alexander/0000-0002-5381-8418
FU University of Macedonia Research Committee through the "Principal
   Research 2020" funding Program; action "Strengthening Human Resources
   Research Potential via Doctorate Research" through the Operational
   Program "Human Resources Development Program, Education and Lifelong
   Learning, 2014-2020" from State Scholarship Foundation (IKY); European
   Social Fund; Greek Public, National Strategic Reference Framework (NSRF)
   2014-2020; SmartCLIDE Project through European Union's Horizon 2020
   Research and Innovation Programme [871177]; H2020 - Industrial
   Leadership [871177] Funding Source: H2020 - Industrial Leadership
FX The work of Nikolaos Nikolaidis was supported by the University of
   Macedonia Research Committee through the "Principal Research 2020"
   funding Program. The work of Elvira-Maria Arvanitou was supported in
   part by action "Strengthening Human Resources Research Potential via
   Doctorate Research" through the Operational Program "Human Resources
   Development Program, Education and Lifelong Learning, 2014-2020",
   implemented from State Scholarship Foundation (IKY) and in part by
   European Social Fund and the Greek Public, National Strategic Reference
   Framework (NSRF) 2014-2020. The work of Alexander Chatzigeorgiou and
   Apostolos Ampatzoglou was supported by SmartCLIDE Project through
   European Union's Horizon 2020 Research and Innovation Programme under
   Grant 871177.
CR Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Amanatidis T, 2020, EMPIR SOFTW ENG, V25, P4161, DOI 10.1007/s10664-020-09869-w
   Ammann P., 2008, INTRO SOFTWARE, V1st
   Ampatzoglou Apostolos, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P255, DOI 10.1109/ESEM.2013.48
   Ampatzoglou A, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106412
   Ampatzoglou A, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P115, DOI 10.1145/3194164.3194175
   Aniche M., 2015, Tech. Rep.
   Arvanitou EM, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P123, DOI 10.1145/3319008.3319019
   Arvanitou EM, 2016, INFORM SOFTWARE TECH, V72, P110, DOI 10.1016/j.infsof.2015.12.010
   Asklund U., 2002, IEE Proceedings-Software, V149, P40, DOI 10.1049/ip-sen:20020196
   Batista G. E., 2004, ACM SIGKDD EXPL NEWS, V6, P20, DOI DOI 10.1145/1007730.1007735
   BenIdris Mrwan., 2020, Investigate, identify and estimate the technical debt: a systematic mapping study
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Carvalho DV, 2019, ELECTRONICS-SWITZ, V8, DOI 10.3390/electronics8080832
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Falessi D, 2021, 2021 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2021), P45, DOI 10.1109/TechDebt52882.2021.00014
   Harrison XA, 2018, PEERJ, V6, DOI 10.7717/peerj.4794
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Jiang J, 2007, SPRINGER SER STAT, P1, DOI 10.1007/978-0-387-47946-0
   Lenarduzzi V., 2020, PROC 14 INT S EMPIRI, P1
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Martini A, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1877
   Martini A, 2014, EUROMICRO CONF PROC, P85, DOI 10.1109/SEAA.2014.65
   Raghuwanshi BS, 2019, NEUROCOMPUTING, V329, P172, DOI 10.1016/j.neucom.2018.10.056
   Riaz M, 2009, INT SYMP EMP SOFTWAR, P368, DOI 10.1109/esem.2009.5314233
   Rios N, 2020, EMPIR SOFTW ENG, V25, P3216, DOI 10.1007/s10664-020-09832-9
   Saarimaki N, 2022, EUR CON SFTWR MTNCE, P36, DOI 10.1109/SANER53432.2022.00015
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Tsoukalas D, 2022, IEEE T SOFTWARE ENG, V48, P4892, DOI 10.1109/TSE.2021.3129355
   Tsoukalas D, 2022, INTERNATIONAL CONFERENCE ON TECHNICAL DEBT 2022 (TECHDEBT 2022), P76, DOI 10.1145/3524843.3528094
   van Koten C, 2006, INFORM SOFTWARE TECH, V48, P59, DOI 10.1016/j.infsof.2005.03.002
   Vliet H. V., 2008, SOFTWARE ENG PRINCIP
   Yli-Huumo J, 2016, J SYST SOFTWARE, V120, P195, DOI 10.1016/j.jss.2016.05.018
   Zazworka N., 2013, Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering, DOI DOI 10.1145/2460999.2461005.ASSOCIATIONFORCOMPUTINGMACHINERY
   Zazworka N, 2014, SOFTWARE QUAL J, V22, P403, DOI 10.1007/s11219-013-9200-8
NR 35
TC 1
Z9 1
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2996
EP 3007
DI 10.1109/TSE.2023.3237460
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600089
DA 2024-07-18
ER

PT J
AU Jin, WX
   Zhong, DH
   Cai, YF
   Kazman, R
   Liu, T
AF Jin, Wuxia
   Zhong, Dinghong
   Cai, Yuanfang
   Kazman, Rick
   Liu, Ting
TI Evaluating the Impact of Possible Dependencies on Architecture-Level
   Maintainability
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Python; Computer architecture; Syntactics; Java; Software
   architecture; Annotations; Dynamic typing; possible dependency; software
   architecture; empirical study
ID SOFTWARE; INFORMATION
AB Dependencies among software entities are the foundation for much of the research on software architecture analysis and architecture analysis tools. Dynamically typed languages, such as Python, JavaScript and Ruby, tolerate the lack of explicit type references, making certain dependencies indiscernible by a purely syntactic analysis of source code. We call these possible dependencies, in contrast with the explicit dependencies that are directly manifested in source code. We find that existing architecture analysis tools have not taken possible dependencies into consideration. An important question therefore is: to what extent will these missing possible dependencies impact architecture analysis?To answer this question, we conducted a study of 499 open-source Python projects, employing type inference techniques and type hint practices to discern possible dependencies. We investigated the consequences of possible dependencies in three software maintenance contexts, including capturing co-change relations recorded in revision history, measuring architectural maintainability, and detecting architecture anti-patterns that violate design principles and impact maintainability. Our study revealed that the impact of possible dependencies on architecture-level maintainability is substantial-higher than that of explicit dependencies. Our findings suggest that architecture analysis and tools should take into account, assess, and highlight the impacts of possible dependencies caused by dynamic typing.
C1 [Jin, Wuxia] Xi An Jiao Tong Univ, Sch Software Engn, Xian 710049, Shaanxi, Peoples R China.
   [Jin, Wuxia; Zhong, Dinghong; Liu, Ting] Xi An Jiao Tong Univ, Minist Educ Key Lab Intelligent Networks, Network Secur MOEKLINNS, Xian 710049, Shaanxi, Peoples R China.
   [Cai, Yuanfang] Drexel Univ, Dept Comp Sci, Philadelphia, PA 19104 USA.
   [Kazman, Rick] Univ Hawaii, Dept Informat Technol Management, Honolulu, HI 96822 USA.
C3 Xi'an Jiaotong University; Xi'an Jiaotong University; Drexel University;
   University of Hawaii System
RP Liu, T (corresponding author), Xi An Jiao Tong Univ, Minist Educ Key Lab Intelligent Networks, Network Secur MOEKLINNS, Xian 710049, Shaanxi, Peoples R China.
EM jinwuxia@mail.xjtu.edu.cn; zhongdh@stu.xjtu.edu.cn; yfcai@cs.drexel.edu;
   kazman@hawaii.edu; tingliu@mail.xjtu.edu.cn
FU National Key R&D Program of China [2018YFB1004500]; National Natural
   Science Foundation of China [62002280, 61721002, 61833015, 61902306];
   Fundamental Research Funds for the Central Universities; China
   Postdoctoral Science Foundation [2020M683507, 2019TQ0251, 2020M673439];
   Youth Talent Support Plan of Xi'an Association for Science and
   Technology [095920201303]; United States National Sciences Foundation
   [1835292, 1823177, 1817267, 1816594]
FX This work was supported in part by the National Key R & D Program of
   Chinaunder Grant 2018YFB1004500, in part by the National Natural Science
   Foundation of China under Grants 62002280, 61721002, 61833015, and
   61902306, inpart by the Fundamental Research Funds for the Central
   Universities, China Postdoctoral Science Foundation under Grants
   2020M683507, 2019TQ0251,and 2020M673439, and in part by the Youth Talent
   Support Plan of Xi'an Association for Science and Technology under Grant
   095920201303. This work wasalso supported by the United States National
   Sciences Foundation under Grants 1835292, 1823177, 1817267, and 1816594.
CR Ajienka N, 2017, J SYST SOFTWARE, V134, P120, DOI 10.1016/j.jss.2017.08.042
   Akerblom B., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P292
   Åkerblom B, 2016, ACM SIGPLAN NOTICES, V51, P114, DOI [10.1145/2936313.2816717, 10.1145/2816707.2816717]
   [Anonymous], 2012, P 11 ANN INT C ASP O
   [Anonymous], 2012, SIGSOFT
   ArchDia, 2022, US
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   Aycock John, 2000, P 8 INT PYTH C, V1050, P18
   Badri L, 2005, 12TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P167, DOI 10.1109/APSEC.2005.100
   Baldwin C. Y., 2000, Design rules: The power of modularity, DOI DOI 10.7551/MITPRESS/2366.001.0001
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bavota G, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P692, DOI 10.1109/ICSE.2013.6606615
   Bertran IM, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1090, DOI 10.1145/1985793.1986003
   Bird C., 2015, The Art and Science of Analyzing Software Data
   Bouktif S, 2006, WORK CONF REVERSE EN, P221
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P43, DOI 10.1109/METRIC.1997.637164
   Cai YF, 2019, IEEE T SOFTWARE ENG, V45, P657, DOI 10.1109/TSE.2018.2797899
   Chatterjee M., 2002, Cluster Computing, V5, P193, DOI 10.1023/A:1013941929408
   Chen ZF, 2020, INT C PROGRAM COMPRE, P83, DOI 10.1145/3387904.3389253
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Codabux Z, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P704, DOI 10.1145/2889160.2892643
   Cui D, 2019, PROC INT CONF SOFTW, P584, DOI 10.1109/ICSE.2019.00069
   docs P., 2022, US
   Fan M, 2018, IEEE T INF FOREN SEC, V13, P1890, DOI 10.1109/TIFS.2018.2806891
   Fan M, 2017, IEEE T INF FOREN SEC, V12, P1772, DOI 10.1109/TIFS.2017.2687880
   Feng Q, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P986, DOI 10.1109/ASE.2019.00095
   Finder D., 2022, US
   Fontana FA, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P282, DOI 10.1109/ICSAW.2017.16
   Fontana FA, 2016, PROC IEEE INT CONF S, P433, DOI 10.1109/ICSME.2016.33
   Furr Michael, 2009, P 2009 ACM S APPL CO, P1859
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   Hassan A. E., 2005, P 12 WORK C REV ENG
   Hellendoorn VJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P152, DOI 10.1145/3236024.3236051
   Hoa Khanh Dam, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P46, DOI 10.1109/MSR.2019.00017
   Jaafar F., 2011, 2011 18th Working Conference on Reverse Engineering, P325, DOI 10.1109/WCRE.2011.47
   Jensen SH, 2009, LECT NOTES COMPUT SC, V5673, P238, DOI 10.1007/978-3-642-03237-0_17
   Jin W-D., 2020, Adv. Neural Inf. Process. Syst., P18749
   Jin WX, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P529, DOI 10.1109/ASE51524.2021.9678947
   Jin WX, 2021, IEEE T SOFTWARE ENG, V47, P987, DOI 10.1109/TSE.2019.2910531
   Jin WX, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P67, DOI 10.1109/ICSE-Companion.2019.00040
   Jin WX, 2018, SOFTWARE QUAL J, V26, P1119, DOI 10.1007/s11219-017-9369-3
   Kagdi H., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P119, DOI 10.1109/WCRE.2010.21
   Kagdi Huzefa, 2007, Proceedings of 22nd IEEE/ACM International Conference on Automated Software Engineering (ASE'07), P559
   Kaur A., 2015, J. Comput. Math. Sci, V6, P336, DOI 10.1016/j.compmath.2015.08.003
   Kleinschmager S., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P153
   Landman D, 2017, PROC INT CONF SOFTW, P507, DOI 10.1109/ICSE.2017.53
   Lattes, 2022, about us
   Le D., 2017, CLASSIFICATION FRAME
   Le DM, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P235, DOI 10.1109/MSR.2015.29
   Li BX, 2013, SOFTW TEST VERIF REL, V23, P613, DOI 10.1002/stvr.1475
   Liu JC, 2021, 2021 IEEE MTT-S INTERNATIONAL WIRELESS SYMPOSIUM (IWS 2021), DOI 10.1109/IWS52775.2021.9499583
   Lutellier T, 2018, IEEE T SOFTWARE ENG, V44, P159, DOI 10.1109/TSE.2017.2671865
   MacCormack A, 2006, MANAGE SCI, V52, P1015, DOI 10.1287/mnsc.1060.0552
   Macia I, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P662, DOI 10.1109/ICSM.2012.6405348
   Malik RS, 2019, PROC INT CONF SOFTW, P304, DOI 10.1109/ICSE.2019.00045
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Milojkovic N, 2017, INT C PROGRAM COMPRE, P312, DOI 10.1109/ICPC.2017.10
   Mo R, 2021, IEEE T SOFTWARE ENG, V47, P1008, DOI 10.1109/TSE.2019.2910856
   Mo R, 2018, IEEE INT CONF AUTOM, P779, DOI 10.1145/3238147.3240467
   Mo R, 2016, PROC INT CONF SOFTW, P499, DOI 10.1145/2884781.2884825
   Mo R, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P51, DOI 10.1109/WICSA.2015.12
   Multilang-depends, 2022, US
   Myers L., 2004, Encyclopedia of statistical sciences, DOI [10.1002/0471667196.ess5050, DOI 10.1002/0471667196.ESS5050]
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nanz S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P778, DOI 10.1109/ICSE.2015.90
   Paixao M, 2017, IEEE INT CONF AUTOM, P95, DOI 10.1109/ASE.2017.8115622
   PALSBERG J, 1991, SIGPLAN NOTICES, V26, P146
   Patel C, 2009, EUR CON SFTWR MTNCE, P27, DOI 10.1109/CSMR.2009.62
   Peng Y, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P24, DOI 10.1109/SANER50967.2021.00012
   Petrenko M, 2009, INT C PROGRAM COMPRE, P10, DOI 10.1109/ICPC.2009.5090023
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Python, 2022, ABOUT US
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Rigo Armin, 2006, COMP 21 ACM SIGPLAN, P944, DOI DOI 10.1145/1176617.1176753
   Rolfsnes T, 2017, IEEE INT CONF AUTOM, P694, DOI 10.1109/ASE.2017.8115680
   S. Understand, 2022, US
   Sas D., 2021, SN COMPUT SCI, V2, P1
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   SonarQube, 2022, About us
   Sourcetrail, 2022, US
   Structure101, 2022, US
   Sundaresan V, 2000, ACM SIGPLAN NOTICES, V35, P264, DOI 10.1145/354222.353189
   Tian ZZ, 2015, IEEE T SOFTWARE ENG, V41, P1217, DOI 10.1109/TSE.2015.2454508
   Wang B, 2015, Soc. Sci. Res, P134
   Wang HJ, 2017, IEEE T SOFTWARE ENG, V43, P252, DOI 10.1109/TSE.2016.2584063
   Wei L., 2017, PROC IEEE INT C SOFT, P188
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Wiese IS, 2017, J SYST SOFTWARE, V128, P220, DOI 10.1016/j.jss.2016.07.016
   Wong S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P411, DOI 10.1145/1985793.1985850
   Wong S, 2009, IEEE INT CONF AUTOM, P197, DOI 10.1109/ASE.2009.53
   Xiao L, 2016, PROC INT CONF SOFTW, P488, DOI 10.1145/2884781.2884822
   Xu ZG, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P607, DOI 10.1145/2950290.2950343
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 98
TC 2
Z9 2
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2023
VL 49
IS 3
BP 1064
EP 1085
DI 10.1109/TSE.2022.3171288
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA A1QF2
UT WOS:000952938700007
DA 2024-07-18
ER

PT J
AU He, DJ
   Lu, JB
   Gao, YQ
   Xue, JL
AF He, Dongjie
   Lu, Jingbo
   Gao, Yaoqing
   Xue, Jingling
TI Selecting Context-Sensitivity Modularly for Accelerating
   Object-Sensitive Pointer Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Object-sensitive pointer analysis; CFL reachability; object containment;
   modular static analysis
ID TO ANALYSIS; PRECISE
AB Object-sensitive pointer analysis (denoted kOBJ under k-limiting) for an object-oriented program can be accelerated if context-sensitivity can be selectively applied to only some precision-critical variables/objects in a program. Existing pre-analyses for making such selections, which are performed as whole-program analyses to a program, are developed based on two broad approaches. One approach preserves the precision of object-sensitive pointer analysis but achieves limited speedups by reasoning about all the possible value flows in the program conservatively, while the other approach achieves greater speedups but sacrifices precision (often unduly) by examining only some but not all the value flows in the program heuristically. In this paper, we introduce a new pre-analysis approach, TURNERm (where m stands for modularity), that represents a sweet spot between these two existing ones, as it is designed to enable kOBJ to run significantly faster than the former approach and achieve significantly better precision than the latter approach. TURNERm is simple, lightweight yet effective due to two novel aspects in its design. First, we exploit a key observation that some precision-uncritical objects in the program can be approximated based on the object-containment relationship pre-established (from Andersen's analysis). In practice, this approximation introduces only a small degree of imprecision into kOBJ. Second, leveraging this initial approximation, we apply a novel object reachability analysis to the program by pre-analyzing its methods according to a reverse topological order of its call graph. When pre-analyzing each method, we make use of a simple DFA (Deterministic Finite Automaton) to reason about object reachability intra-procedurally from its entry to its exit along all the possible value flows established by its statements to identify its precision-critical variables/objects. In practice, this new modular object reachability analysis, which runs linearly in terms of the number of statements in the program, introduces again only a small loss of precision into kOBJ. We have validated TURNERm with an open-source implementation in SOOT (already publicly available) against the state of the art by using a set of 12 widely used Java benchmarks and applications.
C1 [He, Dongjie; Lu, Jingbo; Xue, Jingling] Univ New South Wales Sydney, Sydney, NSW 2052, Australia.
   [Gao, Yaoqing] Huawei, Markham, ON L3R 5A4, Canada.
C3 University of New South Wales Sydney; Huawei Technologies
RP Xue, JL (corresponding author), Univ New South Wales Sydney, Sydney, NSW 2052, Australia.
EM dongjieh@cse.unsw.edu.au; jlu@cse.unsw.edu.au; YaoqingGao@gmail.com;
   jingling@cse.unsw.edu.au
OI He, Dongjie/0000-0003-0304-8942; Lu, Jingbo/0000-0003-4070-3942
FU ARC [DP180104069, DP210102409]
FX This work was supported by ARC Grants DP180104069 and
   DP210102409.(Corresponding author: Jingling Xue.)
CR Andersen L. O., 1994, Ph.D. thesis
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Bodden E, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P241, DOI 10.1145/1985793.1985827
   Bravenboer M, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P1
   Bravenboer M, 2009, ACM SIGPLAN NOTICES, V44, P243, DOI 10.1145/1639949.1640108
   Fink SJ, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1348250.1348255
   Hassanshahi B., 2017, P 6 ACM SIGPLAN INT, P13
   He D., 2021, PROC 35 EUR C OBJECT
   He DJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P267, DOI 10.1109/ASE.2019.00034
   He DJ, 2018, IEEE INT CONF AUTOM, P167, DOI 10.1145/3238147.3238185
   I. T. W. R. Center, 2020, WALA TJ WATSON LIB A
   Jeon M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276510
   Jeong S, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133924
   Kastrinis G, 2013, ACM SIGPLAN NOTICES, V48, P423, DOI 10.1145/2499370.2462191
   Kodumal J, 2004, ACM SIGPLAN NOTICES, V39, P207, DOI 10.1145/996893.996867
   Kumar P., 2016, PROC ACM SIGPLAN INT, P122
   Lhoták O, 2003, LECT NOTES COMPUT SC, V2622, P153
   Li L., 2011, PROC 19 ACM SIGSOFT, P343
   Li Y., 2016, PROC 30 EUR C OBJECT, p15:1
   Lu JB, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3450492
   Milanova A, 2005, ACM T SOFTW ENG METH, V14, P1, DOI 10.1145/1044834.1044835
   Mohri M., 2001, ROBUSTNESS LANGUAGE, P153
   Naik M, 2006, ACM SIGPLAN NOTICES, V41, P308, DOI 10.1145/1133981.1134018
   Reps T, 1998, INFORM SOFTWARE TECH, V40, P701, DOI 10.1016/S0950-5849(98)00093-7
   Reps T, 2000, ACM T PROGR LANG SYS, V22, P162, DOI 10.1145/345099.345137
   Shang Lei, 2012, P 10 INT S CODE GENE, P264
   Sharir M., 1981, Program flow analysis. Theory and applications, P189
   Shiyi WeiB.G. R., 2015, 29 EUROPEAN C OBJECT, P712
   Smaragdakis Y, 2014, ACM SIGPLAN NOTICES, V49, P485, DOI [10.1145/2666356.2594320, 10.1145/2594291.2594320]
   Smaragdakis Y, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P17, DOI 10.1145/1926385.1926390
   Smaragdakis Yannis, 2021, DOOP FRAMEWORK JAVA
   Spath J., 2016, PROC EUR C OBJECT OR, p22:1, DOI [10.4230/DARTS.2.1.12, DOI 10.4230/LIPICS.ECOOP.2016.22]
   Sridharan M, 2005, ACM SIGPLAN NOTICES, V40, P59, DOI 10.1145/1103845.1094817
   Sridharan Manu, 2013, Aliasing in Object-Oriented Programming. Types, Analysis and Verification: LNCS 7850, P196, DOI 10.1007/978-3-642-36946-9_8
   Sridharan M, 2007, ACM SIGPLAN NOTICES, V42, P112, DOI 10.1145/1273442.1250748
   Sridharan M, 2006, ACM SIGPLAN NOTICES, V41, P387, DOI 10.1145/1133981.1134027
   Sui YL, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P460, DOI 10.1145/2950290.2950296
   Tan T, 2017, ACM SIGPLAN NOTICES, V52, P278, DOI [10.1145/3140587.3062360, 10.1145/3062341.3062360]
   Tan T, 2016, LECT NOTES COMPUT SC, V9837, P489, DOI 10.1007/978-3-662-53413-7_24
   Thiessen R, 2017, ACM SIGPLAN NOTICES, V52, P263, DOI [10.1145/3140587.3062359, 10.1145/3062341.3062359]
   Vall ~ee-Rai R., 2010, CASCON 1 DECADE HIGH, P214, DOI DOI 10.1145/1925805.1925818
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Whaley J, 2004, ACM SIGPLAN NOTICES, V39, P131, DOI 10.1145/996893.996859
   Yan Dacong, 2011, P 2011 INT S SOFTW T, P155, DOI [10.1145/2001420.2001440, DOI 10.1145/2001420.2001440]
   Yao Li, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274377
NR 46
TC 4
Z9 5
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 719
EP 742
DI 10.1109/TSE.2022.3162236
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900014
DA 2024-07-18
ER

PT J
AU Pornprasit, C
   Tantithamthavorn, C
AF Pornprasit, Chanathip
   Tantithamthavorn, Chakkrit (Kla)
TI DeepLineDP: Towards a Deep Learning Approach for Line-Level Defect
   Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Software; Inspection; Social networking (online); Deep learning;
   Predictive models; Semantics; Software quality assurance; line-level
   defect prediction; deep learning; explainable AI
AB Defect prediction is proposed to assist practitioners effectively prioritize limited Software Quality Assurance (SQA) resources on the most risky files that are likely to have post-release software defects. However, there exist two main limitations in prior studies: (1) the granularity levels of defect predictions are still coarse-grained and (2) the surrounding tokens and surrounding lines have not yet been fully utilized. In this paper, we perform a survey study to better understand how practitioners perform code inspection in modern code review process, and their perception on a line-level defect prediction. According to the responses from 36 practitioners, we found that 50% of them spent at least 10 minutes to more than one hour to review a single file, while 64% of them still perceived that code inspection activity is challenging to extremely challenging. In addition, 64% of the respondents perceived that a line-level defect prediction tool would potentially be helpful in identifying defective lines. Motivated by the practitioners' perspective, we present DeepLineDP, a deep learning approach to automatically learn the semantic properties of the surrounding tokens and lines in order to identify defective files and defective lines. Through a case study of 32 releases of 9 software projects, we find that the risk score of code tokens varies greatly depending on their location. Our DeepLineDP is 17%-37% more accurate than other file-level defect prediction approaches; is 47%-250% more cost-effective than other line-level defect prediction approaches; and achieves a reasonable performance when transferred to other software projects. These findings confirm that the surrounding tokens and surrounding lines should be considered to identify the fine-grained locations of defective files (i.e., defective lines).
C1 [Pornprasit, Chanathip; Tantithamthavorn, Chakkrit (Kla)] Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
C3 Monash University
RP Tantithamthavorn, C (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
EM chanathip.sit@gmail.com; chakkrit@monash.edu
OI Tantithamthavorn, Chakkrit/0000-0002-5516-9984; Pornprasit,
   Chanathip/0000-0003-0111-8599
FU Australian Research Council's Discovery Early Career Researcher Award
   (DECRA) [DE200100941]
FX The work of Chakkrit (Kla) Tantithamthavorn was partially supported by
   the Australian Research Council's Discovery Early Career Researcher
   Award (DECRA) funding scheme under Grant DE200100941.
CR Aftandilian E., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P14, DOI 10.1109/SCAM.2012.28
   Akiyama F., 1972, Information Processing 71 Proceedings of the IFIP Congress 1971 Volume 1, P353
   [Anonymous], 2007, NIPS
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bird Christian, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P109, DOI 10.1109/ISSRE.2009.17
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Di Nucci D, 2018, IEEE T SOFTWARE ENG, V44, P5, DOI 10.1109/TSE.2017.2659747
   Habib A, 2018, IEEE INT CONF AUTOM, P317, DOI 10.1145/3238147.3238213
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   Hata H, 2010, EMPIR SOFTW ENG, V15, P147, DOI 10.1007/s10664-009-9117-9
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Herzig K, 2014, PROC INT SYMP SOFTW, P300, DOI 10.1109/ISSRE.2014.21
   Dam HK, 2021, IEEE T SOFTWARE ENG, V47, P67, DOI 10.1109/TSE.2018.2881961
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Jiarpakdee J, 2021, IEEE WORK CONF MIN S, P432, DOI 10.1109/MSR52588.2021.00055
   Jiarpakdee J, 2022, IEEE T SOFTWARE ENG, V48, P166, DOI 10.1109/TSE.2020.2982385
   Jiarpakdee J, 2020, EMPIR SOFTW ENG, V25, P3590, DOI 10.1007/s10664-020-09848-1
   Jiarpakdee J, 2021, IEEE T SOFTWARE ENG, V47, P320, DOI 10.1109/TSE.2019.2891758
   Jiarpakdee J, 2018, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSME.2018.00018
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Kamei Yasutaka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P196
   Kamei Y, 2010, PROC IEEE INT CONF S
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Khanan C, 2020, IEEE INT CONF AUTOM, P1336, DOI 10.1145/3324884.3415295
   Kingma D. P., 2014, arXiv
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Li JD, 2018, ACM COMPUT SURV, V50, DOI 10.1145/3136625
   Li Y, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360588
   Li Z, 2018, Arxiv, DOI arXiv:1801.01681
   Lin GJ, 2018, IEEE T IND INFORM, V14, P3289, DOI 10.1109/TII.2018.2821768
   Majd A, 2020, EXPERT SYST APPL, V147, DOI 10.1016/j.eswa.2019.113156
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P343, DOI 10.1109/ASE.2011.6100072
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mi H., 2016, arXiv
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Pornprasit C, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P407, DOI 10.1109/ASE51524.2021.9678763
   Pornprasit C, 2021, IEEE WORK CONF MIN S, P369, DOI 10.1109/MSR52588.2021.00049
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Rahman M, 2019, PROC INT CONF SOFTW, P37, DOI 10.1109/ICSE.2019.00022
   Rajapaksha D, 2022, IEEE T SOFTWARE ENG, V48, P2814, DOI 10.1109/TSE.2021.3070559
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   Tantithamthavorn C, 2020, Arxiv, DOI arXiv:2012.01614
   Tantithamthavorn C, 2021, IEEE SOFTWARE, V38, P115, DOI 10.1109/MS.2021.3072088
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Thongtanunam P, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P168, DOI 10.1109/MSR.2015.23
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Vassallo C, 2018, IEEE INT CONF AUTOM, P790, DOI 10.1145/3238147.3240729
   Vaswani A, 2017, ADV NEUR IN, V30
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wang S, 2016, IEEE INT CONF AUTOM, P708, DOI 10.1145/2970276.2970341
   Watson C, 2021, Arxiv, DOI arXiv:2009.06520
   Wattanakriengkrai S, 2020, Arxiv, DOI arXiv:2009.03612
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Yang Z., 2016, P 2016 C N AM CHAPT, P1480, DOI [DOI 10.18653/V1/N16-1174, 10.18653/v1/n16-1174]
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zou DQ, 2021, IEEE T DEPEND SECURE, V18, P2224, DOI 10.1109/TDSC.2019.2942930
NR 80
TC 29
Z9 29
U1 6
U2 31
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 84
EP 98
DI 10.1109/TSE.2022.3144348
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 7X2BG
UT WOS:000914007500001
DA 2024-07-18
ER

PT J
AU Ciniselli, M
   Cooper, N
   Pascarella, L
   Mastropaolo, A
   Aghajani, E
   Poshyvanyk, D
   Di Penta, M
   Bavota, G
AF Ciniselli, Matteo
   Cooper, Nathan
   Pascarella, Luca
   Mastropaolo, Antonio
   Aghajani, Emad
   Poshyvanyk, Denys
   Di Penta, Massimiliano
   Bavota, Gabriele
TI An Empirical Study on the Usage of Transformer Models for Code
   Completion
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Code completion; deep learning; empirical software engineering
ID RECOMMENDATION
AB Code completion aims at speeding up code writing by predicting the next code token(s) the developer is likely to write. Works in this field focused on improving the accuracy of the generated predictions, with substantial leaps forward made possible by deep learning (DL) models. However, code completion techniques are mostly evaluated in the scenario of predicting the next token to type, with few exceptions pushing the boundaries to the prediction of an entire code statement. Thus, little is known about the performance of state-of-the-art code completion approaches in more challenging scenarios in which, for example, an entire code block must be generated. We present a large-scale study exploring the capabilities of state-of-the-art Transformer-based models in supporting code completion at different granularity levels, including single tokens, one or multiple entire statements, up to entire code blocks (e.g., the iterated block of a for loop). We experimented with several variants of two recently proposed Transformer-based models, namely RoBERTa and the Text-To-Text Transfer Transformer (T5), for the task of code completion. The achieved results show that Transformer-based models, and in particular the T5, represent a viable solution for code completion, with perfect predictions ranging from similar to 29%, obtained when asking the model to guess entire blocks, up to -69%, reached in the simpler scenario of few tokens masked from the same code statement.
C1 [Ciniselli, Matteo; Pascarella, Luca; Mastropaolo, Antonio; Aghajani, Emad; Bavota, Gabriele] Univ Svizzera italiana, SEART Software Inst, CH-6900 Lugano, Switzerland.
   [Cooper, Nathan; Poshyvanyk, Denys] SEMERU William &Mary, Williamsburg, VA 23185 USA.
   [Di Penta, Massimiliano] Univ Sannio, I-82100 Benevento, BN, Italy.
C3 Universita della Svizzera Italiana; University of Sannio
RP Bavota, G (corresponding author), Univ Svizzera italiana, SEART Software Inst, CH-6900 Lugano, Switzerland.
EM matteo.ciniselli@usi.ch; nacooper01@email.wm.edu;
   luca.pascarella@usi.ch; antonio.mastropaolo@usi.ch;
   emad.aghajani@usi.ch; denys@cs.wm.edu; dipenta@unisannio.it;
   gabriele.bavota@usi.ch
RI Pascarella, Luca/AFM-2533-2022; Pascarella, Luca/HKO-7228-2023
OI Pascarella, Luca/0000-0001-8289-7736; Pascarella,
   Luca/0000-0001-8289-7736; BAVOTA, Gabriele/0000-0002-2216-3148
FU European Research Council (ERC) under the European Union's Horizon 2020
   Research and Innovation Programme [851720]; NSF [CCF-1955853,
   CCF-2007246]
FX This work was supported by the European Research Council (ERC) under the
   European Union's Horizon 2020 Research and Innovation Programme under
   Grant 851720. W&M co-authors have been supported in part by the NSF
   under Grants CCF-1955853 and CCF-2007246.
CR Allamanis M., CODESEARCHNET DEDUPL
   Alon U., 2020, INT C MACHINE LEARNI, P245
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Nguyen AT, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P362, DOI [10.1145/2901739.2901759, 10.1109/MSR.2016.044]
   Nguyen AT, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P858, DOI 10.1109/ICSE.2015.336
   Nguyen AT, 2012, PROC INT CONF SOFTW, P69, DOI 10.1109/ICSE.2012.6227205
   [Anonymous], N GRAM CACHED MODEL
   [Anonymous], SCRML WEBSITE
   [Anonymous], 2008, The Concise Encyclopedia of Statistics, P68, DOI [10.1007/978-0-387-32833-153, 10.1007/978-0-387-32833-1, DOI 10.1007/978-0-387-32833-1]
   [Anonymous], 2010, P 32 ACMIEEE INT C S
   [Anonymous], Github copilot
   [Anonymous], 2007, P 22 IEEE ACM INT C
   [Anonymous], WEIGHTS BIASES WEBSI
   [Anonymous], HUGGING FACES TOKENI
   Aye GA, 2020, Arxiv, DOI arXiv:2004.05249
   Asaduzzaman M, 2017, PROC IEEE INT CONF S, P456, DOI 10.1109/ICSME.2017.80
   Asaduzzaman M, 2014, PROC IEEE INT CONF S, P621, DOI 10.1109/ICSME.2014.110
   Aye GA, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P131, DOI 10.1109/ICSE-SEIP52600.2021.00022
   Bader J, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360585
   Bajracharya S., 2006, COMP 21 ACM SIGPLAN, P681, DOI DOI 10.1145/1176617.1176671
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bhoopchand A., 2016, arXiv
   Brody S, 2020, Arxiv, DOI arXiv:2005.13209
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Chen C, 2022, IEEE T SOFTWARE ENG, V48, P2987, DOI 10.1109/TSE.2021.3074309
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Ciniselli M, REPLICATION PACKAGE
   Ciniselli M, 2021, IEEE WORK CONF MIN S, P108, DOI 10.1109/MSR52588.2021.00024
   Dabic O, 2021, IEEE WORK CONF MIN S, P560, DOI 10.1109/MSR52588.2021.00074
   Daqing Hou, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P233, DOI 10.1109/ICSM.2011.6080790
   Devlin J, 2018, N AM ASS COMP LING
   Dreyer M., 2012, P 2012 C N AM CHAPTE
   Franks C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P705, DOI 10.1109/ICSE.2015.228
   Gage P., 1994, C Users Journal, V12, P23
   Geiger FX, 2018, IEEE WORK CONF MIN S, P30, DOI 10.1145/3196398.3196460
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Gvero T, 2013, ACM SIGPLAN NOTICES, V48, P27, DOI 10.1145/2499370.2462192
   Han S, 2011, AUTOMAT SOFTW ENG, V18, P363, DOI 10.1007/s10515-011-0083-2
   Han S, 2009, IEEE INT CONF AUTOM, P332, DOI 10.1109/ASE.2009.64
   Hellendoorn VJ, 2019, PROC INT CONF SOFTW, P960, DOI 10.1109/ICSE.2019.00101
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Hill R, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P228, DOI 10.1109/ASE.2004.1342740
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Jiang L, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P614, DOI 10.1109/ASE.2019.00062
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   Jin XH, 2018, IEEE WORK CONF MIN S, P70, DOI 10.1145/3196398.3196474
   Kanade A, 2020, PR MACH LEARN RES, V119
   Karampatsis RM, 2019, Arxiv, DOI arXiv:1903.05734
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Kim S, 2021, PROC INT CONF SOFTW, P150, DOI 10.1109/ICSE43902.2021.00026
   Kudo T, 2018, CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018): PROCEEDINGS OF SYSTEM DEMONSTRATIONS, P66
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Li J, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4159
   Liu F, 2020, IEEE INT CONF AUTOM, P473, DOI 10.1145/3324884.3416591
   Liu H, 2022, IEEE T SOFTWARE ENG, V48, P1268, DOI 10.1109/TSE.2020.3018481
   Liu YH, 2019, Arxiv, DOI arXiv:1907.11692
   Mäder P, 2021, IEEE T SOFTWARE ENG, V47, P1431, DOI 10.1109/TSE.2019.2924886
   Mandelin D, 2005, ACM SIGPLAN NOTICES, V40, P48, DOI 10.1145/1064978.1065018
   Martins P, 2018, IEEE WORK CONF MIN S, P1, DOI 10.1145/3196398.3196450
   Mastropaolo A, 2021, PROC INT CONF SOFTW, P336, DOI 10.1109/ICSE43902.2021.00041
   McMillan C, 2012, IEEE T SOFTWARE ENG, V38, P1069, DOI 10.1109/TSE.2011.84
   McNemar Q, 1947, PSYCHOMETRIKA, V12, P153, DOI 10.1007/BF02295996
   Niu HR, 2017, J SYST SOFTWARE, V129, P127, DOI 10.1016/j.jss.2016.07.026
   Proksch S, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2744200
   Raemaekers S, 2013, IEEE WORK CONF MIN S, P221, DOI 10.1109/MSR.2013.6624031
   Raffel C, 2020, J MACH LEARN RES, V21
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Reiss SP, 2009, PROC INT CONF SOFTW, P243, DOI 10.1109/ICSE.2009.5070525
   Ren S, 2020, Arxiv, DOI [arXiv:2009.10297, 10.48550/arXiv.2009.10297]
   Robbes R, 2010, AUTOMAT SOFTW ENG, V17, P181, DOI 10.1007/s10515-010-0064-x
   Svyatkovskiy A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1433, DOI 10.1145/3368089.3417058
   Svyatkovskiy A, 2021, IEEE WORK CONF MIN S, P329, DOI 10.1109/MSR52588.2021.00045
   Thummalapenta Suresh, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P327, DOI 10.1109/ASE.2008.43
   Tu ZP, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P269, DOI 10.1145/2635868.2635875
   Tufano M, 2021, Arxiv, DOI [arXiv:2009.05617, 10.48550/ARXIV.2009.05617]
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Vaswani A, 2017, ADV NEUR IN, V30
   Watson C, 2020, PROC INT CONF SOFTW, P1398, DOI 10.1145/3377811.3380429
   Wen FC, 2021, PROC INT CONF SOFTW, P138, DOI 10.1109/ICSE43902.2021.00025
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wolf T, 2020, Arxiv, DOI arXiv:1910.03771
   Zhang C, 2012, PROC INT CONF SOFTW, P826, DOI 10.1109/ICSE.2012.6227136
NR 87
TC 23
Z9 23
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 4818
EP 4837
DI 10.1109/TSE.2021.3128234
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600006
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Mehrotra, N
   Agarwal, N
   Gupta, P
   Anand, S
   Lo, D
   Purandare, R
AF Mehrotra, Nikita
   Agarwal, Navdha
   Gupta, Piyush
   Anand, Saket
   Lo, David
   Purandare, Rahul
TI Modeling Functional Similarity in Source Code With Graph-Based Siamese
   Networks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cloning; Semantics; Syntactics; Deep learning; Arrays; Tools; Neural
   networks; Program representation learning; semantic code clones;
   graph-based neural networks; siamese neural networks; program dependency
   graphs
ID CLONE; FRAMEWORK
AB Code clones are duplicate code fragments that share (nearly) similar syntax or semantics. Code clone detection plays an important role in software maintenance, code refactoring, and reuse. A substantial amount of research has been conducted in the past to detect clones. A majority of these approaches use lexical and syntactic information to detect clones. However, only a few of them target semantic clones. Recently, motivated by the success of deep learning models in other fields, including natural language processing and computer vision, researchers have attempted to adopt deep learning techniques to detect code clones. These approaches use lexical information (tokens) and(or) syntactic structures like abstract syntax trees (ASTs) to detect code clones. However, they do not make sufficient use of the available structural and semantic information, hence limiting their capabilities. This paper addresses the problem of semantic code clone detection using program dependency graphs and geometric neural networks, leveraging the structured syntactic and semantic information. We have developed a prototype tool Holmes, based on our novel approach and empirically evaluated it on popular code clone benchmarks. Our results show that Holmes performs considerably better than the other state-of-the-art tool, TBCCD. We also assessed Holmes on unseen projects and performed cross dataset experiments to evaluate the generalizability of Holmes. Our results affirm that Holmes outperforms TBCCD since most of the pairs that Holmes detected were either undetected or suboptimally reported by TBCCD.
C1 [Mehrotra, Nikita; Agarwal, Navdha; Gupta, Piyush; Anand, Saket; Purandare, Rahul] IIIT Delhi, Dept Comp Sci Engn, Delhi 110020, India.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
C3 Indraprastha Institute of Information Technology Delhi; Singapore
   Management University
RP Mehrotra, N (corresponding author), IIIT Delhi, Dept Comp Sci Engn, Delhi 110020, India.
EM nikitam@iiitd.ac.in; navdha16250@iiitd.ac.in; piyush16066@iiitd.ac.in;
   anands@iiitd.ac.in; davidlo@smu.edu; purandare@iiitd.ac.in
RI mehrotra, nikita/KHE-5901-2024; Lo, David/A-2493-2012
OI mehrotra, nikita/0000-0002-2554-4798; Purandare,
   Rahul/0000-0001-8677-0601; Gupta, Piyush/0000-0002-5940-4646; Lo,
   David/0000-0002-4367-7201
FU Department of Science and Technology (DST) India, Science and
   Engineering Research Board (SERB); Confederation of Indian Industry
   (CII); Infosys Center for Artificial Intelligence at IIIT Delhi;
   National Research Foundation, Singapore under its Industry Alignment
   Fund -Pre-positioning (IAF-PP) Funding Initiative; Nucleus Software
   Exports Ltd
FX This research/project was supported by the Department of Science and
   Technology (DST) India, Science and Engineering Research Board (SERB),
   the Confederation of Indian Industry (CII), Infosys Center for
   Artificial Intelligence at IIIT Delhi, Nucleus Software Exports Ltd, and
   the National Research Foundation, Singapore under its Industry Alignment
   Fund -Pre-positioning (IAF-PP) Funding Initiative. Any opinions,
   findings and conclusions or recommendations expressed in this material
   are those of the author(s) and do not reflect the views of National
   Research Foundation, Singapore.
CR Abd-El-Hafiz SK, 2012, P INT COMP SOFTW APP, P35, DOI 10.1109/COMPSAC.2012.14
   Allamanis M., 2018, INT C LEARN REPR ICL
   Allamanis M, 2016, PR MACH LEARN RES, V48
   ALLEN FE, 1976, COMMUN ACM, V19, P137, DOI 10.1145/360018.360025
   Alon U., 2019, PROC 7 INT C LEARN R
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   BAKER BS, 1992, COMPUTING SCIENCE AND STATISTICS : VOL 24, P49
   BALDI P, 1993, NEURAL COMPUT, V5, P402, DOI 10.1162/neco.1993.5.3.402
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Beck D, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P273
   Ben-Nun T, 2018, ADV NEUR IN, V31
   Binkley D, 2007, FoSE 2007: Future of Software Engineering, P104, DOI 10.1109/FOSE.2007.27
   Bromley J., 1993, International Journal of Pattern Recognition and Artificial Intelligence, V7, P669, DOI 10.1142/S0218001493000339
   Bronstein MM, 2017, IEEE SIGNAL PROC MAG, V34, P18, DOI 10.1109/MSP.2017.2693418
   Bruna J., 2014, ABS13126203 CORR, P1, DOI [10.48550/arXiv.1312.6203, DOI 10.48550/ARXIV.1312.6203]
   Chen X., 2020, PROC INT C LEARN REP
   CHEN Z, 2019, CORR EARLY ACCESS, DOI DOI 10.1109/TSE.2019.2940179
   Cordy JR, 2011, CONF PROC INT SYMP C, P219, DOI 10.1109/ICPC.2011.26
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   Efron B., 1993, INTRO BOOTSTRAP EQUI
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Fey Matthias, 2019, ICLR WORKSH REPR LEA
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P321, DOI 10.1145/1368088.1368132
   GRUNWALD D, 1993, SIGPLAN NOTICES, V28, P159, DOI 10.1145/173284.155349
   Gupta P, 2020, PROC IEEE INT CONF S, P810, DOI 10.1109/ICSME46990.2020.00099
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   HINTON GE, 1989, ARTIF INTELL, V40, P185, DOI 10.1016/0004-3702(89)90049-0
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   HORWITZ S, 1990, SIGPLAN NOTICES, V25, P234, DOI 10.1145/93548.93574
   Hu J, 2018, PROC CVPR IEEE, P7132, DOI [10.1109/CVPR.2018.00745, 10.1109/TPAMI.2019.2913372]
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jiang Lingxiao, 2007, P THE 6 JOINT M EURO, P55, DOI DOI 10.1145/1287624.1287634
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kamp Marius, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P529, DOI 10.1109/MSR.2019.00079
   Kang HJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1, DOI 10.1109/ASE.2019.00011
   Kapser C, 2006, WORK CONF REVERSE EN, P19
   Keivanloo I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P664, DOI 10.1145/2568225.2568292
   Kim H, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P301, DOI 10.1145/1985793.1985835
   Kingma D. P, 2015, International Conference on Learning Representations
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Lample G, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P5039
   LeClair A, 2020, INT C PROGRAM COMPRE, P184, DOI 10.1145/3387904.3389268
   LeCun Y., 1995, The handbook of brain theory and neural networks, V3361, DOI [10.5555/303568.303704, DOI 10.5555/303568.303704]
   Li DP, 2015, PROC CVPR IEEE, P213, DOI 10.1109/CVPR.2015.7298617
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Li Y, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360588
   Li YJ, 2019, PR MACH LEARN RES, V97
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Li ZM, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P289
   Liu ZQ, 2019, AAAI CONF ARTIF INTE, P4424
   Maas AL, 2013, PROC INT C MACH LEAR
   Marcus A, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P107, DOI 10.1109/ASE.2001.989796
   Mathew G, 2020, PROC INT CONF SOFTW, P210, DOI 10.1145/3377811.3380407
   Micheli A, 2009, IEEE T NEURAL NETWOR, V20, P498, DOI 10.1109/TNN.2008.2010350
   Mondal M, 2017, INT WORKS SOFTW CLON, P38
   Monden A, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P87, DOI 10.1109/METRIC.2002.1011328
   PODGURSKI A, 1989, ACM SIGSOFT, V14, P168, DOI 10.1145/75309.75328
   Roy C., 2007, 2007541 TR SCH COMP
   Roy CK, 2009, IEEE ICST WORKSHOP, P157, DOI 10.1109/ICSTW.2009.18
   Saini V, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P354, DOI 10.1145/3236024.3236026
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Shin R., 2018, P 32 INT C NEUR INF, P8931
   Song L., 2018, Structure2vec: Deep learning for security analytics over graphs
   Su FH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P702, DOI 10.1145/2950290.2950321
   Svajlenko J, 2014, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSME.2014.77
   Thummalapenta S, 2010, EMPIR SOFTW ENG, V15, P1, DOI 10.1007/s10664-009-9108-x
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Tufano M, 2018, IEEE WORK CONF MIN S, P542, DOI 10.1145/3196398.3196431
   Vallée-Rai R, 2000, LECT NOTES COMPUT SC, V1781, P18
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Vaswani A, 2017, ADV NEUR IN, V30
   Velickovic Petar, 2018, INT C LEARN REPR
   Wagner S, 2016, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.49
   Wang K., 2019, LEARNING SCALABLE PR
   Wang Ke, 2018, Dynamic Neural Program Embedding for Program Repair (ICLR)
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/SANER48275.2020.9054857, 10.1109/saner48275.2020.9054857]
   Wang XM, 2018, 2018 10TH INTERNATIONAL CONFERENCE ON ADVANCED INFOCOMM TECHNOLOGY (ICAIT), P184, DOI 10.1109/ICAIT.2018.8686548
   Wei HH, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2840
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   White M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P479, DOI [10.1109/saner.2019.8668043, 10.1109/SANER.2019.8668043]
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Wu ZH, 2021, IEEE T NEUR NET LEAR, V32, P4, DOI 10.1109/TNNLS.2020.2978386
   Xu KYL, 2018, PR MACH LEARN RES, V80
   Xu XJ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P363, DOI 10.1145/3133956.3134018
   Yi Li, 2020, 2020 IEEE/ACM 42nd International Conference on Software Engineering (ICSE), P602, DOI 10.1145/3377811.3380345
   Yu H, 2019, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2019.00021
   Zhang Si, 2019, Comput Soc Netw, V6, P11, DOI 10.1186/s40649-019-0069-y
   Zhao G, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/3236024.3236068
   Zibran M.F., 2011, P 5 INT WORKSH SOFTW, P75
NR 91
TC 12
Z9 12
U1 2
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 3771
EP 3789
DI 10.1109/TSE.2021.3105556
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800004
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Ullah, S
   Oh, H
AF Ullah, Sami
   Oh, Heekuck
TI <i>BinDiff<sub> NN</sub></i>: Learning Distributed Representation of
   Assembly for Robust Binary Diffing Against Semantic Differences
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Asm2Vec; attention network; binary diffing; exact match; Inst2vec;
   partial match; siamese neural network
AB Binary diffing is a process to discover the differences and similarities in functionality between two binary programs. Previous research on binary diffing approaches it as a function matching problem to formulate an initial 1:1 mapping between functions, and later a sequence matching ratio is computed to classify two functions being an exact match, a partial match or no-match. The accuracy of existing techniques is best only when detecting exact matches and they are not efficient in detecting partially changed functions; especially those with minor patches. These drawbacks are due to two major challenges (i) In the 1:1 mapping phase, using a strict policy to match function features (ii) In the classification phase, considering an assembly snippet as a normal text, and using sequence matching for similarity comparison. Instruction has a unique structure i.e. mnemonics and registers have a specific position in instruction and also have a semantic relationship, which makes assembly code different from general text. Sequence matching performs best for general text but it fails to detect structural and semantic changes at an instruction level thus, its use for classification produces many false results. In this research, we have addressed the aforementioned underlying challenges by proposing a two-fold solution. For the 1:1 mapping phase, we have proposed computationally inexpensive features, which are compared with distance-based selection criteria to map similar functions and filter unmatched functions. For the classification phase, we have proposed a Siamese binary-classification neural network where each branch is an attention-based distributed learning embedding neural network - that learn the semantic similarity among assembly instructions, learn to highlight the changes at an instruction level and a final stage fully connected layer learn to accurately classify two 1:1 mapped function either an exact or a partial match. We have used x86 kernel binaries for training and achieved similar to 99% classification accuracy; which is higher than existing binary diffing techniques and tools.
C1 [Ullah, Sami; Oh, Heekuck] Hanyang Univ, Dept Comp Sci & Engn, Ansan 15588, South Korea.
C3 Hanyang University
RP Oh, H (corresponding author), Hanyang Univ, Dept Comp Sci & Engn, Ansan 15588, South Korea.
EM sami.ullah2316@gmail.com; hkoh@hanyang.ac.kr
OI Ullah, Sami/0000-0002-5332-2914
FU National Research Foundation of Korea (NRF) - Ministry of Science and
   ICT [NRF-2019R1A2C2003045]
FX This work was supported by the National Research Foundation of Korea
   (NRF) Grant funded by the Ministry of Science and ICT under Grant
   NRF-2019R1A2C2003045.
CR A. S. Update, 2019, APPL SEC UPD 13 MAY
   Allamams M, 2019, PROCEEDINGS OF THE 2019 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!' 19), P143, DOI 10.1145/3359591.3359735
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Alon U, 2018, ACM SIGPLAN NOTICES, V53, P404, DOI [10.1145/3192366.3192412, 10.1145/3296979.3192412]
   Alrabaee S, 2018, ACM T PRIV SECUR, V21, DOI 10.1145/3175492
   [Anonymous], 2020, DIAPHORA IDA PLUGIN
   [Anonymous], 2020, ZYNAMICS BINDIFF KER
   Bai YS, 2019, PROCEEDINGS OF THE TWELFTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING (WSDM'19), P384, DOI 10.1145/3289600.3290967
   BALDONI R., 2018, arXiv
   Bourquin M., 2013, P 2 ACM SIGPLAN PROG, P1, DOI [10.1145/2430553.2430557, DOI 10.1145/2430553.2430557]
   Chandramohan M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P678, DOI 10.1145/2950290.2950350
   Chapman C., 2016, P 25 INT S SOFTWARE, P282, DOI DOI 10.1145/2931037.2931073
   Chua ZL, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P99
   CVE-Mitre, 2019, CVE20198605
   Dai HJ, 2016, PR MACH LEARN RES, V48
   David Y, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428293
   David Y, 2016, ACM SIGPLAN NOTICES, V51, P266, DOI [10.1145/2908080.2908126, 10.1145/2980983.2908126]
   Ding SHH, 2019, P IEEE S SECUR PRIV, P472, DOI 10.1109/SP.2019.00003
   Dullien T, 2005, S SEC TECHN INF COMM, V5, P3
   Eschweiler S, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23185
   Feng Q., 2016, P 2016 ACM SIGSAC C, P480, DOI [10.1145/2976749.2978370, DOI 10.1145/2976749.2978370]
   Flake H., 2004, Proceedings of the Detection of Intrusions and Malware Vulnerability Assessment, GI SIG SIDAR Workshop, DIMVA 2004, Dortmund, Germany, 6-7 July 2004, P161, DOI [10.17877/DE290R-2007, DOI 10.17877/DE290R-2007]
   Gao DB, 2008, LECT NOTES COMPUT SC, V5308, P238
   He JX, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P1667, DOI 10.1145/3243734.3243866
   Thekumparampil KK, 2018, Arxiv, DOI arXiv:1803.03735
   Karamitas C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P335, DOI 10.1109/SANER.2018.8330221
   Lacomis J, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P640, DOI 10.1109/ASE.2019.00064
   Lee S.-H., 2017, P KSII 9 INT C INT S, P245
   Li YJ, 2019, Arxiv, DOI [arXiv:1904.12787, DOI 10.48550/ARXIV.1904.12787]
   Liu BC, 2018, IEEE INT CONF AUTOM, P667, DOI 10.1145/3238147.3238199
   Massarelli L, 2019, LECT NOTES COMPUT SC, V11543, P309, DOI 10.1007/978-3-030-22038-9_15
   Meng Q, 2019, NEUROCOMPUTING, V337, P46, DOI 10.1016/j.neucom.2019.01.037
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   Neculoiu P., 2016, P 1 WORKSH REPR LEAR, P148, DOI [DOI 10.18653/V1/W16-1617, 10.18653/v1/W16-1617]
   Oh J., 2009, BLACK HAT, DOI 10.1.1.694.8684&rep=rep1&type=pd
   Pewny J, 2015, P IEEE S SECUR PRIV, P709, DOI 10.1109/SP.2015.49
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Redmond K. M., 2019, THESIS U S CAROLINA
   Redmond K, 2018, Arxiv, DOI arXiv:1812.09652
   Wang Z., 2000, J. Instr. Level Parallelism, V2, P1
   Will N, 2019, GOOGLE PROJECT ZERO
   Xu XJ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P363, DOI 10.1145/3133956.3134018
   Zuo F, 2018, Arxiv, DOI arXiv:1808.04706
NR 43
TC 9
Z9 10
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3442
EP 3466
DI 10.1109/TSE.2021.3093926
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500014
DA 2024-07-18
ER

PT J
AU Yedida, R
   Menzies, T
AF Yedida, Rahul
   Menzies, Tim
TI On the Value of Oversampling for Deep Learning in Software Defect
   Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Deep learning; Tuning; Predictive models; Standards; Prediction
   algorithms; Training; Tools; Defect prediction; oversampling; class
   imbalance; neural networks
ID METRICS SUITE
AB One truism of deep learning is that the automatic feature engineering (seen in the first layers of those networks) excuses data scientists from performing tedious manual feature engineering prior to running DL. For the specific case of deep learning for defect prediction, we show that that truism is false. Specifically, when we pre-process data with a novel oversampling technique called fuzzy sampling, as part of a larger pipeline called GHOST (Goal-oriented Hyper-parameter Optimization for Scalable Training), then we can do significantly better than the prior DL state of the art in 14/20 defect data sets. Our approach yields state-of-the-art results significantly faster deep learners. These results present a cogent case for the use of oversampling prior to applying deep learning on software defect prediction datasets.
C1 [Yedida, Rahul; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Yedida, R (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM ryedida@ncsu.edu; timm@ieee.org
RI Menzies, Tim/X-7680-2019
OI Menzies, Tim/0000-0002-5040-3196; Yedida, Rahul/0000-0003-2069-5949
FU National Science Foundation [1703487]; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1703487] Funding Source: National Science Foundation
FX This work was supported by a research grant from National Science
   Foundation under Grant CCF #1703487.
CR Agrawal A., 2020, ARXIV
   Agrawal A, 2021, Arxiv, DOI arXiv:1912.04061
   Agrawal A, 2021, IEEE T SOFTWARE ENG, V47, P2182, DOI 10.1109/TSE.2019.2945020
   Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   [Anonymous], 2009, Scholarpedia
   Arar ÖF, 2017, APPL SOFT COMPUT, V59, P197, DOI 10.1016/j.asoc.2017.05.043
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bergstra J., 2013, ICML, pI
   Bergstra J., 2011, Adv. Neural Inf. Process. Syst., V24
   BRIAND LC, 1993, IEEE T SOFTWARE ENG, V19, P1028, DOI 10.1109/32.256851
   Buda M, 2018, NEURAL NETWORKS, V106, P249, DOI 10.1016/j.neunet.2018.07.011
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen CY, 2021, IEEE T SOFTWARE ENG, V47, P432, DOI 10.1109/TSE.2019.2896123
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Choetkiertikul M, 2019, IEEE T SOFTWARE ENG, V45, P637, DOI 10.1109/TSE.2018.2792473
   Deb K, 2005, EVOL COMPUT, V13, P501, DOI 10.1162/106365605774666895
   Deshmukh J, 2017, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSME.2017.69
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Guo J, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2017.9
   Hall M. A., 2000, P 17 INT C MACH LEAR, P359, DOI DOI 10.5555/645529.657793
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Han ZB, 2017, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSME.2017.52
   HendersonSellers B, 1996, OBJECT ORIENTED SYST, V3, P143
   Hoa Khanh Dam, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P46, DOI 10.1109/MSR.2019.00017
   Pham HV, 2019, PROC INT CONF SOFTW, P1027, DOI 10.1109/ICSE.2019.00107
   Huo X, 2021, IEEE T SOFTWARE ENG, V47, P1368, DOI 10.1109/TSE.2019.2920771
   Jacot A, 2020, Arxiv, DOI arXiv:1806.07572
   Kim M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P990, DOI 10.1145/2786805.2804429
   Lee Wee Sun, 2003, P INT C MACH LEARN, P448
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Li XC, 2018, Arxiv, DOI arXiv:1805.04825
   Lin B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P94, DOI 10.1145/3180155.3180195
   Lin TY, 2017, IEEE I CONF COMP VIS, P2999, DOI 10.1109/ICCV.2017.324
   Marcus Gary, 2018, arXiv
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mei-Huei Tang, 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P242, DOI 10.1109/METRIC.1999.809745
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Misirli AT, 2011, AI MAG, V32, P57, DOI 10.1609/aimag.v32i2.2348
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Montúfar G, 2014, ADV NEUR IN, V27
   Nair Vinod, 2010, INT C INT C MACHINE, P807
   Panda P, 2016, IEEE IJCNN, P299, DOI 10.1109/IJCNN.2016.7727212
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Robbes R, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P29, DOI 10.1109/ICSE-NIER.2019.00016
   Rosenthal R., 1994, The handbook of research synthesis, P231, DOI DOI 10.7758/9781610441377
   RUMELHART DE, 1986, NATURE, V323, P533, DOI 10.1038/323533a0
   Ryu D, 2016, APPL SOFT COMPUT, V49, P1062, DOI 10.1016/j.asoc.2016.04.009
   Shirabad J.S., 2005, The PROMISE Repository of Software Engineering Databases
   Suk HI, 2014, NEUROIMAGE, V101, P569, DOI 10.1016/j.neuroimage.2014.06.077
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Nguyen TD, 2017, PROC INT CONF SOFTW, P438, DOI 10.1109/ICSE.2017.47
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wen M, 2020, IEEE T SOFTWARE ENG, V46, P1155, DOI 10.1109/TSE.2018.2876256
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Yamashita R, 2018, INSIGHTS IMAGING, V9, P611, DOI 10.1007/s13244-018-0639-9
   Zeiler MD, 2014, LECT NOTES COMPUT SC, V8689, P818, DOI 10.1007/978-3-319-10590-1_53
   Zhang X, 2018, INT CONF SOFTW ENG, P232, DOI 10.1109/ICSESS.2018.8663962
   Zhao G, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/3236024.3236068
NR 64
TC 24
Z9 24
U1 1
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 3103
EP 3116
DI 10.1109/TSE.2021.3079841
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500023
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Huang, Y
   Jia, N
   Chen, XP
   Hong, K
   Zheng, ZB
AF Huang, Yuan
   Jia, Nan
   Chen, Xiangping
   Hong, Kai
   Zheng, Zibin
TI Code Review Knowledge Perception: Fusing Multi-Features for
   Salient-Class Location
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Feature extraction; Semantics; Tools; Couplings; Open source software;
   Knowledge engineering; Code review; code comprehension; code change;
   code discriminative features; code commit
AB Code review is a common software engineering practice of practical importance to reduce software defects. Review today is often with the help of specialized tools, such as Gerrit. However, even in a tool-supported code review involves a significant amount of human effort to understand the code change, because the information required to inspect code changes may distribute across multiple files that reviewers are not familiar with. Code changes are often organized as commits for review. In this paper, we found that most of the commits contain a salient class(es), which is saliently modified and causes the modification of the rest classes in a commit. Our user studies confirmed that identifying the salient class in a commit can facilitate reviewers in understanding code change. Inspired by the effectiveness of machine learning techniques in the classification field, we model the salient class identification as a binary classification problem and a number of discriminative features is extracted for a commit and used to characterize the salience of a class. The experiments results show that our approach achieves an accuracy of 88 percent. A user study with industrial developers shows that our approach can really improve the efficiency of reviewers understanding code changes in a reviewing scenario without using comment.
C1 [Huang, Yuan; Hong, Kai; Zheng, Zibin] Sun Yat Sen Univ, Sch Data & Comp Sci, Guangzhou 510006, Peoples R China.
   [Chen, Xiangping] Sun Yat Sen Univ, Sch Commun & Design, Guangdong Key Lab Big Data Anal & Simulat Publ Op, Guangzhou 510006, Peoples R China.
   [Jia, Nan] Hebei GEO Univ, Sch Management Sci & Engn, Shijiazhuang 050031, Hebei, Peoples R China.
C3 Sun Yat Sen University; Sun Yat Sen University; Hebei GEO University
RP Zheng, ZB (corresponding author), Sun Yat Sen Univ, Sch Data & Comp Sci, Guangzhou 510006, Peoples R China.; Chen, XP (corresponding author), Sun Yat Sen Univ, Sch Commun & Design, Guangdong Key Lab Big Data Anal & Simulat Publ Op, Guangzhou 510006, Peoples R China.
EM huangyjn@gmail.com; jianan_0101@hgu.edu.cn; chenxp8@mail.sysu.edu.cn;
   hongkai1995@163.com; zhzibin@mail.sysu.edu.cn
RI Zheng, Zibin/E-3024-2014
OI Jia, Nan/0000-0002-7684-6980; chen, xiang ping/0000-0001-8234-3186
FU National Key R&D Program of China [2018YFB1004800]; National Natural
   Science Foundation of China [61902441, 61722214, 61672545]; Key-Area
   Research and Development Program of Guangdong Province [2020B010164002];
   Guangdong Basic and Applied Basic Research Foundation [2020A1515010973];
   China Postdoctoral Science Foundation [2018M640855]
FX The authors would like to thank the Prof. Yingfei Xiong for his
   constructive comments at the early stage of the paper discussion. The
   work described in this paper was supported by National Key R&D Program
   of China(2018YFB1004800), the National Natural Science Foundation of
   China (61902441, 61722214, 61672545) and Supported by Key-Area Research
   and Development Program of Guangdong Province (2020B010164002),
   Guangdong Basic and Applied Basic Research Foundation(2020A1515010973),
   China Postdoctoral Science Foundation (2018M640855).
CR [Anonymous], 2008, Proceedings of the 2008 international working conference on Mining software repositories
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Barnett M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P134, DOI 10.1109/ICSE.2015.35
   Baysal O, 2016, EMPIR SOFTW ENG, V21, P932, DOI 10.1007/s10664-015-9366-8
   Beniamini G, 2017, INT C PROGRAM COMPRE, P45, DOI 10.1109/ICPC.2017.18
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Cheng YF, 2016, IEEE INT CONF SOFTW, P255, DOI 10.1109/ICST.2016.8
   Conover W. J., 1980, TECHNOMETRICS, V23, P977
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Cousineau G., 1997, FUNCTIONAL APPROACH
   Dias M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P341, DOI 10.1109/SANER.2015.7081844
   Dit B, 2013, IEEE WORK CONF MIN S, P131, DOI 10.1109/MSR.2013.6624019
   Dunsmore A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P467, DOI 10.1109/ICSE.2000.870437
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fox NS, 2008, EUR J OBSTET GYN R B, V141, P111, DOI 10.1016/j.ejogrb.2008.07.023
   Friedman J, 2000, ANN STAT, V28, P337, DOI 10.1214/aos/1016218223
   Gerrit, US
   Gibbons JD, 2014, Nonparametric Statistical Inference
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Hassan AE, 2004, PROC IEEE INT CONF S, P284, DOI 10.1109/ICSM.2004.1357812
   Hattori LP, 2008, 2008 23RD IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS, PROCEEDINGS, P147
   Huang Y, 2020, IEEE T RELIAB, V69, P88, DOI 10.1109/TR.2019.2931725
   Huang Y, 2020, SOFTWARE PRACT EXPER, V50, P227, DOI 10.1002/spe.2772
   Huang Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P770, DOI 10.1145/3236024.3264841
   Huang Y, 2017, INT SYMP EMP SOFTWAR, P414, DOI 10.1109/ESEM.2017.56
   Huang Y, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1859
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   MacLennan Bruce J, 1990, FUNCTIONAL PROGRAMMI
   Malik H, 2008, PROC IEEE INT CONF S, P177, DOI 10.1109/ICSM.2008.4658066
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   MITCHELL T, 1989, ANNU REV COMPUT SCI, V4, P417
   Mukadam M, 2013, IEEE WORK CONF MIN S, P45, DOI 10.1109/MSR.2013.6624002
   QUINLAN JR, 1987, INT J MAN MACH STUD, V27, P221, DOI 10.1016/S0020-7373(87)80053-6
   Rennie JD. M., 1973, Proceedings of the Twentieth International Conference on Machine Learning (ICML)-2003), V20, P616, DOI DOI 10.1186/1477-3155-8-16
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   SPECHT DF, 1990, NEURAL NETWORKS, V3, P109, DOI 10.1016/0893-6080(90)90049-Q
   Tao Yida, 2012, P ACM SIGSOFT 20 INT
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Tin Kam Ho, 1995, Proceedings of the Third International Conference on Document Analysis and Recognition, P278, DOI 10.1109/ICDAR.1995.598994
   Tsotsis A., 2006, CITY
   Witten IH, 2011, MOR KAUF D, P1
   Yuan Huang, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P279, DOI 10.1109/APSEC.2014.50
   Zhang Jie, 2014, P 29 ACM IEEE INT C, P701, DOI DOI 10.1145/2642937.2642994
   Zhang TY, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P111, DOI 10.1109/ICSE.2015.33
   Zhou SR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P105, DOI 10.1145/3180155.3180205
   Zhu J, 2009, STAT INTERFACE, V2, P349
NR 54
TC 6
Z9 6
U1 3
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2022
VL 48
IS 5
BP 1463
EP 1479
DI 10.1109/TSE.2020.3021902
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 1I8CJ
UT WOS:000797454000001
DA 2024-07-18
ER

PT J
AU Jiang, L
   Liu, H
   Jiang, H
   Zhang, L
   Mei, H
AF Jiang, Lin
   Liu, Hui
   Jiang, He
   Zhang, Lu
   Mei, Hong
TI Heuristic and Neural Network Based Prediction of Project-Specific API
   Member Access
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Hidden Markov models; Neural networks; Computational modeling; Open
   source software; Java; Data mining; Tools; Code completion; non-API;
   deep learning; heuristic; LSTM
ID CODE COMPLETION; EFFICIENT
AB Code completion is to predict the rest of a statement a developer is typing. Although advanced code completion approaches have greatly improved the accuracy of code completion in modern IDEs, it remains challenging to predict project-specific API method invocations or field accesses because little knowledge about such elements could be learned in advance. To this end, in this paper we propose an accurate approach called HeeNAMA to suggesting the next project-specific API member access. HeeNAMA focuses on a specific but common case of code completion: suggesting the following member access whenever a project-specific API instance is followed by a dot on the right hand side of an assignment. By focusing on such a specific case, HeeNAMA can take full advantages of the context of the code completion, including the type of the left hand side expression of the assignment, the identifier on the left hand side, the type of the base instance, and similar assignments typed in before. All such information together enables highly accurate code completion. Given an incomplete assignment, HeeNAMA generates the initial candidate set according to the type of the base instance, and excludes those candidates that are not type compatible with the left hand side of the assignment. If the enclosing project contains assignments highly similar to the incomplete assignment, it makes suggestions based on such assignments. Otherwise, it selects the one from the initial candidate set that has the greatest lexical similarity with the left hand side of the assignment. Finally, it employs a neural network to filter out risky predictions, which guarantees high precision. Evaluation results on open-source applications suggest that compared to the state-of-the-art approaches and the state-of-the-practice tools HeeNAMA improves precision and recall by 70.68 and 25.23 percent, relatively.
C1 [Jiang, Lin; Liu, Hui; Jiang, He; Mei, Hong] Beijing Inst Technol, Sch Comp Sci & Technol, Beijing 100081, Peoples R China.
   [Zhang, Lu] Minist Educ, Key Lab High Confidence Software Technol, Beijing 100871, Peoples R China.
C3 Beijing Institute of Technology
RP Liu, H (corresponding author), Beijing Inst Technol, Sch Comp Sci & Technol, Beijing 100081, Peoples R China.
EM jianglin17@bit.edu.cn; liuhui08@bit.edu.cn; hejiang@ieee.org;
   zhanglu@sei.pku.edu.cn; meihong@bit.edu.cn
RI chen, xian/KHW-2227-2024
OI Zhang, Lu/0000-0001-8304-7055; Liu, Hui/0000-0002-3267-6801
FU National Natural Science Foundation of China [61690205, 61772071];
   National Key Research and Development Program of China [2016YFB1000801]
FX The work was supported by the National Natural Science Foundation of
   China (61690205, 61772071), and the National Key Research and
   Development Program of China (2016YFB1000801).
CR Acharya Mithun, 2007, P 6 JOINT M EUROPEAN, P25, DOI [DOI 10.1145/1287624.1287630, 10.1145/1287624.1287630]
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   Allamanis M, 2013, IEEE WORK CONF MIN S, P207, DOI 10.1109/MSR.2013.6624029
   Nguyen AT, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P362, DOI [10.1145/2901739.2901759, 10.1109/MSR.2016.044]
   Nguyen AT, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P858, DOI 10.1109/ICSE.2015.336
   Nguyen AT, 2012, PROC INT CONF SOFTW, P69, DOI 10.1109/ICSE.2012.6227205
   [Anonymous], 1997, NEURAL COMPUT
   Asaduzzaman M, 2016, J SOFTW-EVOL PROC, V28, P512, DOI 10.1002/smr.1791
   Asaduzzaman M, 2014, PROC IEEE INT CONF S, P71, DOI 10.1109/ICSME.2014.29
   Bielik P, 2016, PR MACH LEARN RES, V48
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Butler S, 2010, EUR CON SFTWR MTNCE, P156, DOI 10.1109/CSMR.2010.27
   Caprile B, 2000, PROC IEEE INT CONF S, P97, DOI 10.1109/ICSM.2000.883022
   Caprile C., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P112, DOI 10.1109/WCRE.1999.806952
   CC-CG, 2019, **DATA OBJECT**, DOI [10.5281/zenodo.3559330, DOI 10.5281/ZENODO.3559330]
   Clevert D.A, 2015, 4 INT C LEARN REPR I
   Cohen W.W., 2003, IJCAI WORKSH INF INT, P73, DOI DOI 10.5555/3104278.3104293
   COVER TM, 1967, IEEE T INFORM THEORY, V13, P21, DOI 10.1109/TIT.1967.1053964
   Daqing Hou, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P233, DOI 10.1109/ICSM.2011.6080790
   Dozat T., 2016, INT C LEARN REPR SAN
   Franks C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P705, DOI 10.1109/ICSE.2015.228
   Gvero T, 2013, ACM SIGPLAN NOTICES, V48, P27, DOI 10.1145/2499370.2462192
   Han JW, 2007, DATA MIN KNOWL DISC, V15, P55, DOI 10.1007/s10618-006-0059-1
   Han S, 2009, IEEE INT CONF AUTOM, P332, DOI 10.1109/ASE.2009.64
   Hellendoorn VJ, 2019, PROC INT CONF SOFTW, P960, DOI 10.1109/ICSE.2019.00101
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Hindle A, 2016, COMMUN ACM, V59, P122, DOI 10.1145/2902362
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Karampatsis Rafael-Michael, 2019, ABS190305734 CORR
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Lipton Z.C, 2015, ABS150600019 CORR
   Liu H, 2016, PROC INT CONF SOFTW, P1063, DOI 10.1145/2884781.2884841
   Mandelin D, 2005, ACM SIGPLAN NOTICES, V40, P48, DOI 10.1145/1064978.1065018
   Manning C.D., 1999, FDN STAT NATURAL LAN
   Maratea A, 2014, INFORM SCIENCES, V257, P331, DOI 10.1016/j.ins.2013.04.016
   Mikolov Tomas, 2013, Preprints
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Nguyen T.T., 2013, P 2013 9 JOINT M FDN, P532, DOI DOI 10.1145/2491411.2491458
   Nguyen TT, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P383, DOI 10.1145/1595696.1595767
   Pradel M., 2011, P 2011 INT S SOFTW T, P232
   Pradel M, 2013, IEEE T SOFTWARE ENG, V39, P1127, DOI 10.1109/TSE.2013.7
   Proksch S, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2744200
   Raychev V, 2016, ACM SIGPLAN NOTICES, V51, P761, DOI 10.1145/2914770.2837671
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Robbes Romain, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P317, DOI 10.1109/ASE.2008.42
   Schuster-Bockler Benjamin, 2007, Curr Protoc Bioinformatics, VAppendix 3, p3A, DOI 10.1002/0471250953.bia03as18
   Nguyen T, 2016, PROC INT CONF SOFTW, P416, DOI 10.1145/2884781.2884873
   Nguyen TD, 2017, PROC INT CONF SOFTW, P438, DOI 10.1109/ICSE.2017.47
   Tu ZP, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P269, DOI 10.1145/2635868.2635875
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
NR 51
TC 2
Z9 2
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2022
VL 48
IS 4
BP 1249
EP 1267
DI 10.1109/TSE.2020.3017794
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 0N4HC
UT WOS:000782799700009
DA 2024-07-18
ER

PT J
AU Guerra, E
   de Lara, J
   Chechik, M
   Salay, R
AF Guerra, Esther
   de Lara, Juan
   Chechik, Marsha
   Salay, Rick
TI Property Satisfiability Analysis for Product Lines of Modelling
   Languages
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Unified modeling language; Analytical models; Petri nets; Syntactics;
   Tools; Programmable logic arrays; Software engineering; Model-driven
   engineering; software language engineering; product lines;
   meta-modelling; OCL; model finding
ID NETS
AB Software engineering uses models throughout most phases of the development process. Models are defined using modelling languages. To make these languages applicable to a wider set of scenarios and customizable to specific needs, researchers have proposed using product lines to specify modelling language variants. However, there is currently a lack of efficient techniques for ensuring correctness with respect to properties of the models accepted by a set of language variants. This may prevent detecting problematic combinations of language variants that produce undesired effects at the model level. To attack this problem, we first present a classification of instantiability properties for language product lines. Then, we propose a novel approach to lifting the satisfiability checking of model properties of individual language variants, to the product line level. Finally, we report on an implementation of our proposal in the Merlin tool, and demonstrate the efficiency gains of our lifted analysis method compared to an enumerative analysis of each individual language variant.
C1 [Guerra, Esther] Univ Autonoma Madrid, Modelling & Software Engn Res Grp, Madrid 28049, Spain.
   [de Lara, Juan] Univ Autonoma Madrid, Madrid 28049, Spain.
   [Chechik, Marsha; Salay, Rick] Univ Toronto, Toronto, ON M5S, Canada.
C3 Autonomous University of Madrid; Autonomous University of Madrid;
   University of Toronto
RP Guerra, E (corresponding author), Univ Autonoma Madrid, Modelling & Software Engn Res Grp, Madrid 28049, Spain.
EM Esther.Guerra@uam.es; Juan.deLara@uam.es; chechik@cs.toronto.edu;
   rsalay@cs.toronto.edu
RI de Lara, Juan/B-5422-2014; Guerra, Esther/B-4977-2014
OI de Lara, Juan/0000-0001-9425-6362; Guerra, Esther/0000-0002-2818-2278
FU Spanish Ministry of Science [RTI2018-095255-B-I00]; R&D programme of
   Madrid [P2018/TCS-4314]; NSERC
FX This work has been funded by the Spanish Ministry of Science
   (RTI2018-095255-B-I00), the R&D programme of Madrid (P2018/TCS-4314),
   and by NSERC. We thank the anonymous referees for their useful comments.
CR Al-Hajjaji M, 2019, SOFTW SYST MODEL, V18, P499, DOI 10.1007/s10270-016-0569-2
   Altintas NI, 2012, IEEE T SOFTWARE ENG, V38, P1376, DOI 10.1109/TSE.2011.109
   Angerer F, 2017, PROC IEEE INT CONF S, P148, DOI 10.1109/ICSME.2017.60
   [Anonymous], 2010, J SATISFIABIL BOOLEA, DOI DOI 10.3233/SAT190075
   [Anonymous], 2018, ECLIPSE OCL PROJECT
   Apel S, 2009, LECT NOTES COMPUT SC, V5563, P4, DOI 10.1007/978-3-642-02408-5_2
   Bak K, 2016, SOFTW SYST MODEL, V15, P811, DOI 10.1007/s10270-014-0441-1
   Balaban M, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491518
   Basciani F, 2016, LECT NOTES COMPUT SC, V9694, P342, DOI 10.1007/978-3-319-39696-5_21
   Bodden E, 2013, ACM SIGPLAN NOTICES, V48, P355, DOI 10.1145/2499370.2491976
   Buchmann T, 2016, COMM COM INF SC, V703, P1
   Butting A, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P65, DOI 10.1145/3233027.3233037
   Butting A, 2019, J SYST SOFTWARE, V152, P50, DOI 10.1016/j.jss.2019.02.026
   Cabot J, 2014, J SYST SOFTWARE, V93, P1, DOI 10.1016/j.jss.2014.03.023
   Cengarle MV, 2009, LECT NOTES COMPUT SC, V5795, P670, DOI 10.1007/978-3-642-04425-0_54
   Chauvel F, 2005, LECT NOTES COMPUT SC, V3713, P54, DOI 10.1007/11557432_5
   Cuccuru A, 2007, LECT NOTES COMPUT SC, V4530, P68
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   Czarnecki K., 2006, GPCE, P211
   Dave ClarkeRadu Muschevici., 2010, Proceedings of the 9th International Symposium on Formal Methods for Components and Objects (FMCO'10), V6957, P204
   de Lara J, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P67, DOI 10.1145/3239372.3239377
   Devroey X, 2017, SOFTW SYST MODEL, V16, P153, DOI 10.1007/s10270-015-0479-8
   Dimovski AS, 2017, LECT NOTES COMPUT SC, V10202, P406, DOI 10.1007/978-3-662-54494-5_24
   Ferreira JB, 2015, INT J SOFTW TOOLS TE, V17, P585, DOI 10.1007/s10009-014-0341-2
   Gonzalez Perez Carlos Alberto., 2012, Formal Methods in Software Engineering: Rigorous and Agile Approaches, DOI [10 . 1109 / FormSERA.2012.6229788, DOI 10.1109/FORMSERA.2012.6229788]
   Gronniger Hans, 2010, Foundations of Computer Software. Modeling, Development, and Verification of Adaptive Systems. 16th Monterey Workshop 2010. Revised Selected Papers, P17, DOI 10.1007/978-3-642-21292-5_2
   Guerra E, 2018, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '18), P160, DOI 10.1145/3276604.3276609
   Hajri I, 2018, SOFTW SYST MODEL, V17, P939, DOI 10.1007/s10270-016-0539-8
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Kästner C, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2211616.2211617
   Kästner C, 2009, LECT NOTES BUS INF P, V33, P175
   Kang Kyo C, 1990, Technical Report
   Kühn T, 2014, LECT NOTES COMPUT SC, V8706, P141, DOI 10.1007/978-3-319-11245-9_8
   Kuhlmann Mirco, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P415, DOI 10.1007/978-3-642-33666-9_27
   Lienhardt M, 2018, SCI COMPUT PROGRAM, V166, P3, DOI 10.1016/j.scico.2018.05.007
   Linden F. J. v. d., 2007, SOFTWARE PRODUCT LIN
   Lochau M, 2017, SOFTW SYST MODEL, V16, P125, DOI 10.1007/s10270-015-0470-4
   Lopez-Herrejon R. E., 2001, Generative and Component-Based Software Engineering. Third International Conference, GCSE 2001. Proceedings (Lecture Notes in Computer Science Vol.2186), P10
   Mac Lane, 1971, CATEGORIES WORKING M
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Meinicke Jens, 2017, Mastering Software Variability with FeatureIDE, DOI [10.1007/978-3-319-61443-4, DOI 10.1007/978-3-319-61443-4]
   Méndez-Acuña D, 2016, COMPUT LANG SYST STR, V46, P206, DOI 10.1016/j.cl.2016.09.004
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Muschevici R, 2016, SOFTW SYST MODEL, V15, P1181, DOI 10.1007/s10270-015-0475-z
   Perrouin G, 2016, 2016 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P1, DOI [10.1109/MiSE.2016.009, 10.1145/2896982.2896987]
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Salay R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P117, DOI 10.1145/2568225.2568267
   Cuadrado JS, 2014, IEEE T SOFTWARE ENG, V40, P1042, DOI 10.1109/TSE.2014.2339852
   Schlie A, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P215, DOI 10.1145/3106195.3106225
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Seidl C, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P2
   Seidl Christoph, 2016, Modellierung 2016, P157
   Seidl Christoph., 2014, MODELLIERUNG 2014, VP-225, P81
   Soeken M, 2010, DES AUT TEST EUROPE, P1341
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Taleghani A, 2006, LECT NOTES COMPUT SC, V4199, P245
   ter Beek MH, 2017, LECT NOTES COMPUT SC, V10202, P387, DOI 10.1007/978-3-662-54494-5_23
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Tolvanen JP, 2005, LECT NOTES COMPUT SC, V3714, P198
   Trujillo S, 2007, PROC INT CONF SOFTW, P44
   Trujillo S, 2010, LECT NOTES COMPUT SC, V6138, P293, DOI 10.1007/978-3-642-13595-8_23
   Von Rhein A, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3280986
   White J, 2009, IEEE SOFTWARE, V26, P47, DOI 10.1109/MS.2009.95
   Young B, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P175, DOI 10.1145/3106195.3106220
   Ziadi Tewfik., 2006, SOFTWARE PRODUCT LIN, P557, DOI DOI 10.1007/978-3-540-33253-4_15
   Zschaler S, 2010, LECT NOTES COMPUT SC, V5969, P82
NR 66
TC 7
Z9 7
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2022
VL 48
IS 2
BP 397
EP 416
DI 10.1109/TSE.2020.2989506
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZB4EB
UT WOS:000756796100003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Wang, CH
   Pastore, F
   Goknil, A
   Briand, LC
AF Wang, Chunhui
   Pastore, Fabrizio
   Goknil, Arda
   Briand, Lionel C.
TI Automatic Generation of Acceptance Test Cases From Use Case
   Specifications: An NLP-Based Approach
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Unified modeling language; Natural language processing; Embedded
   systems; Test pattern generators; Semantics; System test case
   generation; use case specifications; natural language processing;
   semantic role labeling
ID NATURAL-LANGUAGE REQUIREMENTS; MODEL TRANSFORMATION; DRIVEN; SEARCH;
   SECURITY
AB Acceptance testing is a validation activity performed to ensure the conformance of software systems with respect to their functional requirements. In safety critical systems, it plays a crucial role since it is enforced by software standards, which mandate that each requirement be validated by such testing in a clearly traceable manner. Test engineers need to identify all the representative test execution scenarios from requirements, determine the runtime conditions that trigger these scenarios, and finally provide the input data that satisfy these conditions. Given that requirements specifications are typically large and often provided in natural language (e.g., use case specifications), the generation of acceptance test cases tends to be expensive and error-prone. In this paper, we present Use Case Modeling for System-level, Acceptance Tests Generation (UMTG), an approach that supports the generation of executable, system-level, acceptance test cases from requirements specifications in natural language, with the goal of reducing the manual effort required to generate test cases and ensuring requirements coverage. More specifically, UMTG automates the generation of acceptance test cases based on use case specifications and a domain model for the system under test, which are commonly produced in many development environments. Unlike existing approaches, it does not impose strong restrictions on the expressiveness of use case specifications. We rely on recent advances in natural language processing to automatically identify test scenarios and to generate formal constraints that capture conditions triggering the execution of the scenarios, thus enabling the generation of test data. In two industrial case studies, UMTG automatically and correctly translated 95 percent of the use case specification steps into formal constraints required for test data generation; furthermore, it generated test cases that exercise not only all the test scenarios manually implemented by experts, but also some critical scenarios not previously considered.
C1 [Wang, Chunhui; Pastore, Fabrizio; Goknil, Arda; Briand, Lionel C.] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, L-1855 Luxembourg, Luxembourg.
   [Briand, Lionel C.] Univ Ottawa, Sch EECS, Ottawa, ON K1N 6N5, Canada.
C3 University of Luxembourg; University of Ottawa
RP Pastore, F (corresponding author), Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, L-1855 Luxembourg, Luxembourg.
EM wangchunhui@me.com; fabrizio.pastore@uni.lu; ar.goknil@gmail.com;
   lionelbriand@uni.lu
RI Pastore, Fabrizio/ABY-9262-2022; Wang, Chunhui/GQR-1652-2022
OI Pastore, Fabrizio/0000-0003-3541-3641; Wang,
   Chunhui/0000-0002-3551-4226; Briand, Lionel/0000-0002-1393-1010; GOKNIL,
   Arda/0000-0002-2170-2066
FU FNR S.A. Luxembourg [FNR/P10/03]; IEE S.A. Luxembourg [FNR/P10/03];
   Canada Research Chair program; European Research Council (ERC) under the
   European Unions Horizon 2020 research and innovation programme [694277]
FX We gratefully acknowledge funding from FNR and IEE S.A. Luxembourg, the
   grant FNR/P10/03, the Canada Research Chair program, and the European
   Research Council (ERC) under the European Unions Horizon 2020 research
   and innovation programme (grant agreement No 694277).
CR Abdurazik A, 2000, LECT NOTES COMPUT SC, V1939, P383
   Ali S, 2013, IEEE T SOFTWARE ENG, V39, P1376, DOI 10.1109/TSE.2013.17
   Anastasakis K, 2007, LECT NOTES COMPUT SC, V4735, P436
   Anda B, 2009, INFORM SOFTWARE TECH, V51, P1699, DOI 10.1016/j.infsof.2009.04.005
   [Anonymous], 2019, IBM RHAPSODY
   [Anonymous], 2019, ECLIPSE IDE
   [Anonymous], 2020, STANFORD PARSER STAT
   [Anonymous], 2020, OCLGEN WEB SITE
   [Anonymous], 2019, ECLIPSE OCL
   [Anonymous], 2014, Object Constraint Language 2.4.1.
   [Anonymous], 2019, UMTG TOOLSET SOURCE
   [Anonymous], 2020, IEE S A
   [Anonymous], 2019, IBM DOORS
   [Anonymous], 2020, PAPYRUS MODELING ENV
   Arora C, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P250, DOI 10.1145/2976767.2976769
   Arora C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P962, DOI 10.1145/2786805.2803185
   Arora C, 2015, INT REQUIR ENG CONF, P6, DOI 10.1109/RE.2015.7320403
   Arora S, 2009, COMPUTATIONAL COMPLEXITY: A MODERN APPROACH, P1, DOI 10.1017/CBO9780511804090
   Bajwa I. S., 2012, 2012 Seventh International Conference on Digital Information Management (ICDIM 2012), P93, DOI 10.1109/ICDIM.2012.6360153
   Bajwa IS, 2010, IEEE INT ENTERP DIST, P204, DOI 10.1109/EDOC.2010.33
   Balogh Z, 2009, SOFTW SYST MODEL, V8, P347, DOI 10.1007/s10270-008-0092-1
   Bandyopadhyay A, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P121, DOI 10.1109/ICST.2009.23
   Basanieri F., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P383
   Benattou M., 2002, P EUR C OBJ OR PROGR
   BRIAND LC, 2002, SOFTW SYST MODEL, V1, P10, DOI [10.1007/s10270-002-0004-8, DOI 10.1007/S10270-002-0004-8]
   Buhr RJA, 1998, IEEE T SOFTWARE ENG, V24, P1131, DOI 10.1109/32.738343
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Carnegie Mellon University, 2017, SEMAFOR
   Carvalho G., 2013, SAC, P1217
   Carvalho G, 2014, SCI COMPUT PROGRAM, V95, P275, DOI 10.1016/j.scico.2014.06.007
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   Cunningham H., 2002, P 40 ANN M ASS COMP, P168
   Dania C, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P65, DOI 10.1145/2976767.2976774
   Das D, 2014, COMPUT LINGUIST, V40, P9, DOI 10.1162/COLI_a_00163
   de Figueiredo A. L. L., 2006, SIGSOFT SOFTW ENG NO, V31, P1
   de Santiago VA, 2012, SOFTWARE QUAL J, V20, P77, DOI 10.1007/s11219-011-9155-6
   Ding ZH, 2016, IEEE T INTELL TRANSP, V17, P3330, DOI 10.1109/TITS.2016.2518745
   Escalona MJ, 2011, J SYST SOFTWARE, V84, P1379, DOI 10.1016/j.jss.2011.03.051
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Fröhlich P, 2000, LECT NOTES COMPUT SC, V1850, P472
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Gerber M., 2009, P HUMAN LANGUAGE TEC, P146
   Goknil A., 2015, Proceedings of the 2015 International Symposium on Software Testing and Analysis, P385
   Gutiérrez JJ, 2015, J SYST SOFTWARE, V109, P214, DOI 10.1016/j.jss.2015.08.001
   Gutiérrez JJ, 2008, LECT NOTES COMPUT SC, V5301, P83, DOI 10.1007/978-3-540-87875-9_6
   Hajri I., 2019, AUTOMATING TEST CASE
   Hajri I., 2017, P INT WORK C REQ ENG
   Hajri I, 2018, SOFTW SYST MODEL, V17, P939, DOI 10.1007/s10270-016-0539-8
   Hajri I, 2018, J SYST SOFTWARE, V139, P211, DOI 10.1016/j.jss.2018.02.021
   Hajri I, 2017, LECT NOTES COMPUT SC, V10153, P3, DOI 10.1007/978-3-319-54045-0_1
   Hajri I, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1008, DOI 10.1145/2950290.2983935
   Hajri I, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P338, DOI 10.1109/MODELS.2015.7338265
   Harrold M. J., 1998, Software Engineering Notes, V23, P11, DOI 10.1145/271775.271780
   Hartmann J, 2005, INNOV SYST SOFTW ENG, V1, P12, DOI 10.1007/s11334-005-0006-0
   Hasling Bill, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P367, DOI 10.1109/ICST.2008.9
   International Organization for Standardization-ISO, 2018, 26262 ISO
   ISO/IEC/IEEE International Standard, 2017, Standard ISO/IEC/IEEE 24765, DOI [DOI 10.1109/IEEESTD.2017.8016712, 10.1109/ IEEESTD.2017.8016712, 10.1109/IEEESTD.2017.8016712]
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jurafsky D., 2017, SPEECH LANGUAGE PROC, V3rd
   Kaplan Matthew, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P82, DOI 10.1109/ICST.2008.48
   Kappel Gerti, 2012, Conceptual Modelling and Its Theoretical Foundations. Essays Dedicated to Bernhard Thalheim on the Occasion of his 60th Birthday, P197, DOI 10.1007/978-3-642-28279-9_15
   Katara M, 2007, LECT NOTES COMPUT SC, V4383, P219
   Kessentini M, 2012, SOFTW SYST MODEL, V11, P209, DOI 10.1007/s10270-010-0175-7
   Kesserwan N, 2019, SOFTW SYST MODEL, V18, P1543, DOI 10.1007/s10270-017-0620-y
   Kim Y. G., 1999, IEE Proceedings-Software, V146, P187, DOI 10.1049/ip-sen:19990602
   Kipper K, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P691
   Larman C., 2002, APPL UML PATTERNS, V2nd
   Larsen K.G., 2005, Proceedings of the 5th ACM international conference on Embedded software, P299, DOI DOI 10.1145/1086228.1086283
   Ledgard H. F., 1980, SIGPLAN Notices, V15, P57, DOI 10.1145/947727.947732
   Li WB, 2018, COMM COM INF SC, V779, P77, DOI 10.1007/978-3-319-71734-0_7
   Mai PX, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P55, DOI 10.1109/ICSE-Companion.2019.00037
   Mai PX, 2018, PROC INT SYMP SOFTW, P58, DOI [10.1109/1SSRE.2018.00017, 10.1109/ISSRE.2018.00017]
   Mai PX, 2018, INFORM SOFTWARE TECH, V100, P165, DOI 10.1016/j.infsof.2018.04.007
   Meyers Adam., 2004, P WORKSH FRONT CORP, P24
   Milicevic A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P609, DOI [10.1109/ICSE.2015.77, 10.1007/s10703-016-0267-2]
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Nayak A, 2011, SOFTW SYST MODEL, V10, P63, DOI 10.1007/s10270-009-0133-4
   Nebut C, 2006, IEEE T SOFTWARE ENG, V32, P140, DOI 10.1109/TSE.2006.22
   NEEDLEMAN SB, 1970, J MOL BIOL, V48, P443, DOI 10.1016/0022-2836(70)90057-4
   Nogueira S, 2014, FORM ASP COMPUT, V26, P441, DOI 10.1007/s00165-012-0258-z
   Offutt AJ, 1999, J SYST SOFTWARE, V49, P49, DOI 10.1016/S0164-1212(99)00066-7
   Offutt J, 1999, LECT NOTES COMPUT SC, V1723, P416
   Offutt J, 2003, SOFTW TEST VERIF REL, V13, P25, DOI 10.1002/stvr.264
   Oracle corporation, 2019, JAV REG EXPR
   Palmer M, 2005, COMPUT LINGUIST, V31, P71, DOI 10.1162/0891201053630264
   Palmer Martha, 2009, P GEN LEX C, P9
   Pandita R, 2012, PROC INT CONF SOFTW, P815, DOI 10.1109/ICSE.2012.6227137
   Pastore F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P66, DOI 10.1109/ICSE.2015.29
   Pastore F, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P342, DOI 10.1109/ICST.2013.13
   Pelliccione P, 2005, LECT NOTES COMPUT SC, V3489, P267
   Pezz ~e M., 2007, SOFTWARE TESTING ANA
   Philip S., 2009, ACM SIGSOFT SOFTWARE, V34, P1, DOI DOI 10.1145/1640162.1666579
   Pretschner A, 2005, PROC INT CONF SOFTW, P722
   Provenzano L, 2017, LECT NOTES COMPUT SC, V10153, P363, DOI 10.1007/978-3-319-54045-0_25
   Punyakanok V, 2008, COMPUT LINGUIST, V34, P257, DOI 10.1162/coli.2008.34.2.257
   Riebisch M, 2003, LECT NOTES COMPUT SC, V2591, P394
   Roy S, 2017, THESIS U ILLINOIS UR
   RTCA and EUROCAE, 2012, RTCADO178C
   Ryser J., 1999, P INT C SOFTW SYST E, P1
   Sarma M, 2009, INFORM SOFTWARE TECH, V51, P418, DOI 10.1016/j.infsof.2008.05.002
   Sarmiento E, 2016, ELECTRON NOTES THEOR, V329, P123, DOI 10.1016/j.entcs.2016.12.008
   Sarmiento E, 2014, 2014 IEEE 1ST INTERNATIONAL WORKSHOP ON REQUIREMENTS ENGINEERING AND TESTING (RET), P32, DOI 10.1109/RET.2014.6908677
   Shirole Mahesh, 2013, Software Engineering Notes, V38, P119, DOI 10.1145/2492248.2492274
   Sinha Avik, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P155, DOI 10.1109/ICST.2010.19
   Sinha A, 2009, I C DEPEND SYS NETWO, P327, DOI 10.1109/DSN.2009.5270320
   Soeken M, 2012, LECT NOTES COMPUT SC, V7304, P269, DOI 10.1007/978-3-642-30561-0_19
   Soltana G., 2019, PRACTICAL MODELDRIVE
   Soltana G, 2017, IEEE INT CONF AUTOM, P872, DOI 10.1109/ASE.2017.8115698
   Stocks P, 1996, IEEE T SOFTWARE ENG, V22, P777, DOI 10.1109/32.553698
   Torlak E, 2008, LECT NOTES COMPUT SC, V5014, P326, DOI 10.1007/978-3-540-68237-0_23
   University of Colorado, 2017, VERBNET DAT LIST VER
   University of Colorado, 2017, UN VERB IND
   University of Illinois, 2017, COGCOMP NLP PIP
   University of Saarland, 2017, SHALM
   Utting M., 2007, PRACTICAL MODEL BASE
   Varró D, 2006, LECT NOTES COMPUT SC, V4199, P410
   Wang CH, 2018, IEEE INT CONF SOFTW, P23, DOI 10.1109/ICST.2018.00013
   Wang CH, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P942, DOI 10.1145/2786805.2803187
   Wang LZ, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P284, DOI 10.1109/APSEC.2004.55
   WEYUKER E, 1994, IEEE T SOFTWARE ENG, V20, P353, DOI 10.1109/32.286420
   Yue T, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2699697
   Yue T, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430539
   Yue T, 2011, LECT NOTES COMPUT SC, V6698, P115, DOI 10.1007/978-3-642-21470-7_9
   Yue T, 2010, LECT NOTES COMPUT SC, V6138, P337
   Yue Tao, 2015, P 2015 INT S SOFTWAR, P397
   Zhang BW, 2015, IEEE INT CONF AUTOM, P506, DOI 10.1109/ASE.2015.68
   Zhang M, 2018, J SYST SOFTWARE, V144, P573, DOI 10.1016/j.jss.2018.06.075
   Zhang M, 2014, LECT NOTES COMPUT SC, V8769, P142, DOI 10.1007/978-3-319-11743-0_10
   Zhou JL, 2014, INT REQUIR ENG CONF, P428, DOI 10.1109/RE.2014.6912294
NR 129
TC 16
Z9 17
U1 5
U2 40
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2022
VL 48
IS 2
BP 585
EP 616
DI 10.1109/TSE.2020.2998503
PG 32
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZB4EB
UT WOS:000756796100014
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU He, Q
   Li, B
   Chen, FF
   Grundy, J
   Xia, X
   Yang, Y
AF He, Qiang
   Li, Bo
   Chen, Feifei
   Grundy, John
   Xia, Xin
   Yang, Yun
TI Diversified Third-Party Library Prediction for Mobile App Development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Third-party library; prediction; mobile app development; matrix
   factorization; diversity; accuracy bias
AB The rapid growth of mobile apps has significantly promoted the use of third-party libraries in mobile app development. However, mobile app developers are now facing the challenge of finding useful third-party libraries for improving their apps, e.g., to enhance user interfaces, to add social features, etc. An effective approach is to leverage collaborative filtering (CF) to predict useful third-party libraries for developers. We employed Matrix Factorization (MF) approaches - the classic CF-based prediction approaches - tomake the predictions based on a total of 31,432 Android apps from Google Play. However, our investigation shows that there is a significant lack of diversity in the prediction results - a small fraction of popular third-party libraries dominate the prediction results while most other libraries are ill-served. The low diversity in the prediction results limits the usefulness of the prediction because it lacks novelty and serendipity which are much appreciated by mobile app developers. In order to increase the diversity in the prediction results, we designed an innovative MF-based approach, namely LibSeek, specifically for predicting useful third-party libraries for mobile apps. It employs an adaptive weighting mechanism to neutralize the bias caused by the popularity of third-party libraries. In addition, it introduces neighborhood information, i.e., information about similar apps and similar third-party libraries, to personalize the predictions for individual apps. The experimental results show that LibSeek can significantly diversify the prediction results, and in the meantime, increase the prediction accuracy.
C1 [He, Qiang; Li, Bo; Yang, Yun] Swinburne Univ Technol, Sch Software & Elect Engn, Melbourne, Vic 3122, Australia.
   [Chen, Feifei] Deakin Univ, Sch Informat Technol, Melbourne, Vic 3125, Australia.
   [Grundy, John; Xia, Xin] Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
   [Yang, Yun] Anhui Univ, Sch Comp Sci & Technol, Hefei 230000, Anhui, Peoples R China.
C3 Swinburne University of Technology; Deakin University; Monash
   University; Anhui University
RP Yang, Y (corresponding author), Anhui Univ, Sch Comp Sci & Technol, Hefei 230000, Anhui, Peoples R China.
EM qhe@swin.edu.au; boli@swin.edu.au; feifei.chen@deakin.edu.au;
   john.grundy@monash.edu; xin.xia@monash.edu; yyang@swin.edu.au
RI Li, Bo/GMW-7414-2022; Grundy, John/I-6681-2012
OI Li, Bo/0000-0002-3226-388X; Grundy, John/0000-0003-4928-7076
FU Australian Research Council Discovery Project [DP170101932,
   DP180100212]; Laureate Fellowship [FL190100035]
FX This work was partly funded by Australian Research Council Discovery
   Projects DP170101932, DP180100212 and Laureate Fellowship FL190100035.
CR Abdollahpouri H, 2017, PROCEEDINGS OF THE ELEVENTH ACM CONFERENCE ON RECOMMENDER SYSTEMS (RECSYS'17), P42, DOI 10.1145/3109859.3109912
   Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   Arlot S, 2010, STAT SURV, V4, P40, DOI 10.1214/09-SS054
   Backes M, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P356, DOI 10.1145/2976749.2978333
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Cremonesi P., 2010, P 4 ACM C REC SYST, P39, DOI [DOI 10.1145/1864708.1864721, 10.1145/1864708.1864721]
   de la Mora FL, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P37, DOI 10.1145/3183399.3183418
   Derr E, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2187, DOI 10.1145/3133956.3134059
   Ekstrand Michael D., 2010, Foundations and Trends in Human-Computer Interaction, V4, P81, DOI 10.1561/1100000009
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Gemulla Rainer, 2011, P ACM SIGKDD INT C K, P69
   Goldberg K, 2001, INFORM RETRIEVAL, V4, P133, DOI 10.1023/A:1011419012209
   GOLUB GH, 1970, NUMER MATH, V14, P403, DOI 10.1007/BF02163027
   Grace M. C., 2012, PROC 5 ACM C SECUR P, P101
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Gui-Rong Xue, 2005, SIGIR 2005. Proceedings of the Twenty-Eighth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P114
   Guo GB, 2017, KNOWL-BASED SYST, V122, P17, DOI 10.1016/j.knosys.2017.01.027
   Herlocker JL, 1999, SIGIR'99: PROCEEDINGS OF 22ND INTERNATIONAL CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P230, DOI 10.1145/312624.312682
   Hofmann T, 2004, ACM T INFORM SYST, V22, P89, DOI 10.1145/963770.963774
   Hu YF, 2008, IEEE DATA MINING, P263, DOI 10.1109/ICDM.2008.22
   Kaminskas M, 2017, ACM T INTERACT INTEL, V7, DOI 10.1145/2926720
   Khoshgoftaar T.M., 2009, ADV ARTIFICIAL INTEL, DOI [10.1155/2009/421425, DOI 10.1155/2009/421425]
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Konstan J., 2001, P 10 INT C WORLD WID, P285
   Koren Y., 2008, P 14 ACM SIGKDD INT, P426
   Koren Y, 2009, COMPUTER, V42, P30, DOI 10.1109/MC.2009.263
   Lathia N, 2010, SIGIR 2010: PROCEEDINGS OF THE 33RD ANNUAL INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH DEVELOPMENT IN INFORMATION RETRIEVAL, P210
   Li MH, 2017, PROC INT CONF SOFTW, P335, DOI 10.1109/ICSE.2017.38
   Liang DW, 2016, PROCEEDINGS OF THE 10TH ACM CONFERENCE ON RECOMMENDER SYSTEMS (RECSYS'16), P59, DOI 10.1145/2959100.2959182
   Lin MF, 2013, INFORM SYST RES, V24, P906, DOI 10.1287/isre.2013.0480
   Liu B., 2015, P ANN INT C MOB SYST, P89
   Ma Z, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P653, DOI 10.1145/2889160.2889178
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Mouzhi Ge, 2010, P 4 ACM C REC SYST B, P257, DOI [10.1145/1864708.1864761, DOI 10.1145/1864708.1864761]
   Narayanan A, 2014, 2014 IEEE NINTH INTERNATIONAL CONFERENCE ON INTELLIGENT SENSORS, SENSOR NETWORKS AND INFORMATION PROCESSING (IEEE ISSNIP 2014)
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Park YJ, 2008, RECSYS'08: PROCEEDINGS OF THE 2008 ACM CONFERENCE ON RECOMMENDER SYSTEMS, P11
   Rendle S., 2009, P 25 C UNCERTAINTY A, P452
   Shi Y, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2556270
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Wang J., 2006, Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P501, DOI 10.1145/1148170.1148257
   Yu RL, 2018, CIKM'18: PROCEEDINGS OF THE 27TH ACM INTERNATIONAL CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P1727, DOI 10.1145/3269206.3269283
   Yuan WZ, 2018, PROC IEEE ACM INT C, P364, DOI 10.1145/3183440.3195011
   Zhang XY, 2017, PROCEEDINGS OF THE ELEVENTH ACM CONFERENCE ON RECOMMENDER SYSTEMS (RECSYS'17), P98, DOI 10.1145/3109859.3109885
   Zhang YW, 2021, IEEE T SERV COMPUT, V14, P1333, DOI 10.1109/TSC.2019.2891517
   Zhang Y, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P141, DOI 10.1109/SANER.2018.8330204
   Zhao T., 2014, P 23 ACM INT C C INF, P261, DOI [DOI 10.1145/2661829.2661998, 10.1145/2661829.266199829.H]
   Zheng W., 2011, P 19 ACM SIGSOFT S 1, P480
   Zheng ZB, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430545.2430548
NR 51
TC 32
Z9 33
U1 1
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2022
VL 48
IS 1
BP 150
EP 165
DI 10.1109/TSE.2020.2982154
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YG0HJ
UT WOS:000742179000009
DA 2024-07-18
ER

PT J
AU Krishna, R
   Nair, V
   Jamshidi, P
   Menzies, T
AF Krishna, Rahul
   Nair, Vivek
   Jamshidi, Pooyan
   Menzies, Tim
TI Whence to Learn? Transferring Knowledge in Configurable Systems Using
   BEETLE
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Performance optimization; SBSE; transfer learning; bellwether
ID PERFORMANCE PREDICTION; EFFECT SIZE; ALGORITHM
AB As software systems grow in complexity and the space of possible configurations increases exponentially, finding the nearoptimal configuration of a software system becomes challenging. Recent approaches address this challenge by learning performance models based on a sample set of configurations. However, collecting enough sample configurations can be very expensive since each such sample requires configuring, compiling, and executing the entire system using a complex test suite. When learning on new data is too expensive, it is possible to use Transfer Learning to "transfer" old lessons to the new context. Traditional transfer learning has a number of challenges, specifically, (a) learning from excessive data takes excessive time, and (b) the performance of the models built via transfer can deteriorate as a result of learning from a poor source. To resolve these problems, we propose a novel transfer learning framework called BEETLE, which is a "bellwether"-based transfer learner that focuses on identifying and learning from the most relevant source from amongst the old data. This paper evaluates BEETLE with 57 different software configuration problems based on five software systems (a video encoder, an SAT solver, a SQL database, a high-performance C-compiler, and a streaming data analytics tool). In each of these cases, BEETLE found configurations that are as good as or better than those found by other state-of-the-art transfer learners while requiring only a fraction (1/7th) of the measurements needed by those other methods. Based on these results, we say that BEETLE is a new high-water mark in optimally configuring software.
C1 [Krishna, Rahul] Columbia Univ, Dept Comp Sci, New York, NY 10027 USA.
   [Nair, Vivek; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
   [Jamshidi, Pooyan] Univ South Carolina, Dept Comp Sci & Engn, Columbia, SC 29208 USA.
C3 Columbia University; North Carolina State University; University of
   South Carolina System; University of South Carolina Columbia
RP Krishna, R (corresponding author), Columbia Univ, Dept Comp Sci, New York, NY 10027 USA.
EM i.m.ralk@gmail.com; vivekaxl@gmail.com; pooyan.jamshidi@gmail.com;
   tim.menzies@gmail.com
RI Krishna, Rahul/HJG-7915-2022; Krishna, Rahul/AEX-7754-2022; Krishna,
   Rahul/AAF-1168-2022; Menzies, Tim/X-7680-2019; Jamshidi,
   Pooyan/K-2848-2014
OI Krishna, Rahul/0000-0002-5899-6651; Krishna, Rahul/0000-0002-5899-6651;
   Menzies, Tim/0000-0002-5040-3196; Jamshidi, Pooyan/0000-0002-9342-0703
CR Afridi MJ, 2018, PATTERN RECOGN, V73, P65, DOI 10.1016/j.patcog.2017.07.019
   Alipourfard O, 2017, PROCEEDINGS OF NSDI '17: 14TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION, P469
   [Anonymous], 2017, P INT C SOFTW ENG
   [Anonymous], 2018, ABS180301296 CORR
   [Anonymous], 2011, CIDR
   [Anonymous], 2006, P 15 INT C PARALLEL
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Ben-David S, 2003, LECT NOTES ARTIF INT, V2777, P567, DOI 10.1007/978-3-540-45167-9_41
   Birattari M., 2002, Proc. Genetic and Evolutionary Computation Conference (GECCO), P11
   Breiman L., 2017, Classification and Regression Trees, DOI [10.1201/9781315139470-8, DOI 10.1201/9781315139470-8, DOI 10.1201/9781315139470]
   Chen HF, 2011, IEEE T KNOWL DATA EN, V23, P388, DOI 10.1109/TKDE.2010.121
   Chen JF, 2019, IEEE T SOFTWARE ENG, V45, P597, DOI 10.1109/TSE.2018.2790925
   Chong Tang, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering: Companion (ICSE-Companion). Proceedings, P354, DOI 10.1145/3183440.3195006
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Efron B., 1993, Monographs on Statistics and Applied Probability, V57
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Golovin D, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1487, DOI 10.1145/3097983.3098043
   Guo JM, 2018, EMPIR SOFTW ENG, V23, P1826, DOI 10.1007/s10664-017-9573-6
   Guo JM, 2013, IEEE INT CONF AUTOM, P301, DOI 10.1109/ASE.2013.6693089
   Hsu CJ, 2018, PROCEEDINGS 2018 IEEE 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING (CLOUD), P409, DOI 10.1109/CLOUD.2018.00058
   Hsu CJ, 2018, INT CON DISTR COMP S, P660, DOI 10.1109/ICDCS.2018.00070
   Hutter F, 2014, ARTIF INTELL-AMST, V206, P79, DOI 10.1016/j.artint.2013.10.003
   Jamshidi Pooyan, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P31, DOI 10.1109/SEAMS.2017.11
   Jamshidi P, 2017, IEEE INT CONF AUTOM, P497, DOI 10.1109/ASE.2017.8115661
   Jamshidi P, 2016, I S MOD ANAL SIM COM, P39, DOI 10.1109/MASCOTS.2016.17
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kocaguneli E, 2015, EMPIR SOFTW ENG, V20, P813, DOI 10.1007/s10664-014-9300-5
   Kocaguneli E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P882, DOI 10.1109/ICSE.2013.6606637
   Kocaguneli E, 2011, INT SYMP EMP SOFTWAR, P255, DOI 10.1109/ESEM.2011.34
   Krishna R, 2019, IEEE T SOFTWARE ENG, V45, P1081, DOI 10.1109/TSE.2018.2821670
   Krishna R, 2016, IEEE INT CONF AUTOM, P122, DOI 10.1145/2970276.2970339
   Leech N.L., 2002, Annual Meeting of the MidSouth Educational Research Association, P1
   Loh PL, 2013, LECT NOTES ARTIF INT, V8139, P203
   Mensah S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P340, DOI 10.1109/QRS.2017.44
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Nair V, 2020, IEEE T SOFTWARE ENG, V46, P794, DOI 10.1109/TSE.2018.2870895
   Nair V, 2018, AUTOMAT SOFTW ENG, V25, P247, DOI 10.1007/s10515-017-0225-2
   Nair V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3106237.3106238
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Oh J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P61, DOI 10.1145/3106237.3106273
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Peng YH, 2018, EUROSYS '18: PROCEEDINGS OF THE THIRTEENTH EUROSYS CONFERENCE, DOI 10.1145/3190508.3190517
   Peters F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P801, DOI 10.1109/ICSE.2015.92
   Petkovich J., 2017, P 8 ACM SPEC INT C P, P39, DOI [10.1145/3030207.3030216, DOI 10.1145/3030207.3030216]
   Poulding S, 2010, IEEE T SOFTWARE ENG, V36, P763, DOI 10.1109/TSE.2010.24
   Rasmussen CE, 2004, LECT NOTES ARTIF INT, V3176, P63, DOI 10.1007/978-3-540-28650-9_4
   Rosenstein M.T., 2005, NIPS 2005 workshop on transfer learning, P1
   Sarkar A, 2015, IEEE INT CONF AUTOM, P342, DOI 10.1109/ASE.2015.45
   Scott EM, 2000, SENSITIVITY ANAL
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Siegmund N, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P284, DOI 10.1145/2786805.2786845
   Siegmund N, 2012, PROC INT CONF SOFTW, P167, DOI 10.1109/ICSE.2012.6227196
   Thereska E, 2010, PERF E R SI, V38, P1, DOI 10.1145/1811099.1811041
   Trubiani C, 2019, IEEE SOFTWARE, V36, P110, DOI 10.1109/MS.2018.2875989
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Valov P, 2015, P 19 INT C SOFTW PRO, P186, DOI [10.1145/2791060.2791069, DOI 10.1145/2791060.2791069]
   Van Aken D, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1009, DOI 10.1145/3035918.3064029
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang S, 2018, ACM SIGPLAN NOTICES, V53, P154, DOI [10.1145/3173162.3173206, 10.1145/3296957.3173206]
   Wang S, 2016, PROC INT CONF SOFTW, P631, DOI 10.1145/2884781.2884880
   Westermann D, 2012, IEEE INT CONF AUTOM, P190, DOI 10.1145/2351676.2351703
   Xu TY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P307, DOI 10.1145/2786805.2786852
   Yadwadkar NJ, 2017, PROCEEDINGS OF THE 2017 SYMPOSIUM ON CLOUD COMPUTING (SOCC '17), P452, DOI 10.1145/3127479.3131614
   Yosinski J, 2014, ADV NEUR IN, V27
   Zhu YQ, 2017, PROCEEDINGS OF THE 2017 SYMPOSIUM ON CLOUD COMPUTING (SOCC '17), P338, DOI 10.1145/3127479.3128605
NR 66
TC 14
Z9 16
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2021
VL 47
IS 12
BP 2956
EP 2972
DI 10.1109/TSE.2020.2983927
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XM6HB
UT WOS:000728924600019
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yamagata, Y
   Liu, S
   Akazaki, T
   Duan, YH
   Hao, JY
AF Yamagata, Yoriyuki
   Liu, Shuang
   Akazaki, Takumi
   Duan, Yihai
   Hao, Jianye
TI Falsification of Cyber-Physical Systems Using Deep Reinforcement
   Learning
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Robustness; Reinforcement learning; Model checking; Software;
   Optimization; Robustness guided falsification; CPS; reinforcement
   learning
AB A Cyber-Physical System (CPS) is a system which consists of software components and physical components. Traditional system verification techniques such as model checking or theorem proving are difficult to apply to CPS because the physical components have infinite number of states. To solve this problem, robustness guided falsification of CPS is introduced. Robustness measures how robustly the given specification is satisfied. Robustness guided falsification tries to minimize the robustness by changing inputs and parameters of the system. The input with a minimal robustness (counterexample) is a good candidate to violate the specification. Existing methods use several optimization techniques to minimize robustness. However, those methods do not use temporal structures in a system input and often require a large number of simulation runs to minimize the robustness. In this paper, we explore state-of-the-art Deep Reinforcement Learning (DRL) techniques, i.e., Asynchronous Advantage Actor-Critic (A3C) and Double Deep Q Network (DDQN), to reduce the number of simulation runs required to find such counterexamples. We theoretically show how robustness guided falsification of a safety property is formatted as a reinforcement learning problem. Then, we experimentally compare the effectiveness of our methods with three baseline methods, i.e., random sampling, cross entropy and simulated annealing, on three well known CPS systems. We thoroughly analyse the experiment results and identify two factors of CPS which make DRL based methods better than existing methods. The most important factor is the availability of the system internal dynamics to the reinforcement learning algorithm. The other factor is the existence of learnable structure in the counterexample.
C1 [Yamagata, Yoriyuki] Natl Inst Adv Ind Sci & Technol, Ikeda, Osaka 5638577, Japan.
   [Liu, Shuang; Duan, Yihai; Hao, Jianye] Tianjin Univ, Coll Intelligence & Comp, Tianjin 300372, Peoples R China.
   [Akazaki, Takumi] Fujitsu Labs, Kawasaki, Kanagawa 2118588, Japan.
   [Hao, Jianye] Huawei, Noahs Ark Lab, Shenzhen, Peoples R China.
C3 National Institute of Advanced Industrial Science & Technology (AIST);
   Tianjin University; Fujitsu Ltd; Fujitsu Laboratories Ltd; Huawei
   Technologies
RP Liu, S (corresponding author), Tianjin Univ, Coll Intelligence & Comp, Tianjin 300372, Peoples R China.
EM yoriyuki.yamagata@aist.go.jp; shuang.liu@tju.edu.cn;
   akazaki.takumi@jp.fujitsu.com; duanyihai@tju.edu.cn;
   jianye.hao@tju.edu.cn
RI Yamagata, Yoriyuki/N-6336-2016
OI Yamagata, Yoriyuki/0000-0003-2096-677X
FU National Natural Science Foundation of China [U1836214, 61802275,
   61702362]; Special Program of Artificial Intelligence; Tianjin Research
   Program of Application Foundation and Advanced Technology
   [16JCQNJC00100]; Special Program of Artificial Intelligence of Tianjin
   Municipal Science and Technology Commission [569 17ZXRGGX00150]
FX This work was partially supported by the National Natural Science
   Foundation of China (Grant Nos.: U1836214, 61802275, 61702362), Special
   Program of Artificial Intelligence, Tianjin Research Program of
   Application Foundation and Advanced Technology (No.: 16JCQNJC00100), and
   Special Program of Artificial Intelligence of Tianjin Municipal Science
   and Technology Commission (No.: 569 17ZXRGGX00150). This paper is
   partially based on results obtained from a project commissioned by the
   New Energy and Industrial Technology Development Organization (NEDO).
CR Abbas H, 2013, ACM T EMBED COMPUT S, V12, DOI 10.1145/2465787.2465797
   Abbas H, 2012, ANN ALLERTON CONF, P1594, DOI 10.1109/Allerton.2012.6483411
   Akazaki T, 2018, LECT NOTES COMPUT SC, V10951, P456, DOI 10.1007/978-3-319-95582-7_27
   Akazaki T, 2016, LECT NOTES COMPUT SC, V10012, P439, DOI 10.1007/978-3-319-46982-9_27
   Aksaray D, 2016, IEEE DECIS CONTR P, P6565, DOI 10.1109/CDC.2016.7799279
   Annapureddy Yashwanth Singh Rahul, 2010, IECON 2010 - 36th Annual Conference of IEEE Industrial Electronics, P91, DOI 10.1109/IECON.2010.5675195
   Annapureddy Y, 2011, LECT NOTES COMPUT SC, V6605, P254, DOI 10.1007/978-3-642-19835-9_21
   [Anonymous], 2016, ASYNCHRONOUS METHODS
   [Anonymous], 2017, CSRG632 U TOR
   Boyd S., 2004, CONVEX OPTIMIZATION
   Camacho A., 2017, SOCS, P159
   Clarke E., 2009, P 4 INT HAIF VER C H, P149, DOI [10.1007/978-3-642-01702-5_16, DOI 10.1007/978-3-642-01702-5_16]
   Cliff N., 2014, ORDINAL METHODS BEHA
   Cook J., 2011, WORKING PAPER SERIES, V70
   De Giacomo G., 2018, CORR, V1807
   Deshmukh J, 2017, ACM T EMBED COMPUT S, V16, DOI 10.1145/3126521
   Deshmukh J, 2015, LECT NOTES COMPUT SC, V9364, P500, DOI 10.1007/978-3-319-24953-7_35
   Dokhanchi A, 2014, LECT NOTES COMPUT SC, V8734, P231, DOI 10.1007/978-3-319-11164-3_19
   Donzé A, 2010, LECT NOTES COMPUT SC, V6246, P92, DOI 10.1007/978-3-642-15297-9_9
   Donzé A, 2010, LECT NOTES COMPUT SC, V6174, P167, DOI 10.1007/978-3-642-14295-6_17
   Dreossi T, 2015, LECT NOTES COMPUT SC, V9058, P127, DOI 10.1007/978-3-319-17524-9_10
   Fainekos GE, 2006, LECT NOTES COMPUT SC, V4262, P178
   Fainekos GE, 2012, P AMER CONTR CONF, P3567
   Fujita Y., 2019, P 33 INT C NEUR INF
   Grosu R, 2005, LECT NOTES COMPUT SC, V3440, P271
   Gu SX, 2016, PR MACH LEARN RES, V48
   Henzinger T.A., 2018, HDB MODEL CHECKING, DOI DOI 10.1007/978-3-319-10575-8
   Ho HM, 2014, LECT NOTES COMPUT SC, V8734, P178, DOI 10.1007/978-3-319-11164-3_15
   Hoxha B., 2015, ARCH14-15. 1st and 2nd International Workshop on Applied veRification for Continuous and Hybrid Systems, V34, P25
   Hu JH, 2000, LECT NOTES COMPUT SC, V1790, P160
   Jin X., 2014, P 17 INT C HYBR SYST, P253
   Jones A., 2015, ARXIV151006460CS
   Kapinski J, 2003, LECT NOTES COMPUT SC, V2623, P283
   Konietschke F, 2015, J STAT SOFTW, V64
   KOYMANS R, 1990, REAL-TIME SYST, V2, P255, DOI 10.1007/BF01995674
   Li X, 2017, IEEE INT C INT ROBOT, P3834, DOI 10.1109/IROS.2017.8206234
   Maler O, 2004, LECT NOTES COMPUT SC, V3253, P152, DOI 10.1007/978-3-540-30206-3_12
   Mnih V, 2013, ARXIV
   Mnih V, 2015, NATURE, V518, P529, DOI 10.1038/nature14236
   Nghiem T, 2010, HSSC 10: PROCEEDINGS OF THE 13TH ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P211
   Plaku E, 2009, LECT NOTES COMPUT SC, V5505, P368, DOI 10.1007/978-3-642-00768-2_31
   Polikarpova N., 2017, ACTIVE LEARNING APPR, DOI [10.1007/978-3-319-66845-1_1, DOI 10.1007/978-3-319-66845-1_1]
   Sankaranarayanan S, 2012, HSCC 12: PROCEEDINGS OF THE 15TH ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P125
   Silver D, 2016, NATURE, V529, P484, DOI 10.1038/nature16961
   Silvetti Simone, 2017, Integrated Formal Methods. 13th International Conference, IFM 2017. Proceedings: LNCS 10510, P3, DOI 10.1007/978-3-319-66845-1_1
   Sutton R., 1998, Reinforcement Learning: An Introduction
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Szepesvari C., 2010, Synthesis lectures on artificial intelligence and machine learning, V4, P1
   Wang Y, 2011, PROCEEDINGS OF THE TWELFTH ACM INTERNATIONAL SYMPOSIUM ON MOBILE AD HOC NETWORKING AND COMPUTING (MOBIHOC' 11), DOI 10.1145/2107502.2107518
   Yaghoubi S, 2018, IFAC PAPERSONLINE, V51, P103, DOI 10.1016/j.ifacol.2018.08.018
   Younes HLS, 2006, INFORM COMPUT, V204, P1368, DOI 10.1016/j.ic.2006.05.002
   Zuliani P, 2010, HSSC 10: PROCEEDINGS OF THE 13TH ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P243
NR 52
TC 17
Z9 17
U1 1
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2021
VL 47
IS 12
BP 2823
EP 2840
DI 10.1109/TSE.2020.2969178
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XM6HB
UT WOS:000728924600011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Huo, X
   Thung, F
   Li, M
   Lo, D
   Shi, ST
AF Huo, Xuan
   Thung, Ferdian
   Li, Ming
   Lo, David
   Shi, Shu-Ting
TI Deep Transfer Bug Localization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Feature extraction; Task analysis; Encoding; Computer
   languages; Semantics; Data models; Cross-project bug localization;
   transfer learning; deep learning
ID RETRIEVAL
AB Many projects often receive more bug reports than what they can handle. To help debug and close bug reports, a number of bug localization techniques have been proposed. These techniques analyze a bug report and return a ranked list of potentially buggy source code files. Recent development on bug localization has resulted in the construction of effective supervised approaches that use historical data of manually localized bugs to boost performance. Unfortunately, as highlighted by Zimmermann et al., sufficient bug data is often unavailable for many projects and companies. This raises the need for cross-project bug localization - the use of data from a project to help locate bugs in another project. To fill this need, we propose a deep transfer learning approach for cross-project bug localization. Our proposed approach named TRANP-CNN extracts transferable semantic features from source project and fully exploits labeled data from target project for effective cross-project bug localization. We have evaluated TRANP-CNN on curated high-quality bug datasets and our experimental results show that TRANP-CNN can locate buggy files correctly at top 1, top 5, and top 10 positions for 29.9, 51.7, 61.3 percent of the bugs respectively, which significantly outperform state-of-the-art bug localization solution based on deep learning and several other advanced alternative solutions considering various standard evaluation metrics.
C1 [Huo, Xuan; Li, Ming; Shi, Shu-Ting] Nanjing Univ, Natl Key Lab Noval Software Technol, Nanjing 210023, Peoples R China.
   [Thung, Ferdian; Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 17890, Singapore.
C3 Nanjing University; Singapore Management University
RP Li, M (corresponding author), Nanjing Univ, Natl Key Lab Noval Software Technol, Nanjing 210023, Peoples R China.
EM huox@lamda.nju.edu.cn; ferdiant.2013@smu.edu.cn; lim@lamda.nju.edu.cn;
   davidlo@smu.edu.cn; shist@lamda.nju.edu.cn
RI Thung, Ferdian/AAX-9321-2020; Lo, David/A-2493-2012
OI Lo, David/0000-0002-4367-7201
FU National Key Research and Development Program [2017YFB1001903]; NSFC
   [61422304]; Nanjing University
FX This research was supported by National Key Research and Development
   Program (2017YFB1001903) and NSFC (61422304). The first author was
   supported by the program A for Outstanding PhD candidate of Nanjing
   University.
CR Lam AN, 2017, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2017.24
   Lam AN, 2015, IEEE INT CONF AUTOM, P476, DOI 10.1109/ASE.2015.73
   [Anonymous], 2014, Proceedings of the 2014 conference on empirical methods in natural language processing (EMNLP), DOI [DOI 10.3115/V1/D14-1181, 10.3115/v1/D14-1181]
   Anvik J., 2005, P OOPSLA WORKSH ECL P 2005 OOPSLA WORKSH, P35
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Caruana R., 2006, ACM INT C P SER, P161, DOI DOI 10.1145/1143844.1143865
   Christopher D.M., 2008, An Introduction To Information Retrieval, V151, P177
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Globerson A., 2006, P NEUR INF PROC SYST ADV NEURAL INFORM PR, P451
   Guo J, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2017.9
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Huo X., 2016, P 25 INT JOINT C ART P 25 INT JOINT C ART, P1606
   Jiang Y, 2015, 2015 INTERNATIONAL SYMPOSIUM ON BIOELECTRONICS AND BIOINFORMATICS (ISBB), P1, DOI 10.1109/ISBB.2015.7344908
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kochhar P. S., 2016, P 25 INT S SOFTW TES ISSTA 2016 P 25 INT, P165
   Kochhar P. S., 2014, P 29 ACM IEEE INT C P 29 ACM IEEE INT C, P803
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Le T. B., 2016, P 25 INT S SOFTW TES, P177
   Lee SR, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P926, DOI 10.1145/3106237.3117776
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mikolov Tomas, 2013, Preprints
   Montgomery D.C., 2010, Applied Statistics and Probability for Engineers (Edicao: 6)
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Pan SJ, 2011, IEEE T NEURAL NETWOR, V22, P199, DOI 10.1109/TNN.2010.2091281
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Rao S., 2011, P 8 WORK C MIN SOFTW P 8 INT WORK C MIN S, P43
   Saha RK, 2014, PROC IEEE INT CONF S, P161, DOI 10.1109/ICSME.2014.38
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Sindhwani V., 2005, ICML, V2005, P74
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   Tassey G., 2002, NAT I STANDARDS TECH, V7007
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Zeiler M. D., 2012, CoRR
   Zhang MX, 2017, LECT NOTES COMPUT SC, V10538, P261, DOI [10.1007/978-3-319-68155-9_20, 10.1145/3092703.3092731]
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 42
TC 35
Z9 38
U1 0
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL 1
PY 2021
VL 47
IS 7
BP 1368
EP 1380
DI 10.1109/TSE.2019.2920771
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA TJ6XV
UT WOS:000673623000004
DA 2024-07-18
ER

PT J
AU Paolieri, M
   Biagi, M
   Carnevali, L
   Vicario, E
AF Paolieri, Marco
   Biagi, Marco
   Carnevali, Laura
   Vicario, Enrico
TI The ORIS Tool: Quantitative Evaluation of Non-Markovian Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Analytical models; Stochastic processes; Transient analysis; Java; Petri
   nets; Numerical models; Graphical user interfaces; Quantitative
   evaluation; formal methods; stochastic models; concurrency; stochastic
   Petri nets; non-Markovian processes; Markov regenerative processes;
   performance; reliability; software tools and libraries
ID STOCHASTIC PETRI NETS; TRANSIENT ANALYSIS; MODELS
AB We present the next generation of ORIS, a toolbox for quantitative evaluation of concurrent models with non-Markovian timers. The tool shifts its focus from timed models to stochastic ones, it includes a new graphical user interface, new analysis methods and a Java Application Programming Interface (API). Models can be specified as Stochastic Time Petri Nets (STPNs) through the graphical editor, validated using an interactive token game, and analyzed through several techniques to compute instantaneous or cumulative rewards. STPNs can also be exported as Java code to conduct extensive parametric studies through the Java library, now distributed as open-source. A well-engineered software architecture allows the user to implement new features for STPNs, new modeling formalisms, and new analysis methods. The most distinctive features of ORIS include transient and steady-state analysis of STPNs modeling Markov Regenerative Processes (MRPs), and transient analysis of STPNs modeling generalized semi-Markov processes. ORIS also supports state-space analysis of Time Petri Nets (TPNs), simulation of STPNs, and standard analysis techniques for continuous-time Markov chains or MRPs with at most one non-exponential timer in each state. We illustrate the general workflow for the application of ORIS to the modeling and evaluation of non-functional requirements of software-intensive systems.
C1 [Paolieri, Marco] Univ Southern Calif, Dept Comp Sci, 941 Bloom Walk, Los Angeles, CA 90089 USA.
   [Biagi, Marco; Carnevali, Laura; Vicario, Enrico] Univ Florence, Dept Informat Engn, Via Santa Marta 3, I-50139 Florence, Italy.
C3 University of Southern California; University of Florence
RP Paolieri, M (corresponding author), Univ Southern Calif, Dept Comp Sci, 941 Bloom Walk, Los Angeles, CA 90089 USA.
EM paolieri@usc.edu; marco.biagi@unifi.it; laura.carnevali@unifi.it;
   enrico.vicario@unifi.it
RI Paolieri, Marco/KIG-1853-2024; Paolieri, Marco/KFR-8807-2024
OI Paolieri, Marco/0000-0001-5110-203X; Paolieri,
   Marco/0000-0001-5110-203X; Biagi, Marco/0000-0002-8956-1175; VICARIO,
   ENRICO/0000-0002-4983-4386; CARNEVALI, LAURA/0000-0002-5896-4860
CR Amparore EG, 2016, SPRINGER SER RELIAB, P227, DOI 10.1007/978-3-319-30599-8_9
   Amparore EG, 2013, PERFORM EVALUATION, V70, P400, DOI 10.1016/j.peva.2013.02.002
   [Anonymous], 2017, P 11 EAI INT C PERF
   [Anonymous], 1995, Modeling and Analysis of Stochastic Systems
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Behrmann G, 2011, SOFTWARE PRACT EXPER, V41, P133, DOI 10.1002/spe.1006
   Berthomieu B, 2004, INT J PROD RES, V42, P2741, DOI [10.1080/00207540412331312688, 10.1080/00207540410001705257]
   BERTHOMIEU B, 1991, IEEE T SOFTWARE ENG, V17, P259, DOI 10.1109/32.75415
   Biagi M, 2017, LECT NOTES COMPUT SC, V10503, P20, DOI 10.1007/978-3-319-66335-7_2
   Biagi M, 2019, IEEE T HUM-MACH SYST, V49, P293, DOI 10.1109/THMS.2019.2903091
   Biagi M, 2019, ACM TRANS CYBER-PHYS, V3, DOI 10.1145/3284037
   Biagi M, 2017, TRANSPORT RES C-EMER, V82, P314, DOI 10.1016/j.trc.2017.07.002
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Bucci Giacomo, 2010, International Journal on Software Tools for Technology Transfer, V12, P391, DOI 10.1007/s10009-010-0156-8
   Cagno E, 2000, RELIAB ENG SYST SAFE, V67, P275, DOI 10.1016/S0951-8320(99)00070-8
   Carnevali Laura, 2011, Computer Safety, Reliability, and Security. Proceedings 30th International Conference, SAFECOMP 2011, P409, DOI 10.1007/978-3-642-24270-0_30
   Carnevali L., 2011, Proceedings of the 2011 Eighth International Conference on Quantitative Evaluation of Systems (QEST 2011), P153, DOI 10.1109/QEST.2011.29
   CARNEVALI L, 2015, P INT C QUANT EV SYS, P38
   Carnevali L, 2020, IEEE T SYST MAN CY-S, V50, P1704, DOI 10.1109/TSMC.2017.2783188
   Carnevali L, 2015, LECT NOTES COMPUT SC, V9272, P47, DOI 10.1007/978-3-319-23267-6_4
   Carnevali L, 2013, IEEE T SOFTWARE ENG, V39, P292, DOI 10.1109/TSE.2012.42
   Carnevali L, 2009, IEEE T SOFTWARE ENG, V35, P178, DOI 10.1109/TSE.2008.101
   CCOMMAINLAR E, 1975, MANAGE SCI, V21, P727
   CHOI H, 1994, PERFORM EVALUATION, V20, P337, DOI 10.1016/0166-5316(94)90021-3
   Ciardo G, 2006, PERFORM EVALUATION, V63, P578, DOI 10.1016/j.peva.2005.06.001
   CIARDO G, 1994, IEEE T SOFTWARE ENG, V20, P506, DOI 10.1109/32.297939
   Daws Conrado, 1995, HYBRID SYSTEMS 3, V1066
   Dehnert C, 2017, LECT NOTES COMPUT SC, V10427, P592, DOI 10.1007/978-3-319-63390-9_31
   DILL DL, 1990, LECT NOTES COMPUT SC, V407, P197
   ERA, 2005, SUBSET093 ERA
   ERA, 2016, SUBSET026 ERA ERTMSE
   FOX BL, 1988, COMMUN ACM, V31, P440, DOI 10.1145/42404.42409
   Gafni E, 2002, SIAM J COMPUT, V31, P816
   Gardey G, 2005, LECT NOTES COMPUT SC, V3576, P418
   Garg S, 1998, IEEE T COMPUT, V47, P96, DOI 10.1109/12.656092
   Garg S, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P180, DOI 10.1109/ISSRE.1995.497656
   German R, 2001, PERFORM EVALUATION, V44, P51, DOI 10.1016/S0166-5316(00)00061-4
   German R., 1995, Proceedings of the Sixth International Workshop on Petri Nets and Performance Models (Cat. No.95TB100003), P103, DOI 10.1109/PNPM.1995.524320
   GERMAN R, 1994, PERFORM EVALUATION, V20, P317, DOI 10.1016/0166-5316(94)90020-5
   Gilberto Elvio Amparore, 2010, Proceedings of the 2010 Seventh International Conference on the Quantitative Evaluation of Systems (QEST 2010), P153, DOI 10.1109/QEST.2010.26
   Grunske L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P31, DOI 10.1145/1368088.1368094
   Hessel Anders, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P77, DOI 10.1007/978-3-540-78917-8_3
   Hommel A, 2003, P INT PAR DISTR PROC
   Horváth A, 2002, LECT NOTES COMPUT SC, V2324, P82
   Horváth A, 2012, PERFORM EVALUATION, V69, P315, DOI 10.1016/j.peva.2011.11.002
   HUANG YN, 1995, DIG PAP INT SYMP FAU, P381, DOI 10.1109/FTCS.1995.466961
   Katoen JP, 2011, PERFORM EVALUATION, V68, P90, DOI 10.1016/j.peva.2010.04.001
   Kounev S, 2006, IEEE T SOFTWARE ENG, V32, P486, DOI 10.1109/TSE.2006.69
   Krichen M, 2004, LECT NOTES COMPUT SC, V2989, P109
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   LAMPORT L, 1987, ACM T COMPUT SYST, V5, P1, DOI 10.1145/7351.7352
   MARSAN MA, 1984, ACM T COMPUT SYST, V2, P93, DOI 10.1145/190.191
   Martina S, 2016, I S MOD ANAL SIM COM, P355, DOI 10.1109/MASCOTS.2016.72
   ORIS Tool, 2019, HOM
   Paolieri M, 2016, IEEE T SOFTWARE ENG, V42, P153, DOI 10.1109/TSE.2015.2468717
   Paterson C, 2020, IEEE T SOFTWARE ENG, V46, P526, DOI 10.1109/TSE.2018.2864159
   Qu H., 2009, ICST, P446
   Reinecke Philipp, 2013, Computer Performance Engineering. 10th European Workshop, EPEW 2013. Proceedings: LNCS 8168, P164, DOI 10.1007/978-3-642-40725-3_13
   Salfner F, 2010, J SYST SOFTWARE, V83, P1579, DOI 10.1016/j.jss.2010.05.022
   Sanders W.H., 2002, LECT FORMAL METHODS, V2090, P315, DOI DOI 10.1007/3-540-44667-2_9
   Sassoli L, 2007, INT CONF QUANT EVAL, P59, DOI 10.1109/QEST.2007.23
   Stewart W.J., 1995, Introduction to the Numerical Solution of Markov Chains
   Telek M, 2001, PERFORM EVALUATION, V45, P205, DOI 10.1016/S0166-5316(00)00066-3
   Trivedi Kishor S., 2009, Performance Evaluation Review, V36, P52, DOI 10.1145/1530873.1530884
   Trivedi K.S., 2001, Probability and statistics with reliability, queueing, and computer science applications, V2nd
   van Kasteren TLM, 2010, J AMB INTEL SMART EN, V2, P311, DOI 10.3233/AIS-2010-0070
   van Moorsel APA, 2006, IEEE T SOFTWARE ENG, V32, P547, DOI 10.1109/TSE.2006.73
   Vicario E, 2001, IEEE T SOFTWARE ENG, V27, P728, DOI 10.1109/32.940727
   Vicario E., 2013, P INT C PERF EV METH, P145
   Vicario E, 2009, IEEE T SOFTWARE ENG, V35, P703, DOI 10.1109/TSE.2009.36
   WHITT W, 1982, OPER RES, V30, P125, DOI 10.1287/opre.30.1.125
   Zimmermann A, 2017, LECT NOTES COMPUT SC, V10503, P300, DOI 10.1007/978-3-319-66335-7_19
NR 72
TC 16
Z9 16
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2021
VL 47
IS 6
BP 1211
EP 1225
DI 10.1109/TSE.2019.2917202
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SQ8XU
UT WOS:000660633800007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Grano, G
   Palomba, F
   Gall, HC
AF Grano, Giovanni
   Palomba, Fabio
   Gall, Harald C.
TI Lightweight Assessment of Test-Case Effectiveness Using
   Source-Code-Quality Indicators
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Production; Estimation; Measurement; Predictive models; Machine
   learning; Computational modeling; Automated software testing; mutation
   testing; software quality
ID SELECTION; MUTATION; METRICS; MAINTAINABILITY; PREDICTION; SMELLS
AB Test cases are crucial to help developers preventing the introduction of software faults. Unfortunately, not all the tests are properly designed or can effectively capture faults in production code. Some measures have been defined to assess test-case effectiveness: the most relevant one is the mutation score, which highlights the quality of a test by generating the so-called mutants, i.e., variations of the production code that make it faulty and that the test is supposed to identify. However, previous studies revealed that mutation analysis is extremely costly and hard to use in practice. The approaches proposed by researchers so far have not been able to provide practical gains in terms of mutation testing efficiency. This leaves the problem of efficiently assessing test-case effectiveness as still open. In this paper, we investigate a novel, orthogonal, and lightweight methodology to assess test-case effectiveness: in particular, we study the feasibility to exploit production and test-code-quality indicators to estimate the mutation score of a test case. We first select a set of 67 factors and study their relation with test-case effectiveness. Then, we devise a mutation score estimation model exploiting such factors and investigate its performance as well as its most relevant features. The key results of the study reveal that our estimation model only based on static features has 86 percent of both F-Measure and AUC-ROC. This means that we can estimate the test-case effectiveness, using source-code-quality indicators, with high accuracy and without executing the tests. As a consequence, we can provide a practical approach that is beyond the typical limitations of current mutation testing techniques.
C1 [Grano, Giovanni; Palomba, Fabio; Gall, Harald C.] Univ Zurich, CH-8006 Zurich, Switzerland.
C3 University of Zurich
RP Grano, G (corresponding author), Univ Zurich, CH-8006 Zurich, Switzerland.
EM grano@ifi.uzh.ch; palomba@ifi.uzh.ch; gall@ifi.uzh.ch
RI Grano, Giovanni/ABA-1024-2021
OI Grano, Giovanni/0000-0002-8207-3259; Gall, Harald/0000-0002-3874-5628;
   Palomba, Fabio/0000-0001-9337-5116
FU Swiss National Science Foundation (SNSF) [200021_166275]; SNSF
   [PP00P2_170529]; Swiss National Science Foundation (SNF) [200021_166275]
   Funding Source: Swiss National Science Foundation (SNF)
FX Grano and Gall acknowledge the support of the Swiss National Science
   Foundation (SNSF) through the Project no. 200021_166275; Palomba
   acknowledges the support of the SNSF through the Project no.
   PP00P2_170529.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   Baeza-Yates R., 1999, MODERN INFORM RETRIE, V463
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Bavota G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P56, DOI 10.1109/ICSM.2012.6405253
   Beller M, 2019, IEEE T SOFTWARE ENG, V45, P261, DOI 10.1109/TSE.2017.2776152
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Blum AL, 1997, ARTIF INTELL, V97, P245, DOI 10.1016/S0004-3702(97)00063-5
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P513, DOI 10.1109/32.926174
   Brown DB, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/3106237.3106280
   Budd T. A., 1980, THESIS NEW HAVEN USA
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Cawley GC, 2010, J MACH LEARN RES, V11, P2079
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CONOVER WJ, 1999, PRACTICAL NONPARAMET
   Daka E, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P107, DOI 10.1145/2786805.2786838
   Delahaye M, 2015, SOFTWARE PRACT EXPER, V45, P875, DOI 10.1002/spe.2312
   Di Nucci D, 2017, IEEE TETCI, V1, P202, DOI 10.1109/TETCI.2017.2699224
   Fernandes L, 2017, PROCEEDINGS OF THE 16TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES (GPCE'17), P187, DOI 10.1145/3136040.3136053
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Frankl PG, 1997, J SYST SOFTWARE, V38, P235, DOI 10.1016/S0164-1212(96)00154-9
   Goldber D. E., 1988, Machine Learning, V3, P95, DOI 10.1023/A:1022602019183
   Gopinath R, 2017, IEEE T RELIAB, V66, P854, DOI 10.1109/TR.2017.2705662
   Gopinath R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P72, DOI 10.1145/2568225.2568278
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Grabmeier J. L., 2007, International Journal of Business Intelligence and Data Mining, V2, P213, DOI 10.1504/IJBIDM.2007.013938
   Grano G, 2018, INT C PROGRAM COMPRE, P348, DOI 10.1145/3196321.3196363
   Grano Giovanni, 2019, Zenodo, DOI 10.5281/ZENODO.2571468
   Grano G, 2018, 2018 IEEE WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE), P19, DOI 10.1109/MALTESQUE.2018.8368454
   Grechanik M, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P353, DOI 10.1109/QRS.2016.47
   Greiler M, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P322, DOI 10.1109/ICST.2013.45
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Hall M. A., 1999, Proceedings of the Twelfth International Florida AI Research Society Conference, P235
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Henderson-Sellers B., 1995, OBJECT ORIENTED METR
   Henry S., 1981, Performance Evaluation Review, V10, P81, DOI 10.1145/1010627.807911
   HOLM S, 1979, SCAND J STAT, V6, P65
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Hsu C.-W., 2003, PRACTICAL GUIDE SUPP
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   John G.H., 1994, P 11 INT C MACH LEAR, P121
   Just R., 2014, INT S SOFTWARE TESTI, P315, DOI [DOI 10.1145/2610384.2610388, 10.1145/2610384.2610388]
   Just R., 2014, P 2014 INT S SOFTW T, P433
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kabinna S, 2018, EMPIR SOFTW ENG, V23, P290, DOI 10.1007/s10664-017-9518-0
   Klaus K., 1980, Content analysis: An introduction to its methodology
   Kocaguneli E, 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, P321, DOI DOI 10.1145/1858996.1859061
   Krstajic D, 2014, J CHEMINFORMATICS, V6, DOI 10.1186/1758-2946-6-10
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Kurtz B, 2015, IEEE ICST WORKSHOP
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   Li N, 2009, IEEE ICST WORKSHOP, P220, DOI 10.1109/ICSTW.2009.30
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Liu MH, 2006, PROC IEEE INT CONF S, P113
   Lo BWN, 1998, 1998 INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: EDUCATION & PRACTICE, PROCEEDINGS, P330, DOI 10.1109/SEEP.1998.707667
   Lubsen Z, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P151, DOI 10.1109/MSR.2009.5069493
   Lui KM, 2006, INT J HUM-COMPUT ST, V64, P915, DOI 10.1016/j.ijhcs.2006.04.010
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Marsavina C, 2014, IEEE INT WORK C SO, P195, DOI 10.1109/SCAM.2014.28
   Mathur A. P., 1994, Software Testing, Verification and Reliability, V4, P9, DOI 10.1002/stvr.4370040104
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Offutt AJ, 1996, COMPASS '96 - PROCEEDINGS OF THE ELEVENTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P224, DOI 10.1109/CMPASS.1996.507890
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   Offutt J, 2011, INFORM SOFTWARE TECH, V53, P1098, DOI 10.1016/j.infsof.2011.03.007
   Palomba F, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Palomba F, 2018, PROC IEEE INT CONF S, P311, DOI 10.1109/ICSME.2018.00040
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2017, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2017.12
   Palomba F, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P5, DOI [10.1145/2897010.2897016, 10.1109/SBST.2016.010]
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Pinto L.S., 2012, P ACM SIGSOFT 20 INT, P1
   Qusef A., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P63, DOI 10.1109/ICSM.2011.6080773
   Qusef A, 2013, J SOFTW-EVOL PROC, V25, P1167, DOI 10.1002/smr.1573
   Romano S, 2017, PROC IEEE ACM INT C, P19, DOI 10.1109/ICSE-C.2017.12
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Scalabrino S, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Scalabrino S, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1958
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Shi A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P246, DOI 10.1145/2635868.2635921
   Shirabad J.S., 2000, P C CTR ADV STUDIES, P11
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   STONE M, 1974, J R STAT SOC B, V36, P111, DOI 10.1111/j.2517-6161.1974.tb00994.x
   Strug Joanna, 2012, Testing Software and Systems. 24th IFIP WG 6.1 International Conference (ICTSS 2012). Proceedings, P200, DOI 10.1007/978-3-642-34691-0_15
   Sun C, 2017, IEEE I CONF COMP VIS, P843, DOI 10.1109/ICCV.2017.97
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Van Rompaey B, 2007, IEEE T SOFTWARE ENG, V33, P800, DOI 10.1109/TSE.2007.70745
   Wei Y, 2012, LECT NOTES COMPUT SC, V7007, P194
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
   Zhang J, 2019, IEEE T SOFTWARE ENG, V45, P898, DOI 10.1109/TSE.2018.2809496
   Zhang YC, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P214, DOI 10.1145/2786805.2786858
   Zhu QQ, 2018, IEEE INT CONF SOFTW, P274, DOI 10.1109/ICST.2018.00035
NR 108
TC 24
Z9 26
U1 2
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2021
VL 47
IS 4
BP 758
EP 774
DI 10.1109/TSE.2019.2903057
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA RP8GH
UT WOS:000641961100004
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Ling, X
   Agrawal, R
   Menzies, T
AF Ling, Xiao
   Agrawal, Rishabh
   Menzies, Tim
TI How Different is Test Case Prioritization for Open and Closed Source
   Projects?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Software; Open source software; Software development
   management; Measurement; Software algorithms; History; Software testing;
   regression testing; test case prioritization; open-source software
AB Improved test case prioritization means that software developers can detect and fix more software faults sooner than usual. But is there one "best" prioritization algorithm? Or do different kinds of projects deserve special kinds of prioritization? To answer these questions, this article applies nine prioritization schemes to 31 projects that range from (a) highly rated open-source Github projects to (b) computational science software to (c) a closed-source project. We find that prioritization approaches that work best for open-source projects can work worst for the closed-source project (and vice versa). From these experiments, we conclude that (a) it is ill-advised to always apply one prioritization scheme to all projects since (b) prioritization requires tuning to different project types.
C1 [Ling, Xiao; Agrawal, Rishabh; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Ling, X (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM lingxiaohzsz3ban@gmail.com; ragrawa3@ncsu.edu; timm@ieee.org
RI Menzies, Tim/X-7680-2019
OI Menzies, Tim/0000-0002-5040-3196; Agrawal, Rishabh/0000-0002-8714-1601;
   Ling, Xiao/0000-0002-1398-9319
FU National Science Foundation [1703487]; Direct For Computer & Info Scie &
   Enginr; Division of Computing and Communication Foundations [1703487]
   Funding Source: National Science Foundation
FX This work was supported in part by a Research Grant from the National
   Science Foundation under Grant CCF #1703487.
CR Agrawal A, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P245, DOI 10.1145/3183519.3183549
   [Anonymous], 2018, CORE DNA
   Beller M, 2019, IEEE T SOFTWARE ENG, V45, P261, DOI 10.1109/TSE.2017.2776152
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Beller M, 2017, IEEE WORK CONF MIN S, P447, DOI 10.1109/MSR.2017.24
   Beller M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P179, DOI 10.1145/2786805.2786843
   Bin Noor T, 2015, 2015 IEEE 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN), P13, DOI 10.1109/SWAN.2015.7070482
   Carlson Ryan, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P382, DOI 10.1109/ICSM.2011.6080805
   Chen JF, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P916, DOI 10.1145/3338906.3340450
   Chittimalli PK, 2007, PROC IEEE INT CONF S, P164, DOI 10.1109/ICSM.2007.4362629
   Cho Y, 2016, ASIA PAC SOFWR ENG, P385, DOI [10.1109/APSEC.2016.066, 10.1109/APSEC.2016.24]
   Company news, 1994, NEW YORK TIMES
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Elbaum S, 2004, SOFTWARE QUAL J, V12, P185, DOI 10.1023/B:SQJO.0000034708.84524.22
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Fazlalizadeh Y, 2009, 2009 2ND IEEE INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND INFORMATION TECHNOLOGY, VOL 1, P190, DOI 10.1109/ICCSIT.2009.5234968
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Haidry SEZ, 2013, IEEE T SOFTWARE ENG, V39, P258, DOI 10.1109/TSE.2012.26
   Hess M. R., 2004, ANN M AM ED RES ASS, P1
   Hihn J., 2017, PROC IEEE AEROSP C, P1
   Jeffrey D, 2006, P INT COMP SOFTW APP, P411
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kim JM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P119, DOI 10.1109/ICSE.2002.1007961
   Kocaguneli E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P882, DOI 10.1109/ICSE.2013.6606637
   Koch S, 2002, INFORM SYST J, V12, P27, DOI 10.1046/j.1365-2575.2002.00110.x
   Krishna R, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P306, DOI 10.1145/3183519.3183548
   Layman L, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P303, DOI 10.1145/2901739.2901760
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Lu YF, 2016, PROC INT CONF SOFTW, P535, DOI 10.1145/2884781.2884874
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Mahajan S, 2015, 1ST INTERNATIONAL CONFERENCE ON COMPUTING COMMUNICATION CONTROL AND AUTOMATION ICCUBEA 2015, P847, DOI 10.1109/ICCUBEA.2015.169
   Malishevsky A.G., 2006, Cost-cognizant test case prioritization
   Malz C., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P483, DOI 10.1109/ICST.2012.131
   Marijan D, 2013, PROC IEEE INT CONF S, P540, DOI 10.1109/ICSM.2013.91
   Menzies T, 2017, EMPIR SOFTW ENG, V22, P1903, DOI 10.1007/s10664-016-9469-x
   Menzies T, 2008, INNOV SYST SOFTW ENG, V4, P169, DOI 10.1007/s11334-008-0046-3
   Miller S., 2012, WALL STREET J
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Qu B, 2007, P INT COMP SOFTW APP, P465
   Raja U, 2012, IEEE T SOFTWARE ENG, V38, P163, DOI 10.1109/TSE.2011.39
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Shrikanth N., 2019, ARXIV 191210093
   Srikanth H, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P62, DOI 10.1109/ISESE.2005.1541815
   Tu H., 2020, ARXIV 200305922
   Vance A., 2010, The New York Times
   Wang JJ, 2021, IEEE T SOFTWARE ENG, V47, P1259, DOI 10.1109/TSE.2019.2918520
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   Xia T., 2018, ARXIV 180500336
   Yu Z, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P883, DOI 10.1145/3338906.3340448
   Zemlin J., 2017, YOU CANT MEASURE IT
   Zhang L, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P213
   Zhu YC, 2018, PROC IEEE INT CONF S, P69, DOI 10.1109/ICSME.2018.00016
NR 57
TC 4
Z9 4
U1 3
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 2
PY 2021
VL 48
IS 7
BP 2526
EP 2540
DI 10.1109/TSE.2021.3063220
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5YV
UT WOS:000825973100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tamburri, DA
   Palomba, F
   Kazman, R
AF Tamburri, Damian A.
   Palomba, Fabio
   Kazman, Rick
TI Exploring Community Smells in Open-Source: An Automated Approach
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; Open source software; Organizational aspects;
   Social networking (online); Tools; Microstructure; Software
   organisational structures; software community smells; human aspects in
   software engineering; social software engineering; empirical software
   engineering
ID IMPACT
AB Software engineering is now more than ever a community effort. Its success often weighs on balancing distance, culture, global engineering practices and more. In this scenario many unforeseen socio-technical events may result into additional project cost or "social" debt, e.g., sudden, collective employee turnover. With industrial research we discovered community smells, that is, sub-optimal patterns across the organisational and social structure in a software development community that are precursors of such nasty socio-technical events. To understand the impact of community smells at large, in this paper we first introduce CodeFace4Smells, an automated approach able to identify four community smell types that reflect socio-technical issues that have been shown to be detrimental both the software engineering and organisational research fields. Then, we perform a large-scale empirical study involving over 100 years worth of releases and communication structures data of 60 open-source communities: we evaluate (i) their diffuseness, i.e., how much are they distributed in open-source, (ii) how developers perceive them, to understand whether practitioners recognize their presence and their negative effects in practice, and (iii) how community smells relate to existing socio-technical factors, with the aim of assessing the inter-relations between them. The key findings of our study highlight that community smells are highly diffused in open-source and are perceived by developers as relevant problems for the evolution of software communities. Moreover, a number of state-of-the-art socio-technical indicators (e.g., socio-technical congruence) can be used to monitor how healthy a community is and possibly avoid the emergence of social debt.
C1 [Tamburri, Damian A.] Eindhoven Univ Technol, Eindhoven, Netherlands.
   [Palomba, Fabio] Univ Zurich, CH-8006 Zurich, Switzerland.
   [Kazman, Rick] Univ Hawaii, Informat Technol Management, Honolulu, HI 96822 USA.
   [Kazman, Rick] SEI CMU, Honolulu, HI 96822 USA.
C3 Eindhoven University of Technology; University of Zurich; University of
   Hawaii System
RP Palomba, F (corresponding author), Univ Zurich, CH-8006 Zurich, Switzerland.
EM d.a.tamburri@tue.nl; palomba@ifi.uzh.ch; kazman@hawaii.edu
RI Tamburri, Damian Andrew/AAJ-2507-2021
OI Tamburri, Damian Andrew/0000-0003-1230-8961; Kazman,
   Rick/0000-0003-0392-2783; Palomba, Fabio/0000-0001-9337-5116
FU SNSF Project named "Data-driven Contemporary Code Review"
   [PP00P2_170529]
FX The authors would like to thank Dr. Simone Magnoni to the definition and
   refinement of the contents of this study and to Prof. Dr. Elisabetta Di
   Nitto for the feedback she gave during the inception of this study. Dr.
   Palomba gratefully acknowledges the support of the SNSF Project named
   "Data-driven Contemporary Code Review" (No. PP00P2_170529).
CR Allman E, 2012, COMMUN ACM, V55, P50, DOI 10.1145/2160718.2160733
   Alter S., 2003, COMMUN ASSOC INF SYS, V12
   [Anonymous], 2014, P FSESDP WORKSHOP FU, DOI [10.1145/2593882.2593896, DOI 10.1145/2593882.2593896]
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   Antoine J.Y., 2014, P 14 C EUR CHAPT ASS, P550, DOI DOI 10.3115/V1/E14-1058
   Avelino Guilherme, 2016, Proceedings of IEEE 24th International Conference on Program Comprehension (ICPC), P1
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Bird Christian, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P237, DOI 10.1109/MSR.2012.6224286
   Bird Christian, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P109, DOI 10.1109/ISSRE.2009.17
   Bird C, 2009, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2009.5070550
   Borgatti SP, 2006, SOC NETWORKS, V28, P124, DOI 10.1016/j.socnet.2005.05.001
   Carley KM, 1999, RES SOC ORG, V16, P3
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Cataldo M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P1027
   Cataldo Marcelo, 2006, P 2006 20 ANNIVERSAR, P353, DOI DOI 10.1145/1180875.1180929
   Cho J., 2007, ISSUES INF SYST, V8, P287
   Cohen J., 1988, STAT POWER ANAL BEHA
   COLEMAN J.S., 1987, MICROMACRO LINK, P153
   Colfer L., 2010, Harvard Business School Working Paper
   CONWAY ME, 1968, DATAMATION, V14, P28
   Dittrich Y, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P87, DOI 10.1145/3195836.3195856
   FISHER RJ, 1993, J CONSUM RES, V20, P303, DOI 10.1086/209351
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Gkantsidis C., 2003, P 5 WORKSH ALG ENG E
   Gonçalves B, 2011, PLOS ONE, V6, DOI 10.1371/journal.pone.0022656
   Gotterbarn D., 2012, INROADS, V3, P4
   Herbsleb J. D., 2003, Software Engineering Notes, V28, P138, DOI 10.1145/949952.940091
   Herbsleb JD, 1999, IEEE SOFTWARE, V16, P63, DOI 10.1109/52.795103
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Herbsleb JD, 2001, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.2001.919083
   Hinds PJ, 2000, ORGAN BEHAV HUM DEC, V81, P226, DOI 10.1006/obhd.1999.2875
   Huang Q, 2013, INFORM TECHNOL PEOPL, V26, P191, DOI 10.1108/ITP-04-2013-0068
   Hunt KJ, 2013, BMC MED RES METHODOL, V13, DOI 10.1186/1471-2288-13-3
   Joblin M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P563, DOI 10.1109/ICSE.2015.73
   Kazman R, 2016, IEEE T SOFTWARE ENG, V42, P222, DOI 10.1109/TSE.2015.2465387
   Kelley K, 2003, INT J QUAL HEALTH C, V15, P261, DOI 10.1093/intqhc/mzg031
   KRACKHARDT D, 1988, SOC NETWORKS, V10, P359, DOI 10.1016/0378-8733(88)90004-4
   Krackhardt D, 2002, SOC NETWORKS, V24, P279, DOI 10.1016/S0378-8733(02)00008-4
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Kwan I, 2011, IEEE T SOFTWARE ENG, V37, P307, DOI 10.1109/TSE.2011.29
   Lavallee M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P677, DOI 10.1109/ICSE.2015.83
   Leistner F., 2012, Connecting organizational silos. Taking knowledge flow management to the next level with social media
   Levina N, 2005, MIS QUART, V29, P335
   Likert R., 1932, Arch. Psychol., V22, P44, DOI DOI 10.4135/9781412961288.N454
   Liljeros F., 2015, RESPONDENT DRIVEN SA
   Mac Carron P, 2016, SOC NETWORKS, V47, P151, DOI 10.1016/j.socnet.2016.06.003
   Magnoni S., 2016, COPYRIGHT POLITECNI
   Mao YB, 2020, IEEE T NETW SCI ENG, V7, P688, DOI 10.1109/TNSE.2018.2878377
   Merton RK., 1968, Social theory and social structure (enlarged edition)
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Newman M.E. J., 2003, Physical Review E, V69, P066133
   Palomba F, 2021, IEEE T SOFTWARE ENG, V47, P108, DOI 10.1109/TSE.2018.2883603
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Prilla Michael, 2015, AIS Transactions on Human -Computer Interaction, V7, P1
   Pugh D., ORG THEORY, V2nd
   RAPOPORT ANATOL, 1957, BULL MATH BIOPHYS, V19, P257, DOI 10.1007/BF02478417
   Riehle D, 2014, P ANN HICSS, P3286, DOI 10.1109/HICSS.2014.407
   Saeki M., 1995, Proceedings 1995 Asia Pacific Software Engineering Conference, P12, DOI 10.1109/APSEC.1995.496949
   Seaman C., 2015, SIGSOFT Softw. Eng. Notes, V40, P32, DOI DOI 10.1145/2735399.2735419
   Serrat O., 2017, KNOWLEDGE SOLUTIONS, P711, DOI [10.1007/978-981-10-0983-9_77, DOI 10.1007/978-981-10-0983-9_77]
   Sharp H., 2005, ACM SIGSOFT SOFTW EN, V30, P1
   Stein K., 2013, THESIS U MAINZ MAINZ
   Storey Margaret-Anne, 2014, FUT SOFTW ENG P, P100, DOI 10.1145/2593882.2593887
   Student, 1921, Biometrika, V13, P263, DOI 10.1093/biomet/13.2-3.263
   Sugar W., 2014, Studies of ID practices: A review and synthesis of research on current ID practices, DOI [DOI 10.1007/978-3-319-03605-2, 10.1007/978-3-319-03605-2]
   Tamburri D., 2018, EXPLORING COMMUNITY
   Tamburri DA, 2016, IEEE SOFTWARE, V33, P70, DOI 10.1109/MS.2016.144
   Tamburri DA, 2015, J INTERNET SERV APPL, V6, DOI 10.1186/s13174-015-0024-6
   Tamburri DA, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P61, DOI 10.1109/WICSA.2015.16
   Tamburri DA, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P93, DOI 10.1109/CHASE.2013.6614739
   Tamburri DA, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2522968.2522971
   Tamburri DA, 2013, IEEE SOFTWARE, V30, P29, DOI 10.1109/MS.2012.170
   Torchiano Marco, 2011, P 2 INT WORKSH EM TR, P12, DOI [DOI 10.1145/1985374, 10.1145/1985374.1985379., DOI 10.1145/1985374.1985379]
   Van Osch W, 2017, PROCEEDINGS OF THE 50TH ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P1974
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Wolfe AW, 1997, AM ETHNOL, V24, P219, DOI 10.1525/ae.1997.24.1.219
   Zaidman A., 2017, EMPIRICAL SOFTW ENG, P1
   Zhao JC, 2014, NEUROCOMPUTING, V142, P343, DOI 10.1016/j.neucom.2014.04.025
NR 79
TC 39
Z9 42
U1 1
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2021
VL 47
IS 3
BP 630
EP 652
DI 10.1109/TSE.2019.2901490
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA RA1TM
UT WOS:000631200300010
OA Green Published
DA 2024-07-18
ER

PT J
AU França, C
   da Silva, FQB
   Sharp, H
AF Franca, Cesar
   da Silva, Fabio Q. B.
   Sharp, Helen
TI Motivation and Satisfaction of Software Engineers
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Software engineering; Productivity; Interviews; Text analysis;
   Cultural differences; Electronic mail; Work motivation; job
   satisfaction; human resource management; software engineering
ID WORK MOTIVATION; JOB-SATISFACTION; INFORMATION; PERFORMANCE
AB Context: The proper management of people can help software organisations to achieve higher levels of success. However, the limited attention paid to the appropriate use of theories to underpin the research in this area leaves it unclear how to deal with human aspects of software engineers, such as motivation and satisfaction. Objectives: This article aims to expose what drives the motivation and satisfaction of software engineers at work. Methods: A multiple case study was conducted at four software organisations in Brazil. For 11 months, data was collected using semi-structured interviews, diary studies, and document analyses. Results: The Theory of Motivation and Satisfaction of Software Engineers (TMS-SE), presented in this article, combines elements from well established theories with new findings, and translates them into the software engineering context. Conclusion: The TMS-SE advances the understanding of people management in the software engineering field and presents a strong conceptual framework for future investigations in this area.
C1 [Franca, Cesar] Univ Fed Rural Pernambuco UFRPE, Dept Comp, Rua Dom Manoel de Medeiros S-N, BR-52171900 Recife, PE, Brazil.
   [da Silva, Fabio Q. B.] Univ Fed Rural Pernambuco UFRPE, Ctr Informat, Cidade Univ, BR-50740560 Recife, PE, Brazil.
   [Sharp, Helen] Open Univ, Ctr Res Comp, Milton Keynes MK7 6AA, Bucks, England.
C3 Universidade Federal Rural de Pernambuco (UFRPE); Universidade Federal
   Rural de Pernambuco (UFRPE); Open University - UK
RP França, C (corresponding author), Univ Fed Rural Pernambuco UFRPE, Dept Comp, Rua Dom Manoel de Medeiros S-N, BR-52171900 Recife, PE, Brazil.
EM cesar@franssa.com; fabio@cin.ufpe.br; h.c.sharp@open.ac.uk
RI da Silva, Fabio Queda Bueno/A-6524-2012
OI da Silva, Fabio Queda Bueno/0000-0002-3734-040X; Franca,
   Cesar/0000-0002-0863-3764; Sharp, Helen/0000-0003-4376-1734
FU Brazilian National Research Council (CNPq) [314523/2009-0]; CNPq
   [141156/2010-4]
FX Professor Fabio Q. B. da Silva holds a research grant from the Brazilian
   National Research Council (CNPq), process #314523/2009-0. The research
   that led to the results presented here were conducted while Cesar Franca
   was a PhD student at UFPE, holding a CNPq grant process #141156/2010-4.
   The authors owe a special thanks to their colleagues Adelnei Felix, Ana
   Catarina Araujo, David Carneiro, Eric Sales, Pedro Santos, Danilo
   Monteiro, who actively engaged in different stages of this research
   project.
CR ADAMS JS, 1963, J ABNORM PSYCHOL, V67, P422, DOI 10.1037/h0040968
   Amabile T.Kramer., 2011, The progress principle: Using small wins to ignite joy, engagement, and creativity at work
   Ambrose ML, 1999, J MANAGE, V25, P231, DOI 10.1016/S0149-2063(99)00003-3
   [Anonymous], P 21 EUR C INF SYST
   [Anonymous], P ICSE WORKSH COOP H
   [Anonymous], 2015, CONSTRUCTING GROUNDE
   [Anonymous], 1980, Motivating and Managing Computer Personnel
   [Anonymous], INF SOFTW TECHNOL
   [Anonymous], THESIS
   [Anonymous], EUR J INF SYST
   [Anonymous], 1987, HARVARD BUSINESS REV
   [Anonymous], SOFTWARE ENG
   [Anonymous], P INT C SOFTW PROC I
   [Anonymous], 1987, Peopleware: Productive Projects and Teams
   [Anonymous], P 8 INT S EMP SOFTW
   [Anonymous], J APPL SCI RES
   [Anonymous], IEEE T SOFTW ENG
   [Anonymous], SIGCPR COMPUT PERS
   [Anonymous], 2002, Human Resource Management Review, DOI DOI 10.1016/S1053-4822(02)00045-1
   [Anonymous], 1975, MYTHICAL MAN MONTH E
   [Anonymous], INF SOFTW TECHNOL
   [Anonymous], PSYCHOL COMPUTER PRO
   [Anonymous], TRADUCAO LUCIANE OLI
   [Anonymous], APA HDB IND ORG PSYC
   [Anonymous], P 38 EUR C SOFTW ENG
   [Anonymous], 2009, CASE STUDY RES DESIG
   BANDURA A, 1977, PSYCHOL REV, V84, P191, DOI 10.1037/0033-295X.84.2.191
   BANDURA A, 1989, AM PSYCHOL, V44, P1175, DOI 10.1037/0003-066X.44.9.1175
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Beecham S, 2007, AGILE 2007, PROCEEDINGS, P37, DOI 10.1109/AGILE.2007.22
   Burn J. M., 1991, Proceedings of the Twenty-Fourth Annual Hawaii International Conference on System Sciences (Cat. No.91TH0350-9), P524, DOI 10.1109/HICSS.1991.184100
   Burns M.M., 1978, LEADERSHIP-LONDON
   Carter S., 2005, Proceedings of the SIGCHI conference on Human factors in computing systems - CHI '05, P899
   Cesar A., 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P72, DOI 10.1049/ic.2012.0010
   Chen G, 2006, RES ORGAN BEHAV, V27, P223, DOI 10.1016/S0191-3085(06)27006-0
   Couger J. D., 1991, European Journal of Information Systems, V1, P107, DOI 10.1057/ejis.1991.18
   Couger J. D., 1994, Information Resources Management Journal, V7, P5
   Couger J. D., 1995, Proceedings of the Twenty-Eighth Hawaii International Conference on System Sciences, P1012, DOI 10.1109/HICSS.1995.375646
   Couger J. D., 1989, Proceedings of the Twenty-Second Annual Hawaii International Conference on System Sciences. Vol.IV: Emerging Technologies and Applications Track (IEEE Cat. No.89TH0245-1), P316, DOI 10.1109/HICSS.1989.48138
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P343, DOI 10.1109/ESEM.2011.44
   da Silva FQB, 2012, J SYST SOFTWARE, V85, P216, DOI 10.1016/j.jss.2010.12.017
   de Farias Junior Ivaldir H., 2012, 2012 Seventh IEEE International Conference on Global Software Engineering Workshops (ICGSEW 2012), P49, DOI 10.1109/ICGSEW.2012.17
   DENGATE G, 1990, AUST COMPUT J, V22, P77
   Dey I., 2003, Qualitative data analysis: A user-friendly guide for social scientists, DOI DOI 10.4324/9780203412497
   Eisenhardt KM, 2007, ACAD MANAGE J, V50, P25, DOI 10.5465/AMJ.2007.24160888
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Elovainio M, 2002, AM J PUBLIC HEALTH, V92, P105, DOI 10.2105/AJPH.92.1.105
   FERRATT TW, 1986, MIS QUART, V10, P377, DOI 10.2307/249193
   Frana A.C.C., 2011, P C EV ASS SOFTW ENG, P154, DOI [10.1049/ic.2011.0019, DOI 10.1049/IC.2011.0019]
   Franca A. C. C., 2012, 2012 26th Brazilian Symposium on Software Engineering (SBES), P61, DOI 10.1109/SBES.2012.28
   França ACC, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P9, DOI 10.1109/CHASE.2013.6614726
   Garden A.-M., 1988, Computer Personnel, V11, P10, DOI 10.1145/54127.54130
   Graziotin D, 2014, PEERJ, V2, DOI 10.7717/peerj.289
   Guinan PJ, 1998, INFORM SYST RES, V9, P101, DOI 10.1287/isre.9.2.101
   Hackman J.R., 2005, OXFORD HDB MANAGEMEN, P151
   HACKMAN JR, 1971, J APPL PSYCHOL, V55, P259, DOI 10.1037/h0031152
   HACKMAN JR, 1980, PROF PSYCHOL, V11, P445, DOI 10.1037/0735-7028.11.3.445
   HACKMAN JR, 1975, J APPL PSYCHOL, V60, P159, DOI 10.1037/h0076546
   HACKMAN JR, 1975, CALIF MANAGE REV, V17, P57
   HALL DT, 1968, ORGAN BEHAV HUM PERF, V3, P12, DOI 10.1016/0030-5073(68)90024-X
   Hall T, 2009, ACM T SOFTW ENG METH, V18, DOI 10.1145/1525880.1525883
   Hernández-López A, 2012, INT J HUM CAP INF TE, V3, P39, DOI 10.4018/jhcitp.2012100104
   HOUSE RJ, 1967, PERS PSYCHOL, V20, P369, DOI 10.1111/j.1744-6570.1967.tb02440.x
   Humphrey W., 2006, SOFTW MANAGE, V7th, P21
   Kandeel H., 2001, Managing Information Technology in a Global Environment. 2001 Information Resources Management Association International Conference, P117
   KATZELL RA, 1990, AM PSYCHOL, V45, P144, DOI 10.1037/0003-066X.45.2.144
   Khalil O. E. M., 1997, Proceedings of the 1997 ACM SIGCPR Conference, P187, DOI 10.1145/268820.268884
   Khan S., 2008, Forum: Qualitative Social Research, V9
   Locke E., 1976, The handbook of industrial and organizational psychology, P1297
   LOCKE EA, 1969, ORGAN BEHAV HUM PERF, V4, P309, DOI 10.1016/0030-5073(69)90013-0
   LOCKE EA, 1968, ORGAN BEHAV HUM PERF, V3, P157, DOI 10.1016/0030-5073(68)90004-4
   Locke EA, 1996, APPL PREV PSYCHOL, V5, P117, DOI 10.1016/S0962-1849(96)80005-9
   LOCKE EA, 1990, PSYCHOL SCI, V1, P240, DOI 10.1111/j.1467-9280.1990.tb00207.x
   LOCKE EA, 1981, PSYCHOL BULL, V90, P125, DOI 10.1037/0033-2909.90.1.125
   LOCKE EA, 1975, ANNU REV PSYCHOL, V26, P457, DOI 10.1146/annurev.ps.26.020175.002325
   Mak BL, 2001, INFORM MANAGE-AMSTER, V38, P265, DOI 10.1016/S0378-7206(00)00055-0
   Maslow AH, 1943, PSYCHOSOM MED, V5, P85, DOI 10.1097/00006842-194301000-00012
   Maslow A. H., 1954, MOTIVATION PERSONALI
   Merriam S.B., 2009, Qualitative Research: A guide to Design and Implementation, V2nd, P304
   Morgeson FP, 2006, J APPL PSYCHOL, V91, P1321, DOI 10.1037/0021-9010.91.6.1321
   Noblit G.W., 1988, Metaethnography: Synthesizing qualitative studies, V11
   Prasad HCS, 2014, SAGE OPEN, V4, DOI 10.1177/2158244014521436
   RASCH RH, 1992, MIS QUART, V16, P395, DOI 10.2307/249535
   Reel JS, 1999, IEEE SOFTWARE, V16, P18, DOI 10.1109/52.765782
   RIEMAN J, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P321
   Roznowski M., 1992, JOB SATISFACTION, P123
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Santos RES, 2017, INFORM SOFTWARE TECH, V89, P78, DOI 10.1016/j.infsof.2017.04.006
   Santos RES, 2016, PROC INT CONF SOFTW, P971, DOI 10.1145/2884781.2884837
   Sharp H., 2007, Proceedings of the Sixth Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on The Foundations of Software Engineering, P501
   Sohn T, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P433
   Steers RM, 2004, ACAD MANAGE REV, V29, P379, DOI 10.2307/20159049
   Steinberga L, 2013, BALT J MOD COMPUT, V1, P186
   Tompkins H. K., 1991, Proceedings of the Twenty-Fourth Annual Hawaii International Conference on System Sciences (Cat. No.91TH0350-9), P530, DOI 10.1109/HICSS.1991.184101
   TURLEY RT, 1995, J SYST SOFTWARE, V28, P19, DOI 10.1016/0164-1212(94)00078-2
   VANDEVEN AH, 1989, ACAD MANAGE REV, V14, P486, DOI 10.5465/AMR.1989.4308370
   VanEerde W, 1996, J APPL PSYCHOL, V81, P575, DOI 10.1037/0021-9010.81.5.575
   Vroom V. H., 1964, Work and motivation
   WAHBA MA, 1974, HUM RELAT, V27, P121
   Walia GS, 2009, INFORM SOFTWARE TECH, V51, P1087, DOI 10.1016/j.infsof.2009.01.004
   Wallgren LG, 2007, INT J IND ERGONOM, V37, P51, DOI 10.1016/j.ergon.2006.10.005
   Wynekoop JL, 1998, DATA BASE ADV INF SY, V29, P62
   Zawacki R. A., 1992, Information Systems Management, V9, P73, DOI 10.1080/10580539208906871
NR 103
TC 32
Z9 35
U1 4
U2 35
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2020
VL 46
IS 2
BP 118
EP 140
DI 10.1109/TSE.2018.2842201
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA KU7YW
UT WOS:000519930000001
DA 2024-07-18
ER

PT J
AU Smith, J
   Johnson, B
   Murphy-Hill, E
   Chu, B
   Lipford, HR
AF Smith, Justin
   Johnson, Brittany
   Murphy-Hill, Emerson
   Chu, Bill
   Lipford, Heather Richter
TI How Developers Diagnose Potential Security Vulnerabilities with a Static
   Analysis Tool
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; human factors; security; software tools;
   programming environments
ID SOFTWARE-DEVELOPMENT; COGNITIVE-PROCESSES; SOURCE CODE
AB While using security tools to resolve security defects, software developers must apply considerable effort. Success depends on a developer's ability to interact with tools, ask the right questions, and make strategic decisions. To build better security tools and subsequently help developers resolve defects more accurately and efficiently, we studied the defect resolution process-from the questions developers ask to their strategies for answering them. In this paper, we report on an exploratory study with novice and experienced software developers. We equipped them with Find Security Bugs, a security-oriented static analysis tool, and observed their interactions with security vulnerabilities in an open-source system that they had previously contributed to. We found that they asked questions not only about security vulnerabilities, associated attacks, and fixes, but also questions about the software itself, the social ecosystem that built the software, and related resources and tools. We describe the strategic successes and failures we observed and how future tools can leverage our findings to encourage better strategies.
C1 [Smith, Justin; Murphy-Hill, Emerson] North Carolina State Univ, Raleigh, NC 27603 USA.
   [Johnson, Brittany] Univ Massachusetts, Amherst, MA 01003 USA.
   [Chu, Bill; Lipford, Heather Richter] Univ North Carolina Charlotte, Charlotte, NC 28223 USA.
C3 North Carolina State University; University of Massachusetts System;
   University of Massachusetts Amherst; University of North Carolina;
   University of North Carolina Charlotte
RP Smith, J (corresponding author), North Carolina State Univ, Raleigh, NC 27603 USA.
EM jssmit11@ncsu.edu; bjohnson@cs.umass.edu; emerson@csc.ncsu.edu;
   billchu@uncc.edu; heater.lipford@uncc.edu
RI Smith, Justin/JNS-6292-2023
OI Smith, Justin/0000-0001-6987-5196
FU National Science Foundation [1318323, DGE-0946818]; Direct For Computer
   & Info Scie & Enginr; Division Of Computer and Network Systems [1318323]
   Funding Source: National Science Foundation
FX Wewould like to thank our study participants. Special thanks to Xi Ge,
   Anthony Elliott, Emma Laperruque, and the Developer Liberation Front 3
   for their assistance. This material is based upon work supported by the
   National Science Foundation under grant numbers 1318323 and DGE-0946818.
CR Ammar N., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P367, DOI 10.1109/WCRE.2012.46
   [Anonymous], 2017, FIND SECURITY BUGS
   [Anonymous], 2009, STRATEGIE BADANIA JA
   [Anonymous], 2017, NIST SOURCE CODE SEC
   [Anonymous], 2017, WEB APPL SECURITY CO
   [Anonymous], 2017, OWASP SOURCE CODE AN
   [Anonymous], 2005, USENIX SEC S
   [Anonymous], 2017, ITRUST SOFTWARE SYST
   [Anonymous], 2006, 2006 IEEE S SEC PRIV
   Austin A, 2011, INT SYMP EMP SOFTWAR, P97, DOI 10.1109/ESEM.2011.18
   Barnett M., 2014, MSRTR201410
   Bhavnani S.K., 1997, Proceedings of the ACM SIGCHI Conference on Human factors in computing systems, P91
   Bhavnani SK, 2000, HUM-COMPUT INTERACT, V15, P107, DOI 10.1207/S15327051HCI1523_3
   BROOKS R, 1977, INT J MAN MACH STUD, V9, P737, DOI 10.1016/S0020-7373(77)80039-4
   Chen H., 2002, P 9 ACM C COMPUTER C, P235
   Christakis M, 2016, IEEE INT CONF AUTOM, P332, DOI 10.1145/2970276.2970347
   Cornell D, 2012, P RSA C SAN FRANS CA
   Dukes L., 2013, SOUTH 2013 P IEEE, p[1, 6]
   Fairclough Norman., 2003, Political discourse analysis, DOI DOI 10.4324/9780203697078
   Fritz T., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P175
   Fritz T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2512207
   Goldman M, 2009, J VISUAL LANG COMPUT, V20, P223, DOI 10.1016/j.jvlc.2009.04.003
   Grigoreanu V., 2012, T COMPUTER HUMAN INT, V19, P5
   Grigoreanu V, 2009, LECT NOTES COMPUT SC, V5435, P205
   Gross P, 2010, J VISUAL LANG COMPUT, V21, P263, DOI 10.1016/j.jvlc.2010.08.002
   Guest G, 2006, FIELD METHOD, V18, P59, DOI 10.1177/1525822X05279903
   Haenni N., 2013, Proceedings of the 2013 International Workshop on Ecosystem Architectures, P1
   Howard M, 2005, COMPUTER SECURITY IN THE 21ST CENTURY, P109, DOI 10.1007/0-387-24006-3_8
   Johnson B, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P73, DOI 10.1145/2950290.2950304
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Katz I. R., 1987, Human-Computer Interaction, V3, P351, DOI 10.1207/s15327051hci0304_2
   Ko AJ, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P199
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Kononenko O, 2012, S VIS LANG HUM CEN C, P127, DOI 10.1109/VLHCC.2012.6344497
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   LaToza TD, 2011, S VIS LANG HUM CEN C, P117, DOI 10.1109/VLHCC.2011.6070388
   LaToza Thomas D., 2010, P 32 ACM IEEE INT C, P185, DOI DOI 10.1145/1806799.1806829
   LaToza ThomasD., 2010, EVALUATION USABILITY, p8:1
   LETOVSKY S, 1987, J SYST SOFTWARE, V7, P325, DOI 10.1016/0164-1212(87)90032-X
   Martin M, 2005, ACM SIGPLAN NOTICES, V40, P365, DOI 10.1145/1103845.1094840
   Mauw S, 2006, LECT NOTES COMPUT SC, V3935, P186
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Murphy-Hill E., 2012, P ACM SIGSOFT 20 INT
   Nielsen J., 2002, P 2 NORD C HUM COMP, P101, DOI DOI 10.1145/572020.572033
   Parnin C., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P123
   Phang K. Y., 2009, EVAL USABILITY PROGR, P12
   Rahman MM, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P194, DOI 10.1109/CSMR-WCRE.2014.6747170
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   Servant F., 2012, P ACM SIGSOFT 20 INT, P43
   SHNEIDERMAN B, 1979, INT J COMPUT INF SCI, V8, P219, DOI 10.1007/BF00977789
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Smith J, 2017, S VIS LANG HUM CEN C, P19, DOI 10.1109/VLHCC.2017.8103445
   Smith J, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P662, DOI 10.1145/2889160.2891034
   Smith J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P248, DOI 10.1145/2786805.2786812
   Soegaard Mads., 2012, The Encyclopedia of Human-Computer Interaction
   Stylos J, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P195
   Theisen C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P199, DOI 10.1109/ICSE.2015.148
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   Yoon Y, 2013, S VIS LANG HUM CEN C, P119, DOI 10.1109/VLHCC.2013.6645254
NR 59
TC 29
Z9 30
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2019
VL 45
IS 9
BP 877
EP 897
DI 10.1109/TSE.2018.2810116
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA IZ6LH
UT WOS:000487192800003
OA Bronze
DA 2024-07-18
ER

PT J
AU Chen, T
   Bahsoon, R
AF Chen, Tao
   Bahsoon, Rami
TI Self-Adaptive and Online QoS Modeling for Cloud-Based Software Services
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software quality; search-based software engineering; self-adaptive
   systems; machine learning; cloud computing; performance modeling
ID SIMULATION; MANAGEMENT; TOOLKIT
AB In the presence of scale, dynamism, uncertainty and elasticity, cloud software engineers faces several challenges when modeling Quality of Service (QoS) for cloud-based software services. These challenges can be best managed through self-adaptivity because engineers' intervention is difficult, if not impossible, given the dynamic and uncertain QoS sensitivity to the environment and control knobs in the cloud. This is especially true for the shared infrastructure of cloud, where unexpected interference can be caused by co-located software services running on the same virtual machine; and co-hosted virtual machines within the same physical machine. In this paper, we describe the related challenges and present a fully dynamic, self-adaptive and online QoS modeling approach, which grounds on sound information theory and machine learning algorithms, to create QoS model that is capable to predict the QoS value as output over time by using the information on environmental conditions, control knobs and interference as inputs. In particular, we report on in-depth analysis on the correlations of selected inputs to the accuracy of QoS model in cloud. To dynamically selects inputs to the models at runtime and tune accuracy, we design self-adaptive hybrid dual-learners that partition the possible inputs space into two sub-spaces, each of which applies different symmetric uncertainty based selection techniques; the results of sub-spaces are then combined. Subsequently, we propose the use of adaptive multi-learners for building the model. These learners simultaneously allow several learning algorithms to model the QoS function, permitting the capability for dynamically selecting the best model for prediction on the fly. We experimentally evaluate our models in the cloud environment using RUBiS benchmark and realistic FIFA 98 workload. The results show that our approach is more accurate and effective than state-of-the-art modelings.
C1 [Chen, Tao; Bahsoon, Rami] Univ Birmingham, Sch Comp Sci, CERCIA, Birmingham B15 2TT, W Midlands, England.
C3 University of Birmingham
RP Chen, T (corresponding author), Univ Birmingham, Sch Comp Sci, CERCIA, Birmingham B15 2TT, W Midlands, England.
EM t.chen@cs.bham.ac.uk; r.bahsoon@cs.bham.ac.uk
OI Chen, Tao/0000-0001-5025-5472
FU EPSRC [EP/J017515/1]; School of Computer Science, University of
   Birmingham; EPSRC [EP/J017515/1, EP/R007128/1, EP/L001802/1] Funding
   Source: UKRI
FX This work was jointly supported by the EPSRC Grant (No. EP/J017515/1) on
   "DAASE: Dynamic Adaptive Automated Software Engineering", and the PhD
   scholarship from the School of Computer Science, University of
   Birmingham. The authors are grateful to Prof. Xin Yao for the
   constructive feedback on the preliminary version of this work.
CR [Anonymous], P 2 ACM INT C PERF E
   [Anonymous], 1994, Neural networks and statistical models, DOI 10.1016/j.eswa.2007.10.005
   [Anonymous], 1985, Adaptive Signal Processing
   [Anonymous], 2013, WORLD SCI
   [Anonymous], P INT C HIGH PERF CO
   [Anonymous], 1992, P ISCIS 7
   [Anonymous], P C HOT TOP CLOUD CO
   Arlitt M, 2000, IEEE NETWORK, V14, P30, DOI 10.1109/65.844498
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Box G.E. P., 1990, TIME SERIES ANAL
   Bu XP, 2013, IEEE T PARALL DISTR, V24, P681, DOI 10.1109/TPDS.2012.174
   Buyya R, 2002, CONCURR COMP-PRACT E, V14, P1175, DOI 10.1002/cpe.710
   Calheiros R. N., 2011, 2011 International Conference on Parallel Processing, P295, DOI 10.1109/ICPP.2011.17
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Chen T, 2017, IEEE T SERV COMPUT, V10, P618, DOI 10.1109/TSC.2015.2499770
   Chen T, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P85, DOI 10.1145/2593929.2593931
   Chen T, 2014, INT CONF UTIL CLOUD, P327, DOI 10.1109/UCC.2014.42
   Chen T, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P43, DOI 10.1109/SEAMS.2013.6595491
   Chen T, 2013, PROCEDIA COMPUT SCI, V18, P1881, DOI 10.1016/j.procs.2013.05.357
   Ebrahimi E, 2011, INT SYMP MICROARCH, P362
   Emeakaroha Vincent C., 2010, 2010 International Conference on High Performance Computing & Simulation (HPCS 2010), P48, DOI 10.1109/HPCS.2010.5547150
   FLORES BE, 1986, OMEGA-INT J MANAGE S, V14, P93, DOI 10.1016/0305-0483(86)90013-7
   Frey S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P512, DOI 10.1109/ICSE.2013.6606597
   Gandhi N, 2002, P AMER CONTR CONF, V1-6, P4922, DOI 10.1109/ACC.2002.1025440
   Ghanbari Hamoun., 2011, Proc. of the 2nd Joint WOSP/SIPEW International Conf. on Performance Engi- neering, P179, DOI DOI 10.1145/2160803.2160823
   Ghosh R, 2014, IEEE T CLOUD COMPUT, V2, P57, DOI 10.1109/TCC.2014.2310737
   Hibon M, 2005, INT J FORECASTING, V21, P15, DOI 10.1016/j.ijforecast.2004.05.002
   Inkwon Hwang, 2012, 2012 IEEE 5th International Conference on Cloud Computing (CLOUD), P582, DOI 10.1109/CLOUD.2012.54
   Jhawar R, 2012, 2012 IEEE FIRST AESS EUROPEAN CONFERENCE ON SATELLITE TELECOMMUNICATIONS (ESTEL)
   Jiang HL, 2007, ICNC 2007: THIRD INTERNATIONAL CONFERENCE ON NATURAL COMPUTATION, VOL 3, PROCEEDINGS, P3, DOI 10.1016/S0166-526X(06)48001-6
   John G.H., 1994, P 11 INT C MACH LEAR, P121
   Kousiouris G., 2011, 2011 IEEE Symposium on Computers and Communications (ISCC 2011), P153, DOI 10.1109/ISCC.2011.5984009
   Kundu S., 2010, HPCA
   Kundu S, 2012, ACM SIGPLAN NOTICES, V47, P3, DOI 10.1145/2365864.2151028
   Li J., 2012, 2012 IEEE International Conference on Services Computing (SCC), P344, DOI 10.1109/SCC.2012.85
   Li J.Z., 2011, Network and Service Management (CNSM), 2011 7th International Conference on, P1
   Makridakis S., 1995, Evaluating Accuracy (or Error) Measures
   Nathuji R, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P237
   Padala P, 2009, EUROSYS'09: PROCEEDINGS OF THE FOURTH EUROSYS CONFERENCE, P13
   Peng HC, 2005, IEEE T PATTERN ANAL, V27, P1226, DOI 10.1109/TPAMI.2005.159
   Qian Zhu, 2012, 2012 IEEE 5th International Conference on Cloud Computing (CLOUD), P170, DOI 10.1109/CLOUD.2012.25
   Radojkovic P, 2013, IEEE T PARALL DISTR, V24, P2513, DOI 10.1109/TPDS.2012.311
   Witten I. H., 2005, DATA MINING PRACTICA
   Xiong PC, 2011, PROC INT CONF DATA, P87, DOI 10.1109/ICDE.2011.5767928
   Xiong PengCheng, 2013, ACM SPEC INT C PERF, P271, DOI 10.1145/2479871.2479909
   Yexi Jiang, 2012, 2012 IEEE International Conference on Services Computing (SCC), P73, DOI 10.1109/SCC.2012.8
   Ying Zhang, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P75, DOI 10.1109/CLOUD.2010.11
   Zhu Q, 2012, IEEE T SERV COMPUT, V5, P497, DOI 10.1109/TSC.2011.61
NR 48
TC 62
Z9 64
U1 0
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2017
VL 43
IS 5
BP 453
EP 475
DI 10.1109/TSE.2016.2608826
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EU9BO
UT WOS:000401332400004
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Shen, XN
   Minku, LL
   Bahsoon, R
   Yao, X
AF Shen, Xiaoning
   Minku, Leandro L.
   Bahsoon, Rami
   Yao, Xin
TI Dynamic Software Project Scheduling through a Proactive-Rescheduling
   Method
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Schedule and organizational issues; dynamic software project scheduling;
   search-based software engineering; multi-objective evolutionary
   algorithms; mathematical modeling
ID MULTIOBJECTIVE EVOLUTIONARY ALGORITHMS; OPTIMIZATION
AB Software project scheduling in dynamic and uncertain environments is of significant importance to real-world software development. Yet most studies schedule software projects by considering static and deterministic scenarios only, which may cause performance deterioration or even infeasibility when facing disruptions. In order to capture more dynamic features of software project scheduling than the previous work, this paper formulates the project scheduling problem by considering uncertainties and dynamic events that often occur during software project development, and constructs a mathematical model for the resulting multi-objective dynamic project scheduling problem (MODPSP), where the four objectives of project cost, duration, robustness and stability are considered simultaneously under a variety of practical constraints. In order to solve MODPSP appropriately, a multi-objective evolutionary algorithm based proactive-rescheduling method is proposed, which generates a robust schedule predictively and adapts the previous schedule in response to critical dynamic events during the project execution. Extensive experimental results on 21 problem instances, including three instances derived from real-world software projects, show that our novel method is very effective. By introducing the robustness and stability objectives, and incorporating the dynamic optimization strategies specifically designed for MODPSP, our proactive-rescheduling method achieves a very good overall performance in a dynamic environment.
C1 [Shen, Xiaoning] Nanjing Univ Informat Sci & Technol, Sch Informat & Control, B DAT & CICAEET, 219 Ning Liu Rd, Nanjing 210044, Jiangsu, Peoples R China.
   [Minku, Leandro L.] Univ Leicester, Dept Comp Sci, Univ Rd, Leicester LE1 7RH, Leics, England.
   [Bahsoon, Rami; Yao, Xin] Univ Birmingham, CERCIA, Birmingham B15 2TT, W Midlands, England.
C3 Nanjing University of Information Science & Technology; University of
   Leicester; University of Birmingham
RP Shen, XN (corresponding author), Nanjing Univ Informat Sci & Technol, Sch Informat & Control, B DAT & CICAEET, 219 Ning Liu Rd, Nanjing 210044, Jiangsu, Peoples R China.
EM sxnystsyt@sina.com; leandro.minku@leicester.ac.uk;
   r.bahsoon@cs.bham.ac.uk; X.Yao@cs.bham.ac.uk
RI YAO, XIN/W-2158-2018
OI YAO, XIN/0000-0001-8837-4442; Minku, Leandro/0000-0002-2639-0671
FU National Natural Science Foundation of China (NSFC) [61502239, 61329302,
   61503191]; Natural Science Foundation of Jiangsu Province of China
   [BK20150924, BK20150933]; EPSRC [EP/J017515/1, EP/K001523/1]; Royal
   Society Wolfson Research Merit Award; EPSRC [EP/K001523/1, EP/L001802/1,
   EP/J017515/1] Funding Source: UKRI
FX This work was partially supported by the National Natural Science
   Foundation of China (NSFC) under Grant No. 61502239, No. 61329302 and
   No. 61503191, Natural Science Foundation of Jiangsu Province of China
   under Grant No. BK20150924 and No. BK20150933, an EPSRC Grant (No.
   EP/J017515/1) on "DAASE: Dynamic Adaptive Automated Software
   Engineering", and an EPSRC Grant (No. EP/K001523/1) on "Evolutionary
   Computation for Dynamic Optimization in Network Environments". This work
   was done while the first author was with CERCIA, School of Computer
   Science, University of Birmingham, United Kingdom. The authors are
   grateful to W. Chen and J. Zhang for providing the data of the three
   real-world PSP instances. The work of X. Yao was supported by a Royal
   Society Wolfson Research Merit Award.
CR Alba E, 2007, INFORM SCIENCES, V177, P2380, DOI 10.1016/j.ins.2006.12.020
   [Anonymous], 2006, SOFTWARE ENG
   [Anonymous], J SCHEDULING
   [Anonymous], 1995, FAULT TOLERANT DESIG
   [Anonymous], TR029 CIFE STANF U D
   [Anonymous], SOFTW PROJ SCHED UNC
   [Anonymous], 1998, DEP ELECT COMPUT ENG
   [Anonymous], 056 HUNG AC SCI COMP
   Antoniol G, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P172, DOI 10.1109/METRIC.2004.1357901
   Barreto A, 2008, COMPUT OPER RES, V35, P3073, DOI 10.1016/j.cor.2007.01.010
   Bernardon DP, 2011, IEEE T POWER DELIVER, V26, P1884, DOI 10.1109/TPWRD.2011.2119498
   Boehm BW., 1981, Software Engineering Economics
   Brooks Frederick P., 1995, The mythical man-month
   Chang CK, 2008, INFORM SOFTWARE TECH, V50, P1142, DOI 10.1016/j.infsof.2008.03.002
   Chang CK, 2001, ANN SOFTW ENG, V11, P107, DOI 10.1023/A:1012543203763
   Chen WN, 2013, IEEE T SOFTWARE ENG, V39, P1, DOI 10.1109/TSE.2012.17
   Chicano Francisco, 2012, Applications of Evolutionary Computation. Proceedings of EvoApplications 2012: EvoCOMNET, EvoCOMPLEX, EvoFIN, EvoGAMES, EvoHOT, EvoIASP, EvoNUM, EvoPAR, EvoRISK, EvoSTIM, and EvoSTOC, P497, DOI 10.1007/978-3-642-29178-4_50
   Chicano F, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1915
   Coello CAC, 2006, IEEE COMPUT INTELL M, V1, P28, DOI 10.1109/MCI.2006.1597059
   Deb K, 2005, EVOL COMPUT, V13, P501, DOI 10.1162/106365605774666895
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 2010, MULTIOBJECTIVE OPTIM
   Di Penta M, 2011, SOFTWARE PRACT EXPER, V41, P495, DOI 10.1002/spe.1001
   Goh CK, 2009, IEEE T EVOLUT COMPUT, V13, P103, DOI 10.1109/TEVC.2008.920671
   GolenkoGinzburg D, 1997, INT J PROD ECON, V48, P29, DOI 10.1016/S0925-5273(96)00019-9
   Gueorguiev S., 2009, P 11 ANN C GENETIC E, P1673, DOI DOI 10.1145/1569901.1570125
   HAPKE M, 1994, FUZZY SET SYST, V67, P101, DOI 10.1016/0165-0114(94)90211-9
   Herroelen W, 1998, COMPUT OPER RES, V25, P279, DOI 10.1016/S0305-0548(97)00055-5
   Herroelen W, 2005, EUR J OPER RES, V165, P289, DOI 10.1016/j.ejor.2004.04.002
   Javanbarg MB, 2012, EXPERT SYST APPL, V39, P960, DOI 10.1016/j.eswa.2011.07.095
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P79, DOI 10.1016/S0164-1212(02)00160-7
   Kim C, 2012, IEEE T VEH TECHNOL, V61, P3321, DOI 10.1109/TVT.2012.2204284
   Knowles J, 2005, 5th International Conference on Intelligent Systems Design and Applications, Proceedings, P552, DOI 10.1109/ISDA.2005.15
   Laumanns M, 2002, EVOL COMPUT, V10, P263, DOI 10.1162/106365602760234108
   Lazarova-Molnar S, 2011, WINT SIMUL C PROC, P761, DOI 10.1109/WSC.2011.6147803
   Luna F, 2014, APPL SOFT COMPUT, V15, P136, DOI 10.1016/j.asoc.2013.10.015
   Maciaszek L., 2005, Practical Software Engineering: A Case Study Approach
   Magazinius A, 2012, J SYST SOFTWARE, V85, P1770, DOI 10.1016/j.jss.2012.03.026
   Meszaros C, 1996, DECIS SUPPORT SYST, V16, P231, DOI 10.1016/0167-9236(95)00012-7
   Minku LL, 2014, IEEE T SOFTWARE ENG, V40, P83, DOI 10.1109/TSE.2013.52
   Minku LL, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522928
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   SAATY TL, 1984, MATH MODELLING, V5, P309, DOI 10.1016/0270-0255(84)90008-3
   Shang RH, 2012, IEEE T EVOLUT COMPUT, V16, P35, DOI 10.1109/TEVC.2010.2046328
   Shen XN, 2015, INFORM SCIENCES, V298, P198, DOI 10.1016/j.ins.2014.11.036
   Veldhuizen D., 1999, P 1999 ACM S APPL CO, P351, DOI DOI 10.1145/298151.298382
   Wiest J., 1977, A management guide to PERT/CPM
   Xiao JC, 2010, LECT NOTES COMPUT SC, V6013, P107, DOI 10.1007/978-3-642-12029-9_8
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
NR 49
TC 40
Z9 43
U1 3
U2 65
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2016
VL 42
IS 7
BP 658
EP 686
DI 10.1109/TSE.2015.2512266
PG 29
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DR7AX
UT WOS:000380053500004
OA Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU He, Q
   Yan, J
   Jin, H
   Yang, Y
AF He, Qiang
   Yan, Jun
   Jin, Hai
   Yang, Yun
TI Quality-Aware Service Selection for Service-Based Systems Based on
   Iterative Multi-Attribute Combinatorial Auction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Service-based system; combinatorial auction; quality of service; service
   composition; service selection; web services; integer programming
ID EFFICIENT ALGORITHMS; FRAMEWORK; ARCHITECTURE; NEGOTIATION; ALLOCATION;
   MECHANISM; SOFTWARE; DRIVEN
AB The service-oriented paradigm offers support for engineering service-based systems (SBSs) based on service composition where existing services are composed to create new services. The selection of services with the aim to fulfil the quality constraints becomes critical and challenging to the success of SBSs, especially when the quality constraints are stringent. However, none of the existing approaches for quality-aware service composition has sufficiently considered the following two critical issues to increase the success rate of finding a solution: 1) the complementarities between services; and 2) the competition among service providers. This paper proposes a novel approach called combinatorial auction for service selection (CASS) to support effective and efficient service selection for SBSs based on combinatorial auction. In CASS, service providers can bid for combinations of services and apply discounts or premiums to their offers for the multi-dimensional quality of the services. Based on received bids, CASS attempts to find a solution that achieves the SBS owner's optimisation goal while fulfilling all quality constraints for the SBS. When a solution cannot be found based on current bids, the auction iterates so that service providers can improve their bids to increase their chances of winning. This paper systematically describes the auction process and the supporting mechanisms. Experimental results show that by exploiting the complementarities between services and the competition among service providers, CASS significantly outperforms existing quality-aware service selection approaches in finding optimal solutions and guaranteeing system optimality. Meanwhile, the duration and coordination overhead of CASS are kept at satisfactory levels in scenarios on different scales.
C1 [He, Qiang; Jin, Hai] Huazhong Univ Sci & Technol, Serv Comp Technol & Syst Lab, Sch Comp Sci & Technol, Cluster & Grid Comp Lab, Wuhan 430074, Peoples R China.
   [He, Qiang; Yang, Yun] Swinburne Univ Technol, Sch Software & Elect Engn, Melbourne, Vic 3122, Australia.
   [Yan, Jun] Univ Wollongong, Sch Informat Syst & Technol, Wollongong, NSW 2522, Australia.
   [Yang, Yun] Anhui Univ, Sch Comp Sci & Technol, Hefei 230039, Anhui, Peoples R China.
C3 Huazhong University of Science & Technology; Swinburne University of
   Technology; University of Wollongong; Anhui University
RP He, Q (corresponding author), Huazhong Univ Sci & Technol, Serv Comp Technol & Syst Lab, Sch Comp Sci & Technol, Cluster & Grid Comp Lab, Wuhan 430074, Peoples R China.
EM heqiang@gmail.com; jyan@uow.edu.au; hjin@hust.edu.cn; yyang@swin.edu.au
OI Yan, Jun/0000-0002-6474-1049
FU Australian Research Council [DP0663841, LP0990393]; National Science
   Foundation of China [90412010]; China Grid project from Ministry of
   Education of China; Australian Research Council [DP0663841] Funding
   Source: Australian Research Council
FX This work was partly funded by the Australian Research Council under
   grant No. DP0663841 and LP0990393, National Science Foundation of China
   under grant No. 90412010 and China Grid project from Ministry of
   Education of China. This paper is a significant revision and extension
   of "INSC: An Iterative Negotiation Approach for Service Composition",
   published in the Proceedings of the 2012 IEEE International Conference
   on Services Computing (SCC2012), 24-29 June 2012, Honolulu, Hawaii. Y.
   Yang is the corresponding author for the paper.
CR [Anonymous], SOAP VERSION 1 2
   [Anonymous], UDDI VERSION 3 0 2
   [Anonymous], 2010, P 19 INT C WORLD WID, DOI DOI 10.1145/1772690.1772693
   [Anonymous], 2007, WEB SERV BUS PROC EX
   [Anonymous], 2008, P 17 INT C WORLD WID, DOI DOI 10.1145/1367497.1367605
   Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   Berbner R, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P72
   Blau B, 2010, ELECTRON COMMER R A, V9, P460, DOI 10.1016/j.elerap.2009.11.001
   Bonami P, 2012, IMA VOL MATH APPL, V154, P1
   Bonatti P.A., 2005, Proc. 14th Int'l Conf. World Wide Web (WWW'05), P530
   Boutilier C., 2001, P 17 INT JOINT C ART, P1211
   Brewer PJ, 1996, INT J IND ORGAN, V14, P857, DOI 10.1016/0167-7187(96)01014-4
   Canfora G, 2005, 2005 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, PROCEEDINGS, P121
   Canfora G, 2008, J SYST SOFTWARE, V81, P1754, DOI 10.1016/j.jss.2007.12.792
   Canfora G, 2006, LECT NOTES COMPUT SC, V4294, P141
   Cardellini V, 2012, IEEE T SOFTWARE ENG, V38, P1138, DOI 10.1109/TSE.2011.68
   Cardellini V, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P131, DOI 10.1145/1595696.1595718
   Christensen E., 2001, WEB SERVICES DESCRIP
   Comuzzi M, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, P783, DOI 10.1109/ICWS.2009.47
   Comuzzi M, 2009, ACM T WEB, V3, DOI 10.1145/1541822.1541825
   Cramton P., 2006, COMBINATORIAL AUCTIO
   D'Ambrosio C, 2011, 4OR-Q J OPER RES, V9, P329, DOI 10.1007/s10288-011-0181-9
   Di Nitto E, 2007, LECT NOTES COMPUT SC, V4749, P295
   Dulluri S, 2005, SADHANA-ACAD P ENG S, V30, P213, DOI 10.1007/BF02706245
   Durkee D, 2010, COMMUN ACM, V53, P62, DOI 10.1145/1735223.1735242
   Gillmann M., 2002, P ACM SIGMOD INT C M, P228, DOI DOI 10.1145/564691.564718
   Hoffmann J, 2007, P 22 NAT C ART INT A, V22, P1013
   Jaeger MC, 2005, 2005 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, PROCEEDINGS, P807
   Khalaf R., 2003, P 12 INT C WORLD WID
   Klein A, 2010, LECT NOTES COMPUT SC, V6470, P182, DOI 10.1007/978-3-642-17358-5_13
   Kona S, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P150
   Kuster U., 2007, P 16 INT C WORLD WID, P1033
   LEDYARD JO, 1994, J ECON BEHAV ORGAN, V25, P167, DOI 10.1016/0167-2681(94)90009-4
   Li Y, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P703
   Liang QH, 2009, IEEE T SERV COMPUT, V2, P108, DOI 10.1109/TSC.2009.13
   Lin MF, 2013, INFORM SYST RES, V24, P906, DOI 10.1287/isre.2013.0480
   Lin SY, 2008, INT C COMP SUPP COOP, P452
   Menascé DA, 2002, IEEE INTERNET COMPUT, V6, P72, DOI 10.1109/MIC.2002.1067740
   Milgrom P., 1979, THESIS STANFORD U
   Mohabey Megha, 2007, Proceedings of the 3rd Annual IEEE Conference on Automation Science and Engineering, P716
   Pistore M, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P1252
   Prashanth B, 2008, IEEE INT CON AUTO SC, P995, DOI 10.1109/COASE.2008.4626528
   QUAN DC, 1994, J REAL ESTATE FINANC, V9, P23, DOI 10.1007/BF01153587
   Ragone A, 2007, INT J WEB SERV RES, V4, P85, DOI 10.4018/jwsr.2007070105
   RASSENTI SJ, 1982, BELL J ECON, V13, P402, DOI 10.2307/3003463
   Risse T., 2009, P 18 INT C WORLD WID, P881, DOI DOI 10.1145/1526709.1526828
   Sandholm T., 2002, Proceedings of the First International Joint Conference on Autonomous Agents and Multiagent Systems, P69
   Sandholm T, 2002, ARTIF INTELL, V135, P1, DOI 10.1016/S0004-3702(01)00159-X
   Siddiqui M., 2006, SC 06, P103
   Vaquero LM, 2009, ACM SIGCOMM COMP COM, V39, P50, DOI 10.1145/1496091.1496100
   Walsh WE, 1998, INT CON DISTR COMP S, P612, DOI 10.1109/ICDCS.1998.679848
   Wang J, 2011, WORLD WIDE WEB, V14, P75, DOI 10.1007/s11280-010-0098-9
   Wang WL, 2006, J SYST SOFTWARE, V79, P132, DOI 10.1016/j.jss.2005.09.004
   WILSON R, 1977, REV ECON STUD, V44, P511, DOI 10.2307/2296904
   Yan J, 2007, FUTURE GENER COMP SY, V23, P748, DOI 10.1016/j.future.2007.02.004
   YOON K.P., 1995, QUANTITATIVE APPL SO
   Yu T, 2007, ACM T WEB, V1, DOI 10.1145/1232722.1232728
   Zeng L., 2003, Proceedings of the 12th International Conference on World Wide Web, P411, DOI [DOI 10.1145/775152.775211, 10.1145/775152.775211]
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   Zheng Zibin., 2010, P 32 ACMIEEE INT C S, V1, P35, DOI DOI 10.1145/1806799.1806809
NR 60
TC 84
Z9 86
U1 2
U2 39
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2014
VL 40
IS 2
BP 192
EP 215
DI 10.1109/TSE.2013.2297911
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA AF4FD
UT WOS:000334666000006
DA 2024-07-18
ER

PT J
AU Yilmaz, C
   Dumlu, E
   Cohen, MB
   Porter, A
AF Yilmaz, Cemal
   Dumlu, Emine
   Cohen, Myra B.
   Porter, Adam
TI Reducing Masking Effects in Combinatorial Interaction Testing: A
   Feedback Driven Adaptive Approach
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Combinatorial testing; adaptive testing; covering arrays; software
   quality assurance
ID COVERING ARRAYS; TEST-GENERATION; TEST SUITES; ALGORITHM; COVERAGE
AB The configuration spaces of modern software systems are too large to test exhaustively. Combinatorial interaction testing (CIT) approaches, such as covering arrays, systematically sample the configuration space and test only the selected configurations. The basic justification for CIT approaches is that they can cost-effectively exercise all system behaviors caused by the settings of t or fewer options. We conjecture, however, that in practice some of these behaviors are not actually tested because of unanticipated masking effects - test case failures that perturb system execution so as to prevent some behaviors from being exercised. While prior research has identified this problem, most solutions require knowing the masking effects a priori. In practice this is impractical, if not impossible. In this work, we reduce the harmful consequences of masking effects. First we define a novel interaction testing criterion, which aims to ensure that each test case has a fair chance to test all valid t-way combinations of option settings. We then introduce a feedback driven adaptive combinatorial testing process (FDA-CIT) to materialize this criterion in practice. At each iteration of FDA-CIT, we detect potential masking effects, heuristically isolate their likely causes (i.e., fault characterization), and then generate new samples that allow previously masked combinations to be tested in configurations that avoid the likely failure causes. The iterations end when the new interaction testing criterion has been satisfied. This paper compares two different fault characterization approaches - an integral part of the proposed approach, and empirically assesses their effectiveness and efficiency in removing masking effects on two widely used open source software systems. It also compares FDA-CIT against error locating arrays, a state of the art approach for detecting and locating failures. Furthermore, the scalability of the proposed approach is evaluated by comparing it with perfect test scenarios, in which all masking effects are known a priori. Our results suggest that masking effects do exist in practice, and that our approach provides a promising and efficient way to work around them, without requiring that masking effects be known a priori.
C1 [Yilmaz, Cemal; Dumlu, Emine] Sabanci Univ, Fac Engn & Nat Sci, TR-34956 Istanbul, Turkey.
   [Dumlu, Emine] Borsa Istanbul, Istanbul, Turkey.
   [Cohen, Myra B.] Univ Nebraska Lincoln, Dept Comp Sci & Engn, Lincoln, NE 68558 USA.
   [Porter, Adam] Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
C3 Sabanci University; Borsa Istanbul; University of Nebraska System;
   University of Nebraska Lincoln; University System of Maryland;
   University of Maryland College Park
RP Yilmaz, C (corresponding author), Sabanci Univ, Fac Engn & Nat Sci, TR-34956 Istanbul, Turkey.
EM cyilmaz@sabanciuniv.edu; emine.dumlu@borsaistanbul.com;
   myra@cse.unl.edu; aporter@cs.umd.edu
RI Yilmaz, Cemal/AAY-4500-2020
OI Yilmaz, Cemal/0000-0003-4124-2295; Dumlu Demircioglu,
   Emine/0000-0003-4463-5545
FU European Community; Scientific and Technological Research Council of
   Turkey [113E546]; US National Science foundation (NSF) [CCF-0811284,
   CCF-0747009, CCF-1161767, CCF-1116740]; AFOSR [FA9550-10-1-0406]; Direct
   For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [1116740] Funding Source: National Science
   Foundation; Direct For Computer & Info Scie & Enginr; Division of
   Computing and Communication Foundations [0747009, 1161767] Funding
   Source: National Science Foundation
FX This research was supported by a Marie Curie International Reintegration
   Grant within the seventh European Community Framework Programme
   (FP7-PEOPLE-IRG-2008), by the Scientific and Technological Research
   Council of Turkey (113E546), and by the US National Science foundation
   (NSF) awards CCF-0811284, CCF-0747009, CCF-1161767, and CCF-1116740 and
   AFOSR award FA9550-10-1-0406.
CR [Anonymous], 2010, ADV COMBINATORIAL TE
   BROWNLIE R, 1992, AT&T TECH J, V71, P41, DOI 10.1002/j.1538-7305.1992.tb00164.x
   Bryce R.C., 2005, P 20 IEEE ACM INT C, P440
   Bryce RC, 2007, SOFTW TEST VERIF REL, V17, P159, DOI 10.1002/stvr.365
   Bryce RC, 2006, ASPEC 2006: 13TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P259
   Bryce RC, 2006, INFORM SOFTWARE TECH, V48, P960, DOI 10.1016/j.infsof.2006.03.004
   Bryce RC, 2009, SOFTW TEST VERIF REL, V19, P37, DOI 10.1002/stvr.393
   Bryce RC, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1082
   Burr K., 1998, P INT C SOFTW TEST A
   Calvagna A, 2008, LECT NOTES COMPUT SC, V4966, P66
   Chen BQ, 2010, ASIA PAC SOFWR ENG, P280, DOI 10.1109/APSEC.2010.40
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen MB, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P394, DOI 10.1109/ISSRE.2003.1251061
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Colbourn CJ, 2008, J COMB OPTIM, V15, P17, DOI 10.1007/s10878-007-9082-4
   Czerwonka J., 2006, P 24 PAC NW SOFTW QU, P285
   Dalal S. R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P285, DOI 10.1109/ICSE.1999.841019
   Demiroz G., 2012, P 4 INT C ADV SYST T, P9
   Dumlu Emine., 2011, P 2011 INT S SOFTWAR, P243
   Fouché S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P177
   Frank E., 1999, Data Mining: Practical Machine Learning Tools and Techniques with Java Implementations
   Ghazi SA, 2003, IEEE C EVOL COMPUTAT, P1420
   Hartman A, 2005, GRAPH THEORY, COMBINATORICS AND ALGORITHMS: INTERDISCIPLINARY APPLICATIONS, P237
   Kobayashi N., 2002, DESIGN EVALUATION AU
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Liu WL, 2007, INT C COMP AID DES C, P252
   Martinez C, 2009, SIAM J DISCRETE MATH, V23, P1776, DOI 10.1137/080730706
   Mats G., 2006, HSIKITR06001 U SKVD
   Mitchell T. M., 1997, MACHINE LEARNING
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Qu X., 2008, P 2008 INT S SOFTW T, P75
   Schroeder PJ, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P49
   Sherwood G., 1994, P 3 INT C SOFTW TEST, P151
   Shiba T., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P72, DOI 10.1109/CMPSAC.2004.1342808
   Tai KC, 2002, IEEE T SOFTWARE ENG, V28, P109, DOI 10.1109/32.979992
   Tung YW, 2000, AEROSP CONF PROC, P431, DOI 10.1109/AERO.2000.879426
   Williams A., 2000, NEW DIR ORG
   Williams A. W., 2002, Testing of Communicating Systems XIV. Application to Internet Technologies and Services. IFIP TC6/WG6.1 Fourteenth International Conference on Testing of Communicating Systems (TestCom 2002), P283
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Yilmaz C, 2013, IEEE T SOFTWARE ENG, V39, P684, DOI 10.1109/TSE.2012.65
   Yuan X., 2007, P INT C AUTOMATED SO, P405
NR 44
TC 32
Z9 34
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2014
VL 40
IS 1
BP 43
EP 66
DI 10.1109/TSE.2013.53
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AF4FB
UT WOS:000334665800004
DA 2024-07-18
ER

PT J
AU Hayden, CM
   Smith, EK
   Hardisty, EA
   Hicks, M
   Foster, JS
AF Hayden, Christopher M.
   Smith, Edward K.
   Hardisty, Eric A.
   Hicks, Michael
   Foster, Jeffrey S.
TI Evaluating Dynamic Software Update Safety Using Systematic Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Dynamic software updating (DSU); hot-swapping; software reliability;
   testing; program tracing
AB Dynamic software updating (DSU) systems patch programs on the fly without incurring downtime. To avoid failures due to the updating process itself, many DSU systems employ timing restrictions. However, timing restrictions are theoretically imperfect, and their practical effectiveness is an open question. This paper presents the first significant empirical evaluation of three popular timing restrictions: activeness safety (AS), which prevents updates to active functions, con-freeness safety (CFS), which only allows modifications to active functions when doing so is provably type-safe, and manual identification of the event-handling loops during which an update may occur. We evaluated these timing restrictions using a series of DSU patches to three programs: OpenSSH, vsftpd, and ngIRCd. We systematically applied updates at each distinct update point reached during execution of a suite of system tests for these programs to determine which updates pass and which fail. We found that all three timing restrictions prevented most failures, but only manual identification allowed none. Further, although CFS and AS allowed many more update points, manual identification still supported updates with minimal delay. Finally, we found that manual identification required the least developer effort. Overall, we conclude that manual identification is most effective.
C1 [Hayden, Christopher M.; Smith, Edward K.; Hardisty, Eric A.; Hicks, Michael; Foster, Jeffrey S.] Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
C3 University System of Maryland; University of Maryland College Park
RP Hayden, CM (corresponding author), Univ Maryland, Dept Comp Sci, AV Williams Bldg, College Pk, MD 20742 USA.
EM hayden@cs.umd.edu; tedks@cs.umd.edu; hardisty@cs.umd.edu;
   mwh@cs.umd.edu; jfoster@cs.umd.edu
FU UMIACS; Laboratory for Telecommunications Sciences
FX This research was supported by the partnership between UMIACS and the
   Laboratory for Telecommunications Sciences. The authors would also like
   to thank Iulian Neamtiu for supporting their use of the Ginseng DSU
   system.
CR Altekar G, 2005, P 14 C USENIX SEC S
   Alur R., 1997, P 9 INT C COMP AID V
   [Anonymous], 2012, K42 PROJECT
   [Anonymous], 2012, EDIT CONTINUE
   [Anonymous], 2006, P 2 INT C VIRT EX EN
   [Anonymous], 2012, JAVA PLATFORM DEBUGG
   Armstrong J., 2007, Programming Erlang: Software for a Concurrent World, V1st
   Arnold Jeff, 2009, P 4 ACM EUR C COMP S
   Bracha G., 2006, OBJECTS SOFTWARE SER
   Chen HB, 2007, PROC INT CONF SOFTW, P271
   Cook B., 2006, P ACM SIGPLAN C PROG
   Dmitriev M., 2001, P INT WORKSH ENG COM
   Dunlap G. W., 2002, P 5 S OP SYST DES IM
   Geels D., 2006, P ANN C TECHN USENIX
   Guo Z., 2008, OSDI
   Gupta D, 1996, IEEE T SOFTWARE ENG, V22, P120, DOI 10.1109/32.485222
   Hayden C.M., 2010, CSTR4949 U MAR DEP C
   Hayden C.M., 2009, P 2 INT WORKSH HOT T
   Hayden C.M., 2011, P WORKSH HOT TOP SOF
   Hayden C.M., 2011, CSTR4993 U MAR DEP C
   Hicks M, 2005, ACM T PROGR LANG SYS, V27, P1049, DOI 10.1145/381694.378798
   LEE I, 1983, THESIS U WISCONSIN
   MAKRIS K, 2012, UPSTARE MANUAL
   Makris Kristis, 2009, P USENIX ANN TECH C
   Musuvathi Madan, 2007, Technical Report MSR-TR-2007-149
   NEAMTIU I, 2006, P ACM SIGPLAN C PROG
   NEAMTIU I, 2009, P ACM SIGPLAN C PROG
   Neamtiu I., 2008, P 35 ANN ACM SIGPLAN
   Pugh W., 2007, P IEEE ACM 22 INT C
   SAITO Y, 2005, P 6 INT S AUT AN DRI
   Stoyle G., 2007, ACM T PROGR LANG SYS, V29, P183
   SUBRAMANIAN S, 2009, P ACM SIGPLAN C PROG
   Walton C., 2001, THESIS U EDINBURGH
   Wheeler D., 2012, Sloccount
   Xu Min, 2007, P 3 ANN WORKSH MOD B
NR 35
TC 17
Z9 17
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2012
VL 38
IS 6
BP 1340
EP 1354
DI 10.1109/TSE.2011.101
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 043PI
UT WOS:000311556100006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chen, TY
   Poon, PL
   Tang, SF
   Tse, TH
AF Chen, Tsong Yueh
   Poon, Pak-Lok
   Tang, Sau-Fun
   Tse, T. H.
TI DESSERT: a DividE-and-conquer methodology for identifying categorieS,
   choiceS, and choicE Relations for Test case generation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Black-box testing; category-partition method; choice relation framework;
   choice relation table; software testing; test case generation
ID SPECIFICATION; FRAMEWORK
AB This paper extends the CHOiCe reLATion framEwork, abbreviated as CHOC'LATE, which assists software testers in the application of category/choice methods to testing. CHOC'LATE assumes that the tester is able to construct a single choice relation table from the entire specification; this table then forms the basis for test case generation using the associated algorithms. This assumption, however, may not hold true when the specification is complex and contains many specification components. For such a specification, the tester may construct a preliminary choice relation table from each specification component, and then consolidate all the preliminary tables into a final table to be processed by CHOC'LATE for test case generation. However, it is often difficult to merge these preliminary tables because such merging may give rise to inconsistencies among choice relations or overlaps among choices. To alleviate this problem, we introduce a DividE-and-conquer methodology for identifying categorieS, choiceS, and choicE Relations for Test case generation, abbreviated as DESSERT. The theoretical framework and the associated algorithms are discussed. To demonstrate the viability and effectiveness of our methodology, we describe case studies using the specifications of three real-life commercial software systems.
C1 [Chen, Tsong Yueh; Tang, Sau-Fun] Swinburne Univ Technol, Fac Informat & Commun Technol, Hawthorn, Vic 3122, Australia.
   [Poon, Pak-Lok] Hong Kong Polytech Univ, Sch Accounting & Finance, Kowloon, Hong Kong, Peoples R China.
   [Tse, T. H.] Univ Hong Kong, Dept Comp Sci, Pokfulam, Hong Kong, Peoples R China.
C3 Swinburne University of Technology; Hong Kong Polytechnic University;
   University of Hong Kong
RP Chen, TY (corresponding author), Swinburne Univ Technol, Fac Informat & Commun Technol, Hawthorn, Vic 3122, Australia.
EM tychen@swin.edu.au; satang@swin.edu.au; afplpoon@inet.polyu.edu.hk;
   thtse@cs.hku.hk
RI Poon, Pak-Lok/ADQ-5493-2022; Tse, T.H./C-6590-2008
OI Tse, T.H./0000-0002-0460-8377; Chen, Tsong/0000-0003-3578-0994; POON,
   Pak Lok/0000-0003-2840-2418
FU General Research Fund of the Research Grants Council of Hong Kong
   [123206, 717308]; Departmental General Research Fund of The Hong Kong
   Polytechnic University [1-ZV2H]; Australian Research Council (ARC)
   [DP0880295]; Australian Research Council [DP0880295] Funding Source:
   Australian Research Council
FX The work described in this paper was partially supported by the General
   Research Fund of the Research Grants Council of Hong Kong (project nos.
   123206 and 717308), a Departmental General Research Fund of The Hong
   Kong Polytechnic University (project no. 1-ZV2H), and a grant of the
   Australian Research Council (ARC DP0880295).
CR [Anonymous], P 3 IEEE S SOFTW TES
   [Anonymous], 1990, Software testing techniques {
   Briand LC, 2008, INT CONF QUAL SOFTW, P135, DOI 10.1109/QSIC.2008.5
   Chen TY, 2005, QSIC 2005: Fifth International Conference on Quality Software, Proceedings, P55
   Chen TY, 2004, INFORM SOFTWARE TECH, V46, P887, DOI 10.1016/j.infsof.2004.03.005
   Chen TY, 2003, IEEE T SOFTWARE ENG, V29, P577, DOI 10.1109/TSE.2003.1214323
   Chen TY, 2000, INT J SOFTW ENG KNOW, V10, P647, DOI 10.1142/S0218194000000353
   Grindal M, 2005, SOFTW TEST VERIF REL, V15, P167, DOI 10.1002/stvr.319
   Grindal M, 2007, 2007 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P255, DOI 10.1109/ASWEC.2007.27
   Grochtmann M., 1993, Software Testing, Verification and Reliability, V3, P63, DOI 10.1002/stvr.4370030203
   Hierons RM, 2003, LECT NOTES COMPUT SC, V2651, P388
   Lau MF, 2005, ACM T SOFTW ENG METH, V14, P247, DOI 10.1145/1072997.1072998
   Lei Y, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P254, DOI 10.1109/HASE.1998.731623
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Poon PL, 2010, COMMUN ACM, V53, P113, DOI 10.1145/1721654.1721687
   Singh H, 1997, FIRST IEEE INTERNATIONAL CONFERENCE ON FORMAL ENGINEERING METHODS, PROCEEDINGS, P81, DOI 10.1109/ICFEM.1997.630406
   Tai KC, 2002, IEEE T SOFTWARE ENG, V28, P109, DOI 10.1109/32.979992
NR 18
TC 12
Z9 13
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2012
VL 38
IS 4
BP 794
EP 809
DI 10.1109/TSE.2011.69
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 983LE
UT WOS:000307120000004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hierons, RM
AF Hierons, Robert Mark
TI Oracles for Distributed Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering/software/program verification; software
   engineering/testing and debugging; systems and software; distributed
   systems; finite state machine; nondeterminism; test oracle;
   controllability; local observability
ID SYNCHRONIZABLE TEST SEQUENCES
AB The problem of deciding whether an observed behavior is acceptable is the oracle problem. When testing from a finite state machine (FSM), it is easy to solve the oracle problem and so it has received relatively little attention for FSMs. However, if the system under test has physically distributed interfaces, called ports, then in distributed testing, we observe a local trace at each port and we compare the set of local traces with the set of allowed behaviors (global traces). This paper investigates the oracle problem for deterministic and nondeterministic FSMs and for two alternative definitions of conformance for distributed testing. We show that the oracle problem can be solved in polynomial time for the weaker notion of conformance ((sic)(w)) but is NP-hard for the stronger notion of conformance ((sic)(s)), even if the FSM is deterministic. However, when testing from a deterministic FSM with controllable input sequences, the oracle problem can be solved in polynomial time and similar results hold for nondeterministic FSMs. Thus, in some cases, the oracle problem can be efficiently solved when using (sic)(s) and where this is not the case, we can use the decision procedure for (sic)(w) as a sound approximation.
C1 Brunel Univ, Sch Informat Syst Comp & Math, Uxbridge UB8 3PH, Middx, England.
C3 Brunel University
RP Hierons, RM (corresponding author), Brunel Univ, Sch Informat Syst Comp & Math, Uxbridge UB8 3PH, Middx, England.
EM rob.hierons@brunel.ac.uk
OI Hierons, Robert/0000-0002-4771-1446
CR [Anonymous], 1964, 5 ANN S SWITCH CIRC, DOI DOI 10.1109/SWCT.1964.8
   Barnett M, 2004, LECT NOTES COMPUT SC, V2931, P252
   Bauer A, 2006, 2006 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P243
   Bochmann GV, 2008, LECT NOTES COMPUT SC, V5047, P169, DOI 10.1007/978-3-540-68524-1_13
   BOYD S, 1991, INFORM PROCESS LETT, V40, P131, DOI 10.1016/0020-0190(91)90166-F
   Brinksma E, 1998, TESTING OF COMMUNICATING SYSTEMS, P67
   Cacciari L, 1999, INFORM SOFTWARE TECH, V41, P767, DOI 10.1016/S0950-5849(99)00036-1
   CHEN WH, 1995, IEEE ACM T NETWORK, V3, P152, DOI 10.1109/90.374116
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   DODD PS, 1992, SOFTWARE PRACT EXPER, V22, P863, DOI 10.1002/spe.4380221005
   DSSOULI R, 1986, PROTOCOL SPECIFICATI, V6, P217
   Farchi E, 2002, IBM SYST J, V41, P89, DOI 10.1147/sj.411.0089
   Gang Luo, 1993, IFIP Transactions C (Communication Systems), VC-19, P139
   Grieskamp W., 2002, Software Engineering Notes, V27, P112, DOI 10.1145/566171.566190
   Gunter D, 2000, 8TH INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS AND SIMULATION OF COMPUTER AND TELECOMMUNICATION SYSTEMS, PROCEEDINGS, P267, DOI 10.1109/MASCOT.2000.876548
   Haar S, 2007, LECT NOTES COMPUT SC, V4581, P171
   Heerink L., 1997, Formal Description Techniques and Protocol Specification, Testing and Verification. FORTE X/PSTV XVII'97. IFIP TC6 WG6.1 Joint International Conference on Formal Description Techniques for Distributed Systems and Communication Protocols (FORTE X) and Protocol Specification, Testing and Verification (PSTV XVII), P23
   Hierons RM, 2008, COMPUT J, V51, P497, DOI 10.1093/comjnl/bxm096
   Hierons Rob M., 2011, IEEE Transactions on Computers, V60, P1818, DOI 10.1109/TC.2010.238
   Hierons R.M., IMPLEMENTATION UNPUB
   Hierons RM, 2008, LECT NOTES COMPUT SC, V5047, P200, DOI 10.1007/978-3-540-68524-1_15
   Jacob J., 1989, THEORY PRACTICE REFI, P27
   Khoumsi A, 2002, IEEE T SOFTWARE ENG, V28, P1085, DOI 10.1109/TSE.2002.1049406
   Kloukinas Christos, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P117
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Li ZJ, 2004, LECT NOTES COMPUT SC, V2978, P95
   Mansouri-Samani M., 1993, IEEE Network, V7, P20, DOI 10.1109/65.244791
   Moore E.F., 1956, AUTOMATA STUDIES
   Petrenko A, 2005, IEEE T COMPUT, V54, P1154, DOI 10.1109/TC.2005.152
   Petrenko A, 2004, IEEE T SOFTWARE ENG, V30, P29, DOI 10.1109/TSE.2004.1265734
   Rafiq O, 2003, J SUPERCOMPUT, V24, P203, DOI 10.1023/A:1021759127956
   SARIKAYA B, 1984, IEEE T COMMUN, V32, P389, DOI 10.1109/TCOM.1984.1096074
   Schaefer Thomas J, 1978, P 10 ANN ACM S THEOR, P216, DOI DOI 10.1145/800133.804350
   Tai KC, 1998, COMPUT NETWORKS ISDN, V30, P1111, DOI 10.1016/S0169-7552(98)00013-0
   Tretmans J, 1996, COMPUT NETWORKS ISDN, V29, P49, DOI 10.1016/S0169-7552(96)00017-7
   Zulkernine M, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P763, DOI 10.1109/DSN.2002.1029022
   [No title captured]
NR 37
TC 27
Z9 28
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2012
VL 38
IS 3
BP 629
EP 641
DI 10.1109/TSE.2011.45
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 947FP
UT WOS:000304414400009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Röthlisberger, D
   Härry, M
   Binder, W
   Moret, P
   Ansaloni, D
   Villazón, A
   Nierstrasz, O
AF Roethlisberger, David
   Haerry, Marcel
   Binder, Walter
   Moret, Philippe
   Ansaloni, Danilo
   Villazon, Alex
   Nierstrasz, Oscar
TI Exploiting Dynamic Information in IDEs Improves Speed and Correctness of
   Software Maintenance Tasks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Object-oriented programming; integrated environments; restructuring;
   reverse engineering; reengineering; complexity measures; performance
   measures
ID SUPPORT; TOOL
AB Modern IDEs such as Eclipse offer static views of the source code, but such views ignore information about the runtime behavior of software systems. Since typical object-oriented systems make heavy use of polymorphism and dynamic binding, static views will miss key information about the runtime architecture. In this paper, we present an approach to gather and integrate dynamic information in the Eclipse IDE with the goal of better supporting typical software maintenance activities. By means of a controlled experiment with 30 professional developers, we show that for typical software maintenance tasks, integrating dynamic information into the Eclipse IDE yields a significant 17.5 percent decrease of time spent while significantly increasing the correctness of the solutions by 33.5 percent. We also provide a comprehensive performance evaluation of our approach.
C1 [Roethlisberger, David; Haerry, Marcel; Nierstrasz, Oscar] Univ Bern, Inst Informat, Software Composit Grp, CH-3012 Bern, Switzerland.
   [Binder, Walter; Moret, Philippe; Ansaloni, Danilo] Univ Lugano USI, Fac Informat, CH-6900 Lugano, Switzerland.
   [Villazon, Alex] UPB, CINTI, Cochabamba 3967, Bolivia.
C3 University of Bern; Universita della Svizzera Italiana
RP Röthlisberger, D (corresponding author), Univ Bern, Inst Informat, Software Composit Grp, Neubruckstr 10, CH-3012 Bern, Switzerland.
EM roethlis@iam.unibe.ch; mhy@students.unibe.ch; walter.binder@usi.ch;
   philippe.moret@usi.ch; danilo.ansaloni@usi.ch; avillazon@upb.edu;
   oscar.nierstrasz@acm.org
RI Villazon, Alex/AAK-3937-2020; Villazón, Alex/AGR-6972-2022
OI Villazón, Alex/0000-0001-8428-3420; Binder, Walter/0000-0002-2477-2182;
   Nierstrasz, Oscar/0000-0002-9975-9791
FU Swiss National Science Foundation (SNF) [200020-121594,
   200021-118016/1]; Swiss National Science Foundation (SNF)
   [200020_121594] Funding Source: Swiss National Science Foundation (SNF)
FX The authors gratefully acknowledge the financial support of the Swiss
   National Science Foundation for the projects "Bringing Models Closer to
   Code" (SNF Project Nos. 200020-121594, October 2008-September 2010) and
   "FER-RARI-Framework for Efficient Rewriting and Reification Applying
   Runtime Instrumentation" (SNF Project Nos. 200021-118016/1, Oct.
   2007-Sept. 2010). The research presented in this article was conduced
   while A. Villazon was with the University of Lugano, Switzerland.
CR Ammons G, 1997, ACM SIGPLAN NOTICES, V32, P85, DOI 10.1145/258916.258924
   Arisholm E, 2007, IEEE T SOFTWARE ENG, V33, P65, DOI 10.1109/TSE.2007.17
   Arnold M, 2001, ACM SIGPLAN NOTICES, V36, P168, DOI 10.1145/381694.378832
   Bennett C, 2008, J SOFTW MAINT EVOL-R, V20, P291, DOI 10.1002/smr.372
   Binder W., 2007, P 5 INT S PRINC PRAC, DOI DOI 10.1145/1294325.1294344
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Cornelissen B, 2009, INT C PROGRAM COMPRE, P100, DOI 10.1109/ICPC.2009.5090033
   de Alwis B, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P21, DOI 10.1145/1368088.1368092
   DEPAUW W, 1993, SIGPLAN NOTICES, V28, P326, DOI 10.1145/167962.165919
   Dmitriev M., 2004, Software Engineering Notes, V29, P139, DOI 10.1145/974043.974067
   Dufour B, 2003, ACM SIGPLAN NOTICES, V38, P149, DOI 10.1145/949343.949320
   Dufour B., 2003, 18 ANN ACM SIGPLAN C, P306, DOI [10.1145/949344.949425, DOI 10.1145/949344.949425]
   Dunsmore A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P467, DOI 10.1109/ICSE.2000.870437
   EICK SG, 1992, IEEE T SOFTWARE ENG, V18, P957, DOI 10.1109/32.177365
   Haerry M., 2010, THESIS U BERN
   Hamou-Lhadj Abdelwahab., 2004, CASCON, P42
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Likert R., 1932, TECHNIQUE MEASUREMEN, DOI 1933-01885-001
   Lowe W., 2001, Proc. 17th Int'l Conf. Advanced Science and Technology, P52
   Moret P, 2009, IEEE INT WORK VIS SO, P33, DOI 10.1109/VISSOF.2009.5336425
   NetBeans, 2011, NETBEANS PROF PROJ
   Pacione MJ, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2004.7
   PLEVYAK J, 1994, SIGPLAN NOTICES, V29, P324, DOI 10.1145/191081.191130
   Quante J, 2008, INT C PROGRAM COMPRE, P73, DOI 10.1109/ICPC.2008.15
   Rapicault P, 1998, LECT NOTES COMPUT SC, V1543, P76
   Reiss S.P., 2003, Proc. ACM Symp. Software Visualization, P57, DOI DOI 10.1145/774833.774842
   Richner T, 2002, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.2002.1167745
   Röthlisberger D, 2009, PROC IEEE INT CONF S, P253, DOI 10.1109/ICSM.2009.5306302
   Röthlisberger D, 2009, INT C PROGRAM COMPRE, P253, DOI 10.1109/ICPC.2009.5090052
   Stasko J, 2000, INT J HUM-COMPUT ST, V53, P663, DOI 10.1006/ijhc.2000.0420
   VILLAZON A., 2008, P 6 INT S PRINCIPLES, P159
   Villazón A, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P63
   WILDE N, 1992, IEEE T SOFTWARE ENG, V18, P1038, DOI 10.1109/TSE.1992.1263033
NR 34
TC 20
Z9 23
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2012
VL 38
IS 3
BP 579
EP 591
DI 10.1109/TSE.2011.42
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 947FP
UT WOS:000304414400006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Murphy-Hill, E
   Parnin, C
   Black, AP
AF Murphy-Hill, Emerson
   Parnin, Chris
   Black, Andrew P.
TI How We Refactor, and How We Know It
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Refactoring; refactoring tools; floss refactoring; root-canal
   refactoring
AB Refactoring is widely practiced by developers, and considerable research and development effort has been invested in refactoring tools. However, little has been reported about the adoption of refactoring tools, and many assumptions about refactoring practice have little empirical support. In this paper, we examine refactoring tool usage and evaluate some of the assumptions made by other researchers. To measure tool usage, we randomly sampled code changes from four Eclipse and eight Mylyn developers and ascertained, for each refactoring, if it was performed manually or with tool support. We found that refactoring tools are seldom used: 11 percent by Eclipse developers and 9 percent by Mylyn developers. To understand refactoring practice at large, we drew from a variety of data sets spanning more than 39,000 developers, 240,000 tool-assisted refactorings, 2,500 developer hours, and 12,000 version control commits. Using these data, we cast doubt on several previously stated assumptions about how programmers refactor, while validating others. Finally, we interviewed the Eclipse and Mylyn developers to help us understand why they did not use refactoring tools and to gather ideas for future research.
C1 [Murphy-Hill, Emerson] N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
   [Parnin, Chris] Georgia Inst Technol, Coll Comp, Atlanta, GA 30332 USA.
   [Black, Andrew P.] Portland State Univ, Dept Comp Sci, Portland, OR 97207 USA.
C3 North Carolina State University; University System of Georgia; Georgia
   Institute of Technology; Portland State University
RP Murphy-Hill, E (corresponding author), N Carolina State Univ, Dept Comp Sci, 890 Oval Dr,Campus Box 8206, Raleigh, NC 27695 USA.
EM emerson@csc.ncsu.edu; parnin@gatech.edu; black@cs.pdx.edu
OI Black, Andrew/0000-0003-0014-6483
FU US National Science Foundation [CCF-0520346]
FX The authors thank Barry Anderson, Christian Bird, Tim Chevalier, Danny
   Dig, Thomas Fritz, Markus Keller, Ciaran Llachlan Leavitt, Ralph London,
   Gail Murphy, Suresh Singh, and the Portland Java User's Group for their
   assistance, as well as the US National Science Foundation for partially
   funding this research under CCF-0520346. Thanks to the anonymous
   reviewers and the participants of the Software Engineering seminar at
   the University of Illinois Urbana-Champaign for their excellent
   suggestions.
CR Bourquin F, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P149
   Counsell S., 2006, ISESE 06 P 2006 ACMI, P288, DOI DOI 10.1145/1159733.1159777
   Counsell S, 2003, P 2 INT C PRINC PRAC, P45
   Dig D, 2006, LECT NOTES COMPUT SC, V4067, P404
   *ECL FDN, 2009, US DAT COLL RES
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Hindle Abram, 2008, P 2008 INT WORKING C, P99
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Murphy-Bill E, 2008, IEEE SOFTWARE, V25, P38, DOI 10.1109/MS.2008.123
   Murphy-hill E., 2009, P 31 INT C SOFTW ENG
   Murphy-Hill E., 2007, P OOPSLA WORKSH ECL
   Murphy-Hill E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P421, DOI 10.1145/1368088.1368146
   Opdyke WF., 1990, P SOOPPA 90 S OBJECT
   Pizka M, 2004, SERP'04: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2, P846
   Ratzinger J., 2008, Proceedings of the 2008 international working conference on Mining software repositories, P35, DOI [10.1145/1370750.1370759, DOI 10.1145/1370750.1370759]
   Ratzinger J., 2007, MILESTONES
   Robbes Romain., 2007, MSR 07, P15
   Stroggylos K., 2007, P 5 INT WORKSH SOFTW, P10, DOI [10.1109/WOSQ.2007.11, DOI 10.1109/WOSQ.2007.11]
   Toleman MA, 1998, SOFTWARE-CONC TOOL, V19, P109, DOI 10.1007/s003780050014
   Weissgerber Peter., 2006, Proceedings of the 2006 International Workshop on Mining Software Repositories, MSR '06, P112
   Xing ZC, 2006, PROC IEEE INT CONF S, P458
   Zimmermann T., 2004, Proc. of the 1st Int'lWorkshop onMining Software Repositories (MSR), P2, DOI [DOI 10.1049/IC:20040466, 10.1049/ic:20040466]
NR 22
TC 282
Z9 303
U1 1
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2012
VL 38
IS 1
BP 5
EP 18
DI 10.1109/TSE.2011.41
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881HG
UT WOS:000299472600003
DA 2024-07-18
ER

PT J
AU Antunes, J
   Neves, N
   Correia, M
   Verissimo, P
   Neves, R
AF Antunes, Joao
   Neves, Nuno
   Correia, Miguel
   Verissimo, Paulo
   Neves, Rui
TI Vulnerability Discovery with Attack Injection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing and debugging; software engineering; test design; testing tools;
   experimental evaluation; fault injection; attack injection
ID FAULT INJECTION
AB The increasing reliance put on networked computer systems demands higher levels of dependability. This is even more relevant as new threats and forms of attack are constantly being revealed, compromising the security of systems. This paper addresses this problem by presenting an attack injection methodology for the automatic discovery of vulnerabilities in software components. The proposed methodology, implemented in AJECT, follows an approach similar to hackers and security analysts to discover vulnerabilities in network-connected servers. AJECT uses a specification of the server's communication protocol and predefined test case generation algorithms to automatically create a large number of attacks. Then, while it injects these attacks through the network, it monitors the execution of the server in the target system and the responses returned to the clients. The observation of an unexpected behavior suggests the presence of a vulnerability that was triggered by some particular attack (or group of attacks). This attack can then be used to reproduce the anomaly and to assist the removal of the error. To assess the usefulness of this approach, several attack injection campaigns were performed with 16 publicly available POP and IMAP servers. The results show that AJECT could effectively be used to locate vulnerabilities, even on well-known servers tested throughout the years.
C1 [Antunes, Joao; Neves, Nuno; Correia, Miguel; Verissimo, Paulo] Univ Lisbon, Fac Sci, P-1749016 Lisbon, Portugal.
   [Neves, Rui] Univ Tecn Lisboa, Inst Telecomunicacoes, Inst Super Tecn, P-1049001 Lisbon, Portugal.
C3 Universidade de Lisboa; Universidade de Lisboa; Instituto de
   Telecomunicacoes
RP Antunes, J (corresponding author), Univ Lisbon, Fac Sci, Bloco C6,Piso 3,Campo Grande, P-1749016 Lisbon, Portugal.
EM jantunes@di.fc.ul.pt; nuno@di.fc.ul.pt; mpc@di.fc.ul.pt;
   pjv@di.fc.ul.pt; rui.neves@tagus.ist.utl.pt
RI ; Ferreira Neves, Rui/A-5910-2016; Neves, Nuno/F-5261-2010; Correia,
   Miguel/L-6890-2015
OI Verissimo, Paulo/0000-0002-0085-8053; Ferreira Neves,
   Rui/0000-0001-5482-9883; Neves, Nuno/0000-0003-0411-4542; Correia,
   Miguel/0000-0001-7873-5531
FU FCT [POSC/EIA/61643/2004 (AJECT)]; CMU-Portugal
FX This work was partially supported by the FCT through the Multiannual
   Funding and Project POSC/EIA/61643/2004 (AJECT), and by the CMU-Portugal
   Programs.
CR [Anonymous], 2003, P NETW DISTR SYST SE
   [Anonymous], 1990, Software testing techniques {
   ARLAT J, 1993, IEEE T COMPUT, V42, P913, DOI 10.1109/12.238482
   Bishop M, 1996, COMPUT SYST, V9, P131
   Carreira J., 1995, P 5 INT WORK C DEP C, P135
   Christmansson J, 1996, DIG PAP INT SYMP FAU, P304, DOI 10.1109/FTCS.1996.534615
   COWAN C, P USENIX SEC S, P91
   COWAN C, P USENIX SEC C, P63
   Crispin M., 2003, RFC 3501
   Duraes J, 2003, 2003 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P105, DOI 10.1109/DSN.2003.1209922
   DURAES J, 2005, P 2 LAT AM S DEP COM
   Garg S, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P283, DOI 10.1109/ISSRE.1998.730892
   HAUGH E., 2003, Proceedings of the Network and Distributed System Security Symposium, P123
   Hsueh MC, 1997, COMPUTER, V30, P75, DOI 10.1109/2.585157
   Koopman P, 1999, DIG PAP INT SYMP FAU, P30, DOI 10.1109/FTCS.1999.781031
   Mendonça M, 2007, I C DEPEND SYS NETWO, P554, DOI 10.1109/DSN.2007.85
   *MICR CORP, 2005, DET DESCR DAT EX PRE
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   MYERS J, 1996, POST OFFICE PROTOCOL
   NEVES N, 2006, P INT C DEP SYST NET
   Oehlert P, 2005, IEEE SECUR PRIV, V3, P58, DOI 10.1109/MSP.2005.55
   *QUALYS INC, 2008, QUALYSGUARD ENT
   *SAINT CORP, 2008, SAINT NETW VULN SCAN
   Sutton M., 2007, Fuzzing: brute force vulnerability discovery
   *TEN NETW SEC, 2008, NESS VULN SCANN
   TSAI T, 2001, LIBSAFE 2 0 DETECTIO
   TSAI TK, 1995, P 8 INT C MOD TECHN, P26
   *U OUL, 1999, PROTOS SEC TEST PROT
   Vaidyanathan K, 2005, IEEE T DEPEND SECURE, V2, P124, DOI 10.1109/TDSC.2005.15
   VERISSIMO P, 1996, IEEE SECUR PRIV, V4, P54
   Wagner D., 2000, P NETWORK DISTRIBUTE
NR 31
TC 27
Z9 37
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2010
VL 36
IS 3
BP 357
EP 370
DI 10.1109/TSE.2009.91
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 601PB
UT WOS:000278073400006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mattsson, A
   Lundell, B
   Lings, B
   Fitzgerald, B
AF Mattsson, Anders
   Lundell, Bjoern
   Lings, Brian
   Fitzgerald, Brian
TI Linking Model-Driven Development and Software Architecture: A Case Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Case study; model-driven development; software architecture
AB A basic premise of model-driven development (MDD) is to capture all important design information in a set of formal or semiformal models, which are then automatically kept consistent by tools. The concept, however, is still relatively immature and there is little by way of empirically validated guidelines. In this paper, we report on the use of MDD on a significant real-world project over several years. Our research found the MDD approach to be deficient in terms of modeling architectural design rules. Furthermore, the current body of literature does not offer a satisfactory solution as to how architectural design rules should be modeled. As a result developers have to rely on time-consuming and error-prone manual practices to keep a system consistent with its architecture. To realize the full benefits of MDD, it is important to find ways of formalizing architectural design rules, which then allow automatic enforcement of the architecture on the system. model. Without this, architectural enforcement will remain a bottleneck in large MDD projects.
C1 [Mattsson, Anders] Combitech AB, SE-55111 Jonkoping, Sweden.
   [Lundell, Bjoern; Lings, Brian] Univ Skovde, SE-54128 Skovde, Sweden.
   [Fitzgerald, Brian] Univ Limerick, Lerothe Irish Software Engn Res Ctr, Limerick, Ireland.
C3 Combitech; University of Skovde; University of Limerick
RP Mattsson, A (corresponding author), Combitech AB, POB 1017, SE-55111 Jonkoping, Sweden.
EM anders.mattson@combitech.se; bjorn.lundell@his.se; brain.lings@his.se;
   bf@ul.ie
RI Fitzgerald, Brian/E-7790-2010
OI Fitzgerald, Brian/0000-0001-9193-2863
FU ITEA; Open source in Software Intensive products (COSI)
   (www.itea-cosi.org); Science Foundation Ireland (www.sfi.ie)
FX This research has been financially supported by the ITEA project
   Co-development using inner and Open source in Software Intensive
   products (COSI) (www.itea-cosi.org) through Vinnova (www.vinnova.se) and
   also by funding from the Science Foundation Ireland (www.sfi.ie).
CR AMERICA P, 2004, MULTI VIEW VARIATION
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 2004, Software Factories
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Baker P, 2005, LECT NOTES COMPUT SC, V3713, P476, DOI 10.1007/11557432_36
   Balasubramanian K, 2006, COMPUTER, V39, P33, DOI 10.1109/MC.2006.54
   Baskenrille R. L, 1999, COMMUNICATIONS AIS, V2, P4
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bayley I, 2007, SEFM 2007: FIFTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P25, DOI 10.1109/SEFM.2007.43
   Bengtsson P, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P308, DOI 10.1109/ICSR.1998.685756
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Bosch P, 1999, JAVA REP, V4, P10
   Braa K., 1999, ACCOUNTING MANAGEMEN, V9, P25, DOI [DOI 10.1016/S0959-8022(98)00018-6, 10.1016/S0959-8022(98)00018-6]
   BRAA K, 2000, PLANET INTERNET, P251
   Eden AH, 2002, INFORM SYST FRONT, V4, P379, DOI 10.1023/A:1020835709566
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Hailpern B, 2006, IBM SYST J, V45, P451, DOI 10.1147/sj.453.0451
   Hofmeister C., 2000, APPL SOFTWARE ARCHIT
   IEEE, 2000, IEEE REC PRACT ARCH
   JANSEN A., 2007, P 6 IEEE IFIP WORK C, P44
   Jansen A, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P109
   Karsai G, 2003, P IEEE, V91, P145, DOI 10.1109/JPROC.2002.805824
   Kock N., 1997, J SYSTEMS INFORM TEC, V7, P1, DOI [10.1108/13287269780000732, DOI 10.1108/13287269780000732]
   Kruchten P.., 2004, RATIONAL UNIFIED PRO
   Kruchten P., 2004, 2nd Groningen workshop on software variability, P54
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Kruchten P, 2006, LECT NOTES COMPUT SC, V4214, P43
   LAU F, 1997, P IFIP TC8 WG 8 2 IN, P31
   LAUDER A., 1998, P 12 EUR C OBJ OR PR
   Lee AS, 2003, INFORM SYST RES, V14, P221, DOI 10.1287/isre.14.3.221.16560
   Levy Y., 2006, Informing Science, V9, P181
   Lewin K., 1948, Resolving Social Conflicts: Selected Papers on Group Dynamics
   Mak JKH, 2004, PROC INT CONF SOFTW, P252, DOI 10.1109/ICSE.2004.1317447
   Medvidovic N, 2002, ACM T SOFTW ENG METH, V11, P2, DOI 10.1145/504087.504088
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Medvidovic N, 2007, INFORM SOFTWARE TECH, V49, P12, DOI 10.1016/j.infsof.2006.08.006
   Mikkonen T, 1998, PROC INT CONF SOFTW, P115, DOI 10.1109/ICSE.1998.671108
   MIKKONEN T, 2004, P 1 EUR WORKSH SOFTW, P74
   MINTZBERG H, 1979, ADMIN SCI QUART, V24, P582, DOI 10.2307/2392364
   Object Management Group, 2007, UN MOD LANG SUP
   OMG, 2003, MDA GUID VERS 1 0 1
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Ran A., 2000, SOFTWARE ARCHITECTUR, P1
   Schmechtig S, 2006, NEW ELECTRON, V39, P31
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   SHAW M, 1995, IEEE T SOFTWARE ENG, V21, P314, DOI 10.1109/32.385970
   SONI D, 1995, PROC INT CONF SOFTW, P196, DOI 10.1145/225014.225033
   Staron M, 2006, LECT NOTES COMPUT SC, V4199, P57
   Tolvanen JP, 2005, LECT NOTES COMPUT SC, V3714, P198
   Tyree J, 2005, IEEE SOFTWARE, V22, P19, DOI 10.1109/MS.2005.27
   van der Linden F, 2004, LECT NOTES COMPUT SC, V3154, P110
   Walsham G., 1993, INTERPRETING INFORM
   Whiston S.C., 1993, J CAREER DEV, V19, P175
   Wojcik R., 2006, Tech. Rep. CMU/SEI- 2006-TR-023
   Zdun U., 2005, P 20 ANN ACM SIGPLAN
NR 55
TC 19
Z9 22
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2009
VL 35
IS 1
BP 83
EP 93
DI 10.1109/TSE.2008.87
PG 11
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 431UK
UT WOS:000265089400005
DA 2024-07-18
ER

PT J
AU Bontemps, Y
   Heymans, P
   Schobbens, PY
AF Bontemps, Y
   Heymans, P
   Schobbens, PY
TI From live sequence charts to state machines and back: A guided tour
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE requirements engineering; life cycle; program verification
ID TEMPORAL LOGIC; SCENARIOS
AB The problem of relating state-based intraagent (or intraobject) behavioral descriptions with scenario-based interagent (interobject) descriptions has recently focused much interest among the software engineering community. This paper compiles the results of our investigation of this problem. As interagent formalism, we adopt a simple variant of Live Sequence Charts. For the intraagent perspective, we consider a game-theoretic foundation, looking at agents as "strategies," which encompasses the popular "state-based" paradigm. Three classes of relationships between models are studied: scenario checking (called eLSC checking), synthesis, and verification. We set a formally defined theoretical stage that allows us to express these three problems very simply, to discuss their complexity, and to describe optimal solutions. Our study reveals the intrinsic high computational difficulty of these tasks. Consequently, many related problems and solutions are surveyed, some of which can be the basis for practical solutions. In this, we also offer a panorama of current research and directions for the future.
C1 SmalS MvMeGov, B-1050 Brussels, Belgium.
   Univ namur, Inst Informat, B-5000 Namur, Belgium.
C3 University of Namur
RP SmalS MvMeGov, 102 Rue Prince Royal, B-1050 Brussels, Belgium.
EM yves.bontemps@smals-mvm.be; phe@info.fundp.ac.be; pys@info.fundp.ac.be
RI Schobbens, Pierre-Yves/H-2333-2011
OI Schobbens, Pierre-Yves/0000-0001-8677-4485
CR ABADI M, 1989, AUTOMATA LANGUAGES P
   Alur R., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P304, DOI 10.1109/ICSE.2000.870421
   AMYOT D, 2001, P 9 INT C TEL SYST 9
   [Anonymous], 1992, Ph.D. thesis
   [Anonymous], 1989, CWI Q.
   [Anonymous], 2003, Software requirements
   [Anonymous], 1989, C RECORD 16 ANN ACM, DOI DOI 10.1145/75277.75293
   Berry Gerard., 1998, Proof, Language and Interaction: Essays in Honour of Robin Milner
   Biermann A. W., 1976, IEEE Transactions on Software Engineering, VSE-2, P141, DOI 10.1109/TSE.1976.233812
   Bohn J., 2002, P C INT DES PROC TEC
   Bontemps Y, 2005, LECT NOTES COMPUT SC, V3466, P174
   Bontemps Y, 2004, FUND INFORM, V62, P139
   BONTEMPS Y, 2001, THESIS U NAMUR NAMUR
   BONTEMPS Y, 2005, THESIS U NAMUR
   BONTEMPS Y, 2004, SEMANTICS UML 2 0 IN
   BONTEMPS Y, 2004, P 3 INT WORKSH SCEN, P27
   BONTEMPS Y, 2005, P FDN SOFTW SCI COMP, P364
   BONTEMPS Y, 2002, P SCEN STAT MACH MOD
   BRILL M, 2004, INTEGRATION SOFTWARE
   BUNKER A, 2002, UCCS02004 U UT SCH C
   Cengarle MariaVictoria., 2004, Proc. 3rd Int. Wsh. Critical Systems Development with UML, P85
   Clarke EM, 1996, ACM COMPUT SURV, V28, P626, DOI 10.1145/242223.242257
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   Desharnais J, 1998, IEEE T SOFTWARE ENG, V24, P695, DOI 10.1109/32.713325
   DIETHELM I, 2002, P SCEN STAT MACH MOD
   EMERSON EA, 1982, SCI COMPUT PROGRAM, V2, P241, DOI 10.1016/0167-6423(83)90017-5
   FINKBEINER B, 2001, P OOPSLA 2001 WORKSH
   GASTIN P, 2004, P LAT THEOR INF LATI
   GRDEL E, 2002, AUTOMATA LOGICS INFI
   Gunter CA, 2000, IEEE SOFTWARE, V17, P37, DOI 10.1109/52.896248
   Harel D, 2005, LECT NOTES COMPUT SC, V3393, P309
   Harel D., 2002, International Journal of Foundations of Computer Science, V13, P5, DOI 10.1142/S0129054102000935
   Harel D, 2001, COMPUTER, V34, P53, DOI 10.1109/2.895118
   HAREL D, 1985, NATO ASI SERIES F, V13, P477
   HAREL D, 2000, P 5 INT C IMPL APPL
   HAREL D, 2002, P 4 INT C FORM METH
   HAREL D, MCS0208 WEIZM I SCI
   Harel D., 1998, MODELING REACTIVE SY
   HAREL P, 2003, COME LETS PLAY SCENA
   HOMME T, 2003, THESIS AGDER U COLL
   HSIA P, 1994, IEEE SOFTWARE    MAR, P33
   Jackson M., 1995, SOFTWARE REQUIREMENT
   Klose J, 2002, ISSS'02: 15TH INTERNATIONAL SYMPOSIUM ON SYSTEM SYNTHESIS, P186, DOI 10.1109/ISSS.2002.1227175
   KLOSE J, 2001, P 7 INT C TOOLS ALG, P512
   KLOSE J, 2003, THESIS C VONOSSIETZK
   KOSKIMIES K, 1996, A19964 U TEMP DEP CO
   KOSKINEN J, 2004, P 3 INT WORKSH SCEN
   KRUGER I, 1999, MSCS STATECHARTS
   KUGLER H, 2005, P TOOLS ALG CONSTR A
   Kupferman O, 2001, INFORM COMPUT, V164, P322, DOI 10.1006/inco.2000.2893
   KUPFERMAN O, 2001, P 16 IEEE S LOG COMP
   Kupferman O., 1997, 2nd Int. Conf. on Temporal Logic, P91
   Lamport Leslie, 1990, Formal Models and Semantics, P1157, DOI [10.1016/B978-0-444-88074-1.50023-8, DOI 10.1016/B978-0-444-88074-1.50023-8]
   MADHUSUDHAN P, 2002, P CONCUR 02
   Mäkinen E, 2002, ACTA INFORM, V38, P235, DOI 10.1007/s236-002-8033-8
   MANNA Z, 1984, ACM T PROGR LANG SYS, V6, P68, DOI 10.1145/357233.357237
   McMillan K. L., 1993, Symbolic model checking
   MUKERJI J, 2003, MDA GUIDE V 1 0 1 OM
   *OBJ MAN GROUP UML, 2003, OMG UML SPEC 2 0
   Pnueli A., 1989, Automata, Languages and Programming. 16th International Colloquium Proceedings, P652, DOI 10.1007/BFb0035790
   RAMADGE PJG, 1989, P IEEE, V77, P81, DOI 10.1109/5.21072
   Schwoon S, 2005, LECT NOTES COMPUT SC, V3440, P174
   SUN J, 2005, 2005 FM
   UCHITEL S, 2001, P JOINT 8 EUR SOFTW, P74
   UCHITEL S, 2001, P 23 IEEE INT C SOFT
   VARDI MY, 1986, J COMPUT SYST SCI, V32, P183, DOI 10.1016/0022-0000(86)90026-7
   VARDI MY, 1995, P 7 INT C COMP AID V, P267
   Wallmeier N, 2003, LECT NOTES COMPUT SC, V2759, P11
   Weidenhaupt K, 1998, IEEE SOFTWARE, V15, P34, DOI 10.1109/52.663783
   Whittle J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P314, DOI 10.1109/ICSE.2000.870422
   WOLPER P, 1993, P INT C CONC THEOR C, P233
   WONGTOI H, 1991, COMPUTER AIDED VERIF, P177
   ZAIDI T, 2004, P 26 INT C SOFTW ENG, P242
   2004, MSC2004
NR 74
TC 30
Z9 34
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2005
VL 31
IS 12
BP 999
EP 1014
DI 10.1109/TSE.2005.137
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 995RU
UT WOS:000234122300002
DA 2024-07-18
ER

PT J
AU Ying, ATT
   Murphy, GC
   Ng, R
   Chu-Carroll, MC
AF Ying, ATT
   Murphy, GC
   Ng, R
   Chu-Carroll, MC
TI Predicting source code changes by mining change history
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE enhancement; maintainability; clustering; classification; association
   rules; data mining
AB Software developers are often faced with modification tasks that involve source which is spread across a code base. Some dependencies between source code, such as those between source code written in different languages, are difficult to determine using existing static and dynamic analyses. To augment existing analyses and to help developers identify relevant source code during a modification task, we have developed an approach that applies data mining techniques to determine change patterns-sets of files that were changed together frequently in the past-from the change history of the code base. Our hypothesis is that the change patterns can be used to recommend potentially relevant source code to a developer performing a modification task. We show that this approach can reveal valuable dependencies by applying the approach to the Eclipse and Mozilla open source projects and by evaluating the predictability and interestingness of the recommendations produced for actual modification tasks on these systems.
C1 IBM TJ Watson Res Ctr, Hawthorne, NY 10532 USA.
   Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1Z4, Canada.
C3 International Business Machines (IBM); University of British Columbia
RP IBM TJ Watson Res Ctr, 19 Skyline Dr, Hawthorne, NY 10532 USA.
EM aying@us.ibm.coom; murphy@cs.ubc.ca; rng@cs.ubc.ca; markcc@us.ibm.com
CR Agrawal Hiralal, 1990, PLDI, P246, DOI 10.1145/93542.93576
   Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   Arnold Robert S., 1996, SOFTWARE CHANGE IMPA
   BAKER BS, 1992, COMPUTING SCIENCE AND STATISTICS : VOL 24, P49
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Brin S., 1997, P 1997 ACM SIGMOD IN, P265
   Cheung W, 2003, SEVENTH INTERNATIONAL DATABASE ENGINEERING AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P111, DOI 10.1109/IDEAS.2003.1214917
   CUBRANIC D, P INT C SOFTW ENG, P408
   Fischer M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P90, DOI 10.1109/WCRE.2003.1287240
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   GALLAGHER KB, 1991, IEEE T SOFTWARE ENG, V17, P751, DOI 10.1109/32.83912
   Han J, 2000, P 2000 ACM SIGMOD IN, P1, DOI DOI 10.1145/342009.335372
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   LEBLANG DB, 1994, CM CHALLENGE CONFIGU
   Magnusson B, 1996, LECT NOTES COMPUT SC, V1167, P31, DOI 10.1007/BFb0023079
   Mayrand J, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P244, DOI 10.1109/ICSM.1996.565012
   Michail A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P167, DOI 10.1109/ICSE.2000.870408
   MICHAIL A, 1999, P 14 INT C AUT SOFTW, P24
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A, 2001, IEEE SOFTWARE, V18, P30, DOI 10.1109/52.914737
   PARK JS, 1997, T KNOWLEDGE DATA ENG, P813
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Sartipi K., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P129, DOI 10.1109/CSMR.2000.827321
   Shirabad J. S., 2000, P C CTR ADV STUD COL
   Tjortjis C, 2003, PROG COMPREHEN, P125
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
   ZIMMERMANN T, 2003, P INT WORKSH PRINC S
NR 29
TC 291
Z9 356
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2004
VL 30
IS 9
BP 574
EP 586
DI 10.1109/TSE.2004.52
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 845HM
UT WOS:000223233000002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Apvrille, L
   Courtiat, JP
   Lohr, C
   de Saqui-Sannes, P
AF Apvrille, L
   Courtiat, JP
   Lohr, C
   de Saqui-Sannes, P
TI TURTLE: A real-time UML profile supported by a formal validation toolkit
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE real-time systems; UML; RT-LOTOS; formal validation
AB This paper presents a UML 1.5 profile named TURTLE (Timed UML and RT-LOTOS Environment) endowed with a formal semantics given in terms of RT-LOTOS. TURTLE relies on UML's extensibility mechanisms to enhance class and activity diagrams. Class diagrams are extended with specialized classes named Tclasses, which communicate and synchronize through gates. Also, associations between Tclasses are attributed by a composition operator (Parallel, Synchro, Invocation, Sequence, or Preemption) which provides them with a formal semantics. TURTLE extends UML activity diagrams with synchronization actions and temporal operators ( deterministic delay, nondeterministic delay, time-limited offer, and time-capture). The real-time dimension of TURTLE has been further improved by the addition of two composition operators, Periodic and Suspend, as well as suspendable delay, latency, and time-limited offer operators at the activity diagram level. Core characteristics of TURLE are supported by TTool-the TURTLE toolkit-which includes a diagram editor, a RT-LOTOS code generator and a result analyzer. The toolkit reuses RTL, a RT-LOTOS validation tool offering debug-oriented simulation and exhaustive analysis. TTool hides RT-LOTOS to the end-user and allows him/her to directly check TURTLE modeling against logical errors and timing inconsistencies. Besides the foundations of the TURTLE profile, this paper also discusses its application in the context of space-based embedded software.
C1 ENST, Inst Eurecom, F-06904 Sophia Antipolis, France.
   CNRS, LAAS, F-31077 Toulouse 04, France.
   Concordia Univ, Dept Elect & Comp Engn, Montreal, PQ H3G 1M8, Canada.
   ENSICA, F-31056 Toulouse 05, France.
   CNRS, LAAS, F-31056 Toulouse 05, France.
C3 IMT - Institut Mines-Telecom; EURECOM; Centre National de la Recherche
   Scientifique (CNRS); Concordia University - Canada; Centre National de
   la Recherche Scientifique (CNRS)
RP ENST, Inst Eurecom, BP 193,2229 Route Cretes, F-06904 Sophia Antipolis, France.
EM ludovic.apvrille@enst.fr; courtiat@laas.fr; lohr@ece.concordia.ca;
   desaqui@ensica.fr
RI de Saqui-Sannes, Pierre/L-2723-2017
OI de Saqui-Sannes, Pierre/0000-0002-1404-0148; Lohr,
   Christophe/0000-0002-0655-2880
CR ANDRE C, 2002, P INT C UN MOD LANG
   APVRILLE L, 2003, P C FRANC ING PROT O
   Apvrille L., 2001, LNCS, P287
   APVRILLE L, 2004, AUTOMATED SOFTWARE E, V11
   BJORKANDER M, 2000, EMBEDDED SYSTEM  OCT
   BRUEL JM, 1999, P IEEE WORKSH IND ST
   CLARK R, 2000, J UNIVERS COMPUT SCI, V6, P1071
   COMBES S, 2001, P 19 AIAA INT COMM S
   COMPTON K, 2000, CSETRE42300 U MICH
   Courtiat JP, 2000, COMPUT COMMUN, V23, P1104, DOI 10.1016/S0140-3664(99)00240-6
   DAMM W, 2003, FORMAL SEMANTICS UML
   DELATOUR J, 1998, P WORKSH OBJ OR TECH
   DIETHERS K, 2002, P WORKSH CRIT SYST D
   DOLDI L, 2003, UML2 ILLUSTRATED DEV
   DUPUY S, 2001, FORMAL ASPECTS COMPU, P228
   EVANS AS, 1999, P 2 INT C UN MOD LAN
   FLAKE S, 2002, P INT C UN MOD LANG
   GERARD S, 2002, P C ADV OBJ OR INF S, P260
   HOOMAN J, 2002, P PROGRESS WORKSH EM
   JARD C, 1988, IEEE T SOFTWARE ENG, V14, P339, DOI 10.1109/32.4654
   LALEAU R, 2000, P 15 IEEE INT C AUT
   LEGUENNEC A, 2000, ACT 8 C FRANC ING PR, P151
   Lilius J, 1999, P 14 IEEE INT C AUT
   LOHR C, 2002, P 7 INT S FORM TECHN, P129
   LOHR C, 2003, P IFIP INT C FORM ME, P214
   *OBJ MAN GROUP, 2003, UN MOD LANG SPEC VER
   Object Management Group, 2003, UML 2 0 SUP SPEC
   ROULLET L, 1999, P EUR C SAT COMM
   Selic Bran., 1998, Using UML for Modeling Complex Real-Time Systems
   THEELEN BD, 2002, P FOR SPEC DES LANG
   Traore Issa., 2000, Journal of Universal Computer Science, V6, P1088
   *UML ASP, 2003, ART SOFTW
   1998, REAL TIME LOTOS
NR 33
TC 46
Z9 48
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2004
VL 30
IS 7
BP 473
EP 487
DI 10.1109/TSE.2004.34
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 826DE
UT WOS:000221808600005
DA 2024-07-18
ER

PT J
AU Barbier, F
   Henderson-Sellers, B
   Le Parc-Lacayrelle, A
   Bruel, JM
AF Barbier, F
   Henderson-Sellers, B
   Le Parc-Lacayrelle, A
   Bruel, JM
TI Formalization of the whole-part relationship in the unified modeling
   language
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE object-oriented modeling; UML; whole-part relationship; aggregation;
   composition
ID SEMANTICS
AB A formal definition for the semantics of the Whole-Part relationship in the Unified Modeling Language or UML is introduced. This provides a fully directly usable specification which that can be incorporated into version 2.0 of UML. An improvement to the,current metamodel fragment relating to relationships is proposed, supplemented by the introduction of axioms expressed in the Object Constraint Language or OCL. The overall formalization relates to a clear and concise emphasis on carefully enunciated (primary) characteristics that apply to all instances of a new Whole-Part metatype. Specific kinds of the Whole-Part relationship are defined in terms of secondary characteristics, which must be possessed by subtypes: In UML 1.4, these are Aggregation (a.k.a. white diamond) and Composition (a.k.a. black diamond). Primary and secondary characteristics may then be consistently combined with. each other.. Consequently, this allows the possible introduction of supplementary forms of Whole-Part. Such a revision is necessary since Aggregation and Composition in UML 1.4 do not cover the full spectrum of Whole-Part theory.
C1 Univ Pau & Pays Adour, LIUPPA, F-64013 Pau, France.
   Univ Technol Sydney, Broadway, NSW 2007, Australia.
C3 Universite de Pau et des Pays de l'Adour; University of Technology
   Sydney
RP Univ Pau & Pays Adour, LIUPPA, BP 1155, F-64013 Pau, France.
EM brian@socs.uts.edu.au; Jean-Michel.Bruel@univ-pqu.fr
RI Bruel, Jean-Michel/ABD-5184-2020
OI Bruel, Jean-Michel/0000-0002-3653-0148
CR [Anonymous], 1987, Parts: a Study in Ontology
   Artale A, 1996, DATA KNOWL ENG, V20, P347, DOI 10.1016/S0169-023X(96)00013-4
   Barbier F, 2001, INFORM SOFTWARE TECH, V43, P19, DOI 10.1016/S0950-5849(00)00133-6
   BARBIER F, 2001, UNIFIED MODELING LAN, P185
   BERTINO E, 1998, P OBJ OR PROGR SYST, P259
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   BOURDEAU RH, 1995, IEEE T SOFTWARE ENG, V21, P799, DOI 10.1109/32.469459
   CIVELLO F, 1993, P OOPSLA, P376
   Cook S., 1994, DESIGNING OBJECT SYS
   FIRESMITH D, 1997, OPEN MODELING LANGUA
   FOWLER M, 2000, UML DISTILLED BRIEF
   Gogolla M., 1998, P 2 INT C UN MOD LAN, P92
   Halper M, 1998, DATA KNOWL ENG, V27, P59, DOI 10.1016/S0169-023X(97)00055-4
   Henderson-Sellers B, 1999, TOOLS, V29, P236, DOI 10.1109/TOOLS.1999.779016
   HENDERSONSELLER.B, 1999, P 2 INT C UN MOD LAN, P550
   Jin Song Dong, 1995, Object Oriented Systems, V2, P41
   KENT W, 1990, DATA REALITY
   KILOV H, 1999, BUSINESS SPECIFICATI
   KOLP M, 1997, P 4 INT C OBJ OR INF, P211
   Lano K., 1995, FORMAL OBJECT ORIENT
   LESNIEWSKI S, 1989, FONDEMENTS MATH FRAG
   Lewandowski SM, 1998, ACM COMPUT SURV, V30, P3, DOI 10.1145/274440.274441
   Motschnig-Pitrik R, 1999, IEEE T KNOWL DATA EN, V11, P779, DOI 10.1109/69.806936
   *OBJ MAN GROUP, 1997, UML SUMM SEM NOT GUI
   Object Management Group, 2001, OMG UN MOD LANG SPEC
   ODELL JJ, 1994, J OBJECT-ORIENT PROG, V7, P10
   Opdahl AL, 2001, INFORM SOFTWARE TECH, V43, P387, DOI 10.1016/S0950-5849(00)00175-0
   Rumbaugh James, 1999, The unified modeling language reference manual
   Saksena M, 1998, OOIS'98: 1998 INTERNATIONAL CONFERENCE OBJECT ORIENTED INFORMATION SYSTEMS, PROCEEDINGS, P11
   SAKSENA M, 1998, P 2 INT C UN MOD LAN, P434
   Snoeck M, 1998, IEEE T SOFTWARE ENG, V24, P233, DOI 10.1109/32.677182
   Varzi AC, 1996, DATA KNOWL ENG, V20, P259, DOI 10.1016/S0169-023X(96)00017-1
   Warmer J.B., 1998, OBJECT CONSTRAINT LA
   WINSTON ME, 1987, COGNITIVE SCI, V11, P417, DOI 10.1207/s15516709cog1104_2
NR 34
TC 49
Z9 53
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2003
VL 29
IS 5
BP 459
EP 470
DI 10.1109/TSE.2003.1199074
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 675HM
UT WOS:000182688000006
DA 2024-07-18
ER

PT J
AU Stensrud, E
   Myrtveit, I
AF Stensrud, E
   Myrtveit, I
TI Identifying high performance ERP projects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software process improvement; benchmarking; best practice
   identification; software project management; multivariate productivity
   measurements; data envelopment analysis (DEA); software development;
   enterprise resource planning (ERP); software metrics; economies of
   scale; variable returns to scale
ID DATA ENVELOPMENT ANALYSIS; SOFTWARE; PRODUCTIVITY; EFFICIENCY;
   ECONOMIES; RANKING; SCALE
AB Learning from high performance projects is crucial for software process improvement. Therefore, we need to identify outstanding projects that may serve as role models. It is common to measure productivity as an indicator of performance. It is vital-that productivity measurements deal correctly With variable returns to scale and multivariate data. Software projects generally exhibit variable returns to,scale, and the output from ERP projects is multivariate. We propose to use Data Envelopment, Analysis Variable Returns to Scale (DEA VRS) to measure the productivity of software projects. DEA VRS fulfills the two requirements stated above. The results from this empirical study of 30 ERP projects extracted from a benchmarking database in Accenture identified six projects as potential role models. These projects deserve to be studied and probably copied as part of a software process improvement initiative. The results also suggest that there is a 50 percent potential for productivity improvement, on average. Finally, the results support the assumption of variable returns to scale in ERP projects. We recommend DEA VRS be used as the default technique for appropriate productivity comparisons of individual software projects. Used together with methods for hypothesis testing, DEA VRS is also a useful technique for assessing the effect of alleged process improvements.
C1 Norwegian Sch Management, N-1301 Sandvika, Norway.
C3 BI Norwegian Business School
RP Norwegian Sch Management, POB 580, N-1301 Sandvika, Norway.
EM Ingunn.myrtveit@bi.no
CR Afriat S.N., 1972, Int. Econ. Rev., V13, P568
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   ANDERSEN P, 1993, MANAGE SCI, V39, P1261, DOI 10.1287/mnsc.39.10.1261
   [Anonymous], 2000, MINITAB STAT SOFTWAR
   [Anonymous], 1971, The Psychology of Computer Programming
   BANKER RD, 1994, INFORM SOFTWARE TECH, V36, P275, DOI 10.1016/0950-5849(94)90083-3
   BANKER RD, 1989, IEEE T SOFTWARE ENG, V15, P1199, DOI 10.1109/TSE.1989.559768
   BANKER RD, 1991, MANAGE SCI, V37, P1, DOI 10.1287/mnsc.37.1.1
   BANKER RD, 1993, MANAGE SCI, V39, P1265, DOI 10.1287/mnsc.39.10.1265
   Basili VR, 1996, COMMUN ACM, V39, P104, DOI 10.1145/236156.236184
   BEHRENS CA, 1983, IEEE T SOFTWARE ENG, V9, P648, DOI 10.1109/TSE.1983.235429
   BERENSON ML, 1999, BASIC BUSINESS STAT, P889
   Blackburn JD, 1996, IEEE T SOFTWARE ENG, V22, P875, DOI 10.1109/32.553636
   Boehm BW, 1996, AM PROGRAM, P2
   Boehm BW., 1981, Software Engineering Economics
   Briand LC, 1998, PROC INT CONF SOFTW, P390, DOI 10.1109/ICSE.1998.671392
   Brooks Frederick P., 1995, The mythical man-month
   Bryan G. E., 1994, 1994 IEEE Aerospace Applications Conference Proceedings (Cat. No.94TH0623-9), P55, DOI 10.1109/AERO.1994.291203
   CHARNES A, 1978, EUR J OPER RES, V2, P429, DOI 10.1016/0377-2217(78)90138-8
   DOYLE J, 1994, J INFORM TECHNOL, V9, P61, DOI 10.1057/jit.1994.7
   Fisher DM, 1995, J COMPUT INFORM SYST, V36, P21
   FORSUND FR, 1979, ECON J, V89, P294, DOI 10.2307/2231603
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   KEMERER CF, 1993, COMMUN ACM, V36, P85, DOI 10.1145/151220.151230
   Mahmood MA, 1994, INFORM SYST J, V4, P93, DOI 10.1111/j.1365-2575.1994.tb00045.x
   Moser S, 1996, COMPUTER, V29, P45, DOI 10.1109/2.536783
   Myrtveit I., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P269, DOI 10.1109/METRIC.1999.809748
   Parkan C, 1997, J OPER RES SOC, V48, P892
   SACKMAN H, 1968, COMMUN ACM, V11, P3, DOI 10.1145/362851.362858
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Stensrud E, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P3, DOI 10.1109/METRIC.2002.1011320
   Stensrud E, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P205, DOI 10.1109/METRIC.1998.731247
   STENSRUD E, 1998, P EUR SOFTW MEAS C F, P549
   STOLP C, 1990, COMPUT ENVIRON URBAN, V14, P103, DOI 10.1016/0198-9715(90)90016-M
   Thore S, 1996, COMPUT OPER RES, V23, P341, DOI 10.1016/0305-0548(95)00043-7
   TOBIN J, 1958, ECONOMETRICA, V26, P24, DOI 10.2307/1907382
   Torgersen AM, 1996, J PROD ANAL, V7, P379, DOI 10.1007/BF00162048
   [No title captured]
NR 38
TC 50
Z9 56
U1 0
U2 28
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2003
VL 29
IS 5
BP 398
EP 416
DI 10.1109/TSE.2003.1199070
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 675HM
UT WOS:000182688000002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Huang, SJ
   Lai, R
AF Huang, SJ
   Lai, R
TI Measuring the maintainability of a communication protocol based on its
   formal specification
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE formal description techniques; Estelle; factor-subfactor-metric model;
   software maintainability; software metrics
ID COMPLEXITY-MEASURES; SOFTWARE COMPLEXITY; INFORMATION; METRICS;
   MAINTENANCE; MODEL
AB It is difficult to measure the maintainability of a software system early in the development. life cycle from its requirement descriptions, written in a natural language because informal specifications Cannot be analyzed. With the uses of Formal Description Techniques (FDTs) in the communication,protocol area since the mid-1980s,. avenues have been opened up for a system to be analyzed early in the specification. phase. Quantitative measures on its maintainability can then be extracted from such a formal specification, so that we can develop easily maintainable communication software systems and further reduce the increasingly high cost of software maintenance. To date, there is hardly any work done on measuring the maintainability of a system early in its specification, phase. This paper presents a method for measuring the maintainability of a communication by using maintainability metrics derived from its formal specification written in Estelle. The methodology, for building the Estelle maintainability metrics hierarchy-is presented. We have also developed an automated tool, called PSAMS, to automate the calculation of the maintainability indices. We also found that there is a significant correlation between the specification metrics proposed and the widely adopted implementation metrics, thus demonstrating that our proposed metrics are a reliable means of measuring the maintainability of a communication protocol early in the specification phase.
C1 Natl Taiwan Univ Sci & Technol, Dept Informat Management, Taipei, Taiwan.
   La Trobe Univ, Dept Comp Sci & Comp Engn, Bundoora, Vic 3086, Australia.
C3 National Taiwan University of Science & Technology; La Trobe University
RP Natl Taiwan Univ Sci & Technol, Dept Informat Management, Taipei, Taiwan.
EM huangsj@mail.ntust.edu.tw; lai@latcs1.cs.latrobe.edu.au
CR [Anonymous], 1986, Software Engineering Metrics and Models
   BANKER RD, 1993, COMMUN ACM, V36, P81, DOI 10.1145/163359.163375
   BLAINE JD, 1985, J SYST SOFTWARE, V5, P229, DOI 10.1016/0164-1212(85)90023-8
   BOEHM BW, 1987, CHARACTERISTICS SOFT
   BUDKOWSKI S, 1992, COMPUT NETWORKS ISDN, V25, P63, DOI 10.1016/0169-7552(92)90124-9
   BUDKOWSKI S, 1987, COMPUTER NETWORKS IS, V14
   CHA S, 1993, INFORM PROCESS LETT, V46, P43, DOI 10.1016/0020-0190(93)90195-F
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   COLEMAN D, 1994, COMPUTER, V27, P44, DOI 10.1109/2.303623
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   HATZIMANIKATIS AE, 1995, J SOFTW MAINT-RES PR, V7, P77, DOI 10.1002/smr.4360070203
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   HOPE JM, 1995, J SYST SOFTWARE, V31, P157
   Huang SJ, 1998, J SYST SOFTWARE, V40, P165, DOI 10.1016/S0164-1212(97)00008-3
   Huang SJ, 1998, SOFTWARE PRACT EXPER, V28, P1465, DOI 10.1002/(SICI)1097-024X(19981210)28:14<1465::AID-SPE187>3.0.CO;2-H
   *ISO, 1989, 9074 ISO IS
   *ISO IEC, 1992, 100263 ISOIEC
   KAFURA D, 1987, IEEE T SOFTWARE ENG, V13, P335, DOI 10.1109/TSE.1987.233164
   LI HF, 1987, IEEE T SOFTWARE ENG, V13, P697, DOI 10.1109/TSE.1987.233475
   McCabe T. J., 1976, IEEE T SOFTWARE ENG, V2
   ONEAL MB, 1994, IEEE T KNOWL DATA EN, V6, P669, DOI 10.1109/69.317699
   PICKARD MM, 1995, INFORM SOFTWARE TECH, V37, P195, DOI 10.1016/0950-5849(95)90811-8
   RAFFY JL, 1995, P ANN OR WORKSH SOFT
   ROMBACH HD, 1987, IEEE T SOFTWARE ENG, V13, P344, DOI 10.1109/TSE.1987.233165
   ROMBACH HD, 1989, P IEEE, V77, P581, DOI 10.1109/5.24144
   SHATZ SM, 1988, IEEE T SOFTWARE ENG, V14, P1122, DOI 10.1109/32.7623
   SIJELMASSI R, 1993, COMPUT NETWORKS ISDN, V25, P841, DOI 10.1016/0169-7552(93)90051-5
   SIJELMASSI R, 1991, FORMAL DESCRIPTION T, V3
   SIJELMASSI R, 1991, NCSLSNA913 NIST
   TEGARDEN DP, 1995, DECIS SUPPORT SYST, V13, P241, DOI 10.1016/0167-9236(93)E0045-F
   YAU SS, 1988, IEEE T SOFTWARE ENG, V14, P1128, DOI 10.1109/32.7624
   1993, IEEE COMPUTER SO MAR
NR 32
TC 3
Z9 4
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2003
VL 29
IS 4
BP 327
EP 344
DI 10.1109/TSE.2003.1191797
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 664PT
UT WOS:000182070000004
DA 2024-07-18
ER

PT J
AU Kommrusch, S
   Monperrus, M
   Pouchet, LN
AF Kommrusch, Steve
   Monperrus, Martin
   Pouchet, Louis-Noel
TI Self-Supervised Learning to Prove Equivalence Between Straight-Line
   Programs via Rewrite Rules
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Machine learning; program equivalence; self-supervised learning;
   symbolic reasoning
ID TRANSFORMATIONS; VERIFICATION
AB We target the problem of automatically synthesizing proofs of semantic equivalence between two programs made of sequences of statements. We represent programs using abstract syntax trees (AST), where a given set of semantics-preserving rewrite rules can be applied on a specific AST pattern to generate a transformed and semantically equivalent program. In our system, two programs are equivalent if there exists a sequence of application of these rewrite rules that leads to rewriting one program into the other. We propose a neural network architecture based on a transformer model to generate proofs of equivalence between program pairs. The system outputs a sequence of rewrites, and the validity of the sequence is simply checked by verifying it can be applied. If no valid sequence is produced by the neural network, the system reports the programs as non-equivalent, ensuring by design no programs may be incorrectly reported as equivalent. Our system is fully implemented for one single grammar which can represent straight-line programs with function calls and multiple types. To efficiently train the system to generate such sequences, we develop an original incremental training technique, named self-supervised sample selection. We extensively study the effectiveness of this novel training approach on proofs of increasing complexity and length. Our system,S4Eq, achieves 97% proof success on a curated dataset of 10,000 pairs of equivalent programs.
C1 [Kommrusch, Steve; Pouchet, Louis-Noel] Colorado State Univ, Ft Collins, CO 80523 USA.
   [Monperrus, Martin] KTH Royal Inst Technol, Stockholm S-11428, Sweden.
C3 Colorado State University; Royal Institute of Technology
RP Kommrusch, S (corresponding author), Colorado State Univ, Ft Collins, CO 80523 USA.
EM steveko@cs.colostate.edu; monperrus@kth.se; pouchet@colostate.edu
RI Monperrus, Martin/I-3640-2012
OI Monperrus, Martin/0000-0003-3505-3383
FU U.S. National Science Foundation [CCF-1750399]; Wallenberg Artificial
   Intelligence, Autonomous Systems and Software Program (WASP) - Knut and
   Alice Wallenberg Foundation; Swedish Foundation for Strategic Research
   (SSF)
FX & nbsp;work was supported in part by the U.S. National Science
   Foundation under Grant CCF-1750399. This work was partially supported in
   part by the Wallenberg Artificial Intelligence, Autonomous Systems and
   Software Program (WASP) funded by Knut and Alice Wallenberg Foundation,
   and in part by the Swedish Foundation for Strategic Research (SSF).&
   nbsp;
CR Alias C., 2004, Electronic Notes in Theoretical Computer Science, V82, P395
   Allamanis M, 2021, ADV NEUR IN, V34
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Andrychowicz M., 2017, ADV NEURAL INFORM PR, P5048
   Badihi S, 2021, IEEE WORK CONF MIN S, P610, DOI 10.1109/MSR52588.2021.00084
   Badihi S, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P13, DOI 10.1145/3368089.3409757
   Banerjee K., 2014, PROC IEEE 18 INT S V, P1
   Bansal K, 2019, PR MACH LEARN RES, V97
   Bao WL, 2016, ACM SIGPLAN NOTICES, V51, P539, DOI 10.1145/2914770.2837656
   Barthou D, 2002, LECT NOTES COMPUT SC, V2400, P309
   Bavishi R., 2017, CONTEXT2NAME DEEP LE
   Bertot Yves, 2013, Interactive theorem proving and program development: Coq'Art: the calculus of inductive constructions
   Bielik P, 2016, PR MACH LEARN RES, V48
   Bui N, 2021, Arxiv, DOI arXiv:2009.02731
   Bui NDQ, 2021, SIGIR '21 - PROCEEDINGS OF THE 44TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P511, DOI 10.1145/3404835.3462840
   Chen L., 2021, arXiv
   Chen Z., 2019, IEEE T SOFTW ENG, V47, P1943
   Chen Z., 2023, IEEE T SOFTWARE ENG, V49, P147
   Churchill B, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P1027, DOI 10.1145/3314221.3314596
   Ciesielski MJ, 2002, DESIGN, AUTOMATION AND TEST IN EUROPE CONFERENCE AND EXHIBITION, 2002 PROCEEDINGS, P285, DOI 10.1109/DATE.2002.998286
   Clarke E., 2003, Proceedings 2003. Design Automation Conference (IEEE Cat. No.03CH37451), P368
   Clune J, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428239
   Cocke J., 1970, P S COMPILER OPTIMIZ, V5, DOI [DOI 10.1145/800028.808480, 10.1145/390013.808480]
   Cong Jason, 2016, FPGAs for Soft, P137
   Crouse M, 2021, AAAI CONF ARTIF INTE, V35, P6279
   Dahiya M, 2017, LECT NOTES COMPUT SC, V10695, P127, DOI 10.1007/978-3-319-71237-6_7
   DERSHOWITZ N, 1985, INFORM CONTROL, V65, P122, DOI 10.1016/S0019-9958(85)80003-6
   Dietterich TG, 2000, LECT NOTES COMPUT SC, V1857, P1, DOI 10.1007/3-540-45014-9_1
   Ding W., 2021, THESIS TU MUNCHEN
   Drain Dawn, 2021, MAPS 2021: Proceedings of the 5th SIGPLAN International Symposium on Machine Programming, P1, DOI 10.1145/3460945.3464951
   Gallego AJ, 2021, IEEE T NEUR NET LEAR, V32, P4864, DOI 10.1109/TNNLS.2020.3025954
   Ginsbach P, 2020, PROCEEDINGS OF THE 29TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION (CC '20), P179, DOI 10.1145/3377555.3377893
   GitHub, 2021, 2020 STAT OCT
   Godlin B, 2008, ACTA INFORM, V45, P403, DOI 10.1007/s00236-008-0075-2
   Gogate V, 2012, Arxiv, DOI arXiv:1202.3724
   Goldblatt R, 2012, ACM T COMPUT LOG, V13, DOI 10.1145/2287718.2287726
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Hérault T, 2004, LECT NOTES COMPUT SC, V2937, P73
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Huang S, 2021, FRONT ARTIF INTELL, V4, DOI 10.3389/frai.2021.590215
   IBARRA OH, 1983, J ACM, V30, P217, DOI 10.1145/322358.322373
   Iooss G, 2014, LECT NOTES COMPUT SC, V8723, P168, DOI 10.1007/978-3-319-10936-7_11
   Goodfellow IJ, 2015, Arxiv, DOI arXiv:1312.6211
   Kalvala S, 2009, ACM T PROGR LANG SYS, V31, DOI 10.1145/1516507.1516509
   Kaplan D. M., 1969, J COMPUT SYST SCI, V3, P361, DOI 10.1016/S0022-0000(69)80027-9
   Kaplan J, 2020, Arxiv, DOI arXiv:2001.08361
   Karfa C, 2013, IEEE T COMPUT AID D, V32, P1787, DOI 10.1109/TCAD.2013.2272536
   Kasampalis T, 2021, ASPLOS XXVI: TWENTY-SIXTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P1004, DOI 10.1145/3445814.3446751
   Khan S., 2020, PROPERTIES MATRIX MU
   Kingma D. P., 2014, arXiv
   Klein G, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017): SYSTEM DEMONSTRATIONS, P67, DOI 10.18653/v1/P17-4012
   Kommrusch S., 2021, ARXIV
   Kommrusch S., 2021, S4EQ SOFTWARE
   Kommrusch S., 2021, MACHINE LEARNING COM
   Kommrusch S, 2021, Arxiv, DOI arXiv:2002.06799
   Kong M, 2013, ACM SIGPLAN NOTICES, V48, P127, DOI 10.1145/2499370.2462187
   Lacomis J., 2019, P IEEE INT C AUT SOF
   Lample G., 2020, PROC INT C LEARN REP
   Lample G, 2022, Arxiv, DOI [arXiv:2205.11491, 10.48550/arXiv.2205.11491]
   Lucanu D, 2015, FORM ASP COMPUT, V27, P701, DOI 10.1007/s00165-014-0319-6
   Luo LN, 2017, IEEE T SOFTWARE ENG, V43, P1157, DOI 10.1109/TSE.2017.2655046
   Luo Y, 2020, ENTROPY-SWITZ, V22, DOI 10.3390/e22111190
   Mali A, 2021, AAAI CONF ARTIF INTE, V35, P5006
   MalinowskiFawzi M. FawziH., 2019, P ADV NEUR INF PROC, P4179
   Mansky W, 2010, LECT NOTES COMPUT SC, V6172, P371, DOI 10.1007/978-3-642-14052-5_26
   Mora F, 2018, IEEE INT CONF AUTOM, P441, DOI [10.1145/3238147.3238178, 10.1145/3238117.3238178]
   Muchnick S., 1997, ADV COMPILER DESIGN
   Murawski AS, 2005, LECT NOTES COMPUT SC, V3653, P156, DOI 10.1007/11539452_15
   Nallapati R, 2016, Arxiv, DOI [arXiv:1602.06023, DOI 10.48550/ARXIV.1602.06023]
   Namjoshi K. S., 2000, Computer Aided Verification, P435
   Necula GC, 2000, ACM SIGPLAN NOTICES, V35, P83, DOI 10.1145/358438.349314
   Ni AS, 2023, Arxiv, DOI arXiv:2205.14318
   Pai VS, 1999, INT SYMP MICROARCH, P147, DOI 10.1109/MICRO.1999.809452
   Paliwal A., 2019, arXiv
   Paulson L. C., 2022, ISABELLE PAGE
   Polu S, 2020, Arxiv, DOI arXiv:2009.03393
   Prechelt L, 1998, LECT NOTES COMPUT SC, V1524, P55
   Rabin MRI, 2021, INFORM SOFTWARE TECH, V135, DOI 10.1016/j.infsof.2021.106552
   Raychev V, 2015, ACM SIGPLAN NOTICES, V50, P111, DOI [10.1145/2775051.2677009, 10.1145/2676726.2677009]
   REDDY US, 1989, LECT NOTES COMPUT SC, V355, P388
   Schordan M., 2014, P 6 INT S LEV APPL F
   STEFFEN B, 1991, LECT NOTES COMPUT SC, V526, P346
   Sutskever I, 2014, ADV NEUR IN, V27
   Tomita M., 1982, P 4 ANN C COGN SCI S, P105
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Vaswani A, 2017, ADV NEUR IN, V30
   Verdoolaege S, 2012, ACM T PROGR LANG SYS, V34, DOI 10.1145/2362389.2362390
   Verdoolaege S, 2009, LECT NOTES COMPUT SC, V5643, P599, DOI 10.1007/978-3-642-02658-4_44
   Visser Eelco, 2004, Domain-Specific Program Generation: International Seminar, Dagstuhl Castle, Germany, March 23-28, 2003, P216, DOI DOI 10.1007/978-3-540-25935-0_13
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Wang QL, 2018, NEURAL COMPUT, V30, P2568, DOI 10.1162/neco_a_01111
   Willsey M, 2021, P ACM PROGRAM LANG, V5, DOI 10.1145/3434304
   Wu YH, 2016, Arxiv, DOI [arXiv:1609.08144, DOI 10.48550/ARXIV.1609.08144]
   Ye H, 2022, Arxiv, DOI arXiv:2105.04123
   Zaks A., 2008, PASTE, P1
   Zhao P, 2007, SOFTWARE PRACT EXPER, V37, P465, DOI 10.1002/spe.774
NR 97
TC 1
Z9 1
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2023
VL 49
IS 7
BP 3771
EP 3792
DI 10.1109/TSE.2023.3271065
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA M9RA6
UT WOS:001033501500007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Qian, P
   He, JT
   Lu, LL
   Wu, SW
   Lu, ZP
   Wu, L
   Zhou, YJ
   He, QM
AF Qian, Peng
   He, Jianting
   Lu, Lingling
   Wu, Siwei
   Lu, Zhipeng
   Wu, Lei
   Zhou, Yajin
   He, Qinming
TI Demystifying Random Number in Ethereum Smart Contract: Taxonomy,
   Vulnerability Identification, and Attack Detection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Ethereum; smart contract; random number; vulnerability identification;
   attack detection; taint analysis
AB Recent years have witnessed explosive growth in blockchain smart contract applications. As smart contracts become increasingly popular and carry trillion dollars worth of digital assets, they become more of an appealing target for attackers, who have exploited vulnerabilities in smart contracts to cause catastrophic economic losses. Notwithstanding a proliferation of work that has been developed to detect an impressive list of vulnerabilities, the bad randomness vulnerability is overlooked by many existing tools. In this article, we make the first attempt to provide a systematic analysis of random numbers in Ethereum smart contracts, by investigating the principles behind pseudo-random number generation and organizing them into a taxonomy. We also lucubrate various attacks against bad random numbers and group them into four categories. Furthermore, we present RNVulDet - a tool that incorporates taint analysis techniques to automatically identify bad randomness vulnerabilities and detect corresponding attack transactions. To extensively verify the effectiveness of RNVulDet, we construct three new datasets: i) 34 well-known contracts that are reported to possess bad randomness vulnerabilities, ii) 214 popular contracts that have been rigorously audited before launch and are regarded as free of bad randomness vulnerabilities, and iii) a dataset consisting of 47,668 smart contracts and 49,951 suspicious transactions. We compare RNVulDet with three state-of-the-art smart contract vulnerability detectors, and our tool significantly outperforms them. Meanwhile, RNVulDet spends 2.98 s per contract on average, in most cases orders-of-magnitude faster than other tools. RNVulDet successfully reveals 44,264 attack transactions. Our implementation and datasets are released, hoping to inspire others.
C1 [Qian, Peng; He, Jianting; Lu, Lingling; Wu, Siwei; Lu, Zhipeng; Wu, Lei; Zhou, Yajin; He, Qinming] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310018, Peoples R China.
   [Qian, Peng] Collaborat Innovat Ctr Artificial Intelligence MOE, Hangzhou 310018, Peoples R China.
   [Qian, Peng] Zhejiang Prov Govt, Hangzhou 310018, Peoples R China.
   [Wu, Lei] Key Lab Blockchain & Cyberspace Governance Zhejian, Hangzhou 310018, Peoples R China.
C3 Zhejiang University
RP Zhou, YJ (corresponding author), Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310018, Peoples R China.
EM messi.qp711@gmail.com; jiantinghe@zju.edu.cn;
   lulingling@email.cufe.edu.cn; wusw1020@zju.edu.cn; alexious@zju.edu.cn;
   lei_wu@zju.edu.cn; yajin_zhou@zju.edu.cn; hqm@zju.edu.cn
RI Qian, Peng/ADF-3429-2022
OI Qian, Peng/0000-0003-4934-5811; Wu, Lei/0000-0003-1675-5283; Wu,
   Siwei/0000-0001-8751-014X; Lu, Lingling/0000-0003-4454-8046
FU Key Ramp;D Program of Zhejiang Province [2022C01086]; National Natural
   Science Foundation of China [62172360, U21A20467]
FX This work was supported in part by the Key R & D Program of Zhejiang
   Province under Grant 2022C01086, and in part by the National Natural
   Science Foundation of China under Grants 62172360 and U21A20467.& nbsp;
CR Alchemy, 2022, USE CREATE2 DER CONT
   [Anonymous], 2017, FRAMEWORK BUG HUNTIN
   [Anonymous], 2017, The parity wallet hack explained
   Breidenbach L., 2021, CHAINL 2 0 NEXT STEP
   Chen C, 2018, COMPUT SECUR, V75, P118, DOI 10.1016/j.cose.2018.02.002
   Chen JC, 2021, IEEE T SOFTWARE ENG, V48, P2189, DOI 10.1109/TSE.2021.3054928
   Chen T, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1503, DOI 10.1145/3319535.3345664
   Choi J, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P227, DOI 10.1109/ASE51524.2021.9678888
   Clause J., 2007, P 2007 INT S SOFTW T, DOI [10.1145/1273463.1273490, DOI 10.1145/1273463.1273490]
   ConsenSys, 2020, OR MAN ETH SMART CON
   CryptoKitties, 2022, ABOUT US
   Crytic, 2018, BAD RAND
   DappRadar, 2022, US
   Dhillon V., 2017, Blockchain Enabled Applications: Understand the Blockchain Ecosystem and How to Make it Work for You, P67, DOI DOI 10.1007/978-1-4842-3081-7_6
   Dice2Win, 2022, DICE2WIN IS PROV FAI
   Etherscan, 2018, FOMO3D ATT TRANS
   Feist J, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB 2019), P8, DOI 10.1109/WETSEB.2019.00008
   Ferretti S, 2020, CONCURR COMP-PRACT E, V32, DOI 10.1002/cpe.5493
   Fomo3D, 2022, US
   Go Ethereum, 2022, About us
   Grech N, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276486
   Grech N, 2019, PROC INT CONF SOFTW, P1176, DOI 10.1109/ICSE.2019.00120
   He DJ, 2020, IEEE NETWORK, V34, P276, DOI 10.1109/MNET.001.1900656
   He JX, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P531, DOI 10.1145/3319535.3363230
   Inspex, 2021, REENTR ATT CREAM FIN
   Ji SY, 2021, IEEE INT C S Q R S, P243, DOI 10.1109/QRS54544.2021.00035
   Jia ZF, 2019, ICBTA 2019: 2019 2ND INTERNATIONAL CONFERENCE ON BLOCKCHAIN TECHNOLOGY AND APPLICATIONS, P20, DOI 10.1145/3376044.3376049
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Liu H, 2018, IEEE INT CONF AUTOM, P814, DOI 10.1145/3238147.3240728
   Liu Z., 2021, P 30 INT JOINT C ART, P2751
   Liu Z., 2023, ARXIV
   Liu ZG, 2023, IEEE T KNOWL DATA EN, V35, P1296, DOI 10.1109/TKDE.2021.3095196
   Lu LL, 2023, IEEE T DEPEND SECURE, V20, P4578, DOI 10.1109/TDSC.2022.3228908
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Micali S., 1999, 40 FOCS, P120
   Min T, 2019, IEEE CONF COMPU INTE
   Nguyen TD, 2020, PROC INT CONF SOFTW, P778, DOI 10.1145/3377811.3380334
   PeckShield, 2020, BZX HACK 2 FULL DISC
   Peng Z., 2018, NOT FAIR GAME FAIRNE
   Perez D, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P1325
   Provable, 2021, PROV BLOCKCH OR MOD
   Qian P, 2019, INT CONF CLOUD COMPU, P62, DOI [10.1109/CCIS48116.2019.9073733, 10.1109/ccis48116.2019.9073733]
   Qian P, 2020, IEEE ACCESS, V8, P19685, DOI 10.1109/ACCESS.2020.2969429
   Reis J. S., 2020, PROC 2 WORKSHOP FORM
   REKT, 2020, HARV FIN
   SECBIT, 2021, COMPR SOL BUGS FOMO3
   Shome A., 2019, SYNTHETIX LOST 37 MI
   So S, 2020, P IEEE S SECUR PRIV, P1678, DOI 10.1109/SP40000.2020.00032
   Soni M., 2021, MATER TODAY-PROC, DOI [10.1016/j.matpr.2021.02.094, DOI 10.1016/J.MATPR.2021.02.094]
   Sun S., 2020, ACCIDENTALLY STEPPIN
   Szabo N., 1997, First Monday, V2
   Torres CF, 2021, 2021 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P 2021), P103, DOI 10.1109/EuroSP51992.2021.00018
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   UniverseGalaxy, 2022, UNIVERSEGALAXY
   Wang B, 2021, PROC IEEE ACM INT C, P17, DOI 10.1109/ICSE-Companion52605.2021.00025
   Wang SH, 2021, 2021 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (EUROS&PW 2021), P380, DOI 10.1109/EuroSPW54576.2021.00047
   Wang W, 2021, IEEE T NETW SCI ENG, V8, P1133, DOI 10.1109/TNSE.2020.2968505
   Web3.js, 2022, WEB3JS ETH JAV
   Wesolowski B, 2019, LECT NOTES COMPUT SC, V11478, P379, DOI 10.1007/978-3-030-17659-4_13
   Wikipedia, 2023, NONF TOK
   Wood G., 2014, Ethereum project yellow paper, V151, P1
   Wu L, 2020, Arxiv, DOI arXiv:2005.08278
   Wu SW, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3505263
   Wüstholz V, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1398, DOI 10.1145/3368089.3417064
   Xing CP, 2020, WIREL NETW, DOI 10.1007/s11276-020-02379-z
   Xue YX, 2024, IEEE T DEPEND SECURE, V21, P515, DOI 10.1109/TDSC.2022.3182373
   Zhang HQ, 2023, Arxiv, DOI arXiv:2205.08529
   Zhao L, 2021, PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE 2021 (WWW 2021), P2258, DOI 10.1145/3442381.3449916
   Zhou Y, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1371
   Zhuang Y, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3283
NR 71
TC 2
Z9 2
U1 5
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2023
VL 49
IS 7
BP 3793
EP 3810
DI 10.1109/TSE.2023.3271417
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA M9RA6
UT WOS:001033501500008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, Z
   Lei, Y
   Mao, XG
   Yan, M
   Xia, X
   Lo, DV
AF Zhang, Zhuo
   Lei, Yan
   Mao, Xiaoguang
   Yan, Meng
   Xia, Xin
   Lo, David
TI Context-Aware Neural Fault Localization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Fault localization; graph neural networks; program dependecy graphs;
   suspiciousness
AB Numerous fault localization techniques identify suspicious statements potentially responsible for program failures by discovering the statistical correlation between test results (i.e., failing or passing) and the executions of the different statements of a program (i.e., covered or not covered). They rarely incorporate a failure context into their suspiciousness evaluation despite the fact that a failure context showing how a failure is produced is useful for analyzing and locating faults. Since a failure context usually contains the transitive relationships among the statements of causing a failure, its relationship complexity becomes one major obstacle for the context incorporation in suspiciousness evaluation of fault localization. To overcome the obstacle, our insight is that leveraging the promising learning ability may be a candidate solution to learn a feasible model for incorporating a failure context into fault localization. Thus, we propose a context-aware neural fault localization approach (CAN). Specifically, CAN represents the failure context by constructing a program dependency graph, which shows how a set of statements interact with each other (i.e., data and control dependencies) to cause a failure. Then, CAN utilizes graph neural networks to analyze and incorporate the context (e.g., the dependencies among the statements) into suspiciousness evaluation. Our empirical results on the 12 large-sized programs show that CAN achieves promising results (e.g., 29.23% faults are ranked within top 5), and it significantly improves the state-of-the-art baselines with a substantial margin.
C1 [Zhang, Zhuo; Lei, Yan; Yan, Meng] Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
   [Lei, Yan] Peng Cheng Lab, Shenzhen 518066, Guangdong, Peoples R China.
   [Mao, Xiaoguang] Natl Univ Def Technol, Coll Comp, Changsha 410073, Hunan, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
C3 Chongqing University; Peng Cheng Laboratory; National University of
   Defense Technology - China; Singapore Management University
RP Lei, Y (corresponding author), Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
EM zz8477@126.com; yanlei@cqu.edu.cn; xgmao@nudt.edu.cn; mengy@cqu.edu.cn;
   xin.xia@acm.org; davidlo@smu.edu.sg
RI ; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Lo, David/0000-0002-4367-7201; zhuo,
   zhang/0000-0003-3243-1019; Yan, Meng/0000-0002-9538-9121
FU National Natural Science Foundation of China [62272072]; Fundamental
   Research Funds for the Central Universities [2022CDJDX-005]; Major Key
   Project of PCL [PCL2021A06]; Chongqing Technology Innovation and
   Application Development Project [CSTB2022TIAD-STX0007,
   CSTB2022TIAD-KPX0067]; National Defense Basic Scientific Research
   Project [WDZC20205500308]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grant 62272072, in part by the Fundamental
   Research Funds for the Central Universities under Grant 2022CDJDX-005,in
   part by the Major Key Project of PCL under Grant PCL2021A06, in part by
   the Chongqing Technology Innovation and Application Development Project
   under Grants CSTB2022TIAD-STX0007 and CSTB2022TIAD-KPX0067, and in part
   by the National Defense Basic Scientific Research Project under Grant
   WDZC20205500308. Recommended for acceptance by A. Orso.(Corresponding
   author: Yan Lei.)
CR Abdi H, 2007, ENCY MEASUREMENT STA, P103, DOI DOI 10.4135/9781412952644
   Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   [Anonymous], 2013, JOINT M FDN SOFTW EN
   [Anonymous], 2014, P IEEE ACM 29 INT C
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Benton S, 2020, IEEE INT CONF AUTOM, P907, DOI 10.1145/3324884.3416566
   Briand LC, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P137, DOI 10.1109/ISSRE.2007.31
   Casanova Arantxa, 2018, INT C LEARNING REPRE
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Cheng H, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P141
   Corder G. W., 2010, NONPARAMETRIC STAT N, V78
   Dai HJ, 2017, ADV NEUR IN, V30
   Debroy V., 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P13, DOI 10.1109/QSIC.2010.80
   Gong L, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P67, DOI 10.1109/ICSM.2012.6405255
   Guo J, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2017.9
   Hamaguchi T, 2017, Arxiv, DOI [arXiv:1706.05674, DOI 10.24963/IJCAI.2017/250]
   Hamilton WL, 2017, ADV NEUR IN, V30
   Hwa-You Hsu, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P439, DOI 10.1109/ASE.2008.68
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jones JA, 2004, PROC INT CONF SOFTW, P54, DOI 10.1109/ICSE.2004.1317420
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Keller F, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P114, DOI 10.1109/QRS.2017.22
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Lei Y, 2012, P INT COMP SOFTW APP, P1, DOI 10.1109/COMPSAC.2012.9
   Li X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P169, DOI 10.1145/3293882.3330574
   Li X, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133916
   Li XY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P82, DOI 10.1145/3180155.3180242
   Li Y., 2016, P 4 INT C LEARNING R
   Li Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P292, DOI 10.1145/3468264.3468597
   Li Y, 2021, PROC INT CONF SOFTW, P661, DOI 10.1109/ICSE43902.2021.00067
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2821, DOI 10.1109/TDSC.2021.3076142
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Li ZY, 2018, Arxiv, DOI [arXiv:1805.05081, DOI 10.48550/ARXIV.1805.05081]
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Lo D., 2011, Proceedings of the 2011 IEEE 13th International Symposium on High-Assurance Systems Engineering (HASE 2011), P340, DOI 10.1109/HASE.2011.36
   Ma SQ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P175, DOI 10.1145/3236024.3236082
   Marino Kenneth, 2016, arXiv
   Kipf TN, 2017, Arxiv, DOI arXiv:1609.02907
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Pira E, 2018, INFORM SOFTWARE TECH, V97, P110, DOI 10.1016/j.infsof.2018.01.004
   Santelices R, 2009, PROC INT CONF SOFTW, P56, DOI 10.1109/ICSE.2009.5070508
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   Hoang T, 2019, IEEE T SOFTWARE ENG, V45, P1002, DOI 10.1109/TSE.2018.2810892
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wen M, 2021, IEEE T SOFTWARE ENG, V47, P2348, DOI 10.1109/TSE.2019.2948158
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2012, IEEE T RELIAB, V61, P149, DOI 10.1109/TR.2011.2172031
   Wong WE, 2009, INT J SOFTW ENG KNOW, V19, P573, DOI 10.1142/S021819400900426X
   Wu J, 2020, INT J SOFTW ENG KNOW, V30, P1641, DOI 10.1142/S0218194020400240
   Wu ZH, 2021, IEEE T NEUR NET LEAR, V32, P4, DOI 10.1109/TNNLS.2020.2978386
   Xia X, 2016, PROC IEEE INT CONF S, P268, DOI 10.1109/ICSME.2016.67
   Xiaoyuan Xie, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P224, DOI 10.1007/978-3-642-39742-4_17
   Xie H, 2022, PROC INT CONF SOFTW, P48, DOI 10.1145/3510003.3510136
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Xu J. Qian, 2005, ACM SIGSOFT Software Engineering Notes, V30, P1, DOI [10.1145/1050849.1050865.36Y, DOI 10.1145/1050849.1050865]
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   Yiling Lou, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P75, DOI 10.1145/3395363.3397351
   Zhang M, 2017, P 26 ACM SIGS INT S, P261, DOI DOI 10.1145/3092703.3092731
   Zhang MS, 2021, IEEE T SOFTWARE ENG, V47, P1089, DOI 10.1109/TSE.2019.2911283
   Zhang YJ, 2016, J SYST SOFTWARE, V114, P38, DOI 10.1016/j.jss.2015.10.052
   Zhang Z, 2021, INFORM SOFTWARE TECH, V131, DOI 10.1016/j.infsof.2020.106486
   Zhang Z, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2312
   Zhang Z, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P445, DOI [10.1109/saner.2019.8668002, 10.1109/SANER.2019.8668002]
   Zheng Wei, 2016, Mathematical Problems in Engineering, V2016, DOI DOI 10.1155/2016/1820454
   Zhou J, 2021, Arxiv, DOI [arXiv:1812.08434, DOI 10.1016/J.AIOPEN.2021.01.001]
   Zhou Y., 2019, Proceedings of the Advances in Neural Information Processing Systems, V32, P1
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
   Zuo Z., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis New York, NY, USA, P215
NR 78
TC 1
Z9 1
U1 6
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2023
VL 49
IS 7
BP 3939
EP 3954
DI 10.1109/TSE.2023.3279125
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA M9RA6
UT WOS:001033501500015
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Liu, MW
   Peng, X
   Marcus, A
   Xing, SS
   Treude, C
   Zhao, CY
AF Liu, Mingwei
   Peng, Xin
   Marcus, Andrian
   Xing, Shuangshuang
   Treude, Christoph
   Zhao, Chengyuan
TI API-Related Developer Information Needs in Stack Overflow
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Encoding; Taxonomy; Documentation; Codes; Task analysis; Java; Data
   collection; Developer information need; API; Stack Overflow
ID KNOWLEDGE
AB Stack Overflow (SO) provides informal documentation for APIs in response to questions that express API related developer needs. Navigating the information available on SO and getting information related to a particular API and need is challenging due to the vast amount of questions and answers and the tag-driven structure of SO. In this paper we focus on identifying and classifying fine-grained developer needs expressed in sentences of API-related SO questions, as well as the specific information types used to express such needs, and the different roles APIs play in these questions and their answers. We derive a taxonomy, complementing existing ones, through an empirical study of 266 SO posts. We then develop and evaluate an approach for the automated identification of the fine-grained developer needs in SO threads, which takes a thread as input and outputs the corresponding developer needs, the types of information expressing them, and the roles of API elements relevant to the needs. To show a practical application of our taxonomy, we introduce and evaluate an approach for the automated retrieval of SO questions, based on these developer needs.
C1 [Liu, Mingwei; Peng, Xin; Xing, Shuangshuang] Fudan Univ, Sch Comp Sci, Shanghai 200433, Peoples R China.
   [Liu, Mingwei; Peng, Xin; Xing, Shuangshuang; Zhao, Chengyuan] Fudan Univ, Shanghai Key Lab Data Sci, Shanghai, Peoples R China.
   [Marcus, Andrian] Univ Texas Dallas, Richardson, TX 75080 USA.
   [Treude, Christoph] Univ Melbourne, Parkville, Vic 3010, Australia.
C3 Fudan University; Fudan University; University of Texas System;
   University of Texas Dallas; University of Melbourne
RP Peng, X (corresponding author), Fudan Univ, Sch Comp Sci, Shanghai 200433, Peoples R China.; Peng, X (corresponding author), Fudan Univ, Shanghai Key Lab Data Sci, Shanghai, Peoples R China.
EM 19110240019@fudan.edu.cn; pengxin@fudan.edu.cn; amarcus@utdallas.edu;
   18212010042@fudan.edu.cn; christoph.treude@unimelb.edu.au;
   19110240027@fudan.edu.cn
RI Treude, Christoph/AAZ-6257-2021; Liu, Mingwei/AHI-4200-2022
OI Liu, Mingwei/0000-0002-3462-997X; Treude, Christoph/0000-0002-6919-2149;
   Marcus, Andrian/0000-0001-5450-5598; Zhao,
   Chengyuan/0000-0002-7161-0848; Peng, Xin/0000-0003-3376-2581
FU National Natural Science Foundation of China [61972098]
FX This work was supported by the National Natural Science Foundation of
   China under Grant 61972098.
CR Abad ZSH, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P334, DOI [10.1109/REW.2016.46, 10.1109/REW.2016.061]
   Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   [Anonymous], 2020, GENSIM
   [Anonymous], 2021, Replication Package
   [Anonymous], 2020, BEAUTIFULSOUP
   Beyer S., 2017, Analyzing the relationships between android api classes and their references on stack overflow
   Beyer S, 2018, INT C PROGRAM COMPRE, P211, DOI 10.1145/3196321.3196333
   Beyer S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P430, DOI [10.1109/MSR.2016.051, 10.1145/2901739.2901750]
   Beyer S, 2014, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSME.2014.88
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Buse RPL, 2012, PROC INT CONF SOFTW, P987, DOI 10.1109/ICSE.2012.6227122
   Campos EC, 2016, J SOFTW-EVOL PROC, V28, P863, DOI 10.1002/smr.1800
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   De Souza L. B. L., 2014, P IEEE INT C PROG CO, P72, DOI DOI 10.1145/2597008.2597146
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Ester M., 1996, KDD 96, P226, DOI DOI 10.5555/3001460.3001507
   Feldt R, 2018, EMPIR SOFTW ENG, V23, P3801, DOI 10.1007/s10664-018-9655-0
   Fucci D, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/3338906.3338943
   Gottipati S., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P323, DOI 10.1109/ASE.2011.6100069
   Greco C, 2018, PROC IEEE ACM INT C, P5, DOI 10.1145/3183440.3183477
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Joulin A, 2016, Arxiv, DOI [arXiv:1612.03651, DOI 10.48550/ARXIV.1612.03651, 10.48550/arXiv.1612.03651]
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Lima C, 2020, SOFTWARE QUAL J, V28, P425, DOI 10.1007/s11219-019-09476-z
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Nakayama H, 2018, doccano: Text annotation tool for human
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Nassif M, 2020, IEEE T SOFTWARE ENG, V46, P20, DOI 10.1109/TSE.2018.2836450
   Rahman A, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P16, DOI 10.1145/3194760.3194769
   Robillard MP, 2020, SIGCSE 2020: PROCEEDINGS OF THE 51ST ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P72, DOI 10.1145/3328778.3366832
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   StackOverflow, STACK OV DAT DUMP VE
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Sun JM, 2019, PROC IEEE INT CONF S, P257, DOI 10.1109/ICSME.2019.00039
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Treude C, 2015, IEEE T SOFTWARE ENG, V41, P565, DOI 10.1109/TSE.2014.2387172
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Uddin G, 2017, IEEE INT CONF AUTOM, P159, DOI 10.1109/ASE.2017.8115629
   Uddin G, 2012, PROC INT CONF SOFTW, P804, DOI 10.1109/ICSE.2012.6227138
   Villanes IK, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P104, DOI 10.1145/3131151.3131157
   WELCH BL, 1947, BIOMETRIKA, V34, P28, DOI 10.2307/2332510
   Wong E, 2013, IEEE INT CONF AUTOM, P562, DOI 10.1109/ASE.2013.6693113
   Wu D, 2018, PROC IEEE ACM INT C, P270, DOI 10.1145/3183440.3194965
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Ye DH, 2016, PROC IEEE INT CONF S, P389, DOI 10.1109/ICSME.2016.11
   Ye Ting, 2014, P 29 ACMIEEE INT C A, P115
   Zhang HY, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P956, DOI 10.1145/2950290.2983955
NR 52
TC 8
Z9 8
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4485
EP 4500
DI 10.1109/TSE.2021.3120203
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800014
DA 2024-07-18
ER

PT J
AU Martinez, M
   Mateus, BG
AF Martinez, Matias
   Mateus, Bruno Gois
TI Why Did Developers Migrate Android Applications From Java to Kotlin?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Java; Codes; Open source software; Tools; Interviews; Computer
   languages; Internet; Migration; mining repositories; Kotlin; Java;
   android; mobile development; software evolution; qualitative study
AB Currently, the majority of apps running on mobile devices are Android apps developed in Java. However, developers can now write Android applications using a new programming language: Kotlin, which Google adopted in 2017 as an official programming language for developing Android apps. Since then, Android developers have been able to: a) start writing Android applications from scratch using Kotlin, b) evolve their existing Android applications written in Java by adding Kotlin code (possible thanks to the interoperability between the two languages), or c) migrate their Android apps from Java to Kotlin. This paper aims to study this last case. We conducted a qualitative study to find out why Android developers have migrated Java code to Kotlin and to bring together their experiences about the process, in order to identify the main difficulties they have faced. To execute the study, we first identified commits from open-source Android projects that have migrated Java code to Kotlin. Then, we emailed the developers that wrote those migrations. We thus obtained information from 98 developers who had migrated code from Java to Kotlin. This paper presents the main reasons identified by the study for performing the migration. We found that developers migrated Java code to Kotlin in order to access programming language features (e.g., extension functions, lambdas, smart casts) that are not available with Java for Android development, and to obtain safer code (i.e., avoid null-pointer exceptions). We also identified research directions that the research community could focus on in order to help developers to improve the experience of migrating their Java applications to Kotlin.
C1 [Martinez, Matias] Univ Polytech Hauts de France, F-59313 Valenciennes, France.
   [Martinez, Matias] LAMIH UMR CNRS 8201, F-59313 Valenciennes, France.
   [Mateus, Bruno Gois] Univ Fed Ceara, Campus Quixad, BR-63902580 Quixada, Brazil.
C3 Universite Polytechnique Hauts-de-France; Centre National de la
   Recherche Scientifique (CNRS); Universite Polytechnique Hauts-de-France;
   Universidade Federal do Ceara
RP Martinez, M (corresponding author), Univ Polytech Hauts de France, F-59313 Valenciennes, France.; Martinez, M (corresponding author), LAMIH UMR CNRS 8201, F-59313 Valenciennes, France.
EM matias.martinez@uphf.fr; brunomateus@ufc.br
RI Martinez, Matias/ABA-8871-2021
OI Martinez, Matias/0000-0002-2945-866X
CR Abdelaziz M, 2020, MIGRATING JAVA ENTER
   Alrubaye H, 2019, INT C PROGRAM COMPRE, P347, DOI 10.1109/ICPC.2019.00053
   [Anonymous], 1990, QUALITATIVE EVALUATI, DOI DOI 10.1002/NUR.4770140111
   Ardito L, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106374
   Atha H., 2018, JAVA VS KOTLIN WHICH
   Athaydes R., 2017, KOTLINS HIDDEN COSTS
   Avgeriou P, 2016, Dagstuhl reports, V6, DOI DOI 10.4230/DAGREP.6.4.110
   Baxter B., 2017, LESSONS LEARNED CONV
   Beyls C., 2017, EXPLORING KOTLINS HI
   Bisbal J, 1999, IEEE SOFTWARE, V16, P103, DOI 10.1109/52.795108
   Brodie M.L., 1995, LEGACY INFORM SYSTEM
   Bruno Gois Mateus, 2020, P 14 ACM IEEE INT S, DOI [10.1145/3382494.3410676, DOI 10.1145/3382494.3410676]
   Butterworth J., 2020, MIGRATING KOTLIN WHA
   Caneco N., 2017, MIGRATING JAVA KOTLI
   Canfora G, 2000, J SYST SOFTWARE, V54, P99, DOI 10.1016/S0164-1212(00)00030-3
   Chaidarun A., 2020, MIGRATING DUOLINGOS
   Coelho R, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P134, DOI 10.1109/MSR.2015.20
   Cohen L., 2017, Research methods in education
   Colosimo M, 2009, INFORM SOFTWARE TECH, V51, P433, DOI 10.1016/j.infsof.2008.05.012
   Coppola R, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON APP MARKET ANALYTICS (WAMA '19), P8, DOI 10.1145/3340496.3342759
   Courtney C., 2019, PROC 34 INT C COMPUT, P191
   Daga M., 2018, JAVA VS KOTLIN WHICH
   De Lucia A, 2008, SOFTWARE PRACT EXPER, V38, P1333, DOI 10.1002/spe.870
   Fernandes E., 2019, MEASURING KOTLIN BUI
   Flauzino M, 2018, XII BRAZILIAN SYMPOSIUM ON SOFTWARE COMPONENTS, ARCHITECTURES, AND REUSE (SBCARS), P23, DOI 10.1145/3267183.3267186
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Geiger FX, 2018, IEEE WORK CONF MIN S, P30, DOI 10.1145/3196398.3196460
   Gour R., 2020, WHY YOU MUST SWITCH
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Heath N., 2019, SHOULD ANDROID DEVS
   Hofmann P., 2017, MIGRATING ANDROID AP
   Hora A, 2018, SOFTWARE QUAL J, V26, P161, DOI 10.1007/s11219-016-9344-4
   IDC, 2017, SMARTPH MARK SHAR
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Khadka R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P36
   Kovalenko V, 2018, IEEE INT CONF AUTOM, P202, DOI 10.1145/3238147.3238169
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Kut I., 2017, 10 KOTLIN FEATURES B
   Martinez M., MIGA TOOL
   Martinez M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P79, DOI 10.1109/ICSE-Companion.2019.00043
   Mateus B., APPENDIX
   Mateus B. G., 2021, ARXIV
   Mateus BG, 2019, EMPIR SOFTW ENG, V24, P3356, DOI 10.1007/s10664-019-09727-4
   Oliveira V, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P206, DOI [10.1109/saner48275.2020.9054859, 10.1109/SANER48275.2020.9054859]
   Papadopoulos A., 2018, EFFECTIVE MIGRATION
   Press Duolingo, 2020, US
   R. Software, 2017, ANDR DEV US KOTL STR
   Rattra S., 2020, KOTLIN VS JAVA ANDRO
   Razavian M, 2011, LECT NOTES COMPUT SC, V7084, P618, DOI 10.1007/978-3-642-25535-9_48
   Salza P, 2018, INT C PROGRAM COMPRE, P255, DOI 10.1145/3196321.3196341
   Saunders M., 2008, RES METHODS BUSINESS
   Shafirov M., 2017, KOTLIN BLOG 0517
   Silverman D., 2013, DOING QUALITATIVE RE, DOI DOI 10.3917/DS.293.0349
   Sommerhoff P., 2015, KOTLIN JAVA DEV 10 F
   Sommerhoff P., 2020, KOTLIN VS JAVA 9 BEN
   Strumenta, 2020, MIGR JAV APPL KOTL
   STRUTZEL E, 1968, NURS RES, V17, P364
   Teyton C, 2014, J SOFTW-EVOL PROC, V26, P1030, DOI 10.1002/smr.1660
   Teyton C, 2013, WORK CONF REVERSE EN, P192, DOI 10.1109/WCRE.2013.6671294
   Thornsby J., 2019, KOTLIN VS JAVA ANDRO
   Torchiano Marco, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering - Workshops, P35, DOI 10.1109/ASEW.2008.4686319
   Trehan K., 2019, KOTLIN MIGRATION PEP
   Tsantalis N, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P329
   Verdecchia R, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P141, DOI 10.1109/ICSA.2019.00023
   Vvra D., 2017, REMOVE ALL YOUR KOTL
   Wilson J., 2019, METRICS OKHTTPS KOTL
   Wyrich M, 2021, PROC INT CONF SOFTW, P512, DOI 10.1109/ICSE43902.2021.00055
NR 67
TC 4
Z9 4
U1 4
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4521
EP 4534
DI 10.1109/TSE.2021.3120367
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800016
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tawosi, V
   Sarro, F
   Petrozziello, A
   Harman, M
AF Tawosi, Vali
   Sarro, Federica
   Petrozziello, Alessio
   Harman, Mark
TI Multi-Objective Software Effort Estimation: A Replication Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software effort estimation; multi-objective evolutionary algorithm;
   confidence interval; estimates uncertainty
ID MANY-OBJECTIVE OPTIMIZATION; NONDOMINATED SORTING APPROACH; GENETIC
   ALGORITHM; EFFORT PREDICTION; PROJECT EFFORT; INDICATOR; SELECTION;
   ACCURACY
AB Replication studies increase our confidence in previous results when the findings are similar each time, and help mature our knowledge by addressing both internal and external validity aspects. However, these studies are still rare in certain software engineering fields. In this paper, we replicate and extend a previous study, which denotes the current state-of-the-art for multi-objective software effort estimation, namely CoGEE. We investigate the original research questions with an independent implementation and the inclusion of a more robust baseline (LP4EE), carried out by the first author, who was not involved in the original study. Through this replication, we strengthen both the internal and external validity of the original study. We also answer two new research questions investigating the effectiveness of CoGEE by using four additional evolutionary algorithms (i.e., IBEA, MOCell, NSGA-III, SPEA2) and a well-known Java framework for evolutionary computation, namely JMetal (rather than the previously used R software), which allows us to strengthen the external validity of the original study. The results of our replication confirm that: (1) CoGEE outperforms both baseline and state-of-the-art benchmarks statistically significantly (p < 0.001); (2) CoGEE's multi-objective nature makes it able to reach such a good performance; (3) CoGEE's estimation errors lie within claimed industrial human-expert-based thresholds. Moreover, our new results show that the effectiveness of CoGEE is generally not limited to nor dependent on the choice of the multi-objective algorithm. Using CoGEE with either NSGA-II, NSGA-III, or MOCell produces human competitive results in less than a minute. The Java version of CoGEE has decreased the running time by over 99.8 percent with respect to its R counterpart. We have made publicly available the Java code of CoGEE to ease its adoption, as well as, the data used in this study in order to allow for future replication and extension of our work.
C1 [Tawosi, Vali; Sarro, Federica; Petrozziello, Alessio; Harman, Mark] UCL, Dept Comp Sci, London WC1E 6BT, England.
   [Harman, Mark] Facebook, London WC1E 6BT, England.
C3 University of London; University College London; Facebook Inc
RP Sarro, F (corresponding author), UCL, Dept Comp Sci, London WC1E 6BT, England.
EM vali.tawosi@ucl.ac.uk; f.sarro@ucl.ac.uk; a.petrozziello@ucl.ac.uk;
   mark.harman@ucl.ac.uk
OI Sarro, Federica/0000-0002-9146-442X; Tawosi, Vali/0000-0001-5052-672X
FU ERC Advanced fellowship [741278]
FX The work of Vali Tawosi, Federica Sarro, Alessio Petrozziello and Mark
   Harman at UCL was supported by the ERC Advanced fellowship grant no.
   741278 (EPIC).
CR Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], 2013, CRAN PACKAGE NSGA2R
   [Anonymous], 2008, Proceedings of the 4th international workshop on Predictor models in software engineering, DOI [DOI 10.1145/1370788.1370804, 10.1145/1370788.1370804]
   [Anonymous], 2002, Applied Statistics for Software Managers
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Bakir A, 2011, SOFTWARE QUAL J, V19, P537, DOI 10.1007/s11219-010-9112-9
   Barros MD, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1205, DOI 10.1145/2330163.2330330
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Bosu MF, 2019, ACM J DATA INF QUAL, V11, DOI 10.1145/3328746
   Braga PL, 2007, PROC INT C TOOLS ART, P181, DOI 10.1109/ICTAI.2007.172
   Breiman L., 2017, CLASSIFICATION REGRE, DOI [10.1201/9781315139470, DOI 10.1201/9781315139470]
   Burgess CJ, 2001, INFORM SOFTWARE TECH, V43, P863, DOI 10.1016/S0950-5849(01)00192-6
   Cao YT, 2015, J STAT PLAN INFER, V160, P60, DOI 10.1016/j.jspi.2014.12.004
   Carver J. C., 2010, INT WORKSH REPL EMP, P2
   CENSOR Y, 1977, APPL MATH OPT, V4, P41, DOI 10.1007/BF01442131
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   Ciro GC, 2016, IFAC PAPERSONLINE, V49, P1272, DOI 10.1016/j.ifacol.2016.07.690
   Coello C.A., 2007, Evolutionary algorithms for solving multi-objective problems, V5
   Corazza A, 2013, EMPIR SOFTW ENG, V18, P506, DOI 10.1007/s10664-011-9187-3
   Corazza A., 2010, Proceedings of the 6th International Conference on Predictive Models in Software Engineering, p4:1, DOI [10.1145/1868328.1868335, DOI 10.1145/1868328.1868335]
   da Silva FQB, 2014, EMPIR SOFTW ENG, V19, P501, DOI 10.1007/s10664-012-9227-7
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   Di Martino S, 2016, INFORM SOFTWARE TECH, V72, P90, DOI 10.1016/j.infsof.2015.12.001
   Dolado JJ, 2000, IEEE T SOFTWARE ENG, V26, P1006, DOI 10.1109/32.879821
   Dolado JJ, 2001, INFORM SOFTWARE TECH, V43, P61, DOI 10.1016/S0950-5849(00)00137-3
   Ezghari S, 2018, APPL SOFT COMPUT, V67, P540, DOI 10.1016/j.asoc.2018.03.022
   Ferrucci Filomena, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P89, DOI 10.1109/SSBSE.2010.20
   Ferrucci F, 2010, EUROMICRO CONF PROC, P350, DOI 10.1109/SEAA.2010.59
   Ferrucci F., 2014, Softw. Proj. Manag. Chang. World, P373
   Ferrucci F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P462, DOI 10.1109/ICSE.2013.6606592
   Ferrucci F, 2011, LECT NOTES COMPUT SC, V6956, P274, DOI 10.1007/978-3-642-23716-4_28
   Ferrucci F, 2009, LECT NOTES COMPUT SC, V5891, P307, DOI 10.1007/978-3-642-05415-0_22
   FONSECA C, 2005, 3 INT C EV MULT OPT, V216
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Grigelionis B., 2013, STUDENTS T DISTRIBUT
   Gueheneuc Y.G., 2019, HDB SOFTWARE ENG, P285
   Guizzo G, 2022, IEEE T SOFTWARE ENG, V48, P803, DOI 10.1109/TSE.2020.3002496
   Guizzo G, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1343, DOI 10.1145/2739480.2754725
   Guizzo G, 2017, APPL SOFT COMPUT, V56, P331, DOI 10.1016/j.asoc.2017.03.012
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   HILL GW, 1970, COMMUN ACM, V13, P619, DOI 10.1145/355598.362776
   Idri A, 2016, J SYST SOFTWARE, V118, P151, DOI 10.1016/j.jss.2016.05.016
   Idri A, 2015, INFORM SOFTWARE TECH, V58, P206, DOI 10.1016/j.infsof.2014.07.013
   International function point user group, 2020, US
   Ishibuchi H, 2016, IEEE C EVOL COMPUTAT, P3045, DOI 10.1109/CEC.2016.7744174
   Ishibuchi H, 2006, IEEE C EVOL COMPUTAT, P1128
   Jain H, 2014, IEEE T EVOLUT COMPUT, V18, P602, DOI 10.1109/TEVC.2013.2281534
   Jorgensen M, 2003, INFORM SOFTWARE TECH, V45, P123, DOI 10.1016/S0950-5849(02)00188-X
   Jorgensen M., 2002, Empirical Software Engineering, V7, P375, DOI 10.1023/A:1020571206993
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Juristo N, 2012, LECT NOTES COMPUT SC, V7007, P60
   Kadoda G, 2001, LECT NOTES ARTIF INT, V2080, P276
   Khare V, 2003, LECT NOTES COMPUT SC, V2632, P376
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kocaguneli E, 2013, IEEE T SOFTWARE ENG, V39, P1040, DOI 10.1109/TSE.2012.88
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Kocaguneli E, 2010, EUROMICRO CONF PROC, P323, DOI 10.1109/SEAA.2010.19
   Koza J. R., 1994, Genetic programming II: Automatic discovery of reusable programs, VII, DOI DOI 10.5555/183460
   Langdon W.B., 2013, Foundations of Genetic Programming
   Langdon WB, 2016, INFORM SOFTWARE TECH, V73, P16, DOI 10.1016/j.infsof.2016.01.003
   Lefley M, 2003, LECT NOTES COMPUT SC, V2724, P2477
   Li MQ, 2022, IEEE T SOFTWARE ENG, V48, P1771, DOI 10.1109/TSE.2020.3036108
   Lokan C., 2005, 11th IEEE International Software Metrics Symposium (METRICS'05), V10, P34, DOI DOI 10.1109/METRICS.2005.55
   LP4EE, LINEAR PROGRAMMING E
   McConnell S., 2006, Software Estimation: Demystifying the Black Art
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   Mensah S, 2018, INFORM SOFTWARE TECH, V94, P1, DOI 10.1016/j.infsof.2017.09.010
   Mittas N, 2015, INFORM SOFTWARE TECH, V57, P310, DOI 10.1016/j.infsof.2014.05.010
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   Morandat F, 2012, LECT NOTES COMPUT SC, V7313, P104, DOI 10.1007/978-3-642-31057-7_6
   NEBRO AJ, 2015, P COMP PUBL 2015 ANN, P1093, DOI DOI 10.1145/2739482.2768462
   Nebro AJ, 2009, INT J INTELL SYST, V24, P726, DOI 10.1002/int.20358
   Neumann Geoffrey, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P318, DOI 10.1007/978-3-319-22183-0_29
   Oliveira ALI, 2006, NEUROCOMPUTING, V69, P1749, DOI 10.1016/j.neucom.2005.12.119
   Port D, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P51
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   R, R PROJECT STAT COMPU
   Ralph P, 2021, Arxiv, DOI arXiv:2010.03525
   Ramirez A, 2019, J SYST SOFTWARE, V149, P382, DOI 10.1016/j.jss.2018.12.015
   Sarro F., 2011, P 12 INT C PROD FOC, P38
   Sarro F, 2022, IEEE T SOFTWARE ENG, V48, P1868, DOI 10.1109/TSE.2020.3040793
   Sarro F, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3234940
   Sarro F, 2017, IEEE T SOFTWARE ENG, V43, P898, DOI 10.1109/TSE.2017.2650914
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Sayyad AS, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P22, DOI 10.1109/CMSBSE.2013.6604432
   Sentas P, 2005, INFORM SOFTWARE TECH, V47, P17, DOI 10.1016/j.infsof.2004.05.001
   Shan Y, 2002, 2002 INTERNATIONAL CONFERENCE ON COMMUNICATIONS, CIRCUITS AND SYSTEMS AND WEST SINO EXPOSITION PROCEEDINGS, VOLS 1-4, P1108, DOI 10.1109/ICCCAS.2002.1178979
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2003, MANAGING SOFTWARE ENGINEERING KNOWLEDGE, P181
   Shepperd M, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P349
   Shepperd M., 2000, Empirical Software Engineering, V5, P175, DOI 10.1023/A:1026582314146
   Shepperd M, 1996, PROC INT CONF SOFTW, P170, DOI 10.1109/ICSE.1996.493413
   Shepperd M, 2018, INFORM SOFTWARE TECH, V99, P120, DOI 10.1016/j.infsof.2018.01.006
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Shull F, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P7, DOI 10.1109/ISESE.2002.1166920
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Song LY, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3295700
   Song Liyan, 2014, P 10 INT C PRED MOD, P52
   Stensrud E, 2003, EMPIR SOFTW ENG, V8, P139, DOI 10.1023/A:1023010612345
   Tawosi V., 2021, COGEE JAVA SOURCE CO
   Tawosi V, 2021, IEEE TRANSACT SOFTW
   Tofallis C, 2015, J OPER RES SOC, V66, P1352, DOI 10.1057/jors.2014.103
   Van Veldhuizen D. A., 1998, TR98 AIR FORC I TECH
   WASSERTHEIL S, 1970, BIOMETRICS, V26, P588, DOI 10.2307/2529115
   Whigham PA, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2738037
   Wickham H., 2014, Advanced R
   Wittig G, 1997, INFORM SOFTWARE TECH, V39, P469, DOI 10.1016/S0950-5849(97)00004-9
   Yun F. H., 2010, **DATA OBJECT**, DOI 10.5281/zenodo.268446
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
   Zitzler E., 2001, TIK-Report, V103, P1
NR 115
TC 11
Z9 11
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 3185
EP 3205
DI 10.1109/TSE.2021.3083360
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500028
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wattanakriengkrai, S
   Thongtanunam, P
   Tantithamthavorn, C
   Hata, H
   Matsumoto, K
AF Wattanakriengkrai, Supatsara
   Thongtanunam, Patanamon
   Tantithamthavorn, Chakkrit
   Hata, Hideaki
   Matsumoto, Kenichi
TI Predicting Defective Lines Using a Model-Agnostic Technique
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Predictive models; Computational modeling; Software quality; Software
   systems; Pipelines; Software engineering; Software quality assurance;
   line-level defect prediction
ID STATIC ANALYSIS TOOLS
AB Defect prediction models are proposed to help a team prioritize the areas of source code files that need Software Quality Assurance (SQA) based on the likelihood of having defects. However, developers may waste their unnecessary effort on the whole file while only a small fraction of its source code lines are defective. Indeed, we find that as little as 1-3 percent of lines of a file are defective. Hence, in this work, we propose a novel framework (called Line-DP) to identify defective lines using a model-agnostic technique, i.e., an Explainable AI technique that provides information why the model makes such a prediction. Broadly speaking, our Line-DP first builds a file-level defect model using code token features. Then, our Line-DP uses a state-of-the-art model-agnostic technique (i.e., LIME) to identify risky tokens, i.e., code tokens that lead the file-level defect model to predict that the file will be defective. Then, the lines that contain risky tokens are predicted as defective lines. Through a case study of 32 releases of nine Java open source systems, our evaluation results show that our Line-DP achieves an average recall of 0.61, a false alarm rate of 0.47, a top 20%LOC recall of 0.27, and an initial false alarm of 16, which are statistically better than six baseline approaches. Our evaluation shows that our Line-DP requires an average computation time of 10 seconds including model construction and defective line identification time. In addition, we find that 63 percent of defective lines that can be identified by our Line-DP are related to common defects (e.g., argument change, condition change). These results suggest that our Line-DP can effectively identify defective lines that contain common defects while requiring a smaller amount of inspection effort and a manageable computation cost. The contribution of this paper builds an important step towards line-level defect prediction by leveraging a model-agnostic technique.
C1 [Wattanakriengkrai, Supatsara; Hata, Hideaki; Matsumoto, Kenichi] Nara Inst Sci & Technol, Nara 6300192, Japan.
   [Thongtanunam, Patanamon] Univ Melbourne, Parkville, Vic 3010, Australia.
   [Tantithamthavorn, Chakkrit] Monash Univ, Clayton, Vic 3800, Australia.
C3 Nara Institute of Science & Technology; University of Melbourne; Monash
   University
RP Wattanakriengkrai, S (corresponding author), Nara Inst Sci & Technol, Nara 6300192, Japan.
EM wattanakri.supatsara.ws3@is.naist.jp; patanamon.t@unimelb.edu.au;
   chakkrit@monash.edu; hata@is.naist.jp; matumoto@is.naist.jp
RI Hata, Hideaki/GQB-2557-2022; Hata, Hideaki/N-7103-2019
OI Hata, Hideaki/0000-0003-0708-5222; MATSUMOTO,
   KENICHI/0000-0002-7418-9323; Tantithamthavorn,
   Chakkrit/0000-0002-5516-9984; Wattanakriengkrai,
   Supatsara/0000-0001-9978-9889
FU JSPS KAKENHI [16H05857, 20H05706]; Australian Research Council's
   Discovery Early Career Researcher Award (DECRA) funding scheme
   [DE210101091, DE200100941]; Monash-FIT Early Career Researcher Seed
   Grant; Grants-in-Aid for Scientific Research [20H05706] Funding Source:
   KAKEN
FX This work was supported by JSPS KAKENHI Grant Number 16H05857 and
   20H05706. The work of C. Tantithamthavorn was supported in part by the
   Australian Research Council's Discovery Early Career Researcher Award
   (DECRA) funding scheme (DE200100941) and a Monash-FIT Early Career
   Researcher Seed Grant. The work of P. Thongtanunam was supported in part
   by the Australian Research Council's Discovery Early Career Researcher
   Award (DECRA) funding scheme (DE210101091).
CR Adams B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P78, DOI 10.1109/SANER.2016.108
   Aftandilian E., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P14, DOI 10.1109/SCAM.2012.28
   Agrawal A, 2021, IEEE T SOFTWARE ENG, V47, P2182, DOI 10.1109/TSE.2019.2945020
   Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   [Anonymous], 2017, IEEE T SOFTWARE ENG, DOI DOI 10.1109/TSE.2016.2584050
   Bowes David., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, P330, DOI DOI 10.1145/2931037.2931039
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Cohen J, 1977, J AM STAT ASSOC, P19
   Copeland Tom, 2005, PMD applied, V10
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Engstrom Emelie, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P75, DOI 10.1109/ICST.2010.40
   Field A., 2013, Sage, DOI DOI 10.1016/B978-012691360-6/50012-4
   Fisher Danyel, 2012, Interactions, V19, P50, DOI 10.1145/2168931.2168943
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Ghotra B, 2017, IEEE WORK CONF MIN S, P146, DOI 10.1109/MSR.2017.18
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Habib A, 2018, IEEE INT CONF AUTOM, P317, DOI 10.1145/3238147.3238213
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Harrell FE, 2015, SPRINGER SER STAT, P1, DOI 10.1007/978-3-319-19425-7_1
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   Heckman S.S., 2007, Crossroads, V14, P7
   Heckman S, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P41
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Herzig K, 2014, PROC INT SYMP SOFTW, P300, DOI 10.1109/ISSRE.2014.21
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hoa Khanh Dam, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P46, DOI 10.1109/MSR.2019.00017
   Dam HK, 2021, IEEE T SOFTWARE ENG, V47, P67, DOI 10.1109/TSE.2018.2881961
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jiarpakdee J, 2022, IEEE T SOFTWARE ENG, V48, P166, DOI 10.1109/TSE.2020.2982385
   Jiarpakdee J, 2020, EMPIR SOFTW ENG, V25, P3590, DOI 10.1007/s10664-020-09848-1
   Jiarpakdee J, 2021, IEEE T SOFTWARE ENG, V47, P320, DOI 10.1109/TSE.2019.2891758
   Jiarpakdee J, 2018, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSME.2018.00018
   Jiarpakdee J, 2016, IEEE INT SYMP SOFTW, P51, DOI 10.1109/ISSREW.2016.30
   Jimenez M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P695, DOI 10.1145/3338906.3338941
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Kamei Yasutaka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P196
   Kamei Y, 2010, PROC IEEE INT CONF S
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P990, DOI 10.1145/2786805.2804429
   Kim S, 2007, P 6 JOINT M EUR SOFT, P45, DOI DOI 10.1145/1287624.1287633
   Kremenek T, 2003, LECT NOTES COMPUT SC, V2694, P295
   Kremenek T., 2004, Software Engineering Notes, V29, P83, DOI 10.1145/1041685.1029909
   Lucidchart, REL MAN PROC
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Massaron L., 2016, Regression analysis with python
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2019, INFORM SOFTWARE TECH, V112, P35, DOI 10.1016/j.infsof.2019.04.005
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Pradel M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276517
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rahman MT, 2015, IEEE SOFTWARE, V32, P80
   Rahman M, 2019, PROC INT CONF SOFTW, P37, DOI 10.1109/ICSE.2019.00022
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Ruthruff JR, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P341, DOI 10.1145/1368088.1368135
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P867, DOI 10.1145/2889160.2889256
   Tantithamthavorn C, 2016, IEEE T SOFTWARE ENG, V42, P1092, DOI 10.1109/TSE.2016.2553030
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Thongtanunam P, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P168, DOI 10.1109/MSR.2015.23
   Tomczak M., 2014, NEED REPORT EFFECT S, DOI DOI 10.1186/S13054-016-1208-6
   Tu ZP, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P269, DOI 10.1145/2635868.2635875
   Vassallo C, 2020, EMPIR SOFTW ENG, V25, P1419, DOI 10.1007/s10664-019-09750-5
   Viera AJ, 2005, FAM MED, V37, P360
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Wang S., 2020, DESTECH TRANS SOC, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wang S, 2016, IEEE INT CONF AUTOM, P708, DOI 10.1145/2970276.2970341
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
NR 91
TC 36
Z9 36
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2022
VL 48
IS 5
BP 1480
EP 1496
DI 10.1109/TSE.2020.3023177
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 1I8CJ
UT WOS:000797454000002
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Zhang, N
   Huang, Q
   Xia, X
   Zou, Y
   Lo, D
   Xing, ZC
AF Zhang, Neng
   Huang, Qiao
   Xia, Xin
   Zou, Ying
   Lo, David
   Xing, Zhenchang
TI Chatbot4QR: Interactive Query Refinement for Technical Question
   Retrieval
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Interactive query refinement; chatbot; question retrieval; stack
   overflow
ID TAG RECOMMENDATION
AB Technical Q&A sites (e.g., Stack Overflow (SO)) are important resources for developers to search for knowledge about technical problems. Search engines provided in Q&A sites and information retrieval approaches (e.g., word embedding-based) have limited capabilities to retrieve relevant questions when queries are imprecisely specified, such as missing important technical details (e.g., the user's preferred programming languages). Although many automatic query expansion approaches have been proposed to improve the quality of queries by expanding queries with relevant terms, the information missed in a query is not identified. Moreover, without user involvement, the existing query expansion approaches may introduce unexpected terms and lead to undesired results. In this paper, we propose an interactive query refinement approach for question retrieval, named Chatbot4QR, which can assist users in recognizing and clarifying technical details missed in queries and thus retrieve more relevant questions for users. Chatbot4QR automatically detects missing technical details in a query and generates several clarification questions (CQs) to interact with the user to capture their overlooked technical details. To ensure the accuracy of CQs, we design a heuristic-based approach for CQ generation after building two kinds of technical knowledge bases: a manually categorized result of 1,841 technical tags in SO and the multiple version-frequency information of the tags. We develop a Chatbot4QR prototype that uses 1.88 million SO questions as the repository for question retrieval. To evaluate Chatbot4QR, we conduct six user studies with 25 participants on 50 experimental queries. The results are as follows. (1) On average 60.8 percent of the CQs generated fora query are useful for helping the participants recognize missing technical details. (2) Chatbot4QR can rapidly respond to the participants after receiving a query within approximately 1.3 seconds. (3) The refined queries contribute to retrieving more relevant SO questions than nine baseline approaches. For more than 70 percent of the participants who have preferred techniques on the query tasks, Chatbot4QR significantly outperforms the state-of-the-art word embedding-based retrieval approach with an improvement of at least 54.6 percent in terms of two measurements: Pre@k and NDCG@k. (4) For 48-88 percent of the assigned query tasks, the participants obtain more desired results after interacting with Chatbot4QR than directly searching from Web search engines (e.g., the SO search engine and Google) using the original queries.
C1 [Zhang, Neng; Huang, Qiao] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310027, Zhejiang, Peoples R China.
   [Zhang, Neng] Zhejiang Univ, Ningbo Res Inst, Ningbo 315100, Zhejiang, Peoples R China.
   [Zhang, Neng] PengCheng Lab, Shenzhen 518066, Guangdong, Peoples R China.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON K7L 3N6, Canada.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
   [Xing, Zhenchang] Australian Natl Univ, Res Sch Comp Sci, Canberra, ACT 0200, Australia.
C3 Zhejiang University; Zhejiang University; Monash University; Queens
   University - Canada; Singapore Management University; Australian
   National University
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
EM nengzhang@zju.edu.cn; tkdsheep@zju.edu.cn; xin.xia@monash.edu;
   ying.zou@queensu.ca; davidlo@smu.edu.sg; zhenchang.xing@anu.edu.au
RI zhang, neng/KHW-2049-2024; Zou, Ying/KLC-9380-2024; zhou,
   you/KBC-3567-2024; wang, xueting/JPY-2782-2023; Lo, David/A-2493-2012
OI zhang, neng/0000-0001-8662-5690; Xing, Zhenchang/0000-0001-7663-1421;
   Xia, Xin/0000-0002-6302-3256; Lo, David/0000-0002-4367-7201
FU National Key R&D Program of China [2019YFB1600700]; NSFC Program
   [61972339]; Australian Research Councils Discovery Early Career
   Researcher Award (DECRA) [DE200100021]; Ministry of Education, Singapore
   [MOE2019-T2-1-193]; Natural Sciences and Engineering Research Council of
   Canada (NSERC); Alibaba-Zhejiang University Joint Institute of Frontier
   Technologies
FX This research was partially supported by the National Key R&D Program of
   China (No.2019YFB1600700), NSFC Program (No. 61972339), the Australian
   Research Councils Discovery Early Career Researcher Award (DECRA)
   (DE200100021), Ministry of Education, Singapore, under its Academic
   Research Fund Tier 2 (Award No.: MOE2019-T2-1-193), Natural Sciences and
   Engineering Research Council of Canada (NSERC), and Alibaba-Zhejiang
   University Joint Institute of Frontier Technologies.
CR Alami A, 2019, PROC INT CONF SOFTW, P1073, DOI 10.1109/ICSE.2019.00111
   [Anonymous], 2019, CHATBOT4QR RELEASE
   [Anonymous], 2020, GOOGLE SEARCH
   [Anonymous], 2019, TAGWIKI
   Bird S., 2009, NATURAL LANGUAGE PRO
   Boudaer G, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16 COMPANION), P669, DOI 10.1145/2872518.2890566
   Campos EC, 2016, J SOFTW-EVOL PROC, V28, P863, DOI 10.1002/smr.1800
   Chen CW, 2018, IEEE INT SYMP CIRC S, DOI 10.1109/ISCAS.2018.8351436
   Chen CY, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P338, DOI 10.1109/SANER.2016.21
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Guo XX, 2018, ADV NEUR IN, V31
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Hearst M., 2013, MODELS INFORM SEEKIN, P64, DOI [10.1017/ cbo9781139644082.004, DOI 10.1017/CBO9781139644082.004]
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Huang Q, 2020, IEEE T SOFTWARE ENG, V46, P1098, DOI 10.1109/TSE.2018.2876340
   Li X, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P690, DOI 10.1145/2950290.2950341
   Linstead E, 2009, DATA MIN KNOWL DISC, V18, P300, DOI 10.1007/s10618-008-0118-x
   Liu J, 2018, AUTOMAT SOFTW ENG, V25, P675, DOI 10.1007/s10515-018-0239-4
   Lu ML, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P545, DOI 10.1109/SANER.2015.7081874
   Lucchese C, 2018, CIKM'18: PROCEEDINGS OF THE 27TH ACM INTERNATIONAL CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P1551, DOI 10.1145/3269206.3269305
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Miller George, 1998, WORDNET ELECT LEXICA
   Nandi Titas., 2017, Proceedings of the 11th International Workshop on Semantic Evaluation (SemEval-2017), P90
   Nassif M, 2020, IEEE T SOFTWARE ENG, V46, P20, DOI 10.1109/TSE.2018.2836450
   Nie LM, 2016, IEEE T SERV COMPUT, V9, P771, DOI 10.1109/TSC.2016.2560165
   Niu HR, 2017, EMPIR SOFTW ENG, V22, P259, DOI 10.1007/s10664-015-9421-5
   Pérez F, 2019, AUTOMAT SOFTW ENG, V26, P161, DOI 10.1007/s10515-019-00251-9
   Perez JAR, 2014, SIGIR'14: PROCEEDINGS OF THE 37TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P1183, DOI 10.1145/2600428.2609540
   Rahman MM, 2018, IEEE WORK CONF MIN S, P465, DOI 10.1145/3196398.3196425
   Rahman MM, 2018, PROC IEEE INT CONF S, P473, DOI 10.1109/ICSME.2018.00057
   Rao S, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P2737
   Rehurek R., 2010, P LREC 2010 WORKSH N, P45, DOI DOI 10.13140/2.1.2393.1847
   Sim SE, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063243
   Venkatesh PK, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC), P92, DOI 10.1109/SCC.2017.20
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P800, DOI 10.1007/s10664-017-9533-1
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xia X, 2013, IEEE WORK CONF MIN S, P287, DOI 10.1109/MSR.2013.6624040
   Xu BW, 2018, EMPIR SOFTW ENG, V23, P1084, DOI 10.1007/s10664-017-9568-3
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Ye DH, 2017, EMPIR SOFTW ENG, V22, P375, DOI 10.1007/s10664-016-9430-z
   Ye DH, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P90, DOI 10.1109/SANER.2016.10
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Yin H, 2019, IEEE WORLD CONGR SER, P358, DOI 10.1109/SERVICES.2019.00102
   Zhang JX, 2021, IEEE T SOFTWARE ENG, V47, P1299, DOI 10.1109/TSE.2019.2919304
   Zhang N, 2019, KNOWL INF SYST, V58, P669, DOI 10.1007/s10115-018-1171-4
   Zhang N, 2018, J SYST SOFTWARE, V142, P73, DOI 10.1016/j.jss.2018.04.046
   Zhou PY, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P272, DOI 10.1109/SANER.2017.7884628
NR 48
TC 20
Z9 20
U1 3
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2022
VL 48
IS 4
BP 1185
EP 1211
DI 10.1109/TSE.2020.3016006
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 0N4HC
UT WOS:000782799700006
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Bernárdez, B
   Durán, A
   Parejo, JA
   Juristo, N
   Ruiz-Cortés, A
AF Bernardez, Beatriz
   Duran, Amador
   Parejo, Jose A.
   Juristo, Natalia
   Ruiz-Cortes, Antonio
TI Effects of Mindfulness on Conceptual Modeling Performance: A Series of
   Experiments
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; Education; Task analysis; Productivity; Stress;
   Focusing; Public speaking; Mindfulness; conceptual modeling; experiment
   replication; family of experiments; software engineering education
ID WORKING-MEMORY CAPACITY; STRESS REDUCTION; MEDITATION; ATTENTION;
   DEVELOPERS; BENEFITS; LIFE
AB Context. Mindfulness is a meditation technique whose main goal is keeping the mind calm and educating attention by focusing only on one thing at a time, usually breathing. The reported benefits of its continued practice can be of interest for Software Engineering students and practitioners, especially in tasks like conceptual modeling, in which concentration and clearness of mind are crucial. Goal. In order to evaluate whether Software Engineering students enhance their conceptual modeling performance after several weeks of mindfulness practice, a series of three controlled experiments were carried out at the University of Seville during three consecutive academic years (2013-2016) involving 130 students. Method. In all the experiments, the subjects were divided into two groups. While the experimental group practiced mindfulness, the control group was trained in public speaking as a placebo treatment. All the subjects developed two conceptual models based on a transcript of an interview, one before and another one after the treatment. The results were compared in terms of conceptual modeling quality (measured as effectiveness, i.e., the percentage of model elements correctly identified) and productivity (measured as efficiency, i.e., the number of model elements correctly identified per unit of time). Results. The statistically significant results of the series of experiments revealed that the subjects who practiced mindfulness developed slightly better conceptual models (their quality was 8.16 percent higher) and they did it faster (they were 46.67 percent more productive) than the control group, even if they did not have a previous interest in meditation. Conclusions. The practice of mindfulness improves the performance of Software Engineering students in conceptual modeling, especially their productivity. Nevertheless, more experimentation is needed in order to confirm the outcomes in other Software Engineering tasks and populations.
C1 [Bernardez, Beatriz; Duran, Amador; Parejo, Jose A.; Ruiz-Cortes, Antonio] Univ Seville, ETSI Informat, Seville 41012, Spain.
   [Juristo, Natalia] Univ Politecn Madrid, ETSI Informat, Madrid 28040, Spain.
C3 University of Sevilla; Universidad Politecnica de Madrid
RP Bernárdez, B (corresponding author), Univ Seville, ETSI Informat, Seville 41012, Spain.
EM beat@us.es; amador@us.es; japarejo@us.es; natalia@fi.upm.es; aruiz@us.es
RI Bernárdez Jiménez, Beatriz/J-3706-2018; Durán, Amador/O-4248-2014;
   Cortés, Antonio Ruiz/B-9056-2008; Parejo Maestre, Jose
   Antonio/A-2822-2009
OI Durán, Amador/0000-0003-3630-5511; Cortés, Antonio
   Ruiz/0000-0001-9827-1834; Bernardez Jimenez,
   Beatriz/0000-0002-9390-3772; Parejo Maestre, Jose
   Antonio/0000-0002-4708-4606
FU FEDER/Spanish Ministry of Science and Innovation Research State Agency
   [PGC2018-097265-B-I00]; European Commission (FEDER) [TIN2015-70560-R,
   US-1264651, RTI2018-101204-B-C22, RTI2018-101204-B-C21, P18-FR-2895];
   Spanish Government [TIN2015-70560-R, US-1264651, RTI2018-101204-B-C22,
   RTI2018-101204-B-C21, P18-FR-2895]
FX The authors would like to thank the ISEIS students who participated in
   the experiments; the staff of the E.T.S. de Ingenieria Informatica of
   the University of Seville for arranging anything we needed; Dr. M. T.
   Gomez Lopez for her kind cooperation during her ISEIS teaching hours;
   Dr. M. Murga, neurosurgeon and emeritus professor of Anatomy and
   Neurology at the University of Seville, for his invaluable aid and
   explanations on brain processes and fMRI interpretation. The authors
   would also like to give credit to Jens T_arning, the creator of the
   meditation icon () licensed as Creative Commons CCBY in
   https://thenounproject.com.Last but not least, we would also like to
   thank the anonymous reviewers for their helpful and constructive
   suggestions on the previous versions of this work, especially with
   regard to statistical analysis. This work was partially supported by the
   FEDER/Spanish Ministry of Science and Innovation Research State Agency
   under Project PGC2018-097265-B-I00 and the European Commission (FEDER)
   and the Spanish Government under projects BELI (TIN2015-70560-R), APOLO
   (US-1264651), OPHELIA (RTI2018-101204-B-C22), HORATIO
   (RTI2018-101204-B-C21) and EKIPMENT-PLUS (P18-FR-2895).
CR Agnew H, 2014, MINDFULNESSGIVES STR
   [Anonymous], 2019, Search Inside Yourself Program Impact Report
   [Anonymous], 2008, P 19 AUSTR C INF SYS
   Baas M, 2014, PERS SOC PSYCHOL B, V40, P1092, DOI 10.1177/0146167214535813
   Baird B, 2014, J EXP PSYCHOL GEN, V143, P1972, DOI 10.1037/a0036882
   Barbezat P., 2013, CONTEMPLATIVE PRACTI
   Barnes N, 2017, MINDFULNESS, V8, P489, DOI 10.1007/s12671-016-0623-8
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   BECK LA, 1992, J LEISURE RES, V24, P93, DOI 10.1080/00222216.1992.11969876
   Bernardez B., 2014, P 8 ACMIEEE INT S EM, P17
   Bernárdez B, 2018, J SYST SOFTWARE, V136, P153, DOI 10.1016/j.jss.2016.06.104
   Button KS, 2013, NAT REV NEUROSCI, V14, P365, DOI 10.1038/nrn3475
   Campbell DT., 1963, EXPT QUASIEXPERIMENT
   Cardeña E, 2015, MINDFULNESS, V6, P1082, DOI 10.1007/s12671-014-0357-4
   Carver J. C., 2010, INT WORKSH REPL EMP, P2
   Center for Wellness and Health PromotionHarvard University Health Services, 2019, MINDFULNESS MEDITATI
   Cohen J., 1988, STAT POWER ANAL BEHA
   Colzato LS, 2012, FRONT PSYCHOL, V3, DOI 10.3389/fpsyg.2012.00116
   Cruz M, 2020, IEEE ACCESS, V8, P26773, DOI 10.1109/ACCESS.2019.2952191
   Davis DM, 2011, PSYCHOTHERAPY, V48, P198, DOI 10.1037/a0022062
   DeMarco T., 2013, Peopleware: productive projects and teams
   den Heijer P, 2017, LECT NOTES BUS INF P, V283, P103, DOI 10.1007/978-3-319-57633-6_7
   Ding XQ, 2014, BEHAV BRAIN FUNCT, V10, DOI 10.1186/1744-9081-10-9
   Ding XQ, 2015, LEARN INDIVID DIFFER, V37, P217, DOI 10.1016/j.lindif.2014.11.019
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Fancher E. L., 2013, THESIS U GEORGIA
   Genero M, 2011, J DATABASE MANAGE, V22, P46, DOI 10.4018/jdm.2011070103
   Glass G. V., 1976, ED RES, V5, P3, DOI [DOI 10.3102/0013189X005010003, 10.2307/1174772ISSN0536-1036, 10.3102/0013189x005010003]
   Gliner JA, 2003, J AM ACAD CHILD PSY, V42, P500, DOI 10.1097/01.CHI.0000046809.95464.BE
   Goleman D, 2017, Altered Traits: Science Reveals How Meditation Changes Your Mind, Brain, and Body
   Graziotin D, 2014, IEEE SOFTWARE, V31, P24, DOI 10.1109/MS.2014.94
   Greenberg J, 2012, PLOS ONE, V7, DOI 10.1371/journal.pone.0036206
   Grossman P, 2004, J PSYCHOSOM RES, V57, P35, DOI 10.1016/S0022-3999(03)00573-7
   HASTIE S., 2015, Standish Group 2015 Chaos Report-QA with Jennifer Lynch
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Jensen CG, 2012, J EXP PSYCHOL GEN, V141, P106, DOI 10.1037/a0024931
   Jha AP, 2010, EMOTION, V10, P54, DOI 10.1037/a0018438
   Jorgensen M, 2016, J SYST SOFTWARE, V116, P133, DOI 10.1016/j.jss.2015.03.065
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kabat-Zinn J., 1990, DELACORTE
   Kabat-Zinn J., 2004, WHEREVER YOU GO THER
   KASS RE, 1995, J AM STAT ASSOC, V90, P773, DOI 10.1080/01621459.1995.10476572
   Kelly C, 2012, OK GOOGLE TAKE DEEP
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kramer J, 2007, COMMUN ACM, V50, P37
   Lazar S, 2011, MEDITATION CAN RESHA
   Lewis S, 2001, BMJ-BRIT MED J, V322, P1479, DOI 10.1136/bmj.322.7300.1479
   Lykins ELB, 2012, COGNITIVE THER RES, V36, P103, DOI 10.1007/s10608-010-9318-y
   Meibert P, 2011, PSYCHOTHER PSYCH MED, V61, P328, DOI 10.1055/s-0031-1276859
   Meyer AN, 2017, IEEE T SOFTWARE ENG, V43, P1178, DOI 10.1109/TSE.2017.2656886
   Mrazek MD, 2013, PSYCHOL SCI, V24, P776, DOI 10.1177/0956797612459659
   Navarro D., 2018, Learning statistics with R: A tutorial for psychology students and other beginners
   Parejo J. A, 2013, THESIS U SEVILLA
   Parejo J. A., 2014, P JORN ING SOFTW BAS, P155
   Poulin PA, 2008, INT J HEALTH PROMOT, V46, P72, DOI 10.1080/14635240.2008.10708132
   Puddicombe A., 2011, GET SOME HEADSPACE
   Ramsburg JT, 2014, MINDFULNESS, V5, P431, DOI 10.1007/s12671-013-0199-5
   Reibel DK, 2001, GEN HOSP PSYCHIAT, V23, P183, DOI 10.1016/S0163-8343(01)00149-9
   Richardson JTE, 2011, EDUC RES REV-NETH, V6, P135, DOI 10.1016/j.edurev.2010.12.001
   Rutherford A., 2001, INTRO ANOVA ANCOVA G
   Santos A, 2020, IEEE T SOFTWARE ENG, V46, P566, DOI 10.1109/TSE.2018.2864633
   Schaufenbuel K., 2014, Bringing mindfulness into the workplace
   Schötz E, 2016, PERS INDIV DIFFER, V93, P16, DOI 10.1016/j.paid.2015.10.023
   Schure MB, 2008, J COUNS DEV, V86, P47, DOI 10.1002/j.1556-6678.2008.tb00625.x
   Sedlmeier P, 2018, MINDFULNESS, V9, P371, DOI 10.1007/s12671-017-0780-4
   Shachtman N, 2013, WIRED MAG
   Shapiro S.L., 2005, International Journal of Stress Management, V12, P164, DOI [DOI 10.1037/1072-5245.12.2.164, 10.1037/1072-5245.12.2.164]
   Shapiro SL, 2011, TEACH COLL REC, V113, P493
   Shapiro SL, 1998, J BEHAV MED, V21, P581, DOI 10.1023/A:1018700829825
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sim V, 2013, AWARE AWAKE
   Tan, 2012, SEARCH INSIDE YOURSE
   The University of Texas at Austin-Counseling and Mental Health Center, 2019, MINDBODY LABS
   University of California Berkeley School of Law, 2019, MINDF BERK LAW
   University of Cambridge, 2019, MINDF CAM
   Vago D., 2017, Self-transformation through mindfulness
   Vago DR, 2012, FRONT HUM NEUROSCI, V6, DOI 10.3389/fnhum.2012.00296
   Vidgen R, 2009, INFORM SYST RES, V20, P355, DOI 10.1287/isre.1090.0237
   Wohlin C., 2012, EXPT SOFTWARE ENG IN
NR 80
TC 7
Z9 7
U1 1
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2022
VL 48
IS 2
BP 432
EP 452
DI 10.1109/TSE.2020.2991699
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA ZB4EB
UT WOS:000756796100005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Ma, YX
   Mockus, A
   Zaretzki, R
   Bradley, R
   Bichescu, B
AF Ma, Yuxing
   Mockus, Audris
   Zaretzki, Russel
   Bradley, Randy
   Bichescu, Bogdan
TI A Methodology for Analyzing Uptake of Software Technologies Among
   Developers
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Supply chains; Technological innovation; Software measurement;
   Data models; Time factors; Libraries; Choice models; social contagion;
   technology adoption; library migration; software supply chain
ID DISCRETE-CHOICE; SOCIAL CONTAGION; MODEL; INNOVATION; ADOPTION; SUPPORT
AB Motivation: The question of what combination of attributes drives the adoption of a particular software technology is critical to developers. It determines both those technologies that receive wide support from the community and those which may be abandoned, thus rendering developers' investments worthless. Aim and Context: We model software technology adoption by developers and provide insights on specific technology attributes that are associated with better visibility among alternative technologies. Thus, our findings have practical value for developers seeking to increase the adoption rate of their products. Approach: We leverage social contagion theory and statistical modeling to identify, define, and test empirically measures that are likely to affect software adoption. More specifically, we leverage a large collection of open source version control repositories (containing over 4 billion unique versions) to construct a software dependency chain for a specific set of R language source-code files. We formulate logistic regression models, where developers' software library choices are modeled, to investigate the combination of technological attributes that drive adoption among competing data frame (a core concept for a data science languages) implementations in the R language: tidy and data.table. To describe each technology, we quantify key project attributes that might affect adoption (e.g., response times to raised issues, overall deployments, number of open defects, knowledge base) and also characteristics of developers making the selection (performance needs, scale, and their social network). Results: We find that a quick response to raised issues, a larger number of overall deployments, and a larger number of high-score StackExchange questions are associated with higher adoption. Decision makers tend to adopt the technology that is closer to them in the technical dependency network and in author collaborations networks while meeting their performance needs. To gauge the generalizability of the proposed methodology, we investigate the spread of two popular web JavaScript frameworks Angular and React, and discuss the results. Future work: We hope that our methodology encompassing social contagion that captures both rational and irrational preferences and the elucidation of key measures from large collections of version control data provides a general path toward increasing visibility, driving better informed decisions, and producing more sustainable and widely adopted software.
C1 [Ma, Yuxing; Mockus, Audris] Univ Tennessee, Dept Elect Engn & Comp Sci, Knoxville, TN 37996 USA.
   [Zaretzki, Russel; Bradley, Randy; Bichescu, Bogdan] Univ Tennessee, Dept Business Analyt & Stat, Knoxville, TN 37996 USA.
C3 University of Tennessee System; University of Tennessee Knoxville;
   University of Tennessee System; University of Tennessee Knoxville
RP Ma, YX (corresponding author), Univ Tennessee, Dept Elect Engn & Comp Sci, Knoxville, TN 37996 USA.
EM yma28@vols.utk.edu; audris@utk.edu; russell.zaretzka@gmail.com;
   rbradley@utk.edu; bbichescu@utk.edu
RI Bradley, Randy V/N-2286-2017; Mockus, Audris/AEY-3361-2022
OI Zaretzki, Russell/0000-0001-9769-4894; Mockus,
   Audris/0000-0002-7987-7598
FU US National Science Foundation NSF [IIS-1633437]
FX This work was supported by the US National Science Foundation NSF Award
   IIS-1633437.
CR Anderson E. E., 1990, Journal of Management Information Systems, V6, P123
   Angst CM, 2010, MANAGE SCI, V56, P1219, DOI 10.1287/mnsc.1100.1183
   Bartolomei T.T., 2010, P 26 IEEE INT C SOFT, P1
   Bartolomei TT, 2010, LECT NOTES COMPUT SC, V5969, P42
   Bass F. M., 2004, Management Science, V50, P1825, DOI 10.1287/mnsc.1040.0264
   BERRY ST, 1994, RAND J ECON, V25, P242, DOI 10.2307/2555829
   Bird Christian, 2006, P MSR, P137, DOI DOI 10.1145/1137983.1138016
   BURT RS, 1987, AM J SOCIOL, V92, P1287, DOI 10.1086/228667
   Buurman J., 2002, SUPPLY CHAIN LOGISTI
   Chacon S, 2014, PRO GIT, DOI DOI 10.1007/978-1-4842-0076-6
   Chhajed AA, 2005, 2005 3rd IEEE International Conference on Industrial Informatics (INDIN), P172
   Chopra S., 2007, Das Summa Summarum des Management, P265, DOI DOI 10.1007/978-3-8349-9320-5_22
   Christopher M., 2004, International Journal of Physical Distribution & Logistics Management, V34, P388, DOI 10.1108/09600030410545436
   Christopher M., 1992, Logistics and Supply Chain Management: Strategies for reducing costs and improving services
   Cossette B.E., 2012, P ACM SIGSOFT 20 INT, p55:1, DOI DOI 10.1145/2393596.2393661
   Croissant Y., 2013, mlogit: multinomial logit model
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Dagenais B, 2009, PROC INT CONF SOFTW, P599, DOI 10.1109/ICSE.2009.5070565
   de la Mora FL, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P37, DOI 10.1145/3183399.3183418
   DIMAGGIO PJ, 1983, AM SOCIOL REV, V48, P147, DOI 10.2307/2095101
   Ellison R. J., 2010, 2010 43 HAW INT C SY, P1, DOI DOI 10.1109/HICSS.2010.355
   Farbey B., 1999, P 21 INT C SOFTW ENG
   Fichman R.G., 2004, J ASSOC INF SYST, V5, P314
   Gilbride TJ, 2004, MARKET SCI, V23, P391, DOI 10.1287/mksc.1030.0032
   Gorton I, 2016, IEEE SOFTWARE, V33, P32, DOI 10.1109/MS.2016.47
   Greenfield J., 2003, OOPSLA 03 COMPANION, P16, DOI DOI 10.1145/949344.949348
   HAUSMAN JA, 1995, J PUBLIC ECON, V56, P1, DOI 10.1016/0047-2727(93)01415-7
   Hoan AN, 2010, ACM SIGPLAN NOTICES, V45, P302, DOI 10.1145/1932682.1869486
   Holdsworth Jacqueline, 1995, SOFTWARE PROCESS DES
   Hora A, 2015, PROC IEEE INT CONF S, P321, DOI 10.1109/ICSM.2015.7332478
   Huang S.H., 2002, SUPPLY CHAIN MANAGEM, V7, P189, DOI DOI 10.1108/13598540210438935
   Kabinna S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P154, DOI [10.1145/2901739.2901769, 10.1109/MSR.2016.025]
   KALISH S, 1985, MANAGE SCI, V31, P1569, DOI 10.1287/mnsc.31.12.1569
   KAMAKURA WA, 1989, J MARKETING RES, V26, P379, DOI 10.2307/3172759
   Kogut B, 2001, OXFORD REV ECON POL, V17, P248, DOI 10.1093/oxrep/17.2.248
   Lammel R., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, P1317, DOI 10.1145/1982185.1982471
   Lee HL, 1997, MANAGE SCI, V43, P546, DOI 10.1287/mnsc.43.4.546
   Levy E., 2003, IEEE Security & Privacy, V1, P70, DOI 10.1109/MSECP.2003.1203227
   Ma Y., 2016, PEERJ PREPRINTS, V4
   McFadden D, 2000, J APPL ECONOMET, V15, P447, DOI 10.1002/1099-1255(200009/10)15:5<447::AID-JAE570>3.0.CO;2-1
   McFadden D., FRONTIERS ECONOMETRI
   Mentzer J.T., 2001, J BUSINESS LOGISTICS, V22, P1, DOI [DOI 10.1002/J.2158-1592.2001.TB00001.X, 10.1002/j.2158-1592.2001.tb00001.x]
   Mileva YM, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P57
   Mileva YM, 2010, LECT NOTES COMPUT SC, V6303, P173, DOI 10.1007/978-3-642-15585-7_17
   Mockus A, 2007, LECT NOTES COMPUT SC, V4336, P91
   Mockus Audris., 2014, Proceedings of the on Future of Software Engineering, P85, DOI 10.1145/2593882.2593889
   Rogers E. M., 1995, DIFFUSION INNOV, V4, P371
   Russell D. M., 2004, International Journal of Physical Distribution & Logistics Management, V34, P102, DOI 10.1108/09600030410526914
   Samadi M, 2016, OMEGA-INT J MANAGE S, V59, P263, DOI 10.1016/j.omega.2015.06.014
   SMALL KA, 1981, ECONOMETRICA, V49, P105, DOI 10.2307/1911129
   T. T, 2015, Survival: A Package for Survival Analysis in S, R package version 2.38
   Talluri K, 2004, MANAGE SCI, V50, P15, DOI 10.1287/mnsc.1030.0147
   Teyton C., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P289, DOI 10.1109/WCRE.2012.38
   Teyton C, 2014, J SOFTW-EVOL PROC, V26, P1030, DOI 10.1002/smr.1660
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   von Hippel E, 2001, MIT SLOAN MANAGE REV, V42, P82
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   West J., 2006, OPEN INNOVATION RES, V235, P11
   Xiao Shundan, 2014, P 17 ACM C COMPUTER, P1095, DOI DOI 10.1145/2531602.2531722
   Yuxing Ma, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P143, DOI 10.1109/MSR.2019.00031
NR 60
TC 4
Z9 5
U1 2
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2022
VL 48
IS 2
BP 485
EP 501
DI 10.1109/TSE.2020.2993758
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA ZB4EB
UT WOS:000756796100008
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Feitelson, DG
   Mizrahi, A
   Noy, N
   Ben Shabat, A
   Eliyahu, O
   Sheffer, R
AF Feitelson, Dror G.
   Mizrahi, Ayelet
   Noy, Nofar
   Ben Shabat, Aviad
   Eliyahu, Or
   Sheffer, Roy
TI How Developers Choose Names
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE variable naming; code comprehension
ID COMPREHENSION
AB The names of variables and functions serve as implicit documentation and are instrumental for program comprehension. But choosing good meaningful names is hard. We perform a sequence of experiments in which a total of 334 subjects are required to choose names in given programming scenarios. The first experiment shows that the probability that two developers would select the same name is low: in the 47 instances in our experiments the median probability was only 6.9 percent. At the same time, given that a specific name is chosen, it is usually understood by the majority of developers. Analysis of the names given in the experiment suggests a model where naming is a (not necessarily cognizant or serial) three-step process: (1) selecting the concepts to include in the name, (2) choosing the words to represent each concept, and (3) constructing a name using these words. A followup experiment, using the same experimental setup, then checked whether using this model explicitly can improve the quality of names. The results were that names selected by subjects using the model were judged by two independent judges to be superior to names chosen in the original experiment by a ratio of two-to-one. Using the model appears to encourage the use of more concepts and longer names.
C1 [Feitelson, Dror G.; Mizrahi, Ayelet; Noy, Nofar; Ben Shabat, Aviad; Eliyahu, Or; Sheffer, Roy] Hebrew Univ Jerusalem, Dept Comp Sci, IL-91904 Jerusalem, Israel.
C3 Hebrew University of Jerusalem
RP Feitelson, DG (corresponding author), Hebrew Univ Jerusalem, Dept Comp Sci, IL-91904 Jerusalem, Israel.
EM feit@cs.huji.ac.il; ayelet.mizrahi@mail.huji.ac.il;
   nofar.roy@mail.huji.ac.il; aviad.benshabat@mail.huji.ac.il;
   or.eliyahu@mail.huji.ac.il; roysheffer7@gmail.com
OI Feitelson, Dror/0000-0002-2733-7709; Sheffer, Roy/0000-0002-8726-7562;
   Lotem (Mizrahi), Ayelet/0000-0003-4037-1028
FU Berthold Badler chair in Computer Science; ISRAEL SCIENCE FOUNDATION
   [407/13, 832/18]
FX Dror Feitelson holds the Berthold Badler chair in Computer Science. This
   research was supported by the ISRAEL SCIENCE FOUNDATION (Grants no.
   407/13 and 832/18).
CR Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Alon Uri, 2019, INT C LEARN REPR
   [Anonymous], 2005, P 6 AUSTRALASIAN USE
   Arnaoudova V, 2016, EMPIR SOFTW ENG, V21, P104, DOI 10.1007/s10664-014-9350-8
   Avidan E, 2017, INT C PROGRAM COMPRE, P55, DOI 10.1109/ICPC.2017.27
   Beniamini G, 2017, INT C PROGRAM COMPRE, P45, DOI 10.1109/ICPC.2017.18
   Binkley D, 2011, Proceedings of the Working Conference on Mining Software Repositories (MSR), P203
   Binkley D, 2009, SCI COMPUT PROGRAM, V74, P430, DOI 10.1016/j.scico.2009.02.006
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Butler S, 2010, EUR CON SFTWR MTNCE, P156, DOI 10.1109/CSMR.2010.27
   Caprile B, 2000, PROC IEEE INT CONF S, P97, DOI 10.1109/ICSM.2000.883022
   Deissenböck F, 2005, PROG COMPREHEN, P97, DOI 10.1109/WPC.2005.14
   Fakhoury S, 2020, EMPIR SOFTW ENG, V25, P2140, DOI 10.1007/s10664-019-09751-4
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Feitelson Dror G., 2015, ACM SIGOPS Operating Systems Review, V49, P3
   FURNAS GW, 1987, COMMUN ACM, V30, P964, DOI 10.1145/32206.32212
   Gellenbeck E. M., 1991, Empirical Studies of Programmers: Fourth Workshop, P65
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Hill E, 2014, EMPIR SOFTW ENG, V19, P1754, DOI 10.1007/s10664-013-9261-0
   Hindle A, 2016, COMMUN ACM, V59, P122, DOI 10.1145/2902362
   Hofmeister J, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P217, DOI 10.1109/SANER.2017.7884623
   Holzmann GJ, 2016, IEEE SOFTWARE, V33, P22, DOI 10.1109/MS.2016.44
   Jones D. M., 2009, NEW C STANDARD EC CU
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Liblit Ben, 2006, PPIG, P53
   Liu KW, 2019, IEEE C ELEC DEVICES, DOI 10.1109/edssc.2019.8754036
   Martin Robert C, 2009, Clean Code: a Handbook of Agile Software Craftsmanship
   McConnell Steve., 2004, Code Complete, V2nd ed
   Osman H, 2012, P 2 ED INT WORKSH EX, P1
   Raychev V, 2015, ACM SIGPLAN NOTICES, V50, P111, DOI [10.1145/2775051.2677009, 10.1145/2676726.2677009]
   Rilling J, 2003, PROG COMPREHEN, P115
   Rodeghero P, 2015, IEEE T SOFTWARE ENG, V41, P1038, DOI 10.1109/TSE.2015.2442238
   Salviulo F, 2014, P 18 INT C EVALUATIO, P1
   Scanniello G, 2013, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.2013.30
   Schankin A, 2018, INT C PROGRAM COMPRE, P31, DOI 10.1145/3196321.3196332
   Siegmund J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P140, DOI 10.1145/3106237.3106268
   Siegmund J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P378, DOI 10.1145/2568225.2568252
   Storey MA, 2006, SOFTWARE QUAL J, V14, P187, DOI 10.1007/s11219-006-9216-4
   Swidan A, 2017, IEEE INT WORK C SO, P51, DOI 10.1109/SCAM.2017.12
   Takang AA, 1996, J PROGRAM LANG, V4, P143
NR 41
TC 16
Z9 17
U1 3
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2022
VL 48
IS 1
BP 37
EP 52
DI 10.1109/TSE.2020.2976920
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YG0HJ
UT WOS:000742179000002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hirao, T
   McIntosh, S
   Ihara, A
   Matsumoto, K
AF Hirao, Toshiki
   McIntosh, Shane
   Ihara, Akinori
   Matsumoto, Kenichi
TI Code Reviews With Divergent Review Scores: An Empirical Study of the
   OpenStack and Qt Communities
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Modern code review; divergent discussion; empirical study
ID INSPECTIONS; IMPACT
AB Code review is a broadly adopted software quality practice where developers critique each others' patches. In addition to providing constructive feedback, reviewers may provide a score to indicate whether the patch should be integrated. Since reviewer opinions may differ, patches can receive both positive and negative scores. If reviews with divergent scores are not carefully resolved, they may contribute to a tense reviewing culture and may slow down integration. In this article, we study patches with divergent review scores in the OPENSTACK and QTcommunities. Quantitative analysis indicates that patches with divergent review scores: (1) account for 15-37 percent of patches that receive multiple review scores; (2) are integrated more often than they are abandoned; and (3) receive negative scores after positive ones in 70 percent of cases. Furthermore, a qualitative analysis indicates that patches with strongly divergent scores that: (4) are abandoned more often suffer from external issues (e.g., integration planning, content duplication) than patches with weakly divergent scores and patches without divergent scores; and (5) are integrated often address reviewer concerns indirectly (i.e., without changing patches). Our results suggest that review tooling should integrate with release schedules and detect concurrent development of similar patches to optimize review discussions with divergent scores. Moreover, patch authors should note that even the most divisive patches are often integrated through discussion, integration timing, and careful revision.
C1 [Hirao, Toshiki; Matsumoto, Kenichi] Nara Inst Sci & Technol, Grad Sch Informat Sci, Nara 6300192, Japan.
   [McIntosh, Shane] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ H3A 0G4, Canada.
   [Ihara, Akinori] Wakayama Univ, Fac Syst Engn, Wakayama 6408510, Japan.
C3 Nara Institute of Science & Technology; McGill University; Wakayama
   University
RP McIntosh, S (corresponding author), McGill Univ, Dept Elect & Comp Engn, Montreal, PQ H3A 0G4, Canada.
EM hirao.toshiki.ho7@is.naist.jp; shane.mcintosh@mcgill.ca;
   ihara@sys.wakayama-u.ac.jp; matumoto@is.naist.jp
CR [Anonymous], 2014, P 6 INT WORKSHOP SOC
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   Aurum A, 2002, SOFTW TEST VERIF REL, V12, P133, DOI 10.1002/stvr.243
   Bacchelli A., 2010, Proceedings of the 32nd International Conference on Software Engineering, P375
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Baum T, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P85, DOI 10.1145/2950290.2950323
   Baysal O, 2016, EMPIR SOFTW ENG, V21, P932, DOI 10.1007/s10664-015-9366-8
   Baysal O, 2013, WORK CONF REVERSE EN, P122, DOI 10.1109/WCRE.2013.6671287
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Bird C., 2007, 4 INT WORKSHOP MININ, P26
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   Czerwonka J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P27, DOI 10.1109/ICSE.2015.131
   El Zanaty F, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239525
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Filippova A, 2016, ACM CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW 2016), P705, DOI 10.1145/2818048.2820018
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   Hellendoorn VJ, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P157, DOI 10.1109/MSR.2015.22
   Hirao T, 2016, IFIP ADV INF COMM TE, V472, P97, DOI 10.1007/978-3-319-39225-7_8
   Hirao Toshiki, 2015, P 25 ANN INT C COMPU, P248
   Huang WJ, 2016, ACM CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW 2016), P717, DOI 10.1145/2818048.2819950
   INGELFINGER FJ, 1974, AM J MED, V56, P686, DOI 10.1016/0002-9343(74)90635-4
   Jiang Y., 2014, Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, P51
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Kemerer CF, 2009, IEEE T SOFTWARE ENG, V35, P534, DOI 10.1109/TSE.2009.27
   Kerzazi N, 2014, PROC IEEE INT CONF S, P41, DOI 10.1109/ICSME.2014.26
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Morales R, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P171, DOI 10.1109/SANER.2015.7081827
   Rahman MM, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P222, DOI 10.1145/2889160.2889244
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Sedano T, 2017, PROC INT CONF SOFTW, P130, DOI 10.1109/ICSE.2017.20
   Shihab E, 2009, PROC IEEE INT CONF S, P147, DOI 10.1109/ICSM.2009.5306333
   Shridhar M., 2014, P 8 ACM IEEE INT S E, P29
   Tao YD, 2014, PROC IEEE INT CONF S, P271, DOI 10.1109/ICSME.2014.49
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Thongtanunam P, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P168, DOI 10.1109/MSR.2015.23
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Tsay J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P144, DOI 10.1145/2635868.2635882
   Wang J, 2015, INT J HUM-COMPUT ST, V77, P52, DOI 10.1016/j.ijhcs.2015.01.005
   Wiegers Karl Eugene, 2002, Peer reviews in software: A practical guide
   Xia X, 2015, PROC IEEE INT CONF S, P261, DOI 10.1109/ICSM.2015.7332472
   Yin R. K., 2009, CASE STUDY RES DESIG, V4th ed.
   Zanjani MB, 2016, IEEE T SOFTWARE ENG, V42, P530, DOI 10.1109/TSE.2015.2500238
   Zhou SR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P105, DOI 10.1145/3180155.3180205
NR 53
TC 4
Z9 4
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2022
VL 48
IS 1
BP 69
EP 81
DI 10.1109/TSE.2020.2977907
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YG0HJ
UT WOS:000742179000004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ali, K
   Lai, XN
   Luo, ZY
   Lhoták, O
   Dolby, J
   Tip, F
AF Ali, Karim
   Lai, Xiaoni
   Luo, Zhaoyi
   Lhotak, Ondrej
   Dolby, Julian
   Tip, Frank
TI A Study of Call Graph Construction for JVM-Hosted Languages
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Java; Static analysis; Python; Computer security; Software engineering;
   Graphs; Call graphs; static analysis; JVM; compilation; Scheme; Scala;
   OCaml; Groovy; Clojure; Python; Ruby
ID FRAMEWORK
AB Call graphs have many applications in software engineering, including bug-finding, security analysis, and code navigation in IDEs. However, the construction of call graphs requires significant investment in program analysis infrastructure. An increasing number of programming languages compile to the Java Virtual Machine (JVM), and program analysis frameworks such as WALA and SOOT support a broad range of program analysis algorithms by analyzing JVM bytecode. This approach has been shown to work well when applied to bytecode produced from Java code. In this paper, we show that it also works well for diverse other JVM-hosted languages: dynamically-typed functional Scheme, statically-typed object-oriented Scala, and polymorphic functional OCaml. Effectively, we get call graph construction for these languages for free, using existing analysis infrastructure for Java, with only minor challenges to soundness. This, in turn, suggests that bytecode-based analysis could serve as an implementation vehicle for bug-finding, security analysis, and IDE features for these languages. We present qualitative and quantitative analyses of the soundness and precision of call graphs constructed from JVM bytecodes for these languages, and also for Groovy, Clojure, Python, and Ruby. However, we also show that implementation details matter greatly. In particular, the JVM-hosted implementations of Groovy, Clojure, Python, and Ruby produce very unsound call graphs, due to the pervasive use of reflection, invokedynamic instructions, and run-time code generation. Interestingly, the dynamic translation schemes employed by these languages, which result in unsound static call graphs, tend to be correlated with poor performance at run time.
C1 [Ali, Karim] Univ Alberta, Dept Comp Sci, Edmonton, AB T6G 2R3, Canada.
   [Lai, Xiaoni] Google, Waterloo, ON N2H 5G5, Canada.
   [Luo, Zhaoyi] Microsoft, Redmond, WA USA.
   [Lhotak, Ondrej] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
   [Dolby, Julian] IBM Res, Yorktown Hts, NY 10598 USA.
   [Tip, Frank] Northeastern Univ, Khoury Coll Comp Sci, Boston, MA 02115 USA.
C3 University of Alberta; Google Incorporated; Microsoft; University of
   Waterloo; International Business Machines (IBM); Northeastern University
RP Ali, K (corresponding author), Univ Alberta, Dept Comp Sci, Edmonton, AB T6G 2R3, Canada.
EM karim.ali@ualberta.ca; xlai@google.com; zhaoyi.luo@microsoft.com;
   olhotak@uwaterloo.ca; dolby@us.ibm.com; f.tip@northeastern.edu
OI Tip, Frank/0000-0002-1862-3498
FU Natural Sciences and Engineering Research Council of Canada; Ontario
   Ministry of Research and Innovation; National Science Foundation
   [CCF-1715153]; Office of Naval Research (ONR) [N00014-17-1-2945]
FX We are grateful to Laurie Hendren for helpful suggestions. This research
   was supported by the Natural Sciences and Engineering Research Council
   of Canada and the Ontario Ministry of Research and Innovation. This
   research was also supported in part by National Science Foundation Grant
   CCF-1715153 and by Office of Naval Research (ONR) Grant
   N00014-17-1-2945.
CR Agesen O, 1995, LECT NOTES COMPUT SC, V952, P2
   Ali K, 2014, LECT NOTES COMPUT SC, V8586, P54
   [Anonymous], 2019, Code tools jmh
   [Anonymous], 2013, Learning Python
   [Anonymous], 2019, CLOJURE PROGRAMMING
   [Anonymous], 2008, P 6 INT S PRINC PRAC
   [Anonymous], 2011, CHORD PROGRAM ANAL P
   [Anonymous], 2018, COMPUTER LANGUAGE BE
   [Anonymous], 2017, KAWA SCHEME LANGUAGE
   [Anonymous], 2013, Real World OCaml: Functional programming for the masses
   [Anonymous], 2006, LIB ANAL WALA
   [Anonymous], 2011, PROGRAMMING SCALA
   [Anonymous], 2019, GRAALVM RUN PROGRAMS
   [Anonymous], 2019, SOOT A JAVA OPTIMIZA
   [Anonymous], 2019, JRUBY RUBY PROGRAMMI
   [Anonymous], 2019, OPAL PROJECT
   Barclay K, 2006, GROOVY PROGRAMMING I, V1
   Bebenita M, 2010, ACM SIGPLAN NOTICES, V45, P708, DOI 10.1145/1932682.1869517
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Bodden E, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P241, DOI 10.1145/1985793.1985827
   Bravenboer M, 2009, OOPSLA 2009, CONFERENCE PROCEEDINGS, P243
   Castanos J, 2012, ACM SIGPLAN NOTICES, V47, P195, DOI 10.1145/2398857.2384631
   Clerc X., 2013, P INT C PRINC PRACT, P45
   Dolby J, 2000, ACM SIGPLAN NOTICES, V35, P345, DOI 10.1145/358438.349344
   Dolby Julian, 2007, P 6 JOINT M EUR SOFT, P195
   Dragos I., 2010, THESIS ECOLE POLYTEC
   Dragos Iulian., WORKSHOP IMPLEMENTAT, DOI DOI 10.1145/1565824.1565830
   Dubochet G., 2009, P 4 WORKSH IMPL COMP, P34, DOI DOI 10.1145/1565824.1565829
   Dybvig RK, 2009, The scheme programming language
   Eichberg Michael, 2014, P 3 ACM SIGPLAN INT, P1, DOI DOI 10.1145/2614628.2614630
   Feldthaus A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P752, DOI 10.1109/ICSE.2013.6606621
   Fourtounis G., 2019, P 33 EUROPEAN C OBJE, DOI [10.4230/LIPIcs.ECOOP.2019.15, DOI 10.4230/LIPICS.ECOOP.2019.15]
   Fourtounis G, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P209, DOI 10.1145/3213846.3213864
   Gordon AD, 2001, ACM SIGPLAN NOTICES, V36, P248, DOI 10.1145/373243.360228
   Grove D, 2001, ACM T PROGR LANG SYS, V23, P685, DOI 10.1145/506315.506316
   Halloway S. D., 2012, PROGRAMMING CLOJURE
   Hills M., 2013, Proceedings of ISSTA 2013, P325, DOI DOI 10.1145/2483760.2483786
   Juneau J, 2013, ORACLE JAVA MAG
   Lhoták O, 2006, LECT NOTES COMPUT SC, V3923, P47
   Lhoták O, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P37, DOI 10.1145/1251535.1251542
   Li W.H., 2013, P 2013 INT C PRINC P, P101, DOI DOI 10.1145/2500828.2500838
   Livshits B, 2015, COMMUN ACM, V58, P44, DOI 10.1145/2644805
   McCabe F., 2013, P INT C PRINC PRACT, P89
   Odersky M., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P146, DOI 10.1145/263699.263715
   Odersky M., 1998, P GEN PROGR, P114
   Reif M, 2018, COMPANION PROCEEDINGS FOR THE ISSTA/ECOOP 2018 WORKSHOPS, P107, DOI 10.1145/3236454.3236503
   Richards G, 2011, LECT NOTES COMPUT SC, V6813, P52, DOI 10.1007/978-3-642-22655-7_4
   Richards G, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P1, DOI 10.1145/1806596.1806598
   Sarimbekov Aibek., 2013, Proceedings of the 7th ACM workshop on Virtual machines and intermediate languages, P11, DOI [10.1145/2542142.2542144, DOI 10.1145/2542142.2542144]
   Savrun-Yeniçeri G, 2014, ACM T ARCHIT CODE OP, V11, DOI 10.1145/2532642
   Schinz M., 2005, THESIS ECOLE POLYTEC
   Sewe A, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P657
   SHIVERS O, 1988, SIGPLAN NOTICES, V23, P164, DOI 10.1145/960116.54007
   Sui L, 2018, LECT NOTES COMPUT SC, V11275, P68, DOI 10.1007/978-3-030-02768-1_4
   Sweeney P. F., 2000, Software Engineering Notes, V25, P98, DOI 10.1145/357474.355059
   Thomas D, 2013, PROGRAMMING RUBY 1 9
   Tripp O, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P87, DOI 10.1145/1542476.1542486
   Vallée-Rai R, 2000, LECT NOTES COMPUT SC, V1781, P18
   Wrthinger T., 2013, P 2013 ACM INT S NEW, P187, DOI [10.1145/2509578.2509581, DOI 10.1145/2509578.2509581]
   Xu G., 2008, P 7 INT C ASP OR SOF, P36
   Xu GQ, 2007, PROC INT CONF SOFTW, P65
NR 61
TC 6
Z9 6
U1 3
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2021
VL 47
IS 12
BP 2644
EP 2666
DI 10.1109/TSE.2019.2956925
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XM6HB
UT WOS:000728924600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Gavidia-Calderon, C
   Sarro, F
   Harman, M
   Barr, ET
AF Gavidia-Calderon, Carlos
   Sarro, Federica
   Harman, Mark
   Barr, Earl T.
TI The Assessor's Dilemma: Improving Bug Repair via Empirical Game Theory
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Task analysis; Computer bugs; Logic gates; Games; Nash equilibrium;
   Software; Software process; game theory; bug report; priority inflation
ID PLAY
AB Priority inflation occurs when a Quality-Assurance (QA) engineer or a project manager requesting a feature inflates the priority of their task so that developers deliver the fix or the new functionality more quickly. We survey developers and show that priority inflation occurs and misallocates developer time. We are the first to apply empirical game-theoretic analysis (EGTA) to a software engineering problem, specifically priority inflation. First, we extract prioritisation strategies from 42,620 issues from Apache's JIRA, then use TaskAssessor, our EGTA-based modelling approach, to confirm conventional wisdom and show that the common process of a QA engineer assigning priority labels is susceptible to priority inflation. We then show that the common mitigation strategy of having a bug triage team assigning priorities does not resolve priority inflation and slows development. We then use mechanism design to devise assessor-throttling, a new, lightweight prioritization process, immune to priority inflation. We show that assessor-throttling resolves 97 percent of high priority tasks, 69 percent better than simply relying on those filing tasks to assign priorities. Finally, we present The Fed, a browser extension for Chrome that supports assessor-throttling.
C1 [Gavidia-Calderon, Carlos; Sarro, Federica; Harman, Mark; Barr, Earl T.] UCL, Dept Comp Sci, Gower St, London WC2R 2LS, England.
C3 University of London; University College London
RP Gavidia-Calderon, C (corresponding author), UCL, Dept Comp Sci, Gower St, London WC2R 2LS, England.
EM carlos.gavidia.15@ucl.ac.uk; f.sarro@ucl.ac.uk; mark.harman@ucl.ac.uk;
   e.barr@ucl.ac.uk
RI Gavidia-Calderon, Carlos/AAH-4927-2020
OI Gavidia-Calderon, Carlos/0000-0002-6136-0566; Barr, Earl
   Theodore/0000-0003-0771-7891; Sarro, Federica/0000-0002-9146-442X
FU Dynamic Adaptive Automated Software Engineering Programme Grant
   [EP/J017515]
FX The authors would like to thank the anonymous professionals who
   responded to the survey presented in this study. We are also grateful to
   the anonymous reviewers and our editor for their valuable feedback. This
   research is funded in part by the Dynamic Adaptive Automated Software
   Engineering Programme Grant (EP/J017515).
CR [Anonymous], 2002, BUG TRACK JIRA SERVE
   [Anonymous], 2015, WHAT IS ISSUE V63 AT
   [Anonymous], 2008, BUGZILLA FIELDS MEDI
   [Anonymous], 2006, JIRA ISSUE PROJECT T
   [Anonymous], 2009, EVOLUTION COOPERATIO
   [Anonymous], 2002, AAAI 02 WORKSHOP GAM
   [Anonymous], 2019, IMPROVING SOFTWARE P
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   [Anonymous], 2017, LABELS USER DOCUMENT
   [Anonymous], 2012, How Google Tests Software
   [Anonymous], 2014, WE USE LABELS GITHUB
   [Anonymous], 2014, ORG ISSUES PRIORITY
   [Anonymous], 2015, GITHUB LABELS BETTER
   [Anonymous], 2010, GITHUB APACHE SOFTW
   [Anonymous], 2017, WHAT IS ISSUE V64 AT
   [Anonymous], 2006, SYSTEM DASHBOARD ASF
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Atlassian, 2016, JIRA CLOUD PLATF RES
   Ayewah N, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P1, DOI 10.1145/1251535.1251536
   Bacon D.F., 2012, Proceedings of the 11th International Conference on Autonomous Agents and Multiagent Systems (AAMAS), P695
   Banfield R., 2017, Product Leadership: How Top Product Managers Launch Awesome Products and Build Successful Teams
   Banks J., 2005, Discrete-event System Simulation
   Black R, 2013, MANAGING TESTING PRO
   Boehm B, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.129
   BOSE SK, 2002, INTRO QUEUEING SYSTE, DOI DOI 10.1007/978-1-4615-0001-8
   Brechner E., 2015, AGILE PROJECT MANAGE
   Brue S., 2012, The Evolution of Economic Thought, V8th
   Bugzilla, 2014, WEBS API REF
   Butcher P., 2009, DEBUG IT FIND REPAIR
   Cosentino V, 2017, IEEE ACCESS, V5, P7173, DOI 10.1109/ACCESS.2017.2682323
   Crispin L., 2009, AGILE TESTING PRACTI
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Doar M.B., 2005, PRACTICAL DEV ENV, Vfirst
   Feijs L., 2001, COMPUTER SCI REPORTS, P65
   Ficici S.G., 2008, 24 C UNCERTAINTY ART, P187
   Fishman George S., 2001, SPRING S OPERAT RES, DOI 10.1007/978-1-4757-3552-9
   Gavidia-Calderon C, 2017, THEFED GITHUB
   Gavidia-Calderon C, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110424
   Gokhale SS, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P353
   Grechanik M., 2004, "Sixth International Workshop on Economics-Driven Software Engineering Research (EDSER-6)" W9L Workshop - 26th International Conference on Software Engineering, P29, DOI 10.1049/ic:20040282
   Gross D., 2008, FUNDAMENTALS QUEUEIN, DOI DOI 10.1002/9781118625651
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Hasnain E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P117, DOI 10.1109/CHASE.2013.6614745
   Hata H, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P15, DOI 10.1109/CHASE.2015.9
   Hazzan O, 2005, LECT NOTES COMPUT SC, V3556, P74
   Holyoak K., 2012, OXFORD HDB THINKING
   Inoue K., 1999, ACM T MODEL COMPUT S, V9, P381
   Jarczyk O, 2014, LECT NOTES COMPUT SC, V8851, P80, DOI 10.1007/978-3-319-13734-6_6
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kelly S., 2008, Domain-Specific Modeling
   Kim SH, 2006, HBK OPERAT RES MANAG, V13, P501, DOI 10.1016/S0927-0507(06)13017-0
   Krogerus M., 2017, DECISION BOOK 50 MOD
   Kukreja N, 2013, IEEE INT CONF AUTOM, P616, DOI 10.1109/ASE.2013.6693122
   Lacey M.G., 2012, The Scrum field guide: Practical advice for your first year
   Laplante Phillip A., 2009, IT Professional, V11, P45, DOI 10.1109/MITP.2009.80
   Leyton-Brown K., 2008, Essentials of Game Theory: A Concise Multidisciplinary Introduction, V1st, DOI [DOI 10.2200/S00108ED1V01Y200802AIM003, 10.2200/S00108ED1V01Y200802AIM003, 10.2200/s00108ed1v01y200802aim003]
   Luong B, 2001, P A REL MAI, P213, DOI 10.1109/RAMS.2001.902469
   M_uller K. G., 2011, SIMULATION SIMPY IN
   McCarty Nolan, 2007, Political Game Theory: An Introduction, DOI DOI 10.1017/CBO9780511813122
   McKelvey R. D., 2009, GAMBIT SOFTWARE TOOL
   Myerson R. B., 2013, Game theory
   Naguib H, 2013, IEEE WORK CONF MIN S, P22, DOI 10.1109/MSR.2013.6623999
   NASH J, 1951, ANN MATH, V54, P286, DOI 10.2307/1969529
   Nelson BL, 1995, MANAGE SCI, V41, P1935, DOI 10.1287/mnsc.41.12.1935
   Nisan N, 2007, ALGORITHMIC GAME THEORY, P1, DOI 10.1017/CBO9780511800481
   Norvig P., 2011, ARTIFICIAL INTELLIGE
   OMG S, 2008, OMG STD REV, V2
   Oza N. V., 2006, P 2006 INT WORKSHOP, P49
   Page A., 2008, WE TEST SOFTWARE MIC
   Palacios-Huerta I, 2003, REV ECON STUD, V70, P395, DOI 10.1111/1467-937X.00249
   Pedregosa F, 2011, J. Mach. Learn. Res., V12, P2825
   Rath M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P834, DOI 10.1145/3180155.3180207
   Sandholm T, 2015, AAAI CONF ARTIF INTE, P4127
   Sazawal V, 2009, LECT NOTES COMPUT SC, V5543, P354, DOI 10.1007/978-3-642-01680-6_32
   Sedgwick P., 2013, BMJ, V347, pf6304, DOI [10.4135/9781412963947, 10.1136/bmj.f6304, DOI 10.1136/BMJ.F6304]
   Shoham Y, 2009, MULTIAGENT SYSTEMS: ALGORITHMIC, GAME-THEORETIC, AND LOGICAL FOUNDATIONS, P1
   Shoham Y, 2008, COMMUN ACM, V51, P74, DOI 10.1145/1378704.1378721
   Spolsky Joel, 2004, Joel on Software: And on Diverse and Occasionally Related Matters That Will Prove of Interest to Software Developers, Designers, and Managers, and to Those Who, Whether by Good Fortune or Ill Luck, Work with Them in Some Capacity
   Stahl S., 1999, A gentle introduction to game theory (No. 13)
   Stellman Andrew., 2014, Learning Agile: Understanding Scrum, XP, Lean, and Kanban: 1st Edition, V1st
   Tardos É, 2007, ALGORITHMIC GAME THEORY, P3
   Walker M, 2001, AM ECON REV, V91, P1521, DOI 10.1257/aer.91.5.1521
   Watkins J., 2010, Testing IT: an Off-The-Shelf Software Testing Process
   Wellman M. P., 2005, 20 NATL C ARTIFICIAL, V5, P502
   Wellman M. P., 2006, P 21 NAT C ART INT 1, P1552
   Wiedenbeck B., 2012, 11 INT C AUT AG MULT, P931
   Yilmaz M, 2010, COMM COM INF SC, V99, P177
NR 87
TC 7
Z9 7
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2021
VL 47
IS 10
BP 2143
EP 2161
DI 10.1109/TSE.2019.2944608
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WH1IX
UT WOS:000707441900006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chen, ZM
   Kommrusch, S
   Tufano, M
   Pouchet, LN
   Poshyvanyk, D
   Monperrus, M
AF Chen, Zimin
   Kommrusch, Steve
   Tufano, Michele
   Pouchet, Louis-Noel
   Poshyvanyk, Denys
   Monperrus, Martin
TI SequenceR: Sequence-to-Sequence Learning for End-to-End Program Repair
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Maintenance engineering; Computer bugs; Vocabulary; Training; Natural
   languages; Benchmark testing; Program repair; machine learning
AB This paper presents a novel end-to-end approach to program repair based on sequence-to-sequence learning. We devise, implement, and evaluate a technique, called SequenceR, for fixing bugs based on sequence-to-sequence learning on source code. This approach uses the copy mechanism to overcome the unlimited vocabulary problem that occurs with big code. Our system is data-driven; we train it on 35,578 samples, carefully curated from commits to open-source repositories. We evaluate SequenceR on 4,711 independent real bug fixes, as well on the Defects4J benchmark used in program repair research. SequenceR is able to perfectly predict the fixed line for 950/4,711 testing samples, and find correct patches for 14 bugs in Defects4J benchmark. SequenceR captures a wide range of repair operators without any domain-specific top-down design.
C1 [Chen, Zimin; Monperrus, Martin] KTH Royal Inst Technol, S-11428 Stockholm, Sweden.
   [Kommrusch, Steve; Pouchet, Louis-Noel] Colorado State Univ, Ft Collins, CO 80523 USA.
   [Tufano, Michele; Poshyvanyk, Denys] Coll William & Mary, Williamsburg, VA 23185 USA.
C3 Royal Institute of Technology; Colorado State University; William & Mary
RP Kommrusch, S (corresponding author), Colorado State Univ, Ft Collins, CO 80523 USA.
EM zimin@kth.se; steveko@cs.colostate.edu; mtufano@cs.wm.edu;
   pouchet@cs.colostate.edu; denys@cs.wm.edu; monp@kth.se
RI Monperrus, Martin/I-3640-2012; Chen, Zimin/AAC-3540-2022
OI Monperrus, Martin/0000-0003-3505-3383; Chen, Zimin/0000-0002-6673-6438;
   Poshyvanyk, Denys/0000-0002-5626-7586
CR Ahmed UZ, 2018, PROC INT CONF SOFTW, P78, DOI 10.1145/3183377.3183383
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   [Anonymous], 1997, NEURAL COMPUT
   [Anonymous], 2018, Differentiable neural network architecture searchJ
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bahdanau Dzmitry, 2015, 3 INT C LEARN REP IC
   Bengio Yoshua, 2012, Neural Networks: Tricks of the Trade. Second Edition: LNCS 7700, P437, DOI 10.1007/978-3-642-35289-8_26
   Bhatia S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P60, DOI 10.1145/3180155.3180219
   Campos J, 2012, IEEE INT CONF AUTOM, P378, DOI 10.1145/2351676.2351752
   Chakraborty S., 2018, TREE2TREE NEURAL TRA
   Chen Z., 2018, The codrep machine learning on source code competition
   Cho K., 2014, PROCS C EMPIRICAL ME, P1724, DOI DOI 10.3115/V1/D14-1179
   Cho Kyunghyun, 2014, SYNTAX SEMANTICS STR, P5, DOI [10.3115/v1/w14-4012, 10.3115 /v1/D14-1179, DOI 10.3115/V1/D14-1179]
   Devito Z., 2017, NEURIPS WORKSHOPS, P1
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Henkel J, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P163, DOI 10.1145/3236024.3236085
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Karampatsis R., 2019, ARXIV PREPRINT ARXIV
   KIEFER J, 1952, ANN MATH STAT, V23, P462, DOI 10.1214/aoms/1177729392
   Klein G, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017): SYSTEM DEMONSTRATIONS, P67, DOI 10.18653/v1/P17-4012
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Koehn P., 2017, ARXIV170603872, P28, DOI DOI 10.18653/V1/W17-3204
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Liu K., 2018, YOU CANNOT FIX WHAT
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Luong MT, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P11
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Neubig Graham, 2018, CoRR
   Pu YW, 2016, COMPANION PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SYSTEMS, PROGRAMMING, LANGUAGES AND APPLICATIONS: SOFTWARE FOR HUMANITY (SPLASH COMPANION'16), P39, DOI 10.1145/2984043.2989222
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Saha RK, 2017, IEEE INT CONF AUTOM, P648, DOI 10.1109/ASE.2017.8115675
   Santos EA, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P311, DOI 10.1109/SANER.2018.8330219
   Schuster M, 1997, IEEE T SIGNAL PROCES, V45, P2673, DOI 10.1109/78.650093
   See A, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1073, DOI 10.18653/v1/P17-1099
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Sole R., 2001, ROSETTA STONE STORY
   Sutskever I, 2014, ADV NEUR IN, V27
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Wang K., 2018, P 6 INT C LEARN REPR
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   White M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P479, DOI [10.1109/saner.2019.8668043, 10.1109/SANER.2019.8668043]
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 51
TC 161
Z9 172
U1 2
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2021
VL 47
IS 9
BP 1943
EP 1959
DI 10.1109/TSE.2019.2940179
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UR3QY
UT WOS:000696667700011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Liu, H
   Jin, JH
   Xu, ZF
   Zou, YZ
   Bu, YF
   Zhang, L
AF Liu, Hui
   Jin, Jiahao
   Xu, Zhifeng
   Zou, Yanzhen
   Bu, Yifan
   Zhang, Lu
TI Deep Learning Based Code Smell Detection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Deep learning; Feature extraction; Training data; Neural
   networks; Measurement; Software refactoring; code smells;
   identification; deep learning; quality
ID METHOD REFACTORING OPPORTUNITIES; IDENTIFICATION; GRAPH
AB Code smells are structures in the source code that suggest the possibility of refactorings. Consequently, developers may identify refactoring opportunities by detecting code smells. However, manual identification of code smells is challenging and tedious. To this end, a number of approaches have been proposed to identify code smells automatically or semi-automatically. Most of such approaches rely on manually designed heuristics to map manually selected source code metrics into predictions. However, it is challenging to manually select the best features. It is also difficult to manually construct the optimal heuristics. To this end, in this paper we propose a deep learning based novel approach to detecting code smells. The key insight is that deep neural networks and advanced deep learning techniques could automatically select features of source code for code smell detection, and could automatically build the complex mapping between such features and predictions. A big challenge for deep learning based smell detection is that deep learning often requires a large number of labeled training data (to tune a large number of parameters within the employed deep neural network) whereas existing datasets for code smell detection are rather small. To this end, we propose an automatic approach to generating labeled training data for the neural network based classifier, which does not require any human intervention. As an initial try, we apply the proposed approach to four common and well-known code smells, i.e., feature envy, long method, large class, and misplaced class. Evaluation results on open-source applications suggest that the proposed approach significantly improves the state-of-the-art.
C1 [Liu, Hui; Jin, Jiahao; Xu, Zhifeng; Bu, Yifan] Beijing Inst Technol, Sch Comp Sci & Technol, Beijing 100081, Peoples R China.
   [Zou, Yanzhen; Zhang, Lu] Peking Univ, Minist Educ, Key Lab High Confidence Software Technol, Beijing 100871, Peoples R China.
C3 Beijing Institute of Technology; Peking University
RP Liu, H (corresponding author), Beijing Inst Technol, Sch Comp Sci & Technol, Beijing 100081, Peoples R China.
EM liuhui08@bit.edu.cn; jinjiahao1993@gmail.com; 848602422@qq.com;
   zouyz@pku.edu.cn; yifan_bu@qq.com; zhanglu@sei.pku.edu.cn
FU National Natural Science Foundation of China [61690205, 61772071,
   61529201]
FX The authors would like to say thanks to the anonymous reviewers for
   their valuable suggestions. Constructive comments and suggestions from
   ASE'18 reviewers and PC chairs on how to revise and extend the original
   version are highly appreciated as well. The work is partially supported
   by the National Natural Science Foundation of China (61690205, 61772071,
   61529201).
CR Al Dallal J, 2015, INFORM SOFTWARE TECH, V58, P231, DOI 10.1016/j.infsof.2014.08.002
   Amorim L, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P261, DOI 10.1109/ISSRE.2015.7381819
   [Anonymous], 2019, ANDROID BACKUP EXTRA
   [Anonymous], 2018, KERAS PYTHON DEEP LE
   [Anonymous], 2019, ANDROID BACKUP EXTRA
   [Anonymous], 2016, 2016 IEEE 24th International Conference on Program Comprehension (ICPC)
   [Anonymous], 2018, WEKA
   Arnaoudova V, 2014, IEEE T SOFTWARE ENG, V40, P502, DOI 10.1109/TSE.2014.2312942
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Bobkov D, 2018, IEEE ROBOT AUTOM LET, V3, P865, DOI 10.1109/LRA.2018.2792681
   Charalampidou S, 2015, P 11 INT C PRED MOD, P1, DOI [10.1145/2810146.2810155, DOI 10.1145/2810146.2810155]
   Charalampidou S, 2018, EUROMICRO CONF PROC, P234, DOI 10.1109/SEAA.2018.00046
   Charalampidou S, 2017, IEEE T SOFTWARE ENG, V43, P954, DOI 10.1109/TSE.2016.2645572
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2017, KNOWL-BASED SYST, V128, P43, DOI 10.1016/j.knosys.2017.04.014
   Fontana FA, 2013, PROC IEEE INT CONF S, P396, DOI 10.1109/ICSM.2013.56
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Griswold W. G., 1993, ACM Transactions on Software Engineering and Methodology, V2, P228, DOI 10.1145/152388.152389
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Hwang K, 2016, INT CONF ACOUST SPEE, P5335, DOI 10.1109/ICASSP.2016.7472696
   Jin J., 2019, DEEPSMELLDETECTOR
   Keras, 2018, FLATT LAYER
   Keras, 2018, MERG LAYER
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kreimer J, 2005, ELECTRON NOTES THEOR, V141, P117, DOI 10.1016/j.entcs.2005.02.059
   Lanza Michele., 2006, Object-Oriented Metrics in Practice, DOI DOI 10.1007/3-540-39538-5
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Liu H, 2018, IEEE INT CONF AUTOM, P385, DOI 10.1145/3238147.3238166
   Liu H, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P1, DOI 10.1109/SANER.2016.14
   Liu H, 2016, IEEE T SOFTWARE ENG, V42, P544, DOI 10.1109/TSE.2015.2503740
   Liu H, 2013, IEEE T SOFTWARE ENG, V39, P1112, DOI 10.1109/TSE.2013.4
   Maiga A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P466, DOI 10.1109/WCRE.2012.56
   Maiga A, 2012, IEEE INT CONF AUTOM, P278, DOI 10.1145/2351676.2351723
   Mäntylä MV, 2006, EMPIR SOFTW ENG, V11, P395, DOI 10.1007/s10664-006-9002-8
   Marinescu C., 2005, IEEE INT C SOFTW MAI
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Maruyama K., 2001, Software Engineering Notes, V26, P31, DOI 10.1145/379377.375233
   Mens T, 2005, J SOFTW MAINT EVOL-R, V17, P247, DOI 10.1002/smr.316
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Mikolov Tomas, 2013, Preprints
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Palangi H, 2016, IEEE-ACM T AUDIO SPE, V24, P694, DOI 10.1109/TASLP.2016.2520371
   Palomba F, 2018, IEEE T SOFTWARE ENG, V44, P977, DOI 10.1109/TSE.2017.2752171
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Pan YW, 2016, PROC CVPR IEEE, P4594, DOI 10.1109/CVPR.2016.497
   Ren SQ, 2017, IEEE T PATTERN ANAL, V39, P1137, DOI 10.1109/TPAMI.2016.2577031
   Sagi O, 2018, WIRES DATA MIN KNOWL, V8, DOI 10.1002/widm.1249
   Sales V, 2013, WORK CONF REVERSE EN, P232, DOI 10.1109/WCRE.2013.6671298
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Silva D, 2014, 22 INT C PROGRAM COM, P146
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   Terra R, 2018, J SYST SOFTWARE, V138, P19, DOI 10.1016/j.jss.2017.11.073
   Tip F, 2003, ACM SIGPLAN NOTICES, V38, P13, DOI 10.1145/949343.949308
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Tsantalis N, 2009, EUR CON SFTWR MTNCE, P119, DOI 10.1109/CSMR.2009.23
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Vaucher S, 2009, WORK CONF REVERSE EN, P145, DOI 10.1109/WCRE.2009.23
   Wang S, 2015, IEEE T KNOWL DATA EN, V27, P1356, DOI 10.1109/TKDE.2014.2345380
   Wu D, 2017, IEEE IJCNN, P2865, DOI 10.1109/IJCNN.2017.7966210
   Xu SH, 2017, PROC INT SYMP SOFTW, P24, DOI 10.1109/ISSRE.2017.35
   Yoshida N, 2012, EUR CON SFTWR MTNCE, P365, DOI 10.1109/CSMR.2012.45
   Zhang K, 2017, IEEE T IMAGE PROCESS, V26, P3142, DOI 10.1109/TIP.2017.2662206
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
NR 73
TC 55
Z9 62
U1 5
U2 27
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2021
VL 47
IS 9
BP 1811
EP 1837
DI 10.1109/TSE.2019.2936376
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UR3QY
UT WOS:000696667700004
DA 2024-07-18
ER

PT J
AU Mäder, P
   Kuschke, T
   Janke, M
AF Maeder, Patrick
   Kuschke, Tobias
   Janke, Mario
TI Reactive Auto-Completion of Modeling Activities
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Unified modeling language; Tools; Task analysis; Computational modeling;
   Adaptation models; Analytical models; Engines; Auto-completion; modeling
   activity; complex-event-processing; CEP; activity recognition; pattern
   matching; recommender
ID PATTERN; UML
AB Assisting and automating software engineering tasks is a state-of-the-art way to support stakeholders of development projects. A common assistance function of IDEs is the auto-completion of source code. Assistance functions, such as auto-completion, are almost entirely missing in modeling tools though auto-completion in general gains continuously more importance in software development. We analyze a user's performed editing operations in order to anticipate modeling activities and to recommend appropriate auto-completions for them. Editing operations are captured as events and modeling activities are defined as complex event patterns, facilitating the matching by complex-event-processing. The approach provides adapted auto-completions reactively upon each editing operation of the user. We implemented the RapMOD prototype as add-in for the modeling tool Sparx Enterprise Architect (TM) . A controlled user experiment with 37 participants performing modeling tasks demonstrated the approach's potential to reduce modeling effort significantly. Users having auto-completions available for a modeling scenario performed the task 27 percent faster, needed to perform 56 percent less actions, and perceived the task 29 percent less difficult.
C1 [Maeder, Patrick; Kuschke, Tobias; Janke, Mario] Tech Univ Ilmenau, Software Engn Safety Crit Syst Grp, D-98693 Ilmenau, Germany.
C3 Technische Universitat Ilmenau
RP Mäder, P (corresponding author), Tech Univ Ilmenau, Software Engn Safety Crit Syst Grp, D-98693 Ilmenau, Germany.
EM patrick.maeder@tu-ilmenau.de; tobias.kuschke@tu-ilmenau.de;
   mario.janke@tu-ilmenau.de
RI Mäder, Patrick/A-1848-2018
OI Mäder, Patrick/0000-0001-6871-2707
FU EU EFRE/TAB grant [2015FE9033]; BMBF [01IS16003B, 01IS14026A]; DFG
   [MA5030/3 1]
FX Our work is funded by the EU EFRE/TAB grant: 2015FE9033, theBMBF grants:
   01IS16003B, 01IS14026A, and the DFGgrant: MA5030/3 1.
CR Adoinavicius G, 2007, IEEE INTELL SYST, V22, P48, DOI 10.1109/MIS.2007.58
   [Anonymous], 2007, PATTERN ORIENTED SOF
   [Anonymous], 2009, OBJECT ORIENTED SOFT
   [Anonymous], 2015, The R Project for Statistical Computing
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Arlow J., 2005, UML UNIFIED PROCESS
   Bergmann G, 2015, LECT NOTES COMPUT SC, V9152, P101, DOI 10.1007/978-3-319-21155-8_8
   Bergmann G, 2012, SOFTW SYST MODEL, V11, P431, DOI 10.1007/s10270-011-0197-9
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Crawley MJ, 2007, The R Book, DOI [10.1002/9780470515075, DOI 10.1002/9780470515075]
   Dávid I, 2014, LECT NOTES COMPUT SC, V8767, P68, DOI 10.1007/978-3-319-11653-2_5
   Deng SG, 2017, IEEE T CYBERNETICS, V47, P1380, DOI 10.1109/TCYB.2016.2545688
   Dobing B, 2008, J DATABASE MANAGE, V19, P1, DOI 10.4018/jdm.2008010101
   Doorenbos R. B., 1995, THESIS MELLON U PITT
   Dotzler G., 2017, ARXIV170803178
   Dyck A, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P291
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   Eclipse Foundation, 2018, ECL MYL
   Fellmann M., 2015, WIRTSCHAFTSINF, P393
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   Foster SR, 2012, PROC INT CONF SOFTW, P222, DOI 10.1109/ICSE.2012.6227191
   Fowler M, 2006, REFACTORING IMPROVIN, V19th
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Holmes R, 2006, IEEE T SOFTWARE ENG, V32, P952, DOI 10.1109/TSE.2006.117
   Hornung T., 2007, P CAISE FOR, V247, P49
   Hornung T., 2007, P 17 ANN WORKSH INF, P127
   Hornung T, 2008, LECT NOTES COMPUT SC, V5231, P265, DOI 10.1007/978-3-540-87877-3_20
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Inozemtseva L., 2014, RECOMMENDATION SYSTE, P77
   Jin XH, 2018, IEEE WORK CONF MIN S, P70, DOI 10.1145/3196398.3196474
   Kircher M., 2004, PATTERN ORIENTED SOF, V3
   Koschmider A, 2011, DATA KNOWL ENG, V70, P483, DOI 10.1016/j.datak.2011.02.002
   Kuschke T, 2013, LECT NOTES COMPUT SC, V8107, P170, DOI 10.1007/978-3-642-41533-3_11
   Kuschke Tobias., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, P551, DOI DOI 10.1145/2642937.2642949
   Lano K., 2005, ADV SYSTEMS DESIGN J
   Li J, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4159
   Luckham D. C., 2002, POWER EVENTS INTRO C, V204
   Mäder P, 2012, J SYST SOFTWARE, V85, P2205, DOI 10.1016/j.jss.2011.10.023
   Mazanek S, 2009, LECT NOTES COMPUT SC, V5795, P322, DOI 10.1007/978-3-642-04425-0_24
   Microsoft Corporation, 2015, MICR VIS STUD 2013
   Murphy-Hill E., 2014, Recommendation Systems in Software Engineering, P223, DOI DOI 10.1007/978-3-642-45135-59
   Murphy-Hill E., 2012, P ACM SIGSOFT 20 INT, P42, DOI [10.1145/2393596. 2393645, DOI 10.1145/2393596.2393645]
   Naujokat S, 2018, INT J SOFTW TOOLS TE, V20, P327, DOI 10.1007/s10009-017-0453-6
   Osman M. H., 2013, INT WORKSHOP EXPERIE, P23
   Paschke A, 2009, LECT NOTES COMPUT SC, V5858, P53, DOI 10.1007/978-3-642-04985-9_8
   Peck R., 2015, Introduction to statistics and data analysis
   Petre M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P722, DOI 10.1109/ICSE.2013.6606618
   Ráth I, 2008, LECT NOTES COMPUT SC, V5063, P107, DOI 10.1007/978-3-540-69927-9_8
   Red Hat, 2015, DROOLS 5 AN INTEGRAT
   REED AV, 1976, MEM COGNITION, V4, P16, DOI 10.3758/BF03213250
   Reggio G., 2013, EESSMOD MODELS, P3
   Schmidt D., 2000, Pattern-Oriented Software Architecture, Patterns for Concurrent and Networked Objects, V2
   Sen S, 2010, SIMUL-T SOC MOD SIM, V86, P109, DOI 10.1177/0037549709340530
   Sparx Systems, 2015, ENTERPRISE ARCHITECT
   Stanford University-Program Analysis & Verification Group, 2015, STANF RAP PROJ
   STANOJEVIC M, 1994, IEEE EXPERT, V9, P46, DOI 10.1109/64.363270
   Steimann F, 2013, LECT NOTES COMPUT SC, V8107, P18, DOI 10.1007/978-3-642-41533-3_2
   Wohlin C., 2012, Experimentation in Software Engineering
   Zuur Alain F., 2009, P1
NR 59
TC 4
Z9 4
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL 1
PY 2021
VL 47
IS 7
BP 1431
EP 1451
DI 10.1109/TSE.2019.2924886
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA TJ6XV
UT WOS:000673623000008
DA 2024-07-18
ER

PT J
AU Iannucci, S
   Abdelwahed, S
   Montemaggio, A
   Hannis, M
   Leonard, L
   King, JS
   Hamilton, JA
AF Iannucci, Stefano
   Abdelwahed, Sherif
   Montemaggio, Andrea
   Hannis, Melissa
   Leonard, Leslie
   King, Jason S.
   Hamilton, John A.
TI A Model-Integrated Approach to Designing Self-Protecting Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computational modeling; Servers; Microwave integrated circuits;
   Predictive models; Security; Planning; Mathematical model; Intrusion
   response system; autonomic security management
ID INTRUSION RESPONSE; FRAMEWORK
AB One of the major trends in research on Self-Protecting Systems is to use a model of the system to be protected to predict its evolution. However, very often, devising the model requires special knowledge of mathematical frameworks, that prevents the adoption of this technique outside of the academic environment. Furthermore, some of the proposed approaches suffer from the curse of dimensionality, as their complexity is exponential in the size of the protected system. In this paper, we introduce a model-integrated approach for the design of Self-Protecting Systems, which automatically generates and solves Markov Decision Processes (MDPs) to obtain optimal defense strategies for systems under attack. MDPs are created in such a way that the size of the state space does not depend on the size of the system, but on the scope of the attack, which allows us to apply it to systems of arbitrary size.
C1 [Iannucci, Stefano] Mississippi State Univ, Dept Comp Sci & Engn, Starkville, MS 39759 USA.
   [Abdelwahed, Sherif] Virginia Commonwealth Univ, Dept Elect & Comp Engn, Richmond, VA 23284 USA.
   [Montemaggio, Andrea; Hannis, Melissa; Hamilton, John A.] Mississippi State Univ, Ctr Cyber Innovat CCI, Starkville, MS 39759 USA.
   [Leonard, Leslie; King, Jason S.] US Army, Engineer Res & Dev Ctr ERDC, Vicksburg, MS 39180 USA.
C3 Mississippi State University; Virginia Commonwealth University;
   Mississippi State University; United States Department of Defense;
   United States Army; U.S. Army Corps of Engineers; U.S. Army Engineer
   Research & Development Center (ERDC)
RP Iannucci, S (corresponding author), Mississippi State Univ, Dept Comp Sci & Engn, Starkville, MS 39759 USA.
EM stefano@dasi.msstate.edu; sabdelwahed@vcu.edu; am4691@cci.msstate.edu;
   mkh149@cci.msstate.edu; Leslie.C.Leonard@erdc.dren.mil;
   Jason.S.King@erdc.dren.mil; hamilton@cci.msstate.edu
RI Iannucci, Stefano/AAV-3630-2021; Montemaggio, Andrea/AAQ-5921-2021
OI Montemaggio, Andrea/0000-0002-0595-5928; Hannis,
   Melissa/0000-0002-3257-1794; Abdelwahed, Sherif/0000-0002-6355-4671
FU U.S Army Engineer Research and Development Center (ERDC)
   [W912HZ-17-C-009]
FX Funding for this work was partially provided by the U.S Army Engineer
   Research and Development Center (ERDC), under Contract W912HZ-17-C-009.
CR Abdelwahed Sherif, 2009, IEEE Transactions on Network and Service Management, V6, P212, DOI 10.1109/TNSM.2009.04.090402
   Albanese M, 2014, IEEE CONF COMM NETW, P472, DOI 10.1109/CNS.2014.6997517
   [Anonymous], 1992, INTRO RANDOM SIGNALS
   [Anonymous], 2018, BROWN UMBC REINFORCE
   [Anonymous], 2017, CORR
   [Anonymous], 2008, ECLIPSE MODELING FRA
   BELLMAN R, 1966, SCIENCE, V153, P34, DOI 10.1126/science.153.3731.34
   Bezivin J., 2005, P OOPSLA WORKSH BEST
   Busoniu L, 2008, IEEE T SYST MAN CY C, V38, P156, DOI 10.1109/TSMCC.2007.913919
   Carasso David., 2012, Exploring splunk
   Cardellini V, 2012, IEEE T SOFTWARE ENG, V38, P1138, DOI 10.1109/TSE.2011.68
   Chen Q, 2016, 2016 IEEE FIRST INTERNATIONAL CONFERENCE ON CONNECTED HEALTH: APPLICATIONS, SYSTEMS AND ENGINEERING TECHNOLOGIES (CHASE), P113, DOI 10.1109/CHASE.2016.58
   Chen Q, 2014, IEEE INTERNET THINGS, V1, P446, DOI 10.1109/JIOT.2014.2349899
   Chopra I, 2014, J SUPERCOMPUT, V67, P585, DOI 10.1007/s11227-013-1019-3
   Cohen F, 1999, COMPUT SECUR, V18, P479, DOI 10.1016/S0167-4048(99)80115-1
   Davis J., 2003, Companion of the 18th annual ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, P82
   Ewing J.M, 2015, THESIS
   Fessi BA, 2014, INFORM SCIENCES, V270, P237, DOI 10.1016/j.ins.2014.02.139
   Foo B, 2005, I C DEPEND SYS NETWO, P508
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Givan R, 2003, ARTIF INTELL, V147, P163, DOI 10.1016/S0004-3702(02)00376-4
   Guangzhi Qu, 2010, International Journal of Computers and Their Applications, V17, P250
   Hamilton J., 1997, DISTRIBUTED SIMULATI, V8
   Hariri S, 2006, CLUSTER COMPUT, V9, P5, DOI 10.1007/s10586-006-4893-0
   HP ArcSight, 2018, SEC INT FAST WORLD
   HUNTER JS, 1986, J QUAL TECHNOL, V18, P203
   Iannucci S, 2016, IEEE IC COMP COM NET
   Iannucci S, 2018, ACM T AUTON ADAP SYS, V13, DOI 10.1145/3168446
   Iannucci S, 2016, PR INT CONF AUTONOM, P157, DOI 10.1109/ICAC.2016.12
   IBM QRadar, 2018, INT SIEM
   Inayat Z, 2016, J NETW COMPUT APPL, V62, P53, DOI 10.1016/j.jnca.2015.12.006
   Irfan M, 2016, SECUR COMMUN NETW, V9, P3790, DOI 10.1002/sec.1538
   Jajodia S, 2011, 2011 - MILCOM 2011 MILITARY COMMUNICATIONS CONFERENCE, P1339, DOI 10.1109/MILCOM.2011.6127490
   Karsai G., 2013, GENERIC MODELING ENV
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kheir N, 2009, 2009 INTERNATIONAL CONFERENCE ON NETWORK AND SERVICE SECURITY, P12
   Ledeczi, 2001, WORKSH INT SIGN PROC, V17, P1
   Menascé DA, 2011, IEEE SOFTWARE, V28, P78, DOI 10.1109/MS.2011.22
   Michlmayr A, 2010, IEEE T SERV COMPUT, V3, P193, DOI 10.1109/TSC.2010.20
   Molnar Z., 2007, P TOOLS EUR WORKSH M
   Moser O, 2012, IEEE T SOFTWARE ENG, V38, P828, DOI 10.1109/TSE.2011.43
   Mu CP, 2010, EXPERT SYST APPL, V37, P2465, DOI 10.1016/j.eswa.2009.07.079
   Neerincx MA, 2003, HUM FAC ER, P283
   Ossenbühl S, 2015, INT CONF IT SECUR, P51, DOI 10.1109/IMF.2015.13
   Pivotal, 2018, SPRING EXPR LANG SPE
   Pradhan S, 2016, J SYST SOFTWARE, V122, P344, DOI 10.1016/j.jss.2016.05.038
   Rasche G, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P405
   Rouvoy R, 2009, LECT NOTES COMPUT SC, V5525, P164, DOI 10.1007/978-3-642-02161-9_9
   Sargent R. G., 1987, 1987 Winter Simulation Conference Proceedings, P33, DOI 10.1145/318371.318379
   Schmerl Bradley R., 2014, P HOTSOS 14, P2
   Shameli-Sendi A, 2015, J NETW COMPUT APPL, V55, P89, DOI 10.1016/j.jnca.2015.05.004
   Shameli-Sendi A, 2014, COMPUT SECUR, V45, P1, DOI 10.1016/j.cose.2014.04.009
   Shameli-Sendi A, 2012, INT J COMPUT SCI NET, V12, P1
   Stakhanova Natalia, 2007, International Journal of Information and Computer Security, V1, P169, DOI 10.1504/IJICS.2007.012248
   Stakhanova N, 2007, 21ST INTERNATIONAL CONFERENCE ON ADVANCED NETWORKING AND APPLICATIONS, PROCEEDINGS, P428, DOI 10.1109/AINA.2007.9
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Tanachaiwiwat S, 2002, ACM T INFORM SYST SE, P1
   Tarski A., 1955, PAC J MATH, V5, P285, DOI DOI 10.2140/PJM.1955.5.285
   Toth T, 2002, 18TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P301, DOI 10.1109/CSAC.2002.1176302
   Yan W, 2012, HICONS 12: PROCEEDINGS OF THE 1ST ACM INTERNATIONAL CONFERENCE ON HIGH CONFIDENCE NETWORKED SYSTEMS, P81
   Zan X., 2010, P 2 INT C SOFTW TECH
   Zonouz SA, 2014, IEEE T PARALL DISTR, V25, P395, DOI 10.1109/TPDS.2013.211
NR 62
TC 3
Z9 3
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2020
VL 46
IS 12
BP 1380
EP 1392
DI 10.1109/TSE.2018.2880218
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA PD6GQ
UT WOS:000597780900006
DA 2024-07-18
ER

PT J
AU Huang, Q
   Xia, X
   Lo, D
   Murphy, GC
AF Huang, Qiao
   Xia, Xin
   Lo, David
   Murphy, Gail C.
TI Automating Intention Mining
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Taxonomy; Linguistics; Data mining; Tuning; Computer bugs; Software;
   Training; Deep Learning; Intention; Issue Report; Empirical Study
ID PREDICTION; ACCURACY
AB Developers frequently discuss aspects of the systems they are developing online. The comments they post to discussions form a rich information source about the system. Intention mining, a process introduced by Di Sorbo et al., classifies sentences in developer discussions to enable further analysis. As one example of use, intention mining has been used to help build various recommenders for software developers. The technique introduced by Di Sorbo et al. to categorize sentences is based on linguistic patterns derived from two projects. The limited number of data sources used in this earlier work introduces questions about the comprehensiveness of intention categories and whether the linguistic patterns used to identify the categories are generalizable to developer discussion recorded in other kinds of software artifacts (e.g., issue reports). To assess the comprehensiveness of the previously identified intention categories and the generalizability of the linguistic patterns for category identification, we manually created a new dataset, categorizing 5,408 sentences from issue reports of four projects in GitHub. Based on this manual effort, we refined the previous categories. We assess Di Sorbo et al.'s patterns on this dataset, finding that the accuracy rate achieved is low (0.31). To address the deficiencies of Di Sorbo et al.'s patterns, we propose and investigate a convolution neural network (CNN)-based approach to automatically classify sentences into different categories of intentions. Our approach optimizes CNN by integrating batch normalization to accelerate the training speed, and an automatic hyperparameter tuning approach to tune appropriate hyperparameters of CNN. Our approach achieves an accuracy of 0.84 on the new dataset, improving Di Sorbo et al.'s approach by 171 percent. We also apply our approach to improve an automated software engineering task, in which we use our proposed approach to rectify misclassified issue reports, thus reducing the bias introduced by such data to other studies. A case study on four open source projects with 2,076 issue reports shows that our approach achieves an average AUC score of 0.687, which improves other baselines by at least 16 percent.
C1 [Huang, Qiao] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310027, Peoples R China.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
   [Murphy, Gail C.] Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1Z4, Canada.
C3 Zhejiang University; Monash University; Singapore Management University;
   University of British Columbia
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
EM tkdsheep@zju.edu.cn; xin.xia@monash.edu; davidlo@smu.edu.sg;
   murphy@cs.ubc.ca
RI Xia, Xin/AAD-6217-2022; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Lo, David/0000-0002-4367-7201
FU National Key Research and Development Program of China [2018YFB1003904];
   NSFC [61602403]
FX We would like to thank Di Sorbo et al. for sharing their replication
   package. We also thank the reviewers for their valuable comments. To
   enable other researchers to replicate and extend our study, we have
   published our source code and our dataset at
   https://github.com/tkdsheep/IntentionMining-TSE.This research was
   partially supported by the National Key Research and Development Program
   of China (2018YFB1003904) and NSFC Program (No. 61602403).
CR Lam AN, 2015, IEEE INT CONF AUTOM, P476, DOI 10.1109/ASE.2015.73
   [Anonymous], 2015, NATURE, DOI [DOI 10.1038/NATURE14539, 10.1038/nature14539]
   [Anonymous], 2018, DOCKER
   [Anonymous], 2018, TENSORFLOW
   [Anonymous], 2018, IMPLEMENTATION KIMS
   [Anonymous], 2015, IEEE I CONF COMP VIS, DOI DOI 10.1109/ICCV.2015.123
   [Anonymous], 2018, VSCODE
   [Anonymous], 2015, ABS150102876 CORR
   [Anonymous], 2011, ACM T INTEL SYST TEC, DOI DOI 10.1145/1961189.1961199
   [Anonymous], 1988, NEURAL NETW S1, DOI DOI 10.1016/0893-6080(88)90469-8
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Begel A, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P195, DOI 10.1109/ICGSE.2008.17
   Bengio Y, 2003, J MACH LEARN RES, V3, P1137, DOI 10.1162/153244303322533223
   Bettenburg Nicolas, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P124, DOI 10.1109/ICPC.2010.46
   Bird S., 2006, P COLING ACL INT PRE, P69, DOI DOI 10.3115/1118108.1118117
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Chaparro O, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P396, DOI 10.1145/3106237.3106285
   Chen GB, 2016, IEEE INT CONF AUTOM, P744, DOI 10.1145/2970276.2970317
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Collobert R, 2008, P 25 ICML, P160, DOI 10.1145/1390156.1390177
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Di Sorbo A, 2015, IEEE INT CONF AUTOM, P12, DOI 10.1109/ASE.2015.12
   Fakhoury S, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P602, DOI 10.1109/SANER.2018.8330265
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Graves A, 2013, INT CONF ACOUST SPEE, P6645, DOI 10.1109/ICASSP.2013.6638947
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Guo L, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P249, DOI 10.1109/ASE.2003.1240314
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Han J, 2012, MOR KAUF D, P1
   Harris ZS, 1954, WORD, V10, P146, DOI 10.1080/00437956.1954.11659520
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hinton, 2012, NEURAL NETWORKS MACH
   Hofmann T, 1999, SIGIR'99: PROCEEDINGS OF 22ND INTERNATIONAL CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P50, DOI 10.1145/312624.312649
   Hou DQ, 2013, PROC IEEE INT CONF S, P60, DOI 10.1109/ICSM.2013.17
   Huang J, 2005, IEEE T KNOWL DATA EN, V17, P299, DOI 10.1109/TKDE.2005.50
   Ioffe S, 2015, PR MACH LEARN RES, V37, P448
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim Y, 2014, IEEE ASME INT C ADV, P1747, DOI 10.1109/AIM.2014.6878336
   Knauss E, 2015, REQUIR ENG, V20, P383, DOI 10.1007/s00766-014-0205-z
   Kotthoff L, 2017, J MACH LEARN RES, V18
   Lenz I, 2015, INT J ROBOT RES, V34, P705, DOI 10.1177/0278364914549607
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Nair V., 2017, ABS170205701 CORR
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Panichella Sebastiano, 2012, 2012 IEEE 20th International Conference on Program Comprehension, P63
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Panichella S, 2014, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSME.2014.47
   Panichella Sebastiano, 2014, P 22 INT C PROGR COM, P177
   Petrosyan G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P869, DOI 10.1109/ICSE.2015.97
   Platt JC, 1999, ADVANCES IN KERNEL METHODS, P185
   Prasetyo PK, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P596, DOI 10.1109/ICSM.2012.6405330
   Qiaona Hong, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P323, DOI 10.1109/ICSM.2011.6080799
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Shaowei Wang, 2011, 2011 18th Working Conference on Reverse Engineering, P92, DOI 10.1109/WCRE.2011.72
   Shihab E., 2011, Proceedings of the ACM SIGSOFT symposium and the European Conference on Foundations of Software Engineering, P300
   Silver D, 2016, NATURE, V529, P484, DOI 10.1038/nature16961
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Spencer D., 2009, CARD SORTING DESIGNI
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Szegedy C, 2016, PROC CVPR IEEE, P2818, DOI 10.1109/CVPR.2016.308
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Thung F., 2014, P 22 INT C PROGR COM, P110, DOI 10.1145/2597008.2597157
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xia X, 2015, AUTOMAT SOFTW ENG, V22, P75, DOI 10.1007/s10515-014-0162-2
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Zhang ML, 2014, IEEE T KNOWL DATA EN, V26, P1819, DOI 10.1109/TKDE.2013.39
   Zhang Y., 2017, P 8 INT JOINT C NAT, V1, P253, DOI DOI 10.48550/ARXIV.1510.03820
   Zimmermann T, 2012, PROC INT CONF SOFTW, P1074, DOI 10.1109/ICSE.2012.6227112
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 87
TC 53
Z9 59
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2020
VL 46
IS 10
BP 1098
EP 1119
DI 10.1109/TSE.2018.2876340
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OA7HI
UT WOS:000577950900004
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Nair, V
   Yu, Z
   Menzies, T
   Siegmund, N
   Apel, S
AF Nair, Vivek
   Yu, Zhe
   Menzies, Tim
   Siegmund, Norbert
   Apel, Sven
TI Finding Faster Configurations Using FLASH
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software systems; Optimization; Throughput; Storms; Task analysis; Cloud
   computing; Performance prediction; search-based SE; configuration;
   multi-objective optimization; sequential model-based methods
ID EVOLUTIONARY ALGORITHMS; PERFORMANCE PREDICTION
AB Finding good configurations of a software system is often challenging since the number of configuration options can be large. Software engineers often make poor choices about configuration or, even worse, they usually use a sub-optimal configuration in production, which leads to inadequate performance. To assist engineers in finding the better configuration, this article introduces Flash, a sequential model-based method that sequentially explores the configuration space by reflecting on the configurations evaluated so far to determine the next best configuration to explore. Flash scales up to software systems that defeat the prior state-of-the-art model-based methods in this area. Flash runs much faster than existing methods and can solve both single-objective and multi-objective optimization problems. The central insight of this article is to use the prior knowledge of the configuration space (gained from prior runs) to choose the next promising configuration. This strategy reduces the effort (i.e., number of measurements) required to find the better configuration. We evaluate Flash using 30 scenarios based on 7 software systems to demonstrate that Flash saves effort in 100 and 80 percent of cases in single-objective and multi-objective problems respectively by up to several orders of magnitude compared to state-of-the-art techniques.
C1 [Nair, Vivek; Yu, Zhe; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
   [Siegmund, Norbert] Bauhaus Univ Weimar, Dept Comp Sci & Engn, D-99423 Weimar, Germany.
   [Apel, Sven] Univ Passau, Dept Math & Informat, Innstr 33, D-94032 Passau, Germany.
C3 North Carolina State University; Bauhaus-Universitat Weimar; University
   of Passau
RP Nair, V (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM vivekaxl@gmail.com; azhe9@gmail.com; tim.menzies@gmail.com;
   norbert.siegmund@uni-weimar.de; apel@uni-passau.de
RI Menzies, Tim/X-7680-2019
OI Menzies, Tim/0000-0002-5040-3196; Yu, Zhe/0000-0002-6841-1725; Apel,
   Sven/0000-0003-3687-2233
FU German Research Foundation [AP 206/6, AP 206/7, AP 206/11]; DFG [SI
   2171/2, SI 2171/3-1]
FX Apel's work has been supported by the German Research Foundation (AP
   206/6, AP 206/7, and AP 206/11). Siegmund's work is supported by the DFG
   under the contracts SI 2171/2 and SI 2171/3-1.
CR Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   Alipourfard O, 2017, PROCEEDINGS OF NSDI '17: 14TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION, P469
   [Anonymous], 2011, CIDR
   [Anonymous], 2018, IEEE T SOFTW ENG
   Bergstra J., 2013, ICML, pI
   Bergstra J., 2011, Adv. Neural Inf. Process. Syst., V24
   Biedermann S., 2014, P 6 USENIX C HOT TOP, P9
   Biedermann S., 2014, ACM International Conference Proceeding Series, V2014, P6
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Brochu E., 2010, arXiv:1012.2599
   Chen JF, 2018, INFORM SOFTWARE TECH, V95, P281, DOI 10.1016/j.infsof.2017.08.007
   Coello CAC, 2004, LECT NOTES COMPUT SC, V2972, P688
   Dalibard V, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P479, DOI 10.1145/3038912.3052662
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Domingos P., 2000, Proceedings. KDD-2000. Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P71, DOI 10.1145/347090.347107
   Drabik J., 2003, U.S. Patent App, Patent No. [10/460 518, 10460518]
   Efron B., 1993, INTRO BOOTSTRAP, DOI 10.1007/978-1-4899-4541-9
   Fu W., 2016, ARXIV160902613
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Golovin D, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1487, DOI 10.1145/3097983.3098043
   Guo JM, 2018, EMPIR SOFTW ENG, V23, P1826, DOI 10.1007/s10664-017-9573-6
   Guo JM, 2013, IEEE INT CONF AUTOM, P301, DOI 10.1109/ASE.2013.6693089
   Harman M, 2009, NY TIMES BK REV, P4
   Henard C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P517, DOI 10.1109/ICSE.2015.69
   Hill DN, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1813, DOI 10.1145/3097983.3098184
   Hoffman M.W., 2014, NIPS WORKSHOP BAYESI, P1
   Jamshidi P, 2016, I S MOD ANAL SIM COM, P39, DOI 10.1109/MASCOTS.2016.17
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kocaguneli E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P882, DOI 10.1109/ICSE.2013.6606637
   Krall J, 2015, IEEE T SOFTWARE ENG, V41, P1001, DOI 10.1109/TSE.2015.2432024
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Nair V, 2018, AUTOMAT SOFTW ENG, V25, P247, DOI 10.1007/s10515-017-0225-2
   Nair V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3106237.3106238
   Oh J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P61, DOI 10.1145/3106237.3106273
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Rasmussen CE, 2004, LECT NOTES ARTIF INT, V3176, P63, DOI 10.1007/978-3-540-28650-9_4
   Sarkar A, 2015, IEEE INT CONF AUTOM, P342, DOI 10.1109/ASE.2015.45
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Shahriari B, 2016, P IEEE, V104, P148, DOI 10.1109/JPROC.2015.2494218
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Siegmund N, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P284, DOI 10.1145/2786805.2786845
   Siegmund N, 2012, PROC INT CONF SOFTW, P167, DOI 10.1109/ICSE.2012.6227196
   Snoek J., 2012, Advances in Neural Information Processing Systems, V25, DOI DOI 10.48550/ARXIV.1206.2944
   Su J, 2006, 2006 3RD ANNUAL INTERNATIONAL CONFERENCE ON MOBILE AND UBIQUITOUS SYSTEMS - WORKSHOPS, P5
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Van Aken D, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1009, DOI 10.1145/3035918.3064029
   Van Veldhuizen DA, 2000, EVOL COMPUT, V8, P125, DOI 10.1162/106365600568158
   Venkataraman S, 2016, 13TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION (NSDI '16), P363
   Wang PD, 2006, IEEE ICMA 2006: PROCEEDING OF THE 2006 IEEE INTERNATIONAL CONFERENCE ON MECHATRONICS AND AUTOMATION, VOLS 1-3, PROCEEDINGS, P1259
   Wang S, 2016, PROC INT CONF SOFTW, P631, DOI 10.1145/2884781.2884880
   Wang Tiantian, 2013, P 2013 9 JOINT M FDN, P455
   Wang Y, 2016, PROCEEDINGS OF THE NINTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING (WSDM'16), P103, DOI 10.1145/2835776.2835824
   Wang ZY, 2016, J ARTIF INTELL RES, V55, P361, DOI 10.1613/jair.4806
   Xu TY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P307, DOI 10.1145/2786805.2786852
   Yadwadkar NJ, 2017, PROCEEDINGS OF THE 2017 SYMPOSIUM ON CLOUD COMPUTING (SOCC '17), P452, DOI 10.1145/3127479.3131614
   Zhang QF, 2007, IEEE T EVOLUT COMPUT, V11, P712, DOI 10.1109/TEVC.2007.892759
   Zhu H, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2191, DOI 10.1145/3097983.3098134
   Zhu YQ, 2017, PROCEEDINGS OF THE 2017 SYMPOSIUM ON CLOUD COMPUTING (SOCC '17), P338, DOI 10.1145/3127479.3128605
   Zuluaga M., 2013, P INT C MACH LEARN
   Zuluaga M, 2016, J MACH LEARN RES, V17
NR 63
TC 62
Z9 65
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL 1
PY 2020
VL 46
IS 7
BP 794
EP 811
DI 10.1109/TSE.2018.2870895
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ML2UM
UT WOS:000549327500006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chari, G
   Garbervetsky, D
   Marr, S
   Ducasse, S
AF Chari, Guido
   Garbervetsky, Diego
   Marr, Stefan
   Ducasse, Stephane
TI Fully Reflective Execution Environments: Virtual Machines for More
   Flexible Software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Reflection; virtual machines; metaobject protocols; dynamic adaptation
ID PARTIAL BEHAVIORAL REFLECTION; LANGUAGE; EFFICIENT
AB VMs are complex pieces of software that implement programming language semantics in an efficient, portable, and secure way. Unfortunately, mainstream VMs provide applications with few mechanisms to alter execution semantics or memory management at run time. We argue that this limits the evolvability and maintainability of running systems for both, the application domain, e.g., to support unforeseen requirements, and the VM domain, e.g., to modify the organization of objects in memory. This work explores the idea of incorporating reflective capabilities into the VM domain and analyzes its impact in the context of software adaptation tasks. We characterize the notion of a fully reflective VM, a kind of VM that provides means for its own observability and modifiability at run time. This enables programming languages to adapt the underlying VM to changing requirements. We propose a reference architecture for such VMs and present TruffleMATE as a prototype for this architecture. We evaluate the mechanisms TruffleMATE provides to deal with unanticipated dynamic adaptation scenarios for security, optimization, and profiling aspects. In contrast to existing alternatives, we observe that TruffleMATE is able to handle all scenarios, using less than 50 lines of code for each, and without interfering with the application's logic.
C1 [Chari, Guido; Garbervetsky, Diego] UBA, Dept Computat, FCEyN, RA-1053 Buenos Aires, DF, Argentina.
   [Chari, Guido; Garbervetsky, Diego] ICC CONICET, RA-1053 Buenos Aires, DF, Argentina.
   [Marr, Stefan] Univ Kent, Canterbury CT2 7NZ, Kent, England.
   [Ducasse, Stephane] Inria Lille Nord Europe, RMoD Project Team, F-59650 Villeneuve Dascq, France.
C3 University of Buenos Aires; University of Kent
RP Chari, G (corresponding author), UBA, Dept Computat, FCEyN, RA-1053 Buenos Aires, DF, Argentina.; Chari, G (corresponding author), ICC CONICET, RA-1053 Buenos Aires, DF, Argentina.
EM gchari@dc.uba.ar; diegog@dc.uba.ar; s.marr@kent.ac.uk;
   stephane.ducasse@inria.fr
RI Marr, Stefan/JXN-7556-2024
OI Marr, Stefan/0000-0001-9059-5180; Ducasse, Stephane/0000-0001-6070-6599
FU ANPCYT [PICT 2013-2341, PICT 2014-1656, PICT 2015-1718]; UBACYT [384];
   CONICET [11220130100688CO, 11220150100931CO]; Austrian Science Fund
   (FWF) [I2491-N31]
FX We would like to thank the anonymous reviewers, as well as Laurence
   Tratt, for their constructive feedback which contributed to
   significantly improve this paper. This work was partially supported by
   the projects, ANPCYT PICT 2013-2341, ANPCYT PICT 2014-1656, ANPCYT PICT
   2015-1718, UBACYT 384, CONICET PIP 2014/16 No11220130100688CO, CONICET
   PIP 2015/17 No11220150100931CO. Stefan Marr was partially funded by a
   grant of the Austrian Science Fund (FWF), project number I2491-N31 while
   working at the Johannes Kepler University Linz, Austria.
CR Alpern B, 2005, IBM SYST J, V44, P399, DOI 10.1147/sj.442.0399
   Ammons G, 1997, ACM SIGPLAN NOTICES, V32, P85, DOI 10.1145/258916.258924
   [Anonymous], 1997, Object-oriented software construction
   Aracic I., 2006, OVERVIEW CAESARJ, P135, DOI [10.1007/11687061_5, DOI 10.1007/11687061_5]
   Arnaud JB, 2010, LECT NOTES COMPUT SC, V6141, P117, DOI 10.1007/978-3-642-13953-6_7
   Arnold M, 2005, INT SYM CODE GENER, P51, DOI 10.1109/CGO.2005.9
   Artzi S, 2008, LECT NOTES COMPUT SC, V5142, P542, DOI 10.1007/978-3-540-70592-5_23
   Asai K, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P97
   Attardi G., 1989, ECOOP '89. Proceedings of the 1989 European Conference on Object-Oriented Programming, P243
   Baresi Luciano., 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research. FoSER'10, P17, DOI [10.1145/1882362.1882367, DOI 10.1145/1882362.1882367]
   Bergel A, 2012, COMPUT LANG SYST STR, V38, P16, DOI 10.1016/j.cl.2011.10.002
   Black A.P., 2009, PHARO EXAMPLE
   Bockisch Christoph., 2004, AOSD 04 P 3 INT C AS, P83
   Bracha G, 2004, ACM SIGPLAN NOTICES, V39, P331, DOI 10.1145/1035292.1029004
   BRIOT JP, 1989, SIGPLAN NOTICES, V24, P419, DOI 10.1145/74878.74921
   Bruni C., 2014, P INT WORKSH SMALLT
   Cazzola W, 2018, COMPUT LANG SYST STR, V51, P71, DOI 10.1016/j.cl.2017.07.003
   CHAMBERS C, 1989, SIGPLAN NOTICES, V24, P49, DOI 10.1145/74878.74884
   Chari G., 2015, 2015 ACM INT S NEW I, P240, DOI DOI 10.1145/2814228.2814241
   Chari G., 2016, P 12 S DYN LANG DLS, P60, DOI [10.1145/2989225.2989234, DOI 10.1145/2989225.2989234]
   Chari G, 2017, PROC IEEE ACM INT C, P229, DOI 10.1109/ICSE-C.2017.144
   Chevalier-Boisvert M., 2011, P 7 S DYN LANG, P61, DOI DOI 10.1145/2047849.2047858
   Chiba S., 1996, Object Technologies for Advanced Software. Second JSSST International Symposium ISOTAS'96. Proceedings, P157
   COINTE P, 1987, SIGPLAN NOTICES, V22, P156, DOI 10.1145/38807.38822
   Denker M, 2008, LECT NOTES BUS INF P, V11, P218, DOI 10.1007/978-3-540-69824-1_13
   Dmitriev M., 2003, TECH REP
   Dufour B, 2003, ACM SIGPLAN NOTICES, V38, P149, DOI 10.1145/949343.949320
   Dufour B., 2003, 18 ANN ACM SIGPLAN C, P306, DOI [10.1145/949344.949425, DOI 10.1145/949344.949425]
   Dyer Robert., 2008, Proceedings of the 7th international conference on A sped-oriented software development, P191, DOI 10.1145/1353482.1353505
   Ernst D., 2005, OOPSLA, P211, DOI [DOI 10.1145/1103845.1094828, 10.1145/1094811.1094828, DOI 10.1145/1094811.1094828]
   Frampton D., 2009, 2009 ACM International Conference on Virtual Execution Environments, P81, DOI [DOI 10.1145/1508293.1508305, 10.1145/1508293.1508305]
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   Haupt M, 2009, IET SOFTW, V3, P201, DOI 10.1049/iet-sen.2007.0121
   Haupt M, 2010, ITICSE 2010: PROCEEDINGS OF THE 2010 ACM SIGCSE ANNUAL CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P18
   Hicks M, 2005, ACM T PROGR LANG SYS, V27, P1049, DOI 10.1145/381694.378798
   Hirschfeld R, 2008, J OBJECT TECHNOL, V7, P125, DOI 10.5381/jot.2008.7.3.a4
   Holten D, 2007, 4TH IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P47, DOI 10.1109/VISSOF.2007.4290699
   Ingalls D., 1997, SIGPLAN Notices, V32, P318, DOI 10.1145/263700.263754
   Kalibera T, 2013, PROCEEDINGS OF THE ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT (ISMM '13), P63
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G., 1991, The Art of the Metaobject Protocol
   MAES P, 1987, SIGPLAN NOTICES, V22, P147
   Marr Stefan, 2017, ACM SIGPLAN Notices, V52, P120, DOI 10.1145/3093334.2989232
   Marr S, 2015, ACM SIGPLAN NOTICES, V50, P821, DOI [10.1145/2814270.2814275, 10.1145/2858965.2814275]
   Marr S, 2015, ACM SIGPLAN NOTICES, V50, P545, DOI [10.1145/2737924.2737963, 10.1145/2813885.2737963]
   Matthiesen T, 2015, CAMB MIDDLE E STUD, V46, P197
   McAffer J, 1995, LECT NOTES COMPUT SC, V952, P190
   Mens T., 2008, Software Evolution
   Plattner H., 2009, P ACM SIGMOD INT C M, P1, DOI DOI 10.1145/1559845.1559846
   Plattner H., 2013, COURSE IN MEMORY DAT
   Polito G., 2015, Onward! 2015
   Redmond B, 2002, LECT NOTES COMPUT SC, V2374, P205
   Ressia J., 2010, P 5 WORKSH MOD RUN T, P37
   Ressia J, 2012, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2012.6227167
   Röthlisberger D, 2008, COMPUT LANG SYST STR, V34, P46, DOI 10.1016/j.cl.2007.05.001
   Röthlisberger D, 2012, IEEE T SOFTWARE ENG, V38, P579, DOI 10.1109/TSE.2011.42
   Smith B. C., 1984, P 11 ACM SIGACT SIGP, P23, DOI [DOI 10.1145/800017.800513, 10.1145/800017.800513]
   Tanter É, 2003, ACM SIGPLAN NOTICES, V38, P27, DOI 10.1145/949343.949309
   Tanter E., 2009, TECH REP
   Ungar D., 2005, OOPSLA 2005, P11, DOI DOI 10.1145/1094855.1094865
   Vacchi E, 2015, COMPUT LANG SYST STR, V43, P1, DOI 10.1016/j.cl.2015.02.001
   Verwaest T, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P959
   Verwaest T, 2010, ACM SIGPLAN NOTICES, V45, P774, DOI 10.1145/1932682.1869522
   Villazón A, 2011, SCI COMPUT PROGRAM, V76, P1015, DOI 10.1016/j.scico.2010.04.007
   Wand M., 1986, 1986 P C LISP FUNCT, P298, DOI [10.1145/319838.319871, DOI 10.1145/319838.319871]
   Wernli E., 2014, MODULARITY, P1, DOI 10.1145/2577080.2577081
   Whaley John., 2000, JAVA 00, P78
   Wimmer C, 2013, ACM T ARCHIT CODE OP, V9, DOI 10.1145/2400682.2400689
   Woss Andreas, 2014, P 2014 INT C PRINCIP, P133, DOI DOI 10.1145/2647508.2647517
   Wrthinger T., 2013, P 2013 ACM INT S NEW, P187, DOI [10.1145/2509578.2509581, DOI 10.1145/2509578.2509581]
   Würthinger T, 2013, ACM SIGPLAN NOTICES, V48, P73, DOI 10.1145/2480360.2384587
   Würthinger T, 2017, ACM SIGPLAN NOTICES, V52, P662, DOI [10.1145/3062341.3062381, 10.1145/3140587.3062381]
   Zhuang X, 2006, ACM SIGPLAN NOTICES, V41, P263, DOI 10.1145/1133981.1134012
   Zibin Yoav., 2007, Proceedings of the the 6th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on The Foundations of Soft- ware Engineering, ESEC-FSE '07, P75, DOI DOI 10.1145/1287624
NR 74
TC 2
Z9 2
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2019
VL 45
IS 9
BP 858
EP 876
DI 10.1109/TSE.2018.2812715
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA IZ6LH
UT WOS:000487192800002
OA Green Published, Green Accepted
DA 2024-07-18
ER

PT J
AU Peters, F
   Tun, TT
   Yu, YJ
   Nuseibeh, B
AF Peters, Fayola
   Tun, Thein Than
   Yu, Yijun
   Nuseibeh, Bashar
TI Text Filtering and Ranking for Security Bug Report Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Security cross words; security related keywords; security bug reports;
   text filtering; ranking; prediction models; transfer learning
ID DEFECT PREDICTION; CLASSIFICATION
AB Security bug reports can describe security critical vulnerabilities in software products. Bug tracking systems may contain thousands of bug reports, where relatively few of them are security related. Therefore finding unlabelled security bugs among them can be challenging. To help security engineers identify these reports quickly and accurately, text-based prediction models have been proposed. These can often mislabel security bug reports due to a number of reasons such as class imbalance, where the ratio of non-security to security bug reports is very high. More critically, we have observed that the presence of security related keywords in both security and non-security bug reports can lead to the mislabelling of security bug reports. This paper proposes FARSEC, a framework for filtering and ranking bug reports for reducing the presence of security related keywords. Before building prediction models, our framework identifies and removes non-security bug reports with security related keywords. We demonstrate that FARSEC improves the performance of text-based prediction models for security bug reports in 90 percent of cases. Specifically, we evaluate it with 45,940 bug reports from Chromium and four Apache projects. With our framework, we mitigate the class imbalance issue and reduce the number of mislabelled security bug reports by 38 percent.
C1 [Peters, Fayola; Nuseibeh, Bashar] Univ Limerick, Lero Irish Software Res Ctr, Limerick V94 T9PX, Ireland.
   [Tun, Thein Than; Yu, Yijun; Nuseibeh, Bashar] Open Univ, Dept Comp & Commun, Milton Keynes MK7 6AA, Bucks, England.
C3 University of Limerick; Open University - UK
RP Peters, F (corresponding author), Univ Limerick, Lero Irish Software Res Ctr, Limerick V94 T9PX, Ireland.
EM fayola.peters@lero.ie; thein.tun@open.ac.uk; yijun.yu@open.ac.uk;
   bashar.nuseibeh@lero.ie
OI Yu, Yijun/0000-0002-7154-8570; Nuseibeh, Bashar/0000-0002-3476-053X
FU Science Foundation Ireland [13/RC/2094]; European Research Council
   [291652 - ASAP]; EPSRC, UK; EPSRC [EP/R013144/1] Funding Source: UKRI
FX The authors would like to thank Keerthi Thomas, Arosha Bandara and
   Blaine Price for their initial contributions to this work. We would also
   like to thank the anonymous reviewers for their insightful comments and
   suggestions for improvements to an earlier draft. This work was
   supported in part by Science Foundation Ireland grant 13/RC/2094, by the
   European Research Council (Advanced Grant 291652 - ASAP) and by the
   EPSRC, UK.
CR Afzal W, 2010, ASIA PAC SOFWR ENG, P414, DOI 10.1109/APSEC.2010.54
   [Anonymous], P S BOOTC SCI SECUR
   [Anonymous], 2006, TEXT MINING HDB ADV
   [Anonymous], 2004, P 17 INT FLOR ART IN
   [Anonymous], CLOJURE DATA ANAL CO
   [Anonymous], 2004, Hackers and Painters, Big Ideas from the Computer Age
   [Anonymous], 2012, P ACM SIGSOFT 20 INT
   [Anonymous], 2001, Ph.D. Thesis
   Bishop C. M., 1995, NEURAL NETWORKS PATT
   Bozorgi M., 2010, Proceedings of of 16th International Conference of on Knowledge discovery and data mining, P105
   Breiman L., 2001, Mach. Learn., V45, P5
   Chawla I, 2014, INT CONF CONTEMP, P376, DOI 10.1109/IC3.2014.6897203
   COVER TM, 1967, IEEE T INFORM THEORY, V13, P21, DOI 10.1109/TIT.1967.1053964
   Feather Martin, 2008, Proceedings of the 4th international workshop on Predictor models in software engineering, P79
   Gegick Michael, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P11, DOI 10.1109/MSR.2010.5463340
   Haibo He, 2009, IEEE Transactions on Knowledge and Data Engineering, V21, P1263, DOI 10.1109/TKDE.2008.239
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Hindle A., 2011, P 8 WORK C MIN SOFTW, P163, DOI DOI 10.1145/1985441.1985466
   Hoare C.A.R., 1961, Communications of the ACM, V4, P321, DOI [DOI 10.1145/366622.366647, DOI 10.1145/366622.366644]
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Jurafsky D., 2009, SPEECH LANGUAGE PROC
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Manning C.D., 2008, SCORING TERM WEIGHTI, P100
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Ohira M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P518, DOI 10.1109/MSR.2015.78
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Peters F, 2012, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.2012.6227194
   Pletea D., 2014, 11 WORKING C MSR, P348, DOI [10.1145/2597073.2597117, DOI 10.1145/2597073.2597117]
   Quinlan JR, 1996, PROCEEDINGS OF THE THIRTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE EIGHTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE, VOLS 1 AND 2, P725
   Sahami M., 1998, P LEARN TEXT CAT 199, VVolume 62, P98
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Shen Y, 2013, IEEE IMTC P, P1045
   Shin Y, 2013, EMPIR SOFTW ENG, V18, P25, DOI 10.1007/s10664-011-9190-8
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Su W., 2015, P INT C THEOR INF RE, P349, DOI 10.1145/2808194.2809481
   Theisen C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P199, DOI 10.1109/ICSE.2015.148
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Walden J, 2014, PROC INT SYMP SOFTW, P23, DOI 10.1109/ISSRE.2014.32
   Weyuker EJ, 2008, EMPIR SOFTW ENG, V13, P539, DOI 10.1007/s10664-008-9082-8
   Wijayasekara D, 2012, C HUM SYST INTERACT, P89, DOI 10.1109/HSI.2012.22
   WOLPERT DH, 1992, NEURAL NETWORKS, V5, P241, DOI 10.1016/S0893-6080(05)80023-1
   Zimmermann Thomas, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P421, DOI 10.1109/ICST.2010.32
NR 50
TC 33
Z9 39
U1 0
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2019
VL 45
IS 6
BP 615
EP 631
DI 10.1109/TSE.2017.2787653
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ID5AF
UT WOS:000471686800005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Jan, S
   Panichella, A
   Arcuri, A
   Briand, L
AF Jan, Sadeeq
   Panichella, Annibale
   Arcuri, Andrea
   Briand, Lionel
TI Automatic Generation of Tests to Exploit XML Injection Vulnerabilities
   in Web Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Evolutionary testing; XML injection; security testing
ID SEARCH; OPTIMIZATION; ALGORITHMS
AB Modern enterprise systems can be composed of many web services (e.g., SOAP and RESTful). Users of such systems might not have direct access to those services, and rather interact with them through a single-entry point which provides a GUI (e.g., a web page or a mobile app). Although the interactions with such entry point might be secure, a hacker could trick such systems to send malicious inputs to those internal web services. A typical example is XML injection targeting SOAP communications. Previous work has shown that it is possible to automatically generate such kind of attacks using search-based techniques. In this paper, we improve upon previous results by providing more efficient techniques to generate such attacks. In particular, we investigate four different algorithms and two different fitness functions. A large empirical study, involving also two industrial systems, shows that our technique is effective at automatically generating XML injection attacks.
C1 [Jan, Sadeeq; Panichella, Annibale; Arcuri, Andrea; Briand, Lionel] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SNT, L-4365 Esch Sur Alzette, Luxembourg.
   [Jan, Sadeeq] Univ Engn & Technol, Peshawar 814, Pakistan.
   [Arcuri, Andrea] Westerdals Oslo ACT, N-0134 Oslo, Norway.
C3 University of Luxembourg; Westerdals Oslo School of Arts Communication &
   Technology
RP Jan, S (corresponding author), Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SNT, L-4365 Esch Sur Alzette, Luxembourg.; Jan, S (corresponding author), Univ Engn & Technol, Peshawar 814, Pakistan.
EM jan@svv.lu; panichella@svv.lu; arcand@westerdals.no; briand@svv.lu
RI Panichella, Annibale/AAJ-8443-2020
OI Jan, Sadeeq/0000-0002-1139-8507; Briand, Lionel/0000-0002-1393-1010;
   Panichella, Annibale/0000-0002-7395-3588
FU European Research Council (ERC) under the European Union [694277]
FX This project has received funding from the European Research Council
   (ERC) under the European Union's Horizon 2020 research and innovation
   programme (grant agreement No 694277). We thank Cu D. Nguyen for his
   contributions in our previous work on which we built.
CR Adamczyk P, 2011, REST: FROM RESEARCH TO PRACTICE, P35, DOI 10.1007/978-1-4419-8303-9_2
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Alshraideh M, 2006, SOFTW TEST VERIF REL, V16, P175, DOI 10.1002/stvr.354
   [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], 2013, ESSENTIALS METAHEURI
   [Anonymous], 2005, COMP PERFORMANCE DIF, DOI [DOI 10.1109/CIMCA.2005.1631619, 10.1109/CIMCA.2005.1631619]
   [Anonymous], 2004, Wiley InterScience electronic collection.
   Appelt D., 2015, 2015 IEEE 8 INT C SO, P1, DOI DOI 10.1109/ICST.2015.7102581
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Avancini A, 2011, IEEE INT WORK C SO, P85, DOI 10.1109/SCAM.2011.7
   Baker R.D., 1995, Randomization Tests
   Bau J, 2010, P IEEE S SECUR PRIV, P332, DOI 10.1109/SP.2010.27
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Briand L. C., 2006, Genetic Programming and Evolvable Machines, V7, P145, DOI 10.1007/s10710-006-9003-9
   Chen JF, 2014, SERV ORIENTED COMPUT, V8, P1, DOI 10.1007/s11761-013-0139-1
   Chunlei W., 2014, INT C INFORM COMMUNI, DOI [10.1049/cp.2014.0589, DOI 10.1049/CP.2014.0589]
   Clarke J., 2009, SQL Injection Attacks and Defense, V1st
   COBB HG, 1993, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P523
   CONOVER WJ, 1981, AM STAT, V35, P124, DOI 10.2307/2683975
   De Jong K.A., 1975, ANAL BEHAV CLASS GEN
   Deb Kalyanmoy, 2014, International Journal of Artificial Intelligence and Soft Computing, V4, P1, DOI 10.1504/IJAISC.2014.059280
   Del Grosso C, 2008, COMPUT OPER RES, V35, P3125, DOI 10.1016/j.cor.2007.01.013
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Fisher RA, 1936, ANN EUGENIC, V7, P179, DOI 10.1111/j.1469-1809.1936.tb02137.x
   Fraser G, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685612
   Gallagher T, 2008, US Patent, Patent No. [7,343,626, 7343626]
   García S, 2009, J HEURISTICS, V15, P617, DOI 10.1007/s10732-008-9080-4
   Ghosh A., 2012, ADV EVOLUTIONARY COM
   Goldberg D.E., 1991, FDN GENETIC ALGORITH, V1, P69
   GREFENSTETTE JJ, 1986, IEEE T SYST MAN CYB, V16, P122, DOI 10.1109/TSMC.1986.289288
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Harman Mark., 2007, Proceedings of the 2007 International Symposium on Software Testing and Analysis. ISSTA'07, P73, DOI [DOI 10.1145/1273463.1273475, http://doi.acm.org/10.1145/1273463.1273475]
   Herrera F, 1998, ARTIF INTELL REV, V12, P265, DOI 10.1023/A:1006504901164
   HOLM S, 1979, SCAND J STAT, V6, P65
   Huhns MN, 2005, IEEE INTERNET COMPUT, V9, P75, DOI 10.1109/MIC.2005.21
   Jan S, 2017, IEEE INT CONF SOFTW, P356, DOI 10.1109/ICST.2017.39
   Jan Sadeeq., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, P12, DOI [10.1145/2931037.2931042, DOI 10.1145/2931037.2931042]
   Jensen M, 2009, COMPUT SCI-RES DEV, V24, P185, DOI 10.1007/s00450-009-0092-6
   Kiezun A, 2009, PROC INT CONF SOFTW, P199, DOI 10.1109/ICSE.2009.5070521
   Mainka Christian, 2012, 2012 IEEE Eighth World Congress on Services, P163, DOI 10.1109/SERVICES.2012.7
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Mei JJ, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P1411, DOI 10.1109/ITNG.2009.34
   Metcalf L., 2016, CYBERSECURITY APPL M, V1st
   Oliveira R. A., 2012, P IND TRACK 13 ACM I, P2, DOI 10.1145/24051462405148
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Panichella A, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P15, DOI 10.1109/SST.2015.10
   Picek S, 2013, 2013 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P3103
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Ransome J., 2013, Core Software Security: Security at the Source
   Rawat S., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P531, DOI 10.1109/ICSTW.2011.9
   Rosa TM, 2013, IEEE SECUR PRIV, V11, P46, DOI 10.1109/MSP.2012.83
   SCHAFFER JD, 1989, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P51
   Shamshiri S, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1367, DOI 10.1145/2739480.2754696
   Smith J. E., 1996, Parallel Problem Solving from Nature - PPSN IV. International Conference on Evolutionary Computation - The 4th International Conference on Parallel Problem Solving from Nature. Proceedings, P441, DOI 10.1007/3-540-61723-X_1008
   Sprent P., 2011, FISHER EXACT TEST IN, P524
   Stuttard D., 2011, WEB APPL HACKERS HDB
   Thome J., 2014, P 7 INT WORKSH SEARC, P5, DOI DOI 10.1145/2593833.2593835
   Turpe S., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P198, DOI 10.1109/ICSTW.2011.96
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wolpert D. H., 1997, IEEE Transactions on Evolutionary Computation, V1, P67, DOI 10.1109/4235.585893
NR 64
TC 15
Z9 17
U1 0
U2 19
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2019
VL 45
IS 4
BP 335
EP 362
DI 10.1109/TSE.2017.2778711
PG 28
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HU4MK
UT WOS:000465248900002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lu, H
   Wang, S
   Yue, T
   Ali, S
   Nygård, JF
AF Lu, Hong
   Wang, Shuai
   Yue, Tao
   Ali, Shaukat
   Nygard, Jan F.
TI Automated Refactoring of OCL Constraints with Search
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Constraints; metrics/measurement; methodologies; CASE
ID GENETIC ALGORITHM; MAINTAINABILITY; QUALITY; DESIGN; SYSTEM; MODEL
AB Object Constraint Language (OCL) constraints are typically used to provide precise semantics to models developed with the Unified Modeling Language (UML). When OCL constraints evolve regularly, it is essential that they are easy to understand and maintain. For instance, in cancer registries, to ensure the quality of cancer data, more than one thousand medical rules are defined and evolve regularly. Such rules can be specified with OCL. It is, therefore, important to ensure the understandability and maintainability of medical rules specified with OCL. To tackle such a challenge, we propose an automated search-based OCL constraint refactoring approach (SBORA) by defining and applying four semantics-preserving refactoring operators (i.e., Context Change, Swap, Split and Merge) and three OCL quality metrics (Complexity, Coupling, and Cohesion) to measure the understandability and maintainability of OCL constraints. We evaluate SBORA along with six commonly used multi-objective search algorithms (e.g., Indicator-Based Evolutionary Algorithm (IBEA)) by employing four case studies from different domains: healthcare (i.e., cancer registry system from Cancer Registry of Norway (CRN)), Oil&Gas (i.e., subsea production systems), warehouse (i.e., handling systems), and an open source case study named SEPA. Results show: 1) IBEA achieves the best performance among all the search algorithms and 2) the refactoring approach along with IBEA can manage to reduce on average 29.25 percent Complexity and 39 percent Coupling and improve 47.75 percent Cohesion, as compared to the original OCL constraint set from CRN. To further test the performance of SBORA, we also applied it to refactor an OCL constraint set specified on the UML 2.3 metamodel and we obtained positive results. Furthermore, we conducted a controlled experiment with 96 subjects and results show that the understandability and maintainability of the original constraint set can be improved significantly from the perspectives of the 96 participants of the controlled experiment.
C1 [Lu, Hong; Wang, Shuai; Yue, Tao; Ali, Shaukat] Simula Res Lab, Martin Linges Vei 25, N-1364 Fornebu, Norway.
   [Nygard, Jan F.] Canc Registry Norway, Ullernchausseen 64, N-0379 Oslo, Norway.
C3 University of Oslo
RP Yue, T (corresponding author), Simula Res Lab, Martin Linges Vei 25, N-1364 Fornebu, Norway.
EM honglu@simula.no; shuai@simula.no; tao@simula.no; shaukat@simula.no;
   Jan.Nygard@kreftregisteret.no
RI Nygård, Jan F/JLM-8879-2023; yue, tao/H-6783-2013
OI Nygård, Jan F/0000-0001-9655-7003; Yue, Tao/0000-0003-3262-5577; Ali,
   Shaukat/0000-0002-9979-3519
FU RFF Hovedstaden [239063]; RCN [240024/F20, 203461/O30]; MBT4CPS project
   [240013/O70]; Certus SFI; EU Horizon 2020 [645463]
FX This research was funded by the RFF Hovedstaden funded MBE-CR project
   (grant no number. 239063). Hong Lu is also supported by the RCN funded
   Zen-Configurator project (grant no. 240024/F20). Shuai Wang is also
   supported by the RCN funded Certus SFI (grant no. 203461/O30). Tao Yue
   and Shaukat Ali are also supported by the RCN funded Zen-Configurator
   project, MBT4CPS project (grant no. 240013/O70), Certus SFI, and EU
   Horizon 2020 funded U-Test project (grant no. 645463).
CR Ali S, 2013, IEEE T SOFTWARE ENG, V39, P1376, DOI 10.1109/TSE.2013.17
   [Anonymous], 2001, P 6 INT C PAR PROBL
   [Anonymous], 2015, P 19 INT C SOFTW PRO
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Behjati R, 2013, INFORM SOFTWARE TECH, V55, P607, DOI 10.1016/j.infsof.2012.09.006
   Berman S, 2002, INT J PROD RES, V40, P3995, DOI 10.1080/00207540210146990
   Briand Lionel, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P793, DOI 10.1007/978-3-642-33666-9_50
   Brownlee Jason., 2012, CLEVER ALGORITHMS NA
   Cabot J, 2007, SCI COMPUT PROGRAM, V68, P179, DOI 10.1016/j.scico.2007.05.001
   Cabot J., 2006, P MOD SIZ METR WORKS
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Clark T, 2002, LECT NOTES COMPUT SC, V2263, P4
   Correa A, 2009, IET SOFTW, V3, P69, DOI 10.1049/iet-sen.2008.0022
   Correa A, 2007, SOFTW SYST MODEL, V6, P113, DOI 10.1007/s10270-006-0023-y
   Correa A, 2007, LECT NOTES COMPUT SC, V4735, P76
   de Oliveira Barros M., 2011, Relatorios Tecnicos DIA/UNIRIO, V5, P1
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Durillo J. J., 2008, Parallel Problem Solving from Nature - PPSN X. 10th International Conference, P661, DOI 10.1007/978-3-540-87700-4_66
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   ElMaraghy HA, 2005, INT J FLEX MANUF SYS, V17, P261, DOI 10.1007/s10696-006-9028-7
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Genero M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P207
   Genero M, 2007, EMPIR SOFTW ENG, V12, P517, DOI 10.1007/s10664-007-9038-4
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Hofman R, 2011, EMPIR SOFTW ENG, V16, P278, DOI 10.1007/s10664-010-9140-x
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Jensen und A.C., 2010, Proceedings of the 12th Annual Conference on Genetic and Evolutionary Computation. GECCO '10, P1341
   Larsen IK, 2009, EUR J CANCER, V45, P1218, DOI 10.1016/j.ejca.2008.10.037
   LITTLE RJA, 1988, J AM STAT ASSOC, V83, P1198, DOI 10.2307/2290157
   Lu H, 2016, IEEE INT CONF SOFTW, P57, DOI 10.1109/ICST.2016.17
   Lu H, 2016, INFORM SOFTWARE TECH, V72, P68, DOI 10.1016/j.infsof.2015.12.004
   MAHADEVAN B, 1990, INT J PROD RES, V28, P1611, DOI 10.1080/00207549008942819
   Markovic SA, 2005, LECT NOTES COMPUT SC, V3713, P280, DOI 10.1007/11557432_21
   Misbhauddin M, 2015, EMPIR SOFTW ENG, V20, P206, DOI 10.1007/s10664-013-9283-7
   Nebro AJ, 2009, INT J INTELL SYST, V24, P726, DOI 10.1002/int.20358
   Nie KM, 2013, LECT NOTES COMPUT SC, V8107, P370, DOI 10.1007/978-3-642-41533-3_23
   O'Brien MP, 2001, PROG COMPREHEN, P71, DOI 10.1109/WPC.2001.921715
   O'Keeffe M, 2008, J SOFTW MAINT EVOL-R, V20, P345, DOI 10.1002/smr.378
   OMG, 2006, OBJ CONSTR LANG V2 0
   OMG, 2010, UML 2 3 SPEC
   Perepletchikov M, 2007, 2007 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P329, DOI 10.1109/ASWEC.2007.17
   Reid SC, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P64, DOI 10.1109/METRIC.1997.637166
   Reimann J., 2012, Proceedings of the 12th Workshop on OCL and Textual Modelling, P7
   Reynoso L, 2010, INFORM SCIENCES, V180, P3837, DOI 10.1016/j.ins.2010.06.028
   Schach S. R., 2002, IEE Proceedings-Software, V149, P18, DOI 10.1049/ip-sen:20020198
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   STACY W, 1995, COMMUN ACM, V38, P57, DOI 10.1145/203241.203256
   Suny? G., 2001, LNCS, P134, DOI DOI 10.1007/3-540-45441-1_11
   Wang S, 2016, PROC INT CONF SOFTW, P631, DOI 10.1145/2884781.2884880
   Wang S, 2016, LECT NOTES COMPUT SC, V9764, P191, DOI 10.1007/978-3-319-42061-5_12
   Wang S, 2013, INT CONF QUAL SOFTW, P75, DOI 10.1109/QSIC.2013.51
   Wohlin C., 1999, EXPT SOFTWARE ENG IN
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
   Zitzler E., 2000, EUROGEN 2001 Evol. Methods Des. Optim. Control Appl. Ind. Probl, P95
NR 57
TC 7
Z9 8
U1 1
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2019
VL 45
IS 2
BP 148
EP 170
DI 10.1109/TSE.2017.2774829
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HL5XJ
UT WOS:000458805300002
OA Bronze
DA 2024-07-18
ER

PT J
AU Armaly, A
   Rodeghero, P
   McMillan, C
AF Armaly, Ameer
   Rodeghero, Paige
   McMillan, Collin
TI A Comparison of Program Comprehension Strategies by Blind and Sighted
   Programmers
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Program comprehension; accessibility technology; blindness
ID COGNITIVE-PROCESSES; PEOPLE; TASKS
AB Programmers who are blind use a screen reader to speak source code one word at a time, as though the code were text. This process of reading is in stark contrast to sighted programmers, who skim source code rapidly with their eyes. At present, it is not known whether the difference in these processes has effects on the program comprehension gained from reading code. These effects are important because they could reduce both the usefulness of accessibility tools and the generalizability of software engineering studies to persons with low vision. In this paper, we present an empirical study comparing the program comprehension of blind and sighted programmers. We found that both blind and sighted programmers prioritize reading method signatures over other areas of code. Both groups obtained an equal and high degree of comprehension, despite the different reading processes.
C1 [Armaly, Ameer; Rodeghero, Paige; McMillan, Collin] Univ Notre Dame, Dept Comp Sci & Engn, Notre Dame, IN 46556 USA.
C3 University of Notre Dame
RP Armaly, A (corresponding author), Univ Notre Dame, Dept Comp Sci & Engn, Notre Dame, IN 46556 USA.
EM aarmaly@nd.edu; prodeghe@nd.edu; cmc@nd.edu
FU National Science Foundation Graduate Research Fellowship Program
   [DGE-1313583]; US National Science Foundation [CCF-1452959, CNS-1510329]
FX The authors would like to thank the several participants in our user
   studies for their careful attention to detail. In addition, the authors
   strongly thank the anonymous referees for greatly improving the
   manuscript. This material is based upon work supported by the National
   Science Foundation Graduate Research Fellowship Program under Grant No.
   DGE-1313583. This work is supported in part by the US National Science
   Foundation CCF-1452959 and CNS-1510329 grants. Any opinions, findings,
   and conclusions expressed herein are the authors' and do not necessarily
   reflect those of the sponsors.
CR Albusays K, 2016, 9TH IEEE/ACM INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2016), P82, DOI [10.1145/2897586.2897616, 10.1109/CHASE.2016.025]
   Alexander Steve., 1998, ComputerWorld, V32, P86
   Armaly A., 2005, LINUX J, V2005, P6
   Armaly A, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P683, DOI 10.1145/2889160.2891041
   Bajracharya S.K., 2010, P 18 ACM SIGSOFT INT, P157, DOI 10.1145/1882291.1882316
   Baker CM, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3043, DOI 10.1145/2702123.2702589
   Bednarik R., 2006, Proceedings. ETRA 2006. Symposium on Eye Tracking Research and Applications, P125, DOI 10.1145/1117309.1117356
   BIGGERSTAFF TJ, 1993, PROC INT CONF SOFTW, P482, DOI 10.1109/ICSE.1993.346017
   Blenkhorn P, 1998, J NETW COMPUT APPL, V21, P17, DOI 10.1006/jnca.1998.0060
   BROOKS R, 1977, INT J MAN MACH STUD, V9, P737, DOI 10.1016/S0020-7373(77)80039-4
   CORBI TA, 1989, IBM SYST J, V28, P294, DOI 10.1147/sj.282.0294
   Crary D., 2008, Employer bias thwarts many blind workers
   CROSBY ME, 1990, COMPUTER, V23, P24, DOI 10.1109/2.48797
   Davison JW, 2000, BELL LABS TECH J, V5, P44, DOI 10.1002/bltj.2221
   Dearman D, 2005, PROG COMPREHEN, P297, DOI 10.1109/WPC.2005.5
   Franqueiro KennethG., 2006, Proceedings of the 8th International ACM SIGACCESS Conference on Computers and Accessibility - Assets '06, P241, DOI DOI 10.1145/1168987.1169035
   GLINERT EP, 1992, COMMUN ACM, V35, P32, DOI 10.1145/129875.129876
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Harman M, 1997, PROG COMPREHEN, P70, DOI 10.1109/WPC.1997.601266
   Hodson B., 2004, COMPUTER WORLD
   Kevic K, 2017, J SYST SOFTWARE, V128, P252, DOI 10.1016/j.jss.2016.03.030
   Khambadkar Vinitha., 2013, Proceedings of the 26th Annual ACM Symposium on User Interface Software and Technology, UIST '13, P301
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   LETOVSKY S, 1987, J SYST SOFTWARE, V7, P325, DOI 10.1016/0164-1212(87)90032-X
   Mcmillan C, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522930
   Microsoft, 2014, WIND XP ACC
   Rajlich V, 2002, PROG COMPREHEN, P271, DOI 10.1109/WPC.2002.1021348
   Raman T. V., 1996, Human Factors in Computing Systems. Common Ground. CHI 96 Conference Proceedings, P66, DOI 10.1145/238386.238405
   Rayner K, 2003, BEHAV BRAIN SCI, V26, P507, DOI 10.1017/S0140525X03520106
   Rodeghero P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P390, DOI 10.1145/2568225.2568247
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   Sanchez Jaime., 2005, EXTENDED ABSTRACTS H, P1769
   Schweikhardt W., 1982, P INT C APL APL 82, P325, DOI DOI 10.1145/800071.802260
   Scupin R, 1997, HUM ORGAN, V56, P233, DOI 10.17730/humo.56.2.x335923511444655
   Shard B., 2012, P S EYE TRACK RES AP, P381
   Singer Janice, 1997, Proceedings of the 1997 Conference of the Centre for Advanced Studies on Collaborative Research. CASCON '97, P21
   Starke J, 2009, PROC IEEE INT CONF S, P157, DOI 10.1109/ICSM.2009.5306335
   Stefik A, 2013, ACM T COMPUT EDUC, V13, DOI 10.1145/2534973
   Stefik A, 2011, CONF PROC INT SYMP C, P213, DOI 10.1109/ICPC.2011.33
   Stefik A, 2011, SIGCSE 11: PROCEEDINGS OF THE 42ND ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P571
   Stefik A, 2009, INT C PROGRAM COMPRE, P293, DOI 10.1109/ICPC.2009.5090064
   Stylos J, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P195
   Uwano H., 2005, Eye Tracking Research and Applications Symposium (ETRA), V2005, P133
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
NR 45
TC 14
Z9 18
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2018
VL 44
IS 8
BP 712
EP 724
DI 10.1109/TSE.2017.2729548
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GQ6CY
UT WOS:000441791100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Petke, J
   Harman, M
   Langdon, WB
   Weimer, W
AF Petke, Justyna
   Harman, Mark
   Langdon, William B.
   Weimer, Westley
TI Specialising Software for Different Downstream Applications Using
   Genetic Improvement and Code Transplantation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Genetic improvement; GI; code transplants; code specialisation; SAT;
   ImageMagick; GraphicsMagick
ID SEARCH; GENERATION
AB Genetic improvement uses automated search to find improved versions of existing software. Genetic improvement has previously been concerned with improving a system with respect to all possible usage scenarios. In this paper, we show how genetic improvement can also be used to achieve specialisation to a specific set of usage scenarios. We use genetic improvement to evolve faster versions of a C++ program, a Boolean satisfiability solver called MiniSAT, specialising it for three different applications, each with their own characteristics. Our specialised solvers achieve between 4 and 36 percent execution time improvement, which is commensurate with efficiency gains achievable using human expert optimisation for the general solver. We also use genetic improvement to evolve faster versions of an image processing tool called ImageMagick, utilising code from GraphicsMagick, another image processing tool which was forked from it. We specialise the format conversion functionality to greyscale images and colour images only. Our specialised versions achieve up to 3 percent execution time improvement.
C1 [Petke, Justyna] UCL, CREST, London WC1E 6BT, England.
   [Harman, Mark; Langdon, William B.] UCL, London WC1E 6BT, England.
   [Weimer, Westley] Univ Virginia, Charlottesville, VA 22903 USA.
C3 University of London; University College London; University of London;
   University College London; University of Virginia
RP Petke, J (corresponding author), UCL, CREST, London WC1E 6BT, England.
EM j.petke@ucl.ac.uk; mark.harman@ucl.ac.uk; W.Langdon@cs.ucl.ac.uk;
   weimer@cs.virginia.edu
OI Petke, Justyna/0000-0002-7833-6044
FU EPSRC [EP/J017515/1] Funding Source: UKRI
CR Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   [Anonymous], SER FOSER 10
   [Anonymous], 2015, COMP MAT P 10 GEN EV
   [Anonymous], 2008, 2008 GENETIC EVOLUTI
   [Anonymous], 1993, GENETIC PROGRAMMING
   [Anonymous], 2009, 2009 12 INT C THEOR
   [Anonymous], 2015, Handbook of Genetic Programming Applications, DOI [DOI 10.1007/978-3-319-20883-1_8, DOI 10.1007/978-3-319-20883-18]
   [Anonymous], PARTIAL EVALUATION M
   [Anonymous], 1993, Partial Evaluation and Automatic Program Generation
   Ansotegui C., 2012, LNCS, P410, DOI DOI 10.1007/978-3-642-31612-8_31
   Arcuri A, 2008, LECT NOTES COMPUT SC, V5361, P61
   Arito Franco, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P45, DOI 10.1007/978-3-642-33119-0_5
   Baader Franz, 1998, TERM REWRITING ALL
   Banbara M, 2010, LECT NOTES COMPUT SC, V6397, P112, DOI 10.1007/978-3-642-16242-8_9
   Barr E. T., 2015, ISSTA, P257
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   BECKMAN L, 1976, ARTIF INTELL, V7, P319, DOI 10.1016/0004-3702(76)90011-4
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Binkley D, 2015, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2015.7335396
   Binkley DW, 2006, FORM ASP COMPUT, V18, P103, DOI 10.1007/s00165-005-0077-6
   Bruce BR, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1327, DOI 10.1145/2739480.2754752
   Codish M, 2012, J AUTOM REASONING, V49, P53, DOI 10.1007/s10817-010-9211-0
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Colanzi TE, 2013, J SYST SOFTWARE, V86, P970, DOI 10.1016/j.jss.2012.07.041
   Colbourn C. J., 2013, COVERING ARRAY TABLE
   Consel C., 1998, ACM COMPUT SURV, V30
   D'Silva V, 2008, IEEE T COMPUT AID D, V27, P1165, DOI 10.1109/TCAD.2008.923410
   de Freitas FG, 2011, LECT NOTES COMPUT SC, V6956, P18, DOI 10.1007/978-3-642-23716-4_5
   Di Penta Massimiliano, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P27, DOI 10.1007/978-3-642-33119-0_2
   Draves S., 1998, ACM COMPUTING SYRVEY, V30
   Dwyer M., 1998, ACM COMPUT SURV, V30
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Ershov A. P., 1978, ESSENCE COMPUTATION, P391
   Ferrucci F., 2014, Softw. Proj. Manag. Chang. World, P373
   Fuhs C., 2011, SAT BASED TERMINATIO
   Futamura Y., 1971, Systems, Computers, Controls, V54-C, P721
   Futamura Yoshihiko, 1987, IFIP TC2 WORKSH PART, P133
   Gabel M, 2010, 18 ACM SIGSOFT INT S, P147
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Gomard C. K., 1989, P 11 IFIP WORLD COMP, P1139
   Haraldsson A., 1978, POPL 78, P195
   Harman M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P5, DOI 10.1145/2648511.2648513
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2014, LECT NOTES COMPUT SC, V8636, P247
   Harman M, 2013, WORK CONF REVERSE EN, P1, DOI 10.1109/WCRE.2013.6671274
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Harman M, 2012, IEEE INT CONF AUTOM, P1, DOI 10.1145/2351676.2351678
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Harman M, 2011, COMPUTER, V44, P31, DOI 10.1109/MC.2011.263
   Harman M, 2010, IEEE INT WORK C SO, P7, DOI 10.1109/SCAM.2010.28
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Ishizaki K., 2011, P WORKSH PAR DISTR S, P35, DOI [10.1145/2002962.2002970, DOI 10.1145/2002962.2002970]
   Jarvisalo Matti, 2012, P 15 INT C THEOR APP, P369
   Langdon William B., 2014, Genetic Programming. 17th European Conference (EuroGP 2014). Revised Selected Papers: LNCS 8599, P87, DOI 10.1007/978-3-662-44303-3_8
   Langdon W.B., 2010, 2010 IEEE WORLD C CO, P2376, DOI [10.1109/CEC.2010.5585922, DOI 10.1109/CEC.2010.5585922]
   Langdon WB, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P951, DOI 10.1145/2576768.2598244
   Langdon WB, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1063, DOI 10.1145/2739480.2754652
   Langdon WB, 2015, IEEE T EVOLUT COMPUT, V19, P118, DOI 10.1109/TEVC.2013.2281544
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2013, SOFTWARE QUAL J, V21, P421, DOI 10.1007/s11219-013-9208-0
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Li D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P527, DOI 10.11455/2568225.2568321
   Manotas I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P503, DOI 10.11455/2568225.2568297
   Mansoor U, 2017, SOFTWARE QUAL J, V25, P529, DOI 10.1007/s11219-016-9309-7
   Marques-Silva J, 2008, WODES' 08: PROCEEDINGS OF THE 9TH INTERNATIONAL WORKSHOP ON DISCRETE EVENT SYSTEMS, P74
   Marques-Silva J, 2009, FRONT ARTIF INTEL AP, V185, P131, DOI 10.3233/978-1-58603-929-5-131
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Milicevic Aleksandar, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering (ICSE). Proceedings, P609, DOI 10.1109/ICSE.2015.77
   Mkaouer W, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1263, DOI 10.1145/2576768.2598366
   Nanba T., 2011, Proceedings of the 2011 Second International Conference on Networking and Computing (ICNC 2011), P271, DOI 10.1109/ICNC.2011.49
   Newsham Z, 2014, LECT NOTES COMPUT SC, V8561, P252, DOI 10.1007/978-3-319-09284-3_20
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Orlov M, 2011, IEEE T EVOLUT COMPUT, V15, P166, DOI 10.1109/TEVC.2010.2052622
   Ouni A, 2017, INFORM SOFTWARE TECH, V83, P55, DOI 10.1016/j.infsof.2016.11.007
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Petke Justyna, 2014, Genetic Programming. 17th European Conference (EuroGP 2014). Revised Selected Papers: LNCS 8599, P137, DOI 10.1007/978-3-662-44303-3_12
   Petke Justyna, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P257, DOI 10.1007/978-3-642-39742-4_21
   Petke Justyna, 2013, P ESEC FSE 2013, DOI [DOI 10.1145/2491411.2491436, 10.1145/2491411.2491436]
   Poli R., 2008, A Field Guide to Genetic Programming
   Prestwich S, 2009, FRONT ARTIF INTEL AP, V185, P75, DOI 10.3233/978-1-58603-929-5-75
   Räihä O, 2010, COMPUT SCI REV, V4, P203, DOI 10.1016/j.cosrev.2010.06.001
   Schäfer M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P71, DOI 10.1145/1985793.1985804
   Schulte E, 2014, ACM SIGPLAN NOTICES, V49, P639, DOI 10.1145/2541940.2541980
   Sitthi-amorn P, 2011, ACM T GRAPHIC, V30, DOI 10.1145/2024156.2024186
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Vizel Y, 2015, P IEEE, V103, P2021, DOI 10.1109/JPROC.2015.2455034
   White DR, 2011, IEEE T EVOLUT COMPUT, V15, P515, DOI 10.1109/TEVC.2010.2083669
   Williams R., 2003, P IJCAI 03, P1173
   Wu F, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1375, DOI 10.1145/2739480.2754648
   Yamada A., 2015, 2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST), P1
   Yue Jia, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P269, DOI 10.1007/978-3-319-22183-0_22
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
   Zhang Y, 2008, LECT NOTES COMPUT SC, V5025, P88, DOI 10.1007/978-3-540-69062-7_8
NR 97
TC 21
Z9 21
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2018
VL 44
IS 6
BP 574
EP 594
DI 10.1109/TSE.2017.2702606
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GJ4FE
UT WOS:000435335100004
OA Green Published
DA 2024-07-18
ER

PT J
AU Tian, ZZ
   Liu, T
   Zheng, QH
   Zhuang, E
   Fan, M
   Yang, ZJ
AF Tian, Zhenzhou
   Liu, Ting
   Zheng, Qinghua
   Zhuang, Eryue
   Fan, Ming
   Yang, Zijiang
TI Reviving Sequential Program Birthmarking for Multithreaded Software
   Plagiarism Detection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software plagiarism detection; multithreaded program; software
   birthmark; thread-oblivious birthmark
ID OBFUSCATION; SYSTEM; THEFT; CODE
AB As multithreaded programs become increasingly popular, plagiarism of multithreaded programs starts to plague the software industry. Although there has been tremendous progress on software plagiarism detection technology, existing dynamic birthmark approaches are applicable only to sequential programs, due to the fact that thread scheduling nondeterminism severely perturbs birthmark generation and comparison. We propose a framework called TOB (Thread-oblivious dynamic Birthmark) that revives existing techniques so they can be applied to detect plagiarism of multithreaded programs. This is achieved by thread-oblivious algorithms that shield the influence of thread schedules on executions. We have implemented a set of tools collectively called TOB-PD (TOB based Plagiarism Detection tool) by applying TOB to three existing representative dynamic birthmarks, including SCSSB (System Call Short Sequence Birthmark), DYKIS (DYnamic Key Instruction Sequence birthmark) and JB (an API based birthmark for Java). Our experiments conducted on large number of binary programs show that our approach exhibits strong resilience against state-of-the-art semantics-preserving code obfuscation techniques. Comparisons against the three existing tools SCSSB, DYKIS and JB show that the new framework is effective for plagiarism detection of multithreaded programs. The tools, the benchmarks and the experimental results are all publicly available.
C1 [Tian, Zhenzhou; Zhuang, Eryue; Fan, Ming] Xi An Jiao Tong Univ, Dept Comp Sci & Technol, Minist Educ, Key Lab Intelligent Networks & Network Secur MOEK, Xian 710049, Shaanxi, Peoples R China.
   [Tian, Zhenzhou] Xian Univ Posts & Telecommun, Sch Comp Sci & Technol, Xian 710121, Shaanxi, Peoples R China.
   [Liu, Ting; Zheng, Qinghua] Xi An Jiao Tong Univ, Minist Educ, Key Lab Intelligent Networks & Network Secur MOEK, Sch Elect & Informat Engn, Xian 710049, Shaanxi, Peoples R China.
   [Yang, Zijiang] Western Michigan Univ, Dept Comp Sci, Kalamazoo, MI 49008 USA.
   [Yang, Zijiang] Xi An Jiao Tong Univ, Dept Comp Sci & Technol, Xian 710049, Shaanxi, Peoples R China.
C3 Xi'an Jiaotong University; Xi'an University of Posts &
   Telecommunications; Xi'an Jiaotong University; Western Michigan
   University; Xi'an Jiaotong University
RP Tian, ZZ (corresponding author), Xi An Jiao Tong Univ, Dept Comp Sci & Technol, Minist Educ, Key Lab Intelligent Networks & Network Secur MOEK, Xian 710049, Shaanxi, Peoples R China.; Tian, ZZ (corresponding author), Xian Univ Posts & Telecommun, Sch Comp Sci & Technol, Xian 710121, Shaanxi, Peoples R China.
EM tianzhenzhou@xupt.edu.cn; tingliu@mail.xjtu.edu.cn;
   qhzheng@mail.xjtu.edu.cn; zhuangeryue@stu.xjtu.edu.cn;
   fanming911025@stu.xjtu.edu.cn; zijiang.yang@wmich.edu
OI Tian, Zhenzhou/0000-0001-7608-8908
FU National Key Research and Development Program of China [2016YFB1000903];
   National Science Foundation of China [91418205, 61472318, 61532015,
   61532004, 61672419, 61632015, 61602369, 71501156, 61373116]; Fok
   Ying-Tong Education Foundation [151067]; Ministry of Education
   Innovation Research Team [IRT13035]; Science and Technology Project in
   Shaanxi Province of China [2016KTZDGY04-01, 2016GY-092]; Fundamental
   Research Funds for the Central Universities
FX The research was supported in part by National Key Research and
   Development Program of China (2016YFB1000903), National Science
   Foundation of China under grants (91418205, 61472318, 61532015,
   61532004, 61672419, 61632015, 61602369, 71501156, 61373116), Fok
   Ying-Tong Education Foundation (151067), Ministry of Education
   Innovation Research Team (IRT13035), Science and Technology Project in
   Shaanxi Province of China (2016KTZDGY04-01, 2016GY-092), and the
   Fundamental Research Funds for the Central Universities. Any opinions,
   findings, and conclusions expressed in this material are those of the
   authors and do not necessarily reflect the views of the funding
   agencies. Ting Liu is the corresponding author.
CR [Anonymous], 2011, BENCHMARKING MODERN
   [Anonymous], ICPC 14
   [Anonymous], P INT S FUT SOFTW TE
   [Anonymous], 2005, P 2005 ACM S APPL CO, DOI DOI 10.1145/1066677.1066753
   [Anonymous], 2012, P 2 ACM C DATA APPL, DOI DOI 10.1145/2133601.2133640
   [Anonymous], PROC 24 US NIX CONF
   Chae DK, 2013, PROCEEDINGS OF THE 22ND ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT (CIKM'13), P1577, DOI 10.1145/2505515.2507848
   Chaki Sagar., 2011, Proceedings of the 17th ACM SIGKDD in-ternational conference on Knowledge discovery and data mining, P15
   Chan PPF, 2013, IEEE T INF FOREN SEC, V8, P101, DOI 10.1109/TIFS.2012.2223685
   Chen K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P175, DOI 10.1145/2568225.2568286
   Choi S, 2009, J SYST SOFTWARE, V82, P862, DOI 10.1016/j.jss.2008.11.848
   Collberg C, 2004, ACM SIGPLAN NOTICES, V39, P107, DOI 10.1145/996893.996856
   Collberg C., 2003, IEEE Security & Privacy, V1, P40, DOI 10.1109/MSECP.2003.1219058
   Collberg CS, 2002, IEEE T SOFTWARE ENG, V28, P735, DOI 10.1109/TSE.2002.1027797
   Cosma G, 2012, IEEE T COMPUT, V61, P379, DOI 10.1109/TC.2011.223
   Crussell Jonathan, 2012, Computer Security - ESORICS 2012. Proceedings 17th European Symposium on Research in Computer Security, P37, DOI 10.1007/978-3-642-33167-1_3
   Cui HM, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P337
   Hemel A., 2011, P 8 WORK C MIN SOFTW, P63
   Jhi YC, 2015, IEEE T SOFTWARE ENG, V41, P925, DOI 10.1109/TSE.2015.2418777
   Jhi YC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P756, DOI 10.1145/1985793.1985899
   JONASSEN I, 1995, PROTEIN SCI, V4, P1587, DOI 10.1002/pro.5560040817
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kim H, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P301, DOI 10.1145/1985793.1985835
   Kuhn HW, 2005, NAV RES LOG, V52, P7, DOI 10.1002/nav.20053
   Li C., 2007, VLDB, P303
   Lim HI, 2012, IEICE T INF SYST, VE95D, P565, DOI 10.1587/transinf.E95.D.565
   Lim HI, 2009, INFORM SOFTWARE TECH, V51, P1338, DOI 10.1016/j.infsof.2009.04.011
   Linn C., 2003, P 10 ACM C COMP COMM, P290, DOI DOI 10.1145/948109.948149
   Liu Chao, 2006, Proc. 12th ACMSIGKDD Int'l Con. on Knowledge Discovery and Data Mining (KDD 06), P872, DOI DOI 10.1145/1150402.1150522
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Luo LN, 2017, IEEE T SOFTWARE ENG, V43, P1157, DOI 10.1109/TSE.2017.2655046
   Luo LN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P389, DOI 10.1145/2635868.2635900
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   Min-Jae Kim, 2010, Proceedings of the 2010 13th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing (ISORC 2010). Volume I: Main Symposium, P80, DOI 10.1109/ISORC.2010.23
   Myles G, 2004, LECT NOTES COMPUT SC, V3225, P404
   Olszewski M, 2009, ACM SIGPLAN NOTICES, V44, P97, DOI 10.1145/1508284.1508256
   Park H, 2011, COMPUT J, V54, P108, DOI 10.1093/comjnl/bxp095
   Prechelt L, 2002, J UNIVERS COMPUT SCI, V8, P1016
   Preda MD, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1387673.1387674
   Qu Y, 2015, J SYST SOFTWARE, V108, P193, DOI 10.1016/j.jss.2015.06.015
   Rigoutsos I, 1998, BIOINFORMATICS, V14, P55, DOI 10.1093/bioinformatics/14.1.55
   Roundy KA, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2522968.2522972
   Sagot M.-F., 1996, Combinatorial Pattern Matching. 7th Annual Symposium, CPM 96. Proceedings, P186
   SCHULER D., 2007, ASE 07, P274, DOI 10.1145/1321631.1321672
   Tamada H, 2004, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P569
   Tian Z., 2016, J CYBER SECUR, V3, P52
   Tian Z., 2014, INT C SOFTW ENG KNOW, P740
   Tian ZZ, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P734, DOI 10.1145/2889160.2892653
   Tian ZZ, 2016, J SYST SOFTWARE, V119, P136, DOI 10.1016/j.jss.2016.06.014
   Tian ZZ, 2015, IEEE T SOFTWARE ENG, V41, P1217, DOI 10.1109/TSE.2015.2454508
   Tian ZZ, 2013, 2013 IEEE 15TH INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS & 2013 IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND UBIQUITOUS COMPUTING (HPCC_EUC), P619, DOI 10.1109/HPCC.and.EUC.2013.93
   Wang XR, 2009, 25TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, P149, DOI 10.1109/ACSAC.2009.24
   Wang XR, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P280
   Wespi A, 2000, LECT NOTES COMPUT SC, V1907, P110
   Wu ZY, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P536, DOI 10.1145/1866307.1866368
   Xin Xie, 2010, 2010 IEEE International Conference on Intelligent Computing and Intelligent Systems (ICIS 2010), P400, DOI 10.1109/ICICISYS.2010.5658584
   Zhang F., 2012, Proceedings of the 2012 International Symposium on Software Testing and Analysis, ACM, P111
   Zhang F., 2014, P 2014 ACM C SEC PRI, P25, DOI DOI 10.1145/2627393.2627395
   Zhang FF, 2014, PROC INT SYMP SOFTW, P66, DOI 10.1109/ISSRE.2014.18
   Zhang XY, 2004, INT SYMP MICROARCH, P105
NR 60
TC 14
Z9 17
U1 0
U2 29
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2018
VL 44
IS 5
BP 491
EP 511
DI 10.1109/TSE.2017.2688383
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GF9RH
UT WOS:000432315500005
OA hybrid
DA 2024-07-18
ER

PT J
AU Valero, V
   Díaz, G
   Cambronero, ME
AF Valero, Valentin
   Diaz, Gregorio
   Cambronero, Maria-Emilia
TI Timed Automata Modeling and Verification for Publish-Subscribe
   Structures Using Distributed Resources
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Publish/subscribe; formal modeling; timed automata; verification; model
   checking
AB In this paper we present a Timed Automata model for the Publish/Subscribe paradigm in the context of Web Service Compositions with distributed resources, on the basis of an algebraic language inspired by the WSRF standard constructions. This framework allows a set of participants in a Web Service composition to interact with one another and also to manage a collection of distributed resources. The model includes operations for clients to publish, discover and subscribe to resources, so as to be notified when the resource property values fulfill certain conditions (topic-based subscription). Simulation and model-checking techniques can therefore be applied to the obtained network of timed automata, in order to check whether certain properties of interest are satisfied. A specific case study is finally presented to illustrate the model and the verification of the relevant properties on the obtained timed automata model.
C1 [Valero, Valentin; Diaz, Gregorio; Cambronero, Maria-Emilia] Univ Castilla La Mancha, Dept Comp Sci, Albacete 02071, Spain.
C3 Universidad de Castilla-La Mancha
RP Valero, V (corresponding author), Univ Castilla La Mancha, Dept Comp Sci, Albacete 02071, Spain.
EM Valentin.Valero@uclm.es; Gregorio.Diaz@uclm.es;
   MEmilia.Cambronero@uclm.es
RI Diaz-Descalzo, Gregorio/H-9912-2015; Valero, Valentin/G-8268-2015
OI Diaz-Descalzo, Gregorio/0000-0002-9116-9535; Cambronero,
   Maria/0000-0003-2153-8830; Valero, Valentin/0000-0003-3462-7656
FU Spanish Government [TIN2012-36812-C02-02, TIN2015-65845-c03-02]; FEDER
   funds
FX The authors are grateful to the reviewers of the previous versions of
   this manuscript. Their valuable comments and suggestions have helped to
   improve this paper significantly. This work received financial support
   from the Spanish Government (cofinanced by FEDER funds) through the
   TIN2012-36812-C02-02 and TIN2015-65845-c03-02 Projects.
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   André É, 2012, IEEE INT C ENG COMP, P253, DOI 10.1109/ICECCS.2012.29
   Ankolekar A, 2002, LECT NOTES COMPUT SC, V2342, P348
   [Anonymous], 11 ACM S OP SYST P 5
   Arkin A., 2004, WEB SERVICES BUSINES
   Arkin Assaf., 2002, Web Service Choreography Interface (WSCI) 1.0
   Baldoni R, 2003, EIGHTH IEEE INTERNATIONAL WORKSHOP ON OBJECT-ORIENTED REAL-TIME DEPENDABLE SYSTEMS, PROCEEDINGS, P304
   Behrmann G., 2004, A TUTORIAL ON UPPAAL, V3185, P300
   Boudjadar A, 2013, LECT NOTES COMPUT SC, V8161, P111, DOI 10.1007/978-3-642-40213-5_8
   Cambronero ME, 2013, PROCEDIA COMPUT SCI, V18, P140, DOI 10.1016/j.procs.2013.05.177
   Diaz G., 2015, PSRESOURCE TOOL
   Díaz G, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1688, DOI 10.1145/2695664.2695744
   Cambronero ME, 2010, SOFTW TEST VERIF REL, V20, P3, DOI 10.1002/stvr.405
   Garlan D, 2003, LECT NOTES COMPUT SC, V2648, P166
   He F, 2007, LECT NOTES COMPUT SC, V4574, P247
   Hoffert J, 2010, LECT NOTES COMPUT SC, V6452, P21, DOI 10.1007/978-3-642-16955-7_2
   Kavantzas N., 2005, WEB SERVICE CHOREOGR
   Liu Y., 2003, 574 TR IND U COMP SC, V16
   Milner R., 1980, CALCULUS COMMUNICATI, V92
   Niblett P, 2005, IBM SYST J, V44, P869, DOI 10.1147/sj.444.0869
   OASIS, 2006, OASIS WEB SERV RES F
   Sun J, 2009, LECT NOTES COMPUT SC, V5885, P581, DOI 10.1007/978-3-642-10373-5_30
   Zanolin Luca., 2003, SPECIFICATION VERIFI, P35
NR 23
TC 7
Z9 7
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2017
VL 43
IS 1
BP 76
EP 99
DI 10.1109/TSE.2016.2560842
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EK2TT
UT WOS:000393780300005
DA 2024-07-18
ER

PT J
AU Xia, X
   Lo, D
   Pan, SJ
   Nagappan, N
   Wang, XY
AF Xia, Xin
   Lo, David
   Pan, Sinno Jialin
   Nagappan, Nachiappan
   Wang, Xinyu
TI HYDRA: Massively Compositional Model for Cross-Project Defect Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cross-project defect prediction; transfer learning; genetic algorithm;
   ensemble learning
AB Most software defect prediction approaches are trained and applied on data from the same project. However, often a new project does not have enough training data. Cross-project defect prediction, which uses data from other projects to predict defects in a particular project, provides a new perspective to defect prediction. In this work, we propose a HYbrid moDel Reconstruction Approach (HYDRA) for cross-project defect prediction, which includes two phases: genetic algorithm (GA) phase and ensemble learning (EL) phase. These two phases create a massive composition of classifiers. To examine the benefits of HYDRA, we perform experiments on 29 datasets from the PROMISE repository which contains a total of 11,196 instances (i.e., Java classes) labeled as defective or clean. We experiment with logistic regression as the underlying classification algorithm of HYDRA. We compare our approach with the most recently proposed cross-project defect prediction approaches: TCA+ by Nam et al., Peters filter by Peters et al., GP by Liu et al., MO by Canfora et al., and CODEP by Panichella et al. Our results show that HYDRA achieves an average F1-score of 0.544. On average, across the 29 datasets, these results correspond to an improvement in the F1-scores of 26.22, 34.99, 47.43, 28.61, and 30.14 percent over TCA+, Peters filter, GP, MO, and CODEP, respectively. In addition, HYDRA on average can discover 33 percent of all bugs if developers inspect the top 20 percent lines of code, which improves the best baseline approach (TCA+) by 44.41 percent. We also find that HYDRA improves the F1-score of Zero-R which predict all the instances to be defective by 5.42 percent, but improves Zero-R by 58.65 percent when inspecting the top 20 percent lines of code. In practice, Zero-R can be hard to use since it simply predicts all of the instances to be defective, and thus developers have to inspect all of the instances to find the defective ones. Moreover, we notice the improvement of HYDRA over other baseline approaches in terms of F1-score and when inspecting the top 20 percent lines of code are substantial, and in most cases the improvements are significant and have large effect sizes across the 29 datasets.
C1 [Xia, Xin; Wang, Xinyu] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310000, Zhejiang, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 17890, Singapore.
   [Pan, Sinno Jialin] Nanyang Technol Univ, Sch Comp Engn, Singapore, Singapore.
   [Nagappan, Nachiappan] Microsoft Res, Testing Verificat & Measurement Res, Redmond, WA 98052 USA.
C3 Zhejiang University; Singapore Management University; Nanyang
   Technological University; Microsoft
RP Xia, X (corresponding author), Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310000, Zhejiang, Peoples R China.
EM xxkidd@zju.edu.cn; davidlo@smu.edu.sg; sinnopan@ntu.edu.sg;
   nachin@microsoft.com; wangxinyu@zju.edu.cn
RI Xia, Xin/AAD-6217-2022; Pan, Sinno Jialin/IWV-0607-2023; PAN, Sinno
   Jialin/P-6696-2014; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; PAN, Sinno Jialin/0000-0001-6565-3836; Lo,
   David/0000-0002-4367-7201
FU National Basic Research Program of China (the 973 Program)
   [2015CB352201]; NSFC [61572426]; Ministry of Science and Technology of
   China [2015BAH17F01]
FX We thank Jaechang Nam and Sunghun Kim for providing us the source code
   of TCA+, and Eric Eaton for providing us the source code of
   TransferBoost. Xinyu Wang is the corresponding author. This research was
   supported by the National Basic Research Program of China (the 973
   Program) under grant 2015CB352201, NSFC Program (No.61572426), and
   National Key Technology R&D Program of the Ministry of Science and
   Technology of China under grant 2015BAH17F01. The source code and
   datasets of HYDRA can be downloaded from:
   https://github.com/xin-xia1986/TSE-Code_HYDRA.
CR Abdi H., 2007, Encyclopedia of measurement and statistics, DOI DOI 10.4135/9781412952644.N299
   [Anonymous], 1994, ANAL DEPENDENCIES
   [Anonymous], 2007, ACL
   [Anonymous], Introduction to genetic algorithms
   [Anonymous], 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08
   Anvik John, 2005, P 2005 OOPSLA WORKSH, P35
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arisholm E, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ISSRE.2007.22
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bettenburg N., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P60, DOI 10.1109/MSR.2012.6224300
   Bishop Christopher M, 2006, PATTERN RECOGN, V128, P1
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Catal C, 2009, INFORM SCIENCES, V179, P1040, DOI 10.1016/j.ins.2008.12.001
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Dai Wenyuan, 2007, P 24 INT C MACHINE L, P193
   Eaton Eric, 2011, PROC 25 AAAI C ARTIF, P337
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Goldber D. E., 1988, Machine Learning, V3, P95, DOI 10.1023/A:1022602019183
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Han J., 2006, DATA MINING CONCEPTS
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Koru AG, 2008, EMPIR SOFTW ENG, V13, P473, DOI 10.1007/s10664-008-9080-x
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Meffert K., 2011, JGAPJAVA GENETIC ALG
   Menzies T., 2015, The promise repository of empirical software engineering data
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Nguyen A. T., 2012, P ACM SIGSOFT 20 INT, P63
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Pan SJ, 2011, IEEE T NEURAL NETWOR, V22, P199, DOI 10.1109/TNN.2010.2091281
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Schapire R. E., 1997, P 14 INT C MACH LEAR, P322
   Shivaji S, 2009, IEEE INT CONF AUTOM, P600, DOI 10.1109/ASE.2009.76
   Tang M., 2009, P 6 INT SOFTW METR S, P242
   Tian Y, 2012, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2012.6227176
   Turhan B, 2013, INFORM SOFTWARE TECH, V55, P1101, DOI 10.1016/j.infsof.2012.10.003
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Zhou Z.-H., 2012, ENSEMBLE METHODS FDN, DOI DOI 10.1201/B12207
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 57
TC 204
Z9 223
U1 1
U2 32
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2016
VL 42
IS 10
BP 977
EP 998
DI 10.1109/TSE.2016.2543218
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EA5KP
UT WOS:000386659500005
OA Green Published
DA 2024-07-18
ER

PT J
AU Galeotti, JP
   Furia, CA
   May, E
   Fraser, G
   Zeller, A
AF Galeotti, Juan P.
   Furia, Carlo A.
   May, Eva
   Fraser, Gordon
   Zeller, Andreas
TI Inferring Loop Invariants by Mutation, Dynamic Analysis, and Static
   Checking
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Loop invariants; inference; automatic verification; functional
   properties; dynamic analysis
ID PREDICATE ABSTRACTION; VERIFICATION; GENERATION; INFERENCE; PROGRAMS;
   LIBRARY
AB Verifiers that can prove programs correct against their full functional specification require, for programs with loops, additional annotations in the form of loop invariants-properties that hold for every iteration of a loop. We show that significant loop invariant candidates can be generated by systematically mutating postconditions; then, dynamic checking (based on automatically generated tests) weeds out invalid candidates, and static checking selects provably valid ones. We present a framework that automatically applies these techniques to support a program prover, paving the way for fully automatic verification without manually written loop invariants: Applied to 28 methods (including 39 different loops) from various java.util classes (occasionally modified to avoid using Java features not fully supported by the static checker), our DYNAMATE prototype automatically discharged 97 percent of all proof obligations, resulting in automatic complete correctness proofs of 25 out of the 28 methods-outperforming several state-of-the-art tools for fully automatic verification.
C1 [Galeotti, Juan P.; Zeller, Andreas] Univ Saarland, Dept Comp Sci, Chair Software Engn, D-66123 Saarbrucken, Germany.
   [Furia, Carlo A.] Swiss Fed Inst Technol, Dept Comp Sci, Chair Software Engn, Zurich, Switzerland.
   [May, Eva] Google Inc, London, England.
   [Fraser, Gordon] Univ Sheffield, Dept Comp Sci, Sheffield S10 2TN, S Yorkshire, England.
C3 Saarland University; Swiss Federal Institutes of Technology Domain; ETH
   Zurich; Google Incorporated; University of Sheffield
RP Galeotti, JP (corresponding author), Univ Saarland, Dept Comp Sci, Chair Software Engn, D-66123 Saarbrucken, Germany.
EM carlo.furia@inf.ethz.ch; may@cs.uni-saarland.de;
   gordon.fraser@sheffield.ac.uk; zeller@acm.org
OI Zeller, Andreas/0000-0003-4719-8803; Furia, Carlo A./0000-0003-1040-3201
FU European Research Council under European Union's Seventh Framework
   Programme/ERC [290914]; EU FP7 [295261 (MEALS)]; Swiss SNF Grant [ASII
   200021-134976]; European Research Council (ERC) [290914] Funding Source:
   European Research Council (ERC)
FX The research leading to these results has received funding from the
   European Research Council under the European Union's Seventh Framework
   Programme (FP7/2007-2013)/ERC grant agreement no. [290914] and EU FP7
   grant 295261 (MEALS). The second author was partially funded by the
   Swiss SNF Grant ASII 200021-134976. Klaas Boesche, Alessandra Gorla,
   Jeremias Rossler, and Christoph Weidenbach provided helpful comments on
   earlier revisions of this work.
CR [Anonymous], 2006, WALA WATSON LIB ANAL
   [Anonymous], 2008, PPL PARMA POLYHEDRA
   [Anonymous], 2009, APRON NUMERICAL ABST
   Bagnara R, 2008, SCI COMPUT PROGRAM, V72, P3, DOI 10.1016/j.scico.2007.08.001
   Ball T, 2001, ACM SIGPLAN NOTICES, V36, P203, DOI 10.1145/381694.378846
   Beckman NelsE., 2008, Proceedings of the 2008 international symposium on Software testing and analysis, ISSTA '08, P3
   Beyer Dirk, 2007, International Journal on Software Tools for Technology Transfer, V9, P505, DOI 10.1007/s10009-007-0044-z
   Beyer D, 2007, LECT NOTES COMPUT SC, V4349, P378
   Blanchet B, 2003, ACM SIGPLAN NOTICES, V38, P196, DOI 10.1145/780822.781153
   Bozga M, 2009, LECT NOTES COMPUT SC, V5643, P157, DOI 10.1007/978-3-642-02658-4_15
   Bradley AR, 2011, LECT NOTES COMPUT SC, V6538, P70, DOI 10.1007/978-3-642-18275-4_7
   Burdy L., 2005, International Journal on Software Tools for Technology Transfer, V7, P212, DOI 10.1007/s10009-004-0167-4
   Calcagno C, 2011, J ACM, V58, DOI 10.1145/2049697.2049700
   Chalin P, 2006, LECT NOTES COMPUT SC, V4111, P342
   Chang BYE, 2005, LECT NOTES COMPUT SC, V3385, P147
   Christakis Maria, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P132, DOI 10.1007/978-3-642-32759-9_13
   Clarke EdmundM., 2000, Proceedings of the International Conference on Computer Aided Veri cation (CAV), P154, DOI 10.1007/1072216715
   Cok D. R., 2008, ESC JAVA2 IMPLEMENTA
   Colón MA, 2003, LECT NOTES COMPUT SC, V2725, P420
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Cousot P, 2011, ACM SIGPLAN NOTICES, V46, P105, DOI 10.1145/1925844.1926399
   Cousot Patrick, 1978, P 5 ACM SIGACT SIGPL, p84S96, DOI DOI 10.1145/512760.512770
   Csallner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P281, DOI 10.1145/1368088.1368127
   Dillig I, 2013, ACM SIGPLAN NOTICES, V48, P443, DOI [10.1145/2509136.2509511, 10.1145/2544173.2509511]
   Distefano D, 2008, ACM SIGPLAN NOTICES, V43, P213, DOI 10.1145/1449955.1449782
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Fähndrich M, 2011, LECT NOTES COMPUT SC, V6528, P10
   Filliâtre JC, 2012, LECT NOTES COMPUT SC, V7152, P83, DOI 10.1007/978-3-642-27705-4_8
   Flanagan C., 2001, FME 2001: Formal Methods for Increasing Software Productivity. International Symposium on Formal Methods Europe. Proceedings (Lecture Notes in Computer Science Vol.2021), P500
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P191, DOI 10.1145/565816.503291
   Fraser G., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P31, DOI 10.1109/QSIC.2011.19
   Furia CA, 2014, ACM COMPUT SURV, V46, DOI 10.1145/2506375
   Furia CA, 2010, LECT NOTES COMPUT SC, V6300, P277, DOI 10.1007/978-3-642-15025-8_15
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid Patrice., 2011, Proc. ISSTA, P23, DOI [10.1145/2001420.2001424, DOI 10.1145/2001420.2001424]
   Graf S, 1997, LECT NOTES COMPUT SC, V1254, P72
   Gulavani B.S., 2006, P FSE ACM, P117, DOI DOI 10.1145/1181775.1181790
   Gulwani S, 2008, ACM SIGPLAN NOTICES, V43, P281, DOI 10.1145/1379022.1375616
   Gulwani S, 2008, ACM SIGPLAN NOTICES, V43, P235, DOI 10.1145/1328897.1328468
   Gulwani S, 2009, LECT NOTES COMPUT SC, V5403, P120, DOI 10.1007/978-3-540-93900-9_13
   Gupta A, 2009, LECT NOTES COMPUT SC, V5643, P634, DOI 10.1007/978-3-642-02658-4_48
   Henzinger TA, 2010, LECT NOTES COMPUT SC, V5944, P163, DOI 10.1007/978-3-642-11319-2_14
   Hoder K, 2011, LECT NOTES COMPUT SC, V6605, P60, DOI 10.1007/978-3-642-19835-9_7
   Hoder Krystof, 2012, LNCS, P157, DOI [10.1007/978-3-642-31612-8_13, DOI 10.1007/978-3-642-31612-8_13, DOI 10.1007/978-3-642-31612-813]
   Jamrozik Konrad, 2013, Tests and Proofs. 7th International Conference, TAP 2013. Proceedings: LNCS 7942, P152, DOI 10.1007/978-3-642-38916-0_9
   Jeannet B, 2009, LECT NOTES COMPUT SC, V5643, P661, DOI 10.1007/978-3-642-02658-4_52
   Jung Y, 2010, LECT NOTES COMPUT SC, V5944, P180, DOI 10.1007/978-3-642-11319-2_15
   Kapur D., 2006, SERIES DAGSTUHL SEMI, V05431
   Kiniry JosephR., 2006, SAVCBS '06, P19
   Kovács L, 2009, LECT NOTES COMPUT SC, V5503, P470
   Lahiri SK, 2009, LECT NOTES COMPUT SC, V5643, P493, DOI 10.1007/978-3-642-02658-4_37
   Leavens Gary T, 2006, SIGSOFT Softw. Eng. Notes, V31, P1, DOI [10.1145/1127878.1127884, DOI 10.1145/1127878.1127884]
   Magill S., 2006, Proceedings of the Third Workshop on Semantics, Program Analysis and Computing Environments for Memory Management (SPACE06), P47
   Magill S, 2010, ACM SIGPLAN NOTICES, V45, P211, DOI 10.1145/1707801.1706326
   Malburg J., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P436, DOI 10.1109/ASE.2011.6100092
   McMillan KL, 2008, LECT NOTES COMPUT SC, V4963, P413, DOI 10.1007/978-3-540-78800-3_31
   Mehnert H, 2012, LECT NOTES COMPUT SC, V7152, P179, DOI 10.1007/978-3-642-27705-4_15
   Nikolic D, 2013, ACM T PROGR LANG SYS, V35, DOI 10.1145/2529990
   Nimmer J. W., 2002, Software Engineering Notes, V27, P232, DOI 10.1145/566171.566213
   Nimmer J. W., 2001, Electronic Notes in Theoretical Computer Science, V55, DOI 10.1016/S1571-0661(04)00256-7
   Nori Aditya V., 2013, ESECSIGSOFT FSE, P246, DOI 10.1145/2491411
   Pasareanu CS, 2004, LECT NOTES COMPUT SC, V2989, P164
   Polikarpova N, 2014, LECT NOTES COMPUT SC, V8442, P514, DOI 10.1007/978-3-319-06410-9_35
   Polikarpova N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P262, DOI 10.1109/ICSE.2013.6606572
   Polikarpova N, 2010, LECT NOTES COMPUT SC, V6217, P127, DOI 10.1007/978-3-642-15057-9_9
   Ratcliff S, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1907
   Reynolds JC, 2002, IEEE S LOG, P55, DOI 10.1109/LICS.2002.1029817
   Rodríguez-Carbonell E, 2007, J SYMB COMPUT, V42, P443, DOI 10.1016/j.jsc.2007.01.002
   Sankaranarayanan S, 2004, ACM SIGPLAN NOTICES, V39, P318, DOI 10.1145/982962.964028
   Schmitt P.H., 2007, VERIFY, V259, P195
   Sharma R, 2013, LECT NOTES COMPUT SC, V7792, P574, DOI 10.1007/978-3-642-37036-6_31
   Srivastava S, 2009, ACM SIGPLAN NOTICES, V44, P223, DOI 10.1145/1543135.1542501
   Nguyen TV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P608, DOI 10.1145/2568225.2568275
   Nguyen T, 2012, PROC INT CONF SOFTW, P683, DOI 10.1109/ICSE.2012.6227149
   Totla N, 2013, ACM SIGPLAN NOTICES, V48, P537, DOI 10.1145/2480359.2429132
   Vogels F, 2011, LECT NOTES COMPUT SC, V6722, P319, DOI 10.1007/978-3-642-21461-5_21
   Weiss B, 2011, SCI COMPUT PROGRAM, V76, P861, DOI 10.1016/j.scico.2010.06.008
   Yorsh G., 2006, ISSTA 06 P 2006 INT, P145
   Zee K, 2008, ACM SIGPLAN NOTICES, V43, P349, DOI 10.1145/1379022.1375624
NR 79
TC 19
Z9 21
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2015
VL 41
IS 10
BP 1019
EP 1037
DI 10.1109/TSE.2015.2431688
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CU0VR
UT WOS:000363237500005
OA Green Published, Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Autili, M
   Grunske, L
   Lumpe, M
   Pelliccione, P
   Tang, A
AF Autili, Marco
   Grunske, Lars
   Lumpe, Markus
   Pelliccione, Patrizio
   Tang, Antony
TI Aligning Qualitative, Real-Time, and Probabilistic Property
   Specification Patterns Using a Structured English Grammar
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Specification patterns; real-time properties; probabilistic properties
ID SYSTEM
AB Formal methods offer an effective means to assert the correctness of software systems through mathematical reasoning. However, the need to formulate system properties in a purely mathematical fashion can create pragmatic barriers to the application of these techniques. For this reason, Dwyer et al. invented property specification patterns which is a system of recurring solutions to deal with the temporal intricacies that would make the construction of reactive systems very hard otherwise. Today, property specification patterns provide general rules that help practitioners to qualify order and occurrence, to quantify time bounds, and to express probabilities of events. Nevertheless, a comprehensive framework combining qualitative, real-time, and probabilistic property specification patterns has remained elusive. The benefits of such a framework are twofold. First, it would remove the distinction between qualitative and quantitative aspects of events; and second, it would provide a structure to systematically discover new property specification patterns. In this paper, we report on such a framework and present a unified catalogue that combines all known plus 40 newly identified or extended patterns. We also offer a natural language front-end to map patterns to a temporal logic of choice. To demonstrate the virtue of this new framework, we applied it to a variety of industrial requirements, and use PSPWizard, a tool specifically developed to work with our unified pattern catalogue, to automatically render concrete instances of property specification patterns to formulae of an underlying temporal logic of choice.
C1 [Autili, Marco; Pelliccione, Patrizio] Univ Aquila, Dipartimento Ingn & Sci Informaz & Matemat, Laquila, Italy.
   [Pelliccione, Patrizio] Univ Gothenburg, Chalmers Univ Technol, Dept Comp Sci & Engn, Gothenburg, Sweden.
   [Grunske, Lars] Univ Stuttgart, Inst Software Technol, D-70569 Stuttgart, Germany.
   [Lumpe, Markus; Tang, Antony] Swinburne Univ Technol, Hawthorn, Vic 3122, Australia.
C3 University of L'Aquila; University of Gothenburg; Chalmers University of
   Technology; University of Stuttgart; Swinburne University of Technology
RP Autili, M (corresponding author), Univ Aquila, Dipartimento Ingn & Sci Informaz & Matemat, Laquila, Italy.
EM marco.autili@univaq.it; lars.grunske@informatik.uni-stuttgart.de;
   mlumpe@swin.edu.au; patrizio.pelliccione@gu.se; atang@swin.edu.au
RI Pelliccione, Patrizio/Q-5118-2019; Grunske, Lars/AAH-4550-2019;
   Pelliccione, Patrizio/A-4105-2008; AUTILI, Marco/AAG-7127-2020; Tang,
   Antony/C-2459-2009
OI Pelliccione, Patrizio/0000-0002-5438-2281; Grunske,
   Lars/0000-0002-8747-3745; Pelliccione, Patrizio/0000-0002-5438-2281;
   AUTILI, Marco/0000-0001-5951-1567; Tang, Antony/0000-0002-3574-3977
FU PRESTO project [ARTEMIS-2010-1-269362]; European Commission under
   ARTEMIS; DFG (German Research Foundation) [SPP1593]
FX This work is partly supported by PRESTO project (ARTEMIS-2010-1-269362),
   co-funded by the European Commission under the ARTEMIS Joint Undertaking
   (JU) initiative: http://www.presto-embedded.eu/. This work is also
   partially supported by the DFG (German Research Foundation) under the
   Priority Programme SPP1593: Design For Future-Managed Software
   Evolution. The authors would also like to thank Indika Meedeniya for his
   contributions to and the realization of PSPWizard. Patrizio Pelliccione
   is the corresponding author of the article.
CR Abid N, 2012, LECT NOTES COMPUT SC, V7437, P1, DOI 10.1007/978-3-642-32469-7_1
   Alur R, 1996, J ACM, V43, P116, DOI 10.1145/227595.227602
   Alur R., 1991, THESIS STANFORD U ST
   [Anonymous], 2007, COMPILERS PRINCIPLES
   [Anonymous], 1977, PATTERN LANGUAGE TOW
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Autili M, 2007, AUTOMAT SOFTW ENG, V14, P293, DOI 10.1007/s10515-007-0012-6
   Autili M., 2013, PROPERTY SPECIFICATI
   Autili M, 2008, ELECTRON NOTES THEOR, V211, P147, DOI 10.1016/j.entcs.2008.04.037
   Aziz A., 1996, P 8 INT C COMP AID V, P269
   Bellini P, 2009, J SYST SOFTWARE, V82, P183, DOI 10.1016/j.jss.2008.06.041
   Bianculli D., 2012, P 34 INT C SOFTW ENG, P992
   Bitsch F., 2001, LNCS, V2187, P176, DOI [10.1007/3-540-45416-018, DOI 10.1007/3-540-45416-018]
   Bozzano M., 2011, Design and safety assessment of critical systems
   Capozucca A, 2006, LECT NOTES COMPUT SC, V4157, P59
   Castillos K.C., 2013, IFM 2013, V7940, P316, DOI [10.1007/978-3-642-38613-822, DOI 10.1007/978-3-642-38613-822]
   Clarke Edmund M., 2001, Model Checking
   Cobleigh R. L., 2006, P 14 ACM SIGSOFT INT, P208, DOI [10.1145/1181775.1181801, DOI 10.1145/1181775.1181801]
   Di Guglielmo L, 2010, PR IEEE COMP DESIGN, P468, DOI 10.1109/ICCD.2010.5647654
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Dwyer M. B., 1998, Proceedings of FMSP'98. Second Workshop on Formal Methods in Software Practice, P7, DOI 10.1145/298595.298598
   Esteve MA, 2012, PROC INT CONF SOFTW, P1022, DOI 10.1109/ICSE.2012.6227118
   GAMMA E, 1995, DESIGN PATTERNS
   Gruhn V, 2006, ELECTRON NOTES THEOR, V153, P117, DOI 10.1016/j.entcs.2005.10.035
   Grunske L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P31, DOI 10.1145/1368088.1368094
   Hallé S, 2009, IEEE T SOFTWARE ENG, V35, P669, DOI 10.1109/TSE.2009.29
   Haydar May, 2008, 2008 8th International Conference on Web Engineering (ICWE), P240, DOI 10.1109/ICWE.2008.38
   IEEE, 2005, IEEE Std 1554-2005, P1
   Konrad S, 2005, PROC INT CONF SOFTW, P372
   KONRAD S, 2006, THESIS MICHIGAN STAT
   KOYMANS R, 1990, REAL-TIME SYST, V2, P255, DOI 10.1007/BF01995674
   Kröger F, 2008, TEXTS THEOR COMPUT S, P1
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Leveson N.G., 1995, Safeware: System Safety and Computers
   Lumpe M., 2011, P SIGSOFTFSE, P468, DOI [10.1145/2025113.2025193, DOI 10.1145/2025113.2025193]
   Malavolta I, 2010, IEEE T SOFTWARE ENG, V36, P119, DOI 10.1109/TSE.2009.51
   Paun DO, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P123, DOI 10.1109/ISRE.1999.777992
   Peled D., 2009, WILEY ENCY COMPUTER, V3, P1904
   Post A, 2012, REQUIR ENG, V17, P19, DOI 10.1007/s00766-011-0145-9
   Presto-Consortium, 2012, D2 1 CAS STUD MOD DE
   Rosenblum D. S., 1996, Software Engineering Notes, V21, P64, DOI 10.1145/232069.232086
   Smith RL, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P11, DOI 10.1109/ICSE.2002.1007952
   Spanoudakis G, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P1518, DOI 10.1145/1244002.1244327
   Nguyen TH, 2014, SOFTWARE QUAL J, V22, P87, DOI 10.1007/s11219-013-9202-6
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
   Zhang PC, 2009, IEEE INT CONF AUTOM, P500, DOI 10.1109/ASE.2009.56
   Zhang PC, 2010, J SYST SOFTWARE, V83, P371, DOI 10.1016/j.jss.2009.09.013
NR 47
TC 68
Z9 73
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2015
VL 41
IS 7
BP 620
EP 638
DI 10.1109/TSE.2015.2398877
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CN2JO
UT WOS:000358247100001
DA 2024-07-18
ER

PT J
AU Pérez, JF
   Casale, G
   Pacheco-Sanchez, S
AF Perez, Juan F.
   Casale, Giuliano
   Pacheco-Sanchez, Sergio
TI Estimating Computational Requirements in Multi-Threaded Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Demand estimation; multi-threaded application servers; application
   performance management
ID PREDICTION; INFERENCE; SYSTEMS; DEMAND; CLOUD
AB Performance models provide effective support for managing quality-of-service (QoS) and costs of enterprise applications. However, expensive high-resolution monitoring would be needed to obtain key model parameters, such as the CPU consumption of individual requests, which are thus more commonly estimated from other measures. However, current estimators are often inaccurate in accounting for scheduling in multi-threaded application servers. To cope with this problem, we propose novel linear regression and maximum likelihood estimators. Our algorithms take as inputs response time and resource queue measurements and return estimates of CPU consumption for individual request types. Results on simulated and real application datasets indicate that our algorithms provide accurate estimates and can scale effectively with the threading levels.
C1 [Perez, Juan F.; Casale, Giuliano] Univ London Imperial Coll Sci Technol & Med, Dept Comp, London SW7 2AZ, England.
   [Pacheco-Sanchez, Sergio] SAP HANA Cloud Comp, Syst Engn Div, Belfast, Antrim, North Ireland.
C3 Imperial College London
RP Pérez, JF (corresponding author), Univ London Imperial Coll Sci Technol & Med, Dept Comp, London SW7 2AZ, England.
EM j.perez-bernal@imperial.ac.uk; g.casale@imperial.ac.uk;
   sergio.pacheco-sanchez@sap.com
RI Casale, Giuliano/W-5595-2019; Pérez, Juan F./N-4384-2019; Pérez, Juan
   F./IZD-8208-2023
OI Pérez, Juan F./0000-0003-4732-1621; Pérez, Juan F./0000-0003-4732-1621;
   Casale, Giuliano/0000-0003-4548-7951
FU European Union [318484]; InvestNI/SAP VIRTEX project; Colab project
FX The research of Giuliano Casale and Juan F. Perez leading to these
   results has received funding from the European Union Seventh Framework
   Programme FP7/2007-2013 under grant agreement no. 318484 (MODAClouds).
   Sergio Pacheco-Sanchez was co-funded by the InvestNI/SAP VIRTEX and
   Colab projects.
CR Addis Bernardetta, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P220, DOI 10.1109/CLOUD.2010.19
   [Anonymous], 2005, CASCON 05
   [Anonymous], 2011, ENTERPRISE RESOURCE
   [Anonymous], 2011, P 7 INT C NETW SERV
   [Anonymous], 1999, Introduction to matrix analytic methods in stochastic modeling, DOI DOI 10.1137/1.9780898719734
   Becker Koziolek., 2007, P 6 INT WORKSHOP SOF, P54
   Bertoli Marco, 2009, Performance Evaluation Review, V36, P10, DOI 10.1145/1530873.1530877
   Brosig F, 2013, I S MOD ANAL SIM COM, P404, DOI 10.1109/MASCOTS.2013.61
   Casale G, 2008, EUROMICRO WORKSHOP P, P183, DOI 10.1109/PDP.2008.80
   Casale G, 2013, INT CONF CLOUD COMP, P152, DOI 10.1109/CloudCom.2013.118
   Cremonesi P., 2012, 2012 Ninth International Conference on Quantitative Evaluation of Systems (QEST 2012), P249, DOI 10.1109/QEST.2012.18
   Cremonesi P, 2010, LECT NOTES COMPUT SC, V6148, P291, DOI 10.1007/978-3-642-13568-2_21
   Gmach Daniel, 2007, 2007 IEEE International Symposium on Workload Characterization, P171, DOI 10.1109/IISWC.2007.4362193
   Hayden RA, 2012, THEOR COMPUT SCI, V413, P106, DOI 10.1016/j.tcs.2011.07.017
   Isci C, 2010, IEEE IFIP NETW OPER, P381, DOI 10.1109/NOMS.2010.5488495
   Kalbasi A, 2012, IEEE T SOFTWARE ENG, V38, P561, DOI 10.1109/TSE.2011.23
   Khan A, 2012, IEEE IFIP NETW OPER, P1287, DOI 10.1109/NOMS.2012.6212065
   Kraft S., 2009, VALUETOOLS, P48
   Kumar D., 2009, P 4 INT ICST C PERF
   KURTZ TG, 1970, J APPL PROBAB, V7, P49, DOI 10.2307/3212147
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   Liu Z, 2006, PERFORM EVALUATION, V63, P36, DOI 10.1016/j.peva.2004.12.001
   Menasce Daniel A., 2008, CMG 08 International Conference Proceedings, p241, 246
   Moschetta J, 2012, INT SYMP SYMB NUMERI, P393, DOI 10.1109/SYNASC.2012.39
   Pacifici G, 2008, PERFORM EVALUATION, V65, P531, DOI 10.1016/j.peva.2007.12.001
   Perez J. F., 2013, DTR138 IMP COLL LOND
   REISER M, 1980, J ACM, V27, P313, DOI 10.1145/322186.322195
   Riska A, 2002, GLOB TELECOMM CONF, P2513
   Ross JV, 2007, QUEUEING SYST, V55, P131, DOI 10.1007/s11134-006-9009-2
   Roy N., 2010, P IEEE INT S MOD AN, P441
   Schneider T., 2003, SAP PERDORMANCE OPTI
   Stewart C., 2007, Operating Systems Review, V41, P31, DOI 10.1145/1272998.1273002
   Sutton C, 2011, ANN APPL STAT, V5, P254, DOI 10.1214/10-AOAS392
   Tribastone M, 2010, LECT NOTES COMPUT SC, V6416, P51, DOI 10.1007/978-3-642-16561-0_12
   Wang W., 2013, P IEEE 21 INT S MOD, P567
   Wei Wang, 2012, 2012 IEEE 5th International Conference on Cloud Computing (CLOUD), P439, DOI 10.1109/CLOUD.2012.81
   WHITT W, 1982, OPER RES, V30, P125, DOI 10.1287/opre.30.1.125
   Zhang L., 2013, 10 INT C AUT COMP SA
   Zhang Q., 2007, 4 INT C AUTONOMIC CO, P27
   Zheng T, 2008, IEEE T SOFTWARE ENG, V34, P391, DOI 10.1109/TSE.2008.30
NR 40
TC 23
Z9 24
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2015
VL 41
IS 3
BP 264
EP 278
DI 10.1109/TSE.2014.2363472
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CD9ZG
UT WOS:000351460000003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chen, N
   Kim, S
AF Chen, Ning
   Kim, Sunghun
TI STAR: Stack Trace Based Automatic Crash Reproduction via Symbolic
   Execution
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Crash reproduction; static analysis; symbolic execution; test case
   generation; optimization
ID FAILURES
AB Software crash reproduction is the necessary first step for debugging. Unfortunately, crash reproduction is often labor intensive. To automate crash reproduction, many techniques have been proposed including record-replay and post-failure-process approaches. Record-replay approaches can reliably replay recorded crashes, but they incur substantial performance overhead to program executions. Alternatively, post-failure-process approaches analyse crashes only after they have occurred. Therefore they do not incur performance overhead. However, existing post-failure-process approaches still cannot reproduce many crashes in practice because of scalability issues and the object creation challenge. This paper proposes an automatic crash reproduction framework using collected crash stack traces. The proposed approach combines an efficient backward symbolic execution and a novel method sequence composition approach to generate unit test cases that can reproduce the original crashes without incurring additional runtime overhead. Our evaluation study shows that our approach successfully exploited 31 (59.6 percent) of 52 crashes in three open source projects. Among these exploitable crashes, 22 (42.3 percent) are useful reproductions of the original crashes that reveal the crash triggering bugs. A comparison study also demonstrates that our approach can effectively outperform existing crash reproduction approaches.
C1 [Chen, Ning; Kim, Sunghun] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Kowloon, Hong Kong, Peoples R China.
C3 Hong Kong University of Science & Technology
RP Chen, N (corresponding author), Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Kowloon, Hong Kong, Peoples R China.
EM ning@cse.ust.hk; hunkim@cse.ust.hk
CR AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   Altekar G, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P193
   Anand S, 2008, LECT NOTES COMPUT SC, V4963, P367, DOI 10.1007/978-3-540-78800-3_28
   Andersen L. O., 1994, Ph.D. thesis
   [Anonymous], 2001, Apache Log4j
   [Anonymous], 2006, P 13 ACM C COMPUTER
   [Anonymous], 1997, A Discipline of Programming
   [Anonymous], 2004, TN2123 APPL INC
   [Anonymous], 2008, Proceedings of the Third Conference on Tackling Computer Systems Problems with Machine Learning Techniques, SysML'08
   Apache Software Foundation, 2001, AP COM COLL
   Artzi S, 2008, LECT NOTES COMPUT SC, V5142, P542, DOI 10.1007/978-3-540-70592-5_23
   Babic D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P211, DOI 10.1145/1368088.1368118
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Boonstoppel P, 2008, LECT NOTES COMPUT SC, V4963, P351, DOI 10.1007/978-3-540-78800-3_27
   Boyapati C., 2002, Software Engineering Notes, V27, P123, DOI 10.1145/566171.566191
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Chandra S, 2009, ACM SIGPLAN NOTICES, V44, P363, DOI 10.1145/1543135.1542517
   Chen N, 2012, IEEE INT CONF AUTOM, P140, DOI 10.1145/2351676.2351697
   Cibulski H., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P115, DOI 10.1109/ICSTW.2011.28
   Clause J, 2007, PROC INT CONF SOFTW, P261
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Daniel Brett, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P363, DOI 10.1109/ASE.2008.49
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dutertre B., 2006, P 2 SMT COMP, P1
   Erete I., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P310, DOI 10.1109/ICSTW.2011.98
   Glerum K, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P103
   Godefroid P., 2007, SIGPLAN Notices, V42, P47, DOI [10.1145/1190216.1190226, 10.1145/1190215.1190226]
   Jaygarl Hojun, 2010, P 19 INT S SOFTWARE, P159
   Jin W, 2012, PROC INT CONF SOFTW, P474, DOI 10.1109/ICSE.2012.6227168
   Kiezun A, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P105
   Leitner A, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P416, DOI 10.1109/ICST.2009.30
   Leitner Andreas, 2007, P THE 6 JOINT M EURO, P425
   Luo QZ, 2010, LECT NOTES COMPUT SC, V6013, P323
   Manevich R., 2004, Software Engineering Notes, V29, P63, DOI 10.1145/1041685.1029907
   McCarthy J., 1962, AIM031 MIT
   McCarthy John, 1963, IFIP congress series, P21
   Nam Jaechang., 2010, Mining crash fix patterns
   Nanda MG, 2009, PROC INT CONF SOFTW, P133, DOI 10.1109/ICSE.2009.5070515
   Narayanasamy S, 2005, CONF PROC INT SYMP C, P284, DOI 10.1109/ISCA.2005.16
   Nielson F., 1999, Principles of Program Analysis
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Park C.-S., 2008, FSE, P135
   Park S, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P177
   Pasareanu C.S., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, ISSTA '11, P34, DOI DOI 10.1145/2001420.2001425
   Rössler J, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P114, DOI 10.1109/ICST.2013.18
   Saff David., 2005, PROC ASE, P114, DOI DOI 10.1145/1101908.1101927
   Serrano N, 2005, IEEE SOFTWARE, V22, P11, DOI 10.1109/MS.2005.32
   Steven J., 2000, Software Engineering Notes, V25, P158, DOI 10.1145/347636.348993
   Taneja K., 2011, Proceedings of ACM International Symposium on Software Testing and Analysis, P1, DOI DOI 10.1145/2001420.2001422
   Thummalapenta S, 2011, ACM SIGPLAN NOTICES, V46, P189, DOI 10.1145/2076021.2048083
   Thummalapenta S, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P193, DOI 10.1145/1595696.1595725
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Visser W, 2012, P ACM SIGSOFT 20 INT
   Weeratunge D, 2010, ACM SIGPLAN NOTICES, V45, P155, DOI 10.1145/1735971.1736039
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Xiao XS, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P611, DOI 10.1145/1985793.1985876
   Yuan D, 2011, ACM SIGPLAN NOTICES, V46, P3, DOI 10.1145/1961296.1950369
   Yuan D, 2010, ACM SIGPLAN NOTICES, V45, P143, DOI 10.1145/1735971.1736038
   Zamfir C, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P321
   Zheng Yunhui, 2013, P 9 JOINT M FDN SOFT, P114, DOI [10.1145/2491411.2491456, DOI 10.1145/2491411.2491456]
NR 60
TC 46
Z9 53
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2015
VL 41
IS 2
BP 198
EP 220
DI 10.1109/TSE.2014.2363469
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CD9ZJ
UT WOS:000351460400005
DA 2024-07-18
ER

PT J
AU Ye, CY
   Jacobsen, HA
AF Ye, Chunyang
   Jacobsen, Hans-Arno
TI Whitening SOA Testing via Event Exposure
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Web service composition; white-box testing; event interface; events
ID SERVICE; GENERATION; ORCHESTRATION; VERIFICATION; ARCHITECTURE;
   ATOMICITY
AB Whitening the testing of service-oriented applications can provide service consumers confidence on how well an application has been tested. However, to protect business interests of service providers and to prevent information leakage, the implementation details of services are usually invisible to service consumers. This makes it challenging to determine the test coverage of a service composition as a whole and design test cases effectively. To address this problem, we propose an approach to whiten the testing of service compositions based on events exposed by services. By deriving event interfaces to explore only necessary test coverage information from service implementations, our approach allows service consumers to determine test coverage based on selected events exposed by services at runtime without releasing the service implementation details. We also develop an approach to design test cases effectively based on event interfaces concerning both effectiveness and information leakage. The experimental results show that our approach outperforms existing testing approaches for service compositions with up to 49 percent more test coverage and an up to 24 percent higher fault-detection rate. Moreover, our solution can trade off effectiveness, efficiency, and information leakage for test case generation.
C1 [Ye, Chunyang; Jacobsen, Hans-Arno] Univ Toronto, Dept Elect & Comp Engn, Toronto, ON M5S 1A1, Canada.
C3 University of Toronto
RP Ye, CY (corresponding author), Univ Toronto, Dept Elect & Comp Engn, Toronto, ON M5S 1A1, Canada.
EM chunyang@msrg.utoronto.ca; jacobsen@eecg.toronto.edu
FU IBM's Center for Advanced Studies; IBM Faculty Award; Natural Sciences
   and Engineering Research Council of Canada; Ontario Early Researcher
   Award; Mathematics of Information Technology and Complex Systems
   research network
FX This research was supported in part by IBM's Center for Advanced
   Studies, an IBM Faculty Award, a Discover Accelerator Supplement and a
   Discovery grant from the Natural Sciences and Engineering Research
   Council of Canada, an Ontario Early Researcher Award, and a grant from
   the Mathematics of Information Technology and Complex Systems research
   network.
CR [Anonymous], 2013, WS EV OWL S
   [Anonymous], 2013, ODE BPEL ENG
   [Anonymous], 2013, SCA EV PROC
   [Anonymous], 2013, SUPPLY CHAIN MANAGEM
   [Anonymous], 2013, BOOK ORD
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], 2013, LOAN APPR
   [Anonymous], 2013, WEB SERV DESCR LANG
   Ardissono L, 2005, THIRD EUROPEAN CONFERENCE ON WEB SERVICES, PROCEEDINGS, P182
   Bai XY, 2005, SOSE 2005: IEEE INTERNATIONAL WORKSHOP ON SERVICE-ORIENTED SYSTEM ENGINEERING, P207
   Bartolini C., 2011, PERFORMANCE IN PRESS
   Bartolini C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P161, DOI 10.1145/1595696.1595721
   Bartolini C, 2011, J SYST SOFTWARE, V84, P655, DOI 10.1016/j.jss.2010.10.024
   Bartolini C, 2008, LECT NOTES COMPUT SC, V5364, P524, DOI 10.1007/978-3-540-89652-4_41
   Bentakouk L, 2009, LECT NOTES COMPUT SC, V5826, P16, DOI 10.1007/978-3-642-05031-2_2
   Bertolino A, 2008, LECT NOTES COMPUT SC, V5047, P266, DOI 10.1007/978-3-540-68524-1_19
   Bertolino A, 2009, IEEE ICST WORKSHOP, P277, DOI 10.1109/ICSTW.2009.39
   Beydeda S, 2001, ACS/IEEE INTERNATIONAL CONFERENCE ON COMPUTER SYSTEMS AND APPLICATIONS, PROCEEDINGS, P328, DOI 10.1109/AICCSA.2001.934006
   Beyer Dirk., 2005, 15 WORLD WIDE WEB C, P148
   Briand L. C., 2006, 28th International Conference on Software Engineering Proceedings, P92, DOI 10.1145/1134285.1134300
   Briand LC, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P14, DOI 10.1109/ISSRE.2003.1251027
   Bucchiarone A., 2007, P 8 ARG S SOFTW ENG
   Canfora G., 2006, IT Professional, V8, P10, DOI 10.1109/MITP.2006.51
   Canfora Gerardo, 2009, Software Engineering. International Summer Schools ISSSE 2006-2008. Revised Tutorial Lectures, P78, DOI 10.1007/978-3-540-95888-8_4
   Chan WK, 2007, INT J WEB SERV RES, V4, P61, DOI 10.4018/jwsr.2007040103
   Chandy K., 2006, P GARTN APPL INT WEB
   Chatzikokolakis K, 2010, LECT NOTES COMPUT SC, V6015, P390, DOI 10.1007/978-3-642-12002-2_33
   Chunyan Ma, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P731, DOI 10.1109/CSSE.2008.790
   Chunyang Ye, 2006, 28th International Conference on Software Engineering Proceedings, P351, DOI 10.1109/CHICC.2006.4347167
   Clarke L. A., 1976, IEEE Transactions on Software Engineering, VSE-2, P215, DOI 10.1109/TSE.1976.233817
   Corbett J. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P439, DOI 10.1109/ICSE.2000.870434
   Dai GL, 2007, P INT COMP SOFTW APP, P517
   DEALFARO L, 2001, P 9 ANN S FDN SOFTW, P109
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DENICOLA R, 1983, LECT NOTES COMPUT SC, V154, P548
   Dranidis D, 2009, ECOWS'09: PROCEEDINGS OF THE 7TH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P139, DOI 10.1109/ECOWS.2009.19
   Emmi M, 2008, LECT NOTES COMPUT SC, V5014, P116
   Epifani I., 2010, P 18 ACM SIGSOFT INT, P227
   Foster H, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P152, DOI 10.1109/ASE.2003.1240303
   Fu X., 2004, P 13 INT C WORLD WID, P621
   Gaaloul W, 2010, IEEE T SERV COMPUT, V3, P32, DOI 10.1109/TSC.2010.1
   Ganesh V, 2007, LECT NOTES COMPUT SC, V4590, P519
   Guoquan Wu, 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P161, DOI 10.1109/ICWS.2011.124
   Guoquan Wu, 2010, 2010 IEEE International Conference on Web Services (ICWS), P68, DOI 10.1109/ICWS.2010.29
   Hallé S, 2010, COMPUTER, V43, P59, DOI 10.1109/MC.2010.76
   Hanson JE, 2002, SIXTH INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P65, DOI 10.1109/EDOC.2002.1137697
   HODGES JL, 1963, ANN MATH STAT, V34, P598, DOI 10.1214/aoms/1177704172
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Kaschner K, 2009, LECT NOTES COMPUT SC, V5472, P66, DOI 10.1007/978-3-642-01247-1_7
   Li GL, 2010, ACM T WEB, V4, DOI 10.1145/1658373.1658375
   Li Li, 2008, 2008 IEEE International Conference on Web Services (ICWS), P473, DOI 10.1109/ICWS.2008.104
   Li ZJ, 2008, IBM SYST J, V47, P457, DOI 10.1147/sj.473.0457
   Li ZH, 2005, 2005 IEEE International Conference on Web Services, Vols 1 and 2, Proceedings, P103
   Luckham David C., 2001, POWER EVENTS INTRO C
   Mariani L, 2004, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2004.1317429
   Mariani L, 2007, PROC INT CONF SOFTW, P85
   Mather L., 2012, J CRYPTOGRAPHIC ENG, V2, P131
   Mayer J., 2006, P 5 ACM IEEE INT S E, P105
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Mei L., 2009, P 18 INT C WORLD WID, P901, DOI DOI 10.1145/1526709.1526830
   Mei LJ, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P151, DOI 10.1145/1595696.1595720
   Mei LJ, 2009, INT CONF QUAL SOFTW, P21, DOI 10.1109/QSIC.2009.12
   Mei LJ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P371, DOI 10.1145/1368088.1368139
   Muccini H, 2004, IEEE T SOFTWARE ENG, V30, P160, DOI 10.1109/TSE.2004.1271170
   Noikajana S, 2008, INT CONF QUAL SOFTW, P321, DOI 10.1109/QSIC.2008.7
   Orso A., 2001, Engineering Distributed Objects. Second International Workshop, EDO 2000. Revised Papers. (Lecture Notes in Computer Science Vol.1999), P129
   Peltz C, 2003, COMPUTER, V36, P46, DOI 10.1109/MC.2003.1236471
   Rutherford MJ, 2008, IEEE T SOFTWARE ENG, V34, P452, DOI 10.1109/TSE.2008.33
   Shannon C. E., 1948, BELL SYST TECH J, V27, P379, DOI DOI 10.1002/J.1538-7305.1948.TB01338.X
   Tien-Dung Cao, 2010, 2010 IEEE International Conference on Web Services (ICWS), P76, DOI 10.1109/ICWS.2010.19
   Tretmans J., 1996, Tools and Algorithms for the Construction and Analysis of Systems. Second International Workshop, TACAS '96. Proceedings, P127
   Wang LQ, 2006, IEEE T SOFTWARE ENG, V32, P93, DOI 10.1109/TSE.2006.1599419
   Wang Y, 2007, EIGHTH INTERNATIONAL SYMPOSIUM ON AUTONOMOUS DECENTRALIZED SYSTEMS, PROCEEDINGS, P43, DOI 10.1109/ISADS.2007.54
   WEYUKER EJ, 1986, IEEE T SOFTWARE ENG, V12, P1128, DOI 10.1109/TSE.1986.6313008
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xu WZ, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P257, DOI 10.1109/ISSRE.2005.44
   Ye C., 2010, TECHNICAL REPORT
   Ye CY, 2009, IEEE T SOFTWARE ENG, V35, P2, DOI 10.1109/TSE.2008.86
   Yongyan Zheng, 2007, Journal of Software, V2, P64
   Yuan Y., 2006, P INT C SOFTWARE ENG, P14
   Zhenyi Jin, 1998, Software Testing, Verification and Reliability, V8, P133, DOI 10.1002/(SICI)1099-1689(1998090)8:3<133::AID-STVR162>3.0.CO;2-M
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
   Zhu H, 2012, IEEE T SERV COMPUT, V5, P116, DOI 10.1109/TSC.2010.54
NR 84
TC 24
Z9 24
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2013
VL 39
IS 10
BP 1444
EP 1465
DI 10.1109/TSE.2013.20
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 228FO
UT WOS:000325171400007
DA 2024-07-18
ER

PT J
AU Falessi, D
   Cantone, G
   Canfora, G
AF Falessi, Davide
   Cantone, Giovanni
   Canfora, Gerardo
TI Empirical Principles and an Industrial Case Study in Retrieving
   Equivalent Requirements via Natural Language Processing Techniques
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical software engineering; traceability recovery; natural language
   processing; equivalent requirements; metrics and measurement
ID RECOVERING TRACEABILITY LINKS; SOFTWARE; KNOWLEDGE; TOOLS
AB Though very important in software engineering, linking artifacts of the same type (clone detection) or different types (traceability recovery) is extremely tedious, error-prone, and effort-intensive. Past research focused on supporting analysts with techniques based on Natural Language Processing (NLP) to identify candidate links. Because many NLP techniques exist and their performance varies according to context, it is crucial to define and use reliable evaluation procedures. The aim of this paper is to propose a set of seven principles for evaluating the performance of NLP techniques in identifying equivalent requirements. In this paper, we conjecture, and verify, that NLP techniques perform on a given dataset according to both ability and the odds of identifying equivalent requirements correctly. For instance, when the odds of identifying equivalent requirements are very high, then it is reasonable to expect that NLP techniques will result in good performance. Our key idea is to measure this random factor of the specific dataset(s) in use and then adjust the observed performance accordingly. To support the application of the principles we report their practical application to a case study that evaluates the performance of a large number of NLP techniques for identifying equivalent requirements in the context of an Italian company in the defense and aerospace domain. The current application context is the evaluation of NLP techniques to identify equivalent requirements. However, most of the proposed principles seem applicable to evaluating any estimation technique aimed at supporting a binary decision (e. g., equivalent/nonequivalent), with the estimate in the range [0, 1] (e.g., the similarity provided by the NLP), when the dataset(s) is used as a benchmark (i.e., testbed), independently of the type of estimator (i.e., requirements text) and of the estimation method (e.g., NLP).
C1 [Falessi, Davide; Cantone, Giovanni] Univ Roma Tor Vergata, Dept Informat Syst & Prod Engn DISP, I-00133 Rome, Italy.
   [Canfora, Gerardo] Univ Sannio, I-82100 Benevento, Italy.
C3 University of Rome Tor Vergata; University of Sannio
EM d.falessi@ieee.org; cantone@uniroma2.it; canfora@unisannio.it
OI Canfora, Gerardo/0000-0003-0049-1279
FU SELEX SI [SSI-DISP/07/08]; Engineering Department of SELEX SI
FX The authors thank the several reviewers that provided hundreds of useful
   and rigorous comments; these significantly contributed to improving the
   quality of the paper. They would like to thank Lionel Claude Briand for
   his valuable suggestions in the early phase of this work. They also
   thank the Engineering Department of SELEX SI for their insightful
   interactions and support provided, especially Emanuela Barbi and
   Vincenzo Sabbatino. They are grateful to Carlo Ieva for developing
   ANTARTICA (Overview under Section 4.2.3) and Alessandro D'Angio for
   implementing the simulation (Section 4.3). This work was partially
   supported by SELEX SI under the research grant: SSI-DISP/07/08.
CR Alves V., 2008, P 12 INT SOFTW PROD
   [Anonymous], 1993, P IEEE INT S REQ ENG
   [Anonymous], 1988, Applied Regression Analysis and Other Multivariable Methods
   [Anonymous], 2002, Sampling
   [Anonymous], 200908 SIM RES LAB
   [Anonymous], P 27 INT C SOFTW ENG
   [Anonymous], 2000, FDN STAT NATURAL LAN
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G., 2000, P C SOFTW MAINT REEN
   Antoniol G., 2000, P 7 WORK C REV ENG
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Binkley D., 2010, ENCY SOFTWARE ENG, P231
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bosch J., 2004, P 3 INT C SOFTW PROD
   Briand L. C., 2001, Empirical Software Engineering, V6, P11, DOI 10.1023/A:1009815306478
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Canfora G., 2007, J COMPUTING INFORM T, V12
   Capobianco G., 2009, P INT C PROGR COMPR
   Chang J., 2009, P C ART INT STAT
   Chantree F, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P59
   Church K. W., 1995, VLC ACL
   Cleland-Huang J., 2010, P 32 ACM IEEE INT C, V1
   CLELANDHUANG J, 2005, P 13 IEEE INT C REQ
   Clements P, 2002, IEEE SOFTWARE, V19, P28, DOI 10.1109/MS.2002.1020283
   Clements P., 2002, Software product lines
   Clements Paul C., 2005, CMUSEI2005TR003
   Cohen J., 1988, STAT POWER ANAL BEHA
   Corley C., 2005, P ACL WORKSH EMP MOD
   Dag JNO, 2006, EMPIR SOFTW ENG, V11, P303, DOI 10.1007/s10664-006-6405-5
   Dag JNO, 2005, IEEE SOFTWARE, V22, P32, DOI 10.1109/MS.2005.1
   De Lucia A., 2006, P 22 IEEE INT C SOFT
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2009, EMPIR SOFTW ENG, V14, P57, DOI 10.1007/s10664-008-9090-8
   Dekhtyar A., 2007, P 3 INT WORKSH PRED
   Dekhtyar A., 2007, PROC TRACEABILITY EM
   DeLuca P.M., 2008, J ICRU, V8, P3
   Di Penta M., 2002, P 10 INT WORKSH PROG
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Duan C., 2007, International Conference on Automated Software Engineering, P244
   Dunteman George., 1989, PRINCIPAL COMPONENT
   Etzkorn LH, 2001, J PRAGMATICS, V33, P1731, DOI 10.1016/S0378-2166(00)00068-0
   Falessi D, 2010, EMPIR SOFTW ENG, V15, P250, DOI 10.1007/s10664-009-9121-0
   Fellbaum C., 1998, WORDNET ELECT LEXICA, DOI DOI 10.7551/MITPRESS/7287.001.0001
   Frakes W. B., 1987, SIGIR Forum, V21, P30, DOI 10.1145/24634.24636
   Frakes WB., 1992, Information retrieval: Data structures and algorithms
   Gibiec M., 2010, P IEEE ACM INT C AUT
   Guldali B., 2009, P IEEE ACM INT C AUT
   Hayes J.H., 2009, P ICSE WORKSH TRAC E
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hayes JH, 2005, INT J SOFTW ENG KNOW, V15, P751, DOI 10.1142/S021819400500252X
   Holbrook EA, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P149, DOI 10.1109/RE.2009.10
   Hull D. A., 1996, P 19 ANN INT ACM SIG
   Jiang J, 1997, INTERNATIONAL CONFERENCE ON CONSUMER ELECTRONICS, 1997 DIGEST OF TECHNICAL PAPERS, P94
   JOHN I., 2006, P 10 INT SOFTW PROD
   John I., 2006, SOFTWARE PRODUCT LIN, P127
   Jones K.S., 1988, Document Retrieval Systems, P132
   Kang Kyo C, 1990, Technical Report
   Kitchenham B, 1998, IEEE T SOFTWARE ENG, V24, P278, DOI 10.1109/32.677185
   Kitchenham B, 2009, P 5 INT C PRED MOD S, P1, DOI DOI 10.1145/1540438.1540444
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kittredge Richard, 1982, Sublanguage: Studies of language in restricted semantic domains
   Kiyavitskaya N, 2008, REQUIR ENG, V13, P207, DOI 10.1007/s00766-008-0063-7
   Larose D.T., 2007, Data Mining Methods and Models Set
   Lauenroth K., 2007, P 22 IEEE ACM INT C
   Lehrberger J., 1986, ANAL LANGUAGE RESTRI
   Lin D., 1995, P 15 INT C MACH LEAR
   Liu X.-Y., 2007, P INT C MACH LEARN C
   Lormans M., 2006, P C SOFTW MAINT REEN
   MAAREK YS, 1991, IEEE T SOFTWARE ENG, V17, P800, DOI 10.1109/32.83915
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Mccune B, 2002, ANAL ECOLOGICAL COMM, V289, P448
   Miller J, 1997, INFORM SOFTWARE TECH, V39, P285, DOI 10.1016/S0950-5849(96)01139-1
   Miller J, 2004, J SYST SOFTWARE, V73, P183, DOI 10.1016/j.jss.2003.12.019
   Mittas N, 2008, J SYST SOFTWARE, V81, P616, DOI 10.1016/j.jss.2007.07.039
   Natt och Dag J., 2004, P 12 IEEE INT REQ EN
   Natt och Dag J., 2002, REQUIREMENTS ENG J, V7
   Niu N., 2008, P 16 IEEE INT REQ EN
   Niu N., 2008, P 12 INT SOFTW PROD
   Paech B., 2008, INNOVATIONS REQUIREM
   Pirro G., 2008, P C MOV MEAN INT SYS
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Porter MF, 2006, PROGRAM-ELECTRON LIB, V40, P211, DOI [10.1108/00330330610681286, 10.1108/eb046814]
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Resnik P, 1995, INT JOINT CONF ARTIF, P448
   Robertson S, 2004, J DOC, V60, P503, DOI 10.1108/00220410410560582
   Runeson P, 2007, P 29 INT C SOFTW ENG
   Sage A. P., 2001, Information.Knowledge.Systems Management, V2, P325
   Salton G., 1989, Automatic Text Processing: The Transformation, Analysis, and Retrieval of Information by Computer
   Savolainen J., 2001, P 5 IEEE INT S REQ E
   Sawyer P, 2005, IEEE T SOFTWARE ENG, V31, P969, DOI 10.1109/TSE.2005.129
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Stevenson M, 2001, COMPUT LINGUIST, V27, P321, DOI 10.1162/089120101317066104
   Stierna EJ, 2003, INFORM PROCESS MANAG, V39, P67, DOI 10.1016/S0306-4573(02)00025-0
   Sultanov H., 2010, P 18 IEEE INT REQ EN
   Sundaram SK, 2010, REQUIR ENG, V15, P313, DOI 10.1007/s00766-009-0096-6
   TEFSE, 2011, GRAND CHALL TRAC
   Uusitalo E.J., 2008, P 16 IEEE INT REQ EN
   Van Rijsbergen C. J., 1979, Information Retrieval, V2nd
   Vinz B., 2008, P INT C SOFTW ENG RE
   Wang X., 2008, P INT C SOFTW ENG
   Wass J.A., 2012, COMP STAT SOFTWARE R
   Weber-Jahnke J.H., 2009, P 17 IEEE INT REQ EN
   Witten I. H., 2005, DATA MINING PRACTICA
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yadla S., 2005, INFORM SYSTEMS SOFTW
   Yang H., 2010, P IEEE ACM INT C AUT
   Yates F., 1934, J ROYAL STAT SOC S1
   Yue T., 2010, REQUIR ENG, P1
   Zou X., 2007, P ACM INT S GRAND CH
   Zou X., 2004, P CTI RES S
   Zou X., 2009, EMPIR SOFTW ENG, V15, P119
NR 112
TC 62
Z9 70
U1 0
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2013
VL 39
IS 1
BP 18
EP 44
DI 10.1109/TSE.2011.122
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 063KJ
UT WOS:000312996800002
DA 2024-07-18
ER

PT J
AU Tribastone, M
   Ding, J
   Gilmore, S
   Hillston, J
AF Tribastone, Mirco
   Ding, Jie
   Gilmore, Stephen
   Hillston, Jane
TI Fluid Rewards for a Stochastic Process Algebra
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Modeling and prediction; ordinary differential equations; Markov
   processes
ID PERFORMANCE; PERFORMABILITY
AB Reasoning about the performance of models of software systems typically entails the derivation of metrics such as throughput, utilization, and response time. If the model is a Markov chain, these are expressed as real functions of the chain, called reward models. The computational complexity of reward-based metrics is of the same order as the solution of the Markov chain, making the analysis infeasible when evaluating large-scale systems. In the context of the stochastic process algebra PEPA, the underlying continuous-time Markov chain has been shown to admit a deterministic (fluid) approximation as a solution of an ordinary differential equation, which effectively circumvents state-space explosion. This paper is concerned with approximating Markovian reward models for PEPA with fluid rewards, i.e., functions of the solution of the differential equation problem. It shows that 1) the Markovian reward models for typical metrics of performance enjoy asymptotic convergence to their fluid analogues, and that 2) via numerical tests, the approximation yields satisfactory accuracy in practice.
C1 [Tribastone, Mirco] Univ Munich, Inst Informat, D-80538 Munich, Germany.
   [Ding, Jie] Yangzhou Univ, Coll Informat Engn, Yangzhou 225009, Jiangsu, Peoples R China.
   [Gilmore, Stephen; Hillston, Jane] Univ Edinburgh, Lab Fdn Comp Sci, Sch Informat, Informat Forum, Edinburgh EH8 9AB, Midlothian, Scotland.
C3 University of Munich; Yangzhou University; University of Edinburgh
RP Tribastone, M (corresponding author), Univ Munich, Inst Informat, Oettingenstr 67, D-80538 Munich, Germany.
EM tribastone@pst.ifi.lmu.de; jieding@yzu.edu.cn; stg@inf.ed.ac.uk;
   jeh@inf.ed.ac.uk
OI Tribastone, Mirco/0000-0002-6018-5989
FU Mobile VCE; EPSRC [EP/C54370X/1] Funding Source: UKRI
FX Part of this research was carried out while M. Tribastone and J. Ding
   were at the University of Edinburgh, with the School of Informatics and
   the School of Engineering, respectively. J. Ding acknowledges financial
   support from Mobile VCE.
CR Aldini A, 2007, THEOR COMPUT SCI, V382, P3, DOI 10.1016/j.tcs.2007.05.006
   Alexopoulos C., 2004, ACM Transactions on Modeling and Computer Simulation, V14, P76, DOI 10.1145/974734.974738
   [Anonymous], 2009, ADV CALCULUS
   Ascher U.M., 1988, COMPUTER METHODS ORD
   BEAUDRY MD, 1978, IEEE T COMPUT, V27, P540, DOI 10.1109/TC.1978.1675145
   Billingsley P., 1995, PROBABILITY MEASURE
   Bradley JT, 2008, LECT NOTES COMPUT SC, V5119, P29, DOI 10.1007/978-3-540-69814-2_4
   Clark A., 2008, P 7 WORKSH PROC ALG
   Clark A, 2008, LECT NOTES COMPUT SC, V5261, P2, DOI 10.1007/978-3-540-87412-6_2
   Clark A, 2007, LECT NOTES COMPUT SC, V4486, P132
   Clark G., 1999, Formal Methods for Real-Time and Probabilistic Systems. 5th International AMAST Workshop, ARTS'99. Proceedings, P211
   Darling RWR, 2008, PROBAB SURV, V5, P37, DOI 10.1214/07-PS121
   Ding J., 2010, Ph.D. thesis
   Gurvits L, 2005, LINEAR ALGEBRA APPL, V404, P85, DOI 10.1016/j.laa.2005.02.007
   Haverkort B. R., 1993, Discrete Event Dynamic Systems: Theory & Applications, V3, P219, DOI 10.1007/BF01439850
   Haverkort B.R., 1998, Performance of Computer Communication Systems: A Model-Based Approach
   Hillston J., 2005, Proceedings. Second International Conference on the Quantitative Evaluation of Systems, P33, DOI 10.1109/QEST.2005.12
   Hillston J., 1996, A Compositional Approach to Performance Modelling
   Kemeny J., 1960, Finite Markov Chains
   LITTLE JDC, 1961, OPER RES, V9, P383, DOI 10.1287/opre.9.3.383
   MEYER JF, 1980, IEEE T COMPUT, V29, P720, DOI 10.1109/TC.1980.1675654
   MEYER JF, 1992, PERFORM EVALUATION, V14, P139, DOI 10.1016/0166-5316(92)90002-X
   POLLETT PK, 1990, J AUST MATH SOC B, V32, P133, DOI 10.1017/S0334270000008390
   Sanders W.H., 1990, DEPENDABLE COMPUTING, P215
   SMITH RM, 1988, IEEE T COMPUT, V37, P406, DOI 10.1109/12.2184
   Stewart W. J., 2009, Probability, Markov Chains, Queues, and Simulation: the Mathematical Basis of Performance Modeling
   Tribastone Mirco, 2009, Performance Evaluation Review, V36, P28, DOI 10.1145/1530873.1530880
   Tribastone M., 2010, THESIS U EDINBURGH
   Tribastone M, 2008, INT CONF QUANT EVAL, P205, DOI 10.1109/QEST.2008.18
   Tribastone M, 2012, IEEE T SOFTWARE ENG, V38, P205, DOI 10.1109/TSE.2010.82
   Tribastone Mirco, 2008, P 7 INT WORKSH SOFTW
   TRIVEDI KS, 1992, PERFORM EVALUATION, V14, P197, DOI 10.1016/0166-5316(92)90004-Z
   Wu L. T., 1982, Performance Evaluation Review, V11, P179, DOI 10.1145/1035332.1035319
NR 33
TC 19
Z9 19
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2012
VL 38
IS 4
BP 861
EP 874
DI 10.1109/TSE.2011.81
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 983LE
UT WOS:000307120000008
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Di Pietro, I
   Pagliarecci, F
   Spalazzi, L
AF Di Pietro, Ivan
   Pagliarecci, Francesco
   Spalazzi, Luca
TI Model Checking Semantically Annotated Services
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Formal methods; model checking; temporal logic; description logic;
   intelligent web services; semantic web; web services
ID LOGIC
AB Model checking is a formal verification method widely accepted in the web service world because of its capability to reason about service behavior at process level. It has been used as a basic tool in several scenarios such as service selection, service validation, and service composition. The importance of semantics is also widely recognized. Indeed, there are several solutions to the problem of providing semantics to web services, most of them relying on some form of Description Logic. This paper presents an integration of model checking and semantic reasoning technologies in an efficient way. This can be considered the first step toward the use of semantic model checking in problems of selection, validation, and composition. The approach relies on a representation of services at process level that is based on semantically annotated state transition systems (ASTS) and a representation of specifications based on a semantically annotated version of computation tree logic (AnCTL). This paper proves that the semantic model checking algorithm is sound and complete and can be accomplished in polynomial time. This approach has been evaluated with several experiments.
C1 [Di Pietro, Ivan; Pagliarecci, Francesco; Spalazzi, Luca] Univ Politecn Marche, I-60131 Ancona, Italy.
C3 Marche Polytechnic University
RP Di Pietro, I (corresponding author), Univ Politecn Marche, Via Brecce Bianche, I-60131 Ancona, Italy.
EM dipietro@diiga.univpm.it; pagliarecci@diiga.univpm.it;
   spalazzi@diiga.univpm.it
RI Spalazzi, Luca/A-9983-2013
OI SPALAZZI, Luca/0000-0002-4807-6632
FU Direct For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [0954024] Funding Source: National Science
   Foundation
CR Agarwal S., 2007, P INT C WEB INT
   AGARWAL S, 2007, THESIS U KARLSRUHE T
   Alonso G., 2004, DAT SYS APP, DOI 10.1007/978-3-662-10876-5_5
   Andrews Tony., 2003, Business process execution language for web services
   Ankolekar A, 2002, LECT NOTES COMPUT SC, V2342, P348
   [Anonymous], 1990, HDB THEORETICAL COMP
   [Anonymous], OPENTRAVEL IMPL GUID
   [Anonymous], P 21 NAT C ART INT
   Artale A, 2007, INT WORKSHOP TEMPORA, P11
   Artale A, 2000, ANN MATH ARTIF INTEL, V30, P171, DOI 10.1023/A:1016636131405
   Baader F., 2003, DESCRIPTION LOGIC HD
   Baader F, 2009, LECT NOTES ARTIF INT, V5749, P149, DOI 10.1007/978-3-642-04222-5_9
   Barker A, 2009, IEEE T SERV COMPUT, V2, P152, DOI 10.1109/TSC.2009.8
   Berardi D., 2003, P INT JOINT C SERV O
   Bertoli P., 2001, P IJCAI 01 WORKSH PL
   Boaro L., 2010, P INT C HIGH PERF CO
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   BURCH JR, 1992, INFORM COMPUT, V98, P142, DOI 10.1016/0890-5401(92)90017-A
   Calvanese D., 2006, P 10 INT C PRINC KNO
   Cimatti A., 2000, Int. J. Softw. Tools for Technol. Transf. (STTT), V2, P410, DOI [DOI 10.1007/S100090050046, 10.1007/s100090050046]
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Clarke EM, 1996, ACM COMPUT SURV, V28, P626, DOI 10.1145/242223.242257
   De Bruijn J., 2005, Web service modeling ontology (wsmo)
   Deutsch A., 2006, PODS 06, P90
   Di Pietro Ivan, 2008, Wl 2008. 2008 IEEE/WIC/ACM International Conference on Web Intelligence. IAT 2008. 2008 IEEE/WIC/ACM International Conference on Intelligent Agent Technology. Wl-IAT Workshop 2008 2008 IEEE/WIC/ACM International Conferences on Web Intelligence and Intelligent Agent Technology Workshops, P605, DOI 10.1109/WIIAT.2008.237
   Di Pietro I, 2009, COMPUT COMMUN NETW S, P289, DOI 10.1007/978-1-84882-599-4_13
   Emerson E., 1996, DIMACS 31, P185
   Euzenat J., 2007, ONTOLOGY MATCHING, DOI 10.1007/978-3-540-49612-0
   FISCHER MJ, 1979, J COMPUT SYST SCI, V18, P194, DOI 10.1016/0022-0000(79)90046-1
   GIUNCHIGLIA F., 2007, DIT07071 U TRENT
   Hallé S, 2009, IEEE T SOFTWARE ENG, V35, P669, DOI 10.1109/TSE.2009.29
   Holzmann GJ, 2004, The SPIN model checker: primer and reference manual, V1003
   Hull R., 2003, P ACM SIGMOD SIGACT
   *INT ORG STAND, 2006, 211272006 ISO
   Int'l Organization for Standardization, 2007, 1594442000E ISOIEC
   LAM SS, 1990, IEEE T SOFTWARE ENG, V16, P755, DOI 10.1109/32.56101
   LAUSEN H., 2005, Web Service Modeling Ontology (WSMO), W3C Member Submission
   Leo T., 2009, P 4 INT FOR KNOWL AS
   Lutz C, 2008, TIME 2008: 15TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P3, DOI 10.1109/TIME.2008.14
   MANDELL D, 2003, P 2 INT SEM WEB C
   McGuinness D.L., 2004, W3C RECOMMENDATION, V10
   McIlraith S., 2002, P INT C KNOWL REPR R
   Milanovic N, 2004, IEEE INTERNET COMPUT, V8, P51, DOI 10.1109/MIC.2004.58
   NARAYANAN S, 2002, P INT C WORLD WID WE
   OWL Services Coalition, 2004, OWL-S: Semantic Markup for Web Services
   Patil A., 2004, P INT C WORLD WID WE
   Pistore M., 2006, P 3 EUR SEM WEB C
   Pistore M., 2005, P INT JOINT C ART IN
   Rabinovich A, 2000, THEOR COMPUT SCI, V243, P467, DOI 10.1016/S0304-3975(00)00033-5
   Schnoebelen P., 2002, Advances in Modal Logic, V4, P393
   Sheshagiri M., 2003, P WORKSH WEB SERV AG
   Sheth A., 2005, P ECLIPSECON
   Sirin E, 2007, J WEB SEMANT, V5, P51, DOI 10.1016/j.websem.2007.03.004
   SOLLAZO T, 2002, P 15 INT FLAIRS C, P425
   TOBIES S, 2001, THESIS RWTH AACHEN
   Traverso P., 2004, P INT SEM WEB C
   Vardi MY, 2007, STUD LOGIC PRACT REA, V3, P971
   Verma K., 2005, P INT WORKSH SEM DYN
   Verma K, 2007, IEEE INTERNET COMPUT, V11, P83, DOI 10.1109/MIC.2007.48
   W3C Semantic Annotations for Web Service Description Language Working Group, 2007, SEM ANN WSDL XML SCH
   Weitl F, 2009, DATA KNOWL ENG, V68, P292, DOI 10.1016/j.datak.2008.10.003
   WU D, 2003, P INT SEM WEB C
   Zhang XW, 2009, LECT NOTES ARTIF INT, V5803, P615, DOI 10.1007/978-3-642-04617-9_77
NR 63
TC 13
Z9 13
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2012
VL 38
IS 3
BP 592
EP 608
DI 10.1109/TSE.2011.10
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 947FP
UT WOS:000304414400007
DA 2024-07-18
ER

PT J
AU Lim, SL
   Finkelstein, A
AF Lim, Soo Ling
   Finkelstein, Anthony
TI StakeRare: Using Social Networks and Collaborative Filtering for
   Large-Scale Requirements Elicitation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements/specifications; elicitation methods; requirements
   prioritization; experimentation; human factors; recommender systems;
   social network analysis; stakeholder analysis
ID FUNCTION POINTS; SOFTWARE; PRIORITIZATION; PREDICTION; DESIGN; LINES;
   MODEL; CODE
AB Requirements elicitation is the software engineering activity in which stakeholder needs are understood. It involves identifying and prioritizing requirements-a process difficult to scale to large software projects with many stakeholders. This paper proposes StakeRare, a novel method that uses social networks and collaborative filtering to identify and prioritize requirements in large software projects. StakeRare identifies stakeholders and asks them to recommend other stakeholders and stakeholder roles, builds a social network with stakeholders as nodes and their recommendations as links, and prioritizes stakeholders using a variety of social network measures to determine their project influence. It then asks the stakeholders to rate an initial list of requirements, recommends other relevant requirements to them using collaborative filtering, and prioritizes their requirements using their ratings weighted by their project influence. StakeRare was evaluated by applying it to a software project for a 30,000-user system, and a substantial empirical study of requirements elicitation was conducted. Using the data collected from surveying and interviewing 87 stakeholders, the study demonstrated that StakeRare predicts stakeholder needs accurately and arrives at a more complete and accurately prioritized list of requirements compared to the existing method used in the project, taking only a fraction of the time.
C1 [Lim, Soo Ling; Finkelstein, Anthony] UCL, Dept Comp Sci, London WC1E 6BT, England.
C3 University of London; University College London
RP Lim, SL (corresponding author), UCL, Dept Comp Sci, Gower St, London WC1E 6BT, England.
EM s.lim@cs.ucl.ac.uk; a.finkelstein@cs.ucl.ac.uk
OI Lim, Soo Ling/0000-0003-1325-6542
CR Ahl V., 2005, Master's Thesis
   Akao Y., 2004, QUALITY FUNCTION DEP
   Alag S., 2008, Collective intelligence in action
   Albrech A., 1979, PROC JOINT SHAREGUID, P83
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Alexander I, 2004, IEEE SOFTWARE, V21, P23, DOI 10.1109/MS.2004.1259199
   Alexander IF, 2005, INT J TECHNOL HUM IN, V1, P23, DOI 10.4018/jthi.2005010102
   Anderson Chris., 2004, The Long Tail. Why the future of business is selling less of more
   [Anonymous], 1993, Decisions with Multiple Objectives
   [Anonymous], 1995, MYTHICAL MAN MONTH
   [Anonymous], 1996, Cost-benefit analysis: Theory and application
   [Anonymous], 2004, Proceedings of the international ACM SIGIR conference on Research and development in information retrieval(SIGIR), DOI [10.1145/1008992.1009051, DOI 10.1145/1008992.1009051]
   [Anonymous], 2002, P SYST ENG TEST EV C
   [Anonymous], COLLABORATIVE SOCIAL
   [Anonymous], 1997, Requirements engineering: a good practice guide
   [Anonymous], 1993, Software Requirements-objects, Functions and States
   [Anonymous], 1989, STORYBOARD PROTOTYPI
   Azar J, 2007, IEEE SOFTWARE, V24, P32, DOI 10.1109/MS.2007.30
   Bell RM, 2007, IEEE DATA MINING, P43, DOI 10.1109/ICDM.2007.90
   Berander P, 2006, INT J SOFTW ENG KNOW, V16, P819, DOI 10.1142/S0218194006003026
   BOEHM BW, 1989, IEEE T SOFTWARE ENG, V15, P902, DOI 10.1109/32.29489
   Braga-Neto UM, 2004, BIOINFORMATICS, V20, P374, DOI 10.1093/bioinformatics/btg419
   Burstin M., 1984, P ACM ANN C 5 GEN CH, P133
   Castro-Herrera C, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P37, DOI 10.1109/RE.2009.20
   Castro-Herrera Carlos., 2009, the Symposium on Applied Computing, SAC'09, P1419, DOI [10.1145/1529282.1529601, DOI 10.1145/1529282.1529601]
   Charette RN, 2005, IEEE SPECTRUM, V42, P42, DOI 10.1109/MSPEC.2005.1502528
   Cheng BHC, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P285, DOI 10.1109/FOSE.2007.17
   Cleland-Huang Jane., 2008, ULSSIS 08, P3, DOI DOI 10.1145/1370700.1370702
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   Cross M, 2005, PUBLIC SECTOR IT FAI, P48
   Damian D, 2007, INT REQUIR ENG CONF, P59, DOI 10.1109/RE.2007.51
   Damian D, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P57, DOI 10.1007/978-3-642-10294-3_3
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Davis A, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P179
   DAVIS AM, 1992, IEEE SOFTWARE, V9, P70, DOI 10.1109/52.156899
   Davis AM, 2003, COMPUTER, V36, P42, DOI 10.1109/MC.2003.1185216
   Duan C, 2009, REQUIR ENG, V14, P73, DOI 10.1007/s00766-009-0079-7
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Fischer M, 2004, J SOFTW MAINT EVOL-R, V16, P385, DOI 10.1002/smr.302
   Galin Daniel, 2004, Software quality assurance: from theory to implementation
   Gause D.C., 1989, EXPLORING REQUIREMEN
   GOLDBERG D, 1992, COMMUN ACM, V35, P61, DOI 10.1145/138859.138867
   Goldstein H, 2005, IEEE SPECTRUM, V42, P24, DOI 10.1109/MSPEC.2005.1502526
   GOODMAN LA, 1961, ANN MATH STAT, V32, P148, DOI 10.1214/aoms/1177705148
   Gui-Rong Xue, 2005, SIGIR 2005. Proceedings of the Twenty-Eighth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P114
   HANNEMAN R. A., 2005, Introduction to social network methods
   Herlocker JL, 2004, ACM T INFORM SYST, V22, P5, DOI 10.1145/963770.963772
   Herlocker JL, 1999, SIGIR'99: PROCEEDINGS OF 22ND INTERNATIONAL CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P230, DOI 10.1145/312624.312682
   Herrmann A, 2008, INT REQUIR ENG CONF, P125, DOI 10.1109/RE.2008.48
   Holbrook H.  III, 1990, SIGSOFT Software Engineering Notes, V15, P95, DOI 10.1145/382294.382725
   Howe J., 2009, CROWDSOURCING
   Howley T, 2006, BCS CONF SERIES, P209, DOI 10.1007/1-84628-224-1_16
   Jacobson I., 1991, OBJECT ORIENTED SOFT
   Jeffery D. R., 1979, Proceedings of the 4th International Conference on Software Engineering, P369
   JONES C, 1995, COMPUTER, V28, P86, DOI 10.1109/2.386991
   JONES C, 2008, APPL SOFTWARE MEASUR
   Jones C., 1998, Estimating Software Cost
   Karlsson J, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P110, DOI 10.1109/ICRE.1996.491435
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Karlsson J, 1998, INFORM SOFTWARE TECH, V39, P939, DOI 10.1016/S0950-5849(97)00053-0
   KEMERER CF, 1993, COMMUN ACM, V36, P85, DOI 10.1145/151220.151230
   Kohavi R., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1137
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   LAUESEN S, 2002, SOFTWARE REQUIREMENT
   Laurent P, 2007, INT REQUIR ENG CONF, P131, DOI 10.1109/RE.2007.63
   Leffingwell D., 1999, MANAGING SOFTWARE RE, V1
   Leffingwell D., 2003, Managing Software Requirements: A Use Case Approach
   Lehtola L, 2004, LECT NOTES COMPUT SC, V3009, P497
   Lim S. L., 2010, Social networks and collaborative filtering for large-scale requirements elicitation
   Lim S.L., 2011, P 33 ACM IEEE INT C
   Lim SooLing., 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering - ICSE'10, V1, P295, DOI DOI 10.1145/1806799.1806844
   Linden G, 2003, IEEE INTERNET COMPUT, V7, P76, DOI 10.1109/MIC.2003.1167344
   Lopez Jose., 2000, SOCIAL STRUCTURE
   LOW GC, 1990, IEEE T SOFTWARE ENG, V16, P64, DOI 10.1109/32.44364
   Maiden N. A. M., 1998, Automated Software Engineering, V5, P419, DOI 10.1023/A:1008605412971
   MCCONNELL S, 1996, RAPID DEV TAMING WIL
   McConnell Steve., 2004, Code Complete, V2nd ed
   McManus J., 2007, Management Services, V51, P38
   Mead N., 2006, Requirements Prioritization Introduction
   Mitchell RK, 1997, ACAD MANAGE REV, V22, P853, DOI 10.2307/259247
   Northrop L., 2006, ULTR SCAL SYST SOFTW
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   PARK J, 1999, P INT 3 WORLD MULT S, V2, P578
   Pearson K, 1901, PHILOS MAG, V2, P559, DOI 10.1080/14786440109462720
   Potts C, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P31
   Rakos John J., 1990, Software project management for small to medium sized projects
   Regnell B., 2001, Requirements Engineering, V6, P51, DOI 10.1007/s007660170015
   Robertson S., 2006, Mastering the Requirements Process
   Roy B.M., 1996, MULTICRITERIA METHOD
   Sarwar B., 2001, P 10 INT C WORLD WID, P285, DOI 10.1145/371920.372071
   Sauer C, 2007, COMMUN ACM, V50, P79, DOI 10.1145/1297797.1297801
   Schaefer R., 2006, ACM SIGSOFT SOFTWARE, V31, P1
   Schaefer R., 2008, ACM SIGSOFT SOFTWARE, V11
   Schafer J. B., 2007, The Adaptive Web. Methods and Strategies of Web Personalization, P291
   Segaran T., 2007, PROGRAMMING COLLECTI
   Sharp H., 1999, Proceedings. Tenth International Workshop on Database and Expert Systems Applications. DEXA 99, P387, DOI 10.1109/DEXA.1999.795198
   Soo Ling Lim, 2010, 2010 32nd International Conference on Software Engineering (ICSE), P239, DOI 10.1145/1810295.1810340
   StanleyWasserman Katherine, 1994, SOCIAL NETWORK ANAL, DOI 10.1017/CBO9780511815478
   Surowiecki James., 2004, WISDOM SHAPES BUSINE
   Taylor, 2017, QUALITATIVE COMMUNIC
   The Standish Group, 2009, CHAOS SUMM 2009 STAN
   The Standish Group, 1994, CHAOS REP STAND GROU, P8
   Triola M.F., 1992, Elementary statistics, V5th
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Wang J., 2006, Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P501, DOI 10.1145/1148170.1148257
   Wiegers K., 1999, Software Development, V7, P48
   Witten I. H., 2005, DATA MINING PRACTICA
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
   YU J, 1983, J MARKETING RES, V20, P36, DOI 10.2307/3151410
   Zachos K, 2007, LECT NOTES COMPUT SC, V4495, P142
   Zave P, 1997, ACM COMPUT SURV, V29, P315, DOI 10.1145/267580.267581
   ZHANG P, 1993, ANN STAT, V21, P299, DOI 10.1214/aos/1176349027
NR 113
TC 114
Z9 128
U1 1
U2 31
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2012
VL 38
IS 3
BP 707
EP 735
DI 10.1109/TSE.2011.36
PG 29
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 947FP
UT WOS:000304414400014
DA 2024-07-18
ER

PT J
AU Jia, Y
   Harman, M
AF Jia, Yue
   Harman, Mark
TI An Analysis and Survey of the Development of Mutation Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Mutation testing; survey
ID FAULT-DETECTION EFFECTIVENESS; TEST DATA GENERATION; DATA-FLOW;
   OPERATORS; MINIMIZATION; PROGRAMS
AB Mutation Testing is a fault-based software testing technique that has been widely studied for over three decades. The literature on Mutation Testing has contributed a set of approaches, tools, developments, and empirical results. This paper provides a comprehensive analysis and survey of Mutation Testing. The paper also presents the results of several development trend analyses. These analyses provide evidence that Mutation Testing techniques and tools are reaching a state of maturity and applicability, while the topic of Mutation Testing itself is the subject of increasing interest.
C1 [Jia, Yue; Harman, Mark] UCL, Dept Comp Sci, London WC1E 6BT, England.
C3 University of London; University College London
RP Jia, Y (corresponding author), UCL, Dept Comp Sci, Malet Pl, London WC1E 6BT, England.
EM yue.jia@cs.ucl.ac.uk; mark.harman@cs.ucl.ac.uk
FU EPSRC [EP/G060525, EP/F059442, EP/D050863]; EU [IST-33742]; ORSA
FX The authors benefitted from many discussions with researchers and
   practitioners in the Mutation Testing community, approximately 50 of
   whom kindly provided very helpful comments and feedback on an earlier
   draft of this analytical survey. The authors are very grateful to these
   colleagues for their time and expertise though they are not able to name
   them all individually. This work is partly funded by EPSRC grants
   EP/G060525, EP/F059442, and EP/D050863 and by EU grant IST-33742. Yue
   Jia is additionally supported by a grant from the ORSA scheme. The
   authors are also grateful to Lorna Anderson and Kathy Harman for
   additional proof reading.
CR Abraham R, 2009, IEEE T SOFTWARE ENG, V35, P94, DOI 10.1109/TSE.2008.73
   Acree A. T., 1980, On Mutation
   Adamopoulos K, 2004, LECT NOTES COMPUT SC, V3103, P1338
   ADAMOPOULOS K, 2009, THESIS KINGS COLL LO
   Agrawal H., 1989, Design of mutant operators for the C programming language
   Aichernig B. K., 2003, Formal Aspects of Computing, V15, P280, DOI 10.1007/s00165-003-0011-8
   Aichernig BK, 2006, LECT NOTES COMPUT SC, V3922, P324
   Alexander RT, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P341, DOI 10.1109/ISSRE.2002.1173285
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Ammann Paul, 2008, Introduction to software testing, V1st
   ANBALAGAN P, 2008, P 19 INT S SOFTW REL, P239
   ANBALAGAN P, 2006, P 2 WORKSH MUT AN, P51
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2006, P 6 INT C QUAL SOFTW
   [Anonymous], SOFTWARE
   [Anonymous], GITSERC8802
   [Anonymous], 1994, P 1994 IEEE INT S SO
   [Anonymous], 1991, P S TEST AN VER TAV
   [Anonymous], 1995, P 12 INT C TEST COMP
   [Anonymous], 2005, ADV MUTATION OPERATO
   [Anonymous], 1988, SERCTR14P PURD U
   [Anonymous], P 2 WORKSH MUT AN MU
   [Anonymous], 1979, Tech. Rep.GIT-ICS-79/08
   [Anonymous], 2008, PROC CAN C COMP SCI
   Ayari K, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1074
   Bækken JS, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P169
   Baldwin D, 1979, 276 YAL U
   Barbosa EF, 2001, SOFTW TEST VERIF REL, V11, P113, DOI 10.1002/stvr.226
   Batth SS, 2007, LECT NOTES COMPUT SC, V4574, P50
   Baudry B, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P195, DOI 10.1109/ISSRE.2002.1173246
   BAUDRY B, 2000, P MUT 2000 KLUW AC P, P47
   Bieman JM, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P337, DOI 10.1109/ASE.2001.989824
   BLACK PE, 2000, P MUTATION 2000, P14
   Bogacki B, 2006, INT FED INFO PROC, V227, P273
   Bogacki B, 2006, LECT NOTES COMPUT SC, V4044, P202
   Bombieri N, 2008, DES AUT TEST EUROPE, P353
   Bradbury JS, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P210, DOI 10.1109/TAIC.PART.2007.37
   BRADBURY JS, 2006, P 2 WORKSH MUT AN MU, P57
   BRADY P, 2007, MUTATEME
   Budd T., 1980, THESIS YALE U
   Budd T. A., 1978, AFIPS Conference Proceedings vol.47. 1978 National Computer Conference, P623
   Budd T.A., 1980, POPL '80: Proceedings of the 7th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, (New York, NY, USA), P220
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   BUDD TA, 1985, COMPUT LANG, V10, P63, DOI 10.1016/0096-0551(85)90011-6
   BUDD TA, 1980, EXPER IMPLEMENTORS G
   Budd Tim, 1977, 114 YAL U, P114
   CARVER R, 1993, INTERNATIONAL TEST CONFERENCE 1993 PROCEEDINGS, P845, DOI 10.1109/TEST.1993.470617
   *CETR, 2006, CERT
   Chan WK, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P187
   Chevalley P., 2003, International Journal on Software Tools for Technology Transfer, V5, P90, DOI 10.1007/s10009-002-0099-9
   Chevalley P, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P267, DOI 10.1109/APSEC.2001.991487
   CHOI B, 1991, THESIS PURDUE U
   CHOI BJ, 1993, J SYST SOFTWARE, V20, P135, DOI 10.1016/0164-1212(93)90005-I
   CRAFT WM, 1989, THESIS CLEMSON U
   Crouzet Y., 2006, PROC 2 WORKSHOP MUTA, P7
   Daran M., 1996, SIGSOFT Software Engineering Notes, V21, P158, DOI [10.1145/229000.226313, 10.1145/226295.226313]
   Delamare R, 2009, IEEE ICST WORKSHOP, P200, DOI 10.1109/ICSTW.2009.41
   Delamaro M., 1999, Proceedings. SCCC'99 XIX International Conference of the Chilean Computer Science Society, P78, DOI 10.1109/SCCC.1999.810156
   Delamaro M. E., 2001, Empirical Software Engineering, V6, P111, DOI 10.1023/A:1011429104252
   Delamaro M.E., 1996, P C PERFORMABILITY C, P79
   Delamaro ME, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P112, DOI 10.1109/ISSRE.1996.558719
   Delamaro ME, 2001, IEEE T SOFTWARE ENG, V27, P228, DOI 10.1109/32.910859
   DELAMARO ME, 2000, INTERFACE MUTATION T
   DELAMARO ME, 1993, THESIS U SAO PAULO
   DELAMARO ME, 2000, P 1 WORKSH MUT AN OC
   DEMILLO R, 1992, SERCTR92P PURD U
   DeMillo R. A., 1989, Proceedings. 11th International Conference on Software Engineering (Cat. No.89CH2718-5), P355, DOI 10.1145/74587.74634
   DeMillo R. A., 1991, Proceedings of the Fifteenth Annual International Computer Software and Applications Conference (Cat. No.91CH3023-9), P351, DOI 10.1109/CMPSAC.1991.170202
   Demillo R. A., 1993, ACM Transactions on Software Engineering and Methodology, V2, P109, DOI 10.1145/151257.151258
   DeMillo R. A., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P142, DOI 10.1109/WST.1988.5369
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   DEMILLO RA, 1983, PROGRAM MUTATION APP
   DEMILLO RA, 1987, SERCTR3P PURD U
   Derezinska A, 2003, EUROMICRO CONF PROC, P417
   DEREZINSKA A, 2007, CREAM SYSTEM OBJECT
   DEREZINSKA A, 2008, P INT C DEP COMP SYS, P261, DOI DOI 10.1109/DEPCOS-RELCOMEX.2008.51
   DING W, 2000, THESIS G MASON U
   Do H, 2005, PROC IEEE INT CONF S, P411
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   du Bousquet L, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P176, DOI 10.1109/TAIC.PART.2007.27
   DU W, 1998, 9802 COAST TR PURD U
   Du WL, 2000, DSN 2000: INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P603, DOI 10.1109/ICDSN.2000.857596
   DUBOUSQUET L, 2007, P 2 INT C SOFTW ENG, P40
   ELLIMS, 2007, CSAW
   Ellims M, 2007, TAIC PART 2007 - Testing: Academic and Industrial Conference - Practice and Research Techniques, Proceedings, P185, DOI 10.1109/TAIC.PART.2007.28
   ESTEROBOTARO A, 2008, P 21 INT C SOFTW SYS
   Fabbri S. C. P. F., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P210, DOI 10.1109/ISSRE.1999.809326
   Fabbri S. C. P. F., 1999, Proceedings. SCCC'99 XIX International Conference of the Chilean Computer Science Society, P96, DOI 10.1109/SCCC.1999.810159
   FABBRI SCP, 1995, P IFIP TC6 8 INT C F, V43, P329
   FENG X, 2008, P TEST AC IND C PRAC, P59
   FERRARI FC, 2008, P 1 INT C SOFTW TEST, P52
   Fichter S., 1991, Parallelizing Mutation on a Hypercube
   FLEYSHGAKKER VN, 1994, P INT S SOFTW TEST A, P185
   Frankl PG, 1997, J SYST SOFTWARE, V38, P235, DOI 10.1016/S0164-1212(96)00154-9
   FRANKL PG, 1994, ALL USES VERSUS MUTA
   FRASER G, 2007, P 3 WORKSH MUT AN PU, P161
   GEIST R, 1992, IEEE T COMPUT, V41, P550, DOI 10.1109/12.142681
   Ghosh AK, 1998, 1998 IEEE SYMPOSIUM ON SECURITY AND PRIVACY - PROCEEDINGS, P104, DOI 10.1109/SECPRI.1998.674827
   Ghosh S, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P17, DOI 10.1109/SCAM.2002.1134101
   Ghosh S, 2001, SOFTW TEST VERIF REL, V11, P227, DOI 10.1002/stvr.239
   Ghosh S, 2000, TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS - TOOLS 34, PROCEEDINGS, P37, DOI 10.1109/TOOLS.2000.868957
   GHOSH S, 2000, P MUTATION 2000 OCT, P103
   GHOSH S, 2000, THESIS PURDUE U
   Girgis M. R., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P313
   Godefroid Patrice, 2005, ACM SIGPLAN NOTICES, P213, DOI DOI 10.1145/1064978.1065036
   GOPAL AS, 1983, 8317 TR U AR
   Grün BJM, 2009, IEEE ICST WORKSHOP, P192, DOI 10.1109/ICSTW.2009.37
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   HANKS JM, 1980, THESIS GEORGIA I TEC
   HARMAN M, 2000, P 1 WORKSH MUT AN OC, P5
   Hierons R.M., 1999, J SOFTW TEST VERIFIC, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:43.0.CO;2-3
   Hierons RM, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P141, DOI 10.1109/TAIC.PART.2007.20
   Hierons RM, 2009, J SYST SOFTWARE, V82, P1804, DOI 10.1016/j.jss.2009.06.030
   HORGAN JR, 1990, SERCTR83P PURD U
   Hou SS, 2007, PROC IEEE INT CONF S, P194
   HOWDEN WE, 1982, IEEE T SOFTWARE ENG, V8, P371, DOI 10.1109/TSE.1982.235571
   HUSSAIN S, 2008, THESIS KINGS COLL LO
   Hwang J, 2008, SYM REL DIST SYST, P105, DOI 10.1109/SRDS.2008.34
   *ITR, 2007, PLEXT
   Jackson D., 2000, P MUTATION 2000, P55
   Ji C., 2009, P 21 INT C SOFTW ENG
   JIA Y, 2009, MUTATION TESTING REP
   Jia Y, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P249, DOI 10.1109/SCAM.2008.36
   Jia Y, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P94, DOI 10.1109/TAIC-PART.2008.18
   JING C, 2008, P IEEE 22 INT C ADV, P667
   Domínguez-Jiménez JJ, 2009, LECT NOTES COMPUT SC, V5404, P229
   Kapoor K, 2006, INNOV SYST SOFTW ENG, V2, P80, DOI 10.1007/s11334-006-0002-z
   Kim S., 2000, P NET OBJECTDAYS C O
   KIM S, 1999, P 12 INT C SOFTW SYS
   KIM S, 1999, P 3 S SOFTW TECHN SE
   KIM S, 2000, P 1 WORKSH MUT AN OC, P207
   KIM SW, 2006, P 2 WORKSH MUT AN NO, P10
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   Krauser E. W., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P171, DOI 10.1109/WST.1988.5372
   KRAUSER EW, 1991, IEEE T SOFTWARE ENG, V17, P403, DOI 10.1109/32.90444
   KRAUSER EW, 1991, THESIS PURD U
   Lakhotia K, 2009, 2009 TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE-PRACTICE AND RESEARCH TECHNIQUES, TAIC PART 2009, P95, DOI 10.1109/TAICPART.2009.15
   Langdon W. B., 2009, P 4 TEST AC IND C PR
   LANGDON WB, 2009, P GEN EV COMP C JUL
   Le Traon Y, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P93, DOI [10.1109/ISSRE.2007.27, 10.1109/ISSRF.2007.27]
   Le Traon Y, 2006, IEEE T SOFTWARE ENG, V32, P571, DOI 10.1109/TSE.2006.79
   Lee SC, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P200, DOI 10.1109/ISSRE.2001.989474
   LEE SD, 1991, THESIS CLEMSON U
   Lee SF, 2008, PROC ANNU SIMUL SYMP, P149, DOI 10.1109/ANSS-41.2008.13
   Li JB, 2005, P INT COMP SOFTW APP, P443
   Lipton R.J., 1971, FAULT DIAGNOSIS COMP
   Lipton R.J., 1978, P WORKSHOP SOFTWARE, P355
   Liu MH, 2006, PROC IEEE INT CONF S, P113
   Long B., 2004, Proceedings. 18th International Parallel and Distributed Processing Symposium
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Ma YS, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P352, DOI 10.1109/ISSRE.2002.1173287
   MA YS, 2005, THESIS KAIST U KOREA
   MA YS, 2006, P 28 INT C SOFTW ENG, P869
   Ma Yu-Seung., 2006, Proceedings of the 28th international conference on Software engineering, P827
   MARTIN E, 2007, P 16 INT C WORLD WID, P667
   Mathur A. P., 1991, Proceedings of the Fifteenth Annual International Computer Software and Applications Conference (Cat. No.91CH3023-9), P604, DOI 10.1109/CMPSAC.1991.170248
   Mathur A. P., 1994, Software Testing, Verification and Reliability, V4, P9, DOI 10.1002/stvr.4370040104
   MATHUR AP, 2008, FDN SOFTWARE TESTING
   MATHUR AP, 1993, EMPIRICAL COMPARISON
   MATHUR AP, 1992, CS 406 SOFTWARE ENG
   May PeterS, 2007, THESIS
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   MOORE I, 2001, JESTER PESTER
   MORELL LJ, 1984, THESIS U MARYLAND CO
   MOUELHI T, 2007, P 3 WORKSH MUT AN PU, P233
   Mouelhiv Tejeddine, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P278, DOI 10.1109/ICSTW.2008.2
   Mresa E. S., 1999, Software Testing, Verification and Reliability, V9, P205, DOI 10.1002/(SICI)1099-1689(199912)9:4<205::AID-STVR186>3.0.CO;2-X
   Namin AS, 2007, PROC INT CONF SOFTW, P73, DOI 10.1109/ICSECOMPANION.2007.56
   Namin AS, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P351, DOI 10.1145/1368088.1368136
   Namin AkbarSiami., 2006, P 2 WORKSHOP MUTATIO, P5
   Nilsson R., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P306, DOI 10.1109/CMPSAC.2004.1342848
   NILSSON R, 2006, P INT WORKSH MOD BAS, P97
   Offutt A., 1991, Proceedings of the symposium on Testing, analysis, and verification, P200
   Offutt A. J., 1992, ACM Transactions on Software Engineering and Methodology, V1, P5, DOI 10.1145/125489.125473
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt A. J., 1994, Software Testing, Verification and Reliability, V4, P131, DOI 10.1002/stvr.4370040303
   Offutt A.J., 1988, Automatic Test Data Generation
   Offutt A.J., 1992, P INT C PAR PROC, P255
   OFFUTT AJ, 1989, ACM SIGSOFT, V14, P131, DOI 10.1145/75309.75324
   Offutt AJ, 1996, COMPASS '96 - PROCEEDINGS OF THE ELEVENTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P224, DOI 10.1109/CMPASS.1996.507890
   OFFUTT AJ, 1994, IEEE T SOFTWARE ENG, V20, P337, DOI 10.1109/32.286422
   Offutt AJ, 1999, SOFTWARE PRACT EXPER, V29, P167, DOI 10.1002/(SICI)1097-024X(199902)29:2<167::AID-SPE225>3.0.CO;2-V
   OFFUTT AJ, 1987, SIGPLAN NOTICES, V22, P177, DOI 10.1145/960114.29669
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   Offutt AJ, 1996, SOFTWARE PRACT EXPER, V26, P165, DOI 10.1002/(SICI)1097-024X(199602)26:2<165::AID-SPE5>3.0.CO;2-K
   OFFUTT AJ, 2004, P WORKSH TEST AN VER, P1
   OFFUTT AJ, 2008, COMMUNICATION    JUL
   OFFUTT AJ, 1994, ISSETR94110 G MAS U
   OFFUTT AJ, 2000, P 1 WORKSH MUT AN MU, P34
   OFFUTT AJ, 1996, ISSETR9609 G MAS U
   OFFUTT AJ, 2004, ACM SIGSOFT SOFTWARE, V29, P1
   Offutt J., 2006, 2 WORKSH MUT AN ISSR, P12
   OKUN V, 2004, THESIS U MARYLAND
   Olsson T, 2001, EIGHTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P222, DOI 10.1109/ECBS.2001.922426
   OMNRF, 2020, P IFIP C APPROVING S
   PAN J, 1994, THESIS G MASON U
   *PAR, 2006, PAR INS
   Polo M, 2007, SOFTW TEST VERIF REL, V17, P3, DOI 10.1002/stvr.348
   Polo M, 2009, SOFTW TEST VERIF REL, V19, P111, DOI 10.1002/stvr.392
   PRETSCHNER A, 2008, P 1 INT C SOFTW TEST, P338
   PROBERT RL, 1991, PROTOCOL TEST SYSTEMS, III, P57
   Redwine S. T.  Jr., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P189
   Roy CK, 2009, IEEE ICST WORKSHOP, P157, DOI 10.1109/ICSTW.2009.18
   *RUB, 2007, HECKL
   Rui Wang, 2008, 2008 4th International Conference on Next Generation Web Services Practices, P71, DOI 10.1109/NWeSP.2008.20
   SCHULER D, 2009, P INT S SOFTW TEST A
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   SERRESTOU Y, 2007, P IFIP WG 10 5 INT C, P218
   Serrestou Y, 2007, DSD 2007: 10TH EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN ARCHITECTURES, METHODS AND TOOLS, PROCEEDINGS, P222, DOI 10.1109/DSD.2007.4341472
   SHAHRIAR H, 2008, P 2 INT WOR IN PRESS, P979
   Shahriar H, 2008, INT CONF QUAL SOFTW, P77, DOI 10.1109/QSIC.2008.33
   Shahriar H, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR SECURE SYSTEMS, P47, DOI 10.1109/IWSESS.2009.5068458
   Shahriar H, 2008, IEEE HI ASS SYS ENGR, P229, DOI 10.1109/HASE.2008.8
   SIDHU D, 1988, P INFOCOM 88, P80
   Simao A, 2009, COMPUT LANG SYST STR, V35, P322, DOI 10.1016/j.cl.2008.10.001
   Smith BH, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P193, DOI 10.1109/TAIC.PART.2007.12
   Smith BH, 2009, EMPIR SOFTW ENG, V14, P341, DOI 10.1007/s10664-008-9083-7
   *SOURCEFORGE, 2007, JUMBL
   *SOURCEFORGE, 2002, NEST
   SOUZA SDR, 2000, P 33 HAW INT C SYST, V8, P8011
   SOUZA SDR, 1999, SOFTWARE QUALITY CON, V8, P285
   SPAFFORD EH, 1990, SOFTWARE PRACT EXPER, V20, P181, DOI 10.1002/spe.4380200205
   Srivatanakul T, 2003, ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P340, DOI 10.1109/APSEC.2003.1254388
   Sugeta T., 2004, P 16 IFIP INT C TEST, P2741
   SUNG A, 2006, P 2 WORKSH MUT AN NO, P8
   TANAKA A, 1981, THESIS GEORGIA I TEC
   THEVENODFOSSE P, 1991, P 21 INT S FAULT TOL, P410, DOI DOI 10.1109/FTCS.1991.146694
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Trakhtenbrot M, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P151, DOI 10.1109/TAIC.PART.2007.23
   TRIER U, 2009, DBLP
   TUYA J, 2006, P 2 WORKSH MUT AN, P1
   Tuya J, 2007, INFORM SOFTWARE TECH, V49, P398, DOI 10.1016/j.infsof.2006.06.009
   Untch R., 1992, P 30 ANN SE REGIONAL, P285
   UNTCH R, 1993, P 1993 INT S SOFTW T, P139, DOI DOI 10.1145/154183.154265
   UNTCH RH, 1995, THESIS CLEMSON U
   Vigna Giovanni., 2004, P 11 ACM C COMPUTER, P21
   VILELA P, 2002, P C SOFTW ENG APPL
   Vincenzi AMR, 2001, SOFTW TEST VERIF REL, V11, P249, DOI 10.1002/stvr.242
   VOAS J, 1997, SOFTW FAULT INJECTIO
   WAH KSH, 1995, SOFTW TEST VERIF REL, V5, P3
   Wah KSHT, 2000, SOFTW TEST VERIF REL, V10, P3, DOI 10.1002/(SICI)1099-1689(200003)10:1<3::AID-STVR196>3.0.CO;2-P
   Wah KSHT, 2003, SCI COMPUT PROGRAM, V48, P119, DOI 10.1016/S0167-6423(03)00022-4
   WEISS SN, 1993, ACM SIGSOFT SOFTWARE, V18, P149
   WEYUKER EJ, 1982, COMPUT J, V25, P456
   Wong WE, 1998, SOFTWARE PRACT EXPER, V28, P347, DOI 10.1002/(SICI)1097-024X(19980410)28:4<347::AID-SPE145>3.0.CO;2-L
   WONG WE, 1995, J SYST SOFTWARE, V31, P185, DOI 10.1016/0164-1212(94)00098-0
   WONG WE, 1995, SOFTWARE QUAL J, V4, P69, DOI 10.1007/BF00404650
   Wong WE, 1999, J SYST SOFTWARE, V48, P79, DOI 10.1016/S0164-1212(99)00048-5
   Wong WE, 1993, THESIS PURDUE U
   Woodward M. R., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P152, DOI 10.1109/WST.1988.5370
   WOODWARD MR, 1993, SOFTWARE ENG J, V8, P211, DOI 10.1049/sej.1993.0027
   WOODWARD MR, 1993, INFORM SOFTWARE TECH, V35, P163, DOI 10.1016/0950-5849(93)90053-6
   WOODWARD MR, 1990, P IEE C AUT FORM MET, P2
   WOODWARD MR, 1990, P IEE C SOFTW TEST C
   Xie T, 2009, IEEE ICST WORKSHOP, P177, DOI 10.1109/ICSTW.2009.43
   Xu WZ, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P257, DOI 10.1109/ISSRE.2005.44
   Yoon H, 1998, 1998 ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P174, DOI 10.1109/APSEC.1998.733717
   ZAPF CN, 1993, THESIS CLEMSON U
   Zhan Y, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1061
   Zhang S., 2007, P 2 INT C INN COMP I, P223
   Zhou CX, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P396, DOI 10.1109/ICST.2009.43
NR 263
TC 652
Z9 665
U1 2
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2011
VL 37
IS 5
BP 649
EP 678
DI 10.1109/TSE.2010.62
PG 30
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 823YC
UT WOS:000295162900004
DA 2024-07-18
ER

PT J
AU Amatriain, X
   Arumi, P
AF Amatriain, Xavier
   Arumi, Pau
TI Frameworks Generate Domain-Specific Languages: A Case Study in the
   Multimedia Domain
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Domain-specific architectures; visual programming; life cycle; CASE
ID METAMODEL; AUDIO
AB We present an approach to software framework development that includes the generation of domain-specific languages (DSLs) and pattern languages as goals for the process. Our model is made of three workflows-framework, metamodel, and patterns-and three phases-inception, construction, and formalization. The main conclusion is that when developing a framework, we can produce with minimal overhead-almost as a side effect-a metamodel with an associated DSL and a pattern language. Both outputs will not only help the framework evolve in the right direction, but will also be valuable in themselves. In order to illustrate these ideas, we present a case study in the multimedia domain. For several years, we have been developing a multimedia framework. The process has produced a full-fledged domain-specific metamodel for the multimedia domain, with an associated DSL and a pattern language.
C1 [Amatriain, Xavier] Telefon Res, Barcelona 08021, Spain.
   [Arumi, Pau] Barcelona Media, Barcelona 08018, Spain.
C3 Telefonica SA
RP Amatriain, X (corresponding author), Telefon Res, Via Augusta 177, Barcelona 08021, Spain.
EM xavier@amatriain.net; pau.arumi@barcelonamedia.org
FU Catalan Government; Universitat Pompeu Fabra; Barcelona Media
FX The authors would like to thank all of the developers of the CLAM
   framework who have participated in the process described in this paper
   throughout the years. In particular, they mention the continuous
   contribution of David Garcia. Work in this paper has been partially
   funded by an ICREA grant from the Catalan Government, the Universitat
   Pompeu Fabra, and Barcelona Media.
CR AKSIT M, 2000, ACM COMPUT SURV, P11
   Alexander C., 1979, The Timeless Way of Building
   Amatriain X, 2008, MULTIMEDIA SYST, V14, P15, DOI 10.1007/s00530-007-0109-6
   Amatriain X, 2007, IEEE T MULTIMEDIA, V9, P1284, DOI 10.1109/TMM.2007.902885
   Amatriain X, 2007, IEEE SOFTWARE, V24, P82, DOI 10.1109/MS.2007.8
   Ambler SW, 2003, IEEE SOFTWARE, V20, P71, DOI 10.1109/MS.2003.1231156
   [Anonymous], 1995, Design patterns for object-oriented software development
   Arango G., 1994, Symposium on Applied Computing: Proceedings of the 1994 ACM symposium on Applied computing, P42
   ARUMI P, 2009, P MULT COMP NETW C
   ARUMI P, 2006, P PATT LANG PROGR C
   ARUMI P, 2008, J ACOUST SOC AM, V123, P3937
   BECK K, 1994, P 8 EUR C OBJ OR PRO
   Bonachea D, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND CONFERENCE ON DOMAIN-SPECIFIC LANGUAGES (DSL'99), P163
   Bosch J., 1999, BUILDING APPL FRAMEW
   BUSCHMAN F, 1996, PATTERN ORIENTED SOF
   CLEAVELAND JC, 1988, IEEE SOFTWARE, V5, P25, DOI 10.1109/52.17799
   COOK S, 2004, J MODEL DRIVEN ARCHI, P2
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Hudak Paul, 1996, ACM COMPUT SURV, V28, DOI [10.1145/242224.242477, DOI 10.1145/242224.242477]
   JACOBSEN EE, 1997, P 25 INT C TECHN OBJ
   JOHNSON RE, 1988, J OBJECT-ORIENT PROG, V1, P22
   JOHNSON RE, 1992, P C OBJ OR PROGR SYS
   Larman C, 2001, Applying UML and Pattern: An Introduction to Object Oriented Analysis and Design and the Unified Process, V2nd
   LEE EA, 1995, P IEEE, V83, P773, DOI 10.1109/5.381846
   MANOLESCU DA, 1997, P 4 PATT LANG PROGR
   Mellor SJ, 2003, IEEE SOFTWARE, V20, P14, DOI 10.1109/MS.2003.1231145
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   ROBERTS D, 1996, P 3 C PATT LANG PROG, V3
   ROBERTS D, 1996, P 3 INT C PATT LANG
   SESERA L, 2005, J SYSTEMICS CYBERNET, V3, P37
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   WANG J, 2009, P WORLD WIDE WEB C
   WEST D, 2002, P XP C
   YACOUB SM, 2003, PATTERN ORIENTED ANA
   Zachariadis S, 2006, IEEE T SOFTWARE ENG, V32, P910, DOI 10.1109/TSE.2006.115
   Zelkowitz MV, 1997, INFORM SOFTWARE TECH, V39, P735, DOI 10.1016/S0950-5849(97)00025-6
NR 36
TC 6
Z9 6
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2011
VL 37
IS 4
BP 544
EP 558
DI 10.1109/TSE.2010.48
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 801QT
UT WOS:000293456000006
DA 2024-07-18
ER

PT J
AU Poulding, S
   Clark, JA
AF Poulding, Simon
   Clark, John A.
TI Efficient Software Verification: Statistical Testing Using Automated
   Search
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software/program verification; testing strategies; test coverage of
   code; optimization
AB Statistical testing has been shown to be more efficient at detecting faults in software than other methods of dynamic testing such as random and structural testing. Test data are generated by sampling from a probability distribution chosen so that each element of the software's structure is exercised with a high probability. However, deriving a suitable distribution is difficult for all but the simplest of programs. This paper demonstrates that automated search is a practical method of finding near-optimal probability distributions for real-world programs, and that test sets generated from these distributions continue to show superior efficiency in detecting faults in the software.
C1 [Poulding, Simon; Clark, John A.] Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
C3 University of York - UK
RP Poulding, S (corresponding author), Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
EM smp@cs.york.ac.uk; jac@cs.york.ac.uk
FU Engineering and Physical Sciences Research Council [EP/D050618/1]; EPSRC
   [EP/D050618/1] Funding Source: UKRI
FX The authors would like to thank Jose Carlos Maldonado and Auri M. R.
   Vincenzi for their assistance with the Proteum/IM mutation testing tool,
   Marie-Claude Gaudel for her discussion of statistical testing, and
   Helene Waeselynck for clarifying the techniques used in her work with
   Pascale Thevenod-Fosse and which inspired the research described in this
   paper. This work is funded by Engineering and Physical Sciences Research
   Council grant EP/D050618/1, SEBASE: Software Engineering by Automated
   SEarch.
CR Alba E, 2007, INFORM SCIENCES, V177, P2380, DOI 10.1016/j.ins.2006.12.020
   [Anonymous], 2008, 2008 GENETIC EVOLUTI
   [Anonymous], 2006, GNU Scientific Library Reference Manual
   Baskiotis N, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2274
   Beyer HG, 2000, COMPUT METHOD APPL M, V186, P239, DOI 10.1016/S0045-7825(99)00386-2
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   Delamaro ME, 2001, KLUW INT S ADV DATA, V24, P91
   DENISE A, 2004, 1386 LRI CNRS U PAR
   DiCiccio TJ, 1996, STAT SCI, V11, P189
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   Eiben AE, 2007, STUD COMPUT INTELL, V54, P19
   Emberson P, 2007, RTAS 2007: 13TH REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P158
   FORREST S, 1993, FOUNDATIONS OF GENETIC ALGORITHMS 2, P109
   Gutjahr WJ, 1996, J GLOBAL OPTIM, V8, P1
   Hamlet Dick., 2006, RT 06, P1
   HAO C, 2004, P WORKSH AUT REAS SE, P25
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Lakhotia Kiran., 2008, Proceedings of the Annual Conference on Genetic and Evolution- ary Computation (GECCO), P1759, DOI [10.1145/1389095.1389435, DOI 10.1145/1389095.1389435]
   Leech N.L., 2002, A call for greater use of nonparametric statistics
   Markon S, 2001, IEEE C EVOL COMPUTAT, P465, DOI 10.1109/CEC.2001.934428
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   *MIN DEF, 1997, 0055 MIN DEF 2
   NTAFOS S, 1998, ACM SIGSOFT SOFTWARE, V23, P42
   Pargas RoyP., 1999, Verification and Reliability, V9, P263
   *RAD TECHN COMM AE, 1992, DO178B RAD TECHN COM, P8
   Rana S., 1996, Parallel Problem Solving from Nature - PPSN IV. International Conference on Evolutionary Computation - The 4th International Conference on Parallel Problem Solving from Nature. Proceedings, P198, DOI 10.1007/3-540-61723-X_984
   ThevenodFosse P, 1997, DIG PAP INT SYMP FAU, P99, DOI 10.1109/FTCS.1997.614082
   THEVENODFOSSE P, 1991, 95178 CNRS LAAS, V1, P5
   THEVENODFOSSE P, 1995, 95178 CNRS LAAS
   THEVENODFOSSE P, 1991, DEPENDABLE COMPUTING, P23
   THEVENODFOSSE P, 1993, P INT S SOFTW TEST A, P99
   Tracey N., 1998, Software Engineering Notes, V23, P73, DOI 10.1145/271775.271792
   Tracey N. J., 2000, THESIS U YORK
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   WEISSTEIN EW, 2010, BERNOULLI DISTRIBUTI
   WEISSTEIN EW, 2010, GEOMETRIC DISTRIBUTI
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Zhang YY, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1129
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
   2010, WCET ANAL PROJECT
   2010, JDK 1 4 DEMO APPLETS
NR 48
TC 38
Z9 44
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2010
VL 36
IS 6
BP 763
EP 777
DI 10.1109/TSE.2010.24
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 682SU
UT WOS:000284424100004
DA 2024-07-18
ER

PT J
AU Meier, R
   Cahill, V
AF Meier, Rene
   Cahill, Vinny
TI On Event-Based Middleware for Location-Aware Mobile Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Distributed systems; middleware; publish subscribe; event-based
   communication; mobile computing; collaborative and location-aware
   applications; wireless ad hoc networks
ID SUPPORT
AB As mobile applications become more widespread, programming paradigms and middleware architectures designed to support their development are becoming increasingly important. The event-based programming paradigm is a strong candidate for the development of mobile applications due to its inherent support for the loose coupling between components required by mobile applications. However, existing middleware that supports the event-based programming paradigm is not well suited to supporting location-aware mobile applications in which highly mobile components come together dynamically to collaborate at some location. This paper presents a number of techniques including location-independent announcement and subscription coupled with location-dependent filtering and event delivery that can be used by event-based middleware to support such collaboration. We describe how these techniques have been implemented in STEAM, an event-based middleware with a fully decentralized architecture, which is particularly well suited to deployment in ad hoc network environments. The cost of such location-based event dissemination and the benefits of distributed event filtering are evaluated.
C1 [Meier, Rene; Cahill, Vinny] Trinity Coll Dublin, Sch Comp Sci & Stat, Distributed Syst Grp, Dublin, Ireland.
   [Cahill, Vinny] Trinity Coll Dublin, Discipline Comp Syst, Dublin, Ireland.
C3 Trinity College Dublin; Trinity College Dublin
RP Meier, R (corresponding author), Trinity Coll Dublin, Sch Comp Sci & Stat, Distributed Syst Grp, Dublin, Ireland.
EM rene.meier@cs.tcd.ie; vinny.cahill@cs.tcd.ie
FU Irish Higher Education Authority [1998-2001]; Commission of the European
   Union [IST-2000-26031]
FX The authors would like to thank the Dublin City Council's Traffic Office
   for providing the traffic data that made their evaluation of STEAM
   possible. This work was partly supported by the Irish Higher Education
   Authority's Program for Research in Third Level Institutions cycle 0
   (1998-2001) and by the FET Program of the Commission of the European
   Union under research contract IST-2000-26031 (CORTEX).
CR Abowd GD, 1997, WIREL NETW, V3, P421, DOI 10.1023/A:1019194325861
   [Anonymous], 2007, 5050 RFC
   [Anonymous], 2001, P 2 ACM INT WORKSH D
   AUDI AG, 2009, INFORMED DRIVER
   Bacon J, 2000, COMPUTER, V33, P68, DOI 10.1109/2.825698
   BANAVAR G, 1999, P 13 INT S DISTR COM
   BURCEA I, 1950, P IEEE INT C MOB DAT, P39
   BURCEA I, 2003, P 4 INT WORKSH TECHN, P131
   Caporuscio M, 2003, IEEE T SOFTWARE ENG, V29, P1059, DOI 10.1109/TSE.2003.1265521
   Carzaniga A, 2001, ACM T COMPUT SYST, V19, P332, DOI 10.1145/380749.380767
   Cheverst K., 2000, P ACM C MOBILE COMPU, P20, DOI DOI 10.1145/345910.345916
   Coulouris G.F., 2005, Distributed Systems: Concepts and Design
   Cristian F, 1996, COMMUN ACM, V39, P88, DOI 10.1145/227210.227231
   Crowell JA, 1997, FUND APPL TOXICOL, V35, P9, DOI 10.1006/faat.1996.2256
   Cugola G, 2001, IEEE T SOFTWARE ENG, V27, P827, DOI 10.1109/32.950318
   CUNNINGHAM R, 2002, P 2 ACM INT WORKSH P, P1
   *DAIMLERCHRYSLER, 2003, 22003 DAIMLERCHRYSLE
   Fiege L, 2003, LECT NOTES COMPUT SC, V2672, P103
   FOK CL, 2004, P 6 INT C COORD MOD, P135
   Frey D, 2007, LECT NOTES COMPUT SC, V4467, P37
   Gaertner G, 2004, LECT NOTES COMPUT SC, V3260, P147
   Goff Tom., 2001, P 7 ANN INT C MOBILE, P43
   Haas ZJ, 2002, IEEE INFOCOM SER, P1707, DOI 10.1109/INFCOM.2002.1019424
   Julien C, 2006, IEEE T SOFTWARE ENG, V32, P281, DOI 10.1109/TSE.2006.47
   KILLIJIAN MO, 2001, P PRINC MOB COMP POM, P75
   KJELDSKOV J, 2003, P 2003 C DES US EXP
   Lee S.J., 2000, Proc. IEEE Conf. Computer Comm, P565
   Mamei Marco., 2004, P 19 S APPL COMPUTIN, P479
   Meier R, 2005, COMPUT J, V48, P602, DOI 10.1093/comjnl/bxh120
   MEIER R, 2003, THESIS U DUBLIN
   MEIER R, 2002, ACM SIGMOBILE MOBILE, V6, P56
   MICHAELIAN M, 2000, UCBITSPRR200014 U CA
   Muhl G, 2006, Distributed Event-Based Systems
   Murphy AL, 2001, INT CON DISTR COMP S, P524, DOI 10.1109/ICDSC.2001.918983
   Murphy AL, 2006, ACM T SOFTW ENG METH, V15, P279, DOI 10.1145/1151695.1151698
   O'Hara B., 1999, IEEE 802 11 HDB DESI
   *OBJ MAN GROUP, 2000, CORBASERVICES COMM O
   OPYRCHAL L, 2000, P IFIP ACM INT C DIS, P185
   Orvalho J., 1999, Proceedings Third International Enterprise Distributed Object Computing. Conference (Cat. No.99EX366), P255, DOI 10.1109/EDOC.1999.792069
   Paul K, 1999, 1999 IEEE INTERNATIONAL CONFERENCE ON PERSONAL WIRELESS COMMUNICATIONS, P83, DOI 10.1109/ICPWC.1999.759590
   Pietzuch PR, 2003, LECT NOTES COMPUT SC, V2672, P62
   Podnar I, 2002, 22ND INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOP, PROCEEDINGS, P563, DOI 10.1109/ICDCSW.2002.1030826
   PREISS BR, 1999, DATA STRUCTURES ALGO
   PRIYANTHA N., 2000, P 6 ANN INT C MOB CO, P32, DOI [10.1145/345910.345917, DOI 10.1145/345910.345917]
   Sailhan F, 2005, THIRD IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P235, DOI 10.1109/PERCOM.2005.36
   SCHELFTHOUT K, 2006, THESIS KATHOLIEKE UN
   Senart Aline, 2008, International Journal of Intelligent Information and Database Systems, V2, P222, DOI 10.1504/IJIIDS.2008.018256
   SIVAHARAN T, 2004, P 1 ACM INT WORKSH A
   STEFFAN J, 2004, P 2 INT WORKSH MIDDL
   Steggles P., 2005, UBISENSE SMART SPACE
   *SUN MICR INC, 1999, JIN DISTR EV SPEC
   Sutton P, 2001, FIRST IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, PROCEEDINGS, P277, DOI 10.1109/CCGRID.2001.923204
   *US DEP TRANSP RES, 2009, COOP INT COLL AV SYS
   VERISSIMO P, 2002, P EUR WIR 2002 FLOR, P595
   WANG PS, 1994, C OBJECT ORIENTED PR
NR 55
TC 21
Z9 23
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2010
VL 36
IS 3
BP 409
EP 430
DI 10.1109/TSE.2009.90
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 601PB
UT WOS:000278073400009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhou, YM
   Leung, H
   Xu, BW
AF Zhou, Yuming
   Leung, Hareton
   Xu, Baowen
TI Examining the Potentially Confounding Effect of Class Size on the
   Associations between Object-Oriented Metrics and Change-Proneness
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Object-oriented; metrics; validation; class size; confounding;
   change-proneness
ID OPEN-SOURCE SOFTWARE; EMPIRICAL VALIDATION; COUPLING MEASUREMENT;
   FAULT-PRONENESS; IDENTIFICATION; MODELS
AB Previous research shows that class size can influence the associations between object-oriented (OO) metrics and fault-proneness and therefore proposes that it should be controlled as a confounding variable when validating OO metrics on fault-proneness. Otherwise, their true associations may be distorted. However, it has not been determined whether this practice is equally applicable to other external quality attributes. In this paper, we use three size metrics, two of which are available during the high-level design phase, to examine the potentially confounding effect of class size on the associations between OO metrics and change-proneness. The OO metrics that are investigated include cohesion, coupling, and inheritance metrics. Our results, based on Eclipse, indicate that: 1) The confounding effect of class size on the associations between OO metrics and change-proneness, in general, exists, regardless of whichever size metric is used; 2) the confounding effect of class size generally leads to an overestimate of the associations between OO metrics and change-proneness; and 3) for many OO metrics, the confounding effect of class size completely accounts for their associations with change-proneness or results in a change of the direction of the associations. These results strongly suggest that studies validating OO metrics on change-proneness should also consider class size as a confounding variable.
C1 [Zhou, Yuming; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
   [Zhou, Yuming; Xu, Baowen] Nanjing Univ, Dept Comp Sci & Technol, Nanjing, Jiangsu, Peoples R China.
   [Leung, Hareton] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Hong Kong, Peoples R China.
C3 Nanjing University; Nanjing University; Hong Kong Polytechnic University
RP Zhou, YM (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
EM zhouyuming@nju.edu.cn; cshleung@inet.polyu.edu.hk; bwxu@nju.edu.cn
RI Xu, Baowen/IXW-4882-2023; Leung, Hareton Kam Nang/O-5899-2014
OI Xu, Baowen/0000-0001-7743-1296; Leung, Hareton Kam
   Nang/0000-0002-1766-7667
FU Hong Kong Competitive Earmarked Research [PolyU5219/06E]; National
   Natural Science Foundation of China [90818027, 60425206, 60633010,
   60721002, 60803008]; National High Technology Development Program of
   China [2009AA01Z147]; Program for New Century Excellent Talents in
   University; Major State Basic Research Development Program of China
   [2009CB320703]; Natural Science Foundation of Jiangsu Province
   [BK2008292]
FX The authors would like to thank the editor and three anonymous reviewers
   for their very insightful comments and helpful suggestions in greatly
   improving the quality of this paper. They also wish to thank Martin Kyle
   for reviewing their paper. This research is partly supported by the Hong
   Kong Competitive Earmarked Research Grant (PolyU5219/06E), the National
   Natural Science Foundation of China (90818027, 60425206, 60633010,
   60721002, and 60803008), the National High Technology Development
   Program of China (2009AA01Z147), the Program for New Century Excellent
   Talents in University, the Major State Basic Research Development
   Program of China (2009CB320703), and the Natural Science Foundation of
   Jiangsu Province (BK2008292).
CR Aman H, 2002, FR ART INT, V80, P102
   [Anonymous], 1985, STAT METHODS METAANA, DOI 10.1016/b978-0-08-057065-5.50020-8
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], UND JAV US GUID REF
   [Anonymous], 1994, USE FACTOR ANAL DEV
   [Anonymous], APPL MULTIPLE REGRES
   [Anonymous], DECIS SUPPORT SYST
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   Badri L., 2004, J OBJECT TECHNOL, V3, P145
   Bansiya J, 1999, J OBJECT-ORIENT PROG, V11, P47
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Benlarbi S., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P334, DOI 10.1109/ICSE.1999.841024
   Bieman J. M., 1995, SIGSOFT Software Engineering Notes, P259, DOI 10.1145/223427.211856
   Bobko P., 1980, APPL PSYCH MEAS, V4, P385, DOI DOI 10.1177/014662168000400309
   Briand L, 1997, PROC INT CONF SOFTW, P412, DOI 10.1145/253228.253367
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P345, DOI 10.1109/ICSE.1999.841025
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P963, DOI 10.1109/32.965338
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Bruntink M, 2006, J SYST SOFTWARE, V79, P1219, DOI 10.1016/j.jss.2006.02.036
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHIDAMBER SR, 1991, SIGPLAN NOTICES, V26, P197
   Counsell S, 2006, ACM T SOFTW ENG METH, V15, P123, DOI 10.1145/1131421.1131422
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Evanco WM, 2003, IEEE T SOFTWARE ENG, V29, P670, DOI 10.1109/TSE.2003.1214331
   Fitzmaurice G, 2003, NUTRITION, V19, P189, DOI 10.1016/S0899-9007(02)00959-0
   GLASBERG D, 2000, NRCERB1080 I INF TEC
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Henderson-Sellers B., 1996, Software Metrics
   HITZ M, 1995, P INT S APPL CORP CO, P75
   Hopkins WillG., 2003, A new view of statistics
   Howell D.C., 1997, STAT METHODS PSYCHOL, VForth
   Janes A, 2006, INFORM SCIENCES, V176, P3711, DOI 10.1016/j.ins.2005.12.002
   KIM E, 1996, P 20 C COMP SOFTW AP, P104
   Koru AG, 2005, IEEE T SOFTWARE ENG, V31, P625, DOI 10.1109/TSE.2005.89
   Lee YS., 1995, Proc. International Conference on Software Quality, Maribor, P81
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Lindvall M, 1998, SOFTWARE PRACT EXPER, V28, P1551, DOI 10.1002/(SICI)1097-024X(19981225)28:15<1551::AID-SPE212>3.0.CO;2-0
   MacKinnon DP, 2007, CLIN TRIALS, V4, P499, DOI 10.1177/1740774507083434
   MacKinnon D P, 2000, Prev Sci, V1, P173, DOI 10.1023/A:1026595011371
   Mackinnon MWB, 2002, NEPHROLOGY, V7, P1, DOI 10.1046/j.1440-1797.2002.00067.x
   Mehio-Sibai A, 2005, ANN EPIDEMIOL, V15, P421, DOI 10.1016/j.annepidem.2004.10.004
   Myers EW, 1986, ALGORITHMICA, V1, P251, DOI 10.1007/BF01840446
   O'Reilly T, 1999, COMMUN ACM, V42, P32, DOI 10.1145/299157.299164
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   PEARSON K, 1907, MATH CONTRIBUTIONS T
   Reinard J.C., 2006, Communication research statistics
   Rosenberg J, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P137, DOI 10.1109/METRIC.1997.637174
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Succi G, 2003, J SYST SOFTWARE, V65, P1, DOI 10.1016/S0164-1212(02)00024-9
   Szklo M., 2014, Epidemiology: Beyond the Basics
   Zhou YM, 2006, IEEE T SOFTWARE ENG, V32, P771, DOI 10.1109/TSE.2006.102
NR 56
TC 92
Z9 106
U1 0
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2009
VL 35
IS 5
BP 607
EP 623
DI 10.1109/TSE.2009.32
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 498PM
UT WOS:000270154300002
DA 2024-07-18
ER

PT J
AU Hatton, L
AF Hatton, Les
TI Power-Law Distributions of Component Size in General Software Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 23rd IEEE International Conference on Software Maintenance
CY OCT 02-05, 2007
CL Paris, FRANCE
SP IEEE, IEEE Comp Soc, IEEE France Sect, TCSE, IEEE Comp Soc, Tech Council Software Engn, Reeng Forum, Univ Waterloo, Univ Studi Sannio
DE Defects; macroscopic system behavior; component size distribution;
   Pareto
AB This paper begins by modeling general software systems using concepts from statistical mechanics which provide a framework for linking microscopic and macroscopic features of any complex system. This analysis provides a way of linking two features of particular interest in software systems: first the microscopic distribution of defects within components and second the macroscopic distribution of component sizes in a typical system. The former has been studied extensively, but the latter much less so. This paper shows that subject to an external constraint that the total number of defects is fixed in an equilibrium system, commonly used defect models for individual components directly imply that the distribution of component sizes in such a system will obey a power-law Pareto distribution. The paper continues by analyzing a large number of mature systems of different total sizes, different implementation languages, and very different application areas, and demonstrates that the component sizes do indeed appear to obey the predicted power-law distribution. Some possible implications of this are explored.
C1 Kingston Univ, Fac Comp Informat Syst & Math, Kingston Upon Thames KT1 2EE, Surrey, England.
C3 Kingston University
RP Hatton, L (corresponding author), Kingston Univ, Fac Comp Informat Syst & Math, Penrhyn Rd, Kingston Upon Thames KT1 2EE, Surrey, England.
EM l.hatton@kingston.ac.uk
CR AKIYAMA F, 1971, INFORMATION PROCESSI, V71, P353
   [Anonymous], STATISTICS
   [Anonymous], 1956, Thermodynamics and Statistical Mechanics
   BAXTER G, 2006, P INT C OBJ OR PROGR
   CLARK DW, 1977, COMMUN ACM, V20, P78, DOI 10.1145/359423.359427
   COMPTON BT, 1990, J SYST SOFTWARE, V12, P199, DOI 10.1016/0164-1212(90)90040-S
   Feynman R.P., 1996, Lectures on computation
   Gaffney J. R., 1984, IEEE T SOFTWARE ENG, V10
   Hatton L, 1997, IEEE SOFTWARE, V14, P89, DOI 10.1109/52.582978
   Hatton L, 1995, MCGRAW HILL INT SERI
   HOPKINS TR, 2008, DEFECT CORRELATIONS
   LIPOW M, 1982, IEEE T SOFTWARE ENG, V8, P437, DOI 10.1109/TSE.1982.235579
   Potanin A, 2005, COMMUN ACM, V48, P99, DOI 10.1145/1060710.1060716
   Rawlings PK, 2004, PHYSICA A, V343, P643, DOI 10.1016/j.physa.2004.06.152
   Zipf GK., 1935, PSYCHO BIOL LANGUAGE
NR 15
TC 17
Z9 20
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2009
VL 35
IS 4
BP 566
EP 572
DI 10.1109/TSE.2008.105
PG 7
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 474TB
UT WOS:000268305800010
DA 2024-07-18
ER

PT J
AU Franks, G
   Al-Omari, T
   Woodside, M
   Das, O
   Derisavi, S
AF Franks, Greg
   Al-Omari, Tariq
   Woodside, Murray
   Das, Olivia
   Derisavi, Salem
TI Enhanced Modeling and Solution of Layered Queueing Networks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Modeling and performance prediction; queueing theory
ID PERFORMANCE; SERVERS
AB Layered queues are a canonical form of extended queueing network for systems with nested multiple resource possession, in which successive depths of nesting define the layers. The model has been applied to most modern distributed systems, which use different kinds of client-server and master-slave relationships, and scales up well. The Layered Queueing Network (LQN) model is described here in a unified fashion, including its many more extensions to match the semantics of sophisticated practical distributed and parallel systems. These include efficient representation of replicated services, parallel and quorum execution, and dependability analysis under failure and reconfiguration. The full LQN model is defined here and its solver is described. A substantial case study to an air traffic control system shows errors (compared to simulation) of a few percent. The LQN model is compared to other models and solutions, and is shown to cover all their features.
C1 [Franks, Greg; Woodside, Murray] Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
   [Al-Omari, Tariq; Derisavi, Salem] IBM Toronto Lab, Toronto, ON L6G 1C7, Canada.
   [Das, Olivia] Ryerson Univ, Dept Elect & Comp Engn, Toronto, ON M5B 2K3, Canada.
C3 Carleton University; International Business Machines (IBM); Toronto
   Metropolitan University
RP Franks, G (corresponding author), Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
EM greg@sce.carleton.ca; talomari@ca.ibm.com; cmw@sce.carleton.ca;
   odas@ee.ryerson.ca; derisavi@ca.ibm.com
RI Al-Omari, Tariq/K-9108-2014
FU Natural Sciences and Engineering Research Council of Canada;
   Communications and Information Technology Ontario (CITO)
FX This research was supported by the Natural Sciences and Engineering
   Research Council of Canada and by Communications and Information
   Technology Ontario (CITO).
CR Bayen A. M., 2003, THESIS STANFORD U
   CHANDY KM, 1982, COMMUN ACM, V25, P126, DOI 10.1145/358396.358403
   Das O, 2004, LECT NOTES COMPUT SC, V3069, P266
   DAS O, 2004, THESIS CARLETON U CA
   FONTENOT ML, 1989, IEEE T SOFTWARE ENG, V15, P947, DOI 10.1109/32.31352
   Franks G, 2004, IEEE COMPUTER SOCIETY'S 12TH ANNUAL INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS, AND SIMULATION OF COMPUTER AND TELECOMMUNICATIONS SYSTEMS - PROCEEDINGS, P239, DOI 10.1109/MASCOT.2004.1348262
   Franks G, 1999, PERFORM EVALUATION, V36-7, P165, DOI 10.1016/S0166-5316(99)00034-6
   Franks G., 1996, Software Quality, P15
   Franks G., 2009, LAYERED QUEUEING NET
   Franks Greg, 1998, P 1 INT WORKSH SOFTW, P120
   FRANKS RG, 1999, THESIS CARLETON U CA
   HEIDELBERGER P, 1983, IEEE T COMPUT, V32, P73, DOI 10.1109/TC.1983.1676125
   JIANG X, 1996, THESIS CARLETON U CA
   Kähkipuro P, 1999, LECT NOTES COMPUT SC, V1723, P356
   KAHKIPURO P, 2000, THESIS U HELSINKI
   Kumar A., 1990, Proceedings. The 10th International Conference on Distributed Computing Systems (Cat. No.90CH2878-7), P378, DOI 10.1109/ICDCS.1990.89306
   Kurasugi T, 1999, PERFORM EVALUATION, V36-7, P55, DOI 10.1016/S0166-5316(99)00028-0
   LITOIU M, 2003, APPL PERFORMANCE EVA
   LIU ML, 1995, PARALLEL DISTRIBUTED
   Mak V. W., 1990, IEEE Transactions on Parallel and Distributed Systems, V1, P257, DOI 10.1109/71.80155
   MALY P, 2000, P 11 INT C COMP PERF, P10
   MENASCE D, 2002, P 10 IEEE ACM INT S
   Omari T., 2007, P 6 INT WORKSHOP SOF, P66
   OMARI T, 2007, P 4 INT C QUANT EV S
   OMARI T, 2005, P 5 INT WORKSH SOFTW, P159
   Omari T, 2007, J SYST SOFTWARE, V80, P510, DOI 10.1016/j.jss.2006.07.022
   PAN AM, 1996, THESIS CARLETON U CA
   PETRIU DC, 1991, P 3 IEEE S PAR DISTR
   PETRIU DC, 1994, P 1994 ACM SIGMETRIC, P77
   RAMESH S, 1998, P 1 INT WORKSH SOFTW, P107
   Rauzy A, 1997, RELIAB ENG SYST SAFE, V58, P127, DOI 10.1016/S0951-8320(97)00034-3
   REISER M, 1980, J ACM, V27, P313, DOI 10.1145/322186.322195
   REISER M, 1979, IEEE T COMMUN, V27, P1199, DOI 10.1109/TCOM.1979.1094531
   ROLIA JA, 1995, IEEE T SOFTWARE ENG, V21, P689, DOI 10.1109/32.403785
   ROLIA JA, 1988, P 7 SCCC INT C COMP, P25
   SAHNER RA, 1987, IEEE T SOFTWARE ENG, V13, P1105, DOI 10.1109/TSE.1987.232852
   Smith C.U., 1990, Performance engineering of software systems, VSeventh
   WOODSIDE CM, 1989, PERFORM EVALUATION, V9, P143, DOI 10.1016/0166-5316(89)90039-4
   WOODSIDE CM, 1995, IEEE T COMPUT, V44, P20, DOI 10.1109/12.368012
   WOODSIDE CM, 1986, J SYST SOFTWARE, P844
   1998, P 1 INT WORKSH SOFTW
NR 41
TC 109
Z9 120
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2009
VL 35
IS 2
BP 148
EP 161
DI 10.1109/TSE.2008.74
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 424FT
UT WOS:000264551600002
DA 2024-07-18
ER

PT J
AU Norman, G
   Palamidessi, C
   Parker, D
   Wu, P
AF Norman, Gethin
   Palamidessi, Catuscia
   Parker, David
   Wu, Peng
TI Model Checking Probabilistic and Stochastic Extensions of the π-Calculus
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Verification; model checking; Markov processes; stochastic processes
AB We present an implementation of model checking for probabilistic and stochastic extensions of the pi-calculus, a process algebra which supports modeling of concurrency and mobility. Formal verification techniques for such extensions have clear applications in several domains, including mobile ad hoc network protocols, probabilistic security protocols, and biological pathways. Despite this, no implementation of automated verification exists. Building upon the pi-calculus model checker Mobility Model Checker (MMC), we first show an automated procedure for constructing the underlying semantic model of a probabilistic or stochastic pi-calculus process. This can then be verified using existing probabilistic model checkers such as PRISM. Secondly, we demonstrate how, for processes of a specific structure, a more efficient, compositional approach is applicable, which uses our extension of MMC on each parallel component of the system and then translates the results into a high-level modular description for the PRISM tool. The feasibility of our techniques is demonstrated through a number of case studies from the pi-calculus literature.
C1 [Norman, Gethin; Parker, David] Univ Oxford, Comp Lab, Oxford OX1 3QD, England.
   [Palamidessi, Catuscia] Ecole Polytech, F-91128 Palaiseau, France.
   [Palamidessi, Catuscia] INRIA Saclay, F-91128 Palaiseau, France.
   [Wu, Peng] Univ Coll London, Ipswich IP5 3RE, Suffolk, England.
C3 University of Oxford; Institut Polytechnique de Paris; Ecole
   Polytechnique; Institut Polytechnique de Paris; Ecole Polytechnique;
   University of London; University College London
RP Norman, G (corresponding author), Univ Oxford, Comp Lab, Wolfson Bldg,Parks Rd, Oxford OX1 3QD, England.
EM gethin.norman@comlab.ox.ac.uk; catuscia@lix.polytechnique.fr;
   david.parker@comlab.ox.ac.uk; p.wu@adastral.ucl.ac.uk
RI WU, Peng/B-7650-2008; Norman, Gethin/AAG-1482-2020; Palamidessi,
   Catuscia/ABA-2935-2020; Parker, David/AAD-5939-2022; som,
   nie/JFK-6681-2023
OI Norman, Gethin/0000-0001-9326-4344; Palamidessi,
   Catuscia/0000-0003-4597-7002; Parker, David/0000-0003-4137-8862; 
FU EPSRC [GR/S11107, GR/S46727]; Microsoft Research Cambridge [MRL
   2005-44]; INRIA/ARC project ProNoBis; EPSRC [EP/D07956X/1, EP/D076625/2,
   EP/D07956X/2, EP/D076625/1] Funding Source: UKRI
FX Authors Gethin Norman and David Parker were with the School of Computer
   Science at the University of Birmingham and Peng Wu was at CNRS and LIX
   when parts of this work were first carried out. Gethin Norman and David
   Parker are supported in part by EPSRC grants GR/S11107 and GR/S46727 and
   Microsoft Research Cambridge contract MRL 2005-44 and Catuscia
   Palamidessi and Peng Wu were supported in part by the INRIA/ARC project
   ProNoBis. The authors thank the anonymous referees for their valuable
   comments.
CR [Anonymous], 1997, The Theory and Practice of Concurrency
   [Anonymous], 1998, ACM Trans Inform Syst Secur TISSEC, DOI DOI 10.1145/290163.290168
   Aziz A, 1996, LNCS, P269, DOI [DOI 10.1007/3-540-61474-5_75, 10.1007/3-540-61474-5_75, DOI 10.1007/3-540-61474-5]
   Baier C, 2003, IEEE T SOFTWARE ENG, V29, P524, DOI 10.1109/TSE.2003.1205180
   BHARGAVA M, 2005, P 16 INT C CONC THEO, P171
   Bianco A., 1995, Foundations of Software Technology and Theoretical Computer Science. 15th Conference. Proceedings, P499
   Blanchet Bruno., 2005, PROVERIF AUTOMATIC C
   Bodei C, 2001, INFORM COMPUT, V168, P68, DOI 10.1006/inco.2000.3020
   Boreale M, 1996, INFORM COMPUT, V126, P34, DOI 10.1006/inco.1996.0032
   Caires L, 2003, INFORM COMPUT, V186, P194, DOI 10.1016/S0890-5401(03)00137-8
   Chakraborty S, 2002, EIGHTH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P45, DOI 10.1109/RTTAS.2002.1137380
   CHATZIKOKOLAKIS K, 2005, P INT S TRUSTW GLOB, P146
   Chaum D., 1988, Journal of Cryptology, V1, P65, DOI 10.1007/BF00206326
   EVEN S, 1985, COMMUN ACM, V28, P637, DOI 10.1145/3812.3818
   GOLDSMITH M, 2003, P 2 INT S FORM METH, P600
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   HEATH J, 2006, PROBABILISTIC MODEL, P32
   HENNESSY M, 1995, THEOR COMPUT SCI, V138, P353, DOI 10.1016/0304-3975(94)00172-F
   Herescu OM, 2000, LECT NOTES COMPUT SC, V1784, P146
   Hillston J., 1996, A Compositional Approach to Performance Modelling
   Hinton A, 2006, LECT NOTES COMPUT SC, V3920, P441
   INGOLFSDOTTIR A, 2001, HDB PROCESS ALGEBRA, pCH7
   LIN H, 1994, SYMBOLIC BISIMULATIO
   Lin HM, 2003, INFORM COMPUT, V180, P1, DOI 10.1016/S0890-5401(02)00014-7
   Milner R., 1989, Communication and concurrency
   MILNER R, 1992, INFORM COMPUT, V100, P1, DOI [10.1016/0890-5401(92)90008-4, 10.1016/0890-5401(92)90009-5]
   NORMAN G, 2007, CSR0702 U BIRM SCH C
   Norman G, 2007, INT CONF QUANT EVAL, P169, DOI 10.1109/QEST.2007.31
   Norman G, 2006, J COMPUT SECUR, V14, P561, DOI 10.3233/JCS-2006-14604
   Orava F., 1992, Formal Aspects of Computing, V4, P497, DOI 10.1007/BF01211473
   PHILLIPS A, 2007, P 5 INT WORKSH COMP, P184
   Priami C, 2001, INFORM PROCESS LETT, V80, P25, DOI 10.1016/S0020-0190(01)00214-9
   Priami C, 1995, COMPUT J, V38, P578, DOI 10.1093/comjnl/38.7.578
   PRIAMI C, 1997, P PAPM 1997 5 INT WO, P145
   Regev A, 2001, Pac Symp Biocomput, P459
   Segala R., 1995, Nordic Journal of Computing, V2, P250
   SONG H, 2003, CSETR47203 U MICH
   VENET A, 1996, P 5 LOMAPS WORKSH AN, P51
   Victor B., 1994, CAV 94, P428, DOI DOI 10.1007/3-540-58179-0_73
   WU P, 2003, COMPUTER SCI S, V8, P7
   Wu P, 2007, INT CONF QUANT EVAL, P179, DOI 10.1109/QEST.2007.11
   YANG P, 2004, INT J SOFTW TOOLS TE, V4, P1
   2009, ONLINE PRISM DOCUMEN
NR 43
TC 16
Z9 16
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2009
VL 35
IS 2
BP 209
EP 223
DI 10.1109/TSE.2008.77
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 424FT
UT WOS:000264551600006
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Parsons, T
   Mos, A
   Trofin, M
   Gschwind, T
   Murphy, J
AF Parsons, Trevor
   Mos, Adrian
   Trofin, Mircea
   Gschwind, Thomas
   Murphy, John
TI Extracting Interactions in Component-Based Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Distributed objects; components; containers; tracing
AB Monitoring, analyzing, and understanding component-based enterprise software systems are challenging tasks. These tasks are essential to solving and preventing performance and quality problems. Obtaining component-level interactions that show the relationships between different software entities is a necessary prerequisite for such efforts. This paper focuses on component-based Java applications, currently widely used by the industry. They pose specific challenges while raising interesting opportunities for component-level interaction extraction tools. We present a range of representative approaches for dynamically obtaining and using component interactions. For each approach, we detail the needs it addresses and the technical requirements for building an implementation of the approach. We also take a critical look at the different available implementations of the various techniques presented. We give performance and functional considerations and contrast them against each other by outlining their relative advantages and disadvantages. Based on this data, developers and system integrators can better understand the current state of the art and the implications of choosing or implementing different dynamic interaction extraction techniques.
C1 [Parsons, Trevor; Murphy, John] Univ Coll Dublin, Sch Comp Sci & Informat, Performance Engn Lab, Dublin 4, Ireland.
   [Mos, Adrian] INRIA Rhone Alpes, F-38334 Montbonnot St Martin, France.
   [Trofin, Mircea] Microsoft Corp, Redmond, WA 98052 USA.
   [Gschwind, Thomas] IBM Corp, CH-8803 Ruschlikon, Switzerland.
C3 University College Dublin; Microsoft; International Business Machines
   (IBM)
RP Parsons, T (corresponding author), Univ Coll Dublin, Sch Comp Sci & Informat, Performance Engn Lab, Dublin 4, Ireland.
EM trevor.parsons@ucd.ie; adrian.mos@inria.fr; mtrofin@acm.org;
   THG@zurich.ibm.com; j.murphy@ucd.ie
RI Mos, Adrian/I-3658-2016
OI Mos, Adrian/0000-0002-1401-0715; Murphy, John/0000-0001-7822-1573
FU IBM; University College Dublin
FX Trevor Parsons' and John Murphy's work is funded under the Enterprise
   Ireland Innovation Partnership in cooperation with IBM and University
   College Dublin. The authors would also like to thank Adriana E. Chis for
   assisting with the performance tests that were carried out as part of
   this work.
CR AMMONS G, 2004, P 18 EUR C OBJ OR PR
   [Anonymous], J2SE 5 0 NUTSHELL
   [Anonymous], P ACM SIGPLAN C PROG
   [Anonymous], P INT C DEP SYST NET
   BARHAM RIP, 2004, P 6 S OP SYST DES IM
   *BEA, 2008, SERP
   *BORL SOFTW CORP, 2007, OPT SUIT
   BRIAND LC, 2004, IEEE T SOFTWARE ENG, V32
   BRIAND YLL, 2004, SCE0404
   BRUNETON E, 2002, P JOURN COMP 2002 SY
   BUBLE LBA, 2003, P IPDPS WORKSH PERF
   CHEN M, 2002, P INT C DEP SYS NETW
   CHEN M, 2003, P 9 WORKSH HOT TOP O
   CHIBA S, 2003, P 2 INT C GEN PROGR
   Dahm M., 1999, JAVA INFORM TAGE SEP
   DIACONESCU A, 2004, P INT C AUT COMP MAY
   Dmitriev Mikhail, 2004, P 4 INT WORKSH SOFTW
   *EJ TECHN, 2008, JPROF
   GOVINDRAJ K, 2006, P 5 INT C ASP OR SOF
   Gradecki J.D., 2003, MASTERING ASPECTJ AS
   GRAHAM SL, 1982, P SIGPLAN S COMP CON
   GSCHWIND T, 2002, P 4 IEEE INT WORKSH
   GSCHWIND T, 2003, P 11 INT WORKSH PROG
   *IBM, 2007, IBM AUT COMP
   *IBM, 2008, WEBSPH 6 DOC
   JERDING DF, 1997, P 19 INT C SOFTWARE
   *JSR, 2008, 149 JSR WORK AR SERV
   KEPHART JO, 2003, COMPUTER         JAN, V36
   KUNNUMPURATH M, 2003, JBOSS ADM DEV 3 EDIT
   MOS A, 2004, THESIS DUBLIN CITY U
   MOS A, 2002, P 6 INT ENT DISTR OB
   PARSONS T, 2007, THESIS U COLL DUBLIN
   PARSONS T, 2006, IEE P SOFTWARE   AUG
   PARSONS T, 2008, J OBJECT TECHNOLOGY
   *QUEST, 2008, PERF
   *SUN MICR, 2003, JAV PET STOR DEM
   *SUN MICR, 2008, JAV MAN EXT JMX
   *SUN MICR, 2008, JAV 2 PLATF ENT ED T
   Tonella Paolo., 2005, REVERSE ENG OBJECT O
   TROFIN M, 2004, P 2 INT WORKSH DYN A
   TROFIN M, 2006, J OBJECT TECHNOLOGY
   TROFIN M, 2008, INT J SOFTWARE T JAN
   TROFIN M, 2007, THESIS U COLL DUBLIN
   VALLEERAI R, 2000, P 9 INT C COMP CONST
   WOHLSTADTER E, 2003, P 25 INT C SOFTW ENG
   2008, ADAPTIVECELLS J
   2008, JAVA INTERNET GLOSSA
   2008, JAVA VIRTUAL MACHINE
   2008, WEBCAB COMPONENTS
   2008, OPEN SYSTEM TESTING
   2008, ASPECTJ
   2008, NETBEANS PROFILER
   2008, SUN JAVA STUDIO
   2008, APACHE JMETER
NR 54
TC 6
Z9 8
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2008
VL 34
IS 6
BP 783
EP 799
DI 10.1109/TSE.2008.67
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 376HR
UT WOS:000261175200005
DA 2024-07-18
ER

PT J
AU Damian, D
   Lanubile, F
   Mallardo, T
AF Damian, Daniela
   Lanubile, Filippo
   Mallardo, Teresa
TI On the need for mixed media in distributed requirements negotiations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE global software development; requirement negotiation; computer-mediated
   communication; media selection; empirical study
ID QUALITY-ASSURANCE; INFORMATION; DESIGN; INSPECTION; RICHNESS
AB Achieving agreement with respect to software requirements is a collaborative process that traditionally relies on same-time, same-place interactions. As the trend toward geographically distributed software development continues, colocated meetings are becoming increasingly problematic. Our research investigates the impact of computer-mediated communication on the performance of distributed client/developer teams involved in the collaborative development of a requirements specification. Drawing on media,selection theories, we posit that a combination of lean and rich media is needed for an effective process of requirements negotiations when stakeholders are geographically dispersed. In this paper, we present an empirical study that investigates the performance of six educational global project teams. involved in a negotiation process using both asynchronous text-based and synchronous videoconferencing-based communication modes. The findings indicate that requirement negotiations were more effective when the groups conducted asynchronous structured discussions of requirement issues prior to the synchronous negotiation meeting. Asynchronous discussions were useful in resolving issues related to uncertainty in requirements, thus allowing synchronous negotiations to focus more on removing ambiguities in the requirements.
C1 [Damian, Daniela] Univ Victoria, Dept Comp Sci, Victoria, BC V8P 5C2, Canada.
   [Lanubile, Filippo; Mallardo, Teresa] Univ Bari, Dept Comp Sci, I-70125 Bari, Italy.
C3 University of Victoria; Universita degli Studi di Bari Aldo Moro
RP Damian, D (corresponding author), Univ Victoria, Dept Comp Sci, 3800 Finnerty Rd, Victoria, BC V8P 5C2, Canada.
EM danielad@cs.uvic.ca; lanubile@di.uniba.it; mallardo@di.uniba.it
RI Lanubile, Filippo/AAF-9132-2020
OI Lanubile, Filippo/0000-0003-3373-7589
CR Abel M.J., 1990, INTELLECTUAL TEAMWOR, P489
   [Anonymous], 1993, Time pressure and stress in human judgment and decision making
   [Anonymous], 1991, Statistical principles in experimental design
   [Anonymous], EXPT SOFTWARE ENG
   [Anonymous], P ACM CSCW04 C COMP
   Benson L, 1996, ORGAN BEHAV HUM DEC, V67, P222, DOI 10.1006/obhd.1996.0075
   Biffl S, 2003, IEEE T SOFTWARE ENG, V29, P385, DOI 10.1109/TSE.2003.1199069
   Boehm B, 1998, COMPUTER, V31, P33, DOI 10.1109/2.689675
   Boehm B., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P74, DOI 10.1109/ICRE.1994.292400
   Carletta J, 1997, COMPUT LINGUIST, V23, P13
   CLARK HH, 1991, PERSPECTIVES ON SOCIALLY SHARED COGNITION, P127, DOI 10.1037/10096-006
   Clark HH, 2004, J MEM LANG, V50, P62, DOI 10.1016/j.jml.2003.08.004
   CLARK HH, 1986, COGNITION, V22, P1, DOI 10.1016/0010-0277(86)90010-7
   DAFT RL, 1986, MANAGE SCI, V32, P554, DOI 10.1287/mnsc.32.5.554
   DAFT RL, 1984, RES ORGAN BEHAV, V6, P191
   DAMIAN D, 2006, IEEE SOFTWARE, V23
   Damian D. E., 2003, Requirements Engineering, V8, P149, DOI 10.1007/s00766-003-0173-1
   DAMICO G, 2000, PORTAL HYPERTENSION, V3, P36
   Dunsmore A, 2003, IEEE T SOFTWARE ENG, V29, P677, DOI 10.1109/TSE.2003.1223643
   Garrison D. R., 1999, Internet and Higher Education, V2, P87, DOI 10.1016/S1096-7516(00)00016-6
   Gottesdiener E., 2002, REQUIREMENTS COLLOBO
   Grünbacher P, 2004, J MANAGE INFORM SYST, V20, P9
   Halling M., 2003, Requirements Engineering, V8, P236, DOI 10.1007/s00766-002-0155-8
   Hara N, 2000, INSTR SCI, V28, P115, DOI 10.1023/A:1003764722829
   Henri F., 1991, COLLABORATIVE LEARNI, P117
   IEEE, 1998, 8301998 IEEE
   JACKSON M, 2000, P CSCW 2000, P11
   Krauss R.M., 1990, INTELLECTUAL TEAMWOR, P111, DOI 10.4324/9781315807645
   Kraut RE, 2003, HUM-COMPUT INTERACT, V18, P13, DOI 10.1207/S15327051HCI1812_2
   Laitenberger O, 2001, IEEE T SOFTWARE ENG, V27, P387, DOI 10.1109/32.922713
   Lanubile F., 2003, Software Process Improvement and Practice, V8, P217, DOI 10.1002/spip.184
   Macaulay L.A., 1996, Requirements engineering
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Maule A., 1997, DECISION MAKING, P189
   MULLIN J, 2001, IHM HCI HALF DAY SEP
   Nuckolls Kandace, 2005, THESIS PORTLAND STAT
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Olson GM, 2000, HUM-COMPUT INTERACT, V15, P139, DOI 10.1207/S15327051HCI1523_4
   Parnas DL, 2003, IEEE T SOFTWARE ENG, V29, P674, DOI 10.1109/TSE.2003.1223642
   POLTROCK SE, 2005, P 38 HAW INT C SYST, pA104
   Rastegary H., 1993, Time Pressure and Stress in Human Judgment and Decision Making, P217, DOI [DOI 10.1007/978-1-4757-6846-6_15, https://doi.org/10.1007/978-1-4757-6846-615, DOI 10.1007/978-1-4757-6846-615]
   Robertson J, 2005, REPROD BIOMED ONLINE, V10, P21
   Rourke L., 2001, INT J ARTIFICIAL INT, V12
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Short J., 1976, The social psychology of telecommunications
   Stemler Steve., 2005, Practical Assessment, Research Evaluation, V7
   Taylor SJ., 1984, INTRO QUALITATIVE RE
   Veinott E., 1999, P SIGCHI C HUM FACT, P302, DOI DOI 10.1145/302979.303067
   WALZ DB, 1993, COMMUN ACM, V36, P63, DOI 10.1145/163430.163447
   WEGERIF R., 1997, LANGUAGE ED, V11
NR 50
TC 33
Z9 39
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2008
VL 34
IS 1
BP 116
EP 132
DI 10.1109/TSE.2007.70758
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 265QH
UT WOS:000253375500009
DA 2024-07-18
ER

PT J
AU Mangeruca, L
   Baleani, M
   Ferrari, A
   Sangiovanni-Vincentelli, A
AF Mangeruca, Leonardo
   Baleani, Massimo
   Ferrari, Alberto
   Sangiovanni-Vincentelli, Alberto
TI Semantics-preserving design of embedded control software from
   synchronous
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software design methodologies; protection mechanisms; embedded software
   design
ID TIME; SYSTEMS
AB The design of embedded controllers is experiencing a growth in complexity as embedded systems increase their functionality while they become ubiquitous in electronic appliances, cars, airplanes, etc. As requirements become more challenging, mathematical models gain importance for mastering complexity. Among the different computational models proposed, synchronous models have proved to be the most widely used for control dominated applications. While synchronous models simplify the way of dealing with concurrency by decoupling functional and timing aspects, their software implementation on multitasking and multiprocessor platforms is far from straightforward, because of the asynchronous nature of most industrial software platforms. Known solutions in the literature either restrict the solution space or focus on special cases. We present a method for preserving the synchronous semantics through buffer-based intertask communication mechanisms, grounded on an abstraction of the target platform. This allows us to deal with any task set and, most importantly, being independent of the implementation, to explore the design space effectively.
C1 PARADES GEIE, I-00186 Rome, Italy.
   Univ Calif Berkeley, Dept Elect Engn & Comp Sci, Berkeley, CA 94720 USA.
C3 University of California System; University of California Berkeley
RP Mangeruca, L (corresponding author), PARADES GEIE, Via San Pantaleo 66, I-00186 Rome, Italy.
EM leonardo@parades.rm.cnr.it; alberto@eecs.berkely.edu
RI Sangiovanni-Vincentelli, Alberto/F-5742-2018
OI Sangiovanni-Vincentelli, Alberto/0000-0003-1298-8389
CR André C, 2001, SECOND INTERNATIONAL CONFERENCE ON APPLICATION OF CONCURRENCY TO SYSTEMS DESIGN, PROCEEDINGS, P133, DOI 10.1109/CSD.2001.981771
   *ASCET, 2003, ETAS
   BENVENISTE A, 1991, P IEEE, V79, P1270, DOI 10.1109/5.97297
   BENVENISTE A, 2005, P C EMB SOFTW EMSOFT, P225
   BENVENISTE A, 2004, P C EMB SOFTW EMSOFT
   Berry G, 2003, ICCAD-2003: IEEE/ACM DIGEST OF TECHNICAL PAPERS, P433
   BHATTACHARYYA S, 1999, P WORKSH COMP ARCH S
   BHATTACHARYYA SS, 1997, P IEEE INT C APPL SP
   Bini E, 2004, IEEE T COMPUT, V53, P1462, DOI 10.1109/TC.2004.103
   Bomze I. M., 1999, HDB COMBINATORIAL OP, V4
   BOUSSINOT F, 1991, P IEEE, V79, P1293, DOI 10.1109/5.97299
   Carloni LP, 2001, IEEE T COMPUT AID D, V20, P1059, DOI 10.1109/43.945302
   CARLONI LP, 1999, P INT C COMP AID DES
   Caspi P, 1999, IEEE T SOFTWARE ENG, V25, P416, DOI 10.1109/32.798329
   CASPI P, 2003, P C LANG COMP TOOLS
   CASPI P, 1998, OCREP AUTOMATIC PARA
   CORNO F, 1995, EUR CONF DESIG AUTOM, P320, DOI 10.1109/EDTC.1995.470377
   DION B, 2004, P DIG AV SYST C DASC, V2
   Edwards J, 2003, NUCL PLANT J, V21, P42
   *EST TECHN, 1999, SCADE LANG REF MAN
   Gavril F., 1972, SIAM Journal on Computing, V1, P180, DOI 10.1137/0201013
   GIRAULT A, 2003, ERCIM NEWS, V52, P26
   GIRAULT A, 2005, P INT WORKSH SYNCHR
   GIRAULT A, 2003, P INT C EMB SOFTW EM, P206
   Gunzert M, 1999, INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR PARALLEL AND DISTRIBUTED SYSTEMS, PROCEEDINGS, P134, DOI 10.1109/PDSE.1999.779745
   GUNZERT M, 1999, P IFAC IFIP WORKSH R
   HALBWACHS N, 1991, P IEEE, V79, P1305, DOI 10.1109/5.97300
   Kopetz H, 2003, P IEEE, V91, P112, DOI 10.1109/JPROC.2002.805821
   LEGUERNIC P, 1991, P IEEE, V79, P1321, DOI 10.1109/5.97301
   Mangeruca L, 2006, PROCEEDINGS OF THE 12TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, P157
   MANGERUCA L, IN PRESS ACM T EMBED
   MATLAB/Simulink, 2007, MATLAB SIM
   Mukherjee B., 1993, GITCC9205
   POTOPBUTUCARU D, 2004, P C APPL CONC SYST D
   Ramachandran U., 1990, IEEE Transactions on Parallel and Distributed Systems, V1, P318, DOI 10.1109/71.80159
   RAMAMRITHAM K, 1994, P IEEE, V82, P55, DOI 10.1109/5.259426
   SCAIFE N, 2004, P EUR C REAL TIM SYS
   SCAIFE N, 2004, TR200412 VER
   Sha L, 2004, REAL-TIME SYST, V28, P101, DOI 10.1023/B:TIME.0000045315.61234.1e
   SINHA PK, 1991, COMPUTER, V24, P34, DOI 10.1109/2.84875
   SOFRONIS C, 2006, P INT C EMB SOFTW EM
   TRIPAKIS S, 2005, P INT C EMB SOFTW EM, P353
   [No title captured]
NR 43
TC 4
Z9 7
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2007
VL 33
IS 8
BP 497
EP 509
DI 10.1109/TSE.2007.70718
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 182ZJ
UT WOS:000247542200001
DA 2024-07-18
ER

PT J
AU Jorgensen, M
   Shepperd, M
AF Jorgensen, Magne
   Shepperd, Martin
TI A systematic review of software development cost estimation studies
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE systematic review; software cost estimation; software effort estimation;
   software cost prediction; software effort prediction; research methods
ID FUNCTION-POINT ANALYSIS; DEVELOPMENT EFFORT PREDICTION; EFFORT
   ESTIMATION UNCERTAINTY; ERROR REMOVAL TIMES; II FUNCTION POINTS;
   PROJECT-MANAGEMENT; ESTIMATION MODELS; SIZE ESTIMATION; NEURAL-NETWORK;
   PROGRAMMING MEASUREMENT
AB This paper aims to provide a basis for the improvement of software estimation research through a systematic review of previous work. The review identifies 304 software cost estimation papers in 76 journals and classifies the papers according to research topic, estimation approach, research approach, study context and data set. A Web-based library of these cost estimation papers is provided to ease the identification of relevant estimation research results. The review results combined with other knowledge provide support for recommendations for future software cost estimation research, including 1) increase the breadth of the search for relevant studies, 2) search manually for relevant papers within a carefully selected set of journals when completeness is essential, 3) conduct more studies on estimation methods commonly used by the software industry, and 4) increase the awareness of how properties of the data sets impact the results when evaluating estimation methods.
C1 Simula Res Lab, NO-1325 Lysaker, Norway.
   Brunel Univ, Sch IS Comp & Math, Uxbridge UB8 3PH, Middx, England.
C3 Brunel University
RP Jorgensen, M (corresponding author), Simula Res Lab, Marin Linges 17,Fornebu,POB 134, NO-1325 Lysaker, Norway.
EM magnej@simula.no; martin.shepperd@brunel.ac.uk
RI Shepperd, Martin/F-9683-2013; Jorgensen, Magne/H-4402-2016
OI Shepperd, Martin/0000-0003-1874-6145; 
CR Abdel-Hamid TK, 1999, MIS QUART, V23, P531, DOI 10.2307/249488
   ABDELHAMID TK, 1993, IEEE T SOFTWARE ENG, V19, P603, DOI 10.1109/32.232025
   ABDELHAMID TK, 1983, COMMUN ACM, V26, P340, DOI 10.1145/69586.358135
   ABDELHAMID TK, 1993, COMPUTER, V26, P20, DOI 10.1109/2.204681
   ABDELHAMID TK, 1990, IEEE SOFTWARE, V7, P97, DOI 10.1109/52.43055
   ABDELHAMID TK, 1986, IEEE SOFTWARE, V3, P70, DOI 10.1109/MS.1986.234072
   ABRAN A, 1994, J SYST SOFTWARE, V25, P171, DOI 10.1016/0164-1212(94)90004-3
   Abran A., 1997, American Programmer, V10, P32
   Abran A, 2002, J SOFTW MAINT EVOL-R, V14, P31, DOI 10.1002/smr.245
   Abran A, 1996, IEEE T SOFTWARE ENG, V22, P895, DOI 10.1109/32.553638
   ADRANGI B, 1987, J SYST MANAGE, V38, P21
   Aguilar-Ruiz JS, 2001, INFORM SOFTWARE TECH, V43, P875, DOI 10.1016/S0950-5849(01)00193-8
   Ahn Y, 2003, J SOFTW MAINT EVOL-R, V15, P71, DOI 10.1002/smr.269
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], 1995, Software World, V26, P3
   [Anonymous], EUR J INF SYST
   Antoniol G, 2003, EMPIR SOFTW ENG, V8, P225, DOI 10.1023/A:1024472727275
   Antoniol G., 1999, Empirical Software Engineering, V4, P263, DOI 10.1023/A:1009834811663
   Arifoglu A., 1993, SIGSOFT Software Engineering Notes, V18, P96, DOI 10.1145/159420.155844
   Baik J, 2002, IEEE T SOFTWARE ENG, V28, P1009, DOI 10.1109/TSE.2002.1049401
   Balcom O., 1998, Embedded Systems Programming, V11, P96
   BANKER RD, 1994, INFORM SOFTWARE TECH, V36, P275, DOI 10.1016/0950-5849(94)90083-3
   BANKER RD, 1994, IEEE T SOFTWARE ENG, V20, P169, DOI 10.1109/32.268919
   BANKER RD, 1993, COMMUN ACM, V36, P81, DOI 10.1145/163359.163375
   Banker RD, 1997, MANAGE SCI, V43, P1709, DOI 10.1287/mnsc.43.12.1709
   Barki H, 2001, J MANAGE INFORM SYST, V17, P37, DOI 10.1080/07421222.2001.11045666
   Barry E. J., 2002, Information Technology & Management, V3, P113, DOI 10.1023/A:1013168927238
   BASILI VR, 1981, J SYST SOFTWARE, V2, P59, DOI 10.1016/0164-1212(81)90047-9
   BASILI VR, 1981, J SYST SOFTWARE, V2, P47, DOI 10.1016/0164-1212(81)90046-7
   BEHRENS CA, 1983, IEEE T SOFTWARE ENG, V9, P648, DOI 10.1109/TSE.1983.235429
   Benediktsson O., 2003, IEE Proceedings-Software, V150, P351, DOI 10.1049/ip-sen:20031056
   Benediktsson O, 2003, SOFTWARE QUAL J, V11, P265, DOI 10.1023/A:1025809010217
   Benyahia H., 1996, Engineering Economist, V41, P229, DOI 10.1080/00137919608967490
   BERGERON F, 1992, INFORM MANAGE, V22, P239, DOI 10.1016/0378-7206(92)90026-C
   BETTERIDGE R, 1992, INFORM SOFTWARE TECH, V34, P655, DOI 10.1016/0950-5849(92)90070-6
   Bielak J, 2000, IEEE SOFTWARE, V17, P27, DOI 10.1109/52.895165
   Boehm B, 1999, INFORM SOFTWARE TECH, V41, P937, DOI 10.1016/S0950-5849(99)00091-9
   Boehm B., 1995, Annals of Software Engineering, V1, P57, DOI 10.1007/BF02249046
   Boehm B., 1996, American Programmer, V9, P2
   Boehm B, 2000, ANN SOFTW ENG, V10, P177, DOI 10.1023/A:1018991717352
   Boehm B. W., 1980, Journal of Systems and Software, V1, P195, DOI 10.1016/0164-1212(79)90020-7
   Boehm B.W., 1981, Software engineering economics, P767
   BOEHM BW, 1988, IEEE T SOFTWARE ENG, V14, P1462, DOI 10.1109/32.6191
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   BOLLINGER TB, 1990, INFORM SOFTWARE TECH, V32, P643, DOI 10.1016/0950-5849(90)90097-B
   Bowden P, 2000, J SYST SOFTWARE, V51, P87, DOI 10.1016/S0164-1212(99)00114-4
   Bradley M, 1999, SOFTWARE QUAL J, V8, P121, DOI 10.1023/A:1008904926757
   Briand L. C., 2002, Encyclopedia of software engineering, P1160, DOI DOI 10.1002/0471028959.SOF282
   BRIAND LC, 1992, IEEE T SOFTWARE ENG, V18, P931, DOI 10.1109/32.177363
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P963, DOI 10.1109/32.965338
   Burgess CJ, 2001, INFORM SOFTWARE TECH, V43, P863, DOI 10.1016/S0950-5849(01)00192-6
   CARD DN, 1987, J SYST SOFTWARE, V7, P29, DOI 10.1016/0164-1212(87)90005-7
   CARMEL E, 1995, INFORM SOFTWARE TECH, V37, P515, DOI 10.1016/0950-5849(95)97295-J
   Carson C., 1996, Texas Instruments Technical Journal, V13, P101
   Chan TZ, 1996, IEEE T SOFTWARE ENG, V22, P580, DOI 10.1109/32.536958
   Chang CK, 2001, ANN SOFTW ENG, V11, P107, DOI 10.1023/A:1012543203763
   Chatzoglou P. D., 1996, International Journal of Project Management, V14, P173, DOI 10.1016/0263-7863(95)00074-7
   Chatzoglou P. D., 1998, Automated Software Engineering, V5, P211, DOI 10.1023/A:1008621131645
   CHRYSLER E, 1978, COMMUN ACM, V21, P472, DOI 10.1145/359511.359523
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   Cockcroft S, 1996, INFORM SOFTWARE TECH, V38, P391, DOI 10.1016/0950-5849(95)01065-3
   Connolly T, 1997, MANAGE SCI, V43, P1029, DOI 10.1287/mnsc.43.7.1029
   Constantine G., 2001, R.F. Design, V24, P60
   Costagliola G, 2000, INT J SOFTW ENG KNOW, V10, P581, DOI 10.1142/S0218194000000304
   CUELENAERE AME, 1987, INFORM SOFTWARE TECH, V29, P558, DOI 10.1016/0950-5849(87)90089-9
   Czuchra W, 1999, COMPUT OPER RES, V26, P731, DOI 10.1016/S0305-0548(98)00086-0
   Day R., 1999, Ada User Journal, V20, P154
   Dolado JJ, 1997, J SYST SOFTWARE, V37, P161, DOI 10.1016/S0164-1212(96)00111-2
   Dolado JJ, 2000, IEEE T SOFTWARE ENG, V26, P1006, DOI 10.1109/32.879821
   Dolado JJ, 2001, INFORM SOFTWARE TECH, V43, P61, DOI 10.1016/S0950-5849(00)00137-3
   Dunst J, 2004, EJC SUPPL, V2, P3, DOI 10.1016/S1359-6349(03)00102-2
   Dutta S, 1998, COMMUN ACM, V41, P77, DOI 10.1145/276609.276623
   Ebrahimi NB, 1999, IEEE T SOFTWARE ENG, V25, P136, DOI 10.1109/32.748922
   Edwards JS, 1994, EUR J INFORM SYST, V3, P139, DOI 10.1057/ejis.1994.14
   EVANCO WM, 1995, J SYST SOFTWARE, V29, P75, DOI 10.1016/0164-1212(94)00129-B
   Fairley R. E., 1992, International Conference on Software Engineering, P382, DOI 10.1145/143062.143155
   FERENS D, 1999, J PARAMETRICS, V14, P33
   Ferens D. V., 1996, American Programmer, V9, P28
   Ferens DV, 1999, IEEE AERO EL SYS MAG, V14, P23, DOI 10.1109/62.750425
   FERENS DV, 1984, ISPA J PARAMETRICS, V4, P64
   Finnie G. R., 1997, Australian Journal of Information Systems, V4, P39
   Finnie GR, 1997, J SYST SOFTWARE, V39, P281, DOI 10.1016/S0164-1212(97)00055-1
   Fleck RA, 1998, IND MANAGE DATA SYST, V98, P63, DOI 10.1108/02635579810205403
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Francalanci C, 2001, J INF TECHNOL-UK, V16, P33, DOI 10.1080/02683960010035943
   GENUCHTEN M, 1991, INFORM MANAGE, V21, P37
   Gilb T., 1986, SIGSOFT Software Engineering Notes, V11, P49, DOI 10.1145/382300.382312
   Gonzales M. G., 2000, Empirical Software Engineering, V5, P155, DOI 10.1023/A:1009867323634
   GOODMAN PA, 1992, INFORM SOFTWARE TECH, V34, P379, DOI 10.1016/0950-5849(92)90012-E
   GranjaAlvarez JC, 1997, J SOFTW MAINT-RES PR, V9, P161, DOI 10.1002/(SICI)1096-908X(199705)9:3<161::AID-SMR148>3.0.CO;2-8
   Graves TL, 2001, TECHNOMETRICS, V43, P168, DOI 10.1198/004017001750386288
   Gray A, 1997, INFORM SOFTWARE TECH, V39, P425, DOI 10.1016/S0950-5849(96)00006-7
   Gray A. R., 1999, Empirical Software Engineering, V4, P297, DOI 10.1023/A:1009849100780
   Grimstad S, 2006, INFORM SOFTWARE TECH, V48, P302, DOI 10.1016/j.infsof.2005.04.004
   GULEZIAN R, 1991, J SYST SOFTWARE, V16, P235, DOI 10.1016/0164-1212(91)90018-2
   Hakuta M, 1997, J SYST SOFTWARE, V37, P253, DOI 10.1016/S0164-1212(96)00020-9
   Hall B, 2001, J SYST SOFTWARE, V57, P217, DOI 10.1016/S0164-1212(01)00012-7
   HALSTEAD MH, 1979, ADV COMPUT, V18, P119
   HARRISON W, 1987, J MANAGEMENT INFORM, V3, P101
   Hastings TE, 2001, IEEE T SOFTWARE ENG, V27, P337, DOI 10.1109/32.917523
   Haynes P., 1996, American Programmer, V9, P35
   HEEMSTRA FJ, 1992, INFORM SOFTWARE TECH, V34, P627, DOI 10.1016/0950-5849(92)90068-Z
   Heiat A, 2002, INFORM SOFTWARE TECH, V44, P911, DOI 10.1016/S0950-5849(02)00128-3
   Heiat A, 1997, J SYST SOFTWARE, V39, P7, DOI 10.1016/S0164-1212(96)00159-8
   Helander ME, 1998, IEEE T SOFTWARE ENG, V24, P420, DOI 10.1109/32.689400
   Hill J., 2000, International Journal of Project Management, V18, P13, DOI 10.1016/S0263-7863(98)00062-3
   Horgan G, 1998, INFORM SOFTWARE TECH, V40, P409, DOI 10.1016/S0950-5849(98)00074-3
   Host M, 1997, INFORM SOFTWARE TECH, V39, P755, DOI 10.1016/S0950-5849(97)00027-X
   Hu Q, 1997, IEEE T SOFTWARE ENG, V23, P379, DOI 10.1109/32.601078
   Huang SJ, 2001, INFORM MANAGE-AMSTER, V38, P449, DOI 10.1016/S0378-7206(00)00081-1
   Hughes R. T., 1998, IEE Proceedings-Software, V145, P29, DOI 10.1049/ip-sen:19983370
   Hughes RT, 1996, INFORM SOFTWARE TECH, V38, P67, DOI 10.1016/0950-5849(95)01045-9
   Humphrey W. S., 1996, American Programmer, V9, P2
   HUMPHREY WS, 1991, IEEE T SOFTWARE ENG, V17, P196, DOI 10.1109/32.67600
   Idri A, 2002, ENG INTELL SYST ELEC, V10, P147
   JEFFERY DR, 1993, IEEE T SOFTWARE ENG, V19, P529, DOI 10.1109/32.232016
   JEFFERY DR, 1987, IEEE T SOFTWARE ENG, V13, P852, DOI 10.1109/TSE.1987.233496
   JEFFERY DR, 1990, SOFTWARE ENG J, V5, P215, DOI 10.1049/sej.1990.0024
   Jeffery R., 1996, Empirical Software Engineering, V1, P11, DOI 10.1007/BF00125809
   Jeffery R, 1997, AUST COMPUT J, V29, P148
   Jeffery R, 2000, INFORM SOFTWARE TECH, V42, P1009, DOI 10.1016/S0950-5849(00)00153-1
   JENKINS AM, 1984, INFORM MANAGE, V7, P73, DOI 10.1016/0378-7206(84)90012-0
   JENSON RL, 1991, J SYST SOFTWARE, V15, P107, DOI 10.1016/0164-1212(91)90048-B
   Johnson PM, 2000, IEEE SOFTWARE, V17, P51, DOI 10.1109/52.895168
   JORGENSEN M, 1995, IEEE T SOFTWARE ENG, V21, P674, DOI 10.1109/32.403791
   Jorgensen M., 2004, International Journal of Project Management, V22, P317, DOI 10.1016/S0263-7863(03)00085-1
   Jorgensen M, 2004, INFORM SOFTWARE TECH, V46, P3, DOI 10.1016/S0950-5349(03)00093-4
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P209, DOI 10.1109/TSE.2004.1274041
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P79, DOI 10.1016/S0164-1212(02)00160-7
   Jorgensen M, 2003, J SYST SOFTWARE, V68, P253, DOI 10.1016/S0164-1212(03)00066-9
   Jorgensen M, 2003, INFORM SOFTWARE TECH, V45, P123, DOI 10.1016/S0950-5849(02)00188-X
   Jorgensen M., 2001, Scandinavian Journal of Information Systems, V13, P99
   Jorgensen M, 2001, INFORM SOFTWARE TECH, V43, P939, DOI 10.1016/S0950-5849(01)00203-8
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   JORGENSEN M, 2003, SOFTWARE ENG NOTES, V28, P5
   JORGENSEN M, 2005, P C EV ASS SOFTW ENG, P1
   Jun ES, 2001, EXPERT SYST APPL, V21, P1, DOI 10.1016/S0957-4174(01)00021-5
   Jung HW, 2000, INT J SYST SCI, V31, P91, DOI 10.1080/002077200291497
   Kalipsiz Y., 2002, Pakistan Journal of Information and Technology, V1, P5
   Kamatar J, 2000, IEEE SOFTWARE, V17, P85, DOI 10.1109/52.895173
   Kansala K, 1997, IEEE SOFTWARE, V14, P61, DOI 10.1109/52.589236
   Kaplan H. T., 1991, Vitro Technical Journal, V9, P48
   Kappelman LA, 1998, COMMUN ACM, V41, P30, DOI 10.1145/269012.269018
   Keil M, 2000, J SYST SOFTWARE, V53, P145, DOI 10.1016/S0164-1212(00)00010-8
   KELLERMCNULTY S, 1991, J SYST SOFTWARE, V16, P59, DOI 10.1016/0164-1212(91)90032-2
   KEMERER CF, 1993, COMMUN ACM, V36, P85, DOI 10.1145/151220.151230
   KEMERER CF, 1992, IEEE T SOFTWARE ENG, V18, P1011, DOI 10.1109/32.177370
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Kirsopp C., 2002, IEE Proceedings-Software, V149, P123, DOI 10.1049/ip-sen:20020695
   Kitchenham B, 1997, IEEE SOFTWARE, V14, P69, DOI 10.1109/52.589239
   Kitchenham B, 2003, IEEE T SOFTWARE ENG, V29, P542, DOI 10.1109/TSE.2003.1205181
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   Kitchenham B, 1998, IEEE T SOFTWARE ENG, V24, P278, DOI 10.1109/32.677185
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kitchenham B. A., 1984, ICL Technical Journal, V4, P73
   Kitchenham BA, 2002, INFORM SOFTWARE TECH, V44, P13, DOI 10.1016/S0950-5849(01)00204-X
   KITCHENHAM BA, 1992, INFORM SOFTWARE TECH, V34, P211, DOI 10.1016/0950-5849(92)90077-3
   KITCHENHAM BA, 1985, J SYST SOFTWARE, V5, P267, DOI 10.1016/0164-1212(85)90026-3
   Koch S, 2002, INFORM SYST J, V12, P27, DOI 10.1046/j.1365-2575.2002.00110.x
   KUSTERS RJ, 1990, INFORM SOFTWARE TECH, V32, P187, DOI 10.1016/0950-5849(90)90176-R
   Kusumoto S., 2001, Transactions of the Information Processing Society of Japan, V42, P396
   Lanza R. B., 2003, Information Strategy: The Executive's Journal, V19, P26
   LARANJEIRA LA, 1990, IEEE T SOFTWARE ENG, V16, P510, DOI 10.1109/32.52774
   Larsen KRT, 2000, COMMUN ACM, V43, P109, DOI 10.1145/328236.328113
   LASSEZ JL, 1981, J SYST SOFTWARE, V2, P105, DOI 10.1016/0164-1212(81)90030-3
   Lavazza L., 2000, Empirical Software Engineering, V5, P229, DOI 10.1023/A:1026590615963
   Lederer A. L., 1993, Information Systems Management, V10, P37, DOI 10.1080/10580539308906955
   Lederer A. L., 1995, Information Resources Management Journal, V8, P16
   Lederer AL, 2000, J SYST SOFTWARE, V50, P33, DOI 10.1016/S0164-1212(99)00074-6
   LEDERER AL, 1993, J INF TECHNOL-UK, V8, P22, DOI 10.1057/jit.1993.4
   LEDERER AL, 1990, MIS QUART, V14, P159, DOI 10.2307/248774
   LEDERER AL, 1992, COMMUN ACM, V35, P50
   Lederer AL, 1998, IEEE T SOFTWARE ENG, V24, P137, DOI 10.1109/32.666827
   LEDERER AL, 1995, J SYST SOFTWARE, V31, P125, DOI 10.1016/0164-1212(94)00092-2
   LEDERER AL, 1991, ACM T COMPUTER PERSO, V13, P47
   Lee A, 1998, INFORM MANAGE-AMSTER, V34, P1, DOI 10.1016/S0378-7206(98)00041-X
   LEE H, 1993, J SYST SOFTWARE, V21, P179, DOI 10.1016/0164-1212(93)90040-5
   Leung H. K. N., 2002, Empirical Software Engineering, V7, P157, DOI 10.1023/A:1015202115651
   Lewis J. P., 2001, Software Engineering Notes, V26, P54, DOI 10.1145/505482.505490
   Lima OD, 2003, SOFTWARE QUAL J, V11, P149, DOI 10.1023/A:1023716628585
   Lind MR, 2000, COMPUT OPER RES, V27, P1153, DOI 10.1016/S0305-0548(99)00150-1
   Lind MR, 1998, EUR J INFORM SYST, V7, P261, DOI 10.1057/palgrave.ejis.3000308
   Lo B. W. N., 1997, Australian Journal of Information Systems, V5, P30
   Lokan C. J., 1995, Journal of Computer and Software Engineering, V3, P377
   Lokan CJ, 2000, INFORM SOFTWARE TECH, V42, P649, DOI 10.1016/S0950-5849(00)00108-7
   Lokan CJ, 1996, J SYST SOFTWARE, V32, P65, DOI 10.1016/0164-1212(95)00044-5
   Londeix B, 1995, INFORM SOFTWARE TECH, V37, P665, DOI 10.1016/0950-5849(96)81743-5
   LOW GC, 1990, IEEE T SOFTWARE ENG, V16, P64, DOI 10.1109/32.44364
   MACDONELL SG, 1994, SOFTWARE ENG J, V9, P107, DOI 10.1049/sej.1994.0014
   MacDonell SG, 1999, INT J SOFTW ENG KNOW, V9, P801, DOI 10.1142/S0218194099000413
   MacDonell SG, 1997, INFORM SOFTWARE TECH, V39, P35, DOI 10.1016/0950-5849(96)01125-1
   MacDonell SG, 2003, INFORM SOFTWARE TECH, V45, P389, DOI 10.1016/S0950-5849(03)00011-9
   MacDonell SG, 2003, J SYST SOFTWARE, V66, P91, DOI 10.1016/S0164-1212(02)00067-5
   Madachy R. J., 1995, Automated Software Engineering, V2, P219, DOI 10.1007/BF00871798
   Madachy RJ, 1997, IEEE SOFTWARE, V14, P51, DOI 10.1109/52.589234
   Mair C, 2000, J SYST SOFTWARE, V53, P23, DOI 10.1016/S0164-1212(00)00005-4
   MAROUANE R, 1989, INFORM SOFTWARE TECH, V31, P251, DOI 10.1016/0950-5849(89)90004-9
   Marshall IM, 1997, INFORM SOFTWARE TECH, V39, P541, DOI 10.1016/S0950-5849(97)00010-4
   MARSHALL IM, 1994, INFORM SOFTWARE TECH, V36, P251, DOI 10.1016/0950-5849(94)90080-9
   MARWANE R, 1991, INFORM SOFTWARE TECH, V33, P232, DOI 10.1016/0950-5849(91)90138-2
   Matson J. E., 1993, Expert Systems, V10, P3, DOI 10.1111/j.1468-0394.1993.tb00298.x
   MATSON JE, 1994, IEEE T SOFTWARE ENG, V20, P275, DOI 10.1109/32.277575
   Maxwell K, 1999, MANAGE SCI, V45, P787, DOI 10.1287/mnsc.45.6.787
   Maxwell KD, 1996, IEEE T SOFTWARE ENG, V22, P706, DOI 10.1109/32.544349
   McCulla P., 1989, International Journal of Project Management, V7, P36, DOI 10.1016/0263-7863(89)90051-3
   Mendes E., 2002, New Review of Hypermedia and Multimedia, V8, P199, DOI 10.1080/13614560208914741
   Mendes E., 2002, IEE Proceedings-Software, V149, P86, DOI 10.1049/ip-sen:20020337
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   Mendes E., 2001, IEEE Multimedia, V8, P50, DOI 10.1109/93.923953
   Miranda E, 2001, IEEE SOFTWARE, V18, P87, DOI 10.1109/52.903173
   Misic VB, 1998, J SYST SOFTWARE, V41, P133, DOI 10.1016/S0164-1212(97)10014-0
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   MIYAZAKI Y, 1991, INFORM SOFTWARE TECH, V33, P239, DOI 10.1016/0950-5849(91)90139-3
   Mizuno O, 2000, INFORM SOFTWARE TECH, V42, P465, DOI 10.1016/S0950-5849(00)00092-6
   MOHANTY SN, 1981, SOFTWARE PRACT EXPER, V11, P103, DOI 10.1002/spe.4380110202
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   Moores TT, 2001, EXPERT SYST APPL, V21, P229, DOI 10.1016/S0957-4174(01)00042-2
   MORGAN MJ, 1994, IND MANAGE DATA SYST, V94, P13, DOI 10.1108/02635579410053352
   Moser S, 1999, J SYST SOFTWARE, V49, P33, DOI 10.1016/S0164-1212(99)00064-3
   Moses J, 2002, SOFTWARE QUAL J, V10, P135, DOI 10.1023/A:1020523923715
   Moses J, 2003, SOFTWARE QUAL J, V11, P283, DOI 10.1023/A:1025861011126
   MUKHOPADHYAY T, 1992, MIS QUART, V16, P155, DOI 10.2307/249573
   MUKHOPADHYAY T, 1992, IEEE T SOFTWARE ENG, V18, P915, DOI 10.1109/32.163607
   Murali CS, 1997, INFORM SOFTWARE TECH, V39, P399, DOI 10.1016/S0950-5849(96)00004-3
   Musilek P., 2000, Applied Computing Review, V8, P24, DOI 10.1145/373975.373984
   Myrtveit I, 2001, IEEE T SOFTWARE ENG, V27, P999, DOI 10.1109/32.965340
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   NAVLAKHA JK, 1990, INFORM MANAGE, V18, P255, DOI 10.1016/0378-7206(90)90027-F
   Nesi P, 1998, J SYST SOFTWARE, V42, P89, DOI 10.1016/S0164-1212(97)10021-8
   OBRIEN SJ, 1993, SOFTWARE QUAL J, V2, P1, DOI 10.1007/BF00417423
   Ohlsson MC, 1998, INFORM SOFTWARE TECH, V40, P831, DOI 10.1016/S0950-5849(98)00097-4
   Oriogun PK, 1999, SOFTWARE QUAL J, V8, P53, DOI 10.1023/A:1008926902882
   Orr G, 2000, J SYST SOFTWARE, V53, P239, DOI 10.1016/S0164-1212(00)00015-7
   PARR FN, 1980, IEEE T SOFTWARE ENG, V6, P291, DOI 10.1109/TSE.1980.230475
   Pendharkar PC, 2002, J COMPUT INFORM SYST, V43, P7
   PENGELLY A, 1995, SOFTWARE ENG J, V10, P162, DOI 10.1049/sej.1995.0022
   PFLEEGER SL, 1991, INFORM SOFTWARE TECH, V33, P224, DOI 10.1016/0950-5849(91)90137-Z
   PFLEEGER SL, 1994, INFORM SOFTWARE TECH, V36, P475, DOI 10.1016/0950-5849(94)90025-6
   Pham H, 1999, IEEE T COMPUT, V48, P71, DOI 10.1109/12.743412
   Pham H, 2001, IEEE T SYST MAN CY A, V31, P623, DOI 10.1109/3468.983418
   Pickard L., 2001, IEE Proceedings-Software, V148, P165, DOI 10.1049/ip-sen:20010621
   Pillai K, 1997, IEEE T SOFTWARE ENG, V23, P485, DOI 10.1109/32.624305
   Prechelt L, 2003, J SYST SOFTWARE, V65, P115, DOI 10.1016/S0164-1212(02)00053-5
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P465, DOI 10.1109/32.922716
   Prietula M, 1996, J EXP THEOR ARTIF IN, V8, P341, DOI 10.1080/095281396147366
   Prokhorov VV, 2001, PROGRAM COMPUT SOFT+, V27, P252, DOI 10.1023/A:1012340910168
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   PUTNAM LH, 1979, DATAMATION, V25, P171
   Putnarn L. H., 1996, American Programmer, V9, P23
   Qing Hu, 1998, Journal of Management Information Systems, V15, P143
   RASK R, 1993, IEEE T SOFTWARE ENG, V19, P661, DOI 10.1109/32.238567
   RATCLIFF B, 1990, SOFTWARE ENG J, V5, P79, DOI 10.1049/sej.1990.0010
   Reifer DJ, 2000, IEEE SOFTWARE, V17, P57, DOI 10.1109/52.895169
   REIFER DJ, 1990, J SYST SOFTWARE, V11, P159, DOI 10.1016/0164-1212(90)90082-W
   Ruiz M, 2001, J SYST SOFTWARE, V59, P299, DOI 10.1016/S0164-1212(01)00070-X
   Rush C, 2001, CONCURRENT ENG-RES A, V9, P271, DOI [10.1177/1063293X0100900404, 10.1177/106329302023729]
   RUTHERFORD J, 1995, GEC-J RES, V12, P66
   Samson B, 1997, INFORM SOFTWARE TECH, V39, P55, DOI 10.1016/0950-5849(96)01124-X
   Schneider V., 1978, SIGPLAN Notices, V13, P49, DOI 10.1145/987515.987520
   Schooff RM, 1999, IEEE T SYST MAN CY C, V29, P272, DOI 10.1109/5326.760571
   Sengupta K, 1996, IEEE T SYST MAN CY A, V26, P177, DOI 10.1109/3468.485744
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M., 2000, Empirical Software Engineering, V5, P175, DOI 10.1023/A:1026582314146
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P987, DOI 10.1109/32.965339
   Shoval P, 1997, INFORM SOFTWARE TECH, V39, P855, DOI 10.1016/S0950-5849(97)00009-8
   Shukla KK, 2000, INFORM SOFTWARE TECH, V42, P701, DOI 10.1016/S0950-5849(00)00114-2
   Smith RK, 2001, IEEE T SOFTWARE ENG, V27, P264, DOI 10.1109/32.910861
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   Stamelos I, 2001, INFORM SOFTWARE TECH, V43, P759, DOI 10.1016/S0950-5849(01)00183-5
   Stamelos I, 2003, INFORM SOFTWARE TECH, V45, P51, DOI 10.1016/S0950-5849(02)00163-5
   Stensrud E, 2003, EMPIR SOFTW ENG, V8, P139, DOI 10.1023/A:1023010612345
   Stensrud E, 2001, INFORM SOFTWARE TECH, V43, P413, DOI 10.1016/S0950-5849(01)00147-1
   Stewart B, 2002, J SOFTW MAINT EVOL-R, V14, P161, DOI 10.1002/smr.250
   Strike K, 2001, IEEE T SOFTWARE ENG, V27, P890, DOI 10.1109/32.962560
   STUTZKE RD, 1996, J DEFENSE SOFTWARE E, V9, P17
   Subramanian A., 1997, Journal of End User Computing, V9, P19
   SUBRAMANIAN GH, 1993, J SYST SOFTWARE, V21, P187, DOI 10.1016/0164-1212(93)90041-U
   SUBRAMANIAN GH, 1995, J SYST SOFTWARE, V31, P135, DOI 10.1016/0164-1212(94)00093-3
   SYMONS CR, 1988, IEEE T SOFTWARE ENG, V14, P2, DOI 10.1109/32.4618
   TAFF LM, 1991, IEEE T SOFTWARE ENG, V17, P839, DOI 10.1109/32.83918
   Tate G., 1990, Journal of Information Technology, V5, P12, DOI 10.1057/jit.1990.4
   Tausworthe R. C., 1980, Journal of Systems and Software, V1, P181, DOI 10.1016/0164-1212(79)90018-9
   Uemura T, 2001, J SOFTW MAINT EVOL-R, V13, P223, DOI 10.1002/smr.231
   VANDERPOEL KG, 1983, J SYST SOFTWARE, V3, P187, DOI 10.1016/0164-1212(83)90033-X
   VANGENUCHTEN M, 1991, IEEE T SOFTWARE ENG, V17, P582, DOI 10.1109/32.87283
   VERNER J, 1992, IEEE T SOFTWARE ENG, V18, P265, DOI 10.1109/32.129216
   VERNER J, 1988, IEEE SOFTWARE, V5, P15, DOI 10.1109/52.17798
   VERNER JM, 1987, J SYST SOFTWARE, V7, P173, DOI 10.1016/0164-1212(87)90021-5
   Verner JM, 1999, INFORM SOFTWARE TECH, V41, P1021, DOI 10.1016/S0950-5849(99)00077-4
   Vicinanza SS, 1991, INFORM SYST RES, V2, P243, DOI 10.1287/isre.2.4.243
   Vijayakumar S, 1997, COMPUT CONTROL ENG J, V8, P113, DOI 10.1049/cce:19970303
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
   Walkerden F., 1997, ADV COMPUT, V44, P59, DOI DOI 10.1016/S0065-2458(08)60337-X
   WALSTON CE, 1977, IBM SYST J, V16, P54, DOI 10.1147/sj.161.0054
   WARBURTON RDH, 1983, IEEE T SOFTWARE ENG, V9, P562, DOI 10.1109/TSE.1983.235115
   WATSON KI, 1992, SOFTWARE QUAL J, V1, P193, DOI 10.1007/BF01885770
   WEINBERG GM, 1974, HUM FACTORS, V16, P70, DOI 10.1177/001872087401600108
   WHANG SJ, 1992, MANAGE SCI, V38, P307, DOI 10.1287/mnsc.38.3.307
   Wittig G, 1997, INFORM SOFTWARE TECH, V39, P469, DOI 10.1016/S0950-5849(97)00004-9
   Wittig G., 1994, AUSTR J INFORM SYSTE, V1, P87, DOI DOI 10.3127/AJIS.V1I2.424
   WOLVERTO.RW, 1974, IEEE T COMPUT, VC 23, P615, DOI 10.1109/T-C.1974.224002
   WOODFIELD SN, 1981, J SYST SOFTWARE, V2, P97, DOI 10.1016/0164-1212(81)90029-7
   WRIGLEY CD, 1991, MIS QUART, V15, P245, DOI 10.2307/249386
   YAU C, 1995, SOFTWARE QUAL J, V4, P175, DOI 10.1007/BF01351922
   Yau C, 1998, INFORM SOFTWARE TECH, V40, P59, DOI 10.1016/S0950-5849(98)00032-9
   Zhang XM, 1998, INT J SYST SCI, V29, P435, DOI 10.1080/00207729808929534
   Zhang XM, 1998, IIE TRANS, V30, P1135, DOI 10.1080/07408179808966570
   [No title captured]
NR 310
TC 532
Z9 579
U1 7
U2 73
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2007
VL 33
IS 1
BP 33
EP 53
DI 10.1109/TSE.2007.256943
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 109ML
UT WOS:000242312200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Memon, AM
   Xie, Q
AF Memon, AM
   Xie, Q
TI Studying the fault-detection effectiveness of GUI test cases for rapidly
   evolving software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 20th IEEE International Conference on Software Maintenance (ICSM 2004)
CY SEP 11-14, 2004
CL Chicago, IL
SP IEEE Comp Soc
DE smoke testing; GUI testing; test oracles; empirical studies; regression
   testing
AB Software is increasingly being developed/maintained by multiple, often geographically distributed developers working concurrently. Consequently, rapid-feedback-based quality assurance mechanisms such as daily builds and smoke regression tests, which help to detect and eliminate defects early during software development and maintenance, have become important. This paper addresses a major weakness of current smoke regression testing techniques, i.e., their inability to automatically ( re) test graphical user interfaces (GUIs). Several contributions are made to the area of GUI smoke testing. First, the requirements for GUI smoke testing are identified and a GUI smoke test is formally defined as a specialized sequence of events. Second, a GUI smoke regression testing process called Daily Automated Regression Tester ( DART) that automates GUI smoke testing is presented. Third, the interplay between several characteristics of GUI smoke test suites including their size, fault detection ability, and test oracles is empirically studied. The results show that: 1) the entire smoke testing process is feasible in terms of execution time, storage space, and manual effort, 2) smoke tests cannot cover certain parts of the application code, 3) having comprehensive test oracles may make up for not having long smoke test cases, and 4) using certain oracles can make up for not having large smoke test suites.
C1 Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
C3 University System of Maryland; University of Maryland College Park
RP Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
EM atif@cs.umd.edu; qing@cs.umd.edu
CR [Anonymous], THESIS U PITTSBURGH
   Baran N, 2001, DR DOBBS J, V26, P112
   BARAN N, 2001, DOBBS J SOFTWARE TOO, V26, P116
   BARAN N, 2001, DOBBS J SOFTWARE TOO, V26, P114
   BARAN N, 2001, DOBBS J SOFTWARE TOO, V26, P118
   BERGHEL H, 1995, COMPUTER, V28, P63, DOI 10.1109/2.410155
   Crispin Lisa, 2001, P 2 INT C EXTR PROGR, P96
   Ellis S, 2001, DR DOBBS J, V26, P10
   Finsterwalder M., 2001, Proc. of the 2nd Int. Conf. on Extreme Prog, P114
   HALLORAN T, 2002, 2 WORKSH OP SOURC SO
   Hicinbothom J. H., 1993, Proceedings of the Human Factors and Ergonomics Society 37th Annual Meeting. Designing for Diversity
   Jobson J.D., 1991, APPL MULTIVARIATE DA, V1
   *JUNIT, 2004, TEST RES EXTR PROGR
   Karlsson E.-A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P649, DOI 10.1109/ICSE.2000.870459
   MARICK B, 1998, P 11 INT SOFTW INT Q
   Marick B, 2002, SOFTWARE TESTING QUA, P41
   McConnell S, 1996, IEEE SOFTWARE, V13, P143
   Memon A, 2005, J SOFTW MAINT EVOL-R, V17, P27, DOI 10.1002/smr.305
   Memon A, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P260, DOI 10.1109/WCRE.2003.1287256
   Memon A, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P164, DOI 10.1109/ASE.2003.1240304
   Memon AM, 2004, PROC IEEE INT CONF S, P8, DOI 10.1109/ICSM.2004.1357785
   Memon AM, 2001, IEEE T SOFTWARE ENG, V27, P144, DOI 10.1109/32.908959
   OLSSON K, 1999, DAILY BUILD BEST BOT
   ROBBINS J, 2000, DEBUGGING APPL
   Sahai H., 2000, Analysis of Variance: Fixed, Random, and Mixed Models
   SU J, 1991, IEEE SOFTWARE, V8, P26, DOI 10.1109/52.73746
   VOGEL P, 1993, P INT S SOFTW TEST A, P61
   WEIRICH J, 1997, LINUX J, V36
   White L, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P54, DOI 10.1109/ISSRE.2001.989458
   2003, RATIONAL ROBOT
   2003, CAPTURE REPLAY TOOL
   2003, WINE DAILY BUILDS
   2003, ABBOTJAVA GUI TEST F
   2004, JAVA TEST COVERAGE A
   2003, CRUISE CONTROL
   2003, MOZILLA
   2003, OPEN WEBMAIL
   2003, MERCURY INTERACTIVE
NR 38
TC 107
Z9 135
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2005
VL 31
IS 10
BP 884
EP 896
DI 10.1109/TSE.2005.117
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 980JR
UT WOS:000233015300007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sjoberg, DIK
   Hannay, JE
   Hansen, O
   Kampenes, VB
   Karahasanovic, A
   Liborg, NK
   Rekdal, AC
AF Sjoberg, DIK
   Hannay, JE
   Hansen, O
   Kampenes, VB
   Karahasanovic, A
   Liborg, NK
   Rekdal, AC
TI A survey of controlled experiments in software engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE controlled experiments; survey; research methodology; empirical software
   engineering
AB The classical method for identifying cause-effect relationships is to conduct controlled experiments. This paper reports upon the present state of how controlled experiments in software engineering are conducted and the extent to which relevant information is reported. Among the 5,453 scientific articles published in 12 leading software engineering journals and conferences in the decade from 1993 to 2002, 103 articles (1.9 percent) reported controlled experiments in which individuals or teams performed one or more software engineering tasks. This survey quantitatively characterizes the topics of the experiments and their subjects ( number of subjects, students versus professionals, recruitment, and rewards for participation), tasks ( type of task, duration, and type and size of application) and environments ( location, development tools). Furthermore, the survey reports on how internal and external validity is addressed and the extent to which experiments are replicated. The gathered data reflects the relevance of software engineering experiments to industrial practice and the scientific maturity of software engineering research.
C1 Simula Res Lab, Dept Software Engn, NO-1325 Lysaker, Norway.
   BNP Paribas, NO-0154 Oslo, Norway.
   Unified Consulting, NO-0251 Oslo, Norway.
C3 BNP Paribas
RP Simula Res Lab, Dept Software Engn, POB 134, NO-1325 Lysaker, Norway.
EM dagsj@simula.no; johannay@simula.no; oveha@simula.no; vigdis@simula.no;
   amela@simula.no; nils@liborg.no; acr@unified.no
CR Abran A., 2004, SWEBOK: Guide to the software engineering Body of Knowledge
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], 0400011T1 NICTA
   [Anonymous], FRAUNHOFER IESE SERI
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Basili VR, 1996, PROC INT CONF SOFTW, P442, DOI 10.1109/ICSE.1996.493439
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   BASILI VR, 1993, P INTL WORKSH, V706, P3
   Campbell, 2002, EXPT QUASIEXPERIMENT
   Campbell D., 1963, Rand McNally
   Christensen L.B., 2001, Experimental Methodology, V8th
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   CURTIS B, 1980, P IEEE, V68, P1144, DOI 10.1109/PROC.1980.11813
   CURTIS B, 1986, P EMP STUD PROGR 1 W, P256
   Deligiannis I. S., 2002, Empirical Software Engineering, V7, P193, DOI 10.1023/A:1016392131540
   FENTON N, 1993, J SYST SOFTWARE, V22, P141, DOI 10.1016/0164-1212(93)90092-C
   FERBER R, 1977, J CONSUM RES, V4, P57, DOI 10.1086/208679
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Glass RL, 2004, COMMUN ACM, V47, P89, DOI 10.1145/990680.990686
   Glass RL, 2003, J SYST SOFTWARE, V68, P77, DOI 10.1016/S0164-1212(03)00232-2
   Greenland S, 1999, STAT SCI, V14, P29
   HAYES W, 2003, P 6 INT S SOFTW METR, P143
   Höst M, 2005, PROC INT CONF SOFTW, P470
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P79, DOI 10.1016/S0164-1212(02)00160-7
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   JORGENSEN M, 2004, EMPIRICAL ASSESSMENT, P29
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Kitchenham B., 2004, ARXIV
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   Lott C. M., 1996, Empirical Software Engineering, V1, P241, DOI 10.1007/BF00127447
   Lucas JW, 2003, SOCIOL THEOR, V21, P236, DOI 10.1111/1467-9558.00187
   Lunsford T.K., 1995, J PROSTHET ORTHOT, V7, P105
   ROMBACH HD, 1993, INT WORKSH DAGST CAS
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Sjoberg DIK, 2003, LECT NOTES COMPUT SC, V2765, P24
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Sobel AEK, 2003, IEEE T SOFTWARE ENG, V29, P572, DOI 10.1109/TSE.2003.1205184
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   Tichy WF, 1998, COMPUTER, V31, P32, DOI 10.1109/2.675631
   TICHY WF, 1995, J SYST SOFTWARE, V28, P9, DOI 10.1016/0164-1212(94)00111-Y
   Trochim W.M., 2001, Research Methods Knowledge Base, V2
   Weber R, 2003, MIS QUART, V27, pIII
   Wohlin C., 1999, EXPT SOFTWARE ENG IN
   Yin R.K., 2011, Qualitative research from start to finish
   YOUNGS EA, 1974, INT J MAN MACH STUD, V6, P361, DOI 10.1016/S0020-7373(74)80027-1
   ZELKOWITZ M, 1998, THEOR PRACT OBJ SYST, V31, P23
   Zelkowitz MV, 1997, INFORM SOFTWARE TECH, V39, P735, DOI 10.1016/S0950-5849(97)00025-6
   Zendler A., 2001, Empirical Software Engineering, V6, P161, DOI 10.1023/A:1011489321999
   Zimney G.H., 1961, Method in experimental psychology
   1995, ACM COMPUTING CLASSI
   2002, IEEE KEYWORD TAXONOM
NR 53
TC 356
Z9 385
U1 0
U2 19
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2005
VL 31
IS 9
BP 733
EP 753
DI 10.1109/TSE.2005.97
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 964CZ
UT WOS:000231857600002
OA Green Published
DA 2024-07-18
ER

PT J
AU Elbaum, S
   Rothermel, G
   Karre, S
   Fisher, M
AF Elbaum, S
   Rothermel, G
   Karre, S
   Fisher, M
TI Leveraging user-session data to support Web application testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software testing; test data generation; Web applications; empirical
   studies
AB Web applications are vital components of the global information infrastructure, and it is important to ensure their dependability. Many techniques and tools for validating Web applications have been created, but few of these have addressed the need to test Web application functionality and none have attempted to leverage data gathered in the operation of Web applications to assist with testing. In this paper, we present several techniques for using user session data gathered as users operate Web applications to help test those applications from a functional standpoint. We report results of an experiment comparing these new techniques to existing white-box techniques for creating test cases for Web applications, assessing both the adequacy of the generated test cases and their ability to detect faults on a point-of-sale Web application. Our results show that user session data can be used to produce test suites more effective overall than those produced by the white-box techniques considered; however, the faults detected by the two classes of techniques differ, suggesting that the techniques are complementary.
C1 Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
C3 University of Nebraska System; University of Nebraska Lincoln
RP Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
EM elbaum@cse.unl.edu; grother@cse.unl.edu; skarre@cse.unl.edu;
   mfisher@cse.unl.edu
CR [Anonymous], 1990, Software testing techniques {
   [Anonymous], 2014, Software engineering: a practitioner's approach
   *AP ORG, 2004, AP HTTP SERV VERS 2
   BENEDIKT M, 2002, P 11 INT WWW C MAY
   Binder R.V., 2000, AW OBJ TECHNOL S
   *BUS INT GROUP SAN, 2004, BIG SF REP GOV WEB A
   *BUS INT GROUP SAN, 2004, BLACK FRID REP WEB A
   Carver R., 1989, Proceedings. TRI-Ada '89, P528, DOI 10.1145/74261.74301
   CHAYS D, 2000, P INT S SOFTW TEST A, P147
   Conallen J., 2000, BUILDING WEB APPL UM
   Di Lucca GA, 2002, PROC IEEE INT CONF S, P310, DOI 10.1109/ICSM.2002.1167787
   Dickinson W, 2001, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2001.919107
   Elbaum S, 2003, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.2003.1201187
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   *EMP, 2004, WEB TEST SOL
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Hieatt E, 2002, IEEE SOFTWARE, V19, P60, DOI 10.1109/52.991333
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Kirda E., 2001, IEEE Multimedia, V8, P58, DOI 10.1109/93.923954
   Koppol P. V., 1996, Proceedings of the 1996 International Symposium on Software Testing and Analysis (ISSTA), P14, DOI 10.1145/229000.226298
   Lee SJ, 2001, DNA SEQUENCE, V12, P209, DOI 10.3109/10425170109080777
   LEE T, 2004, WORLD WID WEB CONS
   Liu CH, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P84, DOI 10.1109/ISSRE.2000.885863
   *MACR INC, 2003, DEV COLDFUSION MX AP
   MANLEY S, 1997, P 1997 US S INT TECH
   NIKORA A, 1998, P 23 ANN SOFTW ENG W
   *PAR, 2004, WEBKING
   *RAT CORP, 2004, RAT TEST ROB
   Ricca F, 2001, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2001.919078
   *SOFTW RES INC, 2004, EVAL
   TAI KC, 1995, P 5 EUR SOFTW ENG C, P154
   TAYLOR RN, 1992, IEEE T SOFTWARE ENG, V18, P206, DOI 10.1109/32.126769
   Tilley S, 2001, PROC INT CONF SOFTW, P514, DOI 10.1109/ICSE.2001.919126
   Weiss S. N., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P106, DOI 10.1109/WST.1988.5362
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   WEYUKER EJ, 1991, IEEE T SOFTWARE ENG, V17, P703, DOI 10.1109/32.83906
   WONG WE, 1995, PROC INT CONF SOFTW, P41, DOI 10.1145/225014.225018
   Yang JT, 2002, J INF SCI ENG, V18, P59
   YANG RD, 1992, INFORM SOFTWARE TECH, V34, P43, DOI 10.1016/0950-5849(92)90093-5
NR 39
TC 113
Z9 145
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2005
VL 31
IS 3
BP 187
EP 202
DI 10.1109/TSE.2005.36
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 917IE
UT WOS:000228453500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Godfrey, MW
   Zou, LJ
AF Godfrey, MW
   Zou, LJ
TI Using origin analysis to detect merging and splitting of source code
   entities
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 10th Working Conference on Reverse Engineering (WCRE 2003)
CY NOV 13-16, 2003
CL VICTORIA, CANADA
SP Reengn Forum, IEEE Comp Soc, Tech Council Sofware Engn, Univ Victoria, Univ Alberta
DE software evolution; origin analysis; restructuring; reverse engineering;
   reengineering
AB Merging and splitting source code entities is a common activity during the lifespan of a software system; as developers rethink the essential structure of a system or plan for a new evolutionary direction, so must they be able to reorganize the design artifacts at various abstraction levels as seems appropriate. However, while the raw effects of such changes may be plainly evident in the new artifacts, the original context of the design changes is often lost. That is, it may be obvious which characters of which files have changed, but it may not be obvious where or why moving, renaming, merging, and/or splitting of design elements has occurred. In this paper, we discuss how we have extended origin analysis [1], [2] to aid in the detection of merging and splitting of files and functions in procedural code; in particular, we show how reasoning about how call relationships have changed can aid a developer in locating where merges and splits have occurred, thereby helping to recover some information about the context of the design change. We also describe a case study of these techniques ( as implemented in the Beagle tool) using the PostgreSQL database system as the subject.
C1 Univ Waterloo, Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Univ Waterloo, Sch Comp Sci, 200 Univ Ave W, Waterloo, ON N2L 3G1, Canada.
EM migod@uwaterloo.ca; lzou@uwaterloo.ca
RI Godfrey, Michael W/A-1068-2008
CR Antoniol G, 2002, INFORM SOFTWARE TECH, V44, P755, DOI 10.1016/S0950-5849(02)00123-4
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Church K., 1993, J AM STAT ASSOC, V2, P153, DOI [DOI 10.1080/10618600.1993, 10.2307/1390697, DOI 10.2307/1390697]
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma Erich., 1994, DESIGN PATTERNS
   Gold N, 2003, PROC IEEE INT CONF S, P431, DOI 10.1109/ICSM.2003.1235453
   Hunt JJ, 2002, PROC IEEE INT CONF S, P511, DOI 10.1109/ICSM.2002.1167812
   Ivkovic I, 2002, PROG COMPREHEN, P178, DOI 10.1109/WPC.2002.1021339
   JOHNSON JH, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P120, DOI 10.1109/ICSM.1994.336783
   KONTOGIANNIS K, 1997, P WORK C REV ENG WCR, P577
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   MALPOHL G, 2000, P INT C AUT SOFTW EN, P183
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   *SCIENTIFICTOOLWOR, 2004, UND C
   Tourwé T, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P91, DOI 10.1109/CSMR.2003.1192416
   Tu Q, 2002, PROG COMPREHEN, P127, DOI 10.1109/WPC.2002.1021334
   VANEMDEN E, 2002, P WORK C REV ENG WCR, P227
   ZOU L, 2003, THESIS U WATERLOO
   Zou LJ, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P146
   [No title captured]
NR 24
TC 125
Z9 185
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2005
VL 31
IS 2
BP 166
EP 181
DI 10.1109/TSE.2005.28
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 899ZR
UT WOS:000227185100006
DA 2024-07-18
ER

PT J
AU Ducasse, S
   Lanza, M
AF Ducasse, S
   Lanza, M
TI The class blueprint: Visually supporting the understanding of classes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE object-oriented programming; software visualization; reverse
   engineering; visual patterns; smalltalk
ID MAINTENANCE
AB Understanding source code is an important task in the maintenance of software systems. Legacy systems are not only limited to procedural languages, but are also written in object-oriented languages. In such a context, understanding classes is a key activity as they are the cornerstone of the object-oriented paradigm and the primary abstraction from which applications are built. Such an understanding is however difficult to obtain because of reasons such as the presence of late binding and inheritance. A first level of class understanding consists of the understanding of its overall structure, the control flow among its methods, and the accesses on its attributes. We propose a novel visualization of classes called class blueprint that is based on a semantically enriched visualization of the internal structure of classes. This visualization allows a software engineer to build a first mental model of a class that he validates via opportunistic code-reading. Furthermore, we have identified visual patterns that represent recurrent situations and as such convey additional information to the viewer. The contributions of this article are the class blueprint, a novel visualization of the internal structure of classes, the identification of visual patterns, and the definition of a vocabulary based on these visual patterns. We have performed several case studies of which one is presented in depth, and validated the usefulness of the approach in a controlled experiment.
C1 Univ Bern, Inst Appl Math & Comp Sci, Software Compos Grp, CH-3012 Bern, Switzerland.
   Univ Lugano, Fac Informat, CH-6900 Lugano, Switzerland.
C3 University of Bern; Universita della Svizzera Italiana
RP Univ Bern, Inst Appl Math & Comp Sci, Software Compos Grp, Neunrueckstr 10, CH-3012 Bern, Switzerland.
EM ducasse@iam.unibe.ch
RI Lanza, Michele/JNQ-9470-2023
OI Lanza, Michele/0000-0003-4391-0197; Ducasse,
   Stephane/0000-0001-6070-6599
CR [Anonymous], 2018, The Visual Display of Quantitative Information
   Basili VR, 1997, J SYST SOFTWARE, V38, P3, DOI 10.1016/S0164-1212(97)00065-4
   Bertin J., 1974, Graphische Semiologie: Diagramme, Netze, Karten
   Casais E, 1997, THEORY PRACTICE OBJE, V3, P233
   Consens M. P., 1993, SIGMOD Record, V22, P511, DOI 10.1145/170036.171537
   CORBI TA, 1989, IBM SYST J, V28, P294, DOI 10.1147/sj.282.0294
   Cross J. H.  II, 1998, Empirical Software Engineering, V3, P131, DOI 10.1023/A:1008085415145
   Davis A., 1995, 201 Principles of Software Development
   Dekel U, 2002, APPL CONCEPT LATTICE
   Demeyer S., 2001, FAMIX 2 1 FAMOOS INF
   Demeyer S., 2002, Object-Oriented Reengineering Patterns
   DUCASSE S, 2000, P 2 INT S CONSTR SOF
   Dunsmore A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P467, DOI 10.1109/ICSE.2000.870437
   EICK SG, 1992, IEEE T SOFTWARE ENG, V18, P957, DOI 10.1109/32.177365
   Hendrix D, 2002, IEEE T SOFTWARE ENG, V28, P463, DOI 10.1109/TSE.2002.1000450
   HIGGINS DA, 1987, DATA STRUCTURED SOFT
   Ingalls Dan., 1997, OOPSLA '97, P318, DOI DOI 10.1145/263698.263754
   Jerding DF, 1997, PROC INT CONF SOFTW, P360, DOI 10.1145/253228.253356
   KAZMAN R, 1999, AUTOMATED SOFTWA APR
   Kleyn M.F., 1988, PROC OOPSLA, P191
   KLIMAS EJ, 1996, SMALLTALK STYLE
   LANGE DB, 1995, P OOPSLA 95, P342
   Lanza M, 2003, IEEE T SOFTWARE ENG, V29, P782, DOI 10.1109/TSE.2003.1232284
   Lanza M, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P409, DOI 10.1109/CSMR.2003.1192450
   LANZA M, 2001, P OOPSLA 2001, P300
   LIEBERHERR KJ, 1989, P ACM C OBJ OR PROGR, V24, P11
   LITTMAN D, 1996, P 1 WORKSH EMP STUD, P80
   Mendelzon A, 1995, SOFTWARE-CONC TOOL, V16, P170
   NASSI I, 1973, SIGPLAN NOTICES, V8
   PAUW WD, 1993, P OOPSLA, P326
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   Price B. A., 1993, Journal of Visual Languages and Computing, V4, P211, DOI 10.1006/jvlc.1993.1015
   REISS SP, 1990, SOFTWARE PRACT EXPER, V20, pS89, DOI 10.1002/spe.4380201308
   Richner T., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P13, DOI 10.1109/ICSM.1999.792487
   Sommerville I., 2000, Software Engineering, V6
   Stasko J.T., 1998, SOFTWARE VISUALIZATI
   STASKO JT, 1990, COMPUTER, V23, P27, DOI [10.1109/2.58216, 10.1145/379088.1046618]
   STOREY MAD, 1995, P 1995 INT C SOFTW M
   TILLEY SR, 1994, INT J SOFTW ENG KNOW, V4, P501, DOI 10.1142/S0218194094000246
   TUFTE ER, 1990, EVISIONING INFORMATI
   VIONDURY JY, 1994, P OOPSLA 94, P65
   vonMayrhauser A, 1996, IEEE T SOFTWARE ENG, V22, P424, DOI 10.1109/32.508315
   WARE C, 2000, INFORMATION VISUALIZ
   WILDE N, 1992, IEEE T SOFTWARE ENG, V18, P1038, DOI 10.1109/TSE.1992.1263033
NR 44
TC 48
Z9 51
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2005
VL 31
IS 1
BP 75
EP 90
DI 10.1109/TSE.2005.14
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 893QP
UT WOS:000226734600005
DA 2024-07-18
ER

PT J
AU Lee, S
AF Lee, S
TI Fast, centralized detection and resolution of distributed deadlocks in
   the generalized model
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE deadlock detection; deadlock resolution; distributed algorithms;
   distributed systems; wait-for graph
ID ALGORITHM
AB In the literature, only a few studies have been performed on the distributed deadlock detection and resolution problem in the generalized request model. Most of the studies are based on the diffusing computation technique where propagation of probes and backward propagation of replies are required to detect deadlock. The replies carry the dependency information between processes for the initiator of the algorithm to determine deadlock. Since fast detection of deadlock is critical, we take a centralized approach that removes the need of backward propagation of replies, but sends the dependency information directly to the initiator of the algorithm. This enables reduction of time cost for deadlock detection to half of that of the existing distributed algorithms. The algorithm is extended to handle concurrent executions in order to further improve deadlock detection time, whereas the current algorithms focus only on a single execution. Simulation experiments are performed to see the effectiveness of this centralized approach as compared to previous distributed algorithms. It is found that our algorithm shows better results in several performance metrics especially in deadlock latency and algorithm execution time.
C1 Gyeongin Natl Univ Educ, Dept Comp Educ, Inchon 407753, South Korea.
RP Lee, S (corresponding author), Gyeongin Natl Univ Educ, Dept Comp Educ, San 59-12, Inchon 407753, South Korea.
EM sjlee@gin.ac.kr
CR [Anonymous], ACM COMPUT SURVEYS
   Boukerche A, 1998, IEEE T PARALL DISTR, V9, P748, DOI 10.1109/71.706047
   BRACHA G, 1987, DISTRIB COMPUT, V2, P127, DOI 10.1007/BF01782773
   Brzezinski J, 1995, J PARALLEL DISTR COM, V31, P112, DOI 10.1006/jpdc.1995.1150
   CHANDY KM, 1985, ACM T COMPUT SYST, V3, P63, DOI 10.1145/214451.214456
   CHEN S, 1995, DEADLOCK DETECTION R
   Chen SG, 1996, INT CON DISTR COMP S, P613, DOI 10.1109/ICDCS.1996.508012
   de Mendívil JRG, 1999, IEEE T PARALL DISTR, V10, P433, DOI 10.1109/71.770131
   DIJKSTRA EW, 1980, INFORM PROCESS LETT, V11, P1, DOI 10.1016/0020-0190(80)90021-6
   HERMAN T, 1983, TRLCS8301 U TEX
   Kim YM, 1997, 1997 INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED SYSTEMS, PROCEEDINGS, P584, DOI 10.1109/ICPADS.1997.652603
   KSHEMKALYANI AD, 1994, IEEE T SOFTWARE ENG, V20, P43, DOI 10.1109/32.263754
   Kshemkalyani AD, 1999, IEEE T KNOWL DATA EN, V11, P880, DOI 10.1109/69.824601
   Lee S, 2001, IEEE T KNOWL DATA EN, V13, P623, DOI 10.1109/69.940736
   LEE S, 2001, P INT PAR DISTR PROC
   Manivannan D, 2002, PROC INT CONF PARAL, P485, DOI 10.1109/ICPP.2002.1040905
   Ng W. K., 1994, Proceedings of the Twenty-Seventh Hawaii International Conference on System Sciences. Vol.II: Software Technology (Cat. No.94TH0607-2), P524, DOI 10.1109/HICSS.1994.323231
   RONTOGIANNIS P, 1991, INFORM SOFTWARE TECH, V33, P483, DOI 10.1016/0950-5849(91)90092-P
   SINGHAL M, 1989, COMPUTER, V22, P37, DOI 10.1109/2.43525
   Villadangos J, 2003, IEEE T SOFTWARE ENG, V29, P608, DOI 10.1109/TSE.2003.1214325
   Wang J., 1990, A distributed algorithm for detecting generalized deadlocks
NR 21
TC 25
Z9 29
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2004
VL 30
IS 9
BP 561
EP 573
DI 10.1109/TSE.2004.51
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 845HM
UT WOS:000223233000001
DA 2024-07-18
ER

PT J
AU Mori, G
   Paternò, F
   Santoro, C
AF Mori, G
   Paternò, F
   Santoro, C
TI Design and development of multidevice user interfaces through multiple
   logical descriptions
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE design tools and techniques; user interfaces; heterogeneous clients;
   multiplatform user interfaces; authoring environments; abstract user
   interfaces; user interface design; task models
ID MODELS
AB The increasing availability of new types of interaction platforms raises a number of issues for designers and developers. There is a need for new methods and tools to support development of nomadic applications, which can be accessed through a variety of devices. This paper presents a solution, based on the use of three levels of abstractions, that allows designers to focus on the relevant logical aspects and avoid dealing with a plethora of low-level details. We have defined a number of transformations able to obtain user interfaces from such abstractions, taking into account the available platforms and their interaction modalities while preserving usability. The transformations are supported by an authoring tool, TERESA, which provides designers and developers with various levels of automatic support and several possibilities for tailoring such transformations to their needs.
C1 CNR, Inst Sci & Informat Technol, I-56124 Pisa, Italy.
C3 Consiglio Nazionale delle Ricerche (CNR)
RP CNR, Inst Sci & Informat Technol, Via G Moruzzi 1, I-56124 Pisa, Italy.
EM giulio.mori@isti.cnr.it; fabio.paterno@isti.cnr.it;
   carmen.santoro@isti.cnr.it
RI Santoro, Carmen/C-7477-2015; Paterno, Fabio/H-6443-2017
OI Paterno, Fabio/0000-0001-8355-6909; Santoro, Carmen/0000-0002-0556-7538
CR ABRAMS M, 1999, P 8 WWW C
   ALI F, 2003, MULTIPLE USER INTERF, P952
   [Anonymous], P ACM INT C INT US I
   Bandelloni Renata, 2004, P 9 INT C INT C INT, P148, DOI [10.1145/964442.964470, DOI 10.1145/964442.964470]
   BERTI S, 2003, P DES SPEC VER INT S, P231
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Bouillon L, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P339, DOI 10.1109/WCRE.2002.1173091
   Calvary G, 2001, LECT NOTES COMPUT SC, V2254, P173
   CHESTA C, 2003, D34 CAMELEON
   De Sousa J., 2002, P IEEE IFIP C SOFTW
   EINSENSTEIN J, 2001, P INT US INT 01, P69
   MENKHAUS G, 2003, P 7 WORLD MULT SYST
   Mori G, 2002, IEEE T SOFTWARE ENG, V28, P797, DOI 10.1109/TSE.2002.1027801
   MORI G, 2003, P C INT US INT IUI 0
   Mullet K., 1995, DESIGNING VISUAL INT
   Myers B., 2000, ACM Transactions on Computer-Human Interaction, V7, P3, DOI 10.1145/344949.344959
   Nichols Jeffrey., 2002, UIST 02, P161, DOI [10.1145/571985.572008, DOI 10.1145/571985.572008]
   OLSEN DR, 2001, P 14 ANN ACM S US IN, P131
   Paganelli L, 2003, INT J SOFTW ENG KNOW, V13, P169, DOI 10.1142/S0218194003001275
   Patemo Fabio., 2002, Proceedings of CAD U I2002, the 4th International Conference on Computer-Aided Design of User Interfaces, P143, DOI DOI 10.1007/978-94-010-0421-313
   Patern'o F., 1999, Model-based design and evaluation of interactive applications
   Paterno Fabio., 1994, COMPUT GRAPH FORUM, V13, P195
   Ponnekanti Shankar., 2001, P 3 INT C UBIQUITOUS, P56
   Puerta A., 2002, IUI 02. 2002 International Conference on Intelligent User Interfaces, P214
   Rich C, 1998, USER MODEL USER-ADAP, V8, P315, DOI 10.1023/A:1008204020038
   SZEKELY P, 1995, ENG HUMAN COMPUTER I, P120
   2003, XFORMS NEXT GENERATI
NR 27
TC 156
Z9 188
U1 0
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2004
VL 30
IS 8
BP 507
EP 520
DI 10.1109/TSE.2004.40
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 837CL
UT WOS:000222605000002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Glässer, U
   Gurevich, Y
   Veanes, M
AF Glässer, U
   Gurevich, Y
   Veanes, M
TI Abstract communication model for distributed systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE abstract state machines; communication protocols; computer networks;
   distributed systems; requirement specification; system modeling; testing
   of distributed systems
ID SEMANTICS; LANGUAGES
AB In some distributed and mobile communication models, a message disappears in one place and miraculously appears in another. In reality, of course, there are no miracles. A message goes from one network to another; it can be lost or corrupted in the process. Here, we present a realistic but high-level communication model where abstract communicators represent various nets and subnets. The model was originally developed in the process of specifying a particular network architecture, namely, the Universal Plug and Play architecture. But, it is general. Our contention is that every message-based distributed system, properly abstracted, gives rise to a specialization of our abstract communication model. The purpose of the abstract communication model is not to design a new kind of network; rather, it is to discover the common part of all message-based communication networks. The generality of the model has been confirmed by its successful reuse for very different distributed architectures. The model is based on distributed abstract state machines. It is implemented in the specification language AsmL and is used for testing distributed systems.
C1 Simon Fraser Univ, Fac Sci Appl, Sch Comp Sci, Burnaby, BC V5A 1S6, Canada.
   Microsoft Corp, Res, Redmond, WA 98052 USA.
C3 Simon Fraser University; Microsoft
RP Simon Fraser Univ, Fac Sci Appl, Sch Comp Sci, Burnaby, BC V5A 1S6, Canada.
EM glaesser@cs.sfu.ca; gurevich@microsoft.com; margus@microsoft.com
CR Andreoli J-M., 1996, Coordination programming: Mechanisms, models and semantics
   ARBAB F, 2002, P COORD 2002 C APR
   Barnett M, 2003, J SYST SOFTWARE, V65, P199, DOI 10.1016/S0164-1212(02)00041-9
   BARNETT M, 2001, MSRTR200156
   BARNETT M, 2004, P FORM APPR SOFTW TE
   BARNETT M, 2001, FORMAL METHODS TOOLS, P266
   BARNETT M, 2003, P INT C SOFTW ENG IC
   Bella G., 1997, J UCS, V3, P1337
   Blass A., 2003, ACM Transactions on Computational Logic, V4, P578, DOI 10.1145/937555.937561
   Borger E., 2003, ABSTRACT STATE MACHI
   BOX D, 2003, MSDN MAGAZINE
   Clements P.C., 1996, P 8 INT WORKSH SOFTW
   Comer Douglas E., 2000, INTERNETWORKING TCP
   FARAHBOD R, 2003, SFUCMPTTR200306
   FARAHBOD R, 2004, P ASM C 2004
   GELERNTER D, 1992, COMMUN ACM, V35, P96, DOI 10.1145/129630.129635
   Glässer U, 2003, COMPUT NETW, V42, P343, DOI 10.1016/S1389-1286(03)00247-0
   GLASSER U, 2001, MSRTR200159
   GLASSER U, 2002, P 35 HAW INT C SYST
   GLASSER U, 2002, P IFIP WORLD COMP C
   GRIESKAMP W, 2002, P INT S SOFTWARE TES, V27, P112
   Gurevich Y, 2001, J UNIVERS COMPUT SCI, V7, P917
   Gurevich Y., 2000, ACM T COMPUT LOG, V1, P77, DOI DOI 10.1145/343369.343384
   GUREVICH Y, IN PRESS PARTIAL UPD
   GUREVICH Y, 2003, P 2 INT S FORM METH
   GUREVICH Y, 2004, MSRTR200427
   Gurevich Yuri., 1995, Speci fication and Validation Methods
   Heering J, 2000, ACM SIGPLAN NOTICES, V35, P39, DOI 10.1145/351159.351173
   HEERING J, 2000, P SSGRR 2000 INT C A
   HUGGINS JK, 1995, SPECIFICATION VALIDA, P247
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   *MICR RES, 2002, XLANG ABSTR MACH FDN
   PRINZ A, 2003, P SPEC DESCR LANG SD
   SUNBUL A, 2001, THESIS TU BERLIN
   SUNBUL A, 1999, P 3 INT C PERSP SYST
   *UPNP FOR, 2003, UPNP FOR
   *VINT, 2003, COLL USC ISI XER PAR
   *WSDL, 2001, W3C WSDL
   2003, ASML MICROSOFT NET
   2003, NS 2 REFERENCE MANUA
   2003, ABSTRACT STATE MACHI
   2003, XLANG WEB SERVICES B
   2000, MICROSOFT UNIVER JAN
NR 43
TC 28
Z9 30
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2004
VL 30
IS 7
BP 458
EP 472
DI 10.1109/TSE.2004.25
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 826DE
UT WOS:000221808600004
DA 2024-07-18
ER

PT J
AU Kirkegaard, C
   Moller, A
   Schwartzbach, MI
AF Kirkegaard, C
   Moller, A
   Schwartzbach, MI
TI Static analysis of XML transformations in java
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE language constructs and features; markup languages;
   requirements/specifications
AB XML documents generated dynamically by programs are typically represented as text strings or DOM trees. This is a low-level approach for several reasons: 1) Traversing and modifying such structures can be tedious and error prone, 2) although schema languages, e.g., DTD, allow classes of XML documents to be defined, there are generally no automatic mechanisms for statically checking that a program transforms from one class to another as intended. We introduce XACT, a high-level approach for Java using XML templates as a first-class data type with operations for manipulating XML values based on XPath. In addition to an efficient runtime representation, the data type permits static type checking using DTD schemas as types. By specifying schemas for the input and output of a program, our analysis algorithm will statically verify that valid input data is always transformed into valid output data and that the operations are used consistently.
C1 Univ Aarhus, Dept Comp Sci, BRICS, DK-8200 Aarhus N, Denmark.
C3 Aarhus University
RP Univ Aarhus, Dept Comp Sci, BRICS, IT Parken,Aabogade 34, DK-8200 Aarhus N, Denmark.
EM ck@brics.dk; amoeller@brics.dk; mis@brics.dk
RI Möller, Andrea/GNP-5183-2022
OI Möller, Andrea/0000-0002-2345-1299; Moller, Anders/0000-0003-1333-2314
CR [Anonymous], 2002, XQUERY 1 0 XML QUERY
   [Anonymous], 2001, XML SCHEMA 1
   [Anonymous], 2000, EXTENSIBLE MARKUP LA
   Apparao V., 1998, DOCUMENT OBJECT MODE
   BENZKAEN V, 2002, P PROGR LANG TECHN X
   BERLEA A, 2002, COMPUTING INFORMATIO, V10, P19
   Bloch J., 2001, EFFECTIVE JAVA PROGR
   BOAG S, 2003, TRANSFORMATION API X
   BOURRET R, 2003, XML DATA BINDING RES
   BRABRAND C, 2003, P 3 ACM SIGPLAN WORK
   BROWNELL D, 2002, SAX2
   CHAMBERLIN D, 2002, XML QUERY USE CASES
   Christensen AS, 2003, ACM T PROGR LANG SYS, V25, P814, DOI 10.1145/945885.945890
   CHRISTENSEN AS, 2003, P 10 INT STAT AN S S
   CHRISTENSEN AS, 2002, RS0224 BRICS
   CHRISTENSEN AS, 2002, U AARHUS NOTES SERIE
   Clark R., 1999, Manual of remote sensing, V3, P3, DOI DOI 10.1111/J.1945-5100.2004.TB00079.X
   CONNOR R, 2002, PROGRAMMING LANGUAGE
   DRAPER D, 2002, XQUERY 1 0 XPATH 2 0
   FITZGERALD M, 2003, RELAXER TUTORIAL
   GAPAYEV V, 2003, P 17 EUR C OBJ OR PR
   HOSOYA H, 2003, ACM T INTERNET TECHN, V3
   HUNTER J, 2001, JDOM
   KAM JB, 1977, ACTA INFORM, V7, P305, DOI 10.1007/BF00290339
   KAY M, 2003, XSL TRANSFORMATIONS
   KEMPA M, 2003, P DAT BUS TECHN WEB
   KIRKEGAARD C, 2003, RS0329 BRICS
   KISELYOV O, 2003, P 5 INT S PRACT ASP
   LUDWIG A, 2002, RECODER
   MARTENS W, 2003, P 9 INT C DAT THEOR
   MEIJER E, 2003, P DECL PROGR CONT OO
   MEIJER E, 1999, XML FUNCTIONAL LANGU
   MILO T, 2002, J COMPUTER SYSTEM SC, V66
   MOLLER A, 2001, U AARHUS NOTES SERIE
   MOLLER A, 2002, U AARHUS NOTES SERIE
   MUENCH S, 2001, XSLT REQUIREMENTS VE
   Nielson F., 1999, Principles of Program Analysis
   PAPAKONSTANTINO.Y, 2000, P 19 ACM SIGACT SIGM
   Pemberton S., 2000, XHTML 1 0 EXTENSIBLE
   PERST T, 2002, P EXTR MARK LANG AUG
   Simeoni F, 2002, INFORM SOFTWARE TECH, V44, P217, DOI 10.1016/S0950-5849(02)00011-3
   SUCIU D, 2002, ACM SIGMOD RECORD, V31
   *SUN MICR, 2001, JAV API XML PROC
   Sun Microsystems, 2001, JAV SERVL SPEC VERS
   SUNDARESAN V, 2000, P ACM SIGPLAN C OBJ
   THIEMANN P, 2002, P 4 INT S PRACT ASP
   TOZAWA A, 2001, P ACM S DOC ENG DOC
   Vallee-Rai R., 1999, P IBM CTR ADV STUD C
   VIONDURY JY, 2002, P ACM S DOC ENG DOCE
   WALLACE M, 1999, P 5 ACM SIGPLAN INT
NR 50
TC 27
Z9 32
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2004
VL 30
IS 3
BP 181
EP 192
DI 10.1109/TSE.2004.1271173
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 803BN
UT WOS:000220206700004
OA Green Published
DA 2024-07-18
ER

PT J
AU Bucci, G
   Fedeli, A
   Sassoli, L
   Vicario, E
AF Bucci, G
   Fedeli, A
   Sassoli, L
   Vicario, E
TI Timed state space analysis of real-time preemptive systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE hard real-time systems; reactive systems; preemptive scheduling;
   interprocess communication; nondeterministic time parameters;
   multiprocessor schedulability; timeliness predictability; state space
   analysis; Preemptive Time Petri Nets
AB A modeling notation is introduced which extends Time Petri Nets with an additional mechanism of resource assignment making the progress of timed transitions be dependent on the availability of a set of preemptable resources. The resulting notation, which we call Preemptive Time Petri Nets, permits natural description of complex real-time systems running under preemptive scheduling, with periodic, sporadic, and one-shot processes, with nondeterministic execution times, with semaphore synchronizations and precedence relations deriving from internal task sequentialization and from interprocess communication, running on multiple processors. A state space analysis technique is presented which supports the validation of Preemptive Time Petri Net models, combining tight schedulability analysis with exhaustive verification of the correctness of logical sequencing. The analysis technique partitions the state space in equivalence classes in which timing constraints are represented in the form of Difference Bounds Matrixes. This permits it to maintain a polynomial complexity in the representation and derivation of state classes, but it does not tightly encompass the constraints deriving from preemptive behavior, thus producing an enlarged representation of the state space. False behaviors deriving from the approximation can be cleaned-up through an algorithm which provides a necessary and sufficient condition for the feasibility of a behavior along with a tight estimation of its timing profile.
C1 Univ Florence, Dipartimento Sistemi & Informat, I-50139 Florence, Italy.
C3 University of Florence
RP Univ Florence, Dipartimento Sistemi & Informat, Via S Marta 3, I-50139 Florence, Italy.
EM bucci@dsi.unifi.it; jedeli@dsi.unifi.it; sassoli@dsi.unifi.it;
   vicario@dsi.unifi.it
RI vicario, enrico/ABG-4344-2020
OI vicario, enrico/0000-0002-4983-4386
CR Altisen K, 2002, REAL-TIME SYST, V23, P55, DOI 10.1023/A:1015346419267
   Alur R, 1996, IEEE T SOFTWARE ENG, V22, P181, DOI 10.1109/32.489079
   ALUR R, 1990, P 17 INT C AUT LANG
   AMNELL T, 2002, LECT NOTES COMPUTER, V2280
   Andersson J., 2002, PARALLEL DISTRIBUTED, P12
   [Anonymous], 1993, NETWORK FLOWS THEORY
   [Anonymous], IEEE T SOFTWARE ENG
   [Anonymous], 2000, Proceedings of the 11th International Conference on Concurrency Theory, CONCUR 00
   AVRUNIN GS, 1994, IEEE T SOFTWARE ENG, V20, P708, DOI 10.1109/32.317429
   Ben-Abdallah H, 1998, REAL-TIME SYST, V15, P189, DOI 10.1023/A:1008047130023
   BENGTSSON J, 1996, HYBRID SYSTEMS, V3
   BERTHOMIEU B, 1983, P IFIP C SEPT
   BERTHOMIEU B, 1991, IEEE T SOFTWAR ENG, V17
   Bobbio A, 2000, IEEE T SOFTWARE ENG, V26, P36, DOI 10.1109/32.825765
   BUCCI G, 1995, IEEE T SOFTWARE ENG, V21, P969, DOI 10.1109/32.489073
   Corbett JC, 1996, IEEE T SOFTWARE ENG, V22, P461, DOI 10.1109/32.538604
   DAWS C, 1996, HYBRID SYSTEMS, V3
   DILL D, 1989, P CAV METH FIN STAT
   FERSMAN E, 2002, LECT NOTES COMPUTER, V2280
   FRICKS RM, 1998, PERFORMANCE EVALUATI, V26
   HARBOUR MG, 1994, IEEE T SOFTWARE ENG, V20, P13, DOI 10.1109/32.263752
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   MCMANIS J, 1994, P COMP AID VER 6 INT
   MERLIN PM, 1976, IEEE T COMM, V24
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   NICOLLIN X, 1992, IEEE T SOFTWARE ENG, V18, P794, DOI 10.1109/32.159837
   Peterson J.L., 1977, ACM COMPUTING SURVEY, V9
   RAMAMRITHAM K, 1994, P IEEE, V82, P55, DOI 10.1109/5.259426
   SHA L, 1994, P IEEE, V82, P68, DOI 10.1109/5.259427
   SHA L, 1990, IEEE T COMPUTERS, V39
   Sun J, 1997, IEEE T SOFTWARE ENG, V23, P603, DOI 10.1109/32.637144
   VICARIO E, 2001, IEEE T SOFTWARE ENG
   ZUBEREK WM, 1987, P IEEE INFOCOM C COM, P721
   ZUBEREK WM, 1986, ADV PETRI NETS 1985
NR 34
TC 65
Z9 68
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2004
VL 30
IS 2
BP 97
EP 111
DI 10.1109/TSE.2004.1265815
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 775AR
UT WOS:000189019000002
DA 2024-07-18
ER

PT J
AU Mens, T
   Tourwé, T
AF Mens, T
   Tourwé, T
TI A survey of software refactoring
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE coding tools and techniques; programming environments/construction
   tools; restructuring; reverse engineering; and reengineering
ID PROGRAM; TRANSFORMATION; INCONSISTENCY; FRAMEWORK; EVOLUTION; RULES
AB This paper provides an extensive overview of existing research in the field of software refactoring. This research is compared and discussed based on a number of different criteria: the refactoring activities that are supported, the specific techniques and formalisms that are used for supporting these activities, the types of software artifacts that are being refactored, the important issues that need to be taken into account when building refactoring tool support, and the effect of refactoring on the software process. A running example is used throughout the paper to explain and illustrate the main concepts.
C1 Univ Mons, B-7000 Mons, Belgium.
   Ctr Wiskunde & Informat, NL-1090 GB Amsterdam, Netherlands.
C3 University of Mons
RP Univ Mons, Ave Champ Mars 6, B-7000 Mons, Belgium.
EM tom.mens@umh.ac.be; tom.tourwe@cwi.nl
RI Mens, Tom/B-6518-2013
OI Mens, Tom/0000-0003-3636-5020
CR Alur Deepak., 2001, CORE J2EE PATTERNS
   Arnold R.S., 1986, Tutorial on Software Restructuring
   ASTELS D, 2002, P INT C EXTR PROGR F, P67
   ATKINSON C, 2002, P UML 2002 WORKSH SO, P67
   BACK RJ, 1980, CTR TRACTS MATH CENT, V131
   Balazinska M, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P98, DOI 10.1109/WCRE.2000.891457
   Baldan Paolo, 1999, HDB GRAPH GRAMMARS C, P107, DOI [10.1142/9789812814951 0003, DOI 10.1142/97898128149510003]
   BANERJEE J, 1987, P SIGMOD C
   Beck K., 2000, EXTREME PROGRAMMING
   BERGER RL, 1991, PHYS FLUIDS B-PLASMA, V3, P3, DOI 10.1063/1.859954
   BERGSTEIN PL, 1991, SIGPLAN NOTICES, V26, P299, DOI 10.1145/118014.117977
   BODIN F, 1994, P C OBJ OR NUM
   Boger M., 2002, P INT C EXTR PROGR F, P77
   BORBA P, 2002, P OOPSLA 2002 WORKSH
   BOTTONI P, 2002, ELECT NOTES THEORETI, V72
   CALLISS FW, 1988, SIGPLAN NOTICES, V23, P13, DOI 10.1145/43895.43897
   Casais E., 1994, Object Oriented Systems, V1, P95
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   Cinneide M. O., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P463, DOI 10.1109/ICSM.1999.792644
   COLEMAN D, 1994, COMPUTER, V27, P44, DOI 10.1109/2.303623
   Coleman Derek., 1994, OBJECT ORIENTED DEV
   Demeyer S, 2000, ACM SIGPLAN NOTICES, V35, P166, DOI 10.1145/354222.353183
   Demeyer S., 2002, Maintainability versus Performance: What's the Effect of Introducing Polymorphism?
   Demeyer S., 2002, Object-Oriented Reengineering Patterns
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Dudziak T., 2002, THESIS TU BERLIN
   Everaars CTH, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P13, DOI 10.1109/ICSM.1996.564984
   Fanta R., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P77, DOI 10.1109/ICSM.1999.792576
   Fanta R, 1998, PROC IEEE INT CONF S, P238, DOI 10.1109/ICSM.1998.738515
   FARRELL J, 2001, JAVAWORLD        MAR
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma Erich., 1994, DESIGN PATTERNS
   Ganter B, 1999, Formal concept analysis: Mathematical foundations
   Garrido Alejandra, 2002, P INT WORKSH PRINC S
   GENSSLER T, 1998, P TOOLS C
   GLASS RL, 1998, IEEE SOFTWARE    JUL
   Griswold W. G., 1993, ACM Transactions on Software Engineering and Methodology, V2, P228, DOI 10.1145/152388.152389
   GRISWOLD WG, 1996, P SIGSOFT S FDN SOFT
   Grundy J, 1998, IEEE T SOFTWARE ENG, V24, P960, DOI 10.1109/32.730545
   GUIMARAES T, 1983, COMMUN ACM, V26, P739, DOI 10.1145/358413.358421
   Gupta D, 1996, IEEE T SOFTWARE ENG, V22, P120, DOI 10.1109/32.485222
   Habel A., 1996, Fundamenta Informaticae, V26, P287
   HARMER TJ, 1936, P C KNOWL BAS SOFTW, P114
   HECKEL R, 1995, THESIS TU BERLIN
   HECKEL R, 2002, GRAPH TRANSFORMATION
   HURSCH WL, 1996, P INT S OBJ TECHN AD, P2
   HWANG SH, 1995, P AS PAC C SOFTW ENG, P117
   Jahnke J. H., 1997, P ESEC FSE 97 WORKSH
   JONES ND, 1984, P 1984 INT S LOG PRO, P289
   Kataoka Y, 2002, PROC IEEE INT CONF S, P576, DOI 10.1109/ICSM.2002.1167822
   Kataoka Y, 2001, PROC IEEE INT CONF S, P736, DOI 10.1109/ICSM.2001.972794
   KAWAMURA T, 1988, P INT C FGCS TOKYO, P413
   KOMONDOOR R, 2000, SEMANTICS PRESERVING
   Lakhotia A, 1998, INFORM SOFTWARE TECH, V40, P677, DOI 10.1016/S0950-5849(98)00091-3
   LAMMEL R, 2002, P SIGPLAN WORKSH RUL
   LAMMEL R, 1999, FUNCTIONAL PROGRAMMI
   Lanubile F, 1997, IEEE T SOFTWARE ENG, V23, P246, DOI 10.1109/32.588543
   Lanza Michele., 2002, P LMO 2002 LANGUAGES, P135
   Larsen L, 1996, PROC INT CONF SOFTW, P495, DOI 10.1109/ICSE.1996.493444
   Leitao AM, 2002, SIXTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P186, DOI 10.1109/CSMR.2002.995803
   Li H., 2003, Proceedings of the 2003 ACM SIGPLAN workshop on Haskell, ACM, P27
   Lientz B P., 1980, Software Maintenance Management
   Mens T, 2001, PROC IEEE INT CONF S, P570, DOI 10.1109/ICSM.2001.972774
   MENS T, 2002, GRAPH TRANSFORMATION
   MENS T, 1999, THESIS VRIJE U BRUSS
   MILLER JC, 1987, SIGPLAN NOTICES, V22, P76, DOI 10.1145/24900.24908
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   MOORE I, 1996, P 11 ANN C OBJ OR PR, P235
   Mortimer RE, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P301
   MUNOZ F, 2003, THESIS VRIJE U BRUSS
   Najjar R, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P111, DOI 10.1109/CSMR.2003.1192418
   Nuseibeh B, 2000, COMPUTER, V33, P24, DOI 10.1109/2.839317
   OCINNEIDA M, 2000, COMPOSITE REFACTORIN
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   OPDYKE WF, 1999, REFRACTORING C PROGR
   Pettorossi A, 1996, ACM COMPUT SURV, V28, P360, DOI 10.1145/234528.234529
   PHILIPPS J, 1997, P INT C FORM ENG MET
   PHILIPPS J, 2001, P 10 00PSLA WORKSH B
   PIPKA JU, 2002, P 3 INT C EXTR PROGR
   POWER A, 1990, P 7 INT C LOG PROGR, P390
   PROIETTI M, 1991, SIGPLAN NOTICES, V26, P274, DOI 10.1145/115866.115895
   Rajlich V, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P84, DOI 10.1109/ICSM.1997.624234
   Roberts D., 1997, Theory and Practice of Object Systems, V3, P253, DOI 10.1002/(SICI)1096-9942(1997)3:4<253::AID-TAPO3>3.0.CO;2-T
   Roberts D., 1999, Ph. D. Dissertation
   Russo A, 1998, THIRD INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING - PROCEEDINGS, P51, DOI 10.1109/ICRE.1998.667808
   Sands D, 1996, ACM T PROGR LANG SYS, V18, P175, DOI 10.1145/227699.227716
   SCHRLIS W, 1998, P EUR S PROGR
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   SNELTING G, 1998, P ACM SIGSOFT S FDN, P99, DOI DOI 10.1145/288195.288273
   SPANOUDAKIS G, 2001, HDB SOFTWARE ENG KNO, V1, P24
   SUNYE G, 2001, P UN MOD LANG C 2001
   Tahvildari L, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P183, DOI 10.1109/CSMR.2003.1192426
   Tahvildari L, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P77, DOI 10.1109/WCRE.2002.1173066
   Tamaki H., 1984, P 2 INT LOG PROGR C, P127
   Tichelaar S, 2000, INTERNATIONAL SYMPOSIUM ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P154, DOI 10.1109/ISPSE.2000.913233
   Tip F, 2003, ACM SIGPLAN NOTICES, V38, P13, DOI 10.1145/949343.949308
   Tokuda L., 2001, Automated Software Engineering, V8, P89, DOI 10.1023/A:1008715808855
   TOKUDA L, 1995, P INT S APPL CORP CO
   Tonella P, 2001, IEEE T SOFTWARE ENG, V27, P351, DOI 10.1109/32.917524
   Tourwé T, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P91, DOI 10.1109/CSMR.2003.1192416
   TOURWE T, 1999, P INT C COMP CONSTR
   van Deursen A., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P246, DOI 10.1109/ICSE.1999.841014
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   VANDERSTRAETEN R, 2003, P U MOD LANG C
   VANDEURSEN A, 2002, P INT C EXTREME PROG, P71
   VANEETVELDE N, 2003, P UNIGRA 03 WORKSH
   VANGORP P, 2003, P UN MOD LANG C
   Vittek M, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P101, DOI 10.1109/CSMR.2003.1192417
   WARD MP, 1995, INT J SOFTW ENG KNOW, V5, P25, DOI 10.1142/S0218194095000034
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   WIRTH N, 1971, COMMUN ACM, V14, P221, DOI 10.1145/362575.362577
NR 111
TC 625
Z9 716
U1 3
U2 43
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2004
VL 30
IS 2
BP 126
EP 139
DI 10.1109/TSE.2004.1265817
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 775AR
UT WOS:000189019000004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sun, WF
   Yan, M
   Liu, ZX
   Lo, DV
AF Sun, Weifeng
   Yan, Meng
   Liu, Zhongxin
   Lo, David
TI Robust Test Selection for Deep Neural Networks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Deep learning testing; deep neural networks; test selection
ID SOFTWARE; PREDICTION; MODELS; NOISY
AB Deep Neural Networks (DNNs) have been widely used in various domains, such as computer vision and software engineering. Although many DNNs have been deployed to assist various tasks in the real world, similar to traditional software, they also suffer from defects that may lead to severe outcomes. DNN testing is one of the most widely used methods to ensure the quality of DNNs. Such method needs rich test inputs with oracle information (expected output) to reveal the incorrect behaviors of a DNN model. However, manually labeling all the collected test inputs is a labor-intensive task, which delays the quality assurance process. Test selection tackles this problem by carefully selecting a small, more suspicious set of test inputs to label, enabling the failure detection of a DNN model with reduced effort. Researchers have proposed different test selection methods, including neuron-coverage-based and uncertainty-based methods, where the uncertainty-based method is arguably the most popular technique. Unfortunately, existing uncertainty-based selection methods meet the performance bottleneck due to one or several limitations: 1) they ignore noisy data in real scenarios; 2) they wrongly exclude many failure-revealing test inputs but rather include many successful test inputs (referring to those test inputs that are correctly predicted by the model); 3) they ignore the diversity of the selected test set. In this paper, we propose RTS, a Robust Test Selection method for deep neural networks to overcome the limitations mentioned above. First, RTS divides all unlabeled candidate test inputs into noise set, successful set, and suspicious set and assigns different selection prioritization to divided sets, which effectively alleviates the impact of noise and improves the ability to identify suspect test inputs. Subsequently, RTS leverages a probability-tier-matrix-based test metric for prioritizing the test inputs in each divided set (i.e., suspicious, successful, and noise set). As a result, RTS can select more suspicious test inputs within a limited selection size. We evaluate RTS by comparing it with 14 baseline methods under 5 widely-used DNN models and 6 widely-used datasets. The experimental results demonstrate that RTS can significantly outperform all test selection methods in failure detection capability and the test suites selected by RTS have the best model optimization capability. For example, when selecting 2.5% test input, RTS achieves an improvement of 9.37%-176.75% over baseline methods in terms of failure detection.
C1 [Sun, Weifeng; Yan, Meng] Chongqing Univ, Sch Big Data & Software Engn, Chongqing 400044, Peoples R China.
   [Liu, Zhongxin] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310027, Zhejiang, Peoples R China.
   [Liu, Zhongxin] Zhejiang Univ, Ningbo Res Inst, Hangzhou 310027, Zhejiang, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
C3 Chongqing University; Zhejiang University; Zhejiang University;
   Singapore Management University
RP Yan, M (corresponding author), Chongqing Univ, Sch Big Data & Software Engn, Chongqing 400044, Peoples R China.
EM weifeng.sun@cqu.edu.cn; mengy@cqu.edu.cn; liu_zx@zju.edu.cn;
   davidlo@smu.edu.sg
RI ; Lo, David/A-2493-2012
OI Liu, Zhongxin/0000-0002-1981-1626; Yan, Meng/0000-0002-9538-9121; Lo,
   David/0000-0002-4367-7201; Sun, Weifeng/0000-0001-6013-1369
FU National Key Research and Development Project
FX No Statement Available
CR Aggarwal A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P625, DOI 10.1145/3338906.3338937
   Agrawal H., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P348, DOI 10.1109/ICSM.1993.366927
   Alshahwan N., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P181
   Alshahwan N, 2012, PROC INT CONF SOFTW, P1345, DOI 10.1109/ICSE.2012.6227083
   Anaya J, 2017, Arxiv, DOI arXiv:1409.8230
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Bates S., 1993, Conference Record of the Twentieth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P384, DOI 10.1145/158511.158694
   Benedusi P., 1988, Proceedings of the Conference on Software Maintenance - 1988 (IEEE Cat. No.88CH2615-3), P352, DOI 10.1109/ICSM.1988.10187
   Bojarski M, 2016, Arxiv, DOI [arXiv:1604.07316, 10.48550/arXiv.1604.07316]
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Briand LC, 2009, INFORM SOFTWARE TECH, V51, P16, DOI 10.1016/j.infsof.2008.09.010
   Byun T, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P63, DOI 10.1109/AITest.2019.000-6
   Campello RJGB, 2015, ACM T KNOWL DISCOV D, V10, DOI 10.1145/2733381
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Chen JJ, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3394112
   CHEN YF, 1994, PROC INT CONF SOFTW, P211
   Cheng DW, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P313, DOI 10.1109/QRS.2018.00044
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   CUZICK J, 1985, STAT MED, V4, P87, DOI 10.1002/sim.4780040112
   Deng J, 2009, PROC CVPR IEEE, P248, DOI 10.1109/CVPRW.2009.5206848
   Denker J., 1990, P 3 INT C NEUR INF P, V3, P853, DOI DOI 10.5555/2986766.2986882
   Du XN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P477, DOI 10.1145/3338906.3338954
   Ertöz L, 2003, SIAM PROC S, P47
   Fischer K. F., 1977, The IEEE Computer Society's First International Computer Software and Applications Conference, P421
   Gal Y, 2016, PR MACH LEARN RES, V48
   Gao SZ, 2022, Arxiv, DOI arXiv:2104.09340
   Gao XY, 2022, PROC INT CONF SOFTW, P73, DOI 10.1145/3510003.3510232
   Gligoric M., 2015, P 2015 INT S SOFTWAR, P211, DOI 10.1145/2771783.2771784
   Goodfellow I.J., 2015, PROC 3 INT C LEARN R
   Guizzo G, 2021, PROC INT CONF SOFTW, P1323, DOI 10.1109/ICSE43902.2021.00120
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   Harrold M. J., 1988, Proceedings of the Conference on Software Maintenance - 1988 (IEEE Cat. No.88CH2615-3), P362, DOI 10.1109/ICSM.1988.10188
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hendrycks D, 2018, Arxiv, DOI arXiv:1610.02136
   Huang RB, 2021, IEEE T SOFTWARE ENG, V47, P2052, DOI 10.1109/TSE.2019.2942921
   Jahangirova G, 2020, IEEE INT CONF SOFTW, P74, DOI 10.1109/ICST46399.2020.00018
   Kim B, 2016, ADV NEUR IN, V29
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Klinger E., 2021, pHash: The open source perceptual hash library
   Krizhevsky A., 2009, LEARNING MULTIPLE LA
   Krizhevsky A., 2009, Cifar, V10
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Kurakin Alexey, 2017, INT C LEARN REPR
   Laski J., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P282, DOI 10.1109/ICSM.1992.242533
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   LeCun Y., 2010, MNIST HANDWRITTEN DI
   Legunsen O, 2017, IEEE INT CONF AUTOM, P949, DOI 10.1109/ASE.2017.8115710
   Legunsen O, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P583, DOI 10.1145/295029.2950361
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lewis D. D., 1994, SIGIR '94. Proceedings of the Seventeenth Annual International ACM-SIGIR Conference on Research and Development in Information Retrieval, P3
   Li Deng, 2012, IEEE Signal Processing Magazine, V29, P141, DOI [10.1109/MSP.2012.2211477, DOI 10.1109/MSP.2012.2211477]
   Li FF, 2007, COMPUT VIS IMAGE UND, V106, P59, DOI 10.1016/j.cviu.2005.09.012
   Li ZN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/3338906.3338930
   Liu ZX, 2022, PROC INT CONF SOFTW, P598, DOI 10.1145/3510003.3510231
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma W, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3417330
   Menendez HD, 2022, IEEE T SOFTWARE ENG, V48, P295, DOI 10.1109/TSE.2020.2987377
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Papernot N, 2016, 1ST IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY, P372, DOI 10.1109/EuroSP.2016.36
   Pei KX, 2019, COMMUN ACM, V62, P137, DOI 10.1145/3361566
   Petke J, 2018, IEEE T EVOLUT COMPUT, V22, P415, DOI 10.1109/TEVC.2017.2693219
   Prabhu V, 2021, 2021 IEEE/CVF INTERNATIONAL CONFERENCE ON COMPUTER VISION (ICCV 2021), P8485, DOI 10.1109/ICCV48922.2021.00839
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Rothermel G., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P358, DOI 10.1109/ICSM.1993.366926
   Sagi O, 2018, WIRES DATA MIN KNOWL, V8, DOI 10.1002/widm.1249
   Schölkopf B, 2001, NEURAL COMPUT, V13, P1443, DOI 10.1162/089976601750264965
   Senior AW, 2020, NATURE, V577, P706, DOI 10.1038/s41586-019-1923-7
   Shorten C, 2019, J BIG DATA-GER, V6, DOI 10.1186/s40537-019-0197-0
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Smite D, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/ICGSE.2008.22
   Sun Y, 2015, Arxiv, DOI arXiv:1502.00873
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Tuor T, 2021, INT C PATT RECOG, P5020, DOI 10.1109/ICPR48806.2021.9412599
   Udeshi S, 2021, IEEE T SOFTWARE ENG, V47, P2487, DOI 10.1109/TSE.2019.2953066
   Vokolos FI, 1998, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.1998.738488
   Wakabayashi D., 2018, Self-driving uber car kills pedestrian in arizona, where robots roam
   Wang JY, 2021, PROC INT CONF SOFTW, P300, DOI 10.1109/ICSE43902.2021.00038
   Wang K, 2011, IEEE I CONF COMP VIS, P1457, DOI 10.1109/ICCV.2011.6126402
   Wang Z, 2004, IEEE T IMAGE PROCESS, V13, P600, DOI 10.1109/TIP.2003.819861
   Wang Z, 2021, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE43902.2021.00046
   Weiss M, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P139, DOI 10.1145/3533767.3534375
   WHITE LJ, 1993, CONFERENCE ON SOFTWARE MAINTENANCE 1993, CSM-93: PROCEEDINGS, P338
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xiao H, 2017, Arxiv, DOI [arXiv:1708.07747, DOI 10.48550/ARXIV.1708.07747]
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Xiong H, 2006, IEEE T KNOWL DATA EN, V18, P304, DOI 10.1109/TKDE.2006.46
   Yang Feng, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P177, DOI 10.1145/3395363.3397357
   Yang Y., 1995, SIGIR Forum, P256
   Yau S. S., 1987, Proceedings of COMPSAC 87. The Eleventh Annual International Computer Software and Applications Conference (Cat. No.87CH2447-1), P272
   Yi Lan., 2003, KDD 03, P296
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zeng C, 2021, Arxiv, DOI arXiv:2103.13020
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang LM, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P199, DOI 10.1145/3180155.3180198
   Zhang L, 2019, Arxiv, DOI arXiv:1901.00054
   Zhang WH, 2020, IEEE INT C ELECTR TA, DOI 10.1109/icce-taiwan49838.2020.9258292
   Zhou JY, 2020, PROC INT SYMP SOFTW, P289, DOI 10.1109/ISSRE5003.2020.00035
NR 97
TC 0
Z9 0
U1 2
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2023
VL 49
IS 12
BP 5250
EP 5278
DI 10.1109/TSE.2023.3330982
PG 29
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CL0K1
UT WOS:001125287400006
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Santiesteban, P
   Huang, Y
   Weimer, W
   Ahmad, H
AF Santiesteban, Priscila
   Huang, Yu
   Weimer, Westley
   Ahmad, Hammad
TI CirFix: Automated Hardware Repair and its Real-World Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Circuit designs; automated repair; empirical study; user study
ID PROGRAM REPAIR; LOCALIZATION; DIAGNOSIS
AB This article presents CirFix, a framework for automatically repairing defects in hardware designs implemented in languages like Verilog. We propose a novel fault localization approach based on assignments to wires and registers, and a fitness function tailored to the hardware domain to bridge the gap between software-level automated program repair and hardware descriptions. We also present a benchmark suite of 32 defect scenarios corresponding to a variety of hardware projects. Overall, CirFix produces plausible repairs for 21/32 and correct repairs for 16/32 of the defect scenarios. Additionally, we evaluate CirFix's fault localization independently through a human study (n = 41), and find that the approach may be a beneficial debugging aid for complex multi-line hardware defects.
C1 [Santiesteban, Priscila; Weimer, Westley; Ahmad, Hammad] Univ Michigan, Comp Sci & Engn, Ann Arbor, MI 48104 USA.
   [Huang, Yu] Vanderbilt Univ, Comp Sci, Nashville, TN 37235 USA.
C3 University of Michigan System; University of Michigan; Vanderbilt
   University
RP Santiesteban, P (corresponding author), Univ Michigan, Comp Sci & Engn, Ann Arbor, MI 48104 USA.
EM pasanti@umich.edu; yu.huang@vanderbilt.edu; weimerw@umich.edu;
   hammada@umich.edu
OI Santiesteban, Priscila/0000-0003-3440-177X; Weimer,
   Westley/0000-0001-6749-2204; Huang, Yu/0000-0003-2730-5077; Ahmad,
   Hammad/0000-0002-0434-6194
FU NSF [1908633]; AFRL [2211749]
FX This work was partially supported in part by the NSF under Grant 1908633
   and in part by AFRL under Grant 2211749.& nbsp;
CR Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Ackling T, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1427
   Afshan S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P352, DOI 10.1109/ICST.2013.11
   Aggarwal KK., 2004, ACM SIGSOFT Software Engineering Notes, V29, P1, DOI [DOI 10.1145/986710.986725, 10.1145/986710.986725]
   Aggarwal Rajat., 2014, ACM International Symposium on Physical Design (ISPD), P45
   Agrawal H, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P143, DOI 10.1109/ISSRE.1995.497652
   Ahmad H, 2022, ASPLOS '22: PROCEEDINGS OF THE 27TH ACM INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P990, DOI 10.1145/3503222.3507763
   Alsolami N, 2019, INT J ADV COMPUT SC, V10, P89
   Anderson F, 2017, UIST'17: PROCEEDINGS OF THE 30TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P331, DOI 10.1145/3126594.3126637
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering (FSE'11), DOI [10.1145/2025113.2025121, DOI 10.1145/2025113.2025121]
   [Anonymous], 2020, VCS FUNCT VER SOL
   [Anonymous], 2006, 1364 IEEE COMP SOC
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Athow D., 2014, PENTIUM FDIV PROCESS
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bening L., 2001, PRINCIPLES VERIFIABL, P103
   Bhatnagar H., 2002, ADV ASIC CHIP SYNTHE
   Binder R.V., 2000, AW OBJ TECHNOL S
   Bloem R., 2002, Journal of the Telematics Engineering Society, V2, P30
   Chang KH, 2007, INT HIGH LEVEL DESIG, P65
   Checkoway S, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P559, DOI 10.1145/1866307.1866370
   Chen JJ, 2016, IEEE INT CONF AUTOM, P178, DOI 10.1145/2970276.2970366
   Collins R., 1998, DR DOBBSS WORLD SOFT
   Dessouky G, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P213
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Feldt R., 1998, IEE Proceedings-Software, V145, P228, DOI 10.1049/ip-sen:19982444
   Forrest Stephanie, 2009, P 11 ANN C GEN EV CO, P947
   Foster H, 2008, LECT NOTES COMPUT SC, V5123, P5
   Friedrich G, 1999, ARTIF INTELL, V111, P3, DOI 10.1016/S0004-3702(99)00034-X
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Gholami F, 2018, 2018 CSI INTERNATIONAL SYMPOSIUM ON REAL-TIME AND EMBEDDED SYSTEMS AND TECHNOLOGIES (RTEST), P104, DOI 10.1109/RTEST.2018.8397165
   Gillenwater J., 2007, TECHNOLOGY TALENT 21
   Gillenwater J, 2008, PEPM'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN SYMPOSIUM ON PARTIAL EVALUATION AND SEMANTICS-BASED PROGRAM MANIPULATION, P41, DOI 10.1145/1328408.1328416
   Guo AB, 2018, PROC IEEE INT CONF S, P554, DOI 10.1109/ICSME.2018.00066
   Hanafy M, 2015, 2015 TENTH INTERNATIONAL CONFERENCE ON COMPUTER ENGINEERING & SYSTEMS (ICCES), P91, DOI 10.1109/ICCES.2015.7393026
   Harman Mark, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P182, DOI 10.1109/ICSTW.2010.31
   Hertz S, 2013, IEEE T COMPUT AID D, V32, P952, DOI 10.1109/TCAD.2013.2241176
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Huang Y, 2021, 2021 IEEE/ACM INTERNATIONAL WORKSHOP ON GENETIC IMPROVEMENT (GI 2021), P21, DOI 10.1109/GI52543.2021.00013
   Huang Y, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P456, DOI 10.1145/3368089.3409681
   Jahangirova G., 2016, INT S SOFTWARE TESTI, P247
   Jiang TY, 2005, IEEE INT SYMP CIRC S, P5682
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Jones Terry, 1995, P 6 INT C GEN ALG, V95, P184
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kaeslin H., 2015, TOP DOWN DIGITAL VLS, V1st, P357
   Keim R., 2020, WHAT IS HARDWARE DES
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kirbas S, 2021, IEEE SOFTWARE, V38, P43, DOI 10.1109/MS.2021.3071086
   KOZA JR, 1994, STAT COMPUT, V4, P87, DOI 10.1007/BF00175355
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2013, SOFTWARE QUAL J, V21, P421, DOI 10.1007/s11219-013-9208-0
   Le Goues C, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P959, DOI 10.1145/2330163.2330296
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le XBD, 2018, EMPIR SOFTW ENG, V23, P3007, DOI 10.1007/s10664-017-9577-2
   Lehman J, 2020, ARTIF LIFE, V26, P274, DOI 10.1162/artl_a_00319
   Liu K, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110817
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Liu K, 2019, IEEE INT CONF SOFTW, P102, DOI 10.1109/ICST.2019.00020
   Liu K, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P456, DOI 10.1109/saner.2019.8667970
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   MADRE JC, 1989, 1989 IEEE INTERNATIONAL CONFERENCE ON COMPUTER-AIDED DESIGN, P30, DOI 10.1109/ICCAD.1989.76898
   Mano MM., 2013, DIGITAL DESIGN INTRO
   Manolache LI, 2001, SOFTWARE PRACT EXPER, V31, P1211, DOI 10.1002/spe.409
   Martinez M., 2016, P ISSTA DEM TRACK
   McMinn P., 2009, PROC 11 ANN C GENET, P1689, DOI [10.1145/1569901.1570127, DOI 10.1145/1569901.1570127]
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Miller B. L., 1995, Complex Systems, V9, P193
   Miller BL, 1996, EVOL COMPUT, V4, P113, DOI 10.1162/evco.1996.4.2.113
   Monperrus Martin, 2018, Technical Report hal-01956501
   Morris K., 2013, ELECT ENG J
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Peischl B, 2006, IEEE DES TEST COMPUT, V23, P8, DOI 10.1109/MDT.2006.5
   Perkins JH, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P87
   Poli R, 1998, SOFT COMPUTING IN ENGINEERING DESIGN AND MANUFACTURING, P180
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Rau JC, 2003, 3RD IEEE INTERNATIONAL WORKSHOP ON SYSTEM-ON-CHIP FOR REAL-TIME APPLICATIONS, PROCEEDINGS, P370
   Romano S, 2020, IEEE T SOFTWARE ENG, V46, P71, DOI 10.1109/TSE.2018.2842781
   Saha S, 2019, PROC INT CONF SOFTW, P13, DOI 10.1109/ICSE.2019.00020
   Salama C., 2007, HARDWARE DESIGN FUNC
   Schirrmeister F., 2012, DEBUGGING HARDWARE S
   Schulte E, 2014, GENET PROGRAM EVOL M, V15, P281, DOI 10.1007/s10710-013-9195-8
   Seitz C.L., 1980, INTRO VLSI SYSTEMS, P218
   Shahamiri SR, 2011, INFORM SOFTWARE TECH, V53, P774, DOI 10.1016/j.infsof.2011.02.006
   Shahamiri SR, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P140, DOI 10.1109/ICSEA.2009.29
   Sharafi Z, 2022, IEEE T SOFTWARE ENG, V48, P1692, DOI 10.1109/TSE.2020.3032064
   Simon S, 2021, IEEE PES INNOV SMART, P426, DOI [10.1109/ISGTEUROPE52324.2021.9640115, 10.1109/ISGTEurope52324.2021.9640115]
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Staber S, 2005, LECT NOTES COMPUT SC, V3725, P35
   Stapleton S, 2020, INT C PROGRAM COMPRE, P2, DOI 10.1145/3387904.3389258
   Sudakrishnan Sangeetha, 2008, P 2008 INT WORK C MI, P39, DOI [10.1145/1370750.1370761, DOI 10.1145/1370750.1370761]
   Sutherland Stuart., 2017, RTL MODELING SYSTEMV
   Synopsys V., 2004, VER SIM
   Takamaeda-Yamazaki S., 2015, ser. Lecture Notes in Computer Science, P451, DOI DOI 10.1007/978-3-319-16214-042
   Taraate V., 2016, DIGITAL LOGIC DESIGN
   Timperley C. S., 2017, THESIS U YORK YORK
   Urli S, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P95, DOI 10.1145/3183519.3183540
   Vasconcelos JA, 2001, IEEE T MAGN, V37, P3414, DOI 10.1109/20.952626
   Wagner J., 2018, INTEL COULD MAKE BIL
   Weimer W, 2010, COMMUN ACM, V53, P109, DOI 10.1145/1735223.1735249
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Weimer Westley, 2006, Proceedings of the 5th International Conference on Generative Programming and Component Engineering (GPCE'06), P181, DOI DOI 10.1145/1173706.1173734
   Wotawa F., 2001, Engineering of Intelligent Systems. 14th International Conference on Industrial and Engineering Applications of Artificial Intelligence and Expert Systems, IEA/AIE 2001. Proceedings (Lecture Notes in Artificial Intelligence Vol.2070), P125
   Wotawa F, 2002, ARTIF INTELL, V135, P125, DOI 10.1016/S0004-3702(01)00161-8
   Xia X, 2016, PROC IEEE INT CONF S, P268, DOI 10.1109/ICSME.2016.67
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Yang DH, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10003-7
   Yang DH, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P96, DOI 10.1109/SANER50967.2021.00018
   Yang DH, 2021, FRONT COMPUT SCI-CHI, V15, DOI 10.1007/s11704-020-9263-1
   Yang DH, 2018, LECT NOTES COMPUT SC, V11293, P33, DOI 10.1007/978-3-030-04272-1_3
   Yiling Lou, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P75, DOI 10.1145/3395363.3397351
   Yuzhen Liu, 2018, Journal of Software, V13, P437, DOI 10.17706/jsw.13.8.437-452
   Zeller A, 2001, COMPUTER, V34, P26, DOI 10.1109/2.963440
NR 118
TC 0
Z9 0
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2023
VL 49
IS 7
BP 3736
EP 3752
DI 10.1109/TSE.2023.3269899
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA M9RA6
UT WOS:001033501500005
DA 2024-07-18
ER

PT J
AU Alahmadi, MD
AF Alahmadi, Mohammad D.
TI VID2XML: Automatic Extraction of a Complete XML Data From Mobile
   Programming Screencasts
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Videos; XML; Data mining; Programming; Codes; Feature extraction;
   Optical character recognition software; Programming screencasts;
   computer vision; Android programming; programming video tutorials; video
   mining
AB Developers often refer to video-hosting online platforms to find screencasts that provide a step-by-step guide to help them solve a programming task at hand or learn a new concept. More specifically, developers search for resources that help them design and implement effective mobile graphical user interfaces (GUI) using XML. Although mobile programming screencasts contain a vast amount of XML data at developers' disposal, they cannot be easily found and copied-pasted due to the image nature of videos. Given that the most common task developers perform online is copy-pasting, mobile programming screencasts must support that and be complemented with XML data in a textual format. To overcome this challenge and aid developers, this paper presents vid2XML, which is a three-phase approach that leverages both visual and textual information of video frames to locate XML region in video frames, locate the currently opened file, and extract XML data for each file presented in video frames. We evaluated each phase of vid2XML in a comprehensive empirical evaluation on videos collected from YouTube. The results reveal that vid2XML is able to accurately (i) locate XML regions, outperforming four previous work, (ii) locate the bounding box of the selected file, and (iii) extract, fix, and merge XML data for each file opened/created in a video.
C1 [Alahmadi, Mohammad D.] Univ Jeddah, Coll Comp Sci & Engn, Dept Software Engn, Jeddah 21959, Saudi Arabia.
C3 University of Jeddah
RP Alahmadi, MD (corresponding author), Univ Jeddah, Coll Comp Sci & Engn, Dept Software Engn, Jeddah 21959, Saudi Arabia.
EM mdalahmadi@uj.edu.sa
OI Alahmadi, Mohammad/0000-0002-3399-2996
FU University of Jeddah, Jeddah, Saudi Arabia [UJ-22-DR-22]
FX This work was supported in part by the University of Jeddah, Jeddah,
   Saudi Arabia under Grant UJ-22-DR-22
CR Alaboudi A, 2019, S VIS LANG HUM CEN C, P5, DOI [10.1109/VLHCC.2019.8818832, 10.1109/vlhcc.2019.8818832]
   Alahmadi M., 2022, VID2XML ONLINE APPEN
   Alahmadi M, 2020, INT C PROGRAM COMPRE, P319, DOI 10.1145/3387904.3389265
   Alahmadi M, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1660, DOI 10.1145/3368089.3417935
   Alahmadi M, 2020, EMPIR SOFTW ENG, V25, P1536, DOI 10.1007/s10664-019-09759-w
   Alahmadi M, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P2, DOI 10.1145/3273934.3273935
   Bao L., 2020, P 28 ACMSIGSOFT INT
   Bao LF, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3392093
   Bao LF, 2019, IEEE T SOFTWARE ENG, V45, P823, DOI 10.1109/TSE.2018.2802916
   Bernal-Cardenas C, 2020, Arxiv, DOI arXiv:2005.09057
   Best N, 2020, Arxiv, DOI arXiv:2003.01627
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   CANNY J, 1986, IEEE T PATTERN ANAL, V8, P679, DOI 10.1109/TPAMI.1986.4767851
   Chen CH, 2019, L@S '19: PROCEEDINGS OF THE SIXTH (2019) ACM CONFERENCE ON LEARNING @ SCALE, DOI 10.1145/3330430.3333627
   Chen JS, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1202, DOI 10.1145/3368089.3409691
   Chunyang Chen, 2019, Proceedings of the ACM on Human-Computer Interaction, V3, DOI 10.1145/3359282
   Cohen A., 2011, CHAIRNERD BLOG
   Dai JF, 2023, Arxiv, DOI [arXiv:1605.06409, DOI 10.48550/ARXIV.1605.06409]
   Everingham M, 2010, INT J COMPUT VISION, V88, P303, DOI 10.1007/s11263-009-0275-4
   Grzywaczewski A, 2012, J COMPUT SYST SCI, V78, P1204, DOI 10.1016/j.jcss.2011.10.009
   He KM, 2015, Arxiv, DOI [arXiv:1512.03385, 10.48550/arxiv.1512.03385]
   Huang J, 2017, PROC CVPR IEEE, P3296, DOI 10.1109/CVPR.2017.351
   Khandwala K, 2018, PROCEEDINGS OF THE FIFTH ANNUAL ACM CONFERENCE ON LEARNING AT SCALE (L@S'18), DOI 10.1145/3231644.3231652
   Khormi A, 2020, IEEE WORK CONF MIN S, P65, DOI 10.1145/3379597.3387468
   Kiyak E. O., 2020, SN COMPUT SCI, V1, P1
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Liu W, 2016, LECT NOTES COMPUT SC, V9905, P21, DOI 10.1007/978-3-319-46448-0_2
   MacLeod L, 2017, EMPIR SOFTW ENG, V22, P1478, DOI 10.1007/s10664-017-9501-9
   MacLeod L, 2015, INT C PROGRAM COMPRE, P104, DOI 10.1109/ICPC.2015.19
   Matas J, 2000, COMPUT VIS IMAGE UND, V78, P119, DOI 10.1006/cviu.1999.0831
   Moran K, 2018, IEEE INT CONF AUTOM, P543, DOI 10.1145/3238147.3238203
   Moran K, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P165, DOI 10.1145/3180155.3180246
   Moslehi P, 2018, IEEE WORK CONF MIN S, P192, DOI 10.1145/3196398.3196439
   Ott J, 2018, INT C PROGRAM COMPRE, P336, DOI 10.1145/3196321.3196359
   Ott J, 2019, J BIG DATA-GER, V6, DOI 10.1186/s40537-019-0198-z
   Ott J, 2018, IEEE WORK CONF MIN S, P376, DOI 10.1145/3196398.3196402
   Parra E, 2018, INT C PROGRAM COMPRE, P222, DOI 10.1145/3196321.3196351
   Pavel Amy, 2014, P ACM S US INT SOFTW, P573, DOI [DOI 10.1145/2642918.264740012A, DOI 10.1145/2642918.2647400]
   Poché E, 2017, INT C PROGRAM COMPRE, P196, DOI 10.1109/ICPC.2017.26
   Ponzanelli Luca, 2019, IEEE Transactions on Software Engineering, V45, P464, DOI 10.1109/TSE.2017.2779479
   Ponzanelli L, 2016, PROC INT CONF SOFTW, P261, DOI 10.1145/2884781.2884824
   Ponzanelli L, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P645, DOI 10.1145/2889160.2889172
   Qian N, 1999, NEURAL NETWORKS, V12, P145, DOI 10.1016/S0893-6080(98)00116-6
   Redmon J, 2016, Arxiv, DOI arXiv:1506.02640
   Ren SQ, 2016, Arxiv, DOI [arXiv:1506.01497, DOI 10.1109/TPAMI.2016.2577031]
   Russakovsky O, 2015, INT J COMPUT VISION, V115, P211, DOI 10.1007/s11263-015-0816-y
   Shrivastava A, 2016, LECT NOTES COMPUT SC, V9905, P330, DOI 10.1007/978-3-319-46448-0_20
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Storey Margaret-Anne, 2014, FUT SOFTW ENG P, P100, DOI 10.1145/2593882.2593887
   Szegedy C., 2016, arXiv, DOI 10.48550/arXiv.1602.07261
   Vahedi M, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P434, DOI 10.1109/SANER50967.2021.00047
   Yadid S, 2016, ONWARD!'16: PROCEEDINGS OF THE 2016 ACM INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE, P98, DOI 10.1145/2986012.2986021
   Zhao DH, 2019, PROC INT CONF SOFTW, P350, DOI 10.1109/ICSE.2019.00049
NR 53
TC 1
Z9 1
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1726
EP 1740
DI 10.1109/TSE.2022.3188898
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600018
DA 2024-07-18
ER

PT J
AU Alhanahnah, M
   Ma, SQ
   Gehani, A
   Ciocarlie, GF
   Yegneswaran, V
   Jha, S
   Zhang, XY
AF Alhanahnah, Mohannad
   Ma, Shiqing
   Gehani, Ashish
   Ciocarlie, Gabriela F.
   Yegneswaran, Vinod
   Jha, Somesh
   Zhang, Xiangyu
TI autoMPI: Automated Multiple Perspective Attack Investigation With
   Semantics Aware Execution Partitioning
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Annotations; Data structures; Task analysis; Instruments; Training;
   Semantics; Kernel; Annotation; dynamic analysis; provenance; static
   analysis
AB Multiple Perspective attack Investigation (MPI) is a technique to partition application dependencies based on high-level semantics. It facilitates provenance analysis by generating succinct causal graphs. It involves an annotation process that identifies variables and data structures corresponding to the partitions and the communication channels between them. Though the amount of annotation is small, this process requires a detailed understanding of the source code. In this work, autoMPI, we extend the capability of MPI by automating the identifying annotation requirements. We leverage a hybrid analysis approach, performing a differential analysis based on crafted inputs. Static analysis is conducted to identify the annotation sites within the application code afterward automatically. Our evaluation shows the proposed approach can significantly facilitate the annotation process. It correctly identifies all required annotation sites within an average 16 seconds analysis time for the majority of analyzed programs with average precision and recall 72.5% and 100%, respectively.
C1 [Alhanahnah, Mohannad; Jha, Somesh] Univ Wisconsin, Madison, WI 53706 USA.
   [Ma, Shiqing] Rutgers State Univ, Piscataway, NJ USA.
   [Gehani, Ashish; Yegneswaran, Vinod] SRI Int, Menlo Pk, CA 94025 USA.
   [Ciocarlie, Gabriela F.] Univ Texas San Antonio, San Antonio, TX 78249 USA.
   [Zhang, Xiangyu] Purdue Univ, W Lafayette, IN 47907 USA.
C3 University of Wisconsin System; University of Wisconsin Madison; Rutgers
   University System; Rutgers University New Brunswick; SRI International;
   University of Texas System; University of Texas at San Antonio (UTSA);
   Purdue University System; Purdue University
RP Alhanahnah, M (corresponding author), Univ Wisconsin, Madison, WI 53706 USA.
EM mohannad.alhanahnah@gmail.com; sm2283@cs.rutgers.edu;
   gehani@csl.sri.com; gabriela.ciocarlie@utsa.edu; vinod@csl.sri.com;
   jha@cs.wisc.edu; xyzhang@cs.purdue.edu
RI Zhang, Xiangyu/ABC-2896-2021
OI Zhang, Xiangyu/0000-0003-3716-4722
CR Aafer Y, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P1153
   Alhanahnah M, 2022, 2022 IEEE 7TH EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P 2022), P251, DOI 10.1109/EuroSP53844.2022.00024
   Bates A, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P319
   Braun U, 2006, LECT NOTES COMPUT SC, V4145, P171
   Chen Y, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P815, DOI 10.1145/3133956.3134009
   Chow J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE 13TH USENIX SECURITY SYMPOSIUM, P321
   Dave, 2016, P ACM SIGSAC C COMP, P242
   Devecsery David., 2014, Proceedings of the 11th USENIX Conference on Operating Systems Design and Implementation, OSDI'14, P525
   dwheeler, 2020, SLOCCOUNT
   github, 2020, LOOM LLVM INSTRUMENT
   Godefroid P., 2012, PROC IARCS ANN C FOU
   Goel A., 2005, SOSP 05, P163
   goo.gl, 2020, CLANG LANGUAGE EXTEN
   goo.gl, 2019, SONY HACK
   goo.gl, 2019, EXTENSIONS C LANGUAG
   goo.gl, 2019, APACHE BENCHMARK
   goo.gl, EXTENSIONS C LANGUAG
   goo.gl, VIM DOCUMENT WINDOWS
   Hassan W. U., 2020, PROC NETW DISTRIB SY
   haveibeenpwned, 2019, LEAKED DATA
   Irshad H, 2021, IEEE T INF FOREN SEC, V16, P4363, DOI 10.1109/TIFS.2021.3098977
   Jiang Xuxian., 2006, 26 IEEE INT C DISTRI, P38
   Kim Taesoo., 2010, P 9 USENIX S OPERATI, P89
   King S. T., 2003, Operating Systems Review, V37, P223, DOI 10.1145/1165389.945467
   King S. T., 2005, P NETW DISTR SYST SE
   Kwon Y, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23306
   Lee K. H., 2013, P 20 NETW DISTR SYST
   Lee Kyu Hyung, 2013, P 2013 ACM SIGSAC C, P1005
   Ma SQ, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23350
   Ma SQ, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P241
   Ma SQ, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P1111
   Mason I. A., 2020, WHOLE PROGRAM LLVM
   Miles S, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000792
   msdn.microsoft, 2020, WINDOWS EVENT LOG
   msdn.microsoft, 2021, EVENT TRACING WINDOW
   Muniswamy-Reddy K.-K., 2009, PROC USENIX ANN TECH, P10
   Muniswamy-Reddy KK, 2006, USENIX ASSOCIATION PROCEEDINGS OF THE 2006 USENIX ANNUAL TECHNICAL CONFERENCE, P43
   Nachtigall M, 2019, 2019 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2019), P29, DOI 10.1109/ASEW.2019.00023
   Newsome J., 2005, Dynamic taint analysis for automatic detection, analysis, and signature generation of exploits on commodity software
   Pohly DJ, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P259
   Sáenz-Adán C, 2022, IEEE T SOFTWARE ENG, V48, P53, DOI 10.1109/TSE.2020.2977016
   Schubert PD, 2019, SOAP'19: PROCEEDINGS OF THE 8TH ACM SIGPLAN INTERNATIONAL WORKSHOP ON STATE OF THE ART IN PROGRAM ANALYSIS, P8, DOI 10.1145/3315568.3329965
   Sitaraman S, 2005, THIRD IEEE INTERNATIONAL WORKSHOP ON INFORMATION ASSURANCE, PROCEEDINGS, P154, DOI 10.1109/IWIA.2005.9
   Sui YL, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION (CC 2016), P265, DOI 10.1145/2892208.2892235
   Sundararaman Sriram, 2008, USENIX SEC S, P259
   Ul Hassan W, 2020, P IEEE S SECUR PRIV, P1172, DOI 10.1109/SP40000.2020.00096
   Wang Q, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23282
   Wu J., 2010, P 9 USENIX C OP SYST, P135
   Xie YL, 2020, IEEE T DEPEND SECURE, V17, P1283, DOI 10.1109/TDSC.2018.2867595
   Yang RQ, 2020, 27TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2020), DOI 10.14722/ndss.2020.24329
   Zeldovich N, 2006, USENIX ASSOCIATION 7TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P263
   Zhu NN, 2003, 2003 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P217
NR 52
TC 0
Z9 0
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2761
EP 2775
DI 10.1109/TSE.2022.3231242
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600076
DA 2024-07-18
ER

PT J
AU Mathew, G
   Agrawal, A
   Menzies, T
AF Mathew, George
   Agrawal, Amritanshu
   Menzies, Tim
TI Finding Trends in Software Research
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; Conferences; Software; Analytical models; Data
   models; Predictive models; Testing; bibliometrics; topic modeling; text
   mining
ID RESEARCH TOPICS; INSTITUTIONS; EVOLUTION; RANKING; GENDER
AB Text mining methods can find large scale trends within research communities. For example, using stable Latent Dirichlet Allocation (a topic modeling algorithm) this study found 10 major topics in 35,391 SE research papers from 34 leading SE venues over the last 25 years (divided, evenly, between conferences and journals). Out study also shows how those topics have changed over recent years. Also, we note that (in the historical record) mono-focusing on a single topic can lead to fewer citations than otherwise. Further, while we find no overall gender bias in SE authorship, we note that women are under-represented in the top-most cited papers in our field. Lastly, we show a previously unreported dichotomy between software conferences and journals (so research topics that succeed at conferences might not succeed at journals, and vice versa). An important aspect of this work is that it is automatic and quickly repeatable (unlike prior SE bibliometric studies that used tediously slow and labor intensive methods). Automation is important since, like any data mining study, its conclusions are skewed by the data used in the analysis. The automatic methods of this paper make it far easier for other researchers to re-apply the analysis to new data, or if they want to use different modeling assumptions.
C1 [Mathew, George; Agrawal, Amritanshu; Menzies, Tim] North Carolina State Univ NCSU, Dept Comp Sci CS, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Menzies, T (corresponding author), North Carolina State Univ NCSU, Dept Comp Sci CS, Raleigh, NC 27695 USA.
EM george.meg91@gmail.com; aagrawa8@ncsu.edu; timm@ieee.org
RI Agrawal, Amritanshu/R-7093-2019; Menzies, Tim/X-7680-2019
OI Agrawal, Amritanshu/0000-0002-1220-8533; Menzies,
   Tim/0000-0002-5040-3196
CR Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   Al-Zubidy A., 2014, SERG201403 U AL DEP
   [Anonymous], 2009, UAI 09, DOI DOI 10.1080/10807030390248483
   [Anonymous], 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering-ESEC/FSE 2013, page
   [Anonymous], 2002, Proceedings of the Eighteenth Conference on Uncertainty in Artificial Intelligence. UAI'02
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Bin Noor T, 2015, 2015 IEEE 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN), P13, DOI 10.1109/SWAN.2015.7070482
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Cai KY, 2008, J SYST SOFTWARE, V81, P1051, DOI 10.1016/j.jss.2007.08.028
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Datta Subhajit, 2016, IEEE Transactions on Big Data, V2, P124, DOI 10.1109/TBDATA.2016.2580541
   Ding Y, 2009, J AM SOC INF SCI TEC, V60, P2229, DOI 10.1002/asi.21171
   Efron B., 1993, INTRO BOOTSTRAP, DOI 10.1007/978-1-4899-4541-9
   Fernandes JM, 2014, SCIENTOMETRICS, V101, P257, DOI 10.1007/s11192-014-1331-6
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Garousi V., 2010, Computer and Information Science, V3, P19, DOI DOI 10.1142/S0218194013500423
   Garousi V, 2016, COMPUT SCI REV, V19, P56, DOI 10.1016/j.cosrev.2015.12.002
   Garousi V, 2016, INFORM SOFTWARE TECH, V71, P108, DOI 10.1016/j.infsof.2015.11.003
   Garousi V, 2015, SCIENTOMETRICS, V105, P23, DOI 10.1007/s11192-015-1663-x
   Garousi V, 2013, INT J SOFTW ENG KNOW, V23, P1343, DOI 10.1142/S0218194013500423
   Geunseok Yang, 2015, KIISE Transactions on Computing Practices, V21, P616, DOI 10.5626/KTCP.2015.21.9.616
   Glass RL, 2005, J SYST SOFTWARE, V76, P91, DOI 10.1016/j.jss.2004.08.018
   Google Scholar, US
   Griffiths TL, 2004, P NATL ACAD SCI USA, V101, P5228, DOI 10.1073/pnas.0307752101
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Hamadicharef B, 2012, ADV INTEL SOFT COMPU, V144, P101
   Hoonlor A, 2013, COMMUN ACM, V56, P74, DOI 10.1145/2500892
   Hummel O., 2013, COMPUT INF SCI, V6
   Marshall Christopher, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P296, DOI 10.1109/ESEM.2013.32
   Massey AK, 2013, S VIS LANG HUM CEN C, P4, DOI 10.1109/RE.2013.6636700
   Mathew G, 2017, PROC IEEE ACM INT C, P397, DOI 10.1109/ICSE-C.2017.52
   Mullner D., 2011, arXiv, DOI DOI 10.48550/ARXIV.1109.2378
   Nikolenko SI, 2017, J INF SCI, V43, P88, DOI 10.1177/0165551515617393
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Ren J, 2007, COMMUN ACM, V50, P81, DOI 10.1145/1247001.1247010
   Researchgate, SHAR DISC RES
   Restificar A, 2012, PROCEEDINGS OF THE ACM SIXTH INTERNATIONAL WORKSHOP ON DATA AND TEXT MINING IN BIOMEDICAL INFORMATICS, P21
   Roberts SG, 2016, J LANG EVOL, V1, P163, DOI 10.1093/jole/lzw009
   Robles Gregorio., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P222
   Sarkar S, 2017, WWW'17 COMPANION: PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P1251, DOI 10.1145/3041021.3053051
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Sun XB, 2016, 2016 17TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P357, DOI 10.1109/SNPD.2016.7515925
   Sun XB, 2015, INFORM SOFTWARE TECH, V66, P1, DOI 10.1016/j.infsof.2015.05.003
   Systa T., 2012, INBREEDING SOFTWARE
   Tang J., 2008, SIGKDD, P990, DOI DOI 10.1145/1401890.1402008
   Terrell J, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.111
   The ACM digital library, US
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   Thomas SW, 2014, SCI COMPUT PROGRAM, V80, P457, DOI 10.1016/j.scico.2012.08.003
   Tsafnat G, 2014, SYST REV-LONDON, V3, DOI 10.1186/2046-4053-3-74
   Vasilescu B, 2014, INTERACT COMPUT, V26, P488, DOI 10.1093/iwc/iwt047
   Vasilescu B, 2014, SCI COMPUT PROGRAM, V89, P251, DOI 10.1016/j.scico.2014.01.016
   West J., 2012, WOMEN ACAD AUTHORS 1
   Wohlin C, 2007, INFORM SOFTWARE TECH, V49, P2, DOI 10.1016/j.infsof.2006.08.004
   Yuanyuan Zhang, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P301, DOI 10.1007/978-3-319-22183-0_27
NR 58
TC 13
Z9 13
U1 5
U2 24
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1397
EP 1410
DI 10.1109/TSE.2018.2870388
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Peng, Y
   Li, SQ
   Gu, WW
   Li, YC
   Wang, WX
   Gao, CY
   Lyu, MR
AF Peng, Yun
   Li, Shuqing
   Gu, Wenwei
   Li, Yichen
   Wang, Wenxuan
   Gao, Cuiyun
   Lyu, Michael R.
TI Revisiting, Benchmarking and Exploring API Recommendation: How Far Are
   We?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Task analysis; Codes; Benchmark testing; Knowledge based systems; Soft
   sensors; Java; Tutorials; API recommendation; benchmark; empirical study
AB Application Programming Interfaces (APIs), which encapsulate the implementation of specific functions as interfaces, greatly improve the efficiency of modern software development. As the number of APIs grows up fast nowadays, developers can hardly be familiar with all the APIs and usually need to search for appropriate APIs for usage. So lots of efforts have been devoted to improving the API recommendation task. However, it has been increasingly difficult to gauge the performance of new models due to the lack of a uniform definition of the task and a standardized benchmark. For example, some studies regard the task as a code completion problem, while others recommend relative APIs given natural language queries. To reduce the challenges and better facilitate future research, in this paper, we revisit the API recommendation task and aim at benchmarking the approaches. Specifically, the paper groups the approaches into two categories according to the task definition, i.e., query-based API recommendation and code-based API recommendation. We study 11 recently-proposed approaches along with 4 widely-used IDEs. One benchmark named APIBench is then built for the two respective categories of approaches. Based on APIBench, we distill some actionable insights and challenges for API recommendation. We also achieve some implications and directions for improving the performance of recommending APIs, including appropriate query reformulation, data source selection, low resource setting, user-defined APIs, and query-based API recommendation with usage patterns.
C1 [Peng, Yun; Li, Shuqing; Gu, Wenwei; Li, Yichen; Wang, Wenxuan; Lyu, Michael R.] Chinese Univ Hong Kong, Hong Kong, Peoples R China.
   [Gao, Cuiyun] Harbin Inst Technol, Guangdong Prov Key Lab Novel Secur Intelligence Te, Shenzhen 518055, Peoples R China.
   [Gao, Cuiyun] Peng Cheng Lab, Shenzhen 518066, Peoples R China.
C3 Chinese University of Hong Kong; Harbin Institute of Technology; Peng
   Cheng Laboratory
RP Gao, CY (corresponding author), Harbin Inst Technol, Guangdong Prov Key Lab Novel Secur Intelligence Te, Shenzhen 518055, Peoples R China.
EM ypeng@cse.cuhk.edu.hk; sqli21@cse.cuhk.edu.hk; wwgu21@cse.cuhk.edu.hk;
   ycli21@cse.cuhk.edu.hk; wxwang@cse.cuhk.edu.hk; gcyydxf@gmail.com;
   lyu@cse.cuhk.edu.hk
RI Peng, Yun/IZQ-0970-2023; WenWei, GU/HGB-5453-2022; Wang,
   Wenxuan/AAW-9073-2020; Li, Shuqing/KIG-4921-2024
OI Peng, Yun/0000-0003-1936-5598; LI, Yichen/0009-0009-8370-644X
FU Research Grants Council of the Hong Kong Special Administrative Region,
   China [CUHK 14210920]; National Natural Science Foundation of China
   [62002084]; Guangdong Provincial Key Laboratory of Novel Security
   Intelligence Technologies [2022B1212010005]; Stable support plan for
   colleges and universities in Shenzhen
   [GXWD20201230155427003-20200730101839009]; Major Key Project of PCL
   [PCL2022A03, PCL2021A02, PCL2021A09]
FX This work was supported in part by the Research Grants Council of the
   Hong Kong Special Administrative Region, China under Grant CUHK 14210920
   of the General Research Fund, in part by the National Natural Science
   Foundation of China under Grant 62002084, in part by Guangdong
   Provincial Key Laboratory of Novel Security Intelligence Technologies
   under Grant 2022B1212010005, in part by Stable support plan for colleges
   and universities in Shenzhen under Grants
   GXWD20201230155427003-20200730101839009, and in part by the Major Key
   Project of PCL under Grants PCL2022A03, PCL2021A02 and PCL2021A09.
CR AIDanial, 2021, COUNT LIN COD
   Alon U., 2018, ARXIV
   Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   Nguyen AT, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P858, DOI 10.1109/ICSE.2015.336
   Nguyen AT, 2012, PROC INT CONF SOFTW, P69, DOI 10.1109/ICSE.2012.6227205
   Apache Software Foundation, 2021, LUCENE
   Avazpour I, 2014, Recomm Syst Softw Eng, P245
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Cao K., 2021, DEMO LINK SEQUER
   Cao KB, 2021, PROC INT CONF SOFTW, P1273, DOI 10.1109/ICSE43902.2021.00116
   D'Souza AR, 2016, IEEE INT WORK C SO, P51, DOI 10.1109/SCAM.2016.22
   Diab M, 2020, KDD '20: PROCEEDINGS OF THE 26TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P3612, DOI 10.1145/3394486.3409565
   Django, 2021, DJANGO API REFERENCE
   Eclipse foundation, 2021, ECLIPSE IDE
   Efstathiou V, 2018, IEEE WORK CONF MIN S, P38, DOI 10.1145/3196398.3196448
   Flask, 2021, FLASK API REFERENCE
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Fowkes J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P254, DOI 10.1145/2950290.2950319
   Geeks4geeks website, 2021, US
   Google, 2021, GOOGLE NEWS WORD2VEC
   Google, 2021, ANDROID API REFERENC
   Google, 2021, INT GOOGL PRED SERV
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   He XC, 2021, PROC IEEE ACM INT C, P246, DOI 10.1109/ICSE-Companion52605.2021.00114
   Hedderich MA, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P2545
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Java2s website, 2021, US
   JetBrains, 2021, INTELLIJ IDEA IDE
   Jetbrains, 2020, PYTH DEV SURV COND J
   JetBrains, 2021, PYCHARM IDE
   Jing ELS, 2021, Arxiv, DOI arXiv:2110.07096
   Kim S., 2021, REPLICATION PACKAGE
   Kim S, 2021, PROC INT CONF SOFTW, P150, DOI 10.1109/ICSE43902.2021.00026
   Kode Java website, 2021, US
   Lamothe M, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3470133
   lanwuwei, 2021, PRETRAINED BERT STAC
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Li B, 2022, OPEN
   Liu MW, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P120, DOI 10.1145/3338906.3338971
   Lu ML, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P545, DOI 10.1109/SANER.2015.7081874
   Ma Edward, 2019, NLP Augmentation
   Matplotlib, 2021, MATPLOTLIB API REFER
   Microsoft, 2021, GITHUB WEBSITE
   Microsoft, 2021, VISUAL STUDIO CODE E
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Newman B, 2022, Arxiv, DOI arXiv:2110.07280
   Nguyen PT, 2019, PROC INT CONF SOFTW, P1050, DOI 10.1109/ICSE.2019.00109
   Numpy, 2021, NUMPY API REFERENCE
   Oracle, 2021, JAVA SE 8 API DOCUME
   Pandas, 2021, PANDAS API REFERENCE
   Python, 2021, PYTHON STANDARD LIB
   Raghu M, 2020, Arxiv, DOI [arXiv:2003.11755, DOI 10.48550/2003.11755]
   Rahman M. M., 2021, REPLICATION PACKAGE
   Rahman MM, 2018, PROC IEEE INT CONF S, P714, DOI 10.1109/ICSME.2018.00086
   Rahman MM, 2018, PROC IEEE INT CONF S, P473, DOI 10.1109/ICSME.2018.00057
   Rahman MM, 2017, IEEE INT CONF AUTOM, P428, DOI 10.1109/ASE.2017.8115655
   Rahman MM, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P349, DOI 10.1109/SANER.2016.80
   Raychev V, 2016, ACM SIGPLAN NOTICES, V51, P731, DOI 10.1145/3022671.2984041
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Ricci F, 2011, RECOMMENDER SYSTEMS HANDBOOK, P1, DOI 10.1007/978-0-387-85820-3_1
   Robbes R, 2010, AUTOMAT SOFTW ENG, V17, P181, DOI 10.1007/s10515-010-0064-x
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Sirres R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P945, DOI 10.1145/3180155.3182513
   snyk, 2021, JVM ECOSYSTEM REPORT
   Stack Exchange, 2021, Stack Exchange Data Explorer.
   Tu ZP, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P269, DOI 10.1145/2635868.2635875
   Wen FC, 2021, PROC INT CONF SOFTW, P138, DOI 10.1109/ICSE43902.2021.00025
   Xie RS, 2019, PROC INT SYMP SOFTW, P369, DOI 10.1109/ISSRE.2019.00044
   Xue L., 2021, ARXIV
NR 70
TC 6
Z9 6
U1 3
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1876
EP 1897
DI 10.1109/TSE.2022.3197063
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600026
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wang, YB
   Li, K
   Tang, YZ
   Chen, JQ
   Zhang, Q
   Luo, XP
   Chen, T
AF Wang, Yibo
   Li, Kai
   Tang, Yuzhe
   Chen, Jiaqi
   Zhang, Qi
   Luo, Xiapu
   Chen, Ting
TI Towards Saving Blockchain Fees via Secure and Cost-Effective Batching of
   Smart-Contract Invocations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Blockchains; cost effectiveness; DeFi; replay attacks; smart contracts
AB This paper presents IBATCH, a middleware system running on top of an operational Etherium network to enable secure batching of smart-contract invocations against an untrusted relay server off-chain. IBATCH does so at a low overhead by validating the server's batched invocations in smart contracts without additional states of user nonces. The IBATCH mechanism supports a variety of policies, ranging from conservative to aggressive batching, and can be configured adaptively to the current workloads. IBATCH automatically rewrites smart contracts to integrate with legacy applications and support large-scale deployment. We built an evaluation platform for fast and cost-accurate transaction replaying and constructed real transaction benchmarks on popular Etherium applications. With a functional prototype of IBATCH, we conduct extensive cost evaluations, which shows IBATCH saves 14.6% similar to 59.1% Gas cost per invocation with a moderate 2-minute delay and 19.06% similar to 31.52% Ether cost per invocation with a delay of 0.26 similar to 1.66 blocks.
C1 [Wang, Yibo; Tang, Yuzhe; Chen, Jiaqi; Zhang, Qi] Syracuse Univ, Syracuse, NY 13244 USA.
   [Li, Kai] San Diego State Univ, San Diego, CA 92182 USA.
   [Luo, Xiapu] Hong Kong Polytech Univ, Hung Hom, Hong Kong, Peoples R China.
   [Chen, Ting] Univ Elect Sci Technol China, Chengdu 610056, Sichuan, Peoples R China.
C3 Syracuse University; California State University System; San Diego State
   University; Hong Kong Polytechnic University; University of Electronic
   Science & Technology of China
RP Tang, YZ (corresponding author), Syracuse Univ, Syracuse, NY 13244 USA.
EM ywang349@syr.edu; kli111@syr.edu; ytang100@syr.edu; jchen217@syr.edu;
   qzhang16@syr.edu; csxluo@comp.polyu.edu.hk; brokendragon@uestc.edu.cn
RI chen, jiayi/KHV-5520-2024; chen, jia/JDW-7660-2023
OI Chen, Jiaqi/0000-0002-6368-6164; Li, Kai/0000-0002-6040-0220; ZHANG,
   QI/0000-0003-4763-0774
FU National Science Foundation [CNS1815814, DGE2104532, CNS2139801]
FX The work of Yibo Wang, Kai Li, Yuzhe Tang, Jiaqi Chen, and Qi Zhang was
   supported by the National Science Foundation under Grants CNS1815814,
   DGE2104532 and CNS2139801. Recommended for acceptance by J. Sun.
CR [Anonymous], IDEX SMART CONTR ETH
   [Anonymous], T DET 0X8125 ETH
   [Anonymous], IS OPT DEC
   [Anonymous], REC ETH FUNCT SOL
   [Anonymous], WRIT GSN CAP CONTR
   [Anonymous], DOES OPT ROLL REALL
   [Anonymous], ETH DAIL T CHART
   [Anonymous], EOS IO GETT START DE
   [Anonymous], REM INST SUPP EIP 30
   [Anonymous], ETH T HASH DET EX LI
   [Anonymous], SEND GASL T
   [Anonymous], ETH BLOCKCH PUBL DAT
   [Anonymous], GITH REP IOS AIRDR
   [Anonymous], DEC ETH ASS EXCH
   [Anonymous], TETH STABL DIG CASH
   [Anonymous], BLOCKCH OR CONN SMAR
   [Anonymous], ALM EV YOU NEED KNOW
   [Anonymous], IBATCH BATCH SMART C
   [Anonymous], CONTR ADDR BIN TOK E
   [Anonymous], NAT MET PROP ROUND
   [Anonymous], REL AN ETH MIX
   [Anonymous], EOS BLOCKCH SOFTW AR
   [Anonymous], EOS IO SMART CONTR D
   [Anonymous], ?About us"
   [Anonymous], AN BATCH BITC
   [Anonymous], LIGHTNN NETW SCAL IN
   [Anonymous], EOA OWN IDEX SMART C
   [Anonymous], TRON DEC WEB
   bitinfocharts, ETH T HIST CHART
   Bonneau J, 2014, LECT NOTES COMPUT SC, V8437, P486, DOI 10.1007/978-3-662-45472-5_31
   Buterin V., ON CHAIN SCALING POT
   Chen T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P442, DOI 10.1109/SANER.2017.7884650
   Cheng RY, 2019, Arxiv, DOI arXiv:1804.05141
   coindesk, SUSH FLEEING ETH FEE
   Croman K, 2016, LECT NOTES COMPUT SC, V9604, P106, DOI 10.1007/978-3-662-53357-4_8
   Detrio C., PHASE ONE DONE ETH2
   Dziembowski S, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P949, DOI 10.1145/3243734.3243856
   ethereum, REM IDE ETH
   ethereum, Geth: the Go Client for Ethereum
   ethereum, EIP 2711 SPONS EXP B
   ethereum, EIP 3074 AUTH AUTHC
   ethereum, Optimistic rollups
   ethereum, EIP 3005 BATCH MET
   etherscan, Etherscan
   Eyal I, 2016, 13TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION (NSDI '16), P45
   Felten E., WHATS ROLLUP
   Fröwis M, 2019, LECT NOTES COMPUT SC, V11737, P255, DOI 10.1007/978-3-030-31500-9_17
   Heilman E, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23086
   Kokoris-Kogias E, 2018, P IEEE S SECUR PRIV, P583, DOI 10.1109/SP.2018.000-5
   Labs A., 2019, IDEX REAL TIM HIGH T
   Li K, 2020, Arxiv, DOI arXiv:1911.04078
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P17, DOI 10.1145/2976749.2978389
   Matsumoto S, 2017, P IEEE S SECUR PRIV, P410, DOI 10.1109/SP.2017.57
   Meiklejohn Sarah, 2018, Proceedings on Privacy Enhancing Technologies, V2018, P105, DOI 10.1515/popets-2018-0015
   Miller A, 2017, Arxiv, DOI arXiv:1702.05812
   Seres I. A., 2019, IACR CRYPTOL EPRINT, V2019
   tronscan, TRONSC TRON BLOCKCH
   uniswap, UN V2 OV
   Wang Yibo, 2022, CCS '22: Proceedings of the 2022 ACM SIGSAC Conference on Computer and Communications Security, P3483, DOI 10.1145/3548606.3563505
   Wang YB, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P566, DOI [10.1145/3468264.3468568, 10.1145/3468264-3468568]
   Werner S. M., 2021, arXiv
   Wood G., 2014, ETHERIUM SECURE DECE
NR 62
TC 2
Z9 2
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2980
EP 2995
DI 10.1109/TSE.2023.3237123
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600088
DA 2024-07-18
ER

PT J
AU Yu, L
   Wang, HY
   Luo, XP
   Zhang, T
   Liu, K
   Chen, JC
   Zhou, H
   Tang, YT
   Xiao, XS
AF Yu, Le
   Wang, Haoyu
   Luo, Xiapu
   Zhang, Tao
   Liu, Kang
   Chen, Jiachi
   Zhou, Hao
   Tang, Yutian
   Xiao, Xusheng
TI Towards Automatically Localizing Function Errors in Mobile Apps With
   User Reviews
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Mobile applications; Semantics; Task analysis; Graphical user
   interfaces; Computer bugs; Data mining; Function error localization;
   user reviews; mobile apps
AB Removing all function errors is critical for making successful mobile apps. Since app testing may miss some function errors given limited time and resource, the user reviews of mobile apps are very important to developers for learning the uncaught errors. Unfortunately, manually handling each review is time-consuming and even error-prone. Existing studies on mobile apps' reviews could not help developers effectively locate the problematic code according to the reviews, because the majority of such research focus on review classification, requirements engineering, sentiment analysis, and summarization [1]. They do not localize the function errors described in user reviews in apps' code. Moreover, recent studies on mapping reviews to problematic source files look for the matching between the words in reviews and that in source code, bug reports, commit messages, and stack traces, thus may result in false positives and false negatives since they do not consider the semantic meaning and part of speech tag of each word. In this paper, we propose a novel approach to localize function errors in mobile apps by exploiting the context information in user reviews and correlating the reviews and bytecode through their semantic meanings. We realize our new approach as a tool named ReviewSolver, and carefully evaluate it with reviews of real apps. The experimental result shows that ReviewSolver has much better performance than the state-of-the-art tools (i.e., ChangeAdvisor and Where2Change).
C1 [Yu, Le; Luo, Xiapu; Zhou, Hao] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
   [Wang, Haoyu] Huazhong Univ Sci & Technol, Sch Cyber Sci & Engn, Wuhan, Peoples R China.
   [Zhang, Tao] Macau Univ Sci & Technol, Sch Comp Sci & Engn, Macau 999078, Peoples R China.
   [Liu, Kang] Chinese Acad Sci, Inst Automat, Beijing 100045, Peoples R China.
   [Tang, Yutian] Shanghai Tech Univ, Sch Informat Sci & Technol, Shanghai 201210, Peoples R China.
   [Luo, Xiapu] Hong Kong Polytech Univ, Dept Comp, Hong Kong 44106, Peoples R China.
   [Xiao, Xusheng] Case Western Reserve Univ, Dept Comp & Data Sci, Cleveland Hts, OH USA.
C3 Hong Kong Polytechnic University; Huazhong University of Science &
   Technology; Macau University of Science & Technology; Chinese Academy of
   Sciences; Institute of Automation, CAS; ShanghaiTech University; Hong
   Kong Polytechnic University; University System of Ohio; Case Western
   Reserve University
RP Luo, XP (corresponding author), Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.; Luo, XP (corresponding author), Hong Kong Polytech Univ, Dept Comp, Hong Kong 44106, Peoples R China.
EM yulele08@gmail.com; haoyuwang@bupt.edu.cn; csxluo@comp.polyu.edu.hk;
   tazhang@must.edu.mo; kliu@nlpr.ia.ac.cn; chenjiachihk@163.com;
   sunmoonsky0001@gmail.com; csytang@comp.polyu.edu.hk;
   xusheng.xiao@case.edu
RI Wang, Haoyu/AAC-8649-2019; Tang, Yutian/L-8327-2019; Zhang,
   Tao/E-5634-2012; YU, Le/B-7784-2013; Zhou, Hao/AAH-7956-2020; Xiao,
   Xusheng/KIC-3760-2024; Chen, Jiachi/HOC-4256-2023
OI Wang, Haoyu/0000-0002-2124-3453; Tang, Yutian/0000-0001-5677-4564;
   Zhang, Tao/0000-0002-6272-4069; YU, Le/0000-0003-1227-1273; Zhou,
   Hao/0000-0002-0146-5518; Xiao, Xusheng/0000-0003-4797-4294; Yu,
   Le/0000-0003-1457-6329
FU Hong Kong RGC Projects [PolyU15223918, PolyU15224121]; HKPolyU Start-up
   Fund [BD7H]; National Natural Science Foundation of China [61972359,
   61831022]; Zhejiang Provincial Natural Science Foundation of China
   [LY19F020052]; National Science Foundation [CCF-2046953]
FX This work was supported in part by the Hong Kong RGC Projects under
   Grants PolyU15223918 and PolyU15224121, in part by HKPolyU Start-up Fund
   (BD7H), by the National Natural Science Foundation of China under Grants
   61972359 and 61831022, in part by the Zhejiang Provincial Natural
   Science Foundation of China under Grant LY19F020052, and in part by
   National Science Foundation https://doi.org/10.13039/100000001 under the
   Grant CCF-2046953.
CR A. M. Text Mining, 2017, WHAT AR N GRAMS
   Ahmed F., 2020, ANDROID NAMING CONVE
   Alon U., 2020, JAVA 14 M MODEL
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Android developer, 2017, ANDROID DEV COMMON I
   Android Developers, 2020, SOCK
   [Anonymous], 2006, PROC 5 INT C LANGUAG
   apkmonk.com, 2020, APKMONK ON STOP ALL
   APKPure.com, 2020, APKP
   App Brain, 2021, NUMB ANDR APPS GOOGL
   archive, 2020, STACK
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Ashutosh K. S., 2017, TOP 10 SITES ASK ALL
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Au Kathy Wain Yee, 2012, P 2012 ACM C COMP CO, P217
   Baeza-Yates R., 1999, Modern information retrieval
   Bakshi RK, 2016, PROCEEDINGS OF THE 10TH INDIACOM - 2016 3RD INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT, P452
   Bichsel B, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P343, DOI 10.1145/2976749.2978422
   Bird S., 2017, NATURAL LANGUAGE TOO
   Cao Y., 2015, PROC NETW DISTRIB SY
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Cavnar W. B., 1994, PROC 3 ANN S DOCUMEN
   Chen M., 2011, P 2011 ICONFERENCE I, P661, DOI DOI 10.1145/1940761.1940859
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Ciurumelea A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2017.7884612
   Continella A, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23465
   cpholguera, 2022, IOS TAMP REV ENG
   CSDN, 2019, US
   Curry D., 2021, Android statistics
   Damian J., 2021, BASIC IOS MOBILE APP
   De Marneffe M.-C., 2008, Stanford Typed Dependencies Manual
   Devarajan D., 2017, Retirement of AlchemyAPI service
   developer.apple, 2021, APPLE DEV DOCUMENTAT
   Di Sorbo A, 2021, PROC IEEE INT CONF S, P569, DOI 10.1109/ICSME52107.2021.00058
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Dnyanoba G., 2019, ADVERSATIVE COORDINA
   Elith J, 2008, J ANIM ECOL, V77, P802, DOI 10.1111/j.1365-2656.2008.01390.x
   F-Droid Limited and Contributors, 2020, F DROID
   Fan M, 2018, IEEE T INF FOREN SEC, V13, P1890, DOI 10.1109/TIFS.2018.2806891
   Fan M, 2017, IEEE T INF FOREN SEC, V12, P1772, DOI 10.1109/TIFS.2017.2687880
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Genc-Nayebi N, 2017, J SYST SOFTWARE, V125, P207, DOI 10.1016/j.jss.2016.11.027
   Gilleland M., 2017, LEVENSHTEIN DISTANCE
   github, 2018, CLASS DUMP GENERATE
   github, 2021, REPOSITORY WHERE2CHA
   GitHub Inc., 2020, GITH
   Goldberg Y, 2014, Arxiv, DOI [arXiv:1402.3722, DOI 10.48550/ARXIV.1402.3722]
   Gómez M, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P1, DOI 10.1109/MobileSoft.2015.8
   goo.gl, 2017, ANDROID DEV MANIFEST
   Google Code, 2017, WORD2VEC
   Google Developers, 2020, UI APPL EX MONK
   Grano G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P72, DOI 10.1109/SANER.2018.8330198
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   guardsquare, 2020, PROGUARD OP SOURC OP
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Huang JJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1036, DOI 10.1145/2568225.2568301
   Hung Y. Z., 2021, PYTHON 3 WRAPPER SEN
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   iBotPeaches, 2022, TOOL REVERSE ENG AND
   Jongeling R, 2015, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSM.2015.7332508
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Kong DG, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P530, DOI 10.1145/2810103.2813689
   Kowsari K, 2017, 2017 16TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P364, DOI 10.1109/ICMLA.2017.0-134
   Le Yu, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P538, DOI 10.1109/DSN.2016.55
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Liu B, 2011, DATA CENTRIC SYST AP, P459, DOI 10.1007/978-3-642-19460-3_11
   Liu SQ, 2022, IEEE T SOFTWARE ENG, V48, P1800, DOI 10.1109/TSE.2020.3038681
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   McBurney PW, 2016, IEEE T SOFTWARE ENG, V42, P103, DOI 10.1109/TSE.2015.2465386
   Mikolov T., 2013, P 2013 C N AM CHAPT
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   Minaee S, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3439726
   Nan YH, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P993
   NLP Stanford Group, 2020, STANF CORENLP
   Nordrum Amy, 2017, STRANGE ART WRITING
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Panichella S, 2020, INT REQUIR ENG CONF, P404, DOI 10.1109/RE48521.2020.00057
   Panichella S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1023, DOI 10.1145/2950290.2983938
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Park DH, 2015, SIGIR 2015: PROCEEDINGS OF THE 38TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P533, DOI 10.1145/2766462.2767759
   Pelloni L, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P522, DOI 10.1109/SANER.2018.8330252
   Vu PM, 2015, IEEE INT CONF AUTOM, P749, DOI 10.1109/ASE.2015.85
   Qian CX, 2015, IEEE MICRO, V35, P44, DOI 10.1109/MM.2015.25
   Qu ZY, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1354, DOI 10.1145/2660267.2660287
   Quora, 2015, WHAT ARE ADVANTAGES
   ribot.co.uk, 2020, PROJ GUID
   Rohatgi A, 2008, INT C PROGRAM COMPRE, P234, DOI 10.1109/ICPC.2008.35
   Rountev Atanas, 2014, P ANN IEEEACM INT S, P143
   S. N. Group, 2009, TF IDF WEIGHT
   Sadeghi A, 2017, IEEE T SOFTWARE ENG, V43, P492, DOI 10.1109/TSE.2016.2615307
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Sarif S., 2020, LINK INSIDE WEBPAGE
   Sentinel, 2021, US
   Singh A., 2018, CONJUNCTION
   sites.google, 2021, HOMEPAGE CHANGEADVIS
   Stack overflow, 2019, US
   stackoverflow, 2013, BEST PRACT DISPL ERR
   Teh Y, 2005, Adv. Neural Inf. Process. Syst., V17
   text-processing, 2021, PYTHON 3 WRAPPER SEN
   Thunes C., 2020, JAVALANG 0 13 0
   Uibutton, 2021, US
   Vallee-Rai R., 1999, Proceedings of the 1999 Conference of the Centre for Advanced Studies on Collaborative Research, CASCON'99, page, P13
   weakwire, 2020, CAN I CHECK ANDROID
   Wei ZH, 2009, INT J COMPUT INT SYS, V2, P365
   Xue L., 2017, PROC IEEE C COMPUT C, P1
   Xue L, 2017, PROC INT CONF SOFTW, P358, DOI 10.1109/ICSE.2017.40
   Yan D., 2020, GATOR PROGRAM ANAL T
   Yu L., 2015, P 5 ANN ACM CCS WORK, P39, DOI DOI 10.1145/2808117.2808125
   Yu L, 2018, IEEE T SOFTWARE ENG, V44, P834, DOI 10.1109/TSE.2017.2730198
   Yu L, 2018, I C DEPEND SYS NETWO, P418, DOI 10.1109/DSN.2018.00051
   Yu L, 2017, IEEE T INF FOREN SEC, V12, P865, DOI 10.1109/TIFS.2016.2639339
   Yu L, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P415, DOI 10.1109/SANER.2016.67
   Zhang T, 2021, IEEE T SOFTWARE ENG, V47, P2590, DOI 10.1109/TSE.2019.2956941
   Zhang T, 2017, INT C PROGRAM COMPRE, P230, DOI 10.1109/ICPC.2017.28
   Zhang YQ, 2015, LECT NOTES COMPUT SC, V9327, P293, DOI 10.1007/978-3-319-24177-7_15
   Zhao W, 2006, ACM T SOFTW ENG METH, V15, P195, DOI 10.1145/1131421.1131424
   Zhou Y, 2021, IEEE T SOFTWARE ENG, V47, P2755, DOI 10.1109/TSE.2020.2967383
   Zimmeck S, 2021, 28TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2021), DOI 10.14722/ndss.2021.24100
NR 123
TC 2
Z9 2
U1 3
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1464
EP 1486
DI 10.1109/TSE.2022.3178096
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Gu, SH
   Rong, GP
   Zhang, H
   Shen, HF
AF Gu, Shenghui
   Rong, Guoping
   Zhang, He
   Shen, Haifeng
TI Logging Practices in Software Engineering: A Systematic Mapping Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Logging practices; log; systematic mapping; empirical study
AB Background: Logging practices provide the ability to record valuable runtime information of software systems to support operations tasks such as service monitoring and troubleshooting. However, current logging practices face common challenges. On the one hand, although the importance of logging practices has been broadly recognized, most of them are still conducted in an arbitrary or ad-hoc manner, ending up with questionable or inadequate support to perform these tasks. On the other hand, considerable research effort has been carried out on logging practices, however, few of the proposed techniques or methods have been widely adopted in industry. Objective:This study aims to establish a comprehensive understanding of the research state of logging practices, with a focus on unveiling possible problems and gaps which further shed light on the potential future research directions. Method:We carried out a systematic mapping study on logging practices with 56 primary studies. Results:This study provides a holistic report of the existing research on logging practices by systematically synthesizing and analyzing the focus and inter-relationship of the existing research in terms of issues, research topics and solution approaches. Using 3W1H-Why to log, Where to log, What to log and How well is the logging-as the categorization standard, we find that: (1) the best known issues in logging practices have been repeatedly investigated; (2) the issues are often studied separately without considering their intricate relationships; (3) the Where and What questions have attracted the majority of research attention while little research effort has been made on the Why and How well questions; and (4) the relationships between issues, research topics, and approaches regarding logging practices appear many-to-many, which indicates a lack of profound understanding of the issues in practice and how they should be appropriately tackled. Conclusions:This study indicates a need to advance the state of research on logging practices. For example, more research effort should be invested on why to log to set the anchor of logging practices as well as on how well is the logging to close the loop. In addition, a holistic process perspective should be taken into account in both the research and the adoption related to logging practices.
C1 [Gu, Shenghui; Rong, Guoping; Zhang, He] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
   [Shen, Haifeng] Australian Catholic Univ, Peter Faber Business Sch, HilstLab, Sydney, NSW 2060, Australia.
C3 Nanjing University; Australian Catholic University
RP Rong, GP (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
EM shenghui.gu@smail.nju.edu.cn; ronggp@nju.edu.cn; hezhang@nju.edu.cn;
   haifeng.shen@acu.edu.au
RI Shen, Haifeng/HDN-6446-2022; Rong, Guoping/CAH-6145-2022
OI Shen, Haifeng/0000-0002-8221-981X; 
CR Aiken A, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P43, DOI 10.1145/1251535.1251543
   Alibaba, 2017, AL JAV COD GUID
   [Anonymous], 2008, 12 INT C EV ASS SOFT
   [Anonymous], 2008, PROC 1 USENIX C ANAL
   Baccanico F, 2014, 2014 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P10, DOI 10.1109/ISSREW.2014.69
   Barik T, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P92, DOI 10.1145/2889160.2889231
   Bartsch M, 2008, SOFTWARE QUAL J, V16, P23, DOI 10.1007/s11219-007-9022-7
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Boulon J., 2008, P CCA, V8, P1
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Cândido J, 2021, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.489
   Candido JB, 2021, Arxiv, DOI arXiv:1912.05878
   Chen BY, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3448976
   Chen BY, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P194, DOI 10.1109/ICSE-Companion.2019.00080
   Chong CN, 2003, INT FED INFO PROC, V122, P73
   Cinque M, 2008, PROC 1 INT WORKSHOP, P1
   Cois CA, 2014, IEEE INT PROF COMMUN
   Dunlap GW, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P211, DOI 10.1145/1060289.1060309
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Hartman GS, 2005, LECT NOTES COMPUT SC, V3585, P823, DOI 10.1007/11555261_65
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Jia T, 2018, IEEE INT SYMP SOFTW, P106, DOI 10.1109/ISSREW.2018.00-22
   Kadav A, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P59
   Kernighan B. W., 1999, The Practice of Programming, V1st
   Kim D, 2014, SECUR COMMUN NETW, V7, P1517, DOI 10.1002/sec.735
   King J, 2017, EMPIR SOFTW ENG, V22, P2684, DOI 10.1007/s10664-016-9449-1
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Lee G, 2012, PROC VLDB ENDOW, V5, P1771, DOI 10.14778/2367502.2367516
   Massonet P., 2011, 2011 IEEE International Symposium on Parallel & Distributed Processing, Workshops and Phd Forum, P1510, DOI 10.1109/IPDPS.2011.304
   Mi HB, 2013, IEEE T PARALL DISTR, V24, P1245, DOI 10.1109/TPDS.2013.21
   OverOps, 2017, COMPL GUID JAV LOGG
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pi A., 2019, PROC IEEE INT PARALL
   Puppet, 2021, 2021 STAT DEVOPS REP
   Rabkin Ariel., 2010, SLAML'10: Proceedings of the 2010 workshop on Managing systems via log analysis and machine learning techniques, P3
   Rong GP, 2017, ASIA PAC SOFWR ENG, P534, DOI 10.1109/APSEC.2017.61
   Royce W. W., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P328
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Sambasivan RR, 2016, PROCEEDINGS OF THE SEVENTH ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC 2016), P401, DOI 10.1145/2987550.2987568
   Schipper Daan, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P545, DOI 10.1109/MSR.2019.00081
   Shang WY, 2014, PROC IEEE INT CONF S, P21, DOI 10.1109/ICSME.2014.24
   Shang WY, 2015, EMPIR SOFTW ENG, V20, P1, DOI 10.1007/s10664-013-9274-8
   Shang WY, 2012, PROC INT CONF SOFTW, P1583, DOI 10.1109/ICSE.2012.6227031
   Skowronski J., 2017, 30 BEST PRACTICES LO
   Subhraveti Dinesh, 2011, Performance Evaluation Review, V39, P109, DOI 10.1145/2007116.2007129
   Sukmana MIH, 2018, 2018 32ND INTERNATIONAL CONFERENCE ON INFORMATION NETWORKING (ICOIN), P44, DOI 10.1109/ICOIN.2018.8343081
   Tal L., 2017, 9 LOGGING BEST PRACT
   Veeraraghavan K, 2012, ACM T COMPUT SYST, V30, DOI 10.1145/2110356.2110359
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Yavuz AA, 2009, 25TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, P219, DOI 10.1109/ACSAC.2009.28
   Yuan D, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P143
   Zhang CY, 2011, PROF GEOGR, V63, P262, DOI 10.1080/00330124.2010.547792
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhao X, 2017, PROCEEDINGS OF THE 16TH WORKSHOP ON HOT TOPICS IN OPERATING SYSTEMS (HOTOS 2017), P125, DOI 10.1145/3102980.3103001
NR 57
TC 3
Z9 3
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 902
EP 923
DI 10.1109/TSE.2022.3166924
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900024
OA hybrid
DA 2024-07-18
ER

PT J
AU Ren, RC
   Castro, JW
   Santos, A
   Dieste, O
   Acuña, ST
AF Ren, Ranci
   Castro, John W.
   Santos, Adrian
   Dieste, Oscar
   Acuna, Silvia T.
TI Using the SOCIO Chatbot for UML Modelling: A Family of Experiments
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Chatbots; family of experiments; usability; modelling
ID INDIVIDUAL PARTICIPANT DATA; METAANALYSIS; USABILITY; BENEFITS
AB Context: Recent developments in natural language processing have facilitated the adoption of chatbots in typically collaborative software engineering tasks (such as diagram modelling). Families of experiments can assess the performance of tools and processes and, at the same time, alleviate some of the typical shortcomings of individual experiments (e.g., inaccurate and potentially biased results due to a small number of participants). Objective: Compare the usability of a chatbot for collaborative modelling (i.e., SOCIO) and an online web tool (i.e., Creately). Method: We conducted a family of three experiments to evaluate the usability of SOCIO against the Creately online collaborative tool in academic settings. Results: The student participants were faster at building class diagrams using the chatbot than with the online collaborative tool and more satisfied with SOCIO. Besides, the class diagrams built using the chatbot tended to be more concise & mdash;albeit slightly less complete. Conclusion: Chatbots appear to be helpful for building class diagrams. In fact, our study has helped us to shed light on the future direction for experimentation in this field and lays the groundwork for researching the applicability of chatbots in diagramming.
C1 [Ren, Ranci; Acuna, Silvia T.] Univ Autonoma Madrid, Madrid 28049, Spain.
   [Castro, John W.] Univ Atacama, Copiapo 1532297, Chile.
   [Santos, Adrian] Univ Oulu, Oulu 90014, Finland.
   [Dieste, Oscar] Univ Politecn Madrid, Boadilla Del Monte 28660, Spain.
C3 Autonomous University of Madrid; Universidad de Atacama; University of
   Oulu; Universidad Politecnica de Madrid
RP Castro, JW (corresponding author), Univ Atacama, Copiapo 1532297, Chile.
EM ranci.ren@uam.es; john.castro@uda.cl; adrian.santos.parrilla@oulu.fi;
   odieste@fi.upm.es; silvia.acunna@uam.es
RI Dieste, Oscar/K-6193-2014; Acuna, Silvia/A-7395-2008
OI Dieste, Oscar/0000-0002-3060-7853; Acuna, Silvia/0000-0003-2135-6113;
   Castro, John W./0000-0002-7938-7564
FU Spanish Ministry of Science, Innovation and Universities
   [PGC2018-097265-B-I00, RTI2018-095255-B-I00]; Madrid Region Ramp;D
   programme [P2018/TCS-4314]; UAM's Research Ethics Committee
FX This work was supported in part by the Spanish Ministry of Science,
   Innovation and Universities research under Grant PGC2018-097265-B-I00,
   in partby MASSIVE under Grant RTI2018-095255-B-I00, and in part by the
   MadridRegion R & amp;D programme under Grant FORTE, P2018/TCS-4314.This
   work involved human subjects or animals in its research. Approval of
   allethical and experimental procedures and protocols was granted by
   UAM's Research Ethics Committee. Ethical Implications Questionnaire
   (Annex II)submitted along with the PhD research proposal. Approved.
   Applicable regula-tions are available at
   https://www.uam.es/uam/en/investigacion/comite-etica(Corresponding
   author: John W. Castro.)
CR Andrade HL, 2019, FRONT EDUC, V4, DOI 10.3389/feduc.2019.00087
   [Anonymous], 2011, ISO/IEC 25010:2011
   [Anonymous], 2018, ISO 9241-11:2018
   [Anonymous], 2018, 29148 ISOIECIEEE
   [Anonymous], 2002, Meta-Analysis of Controlled Clinical Trials
   Basili VR, 2007, LECT NOTES COMPUT SC, V4336, P33
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bass B., 1979, Organizational psychology, V2nd
   Begel A., 2010, Proceedings of the FSE/SDP workshop on Future of software engineering research, P33, DOI DOI 10.1145/1882362.1882370
   Bickmore T, 2021, J MULTIMODAL USER IN, V15, P131, DOI 10.1007/s12193-020-00350-y
   Biondi-Zoccai G., 2016, UMBRELLA REV EVIDENC
   Borenstein M., 2009, INTRO METAANALYSIS
   Brooke J., 1996, USABILITY EVALUATION, P189, DOI DOI 10.1201/9781498710411-35
   Brown H., 2014, Applied Mixed Models in Medicine
   Chen ML, 2018, COMPANION OF THE 23RD INTERNATIONAL CONFERENCE ON INTELLIGENT USER INTERFACES (IUI'18), DOI 10.1145/3180308.3180362
   Chung K, 2021, JMIR MED INF, V9, DOI 10.2196/18607
   Cooper H, 2009, PSYCHOL METHODS, V14, P165, DOI 10.1037/a0015565
   de Winter J, 2013, PRACTICAL ASSESSMENT, V18, P12, DOI DOI 10.7275/E4R6-DJ05
   Debray TPA, 2015, RES SYNTH METHODS, V6, P293, DOI 10.1002/jrsm.1160
   Divekar RR, 2019, LECT NOTES COMPUT SC, V11748, P760, DOI 10.1007/978-3-030-29387-1_44
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Dyer J.L., 1984, HUMAN FACTORS REV, P285
   Elsholz E, 2019, PROCEEDINGS OF THE 2019 CONFERENCE ON HUMAN INFORMATION INTERACTION AND RETRIEVAL (CHIIR'19), P301, DOI 10.1145/3295750.3298956
   Fergencs Tamas, 2021, Diversity, Divergence, Dialogue. 16th International Conference, iConference 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12645), P328, DOI 10.1007/978-3-030-71292-1_26
   Folstad Asbjorn, 2020, OzCHI '20: Proceedings of the 32nd Australian Conference on Human-Computer Interaction, P671, DOI 10.1145/3441000.3441046
   Franzago M, 2018, IEEE T SOFTWARE ENG, V44, P1146, DOI 10.1109/TSE.2017.2755039
   Giraldo FD, 2018, INFORM SYST, V77, P48, DOI 10.1016/j.is.2018.06.002
   Guichard J, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P55, DOI 10.1109/AITest.2019.000-7
   Guo JY, 2020, LECT NOTES ELECTR EN, V576, P695, DOI 10.1007/978-981-13-8779-1_79
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Håvik R, 2019, LECT NOTES COMPUT SC, V11551, P133, DOI 10.1007/978-3-030-17705-8_12
   Hornbæk K, 2006, INT J HUM-COMPUT ST, V64, P79, DOI 10.1016/j.ijhcs.2005.06.002
   Huff Earl W.  Jr., 2019, Learning and Collaboration Technologies. Ubiquitous and Virtual Environments for Learning and Collaboration. 6th International Conference, LCT 2019 Held as Part of the 21st HCI International Conference, HCII 2019. Proceedings: Lecture Notes in Computer Science (LNCS 11591), P80, DOI 10.1007/978-3-030-21817-1_7
   Panach JI, 2021, IEEE T SOFTWARE ENG, V47, P130, DOI 10.1109/TSE.2018.2884706
   Iovine A., 2020, PROC IEEE C EVOLVING, P1
   Jain Mohit, 2018, Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, V2, DOI 10.1145/3287048
   Jain M, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174042
   Jang S, 2021, INT J MED INFORM, V150, DOI 10.1016/j.ijmedinf.2021.104440
   Johnson D.W., 1994, Joining together: Group theory and group skills
   Katayama S, 2019, INT CONF AFFECT, DOI [10.1109/acii.2019.8925449, 10.1109/ACII.2019.8925449]
   Lanubile F, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.39
   Lee SY, 2020, INT J HUM-COMPUT INT, V36, P815, DOI 10.1080/10447318.2019.1693166
   Lim Yeji, 2020, Asia Pacific Journal of Information Systems, V30, P832
   Lyman Gary H, 2005, BMC Med Res Methodol, V5, P14, DOI 10.1186/1471-2288-5-14
   Narducci F, 2020, USER MODEL USER-ADAP, V30, P251, DOI 10.1007/s11257-019-09250-7
   Nguyen Q.N., 2018, AM C INF SYST 2018 D, P1
   Pérez-Soler S, 2018, IEEE SOFTWARE, V35, P48, DOI 10.1109/MS.2018.290101511
   Pérez-Soler S, 2017, IEEE INT CONF AUTOM, P723, DOI 10.1109/ASE.2017.8115683
   Pinheiro J., 2006, MIXED EFFECTS MODELS
   Ponathil A, 2020, J GENET COUNS, V29, P1081, DOI 10.1002/jgc4.1239
   Potdevin D, 2021, INT J HUM-COMPUT ST, V150, DOI 10.1016/j.ijhcs.2021.102612
   Ray D., 1995, TEAMING
   Ren RC, 2019, INT J SOFTW ENG KNOW, V29, P1673, DOI 10.1142/S0218194019400163
   Ren RZ, 2020, OCEANS-IEEE, DOI 10.1109/IEEECONF38699.2020.9389441
   Riley RD, 2010, BMJ-BRIT MED J, V340, DOI 10.1136/bmj.c221
   Santos A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09895-8
   Santos A, 2021, IEEE T SOFTWARE ENG, V47, P1742, DOI 10.1109/TSE.2019.2935720
   Santos A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09907-7
   Santos A, 2020, IEEE T SOFTWARE ENG, V46, P566, DOI 10.1109/TSE.2018.2864633
   Sinoo C, 2018, PATIENT EDUC COUNS, V101, P1248, DOI 10.1016/j.pec.2018.02.008
   Stewart LA, 2015, JAMA-J AM MED ASSOC, V313, P1657, DOI 10.1001/jama.2015.3656
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Storey MA., 2010, P FSE SDP WORKSH FUT, P359, DOI DOI 10.1145/1882362.1882435
   Vegas S, 2016, IEEE T SOFTWARE ENG, V42, P120, DOI 10.1109/TSE.2015.2467378
   West B.T., 2014, Linear mixed models a practical guide using statistical software, DOI 10.1201/b17198
   Zwakman DS, 2020, I C INF COMM TECH CO, P652, DOI 10.1109/ICTC49870.2020.9289550
   Zwakman Dilawar Shah, 2021, SN Comput Sci, V2, P28, DOI 10.1007/s42979-020-00424-4
NR 67
TC 2
Z9 2
U1 8
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 364
EP 383
DI 10.1109/TSE.2022.3150720
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA L1HD8
UT WOS:001020827200019
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Cai, HP
   Fu, XQ
AF Cai, Haipeng
   Fu, Xiaoqin
TI D<SUP>2</SUP>ABS: A Framework for Dynamic Dependence Analysis of
   Distributed Programs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Distributed system; program analysis; dependence analysis; dynamic
   analysis
ID IMPACT ANALYSIS; JAVA; MODEL
AB As modern software systems are increasingly developed for running in distributed environments, it is crucial to provide fundamental techniques such as dependence analysis for checking, diagnosing, and evolving those systems. However, traditional dependence analysis is either inapplicable or of very limited utility for distributed programs due to the decoupled components of these programs which run in concurrent processes at physically separated machines. Motivated by the need for dependence analysis of distributed software and the diverse cost-effectiveness needs of dependence-based applications, this paper presents D(2)ABS, a framework of dynamic dependence analysis for distributed programs. By partially ordering distributed method execution events and inferring causality from the ordered events, D(2)ABS computes method-level dependencies both within and across process boundaries. Further, by exploiting message-passing semantics across processes, and incorporating static dependencies and statement coverage within individual components, D(2)ABS offers three additional instantiations that trade efficiency for better precision. We present the design of the D(2)ABS framework and evaluate the four instantiations of D(2)ABS on distributed systems of various architectures and scales using our implementation for Java. Our empirical results show that D(2)ABS is significantly more effective than existing options while offering varying levels of cost-effectiveness tradeoffs. As our framework essentially computes whole-system run-time dependencies, it naturally empowers a range of other dependence-based applications.
C1 [Cai, Haipeng; Fu, Xiaoqin] Washington State Univ, Sch Elect Engn & Comp Sci, Pullman, WA 99164 USA.
C3 Washington State University
RP Cai, HP (corresponding author), Washington State Univ, Sch Elect Engn & Comp Sci, Pullman, WA 99164 USA.
EM haipeng.cai@wsu.edu; xiaoqin.fu@wsu.edu
RI FU, XIAOQIN/J-9331-2016; Cai, Haipeng/K-7802-2015
OI Cai, Haipeng/0000-0002-5224-9970
FU U.S. National Science Foundation(NSF) [CCF-1936522]; U.S. Department
   ofEnergy (DOE) [379101]
FX This work was supported in part by the U.S. National Science
   Foundation(NSF) under Grant CCF-1936522 and in part by the U.S.
   Department ofEnergy (DOE) via PNNL under Grant 379101.
CR Abrahamson J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P598, DOI 10.1145/2591062.2591134
   Acharya M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P746, DOI 10.1145/1985793.1985898
   [Anonymous], 1992, APPL MATH COMPUTER S
   Apache, 2015, ZOOKEEPER
   Apache, 2015, VOLD
   Apiwattanapong T, 2005, PROC INT CONF SOFTW, P432
   Arnold Robert S., 1996, Software Change Impact Analysis
   Artho C, 2013, IEEE INT CONF AUTOM, P169, DOI 10.1109/ASE.2013.6693077
   Attariyan M., 2010, P 9 USENIX S OP SYST, P1
   Baah GK, 2010, IEEE T SOFTWARE ENG, V36, P528, DOI 10.1109/TSE.2009.87
   Bamberg University, 2015, OP CHORD
   Barpanda SS, 2011, IET SOFTW, V5, P425, DOI 10.1049/iet-sen.2010.0141
   Bates S., 1993, Conference Record of the Twentieth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P384, DOI 10.1145/158511.158694
   Beschastnikh I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P468, DOI 10.1145/2568225.2568246
   Beszédes A, 2002, PROC IEEE INT CONF S, P12, DOI 10.1109/ICSM.2002.1167743
   Breech B, 2005, Ninth European Conference on Software Maintenance and Reengineering, Proceedings, P143, DOI 10.1109/CSMR.2005.1
   Cai H., 2014, ASE 2014 P 29 ACMIEE, P343
   Cai HP, 2016, Arxiv, DOI arXiv:1604.04638
   Cai HP, 2018, IEEE T SOFTWARE ENG, V44, P334, DOI 10.1109/TSE.2017.2692783
   Cai HP, 2016, J SYST SOFTWARE, V122, P311, DOI 10.1016/j.jss.2016.09.048
   Cai HP, 2016, IEEE INT CONF AUTOM, P344, DOI 10.1145/2970276.2970352
   Cai HP, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P231, DOI 10.1109/SANER.2015.7081833
   Cai HP, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2894751
   Cai HP, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P49, DOI 10.1109/QRS.2015.18
   Cai HP, 2015, J SYST SOFTWARE, V103, P248, DOI 10.1016/j.jss.2015.02.018
   Cheng JD, 1997, ADVANCES IN PARALLEL AND DISTRIBUTED COMPUTING - PROCEEDINGS, P370, DOI 10.1109/APDC.1997.574057
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Coulouris G F, 2011, Distributed Systems: Concepts and Design, V5th
   Dalton M, 2007, CONF PROC INT SYMP C, P482, DOI 10.1145/1273440.1250722
   de Souza CRB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1145/1368088.1368122
   Dean J., 2009, DESIGNS LESSONS ADVI, V1
   Do LNQ, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P307, DOI 10.1145/3092703.3092705
   Duesterwald E., 1993, Languages and Compilers for Parallel Computing. 5th International Workshop Proceedings, P497
   Eugster P, 2009, LECT NOTES COMPUT SC, V5653, P570, DOI 10.1007/978-3-642-03013-0_26
   Feng T, 2006, SNPD 2006: SEVENTH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ARTIFICIAL INTELLIGENCE, NETWORKING, AND PARALLEL/DISTRIBUTED COMPUTING, PROCEEDINGS, P43
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Fidge J, 1988, P 11 AUSTR COMP SCI, P56
   Flanagan C, 2005, ACM SIGPLAN NOTICES, V40, P110, DOI 10.1145/1047659.1040315
   Flann C., 2010, Addressing global change: a new agenda for botanic gardens. Fourth Global Botanic Gardens Congress, Dublin, Irish Republic, 13-18 June 2010, P1, DOI 10.1145/1806672.1806674
   Fu XQ, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3379345
   Fu XQ, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1566, DOI 10.1145/3368089.3417920
   Fu XQ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1115, DOI 10.1145/3338906.3341179
   Fu XQ, 2019, INT C PROGRAM COMPRE, P323, DOI 10.1109/ICPC.2019.00051
   GALLAGHER KB, 1991, IEEE T SOFTWARE ENG, V17, P751, DOI 10.1109/32.83912
   Garcia Joshua., 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, ESEC/FSE 2013, P367, DOI DOI 10.1145/2491411.2491462
   Giffhorn D, 2009, AUTOMAT SOFTW ENG, V16, P197, DOI 10.1007/s10515-009-0048-x
   GoogleCode, 2015, MULTICHAT
   Goswami D, 2001, LECT NOTES COMPUT SC, V1970, P15
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   HORWITZ S, 1992, 14TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING : PROCEEDINGS, P392
   Hunt P., 2010, 2010 USENIX ANN TECH, V8, P9
   Jackson D., 2000, 22 INT C SOFTW ENG F, P133, DOI DOI 10.1145/336512.336545
   Jayaram K., 2011, Proceedings of ACM International Conference on Distributed Event-Based System, P113
   Jian-Guang Lou, 2010, Operating Systems Review, V44, P91, DOI 10.1145/1740390.1740411
   Kamkar M, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P222, DOI 10.1109/ICSM.1995.526544
   Kemerlis VP, 2012, ACM SIGPLAN NOTICES, V47, P121, DOI 10.1145/2365864.2151042
   Kon F, 2000, IEEE CONCURR, V8, P26, DOI 10.1109/4434.824310
   Konuru R., 2000, Proceedings 14th International Parallel and Distributed Processing Symposium. IPDPS 2000, P219, DOI 10.1109/IPDPS.2000.845988
   Krinke J., 2003, Software Engineering Notes, V28, P178, DOI 10.1145/949952.940096
   Kunz T, 1997, COMPUT J, V40, P499, DOI 10.1093/comjnl/40.8.499
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Law J, 2003, PROC INT CONF SOFTW, P308, DOI 10.1109/ICSE.2003.1201210
   Li BX, 2013, SOFTW TEST VERIF REL, V23, P613, DOI 10.1002/stvr.1475
   Lindvall M, 1998, J SYST SOFTWARE, V43, P19, DOI 10.1016/S0164-1212(98)10019-5
   Livshits B, 2015, COMMUN ACM, V58, P44, DOI 10.1145/2644805
   Loyall J. P., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P282, DOI 10.1109/ICSM.1993.366934
   Masri W, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P23
   Mattern F., 1989, Parallel and Distributed Algorithms. Proceedings of the International Workshop, P215
   Mohapatra DP, 2006, J SYST SOFTWARE, V79, P1661, DOI 10.1016/j.jss.2006.01.009
   Muhl G., 2006, DISTRIBUTED EVENT BA
   Murphy G. C., 1996, ACM Transactions on Software Engineering and Methodology, V5, P262, DOI 10.1145/234426.234441
   Nanda MG, 2006, ACM T PROGR LANG SYS, V28, P1088, DOI 10.1145/1186632.1186636
   NETZER RHB, 1995, J SUPERCOMPUT, V8, P371, DOI 10.1007/BF01901615
   Maia MCO, 2010, EUR CON SFTWR MTNCE, P252, DOI 10.1109/CSMR.2010.48
   Oracle, 2015, JAV NIO
   Oracle, 2015, JAV SOCK I O
   Orso A, 2004, ACM T SOFTW ENG METH, V13, P199, DOI 10.1145/1018210.1018212
   Pani S., 2012, Proceedings of International Conference on Advances in Computing, P601
   Petrenko M, 2009, INT C PROGRAM COMPRE, P10, DOI 10.1109/ICPC.2009.5090023
   Pitt E., 2001, Java. rmi: The Remote Method Invocation Guide
   PODGURSKI A, 1990, IEEE T SOFTWARE ENG, V16, P965, DOI 10.1109/32.58784
   Popescu D., 2012, P 6 ACM INT C DISTR, P241, DOI [DOI 10.1145/2335484.2335511, 10.1145/2335484.2335511]
   Psarris K, 2004, IEEE T PARALL DISTR, V15, P196, DOI 10.1109/TPDS.2004.1264806
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Rovegård P, 2008, IEEE T SOFTWARE ENG, V34, P516, DOI 10.1109/TSE.2008.32
   Serebryany Konstantin, 2009, Proceedings of the Workshop on Binary Instrumentation and Applications, WBIA'09, P62, DOI DOI 10.1145/1791194.1791203
   Sharp M, 2006, IEEE T SOFTWARE ENG, V32, P664, DOI 10.1109/TSE.2006.93
   Siegel J., 2000, CORBA 3 Fundamentals and Programming
   Sinha S, 2001, ACM T SOFTW ENG METH, V10, P209, DOI 10.1145/367008.367022
   Sneed HM, 2001, PROC IEEE INT CONF S, P180, DOI 10.1109/ICSM.2001.972728
   SourceForge, 2015, NIOECHO
   Tao Yida, 2012, P ACM SIGSOFT 20 INT
   The Freenet team, 2015, FREE NETW
   Thrift A., 2017, Apache thrift
   Tragatschnig S., 2014, Proceedings of Annual ACM Symposium on Applied Computing, P763
   Vall ~ee-Rai R., 2010, CASCON 1 DECADE HIGH, P214, DOI DOI 10.1145/1925805.1925818
   Vice, 2018, XSOCKET
   Walpole RE., 2011, PROBABILITY STAT ENG, V9th
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Xiao JY, 2005, LECT NOTES COMPUT SC, V3756, P121
   Xu J. Qian, 2005, ACM SIGSOFT Software Engineering Notes, V30, P1, DOI [10.1145/1050849.1050865.36Y, DOI 10.1145/1050849.1050865]
   Yang Y, 2007, LECT NOTES COMPUT SC, V4595, P58
   Zhang ZG, 2003, PROC INT CONF SOFTW, P319
NR 104
TC 5
Z9 5
U1 9
U2 22
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 4733
EP 4761
DI 10.1109/TSE.2021.3124795
PG 29
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600002
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Niu, XT
   Sun, YJ
   Wu, HY
   Li, G
   Nie, CH
   Yu, L
   Wang, XY
AF Niu, Xintao
   Sun, Yanjie
   Wu, Huayao
   Li, Gang
   Nie, Changhai
   Yu, Lei
   Wang, Xiaoyin
TI Enhance Combinatorial Testing With Metamorphic Relations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Combinatorial testing; Merging; automated oracle; metamorphic relation;
   software testing
ID GENERATION; ALGORITHMS
AB Due to the effectiveness and efficiency in detecting defects caused by interactions of multiple factors, Combinatorial Testing (CT) has received considerable scholarly attention in the last decades. Despite numerous practical test case generation techniques being developed, there remains a paucity of studies addressing the automated oracle generation problem, which holds back the overall automation of CT. As a consequence, much human intervention is inevitable, which is time-consuming and error-prone. This costly manual task also restricts the application of higher testing strength, inhibiting the full exploitation of CT in industrial practice. To bridge the gap between test designs and fully automated test flows, and to extend the applicability of CT, this paper presents a novel CT methodology, named COMER, to enhance the traditional CT by accounting for Metamorphic Relations (MRs). COMER puts a high priority on generating pairs of test cases which match the input rules of MRs, i.e., the Metamorphic Group (MG), such that the correctness can be automatically determined by verifying whether the outputs of these test cases violate their MRs. As a result, COMER can not only satisfy the t-way coverage as what CT does, but also automatically check as many test oracle violations as possible. Several empirical studies conducted on 31 real-world software projects have shown that COMER increased the number of metamorphic groups by an average factor of 75.9 and also increased the failure detection rate by an average factor of 11.3, when compared with CT, while the overall number of test cases generated by COMER barely increased.
C1 [Niu, Xintao; Sun, Yanjie; Wu, Huayao; Li, Gang; Nie, Changhai] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Yu, Lei] Univ Texas Arlington, Dept Comp Sci & Engn, Arlington, TX 76019 USA.
   [Wang, Xiaoyin] Univ Texas San Antonio, Dept Comp Sci, San Antonio, TX 78249 USA.
C3 Nanjing University; University of Texas System; University of Texas
   Arlington; University of Texas System; University of Texas at San
   Antonio (UTSA)
RP Nie, CH (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
EM niuxintao@nju.edu.cn; yanjiesun@smail.nju.edu.cn; hywu@nju.edu.cn;
   lig@smaill.nju.edu.cn; changhainie@nju.edu.cn; ylei@cse.uta.edu;
   xiaoyin.wang@utsa.edu
RI Nie, Changhai/IWM-7504-2023
FU National Key Research and Development Program of China [2018YFB1003800];
   National Natural Science Foundation of China [62102176, 61902174,
   62072226]; Natural Science Foundation of Jiangsu Province [BK20190291];
   Information Technology Laboratory, National Institute of Standards and
   Technology [70NANB18H207]
FX This work was supported in part by the National Key Research and
   Development Program of China under Grant 2018YFB1003800, in part by the
   National Natural Science Foundation of China under Grants 62102176,
   61902174, and 62072226, in part by the Natural Science Foundation of
   Jiangsu Province under Grant BK20190291, and in part by Information
   Technology Laboratory, National Institute of Standards and Technology
   under Grant 70NANB18H207.
CR Abal I., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, ASE '14, P421
   Aggarwal M, 2018, ARAB J SCI ENG, V43, P483, DOI 10.1007/s13369-017-2631-y
   Al-Hajjaji M, 2019, SOFTW SYST MODEL, V18, P499, DOI 10.1007/s10270-016-0569-2
   Albonico M, 2017, IEEE INT CONF CLOUD, P383, DOI 10.1109/CLOUD.2017.56
   [Anonymous], CLOSEST PAIR POINTS
   [Anonymous], 2020, DIFFERENT ALGORITHMS
   [Anonymous], 2020, P VALUE VARIES ORDER
   [Anonymous], 2020, BUG PICTURE ROTATED
   Arcuri Andrea., 2011, ISSTA
   Bach J., 2004, P 22 PACIFIC NW SOFT, P180
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bartholomew R, 2013, 2013 8TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST (AST), P118, DOI 10.1109/IWAST.2013.6595802
   Barus A., 2008, PROC IFIP CENTRAL E, P246
   Bryce RC, 2007, SOFTW TEST VERIF REL, V17, P159, DOI 10.1002/stvr.365
   Calvagna A, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1797, DOI 10.1145/2695664.2695905
   Campos J, 2018, INFORM SOFTWARE TECH, V104, P207, DOI 10.1016/j.infsof.2018.08.010
   Cao YX, 2013, INT CONF QUAL SOFTW, P153, DOI 10.1109/QSIC.2013.43
   Carzaniga A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P931, DOI 10.1145/2568225.2568287
   Chen T., 2004, P 8 AS PAC ORCH C AP, P128
   Chen T.Y., 1998, Metamorphic testing: a new approach for generating next test cases
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Chen TY, 2001, P INT COMP SOFTW APP, P172, DOI 10.1109/CMPSAC.2001.960614
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen MB, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P394, DOI 10.1109/ISSRE.2003.1251061
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Colbourn C. J., 2007, CRC HDB COMBINATORIA
   Colbourn C.J., 2004, Le Matematiche, VLIX, P125
   Deng X, 2017, IEEE ICST WORKSHOP, P262, DOI 10.1109/ICSTW.2017.47
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   du Bousquet L, 2016, IEEE ICST WORKSHOP, P83, DOI 10.1109/ICSTW.2016.23
   Felbinger H, 2017, IEEE ICST WORKSHOP, P171, DOI 10.1109/ICSTW.2017.36
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Ghandehari LS, 2020, IEEE T SOFTWARE ENG, V46, P616, DOI 10.1109/TSE.2018.2865935
   Ghandehari LS, 2013, PROC INT SYMP SOFTW, P168, DOI 10.1109/ISSRE.2013.6698916
   Ghandehari LSG, 2013, IEEE ICST WORKSHOP, P362, DOI 10.1109/ICSTW.2013.47
   Gotlieb A, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P34, DOI 10.1109/CMPSAC.2003.1245319
   Guowei Dong, 2013, 2013 IEEE 4th International Conference on Software Engineering and Service Science (ICSESS), P193, DOI 10.1109/ICSESS.2013.6615286
   Guowei Dong, 2010, Proceedings of the 2010 IEEE/ACM International Conference on Web Intelligence-Intelligent Agent Technology - Workshops (WI-IAT 2010), P397, DOI 10.1109/WI-IAT.2010.101
   Hamill P., 2009, Unit Test Frameworks: Tools for High-quality Software Development
   Hartman A, 2004, DISCRETE MATH, V284, P149, DOI 10.1016/j.disc.2003.11.029
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Hu LH, 2020, EMPIR SOFTW ENG, V25, P2661, DOI 10.1007/s10664-019-09799-2
   Huang RB, 2012, P INT COMP SOFTW APP, P52, DOI 10.1109/COMPSAC.2012.15
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jia Y, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P540, DOI 10.1109/ICSE.2015.71
   Jiang MY, 2017, J SYST SOFTWARE, V126, P127, DOI 10.1016/j.jss.2016.04.002
   Jin H, 2015, P INT COMP SOFTW APP, P232, DOI 10.1109/COMPSAC.2015.79
   Kampel L, 2019, THEOR COMPUT SCI, V800, P107, DOI 10.1016/j.tcs.2019.10.019
   Kanewala U, 2016, SOFTW TEST VERIF REL, V26, P245, DOI 10.1002/stvr.1594
   Kanewala U, 2014, IEEE ICST WORKSHOP, P237, DOI 10.1109/ICSTW.2014.62
   Khalsa SK, 2014, PROC INT SYMP SOFTW, P323, DOI 10.1109/ISSRE.2014.15
   Krishnan R., 2007, ACM SIGSOFT Software Engineering Notes, V32, P1
   Kruse PM, 2016, IEEE ICST WORKSHOP, P75, DOI 10.1109/ICSTW.2016.11
   Kuhn D. R., 2015, PROC IEEE 8 INT C SO, P1
   Kuhn D. R., 2010, NIST SPECIAL PUB, V800, P800
   Kuhn DR, 2006, 30TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P153
   Kuhn R, 2008, CROSSTALK J DEFENSE, V21, P22
   Ledru Y, 2004, LECT NOTES COMPUT SC, V2984, P281
   Lei Y, 2013, INT CONF QUAL SOFTW, P212, DOI 10.1109/QSIC.2013.45
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Li XL, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P53, DOI 10.1109/QRS.2016.16
   Lin JK, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P212, DOI 10.1145/3338906.3338914
   Lin JK, 2015, IEEE INT CONF AUTOM, P494, DOI 10.1109/ASE.2015.61
   Liu H, 2014, IEEE T SOFTWARE ENG, V40, P4, DOI 10.1109/TSE.2013.46
   Lopez-Herrejon RE, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1255, DOI 10.1145/2576768.2598305
   Luo C, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1081, DOI 10.1145/3468264.3468622
   Luo CA, 2021, PROC INT CONF SOFTW, P201, DOI 10.1109/ICSE43902.2021.00030
   Mayer J, 2006, P INT COMP SOFTW APP, P475
   Medeiros F, 2016, PROC INT CONF SOFTW, P643, DOI 10.1145/2884781.2884793
   Mercan H, 2019, IEEE T SOFTWARE ENG, V45, P1270, DOI 10.1109/TSE.2018.2837759
   Murphy Christian, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P867
   Murphy C., 2010, CUCS03910, DOI [10.7916/D8BV7QGC/download, DOI 10.7916/D8BV7QGC/DOWNLOAD]
   Nie CH, 2013, INT CONF QUAL SOFTW, P284, DOI 10.1109/QSIC.2013.22
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Niu XT, 2020, IEEE T SOFTWARE ENG, V46, P141, DOI 10.1109/TSE.2018.2844259
   Niu X, 2013, IEEE ICST WORKSHOP, P271, DOI 10.1109/ICSTW.2013.38
   Nurmela KJ, 2004, DISCRETE APPL MATH, V138, P143, DOI 10.1016/S0166-218X(03)00291-9
   Papadakis M, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P1, DOI 10.1109/ICST.2014.11
   Prudhomme C., 2016, 6241 TASC LINA CNRS
   Raaphorst S, 2018, J COMB DES, V26, P417, DOI 10.1002/jcd.21602
   Sagi BR, 2017, QUAL ENG, V29, P745, DOI 10.1080/08982112.2017.1300919
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Shakya K., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P620, DOI 10.1109/ICST.2012.149
   Smith R, 2019, IEEE ICST WORKSHOP, P190, DOI 10.1109/ICSTW.2019.00051
   Su FH, 2015, 10TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST AST 2015, P55, DOI 10.1109/AST.2015.19
   Sun CA, 2014, FRONT COMPUT SCI-CHI, V8, P478, DOI 10.1007/s11704-014-3040-y
   Torres-Jimenez J, 2014, INT SYMP SYMB NUMERI, P20, DOI 10.1109/SYNASC.2013.10
   Triki T., 2013, THESIS U GRENOBLE EN
   Tzoref-Brill R, 2019, ADV COMPUT, V112, P79, DOI 10.1016/bs.adcom.2017.12.002
   Ukai H, 2019, IEEE ICST WORKSHOP, P260, DOI 10.1109/ICSTW.2019.00061
   Virtanen P, 2020, NAT METHODS, V17, P352, DOI 10.1038/s41592-020-0772-5
   Wang WH, 2011, I C DEPEND SYS NETWO, P269, DOI [10.1109/ICMTMA.2011.638, 10.1109/DSN.2011.5958225]
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   Wotawa F., 2018, P IEEE INT C SOFTW T, P348
   Wu HY, 2020, IEEE T SOFTWARE ENG, V46, P302, DOI 10.1109/TSE.2018.2852744
   Wu HY, 2015, IEEE T EVOLUT COMPUT, V19, P575, DOI 10.1109/TEVC.2014.2362532
   Xiaoyuan Xie, 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P1, DOI 10.1109/QSIC.2011.20
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Xie XY, 2013, INFORM SOFTWARE TECH, V55, P866, DOI 10.1016/j.infsof.2012.08.008
   Xu LM, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2018), P46, DOI 10.1145/3193977.3193978
   Zhang H., 2020, J PHYS C SERIES, V1650
   Zhang J., 2014, MATH CONSTRUCTION ME
   Zhang Z., 2011, P ACM 20 INT S SOFTW, P331
   Zhiqiang Zhang, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P587, DOI 10.1109/ICST.2012.145
NR 105
TC 1
Z9 1
U1 1
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 5007
EP 5029
DI 10.1109/TSE.2021.3131548
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600014
OA hybrid
DA 2024-07-18
ER

PT J
AU Pan, WF
   Ming, H
   Yang, ZJ
   Wang, T
AF Pan, Weifeng
   Ming, Hua
   Yang, Zijiang
   Wang, Tian
TI Comments on Using <i>k</i>k-Core Decomposition on Class Dependency
   Networks to Improve Bug Prediction Model's Practical Performance
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Effort-aware bug prediction; coreness; k-core; class dependency network;
   complex network
ID SOFTWARE
AB In a very recent paper by (Qu et al., 2021), the authors propose an effective equation, top-core, to improve the performance of effort-aware bug prediction models. A distinctive feature of top-core is that it takes into account the coreness of a class in a Class Dependency Network (CDN) when calculating the relative risk of a class to be buggy. In this comment, we show that Qu et al.'s paper contains three shortcomings that may influence the performance of top-core or even have the potential to lead to erroneous results. First, we show that the CDN that they use to calculate the coreness of classes is not very accurate, neglecting many important types of dependency relations between classes such as method call relation, access relation, and instantiates relation. Second, they trained a Logistic Regression model using the scikit-learn framework to predict the probability of a specific class to be buggy. It is actually an L2 regularized Logistic Regression model, which is dependent on the scale of the features. But they neglected to normalize the features, making the obtained results erroneous. Finally, the number of execution times (viz. 10 times in the paper of Qu et al.) they used to reduce the bias caused by the randomness (viz. random split of instances and the process to handle class-imbalance problem) in the experiments is too small to ensure that the obtained results converge to stable values; but they failed to signify the precision level of their results for comparison. In this comment, we provide solutions to the problems by using i) an improved CDN (ICDN) to represent the structure of software systems, ii) the z-score method to normalize the features, and iii) an adaptive mechanism to determine the number of execution times. In the experiments, we find that Qu et al.'s approach based on the Logistic Regression model does not perform significantly better than the state-of-the-art approach Ree, which is inconsistent with the conclusion in Qu et al.'s work. We also observe that replacing CDN with ICDN does improve the performance of Qu et al.'s approach.
C1 [Pan, Weifeng; Wang, Tian] Zhejiang Gongshang Univ, Sch Comp Sci & Informat Engn, Hangzhou 310018, Peoples R China.
   [Ming, Hua] Oakland Univ, Sch Engn & Comp Sci, Rochester, MI 48309 USA.
   [Yang, Zijiang] Xi An Jiao Tong Univ, Sch Comp Sci, Xian 710049, Shaanxi, Peoples R China.
   [Yang, Zijiang] GuardStrike Inc, Xian 710049, Shaanxi, Peoples R China.
C3 Zhejiang Gongshang University; Oakland University; Xi'an Jiaotong
   University
RP Pan, WF (corresponding author), Zhejiang Gongshang Univ, Sch Comp Sci & Informat Engn, Hangzhou 310018, Peoples R China.; Ming, H (corresponding author), Oakland Univ, Sch Engn & Comp Sci, Rochester, MI 48309 USA.
EM wfpan@zjgsu.edu.cn; ming@oakland.edu; zijiang@xjtu.edu.cn;
   wtaddiction@163.com
RI Pan, Weifeng/A-8649-2012
OI Pan, Weifeng/0000-0001-6355-1385
FU Natural Science Foundation of ZhejiangProvince [LY22F020007]; National
   Natural ScienceFoundation of China [62032010, 61832014]; Key RAMP;D
   Program of Zhejiang Province [2019C01004, 2019C03123]
FX This work was supported in part by the Natural Science Foundation of
   ZhejiangProvince under Grant LY22F020007, inpart by the National Natural
   ScienceFoundation of China under Grants 62032010 and 61832014, and in
   part by theKey R&D Program of Zhejiang Province under Grants 2019C01004
   and 2019C03123.
CR Agrawal Amritanshu, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE). Proceedings, P1050, DOI 10.1145/3180155.3180197
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Chaikalis T, 2015, IEEE T SOFTWARE ENG, V41, P582, DOI 10.1109/TSE.2014.2381249
   Chong CY, 2015, J SYST SOFTWARE, V110, P28, DOI 10.1016/j.jss.2015.08.014
   Costa LD, 2007, ADV PHYS, V56, P167, DOI 10.1080/00018730601170527
   Darcy DP, 2005, IEEE T SOFTWARE ENG, V31, P982, DOI 10.1109/TSE.2005.130
   Han J., 2006, DATA MINING CONCEPTS
   Hosmer DW, 2000, APPL LOGISTIC REGRES
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Li H, 2014, INT J SOFTW ENG KNOW, V24, P617, DOI 10.1142/S0218194014500235
   Ma WWY, 2016, INFORM SOFTWARE TECH, V69, P50, DOI 10.1016/j.infsof.2015.09.001
   Nguyen THD, 2010, PROC IEEE INT CONF S
   Pan WF, 2021, IEEE T SOFTWARE ENG, V47, P2272, DOI 10.1109/TSE.2019.2946357
   Pan WF, 2018, FUTURE GENER COMP SY, V83, P431, DOI 10.1016/j.future.2017.09.039
   Pan WF, 2018, FUTURE GENER COMP SY, V81, P188, DOI 10.1016/j.future.2017.10.006
   Qu Y, 2021, IEEE T SOFTWARE ENG, V47, P348, DOI 10.1109/TSE.2019.2892959
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 17
TC 5
Z9 5
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 5176
EP 5187
DI 10.1109/TSE.2022.3140599
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600024
OA hybrid
DA 2024-07-18
ER

PT J
AU Gorski, PL
   Möller, S
   Wiefling, S
   Lo Iacono, L
AF Gorski, Peter Leo
   Moeller, Sebastian
   Wiefling, Stephan
   Lo Iacono, Luigi
TI "I just looked for the solution!"On Integrating Security-Relevant
   Information in Non-Security API Documentation to Support Secure Coding
   Practices
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Documentation; Security; Software; Task analysis; Internet; Encoding;
   Usability; API documentation; content security policies; secure coding
   practices; developer centered security; usable security
ID EYE-TRACKING; DEVELOPERS; PATTERN; IMPACT
AB Software developers build complex systems using plenty of third-party libraries. Documentation is key to understand and use the functionality provided via the libraries' APIs. Therefore, functionality is the main focus of contemporary API documentation, while cross-cutting concerns such as security are almost never considered at all, especially when the API itself does not provide security features. Documentations of JavaScript libraries for use in web applications, e.g., do not specify how to add or adapt a Content Security Policy (CSP) to mitigate content injection attacks like Cross-Site Scripting (XSS). This is unfortunate, as security-relevant API documentation might have an influence on secure coding practices and prevailing major vulnerabilities such as XSS. For the first time, we study the effects of integrating security-relevant information in non-security API documentation. For this purpose, we took CSP as an exemplary study object and extended the official Google Maps JavaScript API documentation with security-relevant CSP information in three distinct manners. Then, we evaluated the usage of these variations in a between-group eye-tracking lab study involving N=49 participants. Our observations suggest: (1) Developers are focused on elements with code examples. They mostly skim the documentation while searching for a quick solution to their programming task. This finding gives further evidence to results of related studies. (2) The location where CSP-related code examples are placed in non-security API documentation significantly impacts the time it takes to find this security-relevant information. In particular, the study results showed that the proximity to functional-related code examples in documentation is a decisive factor. (3) Examples significantly help to produce secure CSP solutions. (4) Developers have additional information needs that our approach cannot meet. Overall, our study contributes to a first understanding of the impact of security-relevant information in non-security API documentation on CSP implementation. Although further research is required, our findings emphasize that API producers should take responsibility for adequately documenting security aspects and thus supporting the sensibility and training of developers to implement secure systems. This responsibility also holds in seemingly non-security relevant contexts.
C1 [Gorski, Peter Leo; Wiefling, Stephan; Lo Iacono, Luigi] H BRS Univ Appl Sci, Dept Comp Sci, Data & Applicat Secur Grp, D-53757 St Augustin, Germany.
   [Moeller, Sebastian] TU Berlin, Qual & Usabil Lab, D-10623 Berlin, Germany.
C3 Technical University of Berlin
RP Gorski, PL (corresponding author), H BRS Univ Appl Sci, Dept Comp Sci, Data & Applicat Secur Grp, D-53757 St Augustin, Germany.
EM peter.gorski@h-brs.de; sebastian.moeller@tu-berlin.de;
   stephan.wiefling@h-brs.de; luigi.lo_iacono@h-brs.de
RI Lo Iacono, Luigi/GNH-4189-2022
OI Wiefling, Stephan/0000-0001-7917-6065; Lo Iacono,
   Luigi/0000-0002-7863-0622; Moller, Sebastian/0000-0003-3057-0760
FU German Federal Ministry of Education and Research through Program
   Forschung an Fachhochschulen [13FH016IX6]
FX The authors would like to thank the anonymous reviewers for providing
   valuable feedback and all participants of this study for their
   participation. This work was supported by the German Federal Ministry of
   Education and Research through Program Forschung an Fachhochschulen
   under Grant 13FH016IX6.
CR Acar Y, 2017, P IEEE S SECUR PRIV, P154, DOI 10.1109/SP.2017.52
   Acar Y, 2017, PROCEEDINGS OF THIRTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY (SOUPS 2017), P81
   Acar Y, 2017, 2017 IEEE CYBERSECURITY DEVELOPMENT (SECDEV), P22, DOI 10.1109/SecDev.2017.17
   Acar Y, 2016, P IEEE S SECUR PRIV, P289, DOI 10.1109/SP.2016.25
   [Anonymous], 2017, TOP 10 MOST CRIT WEB
   [Anonymous], 2010, P 19 INT C WORLD WID, DOI [DOI 10.1145/1772690.1772784, 10.1145/1772690.1772784]
   [Anonymous], 2002, P PROGR WORKSH PSYCH
   [Anonymous], 2012, 20 IEEE INT C PROGR
   [Anonymous], CLICKJACKING
   Apple, DOC ARCH WHATS NEW S
   Assal H, 2018, PROCEEDINGS OF THE FOURTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, P281
   Bai W, 2019, 2019 IEEE SECURE DEVELOPMENT (SECDEV 2019), P34, DOI 10.1109/SecDev.2019.00016
   Balebako R, 2014, IEEE SECUR PRIV, V12, P55, DOI 10.1109/MSP.2014.70
   Barik T, 2017, PROC INT CONF SOFTW, P575, DOI 10.1109/ICSE.2017.59
   Bednarik R., 2006, Proceedings. ETRA 2006. Symposium on Eye Tracking Research and Applications, P125, DOI 10.1145/1117309.1117356
   Bednarik R, 2012, INT J HUM-COMPUT ST, V70, P143, DOI 10.1016/j.ijhcs.2011.09.003
   Bednarik Roman., 2005, CHI'05 Extended abstracts on human factors in computing systems, P1204, DOI DOI 10.1145/1056808.1056877
   Binkley D, 2013, EMPIR SOFTW ENG, V18, P219, DOI 10.1007/s10664-012-9201-4
   Busjahn Teresa, 2011, P 11 KOL CALL INT C, p1s9
   Cagiltay NE, 2013, J SYST SOFTWARE, V86, P2184, DOI 10.1016/j.jss.2013.03.106
   Calzavara S, 2018, ACM T WEB, V12, DOI 10.1145/3149408
   Calzavara S, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1365, DOI 10.1145/2976749.2978338
   Christakis M, 2016, IEEE INT CONF AUTOM, P332, DOI 10.1145/2970276.2970347
   Cimpanu C., HACKERS ARE COLLECTI
   CROSBY ME, 1990, COMPUTER, V23, P24, DOI 10.1109/2.48797
   Dayaratna A., IDCS WORLDWIDE DEV C
   De Smet B, 2014, SCI COMPUT PROGRAM, V79, P260, DOI 10.1016/j.scico.2012.01.004
   Deveria A., 2019, CAN I USE CONTENT SE
   Evans Data Corporation, WORLDW PROF DEV POP
   Fahl Sascha, 2013, P ACM SIGSAC C COMP, P49
   GO, GO PROGR LANG
   Google, ADD GOOGL MAP MARK Y
   Google, CHROM PLATF STAT
   Gorski PL, 2018, PROCEEDINGS OF THE TWELFTH INTERNATIONAL SYMPOSIUM ON HUMAN ASPECTS OF INFORMATION SECURITY & ASSURANCE (HAISA 2018), P170
   Gorski PL, 2018, PROCEEDINGS OF THE FOURTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, P265
   Green M, 2016, IEEE SECUR PRIV, V14, P40, DOI 10.1109/MSP.2016.111
   Hauser F, 2018, PROCEEDINGS OF THE 3RD EUROPEAN CONFERENCE OF SOFTWARE ENGINEERING EDUCATION (ECSEE), P39, DOI 10.1145/3209087.3209092
   Iacono LuigiLo., 2017, Proceedings of the 2nd European Workshop on Usable Security (EuroUSEC'17), DOI DOI 10.14722/EUROUSEC
   Inzunza Sergio, 2018, Trends and Advances in Information Systems and Technologies. Advances in Intelligent Systems and Computing (AISC 746), P229, DOI 10.1007/978-3-319-77712-2_22
   ITU, 2019, Measuring digital development: Facts and figures 2019
   Jacobsen C., SECURE HTTP MIDDLEWA
   Jeanmart S, 2009, INT SYMP EMP SOFTWAR, P69, DOI 10.1109/ESEM.2009.5316015
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   JUST MA, 1980, PSYCHOL REV, V87, P329, DOI 10.1037/0033-295X.87.4.329
   KRASNER GE, 1988, J OBJECT-ORIENT PROG, V1, P41
   Krüger S, 2017, IEEE INT CONF AUTOM, P931, DOI 10.1109/ASE.2017.8115707
   MDN Web Docs, CONT SEC POL BROWS C
   Meng Michael, 2019, Communication Design Quarterly Review, V7, P40, DOI 10.1145/3358931.3358937
   Meng M, 2018, Journal of Technical Writing and Communication, V48, P295, DOI [10.1177/0047281617721853, 10.1177/0047281617721853?journalCode=jtwa, DOI 10.1177/0047281617721853]
   Mindermann K., 2018, PROC 16 ANN C PRIVAC, P1
   Mindermann K, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P143, DOI 10.1109/QRS.2018.00028
   Nadi S, 2016, PROC INT CONF SOFTW, P935, DOI 10.1145/2884781.2884790
   Naiakshina A, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300370
   Naiakshina A, 2018, PROCEEDINGS OF THE FOURTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, P297
   Naiakshina A, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P311, DOI 10.1145/3133956.3134082
   OWASP, Cross Site Scripting Prevention Cheat Sheet
   OWASP, 2019, API SEC TOP 10 2019
   Patil Kailas, 2016, International Journal of Network Security, V18, P383
   Patil K., 2013, P S US PRIV SEC, P1
   Petrusel Razvan, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P224, DOI 10.1007/978-3-642-38709-8_15
   Playframework, PLAYFR CONT SEC POL
   Porras GC, 2010, EMPIR SOFTW ENG, V15, P493, DOI 10.1007/s10664-009-9125-9
   ProgrammableWeb, APIS SHOW FAST GROWT
   Ross J, Eyetracking: Is It Worth It?
   Roth S, 2020, 27TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2020), DOI 10.14722/ndss.2020.23046
   SALTZER JH, 1975, P IEEE, V63, P1278, DOI 10.1109/PROC.1975.9939
   Sharafi Z, 2020, EMPIR SOFTW ENG, V25, P3128, DOI 10.1007/s10664-020-09829-4
   Sharafi Z, 2015, ASIA PAC SOFWR ENG, P96, DOI 10.1109/APSEC.2015.53
   Sharafi Z, 2015, INFORM SOFTWARE TECH, V67, P79, DOI 10.1016/j.infsof.2015.06.008
   Sharafi Z, 2013, CONF PROC INT SYMP C, P33, DOI 10.1109/ICPC.2013.6613831
   Shard B., 2012, P S EYE TRACK RES AP, P381
   Sharif Bonita, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P196, DOI 10.1109/ICPC.2010.41
   Smith J, 2020, PROCEEDINGS OF THE SIXTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY (SOUPS 2020), P221
   Soh Z., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P163
   Stack Exchange, WELC INF SEC STACK E
   Stack Overflow, DEV SURV
   Tahaei M., 2019, PROC INT WORKSHOP SO, P27
   The European Parliament and the Council of the European Union, REF EU 2016 679 EUR
   Turner R., 2014, P S EYE TRACK RES AP, P231
   TVERSKY A, 1981, SCIENCE, V211, P453, DOI 10.1126/science.7455683
   Uddin G, 2015, IEEE SOFTWARE, V32, P68, DOI 10.1109/MS.2014.80
   Uwano H., 2005, Eye Tracking Research and Applications Symposium (ETRA), V2005, P133
   Weichselbaum L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1376, DOI 10.1145/2976749.2978363
   Weissbacher Michael, 2014, Research in Attacks, Intrusions and Defenses. 17th International Symposium (RAID 2014). Proceedings: LNCS 8688, P212, DOI 10.1007/978-3-319-11379-1_11
   West M., 2016, Content security policy level 2
   Wijayarathna Chamila, 2018, P 22 INT C EVALUATIO, P205, DOI [10.1145/3210459, DOI 10.1145/3210459]
   World Wide Web Consortium (W3C), CONT SEC POL LEV W3C
NR 87
TC 4
Z9 4
U1 1
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3467
EP 3484
DI 10.1109/TSE.2021.3094171
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500015
OA Green Accepted
DA 2024-07-18
ER

PT J
AU He, YZ
   Meng, GZ
   Chen, K
   Hu, XB
   He, JW
AF He, Yingzhe
   Meng, Guozhu
   Chen, Kai
   Hu, Xingbo
   He, Jinwen
TI Towards Security Threats of Deep Learning Systems: A Survey
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Deep learning; Security; Data models; Privacy; Predictive models;
   Training data; Deep learning; poisoning attack; adversarial attack;
   model extraction attack; model inversion attack
ID ATTACKS; PRIVACY; NOISE
AB Deep learning has gained tremendous success and great popularity in the past few years. However, deep learning systems are suffering several inherent weaknesses, which can threaten the security of learning models. Deep learning's wide use further magnifies the impact and consequences. To this end, lots of research has been conducted with the purpose of exhaustively identifying intrinsic weaknesses and subsequently proposing feasible mitigation. Yet few are clear about how these weaknesses are incurred and how effective these attack approaches are in assaulting deep learning. In order to unveil the security weaknesses and aid in the development of a robust deep learning system, we undertake an investigation on attacks towards deep learning, and analyze these attacks to conclude some findings in multiple views. In particular, we focus on four types of attacks associated with security threats of deep learning: model extraction attack, model inversion attack, poisoning attack and adversarial attack. For each type of attack, we construct its essential workflow as well as adversary capabilities and attack goals. Pivot metrics are devised for comparing the attack approaches, by which we perform quantitative and qualitative analyses. From the analysis, we have identified significant and indispensable factors in an attack vector, e.g., how to reduce queries to target models, what distance should be used for measuring perturbation. We shed light on 18 findings covering these approaches' merits and demerits, success probability, deployment complexity and prospects. Moreover, we discuss other potential security weaknesses and possible mitigation which can inspire relevant research in this area.
C1 [He, Yingzhe; Meng, Guozhu; Chen, Kai; Hu, Xingbo; He, Jinwen] Chinese Acad Sci, Inst Informat Engn, Beijing 100864, Peoples R China.
   [He, Yingzhe; Meng, Guozhu; Chen, Kai; Hu, Xingbo; He, Jinwen] Univ Chinese Acad Sci, Sch Cybersecur, Beijing 100864, Peoples R China.
C3 Chinese Academy of Sciences; Institute of Information Engineering, CAS;
   Chinese Academy of Sciences; University of Chinese Academy of Sciences,
   CAS
RP Meng, GZ (corresponding author), Chinese Acad Sci, Inst Informat Engn, Beijing 100864, Peoples R China.
EM heyingzhe@iie.ac.cn; mengguozhu@iie.ac.cn; chenkai@iie.ac.cn;
   huxingbo@iie.ac.cn; hejinwen@iie.ac.cn
RI pillar, pillar/AIA-8371-2022
FU National Key Research and Development Program of China [2020AAA0140001];
   Beijing Natural Science Foundation [JQ18011]; NSFC [U1836211, 61902395];
   National Top-notch Youth Talents Program of China, Youth Innovation
   Promotion Association CAS, Beijing Nova Program, National Frontier
   Science and Technology Innovation Project [YJKYYQ20170070]; Beijing
   Academy of Artificial Intelligence (BAAI); CCF-Tencent Open Fund
FX We thank all the anonymous reviewers for their constructive feedback and
   Matthew Patrick for his proofreading. This work was supported in part by
   the National Key Research and Development Program of China under Grant
   No.2020AAA0140001, Beijing Natural Science Foundation (No.JQ18011), NSFC
   (No. U1836211 and 61902395), National Top-notch Youth Talents Program of
   China, Youth Innovation Promotion Association CAS, Beijing Nova Program,
   National Frontier Science and Technology Innovation Project
   (No.YJKYYQ20170070), Beijing Academy of Artificial Intelligence (BAAI),
   and CCF-Tencent Open Fund.
CR Abadi M, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P308, DOI 10.1145/2976749.2978318
   Aggarwal A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P625, DOI 10.1145/3338906.3338937
   Akhtar N, 2018, PROC CVPR IEEE, P3389, DOI 10.1109/CVPR.2018.00357
   Akhtar N, 2018, IEEE ACCESS, V6, P14410, DOI 10.1109/ACCESS.2018.2807385
   Al-Dujaili A, 2018, 2018 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2018), P76, DOI 10.1109/SPW.2018.00020
   Alfeld S, 2016, AAAI CONF ARTIF INTE, P1452
   Amodei Dario, 2016, CONCRETE PROBLEMS AI
   Anderson G, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P731, DOI 10.1145/3314221.3314614
   [Anonymous], 2019, MICROSOFT KAGGLE DAT
   [Anonymous], 2017, ImageNet Dataset
   [Anonymous], 2019, IMDB REV DATASET
   [Anonymous], 2019, GTSRB DATASET
   [Anonymous], 2019, Human bias and discrimination in AI systems
   [Anonymous], 2018, GEN DATA PROTECTION
   [Anonymous], 2019, MOZILLA COMMON VOICE
   [Anonymous], 2019, IJB A DATASET
   [Anonymous], 2016, DREBIN DATASET
   Ateniese Giuseppe, 2015, International Journal of Security and Networks, V10, P137
   Athalye A, 2018, PR MACH LEARN RES, V80
   Awad A., 2019, EDBT, P622
   Bae H., 2018, ABS180711655
   Bagdasaryan E, 2020, PR MACH LEARN RES, V108, P2938
   Baluja S, 2018, AAAI CONF ARTIF INTE, P2687
   Baracaldo N, 2017, P 10 ACM WORKSHOP AR, P103, DOI [10.1145/3128572.3140450, DOI 10.1145/3128572.3140450]
   Barreno M, 2010, MACH LEARN, V81, P121, DOI 10.1007/s10994-010-5188-5
   Bassily R, 2014, ANN IEEE SYMP FOUND, P464, DOI 10.1109/FOCS.2014.56
   Beal V., 2018, WHAT IS STRUCTURED D
   Bengio S, 2016, ARXIV
   Bhagoji AN, 2019, PR MACH LEARN RES, V97
   Bhattad A., 2020, PROC INT C LEARN REP
   Biggio B., 2012, ARXIV12066389, P1467
   Biggio B., 2013, P ACM WORKSH ART INT, P87, DOI DOI 10.1145/2517312.2517321
   Bojchevski A., 2019, P INT C MACH LEARN, P695
   Borgesius F. Z., 2018, Discrimination, artificial intelligence, and algorithmic decisionmaking
   Br_uckner M., 2009, Advances in neural information processing systems, P171
   Bubeck S, 2019, PR MACH LEARN RES, V97
   Buckman J., 2018, INT C LEARN REPR
   Buolamwini J., 2018, P 1 C FAIRNESS ACCOU, P77
   Burkard C., 2017, P 3 ACM INT WORKSH S, P31
   Candès EJ, 2011, J ACM, V58, DOI 10.1145/1970392.1970395
   Cao XY, 2017, ANN COMPUT SECURITY, P278, DOI 10.1145/3134600.3134606
   Cao YZ, 2015, P IEEE S SECUR PRIV, P463, DOI 10.1109/SP.2015.35
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Carlini N, 2018, 2018 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2018), P1, DOI 10.1109/SPW.2018.00009
   Chakarov A., 2016, ABS160307292
   Chaudhuri K., 2008, Advances in neural information processing systems, P289
   Chen H., 2019, P MACHINE LEARNING R, P1122
   Chen PY, 2018, AAAI CONF ARTIF INTE, P10
   Chen Pin-Yu, 2020, 8 INT C LEARNING REP
   Chen Y., 2013, ABS13012725
   Cheng Minhao, 2019, P 7 INT C LEARN REPR
   Cheng SY, 2019, ADV NEUR IN, V32
   Cheng Y, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P4324
   Co KT, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P275, DOI 10.1145/3319535.3345660
   Correia-Silva JR, 2018, IEEE IJCNN
   Devlin J., 2018, BERT PRE TRAINING DE
   Dohmatob E., 2019, INT C MACHINE LEARNI, P1646
   Dong YP, 2019, PROC CVPR IEEE, P4307, DOI 10.1109/CVPR.2019.00444
   Dong YP, 2018, PROC CVPR IEEE, P9185, DOI 10.1109/CVPR.2018.00957
   Dowlin N, 2016, PR MACH LEARN RES, V48
   Du XN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P477, DOI 10.1145/3338906.3338954
   Dwork C, 2006, LECT NOTES COMPUT SC, V4004, P486
   Dwork C, 2006, LECT NOTES COMPUT SC, V3876, P265, DOI 10.1007/11681878_14
   Engstrom L, 2019, PR MACH LEARN RES, V97
   Fang MH, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P1623
   Feng JS, 2014, ADV NEUR IN, V27
   Fredrikson M, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1322, DOI 10.1145/2810103.2813677
   Ganju K, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P619, DOI 10.1145/3243734.3243834
   Gao J, 2018, 2018 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2018), P50, DOI 10.1109/SPW.2018.00016
   Gao YS, 2019, 35TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSA), P113, DOI 10.1145/3359789.3359790
   Gehr T, 2018, P IEEE S SECUR PRIV, P3, DOI 10.1109/SP.2018.00058
   Gleave A., 2020, P INT C LEARN REPR, P1
   Gong Y., 2017, CoRR
   Gong Y, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4672
   Goodfellow I. J., 2014, ABS14126572
   Gu S., 2015, 3 INT C LEARN REPR I
   Gu TY, 2019, IEEE ACCESS, V7, P47230, DOI 10.1109/ACCESS.2019.2909068
   Guo C., 2018, ABS180908758
   Guo Chuan, 2017, INT C LEARN REPR
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   Hagestedt I, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23064
   Hamilton I. A, AMAZON BUILT TOOL HI
   Hamm J, 2016, PR MACH LEARN RES, V48
   Hasan R., 2009, P 7 USENIX C FIL STO, P1
   Hayes J., 2017, ABS170507663
   Hayes J, 2018, 2018 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2018), P43, DOI 10.1109/SPW.2018.00015
   He W., 2018, P INT C LEARN REPR
   He ZC, 2019, 35TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSA), P148, DOI 10.1145/3359789.3359824
   Hitaj B, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P603, DOI 10.1145/3133956.3134012
   Hu W., 2017, PROC WORKSHOPS 32 AA, P245
   Hu W., ABS170205983
   Hua WZ, 2018, DES AUT CON, DOI 10.1145/3195970.3196105
   Huang R., 2015, ABS151103034
   Huang S. H., 2017, ABS170202284
   Huang XW, 2020, COMPUT SCI REV, V37, DOI 10.1016/j.cosrev.2020.100270
   Hynes N., 2018, ABS180706689
   Ilyas A., 2017, ABS171207113
   Ilyas A., 2018, PR MACH LEARN RES, P2137
   Jagielski M, 2018, P IEEE S SECUR PRIV, P19, DOI 10.1109/SP.2018.00057
   Jan S, 2019, IEEE T SOFTWARE ENG, V45, P335, DOI 10.1109/TSE.2017.2778711
   Jang U, 2017, ANN COMPUT SECURITY, P262, DOI 10.1145/3134600.3134635
   Jang Y, 2019, IEEE I CONF COMP VIS, P2740, DOI 10.1109/ICCV.2019.00283
   Jia JY, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P259, DOI 10.1145/3319535.3363201
   Jiang XQ, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P1209, DOI 10.1145/3243734.3243837
   Joulin A., 2017, P 15 C EUR CHAPT ASS, P427, DOI DOI 10.18653/V1/E17-2068
   Juuti M, 2019, 2019 4TH IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P), P512, DOI 10.1109/EuroSP.2019.00044
   Juvekar C, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1651
   Kantchelian A., 2013, Proceedings of the 2013 ACM workshop on Artificial intelligence and security, P99
   Katz G, 2017, ELECTRON P THEOR COM, P19, DOI 10.4204/EPTCS.257.3
   Kesarwani M, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P371, DOI 10.1145/3274694.3274740
   Kifer D., 2012, P 25 ANN C LEARN THE
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Kos J, 2018, 2018 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2018), P36, DOI 10.1109/SPW.2018.00014
   Kou C., 2020, PROC INT C LEARN REP
   Kreuk F., 2018, DECEIVING END TO END
   Krizhevsky A., 2019, CIFAR DATASET
   Kurakin A., 2016, ABS161101236
   Kurita K, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P2793
   LeCun Yann., 2017, Mnist dataset
   Lecuyer M, 2019, P IEEE S SECUR PRIV, P656, DOI 10.1109/SP.2019.00044
   Lee T., 2018, ABS180600054
   Li JF, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23138
   Li JCB, 2019, PR MACH LEARN RES, V97
   Li LY, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4711
   Li PC, 2018, IEEE DATA MINING, P1200, DOI 10.1109/ICDM.2018.00159
   Li SS, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23202
   Li Y., 2020, PROC INT C LEARN REP
   Liang Bin., 2017, Detecting Adversarial Examples in Deep Networks with Adaptive Noise Reduction"
   Light R., 2018, TRENDS MACHINE LEARN
   Liu C., 2019, PROC INT C MACH LEAR, P4072
   Liu CH, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2994
   Liu CF, 2017, DES AUT TEST EUROPE, P91, DOI 10.23919/DATE.2017.7926964
   Liu Fang, 2019, PMLR
   Liu H, 2019, IEEE I CONF COMP VIS, P2941, DOI 10.1109/ICCV.2019.00303
   Liu J, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P619, DOI 10.1145/3133956.3134056
   Liu K. S., 2018, ABS180509898
   Liu Q, 2018, IEEE ACCESS, V6, P12103, DOI 10.1109/ACCESS.2018.2805680
   Liu XQ, 2019, ADV NEUR IN, V32
   Liu YQ, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1265, DOI 10.1145/3319535.3363216
   Liu YQ, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23291
   Liu YJ, 2019, IEEE I CONF COMP VIS, P4889, DOI 10.1109/ICCV.2019.00499
   Liu ZH, 2019, PROC CVPR IEEE, P860, DOI 10.1109/CVPR.2019.00095
   Long Y., 2018, ABS180204889
   Lyle J., 2010, PROC 2 WORKSHOP THEO
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma S., 2019, 26 ANN NETW DISTR, DOI DOI 10.14722/ndss.2019.23415
   Ma X., 2018, ABS180102613
   Madry A., 2018, ARXIV
   Mahloujifar S., 2019, P INT C MACHINE LEAR, P4274
   McCoyd M, 2018, 2018 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2018), P96, DOI 10.1109/SPW.2018.00023
   Mei SK, 2015, AAAI CONF ARTIF INTE, P2871
   Melis L, 2019, P IEEE S SECUR PRIV, P691, DOI 10.1109/SP.2019.00029
   Meng DY, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P135, DOI 10.1145/3133956.3134057
   Moosavi-Dezfooli SM, 2017, PROC CVPR IEEE, P86, DOI 10.1109/CVPR.2017.17
   Moosavi-Dezfooli SM, 2016, PROC CVPR IEEE, P2574, DOI 10.1109/CVPR.2016.282
   Mummadi CK, 2019, IEEE I CONF COMP VIS, P4927, DOI 10.1109/ICCV.2019.00503
   Munoz-Gonzalez L., 2017, PROC 10 ACMWORKSHOP, P27, DOI 10.1145/3128572.3140451
   Narodytska N, 2017, IEEE COMPUT SOC CONF, P1310, DOI 10.1109/CVPRW.2017.172
   Naseer M, 2019, ADV NEUR IN, V32
   Nasr M, 2019, P IEEE S SECUR PRIV, P739, DOI 10.1109/SP.2019.00065
   Nasr M, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P634, DOI 10.1145/3243734.3243855
   Nelson B., 2008, P 1 US WORKSH LARG S, P1
   Phan N, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4753
   Oh S. J., 2018, P 6 INT C LEARN REPR
   Ohrimenko O, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P619
   Olufowobi H, 2017, LECT NOTES COMPUT SC, V10380, P85, DOI 10.1007/978-3-319-68136-8_8
   Orekondy T., 2020, PROC INT C LEARN REP
   Orekondy T, 2019, PROC CVPR IEEE, P4949, DOI 10.1109/CVPR.2019.00509
   Ossia S. A., 2017, ABS170302952
   Pan R, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1238, DOI 10.1145/3338906.3342502
   Pang T., 2017, ABS170600633
   Papernot N., 2016, ABS160507277
   Papernot N., 2016, ABS160705113
   Papernot N, 2018, 2018 3RD IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P 2018), P399, DOI 10.1109/EuroSP.2018.00035
   Papernot N, 2017, PROCEEDINGS OF THE 2017 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIA CCS'17), P506, DOI 10.1145/3052973.3053009
   Papernot N, 2016, IEEE MILIT COMMUN C, P49, DOI 10.1109/MILCOM.2016.7795300
   Papernot N, 2016, P IEEE S SECUR PRIV, P582, DOI 10.1109/SP.2016.41
   Papernot N, 2016, 1ST IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY, P372, DOI 10.1109/EuroSP.2016.36
   Pascanu R, 2015, INT CONF ACOUST SPEE, P1916, DOI 10.1109/ICASSP.2015.7178304
   Phong L. T., 2018, CORR
   Phong LT, 2018, IEEE T INF FOREN SEC, V13, P1333, DOI 10.1109/TIFS.2017.2787987
   Pouyanfar S, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3234150
   Pyrgelis A, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23183
   Qiao XM, 2019, ADV NEUR IN, V32
   Qin Y, 2019, PR MACH LEARN RES, V97
   Ranjan A, 2019, IEEE I CONF COMP VIS, P2404, DOI 10.1109/ICCV.2019.00249
   Reich D, 2019, ADV NEURAL INFORM PR, P3757
   Ren SH, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P1085
   Rigaki M, 2018, 2018 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2018), P70, DOI 10.1109/SPW.2018.00019
   Rivest Ronald L., 1978, Found. Secure Comput., V4, P169
   Romagnoli R, 2019, P AMER CONTR CONF, P384, DOI 10.23919/acc.2019.8814483
   Ros AS, 2018, AAAI CONF ARTIF INTE, P1660
   Rosenberg I., 2018, ABS180408778
   Rosenberg I, 2018, LECT NOTES COMPUT SC, V11050, P490, DOI 10.1007/978-3-030-00470-5_23
   Sablayrolles A, 2019, PR MACH LEARN RES, V97
   Salem A, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P1291
   Salem A, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23119
   Sato M, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P204
   Shafahi A, 2018, ADV NEUR IN, V31
   Sharif M, 2018, IEEE COMPUT SOC CONF, P1686, DOI 10.1109/CVPRW.2018.00211
   Shokri R, 2017, P IEEE S SECUR PRIV, P3, DOI 10.1109/SP.2017.41
   Shokri R, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1310, DOI 10.1145/2810103.2813687
   Simon-Gabriel C., 2019, ICML, P5809
   Song CZ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P587, DOI 10.1145/3133956.3134077
   Song LW, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P241, DOI 10.1145/3319535.3354211
   Song S, 2013, IEEE GLOB CONF SIG, P245, DOI 10.1109/GlobalSIP.2013.6736861
   Song Y., 2017, ABS171010766
   Stasinopoulos A, 2019, INT J INF SECUR, V18, P49, DOI 10.1007/s10207-018-0399-z
   Steinhardt J, 2017, ADV NEUR IN, V30
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Sun Z., 2019, ABS191107963
   Szegedy C., 2013, ABS13126199
   Talwar K., 2014, ABS14115417
   Tassa T, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4774
   Tian SX, 2018, AAAI CONF ARTIF INTE, P4139
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Tram~er F., 2017, ABS170403453
   Tramer F., 2017, ABS170507204
   Tramèr F, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P601
   Truex S., 2018, ABS180709173
   Veale M, 2018, PHILOS T R SOC A, V376, DOI 10.1098/rsta.2018.0083
   VITTER JS, 1985, ACM T MATH SOFTWARE, V11, P37, DOI 10.1145/3147.3165
   Wagh S., 2018, IACR Cryptol. ePrint Arch., V2018
   Wang BH, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P2023, DOI 10.1145/3319535.3354206
   Wang BH, 2018, P IEEE S SECUR PRIV, P36, DOI 10.1109/SP.2018.00038
   Wang BL, 2019, P IEEE S SECUR PRIV, P707, DOI 10.1109/SP.2019.00031
   Wang D, 2017, ADV NEUR IN, V30
   Wang DL, 2019, PR MACH LEARN RES, V97
   Wang J., 2018, ABS180505010
   Wang JY, 2019, IEEE I CONF COMP VIS, P6628, DOI 10.1109/ICCV.2019.00673
   Wang JY, 2019, PROC INT CONF SOFTW, P1245, DOI 10.1109/ICSE.2019.00126
   Wang SQ, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1599
   Wang X., 2012, MATER RES LETT, P1, DOI [DOI 10.1007/S11046-011-9484-9, 10.1155/2012/460430, DOI 10.1155/2012/460430]
   Wang Y., 2018, ABS180808994
   Wei XX, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P954
   Weng TW, 2019, 36 INT C MACHINE LEA, V97
   Wenyi Huang, 2016, Detection of Intrusions and Malware, and Vulnerability Assessment. 13th International Conference, DIMVA 2016. Proceedings: LNCS 9721, P399, DOI 10.1007/978-3-319-40667-1_20
   Wong E., 2020, INT C LEARN REPR
   Wu HJ, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4816
   Xi ZH, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P1523
   Xia Q, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4824
   Xiao H, 2012, FRONT ARTIF INTEL AP, V242, P870, DOI 10.3233/978-1-61499-098-7-870
   Xiao H, 2015, PR MACH LEARN RES, V37, P1689
   Xiao H, 2015, NEUROCOMPUTING, V160, P53, DOI 10.1016/j.neucom.2014.08.081
   Xiao QX, 2018, 2018 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2018), P123, DOI 10.1109/SPW.2018.00027
   Xie C., 2017, ABS171101991
   Xie CH, 2019, PROC CVPR IEEE, P2725, DOI 10.1109/CVPR.2019.00284
   Xie PC, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4831
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Xu KD, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3961
   Xu LH, 2018, 2018 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P463, DOI 10.1109/QRS-C.2018.00085
   Xu WL, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23198
   Yakura H, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5334
   Yan Z, 2019, ADV NEUR IN, V32
   Yang YZ, 2019, PR MACH LEARN RES, V97
   Yang ZQ, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P225, DOI 10.1145/3319535.3354261
   Yao A. C., 1982, 23rd Annual Symposium on Foundations of Computer Science, P160, DOI 10.1109/SFCS.1982.38
   Yao YS, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P2041, DOI 10.1145/3319535.3354209
   Ye SK, 2019, IEEE I CONF COMP VIS, P111, DOI 10.1109/ICCV.2019.00020
   You W, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2139, DOI 10.1145/3133956.3134085
   Yu L, 2019, P IEEE S SECUR PRIV, P332, DOI 10.1109/SP.2019.00019
   Yuan XJ, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P49
   Zang Y., 2020, P 58 ANN M ASS COMPU, P6066
   Zantedeschi V, 2017, P 10 ACM WORKSH ART, P39
   Zeng XH, 2019, PROC CVPR IEEE, P4297, DOI 10.1109/CVPR.2019.00443
   Zhang HC, 2019, ADV NEUR IN, V32
   Zhang HT, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4853
   Zhang HZ, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P5564
   Zhang JQ, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3922
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang T., 2018, ABS180701860
   Zhang T, 2016, AISEC'16: PROCEEDINGS OF THE 2016 ACM WORKSHOP ON ARTIFICIAL INTELLIGENCE AND SECURITY, P129, DOI 10.1145/2996758.2996762
   Zhao Y, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1989, DOI 10.1145/3319535.3354259
   Zheng WT, 2019, P IEEE S SECUR PRIV, P724, DOI 10.1109/SP.2019.00045
   Zou W, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P3486
   Zügner D, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P6246, DOI 10.1145/3219819.3220078
NR 277
TC 33
Z9 37
U1 6
U2 33
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2022
VL 48
IS 5
BP 1743
EP 1770
DI 10.1109/TSE.2020.3034721
PG 28
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 1I8CJ
UT WOS:000797454000018
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Li, ML
   Turrini, A
   Hahn, EM
   She, ZK
   Zhang, LJ
AF Li, Meilun
   Turrini, Andrea
   Hahn, Ernst Moritz
   She, Zhikun
   Zhang, Lijun
TI Probabilistic Preference Planning Problem for Markov Decision Processes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Planning; Markov decision processes; preference; quadratic programming;
   multi-objective model checking
AB The classical planning problem aims to find a sequence of permitted actions leading a system to a designed state, i.e., to achieve the system's task. However, in many realistic cases we also have requirements on how to complete the task, indicating that some behaviors and situations are more preferred than others. In this paper, we present the probabilistic preference-based planning problem (P4) for Markov decision processes, where the preferences are defined based on an enriched probabilistic LTL-style logic. We first recall P4Solver, an SMT-based planner computing the preferred plan by reducing the problem to a quadratic programming one previously developed to solve P4. To improve computational efficiency and scalability, we then introduce a new encoding of the probabilistic preference-based planning problem as a multi-objective model checking one, and propose the corresponding planner P4Solver(MO). We illustrate the efficacy of both planners on some selected case studies to show that the model checking-based algorithm is considerably more efficient than the quadratic-programming-based one.
C1 [Li, Meilun; She, Zhikun] Beihang Univ, Sch Math & Syst Sci, Beijing 100083, Peoples R China.
   [Turrini, Andrea; Zhang, Lijun] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing 100190, Peoples R China.
   [Turrini, Andrea; Zhang, Lijun] Inst Intelligent Software, Guangzhou, Peoples R China.
   [Hahn, Ernst Moritz] Univ Twente, NL-7522 NB Enschede, Netherlands.
   [She, Zhikun] Beihang Univ, LMIB, Beijing 100083, Peoples R China.
C3 Beihang University; Chinese Academy of Sciences; Institute of Software,
   CAS; University of Twente; Beihang University
RP She, ZK (corresponding author), Beihang Univ, Sch Math & Syst Sci, Beijing 100083, Peoples R China.; Zhang, LJ (corresponding author), Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing 100190, Peoples R China.; She, ZK (corresponding author), Beihang Univ, LMIB, Beijing 100083, Peoples R China.
EM meilun.li@buaa.edu.cn; turrini@ios.ac.cn; e.m.hahn@utwente.nl;
   zhikun.she@buaa.edu.cn; zhanglj@ios.ac.cn
OI zhang, li jun/0000-0002-3692-2088; She, Zhikun/0000-0003-2762-8730;
   Turrini, Andrea/0000-0003-4343-9323
FU Guangdong Science and Technology Department [2018B010107004]; National
   Natural Science Foundation of China [11422111, 61532019, 61761136011,
   61572024, 61836005]; Beijing Natural Science Foundation [Z180005]; NWO
   under grant PrimaVera [NWA.1160.18.238]; STW [15474 SEQUOIA]; EU [864075
   CAESAR]; ProRail; Deutsche Bahn
FX The authors would like to show sincere gratitude to the editor and the
   anonymous reviewers for their numerous detailed suggestions and comments
   on improving the quality of this paper. This work was partially
   supported by the Guangdong Science and Technology Department (Grant No.
   2018B010107004), the National Natural Science Foundation of China
   (Grants Nos. 11422111, 61532019, 61761136011, 61572024, 61836005), the
   Beijing Natural Science Foundation (Grant No. Z180005), NWO under grant
   PrimaVera NWA.1160.18.238, STW under the project 15474 SEQUOIA, the EU
   under project 864075 CAESAR, ProRail and Deutsche Bahn. Andrea Turrini
   is co-first author.
CR Aminof B, 2019, ICAPS, P31
   Aminof B, 2018, SIXTEENTH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P615
   [Anonymous], 1960, DYNAMIC PROGRAMMING
   Bacchus F, 2000, ARTIF INTELL, V116, P123, DOI 10.1016/S0004-3702(99)00071-5
   Baier JA, 2009, ARTIF INTELL, V173, P593, DOI 10.1016/j.artint.2008.11.011
   Barrett C., 2010, P 8 INT WORKSHOP SAT, V13, P14
   BELLMAN R, 1957, J MATH MECH, V6, P679, DOI 10.1512/iumj.1957.6.56038
   Bienvenu M, 2011, ARTIF INTELL, V175, P1308, DOI 10.1016/j.artint.2010.11.021
   Boutilier C, 1999, J ARTIF INTELL RES, V11, P1
   Brewka G, 2004, ARTIF INTELL, V157, P203, DOI 10.1016/j.artint.2004.04.006
   Camacho A, 2018, P I C AUTOMAT PLAN S, P29
   Camacho A, 2018, SIXTEENTH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P454
   Camacho A, 2017, AAAI CONF ARTIF INTE, P3716
   Chatterjee K, 2006, LECT NOTES COMPUT SC, V3884, P325
   Coste-Marquis S., 2004, PRINCIPLES KNOWLEDGE, P203
   Cunningham AG, 2015, IEEE INT CONF ROBOT, P1670, DOI 10.1109/ICRA.2015.7139412
   De Giacomo G., 2013, P 23 INT JOINT C ART, P854, DOI DOI 10.5555/2540128.2540252
   De Giacomo G, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4729
   De Giacomo G, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P1558
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Edelkamp S., 2006, 5 INT PLANNING COMPE, P31
   Etessami K, 2008, LOG METH COMPUT SCI, V4, DOI 10.2168/LMCS-4(4:8)2008
   Feng Y, 2018, IEEE ROBOT AUTOM LET, V3, P704, DOI 10.1109/LRA.2017.2784547
   Forejt V, 2011, LECT NOTES COMPUT SC, V6605, P112, DOI 10.1007/978-3-642-19835-9_11
   Gadelha MR, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P11, DOI [10.1109/ICSE.Companion.2019.00026, 10.1109/ICSE-Companion.2019.00026]
   Gerevini Alfonso., 2005, TECHNICAL REPORT
   Hahn E.M., 2015, 26 INT C CONCURRENCY, P354
   Hahn EM, 2014, LECT NOTES COMPUT SC, V8442, P312, DOI 10.1007/978-3-319-06410-9_22
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Hasu V, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE FOR MEASUREMENT SYSTEMS AND APPLICATIONS, P18, DOI 10.1109/CIMSA.2009.5069910
   Hoffmann J, 2020, AAAI CONF ARTIF INTE, V34, P13569
   Karp R, 1972, COMPLEXITY COMPUTER, V40, P85, DOI 10.1007/978-3-540-68279-08
   Keller T., 2013, Proceedings of the 23rd International Conference on Automated Planning and Scheduling, P135, DOI [/10.1609/icaps.v23i1.13557, DOI 10.1609/ICAPS.V23I1.13557]
   Kim J, 2017, AAAI CONF ARTIF INTE, P955
   Klauck M, 2020, J ARTIF INTELL RES, V68, P247
   Kocsis L, 2006, LECT NOTES COMPUT SC, V4212, P282, DOI 10.1007/11871842_29
   Kolobov A, 2012, P 26 AAAI C ART INT, P1786, DOI DOI 10.1609/AAAI.V26I1.8362
   Kroening D, 2004, LECT NOTES COMPUT SC, V3308, P224
   Kvarnström J, 2000, ANN MATH ARTIF INTEL, V30, P119, DOI 10.1023/A:1016619613658
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Kwiatkowska M, 2013, INFORM COMPUT, V232, P38, DOI 10.1016/j.ic.2013.10.001
   Li ML, 2015, AAAI CONF ARTIF INTE, P3313
   Mendes-Moreira J, 2015, INFORM SCIENCES, V293, P299, DOI 10.1016/j.ins.2014.09.005
   Mouaddib AI, 2004, IEEE INT CONF ROBOT, P2814, DOI 10.1109/ROBOT.2004.1307487
   Ogryczak W, 2013, INT J INF TECH DECIS, V12, P1021, DOI 10.1142/S0219622013400075
   Olhager J, 2018, INT J PROD RES, V56, P692, DOI 10.1080/00207543.2017.1401749
   Perny P., 2013, P 27 AAAI C ART INT, P92
   Resano A, 2008, INT J PROD RES, V46, P4803, DOI 10.1080/00207540601182294
   Sanner S., 2010, Australian National University, V32, P27
   Schwarting W, 2018, ANNU REV CONTR ROBOT, V1, P187, DOI 10.1146/annurev-control-060117-105157
   Sohrabi S, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P1790
   Son TC, 2006, THEOR PRACT LOG PROG, V6, P559, DOI 10.1017/S1471068406002717
   Sullivan K. J., 2001, Software Engineering Notes, V26, P99, DOI 10.1145/503271.503224
   Teichteil-Konigsbuch F., 2012, PROC 20 EUR C ARTIF, P774
   Vardi MY, 1995, LECT NOTES COMPUTER, P238, DOI DOI 10.1007/3-540-60915-6
   Zhu SF, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1362
NR 56
TC 1
Z9 1
U1 1
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2022
VL 48
IS 5
BP 1545
EP 1559
DI 10.1109/TSE.2020.3024215
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 1I8CJ
UT WOS:000797454000006
OA Green Published
DA 2024-07-18
ER

PT J
AU Rebai, S
   Alizadeh, V
   Kessentini, M
   Fehri, H
   Kazman, R
AF Rebai, Soumaya
   Alizadeh, Vahid
   Kessentini, Marouane
   Fehri, Houcem
   Kazman, Rick
TI Enabling Decision and Objective Space Exploration for Interactive
   Multi-Objective Refactoring
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tools; Clustering algorithms; Measurement; Search problems; Manuals;
   Software; Space exploration; Search based software engineering;
   refactoring; multi-objective search; clustering
ID SOFTWARE; MODEL; CODE; OPTIMIZATION; ATTRIBUTES; EFFICIENCY
AB Due to the conflicting nature of quality measures, there are always multiple refactoring options to fix quality issues. Thus, interaction with developers is critical to inject their preferences. While several interactive techniques have been proposed, developers still need to examine large numbers of possible refactorings, which makes the interaction time-consuming. Furthermore, existing interactive tools are limited to the "objective space" to show developers the impacts of refactorings on quality attributes. However, the "decision space" is also important since developers may want to focus on specific code locations. In this paper, we propose an interactive approach that enables developers to pinpoint their preference simultaneously in the objective (quality metrics) and decision (code location) spaces. Developers may be interested in looking at refactoring strategies that can improve a specific quality attribute, such as extendibility (objective space), but such strategies may be related to different code locations (decision space). A plethora of solutions is generated at first using multi-objective search that tries to find the possible trade-offs between quality objectives. Then, an unsupervised learning algorithm clusters the trade-off solutions based on their quality metrics, and another clustering algorithm is applied within each cluster of the objective space to identify solutions related to different code locations. The objective and decision spaces can now be explored more efficiently by the developer, who can give feedback on a smaller number of solutions. This feedback is then used to generate constraints for the optimization process, to focus on the developer's regions of interest in both the decision and objective spaces. A manual validation of selected refactoring solutions by developers confirms that our approach outperforms state of the art refactoring techniques.
C1 [Rebai, Soumaya; Alizadeh, Vahid; Kessentini, Marouane; Fehri, Houcem] Univ Michigan, Dept Comp & Informat Sci, Dearborn, MI 48128 USA.
   [Kazman, Rick] Univ Hawaii, Honolulu, HI 96822 USA.
   [Kazman, Rick] Carnegie Mellon Univ, Software Engn Inst, Pittsburgh, PA 15213 USA.
C3 University of Michigan System; University of Michigan; University of
   Hawaii System; Carnegie Mellon University; Software Engineering
   Institute
RP Kessentini, M (corresponding author), Univ Michigan, Dept Comp & Informat Sci, Dearborn, MI 48128 USA.
EM srebal@umich.edu; alizadeh@umich.edu; marouane@umich.edu;
   houcemf@umich.edu; kazman@hawaii.edu
RI Alizadeh, Vahid/S-2154-2018
OI Kazman, Rick/0000-0003-0392-2783; Alizadeh, Vahid/0000-0002-5030-9036
CR Alizadeh V, 2020, IEEE T SOFTWARE ENG, V46, P932, DOI 10.1109/TSE.2018.2872711
   Alizadeh V, 2018, IEEE INT CONF AUTOM, P464, DOI [10.1145/3238147.3238217, 10.114513238147.3238217]
   Amal B, 2014, LECT NOTES COMPUT SC, V8636, P31
   [Anonymous], 2015, 7 INT WORKSH MAN TEC
   [Anonymous], 2020, PROPOSED REFACTORING
   [Anonymous], 2010, DEVELOPER COEFFICIEN
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Bavota G, 2012, PROC INT CONF SOFTW, P1419, DOI 10.1109/ICSE.2012.6227233
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P345, DOI 10.1109/ICSE.1999.841025
   Cai YF, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377658
   Carriere J., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P149, DOI 10.1145/1810295.1810317
   Cinnéide MO, 2012, INT SYMP EMP SOFTWAR, P49, DOI 10.1145/2372251.2372260
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Dig D, 2006, LECT NOTES COMPUT SC, V4067, P404
   Dig D, 2011, IEEE SOFTWARE, V28, P17, DOI 10.1109/MS.2011.1
   Dig D, 2009, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE.2009.5070539
   Doborjeh MG, 2018, EVOL SYST-GER, V9, P195, DOI 10.1007/s12530-017-9178-8
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   Feathers Michael, 2004, Working Effectively With Legacy Code: Work Effect Leg Code
   Ferreira TD, 2016, APPL SOFT COMPUT, V49, P1283, DOI 10.1016/j.asoc.2016.06.027
   Fokaefs M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1037, DOI 10.1145/1985793.1985989
   Foster SR, 2012, PROC INT CONF SOFTW, P222, DOI 10.1109/ICSE.2012.6227191
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Ge Xi, 2011, P ACM INT C COMP OBJ, V11, P19, DOI [10.1145/2048147.2048157, DOI 10.1145/2048147.2048157]
   Ghannem A, 2016, SOFTWARE QUAL J, V24, P947, DOI 10.1007/s11219-015-9271-9
   Ghannem Adnane., 2011, P C CTR ADV STUDIES, P175
   Han AR, 2018, IEEE T SOFTWARE ENG, V44, P1001, DOI 10.1109/TSE.2017.2731853
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Kazman R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P179, DOI 10.1109/ICSE.2015.146
   Kerievsky J., 2005, Refactoring to Patterns
   Kessentini M, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'17), P1303, DOI 10.1145/3071178.3071334
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   Kim J, 2016, PROC INT CONF SOFTW, P1145, DOI 10.1145/2884781.2884802
   Kim M., 2010, PROC 18 ACM SIGSOFT, P371, DOI [10.1145/1882291.1882353, DOI 10.1145/1882291.1882353]
   Lin Y, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P535, DOI 10.1145/2950290.2950317
   Mariani T, 2017, INFORM SOFTWARE TECH, V83, P14, DOI 10.1016/j.infsof.2016.11.009
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Mkaouer M. W., 2014, P 29 ACM IEEE INT C, P331, DOI [DOI 10.1145/2642937.2642965, 10.1145/2642937.2642965. u r l, DOI 10.1145/2642937.2642965.URL]
   Mkaouer MW, 2017, EMPIR SOFTW ENG, V22, P894, DOI 10.1007/s10664-016-9426-8
   Mkaouer MW, 2016, EMPIR SOFTW ENG, V21, P2503, DOI 10.1007/s10664-015-9414-4
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Moghadam IH, 2012, EUR CON SFTWR MTNCE, P43, DOI 10.1109/CSMR.2012.15
   Morales R, 2018, J SYST SOFTWARE, V145, P25, DOI 10.1016/j.jss.2018.07.076
   Morales R, 2017, J SYST SOFTWARE, V128, P236, DOI 10.1016/j.jss.2016.05.042
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Murphy-Hill Emerson R, 2007, WRT, P60
   O'Keeffe M, 2008, J SOFTW MAINT EVOL-R, V20, P345, DOI 10.1002/smr.378
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Ouni A, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1843
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Ramírez A, 2019, IEEE T SOFTWARE ENG, V45, P760, DOI 10.1109/TSE.2018.2803055
   Ramírez A, 2018, INFORM SCIENCES, V463, P92, DOI 10.1016/j.ins.2018.06.034
   REDNER RA, 1984, SIAM REV, V26, P195, DOI 10.1137/1026034
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Shatnawi R., 2011, Internat. J. Software Eng. Applicat., P127
   Tokuda L., 2001, Automated Software Engineering, V8, P89, DOI 10.1023/A:1008715808855
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Xiao L, 2016, PROC INT CONF SOFTW, P488, DOI 10.1145/2884781.2884822
   Xuan GR, 2001, IEEE IMAGE PROC, P145, DOI 10.1109/ICIP.2001.958974
NR 63
TC 5
Z9 5
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2022
VL 48
IS 5
BP 1560
EP 1578
DI 10.1109/TSE.2020.3024814
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 1I8CJ
UT WOS:000797454000007
DA 2024-07-18
ER

PT J
AU Liva, G
   Khan, MT
   Pinzger, M
   Spegni, F
   Spalazzi, L
AF Liva, Giovanni
   Khan, Muhammad Taimoor
   Pinzger, Martin
   Spegni, Francesco
   Spalazzi, Luca
TI Automatic Repair of Timestamp Comparisons
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Maintenance engineering; Java; Semantics; Static analysis; Software;
   Testing; Software; program verification; formal methods; error handling
   and recovery
ID STATIC ANALYSIS; BUGS
AB Automated program repair has the potential to reduce the developers' effort to fix errors in their code. In particular, modern programming languages, such as Java, C, and C#, represent time as integer variables that suffer from integer overflow, introducing subtle errors that are hard to discover and repair. Recent researches on automated program repair rely on test cases to discover failures to correct, making them suitable only for regression errors. We propose a new strategy to automatically repair programs that suffer from timestamp overflows that are manifested in comparison expressions. It unifies the benefits of static analysis and automatic program repair avoiding dependency on testing to identify and correct defected code. Our approach performs an abstract analysis over the time domain of a program using a Time Type System to identify the problematic comparison expressions. The repairing strategy rewrites the timestamp comparisons exploiting the binary representation of machine numbers to correct the code. We have validated the applicability of our approach with 20 open source Java projects. The results show that it is able to correctly repair all 246 identified errors. To further validate the reliability of our approach, we have proved the soundness of both, type system and repairing strategy. Furthermore, several patches for three open source projects have been acknowledged and accepted by their developers.
C1 [Liva, Giovanni; Pinzger, Martin] Alpen Adria Univ Klagenfurt, Dept Software Engn, A-9020 Klagenfurt, Austria.
   [Khan, Muhammad Taimoor] Univ Greenwich, Sch Comp & Math Sci, London SE10 9LS, England.
   [Spegni, Francesco; Spalazzi, Luca] Univ Politecn Marche, Dept Informat Engn, Ancona, Italy.
C3 University of Klagenfurt; University of Greenwich; Marche Polytechnic
   University
RP Liva, G (corresponding author), Alpen Adria Univ Klagenfurt, Dept Software Engn, A-9020 Klagenfurt, Austria.
EM Giovanni.Liva@aau.at; m.khan@gre.ac.uk; Martin.Pinzger@aau.at;
   f.spegni@univpm.it; l.spalazzi@univpm.it
RI Spalazzi, Luca/A-9983-2013
OI SPALAZZI, Luca/0000-0002-4807-6632; Pinzger, Martin/0000-0002-5536-3859;
   Khan, Muhammad Taimoor/0000-0002-5752-6420
FU Austrian Research Promotion Agency FFG within the FFG Bridge 1 program
   [850757]
FX The authors would like to thank Veit Frick and Karin Hodnigg for
   reviewing the paper and the Austrian Research Promotion Agency FFG for
   funding this research within the FFG Bridge 1 program, under Grant No.
   850757.
CR [Anonymous], 2008, ISSTA
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Beckert B, 2004, LECT NOTES COMPUT SC, V2999, P207
   Bennett K. H., 2000, P C FUT SOFTW ENG, P73
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Boshernitsan M., 2006, ISSTA, P169
   Brumley David, 2007, NETWORK DISTRIBUTED
   Charette RN, 2005, IEEE SPECTRUM, V42, P42, DOI 10.1109/MSPEC.2005.1502528
   Chaudhuri A, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133872
   Coker Z, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P792, DOI 10.1109/ICSE.2013.6606625
   Daniel B., 2007, P THE 6 JOINT M EURO, P185, DOI 10.1145/1287624.1287651
   Dietz W, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2743019
   Facebook, 2017, INT AN
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P611, DOI 10.1007/s10664-013-9288-2
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Gligoric M, 2013, LECT NOTES COMPUT SC, V7920, P629, DOI 10.1007/978-3-642-39038-8_26
   Griswold William G., 1992, Program Restructuring as an Aid to Software Maintenance
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Hwang K., 1979, COMPUTER ARITHMETIC
   ITKIS U., 1976, CONTROL SYSTEMS VARI
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Liva G., 2019, PROOF SOUNDNESS
   Liva G, 2019, EMPIR SOFTW ENG, V24, P3114, DOI 10.1007/s10664-019-09699-5
   Liva G, 2018, FME WORKS FORM, P50, DOI 10.1145/3193992.3193997
   Liva G, 2017, IEEE INT WORK C SO, P91, DOI 10.1109/SCAM.2017.9
   Logozzo F, 2013, ELECTRON P THEOR COM, P341, DOI 10.4204/EPTCS.129.21
   Long F, 2016, PROC INT CONF SOFTW, P702, DOI 10.1145/2884781.2884872
   Mechtaev S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P129, DOI 10.1145/3180155.3180247
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Oracle, 2018, JAV 8 LANG SPEC
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Perkins JH, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P87
   Plotkin GD, 2004, J LOGIC ALGEBR PROGR, V60-1, P17, DOI 10.1016/j.jlap.2004.03.002
   Rice J.R., 2014, Numerical Methods in Software and Analysis
   ROBINSON JA, 1965, J ACM, V12, P23, DOI 10.1145/321250.321253
   Schäfer M, 2010, ACM SIGPLAN NOTICES, V45, P286, DOI 10.1145/1932682.1869485
   Schäfer M, 2010, LECT NOTES COMPUT SC, V6183, P225, DOI 10.1007/978-3-642-14107-2_11
   Schäfer M, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P277
   Schafer M., 2009, P 23 EUROPEAN C ECOO, P369, DOI [10.1007/978-3-642-03013-0_17, DOI 10.1007/978-3-642-03013-0_17]
   Soares G, 2013, IEEE T SOFTWARE ENG, V39, P147, DOI 10.1109/TSE.2012.19
   Spalazzi L, 2018, PROCEEDINGS 2018 INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING & SIMULATION (HPCS), P642, DOI 10.1109/HPCS.2018.00106
   Steimann F, 2018, ACM T PROGR LANG SYS, V40, DOI 10.1145/3156016
   Steimann F, 2012, LECT NOTES COMPUT SC, V7313, P535, DOI 10.1007/978-3-642-31057-7_24
   Steimann F, 2009, LECT NOTES COMPUT SC, V5653, P419, DOI 10.1007/978-3-642-03013-0_19
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1838
   van Tonder R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/3180155.3180250
NR 52
TC 2
Z9 2
U1 2
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2021
VL 47
IS 11
BP 2369
EP 2381
DI 10.1109/TSE.2019.2948351
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WW2QE
UT WOS:000717767100004
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Mu, DL
   Du, YL
   Xu, JH
   Xu, J
   Xing, XY
   Mao, B
   Liu, P
AF Mu, Dongliang
   Du, Yunlan
   Xu, Jianhao
   Xu, Jun
   Xing, Xinyu
   Mao, Bing
   Liu, Peng
TI POMP plus plus : Facilitating Postmortem Program Diagnosis with
   Value-Set Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer crashes; Software; Security; Core dumps; Registers; Runtime;
   Tools; Postmortem program diagnosis; failure diagnosis; reverse
   execution; value-set analysis
ID REVERSE EXECUTION
AB With the emergence of hardware-assisted processor tracing, execution traces can be logged with lower runtime overhead and integrated into the core dump. In comparison with an ordinary core dump, such a new post-crash artifact provides software developers and security analysts with more clues to a program crash. However, existing works only rely on the resolved runtime information, which leads to the limitation in data flow recovery within long execution traces. In this work, we propose POMP++, an automated tool to facilitate the analysis of post-crash artifacts. More specifically, POMP++ introduces a reverse execution mechanism to construct the data flow that a program followed prior to its crash. Furthermore, POMP++ utilizes Value-set Analysis, which helps to verify memory alias relation, to improve the ability of data flow recovery. With the restored data flow, POMP++ then performs backward taint analysis and highlights program statements that actually contribute to the crash. We have implemented POMP++ for Linux system on x86-32 platform, and tested it against various crashes resulting from 31 distinct real-world security vulnerabilities. The evaluation shows that, our work can pinpoint the root causes in 29 cases, increase the number of recovered memory addresses by 12 percent and reduce the execution time by 60 percent compared with existing reverse execution. In short, POMP++ can accurately and efficiently pinpoint program statements that truly contribute to the crashes, making failure diagnosis significantly convenient.
C1 [Mu, Dongliang; Du, Yunlan; Xu, Jianhao; Mao, Bing] Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210023, Peoples R China.
   [Xu, Jianhao] Stevens Inst Technol, Dept Comp Sci, Hoboken, NJ 07030 USA.
   [Xing, Xinyu; Liu, Peng] Penn State Univ, Coll Informat Sci & Technol, State Coll, PA 16802 USA.
C3 Nanjing University; Stevens Institute of Technology; Pennsylvania
   Commonwealth System of Higher Education (PCSHE); Pennsylvania State
   University
RP Mu, DL (corresponding author), Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210023, Peoples R China.
EM dzm77@ist.psu.edu; duyunlan@smail.nju.edu.cn;
   jianhao_xu@smail.nju.edu.cn; jxu69@stevens.edu; xxing@ist.psu.edu;
   maobing@nju.edu.cn; pliu@ist.psu.edu
RI Liu, Peng/A-4255-2013
FU ARO [W911NF-13-1-0421, W911NF-15-1-0576]; NSF [1718459, CNS-1505664,
   CNS-1814679]; Chinese National Natural Science Foundation [61272078];
   Division Of Computer and Network Systems; Direct For Computer & Info
   Scie & Enginr [1718459] Funding Source: National Science Foundation
FX Wethank the anonymous reviewers for their helpful feedback on this
   paper. This work was supported by ARO W911NF-131-0421 (MURI), ARO
   W911NF-15-1-0576, NSF Award1718459, NSF CNS-1505664, NSF CNS-1814679,
   and Chinese National Natural Science Foundation 61272078. Any opinions,
   findings, and conclusions or recommendations expressed in this material
   are those of the authors and do not necessarily reflect the views of any
   funding agencies. An earlier version appeared at the 26th USENIX
   Security Symposium (USENIX Security '17) [1].
CR Akgul T, 2004, PROC INT CONF SOFTW, P522, DOI 10.1109/ICSE.2004.1317474
   Akgul T., 2004, ACM T SOFTW ENG METH
   Akgul T., 2002, ACM SIGSOFT SOFTWARE, V28, P18
   [Anonymous], libdisasm: x86 disassembler library
   [Anonymous], 2013, Processor tracing
   Artzi S, 2008, LECT NOTES COMPUT SC, V5142, P542, DOI 10.1007/978-3-540-70592-5_23
   Balakrishnan G, 2004, LECT NOTES COMPUT SC, V2985, P5
   Balakrishnan G, 2010, ACM T PROGR LANG SYS, V32, DOI 10.1145/1749608.1749612
   Bell J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P362, DOI 10.1109/ICSE.2013.6606582
   Biswas B, 1999, ACM SIGPLAN NOTICES, V34, P61, DOI 10.1145/312009.312079
   Brumley David, 2006, Technical Report. Technical Report CMU-CS-06-180
   Cao Y., 2014, Proceedings of the ACM/IEEE International Conference on Automated Software Engineering ASE, P791
   Cifuentes C, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P188
   Cui WD, 2018, PROCEEDINGS OF THE 13TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P17
   Cui WD, 2016, PROC INT CONF SOFTW, P820, DOI 10.1145/2884781.2884844
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Debray S., 1998, Conference Record of POPL '98: 25th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P12, DOI 10.1145/268946.268948
   Feng Qin, 2007, ACM Transactions on Computer Systems, V25, P7, DOI 10.1145/1275517.1275519
   Fernández M, 2002, 2002 INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, PROCEEDINGS, P222, DOI 10.1109/PACT.2002.1106020
   Glerum K, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P103
   Gu WN, 2003, 2003 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P459
   Hou C, 2012, LECT NOTES COMPUT SC, V7210, P81, DOI 10.1007/978-3-642-28652-0_5
   Hu ZD, 2014, IEEE INT SYMP POWER
   Kasikci B, 2015, SOSP'15: PROCEEDINGS OF THE TWENTY-FIFTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P344, DOI 10.1145/2815400.2815412
   Liblit B, 2002, UCBCSD021203
   Ohmann P, 2015, P INT S SOFTW TEST A, P428
   Oracle Corporation, POS IND COD
   Reps T, 2008, LECT NOTES COMPUT SC, V4959, P16
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   Shoshitaishvili Y, 2016, P IEEE S SECUR PRIV, P138, DOI 10.1109/SP.2016.17
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Xu J., 2016, P ACM SIGSAC C COMP, P529
   Xu J, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P17
   Zamfir C., 2013, 14 WORKSH HOT TOP OP
   Zhang W, 2011, ACM SIGPLAN NOTICES, V46, P251, DOI 10.1145/1961296.1950395
NR 35
TC 5
Z9 5
U1 2
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2021
VL 47
IS 9
BP 1929
EP 1942
DI 10.1109/TSE.2019.2939528
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UR3QY
UT WOS:000696667700010
OA hybrid
DA 2024-07-18
ER

PT J
AU Di Sorbo, A
   Panichella, S
   Visaggio, CA
   Di Penta, M
   Canfora, G
   Gall, HC
AF Di Sorbo, Andrea
   Panichella, Sebastiano
   Visaggio, Corrado A.
   Di Penta, Massimiliano
   Canfora, Gerardo
   Gall, Harald C.
TI Exploiting Natural Language Structures in Software Informal
   Documentation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Neon; Software; Linguistics; Pattern recognition; Documentation;
   Manuals; Mining unstructured data; natural language processing;
   empirical study
AB Communication means, such as issue trackers, mailing lists, Q&A forums, and app reviews, are premier means of collaboration among developers, and between developers and end-users. Analyzing such sources of information is crucial to build recommenders for developers, for example suggesting experts, re-documenting source code, or transforming user feedback in maintenance and evolution strategies for developers. To ease this analysis, in previous work we proposed Development Emails Content Analyzer (DECA), a tool based on Natural Language Parsing that classifies with high precision development emails' fragments according to their purpose. However, DECA has to be trained through a manual tagging of relevant patterns, which is often effort-intensive, error-prone and requires specific expertise in natural language parsing. In this paper, we first show, with an empirical study, the extent to which producing rules for identifying such patterns requires effort, depending on the nature and complexity of patterns. Then, we propose an approach, named Nlp-based softwarE dOcumentation aNalyzer (NEON), that automatically mines such rules, minimizing the manual effort. We assess the performances of NEON in the analysis and classification of mobile app reviews, developers discussions, and issues. NEON simplifies the patterns identification and rules definition processes, allowing a savings of more than 70 percent of the time otherwise spent on performing such activities manually. Results also show that NEON-generated rules are close to the manually identified ones, achieving comparable recall.
C1 [Di Sorbo, Andrea; Visaggio, Corrado A.; Di Penta, Massimiliano; Canfora, Gerardo] Univ Sannio, Dept Engn, I-82100 Benevento, Italy.
   [Panichella, Sebastiano] Zurich Univ Appl Sci ZHAW, CH-8005 Zurich, Switzerland.
   [Gall, Harald C.] Univ Zurich, Dept Informat, CH-8006 Zurich, Switzerland.
C3 University of Sannio; Zurich University of Applied Sciences; University
   of Zurich
RP Di Sorbo, A (corresponding author), Univ Sannio, Dept Engn, I-82100 Benevento, Italy.
EM disorbo@unisannio.it; panc@zhaw.ch; visaggio@unisannio.it;
   dipenta@unisannio.it; canfora@unisannio.it; gall@ifi.uzh.ch
OI Canfora, Gerardo/0000-0003-0049-1279; Di Penta,
   Massimiliano/0000-0002-0340-9747; Di Sorbo, Andrea/0000-0002-3192-739X;
   Panichella, Sebastiano/0000-0003-4120-626X
FU Swiss National Science foundation [200021-166275]; Swiss National
   Science Foundation (SNF) [200021_166275] Funding Source: Swiss National
   Science Foundation (SNF)
FX We gratefully thank all the participants involved in our studies. S.
   Panichella and H. Gall acknowledge the Swiss National Science
   foundation's support for the project "SURF-MobileAppsData" (SNF Project
   No. 200021-166275).
CR [Anonymous], 2015, USING STUDENTS EXPT
   [Anonymous], 2008, COLING 2008 P WORKSH
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bacchelli A, 2012, PROC INT CONF SOFTW, P375, DOI 10.1109/ICSE.2012.6227177
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bavota G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P1, DOI 10.1109/SANER.2016.47
   Begel A, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P195, DOI 10.1109/ICGSE.2008.17
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Capobianco G, 2013, J SOFTW-EVOL PROC, V25, P743, DOI 10.1002/smr.1564
   Cerulo L, 2013, IEEE INT WORK C SO, P157, DOI 10.1109/SCAM.2013.6648197
   Chaparro O, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P396, DOI 10.1145/3106237.3106285
   Chatterjee P, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P382, DOI 10.1109/SANER.2017.7884638
   Ciurumelea A, 2018, PROC IEEE ACM INT C, P317, DOI 10.1145/3183440.3194988
   Cohen J.W., STAT POWER ANAL BEHA, V2nd. ed.
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Di Penta Massimiliano, 2012, P ACM SIGSOFT 20 INT, P1
   Di Sorbo A, 2017, PROC IEEE ACM INT C, P55, DOI 10.1109/ICSE-C.2017.5
   Di Sorbo A, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P641, DOI 10.1145/2889160.2889170
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Di Sorbo A, 2015, IEEE INT CONF AUTOM, P12, DOI 10.1109/ASE.2015.12
   Grano G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P72, DOI 10.1109/SANER.2018.8330198
   Iacob C., 2014, Mobile Computing, Applications, and Services. MobiCASE 2013. Lecture Notes of the Institute for Computer Sciences, V130, DOI [10.1007/978-3-319-05452-0_4., DOI 10.1007/978-3-319-05452-0_4]
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Ko AJ, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P127
   Pandita R, 2012, PROC INT CONF SOFTW, P815, DOI 10.1109/ICSE.2012.6227137
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Panichella S., 2017, P 2 ACM SIGSOFT INT, P8
   Panichella S, 2018, 2018 IEEE 2ND INTERNATIONAL WORKSHOP ON VALIDATION, ANALYSIS AND EVOLUTION OF SOFTWARE TESTS (VST), P1, DOI 10.1109/VST.2018.8327148
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Panichella S, 2014, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSME.2014.47
   Panichella Sebastiano, 2014, P 22 INT C PROGR COM, P177
   Pelloni L, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P522, DOI 10.1109/SANER.2018.8330252
   Petrosyan G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P869, DOI 10.1109/ICSE.2015.97
   Pett M A., 2015, Nonparametric statistics for health care research: Statistics for small samples and unusual distributions, V2nd, P17
   Vu PM, 2016, IEEE INT CONF AUTOM, P726, DOI 10.1145/2970276.2970365
   Vu PM, 2015, IEEE INT CONF AUTOM, P749, DOI 10.1109/ASE.2015.85
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Sureka A., 2010, Proceedings of the Third Annual ACM Bangalore Conference, P1
   Toutanova K, 2003, HLT-NAACL 2003: HUMAN LANGUAGE TECHNOLOGY CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE MAIN CONFERENCE, P252, DOI 10.3115/1073445.1073478
   Wang K, 2009, PROCEEDINGS 32ND ANNUAL INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P187, DOI 10.1145/1571941.1571975
   Wong E, 2013, IEEE INT CONF AUTOM, P562, DOI 10.1109/ASE.2013.6693113
   WU ZB, 1994, 32ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P133
   Zhou Y, 2020, IEEE T SOFTWARE ENG, V46, P1004, DOI 10.1109/TSE.2018.2872971
   Zhou Y, 2017, PROC INT CONF SOFTW, P27, DOI 10.1109/ICSE.2017.11
NR 47
TC 11
Z9 13
U1 1
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2021
VL 47
IS 8
BP 1587
EP 1604
DI 10.1109/TSE.2019.2930519
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA TZ7YH
UT WOS:000684687400004
OA Green Published
DA 2024-07-18
ER

PT J
AU Calinescu, R
   Paterson, C
   Johnson, K
AF Calinescu, Radu
   Paterson, Colin
   Johnson, Kenneth
TI Efficient Parametric Model Checking Using Domain Knowledge
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Markov processes; Quality of service; Analytical models; Unified
   modeling language; Software; Probabilistic logic; Parametric statistics;
   Parametric model checking; Markov models; model abstraction;
   probabilistic model checking; quality of service
ID VERIFICATION; QUALITY
AB We introduce an efficient parametric model checking (ePMC) method for the analysis of reliability, performance and other quality-of-service (QoS) properties of software systems. ePMC speeds up the analysis of parametric Markov chains modelling the behaviour of software by exploiting domain-specific modelling patterns for the software components (e.g., patterns modelling the invocation of functionally-equivalent services used to jointly implement the same operation within service-based systems, or the deployment of the components of multi-tier software systems across multiple servers). To this end, ePMC precomputes closed-form expressions for key QoS properties of such patterns, and uses these expressions in the analysis of whole-system models. To evaluate ePMC, we show that its application to service-based systems and multi-tier software architectures reduces the analysis time by several orders of magnitude compared to current parametric model checking methods.
C1 [Calinescu, Radu; Paterson, Colin] Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
   [Johnson, Kenneth] Auckland Univ Technol, Sch Engn Comp & Math Sci, Auckland 1010, New Zealand.
C3 University of York - UK; Auckland University of Technology
RP Calinescu, R (corresponding author), Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
EM radu.calinescu@york.ac.uk; colin.paterson@york.ac.uk;
   kenneth.johnson@aut.ac.nz
OI Calinescu, Radu/0000-0002-2678-9260; Johnson,
   Kenneth/0000-0002-9116-7185; Paterson, Colin/0000-0002-6678-3752
FU Assuring Autonomy International Programme; SPF [EP/V026747/1] Funding
   Source: UKRI
FX This work was partly funded by the Assuring Autonomy International
   Programme.
CR Abrial JR, 2007, FUND INFORM, V77, P1
   Andova S, 2003, LECT NOTES COMPUT SC, V2791, P88
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Bartocci E, 2011, LECT NOTES COMPUT SC, V6605, P326, DOI 10.1007/978-3-642-19835-9_30
   Benedikt M, 2013, LECT NOTES COMPUT SC, V7795, P32, DOI 10.1007/978-3-642-36742-7_3
   Calinescu Radu, 2012, Large-Scale Complex IT Systems. Development, Operation and Management. 17th Monterey Workshop 2012. Revised Selected Papers, P303, DOI 10.1007/978-3-642-34059-8_16
   Calinescu R., 2017, Self-Aware Computing Systems, P337
   Calinescu R, 2018, IEEE T SOFTWARE ENG, V44, P1039, DOI 10.1109/TSE.2017.2738640
   Calinescu R, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P61, DOI 10.1145/3183399.3183404
   Calinescu R, 2016, LECT NOTES COMPUT SC, V9636, P540, DOI 10.1007/978-3-662-49674-9_32
   Calinescu R, 2016, IEEE T RELIAB, V65, P107, DOI 10.1109/TR.2015.2452931
   Calinescu R, 2013, IEEE INT CONF AUTOM, P734, DOI 10.1109/ASE.2013.6693145
   Calinescu R, 2011, IEEE T SOFTWARE ENG, V37, P387, DOI 10.1109/TSE.2010.92
   Cardoso J., 2004, J. Web Semant., V1, P281, DOI [10.1016/j.websem.2004.03.001, DOI 10.1016/J.WEBSEM.2004.03.001]
   Chen TL, 2013, 2013 INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE), P85, DOI 10.1109/TASE.2013.20
   Chrszon P, 2018, FORM ASP COMPUT, V30, P45, DOI 10.1007/s00165-017-0432-4
   Ciesinski R, 2004, LECT NOTES COMPUT SC, V2925, P147
   da Silva Carlos Eduardo, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P193, DOI 10.1109/SEAMS.2017.13
   Daws C, 2005, LECT NOTES COMPUT SC, V3407, P280
   Dehnert C, 2017, LECT NOTES COMPUT SC, V10427, P592, DOI 10.1007/978-3-319-63390-9_31
   Dehnert C, 2015, LECT NOTES COMPUT SC, V9206, P214, DOI 10.1007/978-3-319-21690-4_13
   FILIERI A, 2013, ASSURANCES SELF ADAP, V7740, P30, DOI DOI 10.1007/978-3-642-36249-1
   Filieri A, 2016, IEEE T SOFTWARE ENG, V42, P75, DOI 10.1109/TSE.2015.2421318
   Filieri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P341, DOI 10.1145/1985793.1985840
   Gallotti S, 2008, LECT NOTES COMPUT SC, V5281, P119, DOI 10.1007/978-3-540-87879-7_8
   Gerasimou S, 2018, AUTOMAT SOFTW ENG, V25, P785, DOI 10.1007/s10515-018-0235-8
   Gerasimou S, 2015, IEEE INT CONF AUTOM, P319, DOI 10.1109/ASE.2015.22
   Ghezzi Carlo, 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P170, DOI 10.1109/SPLC.2011.33
   Ghezzi C, 2013, INFORM SOFTWARE TECH, V55, P508, DOI 10.1016/j.infsof.2012.07.017
   Hahn Ernst Moritz, 2011, International Journal on Software Tools for Technology Transfer, V13, P3, DOI 10.1007/s10009-010-0146-x
   Hahn EM, 2011, LECT NOTES COMPUT SC, V6617, P146, DOI 10.1007/978-3-642-20398-5_12
   Hahn EM, 2010, LECT NOTES COMPUT SC, V6174, P660, DOI 10.1007/978-3-642-14295-6_56
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Jansen N, 2014, LECT NOTES COMPUT SC, V8657, P404, DOI 10.1007/978-3-319-10696-0_31
   Johnson Kenneth, 2013, P 16 INT ACM SIGSOFT, P33, DOI DOI 10.1145/2465449.2465456
   Katoen JP, 2011, PERFORM EVALUATION, V68, P90, DOI 10.1016/j.peva.2010.04.001
   Kemeny John., 1976, DENUMERABLE MARKOV C, V40
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   McIver Annabelle., 2005, MG COMP SCI
   Sen K, 2006, LECT NOTES COMPUT SC, V3920, P394
   ter Beek MH, 2020, IEEE T SOFTWARE ENG, V46, P321, DOI 10.1109/TSE.2018.2853726
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
NR 42
TC 8
Z9 8
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2021
VL 47
IS 6
BP 1114
EP 1133
DI 10.1109/TSE.2019.2912958
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SQ8XU
UT WOS:000660633800002
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Hu, YK
   Wang, H
   Zhang, YY
   Li, BD
   Gu, DW
AF Hu, Yikun
   Wang, Hui
   Zhang, Yuanyuan
   Li, Bodong
   Gu, Dawu
TI A Semantics-Based Hybrid Approach on Binary Code Similarity Comparison
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Binary codes; Semantics; Computer architecture; Runtime; Computer
   science; Feature extraction; Internet of Things; Binary code similarity
   comparison; reverse engineering; program analysis; code clone
AB Binary code similarity comparison is a methodology for identifying similar or identical code fragments in binary programs. It is indispensable in fields of software engineering and security, which has many important applications (e.g., plagiarism detection, bug detection). With the widespread of smart and Internet of Things (IoT) devices, an increasing number of programs are ported to multiple architectures (e.g., ARM, MIPS). It becomes necessary to detect similar binary code across architectures as well. The main challenge of this topic lies in the semantics-equivalent code transformation resulting from different compilation settings, code obfuscation, and varied instruction set architectures. Another challenge is the trade-off between comparison accuracy and coverage. Unfortunately, existing methods still heavily rely on semantics-less code features which are susceptible to the code transformation. Additionally, they perform the comparison merely either in a static or in a dynamic manner, which cannot achieve high accuracy and coverage simultaneously. In this paper, we propose a semantics-based hybrid method to compare binary function similarity. We execute the reference function with test cases, then emulate the execution of every target function with the runtime information migrated from the reference function. Semantic signatures are extracted during the execution as well as the emulation. Lastly, similarity scores are calculated from the signatures to measure the likeness of functions. We have implemented the method in a prototype system designated as BinMatch which performs binary code similarity comparison across architectures of x86, ARM and MIPS on the Linux platform. We evaluate BinMatch with nine real-word projects compiled with different compilation settings, on variant architectures, and with commonly-used obfuscation methods, totally performing over 100 million pairs of function comparison. The experimental results show that BinMatch is resilient to the semantics-equivalent code transformation. Besides, it not only covers all target functions for similarity comparison, but also improves the accuracy comparing to the state-of-the-art solutions.
C1 [Hu, Yikun; Wang, Hui; Zhang, Yuanyuan; Li, Bodong; Gu, Dawu] Shanghai Jiao Tong Univ, Dept Comp Sci & Technol, SEIEE, Shanghai 200240, Peoples R China.
C3 Shanghai Jiao Tong University
RP Gu, DW (corresponding author), Shanghai Jiao Tong Univ, Dept Comp Sci & Technol, SEIEE, Shanghai 200240, Peoples R China.
EM yixiaoxian@sjtu.edu.cn; tony-wh@sjtu.edu.cn; yyjess@sjtu.edu.cn;
   uchihal@sjtu.edu.cn; dwgu@sjtu.edu.cn
FU Key Program of National Natural Science Foundation of China [U1636217];
   National Key Research and Development Program of China [2016YFB0801201,
   2016QY071401]; Major Project of Ministry of Industry and Information
   Technology of China [[2018] 282]; Ant Financial Services Group
FX This work is partially supported by the Key Program of National Natural
   Science Foundation of China (No. U1636217), the National Key Research
   and Development Program of China (No. 2016YFB0801201, No. 2016QY071401),
   and the Major Project of Ministry of Industry and Information Technology
   of China (No. [2018] 282). The authors would like to thank the support
   from the Ant Financial Services Group as well.
CR Andrew W., 2007, P DAGST SEM DUPL RED
   Andriesse D, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P583
   [Anonymous], 2016, P NETW DISTR SYST SE
   [Anonymous], 2016, P 25 INT S SOFTWARE, DOI DOI 10.1145/2931037.2931047
   Balakrishnan A., 2005, CS701 U WISC DEP COM, V19
   Bao T, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P845
   Bellard F, 2005, USENIX Association Proceedings of the FREENIX/Open Source Track, P41
   Bergroth L, 2000, SPIRE 2000: SEVENTH INTERNATIONAL SYMPOSIUM ON STRING PROCESSING AND INFORMATION RETRIEVAL - PROCEEDINGS, P39, DOI 10.1109/SPIRE.2000.878178
   Brumley D, 2008, P IEEE S SECUR PRIV, P143, DOI 10.1109/SP.2008.17
   Chandramohan M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P678, DOI 10.1145/2950290.2950350
   CHANG PP, 1992, SOFTWARE PRACT EXPER, V22, P349, DOI 10.1002/spe.4380220502
   Charikar M. S., 2002, P 34 ANN ACM S THEOR, P380
   David Y, 2018, ACM SIGPLAN NOTICES, V53, P392, DOI [10.1145/3173162.3177157, 10.1145/3296957.3177157]
   David Y, 2017, ACM SIGPLAN NOTICES, V52, P79, DOI [10.1145/3140587.3062387, 10.1145/3062341.3062387]
   David Y, 2016, ACM SIGPLAN NOTICES, V51, P266, DOI [10.1145/2908080.2908126, 10.1145/2980983.2908126]
   David Y, 2014, ACM SIGPLAN NOTICES, V49, P349, DOI [10.1145/2594291.2594343, 10.1145/2666356.2594343]
   Ding S. H., 2019, P IEEE S SEC PRIV, P38
   Ding SHH, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P461, DOI 10.1145/2939672.2939719
   Duan R., 2019, P NETW DISTR SYST SE
   Egele M, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P303
   Feng Q., 2016, P 2016 ACM SIGSAC C, P480, DOI [10.1145/2976749.2978370, DOI 10.1145/2976749.2978370]
   Feng Q, 2017, PROCEEDINGS OF THE 2017 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIA CCS'17), P346, DOI 10.1145/3052973.3052995
   Flake H., 2004, P 1 INT C DET INTR M
   Giuffrida Cristiano, 2017, NETW DISTR SYST SEC
   HAMERS L, 1989, INFORM PROCESS MANAG, V25, P315, DOI 10.1016/0306-4573(89)90048-4
   HAMMING RW, 1950, BELL SYST TECH J, V29, P147, DOI 10.1002/j.1538-7305.1950.tb00463.x
   Harper R, 2016, Practical Foundations for Programming Languages
   Hemel A., 2011, P 8 WORK C MIN SOFTW, P63
   Hu YK, 2018, PROC IEEE INT CONF S, P104, DOI 10.1109/ICSME.2018.00019
   Hu YK, 2017, INT C PROGRAM COMPRE, P88, DOI 10.1109/ICPC.2017.22
   Hu YK, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P57, DOI 10.1109/SANER.2016.50
   Huang H, 2017, PROCEEDINGS OF THE 2017 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIA CCS'17), P155, DOI 10.1145/3052973.3052974
   Jhi YC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P756, DOI 10.1145/1985793.1985899
   Junod P, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE PROTECTION (SPRO), P3, DOI 10.1109/SPRO.2015.10
   Kargén U, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P782, DOI 10.1145/2786805.2786844
   Khoo WM, 2013, IEEE WORK CONF MIN S, P329, DOI 10.1109/MSR.2013.6624046
   Kim S, 2017, IEEE INT CONF AUTOM, P353, DOI 10.1109/ASE.2017.8115648
   Laszlo T, 2009, ANN U SCI BUDAPESTIN, V30, P3
   Le Quoc V., 2014, P INT C MACH LEARN I
   Lindorfer M, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P349
   Liu BC, 2018, IEEE INT CONF AUTOM, P667, DOI 10.1145/3238147.3238199
   Luo LN, 2017, IEEE T SOFTWARE ENG, V43, P1157, DOI 10.1109/TSE.2017.2655046
   Luo LN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P389, DOI 10.1145/2635868.2635900
   Mikolov T., 2013, PROC 1 INT C LEARN R, P1301
   Ming J, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P253
   Nethercote N, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P89, DOI 10.1145/1250734.1250746
   Pewny J., 2014, P 30 ANN COMP SEC AP, P406, DOI [10.1145/2664243.2664269, DOI 10.1145/2664243.2664269]
   Pewny J, 2015, P IEEE S SECUR PRIV, P709, DOI 10.1109/SP.2015.49
   Sæbjornsen A, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P117
   Shin ECR, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P611
   Shirani P, 2018, LECT NOTES COMPUT SC, V10885, P114, DOI 10.1007/978-3-319-93411-2_6
   Shoshitaishvili Y, 2016, P IEEE S SECUR PRIV, P138, DOI 10.1109/SP.2016.17
   Udupa SK, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P45
   Wang S, 2017, IEEE INT CONF AUTOM, P319, DOI 10.1109/ASE.2017.8115645
   Wang XY, 2012, IEEE INT CONF AUTOM, P170, DOI 10.1145/2351676.2351701
   Wang XR, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P280
   Xu DP, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P442, DOI 10.1145/3243734.3243827
   Xu XJ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P363, DOI 10.1145/3133956.3134018
   Yadegari B, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P732, DOI 10.1145/2810103.2813663
   Yadegari B, 2015, P IEEE S SECUR PRIV, P674, DOI 10.1109/SP.2015.47
   Zhang F., 2012, Proceedings of the 2012 International Symposium on Software Testing and Analysis, ACM, P111
   Zhang FF, 2014, PROC INT SYMP SOFTW, P66, DOI 10.1109/ISSRE.2014.18
   Zhang H, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P887
   Zuo F., 2019, P NETW DISTR SYST SE
NR 64
TC 10
Z9 11
U1 2
U2 26
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2021
VL 47
IS 6
BP 1241
EP 1258
DI 10.1109/TSE.2019.2918326
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SQ8XU
UT WOS:000660633800009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yan, M
   Xia, X
   Shihab, E
   Lo, D
   Yin, JW
   Yang, XH
AF Yan, Meng
   Xia, Xin
   Shihab, Emad
   Lo, David
   Yin, Jianwei
   Yang, Xiaohu
TI Automating Change-Level Self-Admitted Technical Debt Determination
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Feature extraction; Java; Labeling; Software quality; Technical debt;
   software change; change-level determination; self-admitted technical
   debt
ID CLASSIFYING SOFTWARE CHANGES; PREDICTION; CLASSIFICATION
AB Technical debt (TD) is a metaphor to describe the situation where developers introduce suboptimal solutions during software development to achieve short-term goals that may affect the long-term software quality. Prior studies proposed different techniques to identify TD, such as identifying TD through code smells or by analyzing source code comments. Technical debt identified using comments is known as Self-Admitted Technical Debt (SATD) and refers to TD that is introduced intentionally. Compared with TD identified by code metrics or code smells, SATD is more reliable since it is admitted by developers using comments. Thus far, all of the state-of-the-art approaches identify SATD at the file-level. In essence, they identify whether a file has SATD or not. However, all of the SATD is introduced through software changes. Previous studies that identify SATD at the file-level in isolation cannot describe the TD context related to multiple files. Therefore, it is beneficial to identify the SATD once a change is being made. We refer to this type of TD identification as "Change-level SATD Determination", which determines whether or not a change introduces SATD. Identifying SATD at the change-level can help to manage and control TD by understanding the TD context through tracing the introducing changes. To build a change-level SATD Determination model, we first identify TD from source code comments in source code files of all versions. Second, we label the changes that first introduce the SATD comments as TD-introducing changes. Third, we build the determination model by extracting 25 features from software changes that are divided into three dimensions, namely diffusion, history and message, respectively. To evaluate the effectiveness of our proposed model, we perform an empirical study on 7 open source projects containing a total of 100,011 software changes. The experimental results show that our model achieves a promising and better performance than four baselines in terms of AUC and cost-effectiveness (i.e., percentage of TD-introducing changes identified when inspecting 20 percent of changed LOC). On average across the 7 experimental projects, our model achieves AUC of 0.82, cost-effectiveness of 0.80, which is a significant improvement over the comparison baselines used. In addition, we found that "Diffusion" is the most discriminative dimension among the three dimensions of features for determining TD-introducing changes.
C1 [Yan, Meng; Yin, Jianwei; Yang, Xiaohu] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310027, Zhejiang, Peoples R China.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
   [Shihab, Emad] Concordia Univ, Dept Comp Sci & Software Engn, Data Driven Anal Software DAS Lab, Montreal, PQ H3G 1M8, Canada.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
C3 Zhejiang University; Monash University; Concordia University - Canada;
   Singapore Management University
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
EM mengy@zju.edu.cn; xin.xia@monash.edu; eshihab@encs.concordia.ca;
   davidlo@smu.edu.sg; zjuyjw@cs.zju.edu.cn; yangxh@zju.edu.cn
RI Xia, Xin/AAD-6217-2022; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Yan, Meng/0000-0002-9538-9121; Lo,
   David/0000-0002-4367-7201
FU NSFC Program [61602403, 61572426]; China Postdoctoral Science Foundation
   [2017M621931]
FX The authors would like to thank the editor and the anonymous reviewers
   for their constructive comments and recommendations to improve this
   paper. This research was supported by NSFC Program (No. 61602403 and
   61572426) and China Postdoctoral Science Foundation (No. 2017M621931).
CR Abdi H, 2007, ENCY MEASUREMENT STA, P103, DOI DOI 10.4135/9781412952644
   Ali K, 2012, LECT NOTES COMPUT SC, V7313, P688, DOI 10.1007/978-3-642-31057-7_30
   Avgeriou P., 2016, DAGSTUHL REP, V6, P1
   Bao LF, 2017, IEEE WORK CONF MIN S, P170, DOI 10.1109/MSR.2017.58
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Call HC, 2009, IEEE SOFTWARE, V26, P26, DOI 10.1109/MS.2009.6
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Collard ML, 2013, PROC IEEE INT CONF S, P516, DOI 10.1109/ICSM.2013.85
   Cunningham W., 1993, OOPS MESSENGER, V4, P29, DOI DOI 10.1145/157710.157715
   Farias MAD, 2016, PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 1 (ICEIS), P369, DOI 10.5220/0005914503690378
   Farias MAD, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P25, DOI 10.1109/MTD.2015.7332621
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Fan YR, 2018, EMPIR SOFTW ENG, V23, P3346, DOI 10.1007/s10664-018-9602-0
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fluri B, 2006, INT C PROGRAM COMPRE, P35, DOI 10.1109/ICPC.2006.16
   Fontana F. A., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P15, DOI 10.1109/MTD.2012.6225993
   Fontana FA, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P609, DOI 10.1109/SANER.2016.84
   Fu Y, 2015, INFORM SOFTWARE TECH, V57, P369, DOI 10.1016/j.infsof.2014.05.017
   Graf J, 2010, IEEE INT WORK C SO, P105, DOI 10.1109/SCAM.2010.9
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Han J, 2012, MOR KAUF D, P1
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Huang J, 2005, IEEE T KNOWL DATA EN, V17, P299, DOI 10.1109/TKDE.2005.50
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Japkowicz N., 2002, Intelligent Data Analysis, V6, P429
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Kamei E.d.S., 2016, QUASOQ TDA APSEC, P68
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Lim E, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.130
   Macho C, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P541, DOI 10.1109/SANER.2016.22
   Maldonado ED, 2017, PROC IEEE INT CONF S, P238, DOI 10.1109/ICSME.2017.8
   Maldonado ED, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P9, DOI 10.1109/MTD.2015.7332619
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   McCallum A., 1998, AAAI 98 WORKSH LEARN, V752, P41, DOI DOI 10.1109/TSMC.1985.6313426
   McIntosh S, 2014, PROC IEEE INT CONF S, P241, DOI 10.1109/ICSME.2014.46
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Nord R. L., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P91, DOI 10.1109/WICSA-ECSA.212.17
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Seaman C, 2011, ADV COMPUT, V82, P25, DOI 10.1016/B978-0-12-385512-1.00002-5
   Storey MA, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P251, DOI 10.1145/1368088.1368123
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Tsantalis N, 2015, IEEE T SOFTWARE ENG, V41, P1055, DOI 10.1109/TSE.2015.2448531
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Wehaibi S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P179, DOI 10.1109/SANER.2016.72
   Wilcoxon Frank, 1992, BREAKTHROUGHS STAT, P196, DOI [DOI 10.1007/978-1-4612-4380-9_16, 10.1007/978-1-4612-4380-9_16, DOI 10.1007/978-1-4612-4380-9]
   Wolpert DH, 1999, MACH LEARN, V35, P41, DOI 10.1023/A:1007519102914
   Xia X, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962606
   Xia X, 2017, EMPIR SOFTW ENG, V22, P3149, DOI 10.1007/s10664-017-9514-4
   Xia X, 2016, IEEE T RELIAB, V65, P1810, DOI 10.1109/TR.2016.2588139
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xia X, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P311, DOI 10.1109/SANER.2015.7081841
   Xie X, 2014, P INT COMP SOFTW APP, P107, DOI 10.1109/COMPSAC.2014.17
   Yan M, 2017, INT SYMP EMP SOFTWAR, P344, DOI 10.1109/ESEM.2017.48
   Yan M, 2016, J SYST SOFTWARE, V113, P296, DOI 10.1016/j.jss.2015.12.019
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yuepu Guo, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P528, DOI 10.1109/ICSM.2011.6080824
   Zazworka N., 2013, Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering, DOI DOI 10.1145/2460999.2461005.ASSOCIATIONFORCOMPUTINGMACHINERY
   Zazworka N., 2010, P INT S EMP SOFTW EN
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
NR 77
TC 45
Z9 48
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2019
VL 45
IS 12
BP 1211
EP 1229
DI 10.1109/TSE.2018.2831232
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA JW0NQ
UT WOS:000502756700003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Dashevskyi, S
   Brucker, AD
   Massacci, F
AF Dashevskyi, Stanislav
   Brucker, Achim D.
   Massacci, Fabio
TI A Screening Test for Disclosed Vulnerabilities in FOSS Components
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Security maintenance; security vulnerabilities; patch management; free
   and open source software
ID UPGRADES; IMPACT; MODEL
AB Free and Open Source Software (FOSS) components are ubiquitous in both proprietary and open source applications. Each time a vulnerability is disclosed in a FOSS component, a software vendor using this component in an application must decide whether to update the FOSS component, patch the application itself, or just do nothing as the vulnerability is not applicable to the older version of the FOSS component used. This is particularly challenging for enterprise software vendors that consume thousands of FOSS components and offer more than a decade of support and security fixes for their applications. Moreover, customers expect vendors to react quickly on disclosed vulnerabilities-in case of widely discussed vulnerabilities such as Heartbleed, within hours. To address this challenge, we propose a screening test: a novel, automatic method based on thin slicing, for estimating quickly whether a given vulnerability is present in a consumed FOSS component by looking across its entire repository. We show that our screening test scales to large open source projects (e.g., Apache Tomcat, Spring Framework, Jenkins) that are routinely used by large software vendors, scanning thousands of commits and hundred thousands lines of code in a matter of minutes. Further, we provide insights on the empirical probability that, on the above mentioned projects, a potentially vulnerable component might not actually be vulnerable after all.
C1 [Brucker, Achim D.] Univ Sheffield, Comp Sci Dept, Software Secur, Sheffield S1 4DP, S Yorkshire, England.
   [Dashevskyi, Stanislav; Massacci, Fabio] Univ Trento, I-38122 Trento, TN, Italy.
   [Dashevskyi, Stanislav] Univ Luxembourg, SaToSS Res Grp, L-4365 Luxembourg, Luxembourg.
C3 University of Sheffield; University of Trento; University of Luxembourg
RP Dashevskyi, S (corresponding author), Univ Trento, I-38122 Trento, TN, Italy.; Dashevskyi, S (corresponding author), Univ Luxembourg, SaToSS Res Grp, L-4365 Luxembourg, Luxembourg.
EM stanislav.dashevskyi@uni.lu; a.brucker@sheffield.ac.uk;
   fabio.massacci@unitn.it
RI Massacci, Fabio/C-2662-2012; Brucker, Achim D./J-7083-2013
OI Massacci, Fabio/0000-0002-1091-8486; Brucker, Achim
   D./0000-0002-6355-1200
FU European Union [317387 SECENTIS]; EU project VAMOSS [EIT/EIT
   DIGITAL/SGA2016-16367]; CISCO Country Digitalization Grant (Filiera
   Sicura)
FX We would like to thank M. Bernhardt, H. Plate, S. Ponta, A. Sabetta, and
   U. Sodan for many discussions on the challenges faced by software
   vendors, and E. Blanzieri for suggesting the name of "screening test"
   for our method. This work has been partly supported by the European
   Union under the grant 317387 SECENTIS (FP7-PEOPLE-2012-IT), EU project
   VAMOSS (EIT/EIT DIGITAL/SGA2016-16367), and CISCO Country Digitalization
   Grant (Filiera Sicura).
CR Acharya M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P746, DOI 10.1145/1985793.1985898
   Agresti A., 2012, Statistics: the art science of learning from data, V3rd
   Allodi L, 2014, ACM T INFORM SYST SE, V17, DOI 10.1145/2630069
   [Anonymous], 2016, 10 ANN FUTURE OPEN S
   Ayewah N, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P1, DOI 10.1145/1251535.1251536
   Baca D, 2009, 2009 INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY (ARES), VOLS 1 AND 2, P804, DOI 10.1109/ARES.2009.163
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1275, DOI 10.1007/s10664-014-9325-9
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Dashevskyi Stanislav, 2016, Engineering Secure Software and Systems. 8th International Symposium, ESSoS 2016. Proceedings: LNCS 9639, P190, DOI 10.1007/978-3-319-30806-7_12
   Di Penta M, 2009, INFORM SOFTWARE TECH, V51, P1469, DOI 10.1016/j.infsof.2009.04.013
   Dumitras T, 2010, ACM SIGPLAN NOTICES, V45, P865, DOI 10.1145/1932682.1869530
   Ellison G, 2000, RAND J ECON, V31, P253, DOI 10.2307/2601040
   Fonseca J, 2008, I C DEPEND SYS NETWO, P257, DOI 10.1109/DSN.2008.4630094
   Forrester Consulting, 2011, TECH REP
   Graf J, 2010, IEEE INT WORK C SO, P105, DOI 10.1109/SCAM.2010.9
   Grimes DA, 2002, LANCET, V359, P881, DOI 10.1016/S0140-6736(02)07948-5
   Herzig K, 2016, EMPIR SOFTW ENG, V21, P303, DOI 10.1007/s10664-015-9376-6
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Höst M, 2011, INFORM SOFTWARE TECH, V53, P616, DOI 10.1016/j.infsof.2010.12.009
   Ioannidis C, 2012, EUR J OPER RES, V216, P434, DOI 10.1016/j.ejor.2011.05.050
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Levin Stanislav, 2017, P 13 INT C PREDICTIV, P97
   Li JY, 2009, IEEE SOFTWARE, V26, P80, DOI 10.1109/MS.2009.33
   Livshits B, 2015, COMMUN ACM, V58, P44, DOI 10.1145/2644805
   Massacci F, 2014, IEEE T SOFTWARE ENG, V40, P1147, DOI 10.1109/TSE.2014.2354037
   Meneely Andrew, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P65, DOI 10.1109/ESEM.2013.19
   Miller Jr Rupert G, 2011, Survival analysis, V66
   Mukherji N, 2006, DECIS SUPPORT SYST, V42, P1684, DOI 10.1016/j.dss.2006.02.013
   Nappa A, 2015, P IEEE S SECUR PRIV, P692, DOI 10.1109/SP.2015.48
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Nguyen V.H., 2016, Empirical Software Engineering, V21, P2268, DOI DOI 10.1007/S10664-015-9408-2
   Nyman L, 2011, IFIP ADV INF COMM TE, V365, P259
   Plate H, 2015, PROC IEEE INT CONF S, P411, DOI 10.1109/ICSM.2015.7332492
   Ranganath Venkatesh Prasad, 2007, International Journal on Software Tools for Technology Transfer, V9, P489, DOI 10.1007/s10009-007-0043-0
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Robbes R., 2012, P ACM SIGSOFT 20 INT
   Robles G., 2012, OPEN SOURCE SYSTEMS, P1, DOI DOI 10.1007/978-3-642-33442-91
   Ruthruff JR, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P341, DOI 10.1145/1368088.1368135
   Sahin I, 2001, J SOFTW MAINT EVOL-R, V13, P469, DOI 10.1002/smr.242
   Samoladas I, 2008, INT FED INFO PROC, V275, P237
   Sipser M., 2013, INTRO THEORY COMPUTA, V3
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Sridharan M, 2007, ACM SIGPLAN NOTICES, V42, P112, DOI 10.1145/1273442.1250748
   Stanciulescu S, 2015, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSM.2015.7332461
   Thomé J, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P553, DOI 10.1109/ISSRE.2015.7381847
   Treffer A., 2014, Proceedings of the 3rd ACM SIGPLAN International Workshop on the State of the Art in Java Program Analysis, SOAP '14, ACM, New York, NY, USA, P1
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Welsh A, 2011, LANDSLIDES, V8, P183, DOI 10.1007/s10346-010-0238-4
   Zhang Su, 2015, INT C NETW SYST SEC, P405
   Zimmermann T., 2007, P 3 INT WORKSH PRED
NR 51
TC 21
Z9 23
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2019
VL 45
IS 10
BP 945
EP 966
DI 10.1109/TSE.2018.2816033
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA JV1FR
UT WOS:000502113300001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Frey, S
   Rashid, A
   Anthonysamy, P
   Pinto-Albuquerque, M
   Naqvi, SA
AF Frey, Sylvain
   Rashid, Awais
   Anthonysamy, Pauline
   Pinto-Albuquerque, Maria
   Naqvi, Syed Asad
TI The Good, the Bad and the Ugly: A Study of Security Decisions in a
   Cyber-Physical Systems Game
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Security decisions; security requirements; game; decision patterns
ID INFORMATION SECURITY
AB Stakeholders' security decisions play a fundamental role in determining security requirements, yet, little is currently understood about how different stakeholder groups within an organisation approach security and the drivers and tacit biases underpinning their decisions. We studied and contrasted the security decisions of three demographics-security experts, computer scientists and managers-when playing a tabletop game that we designed and developed. The game tasks players with managing the security of a cyber-physical environment while facing various threats. Analysis of 12 groups of players (4 groups in each of our demographics) reveals strategies that repeat in particular demographics, e.g., managers and security experts generally favoring technological solutions over personnel training, which computer scientists preferred. Surprisingly, security experts were not ipso facto better players-in some cases, they made very questionable decisions-yet they showed a higher level of confidence in themselves. We classified players' decision-making processes, i.e., procedure-, experience-, scenario-or intuition-driven. We identified decision patterns, both good practices and typical errors and pitfalls. Our game provides a requirements sandbox in which players can experiment with security risks, learn about decision-making and its consequences, and reflect on their own perception of security.
C1 [Frey, Sylvain] Univ Southampton, Southampton SO17 1BJ, Hants, England.
   [Rashid, Awais] Univ Bristol, Bristol BS8 1TH, Avon, England.
   [Anthonysamy, Pauline] Google, CH-8002 Zurich, Switzerland.
   [Pinto-Albuquerque, Maria] IUL, ISCTE, P-1649026 Lisbon, Portugal.
   [Naqvi, Syed Asad] Univ Lancaster, Lancaster LA1 4YW, England.
C3 University of Southampton; University of Bristol; Google Incorporated;
   Instituto Universitario de Lisboa; Lancaster University
RP Rashid, A (corresponding author), Univ Bristol, Bristol BS8 1TH, Avon, England.
EM frey.sylvain@gmail.com; awais.rashid@bristol.ac.uk;
   anthonysp@google.com; maria.albuquerque@iscte-iul.pt;
   s.naqvi@lancaster.ac.uk
RI Naqvi, Syed Asad Ali/GSD-3366-2022; Pinto-Albuquerque, Maria/G-9745-2012
OI Pinto-Albuquerque, Maria/0000-0002-2725-7629; Rashid,
   Awais/0000-0002-0109-1341
FU UK Engineering and Physical Science Research Council Grant, Mumba:
   Multi-faceted metrics for ICS business risk analysis, part of the UK
   Research Institute on Trustworthy Industrial Control Systems (RITICS)
   [EP/M002780/1]; EPSRC [EP/M002780/1] Funding Source: UKRI
FX This work is supported by UK Engineering and Physical Science Research
   Council Grant, Mumba: Multi-faceted metrics for ICS business risk
   analysis (EP/M002780/1), part of the UK Research Institute on
   Trustworthy Industrial Control Systems (RITICS). The authors also wish
   to thank Alexander whose Lego play inspired the development of D-D.
CR Anderson A., 2006, EDUCAUSE Q, P15
   [Anonymous], 2013, PROC C COMPUTER COMM, DOI 10.1145/2508859.2516753
   Antrobus R., 2016, P 4 INT S ICS SCADA, P1
   Baker WH, 2007, IEEE SECUR PRIV, V5, P36, DOI 10.1109/MSP.2007.11
   Beckers K, 2016, INT REQUIR ENG CONF, P16, DOI 10.1109/RE.2016.39
   Bodin LD, 2008, COMMUN ACM, V51, P64, DOI 10.1145/1330311.1330325
   Cavusoglu H, 2004, COMMUN ACM, V47, P87, DOI 10.1145/1005817.1005828
   Coles-Kemp L, 2007, J COMPUT VIROL HACKI, V3, P143, DOI 10.1007/s11416-007-0040-6
   Corriss L, 2010, P 2010 WORKSH GOV TE, P35, DOI 10.1145/1920320.1920326
   DONCHIN E, 1995, BEHAV RES METH INSTR, V27, P217, DOI 10.3758/BF03204735
   Frey S, 2016, 2016 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SMART CYBER-PHYSICAL SYSTEMS (SESCPS), P43, DOI [10.1109/SEsCPS.2016.015, 10.1145/2897035.2897036]
   Gordon L. A., 2002, ACM Transactions on Information and Systems Security, V5, P438, DOI 10.1145/581271.581274
   Irvine CE, 2005, IEEE SECUR PRIV, V3, P61, DOI 10.1109/MSP.2005.64
   Jain A, 2006, CONF SOFTW ENG EDUC, P103
   Jardine W, 2016, CPS-SPC'16: PROCEEDINGS OF THE 2ND ACM WORKSHOP ON CYBER-PHYSICAL SYSTEMS SECURITY & PRIVACY, P23, DOI 10.1145/2994487.2994496
   KIRSH D, 1994, COGNITIVE SCI, V18, P513, DOI 10.1207/s15516709cog1804_1
   McAfee, 2015, THREATS REP
   National Bureau of Standards Federal Information Processing Standards Publications (FIPS PUB), 1975, FIPS PUB
   Navarro E. O., 2004, P INT C SIM ED, P9
   Navarro EO, 2007, CONF SOFTW ENG EDUC, P195, DOI 10.1109/CSEET.2007.14
   Pinto-Albuquerque M, 2014, INT REQUIR ENG CONF, P233, DOI 10.1109/RE.2014.6912265
   Rainer R. K.  Jr., 1991, Journal of Management Information Systems, V8, P129
   SANS Institute, 2015, STAT SEC CONTR SYST
   Smith R, 2008, INT REQUIR ENG CONF, P95, DOI 10.1109/RE.2008.33
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Sur-Seal, 2013, LEG PLAN MOD
   Taran G, 2007, CONF SOFTW ENG EDUC, P211, DOI 10.1109/CSEET.2007.54
   Zanutto A., 2017, P 3 WORKSH SEC INF W
NR 28
TC 30
Z9 34
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2019
VL 45
IS 5
BP 521
EP 536
DI 10.1109/TSE.2017.2782813
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HY6HC
UT WOS:000468230000004
OA Green Accepted, hybrid, Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Yu, L
   Tsai, WT
AF Yu, Lian
   Tsai, Wei-Tek
TI Test Case Generation for Boolean Expressions by Cell Covering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Boolean expression testing; fault characterization; cell-covering
   problem; approximate algorithms
ID ERROR-DETECTION CAPABILITY; TEST DATA SELECTION; FAULT CLASSES;
   STRATEGIES
AB This paper characterizes Boolean expression faults as changes of the topological structures in terms of shrinking and/or expanding regions in K-map. A cell-covering is a set of cells (test cases) in K-map to cover the fault regions such that faults guarantee to be detected. Minimizing cell covering can be formulated as an Integer Linear Programming (ILP) problem. By analyzing the structures of the constraint coefficient matrix, the original problem can be decomposed into sub-programs that can be solved instead of the original problem, and this significantly reduces the time needed for ILP execution. An efficient approximate algorithm with a tight theoretical bound is used to address those complex Boolean expressions by corresponding the cell-covering problem to the setcovering problem. The optimal approach and the approximate approach are combined into a hybrid process to identify test cases based on the fraction analysis on the ILP relaxation. The proposed approach is evaluated by three sets of Boolean expressions and the results are compared with three leading approaches with respect to test sizes, time consumption and fault detection capabilities. For most Boolean expressions encountered, the proposed approach obtains optimal solutions quickly, and produces near-optimal solutions rapidly for those rare and complex expressions.
C1 [Yu, Lian] Peking Univ, Sch Software & Microelect, Beijing 102600, Peoples R China.
   [Tsai, Wei-Tek] Beihang Univ, Beijing 102600, Peoples R China.
   [Tsai, Wei-Tek] Beihang Univ, Digital Soc, Beijing 102600, Peoples R China.
   [Tsai, Wei-Tek] Beihang Univ, Block Chain Lab, Beijing 102600, Peoples R China.
   [Tsai, Wei-Tek] Arizona State Univ, Sch Comp Informat & Decis Syst Engn, Tempe, AZ 85281 USA.
C3 Peking University; Beihang University; Beihang University; Beihang
   University; Arizona State University; Arizona State University-Tempe
RP Yu, L (corresponding author), Peking Univ, Sch Software & Microelect, Beijing 102600, Peoples R China.
EM lianyu@ss.pku.edu.cn; wtsai@asu.edu
CR Arcaini P, 2015, COMPUT J, V58, P2900, DOI 10.1093/comjnl/bxv001
   Black PE, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P81, DOI 10.1109/ASE.2000.873653
   Chen T. Y., 1999, Proceedings Sixth Asia Pacific Software Engineering Conference (ASPEC'99) (Cat. No.PR00509), P606, DOI 10.1109/APSEC.1999.809656
   Chen TY, 1997, P INT COMP SOFTW APP, P608, DOI 10.1109/CMPSAC.1997.625080
   Chen TY, 2001, SOFTW TEST VERIF REL, V11, P165, DOI 10.1002/stvr.221
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   Cormen T. H., 2009, Introduction to Algorithms, VSecond
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Du D.-Z., 2011, Design and analysis of approximation algorithms
   Foster K. A., 1984, SIGSOFT Software Engineering Notes, V9, P120, DOI 10.1145/1010925.1010935
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P962, DOI 10.1109/32.245738
   Fraser Gordon, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P37, DOI 10.1109/ICSTW.2010.51
   Gargantini A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P322, DOI 10.1109/ICSTW.2011.94
   Gray F., 1953, United States Patent
   Hamlet R. G., 1982, IEEE T SOFTWARE ENG, V8, P371
   HAMMING RW, 1950, BELL SYST TECH J, V29, P147, DOI 10.1002/j.1538-7305.1950.tb00463.x
   Kaminski Garrett, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P331, DOI 10.1109/ICSTW.2010.49
   Kaminski G, 2008, SOFTW TEST VERIF REL, V18, P149, DOI 10.1002/stvr.386
   Kaminski G, 2011, SOFTW TEST VERIF REL, V21, P155, DOI 10.1002/stvr.442
   Kaminski G, 2011, INFORM SOFTWARE TECH, V53, P1137, DOI 10.1016/j.infsof.2011.03.009
   Kaminski G, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P356, DOI 10.1109/ICST.2009.14
   Karnaugh M., 1953, Trans. Am. Inst. Electr. Eng. I: Commun. Electron., V72, P593, DOI [10.1109/TCE.1953.6371932, DOI 10.1109/TCE.1953.6371932]
   Kobayashi N, 2002, INFORM SOFTWARE TECH, V44, P113, DOI 10.1016/S0950-5849(01)00222-1
   Kuhn DR, 1999, ACM T SOFTW ENG METH, V8, P411, DOI 10.1145/322993.322996
   Lau MF, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P117
   Lau MF, 2006, P INT COMP SOFTW APP, P403
   Lau M. F., 2007, P 12 INT C REL SOFTW, P55
   Lau MF, 2005, ACM T SOFTW ENG METH, V14, P247, DOI 10.1145/1072997.1072998
   Mitchell J.E., 2002, Handbook of Applied Optimization, V1, P65
   MORELL LJ, 1990, IEEE T SOFTWARE ENG, V16, P844, DOI 10.1109/32.57623
   Murty KG., 1983, LINEAR PROGRAMMING
   RICHARDSON DJ, 1993, IEEE T SOFTWARE ENG, V19, P533, DOI 10.1109/32.232020
   Stamelos I, 2003, J SYST SOFTWARE, V66, P57, DOI 10.1016/S0164-1212(02)00063-8
   Tai K.-C., 1987, Proceedings of COMPSAC 87. The Eleventh Annual International Computer Software and Applications Conference (Cat. No.87CH2447-1), P278
   Tai KC, 1996, IEEE T SOFTWARE ENG, V22, P552, DOI 10.1109/32.536956
   TAI KC, 1994, IBM SYST J, V33, P445, DOI 10.1147/sj.333.0445
   Tsai WT, 2005, IEICE T INF SYST, VE88D, P2691, DOI 10.1093/ietisy/e88-d.12.2691
   Tsuchiya T, 2002, ACM T SOFTW ENG METH, V11, P58, DOI 10.1145/504087.504089
   Vouk M. A., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P55, DOI 10.1109/ISSRE.1994.341348
   Weiss S. N., 1989, SIGSOFT Software Engineering Notes, V14, P42, DOI 10.1145/70739.70742
   WEYUKER E, 1994, IEEE T SOFTWARE ENG, V20, P353, DOI 10.1109/32.286420
   Williamson D. P., 2011, DESIGN APPROXIMATION, DOI DOI 10.1017/CBO9780511921735
   Yu L, 2009, INT CONF QUAL SOFTW, P31, DOI 10.1109/QSIC.2009.13
   Yu L, 2009, THIRD INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING, PROCEEDINGS, P267, DOI 10.1109/TASE.2009.52
   Yuen TY, 2006, J SYST SOFTWARE, V79, P577, DOI 10.1016/j.jss.2005.05.030
   Zhu H, 1996, IEEE T SOFTWARE ENG, V22, P248, DOI 10.1109/32.491648
NR 46
TC 4
Z9 4
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2018
VL 44
IS 1
BP 70
EP 99
DI 10.1109/TSE.2017.2669184
PG 30
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FS8VW
UT WOS:000422693800006
DA 2024-07-18
ER

PT J
AU Luo, LN
   Ming, J
   Wu, DH
   Liu, P
   Zhu, SC
AF Luo, Lannan
   Ming, Jiang
   Wu, Dinghao
   Liu, Peng
   Zhu, Sencun
TI Semantics-Based Obfuscation-Resilient Binary Code Similarity Comparison
   with Applications to Software and Algorithm Plagiarism Detection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software plagiarism detection; algorithm detection; binary code
   similarity comparison; obfuscation; symbolic execution; constraint
   solving
AB Existing code similarity comparison methods, whether source or binary code based, are mostly not resilient to obfuscations. Identifying similar or identical code fragments among programs is very important in some applications. For example, one application is to detect illegal code reuse. In the code theft cases, emerging obfuscation techniques have made automated detection increasingly difficult. Another application is to identify cryptographic algorithms which are widely employed by modern malware to circumvent detection, hide network communications, and protect payloads among other purposes. Due to diverse coding styles and high programming flexibility, different implementation of the same algorithm may appear very distinct, causing automatic detection to be very hard, let alone code obfuscations are sometimes applied. In this paper, we propose a binary-oriented, obfuscation-resilient binary code similarity comparison method based on a new concept, longest common subsequence of semantically equivalent basic blocks, which combines rigorous program semantics with longest common subsequence based fuzzy matching. We model the semantics of a basic block by a set of symbolic formulas representing the input-output relations of the block. This way, the semantic equivalence (and similarity) of two blocks can be checked by a theorem prover. We then model the semantic similarity of two paths using the longest common subsequence with basic blocks as elements. This novel combination has resulted in strong resiliency to code obfuscation. We have developed a prototype. The experimental results show that our method can be applied to software plagiarism and algorithm detection, and is effective and practical to analyze real-world software.
C1 [Luo, Lannan; Wu, Dinghao; Liu, Peng] Penn State Univ, Coll Informat Sci & Technol, University Pk, PA 16802 USA.
   [Ming, Jiang] Univ Texas Arlington, Dept Comp Sci & Engn, Arlington, TX 76019 USA.
   [Zhu, Sencun] Penn State Univ, Dept Comp Sci & Engn, University Pk, PA 16802 USA.
C3 Pennsylvania Commonwealth System of Higher Education (PCSHE);
   Pennsylvania State University; Pennsylvania State University -
   University Park; University of Texas System; University of Texas
   Arlington; Pennsylvania Commonwealth System of Higher Education (PCSHE);
   Pennsylvania State University; Pennsylvania State University -
   University Park
RP Luo, LN (corresponding author), Penn State Univ, Coll Informat Sci & Technol, University Pk, PA 16802 USA.
EM lzl144@ist.psu.edu; jum310@ist.psu.edu; dwu@ist.psu.edu;
   pliu@ist.psu.edu; szhu@cse.psu.edu
RI Luo, Lannan/AAM-7552-2021; Liu, Peng/A-4255-2013
OI Wu, Dinghao/0000-0002-0741-5511
FU US National Science Foundation [CCF-1320605]; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1320605] Funding Source: National Science Foundation
FX This work was supported in part by the US National Science Foundation
   Grant CCF-1320605. A preliminary version of this paper [49] appeared in
   the Proceedings of the 22nd ACM SIGSOFT International Symposium on the
   Foundations of Software Engineering (FSE '14), Hong Kong, China,
   November 16-22, 2014. Dinghao Wu is the corresponding author.
CR [Anonymous], VMPROTECT SOFTW PROT
   [Anonymous], 2012, INT C DETECTION INTR
   [Anonymous], 2007, P 16 USENIX SEC S US
   [Anonymous], P 25 IEEE INT S SOFT
   [Anonymous], COD VIRT TOT OBF REV
   [Anonymous], 2006, P 2006 ACM SIGPLAN S
   [Anonymous], P 19 INT C COMP AID
   [Anonymous], LAWS
   [Anonymous], KRYPT AN PEID
   [Anonymous], DRAFT CRYT AN
   [Anonymous], M A S DETECTING SOFT
   [Anonymous], BLACK HAT AB DHAB UN
   [Anonymous], 2006, P 13 ACM C COMPUTER
   [Anonymous], 50099 NAT I STAND TE
   [Anonymous], 2005, P 2005 ACM S APPL CO, DOI DOI 10.1145/1066677.1066753
   [Anonymous], 20001 U KARLSR
   [Anonymous], 2012, P 2 ACM C DATA APPL, DOI DOI 10.1145/2133601.2133640
   [Anonymous], PATCH AN BIN DIFF TO
   [Anonymous], THESIS
   [Anonymous], P 14 INT C REC ADV I
   [Anonymous], P INT S FUT SOFTW TE
   AURIEMMA L., 2013, Signsrch tool
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Balakrishnan G, 2010, ACM T PROGR LANG SYS, V32, DOI 10.1145/1749608.1749612
   BAP, 2013, NEXT GEN BIN AN PLAT
   Bayer U, 2006, J COMPUT VIROL HACKI, V2, P67, DOI 10.1007/s11416-006-0012-2
   Caballero J, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P621
   Cadar C, 2005, LECT NOTES COMPUT SC, V3639, P2
   Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   Calvet J., 2012, P 2012 ACM C COMP CO, P169, DOI DOI 10.1145/2382196.2382217
   Chen K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P175, DOI 10.1145/2568225.2568286
   Collberg C., 1998, Conference Record of POPL '98: 25th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P184, DOI 10.1145/268946.268962
   Collberg C., 1997, 148 U AUCKL
   Conway J.H., 1972, PROC 1972 NUMBER TH, P49
   Cormen T. H., 2009, Introduction to Algorithms, VSecond
   Crussell Jonathan, 2013, Computer Security - ESORICS 2013. 18th European Symposium on Research in Computer Security. Proceedings: LNCS 8134, P182, DOI 10.1007/978-3-642-40203-6_11
   Crussell Jonathan, 2012, Computer Security - ESORICS 2012. Proceedings 17th European Symposium on Research in Computer Security, P37, DOI 10.1007/978-3-642-33167-1_3
   Flake H., 2004, Proceedings of the Detection of Intrusions and Malware Vulnerability Assessment, GI SIG SIDAR Workshop, DIMVA 2004, Dortmund, Germany, 6-7 July 2004, P161, DOI [10.17877/DE290R-2007, DOI 10.17877/DE290R-2007]
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P321, DOI 10.1145/1368088.1368132
   Gao DB, 2008, LECT NOTES COMPUT SC, V5308, P238
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid Patrice, 2008, Network and Distributed Systems Security
   Heqing Huang, 2013, Trust and Trustworthy Computing. 6th International Conference, TRUST 2013. Proceedings: LNCS 7904, P169, DOI 10.1007/978-3-642-38908-5_13
   Hoffman K, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P453, DOI 10.1145/1542476.1542527
   Jacob M, 2008, LECT NOTES COMPUT SC, V5312, P100, DOI 10.1007/978-3-540-89598-5_7
   Jhi YC, 2015, IEEE T SOFTWARE ENG, V41, P925, DOI 10.1109/TSE.2015.2418777
   Jhi YC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P756, DOI 10.1145/1985793.1985899
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kang MG, 2007, WORM'07: PROCEEDINGS OF THE 2007 ACM WORKSHOP ON RECURRING MALCODE, P46
   Kleinberg Jon, 2005, ALGORITHM DESIGN
   Lagarias J., 2010, ULTIMATE CHALLENGE 3
   Lahiri Shuvendu K., 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P712, DOI 10.1007/978-3-642-31424-7_54
   Lannan Luo, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P550, DOI 10.1109/DSN.2016.56
   Linn C., 2003, P 10 ACM C COMP COMM, P290, DOI DOI 10.1145/948109.948149
   Liu Chao, 2006, Proc. 12th ACMSIGKDD Int'l Con. on Knowledge Discovery and Data Mining (KDD 06), P872, DOI DOI 10.1145/1150402.1150522
   Luo LN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P389, DOI 10.1145/2635868.2635900
   Martignoni L, 2007, TWENTY-THIRD ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P431, DOI 10.1109/ACSAC.2007.15
   Ming J, 2016, IEEE T RELIAB, V65, P1647, DOI 10.1109/TR.2016.2570554
   Ming J, 2012, PROCEEDINGS OF THE NINTH INTERNATIONAL FORUM - INTERNATIONAL TRADE AND INVESTMENT, P92
   Myles G, 2004, LECT NOTES COMPUT SC, V3225, P404
   Necula GC, 2002, LECT NOTES COMPUT SC, V2304, P213
   Royal P, 2006, ANN COMPUT SECURITY, P289, DOI 10.1109/ACSAC.2006.38
   Schleimer Saul, 2003, P 2003 ACM SIGMOD IN, P76, DOI [10.1145/872757.872770, DOI 10.1145/872757.872770]
   SCHULER D., 2007, ASE 07, P274, DOI 10.1145/1321631.1321672
   Sharif M.I., 2008, NETWORK DISTRIBUTED, DOI [DOI 10.1109/PIMRC.2008.4699874, DOI 10.1109/ITSIM.2008.4631627]
   Szor Peter, 2005, The art of computer virus research and defense: Art comp virus res defense p1
   Tamada H, 2004, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P569
   Wang XR, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P280
   Wang Z, 2009, LECT NOTES COMPUT SC, V5789, P200, DOI 10.1007/978-3-642-04444-1_13
   Willems C, 2007, IEEE SECUR PRIV, V5, P32, DOI 10.1109/MSP.2007.45
   WUU Y, 1991, SOFTWARE PRACT EXPER, V21, P739, DOI 10.1002/spe.4380210706
   Xin Z, 2011, LECT NOTES COMPUT SC, V7001, P1, DOI 10.1007/978-3-642-24861-0_1
   Zhang F., 2012, Proceedings of the 2012 International Symposium on Software Testing and Analysis, ACM, P111
   Zhang F., 2014, P 2014 ACM C SEC PRI, P25, DOI DOI 10.1145/2627393.2627395
   Zhou W., 2013, Proceedings of the third ACM conference on Data and application security and privacy, P185
NR 75
TC 63
Z9 70
U1 0
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2017
VL 43
IS 12
BP 1157
EP 1177
DI 10.1109/TSE.2017.2655046
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FQ1RH
UT WOS:000418134800005
OA Bronze
DA 2024-07-18
ER

PT J
AU Hao, D
   Zhang, L
   Zang, L
   Wang, YB
   Wu, XX
   Xie, T
AF Hao, Dan
   Zhang, Lu
   Zang, Lei
   Wang, Yanbo
   Wu, Xingxia
   Xie, Tao
TI To Be Optimal or Not in Test-Case Prioritization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Test-case prioritization; integer linear programming; greedy algorithm;
   empirical study
ID MUTATION
AB Software testing aims to assure the quality of software under test. To improve the efficiency of software testing, especially regression testing, test-case prioritization is proposed to schedule the execution order of test cases in software testing. Among various test-case prioritization techniques, the simple additional coverage-based technique, which is a greedy strategy, achieves surprisingly competitive empirical results. To investigate how much difference there is between the order produced by the additional technique and the optimal order in terms of coverage, we conduct a study on various empirical properties of optimal coverage-based test-case prioritization. To enable us to achieve the optimal order in acceptable time for our object programs, we formulate optimal coverage-based test-case prioritization as an integer linear programming (ILP) problem. Then we conduct an empirical study for comparing the optimal technique with the simple additional coverage-based technique. From this empirical study, the optimal technique can only slightly outperform the additional coverage-based technique with no statistically significant difference in terms of coverage, and the latter significantly outperforms the former in terms of either fault detection or execution time. As the optimal technique schedules the execution order of test cases based on their structural coverage rather than detected faults, we further implement the ideal optimal test-case prioritization technique, which schedules the execution order of test cases based on their detected faults. Taking this ideal technique as the upper bound of test-case prioritization, we conduct another empirical study for comparing the optimal technique and the simple additional technique with this ideal technique. From this empirical study, both the optimal technique and the additional technique significantly outperform the ideal technique in terms of coverage, but the latter significantly outperforms the former two techniques in terms of fault detection. Our findings indicate that researchers may need take cautions in pursuing the optimal techniques in test-case prioritization with intermediate goals.
C1 [Hao, Dan; Zhang, Lu; Zang, Lei; Wang, Yanbo; Wu, Xingxia] Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing 100871, Peoples R China.
   [Hao, Dan; Zhang, Lu; Zang, Lei; Wang, Yanbo; Wu, Xingxia] Peking Univ, Inst Software, Sch Elect Engn & Comp Sci, Beijing 100871, Peoples R China.
   [Xie, Tao] Univ Illinois, Dept Comp Sci, Champaign, IL USA.
C3 Peking University; Peking University; University of Illinois System;
   University of Illinois Urbana-Champaign
RP Hao, D; Zhang, L; Zang, L; Wang, YB; Wu, XX (corresponding author), Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing 100871, Peoples R China.; Hao, D; Zhang, L; Zang, L; Wang, YB; Wu, XX (corresponding author), Peking Univ, Inst Software, Sch Elect Engn & Comp Sci, Beijing 100871, Peoples R China.; Xie, T (corresponding author), Univ Illinois, Dept Comp Sci, Champaign, IL USA.
EM haodan@pku.edu.cn; zhanglucs@pku.edu.cn; zanglei@pku.edu.cn;
   wangyanbo@pku.edu.cn; wuxx10@sei.pku.edu.cn; taoxie@illinois.edu
RI Wang, Yanbo/HFZ-8018-2022; Wang, Yuan/HHC-1520-2022; wang,
   yan/GSE-6489-2022; wang, yan/JBJ-7462-2023; Hao, Dan/A-8600-2015
OI Hao, Dan/0000-0001-8295-303X
FU National 973 Program of China [2015CB352201]; National Natural Science
   Foundation of China [61421091, 61225007, 61529201, 61522201, 61272157];
   National Science Foundation of the United States [CCF-1349666,
   CCF-1409423, CNS-1434582, CCF-1434590, CCF-1434596, CNS-1439481,
   CNS-1513939]; Direct For Computer & Info Scie & Enginr [1409829] Funding
   Source: National Science Foundation; Division of Computing and
   Communication Foundations [1409829] Funding Source: National Science
   Foundation; Division of Computing and Communication Foundations; Direct
   For Computer & Info Scie & Enginr [1409423, 1434596] Funding Source:
   National Science Foundation
FX This work is supported by the National 973 Program of China No.
   2015CB352201, the National Natural Science Foundation of China under
   Grants Nos. 61421091, 61225007, 61529201, 61522201, and 61272157. This
   work is also supported by the National Science Foundation of the United
   States under grants Nos. CCF-1349666, CCF-1409423, CNS-1434582,
   CCF-1434590, CCF-1434596, CNS-1439481, and CNS-1513939. Besides, the
   authors would like to thank Shanshan Hou, Xinyi Wan, and Chao Guo. They
   contributed to the early discussion of this work.
CR Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2011, Software Engineering Notes, DOI DOI 10.1145/2047414.2047431
   Baluda M, 2011, SOFTWARE QUAL J, V19, P725, DOI 10.1007/s11219-011-9150-y
   Chen TY, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-015-5314-x
   Delamaro M.E., 1996, P C PERFORMABILITY C, P79
   Do H, 2005, PROC IEEE INT CONF S, P411
   Do H, 2006, EMPIR SOFTW ENG, V11, P33, DOI 10.1007/s10664-006-5965-8
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Do H, 2010, IEEE T SOFTWARE ENG, V36, P593, DOI 10.1109/TSE.2010.58
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   Fang CR, 2014, SOFTWARE QUAL J, V22, P335, DOI 10.1007/s11219-013-9224-0
   Fang CR, 2012, SCI CHINA INFORM SCI, V55, P2826, DOI 10.1007/s11432-012-4746-9
   Hao D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685614
   Hao D, 2013, P INT COMP SOFTW APP, P169, DOI 10.1109/COMPSAC.2013.31
   Hao D, 2012, PROC INT CONF SOFTW, P738, DOI 10.1109/ICSE.2012.6227144
   Hou SS, 2008, PROC IEEE INT CONF S, P257, DOI 10.1109/ICSM.2008.4658074
   Huang YC, 2012, J SYST SOFTWARE, V85, P626, DOI 10.1016/j.jss.2011.09.063
   Jiang B, 2015, J SYST SOFTWARE, V105, P91, DOI 10.1016/j.jss.2015.03.066
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Korel B, 2005, PROC IEEE INT CONF S, P559
   Korel B, 2008, PROC IEEE INT CONF S, P247, DOI 10.1109/ICSM.2008.4658073
   Kovács G, 2009, LECT NOTES COMPUT SC, V5719, P82, DOI 10.1007/978-3-642-04554-7_6
   Ledru Y, 2012, AUTOMAT SOFTW ENG, V19, P65, DOI 10.1007/s10515-011-0093-0
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Liu WL, 2007, INT C COMP AID DES C, P252
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Marijan D, 2013, PROC IEEE INT CONF S, P540, DOI 10.1109/ICSM.2013.91
   Mei H, 2012, IEEE T SOFTWARE ENG, V38, P1258, DOI 10.1109/TSE.2011.106
   Mei LJ, 2015, IEEE T SERV COMPUT, V8, P658, DOI 10.1109/TSC.2014.2331683
   Nguyen Cu D., 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P636, DOI 10.1109/ICWS.2011.75
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Sánchez AB, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P41, DOI 10.1109/ICST.2014.15
   Schuler D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P297, DOI 10.1145/1595696.1595750
   Sihan Li, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P72, DOI 10.1109/QSIC.2010.15
   Tsai WT, 2014, SCI CHINA INFORM SCI, V57, DOI 10.1007/s11432-013-5050-z
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Williams H.P., 1993, Model Building in Mathematical Programming
   Wong W., 1997, P 8 INT S SOFTW REL, P230
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P201
   Zhang L., 2013, P 2013 INT S SOFTW T, P235
   Zhang LM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P192, DOI 10.1109/ICSE.2013.6606565
   Zhang L, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P213
   Zhang XF, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P15
NR 47
TC 58
Z9 61
U1 2
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2016
VL 42
IS 5
BP 490
EP 504
DI 10.1109/TSE.2015.2496939
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DM1IA
UT WOS:000376097700005
DA 2024-07-18
ER

PT J
AU Böhme, M
   Paul, S
AF Boehme, Marcel
   Paul, Soumya
TI A Probabilistic Analysis of the Efficiency of Automated Software Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Partition testing; random testing; error-based partitioning; efficient
   testing; testing theory
ID NUMBER
AB We study the relative efficiencies of the random and systematic approaches to automated software testing. Using a simple but realistic set of assumptions, we propose a general model for software testing and define sampling strategies for random (R) and systematic (S-0) testing, where each sampling is associated with a sampling cost: 1 and c units of time, respectively. The two most important goals of software testing are: (i) achieving in minimal time a given degree of confidence x in a program's correctness and (ii) discovering a maximal number of errors within a given time bound (n) over cap. For both (i) and (ii), we show that there exists a bound on c beyond which R performs better than S-0 on the average. Moreover for (i), this bound depends asymptotically only on x. We also show that the efficiency of R can be fitted to the exponential curve. Using these results we design a hybrid strategy H that starts with R and switches to S-0 when S-0 is expected to discover more errors per unit time. In our experiments we find that H performs similarly or better than the most efficient of both and that S-0 may need to be significantly faster than our bounds suggest to retain efficiency over R.
C1 [Boehme, Marcel] Univ Saarland, Software Engn Chair, D-66123 Saarbrucken, Germany.
   [Paul, Soumya] Natl Univ Singapore, Sch Comp, Singapore 117548, Singapore.
C3 Saarland University; National University of Singapore
RP Böhme, M (corresponding author), Univ Saarland, Software Engn Chair, D-66123 Saarbrucken, Germany.; Paul, S (corresponding author), Natl Univ Singapore, Sch Comp, Singapore 117548, Singapore.
EM boehme@cs.uni-saarland.de; soumya.paul@gmail.com
OI Bohme, Marcel/0000-0002-4470-1824; Paul, Soumya/0000-0002-0115-4189
FU Singapore's Ministry of Education [MOE2010-T2-2-073, MOE-2011-T2-2-012];
   ERC advanced grant 'SPECMATE'
FX The authors would like to thank our colleagues Abhijeet Banerjee and Dr.
   Konstantin Rubinov for the engaging discussions about this paper. They
   also thank the anonymous reviewers for their valuable feedback. This
   work was partially supported by Singapore's Ministry of Education
   research grants MOE2010-T2-2-073 and MOE-2011-T2-2-012. The first author
   is funded by an ERC advanced grant 'SPECMATE'. A conference version of
   this article was published at the 2014 ACM SIGSOFT International
   Symposium on the Foundations of Software Engineering [1].
CR [Anonymous], 1970, Notes on structured programming
   [Anonymous], 2013, JOINT M EUROPEAN SOF, DOI [10.1145/2491411.2491430, DOI 10.1145/2491411.2491430]
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P258, DOI 10.1109/TSE.2011.121
   Beckman NelsE., 2008, Proceedings of the 2008 international symposium on Software testing and analysis, ISSTA '08, P3
   Böhme M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P632, DOI 10.1145/2635868.2635923
   Böhme M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P302, DOI 10.1109/ICSE.2013.6606576
   Bohme M., 2014, P 23 ACM SIGSOFT INT
   Boyapati C., 2002, Software Engineering Notes, V27, P123, DOI 10.1145/566171.566191
   BUNGE J, 1993, J AM STAT ASSOC, V88, P364, DOI 10.2307/2290733
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cadar C, 2008, ACM T INFORM SYST SE, V12, DOI 10.1145/1455518.1455522
   Chen TY, 1996, IEEE T SOFTWARE ENG, V22, P109, DOI 10.1109/32.485221
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Geldenhuys Jaco, 2012, P 2012 INT S SOFTWAR, P166, DOI DOI 10.1145/2338965.2336773
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid P, 2010, POPL'10: PROCEEDINGS OF THE 37TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P43, DOI 10.1145/1706299.1706307
   Goldberg A., 1994, SIGSOFT Software Engineering Notes, P80
   Gutjahr WJ, 1999, IEEE T SOFTWARE ENG, V25, P661, DOI 10.1109/32.815325
   HAMLET D, 1990, IEEE T SOFTWARE ENG, V16, P1402, DOI 10.1109/32.62448
   Korel B, 1996, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.1996.493403
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Majumdar Rupak, 2007, 22 IEEE ACM INT C AU, P134
   Miraoui M., 2010, Pretraitement et traitement des sediments de dragage en vue d'une valorisation dans le genie civil, P1
   MORELL LJ, 1990, IEEE T SOFTWARE ENG, V16, P844, DOI 10.1109/32.57623
   ROSEN B, 1969, Z WAHRSCHEINLICHKEIT, V13, P256, DOI 10.1007/BF00539204
   ROSENBLUM DS, 1995, IEEE T SOFTWARE ENG, V21, P19, DOI 10.1109/32.341844
   Sharma R, 2011, LECT NOTES COMPUT SC, V6603, P262, DOI 10.1007/978-3-642-19811-3_19
   Staats M, 2012, LECT NOTES COMPUT SC, V7212, P409, DOI 10.1007/978-3-642-28872-2_28
   Thevenod-Fosse Pascale., 1991, Software Testing, Verification and Reliability, V1, P5
   Tracey N., 1998, Software Engineering Notes, V23, P73, DOI 10.1145/271775.271792
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   WEYUKER EJ, 1980, IEEE T SOFTWARE ENG, V6, P236, DOI 10.1109/TSE.1980.234485
   WEYUKER EJ, 1991, IEEE T SOFTWARE ENG, V17, P703, DOI 10.1109/32.83906
   Williams TW, 2001, P REL MAINT S, P420, DOI 10.1109/RAMS.2001.902502
   Yang Q., 2006, P 2006 INT WORKSH AU, P99, DOI [10.1145/1138929.1138949, DOI 10.1145/1138929.1138949]
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
NR 37
TC 38
Z9 38
U1 1
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2016
VL 42
IS 4
BP 345
EP 360
DI 10.1109/TSE.2015.2487274
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DK6LP
UT WOS:000375035600003
DA 2024-07-18
ER

PT J
AU Krein, JL
   Prechelt, L
   Juristo, N
   Nanthaamornphong, A
   Carver, JC
   Vegas, S
   Knutson, CD
   Seppi, KD
   Eggett, DL
AF Krein, Jonathan L.
   Prechelt, Lutz
   Juristo, Natalia
   Nanthaamornphong, Aziz
   Carver, Jeffrey C.
   Vegas, Sira
   Knutson, Charles D.
   Seppi, Kevin D.
   Eggett, Dennis L.
TI A Multi-Site Joint Replication of a Design Patterns Experiment Using
   Moderator Variables to Generalize across Contexts
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Design patterns; software maintenance; moderator variables; multi-site;
   joint replication; controlled experiment
AB Context. Several empirical studies have explored the benefits of software design patterns, but their collective results are highly inconsistent. Resolving the inconsistencies requires investigating moderators-i.e., variables that cause an effect to differ across contexts. Objectives. Replicate a design patterns experiment at multiple sites and identify sufficient moderators to generalize the results across prior studies. Methods. We perform a close replication of an experiment investigating the impact (in terms of time and quality) of design patterns (Decorator and Abstract Factory) on software maintenance. The experiment was replicated once previously, with divergent results. We execute our replication at four universities-spanning two continents and three countries-using a new method for performing distributed replications based on closely coordinated, small-scale instances ("joint replication"). We perform two analyses: 1) a post-hoc analysis of moderators, based on frequentist and Bayesian statistics; 2) an a priori analysis of the original hypotheses, based on frequentist statistics. Results. The main effect differs across the previous instances of the experiment and across the sites in our distributed replication. Our analysis of moderators (including developer experience and pattern knowledge) resolves the differences sufficiently to allow for cross-context (and cross-study) conclusions. The final conclusions represent 126 participants from five universities and 12 software companies, spanning two continents and at least four countries. Conclusions. The Decorator pattern is found to be preferable to a simpler solution during maintenance, as long as the developer has at least some prior knowledge of the pattern. For Abstract Factory, the simpler solution is found to be mostly equivalent to the pattern solution. Abstract Factory is shown to require a higher level of knowledge and/or experience than Decorator for the pattern to be beneficial.
C1 [Krein, Jonathan L.; Knutson, Charles D.; Seppi, Kevin D.] Brigham Young Univ, Dept Comp Sci, Provo, UT 84602 USA.
   [Krein, Jonathan L.; Knutson, Charles D.] Ironwood Experts LLC, Alpine, UT USA.
   [Prechelt, Lutz] Free Univ Berlin, Inst Informat, Berlin, Germany.
   [Juristo, Natalia; Vegas, Sira] Tech Univ Madrid, Comp Sch, Madrid, Spain.
   [Juristo, Natalia] Univ Oulu, SF-90100 Oulu, Finland.
   [Nanthaamornphong, Aziz] Prince Songkla Univ, Dept Informat & Commun Technol, Phuket Campus, Bangkok, Thailand.
   [Carver, Jeffrey C.] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
   [Eggett, Dennis L.] Brigham Young Univ, Dept Stat, Provo, UT 84602 USA.
C3 Brigham Young University; Free University of Berlin; Universidad
   Politecnica de Madrid; University of Oulu; Prince of Songkla University;
   University of Alabama System; University of Alabama Tuscaloosa; Brigham
   Young University
RP Krein, JL; Knutson, CD; Seppi, KD (corresponding author), Brigham Young Univ, Dept Comp Sci, Provo, UT 84602 USA.; Krein, JL; Eggett, DL (corresponding author), Ironwood Experts LLC, Alpine, UT USA.; Prechelt, L (corresponding author), Free Univ Berlin, Inst Informat, Berlin, Germany.; Juristo, N; Vegas, S (corresponding author), Tech Univ Madrid, Comp Sch, Madrid, Spain.; Juristo, N (corresponding author), Univ Oulu, SF-90100 Oulu, Finland.; Nanthaamornphong, A (corresponding author), Prince Songkla Univ, Dept Informat & Commun Technol, Phuket Campus, Bangkok, Thailand.; Carver, JC (corresponding author), Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.; Eggett, DL (corresponding author), Brigham Young Univ, Dept Stat, Provo, UT 84602 USA.
EM jonathankrein@byu.net; prechelt@inf.fu-berlin.de; natalia@fi.upm.es;
   aziz.n@phuket.psu.ac.th; carver@cs.ua.edu; svegas@fi.upm.es;
   knutson@cs.byu.edu; kseppi@byu.edu; theegg@stat.byu.edu
RI Carver, Jeffrey/AFP-1987-2022; Vegas, Sira/R-6742-2018;
   Nanthaamornphong, Aziz/W-3552-2019; Nanthaamornphong,
   Aziz/IZD-8599-2023; Carver, Jeffrey/AAM-8202-2020
OI Carver, Jeffrey/0000-0002-7824-9151; Nanthaamornphong,
   Aziz/0000-0002-1618-6001; Nanthaamornphong, Aziz/0000-0002-1618-6001;
   Carver, Jeffrey/0000-0002-7824-9151
FU Spanish Ministry of Economy and Competitiveness [TIN-2011-23216];
   Ironwood Experts, LLC
FX The authors are grateful to: Martin Liesenberg for building the web
   portal; Ulrich Stark for expert advice to Martin; Martin Liesenberg and
   Christian Bird for the Java and C# program translations, respectively;
   Alexander MacLean and Landon Pratt for grading all solutions to ensure
   consistency in the scoring across sites; Paul Felt for sharing source
   code and advice concerning his Bayesian models; Gilbert Fellingham for
   expert advice on the Bayesian analysis; Marek Vokac for providing data
   and historical information about the first replication of the PatMain
   experiment, as well as for member checking our analysis and reporting of
   his experiment; RESER 2011 reviewers and participants for encouragement
   and valuable feedback; and all study participants for their
   contributions. This research has been partially supported by the grant
   TIN-2011-23216 (Spanish Ministry of Economy and Competitiveness), as
   well as by funding from Ironwood Experts, LLC.
CR Ampatzoglou A, 2013, J SYST SOFTWARE, V86, P1945, DOI 10.1016/j.jss.2013.03.063
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 2007, ENCY MEASUREMENT STA
   [Anonymous], 2000, PATTERN ORIENTED SOF
   [Anonymous], 2005, WISDOM CROWDS
   [Anonymous], 2013, The Statistical Sleuth: a Course in Methods of Data Analysis
   Aversano L, 2009, IET SOFTW, V3, P395, DOI 10.1049/iet-sen.2008.0105
   BARON RM, 1986, J PERS SOC PSYCHOL, V51, P1173, DOI 10.1037/0022-3514.51.6.1173
   Beck DJS, 1996, INEC SER, P103, DOI 10.1109/ICSE.1996.493406
   Budinsky FJ, 1996, IBM SYST J, V35, P151, DOI 10.1147/sj.352.0151
   Burt R. S., 2005, BROKERAGE CLOSURE IN
   Carver J.C., 2010, 1 INT WORKSHOP REPLI, P1
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   DeGroot M. H., 2012, PROBABILITY STAT PEA
   Diesing Paul., 1991, DOES SOCIAL SCI WORK
   Dormann CF, 2013, ECOGRAPHY, V36, P27, DOI 10.1111/j.1600-0587.2012.07348.x
   Efron B, 1993, MONOGRAPHS STAT APPL, DOI DOI 10.1007/978-1-4899-4541-9
   FARRAR DE, 1967, REV ECON STAT, V49, P92, DOI 10.2307/1937887
   Felt P., 2012, THESIS B YOUNG U PRO
   Florijn G, 1997, LECT NOTES COMPUT SC, V1241, P472, DOI 10.1007/BFb0053391
   Freie Universitat Berlin, 2011, REPL PATMAIN
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garzás J, 2009, J COMPUT SCI TECH-CH, V24, P262, DOI 10.1007/s11390-009-9222-7
   Jeanmart S, 2009, INT SYMP EMP SOFTWAR, P69, DOI 10.1109/ESEM.2009.5316015
   Juristo N., 2011, Proceedings of the 2011 Second International Workshop on Replication in Empirical Software Engineering Research (RESER 2011), P7, DOI 10.1109/RESER.2011.8
   Krein J. L., 2011, Proceedings of the 2011 Second International Workshop on Replication in Empirical Software Engineering Research (RESER 2011), P25, DOI 10.1109/RESER.2011.10
   Krein J.L., 2012, SIGSOFT Software Engineering Notes, V37, P27
   Krein J. L., 2015, IEEE T SOFT IN PRESS
   MCLEAN RA, 1991, AM STAT, V45, P54, DOI 10.2307/2685241
   Nanthaamornphong A., 2011, Proceedings of the 2011 Second International Workshop on Replication in Empirical Software Engineering Research (RESER 2011), P15, DOI 10.1109/RESER.2011.11
   Ng T., 2006, P 14 ACM SIGSOFT INT, P12
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P1134, DOI 10.1109/32.988711
   Prechelt L, 2002, IEEE T SOFTWARE ENG, V28, P595, DOI 10.1109/TSE.2002.1010061
   Prechelt L., 2011, Proceedings of the 2011 Second International Workshop on Replication in Empirical Software Engineering Research (RESER 2011), P1, DOI 10.1109/RESER.2011.12
   Prechelt L., 2013, PatmainPackage
   RESER Workshop, 2011, 2 INT WORKSH REPL EM
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Solomon P., 2009, RANDOMIZED CONTROLLE
   Vokác M, 2004, EMPIR SOFTW ENG, V9, P149, DOI 10.1023/B:EMSE.0000027778.69251.1f
   Wendorff P, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P77, DOI 10.1109/CSMR.2001.914971
   Wohlin C., 2012, Experimentation in Software Engineering
   Zhang C, 2012, IEEE T SOFTWARE ENG, V38, P1213, DOI 10.1109/TSE.2011.79
NR 42
TC 6
Z9 6
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2016
VL 42
IS 4
BP 302
EP 321
DI 10.1109/TSE.2015.2488625
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DK6LP
UT WOS:000375035600001
DA 2024-07-18
ER

PT J
AU Shahbazi, A
   Miller, J
AF Shahbazi, Ali
   Miller, James
TI Black-Box String Test Case Generation through a Multi-Objective
   Optimization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Adaptive random testing; automated test case generation; black-box
   testing; mutation; random testing; software testing; string distance;
   string test cases
ID PROPORTIONAL SAMPLING STRATEGY; GENETIC ALGORITHM; SOFTWARE; POWER
AB String test cases are required by many real-world applications to identify defects and security risks. Random Testing (RT) is a low cost and easy to implement testing approach to generate strings. However, its effectiveness is not satisfactory. In this research, black-box string test case generation methods are investigated. Two objective functions are introduced to produce effective test cases. The diversity of the test cases is the first objective, where it can be measured through string distance functions. The second objective is guiding the string length distribution into a Benford distribution based on the hypothesis that the population of strings is right-skewed within its range. When both objectives are applied via a multi-objective optimization algorithm, superior string test sets are produced. An empirical study is performed with several real-world programs indicating that the generated string test cases outperform test cases generated by other methods.
C1 [Shahbazi, Ali; Miller, James] Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB, Canada.
C3 University of Alberta
RP Shahbazi, A; Miller, J (corresponding author), Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB, Canada.
EM ali.shahbazi@ualberta.ca; jm@ece.ualberta.ca
CR Afshan S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P352, DOI 10.1109/ICST.2013.11
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Alshraideh M, 2006, SOFTW TEST VERIF REL, V16, P175, DOI 10.1002/stvr.354
   AMMANN PE, 1988, IEEE T COMPUT, V37, P418, DOI 10.1109/12.2185
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   Anastasiu DC, 2014, PROC INT CONF DATA, P784, DOI 10.1109/ICDE.2014.6816700
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   [Anonymous], 1989, Kolmogorov Complexity and Its Applications
   Arcuri Andrea., 2011, ISSTA
   BAROUDI JJ, 1989, MIS QUART, V13, P87, DOI 10.2307/248704
   Benford F., 1938, P AM PHILOS SOC, V78, P551, DOI DOI 10.2307/984802
   Berger A, 2011, PROBAB SURV, V8, P1, DOI 10.1214/11-PS175
   BISHOP PG, 1993, FTCS-23 - TWENTY-THIRD INTERNATIONAL SYMPOSIUM ON FAULT-TOLERANT COMPUTING : DIGEST OF PAPERS, P98, DOI 10.1109/FTCS.1993.627312
   Budd T.A., 1979, Mutation Analysis
   Chan FT, 1996, INFORM SOFTWARE TECH, V38, P775, DOI 10.1016/0950-5849(96)01103-2
   Chan KP, 2002, LECT NOTES COMPUT SC, V2349, P321
   Chen T. Y., 2005, P 9 AS COMP SCI C AD, P3156
   Chen TY, 2006, J SYST SOFTWARE, V79, P591, DOI 10.1016/j.jss.2005.05.029
   Chen TY, 2013, IEEE T RELIAB, V62, P226, DOI 10.1109/TR.2013.2240898
   Chen TY, 2001, J SYST SOFTWARE, V58, P65, DOI 10.1016/S0164-1212(01)00028-0
   Ciupa I, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P71, DOI 10.1145/1368088.1368099
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Cohen J., 1988, STAT POWER ANAL BEHA
   De Jong K. A., 1991, Parallel Problem Solving from Nature. 1st Workshop, PPSN 1 Proceedings, P38, DOI 10.1007/BFb0029729
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Downey AB, 2001, NINTH INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS AND SIMULATION OF COMPUTER AND TELECOMMUNICATION SYSTEMS, PROCEEDINGS, P361, DOI 10.1145/384268.378824
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   Durtschi C., 2004, J FORENSIC ACCOUNTIN, V5, P17
   FINELLI GB, 1991, RELIAB ENG SYST SAFE, V32, P155, DOI 10.1016/0951-8320(91)90052-9
   Forrester JE, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE 4TH UNSENIX WINDOWS SYSTEMS SYMPOSIUM, P59
   Fraser G, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1437
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Ganesh Vijay, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P1, DOI 10.1007/978-3-642-22110-1_1
   Geyer CL, 2004, COMMUN STAT-SIMUL C, V33, P229, DOI 10.1081/SAC-120028442
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid P., 2007, P 2 INT WORKSHOP RAN, P1, DOI [DOI 10.1145/1292414.1292416, 10.1145/1292414.1292416.]
   HAMMING RW, 1950, BELL SYST TECH J, V29, P147, DOI 10.1002/j.1538-7305.1950.tb00463.x
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1098
   Hemmati H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430540
   HILL TP, 1995, AM MATH MON, V102, P322, DOI 10.2307/2974952
   Jones C., 2011, SOFTWARE QUALITY 201
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Ledru Y, 2012, AUTOMAT SOFTW ENG, V19, P65, DOI 10.1007/s10515-011-0093-0
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Li M, 2004, IEEE T INFORM THEORY, V50, P3250, DOI 10.1109/TIT.2004.838101
   Lipner S., 2005, P 20 ANN COMP SEC AP, P2
   Lv JP, 2014, IEEE T SYST MAN CY-S, V44, P1649, DOI 10.1109/TSMC.2014.2318019
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Mayer J., 2006, P 5 ACM IEEE INT S E, P105
   McMinn P., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P141, DOI 10.1109/ICST.2012.94
   Morse Jr K. G., 2005, LINUX J, V2005, P62
   Newcombe S, 1881, Am J Math, V4, P39, DOI [10.2307/2369148, DOI 10.2307/2369148]
   Nigrini MJ, 1997, AUDITING-J PRACT TH, V16, P52
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Pacheco Carlos., 2008, International Symposium on Software Testing and Analysis (ISSTA), P87
   Pauleve L, 2010, PATTERN RECOGN LETT, V31, P1348, DOI 10.1016/j.patrec.2010.04.004
   RAIMI RA, 1976, AM MATH MON, V83, P521, DOI 10.2307/2319349
   Saxena P, 2010, P IEEE S SECUR PRIV, P513, DOI 10.1109/SP.2010.38
   Schneckenburger C., 2007, P 4 INT WORKSH SOFTW, P90
   Shahbaz M, 2012, INT CONF QUAL SOFTW, P79, DOI 10.1109/QSIC.2012.15
   Shahbazi A, 2014, IEEE T KNOWL DATA EN, V26, P864, DOI 10.1109/TKDE.2013.53
   Shahbazi A, 2013, IEEE T SOFTWARE ENG, V39, P163, DOI 10.1109/TSE.2012.18
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Silfverberg M., 2000, CHI 2000 Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2000. The Future is Here, P9, DOI 10.1145/332040.332044
   STEPHENS MA, 1970, J ROY STAT SOC B, V32, P115
   Tappenden A, 2005, AGILE 2005, Proceedings, P29, DOI 10.1109/ADC.2005.11
   Tappenden AF, 2009, IEEE T RELIAB, V58, P619, DOI 10.1109/TR.2009.2034288
   Tonella P., 2004, Software Engineering Notes, V29, P119, DOI 10.1145/1013886.1007528
   WHITE LJ, 1980, IEEE T SOFTWARE ENG, V6, P247, DOI 10.1109/TSE.1980.234486
   WHITLEY D, 1994, STAT COMPUT, V4, P65, DOI 10.1007/BF00175354
   Xue G., 2007, P UPGRADE, P3
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Yoshikawa T, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P20, DOI 10.1109/QSIC.2003.1319081
NR 76
TC 22
Z9 25
U1 1
U2 21
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2016
VL 42
IS 4
BP 361
EP 378
DI 10.1109/TSE.2015.2487958
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DK6LP
UT WOS:000375035600004
DA 2024-07-18
ER

PT J
AU Arora, C
   Sabetzadeh, M
   Briand, L
   Zimmer, F
AF Arora, Chetan
   Sabetzadeh, Mehrdad
   Briand, Lionel
   Zimmer, Frank
TI Automated Checking of Conformance to Requirements Templates Using
   Natural Language Processing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements templates; natural language processing (NLP); case study
   research
ID TRACEABILITY; EXTRACTION; SOFTWARE; SYSTEMS
AB Templates are effective tools for increasing the precision of natural language requirements and for avoiding ambiguities that may arise from the use of unrestricted natural language. When templates are applied, it is important to verify that the requirements are indeed written according to the templates. If done manually, checking conformance to templates is laborious, presenting a particular challenge when the task has to be repeated multiple times in response to changes in the requirements. In this article, using techniques from natural language processing (NLP), we develop an automated approach for checking conformance to templates. Specifically, we present a generalizable method for casting templates into NLP pattern matchers and reflect on our practical experience implementing automated checkers for two well-known templates in the requirements engineering community. We report on the application of our approach to four case studies. Our results indicate that: (1) our approach provides a robust and accurate basis for checking conformance to templates; and (2) the effectiveness of our approach is not compromised even when the requirements glossary terms are unknown. This makes our work particularly relevant to practice, as many industrial requirements documents have incomplete glossaries.
C1 [Arora, Chetan; Sabetzadeh, Mehrdad; Briand, Lionel] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, L-2721 Luxembourg, Luxembourg.
   [Zimmer, Frank] SES TechCom, Luxembourg, Luxembourg.
C3 University of Luxembourg
RP Arora, C (corresponding author), Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, L-2721 Luxembourg, Luxembourg.
EM chetan.arora@uni.lu; sabetzadeh@uni.lu; lionel.briand@uni.lu;
   frank.zimmer@ses.com
OI Arora, Chetan/0000-0003-1466-7386; Sabetzadeh,
   Mehrdad/0000-0002-4711-8319
FU National Research Fund-Luxembourg (Verification and Validation
   Laboratory) [FNR/P10/03]; National Research Fund-Luxembourg (AFR)
   [FNR-6911386]
FX Funding was provided by the National Research Fund-Luxembourg
   (FNR/P10/03-Verification and Validation Laboratory and AFR grant
   FNR-6911386). The authors are grateful to Eero Uuisitalo, Jose Luis de
   la Vara, and Sunil Nair for their contributions towards our case
   studies. Authors would further like to thank Arda Goknil, Alistair
   Mavin, Domenico Bianculli, and Shiva Nejati for their feedback and
   comments on earlier versions of this article.
CR Adedjouma M, 2014, INT REQUIR ENG CONF, P63, DOI 10.1109/RE.2014.6912248
   [Anonymous], 2012, MULTILINGUAL NOUN PH
   [Anonymous], 2012, VISIBLE THREAD TOOL
   [Anonymous], 2012, THE INTEGREAT TOOL
   [Anonymous], 2008, TIGER PRO TOOL INGES
   [Anonymous], 1995, P 3 ACL WORKSH VER L
   [Anonymous], 2004, THE LEXIOR TOOL
   [Anonymous], 2014, GATE ANNIE NEARLY NE
   [Anonymous], 2003, Stanford Log-linear Part-Of-Speech Tagger.
   [Anonymous], 2014, The Stanford Parser: A statistical parser
   [Anonymous], 2013, LIST REGULATORY GUID
   [Anonymous], INT J ADV INTELL SYS
   [Anonymous], 2012, THE CRADLE TOOL
   [Anonymous], 2012, RQA: The Requirements Quality Analyzer Tool
   Apache OpenNLP, 2013, APACHE OPENNLP
   Arora Chetan, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P35, DOI 10.1109/ESEM.2013.13
   Arora C., 2013, ESEC/FSE, P599
   Arora C, 2014, INT WORKSH REQUIRE, P1, DOI 10.1109/RePa.2014.6894837
   Berry D. M., 2003, From contract drafting to software specification: Linguistic sources of ambiguity
   Bird Steven, 2009, NATURAL LANGUAGE PRO, DOI DOI 10.1007/S10579-010-9124-X
   Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   BUCKLAND M, 1994, J AM SOC INFORM SCI, V45, P12, DOI 10.1002/(SICI)1097-4571(199401)45:1<12::AID-ASI2>3.0.CO;2-L
   de Gea JMC, 2012, INFORM SOFTWARE TECH, V54, P1142, DOI 10.1016/j.infsof.2012.04.005
   Chantree F, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P59
   Cleland-Huang J., 2014, FOSE P FUTURE SOFTWA, P55
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cunningham H., 2014, Developing Language Processing Components with GATE Version 8, V8th
   Daramola O., 2012, 2012 IEEE Second International Workshop on Requirements Patterns (RePa 2012), P54, DOI 10.1109/RePa.2012.6359973
   Denger C., 2001, QUASAR SURVEY APPROA
   Duan C., 2007, International Conference on Automated Software Engineering, P244
   Fabbrini F, 2002, 26TH ANNUAL NASA GODDARD SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P97, DOI 10.1109/SEW.2001.992662
   Falessi D, 2013, IEEE T SOFTWARE ENG, V39, P18, DOI 10.1109/TSE.2011.122
   Farfeleder S, 2011, IEEE INT SYMP DESIGN, P271, DOI 10.1109/DDECS.2011.5783092
   Femmer H., 2014, PROC 1 INT WORKSHOP, P10
   Gervasi V, 2005, ACM T SOFTW ENG METH, V14, P277, DOI 10.1145/1072997.1072999
   Gervasi V, 2002, SOFTWARE PRACT EXPER, V32, P113, DOI 10.1002/spc.430
   Gregson S. F., 2011, P LOUGHB ANT PROP C, P1, DOI DOI 10.1109/LAPC.2011.6114016
   Güldali B, 2009, IEEE INT CONF AUTOM, P29, DOI 10.1109/ASE.2009.86
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Hepple M, 2000, 38TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P278
   Holbrook EA, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P149, DOI 10.1109/RE.2009.10
   Joseph S, 2013, IEEE GLOB ENG EDUC C, P1305, DOI 10.1109/EduCon.2013.6530275
   Jurafsky D., 2000, Speech and language processing: An introduction to natural language processing, computational linguistics, and speech recognition
   Kiyavitskaya N, 2008, REQUIR ENG, V13, P207, DOI 10.1007/s00766-008-0063-7
   Kiyavitskaya N, 2008, LECT NOTES COMPUT SC, V5231, P154, DOI 10.1007/978-3-540-87877-3_13
   Kof L, 2010, IEEE INT C SEMANT CO, P46, DOI 10.1109/ICSC.2010.95
   Marcus M. P., 1993, Computational Linguistics, V19, P313, DOI DOI 10.21236/ADA273556
   Mavin A., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P277, DOI 10.1109/RE.2010.39
   Mavin A, 2012, IEEE SOFTWARE, V29, P17, DOI 10.1109/MS.2012.36
   Mavin A, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P317, DOI 10.1109/RE.2009.9
   McGill M., 1983, Introduction to Modern Information Retrieval
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Pohl K., 2011, Requirements Engineering Fundamentals, V1st
   Rolland C., 2013, Seminal Contributions to Information Systems Engineering: 25 Years of CAiSE, P35
   Rupp C., 2009, REQUIREMENTS ENG UND, P225
   Slipper D., 2013, P 8 IET INT SYST SAF, P1
   Song M, 2006, LECT NOTES COMPUT SC, V4081, P384
   Sultanov H., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P211, DOI 10.1109/RE.2010.33
   Sundaram SK, 2010, REQUIR ENG, V15, P313, DOI 10.1007/s00766-009-0096-6
   The SAREMAN Project, 2014, SAREMAN PROJECT CONT
   Torkar R, 2012, INT J SOFTW ENG KNOW, V22, P385, DOI 10.1142/S021819401250009X
   Uusitalo E., 2011, 2011 Fourth International Workshop on Requirements Engineering and Law, P67, DOI 10.1109/RELAW.2011.6050274
   Wilson WM, 1997, PROC INT CONF SOFTW, P161, DOI 10.1145/253228.253258
   Withall Stephen, 2007, SOFTWARE REQUIREMENT
   Yang H, 2011, REQUIR ENG, V16, P163, DOI 10.1007/s00766-011-0119-y
   Yilmaz A. Egemen, 2011, P KNOWL ENG SOFTW DE, P21
   Yue T, 2011, REQUIR ENG, V16, P75, DOI 10.1007/s00766-010-0111-y
   Zachos K, 2008, INT REQUIR ENG CONF, P145, DOI 10.1109/RE.2008.39
   Zou XC, 2010, EMPIR SOFTW ENG, V15, P119, DOI 10.1007/s10664-009-9114-z
NR 69
TC 94
Z9 103
U1 1
U2 27
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2015
VL 41
IS 10
BP 944
EP 968
DI 10.1109/TSE.2015.2428709
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CU0VR
UT WOS:000363237500001
DA 2024-07-18
ER

PT J
AU Lv, JP
   Yin, BB
   Cai, KY
AF Lv, Junpeng
   Yin, Bei-Bei
   Cai, Kai-Yuan
TI On the Asymptotic Behavior of Adaptive Testing Strategy for Software
   Reliability Assessment
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Adaptive testing; operational profile; software reliability; testing
   strategy
ID SENSITIVITY-ANALYSIS; RESOURCE-ALLOCATION; SERIES SYSTEM; FRAMEWORK;
   MODEL
AB In software reliability assessment, one problem of interest is how to minimize the variance of reliability estimator, which is often considered as an optimization goal. The basic idea is that an estimator with lower variance makes the estimates more predictable and accurate. Adaptive Testing (AT) is an online testing strategy, which can be adopted to minimize the variance of software reliability estimator. In order to reduce the computational overhead of decision-making, the implemented AT strategy in practice deviates from its theoretical design that guarantees AT's local optimality. This work aims to investigate the asymptotic behavior of AT to improve its global performance without losing the local optimality. To this end, a new AT strategy named Adaptive Testing with Gradient Descent method (AT-GD) is proposed. Theoretical analysis indicates that AT-GD, a locally optimal testing strategy, converges to the globally optimal solution as the assessment process proceeds. Simulation and experiments are set up to validate AT-GD's effectiveness and efficiency. Besides, sensitivity analysis of AT-GD is also conducted in this study.
C1 [Lv, Junpeng; Yin, Bei-Bei; Cai, Kai-Yuan] Sch Automat Sci & Elect Engn, Beijing, Peoples R China.
RP Lv, JP (corresponding author), Sch Automat Sci & Elect Engn, Beijing, Peoples R China.
EM realljp@buaa.edu.cn; yinbeibei@buaa.edu.cn; kycai@buaa.edu.cn
FU National Natural Science Foundation of China [61272164]
FX The authors are most grateful to the associate editor and four anonymous
   reviewers for their constructive and helpful comments on improving the
   quality of this paper. This work was financially supported by the
   National Natural Science Foundation of China (Grant Number 61272164).
CR Abu Al-Maati S, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P26
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], 1990, Software testing techniques {
   Benkamra Z, 2013, APPL MATH COMPUT, V219, P10842, DOI 10.1016/j.amc.2013.05.010
   Benkamra Z, 2011, MATH COMPUT SIMULAT, V81, P2062, DOI 10.1016/j.matcom.2010.12.033
   Cai KY, 2008, J SYST SOFTWARE, V81, P1406, DOI 10.1016/j.jss.2007.11.721
   Cai KY, 2008, INT J SOFTW ENG KNOW, V18, P357, DOI 10.1142/S0218194008003696
   Cai KY, 2004, INFORM SOFTWARE TECH, V46, P989, DOI 10.1016/j.infsof.2004.07.006
   Cai KY, 2005, EUR J OPER RES, V162, P552, DOI 10.1016/j.ejor.2002.11.002
   Cai KY, 2002, INFORM SOFTWARE TECH, V44, P841, DOI 10.1016/S0950-5849(02)00108-8
   Cai KY, 2000, INFORM SCIENCES, V126, P137, DOI 10.1016/S0020-0255(00)00018-9
   Cangussu JW, 2003, IEEE T SOFTWARE ENG, V29, P430, DOI 10.1109/TSE.2003.1199072
   Cangussu JW, 2002, IEEE T SOFTWARE ENG, V28, P782, DOI 10.1109/TSE.2002.1027800
   Chen TY, 2003, IEEE T SOFTWARE ENG, V29, P577, DOI 10.1109/TSE.2003.1214323
   Cotroneo D, 2013, IEEE T RELIAB, V62, P408, DOI 10.1109/TR.2013.2257051
   Cotroneo D, 2013, J SYST SOFTWARE, V86, P1613, DOI 10.1016/j.jss.2013.02.020
   Derman C, 1970, Finite State Markovian Decision Processes
   Frankl PG, 1998, IEEE T SOFTWARE ENG, V24, P586, DOI 10.1109/32.707695
   Hu H, 2013, INFORM SOFTWARE TECH, V55, P288, DOI 10.1016/j.infsof.2012.08.012
   Huang CY, 2005, IEEE T RELIAB, V54, P592, DOI 10.1109/TR.2005.858099
   MAXIM LD, 1977, IEEE T RELIAB, V26, P111, DOI 10.1109/TR.1977.5220068
   MILLER KW, 1992, IEEE T SOFTWARE ENG, V18, P33, DOI 10.1109/32.120314
   Musa J. D., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P334, DOI 10.1109/ISSRE.1994.341399
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Pedregal P., 2003, Introduction to Optimization
   Pham H., 2006, SOFTWARE SYSTEM RELI
   Pietrantuono R, 2010, IEEE T SOFTWARE ENG, V36, P323, DOI 10.1109/TSE.2010.6
   Podgurski A, 1999, ACM T SOFTW ENG METH, V8, P263, DOI 10.1145/310663.310667
   Pressman Roger., 2004, SOFTWARE ENG PRACTIT
   REKAB K, 1993, IEEE T RELIAB, V42, P287, DOI 10.1109/24.229502
   Rekab K., 1990, Sequential Analysis, V9, P305
   Wang Z, 2010, IEEE T RELIAB, V59, P563, DOI 10.1109/TR.2010.2057310
   Whittaker J. A., 1993, ACM Transactions on Software Engineering and Methodology, V2, P93, DOI 10.1145/151299.151326
NR 35
TC 27
Z9 28
U1 2
U2 22
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2014
VL 40
IS 4
BP 396
EP 412
DI 10.1109/TSE.2014.2310194
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AH3WD
UT WOS:000336056000005
DA 2024-07-18
ER

PT J
AU Torrado, N
   Wiper, MP
   Lillo, RE
AF Torrado, Nuria
   Wiper, Michael P.
   Lillo, Rosa E.
TI Software Reliability Modeling with Software Metrics Data via Gaussian
   Processes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software metrics; software failures; reliability; statistical methods;
   Markov chain Monte Carlo method
ID PREDICTION
AB In this paper, we describe statistical inference and prediction for software reliability models in the presence of covariate information. Specifically, we develop a semiparametric, Bayesian model using Gaussian processes to estimate the numbers of software failures over various time periods when it is assumed that the software is changed after each time period and that software metrics information is available after each update. Model comparison is also carried out using the deviance information criterion, and predictive inferences on future failures are shown. Real-life examples are presented to illustrate the approach.
C1 [Torrado, Nuria; Wiper, Michael P.; Lillo, Rosa E.] Univ Carlos III Madrid, Dept Stat, Madrid 28903, Spain.
C3 Universidad Carlos III de Madrid
RP Torrado, N (corresponding author), Univ Carlos III Madrid, Dept Stat, C Madrid 126, Madrid 28903, Spain.
EM nuria.torrado@gmail.com; michael.wiper@uc3m.es; rosaelvira.lillo@uc3m.es
RI Wiper, Michael/Y-9643-2019; Lillo, Rosa/Y-7090-2019; Torrado,
   Nuria/L-4763-2014
OI Wiper, Michael/0000-0002-4367-7519; Lillo, Rosa/0000-0003-0802-4691;
   Torrado, Nuria/0000-0002-1156-3613; WIPER, MICHAEL
   PETER/0000-0002-6316-397X
FU Spanish Ministry of Science and Education; Community of Madrid
FX The authors wish to thank the Associate Editor and anonymous referees
   for their comments which have greatly improved the initial version of
   this manuscript. Useful advice from Ana Paula Palacios about Winbugs is
   also greatly appreciated. This research was supported by the Spanish
   Ministry of Science and Education and from the Community of Madrid.
   Nuria Torrado is the corresponding author for this paper.
CR Bandara P.L.M.K., 2009, P WORLD C ENG
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Celeux G, 2006, BAYESIAN ANAL, V1, P651, DOI 10.1214/06-BA122
   DALAL SR, 1994, IEEE T SOFTWARE ENG, V20, P318, DOI 10.1109/32.277579
   Durand JB, 2005, STAT MODEL, V5, P75, DOI 10.1191/1471082X05st087oa
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   Jelinski Z., 1972, Statistical Computer Performance Evaluation, P465, DOI DOI 10.1016/B978-0-12-266950-7.50028-1
   Khoshgoftaar TM, 2003, EMPIR SOFTW ENG, V8, P255, DOI 10.1023/A:1024424811345
   Khoshgoftaar TM, 1996, IEEE T RELIAB, V45, P456, DOI 10.1109/24.537016
   Kuo L, 1996, J AM STAT ASSOC, V91, P763, DOI 10.2307/2291671
   Littlewood B., 1973, Applied Statistics, V22, P332, DOI 10.2307/2346781
   Mardia K. V., 1979, MULTIVARIATE ANAL, P457
   Neal RM, 1999, BAYESIAN STATISTICS 6, P475
   Paulo R, 2005, ANN STAT, V33, P556, DOI 10.1214/009053604000001264
   Pham H., 2007, System Software Reliability
   Rasmussen CE, 2005, ADAPT COMPUT MACH LE, P1
   Ray BK, 2006, TECHNOMETRICS, V48, P1, DOI 10.1198/004017005000000292
   Rinsaka K., 2006, P 30 IEEE ANN INT CO
   Ruggeri F., 2008, Advances in Mathematical Modelling for Reliability, P149
   Shibata K, 2007, 13TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P43, DOI 10.1109/PRDC.2007.18
   Singpurwalla N.D., 1999, Statistical Methods in Software Engineering by Springer
   Spiegelhalter DJ, 2002, J R STAT SOC B, V64, P583, DOI 10.1111/1467-9868.00353
   Taylor HM, 1998, An Introduction to Stochastic Modeling, Vthird
   Tian L, 2005, INT J RELIAB QUAL SA, V12, P309, DOI 10.1142/S0218539305001847
   Van der Linde A., 1995, Test, V4, P63
   Wiper M., 2001, P SAF REL SAF WORLD
   Wiper M., 2007, ENCY STAT QUALITY RE
   Wiper MP, 2012, QUAL TECHNOL QUANT M, V9, P35, DOI 10.1080/16843703.2012.11673276
   YAMADA S, 1985, IEEE T SOFTWARE ENG, V11, P1431, DOI 10.1109/TSE.1985.232179
NR 30
TC 12
Z9 13
U1 0
U2 30
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2013
VL 39
IS 8
BP 1179
EP 1186
DI 10.1109/TSE.2012.87
PG 8
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 191BU
UT WOS:000322388400009
DA 2024-07-18
ER

PT J
AU Casale, G
   Mi, NF
   Cherkasova, L
   Smirni, E
AF Casale, Giuliano
   Mi, Ningfang
   Cherkasova, Ludmila
   Smirni, Evgenia
TI Dealing with Burstiness in Multi-Tier Applications: Models and Their
   Parameterization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Capacity planning; multi-tier applications; bursty workload; bottleneck
   switch; index of dispersion
AB Workloads and resource usage patterns in enterprise applications often show burstiness resulting in large degradation of the perceived user performance. In this paper, we propose a methodology for detecting burstiness symptoms in multi-tier applications but, rather than identifying the root cause of burstiness, we incorporate this information into models for performance prediction. The modeling methodology is based on the index of dispersion of the service process at a server, which is inferred by observing the number of completions within the concatenated busy times of that server. The index of dispersion is used to derive a Markov-modulated process that captures burstiness and variability of the service process at each resource well and that allows us to define queueing network models for performance prediction. Experimental results and performance model predictions are in excellent agreement and argue for the effectiveness of the proposed methodology under both bursty and nonbursty workloads. Furthermore, we show that the methodology extends to modeling flash crowds that create burstiness in the stream of requests incoming to the application.
C1 [Casale, Giuliano] Univ London Imperial Coll Sci Technol & Med, Dept Comp, London SW7 2AZ, England.
   [Mi, Ningfang] Northeastern Univ, Boston, MA 02115 USA.
   [Cherkasova, Ludmila] Hewlett Packard Labs, Palo Alto, CA 94304 USA.
   [Smirni, Evgenia] Coll William & Mary, Dept Comp Sci, Williamsburg, VA 23187 USA.
C3 Imperial College London; Northeastern University; Hewlett-Packard;
   William & Mary
RP Casale, G (corresponding author), Univ London Imperial Coll Sci Technol & Med, Dept Comp, 180 Queens Gate, London SW7 2AZ, England.
EM g.casale@imperial.ac.uk; ningfang@ece.neu.edu; lucy.cherkasova@hp.com;
   esmirni@cs.wm.edu
RI Casale, Giuliano/W-5595-2019
OI Casale, Giuliano/0000-0003-4548-7951
FU US National Science Foundation [CNS-0720699, CCF-0811417]; Imperial
   College JRF; Division of Computing and Communication Foundations; Direct
   For Computer & Info Scie & Enginr [0811417, 0937925] Funding Source:
   National Science Foundation
FX This work has been partially supported by US National Science Foundation
   grants CNS-0720699 and CCF-0811417, a gift from HPLabs, and the Imperial
   College JRF. A preliminary conference version of this paper appeared in
   [15].
CR [Anonymous], 1999, Introduction to matrix analytic methods in stochastic modeling, DOI DOI 10.1137/1.9780898719734
   Banga G., 1999, World Wide Web, V2, P69, DOI 10.1023/A:1019292504731
   Bolch G., 2006, QUEUING NETWORKS MAR, VSecond
   Casale G, 2010, IEEE T COMPUT, V59, P66, DOI 10.1109/TC.2009.135
   García DF, 2003, COMPUTER, V36, P42, DOI 10.1109/MC.2003.1178045
   GUSELLA R, 1991, IEEE J SEL AREA COMM, V9, P203, DOI 10.1109/49.68448
   Heindl A, 2006, PERFORM EVALUATION, V63, P553, DOI 10.1016/j.peva.2005.06.003
   Horváth A, 2010, PERFORM EVALUATION, V67, P759, DOI 10.1016/j.peva.2009.12.006
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   Li SQ, 1993, IEEE ACM T NETWORK, V1, P678, DOI 10.1109/90.266056
   Liu Z, 2006, PERFORM EVALUATION, V63, P36, DOI 10.1016/j.peva.2004.12.001
   Liu Z, 2001, PERFORM EVALUATION, V46, P77, DOI 10.1016/S0166-5316(01)00046-3
   Menasce D.A., 2000, SCALING E BUSINESS T
   Mi NF, 2007, PERFORM EVALUATION, V64, P1082, DOI 10.1016/j.peva.2007.06.016
   Mi NF, 2008, LECT NOTES COMPUT SC, V5346, P265
   Ningfang Mi, 2010, Journal of Internet Services and Applications, V1, P117, DOI 10.1007/s13174-010-0012-9
   Ranjan S., 2002, P IEEE INT WORKSH QU
   Rolia J., 1998, P INT WORKSHOP SOFTW, P219
   Sadre R., 1998, P GI ITG C MEAS MOD, P195
   Urgaonkar B, 2005, ICAC 2005: Second International Conference on Autonomic Computing, Proceedings, P217
   Urgaonkar B., 2005, SIGMETRICS Perform. Eval. Rev, V33, P291, DOI [10.1145/1071690.1064252, DOI 10.1145/1071690.1064252]
   Villela D, 2007, ACM T INTERNET TECHN, V7, DOI 10.1145/1189740.1189747
   Zhang Q., 2007, 4 INT C AUTONOMIC CO, P27
   Zhang Q, 2007, LECT NOTES COMPUT SC, V4834, P244
NR 24
TC 30
Z9 33
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2012
VL 38
IS 5
BP 1040
EP 1053
DI 10.1109/TSE.2011.87
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 009BA
UT WOS:000308999100004
DA 2024-07-18
ER

PT J
AU Lind, K
   Heldal, R
AF Lind, Kenneth
   Heldal, Rogardt
TI A Practical Approach to Size Estimation of Embedded Software Components
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Real-time and embedded systems; software product metrics; COSMIC FSM;
   software components
ID FUNCTIONAL SIZE
AB To estimate software code size early in the development process is important for developing cost-efficient embedded systems. We have applied the COSMIC Functional Size Measurement (FSM) method for size estimation of embedded software components in the automotive industry. Correlational studies were conducted using data from two automotive companies. The studies show strong correlation between functional size and software code size, which is important for obtaining accurate estimation results. This paper presents the characteristics and results of our work, and aims to provide a practical framework for how to use COSMIC FSM for size estimation purposes. We investigate the results from our earlier correlational studies, and conduct further studies to identify such a framework. Based on these activities, we conclude that a clear purpose of the estimation process, a well-defined domain allowing categorization of software, consistent content and quality of requirements, and historical data from implemented software are key factors for size estimation of embedded software components.
C1 [Lind, Kenneth] Saab Automobile AB, Vehicle Engn, SE-46180 Trollhattan, Sweden.
   [Heldal, Rogardt] Chalmers, Dept Comp Sci & Engn, SE-41296 Gothenburg, Sweden.
C3 Chalmers University of Technology
RP Lind, K (corresponding author), Saab Automobile AB, Vehicle Engn, A1-5 TLEF, SE-46180 Trollhattan, Sweden.
EM kenneth.h.lind@saab.com; heldal@chalmers.se
FU VINNOVA, the Swedish Research Agency
FX This work was funded by VINNOVA, the Swedish Research Agency, as part of
   the V-ICT program.
CR ABRAN A, 2009, COSMIC FUNCTIONAL SI
   Afsharian S., 2008, PROCEEDING 30 INT C, P15
   Albrecht A.J., 1984, IBM CORPORATE INFORM
   Albrecht A.J., 1979, Em Proceedings of the Joint SHARE, GUIDE, and IBM Application Development Symposium, P83
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Andersson S., 2008, P NORD WORKSH MOD DR, P5
   [Anonymous], 2012, SPSS STATISTICAL PAC
   [Anonymous], 2003, 1414332003 ISOIEC TR
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2006, 1414362006 ISOIEC
   [Anonymous], 2004, 1414352004 ISOIEC TR
   [Anonymous], 1999, FUNC POINT COUNT PRA
   [Anonymous], 2002, 1414342002 ISOIEC TR
   [Anonymous], P 15 INT WORKSH SOFT
   Axelsson, 2006, P 16 INT S INT COUNC
   Baillargeon R., 2007, 2007011622 SAE
   Broy M, 2007, P IEEE, V95, P356, DOI 10.1109/JPROC.2006.888386
   Chatzigeorgiou A, 2002, LECT NOTES COMPUT SC, V2361, P65
   Cook JE, 2007, P IEEE, V95, P334, DOI 10.1109/JPROC.2006.888384
   Di Natale M, 2010, P IEEE, V98, P603, DOI 10.1109/JPROC.2009.2039550
   Dumke Reiner., 2011, Cosmic function points. theory and advanced practices
   Fornaciarai W, 2003, DESIGN, AUTOMATION AND TEST IN EUROPE CONFERENCE AND EXHIBITION, PROCEEDINGS, P668
   Gencel C, 2009, ASIA PAC SOFWR ENG, P19, DOI 10.1109/APSEC.2009.51
   Gencel C, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363106
   GLASS RL, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.329400
   Grun P, 1998, HARDW SOFTW CODES, P145, DOI 10.1109/HSC.1998.666252
   *ISO IEC, 2002, 1414322002 ISOIEC
   ISO/IEC, 2007, ISO/IEC 14143-1:2007 Information technology-Software measurement-Functional size measurement
   *ISO IEC, 2003, 197612003 ISOIEC
   Jones C, 1999, IEE REVIEW, V45, P165, DOI 10.1049/ir:19990406
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Lind Kenneth, 2008, Nordic Journal of Computing, V14, P282
   Lind K., P WORKSH EM TRENDS S
   Lind K., 2008, P NORD WORKSH MOD DR, P15
   Lind K., 2010, P INT S EMP SOFTW EN
   Lind K, 2009, PROCEEDINGS OF THE 12TH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, P244, DOI 10.1109/ISORC.2009.15
   Naya H., 1997, P INT C TECHN OBJ OR, P68
   ROLLO T, 2006, P SOFTW MEAS EUR FOR, P259
   Runeson P, 2000, LECT NOTES COMPUT SC, V1840, P339
   Sangiovanni-Vincentelli A, 2003, IEEE MICRO, V23, P8, DOI 10.1109/MM.2003.1209462
   Stern S., 2010, P INT WORKSH SOFTW M
   Stern S., 2009, P INT WORKSH SOFTW M
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   Tran-Cao D, 2002, PROC IEEE INT CONF S, P370, DOI 10.1109/ICSM.2002.1167793
   Wijayasiriwardhane T, 2008, INT CONF QUAL SOFTW, P329, DOI 10.1109/QSIC.2008.17
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zayaraz G., 2006, P IEEE ANN IND C, P1
   Zayaraz G., 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI DOI 10.1145/1095430.1095445
NR 48
TC 6
Z9 6
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2012
VL 38
IS 5
BP 993
EP 1007
DI 10.1109/TSE.2011.86
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 009BA
UT WOS:000308999100001
DA 2024-07-18
ER

PT J
AU Moser, O
   Rosenberg, F
   Dustdar, S
AF Moser, Oliver
   Rosenberg, Florian
   Dustdar, Schahram
TI Domain-Specific Service Selection for Composite Services
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Service composition; quality of service; monitoring; service selection;
   domain specific languages
ID WEB SERVICES; MIDDLEWARE; TAXONOMY
AB We propose a domain-specific service selection mechanism and system implementation to address the issue of runtime adaptation of composite services that implement mission-critical business processes. To this end, we leverage quality of service (QoS) as a means to specify rigid dependability requirements. QoS does not include only common attributes such as availability or response time but also attributes specific to certain business domains and processes. Therefore, we combine both domain-agnostic and domain-specific QoS attributes in an adaptive QoS model. For specifying the service selection strategy, we propose a domain-specific language called VieDASSL to specify so-called selectors. This language can be used to specify selector implementations based on the available QoS attributes. Both the QoS model implementation and the selectors can be adapted at runtime to deal with changing business and QoS requirements. Our approach is implemented on top of an existing WS-BPEL engine. We demonstrate its feasibility by implementing a case study from the telecommunication domain.
C1 [Moser, Oliver; Dustdar, Schahram] Vienna Univ Technol, Distributed Syst Grp, Inst Informat Syst, A-1040 Vienna, Austria.
   [Rosenberg, Florian] IBM TJ Watson Res Ctr, Hawthorne, NY 10532 USA.
C3 Technische Universitat Wien; International Business Machines (IBM)
RP Moser, O (corresponding author), Vienna Univ Technol, Distributed Syst Grp, Inst Informat Syst, Argentinierstr 8, A-1040 Vienna, Austria.
EM Moser@infosys.tuwien.ac.at; Dustdar@infosys.tuwien.ac.at;
   Rosenberg@us.ibm.com
RI Dustdar, Schahram/G-9877-2015; Rosenberg, Florian/A-1682-2010
OI Dustdar, Schahram/0000-0001-6872-8821; 
FU European Community's Seventh Framework Programme [215483]
FX The research leading to these results has received funding from the
   European Community's Seventh Framework Programme (FP7/2007-2013) under
   grant agreement 215483 (S-Cube). The authors would like to express their
   gratitude to Markus Wilthaner for the prototype implementation of
   VieDASSL. Additionally, they would like to thank the anonymous reviewers
   for their fruitful comments.
CR *ACT ENDP, 2007, ACTIVEBPEL ENG
   Alrifai M., 2010, P 19 INT C WORLD WID
   Altman R., 2010, G00201650 GARTN RES
   [Anonymous], 2009, IR 50 4 0 2G 2 5G 3G
   [Anonymous], 2006, BUS PROC MOD NOT BPM
   [Anonymous], 2009, ESP PERF WIK
   [Anonymous], 2007, AP SYN
   [Anonymous], 2011, AP ODE
   [Anonymous], 2009, EXPANDOMETACLASS DOM
   [Anonymous], 2005, Web Services Platform Architecture: SOAP, WSDL, WS-Policy, WS-Addressing, WS-BPEL, WS-Reliable Messaging, and More
   [Anonymous], 2009, EV
   [Anonymous], 2007, P 2 INT WORKSH SERV
   [Anonymous], 2009, EDITAREA JAVASCRIPT
   [Anonymous], 2009, JSR 223 SCRIPT JAV P
   [Anonymous], 2007, INTERFACE21
   [Anonymous], 2007, JBOSS APPL SERV
   Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Baresi Luciano, 2008, 1st India Software Engineering Conference. ISEC 2008, P39
   Baresi L, 2007, LECT NOTES COMPUT SC, V4495, P340
   Baresi Luciano., 2007, International workshop on Engineering of software services for pervasive environments : in conjunction with the 6th ESEC/FSE joint meeting, ESSPE '07, P11
   Charfi A, 2007, WORLD WIDE WEB, V10, P309, DOI 10.1007/s11280-006-0016-3
   Corporation IBM, 2006, IBM White Paper
   Delgado N, 2004, IEEE T SOFTWARE ENG, V30, P859, DOI 10.1109/TSE.2004.91
   Di Nitto E., 2008, AUTOMATED SOFTWARE E, V15, P313
   Erl T., 2007, SOA Principles of Service Design
   Erradi A, 2006, LECT NOTES COMPUT SC, V4290, P62
   Gamma Erich., 1994, DESIGN PATTERNS
   Huemer C, 2008, I C DIGIT ECOSYST TE, P216
   Hwang C-L, 1981, MULTIPLE ATTRIBUTE D
   Jaeger MC, 2005, LECT NOTES COMPUT SC, V3760, P646
   Jaeger MC, 2004, EIGHTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P149, DOI 10.1109/EDOC.2004.1342512
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Luckham David C., 2001, POWER EVENTS INTRO C
   Mani A, 2002, UNDERSTANDING QUALIT
   Menascé DA, 2002, IEEE INTERNET COMPUT, V6, P72, DOI 10.1109/MIC.2002.1067740
   Michlmayr A, 2010, IEEE T SERV COMPUT, V3, P193, DOI 10.1109/TSC.2010.20
   Moser O., 2008, 17th International Conference of World Wide Web (WWW'08), P815, DOI DOI 10.1145/1367497.1367607
   Mosincat A, 2008, LECT NOTES COMPUT SC, V5364, P241, DOI 10.1007/978-3-540-89652-4_20
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Papazoglou MP, 2007, COMPUTER, V40, P38, DOI 10.1109/MC.2007.400
   Risse T., 2009, P 18 INT C WORLD WID, P881, DOI DOI 10.1145/1526709.1526828
   Rosenberg F., 2006, P IEEE INT C WEB SER
   Rosenberg F., 2009, P IEEE 13 INT C ENT
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Yen IL, 2008, COMPUTER, V41, P48, DOI 10.1109/MC.2008.305
   Yu T, 2007, ACM T WEB, V1, DOI 10.1145/1232722.1232728
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   Zheng ZB, 2009, I C DEPEND SYS NETWO, P239, DOI 10.1109/DSN.2009.5270332
NR 49
TC 29
Z9 31
U1 1
U2 24
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2012
VL 38
IS 4
BP 828
EP 843
DI 10.1109/TSE.2011.43
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 983LE
UT WOS:000307120000006
DA 2024-07-18
ER

PT J
AU Dejaeger, K
   Verbeke, W
   Martens, D
   Baesens, B
AF Dejaeger, Karel
   Verbeke, Wouter
   Martens, David
   Baesens, Bart
TI Data Mining Techniques for Software Effort Estimation: A Comparative
   Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Data mining; software effort estimation; regression
ID COST ESTIMATION; FEEDFORWARD NETWORKS; EMPIRICAL VALIDATION; MUTUAL
   INFORMATION; EFFORT PREDICTION; FEATURE-SELECTION; NEURAL-NETWORKS;
   MODELS; CLASSIFICATION; ANALOGY
AB A predictive model is required to be accurate and comprehensible in order to inspire confidence in a business setting. Both aspects have been assessed in a software effort estimation setting by previous studies. However, no univocal conclusion as to which technique is the most suited has been reached. This study addresses this issue by reporting on the results of a large scale benchmarking study. Different types of techniques are under consideration, including techniques inducing tree/rule-based models like M5 and CART, linear models such as various types of linear regression, nonlinear models (MARS, multilayered perceptron neural networks, radial basis function networks, and least squares support vector machines), and estimation techniques that do not explicitly induce a model (e.g., a case-based reasoning approach). Furthermore, the aspect of feature subset selection by using a generic backward input selection wrapper is investigated. The results are subjected to rigorous statistical testing and indicate that ordinary least squares regression in combination with a logarithmic transformation performs best. Another key finding is that by selecting a subset of highly predictive attributes such as project size, development, and environment related attributes, typically a significant increase in estimation accuracy can be obtained.
C1 [Dejaeger, Karel; Verbeke, Wouter; Baesens, Bart] Katholieke Univ Leuven, Dept Decis Sci & Informat Management, B-3000 Louvain, Belgium.
   [Martens, David] Univ Antwerp, Fac Appl Econ, B-2000 Antwerp, Belgium.
   [Baesens, Bart] Univ Southampton, Sch Management, Highfield Southampton SO17 1BJ, Hants, England.
C3 KU Leuven; University of Antwerp; University of Southampton
RP Dejaeger, K (corresponding author), Katholieke Univ Leuven, Dept Decis Sci & Informat Management, Naamsestr 69, B-3000 Louvain, Belgium.
EM Karel.Dejaeger@econ.kuleuven.be; Wouter.Verbeke@econ.kuleuven.be;
   David.Martens@ua.ac.be; Bart.Baesens@econ.kuleuven.be
RI Verbeke, Wouter/F-5660-2014; Verbeke, Wouter/AAH-4792-2019; Martens,
   David/A-8158-2013
OI Verbeke, Wouter/0000-0002-8438-0535; Verbeke,
   Wouter/0000-0002-8438-0535; 
FU Flemish Research Fund [G.0915.09]
FX The authors would like to express their gratitude to Mr. Pekka
   Forselius, 4sumpartners, Mr. Benjamin Schreiber, ESA, and Mr. Laurent
   Fayet, Euroclear, for providing valuable data that made this research
   possible. They are also indebted to Jochen De Weerdt and Helen Moges for
   providing computational support during the analysis. They extend their
   gratitude to the Flemish Research Fund for financial support to the
   authors (Odysseus grant G.0915.09 to Bart Baesens and postdoctoral
   research grant to David Martens).
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Altendorf E. E., 2005, UAI
   Andrews R, 1995, KNOWL-BASED SYST, V8, P373, DOI 10.1016/0950-7051(96)81920-4
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], EUR J INF SYST
   Auer M, 2006, IEEE T SOFTWARE ENG, V32, P83, DOI 10.1109/TSE.2006.1599418
   Azzeh M., 2008, P 4 INT WORKSH PRED, P71, DOI DOI 10.1145/1370788.1370805
   Baesens B, 2003, J OPER RES SOC, V54, P627, DOI 10.1057/palgrave.jors.2601545
   Baesens B, 2009, J OPER RES SOC, V60, pS16, DOI 10.1057/jors.2008.171
   Bishop C. M., 1995, NEURAL NETWORKS PATT
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Boehm BW., 1981, Software Engineering Economics
   BOX GEP, 1964, J ROY STAT SOC B, V26, P211, DOI 10.1111/j.2517-6161.1964.tb00553.x
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   Briand LC, 1999, P 21 INT C SOFTW ENG, DOI DOI 10.1145/302405.302647
   Burgess CJ, 2001, INFORM SOFTWARE TECH, V43, P863, DOI 10.1016/S0950-5849(01)00192-6
   CHEN Z, 2005, ACM SIGSOFT SOFTWARE, V30, P1
   Chiu NH, 2007, J SYST SOFTWARE, V80, P628, DOI 10.1016/j.jss.2006.06.006
   DAWES RM, 1989, SCIENCE, V243, P1668, DOI 10.1126/science.2648573
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Desharnais J.M., 1988, THESIS U QUEBEC
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   Elith J, 2007, DIVERS DISTRIB, V13, P265, DOI 10.1111/j.1472-4642.2007.00340.x
   Finnie GR, 1997, J SYST SOFTWARE, V39, P281, DOI 10.1016/S0164-1212(97)00055-1
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   FRIEDMAN JH, 1991, ANN STAT, V19, P1, DOI 10.1214/aos/1176347963
   Friedman M, 1940, ANN MATH STAT, V11, P86, DOI 10.1214/aoms/1177731944
   HAGAN MT, 1994, IEEE T NEURAL NETWOR, V5, P989, DOI 10.1109/72.329697
   HAMPEL FR, 1971, ANN MATH STAT, V42, P1887, DOI 10.1214/aoms/1177693054
   Hastie T., 2001, ELEMENTS STAT LEARNI, DOI 10.1007/978-0-387-84858-7_2
   Heiat A, 2002, INFORM SOFTWARE TECH, V44, P911, DOI 10.1016/S0950-5849(02)00128-3
   Hoerl AE, 1962, CHEM ENG PROGR, V58, P54, DOI DOI 10.1002/SIM.4780030311
   HOLLAND PW, 1977, COMMUN STAT A-THEOR, V6, P813, DOI 10.1080/03610927708827533
   HORNIK K, 1989, NEURAL NETWORKS, V2, P359, DOI 10.1016/0893-6080(89)90020-8
   Huang SJ, 2008, EUR J OPER RES, V188, P898, DOI 10.1016/j.ejor.2007.07.002
   Huysmans J, 2011, DECIS SUPPORT SYST, V51, P141, DOI 10.1016/j.dss.2010.12.003
   Idri A, 2002, PROCEEDINGS OF THE 2002 IEEE INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS, VOL 1 & 2, P1162, DOI 10.1109/FUZZ.2002.1006668
   Idri A, 2008, LECT NOTES COMPUT SC, V4895, P21
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   Jeffery R, 2000, INFORM SOFTWARE TECH, V42, P1009, DOI 10.1016/S0950-5849(00)00153-1
   Jorgensen M, 2006, INFORM SOFTWARE TECH, V48, P297, DOI 10.1016/j.infsof.2005.07.002
   Jorgensen M, 2002, J SOFTW MAINT EVOL-R, V14, P123, DOI 10.1002/smr.248
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M, 2007, INT J FORECASTING, V23, P449, DOI 10.1016/j.ijforecast.2007.05.008
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Jorgensen T, 2000, EUR J OPER RES, V127, P239, DOI 10.1016/S0377-2217(99)00484-1
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Kirsopp C., 2002, IEE Proceedings-Software, V149, P123, DOI 10.1049/ip-sen:20020695
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   Kitchenham B, 1998, IEEE T SOFTWARE ENG, V24, P278, DOI 10.1109/32.677185
   Kitchenham B., 2009, P 5 INT C PRED MOD S
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Koch S, 2009, DECIS SUPPORT SYST, V46, P895, DOI 10.1016/j.dss.2008.12.002
   Kohavi R., 1995, STUDY CROSS VALIDATI, DOI DOI 10.1067/MOD.2000.109031
   Kumar KV, 2008, J SYST SOFTWARE, V81, P1853, DOI 10.1016/j.jss.2007.12.793
   Lee TS, 2005, EXPERT SYST APPL, V28, P743, DOI 10.1016/j.eswa.2004.12.031
   Lefley M, 2003, LECT NOTES COMPUT SC, V2724, P2477
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li JZ, 2007, EMPIR SOFTW ENG, V12, P65, DOI 10.1007/s10664-006-7552-4
   LI JZ, 2006, P ACM IEEE INT S EMP
   Li YF, 2009, EXPERT SYST APPL, V36, P5921, DOI 10.1016/j.eswa.2008.07.062
   Littlewood B, 2001, ACM COMPUT SURV, V33, P177, DOI 10.1145/384192.384195
   MacDonell SG, 2003, J SYST SOFTWARE, V66, P91, DOI 10.1016/S0164-1212(02)00067-5
   Mair C., 2005, WORKSHOP PREDICTOR M, P1, DOI [10.1145/1083165.1083166, DOI 10.1145/1083165.1083166]
   Martens D, 2007, IEEE T EVOLUT COMPUT, V11, P651, DOI 10.1109/TEVC.2006.890229
   Martens D, 2006, LECT NOTES COMPUT SC, V4150, P84
   Maxwell K, 1999, MANAGE SCI, V45, P787, DOI 10.1287/mnsc.45.6.787
   Maxwell K., 2000, APPL STAT SOFTWARE M
   Maxwell KD, 1996, IEEE T SOFTWARE ENG, V22, P706, DOI 10.1109/32.544349
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   Menzies T, 2006, IEEE T SOFTWARE ENG, V32, P883, DOI 10.1109/TSE.2006.114
   MIYAZAKI Y, 1991, INFORM SOFTWARE TECH, V33, P239, DOI 10.1016/0950-5849(91)90139-3
   Moler Cleve., 2004, Numerical Computing with MATLAB, P1, DOI DOI 10.1137/1.9780898717952
   Moody J, 1989, NEURAL COMPUT, V1, P281, DOI 10.1162/neco.1989.1.2.281
   MUKHOPADHYAY T, 1992, MIS QUART, V16, P155, DOI 10.2307/249573
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   Nelson E.A., 1966, MANAGEMENT HDB ESTIM
   Park H, 2008, EXPERT SYST APPL, V35, P929, DOI 10.1016/j.eswa.2007.08.001
   Peng HC, 2005, IEEE T PATTERN ANAL, V27, P1226, DOI 10.1109/TPAMI.2005.159
   Port D, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P51
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   Quinlan J.R., 1992, P AI 92, P343, DOI DOI 10.1142/9789814536271
   Quinlan J.R., 2003, C4.5: Programs for Machine Learning, V5th
   Rao Prakasa., 1983, NONPARAMETRIC FUNCTI
   Ripley B.D., 1996, Pattern Recognition and Neural Network, DOI [10.1017/CBO9780511812651, DOI 10.1017/CBO9780511812651]
   ROUSSEEUW PJ, 1984, J AM STAT ASSOC, V79, P871, DOI 10.2307/2288718
   SAKIA RM, 1992, J ROY STAT SOC D-STA, V41, P169, DOI 10.2307/2348250
   Sentas P, 2005, INFORM SOFTWARE TECH, V47, P17, DOI 10.1016/j.infsof.2004.05.001
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 1996, PROC INT CONF SOFTW, P170, DOI 10.1109/ICSE.1996.493413
   Shepperd M., 2002, P 7 INT SOFTW METR S, P349
   SPECHT DF, 1991, IEEE T NEURAL NETWOR, V2, P568, DOI 10.1109/72.97934
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   Strike K, 2001, IEEE T SOFTWARE ENG, V27, P890, DOI 10.1109/32.962560
   Suykens JAK, 1999, NEURAL PROCESS LETT, V9, P293, DOI 10.1023/A:1018628609742
   Tan P. N., 2005, Introduction to Data Mining
   The Standish Group, 2009, CHAOS REP TECHN REP
   Tosun A, 2009, EXPERT SYST APPL, V36, P10325, DOI 10.1016/j.eswa.2009.01.079
   van Gestel T, 2004, MACH LEARN, V54, P5, DOI 10.1023/B:MACH.0000008082.80494.e0
   Van Gestel T, 2006, DECIS SUPPORT SYST, V42, P1131, DOI 10.1016/j.dss.2005.10.001
   Vapnik V. N., 1998, STAT LEARNING THEORY
   Verbeke W, 2011, EXPERT SYST APPL, V38, P2354, DOI 10.1016/j.eswa.2010.08.023
   Wang Y., 1997, P POST PAP 9 EUR C M
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wittig G, 1997, INFORM SOFTWARE TECH, V39, P469, DOI 10.1016/S0950-5849(97)00004-9
   Zurada J.M., 1995, Introduction to Artificial Neural Systems
NR 108
TC 121
Z9 129
U1 3
U2 33
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2012
VL 38
IS 2
BP 375
EP 397
DI 10.1109/TSE.2011.55
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 913ZF
UT WOS:000301915200009
DA 2024-07-18
ER

PT J
AU Carnevali, L
   Ridi, L
   Vicario, E
AF Carnevali, Laura
   Ridi, Lorenzo
   Vicario, Enrico
TI Putting Preemptive Time Petri Nets to Work in a V-Model SW Life Cycle
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Real-time systems; safety-critical SW components; SW life cycle;
   V-Model; preemptive Time Petri Nets; symbolic state space analysis;
   model driven development; automated model transformation; automated code
   generation; Execution Time estimation; real-time testing; test case
   selection and execution; coverage analysis
ID VERIFICATION; SEMANTICS; PROTOCOLS; SYSTEMS
AB Preemptive Time Petri Nets (pTPNs) support modeling and analysis of concurrent timed SW components running under fixed priority preemptive scheduling. The model is supported by a well-established theory based on symbolic state space analysis through Difference Bounds Matrix (DBM) zones, with specific contributions on compositional modularization, trace analysis, and efficient overapproximation and cleanup in the management of suspension deriving from preemptive behavior. In this paper, we devise and implement a framework that brings the theory to application. To this end, we cast the theory into an organic tailoring of design, coding, and testing activities within a V-Model SW life cycle in respect of the principles of regulatory standards applied to the construction of safety-critical SW components. To implement the toolchain subtended by the overall approach into a Model Driven Development (MDD) framework, we complement the theory of state space analysis with methods and techniques supporting semiformal specification and automated compilation into pTPN models and real-time code, measurement-based Execution Time estimation, test case selection and execution, coverage evaluation.
C1 [Carnevali, Laura; Ridi, Lorenzo; Vicario, Enrico] Univ Florence, Dipartimento Sistemi & Informat, I-50139 Florence, Italy.
C3 University of Florence
RP Carnevali, L (corresponding author), Univ Florence, Dipartimento Sistemi & Informat, 3 Via Santa Marta, I-50139 Florence, Italy.
EM laura.carnevali@unifi.it; lorenzo.ridi@unifi.it; enrico.vicario@unifi.it
RI vicario, enrico/ABG-4344-2020
OI vicario, enrico/0000-0002-4983-4386
FU SW-Intiative of the FinMeccanica Group
FX This work was supported by the SW-Intiative of the FinMeccanica Group.
   The authors kindly thank Paolo Viliani and Simonetta Orsi of Galileo
   Avionica for their help in bridging the gap between theory and practice.
   They also thank Giacomo Bucci for advise and Irene Bicchierai and Dario
   D'Amico for help in the experimentation stage.
CR AbsIntAngewandte Informatik GmbH, 2011, AIT WORST CAS EX TIM
   Altisen K, 2002, REAL-TIME SYST, V23, P55, DOI 10.1023/A:1015346419267
   Alur R., 2001, Hybrid Systems: Computation and Control. 4th International Workshop, HSCC 2001. Proceedings (Lecture Notes in Computer Science Vol.2034), P33
   Alur R, 2003, ACM SIGPLAN NOTICES, V38, P171, DOI 10.1145/780731.780756
   ALUR R, 1995, THEOR COMPUT SCI, V138, P3, DOI 10.1016/0304-3975(94)00202-T
   [Anonymous], 2009, UML PROF MARTE MOD A
   [Anonymous], 2004, The rational unified process: an introduction
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Bernat Guillem, 2007, Ada User Journal, V28, P189
   Berthomieu B., 1983, Information Processing 83. Proceedings of the IFIP 9th World Computer Congress, P41
   BERTHOMIEU B, 1991, IEEE T SOFTWARE ENG, V17, P259, DOI 10.1109/32.75415
   Berthomieu B, 2007, DISCRETE EVENT DYN S, V17, P133, DOI 10.1007/s10626-006-0011-v
   BERTOLINO A, 1994, IEEE T SOFTWARE ENG, V20, P885, DOI 10.1109/32.368137
   Bucci G, 2004, IEEE T SOFTWARE ENG, V30, P97, DOI 10.1109/TSE.2004.1265815
   Bucci Giacomo, 2010, International Journal on Software Tools for Technology Transfer, V12, P391, DOI 10.1007/s10009-010-0156-8
   BUCCI G, 2003, P 15 EUR C REAL TIM
   Burns A., 2004, Ada Lett, V24, P1, DOI [10.1145/997119.997120, DOI 10.1145/997119.997120]
   Buttazzo G., 2005, S COMP SCI
   CARNEVALI L, 2007, P IEEE C EM TECHN FA
   Carnevali L., 2009, P IEEE IFIP INT S RA
   CARNEVALI L, 2007, P EUR C REAL TIM SYS
   Carnevali L, 2008, LECT NOTES COMPUT SC, V5026, P87, DOI 10.1007/978-3-540-68624-8_7
   Cassez F, 2005, LECT NOTES COMPUT SC, V3653, P66, DOI 10.1007/11539452_9
   Cassez F., 2000, P INT C CONC THEOR A
   CENELEC, 1997, EN 50128 RAILW APPL
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   Colin A, 2001, EUROMICRO, P37
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Dept. of Aerospace Eng.-Polytechnic of Milan, 2011, RTAI REAL TIM APPL I
   Dozio L, 2007, CONTROL ENG PRACT, V15, P163, DOI 10.1016/j.conengprac.2006.05.014
   Fersman E., 2002, P 8 INT C TOOLS ALG
   Fersman E, 2007, INFORM COMPUT, V205, P1149, DOI 10.1016/j.ic.2007.01.009
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   Henzinger TA, 2003, P IEEE, V91, P84, DOI 10.1109/JPROC.2002.805825
   Henzinger TA, 2003, IEEE CONTR SYST MAG, V23, P50, DOI 10.1109/MCS.2003.1172829
   Henzinger TA, 1997, LECT NOTES COMPUT SC, V1254, P460, DOI 10.1007/s100090050008
   Hessel A., 2003, P INT WORKSH FORM AP
   Hessel A, 2007, ELECTRON NOTES THEOR, V190, P47, DOI 10.1016/j.entcs.2007.08.005
   Holsti N., 2009, BOUNDT REFERENCE MAN
   Int'l Software Testing Qualifications Board, 2007, STAND GLOSS TERMS US
   Jordan P., 2006, I ENG TECHN SEM SOFT
   Karsai G, 2003, P IEEE, V91, P145, DOI 10.1109/JPROC.2002.805824
   Krichen M., 2004, P INT SPIN WORKSH MO
   Larsen K., 2005, P PERSP MOD BAS TEST
   Larsen K.G., 2005, P 5 ACM INT C EMB SO
   Lime D, 2009, REAL-TIME SYST, V41, P118, DOI 10.1007/s11241-008-9059-0
   MARSAN MA, 1989, IEEE T SOFTWARE ENG, V15, P832, DOI 10.1109/32.29483
   McManis J., 1994, P 6 INT C COMP AID V
   MERLIN PM, 1976, IEEE T COMMUN, V24, P1036, DOI 10.1109/TCOM.1976.1093424
   Muccini H, 2004, IEEE T SOFTWARE ENG, V30, P160, DOI 10.1109/TSE.2004.1271170
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   NTAFOS SC, 1988, IEEE T SOFTWARE ENG, V14, P868, DOI 10.1109/32.6165
   Penczek W., 2004, P INT C APPL THEOR P
   Proctor FM, 2001, P SOC PHOTO-OPT INS, V4563, P10, DOI 10.1117/12.417243
   Radio Technical Commission for Aeronautics, 1992, DO 178B SOFTW CONS A
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   Roux OH, 2004, LECT NOTES COMPUT SC, V3099, P371
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   SHA L, 1990, IEEE T COMPUT, V39, P1175, DOI 10.1109/12.57058
   Stankovic J. A., 1998, Deadline Scheduling for RealTime Systems EDF and Related Algorithms
   Staschulat J., 2005, P C DES AUT TEST EUR
   Stürmer I, 2007, IEEE T SOFTWARE ENG, V33, P622, DOI 10.1109/TSE.2007.70708
   Technische Universitat Braunschweig, 2011, SYMT P
   The Mathworks, 2011, SIM
   Traonouez LM, 2009, J UNIVERS COMPUT SCI, V15, P3273
   Tretmans J., 1996, Tools and Algorithms for the Construction and Analysis of Systems. Second International Workshop, TACAS '96. Proceedings, P127
   Vicario E, 2001, IEEE T SOFTWARE ENG, V27, P728, DOI 10.1109/32.940727
   Wenzel I., 2008, P INT S LEV APPL FOR
   Wilhelm R, 2008, ACM T EMBED COMPUT S, V7, DOI 10.1145/1347375.1347389
   Wind River, 2011, VXWORKS
NR 70
TC 9
Z9 10
U1 1
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2011
VL 37
IS 6
BP 826
EP 844
DI 10.1109/TSE.2011.4
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 854SE
UT WOS:000297513700005
DA 2024-07-18
ER

PT J
AU Jorgensen, M
   Grimstad, S
AF Jorgensen, Magne
   Grimstad, Stein
TI The Impact of Irrelevant and Misleading Information on Software
   Development Effort Estimates: A Randomized Controlled Field Experiment
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cost estimation; software psychology; requirements/specifications
ID CONFIDENCE; JUDGMENT
AB Studies in laboratory settings report that software development effort estimates can be strongly affected by effort-irrelevant and misleading information. To increase our knowledge about the importance of these effects in field settings, we paid 46 outsourcing companies from various countries to estimate the required effort of the same five software development projects. The companies were allocated randomly to either the original requirement specification or a manipulated version of the original requirement specification. The manipulations were as follows: 1) reduced length of requirement specification with no change of content, 2) information about the low effort spent on the development of the old system to be replaced, 3) information about the client's unrealistic expectations about low cost, and 4) a restriction of a short development period with start up a few months ahead. We found that the effect sizes in the field settings were much smaller than those found for similar manipulations in laboratory settings. Our findings suggest that we should be careful about generalizing to field settings the effect sizes found in laboratory settings. While laboratory settings can be useful to demonstrate the existence of an effect and better understand it, field studies may be needed to study the size and importance of these effects.
C1 [Jorgensen, Magne; Grimstad, Stein] Univ Oslo, NO-1325 Lysaker, Norway.
   [Jorgensen, Magne; Grimstad, Stein] Simula Res Lab, NO-1325 Lysaker, Norway.
C3 University of Oslo
RP Jorgensen, M (corresponding author), Univ Oslo, POB 134, NO-1325 Lysaker, Norway.
EM magnej@simula.no; steingr@simula.no
RI Jorgensen, Magne/H-4402-2016
CR [Anonymous], EUR J INF SYST
   ARANDA J, 2005, EUR SOFTW ENG C ACM
   Boehm .B., 2000, SOFTWARE COST ESTI 2
   BREHMER B, 1980, ACTA PSYCHOL, V45, P223, DOI 10.1016/0001-6918(80)90034-7
   Cowley E, 2006, J BUS RES, V59, P728, DOI 10.1016/j.jbusres.2005.12.004
   Edwards JS, 1994, EUR J INFORM SYST, V3, P139, DOI 10.1057/ejis.1994.14
   Englich B, 2006, PERS SOC PSYCHOL B, V32, P188, DOI 10.1177/0146167205282152
   GILOVICH T, 1993, J PERS SOC PSYCHOL, V64, P552, DOI 10.1037/0022-3514.64.4.552
   GOODWIN P, 1998, FORECASTING JUDGMENT, P91
   Grice H. P., 1975, SYNTAX SEMANTICS, V3, P41, DOI DOI 10.1163/9789004368811_003
   GRIMSTAD S, 2007, P AUSTR SOFTW ENG C
   Hewitt C, 2008, BMJ-BRIT MED J, V336, P23, DOI 10.1136/bmj.39379.359560.AD
   HIHN J, 1991, P INT C SOFTW ENG
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P953, DOI 10.1109/TSE.2004.92
   Jorgensen M., 2004, International Journal of Project Management, V22, P317, DOI 10.1016/S0263-7863(03)00085-1
   Jorgensen M, 2001, INFORM SOFTWARE TECH, V43, P939, DOI 10.1016/S0950-5849(01)00203-8
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   JORGENSEN M, 2009, TEMPORAL DISTANCE SO
   JORGENSEN M, 2008, P 2 INT C SOFTW KNOW
   JORGENSEN M, 2005, P INT C COGN EC
   Jorgensen M, 2008, IEEE SOFTWARE, V25, P78
   KOEHLER DJ, 1991, PSYCHOL BULL, V110, P499, DOI 10.1037/0033-2909.110.3.499
   Liberman N, 1998, J PERS SOC PSYCHOL, V75, P5, DOI 10.1037/0022-3514.75.1.5
   Liberman N, 2002, J EXP SOC PSYCHOL, V38, P523, DOI 10.1016/S0022-1031(02)00535-8
   Mussweiler T, 2003, PSYCHOL REV, V110, P472, DOI 10.1037/0033-295X.110.3.472
   Mussweiler T, 2000, J PERS SOC PSYCHOL, V78, P1038, DOI 10.1037//0022-3514.78.6.1038
   NORTHCRAFT GB, 1987, ORGAN BEHAV HUM DEC, V39, P84, DOI 10.1016/0749-5978(87)90046-X
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   SCHWARZ N, 1994, ADV EXPT SOCIAL PSYC, P125
   Trope Y, 2003, PSYCHOL REV, V110, P403, DOI 10.1037/0033-295X.110.3.403
   Trope Y., 1996, Social psychology: Handbook of basic principles, P239
NR 31
TC 34
Z9 35
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2011
VL 37
IS 5
BP 695
EP 707
DI 10.1109/TSE.2010.78
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 823YC
UT WOS:000295162900006
DA 2024-07-18
ER

PT J
AU Cornelissen, B
   Zaidman, A
   van Deursen, A
   Moonen, L
   Koschke, R
AF Cornelissen, Bas
   Zaidman, Andy
   van Deursen, Arie
   Moonen, Leon
   Koschke, Rainer
TI A Systematic Survey of Program Comprehension through Dynamic Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Survey; program comprehension; dynamic analysis
ID DISCOVERING ARCHITECTURES; LOCATING FEATURES; SOFTWARE; INFORMATION;
   RECOVERY; SEQUENCE; IDENTIFICATION; CHALLENGE; EVOLUTION; INFERENCE
AB Program comprehension is an important activity in software maintenance, as software must be sufficiently understood before it can be properly modified. The study of a program's execution, known as dynamic analysis, has become a common technique in this respect and has received substantial attention from the research community, particularly over the last decade. These efforts have resulted in a large research body of which currently there exists no comprehensive overview. This paper reports on a systematic literature survey aimed at the identification and structuring of research on program comprehension through dynamic analysis. From a research body consisting of 4,795 articles published in 14 relevant venues between July 1999 and June 2008 and the references therein, we have systematically selected 176 articles and characterized them in terms of four main facets: activity, target, method, and evaluation. The resulting overview offers insight in what constitutes the main contributions of the field, supports the task of identifying gaps and opportunities, and has motivated our discussion of several important research directions that merit additional consideration in the near future.
C1 [Cornelissen, Bas; Zaidman, Andy; van Deursen, Arie] Delft Univ Technol, Fac Elect Engn Math & Comp Sci, NL-2628 CD Delft, Netherlands.
   [Moonen, Leon] Simula Res Lab, N-1235 Lysaker, Norway.
   [Koschke, Rainer] Univ Bremen, Arbeitsgrp Softwaretech, D-28334 Bremen, Germany.
C3 Delft University of Technology; University of Bremen
RP Cornelissen, B (corresponding author), Delft Univ Technol, Fac Elect Engn Math & Comp Sci, Mekelweg 4, NL-2628 CD Delft, Netherlands.
EM s.g.m.cornelissen@tudelft.nl; a.e.zaidman@tudelft.nl;
   arie.vandeursen@tudelft.nl; leon.moonen@computer.org;
   koschke@informatik.uni-bremen.de
RI Moonen, Leon/M-8790-2015; Zaidman, Andy/O-6542-2014; van Deursen,
   Arie/G-3084-2011
OI Moonen, Leon/0000-0002-1761-6771; Zaidman, Andy/0000-0003-2413-3935; van
   Deursen, Arie/0000-0003-4850-3312
FU NWO/Jacquard
FX Part of this work was conducted at Delft University of Technology in the
   Reconstructor project, sponsored by NWO/Jacquard.
CR ANDREWS J, 1997, P 13 INT C AUT SOFTW, P157
   Antoniol G, 2004, PROG COMPREHEN, P120, DOI 10.1109/WPC.2004.1311054
   ANTONIOL G, 2004, P 8 EUR C SOFTW MAIN, P319
   Antoniol G, 2006, IEEE T SOFTWARE ENG, V32, P627, DOI 10.1109/TSE.2006.88
   Ball T, 1999, LECT NOTES COMPUT SC, V1687, P216, DOI 10.1145/318774.318944
   Ball T, 1996, COMPUTER, V29, P33, DOI 10.1109/2.488299
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Benedikt Michael., 2002, Proceedings of the 11th international conference on World Wide Web (WWW02)
   Bennett C, 2008, J SOFTW MAINT EVOL-R, V20, P291, DOI 10.1002/smr.372
   BIERMANN AW, 1972, ARTIF INTELL, V3, P181, DOI 10.1016/0004-3702(72)90048-3
   BIGGERSTAFF TJ, 1993, PROC INT CONF SOFTW, P482, DOI 10.1109/ICSE.1993.346017
   BOHNET J, 2006, P ACM S SOFTW VIS, P95
   Bojic D., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P23, DOI 10.1109/CSMR.2000.827302
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Brian A Malloy, 2005, P 2005 ACM S SOFTW V, P105
   Briand LC, 2006, IEEE T SOFTWARE ENG, V32, P642, DOI 10.1109/TSE.2006.96
   Chan A, 2003, PROG COMPREHEN, P237
   Cook JE, 2005, J SYST SOFTWARE, V77, P285, DOI 10.1016/j.jss.2004.04.029
   CORBI TA, 1989, IBM SYST J, V28, P294, DOI 10.1147/sj.282.0294
   CORNELISSEN B, 2008, TUDSERG2008033 DELFT
   Cornelissen B, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P213
   Cornelissen B, 2008, J SYST SOFTWARE, V81, P2252, DOI 10.1016/j.jss.2008.02.068
   Cornelissen B, 2008, PROC IEEE INT CONF S, P107, DOI 10.1109/ICSM.2008.4658059
   Dalton AR, 2008, INT C PROGRAM COMPRE, P43, DOI 10.1109/ICPC.2008.22
   De Pauw W, 1998, PROCEEDINGS OF THE FOURTH USENIX CONFERENCE ON OBJECT-ORIENTED TECHNOLOGIES AND SYSTEMS, P219
   De Pauw W., 1994, Proceedings of the 8th European Conference on Object Oriented Programming, ECOOP'94, 4-8 July 1994, Bologna, Italy, P163
   De Pauw Wim., 2006, Proceedings of the 2006 ACM symposium on Software visualization, SoftVis '06, P37, DOI DOI 10.1145/1148493.1148499
   De Roover C, 2006, INT C PROGRAM COMPRE, P202, DOI 10.1109/ICPC.2006.10
   de Sousa FC, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P50
   Demeyer S., 2003, OBJECT ORIENTED REEN
   DEPAUW W, 1993, SIGPLAN NOTICES, V28, P326, DOI 10.1145/167962.165919
   DEPAUW W, 2001, P INT SEM SOFRW VIS, P151
   Deprez JC, 2000, PROG COMPREHEN, P69, DOI 10.1109/WPC.2000.852481
   Di Lucca GA, 2003, FIFTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION THEME: ARCHITECTURE, PROCEEDINGS, P12, DOI 10.1109/WSE.2003.1234004
   Ducasse S, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P309, DOI 10.1109/CSMR.2004.1281433
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Eaddy M, 2008, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2008.39
   Edwards D, 2006, J SYST SOFTWARE, V79, P57, DOI 10.1016/j.jss.2004.12.018
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Eisenberg AD, 2005, PROC IEEE INT CONF S, P337
   ELRAMLY M, 2002, P 8 ACM SIGKDD INT C, P315
   Ernst M., 2003, ICSE 2003 INT C SOFT, P25
   Fischer M, 2005, PROG COMPREHEN, P237, DOI 10.1109/WPC.2005.35
   FISHER M, 2007, P 10 INT C FUND APPR, P260
   Fjeldstad R.K., 1979, P GUIDE, V48
   GARGIULO J, 2001, P 13 INT C SOFTW ENG, P244
   Gestwicki P., 2005, P 2005 ACM S SOFTWAR, P95
   Gold N, 2004, IEEE SOFTWARE, V21, P71, DOI 10.1109/MS.2004.1270766
   Greeff JC, 2005, AUST J EXP AGR, V45, P347, DOI 10.1071/EA03122
   GREEVY O, 2007, THESIS U BERN
   Greevy O., 2006, Proceedings of the 2006 ACM symposium on Software visualization, P47, DOI [10.1145/1148493.1148501, DOI 10.1145/1148493.1148501]
   Greevy O, 2006, J SOFTW MAINT EVOL-R, V18, P425, DOI 10.1002/smr.340
   Gschwind T, 2003, PROG COMPREHEN, P245
   GUEHENEUC Y.-G., 2004, Proceedings of the 14th IBM Centers for Advanced Studies Conference (CASCON), P28
   Guéhéneuc YG, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P117, DOI 10.1109/ASE.2002.1115000
   Hamou-Lhadj A, 2004, PROG COMPREHEN, P70, DOI 10.1109/WPC.2004.1311049
   Hamou-Lhadj A, 2006, INT C PROGRAM COMPRE, P181, DOI 10.1109/ICPC.2006.45
   Hamou-Lhadj Abdelwahab., 2004, CASCON, P42
   Hendrickson SA, 2005, PROG COMPREHEN, P227, DOI 10.1109/WPC.2005.6
   Heuzeroth D, 2003, PROG COMPREHEN, P94
   Heuzeroth D., 2002, P 6 INT C INT DES PR
   Huang HY, 2005, J SYST SOFTWARE, V75, P69, DOI 10.1016/j.jss.2003.11.018
   Israr T, 2007, J SYST SOFTWARE, V80, P474, DOI 10.1016/j.jss.2006.07.019
   JACOBSON I, 1995, OBJECT ORIENTED SOFT
   Jerding D, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P56, DOI 10.1109/WCRE.1997.624576
   Jerding DF, 1998, IEEE T VIS COMPUT GR, V4, P257, DOI 10.1109/2945.722299
   Jerding DF, 1997, PROC INT CONF SOFTW, P360, DOI 10.1145/253228.253356
   Jiang J, 2007, INT C PROGRAM COMPRE, P259
   Jiang M, 2006, PROC IEEE INT CONF S, P66
   Jiang ZM, 2008, J SOFTW MAINT EVOL-R, V20, P249, DOI 10.1002/smr.374
   JOSHI S, 2007, P INT C SOFTW MAINT, P234
   Kelsen P, 2004, PROG COMPREHEN, P46, DOI 10.1109/WPC.2004.1311046
   KITCHENHAM BA, 2004, TRSE0401 KEEL U NATL
   Kleyn M.F., 1988, PROC OOPSLA, P191
   Kollmann R, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P58, DOI 10.1109/CSMR.2001.914969
   Korel B, 1998, PROG COMPREHEN, P145, DOI 10.1109/WPC.1998.693339
   KOSCHKE R., 2005, ASE '05 Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering, P86
   Koskimies K, 1996, PROC INT CONF SOFTW, P366, DOI 10.1109/ICSE.1996.493431
   Koskinen J, 2006, INT C PROGRAM COMPRE, P212, DOI 10.1109/ICPC.2006.37
   Kothari J, 2007, INT C PROGRAM COMPRE, P17
   Kuhn A, 2006, PROC IEEE INT CONF S, P320
   LANGE DB, 1995, PROCEEDINGS OF THE USENIX CONFERENCE ON OBJECT-ORIENTED TECHNOLOGIES (COOTS), P39
   Lange DB, 1997, COMPUTER, V30, P63, DOI 10.1109/2.589912
   LANGE DB, 1995, P OOPSLA 95, P342
   Li QS, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P57
   Licata DR, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P281, DOI 10.1109/ASE.2003.1240321
   Lienhard A, 2007, INT C PROGRAM COMPRE, P59
   Liu Dapeng, 2007, ASE, P234
   Lo D., 2006, SIGSOFT FSE, P265
   Lo D, 2008, J SOFTW MAINT EVOL-R, V20, P227, DOI 10.1002/smr.375
   Lo D, 2006, WORK CONF REVERSE EN, P51
   Lukoit K, 2000, PROC IEEE INT CONF S, P33, DOI 10.1109/ICSM.2000.882985
   Martin L, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P289, DOI 10.1109/WCRE.2002.1173086
   Mesbah A., 2008, Proc. 8th Int. Conf. Web Engineering, P122
   Moe J, 2002, PROC IEEE INT CONF S, P640, DOI 10.1109/ICSM.2002.1167828
   Moe J, 2001, PROG COMPREHEN, P60, DOI 10.1109/WPC.2001.921714
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   OECHSLE R, 2001, P ACM 2001 S SOFTW V, P176
   ORSO A, 2003, P ACM 2003 S SOFTW V, P67
   Pacione MJ, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2004.7
   Pacione MJ, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/WCRE.2003.1287239
   PANKRATIUS V, 2008, P 1 ICSE INT WORKSH
   Pheng S, 2006, INT C PROGRAM COMPRE, P191, DOI 10.1109/ICPC.2006.20
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Quante J, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P219, DOI 10.1109/WCRE.2007.24
   Quante J, 2008, INT C PROGRAM COMPRE, P73, DOI 10.1109/ICPC.2008.15
   Reiss S.P., 2006, Proceedings of the 2006 ACM Symposium on Software Visualization, P125, DOI DOI 10.1145/1148493.1148512
   Reiss S.P., 2003, Proc. ACM Symp. Software Visualization, P57, DOI DOI 10.1145/774833.774842
   Reiss SP, 2003, PROG COMPREHEN, P74
   Reiss SP, 2001, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2001.919096
   Reiss SP, 2007, J VISUAL LANG COMPUT, V18, P126, DOI 10.1016/j.jvlc.2007.01.003
   Renieris M., 1999, 1999 WORKSHOP NEW PA, P70, DOI [10.1145/331770.331788., DOI 10.1145/331770.331788]
   Richner T, 2002, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.2002.1167745
   Richner T., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P13, DOI 10.1109/ICSM.1999.792487
   Rilling J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P157, DOI 10.1109/WCRE.2001.957820
   Ritsch H., 1993, Proceedings of Working Conference on Reverse Engineering (Cat. No.93TH0534-8), P192, DOI 10.1109/WCRE.1993.287765
   Riva C, 2002, SIXTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P47, DOI 10.1109/CSMR.2002.995789
   Riva C, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P161, DOI 10.1109/WCRE.2002.1173074
   Riva C, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P42, DOI 10.1109/WCRE.2000.891451
   Röthlisberger D, 2008, INT C PROGRAM COMPRE, P63, DOI 10.1109/ICPC.2008.32
   Rohatgi A, 2008, INT C PROGRAM COMPRE, P234, DOI 10.1109/ICPC.2008.35
   Safyallah H, 2006, INT C PROGRAM COMPRE, P84, DOI 10.1109/ICPC.2006.19
   Salah M, 2004, PROC IEEE INT CONF S, P72, DOI 10.1109/ICSM.2004.1357792
   Salah M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P238, DOI 10.1109/WCRE.2003.1287254
   Salah M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P69
   Sartipi K, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P259, DOI 10.1109/WCRE.2007.10
   Schmerl B, 2006, IEEE T SOFTWARE ENG, V32, P454, DOI 10.1109/TSE.2006.66
   Sefika M., 1996, Proceedings of the 11th ACM SIGPLAN Conference on Object-oriented Programming, Systems, Languages, and Applications, P389
   Shevertalov M, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P229, DOI 10.1109/WCRE.2007.6
   Sim SE, 2003, PROC INT CONF SOFTW, P74, DOI 10.1109/ICSE.2003.1201189
   Simmons S, 2006, J SOFTW MAINT EVOL-R, V18, P457, DOI 10.1002/smr.338
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Smit M, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P263
   Souder T, 2001, PROC IEEE INT CONF S, P612, DOI 10.1109/ICSM.2001.972778
   Staples M, 2007, J SYST SOFTWARE, V80, P1425, DOI 10.1016/j.jss.2006.09.046
   STROULIA E, 1999, P 6 WORK C REV ENG, P292
   Systä T, 2001, SOFTWARE PRACT EXPER, V31, P371, DOI 10.1002/spe.386
   Tonella P, 2002, PROC IEEE INT CONF S, P54, DOI 10.1109/ICSM.2002.1167747
   Walker RJ, 1998, ACM SIGPLAN NOTICES, V33, P271, DOI 10.1145/286942.286966
   WALKER RJ, 2000, P C CTR ADV STUD COL, P12
   Walkinshaw N, 2008, J SOFTW MAINT EVOL-R, V20, P269, DOI 10.1002/smr.373
   Wang S, 2005, FLUID POWER SYST TEC, V12, P35
   WILDE N, 1995, J SOFTW MAINT-RES PR, V7, P49, DOI 10.1002/smr.4360070105
   Wilde N, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P312, DOI 10.1109/ICSM.1996.565034
   Wilde N, 2003, J SYST SOFTWARE, V65, P105, DOI [10.1016/S0164-1212(02)00052-3, 10.1016/s0164-1212(02)00052-3]
   Wilde N, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P68, DOI 10.1109/CSMR.2001.914970
   Wong WE, 2000, J SYST SOFTWARE, V54, P87, DOI 10.1016/S0164-1212(00)00029-7
   Wong WE, 2005, J SYST SOFTWARE, V74, P283, DOI 10.1016/j.jss.2004.02.029
   Xu G., 2007, P THE 6 JOINT M EURO, P85, DOI DOI 10.1145/1287624.1287638
   Yan H, 2004, PROC INT CONF SOFTW, P470, DOI 10.1109/ICSE.2004.1317469
   Zaidman A, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P329, DOI 10.1109/CSMR.2004.1281435
   Zaidman A., 2006, THESIS U ANTWERP
   Zaidman A, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P89
   Zaidman A, 2008, J SOFTW MAINT EVOL-R, V20, P387, DOI 10.1002/smr.370
NR 154
TC 224
Z9 260
U1 2
U2 31
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2009
VL 35
IS 5
BP 684
EP 702
DI 10.1109/TSE.2009.28
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 498PM
UT WOS:000270154300007
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Keung, JW
   Kitchenham, BA
   Jeffery, DR
AF Keung, Jacky Wai
   Kitchenham, Barbara A.
   Jeffery, David Ross
TI Analogy-X: Providing statistical inference to analogy-based software
   cost estimation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE cost estimation; management; software engineering; analogy
ID MODEL
AB Data-intensive analogy has been proposed as a means of software cost estimation as an alternative to other data-intensive methods such as linear regression. Unfortunately, there are drawbacks to the method. There is no mechanism to assess its appropriateness for a specific data set. In addition, heuristic algorithms are necessary to select the best set of variables and identify abnormal project cases. We introduce a solution to these problems based upon the use of the Mantel's correlation randomization test called Analogy-X. We use the strength of correlation between the distance matrix of project features and the distance matrix of known effort values of the data set. The method is demonstrated using the Desharnais data set and two random data sets, showing 1) the use of Mantel's correlation to identify whether analogy is appropriate, 2) a stepwise procedure for feature selection, as well as 3) the use of a leverage statistic for sensitivity analysis that detects abnormal data points. Analogy-X thus provides a sound statistical basis for analogy, removes the need for heuristic search, and greatly improves its algorithmic performance.
C1 [Keung, Jacky Wai] ESE NICTA, Sydney, NSW 1430, Australia.
   [Kitchenham, Barbara A.] Univ Keele, Keele ST5 5BG, Staffs, England.
   [Jeffery, David Ross] Univ New S Wales, Sch Engn & Comp Sci, Sydney, NSW 2052, Australia.
C3 Keele University; University of New South Wales Sydney
RP Keung, JW (corresponding author), ESE NICTA, Bay 15,Australian Technol Pk,Garden St, Sydney, NSW 1430, Australia.
EM Jacky.Keung@nicta.com.au; Barbara.Kitchenham@nicta.com.au;
   Ross.Jeffery@nicta.com.au
RI Keung, Jacky/X-4693-2019; Kitchenham, Barbara/AAL-4311-2020; Keung,
   Jacky/ABA-7089-2020
OI Keung, Jacky/0000-0002-3803-9600; Kitchenham,
   Barbara/0000-0002-6134-8460; 
CR *ADE4, 2004, EC DAT AN ADE4 PACK
   Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], 1998, MULTIVARIATE STAT ME
   [Anonymous], 1997, Randomization, Bootstrap and Monte Carlo Methods in Biology
   ATKINSON K, 1994, P EUR SOFTW COST MOD
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P313, DOI 10.1109/ICSE.1999.841022
   Draper N. R., 1998, APPL REGRESSION ANAL, V326
   EFRON B, 1983, AM STAT, V37, P36, DOI 10.2307/2685844
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Jeffery R, 2001, P 7 INT SOFTW METR S
   Jorgensen M, 2005, IEEE SOFTWARE, V22, P57, DOI 10.1109/MS.2005.73
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   JORGENSEN M, 2006, SOFTWARE EVOLUTION F
   Kadoda G, 2001, LECT NOTES ARTIF INT, V2080, P276
   Kirsopp Colin., 2002, GECCO 02, P1367
   LEGENDRE L., 1983, NUMERICAL ECOLOGY
   LI J, 2006, EMPIRICAL SOFTWARE E
   Mair C, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P491, DOI 10.1109/ISESE.2005.1541858
   MANTEL N, 1967, CANCER RES, V27, P209
   MARRIOTT FHC, 1979, APPL STAT, V28
   Mendes E, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P348, DOI 10.1109/METRIC.2004.1357920
   Mendes E, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P18, DOI 10.1109/METRIC.2003.1232452
   MUKHOPADHYAY T, 1992, MIS QUART, V16, P155, DOI 10.2307/249573
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   *R PROJ, 2005, R PROJ STAT COMP
   rgensen M. J, 2007, INT J FORECASTING
   SCHOFIELD C, 1996, P 7 EUR SOFTW CONTR
   SCHOFIELD C, 1995, P 6 EUR SOFTW COST M
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Shepperd M, 1996, PROC INT CONF SOFTW, P170, DOI 10.1109/ICSE.1996.493413
   SHEPPERD MJ, 2001, P 7 INT SOFTW METR S
   STENSRUD E, 1998, P 9 EUR SOFTW CONTR
   TUKEY JW, 1958, BIOMETR J, V37, P611
   *VEGAN, 2004, VEG R FUNCT COMM EC
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
NR 37
TC 70
Z9 72
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2008
VL 34
IS 4
BP 471
EP 484
DI 10.1109/TSE.2008.34
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 330JI
UT WOS:000257936500004
DA 2024-07-18
ER

PT J
AU Rovegård, P
   Angelis, L
   Wohlin, C
AF Rovegard, Per
   Angelis, Lefteris
   Wohlin, Claes
TI An empirical study on views of importance of change impact analysis
   issues
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE change impact analysis; organizational level; perspective;
   prioritization; issues
ID VIEWPOINTS
AB Change impact analysis (IA) is a change management activity that previously has been much studied from a technical perspective. For example, much work focuses on methods for determining the impact of a change. In this paper, we present results from a study on the role of IA in the change management process. In the study, IA issues were prioritized with respect to criticality by software professionals from an organizational perspective and a self-perspective. The software professionals belonged to three organizational levels: operative, tactical, and strategic. Qualitative and statistical analyses with respect to differences between perspectives and levels are presented. The results show that important issues for a particular level are tightly related to how the level is defined. Similarly, issues important from an organizational perspective are more holistic than those important from a self-perspective. However, our data indicate that the self-perspective colors the organizational perspective, meaning that personal opinions and attitudes cannot be easily disregarded. In comparing the perspectives and the levels, we visualize the differences in a way that allows us to discuss two classes of issues: high priority and medium priority. The most important issues from this point of view concern fundamental aspects of IA and its execution.
C1 [Rovegard, Per] Ericsson AB, SE-37123 Karlskrona, Sweden.
   [Angelis, Lefteris] Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
   [Wohlin, Claes] Blekinge Inst Technol, Sch Engn, Dept Syst & Software Engn, SE-37225 Ronney, Sweden.
C3 Ericsson; Aristotle University of Thessaloniki; Blekinge Institute
   Technology
RP Rovegård, P (corresponding author), Ericsson AB, Olandsg 1,Box 518, SE-37123 Karlskrona, Sweden.
EM per.rovegard@ericsson.com; lef@csd.auth.gr; claes.wohlin@bth.se
OI Wohlin, Claes/0000-0003-0460-5253
CR [Anonymous], 1998, Software process improvement
   [Anonymous], P ACM SIGSOFT S FDN
   Anthony R. N., 1965, PLANNING CONTROL SYS
   Aurum A, 2003, INFORM SOFTWARE TECH, V45, P945, DOI 10.1016/S0950-5849(03)00096-X
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   Bohner S. A., 1996, SOFTWARE CHANGE IMPA
   Finkelstein A, 1996, SOFTWARE ENG J, V11, P2, DOI 10.1049/sej.1996.0001
   Hall T., 1997, IEE Proceedings-Software Engineering, V144, P111, DOI 10.1049/ip-sen:19971072
   Jönsson P, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P117, DOI 10.1007/3-540-28244-0_6
   JONSSON P, 2005, P 17 INT C SOFTW ENG, P707
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Karlstrom D., 2002, IEE Proceedings-Software, V149, P143, DOI 10.1049/ip-sen:20020696
   Leffingwell D., 1999, MANAGING SOFTWARE RE, V1
   MANTEL N, 1967, CANCER RES, V27, P209
   NGOTHE A, 2005, ENG MANAGING SOFTWAR, P267
   Regnell B., 2000, Empirical Software Engineering, V5, P331, DOI 10.1023/A:1009848320066
   REGNELL B, 2000, P 6 INT WORKSH REQ E
   REYNOLDS J, 2001, MANTEL TEST CODE
   Robson C., 2002, Real world research
   Sheskin David, 2011, Handbook of Parametric and Nonparametric Statistical Procedures
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 21
TC 53
Z9 55
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2008
VL 34
IS 4
BP 516
EP 530
DI 10.1109/TSE.2008.32
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 330JI
UT WOS:000257936500007
DA 2024-07-18
ER

PT J
AU Baier, C
   Cloth, L
   Haverkort, BR
   Kuntz, M
   Siegle, M
AF Baier, Christel
   Cloth, Lucia
   Haverkort, Boudewijn R.
   Kuntz, Matthias
   Siegle, Markus
TI Model checking Markov chains with actions and state labels
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE protocol verification; performance of systems; model checking; automata;
   Markov processes
AB In the past, logics of several kinds have been proposed for reasoning about discrete-time or continuous-time Markov chains. Most of these logics rely on either state labels ( atomic propositions) or on transition labels ( actions). However, in several applications it is useful to reason about both state properties and action sequences. For this purpose, we introduce the logic asCSL which provides a powerful means to characterize execution paths of Markov chains with actions and state labels. asCSL can be regarded as an extension of the purely state-based logic CSL ( continuous stochastic logic). In asCSL, path properties are characterized by regular expressions over actions and state formulas. Thus, the truth value of path formulas depends not only on the available actions in a given time interval, but also on the validity of certain state formulas in intermediate states. We compare the expressive power of CSL and asCSL and show that even the state-based fragment of asCSL is strictly more expressive than CSL if time intervals starting at zero are employed. Using an automaton-based technique, an asCSL formula and a Markov chain with actions and state labels are combined into a product Markov chain. For time intervals starting at zero, we establish a reduction of the model checking problem for asCSL to CSL model checking on this product Markov chain. The usefulness of our approach is illustrated with an elaborate model of a scalable cellular communication system, for which several properties are formalized by means of asCSL formulas and checked using the new procedure.
C1 Tech Univ Dresden, Inst Theoret Comp Sci, D-01062 Dresden, Germany.
   Univ Twente, EWI DACS, NL-7500 AE Enschede, Netherlands.
   Univ Bundeswehr Munchen, Inst Tech Informat, Fak Informat, D-85577 Neubiberg, Germany.
C3 Technische Universitat Dresden; University of Twente; Bundeswehr
   University Munich
RP Baier, C (corresponding author), Tech Univ Dresden, Inst Theoret Comp Sci, D-01062 Dresden, Germany.
EM baier@tcs.ino.tu-dresden.de; lucia@cs.utwente.nl; brh@cs.utwente.nl;
   kuntzwgm@cs.utwente.nl; markus.siegle@unibw.de
OI Siegle, Markus/0000-0001-7639-2280; Haverkort,
   Boudewijn/0000-0002-0654-0740
CR Agustina JV, 2003, IEEE SYMP COMP COMMU, P137, DOI 10.1109/ISCC.2003.1214113
   [Anonymous], 1989, P 3 INT WORKSH PETR
   Aziz A, 1995, LECT NOTES COMPUT SC, V939, P155
   Aziz A, 1996, LNCS, P269, DOI [DOI 10.1007/3-540-61474-5_75, 10.1007/3-540-61474-5_75, DOI 10.1007/3-540-61474-5]
   Baier C, 2004, 2004 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P701
   Baier C, 2003, IEEE T SOFTWARE ENG, V29, P524, DOI 10.1109/TSE.2003.1205180
   Baier C, 2000, LECT NOTES COMPUT SC, V1853, P780
   Baier C., 2000, INT C COMP AID VER, P358, DOI DOI 10.1007/10722167
   BAIER C, 2003, P 6 INT WORKSH PERF, P19
   BERNARDO M, 2000, P C CONC THEOR CONCU, P305
   Brinksma E., 2001, Lectures on Formal Methods and Performance Analysis: First EEF/Euro Summer School on Trends in Computer Science Berg en Dal, The Netherlands, July 3-7, 2000
   BUCHHOLZ P, 1994, J APPL PROBAB, V31, P59, DOI 10.2307/3215235
   CHAKI S, 2004, P C INT FORM METH IF
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Clarke EM, 1999, MODEL CHECKING, P1
   De Nicola R., 1990, P 5 ANN IEEE S LOG C, P118
   Desharnais J, 2003, J LOGIC ALGEBR PROGR, V56, P99, DOI 10.1016/S1567-8326(02)00068-1
   FANTECHI A, 1994, FORM METHOD SYST DES, V4, P187, DOI 10.1007/BF01384084
   FISCHER MJ, 1979, J COMPUT SYST SCI, V18, P194, DOI 10.1016/0022-0000(79)90046-1
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Haverkort B., 1999, Proceedings 8th International Workshop on Petri Nets and Performance Models (Cat. No.PR00331), P12, DOI 10.1109/PNPM.1999.796528
   Hermanns H, 2000, LECT NOTES COMPUT SC, V1945, P420
   HERMANNS H, 2001, P 5 INT WORKSH PERF, P110
   Hermanns H., 1994, Proc. and Performance Modelling (PAPM) 1994, Regensberg / Erlangen, Germany, July 1994, V27, P71
   Hillston J., 1994, THESIS U EDINBURGH
   Kemeny John G., 1976, FINITE MARKOV CHAINS
   KUNTZ M, 2003, P 6 INT WORKSH PERF, P58
   MEYERKAYSER J, 2004, THESIS U ERLANGEN NU
   Obal WD, 1999, PERFORM EVALUATION, V35, P233, DOI 10.1016/S0166-5316(99)00010-3
   Stewart W.J., 1994, Introduction to the Numerical Solution of Markov Chains
   THOMSEN JM, 2003, THESIS U AARHUS
   WALKE BH, 1999, MOBILE RADIO NETWORK
   Wolper P., 1982, Proc. 9th ACM Symp. on Principles of Programming Languages, P20
NR 33
TC 34
Z9 47
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2007
VL 33
IS 4
BP 209
EP 224
DI 10.1109/TSE.2007.36
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 140TQ
UT WOS:000244530000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Reiss, SP
AF Reiss, Steven P.
TI Incremental maintenance of software artifacts
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 21st International Conference on Software Maintenance (ICSM 2005)
CY SEP 26-29, 2005
CL Budapest, HUNGARY
SP IEEE
DE software maintenance; evolution; programming tools
AB Software is multidimensional, but the tools that support it are not. This lack of tool support causes the software artifacts representing different dimensions to evolve independently and to become inconsistent over time. In order to properly support the evolution of software, one must ensure that the different dimensions evolve concurrently. We have built a software development tool, CLIME, that uses constraints implemented as database queries to ensure just this. Our approach makes the tool responsible for detecting inconsistencies between software design, specifications, documentation, source code, test cases, and other artifacts without requiring any of these to be a primary representation. The tool works incrementally as the software evolves, without imposing a particular methodology or process. It includes a front end that lets the user explore and fix current inconsistencies. This paper describes the basis for CLIME, the techniques underlying the tool, the interface provided to the programmer, the incremental maintenance of constraints between these artifacts, and our experiences.
C1 Brown Univ, Dept Comp Sci, Providence, RI 02912 USA.
C3 Brown University
RP Reiss, SP (corresponding author), Brown Univ, Dept Comp Sci, Box 1910, Providence, RI 02912 USA.
EM spr@cs.brown.edu
CR BACK G, 2003, MJ SYSTEM CONSTRUCTI
   Ballance R. A., 1990, SIGSOFT Software Engineering Notes, V15, P77, DOI 10.1145/99278.99286
   Bansiya J, 1998, DR DOBBS J, V23, P20
   BATORY D, 2001, P WORKSH NEW VIS SOF
   Bowdidge R. W., 1998, ACM Transactions on Software Engineering and Methodology, V7, P109, DOI 10.1145/279310.279312
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   BUDINSKY FJ, 1996, IBM SYSTEMS J, V35
   CHILDS B, 1991, P 1991 ANN M TEX US, V12, P1001
   CLEMENTS J, 2001, P MONT WORKSH ENG AU
   Cobleigh JM, 2002, IBM SYST J, V41, P140, DOI 10.1147/sj.411.0140
   Corbett JC, 2000, LECT NOTES COMPUT SC, V1885, P205
   CROCKER D, 2003, P S FORM METH EUR
   DAS M, 2002, P C PROGR LANG DES I
   Dayal U., 1978, Proceedings of the Fourth International Conference on Very Large Data Bases, P368
   DUBY CK, 1992, P 2 US C PLUS PLUS C
   EGYED A, 2001, P 16 IEEE INT C AUT
   Evans D., 1994, SIGSOFT Software Engineering Notes, V19, P87, DOI 10.1145/195274.195297
   EVANS D, 1994, USING SPECIFICATIONS
   GAMMA E, 1995, DESIGN PATTERNS
   GAMMA E, 1998, TEST INFECTED PROGRA
   Graham S. L., 1992, SIGSOFT Software Engineering Notes, V17, P130, DOI 10.1145/142882.143762
   GRUIJS D, 1998, INFSCR9728 UTRECHT U
   GRYCE C, 2002, P 2002 WORKSH CONS P
   HAPKE M, 2004, P OP SOURC INT C
   Hart C. F., 1990, SIGSOFT Software Engineering Notes, V15, P120, DOI 10.1145/99278.99289
   HOVEMEYER D, 2004, 2004 C OBJ OR PROGR, P132
   JACKSON D, 1992, 543 MIT LAB COMP SCI
   KAISER GE, 1988, IEEE SOFTWARE, V5, P40, DOI 10.1109/52.2023
   Kim J. J., 1996, Theory and Practice of Object Systems, V2, P61, DOI 10.1002/(SICI)1096-9942(1996)2:1<61::AID-TAPO6>3.0.CO;2-A
   KNAPP A, 2002, P 5 WORKSH TOOLS SOF
   KNUTH DE, 1984, COMPUT J, V27, P97, DOI 10.1093/comjnl/27.2.97
   KORMAN W, 1998, CS98590 U CAL DEP CO
   Krishnamurthi S, 1999, LECT NOTES COMPUT SC, V1576, P258
   LAFFRA C, 2000, WHAT IS JIKES BYTECO
   MEIJERS M, 1996, INFSCR9628 UTRECHT U
   Mellor SJ, 2003, IEEE SOFTWARE, V20, P14, DOI 10.1109/MS.2003.1231145
   MEYERS S, 1991, IEEE SOFTWARE, V8, P49, DOI 10.1109/52.62932
   MEYERS S, 1993, P 1 WORKSH PRINC PRA
   MINSKY NH, 1989, J OBJECT ORIENTED PR, V1, P14
   Murphy G. C., 1995, SIGSOFT Software Engineering Notes, V20, P116, DOI 10.1145/222132.222147
   NENTWICH C, IN PRESS ACM T INTER
   *PRES INF TECHN AD, 1999, INF TECHN RES INV OU
   REISS SP, 1990, SOFTWARE PRACT EXPER, V20, pS89, DOI 10.1002/spe.4380201308
   Reiss SP, 2002, PROC IEEE INT CONF S, P162, DOI 10.1109/ICSM.2002.1167763
   Reiss SP, 1996, PROC INT CONF SOFTW, P398, DOI 10.1109/ICSE.1996.493434
   Reiss SP, 1999, ACM T SOFTW ENG METH, V8, P297, DOI 10.1145/322993.322994
   REISS SP, 1990, IEEE SOFTWARE, V7, P57, DOI 10.1109/52.56450
   REISS SP, 2005, P WORKSH ALG AUT DEB
   REISS SP, 1990, P USENIX C PLUS PLUS, P293
   REISS SP, 2000, P HAW INT C SYST SCI
   REISS SP, 1994, FIELD FRIENDLY INTEG
   REISS SP, 2005, P WORKSH SOFTW MOD C
   REISS SP, 2005, P INT C SOFTW MAINT
   RITCHIE DM, 1978, AT&T TECH J, V57, P1991, DOI 10.1002/j.1538-7305.1978.tb02140.x
   ROBERTS D, 1997, REFACTORING TOOL SMA
   Ryder BG, 2001, ACM SIGPLAN NOTICES, P46
   SMITH JE, 2001, PRACTICAL UML BASED, P224
   SMITH M, 2003, P 2 COMP CURR SOFTW
   Steele Jr Guy L., 1990, COMMON LISP LANGUAGE
   STOCKTON R, 1998, SHEETS HYPERCODE EDI
   TEITELMAN W, 1984, IEEE SOFTWARE, V1, P44, DOI 10.1109/MS.1984.234050
   YANG W, 1990, ACM SIGSOFT SOFTWARE, V15, P133
   Zaremski A. M., 1993, SIGSOFT Software Engineering Notes, V18, P182, DOI 10.1145/167049.167077
NR 63
TC 30
Z9 34
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2006
VL 32
IS 9
BP 682
EP 697
DI 10.1109/TSE.2006.91
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 087WU
UT WOS:000240774300005
DA 2024-07-18
ER

PT J
AU Sharp, M
   Rountev, A
AF Sharp, Mariana
   Rountev, Atanas
TI Static analysis of object references in RMI-based Java software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 21st International Conference on Software Maintenance (ICSM 2005)
CY SEP 26-29, 2005
CL Budapest, HUNGARY
SP IEEE
DE RMI; object-oriented software; distributed software; program analysis;
   points-to analysis; reference analysis; class analysis; call graph
   construction; side-effect analysis
ID POINTS-TO ANALYSIS
AB Distributed applications provide numerous advantages related to software performance, reliability, interoperability, and extensibility. This paper focuses on distributed Java programs built with the help of the Remote Method Invocation (RMI) mechanism. We consider points-to analysis for such applications. Points-to analysis determines the objects pointed to by a reference variable or a reference object field. Such information plays a fundamental role as a prerequisite for many other static analyses. We present the first theoretical definition of points-to analysis for RMI-based Java applications, and we present an algorithm for implementing a flow- and context-insensitive points-to analysis for such applications. We also discuss the use of points-to information for computing call graph information, for understanding data dependencies due to remote memory locations, and for identifying opportunities for improving the performance of object serialization at remote calls. The work described in this paper solves one key problem for static analysis of RMI programs and provides a starting point for future work on improving the understanding, testing, verification, and performance of RMI-based software.
C1 Ohio State Univ, Dept Comp Sci & Engn, Columbus, OH 43210 USA.
C3 University System of Ohio; Ohio State University
RP Sharp, M (corresponding author), Ohio State Univ, Dept Comp Sci & Engn, Columbus, OH 43210 USA.
EM sharpm@cse.ohio-state.edu; rountev@cse.ohio-state.edu
CR AHERN A, 2005, P C OBJ OR PROGR SYS, P403
   Andersen L. O., 1994, Ph.D. thesis
   [Anonymous], PLDI 03
   [Anonymous], 1992, Programming Language Design and Implementation (PLDI), DOI DOI 10.1145/143103.143137
   [Anonymous], PLDI 00
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], PLDI 98
   CHATTERJEE R, 1999, P 26 ACM SIGPLAN SIG, P133
   Cheng BC, 2000, ACM SIGPLAN NOTICES, V35, P57, DOI 10.1145/358438.349311
   DAS M, 2000, P ACM SIGPLAN C PROG, P35
   EMAMI M, 1994, P ACM SIGPLAN 94 C P, P242
   Fiutem R, 1999, J SYST SOFTWARE, V44, P213, DOI 10.1016/S0164-1212(98)10058-4
   Ghosh S, 2002, IEEE INT C ENG COMP, P7, DOI 10.1109/ICECCS.2002.1181493
   Gosling J., 2005, Java Language Specification, Vthird
   Grosso W., 2002, JAVA RMI
   Grove D, 2001, ACM T PROGR LANG SYS, V23, P685, DOI 10.1145/506315.506316
   HAUMCHER B, 2001, P COMP PAR COMP, P83
   Heintze Nevin., 2001, PLDI 01, P254
   Hind M, 2001, ACM SIGPLAN NOTICES, P54
   Lhoták O, 2003, LECT NOTES COMPUT SC, V2622, P153
   LHOTAK O, 2006, P INT C C COMP CONST
   Lhotak O., 2003, Spark: A Flexible Points-to Analysis Framework for Java
   LIANG D, 2005, P ACM SIGPLAN SIGSOF
   Maassen J, 2001, ACM T PROGR LANG SYS, V23, P747, DOI 10.1145/506315.506317
   Milanova A, 2005, ACM T SOFTW ENG METH, V14, P1, DOI 10.1145/1044834.1044835
   Philippsen M, 2000, CONCURRENCY-PRACT EX, V12, P495, DOI 10.1002/1096-9128(200005)12:7<495::AID-CPE496>3.0.CO;2-W
   Philippsen M, 2000, CONCURRENCY-PRACT EX, V12, P613, DOI 10.1002/1096-9128(200007)12:8<613::AID-CPE502>3.0.CO;2-G
   Quig B., 2003, International Conference on Principles and Practice of Programming in Java, P195
   Rountev A., 2001, Compiler Construction. 10th International Conference, CC 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2027), P20
   ROUNTEV A, 2001, P C OBJ OR PROGR SYS, P43
   Rountev A, 2006, LECT NOTES COMPUT SC, V3923, P2
   RUF E, 2000, P C PROGR LANG DES I, P208
   Ryder BG, 2003, LECT NOTES COMPUT SC, V2622, P126
   Ryder BG, 2001, ACM T PROGR LANG SYS, V23, P105, DOI 10.1145/383043.381532
   Shapiro M., 1997, P 24 ACM SIGPLAN SIG, P1
   Sharp M, 2005, PROC IEEE INT CONF S, P101
   Steensgaard Bjarne., 1996, POINTS TO ANAL ALMOS, P32
   STRECKENBACH M, 2000, POINTS JAVA GEN FRAM
   Su Z., 2000, Proceedings of the 27th ACM SIGPLAN-SIGACT symposium on Principles of programming languages (POPL), P81, DOI [10.1145/325694.325706, DOI 10.1145/325694.325706]
   *SUN MICR, 2002, RMI SPEC
   *SUN MICR, 2003, SER SPEC
   Tonella P, 1999, J SOFTW MAINT-RES PR, V11, P117, DOI 10.1002/(SICI)1096-908X(199903/04)11:2<117::AID-SMR185>3.0.CO;2-P
   Tonella P, 1997, PROC INT CONF SOFTW, P433, DOI 10.1145/253228.253371
   Vallée-Rai R, 2000, LECT NOTES COMPUT SC, V1781, P18
   Veldema R, 2003, IEEE INTERNATIONAL CONFERENCE ON CLUSTER COMPUTING, PROCEEDINGS, P127
   WHALEY J, 2004, ACM SIGPLAN C PROGR
   YONG SH, 1999, P ACM C PROGR LANG D, P91
   Zhang M, 1996, AM MINERAL, V81, P92
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 52
TC 8
Z9 11
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2006
VL 32
IS 9
BP 664
EP 681
DI 10.1109/TSE.2006.93
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 087WU
UT WOS:000240774300004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cubranic, D
   Murphy, GC
   Singer, J
   Booth, KS
AF Cubranic, D
   Murphy, GC
   Singer, J
   Booth, KS
TI Hipikat: A project memory for software development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT Workshop on Mining Software Repositories held in conjunction with the
   27th International Conference on Software Engineering (ICSE)
CY MAY 17, 2005
CL St Louis, MO
DE software development teams; project memory; software artifacts;
   recommender system; user studies
AB Sociological and technical difficulties, such as a lack of informal encounters, can make it difficult for new members of noncollocated software development teams to learn from their more experienced colleagues. To address this situation, we have developed a tool, named Hipikat, that provides developers with efficient and effective access to the group memory for a software development project that is implicitly formed by all of the artifacts produced during the development. This project memory is built automatically with little or no change to existing work practices. After describing the Hipikat tool, we present two studies investigating Hipikat's usefulness in software modification tasks. One study evaluated the usefulness of Hipikat's recommendations on a sample of 20 modification tasks performed on the Eclipse Java IDE during the development of release 2.1 of the Eclipse software. We describe the study, present quantitative measures of Hipikat's performance, and describe in detail three cases that illustrate a range of issues that we have identified in the results. In the other study, we evaluated whether software developers who are new to a project can benefit from the artifacts that Hipikat recommends from the project memory. We describe the study, present qualitative observations, and suggest implications of using project memory as a learning aid for project newcomers.
C1 Univ Victoria, Dept Comp Sci, Victoria, BC V8W 3P6, Canada.
   Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1Z4, Canada.
   Natl Res Council Canada, Inst Informat Technol, Ottawa, ON K1A 0R6, Canada.
C3 University of Victoria; University of British Columbia; National
   Research Council Canada
RP Univ Victoria, Dept Comp Sci, Box 3055 STN CSC, Victoria, BC V8W 3P6, Canada.
EM cubranic@cs.uvic.ca; murphy@cs.ubc.ca; janice.singer@nrc.cnrc.gc.ca;
   ksbooth@cs.ubc.ca
CR Acker J, 1990, GENDER SOC, V4, P139, DOI 10.1177/089124390004002002
   ALLEN RB, 1993, P ACM C ORG COMP SYS, P166
   [Anonymous], THESIS U BRIT COLUMB
   [Anonymous], P ACM C HUM FACT COM
   [Anonymous], 1996, The New Hacker's Dictionary
   ARAMPATZIS A, 2001, THESIS KATHOLIEKE U
   Balabanovic M, 1997, COMMUN ACM, V40, P66, DOI 10.1145/245108.245124
   BERLIN LM, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P23
   BERLIN LM, 1993, P EMP STUD PROGR 5 W, P6
   Box D., 2000, SIMPLE OBJECT ACCESS
   CHALMERS M, 1998, P 7 WORLD WID WEB C, P359
   Chen A, 2001, PROC IEEE INT CONF S, P364, DOI 10.1109/ICSM.2001.972749
   Chen CM, 2001, PR GR LAK SYMP VLSI, P51, DOI 10.1109/RIDE.2001.916491
   Cheong F.C., 1996, Internet Agents: Spiders, Wanderers, Brokers and Bots
   Cubranic D., 2004, Computer Supported Cooperative Work Conference Proceedings, P82, DOI 10.1145/1031607.1031622
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   DUMAIS ST, 1991, BEHAV RES METH INS C, V23, P229, DOI 10.3758/BF03203370
   Gall H, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13
   GERMAN DM, 2004, P 1 INT WORKSH MIN S, P17
   GRINTER RE, 1995, P C ORG COMP SYST, P168
   GRUDIN J, 1994, COMMUN ACM, V37, P92, DOI 10.1145/175222.175230
   Hearst MA, 1997, COMPUT LINGUIST, V23, P33
   Herbsleb JD, 2001, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.2001.919083
   Hill W., 1995, Human Factors in Computing Systems. CHI'95 Conference Proceedings, P194
   Konstan JA, 1997, COMMUN ACM, V40, P77, DOI 10.1145/245108.245126
   LANGE BM, 1989, P SIGCHI C HUM FACT, P69
   LOUGHER R, 1993, P C ORG COMP SYST, P228
   McDonald D.W., 2000, CSCW 00, P231, DOI [DOI 10.1145/358916.3589941, 10.1145/358916.358994, DOI 10.1145/358916.358994]
   Mockus A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P503, DOI 10.1109/ICSE.2002.1007994
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   PIROLLI PL, 1985, CAN J PSYCHOL, V39, P240, DOI 10.1037/h0080061
   REDMILES DF, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P67
   Rhodes B. J., 1996, PAAM 96. Proceedings of the First International Conference on the Practical Application of Intelligent Agents and Multi-Agent Technology, P487
   Rosson Mary Beth, 1996, ACM Transactions on ComputerHuman Interaction (TOCHI), V3, P219
   ROSSON MB, 1991, P CHI91, P277
   Sabol V, 2002, LECT NOTES ARTIF INT, V2569, P359
   SALTON G, 1983, INTRO MODERN INFORMA
   Sim SE, 1998, PROC INT CONF SOFTW, P361, DOI 10.1109/ICSE.1998.671389
   TANG C, 2004, P 27 ANN INT ACM SIG, P112
   TERVEEN LG, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P15
   YE Y, 2002, P 2002 INT C INT US, P159
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 44
TC 161
Z9 210
U1 1
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2005
VL 31
IS 6
BP 446
EP 465
DI 10.1109/TSE.2005.71
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 940AX
UT WOS:000230117200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zimmermann, T
   Weissgerber, P
   Diehl, S
   Zeller, A
AF Zimmermann, T
   Weissgerber, P
   Diehl, S
   Zeller, A
TI Mining version histories to guide software changes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT Workshop on Mining Software Repositories held in conjunction with the
   27th International Conference on Software Engineering (ICSE)
CY MAY 17, 2005
CL St Louis, MO
DE programming environments/construction tools; distribution; maintenance;
   enhancement; configuration management; clustering; classification;
   association rules; data mining
AB We apply data mining to version histories in order to guide programmers along related changes: "Programmers who changed these functions also changed...." Given a set of existing changes, the mined association rules 1) suggest and predict likely further changes, 2) show up item coupling that is undetectable by program analysis, and 3) can prevent errors due to incomplete changes. After an initial change, our ROSE prototype can correctly predict further locations to be changed; the best predictive power is obtained for changes to existing software. In our evaluation based on the history of eight popular open source projects, ROSE's topmost three suggestions contained a correct location with a likelihood of more than 70 percent.
C1 Univ Saarland, Dept Comp Sci, D-66041 Saarbrucken, Germany.
   Catholic Univ Eichstatt Ingolstadt, Dept Comp Sci, D-85072 Eichstatt, Germany.
C3 Saarland University
RP Univ Saarland, Dept Comp Sci, Postfach 15 11 50, D-66041 Saarbrucken, Germany.
EM zimmerth@cs.uni-sb.de; peter.weissgerber@ku-eichstaett.de;
   diehl@acm.org; zeller@acm.org
OI Zeller, Andreas/0000-0003-4719-8803; Diehl, Stephan/0000-0002-4287-7447
CR Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   ATKINS DL, 1998, P C SYST CONF MAN SC
   BALL T, 1997, P ICSE WORKSH PROC M
   Berliner B., 1990, Proceedings of the Winter 1990 USENIX Conference, P341
   Bieman JM, 2003, PROG COMPREHEN, P44
   BURCH M, 2005, P ACM S SOFTW VIS SO
   Chen IJ., 2001, BUS PROCESS MANAG J, V7, P374, DOI DOI 10.1108/14637150110406768
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   Fogel K., 2002, CVS2CLPL CVS LOG MES
   Gall H, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13
   Gall H, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P160, DOI 10.1109/ICSM.1997.624242
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   GORG C, 2005, P 13 INT WORKSH PROG
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   HASSAN A.E., 2003, P INT WORKSH PRINC S
   HASSAN AE, 2004, P INT C SOFTW MAINT
   Michail A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P167, DOI 10.1109/ICSE.2000.870408
   MICHAIL A, 1999, P 14 INT C AUT SOFTW, P24
   Mockus A, 2003, PROC INT CONF SOFTW, P274, DOI 10.1109/ICSE.2003.1201207
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Rijsbergen C.J.V., 1979, INFORM RETRIEVAL, V2nd ed.
   SAYYADSHIRABAD J, 2003, P INT C SOFTW MAINT
   SAYYADSHIRABAD J, 2001, P INT C SOFTW METH, P22
   Shirabad J. S., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P53, DOI 10.1049/ic:20040476
   SLIWERSKI J, 2005, P INT WORKSH MIN SOF
   SRIKANT R, 1995, P 21 INT C VER LARG, P407
   SRIKANT R, 1997, P 3 INT C KDD DAT MI
   Xing Z., 2004, P 16 INT C SOFTW ENG
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zimmermann T, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P73, DOI 10.1109/IWPSE.2003.1231213
   Zimmermann T., 2004, Proc. of the 1st Int'lWorkshop onMining Software Repositories (MSR), P2, DOI [DOI 10.1049/IC:20040466, 10.1049/ic:20040466]
   ZIMMERMANN T, 2004, THESIS U PASSAU GERM
   2004, P INT WORKSH MIN SOF
   2003, P 25 INT C SOFTW ENG
   2001, P INT C SOFTW MAINT
   2003, P INT WORKSH PRINC S
NR 36
TC 387
Z9 460
U1 2
U2 25
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2005
VL 31
IS 6
BP 429
EP 445
DI 10.1109/TSE.2005.72
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 940AX
UT WOS:000230117200002
DA 2024-07-18
ER

PT J
AU Lutz, RR
   Mikulski, IC
AF Lutz, RR
   Mikulski, IC
TI Empirical analysis of safety-critical anomalies during operations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software and system safety; diagnostics; maintenance process; product
   metrics
ID SOFTWARE; CLASSIFICATION
AB Analysis of anomalies that occur during operations is an important means of improving the quality of current and future software. Although the benefits of anomaly analysis of operational software are widely recognized, there has been relatively little research on anomaly analysis of safety-critical systems. In particular, patterns of software anomaly data for operational, safety-critical systems are not well understood. This paper presents the results of a pilot study using Orthogonal Defect Classification (ODC) to analyze nearly two hundred such anomalies on seven spacecraft systems. These data show several unexpected classification patterns such as the causal role of difficulties accessing or delivering data, of hardware degradation, and of rare events. The anomalies often revealed latent software requirements that were essential for robust, correct operation of the system. The anomalies also caused changes to documentation and to operational procedures to prevent the same anomalous situations from recurring. Feedback from operational anomaly reports helped measure the accuracy of assumptions about operational profiles, identified unexpected dependencies among embedded software and their systems and environment, and indicated needed improvements to the software, the development process, and the operational procedures. The results indicate that, for long-lived, critical systems, analysis of the most severe anomalies can be a useful mechanism both for maintaining safer, deployed systems and for building safer, similar systems in the future.
C1 Iowa State Univ, Dept Comp Sci, Ames, IA 50011 USA.
   CALTECH, Jet Prop Lab, Pasadena, CA 91109 USA.
C3 Iowa State University; California Institute of Technology; National
   Aeronautics & Space Administration (NASA); NASA Jet Propulsion
   Laboratory (JPL)
RP Iowa State Univ, Dept Comp Sci, 226 Atanasoff Hall, Ames, IA 50011 USA.
EM rlutz@cs.iastate.edu; ines.c.mikulski@jpl.nasa.gov
OI Lutz, Robyn/0000-0001-5390-7982
CR [Anonymous], P COMPASS
   [Anonymous], 2002, P 2002 ACM SIGSOFT I
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bennett K., 2000, FUTURE SOFTWARE ENG
   Bishop PG, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P295, DOI 10.1109/ISSRE.2002.1173274
   CARD D, 1998, IEEE SOFTWARE    JAN, P56
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Chillarege R, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P669, DOI 10.1109/DSN.2002.1029012
   Chillarege R., 1995, Handbook of Software Reliability Engineering, P359
   *COMM APPL THEOR S, 1996, STAT SOFTW ENG
   DALAL S, 1999, P INT C APPL SOFTW M
   ELEMAM K, 1998, P INT S SOFTW REL EN
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   FENTON NE, 1997, SOFTW METICS RIGOURO
   Glass RL, 1997, J SYST SOFTWARE, V36, P85, DOI 10.1016/0164-1212(95)00197-2
   IYER RK, 1995, HDB SOFTW REL ENG, P303
   *JET PROP LAB, 1997, ICAP AN PROC GLOSS
   KITCHENHAM B, GUIDELINES CONDUCTIN
   Lauesen S., 2001, Requirements Engineering, V6, P37, DOI 10.1007/PL00010355
   Leszak M, 2002, J SYST SOFTWARE, V61, P173, DOI 10.1016/S0164-1212(01)00146-7
   Leveson N., 1995, Safeware
   Lutz R.R., 1993, 1993 P IEEE INT S RE, P126
   Lutz RR, 2003, J SYST SOFTWARE, V65, P155, DOI 10.1016/S0164-1212(02)00057-2
   Lutz RR, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P33
   Lutz RR, 2003, PROC INT CONF SOFTW, P578, DOI 10.1109/ICSE.2003.1201240
   Mendonça MG, 2000, IEEE T SOFTWARE ENG, V26, P484, DOI 10.1109/32.852739
   Myrtveit I, 2001, IEEE T SOFTWARE ENG, V27, P999, DOI 10.1109/32.965340
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   [No title captured]
NR 29
TC 45
Z9 55
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2004
VL 30
IS 3
BP 172
EP 180
DI 10.1109/TSE.2004.1271171
PG 9
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 803BN
UT WOS:000220206700003
DA 2024-07-18
ER

PT J
AU Xu, J
AF Xu, J
TI On inspection and verification of software with timing requirements
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 1st Workshop on Inspection in Software Engineering
CY JUL 21, 2001
CL PARIS, FRANCE
DE real-time; software; code; inspection; verification; timing
   requirements; current practices; complexity; restrictions; software
   structures; preruntime scheduling; predictability
ID TEMPORAL LOGIC; TIME; SYNCHRONIZATION
AB Software with hard timing requirements should be designed using a systematic approach to make its timing properties easier to inspect and verify; otherwise, it may be practically impossible to determine whether the software satisfies the timing requirements. Preruntime scheduling provides such an approach by placing restrictions on software structures to reduce complexity. A major benefit of using a preruntime scheduling approach is that it makes it easier to systematically inspect and verify the timing properties of the actual software code, not just various high-level abstractions of the code.
C1 York Univ, Dept Comp Sci, N York, ON M3J 1P3, Canada.
C3 York University - Canada
RP Xu, J (corresponding author), York Univ, Dept Comp Sci, 4700 Keele St, N York, ON M3J 1P3, Canada.
EM jxu@cs.yorku.ca
CR Alur R., 1990, Proceedings. Fifth Annual IEEE Symposium on Logic in Computer Science (90CH2897-7), P390, DOI 10.1109/LICS.1990.113764
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   ALUR R, 1992, REAL TIME PRACTICE
   Alur Rajeev, 1993, HYBRID SYSTEMS
   [Anonymous], IEEE T SOFTWARE ENG
   [Anonymous], 1983, THESIS MASSACHUSETTS
   BALL SR, 1998, DEBUGGING EMBEDDED M
   BALL SR, 2000, EMBEDDED MICROPROCES
   Bell R, 2000, INT STUD PHILOS, V32, P1
   BURNS A, 1995, IEEE T SOFTWARE ENG, V21, P475, DOI 10.1109/32.387477
   CAMPOS SV, 1999, THEORETICAL COMPUTER
   CARLOW GD, 1984, COMMUN ACM, V27, P926, DOI 10.1145/358234.358258
   Clarke E.M., 2001, INFORMATICS 10 YEARS
   CLARKE E M, 1996, ACM COMPUTING SURVEY
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Closse E, 2001, LECT NOTES COMPUT SC, V2102, P391
   COFER D, 2002, P INT WORKSH EMB SOF
   COUSOT P, 2001, INFORMATICS 10 YEARS
   COUSOT P, 2001, P INT WORKSH EMB SOF
   DAWS C, 1996, HYBRID SYSTEMS, V3
   Dijkstra E. W., 1968, Programming languages, P43
   DILL D, 1996, COMPUTER, V29, P23
   Dutertre B, 2000, REAL TIM SYST SYMP P, P151, DOI 10.1109/REAL.2000.896005
   EMERSON EA, 1982, SCI COMPUT PROGRAM, V2, P241, DOI 10.1016/0167-6423(83)90017-5
   EMERSON EA, 1989, P 2 WORKSH COMP AID, P136
   FAULK SR, 1988, COMMUN ACM, V31, P274, DOI 10.1145/42392.42397
   Ganssle JackG., 2000, The Art of Designing Embedded Systems
   GHEZZI C, 1991, IEEE T SOFTWARE ENG, V17, P160, DOI 10.1109/32.67597
   Heitmeyer C, 1998, LECT NOTES COMPUT SC, V1486, P18, DOI 10.1007/BFb0055332
   Heninger K.L, 1978, NRL Memorandum Report 3876
   HENZINGER TA, 2000, P 3 INT WORKSH HYBR
   Henzinger Thomas A., 1991, P 18 ACM SIGPLAN SIG, P353, DOI [10.1145/99583.99629, DOI 10.1145/99583.99629]
   Hoffman D., 2001, SOFTWARE FUNDAMENTAL
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   JAHANIAN F, 1986, IEEE T SOFTWARE ENG, V12, P890, DOI 10.1109/TSE.1986.6313045
   Klein M.H., 1993, PRACTITIONERS HDB RE
   Kopetz H., 1997, REAL TIME SYSTEMS DE
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   McMillan K. L., 1993, Symbolic model checking
   MELLIARSMITH PM, 1982, IEEE T COMPUT, V31, P616, DOI 10.1109/TC.1982.1676059
   Mok A. K., 1984, Proceedings of the Real-Time Systems Symposium (Cat. No. 84CH2105-5), P5
   OSTROFF JS, 1990, TEMPORAL LOGIC REAL
   PARNAS DL, 1994, P IFIP WORLD C, V3
   Penix J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P488, DOI 10.1109/ICSE.2000.870439
   QUEILLE J, 1982, P 5 ISP C
   SHA L, 1990, IEEE T COMPUTERS, V39
   SHEPARD T, 1991, IEEE T SOFTWARE ENG, V17, P669, DOI 10.1109/32.83903
   Shepard T., 1990, Proceedings. The 10th International Conference on Distributed Computing Systems (Cat. No.90CH2878-7), P62, DOI 10.1109/ICDCS.1990.89285
   SOUKOREFF W, 2001, COSC6390 YORK U DEP
   STANKARD MF, 1995, QUAL PROG, V28, P6
   STANKOVIC J, 1988, IEEE COMPUTER SOC TU
   Xu J, 2000, REAL-TIME SYST, V18, P7, DOI 10.1023/A:1008198310125
   XU J, 1990, IEEE T SOFTWARE ENG, V16, P360, DOI DOI 10.1109/32.48943
   XU J, 1998, P 23 IFAC IFIP WORKS
   XU J, 1992, P 11 ANN IEEE INT PH
   Xu J., 1993, IEEE T SOFTWARE ENG, V19, P1
   XU J, 2003, IEEE SOFTWARE    JUL
NR 57
TC 26
Z9 27
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2003
VL 29
IS 8
BP 705
EP 720
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 708KQ
UT WOS:000184566400004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Andrews, JH
   Zhang, YJ
AF Andrews, JH
   Zhang, YJ
TI General test result checking with log file analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE testing; specification; safety verification; lightweight formal methods;
   test oracles; unit testing; log file analysis
ID COMPLEX-SYSTEMS; ADA PROGRAMS; SOFTWARE; SPECIFICATIONS; VERIFICATION
AB We describe and apply a lightweight formal method for checking test results. The method assumes that the software under test writes a text log file; this log file is then analyzed by a program to see if it reveals failures. We suggest a state-machine-based formalism for specifying the log file analyzer programs and describe a language and implementation based on that formalism. We report on empirical studies of the application of log file analysis to random testing of units. We describe the results of experiments done to compare the performance and effectiveness of random unit testing with coverage checking and log file analysis to other unit testing procedures. The experiments suggest that writing a formal log file analyzer and using random testing is competitive with other formal and informal methods for unit testing.
C1 Univ Western Ontario, Dept Comp Sci, London, ON N6A 5B7, Canada.
C3 Western University (University of Western Ontario)
RP Univ Western Ontario, Dept Comp Sci, London, ON N6A 5B7, Canada.
EM andrews@csd.uwo.ca; yingjun_zhang@yahoo.ca
CR Andrews J. H., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P105, DOI 10.1109/ICSE.2000.870402
   Andrews JH, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P157, DOI 10.1109/ASE.1998.732614
   [Anonymous], P 5 S FRONT MASS PAR
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 1980, Computability and Logic
   BATES P, 1983, P ACM SIGPLAN NOT, V18, P107
   BROWN DB, 1992, IEEE T RELIABILITY, V41
   *BULLS TECHN, 2002, CCOVER
   CHECHIK M, 1994, P ACM SIGSOFT INT S, P1
   Donat M. R., 1997, TAPSOFT '97: Theory and Practice of Software Development. 7th International Joint Conference CAAP/FASE. Proceedings, P833, DOI 10.1007/BFb0030644
   DOONG RK, 1994, ACM T SOFTW ENG METH, V3, P101
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   Feather MS, 1998, IEEE T SOFTWARE ENG, V24, P949, DOI 10.1109/32.730544
   *FREE SOFTW FDN, 2001, GCOV TEST COV PROGR
   GUERAICHI D, 1989, P 2 FORM TECHN INT C, P361
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   HEIMBOLD D, 1985, IEEE SOFTWARE, V2, P47
   HENINGER KL, 1980, IEEE T SOFTWARE ENG, V6, P2, DOI 10.1109/TSE.1980.230208
   Hoffman D, 1997, SOFTWARE PRACT EXPER, V27, P573, DOI 10.1002/(SICI)1097-024X(199705)27:5<573::AID-SPE98>3.0.CO;2-3
   JOYCE J, 1987, ACM T COMPUT SYST, V5, P121, DOI 10.1145/13677.22723
   Kim JS, 2001, J VESTIBUL RES-EQUIL, V11, P3
   KIRANI S, 1994, J OBJECT-ORIENT PROG, V7, P28
   KUNG D, 1994, P INT COMP SOFTW APP, P222, DOI 10.1109/CMPSAC.1994.342801
   Kunz T, 1997, COMPUT J, V40, P499, DOI 10.1093/comjnl/40.8.499
   LENCEVICIUS R, 2000, P 4 INT WORKSH AUT D
   LENCEVICIUS R, 1997, P ACM C OBJ OR PROGR, P304
   LEVESON NG, 1991, IEEE SOFTWARE, V8, P48, DOI 10.1109/52.300036
   LUCKHAM D, 1991, IEEE SOFTWARE, V8, P74, DOI 10.1109/52.62935
   LUCKHAM DC, 1984, P IEEE C AD APPL ENV, P116
   MAKER P, 1995, 1295 NO TERR U SCH I
   McDonald J, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P147, DOI 10.1109/ASE.1998.732610
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   OFFUTT J, 2000, MUTATION 2000 MUTATI, P45
   OMalley TO, 1996, P CAL SOFTW S, P50
   Peters N, 1998, NEUROPATH APPL NEURO, V24, P3
   QIAO S, 1999, P INT C PAR DISTR PR, V3, P1371
   Richardson D. J., 1992, P 14 INT C SOFTW ENG, P105
   ROSENBLUM DS, 1995, IEEE T SOFTWARE ENG, V21, P19, DOI 10.1109/32.341844
   SANKAR S, 1993, CSLTR93566 STANF U
   SANNELLA D, 1988, ACTA INFORM, V25, P233, DOI 10.1007/BF02737104
   TAI KC, 1991, IEEE T SOFTWARE ENG, V17, P45, DOI 10.1109/32.67578
   Voas J, 1997, IEEE SOFTWARE, V14, P73, DOI 10.1109/52.595959
   VONBOCHMANN G, 1989, IEEE T SOFTWARE ENG, V15, P1347, DOI 10.1109/32.41328
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   ZHANG Y, 2000, THESIS U W ONTARIO O
NR 45
TC 37
Z9 46
U1 2
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2003
VL 29
IS 7
BP 634
EP 648
DI 10.1109/TSE.2003.1214327
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 698HG
UT WOS:000183992500005
DA 2024-07-18
ER

PT J
AU Chen, TY
   Poon, PL
   Tse, TH
AF Chen, TY
   Poon, PL
   Tse, TH
TI A choice relation framework for supporting category-partition test case
   generation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE category-partition testing; choice relation framework; choice relation
   table; specification-based testing; test case construction; test frame
AB We describe in this paper a choice relation framework for supporting category-partition test case generation. We capture the constraints among various values (or ranges of values) of the parameters and environment conditions identified from the specification, known formally as choices. We express these constraints in terms of relations among choices and combinations of choices, known formally as test frames. We propose a theoretical backbone and techniques for consistency checks and automatic deductions of relations. Based on the theory, algorithms have been developed for generating test frames from the relations. These test frames can then be used as the basis for generating test cases. Our algorithms take into consideration the resource constraints specified by software testers, thus maintaining the effectiveness of the test frames (and hence test cases) generated.
C1 Swinburne Univ Technol, Sch Informat Technol, Hawthorn, Vic 3122, Australia.
   Hong Kong Polytech Univ, Dept Accountancy, Hong Kong, Hong Kong, Peoples R China.
   Univ Hong Kong, Dept Comp Sci & Informat Syst, Hong Kong, Hong Kong, Peoples R China.
C3 Swinburne University of Technology; Hong Kong Polytechnic University;
   University of Hong Kong
RP Swinburne Univ Technol, Sch Informat Technol, Hawthorn, Vic 3122, Australia.
EM tychen@it.swin.edu.au; acplpoon@inet.polyu.edu.hk; tse@csis.hku.hk
RI Tse, T.H./C-6590-2008; Poon, Pak-Lok/ADQ-5493-2022
OI Tse, T.H./0000-0002-0460-8377; Chen, Tsong/0000-0003-3578-0994; POON,
   Pak Lok/0000-0003-2840-2418
CR AMANN P, 1994, P 9 ANN C COMP ASS C, P69
   AMLA N, 1992, P 7 ANN IEEE C COMP, P3
   AVRITZER A, 1995, IEEE T SOFTWARE ENG, V21, P705, DOI 10.1109/32.464549
   BALCER MJ, 1989, ACM SIGSOFT, V14, P210, DOI 10.1145/75309.75332
   Chen T. Y., 2002, IEE Proceedings-Software, V149, P65, DOI 10.1049/ip-sen:20020335
   Chen XB, 2001, CHINESE J ELECTRON, V10, P1
   Chen Y, 1998, COMP MET WATER RES, V4, P3
   CHUSHO T, 1987, IEEE T SOFTWARE ENG, V13, P509, DOI 10.1109/TSE.1987.233196
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Fergusson G. J., 1963, Radiocarbon, V5, P1
   Grochtmann M., 1993, Software Testing, Verification and Reliability, V3, P63, DOI 10.1002/stvr.4370030203
   JORGENSEN P, 2001, SOFTWARE TESTING CRA
   Kaner C., 1999, TESTING COMPUTER SOF
   Korel B., 1996, SIGSOFT Software Engineering Notes, V21, P209, DOI [10.1145/229000.226319, 10.1145/226295.226319]
   MYERS GJ, 1976, SOFTWARE RELIABILITY
   OFFUTT AJ, 1995, P 17 INT C TECHN OBJ, P293
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Sanders J., 1994, SOFTWARE QUALITY FRA
   Stocks P, 1996, IEEE T SOFTWARE ENG, V22, P777, DOI 10.1109/32.553698
   Zeil S., 1993, Proceedings. The Eighth Knowledge-Based Software Engineering Conference (Cat. No.93TH0580-1), P50, DOI 10.1109/KBSE.1993.341198
NR 20
TC 35
Z9 39
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2003
VL 29
IS 7
BP 577
EP 593
DI 10.1109/TSE.2003.1214323
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 698HG
UT WOS:000183992500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Baier, C
   Haverkort, B
   Hermanns, H
   Katoen, JP
AF Baier, C
   Haverkort, B
   Hermanns, H
   Katoen, JP
TI Model-checking algorithms for continuous-time Markov chains
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE continuous-time Markov chain; lumping; model checking; temporal logic;
   steady-state analysis; transient analysis; uniformization
ID TEMPORAL LOGIC; VERIFICATION
AB Continuous-time Markov chains (CTMCs) have been widely used to determine system performance and dependability characteristics. Their analysis most often concerns the computation of steady-state and transient-state probabilities. This paper introduces a branching temporal logic for expressing real-time probabilistic properties on CTMCs and presents approximate model checking algorithms for this logic. The logic, an extension of the continuous stochastic logic CSL of Aziz et al., Contains a time-bounded until operator to express probabilistic timing properties over paths as well as an operator to express steady-state probabilities. We show that the model checking problem for this logic reduces to a system of linear equations (for unbounded until and the steady-state operator) and a Volterra integral equation system (for time-bounded until). We then show that the problem of model-checking time-bounded until properties can be reduced to the problem of computing transient state probabilities for CTMCs. This allow's the verification of probabilistic timing properties by efficient techniques for transient analysis for CTMCs such as uniformization. Finally, we show that a variant of lumping equivalence (bisimulation), a well-known notion for aggregating CTMCs, preserves the validity of aft formulas in the logic.
C1 Univ Bonn, Inst Informat 1, D-53117 Bonn, Germany.
   Univ Twente, Dept Comp Sci, NL-7500 AE Enschede, Netherlands.
C3 University of Bonn; University of Twente
RP Univ Bonn, Inst Informat 1, Romerstr 164, D-53117 Bonn, Germany.
EM baier@cs.uni-bonn.de; brh@cs.utwente.nl; hermanns@cs.utwente.nl;
   katoen@cs.utwente.nl
RI ; Katoen, Joost-Pieter/O-3307-2018
OI Haverkort, Boudewijn/0000-0002-0654-0740; Katoen,
   Joost-Pieter/0000-0002-6143-1926; Hermanns, Holger/0000-0002-2766-9615
CR Aho AV., 1974, DESIGN ANAL COMPUTER
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   ALUR R, 1991, AUTOMATA LANGUAGES P
   [Anonymous], 1997, PhD thesis
   [Anonymous], 1985, INT WORKSH TIM PETR
   [Anonymous], 1968, An Introduction to Probability Theory and Its Applications
   [Anonymous], 1989, P 3 INT WORKSH PETR
   [Anonymous], 1995, Modeling and Analysis of Stochastic Systems
   AZIZ A, 1995, COMPUER AIDED VERIFI
   Aziz Adnan, 2000, ACM Trans. Comput. Logic, V1, P162, DOI DOI 10.1145/343369.343402
   Baier C, 1998, INFORM PROCESS LETT, V66, P71, DOI 10.1016/S0020-0190(98)00038-6
   Baier C, 1998, DISTRIB COMPUT, V11, P125, DOI 10.1007/s004460050046
   BAIER C, CONCURRENCY THEORY, P99
   BAIER C, 1999, THESIS U MANNHEIM GE
   BAIER C, 2000, AUTOMATA LANGUAGES P
   BAIER C, 2000, COMPUER AIDED VERIFI
   BIANCO A, 1995, FDN SOFTWARE TECHNOL
   BROWNE MC, 1988, THEOR COMPUT SCI, V59, P115, DOI 10.1016/0304-3975(88)90098-9
   BUCHHOLZ P, 1994, J APPL PROBAB, V31, P59, DOI 10.2307/3215235
   BUCHHOLZ P, IN PRESS J LOGIC ALG
   Cimatti A., 2000, Int. J. Softw. Tools for Technol. Transf. (STTT), V2, P410, DOI [DOI 10.1007/S100090050046, 10.1007/s100090050046]
   Clarke EM, 1997, FORM METHOD SYST DES, V10, P137, DOI 10.1023/A:1008695706493
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Clarke EM, 1999, MODEL CHECKING, P1
   Conway A. E., 1989, QUEUEING NETWORKS EX
   Courcoubetis C., 1988, 29th Annual Symposium on Foundations of Computer Science (IEEE Cat. No.88CH2652-6), P338, DOI 10.1109/SFCS.1988.21950
   COURCOUBETIS C, 1995, J ASSOC COMPUT MACH, V42, P857, DOI 10.1145/210332.210339
   DEALFARO L, 1997, P 4 ANN S THEOR ASP
   DEALFARO L, 1998, P IEEE 13 S LOG COMP, P174
   DERISAVI S, IN PRESS INFORMATION
   DESHARNAIS J, IN PRESS J LOGIC ALG
   Dill David L., 1996, Computer Aided Verification
   EMERSON EA, 1987, SCI COMPUT PROGRAM, V8, P275, DOI 10.1016/0167-6423(87)90036-0
   EMERSON EA, 1982, SCI COMPUT PROGRAM, V2, P241, DOI 10.1016/0167-6423(83)90017-5
   FOX BL, 1988, COMMUN ACM, V31, P440, DOI 10.1145/42404.42409
   GRASSMANN WK, 1991, PROB PUR AP, V8, P357
   GROSS D, 1984, OPER RES, V32, P343, DOI 10.1287/opre.32.2.343
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Haverkort B.R., 1998, Performance of Computer Communication Systems: A Model-Based Approach
   Haverkort BR, 2000, SYM REL DIST SYST, P228, DOI 10.1109/RELDI.2000.885410
   Hermanns H., 2003, International Journal on Software Tools for Technology Transfer, V4, P153, DOI 10.1007/s100090100072
   Hermanns H, 2000, PERFORM EVALUATION, V39, P5, DOI 10.1016/S0166-5316(99)00056-5
   HERMANNS H, 2000, THEORETICAL COMPUTER, V274, P43
   Hillston J., 1996, A Compositional Approach to Performance Modelling
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Howard R.A., 1971, SEMIMARKOV DECISION, V1
   Jensen A, 1953, SKAND AKTUARIETIDSKR, V36, P87, DOI 10.1080/03461238.1953.10419459
   KATOEN JP, 2001, PROCESS ALGEBRA PROB
   Kemeny J., 1960, Finite Markov Chains
   Kolmogoroff A, 1931, MATH ANN, V104, P415, DOI 10.1007/BF01457949
   KOLMOGOROV AN, 1936, MAT SBORNIK, P607
   KRIEGER UR, 1990, IEEE J SEL AREA COMM, V8, P1630, DOI 10.1109/49.62851
   KWIATKOWSKA MZ, 2002, THEORETICAL COMPUTER, V282, P1081
   LARSEN KG, 1992, INFORM COMPUT, V99, P80, DOI 10.1016/0890-5401(92)90025-B
   MARKOV AA, 1907, IZVESTIA AKAD 1, V61
   Marsan M.A., 1995, MODELING GEN STOCHAS
   MOLER C, 1978, SIAM REV, V20, P801, DOI 10.1137/1020098
   Muppala J.K., 1992, QUEUEING RELATED MOD
   MYER JF, 1985, P INT WORKSH TIM PET, P106
   Obal WD, 1999, PERFORM EVALUATION, V35, P233, DOI 10.1016/S0166-5316(99)00010-3
   PLATEAU B, 1991, IEEE T SOFTWARE ENG, V17, P1093, DOI 10.1109/32.99196
   PNUELI A, 1993, INFORM COMPUT, V103, P1, DOI 10.1006/inco.1993.1012
   Press W. H., 1989, NUMERICAL RECIPES C
   Puterman ML., 2014, MARKOV DECISION PROC, DOI DOI 10.1002/9780470316887
   QUIELLE JP, 1982, P INT S PROGR
   REIBMAN A, 1988, COMPUT OPER RES, V15, P19, DOI 10.1016/0305-0548(88)90026-3
   REIBMAN AL, 1989, EUR J OPER RES, V4, P257
   SANDERS WH, 1995, PERFORM EVALUATION, V24, P89, DOI 10.1016/0166-5316(95)00012-M
   Stewart W.J., 1994, Introduction to the Numerical Solution of Markov Chains
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Vardi M.Y., 1985, FOCS'85, P327
   YOUNES H, 2002, COMPUTER AIDED VERIF
   [No title captured]
NR 73
TC 461
Z9 488
U1 0
U2 25
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2003
VL 29
IS 6
BP 524
EP 541
DI 10.1109/TSE.2003.1205180
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 685XV
UT WOS:000183290400004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tonella, P
AF Tonella, P
TI Using a concept lattice of decomposition slices for program
   understanding and impact analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE program slicing; concept analysis; program comprehension; impact
   analysis; software maintenance
AB Decomposition slice graph and concept lattice are two program representations used to abstract the details of the code into a higher-level view of the program. The decomposition slice graph partitions the program into computations performed on different variables and shows the dependence relation between computations, holding when a computation needs another computation as a building block. The concept lattice groups program entities which share common attributes and organize such groupings into a hierarchy of concepts, which are related through generalizations/specializations. This paper investigates the relationship existing between these two program representations. The main result of this paper is a novel program representation, called concept lattice of decomposition slices, which is shown to be an extension of the decomposition slice graph, and is obtained by means of concept analysis, with additional nodes associated to weak interferences between computations, i.e., shared statements which are not decomposition slices. The concept lattice of decomposition slices can be used in support to software maintenance by providing relevant information about the computations performed by a program and the related dependences/interferences, as well as by representing a natural data structure on which to conduct impact analysis. Preliminary results on small to medium size code support the applicability of this method at the intraprocedural level or when investigating the dependences among small groups of procedures.
C1 IRST, Ctr Ric Sci & Tecnol, ITC, I-38050 Trento, Italy.
RP IRST, Ctr Ric Sci & Tecnol, ITC, I-38050 Trento, Italy.
EM tonella@itc.it
RI Tonella, Paolo/C-1702-2015
OI Tonella, Paolo/0000-0003-3088-0339
CR ANERSON P, 2001, P 1 WORKSH INSP SOFT, P4
   [Anonymous], P ACM SIGPLAN 1988 C
   Ball T, 1999, LECT NOTES COMPUT SC, V1687, P216, DOI 10.1145/318774.318944
   Binkley D., 1996, Advances in Computers, V43, P1
   Canfora G, 1998, INFORM SOFTWARE TECH, V40, P595, DOI 10.1016/S0950-5849(98)00086-X
   CHOI JD, 1994, ACM T PROGR LANG SYS, V16, P1097, DOI 10.1145/183432.183438
   Cimitile A, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P124, DOI 10.1109/ICSM.1995.526534
   Danicic S, 2000, PROC IEEE INT CONF S, P216, DOI 10.1109/ICSM.2000.883049
   Eisenbarth T, 2001, PROC IEEE INT CONF S, P602, DOI 10.1109/ICSM.2001.972777
   Eisenbarth T, 2001, PROG COMPREHEN, P300, DOI 10.1109/WPC.2001.921740
   Funk P., 1995, Algorithms for concept lattice decomposition and their applications
   GALLAGHER KB, 1991, IEEE T SOFTWARE ENG, V17, P751, DOI 10.1109/32.83912
   Gallagher KB, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P52, DOI 10.1109/ICSM.1996.564988
   Ganter B., 1996, FORMAL CONCEPT ANAL
   Gupta KC, 1996, INT J MICROWAVE MILL, V6, P83
   Harman M, 1997, PROG COMPREHEN, P70, DOI 10.1109/WPC.1997.601266
   HARMAN M, 1995, J SOFTWARE TESTING V, V5, P143
   Hutchins M, 1998, PROC IEEE INT CONF S, P294, DOI 10.1109/ICSM.1998.738521
   Kamkar Mariam., 1993, ICSM '93: Proceedings of the Conference on Software Maintenance, P386
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   KRONE M, 1994, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.1994.296765
   Larsen L, 1996, PROC INT CONF SOFTW, P495, DOI 10.1109/ICSE.1996.493444
   LEE M, 1996, P IEEE INT C SOFTW M, P171
   LEE ML, 1998, THESIS G MASON U
   Lindig C, 1997, PROC INT CONF SOFTW, P349, DOI 10.1145/253228.253354
   Lyle James R, 1993, P 1993 SOFTW ENG RES, P255
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   RYDER R, 2001, P SIGPLAN SIGSOFT WO, P46
   Siff M, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P170, DOI 10.1109/ICSM.1997.624243
   Snelting G, 2000, ACM T PROGR LANG SYS, V22, P540, DOI 10.1145/353926.353940
   Snelting G., 1996, ACM Transactions on Software Engineering and Methodology, V5, P146, DOI 10.1145/227607.227613
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Tonella P, 2001, IEEE T SOFTWARE ENG, V27, P351, DOI 10.1109/32.917524
   Tonella P, 1998, PROC IEEE INT CONF S, P326, DOI 10.1109/ICSM.1998.738524
   Tonella P, 1997, PROC INT CONF SOFTW, P433, DOI 10.1145/253228.253371
   WEISER M, 1982, COMMUN ACM, V25, P446, DOI 10.1145/358557.358577
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
NR 38
TC 110
Z9 149
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2003
VL 29
IS 6
BP 495
EP 509
DI 10.1109/TSE.2003.1205178
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 685XV
UT WOS:000183290400002
DA 2024-07-18
ER

PT J
AU Bianchi, A
   Caivano, D
   Visaggio, G
AF Bianchi, A
   Caivano, D
   Visaggio, G
TI Iterative reengineering of legacy systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT IEEE International Conference on Software Maintenance (ICSM 2001)
CY NOV 07-09, 2001
CL FLORENCE, ITALY
SP IEEE Comp Soc, Tech Council Software Engn, AICA, AIIA, CESVIT, ERCIM, TABOO, UNINFO, IBM Italia, O Grp Technol, Telelog Italia, Univ Florence, Dipartimento Sistemi & Informat
DE reengineering; legacy system rejuvenation
ID INFORMATION-SYSTEMS; SOFTWARE; INTEGRATION
AB During its life, a legacy system is subjected to many maintenance activities, which cause degradation of the quality of the system: When this degradation exceeds a critical threshold, the legacy system needs to be reengineered. In order to preserve the asset represented by the legacy system, the familiarity with it gained by the system's maintainers and users, and the continuity of execution of current operations during the reengineering process, the system needs to be reengineered gradually. Moreover, each program needs to be reengineered within a short period of time. The paper proposes a reengineering process model, which is applied to an in-use legacy system to confirm that the process satisfies previous requirements and to measure its effectiveness. The reengineered system replaced the legacy one to the satisfaction of all the stakeholders; the reengineering process also had a satisfactory impact on the quality of the system. Finally, this paper contributes to validate the cause-effect relationship between the reengineering process and overcoming the aging symptoms of a software system.
C1 Univ Bari, Dipartimento Informat, I-70126 Bari, Italy.
   Univ Bari, Dipartimento Stat, I-70124 Bari, Italy.
C3 Universita degli Studi di Bari Aldo Moro; Universita degli Studi di Bari
   Aldo Moro
RP Univ Bari, Dipartimento Informat, Via Orabona 4, I-70126 Bari, Italy.
EM bianchi@di.uniba.it; caivano@di.uniba.it; vmarengo@dss.uniba.it
OI Bianchi, Alessandro/0000-0001-6818-0720; Caivano,
   Danilo/0000-0001-5719-7447; VISAGGIO, GIUSEPPE/0000-0001-5258-5328
CR *ACUCORP, 2000, ACUCOBOL GT
   [Anonymous], 1994, Human-Computer Interaction
   BEIZER B, 1983, SOFTWARE TISSUE TECH
   Bianchi A, 2001, PROC IEEE INT CONF S, P632, DOI 10.1109/ICSM.2001.972780
   Bianchi A, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P86, DOI 10.1109/WCRE.2000.891456
   BIGGERSTAFF TJ, 1989, COMPUTER         JUL
   Bisbal J, 1999, IEEE SOFTWARE, V16, P103, DOI 10.1109/52.795108
   Blaha M, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P183, DOI 10.1109/WCRE.1998.723188
   BLAHA M, 1999, P 6 WORK C REV ENG I, P196
   BLAHA MR, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P116, DOI 10.1109/WCRE.1995.514700
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Brodie M., 1995, MIGRATING LEGACY SYS
   BROWN AJ, 1993, SOFTWARE MAINTENANCE, V5, P147
   CHIFOSKY EJ, 1990, IEEE SOFTWARE    JAN
   CODD EF, 1970, COMMUN ACM, V13, P377, DOI 10.1145/357980.358007
   Comella-Dorda S, 2000, PROC IEEE INT CONF S, P173, DOI 10.1109/ICSM.2000.883039
   Coyle FP, 2000, IEEE SOFTWARE, V17, P37
   Coyle FP, 2000, IEEE SOFTWARE, V17, P22, DOI 10.1109/52.839205
   Fagin R., 1979, PROC ACM SIGMOD INT, P153, DOI [10.1145/582095.582120, DOI 10.1145/582095.582120]
   Fowler M., 1999, REFRACTORING IMPROVI
   Hughes ER, 1997, FIRST INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING WORKSHOP, PROCEEDINGS, P236, DOI 10.1109/EDOC.1997.628365
   KENT W, 1983, COMMUN ACM, V26, P120, DOI 10.1145/358024.358054
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   *MERANT, 2000, MICR FOC PROD REV
   Noffsinger WB, 1998, COMMUN ACM, V41, P80, DOI 10.1145/290133.290153
   QUILICI A, 1995, PROC INT CONF SOFTW, P333, DOI 10.1145/225014.225046
   Robertson P, 1997, COMMUN ACM, V40, P39, DOI 10.1145/253769.253785
   SMITH HC, 1985, COMMUN ACM, V28, P826, DOI 10.1145/4021.4024
   SNEED HM, 1995, IEEE SOFTWARE, V12, P24, DOI 10.1109/52.363168
   Sneed HM, 2000, ANN SOFTW ENG, V9, P293, DOI 10.1023/A:1018989111417
   Sneed HM, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P104, DOI 10.1109/WCRE.1996.558885
   SNEED HM, 1999, P 6 IEEE WORK C REV, P204
   *UML REV TASK FORC, 1999, AD990608 OMG UML REV
   Visaggio G, 2000, ANN SOFTW ENG, V9, P215, DOI 10.1023/A:1018980809600
   Visaggio G, 2001, J SOFTW MAINT EVOL-R, V13, P281, DOI 10.1002/smr.234
   Watson A.H., 1996, NIST Special Publication
   WU B, 1997, P INT C ENG COMPL CO, P200
NR 37
TC 45
Z9 52
U1 2
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2003
VL 29
IS 3
BP 225
EP 241
DI 10.1109/TSE.2003.1183932
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 651QH
UT WOS:000181331700004
DA 2024-07-18
ER

PT J
AU Xu, HP
   Shatz, SM
AF Xu, HP
   Shatz, SM
TI A framework for model-based design of agent-oriented software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE multiagent systems; Petri net; G-net; design model; electronic commerce;
   model checking
ID SYSTEMS; COMPLEX; NETS
AB Agents are becoming one of the most important topics in distributed and autonomous decentralized systems, and there are increasing attempts to use agent technologies to develop large-scale commercial and industrial software systems. The complexity of such systems suggests a pressing need for system modeling techniques to support reliable, maintainable, and extensible design. G-nets are a type of Petri net defined to support system modeling in terms of a set of independent and loosely-coupled modules. In this paper, we customize the basic G-net model to define a so-called "agent-based G-net" that can serve as a generic model for agent design. Then, to progress from an agent-based design model to an agent-oriented model, new mechanisms to support inheritance modeling are introduced. To illustrate our formal modeling technique for multiagent systems, an example of an agent family in electronic commerce is provided. Finally, we demonstrate how we can use model checking to verify some key behavioral properties of our agent model. This is facilitated by the use of an existing Petri net tool.
C1 Univ Illinois, Dept Comp Sci, Chicago, IL 60607 USA.
C3 University of Illinois System; University of Illinois Chicago;
   University of Illinois Chicago Hospital
RP Univ Illinois, Dept Comp Sci, Chicago, IL 60607 USA.
EM hxu1@cs.uic.edu; shatz@cs.uic.edu
CR [Anonymous], P 17 INT C ART INT
   BERGENTI F, 2000, P ENG SOC AG WORLD 1, P106
   Brazier FMT, 1997, INT J COOP INF SYST, V6, P67, DOI 10.1142/S0218843097000069
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Clarke EM, 1996, ACM COMPUT SURV, V28, P626, DOI 10.1145/242223.242257
   Crnogorac L, 1997, INT JOINT CONF ARTIF, P647
   Deng Y., 1990, IEEE Transactions on Knowledge and Data Engineering, V2, P295, DOI 10.1109/69.60793
   DENG Y, 1993, P 14 INT C APPL THEO, P206
   DINVERNO M, 1997, KNOWLEDGE ENG REV, V12
   Finin T., 1997, SOFTWARE AGENTS
   Fisher M., 1995, Intelligent Agents. ECAI-94 Workshop on Agent Theories, Architectures, and Languages Proceedings, P307
   FLORES RA, 2001, MULTIAGENT SYSTEMS A, V2
   GREEN S, 1997, TCDCS199706 IAG
   HILAIRE V, 2000, ENG SOC AG WORLD 1 I
   Huang EH, 2001, 5TH INTERNATIONAL SYMPOSIUM ON AUTONOMOUS DECENTRALIZED SYSTEMS, PROCEEDINGS, P212, DOI 10.1109/ISADS.2001.917416
   HUBER MJ, 2001, P 8 INT WORKSH AG TH
   Iglesias Carlos., 1998, ATAL, V98, P317
   Jennings N. R., 1998, Autonomous agents and multi-agent systems, P7, DOI DOI 10.1023/A:1010090405266
   Jennings NR, 2001, COMMUN ACM, V44, P35, DOI 10.1145/367211.367250
   Kendall EA, 2000, IEEE CONCURR, V8, P34, DOI 10.1109/4434.846192
   Kinny D., 1996, Agents Breaking Away. 7th European Workshop on Modelling Autonomous Agents in a Multi-Agent World, MAAMAW '96 Proceedings, P56, DOI 10.1007/BFb0031846
   KINNY D, 1997, P 4 INT WORKSH AG TH, P1
   Luck M., 1995, Proceedings of the First International Conference on Multi-Agent Systems, P254
   Murae T, 1991, P NIPR S ANTARCT MET, V4, P384
   Murata T., 1991, IEEE Transactions on Knowledge and Data Engineering, V3, P281, DOI 10.1109/69.91059
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   ODELL J, 2000, P ICSE 2000 WORKSH A
   Perkusich A, 1997, J SYST SOFTWARE, V39, P39, DOI 10.1016/S0164-1212(96)00162-8
   ROCH S, 1999, INA INTEGRATED NET A
   Rogers TJ, 2000, J INTELL INF SYST, V14, P95, DOI 10.1023/A:1008727601100
   Shatz SM, 1996, IEEE T PARALL DISTR, V7, P1307, DOI 10.1109/71.553301
   Wooldridge M, 2000, AUTON AGENT MULTI-AG, V3, P285, DOI 10.1023/A:1010071910869
   Xu HP, 2001, INT CON DISTR COMP S, P57, DOI 10.1109/ICDSC.2001.918933
   Xu HP, 2001, 5TH INTERNATIONAL SYMPOSIUM ON AUTONOMOUS DECENTRALIZED SYSTEMS, PROCEEDINGS, P11, DOI 10.1109/ISADS.2001.917390
   Xu HP, 2000, IEEE SYS MAN CYBERN, P3128, DOI 10.1109/ICSMC.2000.884479
   YIM H, 2000, P 4 INT C MULT SYST
   YIN J, 2000, P 4 INT C AUT AG, P427
   Zhu H, 2001, INT J SOFTW ENG KNOW, V11, P529, DOI 10.1142/S0218194001000657
NR 38
TC 35
Z9 45
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2003
VL 29
IS 1
BP 15
EP 30
DI 10.1109/TSE.2003.1166586
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 633GD
UT WOS:000180273500002
DA 2024-07-18
ER

PT J
AU Song, JY
   Xie, X
   Ma, L
AF Song, Jiayang
   Xie, Xuan
   Ma, Lei
TI SIEGE: A Semantics-Guided Safety Enhancement Framework for AI-Enabled
   Cyber-Physical Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cyber-physical systems; reinforcement learning; state abstraction; AI
   controllers; ensemble methods
ID MODULAR-REDUNDANCY; REINFORCEMENT; STRATEGY
AB Cyber-Physical Systems (CPSs) have been widely adopted in various industry domains to support many important tasks that impact our daily lives, such as automotive vehicles, robotics manufacturing, and energy systems. As Artificial Intelligence (AI) has demonstrated its promising abilities in diverse tasks like decision-making, prediction, and optimization, a growing number of CPSs adopt AI components in the loop to further extend their efficiency and performance. However, these modern AI-enabled CPSs have to tackle pivotal problems that the AI-enabled control systems might need to compensate the balance across multiple operation requirements and avoid possible defections in advance to safeguard human lives and properties. Modular redundancy and ensemble method are two widely adopted solutions in the traditional CPSs and AI communities to enhance the functionality and flexibility of a system. Nevertheless, there is a lack of deep understanding of the effectiveness of such ensemble design on AI-CPSs across diverse industrial applications. Considering the complexity of AI-CPSs, existing ensemble methods fall short of handling such huge state space and sophisticated system dynamics. Furthermore, an ideal control solution should consider the multiple system specifications in real-time and avoid erroneous behaviors beforehand. Such that, a new specification-oriented ensemble control system is of urgent need for AI-CPSs. In this paper, we propose SIEGE, a semantics-guided ensemble control framework to initiate an early exploratory study of ensemble methods on AI-CPSs and aim to construct an efficient, robust, and reliable control solution for multi-tasks AI-CPSs. We first utilize a semantic-based abstraction to decompose the large state space, capture the ongoing system status and predict future conditions in terms of the satisfaction of specifications. We propose a series of new semantics-aware ensemble strategies and an end-to-end Deep Reinforcement Learning (DRL) hierarchical ensemble method to improve the flexibility and reliability of the control systems. Our large-scale, comprehensive evaluations over five subject CPSs show that 1) the semantics abstraction can efficiently narrow the large state space and predict the semantics of incoming states, 2) our semantics-guided methods outperform state-of-the-art individual controllers and traditional ensemble methods, and 3) the DRL hierarchical ensemble approach shows promising capabilities to deliver a more robust, efficient, and safety-assured control system. To enable further research along this direction to build better AI-enabled CPS, we made all of the code and experimental results data publicly (https://sites.google.com/view/ai-cps-siege/ home).
C1 [Song, Jiayang; Xie, Xuan; Ma, Lei] Univ Alberta, Edmonton, AB T6G 2R3, Canada.
   [Ma, Lei] Univ Tokyo, Tokyo 1138654, Japan.
C3 University of Alberta; University of Tokyo
RP Ma, L (corresponding author), Univ Alberta, Edmonton, AB T6G 2R3, Canada.; Ma, L (corresponding author), Univ Tokyo, Tokyo 1138654, Japan.
EM jiayan13@ualberta.ca; xxie9@ualberta.ca; ma.lei@acm.org
OI Song, Jiayang/0009-0008-7093-9781
FU Canada First Research Excellence Fund, University of Alberta's Future
   Energy Systems research initiative, Canada CIFAR AI Chairs Program, Amii
   RAP program; Natural Sciences and Engineering Research Council of Canada
   NSERC [RGPIN-2021-02549, RGPAS-2021-00034, DGECR-2021-00019]; JSPS
   KAKENHI [JP20H04168, JP21H04877]; JST-Mirai Program [JPMJMI20B8]
FX This work was supported in part by Canada First Research Excellence Fund
   as part of the University of Alberta's Future Energy Systems research
   initiative, Canada CIFAR AI Chairs Program, Amii RAP program, in part by
   the Natural Sciences and Engineering Research Council of Canada NSERC
   under Grants RGPIN-2021-02549, RGPAS-2021-00034, and DGECR-2021-00019,in
   part by JSPS KAKENHI under Grants JP20H04168 and JP21H04877, and in part
   by JST-Mirai Program under Grant JPMJMI20B8.
CR Abel D, 2018, PR MACH LEARN RES, V80
   Al-Jaroodi J., 2016, P IEEE INT C SMART C, P1, DOI 10.1109/SMARTCOMP.2016.7501717
   Albahli S, 2019, FUTURE INTERNET, V11, DOI 10.3390/fi11120246
   [Anonymous], 2022, 214482022 ISOSOTIF
   [Anonymous], 2011, ISO 262622011
   Atallah R, 2019, 2019 2ND INTERNATIONAL CONFERENCE ON NEW TRENDS IN COMPUTING SCIENCES (ICTCS), P335
   Avellaneda F, 2019, Arxiv, DOI arXiv:1904.06314
   Baheti R., 2011, Impact Control Technol, V12, P161, DOI DOI 10.1145/1795194.1795205
   BELLMAN R, 1957, J MATH MECH, V6, P679, DOI 10.1512/iumj.1957.6.56038
   Biza O, 2019, Arxiv, DOI arXiv:1811.12929
   Brunke L, 2022, ANNU REV CONTR ROBOT, V5, P411, DOI 10.1146/annurev-control-042920-020211
   Bures Tomas, 2017, ACM SIGSOFT Software Engineering Notes, V42, P19, DOI 10.1145/3089649.3089656
   Busoniu L, 2018, ANNU REV CONTROL, V46, P8, DOI 10.1016/j.arcontrol.2018.09.005
   Butte S, 2018, IEEE MIRCOELECT ELEC, P1
   Chakravarty A, 2007, BMC BIOINFORMATICS, V8, DOI 10.1186/1471-2105-8-249
   Chen C, 2021, ADV ENG INFORM, V48, DOI 10.1016/j.aei.2021.101290
   Chen JX, 2022, ENERGY, V239, DOI 10.1016/j.energy.2021.122123
   Chen XL, 2018, MATH PROBL ENG, V2018, DOI 10.1155/2018/2129393
   da Silva SF, 2021, ENERG CONVERS MANAGE, V234, DOI 10.1016/j.enconman.2021.113909
   Deshmukh JV, 2017, FORM METHOD SYST DES, V51, P5, DOI 10.1007/s10703-017-0286-7
   Dong XB, 2020, FRONT COMPUT SCI-CHI, V14, P241, DOI 10.1007/s11704-019-8208-z
   Donzé A, 2010, LECT NOTES COMPUT SC, V6246, P92, DOI 10.1007/978-3-642-15297-9_9
   Dreossi T, 2015, LECT NOTES COMPUT SC, V9058, P127, DOI 10.1007/978-3-319-17524-9_10
   Du XN, 2020, IEEE INT CONF AUTOM, P423, DOI 10.1145/3324884.3416564
   Du XN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P477, DOI 10.1145/3338906.3338954
   El-Maleh AH, 2014, MICROELECTRON RELIAB, V54, P316, DOI 10.1016/j.microrel.2013.09.002
   Elkiran G, 2019, J HYDROL, V577, DOI 10.1016/j.jhydrol.2019.123962
   Engelmann C., 2009, PDCN, P189
   François-Lavet V, 2018, FOUND TRENDS MACH LE, V11, P219, DOI 10.1561/2200000071
   Fujimoto S, 2018, PR MACH LEARN RES, V80
   Ganaie MA, 2022, Arxiv, DOI [arXiv:2104.02395, 10.48550/arXiv.2104.02395]
   Ghosh S, 2020, Arxiv, DOI arXiv:2004.01387
   Gomes HM, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3054925
   Gonzales-Zurita O, 2020, ENERGIES, V13, DOI 10.3390/en13133483
   Haarnoja T, 2018, PR MACH LEARN RES, V80
   Holtmann J, 2016, J SOFTW-EVOL PROC, V28, P722, DOI 10.1002/smr.1780
   Huang QH, 2020, IEEE T SMART GRID, V11, P1171, DOI 10.1109/TSG.2019.2933191
   Hudson S, 2018, ADV INTELL SYST, V710, P471, DOI 10.1007/978-981-10-7871-2_45
   Ji L, 2021, IEEE T POWER DELIVER, V36, P2490, DOI 10.1109/TPWRD.2020.3025158
   Jin JC, 2019, IEEE T INTELL TRANSP, V20, P3900, DOI 10.1109/TITS.2019.2906260
   Jin X., 2014, P 17 INT C HYBRID SY, P253, DOI DOI 10.1145/2562059.2562140
   Johnson T.T., 2020, EPiC Series in Computing, V74, P107
   Kaelbling LP, 1996, J ARTIF INTELL RES, V4, P237, DOI 10.1613/jair.301
   KINOVA, 2022, KIN GEN3 ULTR LIGHTW
   Kiran BR, 2022, IEEE T INTELL TRANSP, V23, P4909, DOI 10.1109/TITS.2021.3054625
   Konidaris G, 2019, CURR OPIN BEHAV SCI, V29, P1, DOI 10.1016/j.cobeha.2018.11.005
   Lee K, 2021, PR MACH LEARN RES, V139
   Lee K, 2018, ACM T GRAPHIC, V37, DOI 10.1145/3272127.3275071
   Levine S, 2018, Arxiv, DOI [arXiv:1805.00909, 10.48550/arXiv.1805.00909]
   Lillicrap T., 2015, arXiv, DOI 10.48550/arXiv.1509.02971
   Liu H, 2020, ENERGY, V202, DOI 10.1016/j.energy.2020.117794
   Liu T, 2020, ENERG BUILDINGS, V208, DOI 10.1016/j.enbuild.2019.109675
   Liu WL, 2022, IEEE CONTR SYST LETT, V6, P91, DOI 10.1109/LCSYS.2021.3049917
   Liu XW, 2021, ATMOS POLLUT RES, V12, DOI 10.1016/j.apr.2021.101197
   LYONS RE, 1962, IBM J RES DEV, V6, P200, DOI 10.1147/rd.62.0200
   Ma Y, 2012, ENSEMBLE MACHINE LEARNING: METHODS AND APPLICATIONS, P1, DOI 10.1007/978-1-4419-9326-7
   Mahmoudi MR, 2021, ARTIF INTELL REV, V54, P639, DOI 10.1007/s10462-020-09862-1
   Massaoudi M, 2021, ENERGY, V214, DOI 10.1016/j.energy.2020.118874
   MathWorks, 2021, AUT PARK VAL UNR ENG
   MathWorks, 2021, LAN KEEP ASS SYST US
   MathWorks, 2021, AD CRUIS CONT SYST U
   MathWorks, 2021, BALL BAL CONTR
   Matignon L, 2006, LECT NOTES COMPUT SC, V4131, P840
   Mirmozaffari M, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10155210
   Moerland T M, 2020, arXiv
   Moon S. I., 2020, PROC IEEE GLOBECOM W, P1
   Nivison SA., 2018, AIAA GUIDANCE NAVIGA, DOI 10.2514/6.2018-0842
   Nivison SA, 2017, P AMER CONTR CONF, P5336, DOI 10.23919/ACC.2017.7963784
   Pateria S, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3453160
   Pathak P., 2019, INT J ENG ADV TECHNO, V8, P23
   Polikar R, 2012, ENSEMBLE MACHINE LEARNING: METHODS AND APPLICATIONS, P1, DOI 10.1007/978-1-4419-9326-7_1
   Radanliev P, 2021, AI SOC, V36, P783, DOI 10.1007/s00146-020-01049-0
   Riedmiller M, 2005, LECT NOTES ARTIF INT, V3720, P317, DOI 10.1007/11564096_32
   Ringert JO, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING TRACK (ICSE-SEET 2017), P127, DOI 10.1109/ICSE-SEET.2017.16
   Rodríguez-Molina A, 2020, APPL SOFT COMPUT, V93, DOI 10.1016/j.asoc.2020.106342
   Rose DC, 2021, NEW J PHYS, V23, DOI 10.1088/1367-2630/abd7bd
   Sagi O, 2018, WIRES DATA MIN KNOWL, V8, DOI 10.1002/widm.1249
   Saphal R, 2021, Arxiv, DOI arXiv:2001.05209
   Savargiv M, 2020, J AMB INTEL HUM COMP, DOI 10.1007/s12652-020-01882-7
   Schulman J, 2017, Arxiv, DOI arXiv:1707.06347
   Shanahan M, 2022, arXiv, DOI 10.48550/arXiv.2202.05839
   Shi J., 2011, P 2011 INT C WIR COM, P1, DOI DOI 10.1109/WCSP.2011.6096958
   Song JY, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2022), P343, DOI [10.1145/3510457.3513049, 10.1109/ICSE-SEIP55303.2022.9794128]
   Suk HI, 2017, MED IMAGE ANAL, V37, P101, DOI 10.1016/j.media.2017.01.008
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Vandoni J, 2019, INT J APPROX REASON, V104, P166, DOI 10.1016/j.ijar.2018.11.007
   Verleysen M, 2005, LECT NOTES COMPUT SC, V3512, P758
   Villacres JLC, 2019, IEEE J SEL AREA COMM, V37, P2457, DOI 10.1109/JSAC.2019.2933886
   Wan K., 2010, PROC IEEE INT C NETW, P1
   Wickramasinghe CS, 2018, IEEE IND ELEC, P745, DOI 10.1109/IECON.2018.8591773
   Xiao JL, 2019, PHYSICA A, V517, P29, DOI 10.1016/j.physa.2018.10.060
   Xu YH, 2023, IEEE T NEUR NET LEAR, V34, P2284, DOI 10.1109/TNNLS.2021.3106306
   Xu ZY, 2019, IEEE J SEL AREA COMM, V37, P1325, DOI 10.1109/JSAC.2019.2904358
   Zhang ZY, 2023, IEEE T SOFTWARE ENG, V49, P1842, DOI 10.1109/TSE.2022.3194640
   Zhang ZY, 2022, IEEE T COMPUT AID D, V41, P4421, DOI 10.1109/TCAD.2022.3197693
   Zhang ZY, 2021, LECT NOTES COMPUT SC, V12759, P595, DOI 10.1007/978-3-030-81685-8_29
   Zhang Zhenya, 2022, IEEE T SOFTWARE ENG, V2022
   Zhou Z.-H., 2021, MACH LEARN, P315, DOI [10.1007/978-981-15-1967-313, DOI 10.1007/978-981-15-1967-3, 10.1007/978-981-15-1967-3]
   Zhu J, 2009, STAT INTERFACE, V2, P349
NR 99
TC 0
Z9 0
U1 3
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2023
VL 49
IS 8
BP 4058
EP 4080
DI 10.1109/TSE.2023.3282981
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA P3WA9
UT WOS:001049968200007
DA 2024-07-18
ER

PT J
AU Mili, H
   Benzarti, I
   Elkharraz, A
   Elboussaidi, G
   Guéhéneuc, YG
   Valtchev, P
AF Mili, Hafedh
   Benzarti, Imen
   Elkharraz, Amel
   Elboussaidi, Ghizlane
   Gueheneuc, Yann-Gael
   Valtchev, Petko
TI Discovering Reusable Functional Features in Legacy Object-Oriented
   Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Delegation; feature discovery; formal concept analysis; functional
   feature; multiple inheritance
ID SOURCE CODE; DESIGN; FRAMEWORK
AB Typical object-oriented (OO) systems implement several functional features that are interwoven into class hierarchies. In the absence of aspect-oriented techniques to develop and compose these features, developers resort to object-oriented design and programming idioms to separate features as well as possible. Given a legacy OO system, discovering existing functional features helps understand the design of the system and extract these features to ease their maintenance and reuse. We want to discover candidate functional features in OO systems. We first define functional features and then discuss the footprints that such features are likely to leave in an OO system. We identify three such footprints: (1) multiple inheritance, (2) delegation, and (3) ad-hoc. We develop a set of algorithms for identifying such footprints in OO code and implemented them for the Java language using Eclipse JDT. In this article, we present the algorithms, and the results of applying the corresponding tools on five open-source systems: FreeMind, JavaWebMail, JHotDraw, JReversePro, and Lucene. Our experimental results show that: (1) the different algorithms can identify interesting and useful candidate functional features in OO systems, (2) they can identify opportunities for refactoring, and (3) they are complementary and could help developers.
C1 [Mili, Hafedh] Univ Quebec Montreal, Dept Informat, Montreal, PQ H2L 2C4, Canada.
   [Benzarti, Imen] Univ Quebeca Montreal, LATECE Lab, Montreal, PQ H3B 3B8, Canada.
   [Benzarti, Imen] Ecole Technol Super, Dept Software Engn & IT, Montreal, PQ H3C 1K3, Canada.
   [Elkharraz, Amel] Coll Bois De Boulogne, Montreal, PQ H4N 1L4, Canada.
   [Elboussaidi, Ghizlane] Ecole Technol Super, Dept Software Engn & IT, Montreal, PQ H3C 1K3, Canada.
   [Gueheneuc, Yann-Gael] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H4B 1R6, Canada.
   [Valtchev, Petko] Univ Quebeca Montreal, Dept Informat, Montreal, PQ H2L 2C4, Canada.
C3 University of Quebec; University of Quebec Montreal; University of
   Quebec; Ecole de Technologie Superieure - Canada; University of Quebec;
   Ecole de Technologie Superieure - Canada; Concordia University - Canada
RP Guéhéneuc, YG (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H4B 1R6, Canada.
EM mili.hafedh@uqam.ca; benzarti.imen@gmail.com; Amel.Elkharraz@bdeb.qc.ca;
   ghizlane.elboussaidi@etsmtl.ca; yann-gael.gueheneuc@concordia.ca;
   petko.valtchev@uqam.ca
OI Benzarti, Imen/0000-0003-0658-9605; El Boussaidi,
   Ghizlane/0000-0001-6145-774X; Gueheneuc, Yann-Gael/0000-0002-4361-2563;
   Valtchev, Petko/0000-0001-5026-3915
FU Canada's NSERC Discovery Grant; Research Chair programs
FX This work was supported in part by Canada's NSERC Discovery Grant and in
   part by Research Chair programs. Recommended for acceptance by Y. Cai.
CR Abdellatif M, 2021, J SYST SOFTWARE, V173, DOI 10.1016/j.jss.2020.110868
   Ajila SA, 2005, PROCEEDINGS OF THE 2005 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P288
   AL-Msie'deen Ra'Fat, 2013, Safe and Secure Software Reuse. 13th International Conference on Software Reuse, ICSR 2013. Proceedings: LNCS 7925, P302, DOI 10.1007/978-3-642-38977-1_22
   Arcega L, 2016, LECT NOTES COMPUT SC, V9959, P180, DOI 10.1007/978-3-319-46613-2_12
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Belle AB, 2015, LECT NOTES COMPUT SC, V9278, P339, DOI 10.1007/978-3-319-23727-5_28
   BIGGERSTAFF TJ, 1994, COMMUN ACM, V37, P72, DOI 10.1145/175290.175300
   Brant J., 1995, THESIS U ILLINOIS DE
   Breu S, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P310, DOI 10.1109/ASE.2004.1342754
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Briand LC, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P43, DOI 10.1109/METRIC.1997.637164
   CARRE B, 1990, SIGPLAN NOTICES, V25, P312, DOI 10.1145/97946.97983
   CASEAU Y, 1993, SIGPLAN NOTICES, V28, P271, DOI 10.1145/167962.165905
   Chen KR, 2000, PROG COMPREHEN, P241, DOI 10.1109/WPC.2000.852498
   Chiang CC, 2006, IEEE SYS MAN CYBERN, P1304, DOI 10.1109/ICSMC.2006.384895
   Chunrong Fang, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P516, DOI 10.1145/3395363.3397362
   Curry G., 1982, PROC SIGOA C OFFICE, P1
   Dagenais B, 2021, ARXIV
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   El Boussaidi G, 2012, SOFTWARE PRACT EXPER, V42, P1495, DOI 10.1002/spe.1145
   Elkharraz A, 2008, PROC INT C TOOLS ART, P403, DOI 10.1109/ICTAI.2008.149
   Eyal-Salman H., 2014, SEKE: Software Engineering and Knowledge Engineering, P426
   Ganter B. B., 1999, FORMAL CONCEPT ANAL
   Godin R, 1998, THEOR PRACT OBJ SYST, V4, P117, DOI 10.1002/(SICI)1096-9942(1998)4:2<117::AID-TAPO6>3.0.CO;2-Q
   GODIN R, 1993, SIGPLAN NOTICES, V28, P394, DOI 10.1145/167962.165931
   Godin R, 2005, LECT NOTES ARTIF INT, V3626, P304
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Guéhéneuc YG, 2004, ACM SIGPLAN NOTICES, V39, P301, DOI 10.1145/1035292.1029002
   HARRISON W, 1993, SIGPLAN NOTICES, V28, P411, DOI 10.1145/167962.165932
   Jin W., 2020, NATURAL LANGUAGE PRO, P758
   Jin WX, 2021, IEEE T SOFTWARE ENG, V47, P987, DOI 10.1109/TSE.2019.2910531
   Kang KC, 2005, LECT NOTES COMPUT SC, V3714, P45
   Khadka R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P36
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kim K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P171, DOI 10.1109/SPLINE.2007.27
   KOSCHKE R., 2005, ASE '05 Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering, P86
   Krause A, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2020), P9, DOI 10.1109/ICSA-C50368.2020.00011
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   Mazlami G, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P524, DOI 10.1109/ICWS.2017.61
   McBurney PW, 2016, J SOFTW-EVOL PROC, V28, P120, DOI 10.1002/smr.1768
   Meng SC, 2012, PROC INT CONF SOFTW, P353, DOI 10.1109/ICSE.2012.6227179
   Mili H., 2001, Reuse-based Software Engineering: Techniques, Organization, and Controls
   Molnar A.-J., 2020, P 14 ACM IEEE INT S, P1, DOI DOI 10.1145/3382494.3410673
   Nagy C, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P580, DOI 10.1109/SANER.2015.7081881
   Peng X, 2013, J SYST SOFTWARE, V86, P664, DOI 10.1016/j.jss.2012.10.270
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2007, INT C PROGRAM COMPRE, P37
   Revelle M, 2009, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2009.5090045
   Rubin J., 2013, Domain Engineering, P29, DOI DOI 10.1007/978-3-642-36654-3
   Sabané A, 2017, EMPIR SOFTW ENG, V22, P2612, DOI 10.1007/s10664-016-9448-2
   Shatnawi A, 2017, IEEE WORK CONF MIN S, P64, DOI 10.1109/MSR.2017.6
   Szoke G, 2014, LECT NOTES COMPUT SC, V8583, P524, DOI 10.1007/978-3-319-09156-3_37
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Tonella P, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P112, DOI 10.1109/WCRE.2004.13
   Valente MT, 2012, IEEE T SOFTWARE ENG, V38, P737, DOI 10.1109/TSE.2011.57
   Valtchev P, 2004, LECT NOTES ARTIF INT, V2961, P352
   Vedurada J, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276508
   von Detten M, 2014, SOFTW SYST MODEL, V13, P1239, DOI 10.1007/s10270-013-0341-9
   WEISER M, 1982, COMMUN ACM, V25, P446, DOI 10.1145/358557.358577
   Wen M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P326, DOI 10.1145/3338906.3338962
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
   Wu YM, 2020, IEEE INT CONF AUTOM, P821, DOI 10.1145/3324884.3416562
   Zhang ZP, 2006, INT CONF QUAL SOFTW, P385
   Zhao W, 2006, ACM T SOFTW ENG METH, V15, P195, DOI 10.1145/1131421.1131424
NR 65
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2023
VL 49
IS 7
BP 3827
EP 3856
DI 10.1109/TSE.2023.3272631
PG 30
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA M9RA6
UT WOS:001033501500010
DA 2024-07-18
ER

PT J
AU Bernal-Cárdenas, C
   Cooper, N
   Havranek, M
   Moran, K
   Chaparro, O
   Poshyvanyk, D
   Marcus, A
AF Bernal-Cardenas, Carlos
   Cooper, Nathan
   Havranek, Madeleine
   Moran, Kevin
   Chaparro, Oscar
   Poshyvanyk, Denys
   Marcus, Andrian
TI Translating Video Recordings of Complex Mobile App UI Gestures into
   Replayable Scenarios
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Bug reporting; screen recordings; object detection
AB Screen recordings of mobile applications are easy to obtain and capture a wealth of information pertinent to software developers (e.g., bugs or feature requests), making them a popular mechanism for crowdsourced app feedback. Thus, these videos are becoming a common artifact that developers must manage. In light of unique mobile development constraints, including swift release cycles and rapidly evolving platforms, automated techniques for analyzing all types of rich software artifacts provide benefit to mobile developers. Unfortunately, automatically analyzing screen recordings presents serious challenges, due to their graphical nature, compared to other types of (textual) artifacts. To address these challenges, this paper introduces V2S+, an automated approach for translating video recordings of Android app usages into replayable scenarios. V2S+ is based primarily on computer vision techniques and adapts recent solutions for object detection and image classification to detect and classify user gestures captured in a video, and convert these into a replayable test scenario. Given that V2S+ takes a computer vision-based approach, it is applicable to both hybrid and native Android applications. We performed an extensive evaluation of V2S+ involving 243 videos depicting 4,028 GUI-based actions collected from users exercising features and reproducing bugs from a collection of over 90 popular native and hybrid Android apps. Our results illustrate that V2S+ can accurately replay scenarios from screen recordings, and is capable of reproducing approximate to 90.2% of sequential actions recorded in native application scenarios on physical devices, and approximate to 83% of sequential actions recorded in hybrid application scenarios on emulators, both with low overhead. A case study with three industrial partners illustrates the potential usefulness of V2S+ from the viewpoint of developers.
C1 [Bernal-Cardenas, Carlos] Liquid Team, Microsoft, Redmond, WA 98052 USA.
   [Cooper, Nathan; Havranek, Madeleine; Chaparro, Oscar; Poshyvanyk, Denys] Coll William & Mary, Dept Comp Sci, Williamsburg, VA 23185 USA.
   [Moran, Kevin] George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
   [Marcus, Andrian] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75080 USA.
C3 Microsoft; William & Mary; George Mason University; University of Texas
   System; University of Texas Dallas
RP Cooper, N (corresponding author), Coll William & Mary, Dept Comp Sci, Williamsburg, VA 23185 USA.
EM carlosbe@microsoft.com; nacooper01@email.wm.edu;
   mrhavranek@email.wm.edu; kpmoran@gmu.edu; oscarch@wm.edu;
   denys@cs.wm.edu; amarcus@utdallas.edu
OI Marcus, Andrian/0000-0001-5450-5598; Chaparro,
   Oscar/0000-0003-2838-685X; Poshyvanyk, Denys/0000-0002-5626-7586
FU NSF [CCF-01927679, CCF-1815186, CNS-1815336, CCF-1955837, CCF-1910976]; 
   [CCF-1955853]
FX This work was supported by (NSF) under Grants CCF-01927679,
   CCF-1815186,CNS-1815336, CCF-1955837, CCF-1910976 and CCF-1955853.
CR Airtest project, 2019, US
   [Anonymous], 2009, MULTITOUCH MT PROTOC
   [Anonymous], 2019, BOT MAKER ANDROID AP
   [Anonymous], 2019, Seven-Eleven
   [Anonymous], 2019, FFMPEG TOOL
   [Anonymous], 2019, TRACK TOUCH POINTER
   [Anonymous], 2021, BIRD EATS BUGS
   [Anonymous], 2019, HIROMACRO AUTOTOUCH
   [Anonymous], 2019, GOOGLE PLAY SCREEN R
   [Anonymous], 2019, TESTBIRDS CROWDSOURC
   [Anonymous], 2014, Android fragmentation statistics
   [Anonymous], 2019, MYCROWD CROWDSOURCED
   [Anonymous], 2019, REPLAYKIT COMMAND LI
   [Anonymous], 2019, STACKOVERFLOW ANDROI
   [Anonymous], 2019, MR TAPPY MOBILE USAB
   [Anonymous], 2006, VIEWCONFIGURATION DE
   [Anonymous], 2021, About us
   [Anonymous], 2019, ANDROID SHOW TOUCHES
   [Anonymous], 2019, TENSORFLOW OBJECT DE
   [Anonymous], 2019, APPLAUSE CROWDSOURCE
   [Anonymous], 2019, GOOGLE SEARCH
   [Anonymous], 2019, MANAGE TOUCH EVENTS
   [Anonymous], 2019, CREATE UI TESTS ESPR
   Bao LF, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P673, DOI 10.1109/ICSE.2015.220
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Beltramelli T, 2018, PROCEEDINGS OF THE ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS (EICS'18), DOI 10.1145/3220134.3220135
   Bernal-Cardenas C., 2022, V2S ONLINE APPENDIX
   Bernal-Cárdenas C, 2020, PROC INT CONF SOFTW, P309, DOI 10.1145/3377811.3380328
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   CANNY J, 1986, IEEE T PATTERN ANAL, V8, P679, DOI 10.1109/TPAMI.1986.4767851
   Carion N, 2020, Arxiv, DOI [arXiv:2005.12872, DOI 10.48550/ARXIV.2005.12872]
   Chaparro O, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P86, DOI 10.1145/3338906.3338947
   Chen CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P665, DOI 10.1145/3180155.3180222
   Ciurumelea A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2017.7884612
   Cooper N, 2021, PROC INT CONF SOFTW, P957, DOI 10.1109/ICSE43902.2021.00091
   Dan Han, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P83, DOI 10.1109/WCRE.2012.18
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Fazzini M, 2017, IEEE INT CONF SOFTW, P149, DOI 10.1109/ICST.2017.21
   Frisson C., 2016, PROC CHI C EXTENDED, P1548
   Girshick R, 2014, PROC CVPR IEEE, P580, DOI 10.1109/CVPR.2014.81
   Gomez L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P72, DOI 10.1109/ICSE.2013.6606553
   Halpern M, 2015, INT SYM PERFORM ANAL, P215, DOI 10.1109/ISPASS.2015.7095807
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hu G., 2014, P ACM EUROSYS, p18:1
   Hu G, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P269, DOI 10.1145/3236024.3236055
   Hu YJ, 2015, ACM SIGPLAN NOTICES, V50, P349, DOI [10.1145/2858965.2814320, 10.1145/2814270.2814320]
   Jeon J., 2012, CSTR5013 U MAR
   Jones N., 2013, Technical Report G00248240
   Kordopatis-Zilos G, 2017, LECT NOTES COMPUT SC, V10132, P251, DOI 10.1007/978-3-319-51811-4_21
   Krieter P, 2018, 20TH INTERNATIONAL CONFERENCE ON HUMAN-COMPUTER INTERACTION WITH MOBILE DEVICES AND SERVICES (MOBILEHCI 2018), DOI 10.1145/3229434.3229450
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Lam W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P854, DOI 10.1145/3106237.3117769
   Lin CC, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23049
   Lin JW, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P42, DOI 10.1109/ASE.2019.00015
   Lin TY, 2014, LECT NOTES COMPUT SC, V8693, P740, DOI 10.1007/978-3-319-10602-1_48
   Linares-Vásquez M, 2017, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSME.2017.27
   Linares-Vásquez M, 2017, PROC IEEE INT CONF S, P613, DOI 10.1109/ICSME.2017.47
   Linares-Vásquez M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P111, DOI 10.1109/MSR.2015.18
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Malavolta I, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P56, DOI 10.1109/MobileSoft.2015.15
   Mao K, 2017, IEEE INT CONF AUTOM, P16, DOI 10.1109/ASE.2017.8115614
   Milano D. T., 2019, ANDROID VIEWSERVER C
   Monkeypox, 2022, About us
   Moran Kevin, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P215, DOI 10.1109/MOBILESoft.2017.36
   Moran K., 2018, REDRAW DATASET SET A
   Moran K, 2018, INT C PROGRAM COMPRE, P7, DOI 10.1145/3196321.3196322
   Moran K, 2020, IEEE T SOFTWARE ENG, V46, P196, DOI 10.1109/TSE.2018.2844788
   Moran K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P673, DOI 10.1145/2786805.2786857
   Moran K, 2016, IEEE INT CONF SOFTW, P33, DOI 10.1109/ICST.2016.34
   Nayebi M, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P49, DOI 10.1145/3377816.3381723
   Nurmuradov D, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P400, DOI 10.1145/3092703.3098231
   Palomba F, 2018, J SYST SOFTWARE, V137, P143, DOI 10.1016/j.jss.2017.11.043
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Proximus, 2019, US
   Qin ZR, 2016, PROC INT CONF SOFTW, P571, DOI 10.1145/2884781.2884854
   Ren SQ, 2017, IEEE T PATTERN ANAL, V39, P1137, DOI 10.1109/TPAMI.2016.2577031
   Schusteritsch R., 2007, CHI 07 EXTENDED ABST, P1839
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Szegedy C, 2015, PROC CVPR IEEE, P1, DOI 10.1109/CVPR.2015.7298594
   Talebipour S, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P756, DOI 10.1109/ASE51524.2021.9678643
   Tan MX, 2019, PR MACH LEARN RES, V97
   Testfairy, 2019, US
   Tolstikhin I, 2021, ADV NEUR IN, V34
   Nguyen TA, 2015, IEEE INT CONF AUTOM, P248, DOI 10.1109/ASE.2015.32
   Tuovenen J., 2019, Computer Games Journal, V8, P215, DOI 10.1007/s40869-019-00087-z
   Uijlings JRR, 2013, INT J COMPUT VISION, V104, P154, DOI 10.1007/s11263-013-0620-5
   Vaswani A, 2017, ADV NEUR IN, V30
   Wan M, 2019, PROC IEEE INT CONF S, P65, DOI 10.1109/ICSME.2019.00016
   Watchsend, 2019, US
   Wei LL, 2016, IEEE INT CONF AUTOM, P226, DOI 10.1145/2970276.2970312
   Wu BC, 2020, Arxiv, DOI [arXiv:2006.03677, 10.48550/arxiv.2006.03677]
   YazdaniBanafsheDaragh F, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P905, DOI 10.1109/ASE51524.2021.9678778
   Zeiler MD, 2014, LECT NOTES COMPUT SC, V8689, P818, DOI 10.1007/978-3-319-10590-1_53
NR 94
TC 0
Z9 0
U1 2
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1782
EP 1803
DI 10.1109/TSE.2022.3192279
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600021
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gonzalez, SLH
   Fraternali, P
AF Gonzalez, Sergio Luis Herrera
   Fraternali, Piero
TI Almost Rerere: Learning to Resolve Conflicts in Distributed Projects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Automatic conflict resolution; GIT; code integration
ID MERGE CONFLICTS; CODE; SYSTEM
AB The concurrent development of applications requires reconciling conflicting code updates by different developers. Recent research on the nature of merge conflicts in open source projects shows that a significant fraction of merge conflicts have limited size (one or two lines of code) and are resolved with simple strategies that use code present in the merged versions. Thus the opportunity arises of supporting the resolution of merge conflicts automatically by learning the way in which developers fix them. In this paper we propose a framework for automating the resolution of merge conflicts which learns from the resolutions made by developers and encodes such knowledge into conflict resolution rules applicable to conflicts not seen before. The proposed approach is text-based, does not depend on the programming languages of the merged files and exploits a well-known and general language (search and replacement regular expressions) to encode the conflict resolution rules. Evaluation results on 14,872 conflicts from 25 projects show that the system can synthesize a resolution for approximate to 49% of the conflicts occurred during the merge process (approximate to 89% if one considers conflicts that have at least one similar conflict in the data set) and can reproduce exactly the same solution that human developers have applied in approximate to 55% of the cases (approximate to 62% for single line conflicts).
C1 [Gonzalez, Sergio Luis Herrera; Fraternali, Piero] Politecn Milan, Dipartimento Elettron Informaz & Bioingn, I-20133 Milan, Italy.
C3 Polytechnic University of Milan
RP Gonzalez, SLH (corresponding author), Politecn Milan, Dipartimento Elettron Informaz & Bioingn, I-20133 Milan, Italy.
EM sergioluis.herrera@polimi.it; piero.fraternali@polimi.it
OI FRATERNALI, PIERO/0000-0002-6945-2625
CR Adam K. N. A., 2020, MULTIDISZCIPLIN ARIS, V10, P365
   Aggarwal C. C., 2012, P SIAM INT C DAT MIN, P624
   Apel S., 2011, P 19 ACM SIGSOFT S 1, P190, DOI DOI 10.1145/2025113.2025141
   Apel Sven., 2010, VAMOS, P13
   Bader J, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360585
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Bartoli A, 2021, IEEE T CYBERNETICS, V51, P2612, DOI 10.1109/TCYB.2019.2918337
   Bartoli A, 2016, IEEE T KNOWL DATA EN, V28, P1217, DOI 10.1109/TKDE.2016.2515587
   Brindescu C, 2020, PROC INT CONF SOFTW, P801, DOI 10.1145/3377811.3380344
   Cavalcanti G, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133883
   DAVEY N, 1995, INT J APPL SOFTW TEC
   de Souza Cleidson R. B., 2003, P 2003 INT ACM SIGGR, P105, DOI DOI 10.1145/958160.958177
   Dewan P, 2007, ECSCW 2007: PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK, P159, DOI 10.1007/978-1-84800-031-5_9
   Dias K, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106256
   Dinella E, 2021, Arxiv, DOI arXiv:2105.07569
   Dressler K., 2014, PROC ONTOLOGY MATCHI, P37
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Fraternali P, 2020, LECT NOTES COMPUT SC, V12128, P228, DOI 10.1007/978-3-030-50578-3_16
   Ghiotto G, 2020, IEEE T SOFTWARE ENG, V46, P892, DOI 10.1109/TSE.2018.2871083
   Hamza J, 2019, LECT NOTES COMPUT SC, V11388, P48, DOI 10.1007/978-3-030-11245-5_3
   Nguyen HL, 2018, COMPUT SUPP COOP W J, V27, P741, DOI 10.1007/s10606-018-9323-3
   Nguyen HA, 2013, IEEE INT CONF AUTOM, P180, DOI 10.1109/ASE.2013.6693078
   JARO MA, 1989, J AM STAT ASSOC, V84, P414, DOI 10.2307/2289924
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kasi BK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P732, DOI 10.1109/ICSE.2013.6606619
   Khanna S, 2007, LECT NOTES COMPUT SC, V4855, P485
   Kontogiannis K. A., 1996, Automated Software Engineering, V3, P77, DOI 10.1007/BF00126960
   Koschke R, 2006, WORK CONF REVERSE EN, P253
   Lessenich O, 2015, AUTOMAT SOFTW ENG, V22, P367, DOI 10.1007/s10515-014-0151-5
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Li C, 2008, PROC INT CONF DATA, P257, DOI 10.1109/ICDE.2008.4497434
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Marcus A, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P107, DOI 10.1109/ASE.2001.989796
   Mayrand J, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P244, DOI 10.1109/ICSM.1996.565012
   Meng N, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P392, DOI 10.1109/ICSE.2015.58
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Miller R. C., 2002, P ACM C HUM FACT COM, P496
   NAKATSU N, 1982, ACTA INFORM, V18, P171, DOI 10.1007/BF00264437
   NEEDLEMAN SB, 1970, J MOL BIOL, V48, P443, DOI 10.1016/0022-2836(70)90057-4
   Nelson N, 2019, EMPIR SOFTW ENG, V24, P2863, DOI 10.1007/s10664-018-9674-x
   Pan R, 2021, PROC INT CONF SOFTW, P785, DOI 10.1109/ICSE43902.2021.00077
   Shen B, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360596
   SMITH TF, 1981, J MOL BIOL, V147, P195, DOI 10.1016/0022-2836(81)90087-5
   TICHY WF, 1985, SOFTWARE PRACT EXPER, V15, P637, DOI 10.1002/spe.4380150703
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Winkler William E., 1990, P SURV RES METH SECT
   Zhu FM, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276536
NR 48
TC 0
Z9 0
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2255
EP 2271
DI 10.1109/TSE.2022.3215289
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600047
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhong, ZY
   Kaiser, G
   Ray, B
AF Zhong, Ziyuan
   Kaiser, Gail
   Ray, Baishakhi
TI Neural Network Guided Evolutionary Fuzzing for Finding Traffic
   Violations of Autonomous Vehicles
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Automobiles; Testing; Fuzzing; Vehicle crash testing; Grammar;
   Artificial neural networks; Roads; Search-based software engineering;
   evolutionary algorithms; neural networks; software testing; test
   generation; autonomous vehicles
AB Self-driving cars and trucks, autonomous vehicles (avs), should not be accepted by regulatory bodies and the public until they have much higher confidence in their safety and reliability - which can most practically and convincingly be achieved by testing. But existing testing methods are inadequate for checking the end-to-end behaviors of av controllers against complex, real-world corner cases involving interactions with multiple independent agents such as pedestrians and human-driven vehicles. While test-driving avs on streets and highways fails to capture many rare events, existing simulation-based testing methods mainly focus on simple scenarios and do not scale well for complex driving situations that require sophisticated awareness of the surroundings. To address these limitations, we propose a new fuzz testing technique, called AutoFuzz, which can leverage widely-used av simulators' API grammars to generate semantically and temporally valid complex driving scenarios (sequences of scenes). To efficiently search for traffic violations-inducing scenarios in a large search space, we propose a constrained neural network (NN) evolutionary search method to optimize AutoFuzz. Evaluation of our prototype on one state-of-the-art learning-based controller, two rule-based controllers, and one industrial-grade controller in five scenarios shows that AutoFuzz efficiently finds hundreds of traffic violationsin high-fidelity simulation environments. For each scenario, AutoFuzz can find on average 10-39% more unique traffic violationsthan the best-performing baseline method. Further, fine-tuning the learning-based controller with the traffic violationsfound by AutoFuzz successfully reduced the traffic violationsfound in the new version of the av controller software.
C1 [Zhong, Ziyuan; Kaiser, Gail; Ray, Baishakhi] Columbia Univ, Dept Comp Sci, New York, NY 10025 USA.
C3 Columbia University
RP Zhong, ZY (corresponding author), Columbia Univ, Dept Comp Sci, New York, NY 10025 USA.
EM ziyuan.zhong@columbia.edu; kaiser@cs.columbia.edu; rayb@cs.columbia.edu
OI Zhong, Ziyuan/0000-0001-9661-1233; Kaiser, Gail/0000-0002-8791-1178
FU NSF [CCF-1845893, CCF-2107405, IIS-2221943, CCF-1815494]; DARPA and
   NIWC-Pacific [N66001-21-C-4018]
FX This work was supported in part by NSF under Grants CCF-1845893,
   CCF-2107405, IIS-2221943, and CCF-1815494, in part by DARPA and
   NIWC-Pacific under Grant N66001-21-C-4018, and in part by National
   Instruments
CR Abeysirigoonawardena Y, 2019, IEEE INT CONF ROBOT, P8271, DOI [10.1109/icra.2019.8793740, 10.1109/ICRA.2019.8793740]
   [Anonymous], 1993, PLANNING LIB C COLLE
   Anthony Capon J., 1991, Elementary Statistics for the Social Sciences: Study Guide
   Arcaini P, 2021, IEEE INT CONF SOFTW, P295, DOI 10.1109/ICST49551.2021.00042
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   ASAM, 2021, OP SCEN
   Atlidakis V, 2020, Arxiv, DOI [arXiv:2005.11498, 10.48550/ARXIV.2005.11498, DOI 10.48550/ARXIV.2005.11498]
   Baidu, 2021, Apollo
   Ben Abdessalem R, 2018, IEEE INT CONF AUTOM, P143, DOI 10.1145/3238147.3238192
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Ben Abdessalem R, 2016, IEEE INT CONF AUTOM, P63, DOI 10.1145/2970276.2970311
   Blank J, 2020, IEEE ACCESS, V8, P89497, DOI 10.1109/ACCESS.2020.2990567
   Böhme M, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P678, DOI 10.1145/3368089.3409748
   Böhme M, 2019, IEEE T SOFTWARE ENG, V45, P489, DOI 10.1109/TSE.2017.2785841
   C. team, 2020, SCEN CARL
   Calò A, 2020, IEEE INT CONF SOFTW, P375, DOI 10.1109/ICST46399.2020.00045
   Cao YL, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P2267, DOI 10.1145/3319535.3339815
   Chen BM, 2022, IEEE T INTELL TRANSP, V23, P10333, DOI 10.1109/TITS.2021.3091477
   Chen D., 2020, P C ROB LEARN, P66
   Chen P, 2018, P IEEE S SECUR PRIV, P711, DOI 10.1109/SP.2018.00046
   D. O. M. V. State of California, 2020, AUTONOMOUS VEHICLE T
   Deb K, 1999, ARTIFICIAL NEURAL NETS AND GENETIC ALGORITHMS, P235
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 1995, Complex Systems, V9, P115
   Ding WH, 2020, Arxiv, DOI arXiv:2009.08311
   Ding WH, 2020, IEEE INT C INT ROBOT, P2243, DOI 10.1109/IROS45743.2020.9340696
   Dosovitskiy A., 2017, P 1 ANN C ROBOT LEAR, V78, P1
   Dreossi T., 2019, COMPUT AIDED VERIFIC
   Eberlein M., 2020, SEARCH BASED SOFTWAR, V12420
   Free Software Foundation, 1987, GCC GNU COMP COLL
   Gambi A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P318, DOI 10.1145/3293882.3330566
   Gambi A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3338906.3338942
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Haykin S., 1999, NEURAL NETWORKS COMP, DOI [10.1017/S0269888998214044, DOI 10.1017/S0269888998214044]
   Hutchison C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P276, DOI 10.1145/3183519.3183534
   Jia Y., 2020, PROC INT C LEARN REP
   Joint Photographic Experts Group, 1992, OV JPEG 1
   Kuutti S, 2020, Arxiv, DOI arXiv:2002.12078
   Lavrenz SM, 2020, STRUCT INFRASTRUCT E, V16, P1177, DOI 10.1080/15732479.2019.1693606
   Lemieux C, 2018, IEEE INT CONF AUTOM, P475, DOI 10.1145/3238147.3238176
   Lengyel H, 2020, IEEE ACCESS, V8, P163280, DOI 10.1109/ACCESS.2020.3020653
   LG Electronics, 2021, SVL SIM AUT VEH SIM
   Li GP, 2020, PROC INT SYMP SOFTW, P25, DOI 10.1109/ISSRE5003.2020.00012
   Li JN, 2020, Arxiv, DOI arXiv:2003.05631
   Luo YX, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P279, DOI [10.1109/ASE51524.2021.967883, 10.1109/ASE51524.2021.9678883]
   Menzel T, 2018, IEEE INT VEH SYM, P1821, DOI 10.1109/IVS.2018.8500406
   Miller BP, 2022, IEEE T SOFTWARE ENG, V48, P2028, DOI 10.1109/TSE.2020.3047766
   nhtsa, 2022, NHTSA TEST INITIATIV
   Norden J., 2019, PROC MACH LEARN AUTO
   PEGASUS RESEARCH PROJECT, 2019, SCEN DESCR
   Queiroz R, 2019, IEEE INT VEH SYM, P287, DOI 10.1109/IVS.2019.8814107
   Rong GD, 2020, IEEE INT C INTELL TR, DOI 10.1109/itsc45102.2020.9294422
   She DD, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P737, DOI 10.1145/3368089.3409723
   She DD, 2019, P IEEE S SECUR PRIV, P803, DOI 10.1109/SP.2019.00052
   Shen JJ, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P931
   Son TD, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON MECHATRONICS (ICM), P576, DOI [10.1109/icmech.2019.8722847, 10.1109/ICMECH.2019.8722847]
   Soremekun E, 2022, IEEE T SOFTWARE ENG, V48, P1138, DOI 10.1109/TSE.2020.3013716
   State of California, 2020, DEP MOT VEH
   Sutton M., 2007, Fuzzing: brute force vulnerability discovery
   Tesla deaths, 2022, US
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Tu J., 2021, PROC 5 C ROBOT LEARN, V164, P1013
   Ulbrich S, 2015, IEEE INT C INTELL TR, P982, DOI 10.1109/ITSC.2015.164
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vladu Adrian, 2018, PROC 6 INT C LEARN R
   WassimJohn G., 2007, 810767 DOTHS
   Wong Kelvin, 2020, Computer Vision - ECCV 2020. 16th European Conference. Proceedings. Lecture Notes in Computer Science (LNCS 12371), P312, DOI 10.1007/978-3-030-58574-7_19
   Yue T, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P2307
   Zalewski M., 2017, American fuzzy lop
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhao Y, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1989, DOI 10.1145/3319535.3354259
   Zhong ZY, 2022, Arxiv, DOI [arXiv:2109.06404, 10.48550/ARXIV.2109.06404, DOI 10.48550/ARXIV.2109.06404]
   Zhong Ziyuan, 2022, Zenodo
   Zhou HS, 2018, Arxiv, DOI arXiv:1812.10812
NR 74
TC 11
Z9 11
U1 8
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1860
EP 1875
DI 10.1109/TSE.2022.3195640
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600025
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Seibt, G
   Heck, F
   Cavalcanti, G
   Borba, P
   Apel, S
AF Seibt, Georg
   Heck, Florian
   Cavalcanti, Guilherme
   Borba, Paulo
   Apel, Sven
TI Leveraging Structure in Software Merge: An Empirical Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE JD(IME); version control systems; software merge; structured merge;
   semistructured merge
ID PRECISION
AB Large-scale software development today relies heavily on version control systems facilitating distributed development of software projects. For the purpose of merging diverging versions of the code base, version control systems employ line-based merge algorithms, which are applicable to all text files. Structured merge algorithms have been proposed as an alternative to unstructured, line-based merging, with the goal of reducing the number of merge conflicts that have to be manually resolved by the developer. By leveraging the structure inherent in source code (i.e., by representing source code files in terms of abstract syntax trees instead of sequences of text lines), these algorithms are able to merge revisions in various situations (e.g., reordering of methods) that would cause conflicts when merged using an unstructured approach. However, merging abstract syntax trees is inherently more complex than merging sequences of text lines, which makes structured merge algorithms computationally more expensive than an unstructured merge. To reduce the runtime cost of structured merge algorithms, semistructured merge as well as combinations of different merge strategies were proposed. As such, we observe a range of increasingly structured merge algorithms, which feature different characteristics in terms of conflict resolution and runtime. The progressively increasing use of structure to avoid merge conflicts or to automate conflict resolution raises a number of questions: How is the correctness of the code resulting from a merge affected when employing structured merge algorithms? Which algorithm strikes the best balance between runtime, conflict resolution potential, and correctness of the merge result? For the first time, we evaluate a whole range of merge algorithms (from unstructured over semistructured to structured as well as combinations) by replaying merge commits in a controlled setting. We employ the test suite of the projects in question as an oracle for the correctness of the resulting code, triangulated by a thorough manual analysis. Using 7727 merge commits from 10 open-source projects, we find that combined strategies appear to be the best of both worlds: They resolve as many conflicts as structured merge at a significantly lower runtime per merge commit. Notably, structured merge strategies do cause more test failures, however, the increase is small.
C1 [Seibt, Georg; Heck, Florian] Univ Passau, D-94032 Passau, Germany.
   [Cavalcanti, Guilherme] Fed Inst Alagoas, BR-57200000 Penedo, Brazil.
   [Borba, Paulo] Univ Fed Pernambuco, BR-50670901 Recife, Brazil.
   [Apel, Sven] Saarland Univ, D-66123 Saarbrucken, Germany.
C3 University of Passau; Instituto Federal de Alagoas (IFAL); Universidade
   Federal de Pernambuco; Saarland University
RP Seibt, G (corresponding author), Univ Passau, D-94032 Passau, Germany.
EM Georg.Seibt@uni-passau.de; florian.heck@hotmail.de;
   guilherme.cavalcanti@ifal.edu.br; phmb@cin.ufpe.br;
   apel@cs.uni-saarland.de
OI Borba, Paulo/0000-0002-0381-2843; Apel, Sven/0000-0003-3687-2233; Seibt,
   Georg/0000-0003-1349-9851
FU INES (National Software Engineering Institute); Brazilian research
   funding agency CNPQ [309172/2017-9, 408516/2018-6]; Brazilian research
   funding agency FACEPE [APQ/0388-1.03/14]; Brazilian research funding
   agency CAPES
FX This work was supported in part by INES (National Software Engineering
   Institute), in part by Brazilian research funding agencies CNPQ under
   Grants 309172/2017-9 and 408516/2018-6, in part by FACEPE under Grant
   APQ/0388-1.03/14, and in part by CAPES.
CR Accioly P, 2018, IEEE WORK CONF MIN S, P576, DOI 10.1145/3196398.3196437
   Accioly P, 2018, EMPIR SOFTW ENG, V23, P2051, DOI 10.1007/s10664-017-9586-1
   Apel S., 2011, P 19 ACM SIGSOFT S 1, P190, DOI DOI 10.1145/2025113.2025141
   Apel S, 2012, IEEE INT CONF AUTOM, P120, DOI 10.1145/2351676.2351694
   Armstrong RA, 2014, OPHTHAL PHYSL OPT, V34, P502, DOI 10.1111/opo.12131
   Bergroth L, 2000, SPIRE 2000: SEVENTH INTERNATIONAL SYMPOSIUM ON STRING PROCESSING AND INFORMATION RETRIEVAL - PROCEEDINGS, P39, DOI 10.1109/SPIRE.2000.878178
   BERZINS V, 1994, ACM T PROGR LANG SYS, V16, P1875, DOI 10.1145/197320.197403
   Binkley D., 1995, ACM Transactions on Software Engineering and Methodology, V4, P3, DOI 10.1145/201055.201056
   Böcker S, 2000, J ALGORITHMS, V37, P522, DOI 10.1006/jagm.2000.1116
   Brun Y., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), P168, DOI [10.1145/2025113.2025139, DOI 10.1145/2025113.2025139]
   Buffenbarger J., 1995, Software Configuration Management. ICSE SCM-4 and SCM-5 Workshops. Selected Papers, P153
   Cataldo M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P161, DOI 10.1145/1985793.1985816
   Cavalcanti G, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1002, DOI 10.1109/ASE.2019.00097
   Cavalcanti G, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133883
   Cavalcanti G, 2015, INT SYMP EMP SOFTWAR, P267, DOI 10.1109/ESEM.2015.7321191
   Estler HC, 2014, INT CONF GLOBAL SOFT, P26, DOI 10.1109/ICGSE.2014.17
   Ghiotto G, 2020, IEEE T SOFTWARE ENG, V46, P892, DOI 10.1109/TSE.2018.2871083
   Goulet-Pelletier JC, 2018, QUANT METH PSYCHOL, V14, P242, DOI 10.20982/tqmp.14.4.p242
   HALL P, 1985, ANN I STAT MATH, V37, P27, DOI 10.1007/BF02481078
   HORWITZ S, 1989, ACM T PROGR LANG SYS, V11, P345, DOI 10.1145/65979.65980
   Kasi BK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P732, DOI 10.1109/ICSE.2013.6606619
   Khanna S, 2007, LECT NOTES COMPUT SC, V4855, P485
   Kuhn HW, 2005, NAV RES LOG, V52, P7, DOI 10.1002/nav.20053
   Lessenich O, 2017, IEEE INT CONF AUTOM, P543, DOI 10.1109/ASE.2017.8115665
   Lessenich O, 2015, AUTOMAT SOFTW ENG, V22, P367, DOI 10.1007/s10515-014-0151-5
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Perry DE, 2001, ACM T SOFTW ENG METH, V10, P308, DOI 10.1145/383876.383878
   Sousa M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276535
   Tavares AT, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1014, DOI 10.1109/ASE.2019.00098
   Westfechtel B., 1991, Proceedings of the 3rd International Workshop on Software Configuration Management, P68, DOI 10.1145/111062.111071
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wuu Yang, 1990, SIGSOFT Software Engineering Notes, V15, P133, DOI 10.1145/99278.99290
   Yuzuki R, 2015, 2015 IEEE 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN), P21, DOI 10.1109/SWAN.2015.7070484
   ZHANG KZ, 1994, INFORM PROCESS LETT, V49, P249, DOI 10.1016/0020-0190(94)90062-0
   Zhu FM, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P286, DOI 10.1109/ICSE-Companion.2019.00117
   Zimmermann T., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, Washington, DC, USA, P11, DOI DOI 10.1109/MSR.2007.22
NR 36
TC 3
Z9 3
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4590
EP 4610
DI 10.1109/TSE.2021.3123143
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800020
DA 2024-07-18
ER

PT J
AU Xu, BW
   Hoang, T
   Sharma, A
   Yang, CR
   Xia, X
   Lo, D
AF Xu, Bowen
   Thong Hoang
   Sharma, Abhishek
   Yang, Chengran
   Xia, Xin
   Lo, David
TI Post2Vec: Learning Distributed Representations of Stack Overflow Posts
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Task analysis; Feature extraction; Semantics; Computer architecture;
   Encoding; Deep learning; Computational modeling
ID TAG RECOMMENDATION SYSTEM; NEURAL-NETWORKS; INFORMATION; BACKPROPAGATION
AB Past studies have proposed solutions that analyze Stack Overflow content to help users find desired information or aid various downstream software engineering tasks. A common step performed by those solutions is to extract suitable representations of posts; typically, in the form of meaningful vectors. These vectors are then used for different tasks, for example, tag recommendation, relatedness prediction, post classification, and API recommendation. Intuitively, the quality of the vector representations of posts determines the effectiveness of the solutions in performing the respective tasks. In this work, to aid existing studies that analyze Stack Overflow posts, we propose a specialized deep learning architecture Post2Vec which extracts distributed representations of Stack Overflow posts. Post2Vec is aware of different types of content present in Stack Overflow posts, i.e., title, description, and code snippets, and integrates them seamlessly to learn post representations. Tags provided by Stack Overflow users that serve as a common vocabulary that captures the semantics of posts are used to guide Post2Vec in its task. To evaluate the quality of Post2Vec's deep learning architecture, we first investigate its end-to-end effectiveness in tag recommendation task. The results are compared to those of state-of-the-art tag recommendation approaches that also employ deep neural networks. We observe that Post2Vec achieves 15-25 percent improvement in terms of F1-score@5 at a lower computational cost. Moreover, to evaluate the value of representations learned by Post2Vec, we use them for three other tasks, i.e., relatedness prediction, post classification, and API recommendation. We demonstrate that the representations can be used to boost the effectiveness of state-of-the-art solutions for the three tasks by substantial margins (by 10, 7, and 10 percent in terms of F1-score, F1-score, and correctness, respectively). We release our replication package at https://github.com/maxxbw/Post2Vec.
C1 [Xu, Bowen; Thong Hoang; Sharma, Abhishek; Yang, Chengran; Lo, David] Singapore Management Univ, Sch Comp & Informat Syst, Singapore 188065, Singapore.
   [Xia, Xin] Huawei, Software Engn Applicat Technol Lab, Shenzhen 518129, Guangdong, Peoples R China.
C3 Singapore Management University; Huawei Technologies
RP Xu, BW (corresponding author), Singapore Management Univ, Sch Comp & Informat Syst, Singapore 188065, Singapore.
EM bowenxu.2017@smu.edu.sg; vdthoang.2016@smu.edu.sg;
   abhisheksh.2014@smu.edu.sg; cryang@smu.edu.sg; xin.xia@acm.org;
   davidlo@smu.edu.sg
RI Xu, Bowen/JRR-9142-2023; Hoang, Thong/AFQ-0983-2022; BOWEN,
   XU/AGF-1611-2022; Lo, David/A-2493-2012
OI Hoang, Thong/0000-0002-7421-4672; Xu, Bowen/0000-0002-1006-8493; Lo,
   David/0000-0002-4367-7201; Yang, Chengran/0000-0001-6100-8127
FU Ministry of Education, Singapore [MOE2019-T2-1-193]
FX This work was supported by the Ministry of Education, Singapore, under
   its Academic Research Fund Tier 2 Award No. MOE2019-T2-1-193. Any
   opinions, findings, and conclusions, or recommendations expressed in
   this material are those of the author(s) and do not reflect the views of
   the Ministry of Education, Singapore.
CR Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   [Anonymous], 1994, ELEMENTARY LINEAR AL
   Anthimopoulos M, 2016, IEEE T MED IMAGING, V35, P1207, DOI 10.1109/TMI.2016.2535865
   Arora S, 2018, PR MACH LEARN RES, V80
   Beyer S, 2018, INT C PROGRAM COMPRE, P211, DOI 10.1145/3196321.3196333
   Boureau Y. L., 2010, P 27 INT C MACH LEAR, P111
   Caruana R, 2001, ADV NEUR IN, V13, P402
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P1385, DOI 10.1109/TSE.2020.3020502
   Chen GB, 2016, IEEE INT CONF AUTOM, P744, DOI 10.1145/2970276.2970317
   Chen JS, 2020, PROC INT CONF SOFTW, P322, DOI 10.1145/3377811.3380327
   DeFreez D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P423, DOI 10.1145/3236024.3236059
   Diamantopoulos T, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P454, DOI 10.1109/MSR.2015.62
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Gao ZP, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3401026
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Guerrouj L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P639, DOI 10.1109/ICSE.2015.212
   Ha H, 2019, PROC INT CONF SOFTW, P1095, DOI 10.1109/ICSE.2019.00113
   HAGAN MT, 1994, IEEE T NEURAL NETWOR, V5, P989, DOI 10.1109/72.329697
   Han J, 1995, LECT NOTES COMPUT SC, V930, P195
   Hellendoorn VJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P724, DOI 10.1145/3236024.3264832
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Huo X, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1909
   Jiarpakdee J, 2022, IEEE T SOFTWARE ENG, V48, P166, DOI 10.1109/TSE.2020.2982385
   Kadilar C, 2003, BIOMETRICAL J, V45, P218, DOI 10.1002/bimj.200390007
   Kim Y, 2014, ARXIV PREPRINT ARXIV, DOI 10.3115/v1/D14-1181
   Kingma D. P., 2014, arXiv
   Kochhar P. S., 2014, MSR, P296
   Lai SW, 2015, AAAI CONF ARTIF INTE, P2267
   Li M, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P661, DOI 10.1145/2623330.2623612
   Liu J, 2018, AUTOMAT SOFTW ENG, V25, P675, DOI 10.1007/s10515-018-0239-4
   Liu P., 2016, P 25 INT JOINT C ART, P2873, DOI DOI 10.5555/3060832.3061023
   Majumder S, 2018, IEEE WORK CONF MIN S, P554, DOI 10.1145/3196398.3196424
   Meng YX, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P3242
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Narayanan A, 2018, IEEE DATA MINING, P357, DOI 10.1109/ICDM.2018.00051
   Ponzanelli L, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P401, DOI 10.1109/MSR.2015.49
   Ponzanelli L, 2014, PROC IEEE INT CONF S, P541, DOI 10.1109/ICSME.2014.90
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Rahman MM, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P349, DOI 10.1109/SANER.2016.80
   Rajbahadur GK, 2021, IEEE T SOFTWARE ENG, V47, P1414, DOI 10.1109/TSE.2019.2924371
   Rehurek R., 2010, P LREC 2010 WORKSH N, P45, DOI DOI 10.13140/2.1.2393.1847
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Subramanian S, 2013, IEEE WORK CONF MIN S, P85, DOI 10.1109/MSR.2013.6624012
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Treude Christoph, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P84, DOI 10.1109/MSR.2019.00022
   Treude C, 2017, PROC IEEE INT CONF S, P509, DOI 10.1109/ICSME.2017.24
   Tufano M, 2018, IEEE WORK CONF MIN S, P542, DOI 10.1145/3196398.3196431
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Wang LT, 2019, ASIA PAC SOFWR ENG, P506, DOI 10.1109/APSEC48747.2019.00074
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P800, DOI 10.1007/s10664-017-9533-1
   Wang SW, 2014, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSME.2014.51
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wong E, 2013, IEEE INT CONF AUTOM, P562, DOI 10.1109/ASE.2013.6693113
   Xia X, 2013, IEEE WORK CONF MIN S, P287, DOI 10.1109/MSR.2013.6624040
   Xu BW, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI [10.1145/3239235.3240503, 10.1109/PESGM.2018.8586232]
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Xu BW, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P413, DOI [10.1109/MSR.2016.049, 10.1145/2901739.2901746]
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Yang D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P391, DOI [10.1109/MSR.2016.047, 10.1145/2901739.2901767]
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Yang Z., 2016, P 2016 C N AM CHAPT, P1480, DOI [DOI 10.18653/V1/N16-1174, 10.18653/v1/n16-1174]
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Yin WP, 2017, Arxiv, DOI [arXiv:1702.01923, DOI 10.48550/ARXIV.1702.01923]
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zhou PY, 2019, INFORM SOFTWARE TECH, V109, P1, DOI 10.1016/j.infsof.2019.01.002
   Zhou PY, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P272, DOI 10.1109/SANER.2017.7884628
   Zou YZ, 2015, IEEE INT CONF AUTOM, P1, DOI 10.1109/ASE.2015.24
NR 74
TC 12
Z9 12
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3423
EP 3441
DI 10.1109/TSE.2021.3093761
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500013
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Fahmideh, M
   Ahmad, A
   Behnaz, A
   Grundy, J
   Susilo, W
AF Fahmideh, Mahdi
   Ahmad, Aakash
   Behnaz, Ali
   Grundy, John
   Susilo, Willy
TI Software Engineering for Internet of Things: The Practitioners'
   Perspective
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; Task analysis; Software; Internet of Things;
   Systematics; Information technology; Hardware; Software engineering;
   software management; software development process; empirical software
   engineering; Internet of Things (IoT)
ID OF-THE-ART; LITERATURE-REVIEWS; CHALLENGES; SYSTEMS
AB Internet of Things based systems (IoT systems for short) are becoming increasingly popular across different industrial domains and their development is rapidly increasing to provide value-added services to end-users and citizens. Little research to date uncovers the core development process lifecycle needed for IoT systems, and thus software engineers find themselves unprepared and unfamiliar with this new genre of system development. To ameliorate this gap, we conducted a mixed quantitative and qualitative research study where we derived a conceptual process framework from the extant literature on IoT, through which 27 key tasks for incorporation into the development processes of IoT systems were identified. The framework was then validated by the means of a survey of 127 IoT practitioners from 35 countries across 6 continents with 15 different industry backgrounds. Our research provides an understanding of the most important development process tasks and informs both software engineering practitioners and researchers of the challenges and recommendations related to the development of next-generation of IoT systems.
C1 [Fahmideh, Mahdi; Susilo, Willy] Univ Wollongong, Sch Comp & Informat Technol, Wollongong, NSW 2522, Australia.
   [Fahmideh, Mahdi] Univ Southern Queensland, Fac Business Educ Law & Arts BELA, Sch Business, Cyber Secur, Springfield Cent, Qld 4300, Australia.
   [Susilo, Willy] Univ Southern Queensland, Springfield Cent, Qld 4300, Australia.
   [Ahmad, Aakash] Univ Hail, Coll Comp Sci & Engn, Dept Informat & Comp Sci, Hail 81451, Saudi Arabia.
   [Behnaz, Ali] Citibank NA, Sydney, NSW 2000, Australia.
   [Grundy, John] Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
C3 University of Wollongong; University of Southern Queensland; University
   of Southern Queensland; University Ha'il; Monash University
RP Fahmideh, M (corresponding author), Univ Wollongong, Sch Comp & Informat Technol, Wollongong, NSW 2522, Australia.
EM mahdi.fahmideh@usq.edu.au; a.abbasi@uoh.edu.sa; ali.behnaz@gmail.com;
   john.grundy@monash.edu; wsusilo@uow.edu.au
RI Susilo, Willy/A-3724-2008; Fahmideh/AAH-7234-2021; Grundy,
   John/I-6681-2012
OI Fahmideh/0000-0001-7196-7217; Grundy, John/0000-0003-4928-7076; Susilo,
   Willy/0000-0002-1562-5105
FU ARC Laureate Fellowship [FL190100035]
FX The authors would like to thank the generous feedback and helpful
   suggestions, especially from associate editor and reviewers. The authors
   would also like to thank Dr. Christopher Magee, the associate professor
   from the Faculty of Social Sciences, School of Psychology, University of
   Wollongong, for his constructive comments and suggestions for improving
   our data analysis. The work of Professor John Grundy was supported by
   the ARC Laureate Fellowship under Grant FL190100035.
CR Al-Fuqaha A, 2015, IEEE COMMUN SURV TUT, V17, P2347, DOI 10.1109/COMST.2015.2444095
   [Anonymous], 2020, ONLINE WEB BASED SUR
   [Anonymous], 2020, SOFTWARE ENG INTERNE
   [Anonymous], 2014, 3014120160910E ISO I
   Atzori L, 2010, COMPUT NETW, V54, P2787, DOI 10.1016/j.comnet.2010.05.010
   Avison D., 2006, Information Systems Development-Methodologies, Techniques & Tools
   Beydoun G, 2009, IEEE T SOFTWARE ENG, V35, P841, DOI 10.1109/TSE.2009.34
   Blackstock M, 2012, PROCEEDINGS OF 2012 INTERNATIONAL CONFERENCE ON THE INTERNET OF THINGS, P159, DOI 10.1109/IOT.2012.6402318
   Boell SK, 2014, COMMUN ASSOC INF SYS, V34, P257
   Bosu A, 2019, EMPIR SOFTW ENG, V24, P2636, DOI 10.1007/s10664-019-09708-7
   Buchner E. E. A., 2007, G POWER STAT POWER A
   Ciccozzi F, 2017, IEEE SOFTWARE, V34, P46, DOI 10.1109/MS.2017.1
   Cohen J., 1992, Current Directions in Psychological Science, V1, P98, DOI [DOI 10.1111/1467-8721.EP10768783, 10.1111/1467-8721.ep10768783]
   Collins T., METHODOLOGY BUILDING
   Fahmideh M, 2020, INFORM SYST, V87, DOI 10.1016/j.is.2019.06.005
   Fahmideh M, 2019, EUR J INFORM SYST, V28, P233, DOI 10.1080/0960085X.2018.1524417
   Fleurey F, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P185, DOI 10.1109/ICSAW.2017.63
   Fortino G, 2015, IEEE SYS MAN CYBERN, P1297, DOI 10.1109/SMC.2015.231
   Frank P., 2017, IOT SOLUTION METHODO
   Furrer F. J., 2019, Future-Proof Software-Systems: A Sustainable Evolution Strategy, P45, DOI DOI 10.1007/978-3-658-19938-8
   Gama K, 2012, COMPUT COMMUN, V35, P405, DOI 10.1016/j.comcom.2011.11.003
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Gartner, INT THINGS
   Gholami MF, 2017, INFORM SYST, V67, P100, DOI 10.1016/j.is.2017.03.008
   Goetz J. P., 1984, Ethnography and qualitative design in educational research
   García CG, 2014, COMPUT NETW, V64, P143, DOI [10.1016/j.comnet2014.02.010, 10.1016/j.comnet.2014.02.010]
   HARMSEN F, 1994, IFIP TRANS A, V55, P169
   Henderson-Sellers B, 2010, LECT NOTES COMPUT SC, V6412, P219, DOI 10.1007/978-3-642-16373-9_16
   Henderson-Sellers B, 2010, J UNIVERS COMPUT SCI, V16, P424
   Karlsson F, 2012, INFORM SOFTWARE TECH, V54, P501, DOI 10.1016/j.infsof.2011.12.009
   Kim M, 2018, IEEE T SOFTWARE ENG, V44, P1024, DOI 10.1109/TSE.2017.2754374
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Larrucea X, 2017, IEEE SOFTWARE, V34, P24, DOI 10.1109/MS.2017.28
   Lea R, 2014, INT CONF CLOUD COMP, P799, DOI 10.1109/CloudCom.2014.65
   Leiner BM, 2009, ACM SIGCOMM COMP COM, V39, P22, DOI 10.1145/1629607.1629613
   Li SC, 2015, INFORM SYST FRONT, V17, P243, DOI 10.1007/s10796-014-9492-7
   Maureira M. A. G., 2011, THINGSPEAK API WEB S, P1
   Miles M. B., 1994, QUALITATIVE DATA ANA, DOI DOI 10.1080/0950069042000276686
   Moher D, 2009, ANN INTERN MED, V151, P264, DOI [10.7326/0003-4819-151-4-200908180-00135, 10.1136/bmj.b2700, 10.1371/journal.pmed.1000097, 10.1186/2046-4053-4-1, 10.1136/bmj.i4086, 10.1136/bmj.b2535, 10.1016/j.ijsu.2010.02.007, 10.1016/j.ijsu.2010.07.299]
   OGAWA RT, 1991, REV EDUC RES, V61, P265, DOI 10.3102/00346543061003265
   Osterweil LJ, 1997, PROC INT CONF SOFTW, P540, DOI 10.1145/253228.253440
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Pawar N, 2018, 2018 IEEE 6TH INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD (FICLOUD 2018), P216, DOI 10.1109/FiCloud.2018.00039
   Pinsonneault A., 1993, Journal of Management Information Systems, V10, P75
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   ROSENBLATT M, 1956, P NATL ACAD SCI USA, V42, P43, DOI 10.1073/pnas.42.1.43
   Savaglio C., 2017, P IEEE INT C CLOUD E, P317
   Savaglio C, 2018, INT CONF CLOUD ENG, P317, DOI 10.1109/IC2E.2018.00062
   Savaglio C, 2016, 2016 IEEE 3RD WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P58, DOI 10.1109/WF-IoT.2016.7845459
   Serna M. Angeles, 2015, 2015 IEEE Tenth International Conference on Intelligent Sensors, Sensor Networks and Information Processing (ISSNIP), P1, DOI 10.1109/ISSNIP.2015.7106946
   Snow J., 2013, QUALTRICS SURVEY SOF
   Taivalsaari A, 2018, 2018 THIRD INTERNATIONAL CONFERENCE ON FOG AND MOBILE EDGE COMPUTING (FMEC), P13, DOI 10.1109/FMEC.2018.8364039
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   Venkatesh V, 2016, J ASSOC INF SYST, V17, P435, DOI 10.17705/1jais.00433
   Weyrich M, 2016, IEEE SOFTWARE, V33, P112, DOI 10.1109/MS.2016.20
   Wohlin C, 2003, LECT NOTES COMPUT SC, V2765, P7
   Wohlin C., 2014, INT C EVALUATION ASS, P1
   Zambonelli F., 2016, WOA, P1
   Zambonelli F, 2016, Arxiv, DOI arXiv:1601.05569
NR 59
TC 4
Z9 4
U1 2
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 2857
EP 2878
DI 10.1109/TSE.2021.3070692
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rajapaksha, D
   Tantithamthavorn, C
   Jiarpakdee, J
   Bergmeir, C
   Grundy, J
   Buntine, W
AF Rajapaksha, Dilini
   Tantithamthavorn, Chakkrit
   Jiarpakdee, Jirayus
   Bergmeir, Christoph
   Grundy, John
   Buntine, Wray
TI SQAPlanner: Generating Data-Informed Software Quality Improvement Plans
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Planning; Software; Predictive models; Visualization; Tools; Artificial
   intelligence; Software quality; Software quality assurance; SQA
   planning; actionable software analytics; explainable AI
AB Software Quality Assurance (SQA) planning aims to define proactive plans, such as defining maximum file size, to prevent the occurrence of software defects in future releases. To aid this, defect prediction models have been proposed to generate insights as the most important factors that are associated with software quality. Such insights that are derived from traditional defect models are far from actionable-i.e., practitioners still do not know what they should do or avoid to decrease the risk of having defects, and what is the risk threshold for each metric. A lack of actionable guidance and risk threshold can lead to inefficient and ineffective SQA planning processes. In this paper, we investigate the practitioners' perceptions of current SQA planning activities, current challenges of such SQA planning activities, and propose four types of guidance to support SQA planning. We then propose and evaluate our AI-Driven SQAPlanner approach, a novel approach for generating four types of guidance and their associated risk thresholds in the form of rule-based explanations for the predictions of defect prediction models. Finally, we develop and evaluate a visualization for our SQAPlanner approach. Through the use of qualitative survey and empirical evaluation, our results lead us to conclude that SQAPlanner is needed, effective, stable, and practically applicable. We also find that 80 percent of our survey respondents perceived that our visualization is more actionable. Thus, our SQAPlanner paves a way for novel research in actionable software analytics-i.e., generating actionable guidance on what should practitioners do and not do to decrease the risk of having defects to support SQA planning.
C1 [Rajapaksha, Dilini; Tantithamthavorn, Chakkrit; Jiarpakdee, Jirayus; Bergmeir, Christoph; Grundy, John; Buntine, Wray] Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
C3 Monash University
RP Tantithamthavorn, C (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
EM dilini.rajapakshahewaranasinghage@monash.edu; chakkrit@monash.edu;
   jirayus.jiarpakdee@monash.edu; christoph.bergmeir@monash.edu;
   john.grundy@monash.edu; wray.buntine@monash.edu
RI Bergmeir, Christoph/Q-9911-2019; Grundy, John/I-6681-2012
OI Bergmeir, Christoph/0000-0002-3665-9021; Grundy,
   John/0000-0003-4928-7076; Buntine, Wray/0000-0001-9292-1015;
   Tantithamthavorn, Chakkrit/0000-0002-5516-9984
FU Australian Research Council's Discovery Early Career Researcher Award
   (ARC DECRA) [DE200100941, DE190100045]; Australian Research Council's
   Laureate Fellowship funding scheme [FL190100035]; Australian Research
   Council [DE190100045] Funding Source: Australian Research Council
FX Chakkrit Tantithamthavorn was partially supported by the Australian
   Research Council's Discovery Early Career Researcher Award (ARC DECRA)
   funding scheme (DE200100941). Christoph Bergmeir was partially supported
   by the Australian Research Council's Discovery Early Career Researcher
   Award (ARC DECRA) funding scheme (DE190100045). John Grundy was
   partially supported by the Australian Research Council's Laureate
   Fellowship funding scheme (FL190100035).
CR [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   Asthana S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P937, DOI 10.1145/3338906.3340449
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Boehm B., 2005, Found Empirical Softw. Eng., Legacy Victor R Baxili, V426, P426
   Borg M., 2019, EXPLAINABLE SOFTWARE
   Breiman L., 2018, RANDOMFOREST BREIMAN
   Chen D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P456, DOI 10.1145/3236024.3236050
   Chong C. Y., PROC INT C SOFTW ENG, P2021
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Edwards P, 2002, BRIT MED J, V324, P1183, DOI 10.1136/bmj.324.7347.1183
   Farooqui S., 2017, PROC 29 INT BUSINESS
   Galin D., 2018, SOFTWARE QUALITY CON, DOI [10.1002/9781119134527.ch2, DOI 10.1002/9781119134527.CH2]
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gosiewska A, 2020, Arxiv, DOI arXiv:1903.11420
   Guidotti R, 2018, Arxiv, DOI arXiv:1805.10820
   Guidotti R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3236009
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Hellendoorn VJ, 2019, PROC INT CONF SOFTW, P960, DOI 10.1109/ICSE.2019.00101
   Hellendoorn VJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P152, DOI 10.1145/3236024.3236051
   Jiarpakdee J, 2021, IEEE WORK CONF MIN S, P432, DOI 10.1109/MSR52588.2021.00055
   Jiarpakdee J, 2022, IEEE T SOFTWARE ENG, V48, P166, DOI 10.1109/TSE.2020.2982385
   Jiarpakdee J, 2021, IEEE T SOFTWARE ENG, V47, P320, DOI 10.1109/TSE.2019.2891758
   Jiarpakdee J, 2018, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSME.2018.00018
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Kocsis L, 2006, LECT NOTES COMPUT SC, V4212, P282, DOI 10.1007/11871842_29
   Krosnick JA, 1999, ANNU REV PSYCHOL, V50, P537, DOI 10.1146/annurev.psych.50.1.537
   Kumaresh S., 2010, International Journal of Computers and Applications, V8, P42, DOI DOI 10.5120/1218-1759
   Litwin M.S., 1995, MEASURE SURVEY RELIA
   Maxim BR, 2016, SOFTWARE QUALITY ASSURANCE: IN LARGE SCALE AND COMPLEX SOFTWARE-INTENSIVE SYSTEMS, P19, DOI 10.1016/B978-0-12-802301-3.00002-8
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Pornprasit C, 2021, IEEE WORK CONF MIN S, P369, DOI 10.1109/MSR52588.2021.00049
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Rajapaksha D, 2020, INFORM SCIENCES, V540, P221, DOI 10.1016/j.ins.2020.05.126
   Rajbahadur GK, 2017, IEEE WORK CONF MIN S, P135, DOI 10.1109/MSR.2017.4
   Ribeiro MT, 2018, AAAI CONF ARTIF INTE, P1527
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Rodríguez D, 2012, INFORM SCIENCES, V191, P14, DOI 10.1016/j.ins.2011.01.039
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Staniak M, 2018, R J, V10, P395
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Tantithamthavorn C, 2020, Arxiv, DOI arXiv:2012.01614
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Ribeiro MT, 2016, Arxiv, DOI [arXiv:1606.05386, 10.48550/arXiv.1606.05386]
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Wattanakriengkrai S, 2020, Arxiv, DOI arXiv:2009.03612
   Webb GI, 1995, J ARTIF INTELL RES, V3, P431, DOI 10.1613/jair.227
   Webb GI, 2005, DATA MIN KNOWL DISC, V10, P39, DOI 10.1007/s10618-005-0255-4
   Yang Y, 2018, IEEE SOFTWARE, V35, P51, DOI 10.1109/MS.2017.4541039
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Zimmermann T., 2009, S FDN SOFTW ENG, P91
NR 59
TC 20
Z9 21
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 2814
EP 2835
DI 10.1109/TSE.2021.3070559
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chen, JF
   Shang, WY
   Shihab, E
AF Chen, Jinfu
   Shang, Weiyi
   Shihab, Emad
TI PerfJIT: Test-Level Just-in-Time Prediction for Performance Regression
   Introducing Commits
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Measurement; Predictive models; Software; Task analysis; Benchmark
   testing; Logistics; Performance regression; software performance;
   software quality; mining software repositories; empirical software
   engineering
ID DEFECT PREDICTION; SOFTWARE; FAULTS
AB Performance issues may compromise user experiences, increase the cost resources, and cause field failures. One of the most prevalent performance issues is performance regression. Due to the importance and challenges in performance regression detection, prior research proposes various automated approaches that detect performance regressions. However, the performance regression detection is conducted after the system is built and deployed. Hence, large amounts of resources are still required to locate and fix performance regressions. In our paper, we propose an approach that automatically predicts whether a test would manifest performance regressions given a code commit. In particular, we extract both traditional metrics and performance-related metrics from the code changes that are associated with each test. For each commit, we build random forest classifiers that are trained from all prior commits to predict in this commit whether each test would manifest performance regression. We conduct case studies on three open-source systems (Hadoop, Cassandra, and OpenJPA). Our results show that our approach can predict tests that manifest performance regressions in a commit with high AUC values (on average 0.86). Our approach can drastically reduce the testing time needed to detect performance regressions. In addition, we find that our approach could be used to detect the introduction of six out of nine real-life performance issues from the subject systems during our studied period. Finally, we find that traditional metrics that are associated with size and code change histories are the most important factors in our models. Our approach and the study results can be leveraged by practitioners to effectively cope with performance regressions in a timely and proactive manner.
C1 [Chen, Jinfu; Shang, Weiyi; Shihab, Emad] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
C3 Concordia University - Canada
RP Chen, JF (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
EM fu_chen@encs.concordia.ca; shang@encs.concordia.ca;
   eshihab@encs.concordia.ca
CR analyticsvidhya, COMPLETE GUIDE PARAM
   Anderson J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P49, DOI 10.1109/ICSE.2015.134
   [Anonymous], 2009, Hadoop: The definitive guide
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Becker L. A., 2000, EFFECT SIZE ES, V12, P155
   Behnel S., 2005, lxml: Xml and html with python
   Benesty J, 2009, SPRINGER TOP SIGN PR, V2, P1, DOI 10.1007/978-3-642-00296-0
   Breiman L., 2001, Mach. Learn., V45, P5
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen JF, 2017, PROC IEEE INT CONF S, P341, DOI 10.1109/ICSME.2017.13
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Chen TH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P666, DOI 10.1145/2950290.2950303
   Chen TH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1001, DOI 10.1145/2568225.2568259
   Costa D., 2017, P 8 ACM SPEC INT C P, P389, DOI [10.1145/3030207.3030221, DOI 10.1145/3030207.3030221]
   de Oliveira AB, 2017, IEEE INT CONF SOFTW, P103, DOI 10.1109/ICST.2017.17
   Di Nardo D, 2015, SOFTW TEST VERIF REL, V25, P371, DOI 10.1002/stvr.1572
   Ding Z., 2020, USE READILY AVAILABL
   Flora Parminder, 2014, P 11 WORK C MIN SOFT, P232, DOI [DOI 10.1145/2597073.2597092EVENT-PLACE, 10.1145/2597073.2597092event-place:Hyderabad,India, DOI 10.1145/2597073.2597092EVENT-PLACE:HYDERABAD,INDIA]
   github, 2017, PSUTIL
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Han X, 2018, IEEE INT CONF AUTOM, P17, DOI 10.1145/3238147.3238204
   Harrell F.E., 2001, Regression modeling strategies: with applications to linear models, logistic regression, and survival analysis
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   Hearst MA, 1998, IEEE INTELL SYST APP, V13, P18, DOI 10.1109/5254.708428
   Heger Christoph, 2013, P 4 ACM SPEC INT C P, P27, DOI DOI 10.1145/2479871.2479879
   Huang P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P60, DOI 10.1145/2568225.2568232
   Jiarpakdee J, 2021, IEEE T SOFTWARE ENG, V47, P320, DOI 10.1109/TSE.2019.2891758
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Kabinna S, 2018, EMPIR SOFTW ENG, V23, P290, DOI 10.1007/s10664-017-9518-0
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P33, DOI 10.1109/SANER.2016.56
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kazmi R, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3057269
   Kim JM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P119, DOI 10.1109/ICSE.2002.1007961
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Laaber C, 2019, EMPIR SOFTW ENG, V24, P2469, DOI 10.1007/s10664-019-09681-1
   Laaber C, 2018, IEEE WORK CONF MIN S, P119, DOI 10.1145/3196398.3196407
   Laali M, 2016, LECT NOTES COMPUT SC, V9695, P78, DOI 10.1007/978-3-319-39083-3_6
   Leitner P., 2017, P 8 ACMSPEC INT C PE, P373
   Leitner P, 2016, ACM T INTERNET TECHN, V16, DOI 10.1145/2885497
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   Lobo JM, 2008, GLOBAL ECOL BIOGEOGR, V17, P145, DOI 10.1111/j.1466-8238.2007.00358.x
   Luo Q, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P25, DOI [10.1109/MSR.2016.013, 10.1145/2901739.2901765]
   Matsumoto S, 2010, P 6 INT C PREDICTIVE, P1, DOI DOI 10.1145/1868328.1868356
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Mostafa S, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P23, DOI 10.1145/3092703.3092725
   mozilla, PERFORMANCE REGRESSI
   Nachar N, 2008, TUTOR QUANT METHODS, V4, P13, DOI 10.20982/tqmp.04.1.p013
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Najafi A, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P213, DOI 10.1109/ICSE-SEIP.2019.00031
   Nguyen ThanhHD., 2012, P 3 ACMSPEC INT C PE, P299
   Noor T.B., 2017, P 13 INT C PREDICTIV, P2
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pradel Michael, 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P13, DOI DOI 10.1145/2610384.2610393
   Saha RK, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P268, DOI 10.1109/ICSE.2015.47
   Schein A. I., 2002, Proceedings of SIGIR 2002. Twenty-Fifth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P253, DOI 10.1145/564376.564421
   Shang Weiyi., 2015, P 6 ACMSPEC INT C PE, P15
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Song LH, 2017, PROC INT CONF SOFTW, P370, DOI 10.1109/ICSE.2017.41
   srcML, 2017, US
   Syer MD, 2017, AUTOMAT SOFTW ENG, V24, P189, DOI 10.1007/s10515-016-0196-8
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Tarvo A., 2012, Proceedings of the third joint WOSP/SIPEW international conference on Performance Engineering, ICPE '12, (New York, NY, USA), P217
   Tillmann N, 2006, IEEE SOFTWARE, V23, P38, DOI 10.1109/MS.2006.117
   Tourani P, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P189, DOI 10.1109/SANER.2016.113
   Tsakiltsidis S, 2016, IEEE INT SYMP SOFTW, P132, DOI 10.1109/ISSREW.2016.43
   ul Alam MM, 2017, PROCEEDINGS OF THE TWELFTH EUROPEAN CONFERENCE ON COMPUTER SYSTEMS (EUROSYS 2017), P298, DOI 10.1145/3064176.3064186
   vonStorch H, 1995, ANALYSIS OF CLIMATE VARIABILITY, P11
   Wang S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P523, DOI 10.1145/3106237.3106258
   Weyuker EJ, 2000, IEEE T SOFTWARE ENG, V26, P1147, DOI 10.1109/32.888628
   Williams C, 2008, P 2008 WORKSHOP DEFE, P32
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Zaman S., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P199, DOI 10.1109/MSR.2012.6224281
   Zaman S., 2011, Proceedings of the 8th working conference on mining software repositories, P93, DOI [10.1145/1985441.1985457, DOI 10.1145/1985441.1985457]
   Zhang F., 2014, P 11 WORK C MIN SOFT, P182, DOI [10.1145/2597073.2597078, DOI 10.1145/2597073.2597078]
   Zhu YC, 2018, PROC IEEE INT CONF S, P69, DOI 10.1109/ICSME.2018.00016
NR 87
TC 19
Z9 21
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2022
VL 48
IS 5
BP 1529
EP 1544
DI 10.1109/TSE.2020.3023955
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 1I8CJ
UT WOS:000797454000005
DA 2024-07-18
ER

PT J
AU Liu, SQ
   Gao, CY
   Chen, S
   Nie, LY
   Liu, Y
AF Liu, Shangqing
   Gao, Cuiyun
   Chen, Sen
   Nie, Lun Yiu
   Liu, Yang
TI ATOM: Commit Message Generation Based on Abstract Syntax Tree and Hybrid
   Ranking
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Syntactics; Semantics; Atomic measurements; Hybrid power systems;
   Benchmark testing; Writing; Java; Commit message generation; code
   changes; abstract syntax tree
AB Commit messages record code changes (e.g., feature modifications and bug repairs) in natural language, and are useful for program comprehension. Due to the frequent updates of software and time cost, developers are generally unmotivated to write commit messages for code changes. Therefore, automating the message writing process is necessitated. Previous studies on commit message generation have been benefited from generation models or retrieval models, but the code structure of changed code, i.e., AST, which can be important for capturing code semantics, has not been explicitly involved. Moreover, although generation models have the advantages of synthesizing commit messages for new code changes, they are not easy to bridge the semantic gap between code and natural languages which could be mitigated by retrieval models. In this paper, we propose a novel commit message generation model, named ATOM, which explicitly incorporates the abstract syntax tree for representing code changes and integrates both retrieved and generated messages through hybrid ranking. Specifically, the hybrid ranking module can prioritize the most accurate message from both retrieved and generated messages regarding one code change. We evaluate the proposed model ATOM on our dataset crawled from 56 popular Java repositories. Experimental results demonstrate that ATOM increases the state-of-the-art models by 30.72 percent in terms of BLEU-4 (an accuracy measure that is widely used to evaluate text generation systems). Qualitative analysis also demonstrates the effectiveness of ATOM in generating accurate code commit messages.
C1 [Liu, Shangqing; Chen, Sen; Liu, Yang] Nanyang Technol Univ, Sch Comp Sci & Engn, Singapore 639798, Singapore.
   [Gao, Cuiyun] Harbin Inst Technol, Sch Comp Sci & Technol, Shenzhen 518055, Peoples R China.
   [Chen, Sen] Tianjin Univ, Coll Intelligence & Comp, Tianjin 300350, Peoples R China.
   [Nie, Lun Yiu] Chinese Univ Hong Kong, Hong Kong, Peoples R China.
C3 Nanyang Technological University; Harbin Institute of Technology;
   Tianjin University; Chinese University of Hong Kong
RP Gao, CY (corresponding author), Harbin Inst Technol, Sch Comp Sci & Technol, Shenzhen 518055, Peoples R China.
EM shangqin001@e.ntu.edu.sg; gaocuiyun@hit.edu.cn; ecnuchensen@gmail.com;
   lynie8@cse.cuhk.edu; yangliu@ntu.edu.sg
RI Liu, Yang/D-2306-2013; Nie, Lunyiu/JXL-8636-2024
OI Liu, Yang/0000-0001-7300-9215; 
FU NVIDIA AI Tech Center (NVAITC); Singapore Ministry of Education Academic
   Research Fund Tier 1 [2018-T1-002-069]; National Research Foundation,
   Prime Ministers Office, Singapore under its National Cybersecurity RD
   Program [NRF2018NCR-NCR005-0001]; Singapore National Research Foundation
   under NCR [NRF2018NCR-NSOE003-0001]; NRF Investigatorship
   [NRFI06-2020-0022]; National Natural Science Foundation of China
   [62002084]
FX We gratefully acknowledge the support of NVIDIA AI Tech Center (NVAITC)
   to our research. This work was supported by Singapore Ministry of
   Education Academic Research Fund Tier 1 (Award No. 2018-T1-002-069), the
   National Research Foundation, Prime Ministers Office, Singapore under
   its National Cybersecurity R&D Program (Award No.
   NRF2018NCR-NCR005-0001), the Singapore National Research Foundation
   under NCR Award Number NRF2018NCR-NSOE003-0001, NRF Investigatorship
   NRFI06-2020-0022, and the National Natural Science Foundation of China
   under project No. 62002084.
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Abid NJ, 2015, PROC IEEE INT CONF S, P561, DOI 10.1109/ICSM.2015.7332514
   Aizawa A, 2003, INFORM PROCESS MANAG, V39, P45, DOI 10.1016/S0306-4573(02)00021-3
   Allamanis M., 2016, PR MACH LEARN RES, P2091
   Allamanis M., 2017, ARXIV PREPRINT ARXIV
   Alon U., 2018, ARXIV 180801400
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Alon U, 2018, ACM SIGPLAN NOTICES, V53, P404, DOI [10.1145/3192366.3192412, 10.1145/3296979.3192412]
   Ba J., 2014, ARXIV14127755
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Banerjee S., 2005, P WORKSHOP INTRINSIC, P65
   Bengio S, 2015, ADV NEUR IN, V28
   Buse Raymond P. L., 2010, P 25 IEEE ACM INT C, P33, DOI DOI 10.1145/1858996.1859005
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Cho K., 2014, ARXIV14061078
   Chung Junyoung, 2014, ARXIV14123555
   Drucker H, 1997, ADV NEUR IN, V9, P155
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Fernandes P., 2018, ARXIV 181101824
   Cortés-Coy LF, 2014, IEEE INT WORK C SO, P275, DOI 10.1109/SCAM.2014.14
   Franceschi L, 2017, PR MACH LEARN RES, V70
   Gal Y, 2016, PR MACH LEARN RES, V48
   Gao CY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P163, DOI 10.1109/ASE.2019.00025
   Gers FA, 1999, IEE CONF PUBL, P850, DOI [10.1049/cp:19991218, 10.1162/089976600300015015]
   Git, ABOUT US
   Github, TWITTER SENTIMENT
   google, EXAMPLES DATASET SPL
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Hallgren Kevin A, 2012, Tutor Quant Methods Psychol, V8, P23
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hu BT, 2014, ADV NEUR IN, V27
   Hu X, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2269
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Huang Y, 2017, INT SYMP EMP SOFTWAR, P414, DOI 10.1109/ESEM.2017.56
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   James W., 1992, Breakthroughs in statistics: Foundations and basic theory, P443, DOI [DOI 10.1007/978-1-4612-0919-530, 10.1007/978-1-4612-0919-5_30, DOI 10.1007/978-1-4612-0919-5_30]
   javaparser, JAV DOC
   Jiang L, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P614, DOI 10.1109/ASE.2019.00062
   Jiang SY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1280, DOI 10.1109/ASE.2019.00162
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   Jiang SY, 2017, INT C PROGRAM COMPRE, P320, DOI 10.1109/ICPC.2017.12
   Junit5, about us
   Kingma D. P., 2014, arXiv
   LeClair A., ARXIV190402660, V2019
   Levy O., 2017, ARXIV 170604115
   Lewis R.J, 2000, ANN M SOC AC EM MED
   Lin CY, 2004, ROUGE: A Package for Automatic Evaluation of Summaries, P74, DOI DOI 10.1253/JCJ.34.1213
   Linares-Vásquez M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P709, DOI 10.1109/ICSE.2015.229
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Loyola P, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 2, P287, DOI 10.18653/v1/P17-2045
   Lozoya R. C., 2019, ARXIV 191107605
   Luong M.-T., 2015, P 2015 C EMPIRICAL M, DOI DOI 10.18653/V1/D15-1166
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   McBurney P.W., 2014, P 22 INT C PROGRAM C, P291
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Neo4j, About us
   Niemeyer Patrick, 2005, Learning java
   NLTK, Natural Language Toolkit
   Pang L, 2016, AAAI CONF ARTIF INTE, P2793
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Paszke A, 2019, ADV NEUR IN, V32
   Pearson K., 1895, P R SOC LOND, V58, P240, DOI 10.1098/rspl.1895.0041
   pygments, PYGMENTS DOCUMENTATI
   Qin Liu, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P299, DOI 10.1109/MSR.2019.00056
   Rodeghero P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P390, DOI 10.1145/2568225.2568247
   Scikit-learn, US
   See A., 2017, ARXIV 170404368
   See A, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1073, DOI 10.18653/v1/P17-1099
   Shen JF, 2016, P INT COMP SOFTW APP, P103, DOI 10.1109/COMPSAC.2016.162
   Siow JK, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P284, DOI [10.1109/SANER48275.2020.9054794, 10.1109/saner48275.2020.9054794]
   Song YP, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4382
   sourceforge, EXUBERANT CTAGS DOCU
   Sridhara G., 2010, P IEEE ACM INT C AUT, P43, DOI DOI 10.1145/1858996.1859006
   tortoisemedia, about us
   van Hal S., 2019, ARXIV 191111690
   Vaswani A, 2017, ADV NEUR IN, V30
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wong E, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P380, DOI 10.1109/SANER.2015.7081848
   Wu Y., 2016, GOOGLES NEURAL MACHI
   Xu SB, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3975
   Yang L., 2019, P 28 ACM INT C INF
   zenodo, CODE PTR NET
   Zhou Y., 1815, ARXIV 190903496
NR 85
TC 31
Z9 34
U1 1
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2022
VL 48
IS 5
BP 1800
EP 1817
DI 10.1109/TSE.2020.3038681
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 1I8CJ
UT WOS:000797454000020
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Albarak, M
   Bahsoon, R
   Ozkaya, I
   Nord, R
AF Albarak, Mashel
   Bahsoon, Rami
   Ozkaya, Ipek
   Nord, Robert
TI Managing Technical Debt in Database Normalization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Data integrity; Data models; Relational databases; Redundancy;
   Portfolios; Database normalization; multi-attribute analysis; software
   design; technical debt
ID EVOLUTION; METRICS
AB Database normalization is one of the main principles for designing relational databases, which is the most popular database model, with the objective of improving data and system qualities, such as performance. Refactoring the database for normalization can be costly, if the benefits of the exercise are not justified. Developers often ignore the normalization process due to the time and expertise it requires, introducing technical debt into the system. Technical debt is a metaphor that describes trade-offs between short-term goals and applying optimal design and development practices. We consider database normalization debts are likely to be incurred for tables below the fourth normal form. To manage the debt, we propose a multi-attribute analysis framework that makes a novel use of the Portfolio Theory and the TOPSIS method (Technique for Order of Preference by Similarity to Ideal Solution) to rank the candidate tables for normalization to the fourth normal form. The ranking is based on the tables estimated impact on data quality, performance, maintainability, and cost. The techniques are evaluated using an industrial case study of a database-backed web application for human resource management. The results show that the debt-aware approach can provide an informed justification for the inclusion of critical tables to be normalized, while reducing the effort and cost of normalization.
C1 [Albarak, Mashel; Bahsoon, Rami] Univ Birmingham, Sch Comp Sci, Birmingham B15 2TT, W Midlands, England.
   [Albarak, Mashel] King Saud Univ, Riyadh 11451, Saudi Arabia.
   [Ozkaya, Ipek; Nord, Robert] Carnegie Mellon Univ, Software Engn Inst, Pittsburgh, PA 15213 USA.
C3 University of Birmingham; King Saud University; Carnegie Mellon
   University; Software Engineering Institute
RP Albarak, M (corresponding author), Univ Birmingham, Sch Comp Sci, Birmingham B15 2TT, W Midlands, England.; Albarak, M (corresponding author), King Saud Univ, Riyadh 11451, Saudi Arabia.
EM mxa657@cs.bham.ac.uk; r.bahsoon@cs.bham.ac.uk; ozkaya@sei.cmu.edu;
   rn@sei.cmu.edu
FU King Saud University through the initiative of DSR Graduate Students
   Research Support; Department of Defense [FA8702-15D-0002]; Carnegie
   Mellon University
FX This research is supported by the Deanship of Scientific Research, King
   Saud University through the initiative of DSR Graduate Students Research
   Support. For Robert Nord, and Ipek Ozkaya: This material is based upon
   work funded and supported by the Department of Defense under Contract
   No. FA8702-15D-0002 with Carnegie Mellon University for the operation of
   the Software Engineering Institute, a federally funded research and
   development center. References herein to any specific commercial
   product, process, or service by trade name, trade mark, manufacturer, or
   otherwise, does not necessarily constitute or imply its endorsement,
   recommendation, or favoring by Carnegie Mellon University or its
   Software Engineering Institute. DM19-1256.
CR Albarak M, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P31, DOI 10.1145/3194164.3194170
   Albarak M, 2018, EUROMICRO CONF PROC, P437, DOI 10.1109/SEAA.2018.00077
   Ambler SW, 2006, ADD-WES SIGNAT SER, P1
   [Anonymous], 2011, Fundamentals of Database Systems
   [Anonymous], 2016, SET STAT IO T SQL
   [Anonymous], 2019, DB ENGINES RANKING P
   [Anonymous], What is Object/Relational Mapping?-Hibernate ORM.
   [Anonymous], 2018, TECHDEBT 2018 INT C
   [Anonymous], SQL DATA GENERATOR D
   [Anonymous], 2018, EUROMICRO DSD SEAA 2
   [Anonymous], 2015, 250242015 ISOIEC
   Calero Coral., 2002, INFORM DATABASE QUAL, P57
   Cleve A, 2015, SCI COMPUT PROGRAM, V97, P113, DOI 10.1016/j.scico.2013.11.025
   CODD EF, 1970, COMMUN ACM, V13, P377, DOI 10.1145/357980.358007
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Date C.J., 2012, Database design and Relational theory: normal forms and all that Jazz (Theory in Practice)
   Demba M., 2013, INT J DATABASE MANAG, V5, P39, DOI DOI 10.5121/ijdms.2013.5303
   DIEDERICH J, 1988, ACM T DATABASE SYST, V13, P339, DOI 10.1145/44498.44499
   Dongare Y., 2011, International Journal of Database Management Systems, V3, P133
   Fernández-Sánchez C, 2017, J SYST SOFTWARE, V124, P22, DOI 10.1016/j.jss.2016.10.018
   Ferraggine VivianaE., 2009, Handbook of Research on Innovations in Database Technologies and Applications: Current and Future Trends
   Fowler M, 2004, INTEGRATIONDATABASE
   Guo Y., 2011, 2 WORKSH MAN TECHN D, P31, DOI [10.1145/1985362.1985370, DOI 10.1145/1985362.1985370]
   Hamaji K, 2016, INT SYMPOS COMPUT NE, P443, DOI [10.1109/CANDAR.2016.65, 10.1109/CANDAR.2016.0082]
   Hwang C. L., 1981, MULTIPLE ATTRIBUTE D, P191, DOI DOI 10.1007/978-3-642-48318-9_3
   ISO/IEC, 2006, 14764 ISOIEC
   Jha D. G., 2013, COMPUTER CONCEPTS MA
   Keshta IM, 2017, INT J ADV COMPUT SC, V8, P542
   Khumnin P, 2017, 2017 18TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNDP 2017), P199, DOI 10.1109/SNPD.2017.8022723
   Kitchenham B, 1997, COMPUT CONTROL ENG J, V8, P120, DOI 10.1049/cce:19970304
   Lasdon L. S., 1978, ACM Transactions on Mathematical Software, V4, P34, DOI 10.1145/355769.355773
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Markowitz H, 1952, J FINANC, V7, P77, DOI 10.1111/j.1540-6261.1952.tb01525.x
   Meurice L, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P464, DOI 10.1109/CSMR-WCRE.2014.6747219
   Ojameruaye Bendra, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P152, DOI 10.1007/978-3-319-05843-6_12
   Papastefanatos G, 2012, J DATA SEMANT, V1, P75, DOI 10.1007/s13740-012-0006-9
   Piatetsky-Shapiro G., 1991, Knowledge discovery in databases, P229
   Piattini M, 2001, SOFTWARE QUAL J, V9, P79, DOI 10.1023/A:1016670717863
   S. D.-L.-Z. f_ur I. G. Wadern 66687, 2016, SCHLOSS DAGSTUHL SEM
   Shih HS, 2007, MATH COMPUT MODEL, V45, P801, DOI 10.1016/j.mcm.2006.03.023
   Sobol MG, 1996, J SYST SOFTWARE, V34, P31, DOI 10.1016/0164-1212(95)00062-3
   Vial G, 2015, IEEE SOFTWARE, V32, P71, DOI 10.1109/MS.2015.131
   Weber Jens H., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P43, DOI 10.1109/MTD.2014.17
   Wu M. S., 1992, SIGCSE Bulletin, V24, P19, DOI 10.1145/135250.134515
   Yin R. K., 2017, CASE STUDY RES DESIG
   Zazworka N., 2011, P 2 WORKSH MAN TECHN, P39
NR 46
TC 1
Z9 1
U1 1
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2022
VL 48
IS 3
BP 755
EP 772
DI 10.1109/TSE.2020.3001339
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZU6ZO
UT WOS:000769989900002
DA 2024-07-18
ER

PT J
AU Janke, M
   Mäder, P
AF Janke, Mario
   Maeder, Patrick
TI Graph Based Mining of Code Change Patterns From Version Control Commits
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Data mining; Pipelines; Itemsets; Tools; Optimization; Open source
   software; Code changes; data mining; frequent graph mining;
   auto-completion
AB Detailed knowledge of frequently recurring code changes can be beneficial for a variety of software engineering activities. For example, it is a key step to understand the process of software evolution, but is also necessary when developing more sophisticated code completion features predicting likely changes. Previous attempts on automatically finding such code change patterns were mainly based on frequent itemset mining, which essentially finds sets of edits occurring in close proximity. However, these approaches do not analyze the interplay among code elements, e.g., two code objects being named similarly, and thereby neglect great potential in identifying a number of meaningful patterns. We present a novel method for the automated mining of code change patterns from Git repositories that captures these context relations between individual edits. Our approach relies on a transformation of source code into a graph representation, while keeping relevant relations present. We then apply graph mining techniques to extract frequent subgraphs, which can be used for further analysis of development projects. We suggest multiple usage scenarios for the resulting pattern type. Additionally, we propose a transformation into complex event processing (CEP) rules which allows for easier application, especially for event-based auto-completion recommenders or similar tools. For evaluation, we mined seven open-source code repositories. We present 25 frequent change patterns occurring across these projects. We found these patterns to be meaningful, easy to interpret and mostly persistent across project borders. On average, a pattern from our set appeared in 45 percent of the analyzed code changes.
C1 [Janke, Mario; Maeder, Patrick] Tech Univ Ilmenau, Software Engn Safety Crit Syst Grp, D-98693 Ilmenau, Germany.
C3 Technische Universitat Ilmenau
RP Janke, M (corresponding author), Tech Univ Ilmenau, Software Engn Safety Crit Syst Grp, D-98693 Ilmenau, Germany.
EM mario.janke@tu-ilmenau.de; patrick.maeder@tu-ilmenau.de
RI Mäder, Patrick/A-1848-2018
OI Mäder, Patrick/0000-0001-6871-2707
CR Amlekar R, 2018, IEEE WORK CONF MIN S, P86, DOI 10.1145/3196398.3196471
   [Anonymous], 2017, P 11 ACM INT C DISTR
   [Anonymous], 2014, DCS352IR U VICT
   Barik T, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P633, DOI 10.1145/3236024.3236040
   Barik T, 2016, PROC IEEE INT CONF S, P212, DOI 10.1109/ICSME.2016.63
   Basit Hamid Abdul, 2005, SIGSOFT Softw. Eng. Notes, V30, P156, DOI [10.1145/1095430.1081733, DOI 10.1145/1095430.1081733]
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Call HC, 2009, IEEE SOFTWARE, V26, P26, DOI 10.1109/MS.2009.6
   de la Torre G, 2018, IEEE WORK CONF MIN S, P492, DOI 10.1145/3196398.3196404
   Dotzler G, 2016, IEEE INT CONF AUTOM, P660, DOI 10.1145/2970276.2970315
   Engel Y., 2011, P 5 ACM INT C DISTRI
   EsperTech Inc, 2019, ESP
   Falleri J., 2019, GUMTREEDIFF GUMTREE
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Foster SR, 2012, PROC INT CONF SOFTW, P222, DOI 10.1109/ICSE.2012.6227191
   Gabel M, 2010, 18 ACM SIGSOFT INT S, P147
   Hagberg A. A., 2008, EXPLORING NETWORK ST, P11, DOI DOI 10.1016/J.JELECTROCARD.2010.09.003
   Hashimoto M, 2008, WORK CONF REVERSE EN, P279, DOI 10.1109/WCRE.2008.44
   Hoan Anh Nguyen, 2019, 2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE). Proceedings, P819, DOI 10.1109/ICSE.2019.00089
   Nguyen HA, 2013, IEEE INT CONF AUTOM, P180, DOI 10.1109/ASE.2013.6693078
   Horváth T, 2007, LECT NOTES ARTIF INT, V4455, P244
   Huang KF, 2018, IEEE INT CONF AUTOM, P679, DOI 10.1145/3238147.3238219
   Jaccard P., 1901, B SOCIT VAUDOISE SCI, V37, P547, DOI [10.5169/seals-266440, DOI 10.5169/SEALS-266440]
   Jiang CT, 2013, KNOWL ENG REV, V28, P75, DOI 10.1017/S0269888912000331
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kliegr Tomas, 2014, Rules on the Web. From Theory to Applications. 8th International Symposium, RuleML 2014 Co-located with the 21st European Conference on Artificial Intelligence, ECAI 2014. Proceedings. LNCS: 8620, P236, DOI 10.1007/978-3-319-09870-8_18
   Kreutzer P, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P61, DOI [10.1145/2901739.2901749, 10.1109/MSR.2016.016]
   Kuschke T, 2013, LECT NOTES COMPUT SC, V8107, P170, DOI 10.1007/978-3-642-41533-3_11
   Kuschke Tobias., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, P551, DOI DOI 10.1145/2642937.2642949
   Leung C.W.-K., 2010, TECHNICAL NOTES EXTE
   Lin Y, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P164, DOI 10.1109/ICST.2013.41
   Lin Y, 2017, IEEE INT CONF AUTOM, P394, DOI 10.1109/ASE.2017.8115652
   LUCKHAM DC, 1995, IEEE T SOFTWARE ENG, V21, P717, DOI 10.1109/32.464548
   Maalej W., 2014, RECOMMENDATION SYSTE, P173
   Mader P., 2019, IEEE Trans. Softw. Eng.
   Martinez M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P79, DOI 10.1109/ICSE-Companion.2019.00043
   Molderez T, 2017, IEEE WORK CONF MIN S, P248, DOI 10.1109/MSR.2017.12
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Murphy-Hill E., 2007, P OOPSLA WORKSH ECL, P1
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Negara S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P803, DOI 10.1145/2568225.2568317
   Negara S, 2012, LECT NOTES COMPUT SC, V7313, P79, DOI 10.1007/978-3-642-31057-7_5
   Okur S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1117, DOI 10.1145/2568225.2568309
   Petermann A, 2017, BDCAT'17: PROCEEDINGS OF THE FOURTH IEEE/ACM INTERNATIONAL CONFERENCE ON BIG DATA COMPUTING, APPLICATIONS AND TECHNOLOGIES, P237, DOI 10.1145/3148055.3148064
   Proksch S, 2018, IEEE WORK CONF MIN S, P62, DOI 10.1145/3196398.3196400
   Qian WY, 2013, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2013.15
   Red Hat, DROOLS 5 INT PLATF R
   Rolim Reudismam, 2018, ARXIV180303806
   Roughan Matthew, 2015, ARXIV150302781
   Roy CK, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P26, DOI 10.1109/SANER.2018.8330194
   Seo H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P724, DOI 10.1145/2568225.2568255
   Silva D, 2017, IEEE WORK CONF MIN S, P269, DOI 10.1109/MSR.2017.14
   Vakilian M., 2011, Proceedings of the 3rd ACM SIGPLAN workshop on Evaluation and usability of programming languages and tools, P31
   Vakilian M, 2012, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2012.6227190
   Yan XF, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P721, DOI 10.1109/ICDM.2002.1184038
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zaki MJ, 2002, SIAM PROC S, P457
   Zhou K., 2019, JOKEREN GBOLT
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 61
TC 6
Z9 6
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2022
VL 48
IS 3
BP 848
EP 863
DI 10.1109/TSE.2020.3004892
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZU6ZO
UT WOS:000769989900008
DA 2024-07-18
ER

PT J
AU Jiang, YJ
   Liu, H
   Jin, JH
   Zhang, L
AF Jiang, Yanjie
   Liu, Hui
   Jin, Jiahao
   Zhang, Lu
TI Automated Expansion of Abbreviations Based on Semantic Relation and
   Transfer Expansion
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Abbreviation; expansion; transfer; context; quality
ID RECOVERING TRACEABILITY LINKS; INFORMATION-RETRIEVAL; CODE;
   COMPREHENSION
AB Although the negative impact of abbreviations in source code is well-recognized, abbreviations are common for various reasons. To this end, a number of approaches have been proposed to expand abbreviations in identifiers. However, such approaches are either inaccurate or confined to specific identifiers. To this end, in this paper, we propose a generic and accurate approach to expand identifier abbreviations by leveraging both semantic relation and transfer expansion. One of the key insights of the approach is that abbreviations in the name of software entity e have a great chance to find their full terms in names of software entities that are semantically related to e. Consequently, the proposed approach builds a knowledge graph to represent such entities and their relationships with c and searches the graph for full terms. Another key insight is that literally identical abbreviations within the same application are likely (but not necessary) to have identical expansions, and thus the semantics-based expansion in one place may be transferred to other places. To investigate when abbreviation expansion could be transferred safely, we conduct a case study on three open-source applications. The results suggest that a significant part (75 percent) of expansions could be transferred among lexically identical abbreviations within the same application. However, the risk of transfer varies according to various factors, e.g., length of abbreviations, the physical distance between abbreviations, and semantic relations between abbreviations. Based on these findings, we design nine heuristics for transfer expansion and propose a learning-based approach to prioritize both transfer heuristics and semantic-based expansion heuristics. Evaluation results on nine open-source applications suggest that the proposed approach significantly improves the state of the art, improving recall from 29 to 89 percent and precision from 39 to 92 percent.
C1 [Jiang, Yanjie; Liu, Hui; Jin, Jiahao] Beijing Inst Technol, Sch Comp Sci & Technol, Beijing 100081, Peoples R China.
   [Zhang, Lu] Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing 100871, Peoples R China.
C3 Beijing Institute of Technology; Peking University
RP Liu, H (corresponding author), Beijing Inst Technol, Sch Comp Sci & Technol, Beijing 100081, Peoples R China.
EM jiangyanjie@bit.edu.cn; liuhui08@bit.edu.cn; jinjiahao1993@gmail.com;
   zhanglu@sei.pku.edu.cn
RI chen, xian/KHW-2227-2024
OI Liu, Hui/0000-0002-3267-6801; Zhang, Lu/0000-0001-8304-7055
FU National Natural Science Foundation of China [61772071, 61690205]; China
   Scholarship Council
FX The authors would like to thank the associate editor and anonymous
   reviewers for their insightful comments and constructive suggestions.
   This work was partially supported by the National Natural Science
   Foundation of China under Grant No. 61772071 and 61690205, and China
   Scholarship Council.
CR Adar E, 2004, BIOINFORMATICS, V20, P527, DOI 10.1093/bioinformatics/btg439
   Alatawi A, 2018, P INT COMP SOFTW APP, P370, DOI 10.1109/COMPSAC.2018.10260
   Alatawi A, 2017, PROC INT C TOOLS ART, P543, DOI 10.1109/ICTAI.2017.00088
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   [Anonymous], 2019, REPLICATION PACKAGE
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G, 2000, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2000.883003
   Apostolio A., 1985, 85546 PURD U DEP COM, P85
   BAEZAYATES RA, 1992, LECT NOTES COMPUT SC, V644, P185
   Binkley D, 2015, J SOFTW-EVOL PROC, V27, P255, DOI 10.1002/smr.1710
   Butler S, 2011, LECT NOTES COMPUT SC, V6813, P130, DOI 10.1007/978-3-642-22655-7_7
   Caprile B, 2000, PROC IEEE INT CONF S, P97, DOI 10.1109/ICSM.2000.883022
   Caprile C., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P112, DOI 10.1109/WCRE.1999.806952
   Carvalho NR, 2015, J SYST SOFTWARE, V100, P117, DOI 10.1016/j.jss.2014.10.013
   Corazza A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P233, DOI 10.1109/ICSM.2012.6405277
   Deissenboeck F., 2005, Software Technology and Engineering Practice, P127
   Deissenboeck F, 2006, SOFTWARE QUAL J, V14, P261, DOI 10.1007/s11219-006-9219-1
   Du DD, 2018, LECT NOTES COMPUT SC, V10845, P33, DOI 10.1007/978-3-319-91662-0_3
   Eaddy M, 2008, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2008.39
   Enslen E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P71, DOI 10.1109/MSR.2009.5069482
   Feild H, 2006, PROCEEDINGS OF THE 10TH IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND APPLICATIONS, P365
   Guerrouj L., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P103, DOI 10.1109/WCRE.2012.20
   Guerrouj L, 2013, J SOFTW-EVOL PROC, V25, P575, DOI 10.1002/smr.539
   Hill E., 2008, P 2008 INT WORKING C, P79
   Jiang YJ, 2020, IEEE T SOFTWARE ENG, V46, P732, DOI 10.1109/TSE.2018.2868762
   Jiang YJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P131, DOI 10.1145/3338906.3338929
   Karidi Danae Pla, 2016, 2016 IEEE 32nd International Conference on Data Engineering: Workshops (ICDEW), P121, DOI 10.1109/ICDEW.2016.7495629
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   Kearns M, 1999, NEURAL COMPUT, V11, P1427, DOI 10.1162/089976699300016304
   Lawrie D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P113, DOI 10.1109/ICSM.2011.6080778
   Lawrie Dawn, 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P3, DOI 10.1109/WCRE.2010.10
   Lawrie D, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P213, DOI 10.1109/SCAM.2007.17
   Lawrie D, 2007, INNOV SYST SOFTW ENG, V3, P303, DOI 10.1007/s11334-007-0031-2
   Li HW, 2018, PROC IEEE INT CONF S, P183, DOI 10.1109/ICSME.2018.00028
   Madani N, 2010, EUR CON SFTWR MTNCE, P68, DOI 10.1109/CSMR.2010.31
   Maletic JI, 2001, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.2001.919085
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Newman CD, 2019, PROC IEEE INT CONF S, P269, DOI 10.1109/ICSME.2019.00040
   Paulheim H, 2017, SEMANT WEB, V8, P489, DOI 10.3233/SW-160218
   Popping R, 2003, SOC SCI INFORM, V42, P91, DOI 10.1177/0539018403042001798
   Sharif Bonita, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P196, DOI 10.1109/ICPC.2010.41
   Stevenson Angus, 2010, Oxford Dictionary of English
   Sureka A., 2012, Proceedings of the First International Workshop on Software Mining, P1
   Wang L, 2017, PROC IEEE ACM INT C, P189, DOI 10.1109/ICSE-C.2017.102
   Xiong CY, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P1271, DOI 10.1145/3038912.3052558
NR 45
TC 8
Z9 9
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2022
VL 48
IS 2
BP 519
EP 537
DI 10.1109/TSE.2020.2995736
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZB4EB
UT WOS:000756796100010
DA 2024-07-18
ER

PT J
AU Lima, JAP
   Vergilio, SR
AF Lima, Jackson A. Prado
   Vergilio, Silvia Regina
TI A Multi-Armed Bandit Approach for Test Case Prioritization in Continuous
   Integration Environments
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Fault detection; Software; Instruments; Google; Industries;
   Companies; Test case prioritization; continuous integration; multi-armed
   bandit
AB Continuous Integration (CI) environments have been increasingly adopted in the industry to allow frequent integration of software changes, making software evolution faster and cost-effective. In such environments, Test Case Prioritization (TCP) techniques play an important role to reduce regression testing costs, establishing a test case execution order that usually maximizes early fault detection. Existing works on TCP in CI environments (TCPCI) present some limitations. Few pieces of work consider CI particularities, such as the test case volatility, that is, they do not consider the dynamic environment of the software life-cycle in which new test cases can be added or removed (discontinued), characteristic related to the Exploration versus Exploitation (EvE) dilemma. To solve such a dilemma an approach needs to balance: i) the diversity of test suite; and ii) the quantity of new test cases and test cases that are error-prone or that comprise high fault-detection capabilities. To deal with this, most approaches use, besides the failure-history, other measures that rely on code instrumentation or require additional information, such as testing coverage. However, to maintain the information updated can be difficult and time-consuming, not scalable due to the test budget of CI environments. In this context, and to properly deal with the TCPCI problem, this work presents an approach based on Multi-Armed Bandit (MAB) called COLEMAN (Combinatorial VOlatiLE Multi-Armed BANdit). The TCPCI problem falls into the category of volatile and combinatorial MAB, because multiple arms (test cases) need to be selected, and they are added or removed over the cycles. We conducted an evaluation considering three time budgets and eleven systems. The results show the applicability of our approach and that COLEMAN outperforms the most similar approach from literature in terms of early fault detection and performance.
C1 [Lima, Jackson A. Prado; Vergilio, Silvia Regina] Fed Univ Parana UFPR, Dept Informat, BR-80060000 Curitiba, Parana, Brazil.
C3 Universidade Federal do Parana
RP Lima, JAP (corresponding author), Fed Univ Parana UFPR, Dept Informat, BR-80060000 Curitiba, Parana, Brazil.
EM jacksonpradolima@gmail.com; silvia@inf.ufpr.br
RI Prado Lima, Jackson/L-8938-2016
OI Prado Lima, Jackson/0000-0003-4993-777X; Vergilio,
   Silvia/0000-0003-3139-6266
FU CAPES; CNPq [305968/2018]
FX This work is supported by the Brazilian funding agencies CAPES and CNPq.
   Grant: 305968/2018.
CR ANANTHARAM V, 1987, IEEE T AUTOMAT CONTR, V32, P968, DOI 10.1109/TAC.1987.1104491
   Auer P, 2002, MACH LEARN, V47, P235, DOI 10.1023/A:1013689704352
   Beller M, 2017, IEEE WORK CONF MIN S, P447, DOI 10.1109/MSR.2017.24
   Benitez JM, 1997, IEEE T NEURAL NETWOR, V8, P1156, DOI 10.1109/72.623216
   Bnaya Z., 2013, P WORKSH 27 AAAI C A, P8
   Busjaeger B, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P975, DOI 10.1145/2950290.2983954
   Catal C, 2013, SOFTWARE QUAL J, V21, P445, DOI 10.1007/s11219-012-9181-z
   Cho Y, 2016, ASIA PAC SOFWR ENG, P385, DOI [10.1109/APSEC.2016.066, 10.1109/APSEC.2016.24]
   Do H., 2008, Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering (SIGSOFT '08/FSE-16), P71
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Fialho A., 2010, PhD thesis
   Friedman M, 1940, ANN MATH STAT, V11, P86, DOI 10.1214/aoms/1177731944
   Haghighatkhah A, 2018, J SYST SOFTWARE, V146, P80, DOI 10.1016/j.jss.2018.08.061
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Kuleshov V., 2014, ARXIV PREPRINT ARXIV
   Li K, 2014, IEEE T EVOLUT COMPUT, V18, P114, DOI 10.1109/TEVC.2013.2239648
   Liang JJ, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P688, DOI 10.1145/3180155.3180213
   Liu WL, 2007, INT C COMP AID DES C, P252
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Marijan D, 2017, IEEE INT CONF SOFTW, P524, DOI 10.1109/ICST.2017.60
   Marijan D, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P157, DOI 10.1109/QRS.2015.31
   Marijan D, 2013, PROC IEEE INT CONF S, P540, DOI 10.1109/ICSM.2013.91
   Memon A, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P233, DOI 10.1109/ICSE-SEIP.2017.16
   Prado Lima J. A., 2020, MULTIARMED BANDIT AP
   Lima JAP, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106268
   Robbins H., 1985, Herbert Robbins Selected Papers, P169
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Spieker H, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P12, DOI 10.1145/3092703.3092709
   Sutton R., 1998, Reinforcement Learning: An Introduction
   Travis CI, TRAVIS 101
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
   Zhu YC, 2018, PROC IEEE INT CONF S, P69, DOI 10.1109/ICSME.2018.00016
   Zoph B., 2017, ICLR, P1, DOI DOI 10.1109/ICAIIC48513.2020.9065031
NR 40
TC 24
Z9 24
U1 3
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2022
VL 48
IS 2
BP 453
EP 465
DI 10.1109/TSE.2020.2992428
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZB4EB
UT WOS:000756796100006
DA 2024-07-18
ER

PT J
AU Cogo, FR
   Oliva, GA
   Hassan, AE
AF Cogo, Filipe Roseiro
   Oliva, Gustavo A.
   Hassan, Ahmed E.
TI An Empirical Study of Dependency Downgrades in the npm Ecosystem
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Ecosystems; Software; Computer bugs; Tools; Security; Task analysis;
   Downgrades; dependency management; npm; software ecosystems
AB In a software ecosystem, a dependency relationship enables a client package to reuse a certain version of a provider package. Packages in a software ecosystem often release versions containing bug fixes, new functionalities, and security enhancements. Hence, updating the provider version is an important maintenance task for client packages. Despite the number of investigations about dependency updates, there is a lack of studies about dependency downgrades in software ecosystems. A downgrade indicates that the adopted version of a provider package is not suitable to the client package at a certain moment. In this paper, we investigate downgrades in the npm ecosystem. We address three research questions. In our first RQ, we provide a list of the reasons behind the occurrence of downgrades. Our manual analysis of the artifacts (e.g., release notes and commit messages) of a package code repository identified two categories of downgrades according to their rationale: reactive and preventive. The reasons behind reactive downgrades are defects in a specific version of a provider, unexpected feature changes in a provider, and incompatibilities. In turn, preventive downgrades are an attempt to avoid issues in future releases. In our second RQ, we investigate how the versioning of dependencies is modified when a downgrade occurs. We observe that 49 percent of the downgrades are performed by replacing a range of acceptable versions of a provider by a specific old version. This observation suggests that client packages have the tendency to become more conservative regarding the update of their providers after a downgrade. Also, 48 percent of the downgrades reduce the provider version by a minor level (e.g., from 2.1.0 to 2.0.0). This observation indicates that client packages in npm should be cautious when updating minor releases of the provider (e.g., by prioritizing tests). Finally, in our third RQ we observe that 50 percent of the downgrades are performed at a rate that is 2.6 times as slow as the median time-between-releases of their associated client packages. We also observe that downgrades that follow an explicit update of a provider package occur faster than downgrades that follow an implicit update. Explicit updates occur when the provider is updated by means of an explicit change to the versioning specification (i.e., the string used by client packages to define the provider version that they are willing to adopt). We conjecture that, due to the controlled nature of explicit updates, it is easier for client packages to identify the provider that is associated with the problem that motivated the downgrade.
C1 [Cogo, Filipe Roseiro; Oliva, Gustavo A.; Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab SAIL, Sch Comp, Kingston, ON K7L 3N6, Canada.
   [Cogo, Filipe Roseiro] Univ Tecnol Fed Paran UTFPR, Dept Comp, BR-87301899 Mouroa, Parana, Brazil.
C3 Queens University - Canada; Universidade Tecnologica Federal do Parana
RP Cogo, FR (corresponding author), Queens Univ, Software Anal & Intelligence Lab SAIL, Sch Comp, Kingston, ON K7L 3N6, Canada.
EM cogo@cs.queensu.ca; gustavo@cs.queensu.ca; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Cogo,
   Filipe/0000-0002-5494-685X
CR Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3106237.3106267
   BAUER DF, 1972, J AM STAT ASSOC, V67, P687, DOI 10.2307/2284469
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1275, DOI 10.1007/s10664-014-9325-9
   Bavota G, 2013, PROC IEEE INT CONF S, P280, DOI 10.1109/ICSM.2013.39
   Bevacqua N., 2015, Keeping your npm dependencies immutable
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Cox J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P109, DOI 10.1109/ICSE.2015.140
   Decan A, 2021, IEEE T SOFTWARE ENG, V47, P1226, DOI 10.1109/TSE.2019.2918315
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Decan A, 2018, PROC IEEE INT CONF S, P404, DOI 10.1109/ICSME.2018.00050
   Derr E, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2187, DOI 10.1145/3133956.3134059
   Dodds K.C., 2015, Why semver ranges are literally the worst?
   Draper P., 2017, Package management: Stop using version ranges
   Gonzalez-Barahona J. M., 2017, IFIP Advances in Information and Communication Technology, P182
   Ihara A., 2017, Understanding when to adopt a library: A case study on ASF projects, P128
   Kikas R, 2017, IEEE WORK CONF MIN S, P102, DOI 10.1109/MSR.2017.55
   Kula R. G., 2017, EMPIRICAL SOFTW ENG, V23, P1
   Kula RG, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P407, DOI 10.1109/SANER.2017.7884643
   Kula RG, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P520, DOI 10.1109/SANER.2015.7081869
   LIM WC, 1994, IEEE SOFTWARE, V11, P23, DOI 10.1109/52.311048
   Manikas K, 2013, J SYST SOFTWARE, V86, P1294, DOI 10.1016/j.jss.2012.12.026
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Mezzetti G., 2018, 32 EUR C OBJ OR PROG
   Mileva YM, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P57
   Mirhosseini S, 2017, IEEE INT CONF AUTOM, P84, DOI 10.1109/ASE.2017.8115621
   Robbes R., 2012, P ACM SIGSOFT 20 INT, P1, DOI 10.1145/2393596.2393662
   Romano J., 2006, ANN M FLORIDA ASS IN
   Ruiz IJM, 2016, IEEE SOFTWARE, V33, P74, DOI 10.1109/MS.2014.81
   Salza P, 2018, INT C PROGRAM COMPRE, P255, DOI 10.1145/3196321.3196341
   Serebrenik A., 2015, Proceedings of the 2015 European Conference on Software Architecture Workshops, P40
   Shihab E., 2011, Proceedings of the ACM SIGSOFT symposium and the European Conference on Foundations of Software Engineering, P300
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Swanson E. B., 1976, 2nd International Conference on Software Engineering, P492
   Wittern E, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P351, DOI [10.1145/2901739.2901743, 10.1109/MSR.2016.043]
   Zapata RE, 2018, PROC IEEE INT CONF S, P559, DOI 10.1109/ICSME.2018.00067
   Zerouali A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2157
   Zerouali A, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P491, DOI [10.1109/saner.2019.8668013, 10.1109/SANER.2019.8668013]
   Zerouali A, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P619, DOI [10.1109/saner.2019.8667984, 10.1109/SANER.2019.8667984]
NR 40
TC 25
Z9 27
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2021
VL 47
IS 11
BP 2457
EP 2470
DI 10.1109/TSE.2019.2952130
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WW2QE
UT WOS:000717767100009
DA 2024-07-18
ER

PT J
AU Wang, HJ
   Lin, Y
   Yang, ZJ
   Sun, J
   Liu, Y
   Dong, JS
   Zheng, QH
   Liu, T
AF Wang, Haijun
   Lin, Yun
   Yang, Zijiang
   Sun, Jun
   Liu, Yang
   Dong, Jinsong
   Zheng, Qinghua
   Liu, Ting
TI Explaining Regressions via Alignment Slicing and Mending
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Semantics; Debugging; Java; Software; Runtime; Task
   analysis; Regression bug; trace alignment; alignment slicing and
   mending; fault localization
ID IMPACT ANALYSIS
AB Regression faults, which make working code stop functioning, are often introduced when developers make changes to the software. Many regression fault localization techniques have been proposed. However, issues like inaccuracy and lack of explanation are still obstacles for their practical application. In this work, we propose a trace-based approach to identifying not only where the root cause of a regression bug lies, but also how the defect is propagated to its manifestation as the explanation. In our approach, we keep the trace of original correct version as reference and infer the faulty steps on the trace of regression version so that we can build a causality graph of how the defect is propagated. To this end, we overcomes two technical challenges. First, we align two traces derived from two program versions by extending state-of-the-art trace alignment technique for regression fault with novel relaxation technique. Second, we construct causality graph (i.e., explanation) by adopting a technique called alignment slicing and mending to isolate the failure-inducing changes and explain the failure. Our comparative experiment with the state-of-the-art techniques including dynamic slicing, delta-debugging, and symbolic execution on 24 real-world regressions shows that (1) our approach is more accurate on isolating the failure-inducing changes, (2) the generated explanation requires acceptable manual effort to inspect, and (3) our approach requires lower runtime overhead. In addition, we also conduct an applicability experiment based on Defects4J bug repository, showing the potential limitations of our trace-based approach and providing guidance for its practical use.
C1 [Wang, Haijun] Ant Financial Serv Grp, Hangzhou, Peoples R China.
   [Lin, Yun] Natl Univ Singapore, Sch Comp, Singapore 119077, Singapore.
   [Yang, Zijiang] Western Michigan Univ, Comp Sci, Kalamazoo, MI 49008 USA.
   [Sun, Jun] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
   [Liu, Yang] Nanyang Technol Univ, Sch Comp Engn, Singapore 639798, Singapore.
   [Dong, Jinsong] Natl Univ Singapore, Dept Comp Sci, Singapore, Singapore.
   [Zheng, Qinghua] Xi An Jiao Tong Univ, Dept Comp Sci & Technol, Xian 710049, Shaanxi, Peoples R China.
   [Liu, Ting] Syst Engn Inst, Dept Control, Xian 710049, Shaanxi, Peoples R China.
C3 National University of Singapore; Western Michigan University; Singapore
   Management University; Nanyang Technological University; National
   University of Singapore; Xi'an Jiaotong University
RP Lin, Y (corresponding author), Natl Univ Singapore, Sch Comp, Singapore 119077, Singapore.
EM haijun.wang@ntu.edu.sg; llmhyy@gmail.com; zijiang.yang@wmich.edu;
   sunjun@sutd.edu.sg; yangliu@ntu.edu.sg; dongjs@comp.nus.edu.sg;
   qhzheng@mail.xjtu.edu.cn; tingliu@mail.xjtu.edu.cn
RI Liu, Yang/HNJ-6693-2023; LIU, YANG/HWQ-4615-2023; Zhao,
   Chunxia/KBB-4190-2024; liu, yang/HIU-0559-2022; liu, yang/HQY-7531-2023;
   Liu, Chenyu/KBQ-8899-2024; yang, liu/HTN-9175-2023; yang,
   liu/GVU-8760-2022; liu, yang/HHY-8583-2022; li, jing/KHY-5337-2024; Liu,
   Yang/D-2306-2013
OI Liu, Yang/0000-0001-7300-9215; Liu, Ting/0000-0002-7600-0934
FU Ant Financial Services Group through Ant Financial Research Program; US
   National Research Foundation, Prime Ministers Office, Singapore, under
   its Corporate Laboratory@University Scheme, National University of
   Singapore; Singapore Telecommunications Ltd.; Singapore Ministry of
   Education (MOE) Academic Research Fund (AcRF) Tier 2 Grant; National
   Cybersecurity RD Directorate; National Natural Science Foundation of
   China [61632015, 61721002, U1766215, 61833015]; National Satellite of
   Excellence in Trustworthy Software Systems - NRF Singapore under
   National Cybersecurity R&D (NCR) programme; National Key R&D Program of
   China [2016YFB1000903]; US National Research Foundation, Prime Ministers
   Office, Singapore, under its National Cybersecurity RD Program
   [NRF2014NCR-NCR001-30]
FX We would like to thank anonymous reviewers for improving this
   manuscript. This research has been partially supported by Ant Financial
   Services Group through Ant Financial Research Program, the US National
   Research Foundation, Prime Ministers Office, Singapore, under its
   Corporate Laboratory@University Scheme, National University of Singapore
   and under its National Cybersecurity R&D Program (Award No.
   NRF2014NCR-NCR001-30), Singapore Telecommunications Ltd., the Singapore
   Ministry of Education (MOE) Academic Research Fund (AcRF) Tier 2 Grant,
   the National Cybersecurity R&D Directorate, the National Satellite of
   Excellence in Trustworthy Software Systems funded by NRF Singapore under
   National Cybersecurity R&D (NCR) programme, National Key R&D Program of
   China under Grant No (2016YFB1000903), and National Natural Science
   Foundation of China under Grants (61632015, 61721002, U1766215,
   61833015). Yun Lin has equal contribution with the first author to this
   work.
CR Acharya M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P746, DOI 10.1145/1985793.1985898
   Agrawal H., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P348, DOI 10.1109/ICSM.1993.366927
   Ahn DH, 2009, PROCEEDINGS OF THE CONFERENCE ON HIGH PERFORMANCE COMPUTING NETWORKING, STORAGE AND ANALYSIS
   Anand S, 2007, LECT NOTES COMPUT SC, V4424, P134
   [Anonymous], 2014, SER ISSTA 2014
   Arnold Robert S., 1996, SOFTWARE CHANGE IMPA
   Artho Cyrille, 2011, International Journal on Software Tools for Technology Transfer, V13, P223, DOI 10.1007/s10009-010-0139-9
   B_ohme M., 2014, INT S SOFTWARE TESTI, P105
   Backes John, 2013, Model Checking Software. 20th International Symposium, SPIN 2013. Proceedings, P99, DOI 10.1007/978-3-642-39176-7_7
   Banerjee Ansuman., 2010, P 18 ACM SIGSOFT INT, P177
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cottrell Rylan., 2007, P JOINT M EUROPEAN S, P165
   Geldenhuys Jaco, 2012, P 2012 INT S SOFTWAR, P166, DOI DOI 10.1145/2338965.2336773
   Gyimóthy T, 1999, LECT NOTES COMPUT SC, V1687, P303, DOI 10.1145/318774.319248
   Johnson NM, 2011, P IEEE S SECUR PRIV, P347, DOI 10.1109/SP.2011.41
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kargén U, 2017, IEEE INT CONF AUTOM, P342, DOI 10.1109/ASE.2017.8115647
   Kim D, 2016, ACM SIGPLAN NOTICES, V51, P311, DOI 10.1145/3022671.2984031
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Li Y, 2015, IEEE INT CONF AUTOM, P686, DOI 10.1109/ASE.2015.47
   Lin Y, 2018, IEEE INT CONF AUTOM, P509, DOI 10.1145/3238147.3238163
   Lin Y, 2017, PROC INT CONF SOFTW, P393, DOI 10.1109/ICSE.2017.43
   Lin Y, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P164, DOI 10.1145/2568225.2568298
   Lin Y, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P520, DOI 10.1145/2786805.2786871
   Lu YF, 2016, PROC INT CONF SOFTW, P535, DOI 10.1145/2884781.2884874
   Meinicke J., 2018, ABS180703837 CORR
   Misherghi G., 2006, 28th International Conference on Software Engineering Proceedings, P142, DOI 10.1145/1134285.1134307
   Orso A, 2004, PROC INT CONF SOFTW, P491, DOI 10.1109/ICSE.2004.1317471
   Qi DW, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2211616.2211622
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Saha RK, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P268, DOI 10.1109/ICSE.2015.47
   Sridharan M, 2007, ACM SIGPLAN NOTICES, V42, P112, DOI 10.1145/1273442.1250748
   Sumner WN, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P272, DOI 10.1109/ICSE.2013.6606573
   Sumner WN, 2013, IEEE INT CONF AUTOM, P81, DOI 10.1109/ASE.2013.6693069
   Terragni V, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P246, DOI 10.1109/ICSE.2015.45
   Wang HJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P718, DOI 10.1145/3338906.3338966
   Weeratunge D., 2010, Proceedings of the 19th international symposium on Software testing and analysis, ISSTA'10, P253, DOI DOI 10.1145/1831708.1831740
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Xin B, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P238, DOI 10.1145/1375581.1375611
   Yang GW, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2629536
   Yi QP, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P257, DOI 10.1109/ICSE.2015.46
   Yu K, 2012, IEEE INT CONF AUTOM, P20, DOI 10.1145/2351676.2351681
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
   Zhang XY, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P415, DOI 10.1145/1250734.1250782
   Zhang ZG, 2003, PROC INT CONF SOFTW, P319
NR 47
TC 9
Z9 9
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2021
VL 47
IS 11
BP 2421
EP 2437
DI 10.1109/TSE.2019.2949568
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WW2QE
UT WOS:000717767100007
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Yu, Z
   Theisen, C
   Williams, L
   Menzies, T
AF Yu, Zhe
   Theisen, Christopher
   Williams, Laurie
   Menzies, Tim
TI Improving Vulnerability Inspection Efficiency Using Active Learning
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Inspection; Software; Tools; Security; Predictive models; Error
   correction; NIST; Active learning; security; vulnerabilities; software
   engineering; error correction
AB Software engineers can find vulnerabilities with less effort if they are directed towards code that might contain more vulnerabilities. HARMLESS is an incremental support vector machine tool that builds a vulnerability prediction model from the source code inspected to date, then suggests what source code files should be inspected next. In this way, HARMLESS can reduce the time and effort required to achieve some desired level of recall for finding vulnerabilities. The tool also provides feedback on when to stop (at that desired level of recall) while at the same time, correcting human errors by double-checking suspicious files. This paper evaluates HARMLESS on Mozilla Firefox vulnerability data. HARMLESS found 80, 90, 95, 99 percent of the vulnerabilities by inspecting 10, 16, 20, 34 percent of the source code files. When targeting 90, 95, 99 percent recall, HARMLESS could stop after inspecting 23, 30, 47 percent of the source code files. Even when human reviewers fail to identify half of the vulnerabilities (50 percent false negative rate), HARMLESS could detect 96 percent of the missing vulnerabilities by double-checking half of the inspected files. Our results serve to highlight the very steep cost of protecting software from vulnerabilities (in our case study that cost is, for example, the human effort of inspecting 28,750 x 20% = 5,750 source code files to identify 95 percent of the vulnerabilities). While this result could benefit the mission-critical projects where human resources are available for inspecting thousands of source code files, the research challenge for future work is how to further reduce that cost. The conclusion of this paper discusses various ways that goal might be achieved.
C1 [Yu, Zhe; Williams, Laurie; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
   [Theisen, Christopher] Microsoft, Seattle, WA 98105 USA.
C3 North Carolina State University; Microsoft
RP Menzies, T (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM zyu9@ncsu.edu; theisen.cr@gmail.com; lawilli3@ncsu.edu; timm@ieee.org
RI Menzies, Tim/X-7680-2019
OI Menzies, Tim/0000-0002-5040-3196; Williams, Laurie/0000-0003-3300-6540;
   Yu, Zhe/0000-0002-6841-1725
FU National Science Foundation [1506586, 1909516]; Division of Computing
   and Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1506586, 1909516] Funding Source: National Science Foundation
FX This work was partially funded by a National Science Foundation Grant
   #1506586 and #1909516. The authors would like to thank the Mozilla
   Firefox team for making crash and defect data available to the public,
   which makes this research possible.
CR [Anonymous], 2006, P ACMSIGKDD INT C KN
   [Anonymous], 2017, Mozilla Foundation Security Advisories
   Black P. E., 2016, NAT I STANDARDS TECH
   Breiman L., 2001, Mach. Learn., V45, P5
   Chapelle O., 2006, SEMISUPERVISED LEARN
   Chowdhury I, 2011, J SYST ARCHITECT, V57, P294, DOI 10.1016/j.sysarc.2010.06.003
   Cormack GV, 2018, PROCEEDINGS OF THE ACM SYMPOSIUM ON DOCUMENT ENGINEERING (DOCENG 2018), DOI 10.1145/3209280.3232788
   Cormack GV, 2017, SIGIR'17: PROCEEDINGS OF THE 40TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P5, DOI 10.1145/3077136.3080812
   Cormack GV, 2014, SIGIR'14: PROCEEDINGS OF THE 37TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P153, DOI 10.1145/2600428.2609601
   Cormack GV, 2016, SIGIR'16: PROCEEDINGS OF THE 39TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P75, DOI 10.1145/2911451.2911510
   Cormack GV, 2016, CIKM'16: PROCEEDINGS OF THE 2016 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P1039, DOI 10.1145/2983323.2983776
   Cormack Gordon V, 2015, ARXIV150406868
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Gegick M, 2009, LECT NOTES COMPUT SC, V5429, P135
   Gieseke Fabian, 2012, Proceedings of the 1st International Conference on Pattern Recognition Applications and Methods. ICPRAM 2012, P45
   Gieseke F, 2014, NEUROCOMPUTING, V123, P23, DOI 10.1016/j.neucom.2012.12.056
   Grossman M.R., 2013, Federal Courts Law Review, V7, P1
   Grossman M. R., 2016, P TREC
   Hatton L, 2008, IEEE SOFTWARE, V25, P82, DOI 10.1109/MS.2008.100
   Hovsepyan Aram, 2014, International Journal of Secure Software Engineering, V5, P16, DOI 10.4018/ijsse.2014070102
   Krishna R, 2016, 2016 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON BIG DATA SOFTWARE ENGINEERING (BIGDSE 2016), P65, DOI [10.1109/BIGDSE.2016.019, 10.1145/2896825.2896836]
   Le Trung, 2016, P 32 C UNC ART INT, P377
   Lewis N., 2005, COMMON VULNERABILITI
   Meng QK, 2016, 2016 9TH INTERNATIONAL CONGRESS ON IMAGE AND SIGNAL PROCESSING, BIOMEDICAL ENGINEERING AND INFORMATICS (CISP-BMEI 2016), P1959, DOI 10.1109/CISP-BMEI.2016.7853039
   Miwa M, 2014, J BIOMED INFORM, V51, P242, DOI 10.1016/j.jbi.2014.06.005
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Nguyen V. H., 2010, COMP COMM TECHN RES, P1
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Settles B., 2012, Active Learning, V6, P1, DOI DOI 10.1007/978-3-031-01560-1
   Shin Y., 2008, WORKSHOP QUALITY PRO, P47
   Shin Y, 2013, EMPIR SOFTW ENG, V18, P25, DOI 10.1007/s10664-011-9190-8
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Slaughter SA, 1998, COMMUN ACM, V41, P67, DOI 10.1145/280324.280335
   Theisen C., 2017, P INT WORKSH SEC SOF
   Theisen C., 2015, P INT C SOFTW TEST V
   Theisen C, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P273, DOI 10.1109/ICSE-SEIP.2017.9
   Theisen C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P199, DOI 10.1109/ICSE.2015.148
   Trautman L., 2015, Journal of Law, Technology and Policy, P341
   Walden J, 2014, PROC INT SYMP SOFTW, P23, DOI 10.1109/ISSRE.2014.32
   Wallace B. C., 2011, Proceedings of the SIAM International Conference on Data Mining, SDM '11, P176
   Wallace B. C., 2013, P KDD WORKSH DAT MIN
   Wallace BC, 2012, IEEE DATA MINING, P695, DOI 10.1109/ICDM.2012.115
   Wallace BC, 2010, BMC BIOINFORMATICS, V11, DOI 10.1186/1471-2105-11-55
   Wallace Byron C., 2010, P 16 ACM SIGKDD INT, P173, DOI DOI 10.1145/1835804.1835829
   Yu Z, 2019, EXPERT SYST APPL, V120, P57, DOI 10.1016/j.eswa.2018.11.021
   Yu Z, 2018, EMPIR SOFTW ENG, V23, P3161, DOI 10.1007/s10664-017-9587-0
   Zelkowitz MV, 2001, PROC INT CONF SOFTW, P349, DOI 10.1109/ICSE.2001.919108
   Zhu X.J., 2005, Semi-Supervised Learning Literature Survey
   Zimmermann Thomas, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P421, DOI 10.1109/ICST.2010.32
NR 50
TC 25
Z9 26
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2021
VL 47
IS 11
BP 2401
EP 2420
DI 10.1109/TSE.2019.2949275
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WW2QE
UT WOS:000717767100006
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Jahangirova, G
   Clark, D
   Harman, M
   Tonella, P
AF Jahangirova, Gunel
   Clark, David
   Harman, Mark
   Tonella, Paolo
TI An Empirical Validation of Oracle Improvement
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tools; Standards; Generators; Indexes; Software testing; Software;
   Oracle problem; test oracle; oracle assessment; oracle improvement;
   human study; test case generation; mutation testing
AB We propose a human-in-the-loop approach for oracle improvement and analyse whether the proposed oracle improvement process is helping developers to create better oracles. For this, we conducted two human studies with 68 participants overall: an oracle assessment study and an oracle improvement study. Our results show that developers exhibit poor performance (29 percent accuracy) when manually assessing whether an assertion oracle contains a false positive, a false negative or none of the two. This shows that automated detection of these oracle deficiencies is beneficial for the users. Our tool OASIs (Oracle ASsessment and Improvement) helps developers produce assertions with higher quality. Participants who used OASIs in the improvement study were able to achieve 33 percent of full and 67 percent of partial correctness as opposed to participants without the tool who achieved only 21 percent of full and 43 percent of partial correctness.
C1 [Jahangirova, Gunel] Fdn Bruno Kessler, I-38122 Trento, Italy.
   [Jahangirova, Gunel; Clark, David; Harman, Mark] UCL, London WC1E 6BT, England.
   [Harman, Mark] Facebook, Menlo Pk, CA USA.
   [Tonella, Paolo] Univ Svizzera Italiana USI, CH-6900 Lugano, Switzerland.
C3 Fondazione Bruno Kessler; University of London; University College
   London; Facebook Inc; Universita della Svizzera Italiana
RP Jahangirova, G (corresponding author), Fdn Bruno Kessler, I-38122 Trento, Italy.; Jahangirova, G (corresponding author), UCL, London WC1E 6BT, England.
EM g.jahangirova@gmail.com; david.clark@ucl.ac.uk; mark.harman@ucl.ac.uk;
   paolo.tonella@usi.ch
RI ; Tonella, Paolo/C-1702-2015
OI Clark, David/0000-0002-7004-934X; Tonella, Paolo/0000-0003-3088-0339
FU ERC Advanced project Precrime [787703]; UKRI EPSRC project InfoTestSS
   [EP/P005888/1]; European Research Council (ERC) [787703] Funding Source:
   European Research Council (ERC); EPSRC [EP/P005888/1] Funding Source:
   UKRI
FX This work was partially supported by the ERC Advanced project Precrime
   (ERC Grant Agreement n. 787703) and the UKRI EPSRC project InfoTestSS
   (EP/P005888/1)
CR Androutsopoulos K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P573, DOI 10.1145/2568225.2568314
   [Anonymous], 2014, P 2014 INT S SOFTW T, DOI DOI 10.1145/2610384.2610389
   [Anonymous], 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, ISSTA'11
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   BESCHASTNIKH I., 2011, P 19 ACM SIGSOFT S 1, P267, DOI DOI 10.1145/2025113.2025151
   Binkley D, 2015, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2015.7335396
   Blasi A, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P242, DOI 10.1145/3213846.3213872
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Daka E, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P107, DOI 10.1145/2786805.2786838
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Fraser G., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P31, DOI 10.1109/QSIC.2011.19
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Goffi A., 2016, P 25 INT S SOFTW TES, P213, DOI DOI 10.1145/2931037.2931061
   Harman M, 2004, IEEE T SOFTWARE ENG, V30, P3, DOI 10.1109/TSE.2004.1265732
   Harman M., 2009, TR0903 KINGS COLL LO
   Hicklin J., 2000, JAMA JAVA MATRIX PAC
   Huo C, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P621, DOI 10.1145/2635868.2635917
   Jahangirova G., 2016, INT S SOFTWARE TESTI, P247
   Jahangirova G, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P368, DOI 10.1145/3213846.3229503
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jiang Y, 2015, 2015 INTERNATIONAL SYMPOSIUM ON BIOELECTRONICS AND BIOINFORMATICS (ISBB), P1, DOI 10.1109/ISBB.2015.7344908
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Loyola P., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P193
   Mariani Leonardo, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P117, DOI 10.1109/ISSRE.2008.48
   Math4J, 2005, JAV NUM PACK
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Nimmer J. W., 2002, Software Engineering Notes, V27, P232, DOI 10.1145/566171.566213
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Panichella S, 2016, PROC INT CONF SOFTW, P547, DOI 10.1145/2884781.2884847
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pastore F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P66, DOI 10.1109/ICSE.2015.29
   Pastore F, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P342, DOI 10.1109/ICST.2013.13
   Peters DK, 1998, IEEE T SOFTWARE ENG, V24, P161, DOI 10.1109/32.667877
   Schuler D., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P90, DOI 10.1109/ICST.2011.32
   Staats M., 2012, P 2012 INT S SOFTW T, P188, DOI [DOI 10.1145/2338965.2336776, 10.1145/2338965.2336776]
   Staats M, 2012, PROC INT CONF SOFTW, P870, DOI 10.1109/ICSE.2012.6227132
   Staats M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P391, DOI 10.1145/1985793.1985847
   Tao YD, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P64, DOI 10.1145/2635868.2635873
   Tonella P, 2013, 2013 8TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST (AST), P75, DOI 10.1109/IWAST.2013.6595795
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   WONG WE, 1995, J SYST SOFTWARE, V31, P185, DOI 10.1016/0164-1212(94)00098-0
NR 45
TC 6
Z9 7
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2021
VL 47
IS 8
BP 1708
EP 1728
DI 10.1109/TSE.2019.2934409
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA TZ7YH
UT WOS:000684687400011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kapitsaki, GM
   Charalambous, G
AF Kapitsaki, Georgia M.
   Charalambous, Georgia
TI Modeling and Recommending Open Source Licenses with findOSSLicense
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Licenses; Task analysis; Encoding; Analytical models; Open source
   software; Law; Open source software; recommender systems; software
   reusability; software tools
ID OPEN SOURCE SOFTWARE
AB Open source software is widely used in the software industry and the academia. Licenses applied to open source software provide the terms for its further use and distribution. Decisions regarding licensing for new software systems are essential for the system's future use. In this paper, we introduce findOSSLicense, a license recommender that guides users into choosing the appropriate open source license for their software under creation. We also introduce our license modeling concept that is used in the recommendation process. The license modeling captures the properties usually found in existing open source licenses following an analysis performed on license texts. The recommendation process of findOSSLicense is based on a hybrid recommender that uses constraint-based, content-based and collaborative filtering giving also space for flexibility in the use of the system by its end-users who can adapt some system properties. User input, but also external sources of information including existing open source projects, are considered for the creation of the recommendations, whereas licenses used in third party software employed in the software are examined on a limited basis. findOSSLicense has been evaluated with the participation of users of various expertise.
C1 [Kapitsaki, Georgia M.] Univ Cyprus, Dept Comp Sci, CY-1678 Nicosia, Cyprus.
   [Charalambous, Georgia] Univ Cyprus, CY-1678 Nicosia, Cyprus.
C3 University of Cyprus; University of Cyprus
RP Kapitsaki, GM (corresponding author), Univ Cyprus, Dept Comp Sci, CY-1678 Nicosia, Cyprus.
EM georgiac80@gmail.com; gkapi@cs.ucy.ac.cy
OI Kapitsaki, Georgia/0000-0003-3742-7123
CR Almeida DA, 2017, INT C PROGRAM COMPRE, P1, DOI 10.1109/ICPC.2017.7
   Alspaugh TA, 2010, J ASSOC INF SYST, V11, P730
   Alspaugh TA, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P24, DOI 10.1109/RE.2009.22
   [Anonymous], 2009, P 3 ACM C REC SYST A, DOI DOI 10.1145/1639714.1639720
   [Anonymous], 2010, DIALECTICS DIALOGUE
   Bangor A, 2009, J USABILITY STUD, V4, P114
   Bavota G, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P399, DOI 10.1109/CSMR-WCRE.2014.6747204
   Bayerl PS, 2011, COMPUT LINGUIST, V37, P699, DOI 10.1162/COLI_a_00074
   Brooke J., 1996, USABILITY EVALUATION, P189, DOI DOI 10.1201/9781498710411-35
   Cairney J, 2015, HLTH MEASUREMENT SCA, DOI DOI 10.1093/MED/9780199685219.001.0001
   Di Penta Massimiliano, 2010, P 32 ACMIEEE INT C S, P145, DOI [10.1145/1806799.1806824, DOI 10.1145/1806799.1806824]
   Felfernig A, 2011, RECOMMENDER SYSTEMS HANDBOOK, P187, DOI 10.1007/978-0-387-85820-3_6
   Foukarakis I.E., 2012, SEKE, P200
   German DM, 2012, IEEE SOFTWARE, V29, P58, DOI 10.1109/MS.2012.50
   German DM, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P81, DOI 10.1109/MSR.2009.5069483
   German DM, 2009, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE.2009.5070520
   German Daniel M., 2010, P 25 IEEE ACM INT C, P437, DOI [10.1145/1858996.1859088, DOI 10.1145/1858996.1859088]
   Gobeille R, 2008, P 2008 INT WORK C MI, P47, DOI DOI 10.1145/1370750.1370763
   Gomulkiewicz R.W., 2003, George Mason Law Review, V12, P687
   Gordon T., 2010, QUALIPSO, V79, P1
   Gordon T. F., 2014, COMPUT MODELS ARGUME, V266
   Gordon T. F., 2011, P 13 INT C ART INT L, P51
   Hammouda I, 2010, P 14 INT AC MINDTR C, P207
   Hemel A., 2011, P 8 WORK C MIN SOFTW, P63
   Kapitsaki Georgia M., 2014, Software Reuse for Dynamic Systems in the Cloud and Beyond 14th International Conference on Software Reuse, ICSR 2015. Proceedings: LNCS 8919, P90, DOI 10.1007/978-3-319-14130-5_7
   Kapitsaki GM, 2017, ASIA PAC SOFWR ENG, P540, DOI 10.1109/APSEC.2017.62
   Kapitsaki GM, 2017, J SYST SOFTWARE, V131, P386, DOI 10.1016/j.jss.2016.06.064
   Kapitsaki GM, 2016, ASIA PAC SOFWR ENG, P1, DOI [10.1109/APSEC.2016.012, 10.1109/APSEC.2016.20]
   Kapitsaki GM, 2015, J SYST SOFTWARE, V102, P72, DOI 10.1016/j.jss.2014.12.050
   Kohavi R., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1137
   Manabe Y, 2010, P JOINT ERCIM WORKSH, P83
   Mancinelli F, 2006, IEEE INT CONF AUTOM, P199
   McAlister N., 2013, REGISTER
   Mlouki O, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P382, DOI 10.1109/SANER.2016.73
   Paschalides D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1047, DOI 10.1145/2950290.2983939
   Scacchi W, 2012, J SYST SOFTWARE, V85, P1479, DOI 10.1016/j.jss.2012.03.033
   Shah A, 2016, TECHNOL INNOV MANAG, P28
   Shani G, 2011, RECOMMENDER SYSTEMS HANDBOOK, P257, DOI 10.1007/978-0-387-85820-3_8
   Sojer M, 2010, J ASSOC INF SYST, V11, P868
   Steinbach M., 2000, KDD WORKSH TEXT MIN, P525
   Synodinou T., 2016, Free and Open-source Software (FOSS) and other Alternative License Models, P129, DOI DOI 10.1007/978-3-319-21560-0_5
   ThomasF Gordon, 2013, P 14 INT C ART INT L, P243, DOI DOI 10.1145/2514601.2514637
   Tinsley H.E. A., 2000, Handbook of Applied Multivariate Statistics and Mathematical Modeling, P95, DOI 10.1016/B978-012691360-6/50005-7
   Tuunanen T, 2009, AUTOMAT SOFTW ENG, V16, P455, DOI 10.1007/s10515-009-0054-z
   vander Burg S., 2014, P 29 ACM IEEE INT C, P731, DOI [10.1145/2642937.2643013, DOI 10.1145/2642937.2643013]
   Vendome C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P268, DOI 10.1145/3180155.3180221
   Vendome C, 2017, EMPIR SOFTW ENG, V22, P1537, DOI 10.1007/s10664-016-9438-4
   Vendome C, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P811, DOI 10.1145/2889160.2889259
   Vendome C, 2015, PROC IEEE INT CONF S, P31, DOI 10.1109/ICSM.2015.7332449
   Wheeler D. A., 2007, FREE LIBREOPEN SOURC
   Wu YH, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P324, DOI 10.1109/MSR.2015.37
   Xu HongBo, 2010, PROCEDDINGS 2010 INT, P1
   Yin R.K., 2014, Applications of case study research, V2nd
   Zanker M, 2010, CONSTRAINTS, V15, P574, DOI 10.1007/s10601-010-9098-8
NR 54
TC 8
Z9 10
U1 2
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2021
VL 47
IS 5
BP 919
EP 935
DI 10.1109/TSE.2019.2909021
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SC1RN
UT WOS:000650457700004
DA 2024-07-18
ER

PT J
AU Uddin, G
   Baysal, O
   Guerrouj, L
   Khomh, F
AF Uddin, Gias
   Baysal, Olga
   Guerrouj, Latifa
   Khomh, Foutse
TI Understanding How and Why Developers Seek and Analyze API-Related
   Opinions
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tools; Documentation; Task analysis; Java; Data mining; Open source
   software; Opinion mining; API informal documentation; opinion summaries;
   survey; opinion quality; developer&#8217; s perception
ID AGREEMENT
AB With the advent and proliferation of online developer forums as informal documentation, developers often share their opinions about the APIs they use. Thus, opinions of others often shape the developer's perception and decisions related to software development. For example, the choice of an API or how to reuse the functionality the API offers are, to a considerable degree, conditioned upon what other developers think about the API. While many developers refer to and rely on such opinion-rich information about APIs, we found little research that investigates the use and benefits of public opinions. To understand how developers seek and evaluate API opinions, we conducted two surveys involving a total of 178 software developers. We analyzed the data in two dimensions, each corresponding to specific needs related to API reviews: (1) Needs for seeking API reviews, and (2) Needs for automated tool support to assess the reviews. We observed that developers seek API reviews and often have to summarize those for diverse development needs (e.g., API suitability). Developers also make conscious efforts to judge the trustworthiness of the provided opinions and believe that automated tool support for API reviews analysis can assist in diverse development scenarios, including, for example, saving time in API selection as well as making informed decisions on a particular API features.
C1 [Uddin, Gias] Bank Canada, Ottawa, ON K1A 0H9, Canada.
   [Baysal, Olga] Carleton Univ, Sch Comp Sci, Ottawa, ON K1S 5B6, Canada.
   [Guerrouj, Latifa] Ecole Technol Super, Dept LOG & TI, Montreal, PQ H3C 1K3, Canada.
   [Khomh, Foutse] Polytech Montreal, SWAT Lab, Montreal, PQ H3T 1J4, Canada.
C3 Bank of Canada; Carleton University; University of Quebec; Ecole de
   Technologie Superieure - Canada; Universite de Montreal; Polytechnique
   Montreal
RP Uddin, G (corresponding author), Bank Canada, Ottawa, ON K1A 0H9, Canada.
EM gias.uddin@mail.mcgill.ca; olga.baysal@carleton.ca;
   Latifa.Guerrouj@etsmtl.ca; foutse.khomh@polymtl.ca
CR Anderson A, 2013, P 22 INT C WORLD WID, DOI DOI 10.1145/2488388.2488398
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], 2011, Comprehensive review of opinion summarization
   [Anonymous], 2013, Finding Source Code on the Web for Remix and Reuse, DOI DOI 10.1007/978-1-4614-6596-6_15
   [Anonymous], 2013, Picking the best intercoder reliability statistic for your digital activism content analysis
   [Anonymous], QUALITATIVE DATA ANA
   [Anonymous], 2009, P 12 C EUROPEAN CHAP
   [Anonymous], 2014, Proceedings of the 17th ACM conference on Computer supported cooperative work social computing
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Bacchelli A., 2010, Proceedings of the 32nd International Conference on Software Engineering, P375
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bazelli B, 2013, PROC IEEE INT CONF S, P460, DOI 10.1109/ICSM.2013.72
   Bird C., 2012, PROC ACM SIGSOFT 20
   Blair-Goldensohn S., 2008, P WWW WORKSH NLP INF
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   C. T. Commission, 2017, CAN ANT LEG
   Cai I, 2000, THESIS U ILLINOIS UR
   Calefato F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P430, DOI 10.1109/MSR.2015.56
   Carroll J. M., 1987, Human-Computer Interaction, V3, P123, DOI 10.1207/s15327051hci0302_2
   Chandra S, 2013, PROCEEDINGS OF 2013 INTERNATIONAL CONFERENCE ON CIRCUITS, POWER AND COMPUTING TECHNOLOGIES (ICCPCT 2013), P494
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Correa D, 2014, P 21 ASIA PACIFIC SO
   Correa D, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P631, DOI 10.1145/2566486.2568036
   Dagenais B, P 18 INT S FDN SOFT, P127
   Dagenais B, 2012, PROC INT CONF SOFTW, P47, DOI 10.1109/ICSE.2012.6227207
   Dictionary.com, 2016, OPINION
   Duala-Ekoko E, 2011, LECT NOTES COMPUT SC, V6813, P79, DOI 10.1007/978-3-642-22655-7_5
   Duala-Ekoko E, 2012, PROC INT CONF SOFTW, P266, DOI 10.1109/ICSE.2012.6227187
   Edwards P, 2002, BRIT MED J, V324, P1183, DOI 10.1136/bmj.324.7347.1183
   FasterXML, 2013, JACKS
   Fincher S, 2005, EXPERT SYST, V22, P89, DOI 10.1111/j.1468-0394.2005.00299.x
   Freelon D., 2016, RECAL2 RELIABILITY 2
   Ginsca AL, 2013, P 2013 WORKSH DAT DR, P25, DOI [10.1145/2513577.2513579, DOI 10.1145/2513577.2513579]
   Google, 2016, GSON
   Guerrouj L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P639, DOI 10.1109/ICSE.2015.212
   Guerrouj L, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P321, DOI 10.1109/SANER.2015.7081842
   Guzman E., 2014, Association for Computing Machinery, P352
   Guzman E, 2013, P 2013 9 JOINT M FDN, P671, DOI 10.1145/2491411.2494578
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Holmes R, 2006, IEEE T SOFTWARE ENG, V32, P952, DOI 10.1109/TSE.2006.117
   Hu MQ, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P755
   JAMES JM, 1992, PUBLIC OPIN QUART, V56, P442, DOI 10.1086/269336
   Kavaler David, 2013, Social Informatics. 5th International Conference, SocInfo 2013. Proceedings: LNCS 8238, P405, DOI 10.1007/978-3-319-03260-3_35
   Kim, 2009, P 18 ACM C INF KNOWL, P385, DOI DOI 10.1145/1645953.1646004
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Krippendorff K, 2004, HUM COMMUN RES, V30, P411, DOI 10.1093/hcr/30.3.411
   Linares-Vasquez M, 2014, P 22 INT C PROGR C, P83
   Liu B, 2011, DATA CENTRIC SYST AP, P459, DOI 10.1007/978-3-642-19460-3_11
   Mäntylä M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P247, DOI [10.1109/MSR.2016.033, 10.1145/2901739.2901752]
   McBurney P. W., 2014, P 22 INT C PROGRAM C, P279
   Michail A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P167, DOI 10.1109/ICSE.2000.870408
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Murgia A., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P262
   Murphy G. C, 1996, THESIS U WASHINGTON
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Myers BA, 2016, COMMUN ACM, V59, P62, DOI 10.1145/2896587
   NISBETT RE, 1977, J PERS SOC PSYCHOL, V35, P250, DOI 10.1037//0022-3514.35.4.250
   Novielli N, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P33, DOI 10.1145/2804381.2804387
   Ortu M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P303, DOI 10.1109/MSR.2015.35
   Overflow S, 2017, SUNS DOC
   Parnin C., CROWD DOCUMENTATION, V11
   Pletea D., 2014, 11 WORKING C MSR, P348, DOI [10.1145/2597073.2597117, DOI 10.1145/2597073.2597117]
   Rastkar S, 2014, IEEE T SOFTWARE ENG, V40, P366, DOI 10.1109/TSE.2013.2297712
   Rigby PC, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P832, DOI 10.1109/ICSE.2013.6606629
   Robillard MP, 2017, PROC IEEE INT CONF S, P479, DOI 10.1109/ICSME.2017.17
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Rodeghero P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P390, DOI 10.1145/2568225.2568247
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Rosson M. B., 1990, SIGCHI Bulletin, P423
   S. Overflow,, 2018, DEV SURV RES
   Scott WA, 1955, PUBLIC OPIN QUART, V19, P321, DOI 10.1086/266577
   Sharma A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P387, DOI 10.1109/SANER.2017.7884639
   Shull F, 2000, IEEE T SOFTWARE ENG, V26, P1101, DOI 10.1109/32.881720
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Sohan SM, 2017, S VIS LANG HUM CEN C, P53, DOI 10.1109/VLHCC.2017.8103450
   Sonatype, MAV CENTR REP
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   Stylos J., 2009, THESIS CARNEGIE MELO
   Stylos J, 2007, PROC INT CONF SOFTW, P529
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Tian Y, 2017, P 21 INT C EVALUATIO, P202
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Treude C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P625, DOI 10.1145/2786805.2786827
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Uddin G., 2017, UNDERSTANDING WHY DE
   Uddin G., 2019, 41 ACM IEEE INT C SO, P2
   Uddin G., 2018, IEEE T SOFTWARE ENG
   Uddin G, 2021, IEEE T SOFTWARE ENG, V47, P522, DOI 10.1109/TSE.2019.2900245
   Uddin G, 2017, IEEE INT CONF AUTOM, P159, DOI 10.1109/ASE.2017.8115629
   Uddin G, 2017, IEEE INT CONF AUTOM, P978, DOI 10.1109/ASE.2017.8115715
   Uddin G, 2015, IEEE SOFTWARE, V32, P68, DOI 10.1109/MS.2014.80
   Uddin G, 2012, PROC INT CONF SOFTW, P804, DOI 10.1109/ICSE.2012.6227138
   van der Meij H., 1992, SIGDOC '92. The 10th Annual International Conference. Conference Proceedings. Going Online. The New World of Multimedia Documentation, P7, DOI 10.1145/147001.147003
   Vasilescu B, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P188, DOI 10.1109/SocialCom.2013.35
   Viera AJ, 2005, FAM MED, V37, P360
   Wang W, 2013, IEEE WORK CONF MIN S, P61, DOI 10.1109/MSR.2013.6624006
   Warriner AB, 2013, BEHAV RES METHODS, V45, P1191, DOI 10.3758/s13428-012-0314-x
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wong E, 2013, IEEE INT CONF AUTOM, P562, DOI 10.1109/ASE.2013.6693113
   Ying ATT, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P460, DOI 10.1145/2635868.2635877
   Zhang YY, 2013, CONF PROC INT SYMP C, P142, DOI 10.1109/ICPC.2013.6613842
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 107
TC 10
Z9 10
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2021
VL 47
IS 4
BP 694
EP 735
DI 10.1109/TSE.2019.2903039
PG 42
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA RP8GH
UT WOS:000641961100002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU El-Attar, M
AF El-Attar, Mohamed
TI Empirically Evaluating the Effect of the Physics of Notations on Model
   Construction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Unified modeling language; Visualization; Physics; Semantics;
   Syntactics; Software; Software engineering; Physics of notations;
   feature diagrams; misuse case diagrams; UML statechart diagrams;
   subject-based experiment
ID COGNITIVE DIMENSIONS; SECURITY REQUIREMENTS; VISUAL NOTATIONS; SYNTAX
AB In 2009, Moody introduced nine principles for evaluating, improving and designing cognitively effective notations called the "Physics of Notations" [49] motivating many research works ever since, being cited more than 1250 times at the time of writing this paper. Many research works have adopted the nine principles of the Physics of Notations to improve existing notations or devise new notations. Modeling is a two-step process that has the goal of communicating a mental concept by a model constructor (step one) to a model reader (step two). A subset of the research works utilizing the Physics of Notations have empirically validated the cognitive effectiveness of the new notations by their readers. However, there lacks any empirical evidence that investigates the effect of using Physics of Notations-enabled notations in model construction. This is a serious matter to be investigated as naturally model construction preludes model comprehension. Poorly constructed models can at best be poorly comprehended by its readers having dire consequences in downstream development activities. This paper reports on three different experiments that use software engineering professionals as subjects. The experiments investigate the effect of using notations that adhere to the Physics if Notations principles on model construction efforts. The results do not indicate an outright advantage for model constructors who utilize Physics of Notations-enabled notations in comparison to using their original versions of these notations.
C1 [El-Attar, Mohamed] Alfaisal Univ, Riyadh 11533, Saudi Arabia.
   [El-Attar, Mohamed] Zayed Univ, Abu Dhabi, U Arab Emirates.
C3 Alfaisal University; Zayed University
RP El-Attar, M (corresponding author), Alfaisal Univ, Riyadh 11533, Saudi Arabia.; El-Attar, M (corresponding author), Zayed Univ, Abu Dhabi, U Arab Emirates.
EM mohamed.el-attar@zu.ac.ae
RI El-Attar, Mohamed/C-4329-2015
OI El-Attar, Mohamed/0000-0002-6709-8212
CR Adobe, 2019, AD CREAT CLOUD
   [Anonymous], 1999, Proceedings of the 17th International Systems Safety Conference
   [Anonymous], 2010, Business Process Model and Notation (BPMN). Version 2.0
   [Anonymous], 1996, P IFIP INT C ICT SYS
   Basin D., 2003, Proceedings 8th ACM Symposium on Access Control Models and Technologies (SACMAT '03), P100, DOI DOI 10.1145/775412.775425
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bertin J, 1983, IN PRESS
   BLACKWELL AF, 2003, HCI MODELS THEORIES, P328
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Buhr RJA, 1998, FEATURE INTERACTIONS IN TELECOMMUNICATIONS AND SOFTWARE SYSTEMS V, P135
   Ceri S, 2000, COMPUT NETW, V33, P137, DOI 10.1016/S1389-1286(00)00040-2
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cliff N, 1996, MULTIVAR BEHAV RES, V31, P331, DOI 10.1207/s15327906mbr3103_4
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Dagit J, 2006, J VISUAL LANG COMPUT, V17, P302, DOI 10.1016/j.jvlc.2006.04.006
   Dagon D, 2004, IEEE PERVAS COMPUT, V3, P11, DOI 10.1109/MPRV.2004.21
   El-Attar M, PON MODEL CONSTRUCTI
   El-Attar M, 2015, IEEE T SOFTWARE ENG, V41, P661, DOI 10.1109/TSE.2015.2396526
   Genon N, 2011, LECT NOTES COMPUT SC, V6598, P221, DOI 10.1007/978-3-642-21652-7_14
   Genon N, 2011, LECT NOTES COMPUT SC, V6563, P377, DOI 10.1007/978-3-642-19440-5_25
   Gopalakrishnan S, 2010, LECT NOTES BUS INF P, V68, P145
   Granizo-Mackenzie Delaney, 2013, Evolutionary Computation, Machine Learning and Data Mining in Bioinformatics. 11th European Conference, EvoBIO 2013. Proceedings, P1, DOI 10.1007/978-3-642-37189-9_1
   Green TRG, 2006, J VISUAL LANG COMPUT, V17, P328, DOI 10.1016/j.jvlc.2006.04.004
   Green T. R. G., 1989, People and Computers V. Proceedings of the Fifth Conference of the British Computer Society Human-Computer Interaction Specialist Group, P443
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Gregor S, 2006, MIS QUART, V30, P611
   HAREL D, 1988, COMMUN ACM, V31, P514, DOI 10.1145/42411.42414
   Herzog A, 2007, INT J INF SECUR PRIV, V1, P1, DOI 10.4018/jisp.2007100101
   Hess M. R., 2005, ANNU M AM EDUC RES, P36
   Horn Laurence R., 1984, Meaning, Form, and Use in Context: Linguistic Applications, P11, DOI DOI 10.1007/BF00631074
   ITU-T, 2013, REC 151 11 08 US REQ
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Jurjens Jan., 2004, SECURE SYSTEMS DEV U
   Kang Kyo C, 1990, Technical Report
   Karpati P, 2010, LECT NOTES COMPUT SC, V6182, P262, DOI 10.1007/978-3-642-14192-8_24
   Katta V, 2010, LECT NOTES BUS INF P, V68, P1
   Krogstie J, 2006, EUR J INFORM SYST, V15, P91, DOI 10.1057/palgrave.ejis.3000598
   Kromrey J., 2005, PROC JOINT STATIST M
   Kromrey J.D., 1998, Multiple Linear Regression Viewpoints, V25, P70
   La Rosa M, 2011, IEEE T IND INFORM, V7, P255, DOI 10.1109/TII.2011.2124467
   LARKIN JH, 1987, COGNITIVE SCI, V11, P65, DOI 10.1016/S0364-0213(87)80026-5
   Lehmann ErichL., 1998, NONPARAMETRICS STAT
   Lehtonen MO, 2007, IEEE SYST J, V1, P129, DOI 10.1109/JSYST.2007.909820
   LODDERSTEDT T, 2002, 5 INT C UN MOD LANG
   Mäder P, 2010, LECT NOTES COMPUT SC, V6394, P226
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Mendling J, 2010, INT J INF SYST MODEL, V1, P40, DOI 10.4018/jismd.2010040103
   Moody D, 2009, S VIS LANG HUM CEN C, P151, DOI 10.1109/VLHCC.2009.5295275
   Moody DL, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P171, DOI 10.1109/RE.2009.44
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Mouratidis H, 2007, INT J SOFTW ENG KNOW, V17, P285, DOI 10.1142/S0218194007003240
   Object Management Group, 2017, OMG UN MOD LANG V2 5
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Purchase H. C., 2002, Empirical Software Engineering, V7, P233, DOI 10.1023/A:1016344215610
   Purchase HC, 2004, INT J HUM-COMPUT ST, V61, P187, DOI 10.1016/j.ijhcs.2004.01.003
   Regev G, 2005, BUS PROCESS MANAG J, V11, P695, DOI 10.1108/14637150510630864
   Reijers HA, 2011, DECIS SUPPORT SYST, V51, P339, DOI 10.1016/j.dss.2010.12.013
   Reijers HA, 2011, IEEE T SYST MAN CY A, V41, P449, DOI 10.1109/TSMCA.2010.2087017
   RODGERS JL, 1988, AM STAT, V42, P59, DOI 10.2307/2685263
   Rostad L, 2006, PROC 12 INT WORK C R
   Saeed M, 2016, INFORM SOFTWARE TECH, V71, P1, DOI 10.1016/j.infsof.2015.10.012
   Saleh F, 2015, INFORM SOFTWARE TECH, V66, P73, DOI 10.1016/j.infsof.2015.05.002
   Schneier B, 1999, DR DOBBS J, V24, P21
   SHAPIRO SS, 1972, TECHNOMETRICS, V14, P355, DOI 10.2307/1267427
   Siau K, 2004, J DATABASE MANAGE, V15, P73, DOI 10.4018/jdm.2004010103
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   Sindre G, 2007, LECT NOTES COMPUT SC, V4542, P355
   Störrle H, 2013, LECT NOTES COMPUT SC, V8107, P104, DOI 10.1007/978-3-642-41533-3_7
   Symantec AndriodOS, FAKEPLAYER
   van der Linden D, 2019, IEEE T SOFTWARE ENG, V45, P736, DOI 10.1109/TSE.2018.2802910
   van der Linden D, 2019, SOFTW SYST MODEL, V18, P1813, DOI 10.1007/s10270-018-0667-4
   van der Linden D, 2017, INT REQUIR ENG CONF, P41, DOI 10.1109/RE.2017.37
   van der Linden D, 2016, LECT NOTES BUS INF P, V248, P448, DOI 10.1007/978-3-319-39429-9_28
   van Lamsweerde A, 2004, PROC INT CONF SOFTW, P148, DOI 10.1109/ICSE.2004.1317437
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yu E., 2010, SOCIAL MODELING REQU
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
   ZHANG JJ, 1994, COGNITIVE SCI, V18, P87, DOI 10.1207/s15516709cog1801_3
NR 80
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 18
PY 2021
VL 48
IS 7
BP 2455
EP 2475
DI 10.1109/TSE.2021.3060344
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5YW
UT WOS:000825973200002
DA 2024-07-18
ER

PT J
AU Garcia, J
   Kouroshfar, E
   Ghorbani, N
   Malek, S
AF Garcia, Joshua
   Kouroshfar, Ehsan
   Ghorbani, Negar
   Malek, Sam
TI Forecasting Architectural Decay From Evolutionary History
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Measurement; Predictive models; Software; Computer architecture;
   Maintenance engineering; Semantics; Software systems; Software
   architecture; prediction model; architectural smell; architectural decay
ID SOFTWARE; MODULARIZATION; DESIGN; MODELS; IMPACT; FAULTS
AB As a software system evolves, its architecture tends to decay, leading to the occurrence of architectural elements that become resistant to maintenance or prone to defects. To address this problem, engineers can significantly benefit from determining which architectural elements will decay before that decay actually occurs. Forecasting decay allows engineers to take steps to prevent decay, such as focusing maintenance resources on the architectural elements most likely to decay. To that end, we construct novel models that predict the quality of an architectural element by utilizing multiple architectural views (both structural and semantic) and architectural metrics as features for prediction. We conduct an empirical study using our prediction models on 38 versions of five systems. Our findings show that we can predict low architectural quality, i.e., architectural decay, with high performance-even for cases of decay that suddenly occur in an architectural module. We further report the factors that best predict architectural quality.
C1 [Garcia, Joshua; Ghorbani, Negar; Malek, Sam] Univ Calif Irvine, Dept Informat, Inst Software Res, Irvine, CA 92697 USA.
   [Kouroshfar, Ehsan] Amazon Com, New York, NY 10012 USA.
C3 University of California System; University of California Irvine;
   Amazon.com
RP Garcia, J (corresponding author), Univ Calif Irvine, Dept Informat, Inst Software Res, Irvine, CA 92697 USA.
EM joshug4@uci.edu; ekouroshfar@gmail.com; negargh@uci.edu; malek@uci.edu
RI Garcia, Joshua/AAO-4575-2021
OI Garcia, Joshua/0000-0002-1696-8783
FU National Science Foundation [CNS-1823262]
FX This work was supported in part by Award CNS-1823262 from National
   Science Foundation. We would like to thank the anonymous reviewers and
   associate editor for their valuable feedback, which helped us to improve
   thiswork.
CR Allen EG, 1999, PARIS REV, P119, DOI 10.1109/METRIC.1999.809733
   [Anonymous], 2020, ARCH PREDICTION TOOL
   [Anonymous], APPL MULTIPLE REGRES
   [Anonymous], 2006, ISESE '06: Proceedings of the 5th International Symposium on Empirical Software Engineering. Volume II: Short Papers and Posters, DOI DOI 10.1145/1159733.1159739.
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Bavota G., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P195, DOI 10.1109/WCRE.2010.29
   Bavota G, 2013, EMPIR SOFTW ENG, V18, P901, DOI 10.1007/s10664-012-9226-8
   Beck F., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P99, DOI 10.1109/WCRE.2010.19
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bouwers E, 2014, PROC IEEE INT CONF S, P211, DOI 10.1109/ICSME.2014.43
   BRIAND LC, 1993, CONFERENCE ON SOFTWARE MAINTENANCE 1993, CSM-93: PROCEEDINGS, P88
   Brunet J., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P257, DOI 10.1109/WCRE.2012.35
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   Chen C., 2004, USING RANDOM FOREST, V110, P24
   Clements P, 2003, PROC INT CONF SOFTW, P740, DOI 10.1109/ICSE.2003.1201264
   Corazza A, 2011, EUR CON SFTWR MTNCE, P35, DOI 10.1109/CSMR.2011.8
   CORBI TA, 1989, IBM SYST J, V28, P294, DOI 10.1147/sj.282.0294
   CRAN, 2020, PACKAGE MASS
   CRAN, 2020, CRAN PACKAGE RANDOMF
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   D'Ambros M, 2009, WORK CONF REVERSE EN, P135, DOI 10.1109/WCRE.2009.19
   DAmbros M., 2008, ANAL SOFTWARE REPOSI
   Le DM, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P176, DOI 10.1109/ICSA.2018.00027
   Eick SG, 2002, IEEE T SOFTWARE ENG, V28, P396, DOI 10.1109/TSE.2002.995435
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   FARRAR DE, 1967, REV ECON STAT, V49, P92, DOI 10.2307/1937887
   Fontana FA, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON SOFTWARE ARCHITECTURE AND METRICS (SAM), P1, DOI 10.1109/SAM.2015.8
   Garcia J., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P552, DOI 10.1109/ASE.2011.6100123
   Garcia J., 2014, A unified framework for studying architectural decay of software systems
   Garcia J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P901, DOI 10.1109/ICSE.2013.6606639
   Garcia J, 2013, IEEE INT CONF AUTOM, P486, DOI 10.1109/ASE.2013.6693106
   Garcia J, 2009, LECT NOTES COMPUT SC, V5581, P146, DOI 10.1007/978-3-642-02351-4_10
   Garcia J, 2009, EUR CON SFTWR MTNCE, P255, DOI 10.1109/CSMR.2009.59
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hassaine S, 2012, EUR CON SFTWR MTNCE, P267, DOI 10.1109/CSMR.2012.34
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Kamei Y, 2010, PROC IEEE INT CONF S
   Kobayashi K, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P462, DOI 10.1109/ICSM.2012.6405308
   Kouroshfar E, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P246, DOI 10.1109/MSR.2015.30
   Kouroshfar E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1450, DOI 10.1109/ICSE.2013.6606741
   Kruchten P., 1995, Tutorial proceedings on TRI-Ada'91 Ada's role in global markets: solutions for a changing complex world - TRI-Ada'95, DOI DOI 10.1145/216591.216611
   Kruchten P., 1995, VIEW MODEL SOFTWARE, P15
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Le DM, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P235, DOI 10.1109/MSR.2015.29
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lutellier T, 2018, IEEE T SOFTWARE ENG, V44, P159, DOI 10.1109/TSE.2017.2671865
   Lutellier T, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P69, DOI 10.1109/ICSE.2015.136
   Macia I, 2012, EUR CON SFTWR MTNCE, P277, DOI 10.1109/CSMR.2012.35
   Martin R. C., 2007, Agile principles, patterns, and practices in C#
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Mo R, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P51, DOI 10.1109/WICSA.2015.12
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan Nachiappan, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P364
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Oizumi W, 2016, PROC INT CONF SOFTW, P440, DOI 10.1145/2884781.2884868
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Paixao M, 2021, IEEE T SOFTWARE ENG, V47, P1041, DOI 10.1109/TSE.2019.2912113
   Paixao M, 2017, IEEE INT CONF AUTOM, P95, DOI 10.1109/ASE.2017.8115622
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Prinzie A, 2007, LECT NOTES COMPUT SC, V4653, P349
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rosik J, 2011, SOFTWARE PRACT EXPER, V41, P63, DOI 10.1002/spe.999
   Sangwan RS, 2010, INNOV SYST SOFTW ENG, V6, P299, DOI 10.1007/s11334-010-0133-0
   Sant'Anna C, 2007, LECT NOTES COMPUT SC, V4758, P207
   Sarkar S, 2008, IEEE T SOFTWARE ENG, V34, P700, DOI 10.1109/TSE.2008.43
   Sarkar S, 2007, IEEE T SOFTWARE ENG, V33, P14, DOI 10.1109/TSE.2007.256942
   Scanniello Giuseppe, 2010, Proceedings of the 2010 8th IEEE International Conference on Software Engineering and Formal Methods (SEFM 2010), P103, DOI 10.1109/SEFM.2010.19
   Shihab E., 2011, Proceedings of the ACM SIGSOFT symposium and the European Conference on Foundations of Software Engineering, P300
   STANDISH TA, 1984, IEEE T SOFTWARE ENG, V10, P494, DOI 10.1109/TSE.1984.5010272
   Tan P. N., 2016, INTRO DATA MINING
   Telea A, 2011, COMPUTATION STAT, V26, P635, DOI 10.1007/s00180-011-0248-2
   van Gurp J, 2005, J SOFTW MAINT EVOL-R, V17, P277, DOI 10.1002/smr.313
   Wermelinger M, 2011, EMPIR SOFTW ENG, V16, P623, DOI 10.1007/s10664-011-9164-x
   Wu JW, 2005, PROC IEEE INT CONF S, P525
   YAU SS, 1980, IEEE T SOFTWARE ENG, V6, P545, DOI 10.1109/TSE.1980.234503
   Zimmermann T, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P73, DOI 10.1109/IWPSE.2003.1231213
   Zimmermann T, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P227, DOI 10.1109/ISSRE.2007.19
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 85
TC 6
Z9 6
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 18
PY 2021
VL 48
IS 7
BP 2439
EP 2454
DI 10.1109/TSE.2021.3060068
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5YW
UT WOS:000825973200001
DA 2024-07-18
ER

PT J
AU Zhou, Y
   Wang, CZ
   Yan, X
   Chen, T
   Panichella, S
   Gall, H
AF Zhou, Yu
   Wang, Changzhi
   Yan, Xin
   Chen, Taolue
   Panichella, Sebastiano
   Gall, Harald
TI Automatic Detection and Repair Recommendation of Directive Defects in
   Java API Documentation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Documentation; Maintenance engineering; Software; Drones; Androids;
   Humanoid robots; Facebook; API documentation; directive defects; natural
   language processing; repair recommendation
AB Application Programming Interfaces (APIs) represent key tools for software developers to build complex software systems. However, several studies have revealed that even major API providers tend to have incomplete or inconsistent API documentation. This can severely hamper the API comprehension and, as a consequence, the quality of the software built on them. In this paper, we propose DRONE (Detect and Repair of dOcumentatioN dEfects), a framework to automatically detect and repair defects from API documents by leveraging techniques from program analysis, natural language processing, and constraint solving. Specifically, we target at the directives of API documents, which are related to parameter constraints and exception handling declarations. Furthermore, in presence of defects, we also provide a prototypical repair recommendation system. We evaluate our approach on parts of the well-documented APIs of JDK 1.8 APIs (including javaFX) and Android 7.0 (level 24). Across the two empirical studies, our approach can detect API defects with an average F-measure of 79.9, 71.7, and 81.4 percent, respectively. The API repairing capability has also been evaluated on the generated recommendations in a further experiment. User judgments indicate that the constraint information is addressed correctly and concisely in the rendered directives.
C1 [Zhou, Yu; Wang, Changzhi; Yan, Xin] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 210016, Peoples R China.
   [Zhou, Yu; Chen, Taolue] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210008, Peoples R China.
   [Chen, Taolue] Birkbeck Univ London, Dept Comp Sci & Informat Syst, London WC1E 7HX, England.
   [Chen, Taolue] Southwest Univ, RISE, Chongqing 400716, Peoples R China.
   [Panichella, Sebastiano] Zurich Univ Appl Sci, Dept Informat, CH-8401 Winterthur, Switzerland.
   [Gall, Harald] Univ Zurich, Dept Informat, CH-8006 Zurich, Switzerland.
C3 Nanjing University of Aeronautics & Astronautics; Nanjing University;
   University of London; Birkbeck University London; Southwest University -
   China; Zurich University of Applied Sciences; University of Zurich
RP Zhou, Y (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 210016, Peoples R China.
EM zhouyu@nuaa.edu.cn; czwang@nuaa.edu.cn; xin_yan@nuaa.edu.cn;
   taolue@dcs.bbk.ac.uk; spanichella@gmail.com; gall@ifi.uzh.ch
OI Yan, Xin/0000-0003-1400-8604; Zhou, Yu/0000-0002-3723-7584; Chen,
   Taolue/0000-0002-5993-1665; Panichella, Sebastiano/0000-0003-4120-626X
FU National Key R&D Program of China [2018YFB1003900]; Collaborative
   Innovation Center of Novel Software Technology in China; UK EPSRC
   [EP/P00430X/1]; ARC [DP160101652, DP180100691]; NSFC [61662035]; Swiss
   National Science Foundation [200021-166275]
FX We are grateful to the anonymous reviewers for their many constructive
   comments. This work was partially supported by the National Key R&D
   Program of China (No. 2018YFB1003900), and the Collaborative Innovation
   Center of Novel Software Technology in China. T. Chen is partially
   supported by UK EPSRC grant (EP/P00430X/1), ARC Discovery Project
   (DP160101652, DP180100691), and NSFC grant (No. 61662035). We also
   acknowledge the Swiss National Science Foundation's support for the
   project SURF-MobileAppsData (SNF Project No. 200021-166275).
CR Al Omran FNA, 2017, IEEE WORK CONF MIN S, P187, DOI 10.1109/MSR.2017.42
   [Anonymous], 2009, CHI 09 EXTENDED ABST, DOI [10.1145/1520340.1520678, DOI 10.1145/1520340.1520678]
   Arnaoudova V, 2016, EMPIR SOFTW ENG, V21, P104, DOI 10.1007/s10664-014-9350-8
   Asmussen D. J., 2015, 21 DKCLARIN WP
   Barrett C, 2009, FRONT ARTIF INTEL AP, V185, P825, DOI 10.3233/978-1-58603-929-5-825
   BESCHASTNIKH I., 2011, P 19 ACM SIGSOFT S 1, P267, DOI DOI 10.1145/2025113.2025151
   Beschastnikh I, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P252, DOI 10.1109/ICSE.2013.6606571
   Bloch J., 2006, 21 ACM SIGPLAN S OBJ, P506, DOI DOI 10.1145/1176617.1176622
   Brants T, 2000, 6TH APPLIED NATURAL LANGUAGE PROCESSING CONFERENCE/1ST MEETING OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE AND PROCEEDINGS OF THE ANLP-NAACL 2000 STUDENT RESEARCH WORKSHOP, P224
   Buse R.P., 2008, Proceedings of the 2008 International Symposium on Software Testing and Analysis, ISSTA '08, P273
   Chatterjee P, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P382, DOI 10.1109/SANER.2017.7884638
   Chen CT, 2013, ADV EDUC RES, V29, P142
   Ciurumelea A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2017.7884612
   Dagenais B., 2010, P 18 INT S FDN SOFTW, P127
   Dagenais B, 2014, IEEE T SOFTWARE ENG, V40, P1126, DOI 10.1109/TSE.2014.2347969
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Di Sorbo A, 2017, PROC IEEE ACM INT C, P55, DOI 10.1109/ICSE-C.2017.5
   Di Sorbo A, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P641, DOI 10.1145/2889160.2889170
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Di Sorbo A, 2015, IEEE INT CONF AUTOM, P12, DOI 10.1109/ASE.2015.12
   DuVander A., 2013, API CONSUMERS WANT R
   Earle RH, 2015, SIGDOC2015: PROCEEDINGS OF THE 33RD ANNUAL INTERNATIONAL CONFERENCE ON THE DESIGN OF COMMUNICATION, DOI 10.1145/2775441.2775457
   Endrikat S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P632, DOI 10.1145/2568225.2568299
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Forward A., 2002, Proceedings of the 2002 ACM symposium on Document engineering, P26, DOI 10.1145/585058.585065
   Ghezzi C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P277, DOI 10.1145/2568225.2568234
   Goffi A., 2016, P 25 INT S SOFTW TES, P213, DOI DOI 10.1145/2931037.2931061
   Hasan FM, 2007, ADVANCES AND INNOVATIONS IN SYSTEMS, COMPUTING SCIENCES AND SOFTWARE ENGINEERING, P121, DOI 10.1007/978-1-4020-6264-3_23
   Inzunza Sergio, 2018, Trends and Advances in Information Systems and Technologies. Advances in Intelligent Systems and Computing (AISC 746), P229, DOI 10.1007/978-3-319-77712-2_22
   Iyer B., 2015, Harvard Business Review Digital Articles, P2
   Kamimura M, 2013, CONF PROC INT SYMP C, P215, DOI 10.1109/ICPC.2013.6613851
   Lam P, 2011, CET US COMP INFR WOR, P8
   Lin Tan, 2007, Operating Systems Review, V41, P145, DOI 10.1145/1323293.1294276
   Linares-Vasquez M., 2014, P 22 INT C PROGR COM, P83, DOI DOI 10.1145/2597008.2597155
   Liu S, 2014, P 29 ACM IEEE INT C, P785, DOI DOI 10.1145/2642937.2642969
   Lo D., 2006, SIGSOFT FSE, P265
   Lo David., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, ASE '10, P387
   McBurney P. W., 2014, P 22 INT C PROGRAM C, P279
   Monperrus M, 2012, EMPIR SOFTW ENG, V17, P703, DOI 10.1007/s10664-011-9186-4
   Moreno L, 2017, PROC IEEE ACM INT C, P511, DOI 10.1109/ICSE-C.2017.169
   Moreno L, 2013, CONF PROC INT SYMP C, P230, DOI 10.1109/ICPC.2013.6613855
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Myers BA, 2017, 2017 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON API USAGE AND EVOLUTION (WAPI), P2, DOI 10.1109/WAPI.2017.2
   Novick D., 2006, P SPECIAL INTEREST G, P84, DOI DOI 10.1145/1166324.1166346
   Ohmann T., 2014, P IEEE ACM INT C AUT, P19, DOI [10.1145/2642937.2642988, DOI 10.1145/2642937.2642988, 10.1145/2642937, DOI 10.1145/2642937]
   Pandita R, 2012, PROC INT CONF SOFTW, P815, DOI 10.1109/ICSE.2012.6227137
   Panichella Sebastiano, 2012, 2012 IEEE 20th International Conference on Program Comprehension, P63
   Panichella S, 2016, PROC INT CONF SOFTW, P547, DOI 10.1145/2884781.2884847
   Panichella S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1023, DOI 10.1145/2950290.2983938
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Petrosyan G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P869, DOI 10.1109/ICSE.2015.97
   Piccioni Marco, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P5, DOI 10.1109/ESEM.2013.14
   Reiss SP, 2001, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2001.919096
   Rigby PC, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P832, DOI 10.1109/ICSE.2013.6606629
   Robillard MP, 2015, EMPIR SOFTW ENG, V20, P1558, DOI 10.1007/s10664-014-9323-y
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Saied MA, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P33, DOI 10.1109/SANER.2015.7081813
   Shi L, 2011, LECT NOTES COMPUT SC, V6603, P416, DOI 10.1007/978-3-642-19811-3_29
   Shin Hwei Tan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P260, DOI 10.1109/ICST.2012.106
   Shold C., 2014, IMPORTANCE DOCUMENTA
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Tan L, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P11, DOI 10.1145/1985793.1985796
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Uddin G, 2015, IEEE SOFTWARE, V32, P68, DOI 10.1109/MS.2014.80
   Vassallo Carmine, 2014, Proceedings of the 22nd International Conference on Program Comprehension, P106
   Zhang YY, 2013, CONF PROC INT SYMP C, P142, DOI 10.1109/ICPC.2013.6613842
   Zhong H, 2013, ACM SIGPLAN NOTICES, V48, P803, DOI [10.1145/2509136.2509523, 10.1145/2544173.2509523]
   Zhong H, 2009, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2009.94
   Zhou Y, 2017, PROC INT CONF SOFTW, P27, DOI 10.1109/ICSE.2017.11
NR 71
TC 30
Z9 30
U1 3
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2020
VL 46
IS 9
BP 1004
EP 1023
DI 10.1109/TSE.2018.2872971
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA NR7JB
UT WOS:000571735900004
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Peitek, N
   Siegmund, J
   Apel, S
   Kastner, C
   Parnin, C
   Bethmann, A
   Leich, T
   Saake, G
   Brechmann, A
AF Peitek, Norman
   Siegmund, Janet
   Apel, Sven
   Kastner, Christian
   Parnin, Chris
   Bethmann, Anja
   Leich, Thomas
   Saake, Gunter
   Brechmann, Andre
TI A Look into Programmers' Heads
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Functional magnetic resonance imaging; Task analysis; Cognition; Brain;
   Programming; Blood; Functional magnetic resonance imaging; program
   comprehension
ID WORKING-MEMORY; FMRI; BRAIN; ACTIVATION; LANGUAGE; PERFORMANCE;
   COGNITION; AREAS; TASK; MODULATION
AB Program comprehension is an important, but hard to measure cognitive process. This makes it difficult to provide suitable programming languages, tools, or coding conventions to support developers in their everyday work. Here, we explore whether functional magnetic resonance imaging (fMRI) is feasible for soundly measuring program comprehension. To this end, we observed 17 participants inside an fMRI scanner while they were comprehending source code. The results show a clear, distinct activation of five brain regions, which are related to working memory, attention, and language processing, which all fit well to our understanding of program comprehension. Furthermore, we found reduced activity in the default mode network, indicating the cognitive effort necessary for program comprehension. We also observed that familiarity with Java as underlying programming language reduced cognitive effort during program comprehension. To gain confidence in the results and the method, we replicated the study with 11 new participants and largely confirmed our findings. Our results encourage us and, hopefully, others to use fMRI to observe programmers and, in the long run, answer questions, such as: How should we train programmers? Can we train someone to become an excellent programmer? How effective are new languages and tools for program comprehension?
C1 [Peitek, Norman; Bethmann, Anja; Brechmann, Andre] Leibniz Inst Neurobiol Magdeburg, Magdeburg 39118, Germany.
   [Siegmund, Janet] Univ Passau, Jr Res Grp PICCARD, Passau 94032, Germany.
   [Apel, Sven] Univ Passau, Software Engn, Passau 94032, Germany.
   [Leich, Thomas] Metop Res Inst, Magdeburg 39106, Germany.
   [Kastner, Christian] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
   [Saake, Gunter] Univ Magdeburg, Databases & Software Engn Grp, Magdeburg 39106, Germany.
   [Saake, Gunter] Univ Magdeburg, Comp Sci, Magdeburg 39106, Germany.
   [Parnin, Chris] NC State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 Leibniz Institut fur Neurobiologie (LIN); University of Passau;
   University of Passau; Carnegie Mellon University; Otto von Guericke
   University; Otto von Guericke University; North Carolina State
   University
RP Peitek, N (corresponding author), Leibniz Inst Neurobiol Magdeburg, Magdeburg 39118, Germany.
EM norman.peitek@lin-magdeburg.de; Janet.Siegmund@uni-passau.de;
   apel@uni-passau.de; kaestner@cs.cmu.edu; cjparnin@ncsu.edu;
   bethmann@lin-magdeburg.de; thomas.leich@metop.de;
   saake@iti.cs.uni-magdeburg.de; brechmann@lin-magdeburg.de
RI Saake, Gunter/P-8939-2015
OI Saake, Gunter/0000-0001-9576-8474; Leich, Thomas/0000-0001-9580-7728;
   Brechmann, Andre/0000-0003-3903-0840; Peitek,
   Norman/0000-0001-7828-4558; Apel, Sven/0000-0003-3687-2233; Kastner,
   Christian/0000-0002-4450-4572
FU DFG [AP 206/4, AP 206/5, AP 206/6, SI 2045/2-1, BR 2267/7-1]; Bavarian
   State Ministry of Education, Science and the Arts; NSF [1755762,
   1318808, 1552944]; AFRL; DARPA [FA8750-16-2-0042]; ERC [203099];
   European Research Council (ERC) [203099] Funding Source: European
   Research Council (ERC)
FX We thank all participants of both fMRI studies and the pilot studies.
   Furthermore, we thank Jorg Liebig for his support in conducting the
   first pilot study and Andreas Fugner for providing photos. Siegmund's
   and Brechmann's work is supported by DFG grants SI 2045/2-1 and BR
   2267/7-1. Siegmund's work is further funded by the Bavarian State
   Ministry of Education, Science and the Arts in the framework of the
   Centre Digitisation.Bavaria (ZD.B). Apel's work has been supported by
   DFG grants AP 206/4, AP 206/5, and AP 206/6, and Kaestner's work by NSF
   awards 1318808 and 1552944, AFRL and DARPA (FA8750-16-2-0042), as well
   as in part by ERC grant #203099. Parnin's work is supported by NSF award
   1755762.
CR Amaro E, 2006, BRAIN COGNITION, V60, P220, DOI 10.1016/j.bandc.2005.11.009
   Anderson JR, 2011, COGN AFFECT BEHAV NE, V11, P52, DOI 10.3758/s13415-010-0011-0
   [Anonymous], P INT S EMP SOFTW EN
   [Anonymous], SOFTWARE ENG ARTIFIC
   [Anonymous], P INT C OBJ OR PROGR
   [Anonymous], BRAIN LANGUAGE
   [Anonymous], 2013, Cognitive Neuroscience: The Biology of the Mind
   [Anonymous], 2005, P 38 ANN HAW INT C S
   [Anonymous], TRAIN YOUR BRAIN
   [Anonymous], 1992, Transfer of learning
   [Anonymous], P ANN WORKSH PSYCH P
   [Anonymous], 2014, THESIS
   Awh E, 1996, PSYCHOL SCI, V7, P25, DOI 10.1111/j.1467-9280.1996.tb00662.x
   Bahlmann J, 2008, NEUROIMAGE, V42, P525, DOI 10.1016/j.neuroimage.2008.04.249
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bethmann A, 2007, BRAIN RES, V1133, P145, DOI 10.1016/j.brainres.2006.11.057
   Beyer Dirk, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P80, DOI 10.1109/ICPC.2010.49
   Binder JR, 2009, CEREB CORTEX, V19, P2767, DOI 10.1093/cercor/bhp055
   Bonhage CE, 2014, J COGNITIVE NEUROSCI, V26, P1654, DOI 10.1162/jocn_a_00566
   Bor D, 2007, CEREB CORTEX, V17, P778, DOI 10.1093/cercor/bhk035
   Brodmann K., 2006, BRODMANNS LOCALISATI
   Brooks R., 1978, 3rd International Conference on Software Engineering, P196
   Cabeza R, 2000, J COGNITIVE NEUROSCI, V12, P1, DOI 10.1162/08989290051137585
   Castelhano J, 2019, BRAIN IMAGING BEHAV, V13, P623, DOI 10.1007/s11682-018-9885-1
   CHANCE B, 1993, P NATL ACAD SCI USA, V90, P3770, DOI 10.1073/pnas.90.8.3770
   CHRYSLER E, 1978, COMMUN ACM, V21, P472, DOI 10.1145/359511.359523
   Cooper J, 2003, HYSTEROSCOPY, RESECTOSCOPY AND ENDOMETRIAL ABLATION, P191
   Desmond JE, 2002, J NEUROSCI METH, V118, P115, DOI 10.1016/S0165-0270(02)00121-8
   Dijkstra E.W., 1982, SELECTED WRITINGS CO, P129
   Dronkers NF, 2004, COGNITION, V92, P145, DOI 10.1016/j.cognition.2003.11.002
   Duraes J, 2016, PROC INT SYMP SOFTW, P87, DOI 10.1109/ISSRE.2016.53
   Engle R. W., 1999, Models of Working Memory: Mechanisms of Active Maintenance and Executive Control, V4, P102
   Díaz DE, 2010, SABERES, P23
   Fakhoury S, 2018, INT C PROGRAM COMPRE, P286, DOI 10.1145/3196321.3196347
   Feigenspan J., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P73
   Feigenspan J., 2011, PROC INT S EMPIRICAL, P1
   Fiebach CJ, 2005, HUM BRAIN MAPP, V24, P79, DOI 10.1002/hbm.20070
   Figueiredo E, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P183
   Fischl B, 2008, CEREB CORTEX, V18, P1973, DOI 10.1093/cercor/bhm225
   Fisher M, 2006, PROC IEEE INT CONF S, P289
   Floyd B, 2017, PROC INT CONF SOFTW, P175, DOI 10.1109/ICSE.2017.24
   Friederici AD, 2003, NEUROIMAGE, V20, pS8, DOI 10.1016/j.neuroimage.2003.09.003
   Friederici AD, 2002, TRENDS COGN SCI, V6, P78, DOI 10.1016/S1364-6613(00)01839-8
   Fritz T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P402, DOI 10.1145/2568225.2568266
   Goldstein B., 2002, Sensation and perception, V6th
   Griswold WG, 2001, PROC INT CONF SOFTW, P265, DOI 10.1109/ICSE.2001.919100
   Grodzinsky Y, 2008, TRENDS COGN SCI, V12, P474, DOI 10.1016/j.tics.2008.09.001
   Guzdial M, 2008, COMMUN ACM, V51, P25, DOI 10.1145/1378704.1378713
   Hagoort P, 2005, TRENDS COGN SCI, V9, P416, DOI 10.1016/j.tics.2005.07.004
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Hanenberg S, 2009, INT SYMP EMP SOFTWAR, P156, DOI 10.1109/ESEM.2009.5316028
   Henderson-Sellers B., 1995, Object-oriented metrics: measures of complexity
   Hoge R.D., 2001, FUNCTIONAL MRI, P159
   Huettel ScottA., 2008, Functional Magnetic Resonance Imaging, V2nd, P542
   Jäncke L, 2000, COGNITIVE BRAIN RES, V10, P177, DOI 10.1016/S0926-6410(00)00028-8
   Josefsen MH, 2012, QUANTITATIVE REAL-TIME PCR IN APPLIED MICROBIOLOGY, P27
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Kersten M, 2005, P 2005 INT C ASP OR, P159, DOI DOI 10.1145/1052898.1052912
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Klingberg T, 2002, J CLIN EXP NEUROPSYC, V24, P781, DOI 10.1076/jcen.24.6.781.8395
   Knecht S, 2000, BRAIN, V123, P2512, DOI 10.1093/brain/123.12.2512
   Knobelsdorf M, 2008, ITICSE '08: PROCEEDINGS OF THE 13TH ANNUAL CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P286
   Lee S, 2018, CLUSTER COMPUT, V21, P1097, DOI 10.1007/s10586-017-0746-2
   Lee S, 2016, IEEE INT C BIOINF BI, P350, DOI 10.1109/BIBE.2016.30
   Maguire EA, 1999, BRAIN, V122, P1839, DOI 10.1093/brain/122.10.1839
   Mallow J, 2015, FRONT SYST NEUROSCI, V9, DOI 10.3389/fnsys.2015.00128
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McKiernan KA, 2003, J COGNITIVE NEUROSCI, V15, P394, DOI 10.1162/089892903321593117
   Milton J, 2007, NEUROIMAGE, V35, P804, DOI 10.1016/j.neuroimage.2007.01.003
   Myers BA, 2004, COMMUN ACM, V47, P47, DOI 10.1145/1015864.1015888
   Nagahama Y, 1996, BRAIN, V119, P1667, DOI 10.1093/brain/119.5.1667
   Nakagawa T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P448, DOI 10.1145/2591062.2591098
   Nebel K, 2005, COGNITIVE BRAIN RES, V25, P760, DOI 10.1016/j.cogbrainres.2005.09.011
   Newman SD, 2011, BRAIN RES, V1410, P77, DOI 10.1016/j.brainres.2011.06.053
   Novais-Santos S, 2007, NEUROIMAGE, V37, P361, DOI 10.1016/j.neuroimage.2007.03.077
   Oberauer K, 2000, PERS INDIV DIFFER, V29, P1017, DOI 10.1016/S0191-8869(99)00251-2
   OLDFIELD RC, 1971, NEUROPSYCHOLOGIA, V9, P97, DOI 10.1016/0028-3932(71)90067-4
   Ostermann K, 2011, LECT NOTES COMPUT SC, V6813, P155, DOI 10.1007/978-3-642-22655-7_8
   Parnin C., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P123
   Parnin C, 2011, CONF PROC INT SYMP C, P197, DOI 10.1109/ICPC.2011.49
   Peitek N, 2018, EYE MOVEMENTS IN PROGRAMMING (EMIP 2018), DOI 10.1145/3216723.3216725
   PETERSEN SE, 1990, SCIENCE, V249, P1041, DOI 10.1126/science.2396097
   Petersson KM, 2012, PHILOS T R SOC B, V367, P1971, DOI 10.1098/rstb.2012.0101
   Poldrack RA, 2006, TRENDS COGN SCI, V10, P59, DOI 10.1016/j.tics.2005.12.004
   Poldrack RA, 2008, CURR OPIN NEUROBIOL, V18, P223, DOI 10.1016/j.conb.2008.07.006
   Powell N., 2004, SIGCSE Bulletin, V36, DOI 10.1145/1026487.1008072
   Prabhakaran V, 1997, COGNITIVE PSYCHOL, V33, P43, DOI 10.1006/cogp.1997.0659
   Price CJ, 2012, NEUROIMAGE, V62, P816, DOI 10.1016/j.neuroimage.2012.04.062
   Raichle ME, 2001, P NATL ACAD SCI USA, V98, P676, DOI 10.1073/pnas.98.2.676
   Robillard MP, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P406, DOI 10.1109/ICSE.2002.1007986
   Rosenberg-Lee M, 2009, COGN AFFECT BEHAV NE, V9, P270, DOI 10.3758/CABN.9.3.270
   Roskies AL, 2001, J COGNITIVE NEUROSCI, V13, P829, DOI 10.1162/08989290152541485
   SACKMAN H, 1968, COMMUN ACM, V11, P3, DOI 10.1145/362851.362858
   Sapir Edward., 1949, Culture, Language, and Personality: Selected Essays
   Scalabrino S, 2017, IEEE INT CONF AUTOM, P417, DOI 10.1109/ASE.2017.8115654
   Seghier ML, 2013, NEUROSCIENTIST, V19, P43, DOI 10.1177/1073858412440596
   SHNEIDERMAN B, 1979, INT J COMPUT INF SCI, V8, P219, DOI 10.1007/BF00977789
   Shooman M. L., 1983, SIGCSE Bulletin, V15, P66, DOI 10.1145/952978.801015
   Siegmund J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P140, DOI 10.1145/3106237.3106268
   Siegmund J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P378, DOI 10.1145/2568225.2568252
   Siegmund Janet., 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, P24
   Skosnik PD, 2002, NEUROIMAGE, V17, P1306, DOI 10.1006/nimg.2002.1291
   Smith DV, 2010, J COGNITIVE NEUROSCI, V22, P347, DOI 10.1162/jocn.2009.21241
   Smith E.E., 1991, CEREB CORTEX, V6, P11
   Strayer DL, 2001, PSYCHOL SCI, V12, P462, DOI 10.1111/1467-9280.00386
   Talairach G., 1988, Planar Stereotaxic Atlas of the Human Brain
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   Trockman A, 2018, IEEE WORK CONF MIN S, P314, DOI 10.1145/3196398.3196441
   Turken AU, 2011, FRONT SYST NEUROSCI, V5, DOI 10.3389/fnsys.2011.00001
   Vandenberghe R, 1997, J NEUROSCI, V17, P3739
   Whorf B. L., 2012, Language, Thought, and Reality: Selected Writings of Benjamin Lee Whorf Online, V2
   Wing JM, 2006, COMMUN ACM, V49, P33, DOI 10.1145/1118178.1118215
NR 112
TC 38
Z9 40
U1 1
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2020
VL 46
IS 4
BP 442
EP 462
DI 10.1109/TSE.2018.2863303
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA LJ4HU
UT WOS:000530128200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Arcaini, P
   Gargantini, A
   Riccobene, E
AF Arcaini, Paolo
   Gargantini, Angelo
   Riccobene, Elvinia
TI Decomposition-Based Approach for Model-Based Test Generation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Model-based testing; test case generation; model checking; state
   explosion problem; decomposition
ID ASM MODELS; CHECKING
AB Model-based test generation by model checking is a well-known testing technique that, however, suffers from the state explosion problem of model checking and it is, therefore, not always applicable. In this paper, we address this issue by decomposing a system model into suitable subsystem models separately analyzable. Our technique consists in decomposing that portion of a system model that is of interest for a given testing requirement, into a tree of subsystems by exploiting information on model variable dependency. The technique generates tests for the whole system model by merging tests built from those subsystems. We measure and report effectiveness and efficiency of the proposed decomposition-based test generation approach, both in terms of coverage and time.
C1 [Arcaini, Paolo] Charles Univ Prague, Fac Math & Phys, Dept Distributed & Dependable Syst, CR-11800 Prague, Czech Republic.
   [Gargantini, Angelo] Univ Bergamo, Dipartimento Ingn, I-24100 Bergamo, Italy.
   [Riccobene, Elvinia] Univ Milan, Comp Sci, I-26013 Crema, CR, Italy.
C3 Charles University Prague; University of Bergamo; University of Milan
RP Arcaini, P (corresponding author), Charles Univ Prague, Fac Math & Phys, Dept Distributed & Dependable Syst, CR-11800 Prague, Czech Republic.
EM arcaini@d3s.mff.cuni.cz; angelo.gargantini@unibg.it;
   elvinia.riccobene@unimi.it
RI Arcaini, Paolo/J-3616-2017; Riccobene, Elvinia/B-7517-2013; Gargantini,
   Angelo/E-6060-2012
OI Arcaini, Paolo/0000-0002-6253-4062; Gargantini,
   Angelo/0000-0002-4035-0131; Riccobene, Elvinia/0000-0002-1400-1026
FU Czech Science Foundation [17-12465S]
FX We would like to thank the anonymous reviewers for their suggestions and
   comments that allowed us to greatly improve the paper. The research
   reported in this paper has been partially supported by the Czech Science
   Foundation project number 17-12465S.
CR Abrial J R, 2010, Modeling in Event-B: system and softeng
   Agresti A., 2007, INTRO CATEGORICAL DA, V2nd ed
   Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], 2012, CHURCH FAITH CULT M
   [Anonymous], 2001, MODEL CHECKING
   Arcaini Paolo, 2014, Tests and Proofs. 8th International Conference (TAP 2014). Held as Part of STAF 2014. Proceedings: LNCS 8570, P36, DOI 10.1007/978-3-319-09099-3_3
   Arcaini Paolo, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P36, DOI 10.1007/978-3-642-30885-7_3
   Arcaini P, 2018, SCI COMPUT PROGRAM, V158, P148, DOI 10.1016/j.scico.2017.07.003
   Arcaini P, 2017, IEEE INT CONF SOFTW, P476, DOI 10.1109/ICST.2017.54
   Arcaini P, 2017, INT J SOFTW TOOLS TE, V19, P247, DOI 10.1007/s10009-015-0394-x
   Arcaini P, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P119, DOI 10.1145/2786805.2786837
   Arcaini P, 2015, 2015 ACM/IEEE INTERNATIONAL CONFERENCE ON FORMAL METHODS AND MODELS FOR CODESIGN (MEMOCODE), P80, DOI 10.1109/MEMCOD.2015.7340473
   Arcaini P, 2014, SCI COMPUT PROGRAM, V94, P93, DOI 10.1016/j.scico.2014.02.007
   Arcaini P, 2010, LECT NOTES COMPUT SC, V5977, P61, DOI 10.1007/978-3-642-11811-1_6
   Borger E., 2003, ABSTRACT STATE MACHI
   Cavada R., 2010, NUSMV 2 5 USER MANUA
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   Choi YJ, 2002, 7TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P109, DOI 10.1109/HASE.2002.1173111
   Cimatti A, 2002, P INT C COMP AID VER, V2404
   Clarke E, 2003, J ACM, V50, P752, DOI 10.1145/876638.876643
   Clarke E., 2000, Modular Translation of Statecharts to SMV
   Dias A, 2008, IEEE SOFTWARE, V25, P10
   Fraser G, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P41, DOI 10.1109/ICST.2009.33
   Fraser G, 2009, SOFTW TEST VERIF REL, V19, P215, DOI 10.1002/stvr.402
   Gargantini A, 1999, LECT NOTES COMPUT SC, V1687, P146, DOI 10.1145/318774.318939
   Godefroid P., 2007, SIGPLAN Notices, V42, P47, DOI [10.1145/1190216.1190226, 10.1145/1190215.1190226]
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Heimdahl M. P. E., 2001, P 2 INT WORKSH AUT P, P1
   Heitmeyer C., 2002, Encyclopedia of Software Engineering, Vsecond
   Hierons R, 2000, SOFTW TEST VERIF BEH, V10, P201, DOI 10.1002/1099-1689(200012)10:4<201::AID-STVR214>3.3.CO;2-Q
   Holzmann GJ, 2004, The SPIN model checker: primer and reference manual, V1003
   Laster K, 1998, LECT NOTES COMPUT SC, V1384, P20, DOI 10.1007/BFb0054162
   Park S, 2006, LECT NOTES COMPUT SC, V3984, P905, DOI 10.1007/11751649_99
   Peled D.A., 2001, Software Reliability Methods
   Prenninger W, 2005, ELECTRON NOTES THEOR, V116, P59, DOI 10.1016/j.entcs.2004.02.086
   Pretschner A, 2005, PROC INT CONF SOFTW, P392
   Utting M., 2006, Practical Model-Based Testing
   Vijaykumar N. L., 2014, FORMAL VERIFICATION, P696
   Wohlin C., 2012, Experimentation in Software Engineering
   Xu J. Qian, 2005, ACM SIGSOFT Software Engineering Notes, V30, P1, DOI [10.1145/1050849.1050865.36Y, DOI 10.1145/1050849.1050865]
   Yong Jiang, 2012, Model Checking Software. Proceedings 19th International Workshop, SPIN 2012, P255, DOI 10.1007/978-3-642-31759-0_20
NR 41
TC 6
Z9 6
U1 0
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2019
VL 45
IS 5
BP 507
EP 520
DI 10.1109/TSE.2017.2781231
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HY6HC
UT WOS:000468230000003
OA Green Published
DA 2024-07-18
ER

PT J
AU Zhong, H
   Mei, H
AF Zhong, Hao
   Mei, Hong
TI An Empirical Study on API Usages
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE API usage; mining specification; empirical study
ID SPECIFICATIONS
AB API libraries provide thousands of APIs, and are essential in daily programming tasks. To understand their usages, it has long been a hot research topic to mine specifications that formally define legal usages for APIs. Furthermore, researchers are working on many other research topics on APIs. Although the research on APIs is intensively studied, many fundamental questions on APIs are still open. For example, the answers to open questions, such as which format can naturally define API usages and in which case, are still largely unknown. We notice that many such open questions are not concerned with concrete usages of specific APIs, but usages that describe how to use different types of APIs. To explore these questions, in this paper, we conduct an empirical study on API usages, with an emphasis on how different types of APIs are used. Our empirical results lead to nine findings on API usages. For example, we find that single-type usages are mostly strict orders, but multi-type usages are more complicated since they include both strict orders and partial orders. Based on these findings, for the research on APIs, we provide our suggestions on the four key aspects such as the challenges, the importance of different API elements, usage patterns, and pitfalls in designing evaluations. Furthermore, we interpret our findings, and present our insights on data sources, extraction techniques, mining techniques, and formats of specifications for the research of mining specifications.
C1 [Zhong, Hao; Mei, Hong] Shanghai Jiao Tong Univ, Dept Comp Sci & Engn, Shanghai 200240, Peoples R China.
C3 Shanghai Jiao Tong University
RP Zhong, H (corresponding author), Shanghai Jiao Tong Univ, Dept Comp Sci & Engn, Shanghai 200240, Peoples R China.
EM zhonghao@sjtu.edu.cn; meih@sjtu.edu.cn
RI Zhong, Hao/B-2435-2015
OI Zhong, Hao/0000-0002-4302-9183
FU National Key Basic Research Program of China (973 program)
   [2015CB352203]; National Nature Science Foundation of China [61572313];
   Science and Technology Commission of Shanghai Municipality [15DZ1100305]
FX We appreciate the anonymous reviewers for their constructive comments.
   This work is sponsored by the National Key Basic Research Program of
   China (973 program) No. 2015CB352203, the National Nature Science
   Foundation of China No. 61572313, and the grant of Science and
   Technology Commission of Shanghai Municipality No. 15DZ1100305.
CR Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3106237.3106267
   Acharya Mithun, 2007, P 6 JOINT M EUROPEAN, P25, DOI [DOI 10.1145/1287624.1287630, 10.1145/1287624.1287630]
   AGRAWAL R, 1995, PROC INT CONF DATA, P3, DOI 10.1109/ICDE.1995.380415
   Agrawal R., P 20 INT C VERY LARG
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   [Anonymous], 2001, Proceedings of the 18th ACM Symposium on Operating Systems Principles
   [Anonymous], SURVEY CLUSTERING DA
   [Anonymous], SDM, DOI DOI 10.1137/1.9781611972719.1
   [Anonymous], 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering- Volume 1, ICSE '10
   [Anonymous], 2007, 6th joint meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), DOI DOI 10.1145/1287624.1287632
   [Anonymous], 2016, P 25 INT S SOFTWARE, DOI DOI 10.1145/2931037.2931047
   [Anonymous], PROC INT CONF SOFTW
   [Anonymous], 2010, P 32 ACMIEEE INT C S, DOI DOI 10.1145/1806799.1806831
   BIERMANN AW, 1972, IEEE T COMPUT, VC 21, P592, DOI 10.1109/TC.1972.5009015
   Borgelt C, 2012, WIRES DATA MIN KNOWL, V2, P437, DOI 10.1002/widm.1074
   Borges H., 2015, PEERJ COMPUT SCI, V1, P1
   Cossette B. E., 2012, P 20 INT S FDN SOFTW, P65
   Dallmeier V., 2010, P 19 INT S SOFTWARE, P85, DOI [DOI 10.1145/1831708.1831719, 10.1145/1831708.1831719]
   de Alfaro L., 2001, Software Engineering Notes, V26, P109, DOI 10.1145/503271.503226
   de Caso G, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P381, DOI 10.1145/1985793.1985846
   de la Higuera C, 2005, PATTERN RECOGN, V38, P1332, DOI 10.1016/j.patcog.2005.01.003
   Endrikat S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P632, DOI 10.1145/2568225.2568299
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Gabel M., 2008, SIGSOFT FSE, P339, DOI DOI 10.1145/1453101.1453150
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Nguyen HA, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P166, DOI 10.1145/2635868.2635924
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   Hora A, 2015, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSM.2015.7332471
   Nguyen HV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P791, DOI 10.1145/2568225.2568302
   Kawrykow D, 2009, IEEE INT CONF AUTOM, P111, DOI 10.1109/ASE.2009.62
   KREMENEK T, 2006, P 7 OSDI, P259
   Le TDB, 2015, IEEE INT CONF AUTOM, P115, DOI 10.1109/ASE.2015.83
   Legunsen O, 2016, IEEE INT CONF AUTOM, P602, DOI 10.1145/2970276.2970356
   Lemieux C., 2015, P 30 IEEE ACM INT C, P870
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Lin ZY, 2016, IEEE INT CONF AUTOM, P368, DOI 10.1145/2970276.2970355
   Linares-Vasquez M, 2014, P 22 INT C PROGR C, P83
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Lo D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P345, DOI 10.1145/1595696.1595761
   Lo David., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, ASE '10, P387
   Loeliger HA, 2004, IEEE SIGNAL PROC MAG, V21, P28, DOI 10.1109/MSP.2004.1267047
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   Ma H, 2006, ASPEC 2006: 13TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P342
   Maoz S, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P96, DOI 10.1145/2786805.2786824
   Monperrus M, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430541
   Monperrus M, 2012, EMPIR SOFTW ENG, V17, P703, DOI 10.1007/s10664-011-9186-4
   Moreno L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P880, DOI 10.1109/ICSE.2015.98
   Murali V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P151, DOI 10.1145/3106237.3106284
   MYERS C, 1980, IEEE T ACOUST SPEECH, V28, P623, DOI 10.1109/TASSP.1980.1163491
   Nguyen A.T., 2014, P 29 ACM IEEE INT C, P457, DOI [10.1145/2642937.2643010, DOI 10.1145/2642937.2643010]
   Nguyen TT, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P383, DOI 10.1145/1595696.1595767
   Okur S., 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, P54
   Pandita R, 2012, PROC INT CONF SOFTW, P815, DOI 10.1109/ICSE.2012.6227137
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Petrosyan G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P869, DOI 10.1109/ICSE.2015.97
   Pradel M, 2012, PROC INT CONF SOFTW, P288, DOI 10.1109/ICSE.2012.6227185
   Pradel M, 2009, IEEE INT CONF AUTOM, P371, DOI 10.1109/ASE.2009.60
   Ramanathan MK, 2007, PROC INT CONF SOFTW, P240
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Rothlisberger David., 2012, P 20 FSE, P76
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   Saied MA, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P23, DOI 10.1109/SANER.2015.7081812
   SAKOE H, 1978, IEEE T ACOUST SPEECH, V26, P43, DOI 10.1109/TASSP.1978.1163055
   Scott John, 2012, Social network analysis
   Shi L, 2011, LECT NOTES COMPUT SC, V6603, P416, DOI 10.1007/978-3-642-19811-3_29
   Smith C, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P616, DOI 10.1145/3106237.3106279
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Nguyen T, 2016, PROC INT CONF SOFTW, P416, DOI 10.1145/2884781.2884873
   Thummalapenta Suresh, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P327, DOI 10.1109/ASE.2008.43
   Thummalapenta S, 2009, IEEE INT CONF AUTOM, P283, DOI 10.1109/ASE.2009.72
   Thummalapenta S, 2009, PROC INT CONF SOFTW, P496, DOI 10.1109/ICSE.2009.5070548
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Vasudevan P, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P289, DOI 10.1109/SERA.2006.25
   Walkinshaw N, 2016, EMPIR SOFTW ENG, V21, P811, DOI 10.1007/s10664-015-9367-7
   Wasylkowski A, 2011, AUTOMAT SOFTW ENG, V18, P263, DOI 10.1007/s10515-011-0084-1
   Wasylkowski A, 2009, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2009.30
   Wei Y, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P191, DOI 10.1145/1985793.1985820
   Wu W, 2015, EMPIR SOFTW ENG, V20, P1126, DOI 10.1007/s10664-014-9317-9
   Xie Tao, 2006, Proc. MSR, P54
   Xing ZC, 2007, IEEE T SOFTWARE ENG, V33, P818, DOI 10.1109/TSE.2007.70747
   Yan X., 2003, Proceedings of the ninth ACM SIGKDD international conference on Knowledge discovery and data mining, KDD '03, P286
   Zhai J, 2016, PROC INT CONF SOFTW, P380, DOI 10.1145/2884781.2884881
   Zhang C, 2012, PROC INT CONF SOFTW, P826, DOI 10.1109/ICSE.2012.6227136
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
   Zhong H, 2013, LECT NOTES COMPUT SC, V7793, P130, DOI 10.1007/978-3-642-37057-1_10
   Zhong H, 2013, ACM SIGPLAN NOTICES, V48, P803, DOI [10.1145/2509136.2509523, 10.1145/2544173.2509523]
   Zhong H, 2009, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2009.94
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
   Zhong H, 2008, ASIA PAC SOFWR ENG, P221, DOI 10.1109/APSEC.2008.54
   Zhou B., 2014, Proceedings of the International Conference on Program Comprehension (ICPC'14), P95, DOI DOI 10.1145/2597008.2597142
   Zhu ZX, 2014, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSME.2014.52
NR 94
TC 34
Z9 37
U1 1
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2019
VL 45
IS 4
BP 319
EP 334
DI 10.1109/TSE.2017.2782280
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HU4MK
UT WOS:000465248900001
DA 2024-07-18
ER

PT J
AU Dorn, J
   Lacomis, J
   Weimer, W
   Forrest, S
AF Dorn, Jonathan
   Lacomis, Jeremy
   Weimer, Westley
   Forrest, Stephanie
TI Automatically Exploring Tradeoffs Between Software Output Fidelity and
   Energy Costs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Power optimization; search-based software engineering; genetic
   algorithms; profile-guided optimization; optimizing noisy functions;
   accurate energy measurement
ID AUTOMATED REPAIR
AB Data centers account for a significant fraction of global energy consumption and represent a growing business cost. Most current approaches to reducing energy use in data centers treat it as a hardware, compiler, or scheduling problem. This article focuses instead on the software level, showing how to reduce the energy used by programs when they execute. By combining insights from search-based software engineering, mutational robustness, profile-guided optimization, and approximate computing, the Producing Green Applications Using Genetic Exploration (POWERGAUGE) algorithm finds variants of individual programs that use less energy than the original. We apply hardware, software, and statistical techniques to manage the complexity of accurately assigning physical energy measurements to particular processes. In addition, our approach allows, but does not require, relaxing output quality requirements to achieve greater non-functional improvements. POWERGAUGE optimizations are validated using physical performance measurements. Experimental results on PARSEC benchmarks and two larger programs show average energy reductions of 14% when requiring the preservation of original output quality and 41% when allowing for human-acceptable levels of error.
C1 [Dorn, Jonathan; Lacomis, Jeremy; Weimer, Westley] Univ Virginia, Dept Comp Sci, Charlottesville, VA 22904 USA.
   [Forrest, Stephanie] Arizona State Univ, Ctr Biocomputat Secur & Soc, Tempe, AZ 85287 USA.
   [Forrest, Stephanie] Arizona State Univ, Comp Informat & Decis Syst Engn, Tempe, AZ 85287 USA.
   [Forrest, Stephanie] Santa Fe Inst, Santa Fe, NM 87287 USA.
C3 University of Virginia; Arizona State University; Arizona State
   University-Tempe; Arizona State University; Arizona State
   University-Tempe; The Santa Fe Institute
RP Dorn, J (corresponding author), Univ Virginia, Dept Comp Sci, Charlottesville, VA 22904 USA.
EM dorn@virginia.edu; lacomis@virginia.edu; weimer@virginia.edu;
   stephanie.forrest@asu.edu
OI Forrest, Stephanie/0000-0002-5904-1646
CR Ackling T, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1427
   [Anonymous], 2011, BENCHMARKING MODERN
   [Anonymous], 2014, IP1408A NRDC
   [Anonymous], 2015, P COMP PUBL 2015 ANN
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Bessa T, 2016, LECT NOTES COMPUT SC, V9889, P16, DOI 10.1007/978-3-319-45279-1_2
   Bruce BR, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1327, DOI 10.1145/2739480.2754752
   CHANG PP, 1991, SOFTWARE PRACT EXPER, V21, P1301, DOI 10.1002/spe.4380211204
   Daka E, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P107, DOI 10.1145/2786805.2786838
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Ferreira MA, 2013, 2013 2ND INTERNATIONAL WORKSHOP ON GREEN AND SUSTAINABLE SOFTWARE (GREENS), P30, DOI 10.1109/GREENS.2013.6606419
   Glinz M, 2007, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2007.45
   Graham S. L., 1982, SIGPLAN Notices, V17, P120, DOI 10.1145/872726.806987
   Gupta R, 2003, COMPILER DESIGN HANDBOOK, P143
   Gupta V, 2013, IEEE T COMPUT AID D, V32, P124, DOI 10.1109/TCAD.2012.2217962
   Han JM, 2013, PROCEEDINGS OF 2013 CHINA INTERNATIONAL CONFERENCE ON INSURANCE AND RISK MANAGEMENT, P1
   Hoelzle Urs., 2009, The Datacenter as a Computer: An Introduction to the Design of Warehouse-Scale Machines, V1st
   Hoffmann H., 2009, USING CODE PERFORATI
   Jacobson H, 2005, INT S HIGH PERF COMP, P238, DOI 10.1109/HPCA.2005.33
   Jones Terry, 1995, P 6 INT C GEN ALG, V95, P184
   Kanev S, 2015, 2015 ACM/IEEE 42ND ANNUAL INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE (ISCA), P158, DOI 10.1145/2749469.2750392
   KASSON JM, 1992, ACM T GRAPHIC, V11, P373, DOI 10.1145/146443.146479
   Koomey Jonathan., 2011, A report by Analytical Press, completed at the request of The New York Times
   Koza J.R., 1992, GENETIC PROGRAMMING, VVolume 1
   Langdon WB, 2016, LECT NOTES COMPUT SC, V9921, P249, DOI 10.1007/978-3-319-45823-6_23
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le Goues C, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P959, DOI 10.1145/2330163.2330296
   Lee C, 2000, PROC INT SYMP SYST, P55, DOI 10.1109/ISSS.2000.874029
   Lee MTC, 1997, IEEE T VLSI SYST, V5, P123, DOI 10.1109/92.555992
   Li D, 2013, P 2013 INT S SOFTW T, P78, DOI DOI 10.1145/2483760.2483780
   Linares-Vásquez M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P143, DOI 10.1145/2786805.2786847
   Lu SL, 2004, COMPUTER, V37, P67, DOI 10.1109/MC.2004.1274006
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Manotas I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P503, DOI 10.11455/2568225.2568297
   Mars J, 2012, IEEE MICRO, V32, P88, DOI 10.1109/MM.2012.22
   Massalin H., 1987, Proceedings of the Second International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS II) (Cat. No.87CH2440-6), P122
   McIntire D, 2012, ACM T EMBED COMPUT S, V11, DOI 10.1145/2220336.2220339
   Miller B. L., 1995, Complex Systems, V9, P193
   Nowka KJ, 2002, IEEE J SOLID-ST CIRC, V37, P1441, DOI 10.1109/JSSC.2002.803941
   Orlov M, 2011, IEEE T EVOLUT COMPUT, V15, P166, DOI 10.1109/TEVC.2010.2052622
   PETTIS K, 1990, SIGPLAN NOTICES, V25, P16
   Pinto G, 2014, ACM SIGPLAN NOTICES, V49, P345, DOI [10.1145/2714064.2660235, 10.1145/2660193.2660235]
   Reda S, 2012, FOUND TRENDS ELECTRO, V6, P121, DOI 10.1561/1000000022
   Rinard M, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P369
   Rinard Martin, 2006, Proceedings of the 20th annual international conference on Supercomputing, P324, DOI 10.1145/1183401.1183447
   Rubner Y, 2000, INT J COMPUT VISION, V40, P99, DOI 10.1023/A:1026543900054
   Sarbishei O, 2010, ICCAD-IEEE ACM INT, P739, DOI 10.1109/ICCAD.2010.5654270
   Schkufza E, 2013, ACM SIGPLAN NOTICES, V48, P305, DOI 10.1145/2499368.2451150
   Schulte E, 2014, ACM SIGPLAN NOTICES, V49, P639, DOI 10.1145/2541940.2541980
   Schulte E, 2013, ACM SIGPLAN NOTICES, V48, P317, DOI 10.1145/2499368.2451151
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Sidiroglou-Douskos S., 2011, P 19 ACM SIGS S 13 E
   Tang LJ, 2013, INT S HIGH PERF COMP, P188, DOI 10.1109/HPCA.2013.6522318
   Tian Y., 2015, GREAT LAKES S VLSI G, P337
   Tilevich E, 2002, LECT NOTES COMPUT SC, V2374, P178
   Ulaby FT, 2013, Circuits
   Venkataramani S., 2015, Proceedings of the 52nd Annual Design Automation Conference, p120:1, DOI [DOI 10.1145/2744769.2751163, 10.1145/2744769.2751163]
   Villemin R., 2015, P 28 ANN C COMP GRAP
   Wang Z, 2004, IEEE T IMAGE PROCESS, V13, P600, DOI 10.1109/TIP.2003.819861
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Yang ZX, 2015, IEEE INT SYMP NANO, P145, DOI 10.1109/NANOARCH.2015.7180603
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
NR 63
TC 9
Z9 9
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2019
VL 45
IS 3
BP 219
EP 236
DI 10.1109/TSE.2017.2775634
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HU4ME
UT WOS:000465248300001
DA 2024-07-18
ER

PT J
AU Yu, L
   Luo, XP
   Qian, CX
   Wang, S
   Leung, HKN
AF Yu, Le
   Luo, Xiapu
   Qian, Chenxiong
   Wang, Shuai
   Leung, Hareton K. N.
TI Enhancing the Description-to-Behavior Fidelity in Android Apps with
   Privacy Policy
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Mobile applications; privacy policy
ID TAXONOMY
AB Since more than 96 percent of mobile malware targets the Android platform, various techniques based on static code analysis or dynamic behavior analysis have been proposed to detect malicious apps. As malware is becoming more complicated and stealthy, recent research proposed a promising detection approach that looks for the inconsistency between an app's permissions and its description. In this paper, we first revisit this approach and reveal that using description and permission will lead to many false positives because descriptions often fail to declare all sensitive operations. Then, we propose exploiting an app's privacy policy and its bytecode to enhance the malware detection based on description and permissions. It is non-trivial to automatically analyze privacy policy and perform the cross-verification among these four kinds of software artifacts including, privacy policy, bytecode, description, and permissions. To address these challenging issues, we first propose a novel data flow model for analyzing privacy policy, and then develop a new system, named TAPVerifier, for carrying out investigation of individual software artifacts and conducting the cross-verification. The experimental results show that TAPVerifier can analyze privacy policy with a high accuracy and recall rate. More importantly, integrating privacy policy and bytecode level information can remove up to 59.4 percent false alerts of the state-of-the-art systems, such as AutoCog, CHABADA, etc.
C1 [Yu, Le; Luo, Xiapu; Qian, Chenxiong; Wang, Shuai; Leung, Hareton K. N.] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Hong Kong, Peoples R China.
C3 Hong Kong Polytechnic University
RP Luo, XP (corresponding author), Hong Kong Polytech Univ, Dept Comp, Hong Kong, Hong Kong, Peoples R China.
EM yulele08@gmail.com; csxluo@comp.polyu.edu.hk; chenxiongqian@gmail.com;
   waishuai@hotmail.com; hareton.leung@polyu.edu.hk
RI Wang, Shuai/HZJ-7466-2023; Wang, Shuaian/C-3559-2012; YU, Le/B-7784-2013
OI YU, Le/0000-0003-1227-1273; Qian, Chenxiong/0000-0002-6201-6011; Luo,
   Xiapu/0000-0002-9082-3208
FU Hong Kong GRF [PolyU 5389/13E, 152279/16E]; Shenzhen City Science and
   Technology RD Fund [JCYJ20150630115257892]; Hong Kong RGC Project [CityU
   C1008-16G]; HKPolyU Research Grants (G-YBJX); National Natural Science
   Foundation of China [61602371]
FX We thank the anonymous reviewers for their quality reviews and
   suggestions. This work is supported in part by the Hong Kong GRF (No.
   PolyU 5389/13E, 152279/16E), Shenzhen City Science and Technology R&D
   Fund (No. JCYJ20150630115257892), Hong Kong RGC Project (No. CityU
   C1008-16G), the HKPolyU Research Grants (G-YBJX), and the National
   Natural Science Foundation of China (No. 61602371).
CR Alam S, 2017, COMPUT SECUR, V65, P230, DOI 10.1016/j.cose.2016.11.011
   [Anonymous], P 22 IEEE INT C REQ
   [Anonymous], P 5 ANN ACM CCS WORK
   Anton AI, 2004, IEEE SECUR PRIV, V2, P36, DOI 10.1109/MSECP.2004.1281243
   Antón AI, 2004, REQUIR ENG, V9, P169, DOI 10.1007/s00766-003-0183-z
   Antón AI, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P23, DOI 10.1109/ICRE.2002.1048502
   Arp D., 2014, P S NETW DISTR SYST
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Au Kathy Wain Yee, 2012, P 2012 ACM C COMP CO, P217
   Backes M, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P1101
   Bartel A, 2014, IEEE T SOFTWARE ENG, V40, P617, DOI 10.1109/TSE.2014.2322867
   Bartkowiak A, 2012, FED CONF COMPUT SCI, P27
   Bichsel B, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P343, DOI 10.1145/2976749.2978422
   Blei DM, 2012, COMMUN ACM, V55, P77, DOI 10.1145/2133806.2133826
   Breaux TD, 2014, REQUIR ENG, V19, P281, DOI 10.1007/s00766-013-0190-7
   Cao Y., 2015, P S NETW DISTR SYST
   Cer Daniel M., 2010, Proceedings of the Seventh International Conference on Language Resources and Evaluation (LREC'10), P1628
   Chen K., 2013, P S NETW DISTR SYST
   Costante Elisa, 2012, Security. Data Privacy Management and Autonomous Spontaneous, P146
   Dean J, 1995, LECT NOTES COMPUT SC, V952, P77, DOI 10.1007/3-540-49538-x_5
   Enck William., 2010, Proceedings of the USENIX Symposium on Operating Systems Design and Implementation (OSDI), P393
   Felt AP, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P627
   Felt AdriennePorter., 2011, USENIX SECURITY S, V30, P88
   Feng Y, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P576, DOI 10.1145/2635868.2635869
   Gabrilovich E, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1606
   Girju R., 2003, P HUMAN LANGUAGE TEC, P1
   Gorla A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1025, DOI 10.1145/2568225.2568276
   Grace  M., 2012, P 10 INT C MOB SYST, P281, DOI DOI 10.1145/2307636.2307663
   Huang JJ, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P977
   Kong DG, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P530, DOI 10.1145/2810103.2813689
   Li L., 2016, PROC ISSTA, P318
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Liu Fei, 2014, P COLING 2014 25 INT, P884
   Lu K., 2015, P S NETW DISTR SYST
   Massey AK, 2013, S VIS LANG HUM CEN C, P4, DOI 10.1109/RE.2013.6636700
   Masson A, 2008, POSITIF, P1
   Nan YH, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P993
   O'Connor B., 2013, ARXIV13101975
   Pandita Rahul, 2013, USENIX SECURITY 13, P527
   Poeplau S., 2014, P S NETW DISTR SYST
   Qian CX, 2014, I C DEPEND SYS NETWO, P180, DOI 10.1109/DSN.2014.30
   Qian CX, 2015, IEEE MICRO, V35, P44, DOI 10.1109/MM.2015.25
   Qu ZY, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1354, DOI 10.1145/2660267.2660287
   Ramanath R, 2014, PROCEEDINGS OF THE 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 2, P605
   Rasthofer S., 2014, P S NETW DISTR SYST
   Rastogi V., 2015, Security and Privacy in Communication Networks-11th International Conference, SecureComm 2015, Dallas, TX, USA, October 26-29, 2015, Revised Selected Papers, volume 164 of SecureComm' 15, P256
   Rastogi V., 2013, P 3 ACM C DAT APPL S, P209
   Reaves B, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2996358
   Schaub F., 2015, 11 S US PRIV SEC SOU, P1, DOI DOI 10.1145/567752.567774
   Solove D. J., 2008, Understanding Privacy
   Solove DJ, 2006, U PENN LAW REV, V154, P477, DOI 10.2307/40041279
   Sufatrio, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2733306
   Sunyaev A, 2015, J AM MED INFORM ASSN, V22, pE28, DOI 10.1136/amiajnl-2013-002605
   Tam K, 2015, P S NETW DISTR SYST
   Tam K, 2017, ACM COMPUT SURV, V49, DOI 10.1145/3017427
   Vallee-Rai R., 1999, Proceedings of the 1999 Conference of the Centre for Advanced Studies on Collaborative Research, CASCON'99, page, P13
   Watanabe Takuya, 2015, S US PRIV SEC SOUPS, P241
   Wei XT, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P31
   Wu L., 2013, PROC 20 SIGSAC C COM, P623, DOI DOI 10.1145/2508859.2516728
   Xiao X., 2012, P ACM SIGSOFT 20 INT, P1
   Xu M, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2963145
   Yan L.K., 2012, P 21 USENIX C SECURI
   Yang W, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P303, DOI 10.1109/ICSE.2015.50
   Yu L., 2015, P 5 ANN ACM CCS WORK, P39, DOI DOI 10.1145/2808117.2808125
   Yu L, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P415, DOI 10.1109/SANER.2016.67
   Zhang M, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1105, DOI 10.1145/2660267.2660359
   Zhang Y., 2013, ACM CCS
   Zhang YQ, 2015, LECT NOTES COMPUT SC, V9327, P293, DOI 10.1007/978-3-319-24177-7_15
   Zhou Y., 2012, P S NETW DISTR SYST
   Zimmeck S., 2017, P S NETW DISTR SYST
   Zimmeck S, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P1
NR 71
TC 35
Z9 41
U1 3
U2 33
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2018
VL 44
IS 9
BP 834
EP 854
DI 10.1109/TSE.2017.2730198
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GT9EL
UT WOS:000444842700002
DA 2024-07-18
ER

PT J
AU Hierons, RM
   Turker, UC
AF Hierons, Robert M.
   Turker, Uraz Cengiz
TI Parallel Algorithms for Testing Finite State Machines: Generating UIO
   Sequences
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering/software/program verification; software
   engineering/testing and debugging; software engineering/test design;
   finite state machine; unique input output sequence generation; general
   purpose graphics processing units
ID UNIQUE INPUT/OUTPUT SEQUENCES; NUMBER
AB This paper describes an efficient parallel algorithm that uses many-core GPUs for automatically deriving Unique Input Output sequences (UIOs) from Finite State Machines. The proposed algorithm uses the global scope of the GPU's global memory through coalesced memory access and minimises the transfer between CPU and GPU memory. The results of experiments indicate that the proposed method yields considerably better results compared to a single core UIO construction algorithm. Our algorithm is scalable and when multiple GPUs are added into the system the approach can handle FSMs whose size is larger than the memory available on a single GPU.
C1 [Hierons, Robert M.; Turker, Uraz Cengiz] Brunel Univ London, Dept Comp Sci, London, England.
C3 Brunel University
RP Hierons, RM (corresponding author), Brunel Univ London, Dept Comp Sci, London, England.
EM rob.hierons@brunel.ac.uk; uraz.turker@brunel.ac.uk
RI Turker, Uraz/JDN-0220-2023
OI Turker, Uraz/0000-0001-5976-1945; Hierons, Robert/0000-0002-4771-1446
FU Scientific and Technological Research Council of Turkey (TUBITAK)
   [1059B191400424]; NVIDIA corporation
FX This research was supported by The Scientific and Technological Research
   Council of Turkey (TUBITAK) under grant no 1059B191400424 and by the
   NVIDIA corporation.
CR Ahmad I, 2004, IEE P-COMPUT DIG T, V151, P131, DOI 10.1049/ip-cdt:20040350
   Aho A.V., 1988, P IEEE 8 INT S PROT, P75
   AHO AV, 1991, IEEE T COMMUN, V39, P1604, DOI 10.1109/26.111442
   [Anonymous], PROTOCOL TEST SYSTEM
   [Anonymous], 1971, Theory of Machines and Computations, DOI DOI 10.1016/B978-0-12-417750-5.50022-1
   [Anonymous], 1994, P 7 INT WORKSH PROT
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], 1964, 5 ANN S SWITCH CIRC, DOI DOI 10.1109/SWCT.1964.8
   [Anonymous], CUDA APPL DES DEV
   Betin-Can A, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P248, DOI 10.1109/ASE.2004.1342742
   Brglez F., 1996, ACM SIGMOD BENCHMARK
   Brinksma Ed., 1988, PROTOCOL SPECIFICATI, VVIII, P63
   CHAN WYL, 1989, COMP COMM R, V19, P283, DOI 10.1145/75247.75274
   CHEN WH, 1995, IEEE ACM T NETWORK, V3, P152, DOI 10.1109/90.374116
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Guo Q, 2005, IEE PROC-SOFTW, V152, P127, DOI 10.1049/ip-sen:20045001
   Guo Q, 2004, LECT NOTES COMPUT SC, V2931, P164
   Harish P, 2007, LECT NOTES COMPUT SC, V4873, P197
   Haydar M, 2004, LECT NOTES COMPUT SC, V3235, P115
   Hierons RM, 2010, AUTOMAT SOFTW ENG, V17, P217, DOI 10.1007/s10515-009-0061-0
   Hierons RM, 2004, INFORM PROCESS LETT, V90, P287, DOI 10.1016/j.ipl.2004.03.003
   Jusas V, 2012, COMM COM INF SC, V319, P138
   Kirk D., 2012, PROGRAMMING MASSIVEL, VSecond
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   LEE D, 1994, IEEE T COMPUT, V43, P306, DOI 10.1109/12.272431
   Luo G., 1994, P 7 IFIP WORKSH PROT, P95
   Luo LJ, 2010, DES AUT CON, P52
   Merrill D, 2012, ACM SIGPLAN NOTICES, V47, P117, DOI 10.1145/2370036.2145832
   Moore E.F., 1956, AUTOMATA STUDIES
   MOTTELER K, 1994, IFIP TRANS C, V19, P21
   Naik K, 1997, IEEE ACM T NETWORK, V5, P585, DOI 10.1109/90.649519
   Nguyen C.D., 2012, Proceedings of the 2012 International Symposium on Software Testing and Analysis, P100, DOI 10.1145/04000800.2336765
   Petrenko A, 2005, IEEE T COMPUT, V54, P1154, DOI 10.1109/TC.2005.152
   Pomeranz I, 1997, IEEE T COMPUT, V46, P783, DOI 10.1109/12.599899
   SABNANI K, 1988, COMPUT NETWORKS ISDN, V15, P285, DOI 10.1016/0169-7552(88)90064-5
   Satish N., 2009, PROC IEEE INT S PARA, P1
   Sengupta S, 2007, GRAPHICS HARDWARE 2007: ACM SIGGRAPH / EUROGRAPHICS SYMPOSIUM PROCEEDINGS, P97
   Sidhu D., 1988, Computer Communication Review, V18, P257, DOI 10.1145/52325.52350
   SIDHU DP, 1989, IEEE T SOFTWARE ENG, V15, P413, DOI 10.1109/32.16602
   Simao A, 2010, IEEE T COMPUT, V59, P1023, DOI 10.1109/TC.2010.17
   Thummalapenta S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P162, DOI 10.1109/ICSE.2013.6606562
   URAL H, 1993, COMPUT COMMUN, V16, P653, DOI 10.1016/0140-3664(93)90082-4
   Ural H, 1997, IEEE T COMPUT, V46, P93, DOI 10.1109/12.559807
   Vuong SonT., 1989, PROC 2 IFIP INT WORK, P161
   WANG BY, 1987, COMPUT COMMUN, V10, P79, DOI 10.1016/0140-3664(87)90104-6
   YAO MG, 1993, IFIP TRANS C, V16, P241
NR 46
TC 17
Z9 17
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2016
VL 42
IS 11
BP 1077
EP 1091
DI 10.1109/TSE.2016.2539964
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ED5BK
UT WOS:000388866100005
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Cai, Y
   Lu, Q
AF Cai, Yan
   Lu, Qiong
TI Dynamic Testing for Deadlocks via Constraints
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Deadlock triggering; scheduling; should-happen-before relation;
   constraint; reliability; verification
AB Existing deadlock detectors are either not scalable or may report false positives when suggesting cycles as potential deadlocks. Additionally, they may not effectively trigger deadlocks and handle false positives. We propose a technique called ConLock(+), which firstly analyzes each cycle and its corresponding execution to identify a set of scheduling constraints that are necessary conditions to trigger the corresponding deadlock. The ConLock(+) technique then performs a second run to enforce the set of constraints, which will trigger a deadlock if the cycle is a real one. Or if not, ConLock(+) reports a steering failure for that cycle and also identifies other similar cycles which would also produce steering failures. For each confirmed deadlock, ConLock(+) performs a static analysis to identify conflicting memory access that would also contribute to the occurrence of the deadlock. This analysis is helpful to enable developers to understand and fix deadlocks. ConLock(+) has been validated on a suite of real-world programs with 16 real deadlocks. The results show that across all 811 cycles, ConLock(+) confirmed all of the 16 deadlocks with a probability of >= 80 percent. For the remaining cycles, ConLock(+) reported steering failures and also identified that five deadlocks also involved conflicting memory accesses.
C1 [Cai, Yan] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing, Peoples R China.
   [Lu, Qiong] Chinese Acad Sci, Inst Software, Technol Ctr Software Engn, Beijing, Peoples R China.
C3 Chinese Academy of Sciences; Institute of Software, CAS; Chinese Academy
   of Sciences; Institute of Software, CAS
RP Cai, Y (corresponding author), Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing, Peoples R China.
EM ycai.mail@gmail.com; luqiong13@otcaix.iscas.ac.cn
FU National Basic Research (973) Program of China [2014CB340702]; National
   Science Foundation of China (NSFC) [61502465, 91418206]
FX We sincerely thank the anonymous reviewers for their invaluable comments
   and suggestions on improving the manuscripts of this paper. We also
   thank Jian Zhang and Ernst Moritz Hahn for proofreading the manuscripts.
   This paper is supported in part by the National Basic Research (973)
   Program of China (2014CB340702) and the National Science Foundation of
   China (NSFC) (grant No. 61502465 and 91418206). All correspondence
   should be addressed to Yan Cai.
CR Agarwal R., 2005, HAIF VER C, P191
   Altekar G, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P193
   [Anonymous], P 24 ACM S OP SYST P
   [Anonymous], 2016, JDBC CONNECTOR 5 0
   Bensalem S., 2006, PADTAD'06, P41, DOI DOI 10.1145/1147403.1147412
   Bensalem S, 2006, LECT NOTES COMPUT SC, V3875, P208
   Burckhardt S, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P167
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cai Y., 2014, P ACM INT C MEAS MOD, P491
   Cai Y, 2015, IEEE T PARALL DISTR, V26, P13, DOI 10.1109/TPDS.2014.2307864
   Cai Y, 2014, IEEE T SOFTWARE ENG, V40, P266, DOI 10.1109/TSE.2014.2301725
   Cai Y, 2013, IEEE T PARALL DISTR, V24, P2407, DOI 10.1109/TPDS.2013.13
   Cai Y, 2013, ACM SIGPLAN NOTICES, V48, P311, DOI 10.1145/2517327.2442560
   Cai Y, 2012, PROC INT CONF SOFTW, P606, DOI 10.1109/ICSE.2012.6227156
   Chipounov Vitaly, 2009, P 5 WORKSH HOT TOP S
   Deshmukh J, 2009, IEEE INT CONF AUTOM, P480, DOI 10.1109/ASE.2009.14
   Eslamimehr M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P353, DOI 10.1145/2635868.2635918
   Farchi E., 2005, P WORKSH PAR DISTR S
   Flanagan C, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P121, DOI 10.1145/1542476.1542490
   Gupta A., 2011, Int. J. Biopharm. Toxicol. Res, V1, P1, DOI DOI 10.1371/J0URNAL.P0NE.0022730
   Hong S., 2012, ISSTA, P210, DOI [10.1145/2338965.2336779, DOI 10.1145/2338965.2336779]
   Joshi P, 2009, LECT NOTES COMPUT SC, V5643, P675, DOI 10.1007/978-3-642-02658-4_54
   Joshi P, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P110, DOI 10.1145/1542476.1542489
   Joshi Pallavi, 2010, P 18 ACM SIGSOFT INT, P327, DOI 10.1145/1882291.1882339
   Jula H., 2008, OSDI, P295
   Jula H, 2011, I C DEPEND SYS NETWO, P181, DOI 10.1109/DSN.2011.5958217
   Kahlon V, 2005, LECT NOTES COMPUT SC, V3576, P505
   Lai Z., 2010, ICSE, P235, DOI [10.1145/1806799.1806836, DOI 10.1145/1806799.1806836]
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   LUK CK, 2005, P ACM SIGPLAN C PROG, P191
   Marino D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P322, DOI 10.1109/ICSE.2013.6606578
   Naik M, 2009, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2009.5070538
   Narayanasamy S, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P22, DOI 10.1145/1250734.1250738
   Nir-Buchbinder Y, 2008, LECT NOTES COMPUT SC, V5289, P104
   Park S, 2009, ACM SIGPLAN NOTICES, V44, P25, DOI 10.1145/1508284.1508249
   Pradel M, 2012, ACM SIGPLAN NOTICES, V47, P521, DOI 10.1145/2345156.2254126
   Rungta N, 2009, LECT NOTES COMPUT SC, V5578, P174, DOI 10.1007/978-3-642-02652-2_16
   Samak M, 2014, ACM SIGPLAN NOTICES, V49, P29, DOI [10.1145/2692916.2555262, 10.1145/2555243.2555262]
   Samak M, 2014, ACM SIGPLAN NOTICES, V49, P473, DOI [10.1145/2714064.2660238, 10.1145/2660193.2660238]
   Sen K, 2006, LECT NOTES COMPUT SC, V4144, P419
   Shanbhag VK, 2008, ASIA PAC SOFWR ENG, P361, DOI 10.1109/APSEC.2008.68
   Sorrentino Francesco, 2010, P 18 ACM SIGSOFT INT, P37, DOI DOI 10.1145/1882291.1882300
   Wang Yin, 2008, 8 USENIX S OP SYST D, P281
   Williams A, 2005, LECT NOTES COMPUT SC, V3586, P602
   Xu XL, 2015, FRONT COMPUT SCI-CHI, V9, P554, DOI 10.1007/s11704-015-4900-9
   Yu JJ, 2012, PROCEEDINGS OF THE ASME TURBO EXPO 2012, VOL 7, PTS A AND B, P485, DOI 10.1145/2398857.2384651
   Zamfir C, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P321
   Zheng L, 2015, FRONT COMPUT SCI-CHI, V9, P524, DOI 10.1007/s11704-015-4042-0
   Zhi Da Luo, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P309, DOI 10.1109/ICST.2011.22
NR 51
TC 20
Z9 22
U1 1
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2016
VL 42
IS 9
BP 825
EP 842
DI 10.1109/TSE.2016.2537335
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DX8UU
UT WOS:000384666100002
DA 2024-07-18
ER

PT J
AU Pittke, F
   Leopold, H
   Mendling, J
AF Pittke, Fabian
   Leopold, Henrik
   Mendling, Jan
TI Automatic Detection and Resolution of Lexical Ambiguity in Process
   Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Identification of lexical ambiguity; resolution of lexical ambiguity;
   business process models
ID BUSINESS PROCESS MODELS; INFORMATION-TECHNOLOGY; GUIDELINES; QUALITY
AB System-related engineering tasks are often conducted using process models. In this context, it is essential that these models do not contain structural or terminological inconsistencies. To this end, several automatic analysis techniques have been proposed to support quality assurance. While formal properties of control flow can be checked in an automated fashion, there is a lack of techniques addressing textual quality. More specifically, there is currently no technique available for handling the issue of lexical ambiguity caused by homonyms and synonyms. In this paper, we address this research gap and propose a technique that detects and resolves lexical ambiguities in process models. We evaluate the technique using three process model collections from practice varying in size, domain, and degree of standardization. The evaluation demonstrates that the technique significantly reduces the level of lexical ambiguity and that meaningful candidates are proposed for resolving ambiguity.
C1 [Pittke, Fabian; Mendling, Jan] WU Vienna, Inst Informat Business, Vienna, Austria.
   [Leopold, Henrik] Vrije Univ Amsterdam, Dept Comp Sci, Amsterdam, Netherlands.
C3 Vrije Universiteit Amsterdam
RP Pittke, F (corresponding author), WU Vienna, Inst Informat Business, Vienna, Austria.
EM fabian.pittke@wu.ac.at; h.leopold@vu.nl; jan.mendling@wu.ac.at
CR [Abran A. IEEE Computer Society IEEE Computer Society], 2004, GUIDE SOFTWARE ENG B
   Agirre E., 2000, Proceedings of the COLING-2000 Workshop on Semantic Annotation and Intelligent Content, P11
   Ambriola V., 2006, Automated Software Engineering, V13, P107, DOI 10.1007/s10515-006-5468-2
   Anda B., 2002, SEKE 02, P127
   [Anonymous], SAP R R 3 PROCESS OR
   [Anonymous], 2004, P 42 ANN M ASS COMPU, DOI DOI 10.3115/1218955.1218991
   Attaran M, 2004, INFORM MANAGE-AMSTER, V41, P585, DOI 10.1016/S0378-7206(03)00098-3
   Azevedo LG, 2009, LECT NOTES BUS INF P, V29, P99
   Baeza-Yates R., 1999, Modern information retrieval
   Barjis J, 2008, SCI COMPUT PROGRAM, V71, P73, DOI 10.1016/j.scico.2008.01.002
   Becker J, 2000, LECT NOTES COMPUT SC, V1806, P30
   Becker J, 2011, PROCESS MANAGEMENT: A GUIDE FOR THE DESIGN OF BUSINESS PROCESSES, SECOND EDITION, P1, DOI 10.1007/978-3-642-15190-3
   Becker J., 2009, ECIS, P2636
   BENARI D, 1988, P 2 INT C THEOR METH, P175
   Berger J. O., 1985, STAT DECISION THEORY, DOI DOI 10.1007/978-1-4757-4286-2
   Berry D. M., 2003, From contract drafting to software specification: Linguistic sources of ambiguity
   BOEHM BW, 1988, IEEE T SOFTWARE ENG, V14, P1462, DOI 10.1109/32.6191
   Bolloju N, 2006, COMMUN ACM, V49, P108, DOI 10.1145/1139922.1139926
   Bouzeghoub M., 1985, Very Large Data Bases. Proceedings of the Eleventh International Conference, P82
   Brown LD, 2001, STAT SCI, V16, P101, DOI 10.1214/ss/1009213286
   Ceccato M., 2004, DIT0411 U TRENT DEP
   Chantree F, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P59
   Cockburn A., 2001, Writing effective use cases, V1
   Cox K., 2000, Empirical Software Engineering, V5, P245, DOI 10.1023/A:1026542700033
   DAVENPORT TH, 1990, SLOAN MANAGE REV, V31, P11
   Davies I, 2006, DATA KNOWL ENG, V58, P358, DOI 10.1016/j.datak.2005.07.007
   Deissenboeck F, 2006, SOFTWARE QUAL J, V14, P261, DOI 10.1007/s11219-006-9219-1
   Delfmann P, 2009, ENTERP MODELLING INF, V4, P3
   Denger C, 2003, IEEE INTERNATIONAL CONFERENCE ON SOFTWARE - SCIENCE, TECHNOLOGY & ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/SWSTE.2003.1245428
   Dijkman R, 2012, COMPUT IND, V63, P91, DOI 10.1016/j.compind.2011.12.003
   Dijkman R, 2011, INFORM SYST, V36, P498, DOI 10.1016/j.is.2010.09.006
   Dijkman R, 2009, LECT NOTES COMPUT SC, V5701, P48, DOI 10.1007/978-3-642-03848-8_5
   Dumas M, 2005, PROCESS-AWARE INFORMATION SYSTEMS: BRIDGING PEOPLE AND SOFTWARE THROUGH PROCESS TECHNOLOGY, P1, DOI 10.1002/0471741442
   Ehrig M., 2007, Proceedings of the Fourth Asia-Pacific Conference on Conceptual Modelling, Darlinghurst: Australian Computer Society, P71
   Fabbrini F., 2000, P SOFTWARE INTERNET, P1
   Fantechi A., 2003, Requirements Engineering, V8, P161, DOI 10.1007/s00766-003-0174-0
   FRAKES WB, 1994, IEEE T SOFTWARE ENG, V20, P617, DOI 10.1109/32.310671
   Gleich B, 2010, LECT NOTES COMPUT SC, V6182, P218, DOI 10.1007/978-3-642-14192-8_20
   Gordijn J, 2000, LECT NOTES COMPUT SC, V1921, P40
   Hayne S., 1990, Sixth International Conference on Data Engineering (Cat. No.90CH2840-7), P402, DOI 10.1109/ICDE.1990.113493
   Heitmeyer C. L., 1996, ACM Transactions on Software Engineering and Methodology, V5, P231, DOI 10.1145/234426.234431
   Hornby A. S., 1974, OXFORD ADV LEARNED D, V1428
   Jayal A., 2009, INNOVATION TEACHING, V8, P3
   Jayal Ambikesh, 2009, J. Educ. Resour. Comput., V8
   Kamsties E, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P245, DOI 10.1007/3-540-28244-0_11
   Kamsties E., 2000, P 13 INT C SOFTW SYS, P89
   Kamsties E., 2001, P 1 WORKSH INSP SOFT, P68
   Kilgarriff A, 1998, COMPUT SPEECH LANG, V12, P453, DOI 10.1006/csla.1998.0108
   Knackstedt R., 2008, P EUR C INF SYST, P1965
   Lami G., 2005, QUARS TOOL ANAL REQU
   Lee K, 2002, LECT NOTES COMPUT SC, V2319, P62
   Lehmann T., 2007, P WORKSH SEM WEB EN, P1
   LEITE JCSD, 1991, IEEE T SOFTWARE ENG, V17, P1253, DOI 10.1109/32.106986
   Leopold H., 2013, THESIS HUMBOLDT U BE
   Leopold H, 2012, LECT NOTES BUS INF P, V117, P84
   Leopold H, 2013, DECIS SUPPORT SYST, V56, P310, DOI 10.1016/j.dss.2013.06.014
   Leopold H, 2012, LECT NOTES COMPUT SC, V7481, P319, DOI 10.1007/978-3-642-32885-5_25
   Leopold H, 2012, INFORM SYST, V37, P443, DOI 10.1016/j.is.2012.01.004
   Lin D., 1998, P 36 ANN M ASS COMP, V2, P768, DOI DOI 10.3115/980432.980696
   Lin D, 1998, P 15 INT C MACH LEAR, V98, P296
   Lin X, 1999, LIBR INFORM SCI RES, V21, P153, DOI 10.1016/S0740-8188(99)00007-9
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Marcus A, 2005, INT J SOFTW ENG KNOW, V15, P811, DOI 10.1142/S0218194005002543
   McCarthy D, 2007, COMPUT LINGUIST, V33, P553, DOI 10.1162/coli.2007.33.4.553
   Mendling J, 2010, INFORM SYST, V35, P467, DOI 10.1016/j.is.2009.03.009
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Mendling J, 2009, LECT NOTES COMPUT SC, V5460, P208
   Mens T, 2007, SOFTW SYST MODEL, V6, P269, DOI 10.1007/s10270-006-0044-6
   Mens T, 2006, LECT NOTES COMPUT SC, V4199, P200
   Mili A, 1998, ANN SOFTW ENG, V5, P349, DOI 10.1023/A:1018964121953
   Mili H, 2010, ACM COMPUT SURV, V43, DOI 10.1145/1824795.1824799
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Miller George, 1998, WORDNET ELECT LEXICA
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Navigli R., 2012, P 2012 JOINT C EMPIR, P1399
   Navigli R, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459355
   Navigli Roberto., 2012, Proceedings of the ACL 2012 System Demonstrations, P67
   Pantel P., 2002, P 8 ACM SIGKDD INT C, P613, DOI DOI 10.1145/775047.775138
   Pelleg D., 2000, P 17 INT C MACH LEAR, DOI DOI 10.1007/3-540-44491-2_3
   Piegorsch WW, 2004, COMPUT STAT DATA AN, V46, P309, DOI 10.1016/j.csda.2003.10.002
   Pittke F, 2013, LECT NOTES BUS INF P, V147, P292
   Plachouras V., 2003, P 12 TEXT RETR C TRE, P636
   Ponzetto SP, 2010, ACL 2010: 48TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P1522
   Procter P, 1981, LONGMAN DICT CONT EN
   Quinlan J.R., 1993, C4.5 : programs for machine learning
   Resnik P., 1999, Natural Language Engineering, V5, P113, DOI 10.1017/S1351324999002211
   Rolland C, 1998, IEEE T SOFTWARE ENG, V24, P1055, DOI 10.1109/32.738339
   Rolland C, 1998, DATA KNOWL ENG, V25, P125, DOI 10.1016/S0169-023X(97)86223-4
   Rosemann M, 2006, BUS PROCESS MANAG J, V12, P249, DOI 10.1108/14637150610657567
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Schuette R., 1998, Conceptual Modeling - ER'98. 17th International Conference on Conceptual Modeling. Proceedings, P240
   SCHUTZE H, 1992, SUPERCOMPUTING 92 : PROCEEDINGS, P787
   Schutze H, 1998, COMPUT LINGUIST, V24, P97
   Shull F., 1999, CSTR4070 U MAR, P1
   Cardoso ECS, 2009, 2009 13TH ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE WORKSHOPS (EDOCW 2009), P320, DOI 10.1109/EDOCW.2009.5331974
   Stevenson Angus, 2010, Oxford Dictionary of English
   TORNER F, 2006, P ACM IEEE INT S EMP, P115
   van der Aalst WMP, 2000, LECT NOTES COMPUT SC, V1806, P161
   Van Rijsbergen C. J., 1979, Information Retrieval, V2nd
   Veronis J., 1995, COMPUTATIONAL LEXICA, P251
   Weber I, 2010, DISTRIB PARALLEL DAT, V27, P271, DOI 10.1007/s10619-010-7060-9
   Wimmer M., 2011, MODELS SOFTWARE ENG, V6627. Lecture Notes in Computer Science, P150, DOI DOI 10.1007/978-3-642-21210-9
   Yang H., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, P53
   Yang H, 2011, REQUIR ENG, V16, P163, DOI 10.1007/s00766-011-0119-y
   Yue Wang, 2013, Natural Language Processing and Information Systems. 18th International Conference on Applications of Natural Language to Information Systems, NLDB 2013. Proceedings: LNCS 7934, P25, DOI 10.1007/978-3-642-38824-8_3
   Zhi Z, 2012, Long Papers, V1, P273
NR 106
TC 38
Z9 38
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2015
VL 41
IS 6
BP 526
EP 544
DI 10.1109/TSE.2015.2396895
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CK3ZL
UT WOS:000356155700001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Lim, SL
   Bentley, PJ
   Kanakam, N
   Ishikawa, F
   Honiden, S
AF Lim, Soo Ling
   Bentley, Peter J.
   Kanakam, Natalie
   Ishikawa, Fuyuki
   Honiden, Shinichi
TI Investigating Country Differences in Mobile App User Behavior and
   Challenges for Software Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements/specifications; market-driven software engineering; mobile
   application development; user requirements; survey research; app user
   behavior; software product lines; software ecosystems
ID SYSTEMS
AB Mobile applications (apps) are software developed for use on mobile devices and made available through app stores. App stores are highly competitive markets where developers need to cater to a large number of users spanning multiple countries. This work hypothesizes that there exist country differences in mobile app user behavior and conducts one of the largest surveys to date of app users across the world, in order to identify the precise nature of those differences. The survey investigated user adoption of the app store concept, app needs, and rationale for selecting or abandoning an app. We collected data from more than 15 countries, including USA, China, Japan, Germany, France, Brazil, United Kingdom, Italy, Russia, India, Canada, Spain, Australia, Mexico, and South Korea. Analysis of data provided by 4,824 participants showed significant differences in app user behaviors across countries, for example users from USA are more likely to download medical apps, users from the United Kingdom and Canada are more likely to be influenced by price, users from Japan and Australia are less likely to rate apps. Analysis of the results revealed new challenges to market-driven software engineering related to packaging requirements, feature space, quality expectations, app store dependency, price sensitivity, and ecosystem effect.
C1 [Lim, Soo Ling; Bentley, Peter J.] UCL, Dept Comp Sci, London WC1E 6BT, England.
   [Lim, Soo Ling] Natl Inst Informat, Honiden Lab, Tokyo, Japan.
   [Lim, Soo Ling] Bournemouth Univ, Software Syst Res Ctr, Poole BH12 5BB, Dorset, England.
   [Kanakam, Natalie] UCL, Dept Clin Educ & Hlth Psychol, London WC1E 6BT, England.
   [Ishikawa, Fuyuki] Natl Inst Informat, Digital Content & Media Sci Res Div, Tokyo, Japan.
   [Honiden, Shinichi] Natl Inst Informat, Tokyo, Japan.
C3 University of London; University College London; Research Organization
   of Information & Systems (ROIS); National Institute of Informatics (NII)
   - Japan; Bournemouth University; University of London; University
   College London; Research Organization of Information & Systems (ROIS);
   National Institute of Informatics (NII) - Japan; Research Organization
   of Information & Systems (ROIS); National Institute of Informatics (NII)
   - Japan
RP Lim, SL (corresponding author), UCL, Dept Comp Sci, London WC1E 6BT, England.
EM s.lim@cs.ucl.ac.uk; p.bentley@cs.ucl.ac.uk; n.kanakam@ucl.ac.uk;
   f-ishikawa@nii.ac.jp; honiden@nii.ac.jp
OI Bentley, Peter/0000-0001-6744-9302; Lim, Soo Ling/0000-0003-1325-6542;
   Kanakam, Natalie/0000-0003-3673-093X
CR [Anonymous], 2011, Proceedings of the 13th international conference on Human computer interaction with mobile devices and services, DOI [10.1145/2037373.2037383, DOI 10.1145/2037373.2037383]
   [Anonymous], 2003, Observing the user experience: A practitioner's guide to user research
   [Anonymous], 1991, Cultures and Organizations, Software of the Mind
   [Anonymous], 1993, 1 IEEE INT S REQUIRE
   [Anonymous], 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering-Volume
   Babbie E.R., 1990, SURV RES METHODS-GER, VSecond
   Bachmann F., 2001, Software Engineering Notes, V26, P126, DOI 10.1145/379377.375274
   Beus-Dukic L., 2000, P ICSE WORKSH COTS S, P4
   Castro-Herrera C, 2008, INT REQUIR ENG CONF, P165, DOI 10.1109/RE.2008.47
   Chen M., 2011, P 2011 ICONFERENCE I, P661, DOI DOI 10.1145/1940761.1940859
   Chittaranjan G, 2013, PERS UBIQUIT COMPUT, V17, P433, DOI 10.1007/s00779-011-0490-1
   Chung L., 2000, KLUWER ACAD PUBLISHE
   Cranor L.F., 2000, The Internet upheaval: raising questions, seeking answers in communications policy, P47
   Deutskens E, 2004, MARKET LETT, V15, P21, DOI 10.1023/B:MARK.0000021968.86465.00
   Distimo, 2011, IN DEPTH VIEW DOWNL
   Do T. M. T., 2011, P 13 INT C MULT INT, P353, DOI [DOI 10.1145/2070481.2070550, 10.1145/2070481.2070550]
   Falaki Hossein., 2010, Diversity in smartphone usage, P179, DOI DOI 10.1145/1814433.1814453
   Field A., 2009, Discovering statistics with SPSS, V3rd
   Franko OI, 2012, J MED SYST, V36, P3135, DOI 10.1007/s10916-011-9798-7
   Gero JS, 1998, ARTIF INTELL ENG, V12, P163, DOI 10.1016/S0954-1810(97)00022-8
   Gokhale A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P82, DOI 10.1109/ICSE.2013.6606554
   Gorla A., 2013, P 6 INT C SOFTW ENG, P1025
   Gosling SD, 2003, J RES PERS, V37, P504, DOI 10.1016/S0092-6566(03)00046-1
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Hellerstein J. M., 2008, United Nations Economic Commission for Europe (UNECE), V25, P1
   Hensinger E, 2013, PATTERN ANAL APPL, V16, P623, DOI 10.1007/s10044-012-0314-6
   Henze N, 2011, INT J MOB HUM COMPUT, V3, P71, DOI 10.4018/jmhci.2011100105
   Hjorth L, 2005, J INTERCULT STUD, V26, P39, DOI 10.1080/075256860500074003
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Jansen S, 2009, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE-COMPANION.2009.5070978
   Kamsties E., 1998, Requirements Engineering, V3, P84, DOI 10.1007/BF02919967
   Karlsson L, 2007, INFORM SOFTWARE TECH, V49, P588, DOI 10.1016/j.infsof.2007.02.008
   Khalid H., 2014, IEEE SOFTWARE, V99, P1
   Kitchenham B., 2002, Software Engineering Notes, V27, P20, DOI 10.1145/638574.638580
   Knauber P, 2000, IEEE SOFTWARE, V17, P88, DOI 10.1109/52.877873
   Lehtola L., 2006, Software Process Improvement and Practice, V11, P7, DOI 10.1002/spip.249
   Lim S.L., 2012, P 13 INT C SYNTH SIM
   Lim S. L., 2013, MANAGING REQUIREMENT
   Lim S. L., 2012, P FRONTIERS NATURAL, P15
   Lim SH, 2012, J CHINESE CINEMAS, V6, P3, DOI 10.1386/jcc.6.1.3_2
   Lim SL, 2013, 2013 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P2672
   Lim SL, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P129, DOI 10.1145/2330163.2330182
   List D., 2007, KNOW YOUR AUDIENCE P
   Maiden Neil, 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P57, DOI 10.1109/RE.2010.16
   McMillan D, 2010, LECT NOTES COMPUT SC, V6030, P210, DOI 10.1007/978-3-642-12654-3_13
   Natt Och Dag J., 2002, THESIS LUND I TECHNO
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Potts C., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P128, DOI 10.1109/ISRE.1995.512553
   Rahmati A., 2012, C PAP P 14 INT C HUM, P11, DOI [DOI 10.1145/2371574.2371577, 10.1145/2371574.2371577]
   Rahmati A, 2013, IEEE T MOBILE COMPUT, V12, P1417, DOI 10.1109/TMC.2012.127
   Regnell B, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P287, DOI 10.1007/3-540-28244-0_13
   Sawyer P, 1999, VTT SYMP, V195, P222
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Secretan J, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P1759
   Seyff Norbert, 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P37, DOI 10.1109/RE.2010.15
   Snowsill T, 2010, LECT NOTES ARTIF INT, V6323, P615, DOI 10.1007/978-3-642-15939-8_46
   Straub D, 1997, INFORM MANAGE-AMSTER, V33, P1, DOI 10.1016/S0378-7206(97)00026-8
   Trigaux J.C., 2003, PRODUCT LINE ENG FOO, P9
   van Everdingen YM, 2000, COMMUN ACM, V43, P27, DOI 10.1145/332051.332064
   Wasserman A.I., 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research, P397, DOI [DOI 10.1145/1882362.1882443, 10.1145/1882362.1882443]
   Westerman B., DO PEOPLE REALLY USE
   Wnuk K, 2011, LECT NOTES COMPUT SC, V6606, P54, DOI 10.1007/978-3-642-19858-8_6
   Wong J, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1435
   Xu Q., 2011, P 2011 ACM SIGCOMM C, P329, DOI [10.1145/2068816.2068847, DOI 10.1145/2068816.2068847]
   Zukerman I, 2001, USER MODEL USER-ADAP, V11, P5, DOI 10.1023/A:1011175525451
NR 65
TC 106
Z9 121
U1 2
U2 38
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2015
VL 41
IS 1
BP 40
EP 64
DI 10.1109/TSE.2014.2360674
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AY8EZ
UT WOS:000347788400004
OA Bronze
DA 2024-07-18
ER

PT J
AU Dagenais, B
   Robillard, MP
AF Dagenais, Barthelemy
   Robillard, Martin P.
TI Using Traceability Links to Recommend Adaptive Changes for Documentation
   Evolution
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Documentation; maintainability; frameworks
ID CODE
AB Developer documentation helps developers learn frameworks and libraries, yet developing and maintaining accurate documentation requires considerable effort and resources. Contributors who work on developer documentation often need to manually track all changes in the code, determine which changes are significant enough to document, and then, adapt the documentation. We propose AdDoc, a technique that automatically discovers documentation patterns, i.e., coherent sets of code elements that are documented together, and that reports violations of these patterns as the code and the documentation evolves. We evaluated our approach in a retrospective analysis of four Java open source projects and found that at least 50 percent of all the changes in the documentation were related to existing documentation patterns. Our technique allows contributors to quickly adapt existing documentation, so that they can focus their documentation effort on the new features.
C1 [Dagenais, Barthelemy] Resulto Inc, Montreal, PQ H3A 0E9, Canada.
   [Robillard, Martin P.] McGill Univ, Sch Comp Sci, Montreal, PQ H3A 0E9, Canada.
C3 McGill University
RP Dagenais, B (corresponding author), Resulto Inc, Montreal, PQ H3A 0E9, Canada.
EM bart@cs.mcgill.ca; martin@cs.mcgill.ca
FU NSERC
FX The authors would like to thank the open source contributor who accepted
   to review our results and the readers who commented on the first paper.
   This project was supported by NSERC.
CR [Anonymous], 2011, JODA TIME USER GUIDE
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Bacchelli A., 2010, Proceedings of the 32nd International Conference on Software Engineering, P375
   Carroll J. M., 1987, Human-Computer Interaction, V3, P123, DOI 10.1207/s15327051hci0302_2
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   Dagenais B., 2010, P 18 INT S FDN SOFTW, P127
   Dagenais B, 2012, PROC INT CONF SOFTW, P47, DOI 10.1109/ICSE.2012.6227207
   Dagenais B, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000805
   Dagenais B, 2008, ACM SIGPLAN NOTICES, V43, P313, DOI 10.1145/1449955.1449790
   Dagenais Barthelemy., 2007, ASE 07, P254, DOI DOI 10.1145/1321631.1321669
   Dekel U, 2009, PROC INT CONF SOFTW, P320, DOI 10.1109/ICSE.2009.5070532
   Eden AH, 2003, PROC INT CONF SOFTW, P149, DOI 10.1109/ICSE.2003.1201196
   Kim M, 2009, PROC INT CONF SOFTW, P309, DOI 10.1109/ICSE.2009.5070531
   Kirk D, 2007, EMPIR SOFTW ENG, V12, P243, DOI 10.1007/s10664-006-9027-z
   Magyar M, 2000, IEEE PROFESSIONAL COMMUNICATION SOCIETY INTERNATIONAL PROFESSIONAL COMMUNICATION CONFERENCE AND ACM SPECIAL INTEREST GROUP ON DOCUMENTATION CONFERENCE, P549, DOI 10.1109/IPCC.2000.887312
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Moens M.-F., 2006, Information Extraction: Algorithms and Prospects in a Retrieval Context
   Moonen L, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/WCRE.2001.957806
   Rigby PC, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P832, DOI 10.1109/ICSE.2013.6606629
   Robillard MP, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189751
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Thummalapenta Suresh, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P327, DOI 10.1109/ASE.2008.43
   Zhong H, 2013, ACM SIGPLAN NOTICES, V48, P803, DOI [10.1145/2509136.2509523, 10.1145/2544173.2509523]
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
NR 24
TC 25
Z9 29
U1 0
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2014
VL 40
IS 11
BP 1126
EP 1146
DI 10.1109/TSE.2014.2347969
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AW4AO
UT WOS:000346224200005
DA 2024-07-18
ER

PT J
AU Hatton, L
AF Hatton, Les
TI Conservation of Information: Software's Hidden Clockwork?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Information conservation; component size distribution; power-law;
   software systems
ID POWER-LAWS
AB In this paper it is proposed that the Conservation of Hartley-Shannon Information ( hereafter contracted to H-S Information) plays the same role in discrete systems as the Conservation of Energy does in physical systems. In particular, using a variational approach, it is shown that the symmetry of scale-invariance, power-laws and the Conservation of H-S Information are intimately related and lead to the prediction that the component sizes of any software system assembled from components made from discrete tokens always asymptote to a scale-free power-law distribution in the unique alphabet of tokens used to construct each component. This is then validated to a very high degree of significance on some 100 million lines of software in seven different programming languages independently of how the software was produced, what it does, who produced it or what stage of maturity it has reached. A further implication of the theory presented here is that the average size of components depends only on their unique alphabet, independently of the package they appear in. This too is demonstrated on the main data set and also on 24 additional Fortran 90 packages.
C1 Univ Kingston, Fac Sci Engn & Comp, London, England.
C3 Kingston University
RP Hatton, L (corresponding author), Univ Kingston, Fac Sci Engn & Comp, London, England.
EM lesh@oakcomp.co.uk
CR Aho AlfredV., 1977, Principles of Compiler Design
   [Anonymous], 1956, Thermodynamics and Statistical Mechanics
   [Anonymous], 2018, NACHRICHTEN GESEL MP
   Baxter G, 2006, ACM SIGPLAN NOTICES, V41, P397, DOI 10.1145/1167515.1167507
   Challet D, 2004, PHYS REV E, V70, DOI 10.1103/PhysRevE.70.046109
   Cherry C, 1963, HUMAN COMMUNICATION
   CLARK DW, 1977, COMMUN ACM, V20, P78, DOI 10.1145/359423.359427
   Concas G, 2007, IEEE T SOFTWARE ENG, V33, P687, DOI [10.1109/TSE.2007.1019, 10.1109/TSE.2007.1016]
   Glazer A.M., 2001, Statistical Mechanics: A Survival Guide, V1
   Gorshenev A. A., 2004, PHYS REV E, V70, P4
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Hartley RVL, 1928, BELL SYST TECH J, V7, P535, DOI 10.1002/j.1538-7305.1928.tb01236.x
   Hatton L., 2011, P IFIP SIAM NIST WOR, P123
   Hatton L, 2009, IEEE T SOFTWARE ENG, V35, P566, DOI 10.1109/TSE.2008.105
   Ince DC, 2012, NATURE, V482, P485, DOI 10.1038/nature10836
   Louridas P, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1391984.1391986
   Mitzenmacher M., 2004, Internet Math., V1, P226, DOI DOI 10.1080/15427951.2004.10129088
   Mitzenmacher M., 2004, INTERNET MATH, V1, P305, DOI [DOI 10.1080/15427951.2004.10129092, 10.1080/15427951.2004.10129092]
   Mössinger J, 2010, IEEE SOFTWARE, V27, P92, DOI 10.1109/MS.2010.55
   Myers CR, 2003, PHYS REV E, V68, DOI 10.1103/PhysRevE.68.046116
   Newman MEJ, 2005, CONTEMP PHYS, V46, P323, DOI 10.1080/00107510500052444
   Potanin A, 2005, COMMUN ACM, V48, P99, DOI 10.1145/1060710.1060716
   R Development Core Team, 2011, R LANG ENV STAT COMP
   Rawlings PK, 2004, PHYSICA A, V343, P643, DOI 10.1016/j.physa.2004.06.152
   Rousseau D, 2012, IEEE SOFTWARE, V29, P11, DOI 10.1109/MS.2012.123
   Sedgewick R, 1990, ALGORITHMS C
   SHANNON CE, 1948, BELL SYST TECH J, V27, P379, DOI 10.1002/j.1538-7305.1948.tb01338.x
   SHANNON CE, 1949, P IRE, V37, P10, DOI 10.1109/JRPROC.1949.232969
   Shooman ML., 1985, SOFTWARE ENG
   Zipf GK., 1935, PSYCHO BIOL LANGUAGE
NR 30
TC 8
Z9 9
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2014
VL 40
IS 5
BP 450
EP 460
DI 10.1109/TSE.2014.2316158
PG 11
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AJ8JW
UT WOS:000337950500002
DA 2024-07-18
ER

PT J
AU Taïani, F
   Lin, S
   Blair, GS
AF Taiani, Francois
   Lin, Shen
   Blair, Gordon S.
TI GOSSIPKIT: A Unified Component Framework for Gossip
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Distributed systems; components; frameworks; protocols
ID WIRELESS AD HOC; RELIABLE MULTICAST; PROTOCOL; MANAGEMENT; BROADCAST;
   EFFICIENT; SUPPORT; SYSTEM; MODEL
AB Although the principles of gossip protocols are relatively easy to grasp, their variety can make their design and evaluation highly time consuming. This problem is compounded by the lack of a unified programming framework for gossip, which means developers cannot easily reuse, compose, or adapt existing solutions to fit their needs, and have limited opportunities to share knowledge and ideas. In this paper, we consider how component frameworks, which have been widely applied to implement middleware solutions, can facilitate the development of gossip-based systems in a way that is both generic and simple. We show how such an approach can maximize code reuse, simplify the implementation of gossip protocols, and facilitate dynamic evolution and redeployment.
C1 [Lin, Shen] SAP Labs, Imagineering Team, Shanghai, Peoples R China.
   [Blair, Gordon S.] Univ Lancaster, Lancaster, Lancs, England.
C3 Lancaster University
RP Taïani, F (corresponding author), Univ Rennes 1, IRISA Rennes, F-35014 Rennes, France.
EM francois.taiani@irisa.fr; shen.lin@outlook.com; g.blair@lancaster.ac.uk
RI Taïani, François/AAQ-7684-2021
OI Taïani, François/0000-0002-9692-5678; Blair, Gordon
   Shaw/0000-0001-6212-1906
FU ESF MiNEMA program [1954]; EU FP7 ReSIST Network of Excellence [026764];
   EPSRC [EP/M015734/1] Funding Source: UKRI
FX This work has been supported by the ESF MiNEMA program (Ref. 1954) and
   partially by the EU FP7 ReSIST Network of Excellence (n. 026764). F.
   Taiani and S. Lin were with the University of Lancaster (UK) while the
   work reported in this paper was conducted. A preliminary version of this
   paper was published in [1].
CR [Anonymous], P 2011 ACM S APPL CO
   Beraldi R, 2008, AD HOC NETW, V6, P79, DOI 10.1016/j.adhoc.2006.08.002
   Bertier M, 2010, LECT NOTES COMPUT SC, V6452, P191, DOI 10.1007/978-3-642-16955-7_10
   Bhatti NT, 1998, ACM T COMPUT SYST, V16, P321, DOI 10.1145/292523.292524
   Birman Ken, 2007, Operating Systems Review, V41, P8, DOI 10.1145/1317379.1317382
   Birman K., 1991, Operating Systems Review, V25, P103, DOI 10.1145/122120.122133
   Birman KP, 1999, ACM T COMPUT SYST, V17, P41, DOI 10.1145/312203.312207
   Blair GS, 2011, LECT NOTES COMPUT SC, V7049, P410
   Bosch J., 1998, P 3 INT WORKSH COMP, P1
   Bruneton E, 2006, SOFTWARE PRACT EXPER, V36, P1257, DOI 10.1002/spe.767
   Carvalho N, 2007, I C DEPEND SYS NETWO, P481, DOI 10.1109/DSN.2007.40
   Chandra R, 2001, INT CON DISTR COMP S, P275, DOI 10.1109/ICDSC.2001.918957
   Clarke M., 2001, P IFIPACM INT C DIST, P160
   Coulson G, 2008, ACM T COMPUT SYST, V26, DOI 10.1145/1328671.1328672
   Demers Alan, 1987, P 6 ANN ACM S PRINCI, P1, DOI [DOI 10.1145/41840.41841, 10.1145/41840.41841]
   EUGSTER P, 2007, ACM SIGOPS OPER SYST, V41, P37, DOI DOI 10.1145/1317379.1317386
   Eugster PT, 2003, ACM T COMPUT SYST, V21, P341, DOI 10.1145/945506.945507
   Eugster PT, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P313, DOI 10.1109/DSN.2002.1028915
   Fabre Jean-Charles, 2010, Proceedings of the 2010 Eighth European Dependable Computing Conference (EDCC 2010), P45, DOI 10.1109/EDCC.2010.15
   Frey D., 2009, P INT MIDDL C MIDDL
   Ganesh A. J., 2001, Networked Group Communication. Third International COST264 Workshop, NGC 2001. Proceedings (Lecture Notes in Computer Science Vol.2233), P44
   Ganesh AJ, 2003, IEEE T COMPUT, V52, P139, DOI 10.1109/TC.2003.1176982
   Gay D, 2003, ACM SIGPLAN NOTICES, V38, P1, DOI 10.1145/780822.781133
   Grace P, 2004, LECT NOTES COMPUT SC, V3291, P1463
   Grace P, 2003, LECT NOTES COMPUT SC, V2888, P1170
   Grace P, 2008, EUROSYS'08: PROCEEDINGS OF THE EUROSYS 2008 CONFERENCE, P123, DOI 10.1145/1357010.1352606
   GUO K, 1997, TR971656 CORN U
   Gupta I, 2001, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P433, DOI 10.1109/DSN.2001.941427
   Gupta I, 2006, IEEE T PARALL DISTR, V17, P593, DOI 10.1109/TPDS.2006.85
   Haas ZJ, 2006, IEEE ACM T NETWORK, V14, P479, DOI 10.1109/TNET.2006.876186
   Hiltunen M. A., 2000, P WORKSH DEP SYST MI
   Holliday J, 2003, IEEE T KNOWL DATA EN, V15, P1218, DOI 10.1109/TKDE.2003.1232274
   Hou X., 2005, J COMMUN, V1, P38
   Hou XB, 2004, IEEE WCNC, P1305, DOI 10.1109/WCNC.2004.1311631
   Hou XB, 2006, J NETW SYST MANAG, V14, P381, DOI 10.1007/s10922-006-9037-6
   Hughes D., 2009, Proceedings of the 7th International Conference on Advances in Mobile Computing and Multimedia, P195
   Jelasity M, 2005, ACM T COMPUT SYST, V23, P219, DOI 10.1145/1082469.1082470
   Jelasity M, 2004, LECT NOTES COMPUT SC, V3231, P79
   JELASITY M, 2003, IRCS006 VRIJ U DEP C
   Jelasity M, 2007, ACM T COMPUT SYST, V25, DOI 10.1145/1275517.1275520
   Jelasity M, 2006, SIXTH IEEE INTERNATIONAL CONFERENCE ON PEER-TO-PEER COMPUTING, PROCEEDINGS, P117, DOI 10.1109/P2P.2006.25
   Jelasity M, 2009, COMPUT NETW, V53, P2321, DOI 10.1016/j.comnet.2009.03.013
   Jenkins K, 2001, 21ST INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOPS, PROCEEDINGS, P25, DOI 10.1109/CDCS.2001.918682
   Kempe D., 2001, STOC, P163
   Kermarrec Anne-Marie, 2007, Operating Systems Review, V41, P2, DOI 10.1145/1317379.1317381
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Kyasanur P, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON MOBILE ADHOC AND SENSOR SYSTEMS, VOLS 1 AND 2, P884
   Leitao J, 2007, SYM REL DIST SYST, P301, DOI 10.1109/SRDS.2007.27
   Leitao J, 2007, I C DEPEND SYS NETWO, P419, DOI 10.1109/DSN.2007.56
   Lin MJ, 1999, LECT NOTES COMPUT SC, V1667, P364
   Lin S., 2010, THESIS LANCASTER U
   Lin S, 2008, LECT NOTES COMPUT SC, V5053, P238
   Lin S, 2010, SOFTVIS 2010: PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON SOFTWARE VISUALIZATION, P103
   Lin S, 2009, LECT NOTES COMPUT SC, V5523, P1
   Liu JC, 2006, MULTIMED TOOLS APPL, V29, P211, DOI 10.1007/s11042-006-0013-7
   Luo J, 2003, IEEE INFOCOM SER, P2229
   MCKINLEY PK, 2001, P IFIP ACM INT C DIS, P99
   Melamed R, 2008, J PARALLEL DISTR COM, V68, P1539, DOI 10.1016/j.jpdc.2008.07.011
   Miranda H, 2001, INT CON DISTR COMP S, P707, DOI 10.1109/ICDSC.2001.919005
   Montresor A, 2005, FIFTH IEEE INTERNATIONAL CONFERENCE ON PEER-TO-PEER COMPUTING, PROCEEDINGS, P87, DOI 10.1109/P2P.2005.4
   Nedos Andronikos, 2007, 3 IEEE INT C WIR MOB, P53
   Oracle, 2013, HPROF HEAP CPU PROF
   Pereira J, 2003, SYM REL DIST SYST, P15, DOI 10.1109/RELDIS.2003.1238051
   Porter B.et., 2009, Proceedings of the 4th International Workshop on Middleware Tools, Services and Run-Time Support for Sensor Networks, P7
   Princehouse Lonnie, 2009, Operating Systems Review, V43, P40, DOI 10.1145/1713254.1713264
   Ramdhany R., 2009, P 10 IFIP ACM USENIX
   Riviere Etienne, 2007, Operating Systems Review, V41, P43, DOI 10.1145/1317379.1317387
   Santos P., NEEM NETWORK FRIENDL
   Sasson Y, 2003, IEEE WCNC, P1124
   Seinturier L, 2012, SOFTWARE PRACT EXPER, V42, P559, DOI 10.1002/spe.1077
   Simonton E, 2006, PROC INT CONF PARAL, P319, DOI 10.1109/ICPP.2006.72
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   van Renesse R., 1995, Proceedings of the Fourteenth Annual ACM Symposium on Principles of Distributed Computing, P80, DOI 10.1145/224964.224974
   van Renesse R, 1998, MIDDLEWARE'98: IFIP INTERNATIONAL CONFERENCE ON DISTRIBUTED SYSTEMS PLATFORMS AND OPEN DISTRIBUTED PROCESSING, P55
   Van Renesse R, 1998, SOFTWARE PRACT EXPER, V28, P963, DOI 10.1002/(SICI)1097-024X(19980725)28:9<963::AID-SPE179>3.0.CO;2-9
   Voulgaris S., 2005, Journal of Network and Systems Management, V13, P197, DOI 10.1007/s10922-005-4441-x
   Voulgaris S, 2005, LECT NOTES COMPUT SC, V3648, P1143
NR 77
TC 2
Z9 2
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2014
VL 40
IS 2
BP 123
EP 136
DI 10.1109/TSE.2013.50
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AF4FD
UT WOS:000334666000002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Baker, R
   Habli, I
AF Baker, Richard
   Habli, Ibrahim
TI An Empirical Evaluation of Mutation Testing for Improving the Test
   Quality of Safety-Critical Software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Mutation; safety-critical software; verification; testing; certification
ID COVERAGE; PRIORITIZATION
AB Testing provides a primary means for assuring software in safety-critical systems. To demonstrate, particularly to a certification authority, that sufficient testing has been performed, it is necessary to achieve the test coverage levels recommended or mandated by safety standards and industry guidelines. Mutation testing provides an alternative or complementary method of measuring test sufficiency, but has not been widely adopted in the safety-critical industry. In this study, we provide an empirical evaluation of the application of mutation testing to airborne software systems which have already satisfied the coverage requirements for certification. Specifically, we apply mutation testing to safety-critical software developed using high-integrity subsets of C and Ada, identify the most effective mutant types, and analyze the root causes of failures in test cases. Our findings show how mutation testing could be effective where traditional structural coverage analysis and manual peer review have failed. They also show that several testing issues have origins beyond the test activity, and this suggests improvements to the requirements definition and coding process. Our study also examines the relationship between program characteristics and mutation survival and considers how program size can provide a means for targeting test areas most likely to have dormant faults. Industry feedback is also provided, particularly on how mutation testing can be integrated into a typical verification life cycle of airborne software.
C1 [Baker, Richard] Aero Engine Controls, Birmingham B28 8LN, W Midlands, England.
   [Habli, Ibrahim] Univ York, Dept Comp Sci, York YO10 5GH, N Yorkshire, England.
C3 University of York - UK
RP Baker, R (corresponding author), Aero Engine Controls, York Rd,Hall Green, Birmingham B28 8LN, W Midlands, England.
EM Richard.J.BAKER@aeroenginecontrols.com; ibrahim.habli@york.ac.uk
CR Agrawal H., 1989, Design of mutant operators for the C programming language
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], AER REC PRACT 4754 C
   [Anonymous], 1996, ARP4761 GID METH CON
   [Anonymous], 2010, IEC 61508
   [Anonymous], ACM SOFTWARE ENG NOT
   [Anonymous], 1992, DO 178B SOFTW CONS A
   [Anonymous], GUID US C LANG CRIT
   [Anonymous], 2003, High Integrity Software: The SPARK Approach to Safety and Security
   Baldwin D, 1979, 276 YAL U
   Barbosa EF, 2001, SOFTW TEST VERIF REL, V11, P113, DOI 10.1002/stvr.226
   BUTLER RW, 1993, IEEE T SOFTWARE ENG, V19, P3, DOI 10.1109/32.210303
   Chilenski J., 2001, DOTFAAAR0118 OFF AV
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   Daniels D., 2003, P 11 SAF CTIT SYST S
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Hayhurst K., 2001, NASATM2001210876
   Hierons C. R. M., 1999, SOFTW TEST VERIF REL, V9, P233
   International Organization for Standardization, 2011, 26262 ISO
   Jay G., 2009, J SOFTWARE ENG APPL, V3, P137
   Jia Y., 2008, P 3 TEST AC IND C PR
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   LITTLEWOOD B, 1993, COMMUN ACM, V36, P69, DOI 10.1145/163359.163373
   McCabe T. J., 1994, Object Magazine, V4, P63
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McDermid J.A., 1991, SOFTWARE ENG REFEREN
   Meulen V. D., 2007, P 18 IEEE INT S REL
   Muessig P. R., 2001, COST VS CREDIBILITY
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Offut A. J., 1997, Software Testing, Verification and Reliability, V7, P165, DOI 10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt A. J., 2000, P MUT 2000 MUT TEST
   OFFUTT AJ, 1996, ISSETR9609 G MAS U
   SHEPPERD M, 1988, SOFTWARE ENG J, V3, P30, DOI 10.1049/sej.1988.0003
   Umar M., 2006, THESIS KINGS COLL LO
   Wallace D., 1996, Special Publication (NIST SP)
   Wong W. E., 1997, P WORKSH VAL TEST OP
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
NR 41
TC 45
Z9 49
U1 0
U2 31
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2013
VL 39
IS 6
BP 787
EP 805
DI 10.1109/TSE.2012.56
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 149RG
UT WOS:000319338200005
DA 2024-07-18
ER

PT J
AU Grundy, JC
   Hosking, J
   Li, KN
   Ali, NM
   Huh, J
   Li, RL
AF Grundy, John C.
   Hosking, John
   Li, Karen Na
   Ali, Norhayati Mohd
   Huh, Jun
   Li, Richard Lei
TI Generating Domain-Specific Visual Language Tools from Abstract Visual
   Specifications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Metatool; domain-specific visual language; software tool; visual
   specification; model-driven engineering
ID ENVIRONMENTS; SYSTEMS; DESIGN
AB Domain-specific visual languages support high-level modeling for a wide range of application domains. However, building tools to support such languages is very challenging. We describe a set of key conceptual requirements for such tools and our approach to addressing these requirements, a set of visual language-based metatools. These support definition of metamodels, visual notations, views, modeling behaviors, design critics, and model transformations and provide a platform to realize target visual modeling tools. Extensions support collaborative work, human-centric tool interaction, and multiplatform deployment. We illustrate application of the metatoolset on tools developed with our approach. We describe tool developer and cognitive evaluations of our platform and our exemplar tools, and summarize key future research directions.
C1 [Grundy, John C.] Swinburne Univ Technol, Ctr Comp & Engn Software Syst, Fac Informat & Commun Technol, Hawthorn, Vic 3122, Australia.
   [Hosking, John] Australian Natl Univ, Coll Engn & Comp Sci, Canberra, ACT 0200, Australia.
   [Li, Karen Na] SolNet Solut Ltd, Wellington 6011, New Zealand.
   [Ali, Norhayati Mohd] Univ Putra Malaysia, Fac Comp Sci & Informat Technol, Serdang 43400, Selangor, Malaysia.
   [Huh, Jun] Univ Auckland, Ctr Software Innovat, Dept Comp Sci, Auckland 1, New Zealand.
   [Huh, Jun] Univ Auckland, Auckland UniServ, Auckland 1, New Zealand.
   [Li, Richard Lei] Beef & Lamb New Zealand, Wellington 6011, New Zealand.
C3 Swinburne University of Technology; Australian National University;
   Universiti Putra Malaysia; University of Auckland; University of
   Auckland
RP Grundy, JC (corresponding author), Swinburne Univ Technol, Ctr Comp & Engn Software Syst, Fac Informat & Commun Technol, POB 28,John St, Hawthorn, Vic 3122, Australia.
EM jgrundy@swin.edu.au; john.hosking@anu.edu.au;
   Karen.Li@solnetsolutions.co.nz; hayati@fsktm.upm.edu.my;
   jhuh003@ec.auckland.ac.nz; Richard.Li@beeflambnz.com
RI Ali, Norhayati Mohd/AAD-8635-2019; Grundy, John/AAF-1716-2019
OI Grundy, John/0000-0003-4928-7076; Mohd Ali,
   Norhayati/0000-0002-9739-0492; Hosking, John/0000-0002-4776-3828
FU New Zealand Ministry of Science and Innovation; Malaysian Government;
   University of Auckland; Tertiary Education Commision
FX The authors gratefully acknowledge the support of their colleagues,
   Assoc. Prof. Robert Amor, Dr. Beryl Plimmer, Dr. Gerald Weber, Dr.
   Rainbow Cai, and many project students and industry partners. They also
   acknowledge funding provided by The New Zealand Ministry of Science and
   Innovation's Software Process and Product Improvement project, the
   Malaysian Government, the University of Auckland, and the Tertiary
   Education Commision's funded BuildIT project.
CR Ali NM, 2010, ASE 2010 25 IEEE ACM, P297
   [Anonymous], 2012, OPENLASZLO
   [Anonymous], 2012, Eclipse Graphical Modelling Project
   [Anonymous], 2012, IBM ILOG JVIEWSDIAGR
   [Anonymous], 2012, MERLIN GENERATOR
   [Anonymous], 2012, NETBEAN
   [Anonymous], 2012, ECLIPSE GRAPHICAL ED
   [Anonymous], 2012, MICROSOFT DOMAIN SPE
   Bentley R., 1995, P 4 INT WORLD WID WE
   Biddle R., 2003, P 4 AUSTR US INT C U, V18, P95
   Blackwell A.F., 2000, P 12 ANN M PSYCH PRO
   Brieler F, 2010, J VISUAL LANG COMPUT, V21, P81, DOI 10.1016/j.jvlc.2009.12.002
   Buchner J, 1997, IEEE VISLANG, P92, DOI 10.1109/VL.1997.626563
   Burnett M, 2001, J FUNCT PROGRAM, V11, P155, DOI 10.1017/S0956796800003828
   Cai Y., 2007, Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering, ASE '07, P353
   Chen Q, 2003, 200S IEEE SYMPOSIUM ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, P219
   Cox P. T., 1997, P IEEE S VIS LANG
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   Dillon A., 2001, Encyclopedia of Human Factors and Ergonomics
   Draheim D, 2003, LECT NOTES COMPUT SC, V2889, P267
   Ebert J, 1997, LECT NOTES COMPUT SC, V1250, P203
   Ehrig K., 2005, INT C AUTOMATED SOFT, P134, DOI DOI 10.1145/1101908.1101930
   Gordon D., 2003, P 2003 IEEE C HUM CE, P28
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Grope S., 2003, P INT C ENT INF SYST
   Grundy J, 2000, INFORM SOFTWARE TECH, V42, P103, DOI 10.1016/S0950-5849(99)00084-1
   Grundy J., 2011, P 33 INT C SOFTW ENG
   Grundy J. C., 1998, Automated Software Engineering, V5, P27, DOI 10.1023/A:1008606308460
   Grundy J. C., 1995, Proceedings. 11th IEEE International Symposium on Visual Languages (Cat. No.95TB8105), P53, DOI 10.1109/VL.1995.520785
   Grundy J.C., 2009, P WORKSH IEEE ACM AU
   Grundy J, 2007, PROC INT CONF SOFTW, P282
   Grundy J, 2006, IEEE INT CONF AUTOM, P25
   Grundy John., 2006, SOSE '06: Proceedings of the 2006 international workshop on Service-oriented software engineering, P26
   Guerra E, 2008, J VISUAL LANG COMPUT, V19, P399, DOI 10.1016/j.jvlc.2007.09.002
   Hartson HR, 2003, INT J HUM-COMPUT INT, V15, P145, DOI 10.1207/S15327590IJHC1501_13
   Heloise H., 2004, P 17 INT C PATT REC
   Hosking J.G., 2007, P INT C ENT INF SYST
   Hosking J.G., 2005, P ACM IEEE INT C AUT
   Hosking J.G., 2005, P IEEE ACM INT C AUT
   Hosking J.G., 2007, P IEEE S VIS LANG HU
   Hosking J.G., 2007, DESIGN PATTERNS FORM
   Hosking J.G., 2008, P 23 IEEE ACM INT C
   Hosking J, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P109, DOI 10.1109/VLHCC.2008.4639068
   Howse J, 2010, LECT NOTES ARTIF INT, V6170, P4, DOI 10.1007/978-3-642-14600-8_4
   Huh J, 2009, IEEE AUS SOFT ENGR, P111, DOI 10.1109/ASWEC.2009.21
   Johnson Gary., 1997, LABVIEW GRAPHICAL PR
   Kaiser C. E., 1998, World Wide Web, V1, P3, DOI 10.1023/A:1019291009758
   Khaled R., 2002, P SIGCHI NZ S COMP H
   Kim CH, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P19
   KRASNER GE, 1988, J OBJECT-ORIENT PROG, V1, P41
   Lédeczi A, 2001, COMPUTER, V34, P44, DOI 10.1109/2.963443
   Levendovszky T, 2005, ELECTRON NOTES THEOR, V127, P65, DOI 10.1016/j.entcs.2004.12.040
   Li K., 2010, P WORKSH VIS FORM PA, V31
   Lin Qiu, 2008, Journal of Interactive Learning Research, V19, P119
   Lin YH, 2007, EUR J INFORM SYST, V16, P349, DOI 10.1057/palgrave.ejis.3000685
   Liu N., 2007, P 8 AUSTR US INT C
   Lyu M., 1998, P INT S SOFTW REL EN
   Maurer F, 2000, IEEE INTERNET COMPUT, V4, P65, DOI 10.1109/4236.845392
   McIntyre D.W., 1995, VISUAL OBJECT ORIENT, P129
   Minas M, 2003, LECT NOTES COMPUT SC, V3062, P473
   Minas M, 2002, SCI COMPUT PROGRAM, V44, P157, DOI 10.1016/S0167-6423(02)00037-0
   Minas M., 2006, P 3 INT WORKSH GRAPH
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Mugridge W.B., 1997, P SOFTW VIS WORKSH
   Pei Y.S., 2011, P IEEE S VIS LANG HU
   Phillips C., 1998, P TECHN OBJ OR LANG
   Plimmer Beryl., 2004, CHI '04: CHI '04 extended abstracts on Human factors in computing systems, P1337
   Rekers J, 1997, J VISUAL LANG COMPUT, V8, P27, DOI 10.1006/jvlc.1996.0027
   Robbins JE, 2000, INFORM SOFTWARE TECH, V42, P79, DOI 10.1016/S0950-5849(99)00083-X
   Rossi M., 1996, P INT C ADV INF SYST
   Schuckmann C., 1996, CSCW'96: Proceedings of the 1996 ACM Conference on Computer Supported Cooperative Work, P30
   Sutcliffe A., 2002, DOMAIN THEORY PATTER
   Vlissides J. M., 1989, UIST. Proceedings of the ACM SIGGRAPH Symposium on User Interface Software and Technology, P158, DOI 10.1145/73660.73680
   Winter A., 2000, P 7 WORK C REV ENG
   Wohed P, 2006, LECT NOTES COMPUT SC, V4102, P161
   Zhang J, 2005, MODEL-DRIVEN SOFTWARE DEVELOPMENT, P199, DOI 10.1007/3-540-28554-7_9
   Zhang K, 2001, IEEE T SOFTWARE ENG, V27, P289, DOI 10.1109/32.917521
   Zhao CY, 2010, IEEE T SOFTWARE ENG, V36, P431, DOI 10.1109/TSE.2010.3
   Zhu NP, 2007, J SYST SOFTWARE, V80, P1390, DOI 10.1016/j.jss.2006.10.028
NR 79
TC 17
Z9 30
U1 1
U2 19
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2013
VL 39
IS 4
BP 487
EP 515
DI 10.1109/TSE.2012.33
PG 29
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 112UH
UT WOS:000316618800004
DA 2024-07-18
ER

PT J
AU Cardellini, V
   Casalicchio, E
   Grassi, V
   Iannucci, S
   Lo Presti, F
   Mirandola, R
AF Cardellini, Valeria
   Casalicchio, Emiliano
   Grassi, Vincenzo
   Iannucci, Stefano
   Lo Presti, Francesco
   Mirandola, Raffaela
TI MOSES: A Framework for QoS Driven Runtime Adaptation of Service-Oriented
   Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Service-oriented architecture; runtime adaptation; quality of service
ID SOFTWARE; ALGORITHM; PREDICTION; MANAGEMENT; ISSUES; MODEL
AB Architecting software systems according to the service-oriented paradigm and designing runtime self-adaptable systems are two relevant research areas in today's software engineering. In this paper, we address issues that lie at the intersection of these two important fields. First, we present a characterization of the problem space of self-adaptation for service-oriented systems, thus providing a frame of reference where our and other approaches can be classified. Then, we present MOSES, a methodology and a software tool implementing it to support QoS-driven adaptation of a service-oriented system. It works in a specific region of the identified problem space, corresponding to the scenario where a service-oriented system architected as a composite service needs to sustain a traffic of requests generated by several users. MOSES integrates within a unified framework different adaptation mechanisms. In this way it achieves greater flexibility in facing various operating environments and the possibly conflicting QoS requirements of several concurrent users. Experimental results obtained with a prototype implementation of MOSES show the effectiveness of the proposed approach.
C1 [Cardellini, Valeria; Casalicchio, Emiliano; Grassi, Vincenzo; Iannucci, Stefano; Lo Presti, Francesco] Univ Roma Tor Vergata, Dipartimento Ingn Civile & Ingn Informat, I-00133 Rome, Italy.
   [Mirandola, Raffaela] Politecn Milan, Dipartimento Elettron & Informaz, I-20133 Milan, Italy.
C3 University of Rome Tor Vergata; Polytechnic University of Milan
RP Cardellini, V (corresponding author), Univ Roma Tor Vergata, Dipartimento Ingn Civile & Ingn Informat, Via Politecn 1, I-00133 Rome, Italy.
EM cardellini@ing.uniroma2.it; casalicchio@ing.uniroma2.it;
   vgrassi@info.uniroma2.it; iannucci@ing.uniroma2.it;
   lopresti@info.uniroma2.it; mirandola@elet.polimi.it
RI Cardellini, Valeria/F-8409-2012; Iannucci, Stefano/AAV-3630-2021;
   Casalicchio, Emiliano/JWQ-0758-2024
OI Cardellini, Valeria/0000-0002-6870-7083; Casalicchio,
   Emiliano/0000-0002-3118-5058; MIRANDOLA, RAFFAELA/0000-0003-3154-2438;
   LO PRESTI, Francesco/0000-0002-7461-6276
FU European Community's Seventh Framework Programme under project
   Q-ImPrESS; IDEAS-ERC Project SMScom
FX The authors would like to thank the editor and the anonymous referees
   for their helpful comments that definitely contribute to the improvement
   of the paper. This work has been partially supported by the European
   Community's Seventh Framework Programme under project Q-ImPrESS and
   IDEAS-ERC Project SMScom.
CR Andersson J, 2009, LECT NOTES COMPUT SC, V5525, P27, DOI 10.1007/978-3-642-02161-9_2
   [Anonymous], 2007, WEB SERV BUS PROC EX
   Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   Ardagna D, 2010, J SYST SOFTWARE, V83, P1512, DOI 10.1016/j.jss.2010.03.045
   Baresi L, 2006, COMPUTER, V39, P36, DOI 10.1109/MC.2006.362
   Bellucci A, 2010, LECT NOTES COMPUT SC, V6470, P527, DOI 10.1007/978-3-642-17358-5_36
   Berbner R, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P72
   Booth D., 2004, WEB SERVICES ARCHITE
   Buckley J, 2005, J SOFTW MAINT EVOL-R, V17, P309, DOI 10.1002/smr.319
   Canfora G, 2008, J SYST SOFTWARE, V81, P1754, DOI 10.1016/j.jss.2007.12.792
   Cao L, 2005, LECT NOTES ARTIF INT, V3802, P679
   CARDELLINI V, 2009, P 7 JOINT M EUR SOFT
   Cardellini V, 2010, LECT NOTES COMPUT SC, V6470, P381, DOI 10.1007/978-3-642-17358-5_26
   Cardoso J., 2007, Software Process Improvement and Practice, V12, P35, DOI 10.1002/spip.302
   CHAFLE G, 2007, P IEEE INT C WEB SER
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Colombo M, 2005, LECT NOTES COMPUT SC, V3826, P48
   Colombo M, 2006, LECT NOTES COMPUT SC, V4294, P191
   Cook WR, 2006, LECT NOTES COMPUT SC, V4038, P82
   DeCandia Giuseppe, 2007, Operating Systems Review, V41, P205, DOI 10.1145/1323293.1294281
   Di Nitto E, 2008, AUTOMAT SOFTW ENG, V15, P313, DOI 10.1007/s10515-008-0032-x
   Gallotti S, 2008, LECT NOTES COMPUT SC, V5281, P119, DOI 10.1007/978-3-540-87879-7_8
   Gill PE, 2002, SIAM J OPTIMIZ, V12, P979, DOI 10.1137/S1052623499350013
   Gmach D, 2008, ACM T WEB, V2, DOI 10.1145/1326561.1326569
   Guo HP, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P280
   Harney J., 2007, P 16 INT C WORLD WID
   Hielscher J., 2008, P 1 EUR C SERV BAS I
   Huebscher MC, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1380584.1380585
   Hwang C. L., 1981, MULTIPLE CRITERIA DE
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kitchin D, 2009, LECT NOTES COMPUT SC, V5522, P1, DOI 10.1007/978-3-642-02138-1_1
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Martin P, 2007, P INT WORKSH SOFTW E
   Marzolla M, 2007, LECT NOTES COMPUT SC, V4880, P127
   McKinley PK, 2004, COMPUTER, V37, P56, DOI 10.1109/MC.2004.48
   Megiddo N., 1987, Advances in economic theory, P225, DOI DOI 10.1017/CCOL0521340446.006
   Mehrotra S, 1992, SIAM J OPTIMIZ, V2, P575, DOI 10.1137/0802028
   Menasce D.A., 2010, WOSP SIPEW 10, P27
   Menascé DA, 2002, IEEE INTERNET COMPUT, V6, P72, DOI 10.1109/MIC.2002.1067740
   MENASCE DA, 2008, P 7 INT WORKSH SOFTW, P13
   Menascé DA, 2007, PERFORM EVALUATION, V64, P646, DOI 10.1016/j.peva.2006.10.001
   Moser O., 2008, P 17 INT C WORLD WID, P815, DOI DOI 10.1145/1367497.1367607
   Motahari-Nezhad H.R., 2009, P 3 INT WORKSH WEB S
   Muller H.A., 2008, Proceedings of the 2nd International Workshop on Ultra-Large-Scale Softwareintensive Systems (ULSSIS 2008), P23
   Nagpurkar P, 2008, I S WORKL CHAR PROC, P101
   Nelson R., 1995, PROBABILITY STOCHAST
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Papazoglou M.P., 2003, P 4 INT C WEB INF SY
   Qu Y, 2006, GCC 2005: FIFTH INTERNATIONAL CONFERENCE ON GRID AND COOPERATIVE COMPUTING, PROCEEDINGS, P458
   Risse T., 2009, P 18 INT C WORLD WID, P881, DOI DOI 10.1145/1526709.1526828
   Rud D, 2006, SCW 2006: IEEE SERVICES COMPUTING WORKSHOPS, PROCEEDINGS, P140
   Salahi M, 2008, OPTIM METHOD SOFTW, V23, P259, DOI 10.1080/10556780701661393
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Sato N., 2007, P 5 INT C SERV OR CO
   Skene J, 2010, IEEE T SOFTWARE ENG, V36, P288, DOI 10.1109/TSE.2009.55
   STEIN SM, 2009, US FOR SERV PAC  DEC, P1
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   Verma K, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P257
   Xiong K., 2008, P 16 INT WORKSH QUAL
   Yu T, 2007, ACM T WEB, V1, DOI 10.1145/1232722.1232728
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
NR 61
TC 105
Z9 120
U1 0
U2 26
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2012
VL 38
IS 5
BP 1138
EP 1159
DI 10.1109/TSE.2011.68
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 009BA
UT WOS:000308999100010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lin, ZQ
   Zhang, XY
   Xu, DY
AF Lin, Zhiqiang
   Zhang, Xiangyu
   Xu, Dongyan
TI Reverse Engineering Input Syntactic Structure from Program Execution and
   Its Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Input syntactic structure; reverse engineering; control dependence;
   grammar inference; delta debugging; top-down grammar; bottom-up grammar
ID GENERATION
AB Program input syntactic structure is essential for a wide range of applications such as test case generation, software debugging, and network security. However, such important information is often not available (e.g., most malware programs make use of secret protocols to communicate) or not directly usable by machines (e.g., many programs specify their inputs in plain text or other random formats). Furthermore, many programs claim they accept inputs with a published format, but their implementations actually support a subset or a variant. Based on the observations that input structure is manifested by the way input symbols are used during execution and most programs take input with top-down or bottom-up grammars, we devise two dynamic analyses, one for each grammar category. Our evaluation on a set of real-world programs shows that our technique is able to precisely reverse engineer input syntactic structure from execution. We apply our technique to hierarchical delta debugging (HDD) and network protocol reverse engineering. Our technique enables the complete automation of HDD, in which programmers were originally required to provide input grammars, and improves the runtime performance of HDD. Our client study on network protocol reverse engineering also shows that our technique supersedes existing techniques.
C1 [Lin, Zhiqiang; Zhang, Xiangyu; Xu, Dongyan] Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
C3 Purdue University System; Purdue University
RP Lin, ZQ (corresponding author), Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
EM zlin@cs.purdue.edu; xyzhang@cs.purdue.edu; dxu@cs.purdue.edu
RI Zhang, Xiangyu/H-9255-2013
OI Zhang, Xiangyu/0000-0003-0876-6783; Lin, Zhiqiang/0000-0001-6527-5994
FU US National Science Foundation (NSF) [0716444, 0720516]; Direct For
   Computer & Info Scie & Enginr; Division Of Computer and Network Systems
   [0720516, 0716444] Funding Source: National Science Foundation
FX This research was supported in part by the US National Science
   Foundation (NSF) under grants 0716444 and 0720516. Any opinions,
   findings, and conclusions or recommendations in this paper are those of
   the authors and do not necessarily reflect the views of the NSF.
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   Bille P, 2005, THEOR COMPUT SCI, V337, P217, DOI 10.1016/j.tcs.2004.12.030
   Caballero J, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P317
   Coppit David., PROC 20 IEEEACM INT, DOI [10.1145/1101908.1101969, DOI 10.1145/1101908.1101969]
   Cui WD, 2007, P IEEE S SECUR PRIV, P252, DOI 10.1109/SP.2007.34
   Cui WD, 2008, CCS'08: PROCEEDINGS OF THE 15TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P391
   GODEFROID P, 2008, P 2008 ACM SIGPLAN C, P188
   HANFORD KV, 1970, IBM SYST J, V9, P242, DOI 10.1147/sj.94.0242
   Kalafut Andrew., 2006, Proceedings of the 6th ACM SIGCOMM Conference on Internet Measurement, IMC '06, P327
   *LIBYAHOO2, 2009, LIBYAHOO2 A C LIB YA
   Lim J, 2006, WORK CONF REVERSE EN, P167
   Lin YC, 2008, OCUL IMMUNOL INFLAMM, V16, P83, DOI 10.1080/09273940802056307
   LIN Z, 2008, P 15 ANN NETW DISTR, P221
   Majumdar Rupak, 2007, 22 IEEE ACM INT C AU, P134
   Masri W, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P198, DOI 10.1109/ISSRE.2004.17
   MAURER PM, 1990, IEEE SOFTWARE, V7, P50, DOI 10.1109/52.56422
   Misherghi G., 2006, Proceedings of the 28th International Conference on Software Engineering, P142, DOI [DOI 10.1145/1134285.1134307, 10.1145/1134285.1134307]
   NAGARAJAN V, 2007, PROC IEEE INT CONF S, P3884
   Nethercote N, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P89, DOI 10.1145/1250734.1250746
   Parekh R, 2000, Handbook of Natural Language Processing, P727
   Purdom P., 1972, BIT (Nordisk Tidskrift for Informationsbehandling), V12, P366, DOI 10.1007/BF01932308
   Sirer EG, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND CONFERENCE ON DOMAIN-SPECIFIC LANGUAGES (DSL'99), P1
   *TID, 2009, TID PROJ PAG
   Van Put L, 2005, 2005 IEEE INTERNATIONAL SYMPOSIUM ON SIGNAL PROCESSING AND INFORMATION TECHNOLOGY (ISSPIT), VOLS 1 AND 2, P7
   Wang HelenJ., 2004, P 2004 C APPL TECHNO, P193
   Wang XiaoFeng., 2006, CCS '06: Proceedings of the 13th ACM conference on Computer and communications security, P37
   *WIR, 2009, WIR WORLDS MOST PEOP
   WONDRACEK G, 2008, P 15 ANN NETW DISTR, P203
   Xin B., 2007, ISSTA 07 P INT S SOF, P185, DOI 10.1145/1273463.1273489
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zeller A., 2005, Why Programs Fail: A Guide to Systematic Debugging
   Zhang Hong, 2004, Plant Biology (Rockville), V2004, P94
   Zhang Mingwu., 2007, Proceedings of the 33rd International Conference on Very Large Data Bases, VLDB '07, P1116
   Zhang Xiangyu., 2006, SIGSOFT 06FSE 14, P81, DOI DOI 10.1145/1181775.1181786
   2009, PROTOCOL INFORM PROJ
   2009, GRAMMAR HTML DOCUMEN
NR 36
TC 19
Z9 28
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2010
VL 36
IS 5
BP 688
EP 703
DI 10.1109/TSE.2009.54
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 653YP
UT WOS:000282135000007
DA 2024-07-18
ER

PT J
AU Balzarotti, D
   Banks, G
   Cova, M
   Felmetsger, V
   Kemmerer, RA
   Robertson, W
   Valeur, F
   Vigna, G
AF Balzarotti, Davide
   Banks, Greg
   Cova, Marco
   Felmetsger, Viktoria
   Kemmerer, Richard A.
   Robertson, William
   Valeur, Fredrik
   Vigna, Giovanni
TI An Experience in Testing the Security of Real-World Electronic Voting
   Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT International Symposium on Software Testing and Analysis
CY JUL 20-24, 2008
CL Seattle, WA
DE Voting systems; security testing; vulnerability analysis
AB Voting is the process through which a democratic society determines its government. Therefore, voting systems are as important as other well-known critical systems, such as air traffic control systems or nuclear plant monitors. Unfortunately, voting systems have a history of failures that seems to indicate that their quality is not up to the task. Because of the alarming frequency and impact of the malfunctions of voting systems, in recent years a number of vulnerability analysis exercises have been carried out against voting systems to determine if they can be compromised in order to control the results of an election. We have participated in two such large-scale projects, sponsored by the Secretaries of State of California and Ohio, whose goals were to perform the security testing of the electronic voting systems used in their respective states. As the result of the testing process, we identified major vulnerabilities in all of the systems analyzed. We then took advantage of a combination of these vulnerabilities to generate a series of attacks that would spread across the voting systems and would "steal" votes by combining voting record tampering with social engineering approaches. As a response to the two large-scale security evaluations, the Secretaries of State of California and Ohio recommended changes to improve the security of the voting process. In this paper, we describe the methodology that we used in testing the two real-world electronic voting systems we evaluated, the findings of our analysis, our attacks, and the lessons we learned.
C1 [Balzarotti, Davide] Eurecom Inst, Sophia Antipolis, France.
   Univ Calif Santa Barbara, Dept Comp Sci, Santa Barbara, CA 93106 USA.
C3 IMT - Institut Mines-Telecom; EURECOM; University of California System;
   University of California Santa Barbara
RP Balzarotti, D (corresponding author), Eurecom Inst, Sophia Antipolis, France.
EM Davide.Balzarotti@eurecom.fr; nomed@cs.ucsb.edu; rusvika@cs.ucsb.edu;
   kemm@cs.ucsb.edu; wkr@cs.ucsb.edu; fredrik@cs.ucsb.edu;
   vigna@cs.ucsb.edu
CR [Anonymous], 114911990 IEEE
   APPEL A, 2007, BOUGHT USED VOTING M
   APPEL A, 2009, CECI NEST PAS URNE I
   AVIV A, 2008, P USENIX ACCURATE EL
   Barr E, 2007, COMMUN ACM, V50, P19, DOI 10.1145/1226736.1226754
   BETHENCOURT J, 2007, P NETW DISTR SYST SE
   BOWEN D, 2007, TOP TO BOTTOM REV
   BRUNNER J, 2007, OHIO EVEREST VOTING
   BUTLER K, 2008, P USENIX ACCURATE EL
   CHAUM D, 2008, P USENIX ACCURATE EL
   *COMM CAUS VOTERSU, 2008, MAST LIST 70 VOT MAC
   EVERETT SP, 2007, THESIS RICE U
   Feldman A.J., 2007, EL VOT TECHN WORKSH
   FELTEN E, 2010, HOTEL MINIBAR KEYS O
   GARERA S, 2007, P ACM C COMP COMM SE, P256
   GONDREE M, 2005, CRITIQUE 2002 FEC VS
   GONGGRIJP R, 2007, P USENIX ACCURATE EL
   Gumbel Andrew., 2005, Steal This Vote: Dirty Elections and the Rotten History of Democracy in America
   HALDERMAN J, 2008, P USENIX ACCURATE EL
   HALL J, 2008, P USENIX ACCURATE EL
   HARRIS B, 2003, INSIDE US VOTE COUNT
   Harris Bev., 2003, Black Box Voting: Ballot Tampering in the 21st Century
   HITE R, 2007, ALL LEVELS GOVT NEED
   Hoglund Greg, 2004, Exploiting Software: How to Break Code
   HURSTI H, 2005, CRITICAL SECURITY IS
   Jefferson D, 2004, COMMUN ACM, V47, P59, DOI 10.1145/1022594.1022624
   Jefferson D.R., 2004, SECURITY ANAL SECURE
   Jones D.W., 2003, BRIEF ILLUSTRATED HI
   Karlof C, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 14TH USENIX SECURITY SYMPOSIUM, P33
   KIAYIAS A, 2007, P ANN COMP SEC APPL
   KIAYIAS A, 2007, P USENIX ACCURATE EL
   Kohno T, 2004, P IEEE S SECUR PRIV, P27
   McDaniel P., 2007, EVEREST: Evaluation and Validation of Election-Related Equipment, Standards and Testing
   MERCURI R, 2005, VOTING SYSTEM GUIDEL
   Molnar D, 2006, P IEEE S SECUR PRIV, P365, DOI 10.1109/SP.2006.39
   Moran T, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P246
   NEUMANN P, 1993, P NATL COMP SEC C
   Proebstel E., 2007, P USENIX ACCURATE EL
   PYNCHON S, 2008, SARASOTAS VANISHED V
   RATH D, 2008, OPEN ON CHIP DEBUGGE
   Rubin AD, 2002, COMMUN ACM, V45, P39, DOI 10.1145/585597.585599
   Rubin AvielD., 2006, Brave New Ballot, V1st
   RYAN T, 2007, P USENIX ACCURATE EL
   Saltman R., 1988, Accuracy, Integrity, and Security in Computerized Vote-Tallying (NBS Special Publication 500-158), DOI 10.6028/ NBS.SP.500-158
   Sastry N, 2006, USENIX ASSOCIATION PROCEEDINGS OF THE 15TH USENIX SECURITY SYMPOSIUM, P321
   Science Applications International Corporation (SAIC), 2003, RISK ASS REP DIEB AC
   SELKER T, 2005, 28 CALT MIT VOT TECH
   Tibbetts T., 2008, CHALLENGED BALLOTS Y
   *US EL ASS COMM, 2002, VOT SYST STAND
   *VER VOT FDN, 2009, EL MISC MALF REC EL
   VIGNA G, 2007, TOP TO BOTTOM REV CA
   *VOTERSUNITE, 2010, ES S NEWS PART LIST
   WELDEMARIAM K, 2008, P USENIX ACCURATE EL
   WERTHEIMER MA, 2004, TRUSTED AGENT REPORT
   Wysopal C., 2006, ART SOFTWARE SECURIT
   Yasinsac Alec., 2007, Software Review and Security Analysis of the ESS iVotronic 8.0.1.2 Voting Machine Firmware
   Yee Ka-Ping, 2007, Ph.D. Dissertation
   2009, ELECTION SYSTEMS SOF
   2009, SEQUOIA VOTING SYSTE
NR 59
TC 19
Z9 24
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2010
VL 36
IS 4
BP 453
EP 473
DI 10.1109/TSE.2009.53
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 631LE
UT WOS:000280347600002
DA 2024-07-18
ER

PT J
AU Antkiewicz, M
   Czarnecki, K
   Stephan, M
AF Antkiewicz, Michal
   Czarnecki, Krzysztof
   Stephan, Matthew
TI Engineering of Framework-Specific Modeling Languages
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Framework-specific modeling language; domain-specific language;
   object-oriented framework; application programming interface (API);
   feature model; framework-specific model; forward engineering; reverse
   engineering; round-trip engineering; evolution; code pattern; mapping
ID QUALITY; DESIGN; SEMANTICS; SCIENCE
AB Framework-specific modeling languages (FSMLs) help developers build applications based on object-oriented frameworks. FSMLs model abstractions and rules of application programming interfaces (APIs) exposed by frameworks and can express models of how applications use APIs. Such models aid developers in understanding, creating, and evolving application code. We present four exemplar FSMLs and a method for engineering new FSMLs. The method was created postmortem by generalizing the experience of building the exemplars and by specializing existing approaches to domain analysis, software development, and quality evaluation of models and languages. The method is driven by the use cases that the FSML under development should support and the evaluation of the constructed FSML is guided by two existing quality frameworks. The method description provides concrete examples for the engineering steps, outcomes, and challenges. It also provides strategies for making engineering decisions. Our work offers a concrete example of software language engineering and its benefits. FSMLs capture existing domain knowledge in language form and support application code understanding through reverse engineering, application code creation through forward engineering, and application code evolution through round-trip engineering.
C1 [Antkiewicz, Michal; Czarnecki, Krzysztof; Stephan, Matthew] Univ Waterloo, Dept Elect & Comp Engn, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Antkiewicz, M (corresponding author), Univ Waterloo, Dept Elect & Comp Engn, Waterloo, ON N2L 3G1, Canada.
EM mantkiew@gsd.uwaterloo.ca; kczarnec@gsd.uwaterloo.ca;
   mdstepha@gsd.uwaterloo.ca
RI Stephan, Matthew/X-7925-2019; Stephan, Matthew/AAG-3236-2021
OI Stephan, Matthew/0000-0003-0559-2079; 
FU IBM Centers for Advanced Studies in Ottawa and Toronto; Natural Sciences
   and Engineering Research Council of Canada; Ontario Research Fund
FX The authors would like to thank Herman Lee for implementing the XML
   mapping interpreter used by the Struts and EJB FSMLs and Henry Lau for
   implementing some of the code transformations for mapping types related
   to Java. They also thank the anonymous reviewers for their valuable
   comments. This research was supported by IBM Centers for Advanced
   Studies in Ottawa and Toronto, the Natural Sciences and Engineering
   Research Council of Canada, and the Ontario Research Fund.
CR ACHARYA M, 2007, P S FDN SOFTW ENG
   Allan C, 2005, ACM SIGPLAN NOTICES, V40, P345, DOI 10.1145/1103845.1094839
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   [Anonymous], 2003, Eclipse Modeling Framework
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Antkiewicz M., 2004, Proc. of the Wksp on Eclipse Technology eXchange, P67, DOI DOI 10.1145/1066129.1066143
   ANTKIEWICZ M, 2008, THESIS U WATERLOO
   ANTKIEWICZ M, 2007, 200718 U WAT EL COMP
   Antkiewicz M, 2006, LECT NOTES COMPUT SC, V4199, P692
   Antkiewicz M, 2009, AUTOMAT SOFTW ENG, V16, P101, DOI 10.1007/s10515-008-0040-x
   Antkiewicz M, 2008, LECT NOTES COMPUT SC, V5235, P3, DOI 10.1007/978-3-540-88643-3_1
   Antkiewicz Michal., 2007, ASE 07, P214
   *AP SOFTW FDN, 2006, STRUTS 1 35 DTD
   *AP SOFTW FDN, 2009, WALK TOUR STRUTS MAI
   *AP SOFTW FDN, 2006, STRUTS JAV
   *AP SOFTW FDN, 2006, STRUTS 1 35 US GUID
   Apel Sven, 2006, P 5 INT C GENERATIVE, P59
   Austin C.A., 2005, THESIS IOWA STATE U
   Avgustinov P, 2007, ACM SIGPLAN NOTICES, V42, P11, DOI 10.1145/1190215.1190221
   Batory D, 2003, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2003.1201199
   Blackwell A., 2007, A Cognitive Dimensions Questionnaire
   Bravenboer M, 2004, ACM SIGPLAN NOTICES, V39, P365, DOI 10.1145/1035292.1029007
   Bruch Marcel., 2006, P 4 OOPSLA WORKSHOP, P55, DOI [10.1145/1188835.1188847, DOI 10.1145/1188835.1188847]
   CHEEMA AP, 2007, THESIS U WATERLOO
   CLARK T, 2008, APPL METAMODELING FD
   Cook Steve., 2007, Domain-specific devel- opment with visual studio dsl tools, Vfirst
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P7, DOI 10.1002/spip.213
   CZARNECKI K, 2005, P INT WORKSH SOFTW F
   Czarnecki K, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P22, DOI 10.1109/SPLC.2008.49
   Czarnecki K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P23, DOI 10.1109/SPLINE.2007.24
   DEMICHIEL L, 2006, EJB CORE CONTRACTS R
   Dig D, 2005, PROC IEEE INT CONF S, P389
   Dudney B., 2003, J2EE_AntiPatterns
   *EC FDN, 2007, JAV PACK
   *EC FDN, 2009, EC DOC VERS 3 3
   Fairbanks G, 2006, ACM SIGPLAN NOTICES, V41, P75, DOI 10.1145/1167515.1167480
   Fontoura M, 2000, LECT NOTES COMPUT SC, V1850, P63
   Green T. R. G., 1989, People and Computers V. Proceedings of the Fifth Conference of the British Computer Society Human-Computer Interaction Specialist Group, P443
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   GREENFIELD J, 2004, SOFTEARE FACTORIES A
   HAKALA M, 2001, P 3 INT C GEN COMP B, P163
   Harel D, 2004, COMPUTER, V37, P64, DOI 10.1109/MC.2004.172
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   HEYDARNOORI A, 2009, THESIS U WATERLOO
   HEYDARNOORI A, 2009, P EUR C OBJ OR PROGR
   HOFFMANN MR, 2006, ECLIPSE WORKBENCH US
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   HOU D, 2004, THESIS U ALBERTA
   Hou DQ, 2006, IEEE T SOFTWARE ENG, V32, P404, DOI 10.1109/TSE.2006.60
   Hou DQ, 2005, PROG COMPREHEN, P87
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Jendrock E., 2007, The Java EE 5 Tutorial
   JOHNSON RE, 1992, P C OBJ OR PROGR SYS, P63
   Kang Kyo C, 1990, Technical Report
   Kelly S., 2008, Domain-Specific Modeling
   KHANNA S, 2007, FSTTCS 2007 FDN SOFT
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kim CJ, 2008, 2008 3RD INTERNATIONAL CONFERENCE ON COGNITIVE RADIO ORIENTED WIRELESS NETWORKS AND COMMUNICATIONS, P44
   KRASNER GE, 1988, J OBJECT-ORIENT PROG, V1, P41
   Krogstie J, 2006, EUR J INFORM SYST, V15, P91, DOI 10.1057/palgrave.ejis.3000598
   KUTAR M, 2002, P 14 ANN M PSYCH PRO, P1
   LEE H, 2008, P INT WORKSH DOM SPE
   Lee K, 2004, LECT NOTES COMPUT SC, V3107, P69
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   LITTLE G, 2008, AUTOMAT SOFTW ENG, V16, P37
   LIU J, 2006, P INT C SOFTW ENG IC, P112
   LO D, 2007, P INT C KNOWL DISC D, P460
   Makhoul J., 1999, Proceedings of DARPA Broadcast News Workshop, P249
   MANDELIN D, 2005, PLDI 05, P48, DOI [10.1145/1065010.1065018, DOI 10.1145/1065010.1065018]
   MARCH ST, 1995, DECIS SUPPORT SYST, V15, P251, DOI 10.1016/0167-9236(94)00041-2
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Mesbah A, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P181
   Michail A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P167, DOI 10.1109/ICSE.2000.870408
   Moody DL, 2005, DATA KNOWL ENG, V55, P243, DOI 10.1016/j.datak.2004.12.005
   NOTH W, 1996, HDB SEMIOTICS
   *OBJ MAN GROUP INC, 2008, MET OBJ FAC MOF COR
   Ortigosa A, 1999, TOOLS, V29, P131, DOI 10.1109/TOOLS.1999.779006
   Pandit Chinmay., 2005, MAKE YOUR ECLIPSE AP
   PARNAS DL, 1986, IEEE T SOFTWARE ENG, V12, P251, DOI 10.1109/TSE.1986.6312940
   PREE W, 1995, SOFTWARE CONCEPTS TO, V3
   Ramanathan MK, 2007, PROC INT CONF SOFTW, P240
   ROBERTS D, 1996, P C PATT LANG PROGR
   Sahavechaphan Naiyana., 2006, Proceedings of the 21st OOPSLA, P413
   Sankaranarayanan S, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P131, DOI 10.1145/1368088.1368107
   Schäfer T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P471, DOI 10.1145/1368088.1368153
   Shull F, 2000, IEEE T SOFTWARE ENG, V26, P1101, DOI 10.1109/32.881720
   SMOLANDER K, 1993, GOPRR PROPOSAL META
   SPRINGGAY D, 2001, CREATING ECLIPSE VIE
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   STEPHAN M, 2009, THESIS U WATERLOO
   STEPHAN M, 2008, 200808 ECE U WAT
   *SUN MICR, 2009, JAV TUT LESS APPL
   *SUN MICR INC, 2007, JAVATM PLATF ENT ED
   *SUN MICR INC, 2006, ENT JAVABEANS DEPL D
   *SUN MICR INC, 2008, LESS APPL
   *SUN MICR INC, 2008, PROC THREADS
   Thummalapenta Suresh, 2007, Proceedings of the Twenty-second IEEE/ACM International Conference on Automated Software Engineering, ASE '07, P204
   TOURWE T, 2002, THESIS VRIJE U BRUSS
   Vasudevan P, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P289, DOI 10.1109/SERA.2006.25
   WASYLKOWSKI A, 2007, P S FDN SOFTW ENG
   Xing ZC, 2007, IEEE T SOFTWARE ENG, V33, P818, DOI 10.1109/TSE.2007.70747
   [No title captured]
NR 102
TC 26
Z9 28
U1 2
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2009
VL 35
IS 6
BP 795
EP 824
DI 10.1109/TSE.2009.30
PG 30
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 524VP
UT WOS:000272172800005
DA 2024-07-18
ER

PT J
AU Napier, NP
   Mathiassen, L
   Johnson, RD
AF Napier, Nannette P.
   Mathiassen, Lars
   Johnson, Roy D.
TI Combining Perceptions and Prescriptions in Requirements Engineering
   Process Assessment: An Industrial Case Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Process implementation and change; qualitative process analysis;
   requirements engineering process; software management; software process
ID PROCESS IMPROVEMENT; SUCCESS FACTORS; SOFTWARE; PROJECT; RISK
AB Requirements engineering (RE) is a key discipline in software development and several methods are available to help assess and improve RE processes. However, these methods rely on prescriptive models of RE; they do not, like other disciplines within software engineering, draw directly on stakeholder perceptions and subjective judgments. Given this backdrop, we present an empirical study in RE process assessment. Our aim was to investigate how stakeholder perceptions and process prescriptions can be combined during assessments to effectively inform RE process improvement. We first describe existing methods for RE process assessment and the role played by stakeholder perceptions and subjective judgments in the software engineering and management literature. We then present a method that combines perceptions and prescriptions in RE assessments together with an industrial case study in which the method was applied and evaluated over a three-year period at TelSoft. The data suggest that the combined method led to a comprehensive and rich assessment and it helped TelSoft consider RE as an important and integral part of the broader engineering context. This, in turn, led to improvements that combined plan-driven and adaptive principles for RE. Overall, the combined method helped TelSoft move from Level 1 to Level 2 in RE maturity, and the employees perceived the resulting engineering practices to be improved. Based on these results, we suggest that software managers and researchers combine stakeholder perceptions and process prescriptions as one way to effectively balance the specificity, comparability, and accuracy of software process assessments.
C1 [Napier, Nannette P.] Georgia Gwinnett Coll, Sch Sci & Technol, Lawrenceville, GA 30043 USA.
   [Mathiassen, Lars] Georgia State Univ, Ctr Proc Innovat, J Mack Robinson Coll Business, Atlanta, GA 30303 USA.
   [Johnson, Roy D.] Univ Pretoria, Dept Informat, Fac Engn Built Environm & Informat Technol, ZA-0002 Pretoria, Gauteng, South Africa.
C3 University System of Georgia; Georgia Gwinnett College; University
   System of Georgia; Georgia State University; University of Pretoria
RP Napier, NP (corresponding author), Georgia Gwinnett Coll, Sch Sci & Technol, 1000 Univ Lane, Lawrenceville, GA 30043 USA.
EM nnapier@ggc.edu; lmathiassen@gsu.edu; roy@up.ac.za
OI Napier, Nannette/0000-0002-2277-3632
FU TelSoft; Georgia Research Alliance
FX The authors wish to thank the employees at TelSoft. This work was
   supported in part by a grant from TelSoft and the Georgia Research
   Alliance.
CR [Anonymous], 1999, SOFT SYSTEMS METHODO
   [Anonymous], 1997, Requirements engineering: a good practice guide
   [Anonymous], 1995, Computer programs for qualitative data analysis: A software sourcebook
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Baskerville R, 1998, EUR J INFORM SYST, V7, P90, DOI 10.1057/palgrave.ejis.3000298
   Beecham S, 2005, SOFTWARE QUAL J, V13, P247, DOI 10.1007/s11219-005-1752-9
   Beecham S, 2005, J SYST SOFTWARE, V76, P251, DOI 10.1016/j.jss.2004.06.004
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   Boehm B.W., 2004, Balancing Agility and Discipline: A Guide for the Perplexed
   *CMMI PROD TEAM, 2002, CMUSEI2002TR011 CMMI
   CURTIS B, 1993, INFORM SOFTWARE TECH, V35, P381, DOI 10.1016/0950-5849(93)90009-R
   Damian D, 2004, EMPIR SOFTW ENG, V9, P45, DOI 10.1023/B:EMSE.0000013514.19567.ad
   Daneva M, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P45
   Daneva M, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P255, DOI 10.1109/ICRE.2002.1048536
   El Emam K, 2000, IEEE T SOFTWARE ENG, V26, P541, DOI 10.1109/32.852742
   El Emam K., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P204, DOI 10.1109/ISRE.1995.512562
   Frederiksen HD, 2005, IEEE T ENG MANAGE, V52, P350, DOI 10.1109/TEM.2005.850737
   Host M, 1997, INFORM SOFTWARE TECH, V39, P755, DOI 10.1016/S0950-5849(97)00027-X
   Hughes RT, 1996, INFORM SOFTWARE TECH, V38, P67, DOI 10.1016/0950-5849(95)01045-9
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   *ISO IEC, 2002, ISO IEC 15288 2002 S
   Kasi V, 2008, EUR J INFORM SYST, V17, P62, DOI 10.1057/palgrave.ejis.3000727
   Kauppinen M, 2004, INFORM SOFTWARE TECH, V46, P937, DOI 10.1016/j.infsof.2004.04.002
   Kauppinen M, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P43, DOI 10.1109/ICRE.2002.1048504
   KAUPPINEN M, 2002, P 17 INT C SOFTW QUA
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kotonya G., 1998, Requirements engineering: processes and techniques
   Lewis M., 2007, Information.Knowledge.Systems Management, V6, P7
   Lincoln Y. S., 1985, NATURALISTIC INQUIRY
   Liu XQ, 2006, J SYST SOFTWARE, V79, P1649, DOI 10.1016/j.jss.2006.03.012
   Lyytinen K, 1998, INFORM SYST RES, V9, P233, DOI 10.1287/isre.9.3.233
   Mason Jennifer, 2018, Qualitative Researching
   Mathiassen L, 2005, IEEE SOFTWARE, V22, P84, DOI 10.1109/MS.2005.159
   Mathiassen L., 2002, Information Technology & People, V15, P321, DOI 10.1108/09593840210453115
   McFeeley B., 1996, IDEAL USERS GUIDE SO
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   NAPIER NP, 2007, THESIS GEORGIA STATE
   NIAZI M, 2005, P 6 INT C PROD FOC S
   NIELSEN PA, 2001, SCANDINAVIAN J INFOR, V13, P23
   NIELSEN PA, 2002, IMPROVING SOFTWARE O
   Pettersson F, 2008, J SYST SOFTWARE, V81, P972, DOI 10.1016/j.jss.2007.08.032
   Pettigrew AM, 1990, ORGAN SCI, V1, P267, DOI 10.1287/orsc.1.3.267
   Rapoport R., 1970, Human Relations, V23, P499, DOI [10.1177/001872677002300601, DOI 10.1177/001872677002300601]
   Ropponen J, 2000, IEEE T SOFTWARE ENG, V26, P98, DOI 10.1109/32.841112
   Rout Terence P., 2007, Software Process Improvement and Practice, V12, P361, DOI 10.1002/spip.329
   Sanders Marty, 2007, Software Process Improvement and Practice, V12, P351, DOI 10.1002/spip.319
   Schmidt R, 2001, J MANAGE INFORM SYST, V17, P5, DOI 10.1080/07421222.2001.11045662
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Simon JM, 1996, J SYST ARCHITECT, V42, P633, DOI 10.1016/S1383-7621(96)00046-X
   Sommerville I, 2005, ACM T SOFTW ENG METH, V14, P85, DOI 10.1145/1044834.1044837
   SUSMAN GI, 1978, ADMIN SCI QUART, V23, P582, DOI 10.2307/2392581
   TIEDEMAN MJ, 1990, IEEE J SEL AREA COMM, V8, P176, DOI 10.1109/49.46869
   von Wangenheim C. G., 2006, Software Process Improvement and Practice, V11, P329, DOI 10.1002/spip.276
   Wilkie F. G., 2007, Software Process Improvement and Practice, V12, P339, DOI 10.1002/spip.321
   Wohlin C, 2003, EMPIR SOFTW ENG, V8, P285, DOI 10.1023/A:1024476828183
   Yin R.K., 2003, CASE STUDY RES DESIG
NR 56
TC 21
Z9 23
U1 1
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2009
VL 35
IS 5
BP 593
EP 606
DI 10.1109/TSE.2009.33
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 498PM
UT WOS:000270154300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Spiekermann, S
   Cranor, LF
AF Spiekermann, Sarah
   Cranor, Lorrie Faith
TI Engineering Privacy
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Privacy; security; privacy-enhancing technologies; anonymity;
   identification
AB In this paper, we integrate insights from diverse islands of research on electronic privacy to offer a holistic view of privacy engineering and a systematic structure for the discipline's topics. First, we discuss privacy requirements grounded in both historic and contemporary perspectives on privacy. We use a three-layer model of user privacy concerns to relate them to system operations (data transfer, storage, and processing) and examine their effects on user behavior. In the second part of this paper, we develop guidelines for building privacy-friendly systems. We distinguish two approaches: "privacy-by-policy" and "privacy-by-architecture." The privacy-by-policy approach focuses on the implementation of the notice and choice principles of fair information practices, while the privacy-by-architecture approach minimizes the collection of identifiable personal data and emphasizes anonymization and client-side data storage and processing. We discuss both approaches with a view to their technical overlaps and boundaries as well as to economic feasibility. This paper aims to introduce engineers and computer scientists to the privacy research domain and provide concrete guidance on how to design privacy-friendly systems.
C1 [Spiekermann, Sarah] Humboldt Univ, Inst Informat Syst, D-10178 Berlin, Germany.
   [Cranor, Lorrie Faith] Carnegie Mellon Univ, Pittsburgh, PA 15213 USA.
C3 Humboldt University of Berlin; Carnegie Mellon University
RP Spiekermann, S (corresponding author), Humboldt Univ, Inst Informat Syst, Spandauer Str 1, D-10178 Berlin, Germany.
EM sspiek@wiwi.hu-berlin.de; lorrie@cmu.edu
OI Cranor, Lorrie/0000-0003-2125-0124
FU US Army Research Office [DAAD19-02-1-0389]; Humboldt-Shiftung
FX This work was supported in part by US Army Research Office contract no.
   DAAD19-02-1-0389 ("Perpetually Available and Secure Information
   Systems") to Carnegie Mellon University's CyLab and by the Transcoop
   programme of the Humboldt-Shiftung.
CR Ackerman M., 1999, Proceedings of the 1st ACM conference on electronic commerce, EC '99, P1, DOI [10.1145/336992.336995, DOI 10.1145/336992.336995]
   Acquisti A, 2005, IEEE SECUR PRIV, V3, P26, DOI 10.1109/MSP.2005.22
   Acquisti A., 2004, P 5 ACM C ELECT COMM, DOI [10.1145/988772.988777, DOI 10.1145/988772.988777]
   ACQUISTI A, 2006, P 3 INT C INT SYST
   Adams A, 2001, BCS CONF SERIES, P49
   ADAMS A, 1999, P 7 ACM INT MULT C
   Agrawal R, 2000, SIGMOD REC, V29, P439, DOI 10.1145/335191.335438
   Altman I., 1975, ENV SOCIAL BEHAV PRI
   [Anonymous], 2000, ECONOMIST
   [Anonymous], 2004, Proceedings of the 2nd International Conference on Mobile Systems, Applications, and Services
   [Anonymous], 2001, Security Engineering: A Guide to Building Dependable Distributed Systems
   [Anonymous], 2000, PRIV ONL FAIR INF PR
   [Anonymous], 1980, GUIDELINES PROTECTIO, DOI DOI 10.13140/RG.2.1.1508.4405
   [Anonymous], WEB PRIVACY P3P
   Awad NF, 2006, MIS QUART, V30, P13
   Awad NF, 2005, COMMUN ACM, V48, P55, DOI 10.1145/1076211.1076240
   BARBARO M, 2006, NY TIMES        0809
   Barth A., 2005, Proceedings of the 2005 workshop on Issues in the theory of security, P58
   Berendt B, 2005, COMMUN ACM, V48, P101, DOI 10.1145/1053291.1053295
   BERTHOLD O, 2005, WIRTSCHAFTSINFORMATI, V6
   BERTHOLD O, 2001, P INT WORKSH DES ISS
   BIZER J, 2006, TAUCIS TECHNIKFOLGEN
   Brown M., 2004, J ELECTRON COMMER RE, V5, P62
   Byers S, 2004, IEEE SECUR PRIV, V2, P23, DOI 10.1109/MSECP.2004.1281241
   Camenisch J., 2002, P 9 ACM C COMP COMM, P21, DOI DOI 10.1145/586110.586114
   CANNON JC, 2004, PRIVACY WHAT DEVELOP
   Canny J, 2002, P IEEE S SECUR PRIV, P45, DOI 10.1109/SECPRI.2002.1004361
   Cavoukian A., 2002, PRIVACY PAYOFF SUCCE
   CHAUM D, 1985, COMMUN ACM, V28, P1030, DOI 10.1145/4372.4373
   CORNWELL J, 2007, P 8 IEEE WORKSH MOB
   Cranor L. F., 2006, ACM Transactions on Computer-Human Interaction, V13, P135, DOI 10.1145/1165734.1165735
   CRANOR LF, 2004, DESIGNING PERSONALIZ
   CRANOR LF, 2005, FOXTOR TOR DESIGN PR
   Cranor Lorrie Faith, 2005, Security and Usability: Designing Secure Systems that People Can Use
   DENG M, 2006, P 6 WORKSH PRIV ENH
   DINGLEDINE R, 2004, P 12 USENIX SEC S
   EARP JB, 2002, P AM C INF SYST
   Edwards SM, 2002, J ADVERTISING, V31, P83, DOI 10.1080/00913367.2002.10673678
   ERNST LLP, 2002, PRIVACY WHAT CONSUME
   Etzioni Amitai., 1999, LIMITS PRIVACY
   *EUR PARL, 2006, 20050182 COD EUR PAR
   Feigenbaum J., 2002, Security and Privacy in Digital Rights Management. ACM CCS-8 Workshop DRM 2001. Revised Papers (Lecture Notes in Computer Science Vol.2320), P76
   FRIEDMAN B, 2006, P 8 INT C UB COMP
   GARFINKEL S, 2003, IEEE SECURITY PR JAN
   Garfinkel Simon, 2000, Database nation: the death of privacy in the 21st century
   Ghosh A.K., 2001, SECURITY PRIVACY E B
   GIDEON J, 2006, P 2 S US PRIV SEC, V149, P133
   Gollwitzer PM, 2006, ADV EXP SOC PSYCHOL, V38, P69, DOI 10.1016/S0065-2601(06)38002-1
   Gruteser M, 2005, MOBILE NETW APPL, V10, P315, DOI 10.1007/s11036-005-6425-1
   GUMBRECHT M, 2004, P WORKSH WEBL EC AGG
   Günther O, 2005, COMMUN ACM, V48, P73, DOI 10.1145/1081992.1082023
   GUYNN J, 2007, LOS ANGELES TIM 1206
   Hoffer J.A., 2002, MODERN SYSTEMS ANAL, V3rd
   Hong J., 2004, C DESIGNING INTERACT, P91, DOI [DOI 10.1145/1013115.1013129, 10.1145/1013115.1013129]
   HSIEH G, 2007, P 9 INT C UB COMP, P91
   HUBERMAN B, 2004, IEEE SECUR PRIV, V1, P22
   *IAPP, 2007, US PRIV ENF CAS STUD
   *INF COMM OFF, 2006, WHAT PRIC PRIV
   Kang J, 1998, STANFORD LAW REV, V50, P1193, DOI 10.2307/1229286
   Kobsa A., 2007, The Adaptive Web: Methods and Strategies of Web Personalization
   Kobsa A., 2003, ACM Transactions on Internet Technology, V3, P149, DOI DOI 10.1145/767193.767196
   Kumaraguru P., 2005, Privacy indexes: a survey of westin's studies
   Lahlou S, 2005, COMMUN ACM, V48, P59, DOI 10.1145/1047671.1047705
   LAMARCA A, 2005, P INT C PERV COMP
   Lederer S., 2002, A conceptual model and a metaphor of everyday privacy in ubiquitous computing environments
   LOWENSTEIN G, 2000, CHOICES VALUES FRAME, P578
   Machanavajjhala A., 2007, ACM T KNOWL DISCOV D, V1, P3, DOI [DOI 10.1145/1217299.1217302, 10.1109/icde.2006.1, DOI 10.1109/ICDE.2006.1]
   Malhotra NK, 2004, INFORM SYST RES, V15, P336, DOI 10.1287/isre.1040.0032
   Malin B., 2005, Journal of Privacy Technology
   Mathewson N, 2005, SECURITY USABILITY D, P547
   Mayer-Schonberger V., 2007, Useful void: The art of forgetting in the age of ubiquitous computing
   MCCULLOUGH D, 2006, CNET NEWS        091
   McFarlane DC, 2002, HUM-COMPUT INTERACT, V17, P63, DOI 10.1207/S15327051HCI1701_2
   *MICR, 2006, PRIV GUID DEV SOFTW
   MILLS E, 2006, CNET NEWS       0821
   NARAYANAN A, 2008, P IEEE S SEC PRIV
   Nissenbaum H, 2004, WASH LAW REV, V79, P119
   NOWAG GJ, 1995, J DIRECT MARKETING, V93, P46
   Otto PN, 2007, IEEE SECUR PRIV, V5, P15, DOI 10.1109/MSP.2007.126
   Pfitzmann A., 2008, ANONYMITY UNLINKABIL
   PFITZMANN B, 1990, DATENSCHUTZ DATENSIC, V14, P5
   Pollach I, 2007, COMMUN ACM, V50, P103, DOI 10.1145/1284621.1284627
   POSNER RA, 1984, PHILOS DIMENSIONS PR
   POWERS C, 2003, W3C MEMBER SUBMISSIO, V10
   PRABAKER M, 2007, P WORKSH UB PRIV SEP
   *PRIV AM BUS, 2005, NEW SURV REP INCR ID
   Regan P. M., 1995, Legislating Privacy: Technology, Social Values, and Public Policy
   Reiter MK, 1999, COMMUN ACM, V42, P32, DOI 10.1145/293411.293778
   Rotenberg Marc., 2004, PRIVACY LAW SOURCEBO
   Sheehan KB, 2002, INFORM SOC, V18, P21, DOI 10.1080/01972240252818207
   SMITH JH, 1996, MIS Q, V202, P167
   SOLOVE DJ, 2005, U PENNSYLVANIA LAW R, V154
   SPIEGEL D, 2006, DER SPIEGEL, V29
   SPIEKERMANN S, 2001, P 5 INT TAG WIRTSCH
   Spiekermann S., 2001, P 3 ACM C EL COMM
   SPIEKERMANN S, 2003, P 15 C ADV INF SYST
   SPIEKERMANN S, 2006, ACCEPTANCE UBIQUITOU
   SPIEKERMANN S, 2006, TECHNIKFOLGENABSCHAT, P153
   SPIEKERMANN S, 2004, INT J TECHNOLOGY HUM, V11
   SPRENGER P, 1999, WIRED NEWS      0126
   STRANDBURG K, 2005, PRIVACY RATIONALITY
   Sweeney L, 2002, INT J UNCERTAIN FUZZ, V10, P557, DOI 10.1142/S0218488502001648
   TSAI J, 2007, P WORKSH EC INF SEC
   Varian H., 1996, Privacy and Self-Regulation in the Information Age, NTIA report
   Viégas FB, 2005, J COMPUT-MEDIAT COMM, V10, DOI 10.1111/j.1083-6101.2005.tb00260.x
   *VOD, 2003, VOD LOC SERV PRIV MA
   WARREN D, 1890, HARVARD LAW REV, V45
   Westin A. F., 1967, PRIVACY FREEDOM
   WHITTEN A, 1999, P 8 USENIX SEC S AUG
   Zibuschka J, 2007, INT FED INFO PROC, V232, P325
   2004, DATENSCHFITZER GOOGL
   2006, PRIVACY INT NATL PRI
   2005, CBS NEWS         OCT
   1995, J EUROPEAN COMMUNITI, V281
   2007, MULTI LAYERED NOTICE
   2001, PRIVACY J, V27, P1
NR 116
TC 228
Z9 246
U1 0
U2 24
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2009
VL 35
IS 1
BP 67
EP 82
DI 10.1109/TSE.2008.88
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 431UK
UT WOS:000265089400004
DA 2024-07-18
ER

PT J
AU Haider, SW
   Cangussu, JW
   Cooper, KML
   Dantu, R
AF Haider, Syed Waseem
   Cangussu, Joao W.
   Cooper, Kendra M. L.
   Dantu, Ram
TI Estimation of Defects based on Defect Decay Model::
   <i>ED</i><SUP>3</SUP><i>M</i>
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE defect prediction; system testing; estimation theory; maximum likelihood
   estimator
ID PRONE SOFTWARE; PREDICTION; ERRORS; NUMBER; FAULTS
AB An accurate prediction of the number of defects in a software product during system testing contributes not only to the management of the system testing process but also to the estimation of the product's required maintenance. Here, a new approach, called Estimation of Defects based on Defect Decay Model ((EDM)-M-3) is presented that computes an estimate of the total number of defects in an ongoing testing process. (EDM)-M-3 is based on estimation theory. Unlike many existing approaches, the technique presented here does not depend on historical data from previous projects or any assumptions about the requirements and/or testers' productivity. It is a completely automated approach that relies only on the data collected during an ongoing testing process. This is a key advantage of the (EDM)-M-3 approach as it makes it widely applicable in different testing environments. Here, the (EDM)-M-3 approach has been evaluated using five data sets from large industrial projects and two data sets from the literature. In addition, a performance analysis has been conducted using simulated data sets to explore its behavior using different models for the input data. The results are very promising; they indicate the (EDM)-M-3 approach provides accurate estimates with as fast or better convergence time in comparison to well-known alternative techniques, while only using defect data as the input.
C1 [Haider, Syed Waseem; Cangussu, Joao W.; Cooper, Kendra M. L.] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.
   [Dantu, Ram] Univ N Texas, Dept Comp Sci & Engn, Denton, TX 76203 USA.
C3 University of Texas System; University of Texas Dallas; University of
   North Texas System; University of North Texas Denton
RP Haider, SW (corresponding author), Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.
EM easeem@utdallas.edu; cangussu@utdallas.edu; kcooper@utdallas.edu;
   rdantu@unt.edu
CR ALEKRAM R, 2002, 750 ECE U WAT DEP CO
   BAI C, 2003, P 27 ANN INT COMP SO
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Bell R., 2006, Proc. 2006 International Symposium on Software Testing and Analysis, P61
   Briand LC, 2000, IEEE T SOFTWARE ENG, V26, P518, DOI 10.1109/32.852741
   BURNSTEIN I, 1996, CROSSTALK J DEFENSE, V9, P21
   BURNSTEIN I, 1996, CROSSTALK J DEFENSE, V9, P19
   BURNSTEIN I, 1999, SOFTWARE QUALITY SEP, V1
   Cangussu JW, 2003, IEEE T SOFTWARE ENG, V29, P430, DOI 10.1109/TSE.2003.1199072
   Cangussu JW, 2002, IEEE T SOFTWARE ENG, V28, P782, DOI 10.1109/TSE.2002.1027800
   CANGUSSU JW, 2004, P 15 INT S SOFTW REL
   COMPTON BT, 1990, J SYST SOFTWARE, V12, P199, DOI 10.1016/0164-1212(90)90040-S
   DALAL SR, 1990, IEEE J SEL AREA COMM, V8, P169, DOI 10.1109/49.46868
   EHRLICH W, 1990, 12TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P108, DOI 10.1109/ICSE.1990.63608
   Fenton N, 2002, IEEE SOFTWARE, V19, P116, DOI 10.1109/MS.2002.1020298
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fenton N, 2007, INFORM SOFTWARE TECH, V49, P32, DOI 10.1016/j.infsof.2006.09.001
   FERDINAND AE, 1974, INT J GEN SYST, V1, P19, DOI 10.1080/03081077408960745
   GAFFNEY JE, 1984, IEEE T SOFTWARE ENG, V10, P459, DOI 10.1109/TSE.1984.5010260
   GOEL AL, 1985, IEEE T SOFTWARE ENG, V11, P1411, DOI 10.1109/TSE.1985.232177
   GOKHALE KTS, 1998, P 1 IEEE WORKSH APPL, P22
   Gras JJ, 2006, TAIC PART - TESTING: ACADEMIC & INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P29, DOI 10.1109/TAIC-PART.2006.10
   Hatton L, 1997, IEEE SOFTWARE, V14, P89, DOI 10.1109/52.582978
   HENRY S, 1984, SOFTWARE PRACT EXPER, V14, P561, DOI 10.1002/spe.4380140606
   HOU RH, 1994, P 5 INT S SOFTW REL, P18
   JACOBY R, 1990, HYPER GEOMETRIC DIST
   JOHN KO, 1984, P 7 INT C SOFTW ENG, P230
   Kay S. M., 1993, FUNDAMENTALS STAT SI
   KNUTH DE, 1989, SOFTWARE PRACT EXPER, V19, P607, DOI 10.1002/spe.4380190702
   Leon-Garcia A., 1994, Probability and random processes for electrical engineering
   Luenberger DG., 1979, INTRO DYNAMIC SYSTEM
   Mockus A, 2003, PROC INT CONF SOFTW, P274, DOI 10.1109/ICSE.2003.1201207
   Moller K.-H., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P82, DOI 10.1109/METRIC.1993.263798
   Musa J., 1999, SOFTWARE RELIABILITY
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   MUSA JD, 1979, SOFTWARE RELIABILITY
   NEIL MD, 1992, THESIS S BANK U
   NIKORA AP, 2003, COMPUTER AIDED SOFTW
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   ONOMA AK, 1995, IEEE SOFTWARE, V12, P68, DOI 10.1109/52.406760
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   OSTRAND TJ, 2005, R TAP CEL DIV COMP C, P48
   Padberg F, 2001, SECOND ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P40, DOI 10.1109/APAQS.2001.990000
   PADBERG F, 2002, INT J RELIABILIT JUL
   Satoh D, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P176, DOI 10.1109/ISSRE.2001.989471
   Seber G. A. F., 2003, NONLINEAR REGRESSION
   SHEN VY, 1985, IEEE T SOFTWARE ENG, V11, P317, DOI 10.1109/TSE.1985.232222
   ZHANG P, 2002, ALR2002048 AV RES LA
NR 48
TC 6
Z9 10
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2008
VL 34
IS 3
BP 336
EP 356
DI 10.1109/TSE.2008.23
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 306CA
UT WOS:000256223600003
DA 2024-07-18
ER

PT J
AU Holzmann, GJ
   Bosnacki, D
AF Holzmann, Gerard J.
   Bosnacki, Dragan
TI The design of a multicore extension of the SPIN model checker
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software/program verification; model checking; models of computation;
   logics and meanings of programs; distributed programming
ID PARTIAL-ORDER REDUCTION
AB We describe an extension of the SPIN model checker for use on multicore shared-memory systems and report on its performance. We show how, with proper load balancing, the time requirements of a verification run can, in some cases, be reduced close to N-fold when N processing cores are used. We also analyze the types of verification problems for which multicore algorithms cannot provide relief. The extensions discussed here require only relatively small changes in the SPIN source code and are compatible with most existing verification modes such as partial order reduction, the verification of temporal logic formulas, bitstate hashing, and hash-compact compression.
C1 CALTECH, Jet Prop Labs, Lab Reliable Software, Pasadena, CA 91109 USA.
   Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
C3 National Aeronautics & Space Administration (NASA); NASA Jet Propulsion
   Laboratory (JPL); California Institute of Technology; Eindhoven
   University of Technology
RP Holzmann, GJ (corresponding author), CALTECH, Jet Prop Labs, Lab Reliable Software, 4800 Oak Grove Dr,NADA-JPL MS 301-230, Pasadena, CA 91109 USA.
EM gerard@spinroot.com; dragan@win.tue.nl
CR Alur R, 2001, FORM METHOD SYST DES, V18, P97, DOI 10.1023/A:1008767206905
   [Anonymous], 1996, LECT NOTES COMPUTER, DOI DOI 10.1007/3-540-60761-7
   [Anonymous], ELECT NOTES THEORETI
   BARNAT J, 2001, P 8 INT SPIN WORKSH
   BARNAT J, 2003, P AUTOMATED SOFTWARE
   BEHRMANN G, 2000, P 12 INT C COMP AID, P216
   BOSNACKI D, 2005, P 12 INT SPIN WORKSH, P91
   Brim L, 2006, ELECTRON NOTES THEOR, V135, P3, DOI 10.1016/j.entcs.2005.10.015
   Brim L, 2005, ELECTRON NOTES THEOR, V128, P63, DOI 10.1016/j.entcs.2004.10.019
   BRIM L, 2004, FORMAL METHODS COMPU, P266
   CERNA I, 2003, P SPIN WORKSH, P49
   Chien S., 2005, J AEROSPACE COMPUTIN
   Dijkstra, 1987, EWD998
   Edelkamp S, 2006, LECT NOTES COMPUT SC, V3925, P1
   GLUCK PR, 2002, P 2002 AEROSPACE C
   Gorden M, 1965, Electronics, V38, P114, DOI [DOI 10.1109/N-SSC.2006.4785860, DOI 10.1109/JPROC.1998.658762]
   Holzmann G., 1996, Proceedings of the 2nd International SPIN Workshop on Model Checking of Software, P23
   Holzmann G. J., 1991, Design and Validation of Comp. Protocols, V512
   Holzmann G.J., 2004, P 11 SPIN WORKSH, P77
   HOLZMANN GJ, 1992, IFIP TRANS C, V8, P349
   Holzmann GJ, 2000, BELL LABS TECH J, V5, P72, DOI 10.1002/bltj.2223
   Holzmann GJ, 2004, The SPIN model checker: primer and reference manual, V1003
   HOLZMANN GJ, 2007, P 6 INT WORKSH PAR D
   HOLZMANN GJ, 1994, P C FORMAL DESCRIPTI
   Inggs CP, 2005, ELECTRON NOTES THEOR, V128, P107, DOI 10.1016/j.entcs.2004.10.022
   JABBAR S, 2006, P 7 INT C VER MOD CH, P237
   Joshi R., 2007, FORMAL ASPECTS COMPU, V19
   KUMAR R, 2004, P 3 INT WORKSH PAR D
   Kurshan R, 1998, LECT NOTES COMPUT SC, V1384, P345, DOI 10.1007/BFb0054182
   LAFUENTE AL, 2002, 00176 U FREIB I INF
   LERDA F, 1999, P SPIN WORKSH
   Pelánek R, 2004, LECT NOTES COMPUT SC, V2989, P5
   PELED D, 1994, P 6 INT C COMP AID V, P377
   PENIX J, 2005, FORMAL METHODS SYSTE, V26
   PETERSON GL, 1981, INFORM PROCESS LETT, V12, P115, DOI 10.1016/0020-0190(81)90106-X
   REIF JH, 1985, INFORM PROCESS LETT, V20, P229, DOI 10.1016/0020-0190(85)90024-9
   Stern U, 1997, LECT NOTES COMPUT SC, V1254, P256
   Valmari A., 1998, Lectures on Petri Nets I: Basic Models. Advances in Petri Nets, P429
NR 38
TC 69
Z9 79
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 7
PY 2007
VL 33
IS 10
BP 659
EP 674
DI 10.1109/TSE.2007.70724
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 204XB
UT WOS:000249076200002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Porter, A
   Yilmaz, C
   Memon, AM
   Schmidt, DC
   Natarajan, B
AF Porter, Adam
   Yilmaz, Cemal
   Memon, Atif M.
   Schmidt, Douglas C.
   Natarajan, Bala
TI Skoll: A process and infrastructure for distributed continuous quality
   assurance
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE distributed continuous quality assurance; distributed testing;
   configurable components; testing
ID DEPLOYED SOFTWARE; DESIGN; SUPPORT
AB Software engineers increasingly emphasize agility and flexibility in their designs and development approaches. They increasingly use distributed development teams, rely on component assembly and deployment rather than green field code writing, rapidly evolve the system through incremental development and frequent updating, and use flexible product designs supporting extensive end-user customization. While agility and flexibility have many benefits, they also create an enormous number of potential system configurations built from rapidly changing component implementations. Since today's quality assurance (QA) techniques do not scale to handle highly configurable systems, we are developing and validating novel software QA processes and tools that leverage the extensive computing resources of user and developer communities in a distributed, continuous manner to improve software quality significantly. This paper provides several contributions to the study of distributed, continuous QA (DCQA). First, it shows the structure and functionality of Skoll, which is an environment that defines a generic around-the-world, around-the-clock QA process and several sophisticated tools that support this process. Second, it describes several novel QA processes built using the Skoll environment. Third, it presents two studies using Skoll: one involving user testing of the Mozilla browser and another involving continuous build, integration, and testing of the ACE+TAO communication software package. The results of our studies suggest that the Skoll environment can manage and control distributed continuous QA processes more effectively than conventional QA processes. For example, our DCQA processes rapidly identified problems that had taken the ACE+TAO developers much longer to find and several of which they had not found. Moreover, the automatic analysis of QA results provided developers information that enabled them to quickly find the root causes of problems.
C1 Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
   IBM TJ Watson Res Ctr, Hawthorne, NY 10532 USA.
   Vanderbilt Univ, ISIS, Nashville, TN 37203 USA.
C3 University System of Maryland; University of Maryland College Park;
   International Business Machines (IBM); Vanderbilt University
RP Porter, A (corresponding author), Univ Maryland, Dept Comp Sci, AV Williams Bldg, College Pk, MD 20742 USA.
EM aporter@cs.umd.edu; cyilmaz@us.ibm.com; atif@cs.umd.edu;
   d.schmidt@vanderbilt.edu; bala@dre.vanderbilt.edu
OI Yilmaz, Cemal/0000-0003-4124-2295
CR [Anonymous], 2006, AUERBACH SERIES APPL
   BOWRING JF, 2004, P INT S SOFTW TEST A, P195
   BROWNLIE R, 1992, AT&T TECH J, V71, P41, DOI 10.1002/j.1538-7305.1992.tb00164.x
   Brun Y, 2004, PROC INT CONF SOFTW, P480, DOI 10.1109/ICSE.2004.1317470
   BUHNE S, 2003, P 9 INT WORKSH REQ E, P59
   Burr K., 1998, P INT C SOFTW TEST A
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Dalal S. R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P285, DOI 10.1109/ICSE.1999.841019
   Dunietz IS, 1997, PROC INT CONF SOFTW, P205, DOI 10.1145/253228.253271
   Elbaum S, 2005, IEEE T SOFTWARE ENG, V31, P312, DOI 10.1109/TSE.2005.50
   Haran M., 2005, P INT S FDN SOFTW EN
   Haran M, 2007, IEEE T SOFTWARE ENG, V33, P287, DOI 10.1109/TSE.2007.1004
   Kuhn D.R., 2002, Proceedings of 27th Annual NASA Goddard Software Engineering Workshop, 2002, P91, DOI DOI 10.1109/SEW.2002.1199454
   LIBLIT B, 2005, P C PROGR LANG DES I
   MANDL R, 1985, COMMUN ACM, V28, P1054, DOI 10.1145/4372.4375
   Memon AM, 2005, IEEE T SOFTWARE ENG, V31, P884, DOI 10.1109/TSE.2005.117
   MEMON AM, 2004, P 26 INT C SOFTW ENG
   Michail A, 2005, PROC INT CONF SOFTW, P107
   *MICR, 2004, MICR XP ERR REP
   *MOZ ORG, 2004, BUGS
   *MOZ ORG, 1998, MOZ
   *MOZ ORG, 2004, TIND
   *NETSC, 2004, NETSC QUAL FEEDB SYS
   Orso A., 2002, Proceedings of the International Symposium on Software Testing and Analysis (ISSTA'02), P65
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   Schmidt D., 2001, C++ Network Programming: Resolving Complexity Using Ace and Patterns
   Schmidt DC, 1998, COMPUT COMMUN, V21, P294, DOI 10.1016/S0140-3664(97)00165-5
   SELBY RW, 1988, IEEE T SOFTWARE ENG, V14, P1743, DOI 10.1109/32.9061
   van Gurp J, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P45, DOI 10.1109/WICSA.2001.948406
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
   Yilmaz C., 2005, P 27 INT C SOFTW ENG
   YILMAZ C, 2004, P INT S SOFTW TEST A, P45
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   2005, X11GUITEST020
   2005, DOC GROUP VIRTUAL SC
NR 35
TC 19
Z9 26
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2007
VL 33
IS 8
BP 510
EP 525
DI 10.1109/TSE.2007.70719
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 182ZJ
UT WOS:000247542200002
DA 2024-07-18
ER

PT J
AU Bohnenkamp, H
   D'Argenio, PR
   Hermanns, H
   Katoen, JP
AF Bohnenkamp, Henrik
   D'Argenio, Pedro R.
   Hermanns, Holger
   Katoen, Joost-Pieter
TI MODEST: A compositional modeling formalism for hard and softly timed
   systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE modeling formalism; compositionality; formal semantics; timed automata;
   stochastic processes
AB This paper presents MODEST (MOdeling and DEscription language for Stochastic Timed systems), a formalism that is intended to support 1) the modular description of reactive systems' behavior while covering both 2) functional and 3) nonfunctional system aspects such as timing and quality-of-service constraints in a single specification. The language contains features such as simple and structured data types, structuring mechanisms like parallel composition and abstraction, means to control the granularity of assignments, exception handling, and nondeterministic and random branching and timing. MODEST can be viewed as an overarching notation for a wide spectrum of models, ranging from labeled transition systems to timed automata (and probabilistic variants thereof), as well as prominent stochastic processes such as (generalized semi-) Markov chains and decision processes. The paper describes the design rationales and details of the syntax and semantics.
C1 Univ RWTH Aachen, Software Modeling & Verificat Grp, D-52056 Aachen, Germany.
   Univ Nacl Cordoba, Comp Sci Grp, FAMAF, RA-5000 Cordoba, Argentina.
   Univ Saarland, Dependable Syst & Software Grp, Dept Comp Sci, D-66123 Saarbrucken, Germany.
C3 RWTH Aachen University; National University of Cordoba; Saarland
   University
RP Bohnenkamp, H (corresponding author), Univ RWTH Aachen, Software Modeling & Verificat Grp, D-52056 Aachen, Germany.
EM henrik@cs.rwth-aachen.de; dargenio@famaf.unc.edu.ar;
   hermanns@cs.uni-sb.de; katoen@cs.rwth-aachen.de
RI D'Argenio, Pedro R./R-7137-2019; Katoen, Joost-Pieter/O-3307-2018
OI D'Argenio, Pedro R./0000-0002-8528-9215; Hermanns,
   Holger/0000-0002-2766-9615; Katoen, Joost-Pieter/0000-0002-6143-1926
CR Abadi M, 1999, INFORM COMPUT, V148, P1, DOI 10.1006/inco.1998.2740
   Aceto L., 1994, Formal Aspects of Computing, V6, P201, DOI 10.1007/BF01221099
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   ALUR R, 1995, THEOR COMPUT SCI, V138, P3, DOI 10.1016/0304-3975(94)00202-T
   [Anonymous], 2002, ADV COMPUTERS
   [Anonymous], 1996, GRADUATE TEXTS MATH
   [Anonymous], 1999, Communicating and Mobile Systems: The Calculus
   [Anonymous], 2002, HDB MARKOV DECISION
   [Anonymous], 2002, Proc. of ACM Workshop on Principle of Mobile Computing, DOI [10.1145/584490.584499, DOI 10.1145/584490.584499]
   [Anonymous], 1995, Modeling and Analysis of Stochastic Systems
   BAIER C, 2004, P INT C FORM METH MO
   BEHRMANN G, 2004, P INT C FORM MOD AN
   Ben-Ari M., 1990, Principles of Concurrent and Distributed Programming
   Berry G., 1993, Foundations of Software Technology and Theoretical Computer Science. 13th Conference Proceedings, P72
   Bohnenkamp H, 2003, LECT NOTES COMPUT SC, V2794, P116
   Bohnenkamp H, 2005, I C DEPEND SYS NETWO, P704, DOI 10.1109/DSN.2005.20
   BOHNENKAMP H, 2004, P INT C QUANT EV SYS
   BOLOGNESI T, 1987, COMPUT NETWORKS ISDN, V14, P25, DOI 10.1016/0169-7552(87)90085-7
   Bornot S, 2000, INFORM COMPUT, V163, P172, DOI 10.1006/inco.2000.2999
   Bravetti M, 2004, LECT NOTES COMPUT SC, V2925, P44
   Bravetti M, 2002, THEOR COMPUT SCI, V282, P5, DOI 10.1016/S0304-3975(01)00043-3
   CATTANI S, 2005, P C FDN SOFTW SCI CO, P125
   CIARDO G, 1996, SCS SIMULATION SERIE, P278
   D'Argenio P. R., 1999, Proceedings 20th IEEE Real-Time Systems Symposium (Cat. No.99CB37054), P104, DOI 10.1109/REAL.1999.818832
   D'Argenio P. R., 1998, Programming Concepts and Methods. PROCOMET '98. IFIP TC2/WG2.2,2.3 International Conference, P126
   D'Argenio P.R, 1999, THESIS U TWENTE
   DARGENIO PR, 1996, P INT S FORM TECHN R, P110
   DARGENIO PR, 2005, P INT C CONC THEOR C, P125
   DARGENIO PR, 2006, IN PRESS AXIOMATISIN
   DARGENIO PR, 1999, ELECT NOTES THEORETI, V22
   DARGENIO PR, 2001, JOINT INT WORKSH PRO, P87
   Deavours D. D., 1999, Proceedings 8th International Workshop on Petri Nets and Performance Models (Cat. No.PR00331), P124, DOI 10.1109/PNPM.1999.796559
   Deavours DD, 2002, IEEE T SOFTWARE ENG, V28, P956, DOI 10.1109/TSE.2002.1041052
   DESHARNAIS J, 1999, THESIS MCGILL U MONT
   Edwards S, 1997, P IEEE, V85, P366, DOI 10.1109/5.558710
   Garavel H., 1996, Formal Description Techniques IX. Theory, Application and Tools. IFIP TC6/6.1 International Conference on Formal Description Techniques IX/Protocol Specification, Testing and Verification XVI, P469
   Garavel H, 1999, INT FED INFO PROC, V28, P185
   GLYNN PW, 1989, P IEEE, V77, P14, DOI 10.1109/5.21067
   HENZINGER TA, 1994, INFORM COMPUT, V111, P193, DOI 10.1006/inco.1994.1045
   Hermanns H, 2002, THEOR COMPUT SCI, V274, P43, DOI 10.1016/S0304-3975(00)00305-4
   HERMANNS H, 2003, P INT WORKSH PERF MO, P62
   Hillston J., 1994, THESIS U EDINBURGH
   Hoare CAR., 1985, Communicating Sequential Processes
   HOLZMANN GJ, 2002, SPIN MODEL CHECKER
   *ISO IEC INT STAND, 2001, 15437 ISOIEC INT STA
   JANSEN DN, 2005, P WORKSH SOFTW PERF, P13
   Kwiatkowska M, 2002, THEOR COMPUT SCI, V282, P101, DOI 10.1016/S0304-3975(01)00046-9
   Luckham D. C., 1980, ACM Transactions on Programming Languages and Systems, V2, P225, DOI 10.1145/357094.357100
   Lynch N., 1996, Formal Aspects of Computing, V8, P499, DOI 10.1007/BF01211907
   MADER A, 2006, 0614 U TWEN
   Magee J Kramer J., 1999, CONCURRENCY STATE MO
   Mertsiotakis V., 1998, THESIS U ERLANGEN NU
   Milner R., 1989, Communication and concurrency
   PLOTKIN GD, 1981, FN DAIMI AARH U COMP
   Reynolds J.C., 1998, Theories of Programming Languages
   Segala R., 1995, Nordic Journal of Computing, V2, P250
   Sighireanu Mihaela, 2004, LOTOS NT USERS MANUA
   Sokolova A, 2004, LECT NOTES COMPUT SC, V2925, P1
   Wang Yi, 1990, CONCUR '90. Theories of Concurrency: Unification and Extension, P502, DOI 10.1007/BFb0039080
   Yi W., 1994, PROC 7 INT C FORMAL, P223, DOI [10.1007/978-0-387-34878-018, DOI 10.1007/978-0-387-34878-018]
NR 60
TC 88
Z9 88
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2006
VL 32
IS 10
BP 812
EP 830
DI 10.1109/TSE.2006.104
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 096OC
UT WOS:000241385700004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mitchell, BS
   Mancoridis, S
AF Mitchell, BS
   Mancoridis, S
TI On the automatic modularization of software systems using the Bunch tool
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE clustering; reverse engineering; reengineering; program comprehension;
   optimization; maintainability
AB Since modern software systems are large and complex, appropriate abstractions of their structure are needed to make them more understandable and, thus, easier to maintain. Software clustering techniques are useful to support the creation of these abstractions by producing architectural-level views of a system's structure directly from its source code. This paper examines the Bunch clustering system which, unlike other software clustering tools, uses search techniques to perform clustering. Bunch produces a subsystem decomposition by partitioning a graph of the entities (e.g., classes) and relations (e.g., function calls) in the source code. Bunch uses a fitness function to evaluate the quality of graph partitions and uses search algorithms to find a satisfactory solution. This paper presents a case study to demonstrate how Bunch can be used to create views of the structure of significant software systems. This paper also outlines research to evaluate the software clustering results produced by bunch.
C1 Drexel Univ, Dept Comp Sci, Philadelphia, PA 19104 USA.
   Drexel Univ, Software Engn Res Grp, Philadelphia, PA 19104 USA.
C3 Drexel University; Drexel University
RP Drexel Univ, Dept Comp Sci, Philadelphia, PA 19104 USA.
EM bmitchell@drexel.edu; spiros@drexel.edu
RI Mancoridis, Spiros/D-5353-2013
CR ANDRITSOS P, 2003, P IEEE WORK C REV EN
   [Anonymous], 1978, COMBINATORIAL ALGORI
   ANQUETIL N, 1998, P 20 INT C SOFTW ENG
   ANQUETIL N, 1999, P WORK C REV ENG OCT
   ANQUETIL N, 2000, P INT WORKSH PROGR C
   BELADY LA, 1981, J SYST SOFTWARE, V2, P23, DOI 10.1016/0164-1212(81)90043-1
   BOWMAN IT, 1999, P INT C SOFTW ENG MA
   Buchsbaum A, 2001, IEEE SOFTWARE, V18, P62, DOI 10.1109/52.951497
   CHEN Y, 1997, P 6 EUR SOFTW ENG C
   Chen YG, 1995, PROC NAECON IEEE NAT, P177
   CHOI S, 1999, IEEE SOFTWARE, P66
   *CIT, 2006, COMP INF SCI PAP CIT
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   DOVAL D, 1999, P SOFT TECHN ENG PRA
   EISENBARTH T, 2001, P IEEE INT C SOFTW M
   Foley J., 1990, Computer Graphics
   GANSNER ER, 1993, IEEE T SOFTWARE ENG, V19, P214, DOI 10.1109/32.221135
   HARMAN M, 2005, P GEN EV COMP C
   HUTCHENS DH, 1985, IEEE T SOFTWARE ENG, V11, P749, DOI 10.1109/TSE.1985.232524
   *JAV SWING LIB, JAV FDN CLASS
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Korn J., 1999, P WORK C REV ENG OCT
   KOSCHKE R, 2000, THESIS U STUTTGART S
   KOSCHKE R, 2000, P INT WORKSH PROGR C
   LINDIG C, 1997, P INT C SOFTW ENG MA
   MAHDAVI K, 2003, P IEEE INT C SOFTW M
   Mancoridis S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P50, DOI 10.1109/ICSM.1999.792498
   MANCORIDIS S, 2001, P WORK C REV ENG OCT
   MANCORIDIS S, 1998, P 6 INT WORKSH PROGR
   Mitchell B., 2002, THESIS DREXEL U
   MITCHELL BS, 2004, P GEN EV COMP C
   MITCHELL BS, 2003, P GEN EV COMP C
   MITCHELL BS, 2002, P GEN EV COMP C JUL
   MITCHELL BS, 2001, P INT C SOFTW MAINT
   MITCHELL BS, 2001, P WORK C REV ENG OCT
   Mockus A, 2001, IEEE SOFTWARE, V18, P30, DOI 10.1109/52.914737
   Muller H. A., 1993, Journal of Software Maintenance: Research and Practice, V5, P181, DOI 10.1002/smr.4360050402
   MURPHY G, 1995, P ACM SIGSOFT S FDN
   SALAH M, 2004, P IEEE INT C SOFTW M
   SCHWANKE R, 1998, MACH LEARN, V15, P137
   SCHWANKE R, 1991, P 13 INT C SOFTW ENG
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Shokoufandeh A, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/WCRE.2002.1173059
   Sommerville I., 2004, Software Engineering
   TRAVERSO M, 2002, J AUTOMATED SOFTWARE, V9
   Tzerpos V, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P258
   TZERPOS V, 1999, P WORK C REV ENG OCT
   TZERPOS V, 1997, P WORK C REV ENG OCT
   van Deursen A., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P246, DOI 10.1109/ICSE.1999.841014
   WEN Z, 2004, P IEEE INT WORKSH PR
   WEN Z, 2004, P IEEE INT C SOFTW M
   2006, GOOGLE SCH SEARCH EN
   2006, SUN DEV NETWORK
NR 53
TC 279
Z9 311
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2006
VL 32
IS 3
BP 193
EP 208
DI 10.1109/TSE.2006.31
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 033LC
UT WOS:000236848300004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Myrtveit, I
   Stensrud, E
   Shepperd, M
AF Myrtveit, I
   Stensrud, E
   Shepperd, M
TI Reliability and validity in comparative studies of software prediction
   models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software metrics; cost estimation; cross-validation; empirical methods;
   arbitrary function approximators; machine learning; estimation by
   analogy; regression analysis; simulation; reliability; validity;
   accuracy indicators
ID COST ESTIMATION; REGRESSION; ACCURACY
AB Empirical studies on software prediction models do not converge with respect to the question "which prediction model is best?" The reason for this lack of convergence is poorly understood. In this simulation study, we have examined a frequently used research procedure comprising three main ingredients: a single data sample, an accuracy indicator, and cross validation. Typically, these empirical studies compare a machine learning model with a regression model. In our study, we use simulation and compare a machine learning and a regression model. The results suggest that it is the research procedure itself that is unreliable. This lack of reliability may strongly contribute to the lack of convergence. Our findings thus cast some doubt on the conclusions of any study of competing software prediction models that used this research procedure as a basis of model comparison. Thus, we need to develop more reliable research procedures before we can have confidence in the conclusions of comparative studies of software prediction models.
C1 Norwegian Sch Management BI, N-1301 Sandvika, Norway.
   Myrtveit & Stensrud ANS, N-0752 Oslo, Norway.
   Bournemouth Univ, Sch Design Engn & Comp, Bournemouth BH12 5BB, Dorset, England.
C3 BI Norwegian Business School; Bournemouth University
RP Norwegian Sch Management BI, Elias Smiths Vei 15,Box 580, N-1301 Sandvika, Norway.
EM ingunn.myrtveit@bi.no; erik.stensrud@ieee.org; mshepper@bmth.ac.uk
RI Shepperd, Martin/F-9683-2013
OI Shepperd, Martin/0000-0003-1874-6145
CR [Anonymous], 1986, Software Engineering Metrics and Models
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P303, DOI 10.1109/ICSE.1999.841021
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   BRIAND LC, 1992, IEEE T SOFTWARE ENG, V18, P931, DOI 10.1109/32.177363
   BRIAND LC, 1993, IEEE T SOFTWARE ENG, V19, P1028, DOI 10.1109/32.256851
   BRIAND LC, 2001, ENCY SOFTWARE ENG
   BRIAND LC, 1998, P 9 EUR SOFTW CONTR, P4
   CARMINES EG, 1979, SAGE U PAPERS
   Dolado JJ, 2001, INFORM SOFTWARE TECH, V43, P61, DOI 10.1016/S0950-5849(00)00137-3
   EFRON B, 1983, AM STAT, V37, P36, DOI 10.2307/2685844
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   FOSS T, 2001, P 12 EUR SOFTW CONTR, P9
   Gray A. R., 1999, Empirical Software Engineering, V4, P297, DOI 10.1023/A:1009849100780
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   JEFFERY R, 1999, P EUR C OPT SOFTW DE, P37
   JORGENSEN M, 1995, IEEE T SOFTWARE ENG, V21, P674, DOI 10.1109/32.403791
   Kitchenham B., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P11, DOI 10.1109/METRIC.1993.263805
   Kitchenham B, 1998, IEEE T SOFTWARE ENG, V24, P278, DOI 10.1109/32.677185
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kitchenham BA, 2002, INFORM SOFTWARE TECH, V44, P13, DOI 10.1016/S0950-5849(01)00204-X
   Kotz S., 1982, ENCY STAT SCI
   KUHA J, 2004, MODEL ASSESSMENT MOD
   Mair C, 2000, J SYST SOFTWARE, V53, P23, DOI 10.1016/S0164-1212(00)00005-4
   MAIR C, 2004, P C EMP ASS SOFTW EN
   Michie D., 1994, MACHINE LEARNING NEU
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   MUKHOPADHYAY T, 1992, MIS QUART, V16, P155, DOI 10.2307/249573
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   Nesi P, 1998, J SYST SOFTWARE, V42, P89, DOI 10.1016/S0164-1212(97)10021-8
   Nunnally JC, 1978, PSYCHOMETRIC THEORY, V2nd
   Pickard L., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P130, DOI 10.1109/METRIC.1999.809734
   Samson B, 1997, INFORM SOFTWARE TECH, V39, P55, DOI 10.1016/0950-5849(96)01124-X
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P987, DOI 10.1109/32.965339
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   Stensrud E, 2003, EMPIR SOFTW ENG, V8, P139, DOI 10.1023/A:1023010612345
   Stensrud E, 2003, IEEE T SOFTWARE ENG, V29, P398, DOI 10.1109/TSE.2003.1199070
   Stensrud E, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P205, DOI 10.1109/METRIC.1998.731247
   Strike K, 2001, IEEE T SOFTWARE ENG, V27, P890, DOI 10.1109/32.962560
   Vicinanza SS, 1991, INFORM SYST RES, V2, P243, DOI 10.1287/isre.2.4.243
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
NR 42
TC 152
Z9 166
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2005
VL 31
IS 5
BP 380
EP 391
DI 10.1109/TSE.2005.58
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 929VC
UT WOS:000229373700002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gurfinkel, A
   Chechik, M
   Devereux, B
AF Gurfinkel, A
   Chechik, M
   Devereux, B
TI Temporal logic query checking: A tool for model exploration
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT Conference on the Foundations of Software Engineering
CY NOV, 2002
CL CHARLESTON, SC
SP ACM SIGSOFT
DE CTL; query checking; model checking; TLQSolver; model understanding;
   multi-valued logic
AB Temporal logic query checking was first introduced by:W. Chain in order to speed up design understanding by discovering properties not known,a priori. A query is a temporal logic formula containing a special symbol ?(1), known as a placeholder. Given a Kripke, structure and a propositional formula phi, we say that phi satisfies the query if replacing the placeholder by phi results in a temporal logic formula satisfied by the Kripke structure. A solution to a temporal logic query on a Kripke structure is the set of all. propositional formulas that satisfy the query. Query checking helps discover temporal properties of-a system and, as such, is a useful tool for model exploration. In this paper, we show that query checking is applicable to a variety of model exploration tasks, ranging from invariant computation to test case-generation., We illustrate these using a Cruise Control System. Additionally, we show that query checking is an instance of a multi-valued model checking of Chechik et al. This approach enables us to build an implementation of a temporal logic query-checker, TLQSolver on top of our existing multi-valued model checker chiChek. It also allows us to decide a large class of queries and. introduce witnesses for temporal logic queries-an essential notion for effective model exploration.
C1 Univ Toronto, Dept Comp Sci, Toronto, ON M5S 3G4, Canada.
C3 University of Toronto
RP Univ Toronto, Dept Comp Sci, 100 Coll St, Toronto, ON M5S 3G4, Canada.
EM arie@cs.toronto.edu; chechik@cs.toronoto.edu; benet@cs.toronto.edu
OI Gurfinkel, Arie/0000-0002-5964-6792
CR [Anonymous], 1990, Introduction to Lattices and Order
   Bruns G., 2000, CONCUR 2000 - Concurrency Theory. 11th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1877), P168
   Bruns G, 2001, IEEE S LOG, P409, DOI 10.1109/LICS.2001.932516
   Chan W., 2000, LNCS, V1855, P450, DOI DOI 10.1007/10722167
   CHECHIK M, 2002, P 14 INT C COMP AID
   CHECHIK M, 2001, P FME 01 MARCH, P72
   CHECHIK M, 2001, P 12 INT C CONC THEO, P451
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Clarke EM, 1999, MODEL CHECKING, P1
   Fujita M, 1997, FORM METHOD SYST DES, V10, P149, DOI 10.1023/A:1008647823331
   Heitmeyer C. L., 1996, ACM Transactions on Software Engineering and Methodology, V5, P231, DOI 10.1145/234426.234431
   HORNUS S, 2002, P 9 INT C ALG METH S, P163
   Kupferman O, 2000, J ACM, V47, P312, DOI 10.1145/333979.333987
   McMillan K. L., 1993, Symbolic model checking
   WEGENER I, 2000, BRANCHING PROGRAMMS
NR 15
TC 33
Z9 37
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2003
VL 29
IS 10
BP 898
EP 914
DI 10.1109/TSE.2003.1237171
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 729CF
UT WOS:000185753100004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Eisenbarth, T
   Koschke, R
   Simon, D
AF Eisenbarth, T
   Koschke, R
   Simon, D
TI Locating features in source code
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT IEEE International Conference on Software Maintenance (ICSM 2001)
CY NOV 07-09, 2001
CL FLORENCE, ITALY
SP IEEE Comp Soc, Tech Council Software Engn, AICA, AIIA, CESVIT, ERCIM, TABOO, UNINFO, IBM Italia, O Grp Technol, Telelog Italia, Univ Florence, Dipartimento Sistemi & Informat
DE program comprehension; formal concept analysis; feature location;
   program analysis; software architecture recovery
AB Understanding the implementation of a certain feature of a system requires identification of the computational units of the system that contribute to this feature. In many cases, the mapping of features to the source code is poorly documented. In this paper, we present a semiautomatic technique that reconstructs the mapping for features that are triggered by the user and exhibit an, observable behavior. The mapping is in general not injective; that is, a computational unit may contribute to several features. Our technique allows for the distinction between general and specific computational units with respect to a given set of features. For a set of features, it also identifies jointly and distinctly required computational units. The presented technique combines dynamic and static analyses to rapidly focus on the system's parts that relate to a specific set of features. Dynamic information is gathered based on a set of scenarios invoking the features. Rather than assuming a one-to-one correspondence between features and scenarios as in earlier work, we can now handle scenarios that invoke many features. Furthermore, we show how our method allows incremental exploration of features while preserving the "mental map" the analyst has gained through the analysis.
C1 Univ Stuttgart, Inst Comp Sci, D-70565 Stuttgart, Germany.
C3 University of Stuttgart
RP Univ Stuttgart, Inst Comp Sci, Breitwiesenstr 20-22, D-70565 Stuttgart, Germany.
EM eisenbarth@informatik.uni-stuttgart.de;
   koschke@informatik.uni-stuttgart.de; simon@informatik.uni-stuttgart.de
CR ANDERSEN LO, 1994, THESIS DIKU DANMARK
   [Anonymous], 2009, P 30 ACM SIGPLAN C P
   Antoniol G, 1999, PROCEEDINGS OF THE THIRD EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P51, DOI 10.1109/CSMR.1999.756682
   Ball T, 1999, LECT NOTES COMPUT SC, V1687, P216, DOI 10.1145/318774.318944
   Beszédes A, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P105, DOI 10.1109/CSMR.2001.914974
   Birkhoff Garrett, 1940, LATTICE THEORY, V25
   Canfora G, 1999, PROG COMPREHEN, P136, DOI 10.1109/WPC.1999.777752
   Chen KR, 2000, PROG COMPREHEN, P241, DOI 10.1109/WPC.2000.852498
   Cheng BC, 2000, ACM SIGPLAN NOTICES, V35, P57, DOI 10.1145/358438.349311
   DAS M, 2000, P ACM SIGPLAN C PROG, P35
   Diwan A, 2001, ACM T PROGR LANG SYS, V23, P30, DOI 10.1145/383721.383732
   Eisenbarth T, 2001, PROC IEEE INT CONF S, P602, DOI 10.1109/ICSM.2001.972777
   Eisenbarth T, 2002, PROC IEEE INT CONF S, P273, DOI 10.1109/ICSM.2002.1167778
   Eisenbarth T, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P176, DOI 10.1109/CSMR.2001.914982
   EISENBARTH T, 2002, LOCATING FEATURES SO
   EMAMI M, 1994, P ACM SIGPLAN 94 C P, P242
   Ganter B, 1999, Formal concept analysis: Mathematical foundations
   GRAUDEJUS H, 1998, IMPLEMENTING CONCEPT
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Koschke R., 2000, PhD thesis
   KOSKIMIES K, 1995, 4 J KEPL U
   KRONE M, 1994, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.1994.296765
   Kuipers T, 2000, PROG COMPREHEN, P221, DOI 10.1109/WPC.2000.852496
   Lange DB, 1997, COMPUTER, V30, P63, DOI 10.1109/2.589912
   LANGE DB, 1995, P USENIX C OBJ OR TE
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Lindig C, 1997, PROC INT CONF SOFTW, P349, DOI 10.1145/253228.253354
   MILANOVA A, 2002, P 2 INT WORKSH SOURC
   ROUNTEV A, 2001, P C OBJ OR PROGR SYS, P43
   Rumbaugh James, 1999, The unified modeling language reference manual
   Sahraoui HA, 1997, AUTOMATED SOFTWARE ENGINEERING, 12TH IEEE INTERNATIONAL CONFERENCE, PROCEEDINGS, P210, DOI 10.1109/ASE.1997.632841
   Siff M, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P170, DOI 10.1109/ICSM.1997.624243
   Snelting G., 1996, ACM Transactions on Software Engineering and Methodology, V5, P146, DOI 10.1145/227607.227613
   SNELTING G, 1998, P ACM SIGSOFT S FDN, P99, DOI DOI 10.1145/288195.288273
   Steensgaard Bjarne., 1996, POINTS TO ANAL ALMOS, P32
   Tonella P, 2001, IEEE T SOFTWARE ENG, V27, P351, DOI 10.1109/32.917524
   van Deursen A., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P246, DOI 10.1109/ICSE.1999.841014
   WILDE N, 1995, J SOFTW MAINT-RES PR, V7, P49, DOI 10.1002/smr.4360070105
   Wilde N, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P68, DOI 10.1109/CSMR.2001.914970
   WILDE N, 1992, P INT C SOFTW MAINT, P200
   Wong WE, 2000, J SYST SOFTWARE, V54, P87, DOI 10.1016/S0164-1212(00)00029-7
   Wong WE, 1999, ASSET'99: 1999 IEEE SYMPOSIUM ON APPLICATION-SPECIFIC SYSTEMS AND SOFTWARE ENGINEERING & TECHNOLOGY - PROCEEDINGS, P194, DOI 10.1109/ASSET.1999.756769
   *XFIG, XFIG DRAW TOOL VERS
   ZHANG S, 1996, P 4 ACM SIGSOFT S FD, P81
NR 44
TC 301
Z9 348
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2003
VL 29
IS 3
BP 210
EP 224
DI 10.1109/TSE.2003.1183929
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 651QH
UT WOS:000181331700003
DA 2024-07-18
ER

PT J
AU Lai, R
   Huang, SJ
AF Lai, R
   Huang, SJ
TI A model for estimating the size of a formal communication protocol
   specification and its implementation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE size model; regression analysis; formal description techniques; Estelle;
   EDT
ID SOFTWARE; ESTELLE; PREDICTION
AB Good project management is key when developing a software system successfully. To manage a project well, it is important to have the optimal resource allocation which is affected by the size of an implementation. Early software size estimation is essential for good project management. Existing software size models estimate the size of an implementation usually in terms of the number of lines of code. The main drawback of these models is that there is a wide margin of uncertainty as the actual size depends on the type of application and the software development method adopted. To address this drawback, we focus our work on communication protocol, and propose that the size of a formal specification needs to be estimated from an informal specification. This paper presents a two-stage size model for estimating the sizes of a formal communication protocol specification and its implementation, with the model validated using a test data set. The main benefit of this work is that it can give an indication of the likely sizes of both a formal specification and its implementation early at the development stage, giving developers a technique for managing communication software project better.
C1 La Trobe Univ, Dept Comp Sci & Comp Engn, Bundoora, Vic 3086, Australia.
   Natl Taiwan Univ Sci & Technol, Dept Informat Management, Taipei 106, Taiwan.
C3 La Trobe University; National Taiwan University of Science & Technology
RP La Trobe Univ, Dept Comp Sci & Comp Engn, Bundoora, Vic 3086, Australia.
EM lai@cs.latrobe.edu.au; huang@cs.ntust.edu.tw
CR Albrecht A.J., 1979, Em Proceedings of the Joint SHARE, GUIDE, and IBM Application Development Symposium, P83
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   BAILEY JW, 1981, P 5 INT C SOFTW ENG, P107
   Boehm BW., 1981, Software Engineering Economics
   BROOKS FP, 1987, OFFICE UNDERSECRETAR
   BUDKOWSKI S, 1992, COMPUT NETWORKS ISDN, V25, P63, DOI 10.1016/0169-7552(92)90124-9
   BUDKOWSKI S, 1987, COMPUT NETWORKS ISDN, V14, P3, DOI 10.1016/0169-7552(87)90084-5
   CHERNOV Y, 1999, P SPEC DESCR LANG C
   CONTE SD, 1906, SOFTWARE ENG METRICS
   Hakuta M, 1997, J SYST SOFTWARE, V37, P253, DOI 10.1016/S0164-1212(96)00020-9
   Heiat A, 1997, J SYST SOFTWARE, V39, P7, DOI 10.1016/S0164-1212(96)00159-8
   Huang SJ, 1998, J SYST SOFTWARE, V40, P165, DOI 10.1016/S0164-1212(97)00008-3
   Huang SJ, 1997, P INT COMP SOFTW APP, P565, DOI 10.1109/CMPSAC.1997.625069
   Huang SJ, 1998, SOFTWARE PRACT EXPER, V28, P1465, DOI 10.1002/(SICI)1097-024X(19981210)28:14<1465::AID-SPE187>3.0.CO;2-H
   *IIT RES I, 1987, DESCR EV SOFTW SIZ M
   *ISO, 1989, ISO9074
   *ISO, 1988, ISOIECJTC1SC6
   JIRACHIEFPATTAN.A, 1997, INT J COMPUTER ENG M, V5
   Jones C., 1986, PROGRAMMING PRODUCTI
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   KITCHENHAM BA, 1992, INFORM SOFTWARE TECH, V34, P211, DOI 10.1016/0950-5849(92)90077-3
   LARANJEIRA LA, 1990, IEEE T SOFTWARE ENG, V16, P510, DOI 10.1109/32.52774
   Levitin A. V., 1986, Proceedings 10th Anniversary COMSAC '86. The IEEE Computer Society's Tenth Annual International Computer Software and Applications Conference (Cat. No.86CH2356-4), P314
   Lokan CJ, 1996, J SYST SOFTWARE, V32, P65, DOI 10.1016/0164-1212(95)00044-5
   LOMBARDO A, 1989, COMP STAND INTER, V9, P21, DOI 10.1016/0920-5489(89)90041-X
   MATSON JE, 1994, IEEE T SOFTWARE ENG, V20, P275, DOI 10.1109/32.277575
   MUKHOPADHYAY T, 1992, IEEE T SOFTWARE ENG, V18, P915, DOI 10.1109/32.163607
   Neter J., 1990, APPL STAT MODELS
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   REDMILL FJ, 1990, INFORM SOFTWARE TECH, V32, P18, DOI 10.1016/0950-5849(90)90041-O
   REIFER DJ, 1990, J SYST SOFTWARE, V11, P159, DOI 10.1016/0164-1212(90)90082-W
   RUBIN LL, 1983, SOMATIC AUTONOMIC NE, P109
   SCHNEIDER JM, 1992, COMPUT NETWORKS ISDN, V25, P43, DOI 10.1016/0169-7552(92)90123-8
   SIDHU D, 1990, FORMAL DESCRIPTION T, V2, P437
   SIDHU DP, 1990, COMPUT NETWORKS ISDN, V18, P221, DOI 10.1016/0169-7552(90)90135-F
   VERNER J, 1992, IEEE T SOFTWARE ENG, V18, P265, DOI 10.1109/32.129216
NR 36
TC 10
Z9 13
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2003
VL 29
IS 1
BP 46
EP 62
DI 10.1109/TSE.2003.1166588
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 633GD
UT WOS:000180273500004
DA 2024-07-18
ER

PT J
AU Torres, A
   Costa, P
   Amaral, L
   Pastro, J
   Bonifácio, R
   d'Amorim, M
   Legunsen, O
   Bodden, E
   Canedo, ED
AF Torres, Adriano
   Costa, Pedro
   Amaral, Luis
   Pastro, Jonata
   Bonifacio, Rodrigo
   d'Amorim, Marcelo
   Legunsen, Owolabi
   Bodden, Eric
   Dias Canedo, Edna
TI Runtime Verification of Crypto APIs: An Empirical Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Security vulnerability; crypto API misuse; runtime verification
AB Misuse of cryptographic (crypto) APIs is a noteworthy cause of security vulnerabilities. For this reason, static analyzers were recently proposed for detecting crypto API misuses. They differ in strengths and weaknesses, and they might miss bugs. Motivated by the inherent limitations of static analyzers, this article reports on a study of runtime verification (RV) as a dynamic-analysis-based alternative for crypto API misuse detection. RV monitors program runs against formal specifications; it was shown to be effective and efficient for amplifying the bug-finding ability of software tests. We focus on the popular JCA crypto API and write 22 RV specifications based on expert-validated rules in a static analyzer. We monitor these specifications while running tests in five benchmarks. Lastly, we compare the accuracy of our RV-based approach, RVSec, with those of three state-of-the-art crypto API misuses detectors: CogniCrypt, CryptoGuard, and CryLogger. Results show that RVSec has higher accuracy in four benchmarks and is on par with CryptoGuard in the fifth. Overall, RVSec achieves an average ${\boldsymbol{F}}_{1}$ F 1 measure of 95%, compared with 83%, 78%, and 86% for CogniCrypt, CryptoGuard, and CryLogger, respectively. We highlight the strengths and limitations of these tools and show that RV is effective for detecting crypto API misuses. We also discuss how static and dynamic analysis can complement each other for detecting crypto API misuses.
C1 [Torres, Adriano; Costa, Pedro; Amaral, Luis; Pastro, Jonata; Bonifacio, Rodrigo; Dias Canedo, Edna] Univ Brasilia, Comp Sci Dept, BR-70910 Brasilia, Brazil.
   [d'Amorim, Marcelo] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
   [d'Amorim, Marcelo] Univ Fed Pernambuco, Informat Ctr, BR-50670 Recife, Brazil.
   [Legunsen, Owolabi] Cornell Univ, Dept Comp Sci, Ithaca, NY 14850 USA.
   [Bodden, Eric] Paderborn Univ, D-33098 Paderborn, Germany.
   [Bodden, Eric] Fraunhofer Inst Mechatron Syst Design, D-33098 Paderborn, Germany.
C3 Universidade de Brasilia; North Carolina State University; Universidade
   Federal de Pernambuco; Cornell University; University of Paderborn;
   Fraunhofer Gesellschaft
RP Bonifácio, R (corresponding author), Univ Brasilia, Comp Sci Dept, BR-70910 Brasilia, Brazil.
EM adriano.torres@aluno.unb.br; teixeira.pedro@aluno.unb.br;
   luis.amaral@aluno.unb.br; jonata.pastro@aluno.unb.br; rbonifacio@unb.br;
   mdamori@ncsu.edu; legunsen@cornell.edu; eric.bodden@uni-paderborn.de;
   ednacanedo@unb.br
RI Canedo, Edna Dias/D-5674-2015; Canedo, Edna Dias/AGR-0318-2022;
   Bonifacio, Rodrigo/B-3450-2014; Bodden, Eric/AAE-1365-2021; d'Amorim,
   Marcelo/D-1703-2017
OI Canedo, Edna Dias/0000-0002-2159-339X; Canedo, Edna
   Dias/0000-0002-2159-339X; Bodden, Eric/0000-0003-3470-3647; Torres,
   Adriano/0000-0003-3754-029X; Bonifacio, Rodrigo/0000-0002-2380-2829;
   d'Amorim, Marcelo/0000-0002-1323-8769; Vieira Amaral, Luis
   Henrique/0000-0003-1236-3119
CR Acar Y, 2017, P IEEE S SECUR PRIV, P154, DOI 10.1109/SP.2017.52
   acm, 2002, ACM publications policy on research involving human participants and subjects
   Afrose S, 2023, IEEE T SOFTWARE ENG, V49, P485, DOI 10.1109/TSE.2022.3154717
   Afrose S, 2019, 2019 IEEE SECURE DEVELOPMENT (SECDEV 2019), P49, DOI 10.1109/SecDev.2019.00017
   Ahrendt W, 2017, FORM METHOD SYST DES, V51, P200, DOI 10.1007/s10703-017-0274-y
   Ami AS, 2022, P IEEE S SECUR PRIV, P614, DOI [10.1109/SP46214.2022.9833582, 10.1109/SP46214.2022.00024]
   [Anonymous], OWASP benchmark
   [Anonymous], 2022, Tech. Rep. BSI TR-02102-1
   [Anonymous], JAVAMOP
   [Anonymous], Xanitizer
   [Anonymous], Apache QPID Broker-J
   [Anonymous], 2015, PROC INT S FOUND PRA
   [Anonymous], 2006, CWE-ID CWE-325
   [Anonymous], CrySL repository
   Arteau P., GiHub
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Bao LF, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P445, DOI 10.1109/SANER.2018.8330231
   Barker E., 2018, Transitioning the use of cryptographic algorithms and key lengths, DOI [DOI 10.6028/NIST.SP.800-131AR2, 10.6028/NIST.SP.800-131Ar2]
   Bauer Andreas, 2012, NASA Formal Methods. Proceedings of the 4th International Symposium, NFM 2012, P174, DOI 10.1007/978-3-642-28891-3_18
   Bell J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P433, DOI 10.1145/3180155.3180164
   Beyer Dirk, 2021, Tools and Algorithms for the Construction and Analysis of Systems. 27th International Conference, TACAS 2021. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12652), P401, DOI 10.1007/978-3-030-72013-1_24
   Carlson B, 2019, IFIP ADV INF COMM TE, V556, P12, DOI 10.1007/978-3-030-20883-7_2
   Chen F, 2009, IEEE INT CONF AUTOM, P383, DOI 10.1109/ASE.2009.50
   Chen F, 2009, LECT NOTES COMPUT SC, V5505, P246, DOI 10.1007/978-3-642-00768-2_23
   Cheng L, 2021, IEEE T DEPEND SECURE, V18, P825, DOI 10.1109/TDSC.2019.2906161
   da Costa FH, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111092
   Daian P, 2015, LECT NOTES COMPUT SC, V9333, P342, DOI 10.1007/978-3-319-23820-3_24
   de Oliveira DB, 2019, LECT NOTES COMPUT SC, V11724, P315, DOI 10.1007/978-3-030-30446-1_17
   eclemma, JaCoCo Code Coverage
   Egele M., 2013, P 2013 ACM SIGSAC C, P73
   Falcone Y., 2013, Runtime Verification, P88
   Ferguson N., 2010, Cryptography Engineering: Design Principles and Practical Applications
   Ferrara P., 2017, P 1 IT C CYB ITASEC, V1816, P242
   Fischer F, 2017, P IEEE S SECUR PRIV, P121, DOI 10.1109/SP.2017.31
   Gabel M., 2012, PROC ACM SIGSOFT 20, P1
   Greenwood D. S. J. S. G., 2014, PROC NETW DISTRIB SY, P1
   Hazhirpasand M., 2020, P 14 ACM IEEE INT S, DOI [10.1145/3382494.3422166, DOI 10.1145/3382494.3422166]
   Herter J, 2019, RELIAB ENG SYST SAFE, V188, P336, DOI 10.1016/j.ress.2019.03.031
   Hook D., 2005, BEGINNING CRYPTOGRAP
   Huang J, 2014, LECT NOTES COMPUT SC, V8734, P247, DOI 10.1007/978-3-319-11164-3_20
   Jamrozik K, 2016, PROC INT CONF SOFTW, P37, DOI 10.1145/2884781.2884782
   Java Cryptography Architecture (JCA) Reference Guide, 2022, Java Platform
   Jin D., 2012, Tech. Rep.
   Jin D, 2012, PROC INT CONF SOFTW, P1427, DOI 10.1109/ICSE.2012.6227231
   Krüger S, 2021, IEEE T SOFTWARE ENG, V47, P2382, DOI 10.1109/TSE.2019.2948910
   Krüger S, 2017, IEEE INT CONF AUTOM, P931, DOI 10.1109/ASE.2017.8115707
   Kruger S., 2020, CogniCrypt-The secure integration of cryptographic software
   Kruger Stefan, 2018, EUR C OBJ OR PROGR E, V10, P1
   Kui Xu, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P467, DOI 10.1109/DSN.2016.49
   Lee C., 2012, CATEGORIZING FORMALI
   Legunsen O, 2019, AUTOMAT SOFTW ENG, V26, P795, DOI 10.1007/s10515-019-00267-1
   Legunsen O, 2019, IEEE INT CONF SOFTW, P300, DOI 10.1109/ICST.2019.00037
   Legunsen O, 2016, IEEE INT CONF AUTOM, P602, DOI 10.1145/2970276.2970356
   Legunsen O, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P615, DOI 10.1109/ICSE.2015.206
   Li JR, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P412, DOI 10.1145/3243734.3243783
   Li Y, 2014, LECT NOTES COMPUT SC, V8792, P349, DOI 10.1007/978-3-319-11698-3_27
   Luo QZ, 2014, LECT NOTES COMPUT SC, V8734, P285, DOI 10.1007/978-3-319-11164-3_24
   Mburano B, 2018, 2018 26TH INTERNATIONAL CONFERENCE ON SYSTEMS ENGINEERING (ICSENG 2018)
   Meredith P, 2013, IEEE INT CONF AUTOM, P70, DOI 10.1109/ASE.2013.6693067
   Miranda B, 2020, IEEE INT CONF SOFTW, P297, DOI 10.1109/ICST46399.2020.00038
   MITRE, MITRE, CWE-ID CWE-327
   MITRE, MITRE, CWE-ID CWE-798
   Nadi S, 2016, PROC INT CONF SOFTW, P935, DOI 10.1145/2884781.2884790
   National Security Agency (NSA), 2012, Tech. Rep.
   National Security Agency (NSA), 2017, Juliet benchmark
   NCCGroup, VISUALCODEGREPPER
   Piccolboni Luca, 2021, 2021 IEEE Symposium on Security and Privacy (SP), P1972, DOI 10.1109/SP40001.2021.00010
   Pinto G, 2020, IEEE WORK CONF MIN S, P492, DOI 10.1145/3379597.3387482
   Rahaman S, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P2455, DOI 10.1145/3319535.3345659
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Sampaio L, 2016, J SYST SOFTWARE, V113, P337, DOI 10.1016/j.jss.2015.12.021
   Shi A, 2016, IEEE INT CONF SOFTW, P80, DOI 10.1109/ICST.2016.40
   Shu XK, 2017, ACM T PRIV SECUR, V20, DOI 10.1145/3105761
   Silva D, 2020, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSME46990.2020.00037
   Solet D, 2016, INT SYM IND EMBED
   SonarQube, SonarSource
   Sun XD, 2020, PROCEEDINGS OF THE 14TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '20), P735
   Teixeira L, 2021, IEEE INT CONF SOFTW, P82, DOI 10.1109/ICST49551.2021.00020
   Zhang Y, 2023, IEEE T SOFTWARE ENG, V49, P288, DOI 10.1109/TSE.2022.3150302
   Zhang Y, 2022, INT C PROGRAM COMPRE, P190, DOI 10.1145/3524610.3527749
   Zheng X, 2018, IEEE SYST J, V12, P1667, DOI 10.1109/JSYST.2016.2614599
   Zheng X, 2015, IEEE INT CONF MOB, P298, DOI 10.1109/MASS.2015.15
NR 82
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2023
VL 49
IS 10
BP 4510
EP 4525
DI 10.1109/TSE.2023.3301660
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA Y1NF7
UT WOS:001102997400002
DA 2024-07-18
ER

PT J
AU Poremba, J
   Day, NA
   Vakili, A
AF Poremba, Joseph
   Day, Nancy A.
   Vakili, Amirhossein
TI New Techniques for Static Symmetry Breaking in Many-Sorted Finite Model
   Finding
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Finite model finding; symmetry breaking
AB Symmetry in finite model finding problems of many-sorted first-order logic (MSFOL) can be exploited to reduce the number of interpretations considered during search, thereby improving solver performance for tools such as the Alloy Analyzer. We present a framework to soundly compose static symmetry breaking schemes for many-sorted finite model finding. Then, we introduce and prove the correctness of three static symmetry breaking schemes for MSFOL: 1) one for functions with distinct sorts in the domain and range; 2) one for functions where the range sort appears in the domain; and 3) one for predicates. We provide a novel presentation of sort inference in the context of symmetry breaking that yields a new mathematical link between sorts and symmetries. We empirically investigate how our symmetry breaking approaches affect solving performance.
C1 [Poremba, Joseph] Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1Z4, Canada.
   [Day, Nancy A.; Vakili, Amirhossein] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 University of British Columbia; University of Waterloo
RP Poremba, J (corresponding author), Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1Z4, Canada.
EM jporemba@cs.ubc.ca; nday@uwaterloo.ca; avakili@uwaterloo.ca
OI Day, Nancy/0000-0002-1422-692X; Poremba, Joseph/0000-0003-3210-5504
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX This work was supported in part by the Natural Sciences and Engineering
   Research Council of Canada (NSERC).& nbsp;
CR Aloul FA, 2003, DES AUT CON, P836
   [Anonymous], 2021, SMT LIB UF BENCHM
   Audemard G., 2001, P WORKSH SYMM CONSTR, P01
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Barrett C, 2017, The SMT-LIB Standard: Version 2.6
   Baumgartner P, 2009, J APPL LOGIC, V7, P58, DOI 10.1016/j.jal.2007.07.005
   Brunel J, 2018, IEEE INT CONF AUTOM, P884, DOI 10.1145/3238147.3240475
   Claessen K., 2003, P C AUT DED, P11
   Cohen D, 2006, CONSTRAINTS, V11, P115, DOI 10.1007/s10601-006-8059-8
   Crawford J, 1996, MOR KAUF R, P148
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dyer T, 2019, PROCEEDINGS OF 2019 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON SOFTWARE CORRECTNESS FOR HPC APPLICATIONS (CORRECTNESS 2019), P36, DOI 10.1109/Correctness49594.2019.00010
   Gent IP, 2006, FOUND ARTIF INTELL, P329
   Hantao Zhang, 2013, Automated Reasoning and Mathematics. Essays in Memory of William W. McCune, P101, DOI 10.1007/978-3-642-36675-8_5
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Jahanian M., 2020, P INT C ABSTR STAT M
   McCune W., 1994, Technical Report Technical Report ANL/MCS-TM-194
   McCune W., 2003, arXiv
   Nazerian F, 2019, J INF SECUR APPL, V45, P131, DOI 10.1016/j.jisa.2019.01.008
   Peltier N, 1998, J LOGIC COMPUT, V8, P511, DOI 10.1093/logcom/8.4.511
   Pierce Benjamin C., 2002, TYPES PROGRAMMING LA, V1st
   Reger G, 2019, LECT NOTES ARTIF INT, V11715, P3, DOI 10.1007/978-3-030-29007-8_1
   Reger G, 2016, LECT NOTES COMPUT SC, V9710, P323, DOI 10.1007/978-3-319-40970-2_20
   Reynolds Andrew, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P640, DOI 10.1007/978-3-642-39799-8_42
   Reynolds Andrew, 2013, Automated Deduction - CADE-24. 24th International Conference on Automated Deduction. Proceedings: LNCS 7898, P377, DOI 10.1007/978-3-642-38574-2_26
   Shah SMA, 2010, LECT NOTES COMPUT SC, V6002, P158
   Shlyakhter I, 2007, DISCRETE APPL MATH, V155, P1539, DOI 10.1016/j.dam.2005.10.018
   Siegel SF, 2019, LECT NOTES COMPUT SC, V11562, P478, DOI 10.1007/978-3-030-25543-5_27
   Torlak Emina, 2009, Ph. D. Dissertation
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Vakili Amirhossein, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P150, DOI 10.1007/978-3-642-30885-7_11
   Vakili A, 2016, LECT NOTES COMPUT SC, V9995, P677, DOI 10.1007/978-3-319-48989-6_41
   Wang XL, 2014, PROCEDIA COMPUT SCI, V37, P481, DOI 10.1016/j.procs.2014.08.072
   Wenxi Wang, 2020, Tools and Algorithms for the Construction and Analysis of Systems. 26th International Conference, TACAS 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12078), P115, DOI 10.1007/978-3-030-45190-5_7
   Zave P, 2012, ACM SIGCOMM COMP COM, V42, P50, DOI 10.1145/2185376.2185383
   Zhang J., 1996, Automated Deduction - Cade-13. 13th International Conference on Automated Deduction. Proceedings, P308
   Zhang J, 1996, J AUTOM REASONING, V17, P1, DOI 10.1007/BF00244457
   Zhang JA, 1995, INT JOINT CONF ARTIF, P298
NR 38
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2023
VL 49
IS 6
BP 3487
EP 3503
DI 10.1109/TSE.2023.3256939
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA J9KW5
UT WOS:001012752300008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ahmed, T
   Ledesma, NR
   Devanbu, P
AF Ahmed, Toufique
   Ledesma, Noah Rose
   Devanbu, Premkumar
TI SynShine: Improved Fixing of Syntax Errors
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Deep learning; program repair; naturalness
ID GENERATION
AB Novice programmers struggle with the complex syntax of modern programming languages like Java, and make lot of syntax errors. The diagnostic syntax error messages from compilers and IDEs are sometimes useful, but often the messages are cryptic and puzzling. Novices could be helped, and instructors' time saved, by automated repair suggestions when dealing with syntax errors. Large samples of novice errors and fixes are now available, offering the possibility of data-driven machine-learning approaches to help novices fix syntax errors. Current machine-learning approaches do a reasonable job fixing syntax errors in shorter programs, but don't work as well even for moderately longer programs. We introduce SYNSHINE, a machine-learning based tool that substantially improves on the state-of-the-art, by learning to use compiler diagnostics, employing a very large neural model that leverages unsupervised pre-training, and relying on multi-label classification rather than autoregressive synthesis to generate the (repaired) output. We describe SYNSHINE's architecture in detail, and provide a detailed evaluation. We have built SYNSHINE into a free, open-source version of Visual Studio Code (VSCode); we make all our source code and models freely available.
C1 [Ahmed, Toufique; Ledesma, Noah Rose; Devanbu, Premkumar] Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
C3 University of California System; University of California Davis
RP Ahmed, T (corresponding author), Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
EM tfahmed@ucdavis.edu; roseledesma@ucdavis.edu; ptdevanbu@ucdavis.edu
OI Ahmed, Toufique/0000-0002-4427-1350
FU U.S. National Science Foundation [1414172, 2107592]
FX This work was supported by the U.S. National Science Foundation under
   Grants 1414172 and .
CR Ahmad WU, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P2655
   Ahmed T, 2022, IEEE T SOFTWARE ENG, V48, P3862, DOI 10.1109/TSE.2021.3106572
   Ahmed T, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09942-y
   Ahmed UZ, 2018, PROC INT CONF SOFTW, P78, DOI 10.1145/3183377.3183383
   [Anonymous], Proceedings of the 2014 Conference on Innovation Technology in Computer Science Education
   Barik T, 2017, PROC INT CONF SOFTW, P575, DOI 10.1109/ICSE.2017.59
   Becker BA, 2019, PROCEEDINGS OF THE WORKING GROUP REPORTS ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION (ITICSE-WGR '19), P177, DOI 10.1145/3344429.3372508
   Bennedsen J., 2007, SIGCSE Bulletin, V39, P32, DOI 10.1145/1272848.1272879
   Biswas E, 2020, PROC IEEE INT CONF S, P162, DOI 10.1109/ICSME46990.2020.00025
   Brown NCC, 2017, ACM T COMPUT EDUC, V17, DOI 10.1145/2994154
   Brown NCC, 2014, PROCEEDINGS OF THE 45TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION (SIGCSE'14), P223, DOI 10.1145/2538862.2538924
   Chakraborty S, 2020, Arxiv, DOI arXiv:1810.00314
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Denny Paul, 2012, P 17 ACM ANN C INN T, P75, DOI [10.1145/2325296.2325318, DOI 10.1145/2325296.2325318]
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Ding YRB, 2020, IEEE INT CONF AUTOM, P275, DOI 10.1145/3324884.3416587
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Guo D, 2020, PROC INT C LEARN REP, P1
   Gupta R, 2018, Arxiv, DOI arXiv:1801.10467
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Huggingface, 2018, HUGG TRANSF
   Jackson J., 2005, Proceedings Frontiers in Education 35th Annual Conference, P24
   Jesse K, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1483, DOI 10.1145/3468264.3473135
   Kanade A, 2020, PR MACH LEARN RES, V119
   KANTOROWITZ E, 1986, SOFTWARE PRACT EXPER, V16, P627, DOI 10.1002/spe.4380160703
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Klein G, 2017, Arxiv, DOI arXiv:1701.02810
   Kummerfeld Sarah K., 2003, ACE, V20, P105
   Lahtinen E., 2005, SIGCSE Bulletin, V37, P14, DOI 10.1145/1151954.1067453
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Li Y, 2020, PROC INT CONF SOFTW, P602, DOI 10.1145/3377811.3380345
   Liu YH, 2019, Arxiv, DOI arXiv:1907.11692
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Luong MT, 2015, Arxiv, DOI arXiv:1508.04025
   Lutellier Thibaud, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P101, DOI 10.1145/3395363.3397369
   Mastropaolo A., 2021, ARXIV
   McCracken M., 2001, ACM SIGCSE Bull., V33, P125, DOI [10.1145/572133.572137, DOI 10.1145/572133.572137, DOI 10.1145/572139.572181, 10.1145/]
   Medeiros RP, 2019, IEEE T EDUC, V62, P77, DOI 10.1109/TE.2018.2864133
   Mesbah A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P925, DOI 10.1145/3338906.3340455
   Pradel M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276517
   Qi Weizhen, 2021, arXiv, DOI 10.48550/ARXIV.2104.08006
   Roziere B., 2021, arXiv
   Santos EA, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P311, DOI 10.1109/SANER.2018.8330219
   Schorsch T., 1995, SIGCSE Bulletin, V27, P168, DOI 10.1145/199691.199769
   SPOHRER JC, 1986, COMMUN ACM, V29, P624, DOI 10.1145/6138.6145
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Vaswani A, 2017, ADV NEUR IN, V30
   Yasunaga Michihiro, 2020, INT C MACHINE LEARNI, V119, P10799
   Yasunaga Michihiro, 2021, arXiv preprint
   Zhang T, 2020, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSME46990.2020.00017
NR 51
TC 4
Z9 4
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2169
EP 2181
DI 10.1109/TSE.2022.3212635
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600042
DA 2024-07-18
ER

PT J
AU Fazzini, M
   Moran, K
   Bernal-Cárdenas, C
   Wendland, T
   Orso, A
   Poshyvanyk, D
AF Fazzini, Mattia
   Moran, Kevin
   Bernal-Cardenas, Carlos
   Wendland, Tyler
   Orso, Alessandro
   Poshyvanyk, Denys
TI Enhancing Mobile App Bug Reporting via Real-Time Understanding of
   Reproduction Steps
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Graphical user interfaces; Predictive models; Software;
   Natural languages; Real-time systems; Mobile applications; Bug
   reporting; language modeling; mobile apps; natural language processing
ID INFORMATION-RETRIEVAL
AB of the primary mechanisms by which developers receive feedback about in-field failures of software from users is through bug reports. Unfortunately, the quality of manually written bug reports can vary widely due to the effort required to include essential pieces of information, such as detailed reproduction steps (S2Rs). Despite the difficulty faced by reporters, few existing bug reporting systems attempt to offer automated assistance to users in crafting easily readable, and conveniently reproducible bug reports. To address the need for proactive bug reporting systems that actively aid the user in capturing crucial information, we introduce a novel bug reporting approach called EBUG. EBUG assists reporters in writing S2Rs for mobile applications by analyzing natural language information entered by reporters in real-time, and linking this data to information extracted via a combination of static and dynamic program analyses. As reporters write S2Rs, EBUG is capable of automatically suggesting potential future steps using predictive models trained on realistic app usages. To evaluate EBUG, we performed two user studies based on 20 failures from 11 real-world apps. The empirical studies involved ten participants that submitted ten bug reports each and ten developers that reproduced the submitted bug reports. In the studies, we found that reporters were able to construct bug reports 31% faster with EBUG as compared to the state-of-the-art bug reporting system used as a baseline. EBUG's reports were also more reproducible with respect to the ones generated with the baseline. Furthermore, we compared EBUG's prediction models to other predictive modeling approaches and found that, overall, the predictive models of our approach outperformed the baseline approaches. Our results are promising and demonstrate the feasibility and potential benefits provided by proactively assistive bug reporting systems.
C1 [Fazzini, Mattia; Wendland, Tyler] Univ Minnesota, Dept Comp Sci & Engn, Minneapolis, MN 55455 USA.
   [Moran, Kevin] George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
   [Bernal-Cardenas, Carlos; Poshyvanyk, Denys] William & Mary, Dept Comp Sci, Williamsburg, VA 23185 USA.
   [Orso, Alessandro] Georgia Inst Technol, Coll Comp, Sch Comp Sci, Atlanta, GA 30332 USA.
C3 University of Minnesota System; University of Minnesota Twin Cities;
   George Mason University; University System of Georgia; Georgia Institute
   of Technology
RP Fazzini, M (corresponding author), Univ Minnesota, Dept Comp Sci & Engn, Minneapolis, MN 55455 USA.
EM mfazzini@umn.edu; kpmoran@gmu.edu; cebernal@cs.wm.edu; wendl155@umn.edu;
   orso@cc.gatech.edu; denys@cs.wm.edu
OI Fazzini, Mattia/0000-0002-1412-1546; Bernal-Cardenas,
   Carlos/0000-0002-6209-5346; Poshyvanyk, Denys/0000-0002-5626-7586
FU NSF [CCF-0725202, CCF-1955853, CCF-2007246]; ONR [N00014-18-1-2662]; DOE
   [DE-FOA-0002460]
FX This work was supported in part by NSF under Grants CCF-0725202,
   CCF-1955853, and CCF-2007246, in part by ONR under Grant
   N00014-18-1-2662, in part by DOE under Grant DE-FOA-0002460, and in part
   by gifts from Facebook, Google, IBM Research, and Microsoft Research.
CR Amalfitano D, 2015, IEEE SOFTWARE, V32, P53, DOI 10.1109/MS.2014.55
   Amalfitano D, 2012, IEEE INT CONF AUTOM, P258, DOI 10.1145/2351676.2351717
   Anandan S, 2012, MATER SCI FORUM, V712, P1, DOI 10.4028/www.scientific.net/MSF.712.1
   Angeli G, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P344
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], 2014, P 2014 INT S SOFTWAR, DOI DOI 10.1145/2610384.2610386
   [Anonymous], 2021, GOOGLE FIREBASE TEST
   [Anonymous], 2021, DEPOSIT WITHDRAWAL C
   [Anonymous], 2021, ANDROID UI APPL EXER
   [Anonymous], 2015, P 2015 C N AM CHAPT, DOI 10.3115/v1/N15-1186
   [Anonymous], 1998, Tech. Rep. TR-10-98
   [Anonymous], 2012, Proceedings of_the_21st_ACM_international_conference_on_Information_and_knowledge management
   [Anonymous], 2021, TESSERACT OCR
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Azim T, 2013, ACM SIGPLAN NOTICES, V48, P641, DOI [10.1145/2509136.2509549, 10.1145/2544173.2509549]
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bettenburg N., 2008, P 2008 INT WORKING C, P27
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Brooke J., 1996, USABILITY EVALUATION, P6
   Bugclipper, 2021, US
   Bugsee, 2021, about us
   Cao Y., 2014, Proceedings of the ACM/IEEE International Conference on Automated Software Engineering ASE, P791
   Chaparro O, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P86, DOI 10.1145/3338906.3338947
   Chaparro O, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P396, DOI 10.1145/3106237.3106285
   Chen N, 2015, IEEE T SOFTWARE ENG, V41, P198, DOI 10.1109/TSE.2014.2363469
   Choi W, 2013, ACM SIGPLAN NOTICES, V48, P623, DOI [10.1145/2544173.2509552, 10.1145/2509136.2509552]
   De Marneffe M.-C., 2006, P INT C LANG RES EV, P449
   English word vectors, 2021, US
   Fazzini M., 2021, EBUGS ONLINE APPENDI
   Fazzini M, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P141, DOI 10.1145/3213846.3213869
   Getevent, 2021, US
   Gnucash, 2021, US
   Gnucash github, 2021, US
   Gómez M, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P88, DOI [10.1109/MobileSoft.2016.033, 10.1145/2897073.2897088]
   Google natural language, 2021, US
   Google Smart Compose, 2021, US
   Grano G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P72, DOI 10.1109/SANER.2018.8330198
   Gueniche T., 2015, P 19 PAC AS C KNOWL
   Haihao Shen, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P299, DOI 10.1109/ICST.2011.51
   Harary F., 1969, GRAPH THEORY
   Hsu BJ, 2008, INTERSPEECH 2008: 9TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION 2008, VOLS 1-5, P841
   Jensen C S, 2013, P 2013 INT S SOFTW T, P67, DOI [10.1145/2483760.2483777, DOI 10.1145/2483760.2483777]
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Jin W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2774218
   Jin W, 2012, PROC INT CONF SOFTW, P474, DOI 10.1109/ICSE.2012.6227168
   Jurafsky D., 2009, SPEECH LANGUAGE PROC, V2nd
   Kifetew FM, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P163, DOI 10.1109/ICST.2014.29
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P1597, DOI 10.1109/TSE.2013.24
   Ko AJ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P301, DOI 10.1145/1368088.1368130
   Lai DL, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P115, DOI 10.1109/ASE.2019.00021
   Levenshtein V., 1966, SOV PHYS DOKLADY, V1966
   Li SY, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P51, DOI 10.1145/3377813.3381355
   Linares-Vásquez M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P111, DOI 10.1109/MSR.2015.18
   Linares-Vásquez M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P451, DOI 10.1109/ICSM.2012.6405306
   Luong Thang, 2013, P 17 C COMP NAT LANG, P104
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Mahmood R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P599, DOI 10.1145/2635868.2635896
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Mao K, 2017, IEEE INT CONF AUTOM, P16, DOI 10.1109/ASE.2017.8115614
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Mikolov T., 2013, PROC 1 INT C LEARN R, P1301
   Miner G, 2012, PRACTICAL TEXT MINING AND STATISTICAL ANALYSIS FOR NON-STRUCTURED TEXT DATA APPLICATIONS, P1
   Mirzaei N, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P461, DOI 10.1109/ISSRE.2015.7381839
   Moran K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P673, DOI 10.1145/2786805.2786857
   Moran K, 2016, IEEE INT CONF SOFTW, P33, DOI 10.1109/ICST.2016.34
   Moreno L, 2014, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSME.2014.37
   Morville P., 2021, USER EXPERIENCE DESI
   Naguib H, 2013, IEEE WORK CONF MIN S, P22, DOI 10.1109/MSR.2013.6623999
   Nayrolles M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1789
   Neo4j, 2021, About Us
   Ostrander J., 2012, Android UI Fundamentals: Develop and Design
   Park J.-w., 2011, Costriage: a cost-aware triage algorithm for bug reporting systems, V25, P139, DOI DOI 10.1609/AAAI.V25I1.7839
   Pelloni L, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P522, DOI 10.1109/SANER.2018.8330252
   Pitkow J, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND USENIX SYMPOSIUM ON INTERNET TECHNOLOGIES AND SYSTEMS (USITS'99), P139
   Qiu Siyu, 2014, COLING 2014, 25th International Conference on Computational Linguistics, P141
   Quill, 2021, US
   Ravindranath L, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P190, DOI 10.1145/2594368.2594377
   Roehm T, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P121, DOI 10.1109/SANER.2015.7081822
   Saito J., 2016, MAKING CASE LETT CAS
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Sasnauskas Raimondas, 2014, P 2014 JOINT INT WOR, P1, DOI DOI 10.1145/2632168.2632169
   Shokripour R, 2013, IEEE WORK CONF MIN S, P2, DOI 10.1109/MSR.2013.6623997
   Soltani M, 2017, PROC INT CONF SOFTW, P209, DOI 10.1109/ICSE.2017.27
   Song Y, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1551, DOI 10.1145/3368089.3417928
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Tassey G., 2002, EC IMPACTS INADEQUAT
   Uddin J, 2017, ARTIF INTELL REV, V47, P145, DOI 10.1007/s10462-016-9478-6
   UI automator, 2021, US
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Wanwarang T, 2020, INT WORKSH AUTOMAT, P1, DOI 10.1145/3387903.3389310
   White M, 2015, INT C PROGRAM COMPRE, P48, DOI 10.1109/ICPC.2015.14
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Xinlei Chen, 2019, Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, V3, DOI 10.1145/3314391
   Xuan JF, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P910, DOI 10.1145/2786805.2803206
   Yang SQ, 2015, IEEE INT CONF AUTOM, P658, DOI 10.1109/ASE.2015.76
   Yang W, 2013, LECT NOTES COMPUT SC, V7793, P250, DOI 10.1007/978-3-642-37057-1_19
   Zaeem RN, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P183, DOI 10.1109/ICST.2014.31
   Zamfir C, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P321
   Zhang HL, 2017, PROC INT CONF SOFTW, P347, DOI 10.1109/ICSE.2017.39
   Zhang J, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-014-5241-2
   Zhao Y, 2019, PROC INT CONF SOFTW, P128, DOI 10.1109/ICSE.2019.00030
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 103
TC 3
Z9 4
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2023
VL 49
IS 3
BP 1246
EP 1272
DI 10.1109/TSE.2022.3174028
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA A1QF2
UT WOS:000952938700015
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Shahin, R
   Akhundov, M
   Chechik, M
AF Shahin, Ramy
   Akhundov, Murad
   Chechik, Marsha
TI Annotative Software Product Line Analysis Using Variability-Aware
   Datalog
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Inference algorithms; Engines; Codes; Software product lines; Software;
   Databases; Color; datalog; program analysis; pointer analysis; lifting;
   variability; doop; Souffle
ID LANGUAGE; POINTS
AB Applying program analyses to Software Product Lines (SPLs) has been a fundamental research problem at the intersection of Product Line Engineering and software analysis. Different attempts have been made to "lift " particular product-level analyses to run on the entire product line. In this paper, we tackle the class of Datalog-based analyses (e.g., pointer and taint analyses), study the theoretical aspects of lifting Datalog inference, and implement a lifted inference algorithm inside the Souffle Datalog engine. We evaluate our implementation on a set of Java and C-language benchmark annotative software product lines. We show significant savings in processing time and fact database size (billions of times faster on one of the benchmarks) compared to brute-force analysis of each product individually.
C1 [Shahin, Ramy; Akhundov, Murad; Chechik, Marsha] Univ Toronto, Toronto, ON M5S 1A1, Canada.
C3 University of Toronto
RP Shahin, R (corresponding author), Univ Toronto, Toronto, ON M5S 1A1, Canada.
EM r.shahin@computer.org; murad.akhundov@mail.utoronto.ca;
   chechik@cs.toronto.edu
OI Shahin, Ramy/0000-0001-8724-3934; Akhundov, Murad/0000-0002-7586-6680
CR Apel S., 2013, Feature-Oriented Software Development: Concepts and Implementation
   Aref M, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1371, DOI 10.1145/2723372.2742796
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Benton William C., 2007, Proceedings of the 9th International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP'07), P13, DOI 10.1145/1273920.1273923
   Beuche D., 2016, SPLC, P262
   Bjorner N, 2015, LECT NOTES COMPUT SC, V9300, P24, DOI 10.1007/978-3-319-23534-9_2
   Bodden E, 2013, ACM SIGPLAN NOTICES, V48, P355, DOI 10.1145/2499370.2491976
   Brabrand C., 2012, Proceedings of the 11th Annual International Conference on Aspect-oriented Software Development, AOSD '12, P13, DOI DOI 10.1145/2162049.2162052
   Bravenboer M, 2009, ACM SIGPLAN NOTICES, V44, P243, DOI 10.1145/1639949.1640108
   Ceri S., 1989, IEEE Transactions on Knowledge and Data Engineering, V1, P146, DOI 10.1109/69.43410
   Classen A., 2010, ICSE 10, V1, P335, DOI DOI 10.1145/1806799.1806850
   Classen A, 2013, IEEE T SOFTWARE ENG, V39, P1069, DOI 10.1109/TSE.2012.86
   Date C.J., 2004, An Introduction to Database Systems, V8th
   Dawson S., 1996, SIGPLAN Notices, V31, P117, DOI 10.1145/249069.231399
   Gazzillo P, 2012, ACM SIGPLAN NOTICES, V47, P323, DOI 10.1145/2345156.2254103
   Grech N, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133926
   Greco S., 2016, DATALOG LOGIC DATABA
   HUTH M, 2004, LOGIC COMPUTER SCI
   Johnson D. B., 1975, SIAM Journal on Computing, V4, P77, DOI 10.1137/0204007
   Jordan H, 2016, LECT NOTES COMPUT SC, V9780, P422, DOI 10.1007/978-3-319-41540-6_23
   Kästner C, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2211616.2211617
   Kästner C, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P805
   Kästner C, 2009, LECT NOTES BUS INF P, V33, P175
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Lhoták O, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1391984.1391987
   Liebig J., 2013, P 2013 9 JOINT M FDN, P81, DOI DOI 10.1145/2491411.2491437
   Lopez-Herrejon R. E., 2001, Generative and Component-Based Software Engineering. Third International Conference, GCSE 2001. Proceedings (Lecture Notes in Computer Science Vol.2186), P10
   Madsen M, 2016, ACM SIGPLAN NOTICES, V51, P194, DOI [10.1145/2908080.2908096, 10.1145/2980983.2908096]
   Midtgaard J, 2015, SCI COMPUT PROGRAM, V105, P145, DOI 10.1016/j.scico.2015.04.005
   Nadi S, 2014, J SOFTW-EVOL PROC, V26, P730, DOI 10.1002/smr.1595
   Pezze M., 2008, Software Testing and Analysis: Process, Principles and Techniques
   Pietro Abate J. S., 2013, FIND ALL CIRCUITS DI
   Reps T., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P49, DOI 10.1145/199448.199462
   Salay R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P117, DOI 10.1145/2568225.2568267
   Schaefer I, 2010, LECT NOTES COMPUT SC, V6287, P77, DOI 10.1007/978-3-642-15579-6_6
   Shahin Ramy, 2020, Proceedings of the ACM on Programming Languages, V4, DOI 10.1145/3428225
   Shahin R, 2020, LECT NOTES COMPUT SC, V12007, P213, DOI 10.1007/978-3-030-39197-3_14
   Shahin R, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P39, DOI 10.1145/3338906.3338928
   Sinn M, 2014, LECT NOTES COMPUT SC, V8559, P745, DOI 10.1007/978-3-319-08867-9_50
   Smaragdakis Y., 2015, FDN TRENDS PROGRAM L, V2, P1, DOI DOI 10.1561/2500000014
   Somenzi F., 1998, CUDD CU DECISION DIA
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Whaley J, 2005, LECT NOTES COMPUT SC, V3780, P97
NR 43
TC 1
Z9 1
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2023
VL 49
IS 3
BP 1323
EP 1341
DI 10.1109/TSE.2022.3175752
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA A1QF2
UT WOS:000952938700018
DA 2024-07-18
ER

PT J
AU Zhang, Y
   Xie, XF
   Li, Y
   Lin, Y
   Chen, S
   Liu, Y
   Li, XH
AF Zhang, Yao
   Xie, Xiaofei
   Li, Yi
   Lin, Yun
   Chen, Sen
   Liu, Yang
   Li, Xiaohong
TI Demystifying Performance Regressions in String Solvers
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Testing; Fuzzing; Codes; Runtime; Location awareness;
   Cognition; SMT string solver; performance regression; SPRFinder
ID PRIORITIZATION; SELECTION; MINIMIZATION
AB Over the past few years, SMT string solvers have found their applications in an increasing number of domains, such as program analyses in mobile and Web applications, which require the ability to reason about string values. A series of research has been carried out to find quality issues of string solvers in terms of its correctness and performance. Yet, none of them has considered the performance regressions happening across multiple versions of a string solver. To fill this gap, in this paper, we focus on solver performance regressions (SPRs), i.e., unintended slowdowns introduced during the evolution of string solvers. To this end, we develop SPRFinderto not only generate test cases demonstrating SPRs, but also localize the probable causes of them, in terms of commits. We evaluated the effectiveness of SPRFinderon three state-of-the-art string solvers, i.e., Z3Seq, Z3Str3, and CVC4. The results demonstrate that SPRFinderis effective in generating SPR-inducing test cases and also able to accurately locate the responsible commits. Specifically, the average running time on the target versions is 13.2x slower than that of the reference versions. Besides, we also conducted the first empirical study to peek into the characteristics of SPRs, including the impact of random seed configuration for SPR detection, understanding the root causes of SPRs, and characterizing the regression test cases through case studies. Finally, we highlight that 149 unique SPR-inducing commits were discovered in total by SPRFinder, and 27of them have been confirmed by the corresponding developers.
C1 [Zhang, Yao; Chen, Sen; Li, Xiaohong] Tianjin Univ, Coll Intelligence & Comp, Tianjin 300072, Peoples R China.
   [Xie, Xiaofei] Singapore Management Univ, Singapore 188065, Singapore.
   [Li, Yi; Liu, Yang] Nanyang Technol Univ, Singapore 639798, Singapore.
   [Lin, Yun] Shanghai Jiao Tong Univ, Shanghai 200240, Peoples R China.
   [Lin, Yun] Natl Univ Singapore, Singapore 119077, Singapore.
C3 Tianjin University; Singapore Management University; Nanyang
   Technological University; Shanghai Jiao Tong University; National
   University of Singapore
RP Chen, S (corresponding author), Tianjin Univ, Coll Intelligence & Comp, Tianjin 300072, Peoples R China.
EM zzyy@tju.edu.cn; xfxie@smu.edu.sg; yi_li@ntu.edu.sg; llmhyy@gmail.com;
   senchen@tju.edu.cn; yangliu@ntu.edu.sg; xiaohongli@tju.edu.cn
RI zhang, xiang/JJD-7003-2023; Liu, Yang/D-2306-2013
OI Liu, Yang/0000-0001-7300-9215; Li, Yi/0000-0003-4562-8208; ,
   Xiaofei/0000-0002-1288-6502
FU Singapore under its Academic Research Fund [1 21-SIS-SMU-033,
   T1-251RES1901, Tier 2 MOE2019-T2-1-040, T2EP20120-0019, 3
   MOET32020-0004]
FX Singapore under its Academic Research Fund under Grants Tier 1
   21-SIS-SMU-033, T1-251RES1901, Tier 2 MOE2019-T2-1-040,
   T2EP20120-0019,and Tier 3 MOET32020-0004
CR Agisoft, 2021, ABOUT US
   [Anonymous], 2020, PERF REGR ISS GITH
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   Balunovic M., 2018, P INT C NEUR INF PRO, p10 338
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Berzish M, 2017, PROCEEDINGS OF THE 17TH CONFERENCE ON FORMAL METHODS IN COMPUTER AIDED DESIGN (FMCAD 2017), P55, DOI 10.23919/FMCAD.2017.8102241
   Beyer Dirk, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P184, DOI 10.1007/978-3-642-22110-1_16
   Blotsky D, 2018, LECT NOTES COMPUT SC, V10982, P45, DOI 10.1007/978-3-319-96142-2_6
   Boston B, 2015, ACM SIGPLAN NOTICES, V50, P470, DOI [10.1145/2858965.2814301, 10.1145/2814270.2814301]
   Brummayer R., 2009, FUZZSMT
   Bugariu A, 2020, PROC INT CONF SOFTW, P1459, DOI 10.1145/3377811.3380398
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Chapelle O., 2011, ADV NEURAL INFORM PR, P2249, DOI DOI 10.5555/2986459.2986710
   Chen JH, 2018, IEEE INT CONF AUTOM, P351, DOI 10.1145/3238147.3238218
   Chen JJ, 2017, IEEE INT CONF SOFTW, P418, DOI 10.1109/ICST.2017.45
   Cito J, 2014, LECT NOTES COMPUT SC, V8541, P181, DOI 10.1007/978-3-319-08245-5_11
   Clarke EdmundM., 2018, Cyber physical systems series, V2nd
   Couder C., 2008, FIGHTING REGRESSIONS
   Daly D, 2020, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'20), P67, DOI 10.1145/3358960.3375791
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Di Nardo D, 2015, SOFTW TEST VERIF REL, V25, P371, DOI 10.1002/stvr.1572
   Fraser G, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P39, DOI 10.1109/SBST.2017.6
   Giorgino T, 2009, J STAT SOFTW, V31, P1, DOI 10.18637/jss.v031.i07
   Gligoric M., 2015, P 2015 INT S SOFTWAR, P211, DOI 10.1145/2771783.2771784
   Godefroid P, 2012, COMMUN ACM, V55, P40, DOI 10.1145/2093548.2093564
   Han S, 2012, PROC INT CONF SOFTW, P145, DOI 10.1109/ICSE.2012.6227198
   Hao D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685614
   Hao D, 2012, PROC INT CONF SOFTW, P738, DOI 10.1109/ICSE.2012.6227144
   Hassan M, 2018, LECT NOTES COMPUT SC, V10982, P12, DOI 10.1007/978-3-319-96142-2_2
   Hemmati Hadi, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P141, DOI 10.1109/ISSRE.2010.9
   Huang P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P60, DOI 10.1145/2568225.2568232
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Kaelbling LP, 1996, J ARTIF INTELL RES, V4, P237, DOI 10.1613/jair.301
   Liang TY, 2016, FORM METHOD SYST DES, V48, P206, DOI 10.1007/s10703-016-0247-6
   Lingming Zhang, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P23, DOI 10.1109/ICSM.2011.6080769
   Mansur MN, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P701, DOI 10.1145/3368089.3409763
   Trinh MT, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1232, DOI 10.1145/2660267.2660372
   Mühlbauer S, 2020, IEEE INT CONF AUTOM, P611, DOI 10.1145/3324884.3416573
   Muller M., 2007, Information retrieval for music and motion, P69, DOI [10.1007/978-3-540-74048-3_4, DOI 10.1007/978-3-540-74048-3_4]
   Park J, 2021, P ACM PROGRAM LANG, V5, DOI 10.1145/3485529
   Pasareanu Corina S., 2010, P 25 IEEE ACM INT C, P179, DOI [10.1145/1858996.1859035, DOI 10.1145/1858996.1859035]
   Puterman M., 1990, Handb Oper Res Manage Sci, V2, P331
   Redelinghuys G, 2012, PROCEEDINGS OF THE SOUTH AFRICAN INSTITUTE FOR COMPUTER SCIENTISTS AND INFORMATION TECHNOLOGISTS CONFERENCE, P139
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Rustan K, 2010, LECT NOTES ARTIF INT, V6355, P348, DOI 10.1007/978-3-642-17511-4_20
   Saha RK, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P268, DOI 10.1109/ICSE.2015.47
   Scott J, 2021, LECT NOTES COMPUT SC, V13047, P103, DOI 10.1007/978-3-030-90870-6_6
   Shi A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P246, DOI 10.1145/2635868.2635921
   Shi A, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P237, DOI 10.1145/2786805.2786878
   Shiqi S, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23530
   Smt-lib, 2021, US
   Trinh M.-T., 2020, PROC ACM PROGRAM LAN, V4, P1
   Vermorel J, 2005, LECT NOTES ARTIF INT, V3720, P437, DOI 10.1007/11564096_42
   Vujosevic-Janicic M, 2012, LECT NOTES COMPUT SC, V7152, P98, DOI 10.1007/978-3-642-27705-4_9
   Wiering M, 2012, ADAPT LEARN OPTIM, V12, P1, DOI 10.1007/978-3-642-27645-3
   Winterer D, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428261
   Winterer D, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P718, DOI 10.1145/3385412.3385985
   Xu GQ, 2007, PROC INT CONF SOFTW, P65
   Yao PS, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P322, DOI [10.1145/3460319.3464303, 10.1145/3460319.3464803]
   Yao PS, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1141, DOI 10.1145/3468264.3468540
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yordanov Boyan, 2013, NASA Formal Methods. 5th International Symposium, NFM 2013. Proceedings, P78, DOI 10.1007/978-3-642-38088-4_6
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
   Zhai K, 2014, IEEE T SERV COMPUT, V7, P54, DOI 10.1109/TSC.2012.40
   Zhang LM, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P199, DOI 10.1145/3180155.3180198
   Zhang LM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P192, DOI 10.1109/ICSE.2013.6606565
NR 66
TC 1
Z9 1
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2023
VL 49
IS 3
BP 947
EP 961
DI 10.1109/TSE.2022.3168373
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA A1QF2
UT WOS:000952938700001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Kitchenham, B
   Madeyski, L
   Budgen, D
AF Kitchenham, Barbara
   Madeyski, Lech
   Budgen, David
TI How Should Software Engineering Secondary Studies Include Grey Material?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Evidence-based software engineering; systematic reviews; systematic
   mapping studies; mixed-methods reviews; grey literature; multivocal
   reviews
ID GUIDELINES; REVIEWS
AB Context: Recent papers have proposed the use of grey literature (GL) and multivocal reviews. These papers have raised issues about the practices used for systematic reviews (SRs) in software engineering (SE) and suggested that there should be changes to the current SR guidelines. Objective: To investigate whether current SR guidelines need to be changed to support GL and multivocal reviews. Method: We discuss the definitions of GL and the importance of GL and of industry-based field studies in SE SRs. We identify properties of SRs that constrain the material used in SRs: a) the nature of primary studies; b) the requirements of SRs to be auditable, traceable, and reproducible; and explain why these requirements restrict the use of blogs in SRs. Results: SR guidelines have always considered GL as a possible source of primary studies and have never supported exclusion of field studies that incorporate the practitioners' viewpoint. However, the concept of GL, which was meant to refer to documents that were not formally published, is now being extended to information from sources such as blogs/tweets/Q & A posts. Thus, it might seem that SRs do not make full use of GL because they do not include such information. However, the unit of analysis for an SR is the primary study. Thus, it is not the source but the type of information that is important. Any report describing a rigorous empirical evaluation is a candidate primary study. Whether it is actually included in an SR depends on the SR eligibility criteria. However, any study that cannot be guaranteed to be publicly available in the long term should not be used as a primary study in an SR. This does not prevent such information from being aggregated in surveys of social media and used in the context of evidence-based software engineering (EBSE). Conclusions: Current guidelines for SRs do not require extensions, but their scope needs to be better defined. SE researchers require guidelines for analysing social media posts (e.g., blogs, tweets, vlogs), but these should be based on qualitative primary (not secondary) study guidelines. SE researchers can use mixed-methods SRs and/or the fourth step of EBSE to incorporate findings from social media surveys with those from SRs and to develop industry-relevant recommendations.
C1 [Kitchenham, Barbara] Keele Univ, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
   [Madeyski, Lech] Wroclaw Univ Sci & Technol, Dept Appl Informat, PL-50370 Wroclaw, Poland.
   [Budgen, David] Univ Durham, Dept Comp Sci, Durham DH1 3LE, England.
C3 Keele University; Wroclaw University of Science & Technology; Durham
   University
RP Madeyski, L (corresponding author), Wroclaw Univ Sci & Technol, Dept Appl Informat, PL-50370 Wroclaw, Poland.
EM b.a.kitchenham@keele.ac.uk; Lech.Madeyski@pwr.edu.pl;
   david.budgen@durham.ac.uk
RI ; Madeyski, Lech/D-4986-2012
OI Kitchenham, Barbara/0000-0002-6134-8460; Madeyski,
   Lech/0000-0003-3907-3357
CR Adams J, 2016, SYST REV-LONDON, V5, DOI 10.1186/s13643-016-0337-y
   Adams RJ, 2017, INT J MANAG REV, V19, P432, DOI 10.1111/ijmr.12102
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   Budgen D, 2020, E-INFORMATICA, V14, P7, DOI 10.37190/e-Inf200101
   Budgen D, 2018, INFORM SOFTWARE TECH, V94, P234, DOI 10.1016/j.infsof.2017.10.012
   Ciolkowski M, 2009, INT SYMP EMP SOFTWAR, P133, DOI 10.1109/ESEM.2009.5316026
   CROWLEY PA, 1995, AM J OBSTET GYNECOL, V173, P322, DOI 10.1016/0002-9378(95)90222-8
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Garner P, 2016, BMJ-BRIT MED J, V354, DOI 10.1136/bmj.i3507
   Garousi V., 2020, Contemporary Empirical Methods in Software Engineering
   Garousi V., 2016, Proceedings of the 20th international conference on evaluation and assessment in software engineering, P26
   Garousi V, 2021, IEEE SOFTWARE, V38, P65, DOI 10.1109/MS.2020.3022931
   Garousi V, 2020, EMPIR SOFTW ENG, V25, P1687, DOI 10.1007/s10664-020-09803-0
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Garousi V, 2017, INFORM SOFTWARE TECH, V85, P16, DOI 10.1016/j.infsof.2017.01.001
   Garousi V, 2016, INFORM SOFTWARE TECH, V76, P92, DOI 10.1016/j.infsof.2016.04.015
   Graham L, 2003, COMMUN ACM, V46, P70, DOI 10.1145/769800.769804
   Harris JL, 2018, J CLIN EPIDEMIOL, V97, P39, DOI 10.1016/j.jclinepi.2017.10.023
   Higgins JPT, 2019, Chapter 8: Assessing risk of bias in a randomized trial, DOI DOI 10.1002/9781119536604
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M, 2007, INT J FORECASTING, V23, P449, DOI 10.1016/j.ijforecast.2007.05.008
   Jorgensen M, 2016, J SYST SOFTWARE, V116, P133, DOI 10.1016/j.jss.2015.03.065
   Jorgensen M, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P92, DOI 10.1109/SEAA.2015.56
   Kamei F, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106609
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham B., 2016, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P134, DOI 10.1145/3319008.3319009
   Liu XL, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P118, DOI 10.1109/SANER.2018.8330202
   Noyes J., 2018, J CLIN EPIDEMIOL, V97, P69
   Noyes J., 2021, Cochrane Handbook for Systematic Reviews of Interventions version 6.2
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Rainer A, 2018, 2018 25TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC), P201, DOI 10.1109/ASWEC.2018.00034
   Rucinski TL, 2015, LAW LIBR J, V107, P543
   Schopfel J., 2010, Towards a Prague Definition of Grey Literature, P11
   Shepperd M, 2018, INFORM SOFTWARE TECH, V99, P120, DOI 10.1016/j.infsof.2018.01.006
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Tatsioni A, 2007, JAMA-J AM MED ASSOC, V298, P2517, DOI 10.1001/jama.298.21.2517
   van der Linden D, 2022, IEEE T SOFTWARE ENG, V48, P364, DOI 10.1109/TSE.2020.2981317
   Yasin A, 2020, IEEE ACCESS, V8, P36226, DOI 10.1109/ACCESS.2020.2971712
   Yin R. K., 2009, CASE STUDY RES DESIG, V4th ed.
   Zhang HX, 2021, IEEE T SOFTWARE ENG, V47, P2520, DOI 10.1109/TSE.2019.2954319
   Zhang H, 2020, PROC INT CONF SOFTW, P1422, DOI 10.1145/3377811.3380336
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
NR 47
TC 5
Z9 5
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 872
EP 882
DI 10.1109/TSE.2022.3165938
PG 11
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900022
OA Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Chen, ZM
   Kommrusch, S
   Monperrus, M
AF Chen, Zimin
   Kommrusch, Steve
   Monperrus, Martin
TI Neural Transfer Learning for Repairing Security Vulnerabilities in C
   Code
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Vulnerability fixing; transfer learning; seq2seq learning
ID NETWORKS
AB In this paper, we address the problem of automatic repair of software vulnerabilities with deep learning. The major problem with data-driven vulnerability repair is that the few existing datasets of known confirmed vulnerabilities consist of only a few thousand examples. However, training a deep learning model often requires hundreds of thousands of examples. In this work, we leverage the intuition that the bug fixing task and the vulnerability fixing task are related and that the knowledge learned from bug fixes can be transferred to fixing vulnerabilities. In the machine learning community, this technique is called transfer learning. In this paper, we propose an approach for repairing security vulnerabilities named VRepair which is based on transfer learning. VRepair is first trained on a large bug fix corpus and is then tuned on a vulnerability fix dataset, which is an order of magnitude smaller. In our experiments, we show that a model trained only on a bug fix corpus can already fix some vulnerabilities. Then, we demonstrate that transfer learning improves the ability to repair vulnerable C functions. We also show that the transfer learning model performs better than a model trained with a denoising task and fine-tuned on the vulnerability fixing task. To sum up, this paper shows that transfer learning works well for repairing security vulnerabilities in C compared to learning on a small dataset.
C1 [Chen, Zimin; Monperrus, Martin] KTH Royal Inst Technol, S-11428 Stockholm, Sweden.
   [Kommrusch, Steve] Colorado State Univ, Ft Collins, CO 80523 USA.
C3 Royal Institute of Technology; Colorado State University
RP Chen, ZM (corresponding author), KTH Royal Inst Technol, S-11428 Stockholm, Sweden.
EM zimin@kth.se; steveko@cs.colostate.edu; monperrus@kth.se
RI Chen, Zimin/AAC-3540-2022; Monperrus, Martin/I-3640-2012
OI Chen, Zimin/0000-0002-6673-6438; Monperrus, Martin/0000-0003-3505-3383;
   Kommrusch, Steve/0000-0002-1447-5993
FU Wallenberg Artificial Intelligence, Autonomous Systems and Software
   Program (WASP) - Knut and Alice Wallenberg Foundation; Swedish
   Foundation for Strategic Research (SSF); U.S. National Science
   Foundation [CCF-1750399]; Swedish Research Council [2018-05973]
FX This work was supported in part by Wallenberg Artificial Intelligence,
   Autonomous Systems and Software Program (WASP) funded by Knut and Alice
   Wallenberg Foundation, in part by the Swedish Foundation for Strategic
   Research (SSF), and in part by U.S. National Science Foundation under
   Grant CCF-1750399. The computations were enabled by resources provided
   by the Swedish National Infrastructure for Computing (SNIC), partially
   funded by the Swedish Research Council under Grant 2018-05973.
CR Adams O, 2017, 15TH CONFERENCE OF THE EUROPEAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (EACL 2017), VOL 1: LONG PAPERS, P937
   Ahmad WU, 2021, Arxiv, DOI [arXiv:2103.06333, 10.48550/arXiv.2103.06333]
   Ahmed UZ, 2018, PROC INT CONF SOFTW, P78, DOI 10.1145/3183377.3183383
   Allamams M, 2019, PROCEEDINGS OF THE 2019 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!' 19), P143, DOI 10.1145/3359591.3359735
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Alon U., 2018, ARXIV
   Avgerinos T, 2018, IEEE SECUR PRIV, V16, P52, DOI 10.1109/MSP.2018.1870873
   Baudry B, 2021, IEEE SOFTWARE, V38, P28, DOI 10.1109/MS.2021.3070743
   Bhandari G, 2021, PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE '21), P30, DOI 10.1145/3475960.3475985
   Bojar O., 2014, P 9 WORKSH STAT MACH, P12
   Brown T., 2020, P ADV NEUR INF PROC, V33, P1877
   Calcagno C, 2011, LECT NOTES COMPUT SC, V6617, P459, DOI 10.1007/978-3-642-20398-5_33
   Cao SC, 2021, INFORM SOFTWARE TECH, V136, DOI 10.1016/j.infsof.2021.106576
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P1385, DOI 10.1109/TSE.2020.3020502
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Chi J, 2020, arXiv
   Cho KYHY, 2014, Arxiv, DOI arXiv:1409.1259
   clang.llvm, Clang: a C language family frontend for LLVM
   Ding W., THESIS TECHNISCHE U, P202
   Facebook, 2021, Infer
   Fan JH, 2020, IEEE WORK CONF MIN S, P508, DOI 10.1145/3379597.3387501
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Forsgren N, 2021, Arxiv, DOI [arXiv:2110.10246, 10.48550/ARXIV.2110.10246, DOI 10.48550/ARXIV.2110.10246]
   Gao Q, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P459, DOI 10.1109/ICSE.2015.64
   Gao X, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3418461
   Gh archive, 2015, US
   GitHub, 2021, 2020 STAT OCT
   Gkortzis A, 2018, IEEE WORK CONF MIN S, P18, DOI 10.1145/3196398.3196454
   Gu JT, 2016, Arxiv, DOI [arXiv:1603.06393, 10.48550/arXiv.1603.06393]
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Harer J, 2018, Arxiv, DOI arXiv:1805.07475
   He KM, 2019, IEEE I CONF COMP VIS, P4917, DOI 10.1109/ICCV.2019.00502
   Hermann KM, 2015, ADV NEUR IN, V28
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Homaei H, 2017, IEEE SECUR PRIV, V15, P58, DOI 10.1109/MSP.2017.15
   Huang S., 2020, ARXIV
   Huang Z, 2019, P IEEE S SECUR PRIV, P539, DOI 10.1109/SP.2019.00071
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kanade A, 2020, PR MACH LEARN RES, V119
   Kingma D. P., 2014, arXiv
   Klein G, 2017, Arxiv, DOI arXiv:1701.02810
   Lee J, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P95, DOI 10.1145/3236024.3236079
   Lewis M, 2019, Arxiv, DOI [arXiv:1910.13461, DOI 10.48550/ARXIV.1910.13461]
   Li DC, 2007, COMPUT OPER RES, V34, P966, DOI 10.1016/j.cor.2005.05.019
   Li Y, 2020, PROC INT CONF SOFTW, P602, DOI 10.1145/3377811.3380345
   Li Z, 2018, Arxiv, DOI arXiv:1801.01681
   Lin GJ, 2020, P IEEE, V108, P1825, DOI 10.1109/JPROC.2020.2993293
   Losses Net., 2014, Estimating the Global Cost of Cybercrime
   Lutellier Thibaud, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P101, DOI 10.1145/3395363.3397369
   Lutellier T, 2024, Arxiv, DOI arXiv:1906.08691
   Ma SQ, 2017, LECT NOTES COMPUT SC, V10493, P229, DOI 10.1007/978-3-319-66399-9_13
   Mesbah A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P925, DOI 10.1145/3338906.3340455
   Muntean P, 2021, IEEE T SOFTWARE ENG, V47, P2225, DOI 10.1109/TSE.2019.2946148
   Musliner D. J., 2015, PROC 4 INT C COMMUN, V136
   Nallapati R, 2016, Arxiv, DOI [arXiv:1602.06023, DOI 10.48550/ARXIV.1602.06023]
   Okun V, 2013, Special Publication (NIST SP), DOI DOI 10.6028/NIST.SP.500-297
   Perkins JH, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P87
   Ponta Serena Elisa, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P383, DOI 10.1109/MSR.2019.00064
   Prechelt L, 1998, LECT NOTES COMPUT SC, V1524, P55
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Reis S., 2021, GROUND TRUTH DATASET
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Schmidt J, 2017, CHEM MATER, V29, P5090, DOI 10.1021/acs.chemmater.7b00156
   Sennrich R, 2016, Arxiv, DOI arXiv:1508.07909
   Sharma T, 2021, J SYST SOFTWARE, V176, DOI 10.1016/j.jss.2021.110936
   Shin HC, 2016, IEEE T MED IMAGING, V35, P1285, DOI 10.1109/TMI.2016.2528162
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Sun C, 2017, IEEE I CONF COMP VIS, P843, DOI 10.1109/ICCV.2017.97
   Sutskever I, 2014, ADV NEUR IN, V27
   Szegedy C, 2016, PROC CVPR IEEE, P2818, DOI 10.1109/CVPR.2016.308
   Tan CQ, 2018, LECT NOTES COMPUT SC, V11141, P270, DOI 10.1007/978-3-030-01424-7_27
   Tarlow D., 2020, P IEEEACM 42 INT C S, P19, DOI 10.1145/3387940.3392181
   Tiantian Ji, 2018, 2018 IEEE Third International Conference on Data Science in Cyberspace (DSC). Proceedings, P53, DOI 10.1109/DSC.2018.00017
   Torrey Lisa, 2010, Handbook of Research on Machine Learning Applications and Trends: Algorithms, Methods, and Techniques, P242
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang TL, 2014, LECT NOTES COMPUT SC, V8550, P255
   Wu YH, 2016, Arxiv, DOI [arXiv:1609.08144, DOI 10.48550/ARXIV.1609.08144]
   Yasunaga M., 2020, PROC INT C MACH LEAR, p10 799
   Yin PC, 2019, Arxiv, DOI arXiv:1810.13337
   Zhu QH, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P341, DOI 10.1145/3468264.3468544
NR 81
TC 15
Z9 17
U1 4
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 147
EP 165
DI 10.1109/TSE.2022.3147265
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA L1HD8
UT WOS:001020827200008
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Prenner, JA
   Robbes, R
AF Prenner, Julian Aron
   Robbes, Romain
TI Making the Most of Small Software Engineering Datasets With Modern
   Machine Learning
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Small datasets; transformer; BERT; RoBERTA; pre-training; fine-tuning;
   data augmentation; back translation; soft labels; active learning
AB This paper provides a starting point for Software Engineering (SE) researchers and practitioners faced with the problem of training machine learning models on small datasets. Due to the high costs associated with labeling data, in Software Engineering, there exist many small (< 5,000 samples) and medium-sized (< 100,000 samples) datasets. While deep learning has set the state of the art in many machine learning tasks, it is only recently that it has proven effective on small-sized datasets, primarily thanks to pre-training, a semi-supervised learning technique that leverages abundant unlabelled data alongside scarce labelled data. In this work, we evaluate pre-trained Transformer models on a selection of 13 smaller datasets from the SE literature, covering both, source code and natural language. Our results suggest that pre-trained Transformers are competitive and in some cases superior to previous models, especially for tasks involving natural language; whereas for source code tasks, in particular for very small datasets, traditional machine learning methods often has the edge. In addition, we experiment with several techniques that ought to aid training on small datasets, including active learning, data augmentation, soft labels, self-training and intermediate-task fine-tuning, and issue recommendations on when they are effective. We also release all the data, scripts, and most importantly pre-trained models for the community to reuse on their own datasets.
C1 [Prenner, Julian Aron; Robbes, Romain] Free Univ Bozen Bolzano, Fac Comp Sci, I-39100 Bolzano, Italy.
C3 Free University of Bozen-Bolzano
RP Prenner, JA (corresponding author), Free Univ Bozen Bolzano, Fac Comp Sci, I-39100 Bolzano, Italy.
EM prenner@inf.unibz.it; rrobbes@unibz.it
RI Robbes, Romain/H-3771-2013
FU IDEALS and ADVERB Projects from the Free University of Bozen-Bolzano
FX This work was supported in part by IDEALS and ADVERB Projects from the
   Free University of Bozen-Bolzano. Parts of the results of this work were
   computed on the Vienna Scientific Cluster (VSC).
CR Ahmed T, 2017, IEEE INT CONF AUTOM, P106, DOI 10.1109/ASE.2017.8115623
   Alves Nicolli S. R., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P1, DOI 10.1109/MTD.2014.9
   [Anonymous], 2009, 1648 U WISC COMP SCI
   Arnaoudova V, 2016, EMPIR SOFTW ENG, V21, P104, DOI 10.1007/s10664-014-9350-8
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Beltagy I., 2020, Longformer: The long-document transformer, V2004, P05150, DOI DOI 10.48550/ARXIV.2004.05150
   Biswas E, 2020, PROC IEEE INT CONF S, P162, DOI 10.1109/ICSME46990.2020.00025
   Borovits Nemania, 2020, MaLTeSQuE 2020: Proceedings of the 4th ACM SIGSOFT International Workshop on Machine-Learning Techniques for Software-Quality Evaluation, P7, DOI 10.1145/3416505.3423564
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Chen ZP, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3424308
   Cimasa A, 2019, EUROMICRO CONF PROC, P244, DOI 10.1109/SEAA.2019.00046
   Corazza A., 2016, PROC 3 ITALIAN C COM
   Corazza A, 2018, SOFTWARE QUAL J, V26, P751, DOI 10.1007/s11219-016-9347-1
   Deng J., 2009, IEEE C COMP VIS PATT
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Deze Wang, 2019, IEEE Access, V7, P174200, DOI 10.1109/ACCESS.2019.2957424
   Dhinakaran VT, 2018, INT REQUIR ENG CONF, P170, DOI 10.1109/RE.2018.00026
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Dodge J, 2020, Arxiv, DOI arXiv:2002.06305
   Dorn J., 2012, A general software readability model
   Peters ME, 2018, Arxiv, DOI [arXiv:1802.05365, 10.48550/arXiv.1802.05365]
   Efstathiou V, 2018, IEEE WORK CONF MIN S, P38, DOI 10.1145/3196398.3196448
   Fakhoury S, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P602, DOI 10.1109/SANER.2018.8330265
   Feng Zhangyin, 2020, ARXIV200208155
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2017, KNOWL-BASED SYST, V128, P43, DOI 10.1016/j.knosys.2017.04.014
   Frank E, 2005, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, P1305, DOI 10.1007/0-387-25465-X_62
   Garg S, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P6174
   Garg S, 2020, AAAI CONF ARTIF INTE, V34, P7780
   Goodfellow I. J., 2015, 3 INT C LEARNING REP
   Hey T, 2020, INT REQUIR ENG CONF, P169, DOI 10.1109/RE48521.2020.00028
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Howard J, 2018, Arxiv, DOI [arXiv:1801.06146, DOI 10.48550/ARXIV.1801.06146, 10.48550/arXiv.1801.06146]
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Jain P, 2020, ENVIRON REV, V28, P478, DOI 10.1139/er-2020-0019
   Jiao XQ, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P4163
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Keim J, 2020, LECT NOTES COMPUT SC, V12292, P220, DOI 10.1007/978-3-030-58923-3_15
   Kim S, 2021, Arxiv, DOI arXiv:2003.13848
   Kitaev Nikita, 2020, INT C LEARN REPR
   Kotthoff L, 2019, SPRING SER CHALLENGE, P81, DOI 10.1007/978-3-030-05318-5_4
   Lan Z., 2019, ARXIV190911942, DOI DOI 10.48550/ARXIV.1909.11942
   Le TT, 2020, BIOINFORMATICS, V36, P250, DOI 10.1093/bioinformatics/btz470
   Lin B, 2018, PROC IEEE INT CONF S, P712, DOI 10.1109/ICSME.2018.00084
   Lin B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P94, DOI 10.1145/3180155.3180195
   Lin JF, 2021, PROC INT CONF SOFTW, P324, DOI 10.1109/ICSE43902.2021.00040
   Liu Y, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P5070
   Liu ZX, 2018, PROC IEEE ACM INT C, P9, DOI 10.1145/3183440.3183478
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Mahadi A, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P149, DOI [10.1109/saner48275.2020.9054792, 10.1109/SANER48275.2020.9054792]
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Mäntylä MV, 2018, COMPUT SCI REV, V27, P16, DOI 10.1016/j.cosrev.2017.10.002
   Meneses Santos Rafael, 2020, 17th International Conference on Information Technology-New Generations (ITNG 2020). Advances in Intelligent Systems and Computing (AISC 1134), P679, DOI 10.1007/978-3-030-43020-7_93
   Müller R, 2019, ADV NEUR IN, V32
   Munro R., 2021, HUMAN IN THE LOOP MA
   Narayanan A., 2017, Graph2vec: Learning distributed representations of graphs
   Ortu M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P480, DOI [10.1145/2901739.2903505, 10.1109/MSR.2016.059]
   Pascarella L, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P39, DOI 10.1145/3197231.3198444
   Pascarella L, 2017, IEEE WORK CONF MIN S, P227, DOI 10.1109/MSR.2017.63
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Peters M, 2018, STUD LATEINAMERIKA, V32, P1, DOI 10.5771/9783845286846
   Phang J, 2019, Arxiv, DOI arXiv:1811.01088
   Posnett D, 2011, P 8 WORKING C MINING, P73
   Pruksachatkun Y., 2020, Intermediate-task transfer learning with pretrained models for natural language understanding: When and why does it work?
   Rajpurkar P., 2016, P 2016 C EMP METH NA, V2016, P2383
   Ren XX, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3324916
   Robbes R, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P29, DOI 10.1109/ICSE-NIER.2019.00016
   Scalabrino S, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Scalabrino S, 2019, IEEE T SOFTWARE ENG, V45, P68, DOI 10.1109/TSE.2017.2759112
   Scalabrino S, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1958
   SCUDDER HJ, 1965, IEEE T INFORM THEORY, V11, P363, DOI 10.1109/tit.1965.1053799
   Sennrich R, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P86
   Sennrich R, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1715
   Sharma T, 2019, Arxiv, DOI arXiv:1904.03031
   Shiv VL, 2019, ADV NEUR IN, V32
   Sierra G, 2019, J SYST SOFTWARE, V152, P70, DOI 10.1016/j.jss.2019.02.056
   Sikka Jagriti, 2020, Advances in Information Retrieval, 42nd European Conference on IR Research, ECIR 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12035), P313, DOI 10.1007/978-3-030-45439-5_21
   Svyatkovskiy A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1433, DOI 10.1145/3368089.3417058
   Szegedy C, 2016, PROC CVPR IEEE, P2818, DOI 10.1109/CVPR.2016.308
   Tomas M., 2013, arXiv, DOI DOI 10.48550/ARXIV.1310.4546
   Tu H, 2022, IEEE T SOFTWARE ENG, V48, P278, DOI 10.1109/TSE.2020.2986415
   Vaswani A, 2017, ADV NEUR IN, V30
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Wang A., 2019, Glue: A multi-task benchmark and analysis platform for natural language understanding
   Wang W. Y., 2015, P 2015 C EMP METH NA, P2557, DOI DOI 10.18653/V1/D15-1306
   Wang X, 2020, IEEE INT CONF AUTOM, P871, DOI 10.1145/3324884.3416583
   Wei J, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P6382
   Wolf T, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING: SYSTEM DEMONSTRATIONS, P38
   Yang ZL, 2019, ADV NEUR IN, V32
   Yarowsky D., 1995, 33 ANN M ASS COMPUTA, P189, DOI DOI 10.3115/981658.981684
   Zhang T, 2020, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSME46990.2020.00017
   Zhang Xiang, 2016, CHARACTER LEVEL CONV
   Zhu X, 2009, Synthesis Lectures on Artificial Intelligence and Machine Learning, V3, P1, DOI 10.1007/978-3-031-01548-9
NR 97
TC 2
Z9 2
U1 6
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 5050
EP 5067
DI 10.1109/TSE.2021.3135465
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600016
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Madampe, K
   Hoda, R
   Grundy, J
AF Madampe, Kashumi
   Hoda, Rashina
   Grundy, John
TI A Faceted Taxonomy of Requirements Changes in Agile Contexts
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Interviews; Taxonomy; Computer bugs; Bibliographies;
   Australia; Software engineering; Agile software development;
   requirements engineering; requirements changes; software engineering;
   taxonomy
ID SOFTWARE; COMMUNICATION
AB Background: Originally, developers aimed to identify most software requirements upfront in software development projects. However, agile methods explicitly encourage software requirements to be changed throughout development, i.e., many Requirements Changes (RCs) occur. Objective: The objective of this study is to better understand RCs and produce a taxonomy of RCs in agile contexts. Method: We ran a mixed-methods approach comprising a series of studies: an interview-based study (10 participants from New Zealand and Australia), a focused literature review, and an in-depth survey (40 participants world-wide). Results: Key characteristics of RCs in agile we found relate to different types and forms, agile RCs have multiple reasons and sources, they are brought by different carriers, and their emergence in agile is via a variety of events. Summary: The presented taxonomy provides a guide for software practitioners to use to help manage RC-related issues in agile contexts.
C1 [Madampe, Kashumi; Hoda, Rashina; Grundy, John] Monash Univ, Fac Informat Technol, Dept Software Syst & Cybersecur, HumaniSE Lab, Clayton, Vic 3800, Australia.
C3 Monash University
RP Madampe, K (corresponding author), Monash Univ, Fac Informat Technol, Dept Software Syst & Cybersecur, HumaniSE Lab, Clayton, Vic 3800, Australia.
EM kashumi.madampe@monash.edu; rashina@gmail.com; john.gnindy@monash.edu
RI Madampe, Kashumi/AAY-9008-2021; Grundy, John/I-6681-2012
OI Madampe, Kashumi/0000-0003-1363-8786; Grundy, John/0000-0003-4928-7076;
   Hoda, Rashina/0000-0001-5147-8096
FU Monash Faculty of IT scholarship; ARC Laureate Fellowship [FL190100035]
FX This work was supported by a Monash Faculty of IT scholarship. Grundy is
   supported by ARC Laureate Fellowship FL190100035. Also, our sincere
   gratitude goes to Agile Alliance, to all the participants who took part
   in this study, and to the reviewers for their constructive feedback.
CR Abdullah N., 2011, ... on Agile Requirements, P1, DOI DOI 10.1145/2068783.2068784
   [Anonymous], 14 ANN STATE AGILE R
   [Anonymous], 1990, Basics of qualitative research
   Basirati MR, 2015, INT REQUIR ENG CONF, P352, DOI 10.1109/RE.2015.7320452
   Cao L, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.1
   Fowler M., 2001, Software Development, V9, P28
   Gall Mark, 2006, P 1 INT WORKSH MULT, P4
   Gizzatullina I, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1262, DOI 10.1145/3338906.3342511
   Harker S. D. P., 1992, Proceedings of IEEE International Symposium on Requirements Engineering (Cat. No.92TH0491-1), P266, DOI 10.1109/ISRE.1993.324847
   Hoda R, 2018, IEEE SOFTWARE, V35, P58, DOI 10.1109/MS.2018.290111318
   Hoda R, 2010, LECT NOTES BUS INF P, V48, P73
   Hoff G., 2008, REQUIREMENT PRIORITI
   IEEE Standard Glossary of Software Engineering Terminology, 1990, 610121990 IEEE, P1
   Inpirom A, 2012, INT CONF SOFTW ENG, P283
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Krishna R, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P306, DOI 10.1145/3183519.3183548
   Madampe K., 2020, PROC IEEEACM 42 INT
   Mantyla M.V., 2006, P 2006 ACMIEEE INT S, P297
   McChesney IR, 2004, INFORM SOFTWARE TECH, V46, P473, DOI 10.1016/j.infsof.2003.10.001
   McGee S, 2011, INT REQUIR ENG CONF, P25, DOI 10.1109/RE.2011.6051641
   McGee S, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P51, DOI 10.1109/ICSEA.2009.17
   Nurmuliani N, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P28, DOI 10.1109/ASWEC.2004.1290455
   Paetsch F, 2003, TWELFTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P308
   Pikkarainen M, 2008, EMPIR SOFTW ENG, V13, P303, DOI 10.1007/s10664-008-9065-9
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   Ralph P, 2021, Arxiv, DOI arXiv:2010.03525
   Saher N, 2017, INT CONF ELECT ENG
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Stray V, 2016, J SYST SOFTWARE, V114, P101, DOI 10.1016/j.jss.2016.01.004
   Wang X., 2014, Current advances on genetic resistance to rice blast disease, P195
NR 31
TC 12
Z9 12
U1 2
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 3737
EP 3752
DI 10.1109/TSE.2021.3104732
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800002
DA 2024-07-18
ER

PT J
AU Ahmad, AA
   Noor, AR
   Sharif, H
   Hameed, U
   Asif, S
   Anwar, M
   Gehani, A
   Zaffar, F
   Siddiqui, JH
AF Ahmad, Aatira Anum
   Noor, Abdul Rafae
   Sharif, Hashim
   Hameed, Usama
   Asif, Shoaib
   Anwar, Mubashir
   Gehani, Ashish
   Zaffar, Fareed
   Siddiqui, Junaid Haroon
TI Trimmer: An Automated System for Configuration-Based Software Debloating
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Annotations; Security; Transforms; Standards; Program
   processors; Optimization; Compilers; partial evaluation; program
   analysis
ID SPECIALIZATION
AB Software bloat has negative implications for security, reliability, and performance. To counter bloat, we propose Trimmer, a static analysis-based system for pruning unused functionality. Trimmer removes code that is unused with respect to user-provided command-line arguments and application-specific configuration files. Trimmer uses concrete memory tracking and a custom inter-procedural constant propagation analysis that facilitates dead code elimination. Our system supports both context-sensitive and context-insensitive constant propagation. We show that context-sensitive constant propagation is important for effective software pruning in most applications. We introduce sparse constant propagation that performs constant propagation only for configuration-hosting variables and show that it performs better (higher code size reductions) compared to constant propagation for all program variables. Overall, our results show that Trimmer reduces binary sizes for real-world programs with reasonable analysis times. Across 20 evaluated programs, we observe a mean binary size reduction of 22.7 percent and a maximum reduction of 62.7 percent. For 5 programs, we observe performance speedups ranging from 5 to 53 percent. Moreover, we show that winnowing software applications can reduce the program attack surface by removing code that contains exploitable vulnerabilities. We find that debloating using Trimmer removes CVEs in 4 applications.
C1 [Ahmad, Aatira Anum; Noor, Abdul Rafae; Hameed, Usama; Asif, Shoaib; Anwar, Mubashir; Zaffar, Fareed; Siddiqui, Junaid Haroon] Lahore Univ Management Sci, Dept Comp Sci, Lahore 54792, Punjab, Pakistan.
   [Noor, Abdul Rafae] Univ Illinois, Champaign, IL 61801 USA.
   [Sharif, Hashim] Univ Illinois, Dept Comp Sci, Champaign, IL 61801 USA.
   [Hameed, Usama] Univ Calif Los Angeles, Los Angeles, CA 90095 USA.
   [Asif, Shoaib] Univ Texas Austin, Austin, TX 78705 USA.
   [Gehani, Ashish] SRI Int, Comp Sci Lab, Menlo Pk, CA 94025 USA.
C3 Lahore University of Management Sciences; University of Illinois System;
   University of Illinois Urbana-Champaign; University of Illinois System;
   University of Illinois Urbana-Champaign; University of California
   System; University of California Los Angeles; University of Texas
   System; University of Texas Austin; SRI International
RP Ahmad, AA (corresponding author), Lahore Univ Management Sci, Dept Comp Sci, Lahore 54792, Punjab, Pakistan.
EM 17030061@lums.edu.pk; arnoor2@illinois.edu; hsharif3@illinois.edu;
   usamahameed@g.ucla.edu; shoaib19@utexas.edu; manwar@illinois.edu;
   ashish.gehani@sri.com; fareed.zaffar@lums.edu.pk;
   junaid.siddiqui@lums.edu.pk
OI Anwar, Mubashir/0000-0003-1328-1916; Gehani, Ashish/0000-0002-3940-2467
FU National Science Foundation (NSF) [GrantACI-1440800]; Office ofNaval
   Research (ONR) [ContractN68335-17-C-0558]
FX This work was supported in part by the National Science Foundation (NSF)
   under GrantACI-1440800 and in part by the Office ofNaval Research (ONR)
   under ContractN68335-17-C-0558.
CR Agadakos I, 2019, 35TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSA), P70, DOI 10.1145/3359789.3359823
   Andersen L. O., 1994, Ph.D. thesis
   Quach A, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P869
   [Anonymous], 2013, P NETW DISTR SYST SE
   [Anonymous], 1993, Prentice Hall international series in computer science
   [Anonymous], 2008, P OSDI
   Bhati S, 2004, CONF LOCAL COMPUT NE, P152
   Bhatia S, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1377492.1377497
   Bhattacharya S, 2011, COMPUTER, V44, P97, DOI 10.1109/MC.2011.293
   Bletsch T., 2011, P 6 ACM S INF COMP C, P30
   Brown M.D., 2019, 12 USENIX WORKSHOP C
   Caswell Hal, 2001, pi
   Choudhuri S, 2004, DES AUT CON, P566, DOI 10.1145/996566.996722
   Clarke E, 2004, LECT NOTES COMPUT SC, V2919, P78
   Cooper Keith, 2011, Engineering a compiler, Vsecond
   Danvy O, 1999, LECT NOTES COMPUT SC, V1706, P367
   Davidsson N, 2019, LECT NOTES COMPUT SC, V11736, P88, DOI 10.1007/978-3-030-29962-0_5
   Dutertre B, 2014, LECT NOTES COMPUT SC, V8559, P737, DOI 10.1007/978-3-319-08867-9_49
   Ghavamnia S, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P1749
   Heo K, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P380, DOI 10.1145/3243734.3243838
   Hibbs Curt, 2009, The art of lean software development: a practical and incremental approach
   Jose J., 2011, 2011 International Conference on Parallel Processing, P743, DOI 10.1109/ICPP.2011.37
   Kreps Jay, 2011, P NETDB, P1, DOI DOI 10.1007/BF00640482
   Kroes T, 2018, FEAST'18: PROCEEDINGS OF THE 2018 WORKSHOP ON FORMING AN ECOSYSTEM AROUND SOFTWARE TRANSFORMATION, P8, DOI 10.1145/3273045.3273050
   Lekatsas H, 1998, 1998 DESIGN AUTOMATION CONFERENCE, PROCEEDINGS, P516, DOI 10.1109/DAC.1998.724526
   Lillack M, 2018, IEEE T SOFTWARE ENG, V44, P1269, DOI 10.1109/TSE.2017.2756048
   LoopRotate, 2020, ADD SUPP ROT LOOPS S
   Malecha G, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1504, DOI 10.1145/2695664.2695751
   Muller G, 1998, INT CON DISTR COMP S, P240, DOI 10.1109/ICDCS.1998.679507
   Mulliner C., 2015, Breaking Payloads with Runtime Code Stripping and Image Freezing
   Porter C, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P164, DOI 10.1145/3385412.3386017
   Poskanzer J, THTTPD TINY TURBO TH
   Qian CX, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1733
   Quach A, 2017, FEAST'17: PROCEEDINGS OF THE 2017 WORKSHOP ON FORMING AN ECOSYSTEM AROUND SOFTWARE TRANSFORMATION, P65, DOI 10.1145/3141235.3141242
   Rastogi V, 2017, FEAST'17: PROCEEDINGS OF THE 2017 WORKSHOP ON FORMING AN ECOSYSTEM AROUND SOFTWARE TRANSFORMATION, P51, DOI 10.1145/10.1145/3141235.3141241
   Rastogi V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P476, DOI 10.1145/3106237.3106271
   Shacham H, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P552
   Sharif H, 2018, IEEE INT CONF AUTOM, P329, DOI 10.1145/3238147.3238160
   Siegmund N, 2013, INFORM SOFTWARE TECH, V55, P491, DOI 10.1016/j.infsof.2012.07.020
   Smowton C., 2011, PROC 13 USENIX WORKS, P26
   Sui YL, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION (CC 2016), P265, DOI 10.1145/2892208.2892235
   Xu Guoqing, 2010, P FSE SDP WORKSH FUT, P421
   Xu TY, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P619
   Zhang XP, 2013, PLOS ONE, V8, DOI [10.1371/journal.pone.0053995, 10.1371/journal.pone.0057805, 10.1371/journal.pone.0053931]
   Ziegler A, 2019, ACM T EMBED COMPUT S, V18, DOI 10.1145/3358222
NR 45
TC 4
Z9 5
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3485
EP 3505
DI 10.1109/TSE.2021.3095716
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500016
DA 2024-07-18
ER

PT J
AU Li, MQ
   Chen, T
   Yao, X
AF Li, Miqing
   Chen, Tao
   Yao, Xin
TI How to Evaluate Solutions in Pareto-Based Search-Based Software
   Engineering: A Critical Review and Methodological Guidance
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Software engineering; Pareto optimization; Computer science;
   Systematics; Indexes; Licenses; Search-based software engineering;
   multi-objective optimization; Pareto optimization; quality evaluation;
   quality indicators; preferences
ID MANY-OBJECTIVE OPTIMIZATION; MULTIOBJECTIVE EVOLUTIONARY ALGORITHMS;
   TEST-CASE GENERATION; GENETIC ALGORITHM; FEATURE-SELECTION; SOLUTION
   SETS; VARIABILITY; INTEGRATION; INDICATORS; SYSTEMS
AB With modern requirements, there is an increasing tendency of considering multiple objectives/criteria simultaneously in many Software Engineering (SE) scenarios. Such a multi-objective optimization scenario comes with an important issue - how to evaluate the outcome of optimization algorithms, which typically is a set of incomparable solutions (i.e., being Pareto nondominated to each other). This issue can be challenging for the SE community, particularly for practitioners of Search-Based SE (SBSE). On one hand, multi-objective optimization could still be relatively new to SE/SBSE researchers, who may not be able to identify the right evaluation methods for their problems. On the other hand, simply following the evaluation methods for general multi-objective optimization problems may not be appropriate for specific SBSE problems, especially when the problem nature or decision maker's preferences are explicitly/implicitly known. This has been well echoed in the literature by various inappropriate/inadequate selection and inaccurate/misleading use of evaluation methods. In this paper, we first carry out a systematic and critical review of quality evaluation for multi-objective optimization in SBSE. We survey 717 papers published between 2009 and 2019 from 36 venues in seven repositories, and select 95 prominent studies, through which we identify five important but overlooked issues in the area. We then conduct an in-depth analysis of quality evaluation indicators/methods and general situations in SBSE, which, together with the identified issues, enables us to codify a methodological guidance for selecting and using evaluation methods in different SBSE scenarios.
C1 [Li, Miqing] Univ Birmingham, Sch Comp Sci, Birmingham B15 2TT, W Midlands, England.
   [Chen, Tao] Loughborough Univ, Dept Comp Sci, Loughborough LE11 3TU, Leics, England.
   [Yao, Xin] Southern Univ Sci & Technol, Dept Comp Sci & Engn, Shenzhen Key Lab Computat Intelligence SKyLoCI, Shenzhen 518055, Peoples R China.
   [Yao, Xin] Univ Birmingham, Sch Comp Sci, CERCIA, Birmingham B15 2TT, W Midlands, England.
C3 University of Birmingham; Loughborough University; Southern University
   of Science & Technology; University of Birmingham
RP Chen, T (corresponding author), Loughborough Univ, Dept Comp Sci, Loughborough LE11 3TU, Leics, England.; Yao, X (corresponding author), Southern Univ Sci & Technol, Dept Comp Sci & Engn, Shenzhen Key Lab Computat Intelligence SKyLoCI, Shenzhen 518055, Peoples R China.
EM m.li.8@bham.ac.uk; t.t.chen@lboro.ac.uk; xiny@sustc.edu.cn
RI Li, Miqing/P-4153-2015
OI Li, Miqing/0000-0002-8607-9607; Chen, Tao/0000-0001-5025-5472
FU Guangdong Provincial Key Laboratory [2020B121201001]; Program for
   Guangdong Introducing Innovative and Enterpreneurial Teams
   [2017ZT07X386]; Shenzhen Science and Technology Program
   [KQTD2016112514355531]; Program for University Key Laboratory of
   Guangdong Province [2017KSYS008]
FX This work was supported by the Guangdong Provincial Key Laboratory
   (Grant No. 2020B121201001), the Program for Guangdong Introducing
   Innovative and Enterpreneurial Teams (Grant No. 2017ZT07X386), Shenzhen
   Science and Technology Program (Grant No. KQTD2016112514355531), and the
   Program for University Key Laboratory of Guangdong Province (Grant No.
   2017KSYS008). We are grateful to the editor and anonymous reviewers for
   their constructive comments on the early version of this paper. Miqing
   Li and Tao Chen contributed equally to this research.
CR Abdeen H., 2014, INT C AUTOMATED SOFT, P289
   Ali S, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3375636
   [Anonymous], 2016, SOFTW QUALITY J
   [Anonymous], 1973, Multiple Criteria Decision Making
   [Anonymous], 1998, Technical Report IMM-REP-1998-7
   [Anonymous], 2015, P 2015 INT S SOFTWAR, DOI DOI 10.1145/2771783.2771808
   Bavota Gabriele, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P75, DOI 10.1007/978-3-642-33119-0_7
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Ben Abdessalem R, 2016, IEEE INT CONF AUTOM, P63, DOI 10.1145/2970276.2970311
   Boukharata S, 2019, AUTOMAT SOFTW ENG, V26, P275, DOI 10.1007/s10515-019-00256-4
   Boussaïd I, 2017, AUTOMAT SOFTW ENG, V24, P233, DOI 10.1007/s10515-017-0215-4
   Bowman M, 2010, IEEE T SOFTWARE ENG, V36, P817, DOI 10.1109/TSE.2010.70
   Bozkurt B, 2010, OPER RES, V58, P650, DOI 10.1287/opre.1090.0766
   Busari SA, 2017, PROC INT CONF SOFTW, P552, DOI 10.1109/ICSE.2017.57
   Cai KY, 2008, J SYST SOFTWARE, V81, P1051, DOI 10.1016/j.jss.2007.08.028
   Calinescu R, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P131, DOI 10.1109/ICSA.2017.16
   Canfora G, 2015, SOFTW TEST VERIF REL, V25, P426, DOI 10.1002/stvr.1570
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Chen JF, 2019, IEEE T SOFTWARE ENG, V45, P597, DOI 10.1109/TSE.2018.2790925
   Chen T., 2020, ARXIV200108236
   Chen T, 2019, INFORM SOFTWARE TECH, V114, P155, DOI 10.1016/j.infsof.2019.05.013
   Chen T, 2018, GECCO'18: PROCEEDINGS OF THE 2018 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1419, DOI 10.1145/3205455.3205513
   Chen T, 2018, PROCEEDINGS OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P48, DOI 10.1145/3184407.3184413
   Chen T, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3204459
   Chen T, 2017, IEEE T SERV COMPUT, V10, P618, DOI 10.1109/TSC.2015.2499770
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   Chicano F, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1915
   Coello CAC, 2004, LECT NOTES COMPUT SC, V2972, P688
   COLANZI TE, 2019, P INT S SEARCH BAS S, P42
   da Fonseca VG, 2001, LECT NOTES COMPUT SC, V1993, P213
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Durillo JJ, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P49, DOI 10.1109/SSBSE.2009.21
   Durillo JJ, 2014, FUTURE GENER COMP SY, V36, P221, DOI 10.1016/j.future.2013.07.005
   Epitropakis M. G., 2015, P INT S SOFTW TEST A, P234, DOI [DOI 10.1145/2771783.2771788, 10.1145/2771783.2771788]
   Felizardo KR, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962630
   Ferrer J, 2012, SOFTWARE PRACT EXPER, V42, P1331, DOI 10.1002/spe.1135
   Ferrucci F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P462, DOI 10.1109/ICSE.2013.6606592
   Finkelstein A, 2009, REQUIR ENG, V14, P231, DOI 10.1007/s00766-009-0075-y
   Fleck M, 2017, IEEE T SOFTWARE ENG, V43, P1009, DOI 10.1109/TSE.2017.2654255
   Fleming P.J, 1996, Fourth International Conferenceon Parallel Problem Solving from Nature (PPSN-IV), P584, DOI DOI 10.1007/3-540-61723-X_1022
   Frey S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P512, DOI 10.1109/ICSE.2013.6606597
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Fulop J., 2005, Introduction to Decision Making Methods, P1
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   GARNAUT R, 1992, ECONOMIC REFORM AND INTERNATIONALISATION: CHINA AND THE PACIFIC REGION, P1
   Gerasimou S, 2015, IEEE INT CONF AUTOM, P319, DOI 10.1109/ASE.2015.22
   Gueorguiev S., 2009, P 11 ANN C GENETIC E, P1673, DOI DOI 10.1145/1569901.1570125
   Assunçao WKG, 2014, INFORM SCIENCES, V267, P119, DOI 10.1016/j.ins.2013.12.040
   Guo JM, 2019, SOFTW SYST MODEL, V18, P1447, DOI 10.1007/s10270-017-0610-0
   Harman M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P5, DOI 10.1145/2648511.2648513
   Harman M., 2009, Proceedings of Genetic and Evolutionary Computation Conference, P1681
   Harman M, 2013, J SYST SOFTWARE, V86, P2225, DOI 10.1016/j.jss.2012.10.027
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Heaven W, 2011, INT REQUIR ENG CONF, P79, DOI 10.1109/RE.2011.6051653
   Henard C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P517, DOI 10.1109/ICSE.2015.69
   Hierons RM, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2897760
   Ishibuchi H, 2018, EVOL COMPUT, V26, P411, DOI 10.1162/evco_a_00226
   Ishibuchi H, 2015, LECT NOTES COMPUT SC, V9019, P110, DOI 10.1007/978-3-319-15892-1_8
   Jakubovski HL, 2019, J SYST SOFTWARE, V151, P194, DOI 10.1016/j.jss.2019.02.028
   Kalboussi Sabrine, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P245, DOI 10.1007/978-3-642-39742-4_19
   Kessentini W, 2019, INFORM SOFTWARE TECH, V106, P49, DOI 10.1016/j.infsof.2018.09.003
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Knowles J, 2005, 5th International Conference on Intelligent Systems Design and Applications, Proceedings, P552, DOI 10.1109/ISDA.2005.15
   Knowles J, 2002, IEEE C EVOL COMPUTAT, P711, DOI 10.1109/CEC.2002.1007013
   Knowles J. D., 2006, 214 ETH
   Kumar S, 2018, INT C PAR DISTRIB SY, P972, DOI [10.1109/PADSW.2018.8644640, 10.1109/ICPADS.2018.00129]
   Kumari AC, 2016, J SYST SOFTWARE, V117, P384, DOI 10.1016/j.jss.2016.04.007
   Lee NZ, 2019, PROCEEDINGS OF THE 2019 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'19), P1241, DOI 10.1145/3321707.3321755
   Letier E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P883, DOI 10.1145/2568225.2568239
   Li H., 2010, Proceedings of the first joint WOSP/SIPEW international conference on Performance engineering, P117
   Li LB, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1247, DOI 10.1145/2576768.2598334
   Li MQ, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3300148
   Li MQ, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P17, DOI 10.1145/3183399.3183405
   Li MQ, 2017, IEEE COMPUT INTELL M, V12, P88, DOI 10.1109/MCI.2017.2742869
   Li MQ, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P703
   Li MQ, 2014, IEEE T CYBERNETICS, V44, P2568, DOI 10.1109/TCYB.2014.2310651
   Li MQ, 2014, IEEE T EVOLUT COMPUT, V18, P348, DOI 10.1109/TEVC.2013.2262178
   Li Y, 2017, EMPIR SOFTW ENG, V22, P175, DOI 10.1007/s10664-015-9418-0
   Lian XL, 2018, J SYST SOFTWARE, V137, P636, DOI 10.1016/j.jss.2017.02.044
   Liefooghe A, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P581, DOI 10.1145/2908812.2908906
   Lopes MA, 2010, ESTUD HUMAN, P209, DOI 10.1007/978-3-642-02538-9_9
   Mansoor U, 2017, SOFTWARE QUAL J, V25, P473, DOI 10.1007/s11219-015-9284-4
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Mariani T, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1069, DOI 10.1145/2908812.2908816
   Martens A., 2010, P 1 JOINT WOSP SIPEW, P105, DOI [DOI 10.1145/1712605.1712624, 10.1145]
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Messaoudi S, 2018, INT C PROGRAM COMPRE, P167, DOI 10.1145/3196321.3196340
   Meunier H, 2000, IEEE C EVOL COMPUTAT, P317, DOI 10.1109/CEC.2000.870312
   Minku LL, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522928
   Mkaouer M. W., 2014, P 29 ACM IEEE INT C, P331, DOI [DOI 10.1145/2642937.2642965, 10.1145/2642937.2642965. u r l, DOI 10.1145/2642937.2642965.URL]
   Mkaouer MW, 2016, EMPIR SOFTW ENG, V21, P2503, DOI 10.1007/s10664-015-9414-4
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Ni C, 2019, J SYST SOFTWARE, V152, P215, DOI 10.1016/j.jss.2019.03.012
   Olaechea R, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P92, DOI 10.1145/2648511.2648521
   Ouni A, 2017, INFORM SOFTWARE TECH, V83, P55, DOI 10.1016/j.infsof.2016.11.007
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Ouni A, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1461
   Ouni A, 2013, EUR CON SFTWR MTNCE, P221, DOI 10.1109/CSMR.2013.31
   Ouni A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P347, DOI 10.1109/ICSM.2012.6405292
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Panichella A, 2018, LECT NOTES COMPUT SC, V11036, P309, DOI 10.1007/978-3-319-99241-9_17
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Panichella A, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P15, DOI 10.1109/SST.2015.10
   Panichella A, 2015, IEEE T SOFTWARE ENG, V41, P358, DOI 10.1109/TSE.2014.2364175
   Parejo JA, 2016, J SYST SOFTWARE, V122, P287, DOI 10.1016/j.jss.2016.09.045
   Pascual GG, 2015, J SYST SOFTWARE, V103, P392, DOI 10.1016/j.jss.2014.12.041
   Pradhan D, 2019, INFORM SOFTWARE TECH, V111, P22, DOI 10.1016/j.infsof.2019.03.007
   Pradhan D, 2018, IEEE INT CONF SOFTW, P46, DOI 10.1109/ICST.2018.00015
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Ramirez A, 2019, J SYST SOFTWARE, V149, P382, DOI 10.1016/j.jss.2018.12.015
   Ramírez A, 2016, EMPIR SOFTW ENG, V21, P2546, DOI 10.1007/s10664-015-9399-z
   Ravber M, 2017, APPL SOFT COMPUT, V55, P265, DOI 10.1016/j.asoc.2017.01.038
   Ruparelia N. B., 2010, SIGSOFT Softw. Eng. Notes, V35, P8, DOI DOI 10.1145/1764810.1764814
   Saber T, 2018, INFORM SOFTWARE TECH, V95, P266, DOI 10.1016/j.infsof.2017.08.010
   Sarro F, 2017, IEEE T SOFTWARE ENG, V43, P898, DOI 10.1109/TSE.2017.2650914
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Sayin S, 2000, MATH PROGRAM, V87, P543
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   Sayyad AS, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P22, DOI 10.1109/CMSBSE.2013.6604432
   Sayyad AS, 2013, INT WORK REAL ARTIF, P21, DOI 10.1109/RAISE.2013.6615200
   Schott J.R., 1995, FAULT TOLERANT DESIG, DOI DOI 10.1016/0008-8749(78)90168-5
   Schütze O, 2012, IEEE T EVOLUT COMPUT, V16, P504, DOI 10.1109/TEVC.2011.2161872
   Shahbazi A, 2016, IEEE T SOFTWARE ENG, V42, P361, DOI 10.1109/TSE.2015.2487958
   Shen XN, 2018, INFORM SCIENCES, V428, P1, DOI 10.1016/j.ins.2017.10.041
   Shen XN, 2016, IEEE T SOFTWARE ENG, V42, P658, DOI 10.1109/TSE.2015.2512266
   Shin SY, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P49, DOI 10.1145/3213846.3213852
   Simons CL, 2012, IEEE T SYST MAN CY C, V42, P1797, DOI 10.1109/TSMCC.2012.2225103
   Simons CL, 2010, IEEE T SOFTWARE ENG, V36, P798, DOI 10.1109/TSE.2010.34
   Sobhya D, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110428
   Tan B., IEEE T SERVICES COMP
   Van Veldhuizen D. A., 1998, GEN PROGR C, P221
   Wada H, 2012, IEEE T SERV COMPUT, V5, P358, DOI 10.1109/TSC.2011.6
   Wagner F., 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P234, DOI 10.1109/ICWS.2012.40
   Wagner T, 2010, IEEE T EVOLUT COMPUT, V14, P688, DOI 10.1109/TEVC.2010.2058119
   Wang S, 2016, PROC INT CONF SOFTW, P631, DOI 10.1145/2884781.2884880
   Wang S, 2015, J SYST SOFTWARE, V103, P370, DOI 10.1016/j.jss.2014.08.024
   Wang Z, 2010, IEEE T RELIAB, V59, P563, DOI 10.1109/TR.2010.2057310
   Wen Z, 2004, PROG COMPREHEN, P194, DOI 10.1109/WPC.2004.1311061
   White DR, 2011, IEEE T EVOLUT COMPUT, V15, P515, DOI 10.1109/TEVC.2010.2083669
   Wu F, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1375, DOI 10.1145/2739480.2754648
   Xiang Y, 2020, IEEE T EVOLUT COMPUT, V24, P245, DOI 10.1109/TEVC.2019.2922419
   Xiang Y, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3176644
   Yoo S, 2010, J SYST SOFTWARE, V83, P689, DOI 10.1016/j.jss.2009.11.706
   Zhang GF, 2017, IEEE T RELIAB, V66, P1193, DOI 10.1109/TR.2017.2738660
   Zhang YY, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1129
   Zhang YY, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3196831
   Zhang YY, 2013, INFORM SOFTWARE TECH, V55, P126, DOI 10.1016/j.infsof.2012.03.007
   Zheng W, 2016, INFORM SCIENCES, V334, P1, DOI 10.1016/j.ins.2015.11.027
   Zhou AM, 2006, IEEE C EVOL COMPUTAT, P892
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
   Zitzler E, 1998, LECT NOTES COMPUT SC, V1498, P292, DOI 10.1007/BFb0056872
   Zitzler E, 2007, LECT NOTES COMPUT SC, V4403, P862
   Zou WQ, 2020, IEEE T SOFTWARE ENG, V46, P836, DOI 10.1109/TSE.2018.2870414
NR 154
TC 28
Z9 29
U1 3
U2 35
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2022
VL 48
IS 5
BP 1771
EP 1799
DI 10.1109/TSE.2020.3036108
PG 29
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 1I8CJ
UT WOS:000797454000019
OA Green Submitted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Salman, I
   Rodríguez, P
   Turhan, B
   Tosun, A
   Güreller, A
AF Salman, Iflaah
   Rodriguez, Pilar
   Turhan, Burak
   Tosun, Ayse
   Gureller, Arda
TI What Leads to a Confirmatory or Disconfirmatory Behavior of Software
   Testers?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Software testing; Interviews; Electronic mail; Companies;
   Decision making; Software testing; cognitive biases; confirmation bias;
   grounded theory; interviews
ID BIAS; INTERVIEWS; SATURATION
AB Background: The existing literature in software engineering reports adverse effects of confirmation bias on software testing. Confirmation bias among software testers leads to confirmatory behavior, which is designing or executing relatively more specification consistent test cases (confirmatory behavior) than specification inconsistent test cases (disconfirmatory behavior). Objective: We aim to explore the antecedents to confirmatory and disconfirmatory behavior of software testers. Furthermore, we aim to understand why and how those antecedents lead to (dis)confirmatory behavior. Method: We follow grounded theory method for the analyses of the data collected through semi-structured interviews with twelve software testers. Results: We identified twenty antecedents to (dis)confirmatory behavior, and classified them in nine categories. Experience and Time are the two major categories. Experience is a disconfirmatory category, which also determines which behavior (confirmatory or disconfirmatory) occurs first among software testers, as an effect of other antecedents. Time Pressure is a confirmatory antecedent of the Time category. It also contributes to the confirmatory effects of antecedents of other categories. Conclusion: The disconfirmatory antecedents, especially that belong to the testing process, e.g., test suite reviews by project team members, may help circumvent the deleterious effects of confirmation bias in software testing. If a team's resources permit, the designing and execution of a test suite could be divided among the test team members, as different perspectives of testers may help to detect more errors. The results of our study are based on a single context where dedicated testing teams focus on higher levels of testing. The study's scope does not account for the testing performed by developers. Future work includes exploring other contexts to extend our results.
C1 [Salman, Iflaah; Rodriguez, Pilar; Turhan, Burak] Univ Oulu, M3S Grp, Oulu 90570, Finland.
   [Rodriguez, Pilar] Univ Politecn Madrid, Escuela Tecn Super Ingn Informat, Madrid 28040, Spain.
   [Turhan, Burak] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Tosun, Ayse] Istanbul Tech Univ, Fac Comp & Informat Engn, TR-34467 Istanbul, Turkey.
   [Gureller, Arda] Ericsson, Istanbul, Turkey.
C3 University of Oulu; Universidad Politecnica de Madrid; Monash
   University; Istanbul Technical University; Ericsson Turkey
RP Salman, I (corresponding author), Univ Oulu, M3S Grp, Oulu 90570, Finland.
EM iflaah.salman@oulu.fi; pikr.rodriguez@upm.es; burak.turhan@monash.edu;
   tosunay@itu.edu.tr; arda.gureller@ericsson.com
RI Turhan, Burak/G-7400-2011; Tosun, Ayse/B-4794-2014; Rodriguez,
   Pilar/HSE-9989-2023; Rodriguez, Pilar/C-1449-2015
OI Turhan, Burak/0000-0003-1511-2163; Tosun, Ayse/0000-0003-1859-7872;
   Rodriguez, Pilar/0000-0002-0618-6104
FU Infotech Oulu Doctoral Grant at the University of Oulu
FX The authors would like to thank the participants of the Company-ICT for
   this study; Alper Corlan, Basak Kahraman, Berkay Sertoglu, Cagatay Ince,
   Elif Deniz, Emin Vilgenoglu, Gulden Karakoyun, Ozgul Ozcan, Selda Aydin,
   Sezen Kaya, Sinan Verdi, and Ugur Ozcan. This study was supported in
   part by the Infotech Oulu Doctoral Grant at the University of Oulu to
   Iflaah Salman.
CR [Anonymous], 1998, A Taxonomy of Decision Biases
   [Anonymous], 1982, Debiasing, DOI DOI 10.1017/CBO9780511809477
   Arnott D, 2006, INFORM SYST J, V16, P55, DOI 10.1111/j.1365-2575.2006.00208.x
   Arnott D, 2019, DECIS SUPPORT SYST, V122, DOI 10.1016/j.dss.2019.05.003
   Baltes S., 2020, ACM T SOFTW ENG METH, V21
   Boeije H, 2002, QUAL QUANT, V36, P391, DOI 10.1023/A:1020909529486
   Calikli Gul, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P363, DOI 10.1109/ESEM.2013.47
   Calikli G., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P187, DOI 10.1145/1810295.1810326
   Calikli G., 2010, Proceedings of the 6th International Conference on Predictive Models in Software Engineering, P10
   Calikli G, 2015, SOFTWARE QUAL J, V23, P695, DOI 10.1007/s11219-014-9250-6
   Çalikli G, 2013, SOFTWARE QUAL J, V21, P377, DOI 10.1007/s11219-012-9180-0
   Calikli Gul, 2010, P WORKSH PSYCH PROGR
   Campbell JL, 2013, SOCIOL METHOD RES, V42, P294, DOI 10.1177/0049124113500475
   Causevic A, 2013, LECT NOTES BUS INF P, V149, P91
   Chakraborty S, 2010, J ASSOC INF SYST, V11, P212
   Chametzky B, 2013, GROUNDED THEORY REV, V12
   Conroy P., 2012, P 25 IEEE CAN C EL C, P1
   da Cunha JAOG, 2016, 9TH IEEE/ACM INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2016), P26, DOI [10.1109/CHASE.2016.013, 10.1145/2897586.2897598]
   De Graaf KlaasAndries., 2014, P 2014 ACM S DOCUMEN, P189
   Eisenhardt KM, 2007, ACAD MANAGE J, V50, P25, DOI 10.5465/AMJ.2007.24160888
   Eldh S., 2011, THESIS MALARDALEN U
   Gilovich T., 2002, HEURISTICS BIASES
   Guest G, 2006, FIELD METHOD, V18, P59, DOI 10.1177/1525822X05279903
   Hadar I, 2013, SCI COMPUT PROGRAM, V78, P1407, DOI 10.1016/j.scico.2012.10.006
   Hennink MM, 2017, QUAL HEALTH RES, V27, P591, DOI 10.1177/1049732316665344
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   Jorgensen A. A., 2000, BREAK SOFTWARE
   Jose AdsonOliveira Guedes da Cunha., 2015, 2015 10 IBERIAN C IN, P1, DOI DOI 10.1109/CISTI.2015.7170515
   Kahneman D, 2011, HARVARD BUS REV, V89, P50
   Leventhal L.-M., 1993, Human-Computer Interaction. Third International Conference, EWHCI '93. Selected Papers, P210
   LEVENTHAL LN, 1994, INT J HUM-COMPUT ST, V41, P717, DOI 10.1006/ijhc.1994.1079
   Linssen S, 2018, PROCEEDINGS OF THE 51ST ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES (HICSS), P4835
   Mohanani R, 2020, IEEE T SOFTWARE ENG, V46, P1318, DOI 10.1109/TSE.2018.2877759
   Nickerson R. S., 1998, REV GEN PSYCHOL, V2, P175, DOI DOI 10.1037/1089-2680.2.2.175
   Novick G, 2008, RES NURS HEALTH, V31, P391, DOI 10.1002/nur.20259
   Paetsch F, 2003, TWELFTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P308
   Ralph P, 2013, 2013 2ND SEMAT WORKSHOP ON A GENERAL THEORY OF SOFTWARE ENGINEERING (GTSE), P35, DOI 10.1109/GTSE.2013.6613868
   Ralph P, 2011, LECT NOTES BUS INF P, V93, P92
   Salman I., 2019, THESIS U OULU OULU
   Salman I, 2019, EMPIR SOFTW ENG, V24, P1727, DOI 10.1007/s10664-018-9668-8
   Smith ED, 2007, SYSTEMS ENG, V10, P222, DOI 10.1002/sys.20072
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   TEASLEY BE, 1994, J APPL PSYCHOL, V79, P142, DOI 10.1037/0021-9010.79.1.142
   TVERSKY A, 1974, SCIENCE, V185, P1124, DOI 10.1126/science.185.4157.1124
   Urquhart C., 2013, Grounded Theory for Qualitative Research: A PracticalGuide
NR 45
TC 5
Z9 5
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2022
VL 48
IS 4
BP 1351
EP 1368
DI 10.1109/TSE.2020.3019892
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 0N4HC
UT WOS:000782799700014
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Rodríguez, P
   Urquhart, C
   Mendes, E
AF Rodriguez, Pilar
   Urquhart, Cathy
   Mendes, Emilia
TI A Theory of Value for Value-Based Feature Selection in Software
   Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Feature extraction; Stakeholders; Companies; Decision making;
   Software engineering; Planning; Value-based software engineering (VBSE);
   value proposition; decision-making criteria; grounded-theory; theory
   development; feature selection; release planning; requirements
   engineering; decision-making; decision-making theory; software value;
   software products; software-intensive systems
ID PRODUCT VALUE; GENERAL-THEORY; CONTEXT; GENERALIZABILITY; MANAGEMENT;
   KING
AB Value-Based Software Engineering stresses the role of value in software related decisions. In the context of feature selection, software features judged to provide higher value take priority in the development process. This paper focuses on what value means when selecting software features. Using grounded theory, we conducted and analyzed semi-structured interviews with 21 key stakeholders (decision-makers) from three software/software-intensive companies, within a context where value-based decision-making was already established. Our analysis led to the building of a theory of value for value-based feature selection that identifies the nature of value propositions considered by key stakeholders when selecting software features (i.e., decision-making criteria for deciding upon software features, as suggested by Boehm (2003)). We found that some value propositions were common to all three company cases (core value propositions), whereas others were dependent upon the context in which a company operates, and the characteristics of the product under development (specific value propositions). Moreover, value propositions vary according to the stakeholder group and the type of feature being assessed. Our study provides significant insight into value in the context of feature selection, and generates new concepts around value-based feature selection such as new value propositions.
C1 [Rodriguez, Pilar] Univ Oulu, Grp M3S, Oulu 90570, Finland.
   [Urquhart, Cathy] Manchester Metropolitan Univ, Fac Business & Law, Manchester M15 6BH, Lancs, England.
   [Mendes, Emilia] Blekinge Inst Technol, Dept Comp Sci & Engn, S-37141 Karlskrona, Sweden.
C3 University of Oulu; Manchester Metropolitan University; Blekinge
   Institute Technology
RP Rodríguez, P (corresponding author), Univ Oulu, Grp M3S, Oulu 90570, Finland.
EM pilar.rodriguez@oulu.fi; c.urquhart@mmu.ac.uk; emilia.mendes@bth.se
RI Mendes, Maria E/B-4207-2015; Urquhart, Cathy/HLQ-1865-2023; Rodriguez,
   Pilar/HSE-9989-2023; Rodriguez, Pilar/C-1449-2015
OI Rodriguez, Pilar/0000-0002-0618-6104; Mendes, Emilia/0000-0003-0449-5322
FU Tekes (the Finnish Funding Agency for Technology and Innovation)
   [40150/14]
FX We would like to thank the companies that collaborated with us for its
   commitment and in-kind time. This research has been carried out within
   the FiDiPro project number 40150/14, which was funded by Tekes (the
   Finnish Funding Agency for Technology and Innovation).
CR Achimugu P, 2014, INFORM SOFTWARE TECH, V56, P568, DOI 10.1016/j.infsof.2014.02.001
   Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   Alahyari H, 2017, J SYST SOFTWARE, V125, P271, DOI 10.1016/j.jss.2016.12.007
   Asadi M., 2012, Software Product Line ., VII, P36
   Barney S, 2008, J SYST ARCHITECT, V54, P576, DOI 10.1016/j.sysarc.2007.12.004
   Barney S, 2006, EUROMICRO CONF PROC, P274, DOI 10.1109/EUROMICRO.2006.51
   Barney S, 2009, IEEE SOFTWARE, V26, P84, DOI 10.1109/MS.2009.89
   Basili VR, 1996, PROC INT CONF SOFTW, P442, DOI 10.1109/ICSE.1996.493439
   Biffl S., 2005, Value-Based Software Engineering
   Bjarnason E, 2016, INFORM SOFTWARE TECH, V70, P204, DOI 10.1016/j.infsof.2015.05.004
   Boehm B., 2003, MONITORING CONTROL S, V28
   Boehm B.W., 1981, Software engineering economics, V197
   Boehm B, 2006, VALUE-BASED SOFTWARE ENGINEERING, P15, DOI 10.1007/3-540-29263-2_2
   BOEHM BW, 1989, IEEE T SOFTWARE ENG, V15, P902, DOI 10.1109/32.29489
   Briand L, 2017, IEEE SOFTWARE, V34, P72, DOI 10.1109/MS.2017.3571562
   Bryant A., 2002, J INFORM TECHNOLOGY, V4, P25
   Charmaz K., 2014, Introducing Qualitative Methods
   Cheng Z, 2016, J INF TECHNOL-UK, V31, P257, DOI 10.1057/s41265-016-0005-7
   Dahlstedt AsaG., 2003, 9th International Workshop on Requirements Engineering Foundation for Software Quality REFSQ03, P55
   Davison RM, 2016, J INF TECHNOL-UK, V31, P241, DOI 10.1057/jit.2015.19
   Day E., 2000, J CONSUMER SATISFACT, V13, P52
   Eisenhardt KM, 2007, ACAD MANAGE J, V50, P25, DOI 10.5465/AMJ.2007.24160888
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Garousi V, 2016, COMPUT SCI REV, V19, P56, DOI 10.1016/j.cosrev.2015.12.002
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Glaser B.G., 2005, The Grounded Theory Perspective III: Theoretical Coding
   Glaser B. G., 1978, [No title captured]
   Glaser B.G., 2008, Doing quantitative grounded theory
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Gregor S, 2006, MIS QUART, V30, P611
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   Hu G., 2006, P ACIS
   Jan N., 2010, THESIS BLEKINGE I TE
   Johnson P., 2012, IEEE Software, V29, P94, DOI 10.1109/MS.2012.127
   Johnson P., 2005, GRAND UNIFIED THEORY
   Johnson P, 2016, INFORM SOFTWARE TECH, V70, P181, DOI 10.1016/j.infsof.2015.06.001
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Khurum M, 2013, J SOFTW-EVOL PROC, V25, P711, DOI 10.1002/smr.1560
   Latha T. Jessie, 2015, International Journal of Business Information Systems, V18, P26, DOI 10.1504/IJBIS.2015.066125
   Levina N, 2003, MIS QUART, V27, P331
   Lindgren M, 2008, LECT NOTES COMPUT SC, V5089, P117, DOI 10.1007/978-3-540-69566-0_12
   Marshall MN, 1996, FAM PRACT, V13, P522, DOI 10.1093/fampra/13.6.522
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   McCallin Antoinette, 2003, Contemp Nurse, V15, P61
   Mendes E., 2015, P ACM 11 INT C PRED
   Mendes E, 2018, SOFTWARE QUAL J, V26, P607, DOI 10.1007/s11219-017-9360-z
   Mougouei D, 2016, IEEE INT CONF AUTOM, P884, DOI 10.1145/2970276.2975936
   Oates B. J., 2006, Researching information systems and computing
   OJALA P, 2006, THESIS U OULU
   Payne A, 2014, J SERV MANAGE, V25, P213, DOI 10.1108/JOSM-01-2014-0036
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Porter Mu., 1985, Competitive Advantage: Creating and Sustaining Superior Performance
   Riegel Norman, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P268, DOI 10.1007/978-3-319-05843-6_20
   Riegel N., 2013, P REFSQ WORKSH, P133
   Rodriguez P, 2020, IEEE T SOFTWARE ENG, V46, P1340, DOI 10.1109/TSE.2018.2878031
   Rodríguez P, 2014, P ANN HICSS, P4770, DOI 10.1109/HICSS.2014.586
   Rodríguez P, 2012, INT SYMP EMP SOFTWAR, P139, DOI 10.1145/2372251.2372275
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Salleh N, 2019, EUROMICRO CONF PROC, P404, DOI 10.1109/SEAA.2019.00067
   Schwandt Thomas A., 1997, QUAL INQ
   Sedano T, 2017, PROC INT CONF SOFTW, P130, DOI 10.1109/ICSE.2017.20
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Svahnberg M, 2010, INFORM SOFTWARE TECH, V52, P237, DOI 10.1016/j.infsof.2009.11.006
   Urquhart C., 2013, Grounded Theory for Qualitative Research: A PracticalGuide
   Urquhart C, 2013, J INF TECHNOL-UK, V28, P224, DOI 10.1057/jit.2012.34
   Usman M., 2014, PROMISE '14: Proceedings of the 10th International Conference on Predictive Models in Software Engineering, page, P82
   van den Akker M, 2008, INFORM SOFTWARE TECH, V50, P101, DOI 10.1016/j.infsof.2007.10.017
   Weinstein A., 1999, DESIGNING DELIVERING
   Welter F, 2011, ENTREP THEORY PRACT, V35, P165, DOI 10.1111/j.1540-6520.2010.00427.x
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Wnuk K., 2015, P KKIO
   Wohlin C, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P237, DOI 10.1109/ISESE.2005.1541833
   Wohlin C, 2006, VALUE-BASED SOFTWARE ENGINEERING, P179, DOI 10.1007/3-540-29263-2_9
   Wohlin C, 2015, J SYST SOFTWARE, V109, P229, DOI 10.1016/j.jss.2015.08.009
   Yin R. K., 2009, CASE STUDY RES DESIG, V4th ed.
NR 77
TC 7
Z9 7
U1 2
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2022
VL 48
IS 2
BP 466
EP 484
DI 10.1109/TSE.2020.2989666
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA ZB4EB
UT WOS:000756796100007
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Chen, HW
   Jing, XY
   Li, ZQ
   Wu, D
   Peng, Y
   Huang, ZG
AF Chen, Haowen
   Jing, Xiao-Yuan
   Li, Zhiqiang
   Wu, Di
   Peng, Yi
   Huang, Zhiguo
TI An Empirical Study on Heterogeneous Defect Prediction Approaches
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Measurement; NASA; Predictive models; Data models; Software quality;
   Heterogeneous defect prediction; cross-project; empirical study; metric
   selection; metric transformation
ID KERNEL; MODELS; CODE; MACHINE; FAULTS
AB Software defect prediction has always been a hot research topic in the field of software engineering owing to its capability of allocating limited resources reasonably. Compared with cross-project defect prediction (CPDP), heterogeneous defect prediction (HDP) further relaxes the limitation of defect data used for prediction, permitting different metric sets to be contained in the source and target projects. However, there is still a lack of a holistic understanding of existing HDP studies due to different evaluation strategies and experimental settings. In this paper, we provide an empirical study on HDP approaches. We review the research status systematically and compare the HDP approaches proposed from 2014 to June 2018. Furthermore, we also investigate the feasibility of HDP approaches in CPDP. Through extensive experiments on 30 projects from five datasets, we have the following findings: (1) metric transformation-based HDP approaches usually result in better prediction effects, while metric selection-based approaches have better interpretability. Overall, the HDP approach proposed by Li et al. (CTKCCA) currently has the best performance. (2) Handling class imbalance problems can boost the prediction effects, but the improvements are usually limited. In addition, utilizing mixed project data cannot improve the performance of HDP approaches consistently since the label information in the target project is not used effectively. (3) HDP approaches are feasible for cross-project defect prediction in which the source and target projects have the same metric set.
C1 [Chen, Haowen; Jing, Xiao-Yuan; Wu, Di; Peng, Yi; Huang, Zhiguo] Wuhan Univ, Sch Comp Sci, Wuhan 430072, Peoples R China.
   [Jing, Xiao-Yuan] Guangdong Univ Petrochem Technol, Sch Comp, Maoming 525000, Peoples R China.
   [Jing, Xiao-Yuan] Nanjing Univ Posts & Telecommun, Coll Automat, Nanjing 210023, Peoples R China.
   [Li, Zhiqiang] Shaanxi Normal Univ, Sch Comp Sci, Xian 710119, Peoples R China.
C3 Wuhan University; Guangdong University of Petrochemical Technology;
   Nanjing University of Posts & Telecommunications; Shaanxi Normal
   University
RP Jing, XY (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan 430072, Peoples R China.; Jing, XY (corresponding author), Guangdong Univ Petrochem Technol, Sch Comp, Maoming 525000, Peoples R China.; Li, ZQ (corresponding author), Shaanxi Normal Univ, Sch Comp Sci, Xian 710119, Peoples R China.
EM hwc_zzu@126.ccm; jingxy_2000@126.com; lzq115@163.com; wudidi@whu.edu.cn;
   hbyspy2008@qq.com; huang_906@126.ccm
RI He, Chen/JLM-5059-2023; liang, shuang/JOK-5869-2023; zheng,
   hao/JQI-4215-2023; LEE, YU/JXY-2338-2024; Wu, Di/GXG-3795-2022
OI Wu, Di/0000-0003-1096-7074; Chen, Haowen/0000-0002-9255-6772
FU NSFC-Key Project [61933013]; NSFC-Key Project of General Technology
   Fundamental Research United Fund [U1736211]; Natural Science Foundation
   of Guangdong Province [2019A1515011076]; Key Project ofNatural Science
   Foundation ofHubei Province [2018CFA024]; Innovation Group of Guangdong
   Education Department [2018KCXTD019]; National Natural Science Foundation
   of China [61902228]; Fundamental Research Funds for the Central
   Universities [GK201903086]
FX The authors would like to thank the editors and anonymous reviewers for
   their constructive comments and suggestions. This work was supported by
   the NSFC-Key Project under Grant No. 61933013, the NSFC-Key Project of
   General Technology Fundamental Research United Fund under Grant No.
   U1736211, the Natural Science Foundation of Guangdong Province under
   Grant No. 2019A1515011076, the Key Project ofNatural Science Foundation
   ofHubei Province under Grant No. 2018CFA024, the Innovation Group of
   Guangdong Education Department under Grant NO. 2018KCXTD019, the
   National Natural Science Foundation of China under Grant No. 61902228
   and the Fundamental Research Funds for the Central Universities under
   Grant No. GK201903086. The first authors are Haowen Chen and Xiao-Yuan
   Jing.
CR [Anonymous], P 30 IEEE ACM INT C
   Bach FR, 2003, J MACH LEARN RES, V3, P1, DOI 10.1162/153244303768966085
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Belhumeur PN, 1997, IEEE T PATTERN ANAL, V19, P711, DOI 10.1109/34.598228
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Canfora G, 2015, SOFTW TEST VERIF REL, V25, P426, DOI 10.1002/stvr.1570
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   Cheng M., 2016, P 28 INT C SOFTW ENG, P171
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Day Oscar, 2017, Journal of Big Data, V4, DOI 10.1186/s40537-017-0089-0
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   Friedman M, 1940, ANN MATH STAT, V11, P86, DOI 10.1214/aoms/1177731944
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Guyon Isabelle, 2003, J MACH LEARN RES, V3, P1157, DOI DOI 10.1162/153244303322753616
   Hardoon DR, 2004, NEURAL COMPUT, V16, P2639, DOI 10.1162/0899766042321814
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   He P., 2014, ARXIV14114228
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Herbold S, 2017, IEEE T SOFTWARE ENG, V43, P1091, DOI 10.1109/TSE.2017.2748129
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Jing XY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P414, DOI 10.1145/2568225.2568320
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Lai PL, 2000, IEEE IJCNN, P614
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li M, 2012, AUTOMAT SOFTW ENG, V19, P201, DOI 10.1007/s10515-011-0092-1
   Li ZQ, 2019, IEEE T SOFTWARE ENG, V45, P391, DOI 10.1109/TSE.2017.2780222
   Li ZQ, 2018, AUTOMAT SOFTW ENG, V25, P201, DOI 10.1007/s10515-017-0220-7
   Li ZQ, 2018, SOFTW TEST VERIF REL, V28, DOI 10.1002/stvr.1658
   Li ZQ, 2017, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2017.19
   Liu XY, 2013, IMBALANCED LEARNING: FOUNDATIONS, ALGORITHMS, AND APPLICATIONS, P61
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   NACHIAPPAN N, 2005, P 27 INT C SOFTW ENG, P284
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Peters F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P801, DOI 10.1109/ICSE.2015.92
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   TANTITHAMTHAVOR.C, 2016, PROC INT CONF SOFTW, P321, DOI DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, IEEE T SOFTWARE ENG, V42, P1092, DOI 10.1109/TSE.2016.2553030
   Tsai YHH, 2016, INT CONF ACOUST SPEE, P2842, DOI 10.1109/ICASSP.2016.7472196
   Turhan B, 2013, INFORM SOFTWARE TECH, V55, P1101, DOI 10.1016/j.infsof.2012.10.003
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wang TJ, 2016, SOFTW TEST VERIF REL, V26, P498, DOI 10.1002/stvr.1610
   Wang TJ, 2016, AUTOMAT SOFTW ENG, V23, P569, DOI 10.1007/s10515-015-0179-1
   Weiss Karl, 2016, Journal of Big Data, V3, DOI 10.1186/s40537-016-0043-6
   Weston J., 2003, Journal of Machine Learning Research, V3, P1439, DOI 10.1162/153244303322753751
   Wu F, 2018, IEEE T RELIAB, V67, P581, DOI 10.1109/TR.2018.2804922
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   You D, 2011, IEEE T PATTERN ANAL, V33, P631, DOI 10.1109/TPAMI.2010.173
   Yu Q, 2017, J SYST SOFTWARE, V132, P366, DOI 10.1016/j.jss.2017.06.070
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zhang ZW, 2017, AUTOMAT SOFTW ENG, V24, P47, DOI 10.1007/s10515-016-0194-x
   Zhou DY, 2004, ADV NEUR IN, V16, P321
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 78
TC 36
Z9 37
U1 1
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2021
VL 47
IS 12
BP 2803
EP 2822
DI 10.1109/TSE.2020.2968520
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XM6HB
UT WOS:000728924600010
DA 2024-07-18
ER

PT J
AU Zhang, L
   Morin, B
   Haller, P
   Baudry, B
   Monperrus, M
AF Zhang, Long
   Morin, Brice
   Haller, Philipp
   Baudry, Benoit
   Monperrus, Martin
TI A Chaos Engineering System for Live Analysis and Falsification of
   Exception-Handling in the JVM
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Chaos; Production; Perturbation methods; Resilience; Measurement;
   Monitoring; Java; Dynamic analysis; exception-handling; production
   systems; chaos engineering
ID FAULT INJECTION
AB Software systems contain resilience code to handle those failures and unexpected events happening in production. It is essential for developers to understand and assess the resilience of their systems. Chaos engineering is a technology that aims at assessing resilience and uncovering weaknesses by actively injecting perturbations in production. In this paper, we propose a novel design and implementation of a chaos engineering system in Java called ChaosMachine. It provides a unique and actionable analysis on exception-handling capabilities in production, at the level of try-catch blocks. To evaluate our approach, we have deployed ChaosMachine on top of 3 large-scale and well-known Java applications totaling 630k lines of code. Our results show that ChaosMachine reveals both strengths and weaknesses of the resilience code of a software system at the level of exception handling.
C1 [Zhang, Long; Haller, Philipp; Baudry, Benoit; Monperrus, Martin] KTH Royal Inst Technol, S-11428 Stockholm, Sweden.
   [Morin, Brice] SINTEF, NO-7465 Trondheim, Norway.
C3 Royal Institute of Technology; SINTEF
RP Zhang, L (corresponding author), KTH Royal Inst Technol, S-11428 Stockholm, Sweden.
EM longz@kth.se; brice.morin@sintef.no; phaller@kth.se; baudry@kth.se;
   martin.monperrus@csc.kth.se
RI Haller, Philipp/GWZ-7695-2022; Monperrus, Martin/I-3640-2012
OI Haller, Philipp/0000-0002-2659-5271; Monperrus,
   Martin/0000-0003-3505-3383; Zhang, Long/0000-0002-7211-3894; Baudry,
   Benoit/0000-0002-4015-4640
FU Wallenberg AI, Autonomous Systems and Software Program (WASP) - Knut and
   AliceWallenberg Foundation
FX This work was partially supported by the Wallenberg AI, Autonomous
   Systems and Software Program (WASP) funded by the Knut and
   AliceWallenberg Foundation.
CR Allspaw J, 2012, COMMUN ACM, V55, P48, DOI [10.1145/2347736.2347751, 10.1145/2347738.2347751]
   Alvaro P, 2016, PROCEEDINGS OF THE SEVENTH ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC 2016), P17, DOI 10.1145/2987550.2987555
   Alvaro Peter, 2017, QUEUE, V15, P10, DOI DOI 10.1145/3155112
   [Anonymous], 2008, WILEY ONLINE LIB
   ARLAT J, 1990, IEEE T SOFTWARE ENG, V16, P166, DOI 10.1109/32.44380
   BARTON JH, 1990, IEEE T COMPUT, V39, P575, DOI 10.1109/12.54853
   Basiri A, 2016, IEEE SOFTWARE, V33, P35, DOI 10.1109/MS.2016.60
   Bruntink M., 2006, 28th International Conference on Software Engineering Proceedings, P242, DOI 10.1145/1134285.1134320
   Chang BM, 2016, INFORM SOFTWARE TECH, V77, P1, DOI 10.1016/j.infsof.2016.05.003
   Chang MA, 2015, ACM SIGCOMM COMP COM, V45, P371, DOI 10.1145/2829988.2790038
   Cornu B, 2015, INFORM SOFTWARE TECH, V57, P66, DOI 10.1016/j.infsof.2014.08.004
   Cotroneo D, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P200, DOI 10.1145/3338906.3338916
   CZECK EW, 1992, IEEE T COMPUT, V41, P559, DOI 10.1109/12.142682
   Dean J, 2008, COMMUN ACM, V51, P107, DOI 10.1145/1327452.1327492
   Duraes J, 2004, LECT NOTES COMPUT SC, V3219, P297
   Fu C, 2007, PROC INT CONF SOFTW, P230
   Ghidei Y., 2019, THESIS SCH ELECT ENG
   Ghosh S, 2008, J SYST SOFTWARE, V81, P2034, DOI 10.1016/j.jss.2008.02.047
   Gunawi H. S., 2011, UCBEECS201187 EECS D
   Herscheid L, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P1, DOI 10.1109/QRS.2015.12
   Hyosoon Lee, 2000, Proceedings Fourth International Conference/Exhibition on High Performance Computing in the Asia-Pacific Region, P410, DOI 10.1109/HPC.2000.846589
   Izrailevsky Yury, 2011, NETFLIX SIMIAN ARMY
   Johnson Rod, 2005, PROFESSIONAL JAVA DE
   KANAWATI GA, 1992, FTCS-22 : THE TWENTY-SECOND INTERNATIONAL SYMPOSIUM ON FAULT-TOLERANT COMPUTING, P336
   Kanoun K., 2005, P 5 EUR DEP COMP C
   KAO WL, 1993, IEEE T SOFTWARE ENG, V19, P1105, DOI 10.1109/32.256857
   LEESATAPORNWONGSA T., 2014, P ACM S CLOUD COMP
   Marinescu PD, 2011, ACM T COMPUT SYST, V29, DOI 10.1145/2063509.2063511
   Martins AL, 2014, 2014 38TH ANNUAL IEEE INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE WORKSHOPS (COMPSACW 2014), P626, DOI 10.1109/COMPSACW.2014.105
   Montrucchio B, 2014, INT SYM DEFEC FAU TO, P281, DOI 10.1109/DFT.2014.6962080
   Nakama Heather, 2015, INSIDE AZURE SEARCH
   Natella R, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2841425
   Parrish K., 2015, TOO BIG TEST BREAKIN
   Rinard M., 2014, P 6 C S OP SYST DES, P21
   Rosenthal Casey., 2017, CHAOS ENG BUILDING C
   Sangroya A., 2015, INT C SERV OR COMP, P207
   Sangroya A, 2016, PERFORM EVALUATION, V101, P1, DOI 10.1016/j.peva.2016.04.001
   Schermann G, 2018, INFORM SOFTWARE TECH, V99, P41, DOI 10.1016/j.infsof.2018.02.010
   Segall Z., 1988, Eighteenth International Symposium on Fault-Tolerant Computing. Digest of Papers. FTCS-18 (Cat. No.88CH2543-7), P102, DOI 10.1109/FTCS.1988.5306
   Seungjae Han, 1995, Proceedings. International Computer Performance and Dependability Symposium (Cat. No.95TH8034), P204, DOI 10.1109/IPDS.1995.395831
   Sheridan C., 2016, P 2 INT WORKSH QUAL, P36
   Yuan Ding, 2014, 11 USENIX S OPERATIN, P249
   Zhang PY, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2652483
NR 43
TC 11
Z9 11
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2021
VL 47
IS 11
BP 2534
EP 2548
DI 10.1109/TSE.2019.2954871
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WW2QE
UT WOS:000717767100014
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, YX
   Zhou, MH
   Mockus, A
   Jin, Z
AF Zhang, Yuxia
   Zhou, Minghui
   Mockus, Audris
   Jin, Zhi
TI Companies' Participation in OSS Development-An Empirical Study of
   OpenStack
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Companies; Ecosystems; Biological system modeling; Software; Cloud
   computing; Linux; Open source ecosystem; software development;
   commercial participation; contribution extent; contribution intensity;
   contribution focus
ID OPEN INNOVATION; FREE SOFTWARE; COMMUNITY; BUSINESS
AB Commercial participation continues to grow in open source software (OSS) projects and novel arrangements appear to emerge in company-dominated projects and ecosystems. What is the nature of these novel arrangements? Does volunteers' participation remain critical for these ecosystems? Despite extensive research on commercial participation in OSS, the exact nature and extent of company contributions to OSS development, and the impact of this engagement may have on the volunteer community have not been clarified. To bridge the gap, we perform an exploratory study of OpenStack: a large OSS ecosystem with intense commercial participation. We quantify companies' contributions via the developers that they provide and the commits made by those developers. We find that companies made far more contributions than volunteers and the distribution of the contributions made by different companies is also highly unbalanced. We observe eight unique contribution models based on companies' commercial objectives and characterize each model according to three dimensions: contribution intensity, extent, and focus. Companies providing full cloud solutions tend to make both intensive (more than other companies) and extensive (involving a wider variety of projects) contributions. Usage-oriented companies make extensive but less intense contributions. Companies driven by particular business needs focus their contributions on the specific projects addressing these needs. Minor contributors include community players (e.g., the Linux Foundation) and research groups. A model relating the number of volunteers to the diversity of contribution shows a strong positive association between them.
C1 [Zhang, Yuxia; Zhou, Minghui; Jin, Zhi] Peking Univ, Minist Educ, Key Lab High Confidence Software Technol, Beijing 100871, Peoples R China.
   [Zhang, Yuxia; Zhou, Minghui; Jin, Zhi] Peking Univ, Dept Comp Sci & Technol, Beijing 100871, Peoples R China.
   [Mockus, Audris] Univ Tennessee, Dept Elect Engn & Comp Sci, Knoxville, TN 37996 USA.
C3 Peking University; Peking University; University of Tennessee System;
   University of Tennessee Knoxville
RP Zhou, MH (corresponding author), Peking Univ, Minist Educ, Key Lab High Confidence Software Technol, Beijing 100871, Peoples R China.; Zhou, MH (corresponding author), Peking Univ, Dept Comp Sci & Technol, Beijing 100871, Peoples R China.
EM yuxiaz@pku.edu.cn; zhmh@pku.edu.cn; audris@utk.edu; zhijin@pku.edu.cn
RI Yang, Bo/JTS-4309-2023; Jin, Zhi/E-1288-2013; zheng, yi/JOZ-7204-2023;
   wang, qiang/IZW-1751-2023; Mockus, Audris/AEY-3361-2022
OI Jin, Zhi/0000-0003-1087-226X; Zhou, Minghui/0000-0001-6324-3964
FU National Basic Research Program of China [2015CB352200]; National
   Natural Science Foundation of China [61432001, 61825201, 61690200,
   1633437]
FX We would like to thank the contributors in OpenStack for their valuable
   feedback on this study. We also thank the reviewers for their great
   suggestions. This work is supported by the National Basic Research
   Program of China Grant 2015CB352200, the National Natural Science
   Foundation of China Grants 61432001, 61825201, and 61690200 and the
   National Science FoundationAward 1633437.
CR Amreen S, 2020, EMPIR SOFTW ENG, V25, P1136, DOI 10.1007/s10664-019-09786-7
   [Anonymous], 2001, P 18 INT C MACH LEAR
   Barcomb A, 2020, IEEE T SOFTWARE ENG, V46, P962, DOI 10.1109/TSE.2018.2872713
   Bird C., 2007, 4 INT WORKSHOP MININ, P26
   Bird Christian, 2006, P MSR, P137, DOI DOI 10.1145/1137983.1138016
   Bonaccorsi A., 2006, Knowledge Technology & Policy, V18, P40, DOI 10.1007/s12130-006-1003-9
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Butler S, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P201, DOI 10.1145/3183519.3183531
   Capek PG, 2005, IBM SYST J, V44, P249, DOI 10.1147/sj.442.0249
   Capiluppi A, 2007, INT FED INFO PROC, V234, P31
   CROWSTON K., 2005, SYSTEM SCI, p197a
   Crowston K, 2008, J DATABASE MANAGE, V19, P1, DOI 10.4018/jdm.2008040101
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Daffara C., 2007, P WORKSH PRES 3 C OP
   Dahlander L, 2005, RES POLICY, V34, P481, DOI 10.1016/j.respol.2005.02.003
   Dahlander L, 2006, RES POLICY, V35, P1243, DOI 10.1016/j.respol.2006.09.011
   Dahlander L, 2008, LONG RANGE PLANN, V41, P629, DOI 10.1016/j.lrp.2008.09.003
   Elmqvist T, 2003, FRONT ECOL ENVIRON, V1, P488, DOI 10.2307/3868116
   Feller J., 2002, Understanding Open Source Software development
   GASTWIRTH JL, 1971, ECONOMETRICA, V39, P1037, DOI 10.2307/1909675
   Gini C., 1936, COLORADO COLL PUBLIC, V208, P73
   Glisczinski D, 2018, J TRANSFORM EDUC, V16, P175, DOI 10.1177/1541344618777367
   Goeminne M., 2011, JOINT PORCEEDINGS 1, P74
   Goeminne M, 2013, SCI COMPUT PROGRAM, V78, P971, DOI 10.1016/j.scico.2011.11.004
   Gonzalez-Barahona JM, 2013, IT-INF TECHNOL, V55, P173, DOI 10.1515/itit.2013.1012
   Gonzalez-Barahona JM, 2013, IEEE SOFTWARE, V30, P38, DOI 10.1109/MS.2013.95
   Harhoff D, 2003, RES POLICY, V32, P1753, DOI 10.1016/S0048-7333(03)00061-1
   HARRISON W, 1992, IEEE T SOFTWARE ENG, V18, P1025, DOI 10.1109/32.177371
   Hecker F, 1999, IEEE SOFTWARE, V16, P45, DOI 10.1109/52.744568
   Henkel J, 2006, RES POLICY, V35, P953, DOI 10.1016/j.respol.2006.04.010
   Ho SY, 2017, INFORM SYST RES, V28, P603, DOI 10.1287/isre.2016.0687
   Homescu A, 2017, IEEE T DEPEND SECURE, V14, P158, DOI 10.1109/TDSC.2015.2433252
   Iansiti Marco, 2004, The keystone advantage: What the new dynamics of business ecosystems mean for strategy, innovation, and sustainability
   Izquierdo D, 2019, IEEE SOFTWARE, V36, P28, DOI 10.1109/MS.2018.2874322
   Johnson VE, 2013, P NATL ACAD SCI USA, V110, P19313, DOI 10.1073/pnas.1313476110
   Jonathan Corbet, 2017, 2017 Linux Kernel Development Report
   Konietschke F, 2012, ELECTRON J STAT, V6, P738, DOI 10.1214/12-EJS691
   Kouters E, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P592, DOI 10.1109/ICSM.2012.6405329
   Lee V., 2012, FIRMS CAN STRATEGICA
   Lerner J, 2002, J IND ECON, V50, P197, DOI 10.1111/1467-6451.00174
   Lin B, 2017, INT CONF GLOBAL SOFT, P66, DOI 10.1109/ICGSE.2017.11
   LIN JH, 1991, IEEE T INFORM THEORY, V37, P145, DOI 10.1109/18.61115
   Linåker J, 2016, LECT NOTES COMPUT SC, V9619, P63, DOI 10.1007/978-3-319-30282-9_5
   Ma XJ, 2013, SCI CHINA INFORM SCI, V56, DOI 10.1007/s11432-013-4914-6
   Mens T, 2015, COMPUTER, V48, P85, DOI 10.1109/MC.2015.298
   Mockus Audris., 2014, Proceedings of the on Future of Software Engineering, P85, DOI 10.1145/2593882.2593889
   Morgan L, 2014, J STRATEGIC INF SYST, V23, P226, DOI 10.1016/j.jsis.2014.07.001
   Munga N., 2009, P 2009 ANN RES C S A, P112, DOI DOI 10.1145/1632149.1632165
   Oh W, 2007, MANAGE SCI, V53, P1086, DOI 10.1287/mnsc.1060.0623
   Onoue S, 2016, IEICE T INF SYST, VE99D, P1304, DOI 10.1587/transinf.2015EDP7363
   Pepple Ken, 2011, Deploying openstack
   Perry DE, 2004, PROC INT CONF SOFTW, P736, DOI 10.1109/ICSE.2004.1317512
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Roberts JA, 2006, MANAGE SCI, V52, P984, DOI 10.1287/mnsc.1060.0554
   Robles G., 2005, INT C SOFTW ENG P 20, P1, DOI DOI 10.1145/1082983.1083162
   Robles Gregorio., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P222
   Rossi Cristina., 2005, Proceedings of the fifth workshop on Open source software engineering, P1
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sako M, 2018, COMMUN ACM, V61, P20, DOI 10.1145/3185780
   Sarawagi Sunita, 2002, P 8 ACM SIGKDD INT C, P269, DOI DOI 10.1145/775047.775087
   Shah SK, 2006, MANAGE SCI, V52, P1000, DOI 10.1287/mnsc.1060.0553
   SHANNON CE, 1948, BELL SYST TECH J, V27, P379, DOI 10.1002/j.1538-7305.1948.tb01338.x
   Singh VB, 2018, IEEE T SOFTWARE ENG, V44, P1207, DOI 10.1109/TSE.2017.2766070
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Teixeira J., 2016, P INT C INF SYST
   Teixeira J. A., 2018, P EUR C INF LIT, P201
   Teixeira JA, 2019, J INTERNET SERV APPL, V10, DOI 10.1186/s13174-019-0105-z
   Temizkan O, 2017, INFORM SYST RES, V28, P828, DOI 10.1287/isre.2017.0722
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Vasilescu B, 2014, EMPIR SOFTW ENG, V19, P955, DOI 10.1007/s10664-013-9244-1
   Wagstrom P., 2010, P AC MAN ANN M MONTR
   West J, 2006, R&D MANAGE, V36, P319, DOI 10.1111/j.1467-9310.2006.00436.x
   Whitehead D, 2003, J ADV NURS, V44, P108, DOI 10.1046/j.1365-2648.2003.02790_1.x
   Yamane T., 1973, STAT INTRO ANAL
   Yin R.K., 2014, Applications of case study research, V2nd
   Zhang YX, 2018, PROC IEEE ACM INT C, P440, DOI 10.1145/3183440.3195047
   Zhou MH, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P27, DOI 10.1145/3106237.3106287
   Zhou MH, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2876443
   Zhou MH, 2015, IEEE T SOFTWARE ENG, V41, P82, DOI 10.1109/TSE.2014.2349496
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
   Zhou MH, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P271, DOI 10.1145/1985793.1985831
NR 82
TC 28
Z9 31
U1 4
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2021
VL 47
IS 10
BP 2242
EP 2259
DI 10.1109/TSE.2019.2946156
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA WH1IX
UT WOS:000707441900012
OA hybrid
DA 2024-07-18
ER

PT J
AU Kochhar, PS
   Kalliamvakou, E
   Nagappan, N
   Zimmermann, T
   Bird, C
AF Kochhar, Pavneet Singh
   Kalliamvakou, Eirini
   Nagappan, Nachiappan
   Zimmermann, Thomas
   Bird, Christian
TI Moving from Closed to Open Source: Observations from Six Transitioned
   Projects to GitHub
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Interviews; Encoding; Planning; Software systems; Open source software;
   Companies; Empirical study; GitHub; open-source; Microsoft
ID OPEN SOURCE SOFTWARE
AB Open source software systems have gained a lot of attention in the past few years. With the emergence of open source platforms like GitHub, developers can contribute, store, and manage their projects with ease. Large organizations like Microsoft, Google, and Facebook are open sourcing their in-house technologies in an effort to more broadly involve the community in the development of software systems. Although closed source and open source systems have been studied extensively, there has been little research on the transition from closed source to open source systems. Through this study we aim to: a) provide guidance and insights for other teams planning to open source their projects and b) to help them avoid pitfalls during the transition process. We studied six different Microsoft systems, which were recently open-sourced i.e., CoreFX, CoreCLR, Roslyn, Entity Framework, MVC, and Orleans. This paper presents the transition from the viewpoints of both Microsoft and the open source community based on interviews with eleven Microsoft developer, five Microsoft senior managers involved in the decision to open source, and eleven open-source developers. From Microsoft's perspective we discuss the reasons for the transition, experiences of developers involved, and the transition's outcomes and challenges. Our results show that building a vibrant community, prompt answers, developing an open source culture, security regulations and business opportunities are the factors which persuade companies to open source their products. We also discuss the transition outcomes on processes such as code reviews, version control systems, continuous integration as well as developers' perception of these changes. From the open source community's perspective, we illustrate the response to the open-sourcing initiative through contributions and interactions with the internal developers and provide guidelines for other projects planning to go open source.
C1 [Kochhar, Pavneet Singh] Microsoft, Vancouver, BC V7Y 1G5, Canada.
   [Kalliamvakou, Eirini] Univ Victoria, Victoria, BC V8P 5C2, Canada.
   [Nagappan, Nachiappan; Zimmermann, Thomas; Bird, Christian] Microsoft Res, Redmond, WA 98502 USA.
C3 University of Victoria; Microsoft
RP Kochhar, PS (corresponding author), Microsoft, Vancouver, BC V7Y 1G5, Canada.
EM pavneetk@microsoft.com; ikaliam@uvic.ca; nachin@microsoft.com;
   tzimmer@microsoft.com; cbird@microsoft.com
CR Ågerfalk PJ, 2008, MIS QUART, V32, P385
   [Anonymous], 2015, FACEBOOKS HEAD OPEN
   [Anonymous], 2014, 10 STEPS MIGRATE YOU
   [Anonymous], 2016, WHY BIG TECH CO ARE
   [Anonymous], 2015, JOURNEY OPEN SOURCE
   [Anonymous], 2017, CODEPLEX PROJECT HOS
   [Anonymous], 2016, MSBUILD MICROSOFT BU
   [Anonymous], WHY OPEN SOURCE
   [Anonymous], 2015, 5 REASONS YOUR CO SH
   [Anonymous], 2016, AN IN DEPTH GUIDE TU
   [Anonymous], 2018, 6 REASONS WHY WE MOV
   [Anonymous], 1999, REACT JAVASCRIPT BUI
   [Anonymous], 2014, MICROSOFTS OPEN SOUR
   [Anonymous], 2011, P 19 ACM SIGSOFT S 1
   Bleek W.-G., 2005, P 1 INT C OP SOURC S, P37
   Bonaccorsi A, 2003, RES POLICY, V32, P1243, DOI 10.1016/S0048-7333(03)00051-9
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Hauge O, 2010, INFORM SOFTWARE TECH, V52, P1133, DOI 10.1016/j.infsof.2010.05.008
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   Homscheid D, 2016, PROCEEDINGS OF THE 2016 ACM WEB SCIENCE CONFERENCE (WEBSCI'16), P336, DOI 10.1145/2908131.2908200
   Höst M, 2011, INFORM SOFTWARE TECH, V53, P616, DOI 10.1016/j.infsof.2010.12.009
   Kalliamvakou E, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P574, DOI 10.1109/ICSE.2015.74
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Lawrence J., 2013, Electronic Journal of Business Research Methods, V11, P29, DOI DOI 10.1080/10548408.2014.883346
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   Murphy-Hill E., 2011, P ACM 2011 C COMPUTE, P405, DOI DOI 10.1145/1958824.1958888
   Muslu K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P334, DOI 10.1145/2568225.2568284
   Orucevic-Alagic A, 2010, IFIP ADV INF COMM TE, V319, P367
   Paulson JW, 2004, IEEE T SOFTWARE ENG, V30, P246, DOI 10.1109/TSE.2004.1274044
   Pham R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P112, DOI 10.1109/ICSE.2013.6606557
   Pinto G, 2018, EMPIR SOFTW ENG, V23, P3221, DOI 10.1007/s10664-018-9609-6
   Raghunathan S, 2005, IEEE T SYST MAN CY A, V35, P903, DOI 10.1109/TSMCA.2005.853493
   Raymond Eric Steven, 2001, The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary
   Riehle D, 2014, P ANN HICSS, P3286, DOI 10.1109/HICSS.2014.407
   Santos C, 2013, J STRATEGIC INF SYST, V22, P26, DOI 10.1016/j.jsis.2012.07.004
   Spencer D., 2009, CARD SORTING DESIGNI
   Steinmacher I, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P256, DOI 10.1145/3180155.3180208
   Stol KJ, 2015, IEEE SOFTWARE, V32, P60, DOI 10.1109/MS.2014.77
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tsay J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P144, DOI 10.1145/2635868.2635882
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   von Krogh G, 2012, MIS QUART, V36, P649
   Xiao Shundan, 2014, P 17 ACM C COMPUTER, P1095, DOI DOI 10.1145/2531602.2531722
   Zhou MH, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2876443
NR 50
TC 7
Z9 7
U1 9
U2 31
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2021
VL 47
IS 9
BP 1838
EP 1856
DI 10.1109/TSE.2019.2937025
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UR3QY
UT WOS:000696667700005
DA 2024-07-18
ER

PT J
AU Rajbahadur, GK
   Wang, SW
   Kamei, Y
   Hassan, AE
AF Rajbahadur, Gopi Krishnan
   Wang, Shaowei
   Kamei, Yasutaka
   Hassan, Ahmed E.
TI Impact of Discretization Noise of the Dependent Variable on Machine
   Learning Classifiers in Software Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; Computer bugs; Noise measurement; Software;
   Machine learning; Regression tree analysis; Logistics; Discretization
   noise; discretization; classifiers; feature importance analysis;
   performance; random forest; logistic regression; decision trees; KNN
ID ACCURACY; MODELS; COST
AB Researchers usually discretize a continuous dependent variable into two target classes by introducing an artificial discretization threshold (e.g., median). However, such discretization may introduce noise (i.e., discretization noise) due to ambiguous class loyalty of data points that are close to the artificial threshold. Previous studies do not provide a clear directive on the impact of discretization noise on the classifiers and how to handle such noise. In this paper, we propose a framework to help researchers and practitioners systematically estimate the impact of discretization noise on classifiers in terms of its impact on various performance measures and the interpretation of classifiers. Through a case study of 7 software engineering datasets, we find that: 1) discretization noise affects the different performance measures of a classifier differently for different datasets; 2) Though the interpretation of the classifiers are impacted by the discretization noise on the whole, the top 3 most important features are not affected by the discretization noise. Therefore, we suggest that practitioners and researchers use our framework to understand the impact of discretization noise on the performance of their built classifiers and estimate the exact amount of discretization noise to be discarded from the dataset to avoid the negative impact of such noise.
C1 [Rajbahadur, Gopi Krishnan; Wang, Shaowei; Hassan, Ahmed E.] Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
   [Kamei, Yasutaka] Kyushu Univ, Principles Software Languages POSL Lab, Grad Sch, Fukuoka 8190395, Japan.
   [Kamei, Yasutaka] Kyushu Univ, Faulty Informat Sci & Elect Engn, Fukuoka 8190395, Japan.
C3 Queens University - Canada; Kyushu University; Kyushu University
RP Wang, SW (corresponding author), Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
EM krishnan@cs.queensu.ca; shaowei@cs.queensu.ca; kamei@ait.kyushu-u.ac.jp;
   ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Rajbahadur, Gopi
   Krishnan/0000-0003-1812-5365
FU JSPS KAKENHI [JP18H03222]
FX This research was partially supported by JSPS KAKENHI Grant Numbers
   JP18H03222.
CR Abdelmoez W, 2012, 2012 22ND INTERNATIONAL CONFERENCE ON COMPUTER THEORY AND APPLICATIONS (ICCTA), P167, DOI 10.1109/ICCTA.2012.6523564
   Abdelwahab M, 2015, INT CONF ACOUST SPEE, P5058, DOI 10.1109/ICASSP.2015.7178934
   Aha D. W., 1989, IJCAI-89 Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, P794
   Alm CO, 2005, P C HUM LANG TECHN E, P579, DOI DOI 10.3115/1220575.1220648
   Altman DG, 2006, BRIT MED J, V332, P1080, DOI 10.1136/bmj.332.7549.1080
   [Anonymous], 2003, P 20 INT C MACH LEAR
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   Boughorbel S, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0177678
   Breiman L., 2017, Classification and Regression Trees, DOI [10.1201/9781315139470-8, DOI 10.1201/9781315139470-8, DOI 10.1201/9781315139470]
   Brier G. W., 1950, MON WEATHER REV, V78, P1, DOI 10.1175/1520-0493(1950)078andlt;0001:VOFEITandgt;2.0.CO;2
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   COHEN J, 1983, APPL PSYCH MEAS, V7, P249, DOI 10.1177/014662168300700301
   Cohen J., 1988, STAT POWER ANAL BEHA
   Dawson NV, 2012, MED DECIS MAKING, V32, P225, DOI 10.1177/0272989X12437605
   de Almeida MA, 1998, PROC INT CONF SOFTW, P473, DOI 10.1109/ICSE.1998.671609
   DeCoster J., 2011, J EXP PSYCHOPATHOL, V2, P197, DOI [10.5127/jep.008310, DOI 10.5127/JEP.008310]
   DeCoster J, 2009, PSYCHOL METHODS, V14, P349, DOI 10.1037/a0016956
   El-Emam K., 2001, Empirical Software Engineering, V6, P207, DOI 10.1023/A:1011487332587
   Farrington D.P., 2000, CRIM BEHAV MENT HEAL, V10, P100, DOI DOI 10.1002/CBM.349
   Feather Martin, 2008, Proceedings of the 4th international workshop on Predictor models in software engineering, P79
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P225, DOI 10.1109/WCRE.2012.32
   Ferri C, 2009, PATTERN RECOGN LETT, V30, P27, DOI 10.1016/j.patrec.2008.08.010
   Folleco A, 2008, IEEE C EVOL COMPUTAT, P3853, DOI 10.1109/CEC.2008.4631321
   García S, 2013, IEEE T KNOWL DATA EN, V25, P734, DOI 10.1109/TKDE.2012.35
   Gay G, 2010, AUTOMAT SOFTW ENG, V17, P439, DOI 10.1007/s10515-010-0072-x
   Ghotra B, 2017, IEEE WORK CONF MIN S, P146, DOI 10.1109/MSR.2017.18
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Harrell F.E., 2001, Missing Data, P41
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Hassan S, 2020, IEEE T SOFTWARE ENG, V46, P773, DOI 10.1109/TSE.2018.2869395
   Ho TK, 2002, IEEE T PATTERN ANAL, V24, P289, DOI 10.1109/34.990132
   Huang J, 2005, IEEE T KNOWL DATA EN, V17, P299, DOI 10.1109/TKDE.2005.50
   Jiang Y., 2008, DEFECTS 08 P 2008 WO, P16, DOI [DOI 10.1145/1390817.1390822, 10.1145/1390817.1390822]
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Judd T, 2009, IEEE I CONF COMP VIS, P2106, DOI 10.1109/ICCV.2009.5459462
   Khoshgoftaar TM, 2005, INTELL DATA ANAL, V9, P3, DOI 10.3233/IDA-2005-9102
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kraemer HC, 2004, J PSYCHIAT RES, V38, P17, DOI 10.1016/S0022-3956(03)00097-9
   Krishna R, 2017, INFORM SOFTWARE TECH, V88, P53, DOI 10.1016/j.infsof.2017.03.012
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   MacCallum RC, 2002, PSYCHOL METHODS, V7, P19, DOI 10.1037//1082-989X.7.1.19
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Menzies T., 2011, Proceedings of the International Workshop on Machine Learning Technologies in Software Engineering, P19
   Menzies T, 2007, COMPUTER, V40, P54, DOI 10.1109/MC.2007.37
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Mockus A, 2010, Proc. of the 18th Symposium on the Foundations of Software Engineering (FSE), P117
   Mockus A., 2008, MISSING DATA SOFTWAR, P185
   MOSSMAN D, 1994, J CONSULT CLIN PSYCH, V62, P783, DOI 10.1037/0022-006X.62.4.783
   Nam J., 2017, IEEE Transactions on Software Engineering, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Nettleton DF, 2010, ARTIF INTELL REV, V33, P275, DOI 10.1007/s10462-010-9156-z
   Rajbahadur GK, 2017, IEEE WORK CONF MIN S, P135, DOI 10.1109/MSR.2017.4
   Royston P, 2006, STAT MED, V25, P127, DOI 10.1002/sim.2331
   Rucker DD, 2015, J CONSUM PSYCHOL, V25, P666, DOI 10.1016/j.jcps.2015.04.004
   SAKIA RM, 1992, J ROY STAT SOC D-STA, V41, P169, DOI 10.2307/2348250
   Schumann J., 2009, Proceedings of the IEEE Aerospace Conference, P1
   Seiffert C, 2014, INFORM SCIENCES, V259, P571, DOI 10.1016/j.ins.2010.12.016
   Shaowei Wang, 2018, Empirical Software Engineering, V23, P1552, DOI 10.1007/s10664-017-9558-5
   Sokolova M, 2006, LECT NOTES COMPUT SC, V4304, P1015
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Wang HZ, 2011, R J, V3, P29, DOI 10.32614/rj-2011-015
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Yang Y, 2010, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, SECOND EDITION, P101, DOI 10.1007/978-0-387-09823-4_6
   Zhang F., 2014, P 11 WORK C MIN SOFT, P182, DOI [10.1145/2597073.2597078, DOI 10.1145/2597073.2597078]
   Zheng QM, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P637, DOI 10.1145/2786805.2786866
   Zhu X., 2003, P 20 INT C MACHINE L, P920
   Zhu XQ, 2004, ARTIF INTELL REV, V22, P177, DOI 10.1007/s10462-004-0751-8
NR 76
TC 15
Z9 16
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL 1
PY 2021
VL 47
IS 7
BP 1414
EP 1430
DI 10.1109/TSE.2019.2924371
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA TJ6XV
UT WOS:000673623000007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU El-Fakih, K
   Hierons, RM
   Turker, UC
AF El-Fakih, Khaled
   Hierons, Robert M.
   Turker, Uraz Cengiz
TI <i>K</i>-Branching UIO Sequences for Partially Specified Observable
   Non-Deterministic FSMs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering/software/program verification; software
   engineering/testing and debugging; software engineering/test design;
   finite state machine; unique input output sequence generation; general
   purpose graphics processing units
ID UNIQUE INPUT/OUTPUT SEQUENCES; FINITE-STATE MACHINES; TEST-GENERATION;
   FAULTS
AB In black-box testing, test sequences may be constructed from systems modelled as deterministic finite-state machines (DFSMs) or, more generally, observable non-deterministic finite state machines (ONFSMs). Test sequences usually contain state identification sequences, with unique input output sequences (UIOS) often being used with DFSMs. This paper extends the notion of UIOS to ONFSMs. One challenge is that, as a result of non-determinism, the application of an input sequence can lead to exponentially many expected output sequences. To address this scalability problem, we introduce K-UIOS: UIOS that lead to at most K output sequences from states of M. We show that checking K-UIO existence is PSPACE-Complete if the problem is suitably bounded; otherwise it is in EXPSPACE and PSPACE-Hard. We provide a massively parallel algorithm for constructing K-UIOS and the results of experiments on randomly generated and real FSM specifications. The proposed algorithm was able to construct UIOS in cases where the existing UIO generation algorithm could not and was able to construct UIOS from FSMs with 38K states and 400K transitions.
C1 [El-Fakih, Khaled] Amer Univ Sharjah, Comp Sci & Engn, Sharjah, U Arab Emirates.
   [Hierons, Robert M.] Univ Sheffield, Comp Sci, Sheffield S10 2TN, S Yorkshire, England.
   [Turker, Uraz Cengiz] Gebze Tech Univ, Comp Engn, Kocaeli, Turkey.
C3 American University of Sharjah; University of Sheffield; Gebze Technical
   University
RP Turker, UC (corresponding author), Gebze Tech Univ, Comp Engn, Kocaeli, Turkey.
EM kelfakih@aus.edu; r.hierons@sheffield.ac.uk; urazc@sabanciuniv.edu
RI Turker, Uraz/JDN-0220-2023
OI Turker, Uraz/0000-0001-5976-1945; Hierons, Robert/0000-0002-4771-1446
FU AUS [eFRG18-SET-CEN-49]; SPF [EP/V026801/2] Funding Source: UKRI
FX This work is partially supported by AUS under grant eFRG18-SET-CEN-49.
   Author names are given according to the Hardy-Littlewood Rule, i.e.,
   author names are provided in alphabetical order regarding the family
   names in ascending order.
CR Ahmad I, 2004, IEE P-COMPUT DIG T, V151, P131, DOI 10.1049/ip-cdt:20040350
   Aho A.V., 1988, P IEEE 8 INT S PROT, P75
   Aho A.V., 1986, COMPILERS PRINCIPLES
   AHO AV, 1991, IEEE T COMMUN, V39, P1604, DOI 10.1109/26.111442
   Alur R., 1995, Proceedings of the Twenty-Seventh Annual ACM Symposium on the Theory of Computing, P363, DOI 10.1145/225058.225161
   [Anonymous], PROTOCOL TEST SYSTEM
   [Anonymous], 1994, P 7 INT WORKSH PROT
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], 1964, 5 ANN S SWITCH CIRC, DOI DOI 10.1109/SWCT.1964.8
   [Anonymous], 1971, Fault Detection in Digital Circuits
   Betin-Can A, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P248, DOI 10.1109/ASE.2004.1342742
   Brglez F., 1996, ACM SIGMOD BENCHMARK
   CHAN WYL, 1989, COMP COMM R, V19, P283, DOI 10.1145/75247.75274
   CHEN WH, 1995, IEEE ACM T NETWORK, V3, P152, DOI 10.1109/90.374116
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Dorofeeva R, 2010, INFORM SOFTWARE TECH, V52, P1286, DOI 10.1016/j.infsof.2010.07.001
   El-Fakih K, 2004, IEEE T SOFTWARE ENG, V30, P425, DOI 10.1109/TSE.2004.31
   El-Fakih KA, 2012, PROGRAM COMPUT SOFT+, V38, P201, DOI 10.1134/S0361768812040019
   Endo AT, 2013, INFORM SOFTWARE TECH, V55, P1045, DOI 10.1016/j.infsof.2013.01.001
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   GONENC G, 1970, IEEE T COMPUT, VC 19, P551, DOI 10.1109/T-C.1970.222975
   Grieskamp W, 2011, SOFTW TEST VERIF REL, V21, P55, DOI 10.1002/stvr.427
   Güniçen C, 2012, COMPUTER AND INFORMATION SCIENCES II, P487, DOI 10.1007/978-1-4471-2155-8_62
   Guo Q, 2005, IEE PROC-SOFTW, V152, P127, DOI 10.1049/ip-sen:20045001
   Guo Q, 2004, LECT NOTES COMPUT SC, V2931, P164
   Haydar M, 2004, LECT NOTES COMPUT SC, V3235, P115
   Hierons RM, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3051121
   Hierons RM, 2016, IEEE T SOFTWARE ENG, V42, P1077, DOI 10.1109/TSE.2016.2539964
   Hierons RM, 2016, IEEE T COMPUT, V65, P3370, DOI 10.1109/TC.2016.2532869
   Kohavi Z., 1978, Switching and Finite State Automata Theory
   Kushik Natalia, 2013, Testing Software and Systems. 25th IFIP WG 6.1 International Conference, ICTSS 2013. Proceedings: LNCS 8254, P33, DOI 10.1007/978-3-642-41707-8_3
   Kushik N, 2016, INT J SOFTW TOOLS TE, V18, P251, DOI 10.1007/s10009-014-0357-7
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Lee D, 1996, IEEE T COMMUN, V44, P631, DOI 10.1109/26.494307
   LEE D, 1994, IEEE T COMPUT, V43, P306, DOI 10.1109/12.272431
   MOTTELER K, 1994, IFIP TRANS C, V19, P21
   Naik K, 1997, IEEE ACM T NETWORK, V5, P585, DOI 10.1109/90.649519
   Petrenko A, 2005, IEEE T COMPUT, V54, P1154, DOI 10.1109/TC.2005.152
   Pomeranz I, 1997, IEEE T COMPUT, V46, P783, DOI 10.1109/12.599899
   SABNANI K, 1988, COMPUT NETWORKS ISDN, V15, P285, DOI 10.1016/0169-7552(88)90064-5
   Savitch W. J., 1970, Journal of computer and system sciences, V4, P177, DOI [DOI 10.1016/S0022-0000(70)80006-X, 10. 1016/S0022-0000(70)80006-X]
   Spitsyna N, 2007, SOFTW TEST VERIF REL, V17, P227, DOI 10.1002/stvr.374
   Starke P. H., 1972, ABSTRACT AUTOMATA
   URAL H, 1993, COMPUT COMMUN, V16, P653, DOI 10.1016/0140-3664(93)90082-4
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Vuong SonT., 1989, PROC 2 IFIP INT WORK, P161
   Yaneva V., 2018, P 25 AS PAC SOFTW EN, P55
NR 47
TC 7
Z9 7
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2021
VL 47
IS 5
BP 1029
EP 1040
DI 10.1109/TSE.2019.2911076
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SC1RN
UT WOS:000650457700010
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Werder, K
   Li, Y
   Maedche, A
   Ramesh, B
AF Werder, Karl
   Li, Ye
   Maedche, Alexander
   Ramesh, Balasubramaniam
TI Software Development Process Ambidexterity and Project Performance: A
   Coordination Cost-Effectiveness View
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Organizations; Technological innovation; Information systems;
   Sensors; Software engineering; Ambidexterity; coordination; coordination
   cost; cost-effectiveness; project performance; software development
ID DYNAMIC CAPABILITIES; ORGANIZATIONAL AMBIDEXTERITY; TEAM PERFORMANCE;
   IMPACT; AGILE; PRODUCTIVITY; ANTECEDENTS; STRATEGY; BIAS; DETERMINANTS
AB Software development process ambidexterity (SDPA) is the ability to demonstrate both process alignment and process adaptability simultaneously. Realizing process ambidexterity has recently been suggested as an effective approach to improving the performance of software development (SD) projects. To understand the mechanisms underlying the effects of ambidexterity, we focus in this study on the mediating effects of coordination, one of the most important activity in SD projects. Specifically, we hypothesize a mediating effect of coordination costs and coordination effectiveness on the relationship between SDPA and project performance. We conducted a quantitative study involving 104 SD projects across 10 firms to test the model. The results strongly suggest that the positive relationship between SDPA and project performance is negatively mediated by coordination costs and positively mediated by coordination effectiveness. We validate our research model with a case study in an organization employing several hundred IT professionals and derive several practical implications on this basis.
C1 [Werder, Karl] Univ Cologne, Pohligstr 1, D-50969 Cologne, Germany.
   [Li, Ye] Univ Mannheim, L15 1-6, D-68131 Mannheim, Germany.
   [Maedche, Alexander] Karlsruhe Inst Technol KIT, Inst Informat Syst & Mkt IISM, Fritz Erler Str 23, D-76133 Karlsruhe, Germany.
   [Ramesh, Balasubramaniam] Georgia State Univ, Dept Comp Informat Syst, Robinson Coll Business, 55 Pk Pl NE, Atlanta, GA 30303 USA.
C3 University of Cologne; University of Mannheim; Helmholtz Association;
   Karlsruhe Institute of Technology; University System of Georgia; Georgia
   State University
RP Werder, K (corresponding author), Univ Cologne, Pohligstr 1, D-50969 Cologne, Germany.
EM werder@wiso.uni-koeln.de; ye.li02@sap.com; alexander.maedche@kit.edu;
   bramesh@gsu.edu
RI Werder, Karl/AAG-9163-2020; Ramesh, Balasubramaniam/C-2565-2008
OI Werder, Karl/0000-0001-8481-1596; 
CR Abal I, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3149119
   Ahuja S., 2014, 35 INT C INF SYST, P1
   Nguyen-Duc A, 2015, INFORM SOFTWARE TECH, V57, P277, DOI 10.1016/j.infsof.2014.06.002
   ARMSTRONG JS, 1977, J MARKETING RES, V14, P396, DOI 10.2307/3150783
   Austin RD, 2009, INFORM SYST RES, V20, P462, DOI 10.1287/isre.1090.0242
   Barlow JB, 2011, COMMUN ASSOC INF SYS, V29
   BARON RM, 1986, J PERS SOC PSYCHOL, V51, P1173, DOI 10.1037/0022-3514.51.6.1173
   Batra D, 2010, COMMUN ASSOC INF SYS, V27, P379
   Benner MJ, 2003, ACAD MANAGE REV, V28, P238, DOI 10.2307/30040711
   Bick S, 2018, IEEE T SOFTWARE ENG, V44, P932, DOI 10.1109/TSE.2017.2730870
   Birkinshaw J, 2016, CALIF MANAGE REV, V58, P36, DOI 10.1525/cmr.2016.58.4.36
   Bliese P.D., 2000, MULTILEVEL THEORY RE, P349, DOI DOI 10.12691/EDUCATION-3-1-14
   Blincoe K, 2015, IEEE T SOFTWARE ENG, V41, P969, DOI 10.1109/TSE.2015.2431680
   Boehm B, 2004, PROC INT CONF SOFTW, P718, DOI 10.1109/ICSE.2004.1317503
   Bonner N. A., 2008, THESIS U TEXAS ARLIN
   Brettel M, 2011, J PROD INNOVAT MANAG, V28, P251, DOI 10.1111/j.1540-5885.2011.00795.x
   Brown RD, 2005, ORGAN RES METHODS, V8, P165, DOI 10.1177/1094428105275376
   Burgelman RA, 1991, ORGAN SCI, V2, P239, DOI 10.1287/orsc.2.3.239
   Cao L, 2013, J MANAGE INFORM SYST, V30, P115, DOI 10.2753/MIS0742-1222300305
   Cao Q, 2009, ORGAN SCI, V20, P781, DOI 10.1287/orsc.1090.0426
   Carmeli A, 2009, LEADERSHIP QUART, V20, P207, DOI 10.1016/j.leaqua.2009.01.011
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   CHURCHILL GA, 1979, J MARKETING RES, V16, P64, DOI 10.2307/3150876
   COLLIS DJ, 1994, STRATEGIC MANAGE J, V15, P143, DOI 10.1002/smj.4250150910
   Cummings JN, 2007, RES POLICY, V36, P1620, DOI 10.1016/j.respol.2007.09.001
   Cummings JN, 2009, INFORM SYST RES, V20, P420, DOI 10.1287/isre.1090.0239
   Di Stefano G, 2014, ACAD MANAGE PERSPECT, V28, P307, DOI 10.5465/amp.2013.0100
   Duncan R.B., 1976, The Management of Organization Design, V1, P167
   Ebben JJ, 2005, STRATEGIC MANAGE J, V26, P1249, DOI 10.1002/smj.503
   Espinosa J. A., 2006, P 39 HAW INT C SYST, P191
   Espinosa JA, 2012, IEEE T ENG MANAGE, V59, P91, DOI 10.1109/TEM.2011.2126579
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   Gibson CB, 2004, ACAD MANAGE J, V47, P209, DOI 10.5465/20159573
   Gopal A, 2011, IEEE T ENG MANAGE, V58, P772, DOI 10.1109/TEM.2010.2096821
   Gregory RW, 2014, EUR J INFORM SYST, V23, P343, DOI 10.1057/ejis.2013.3
   Hayes AF, 2009, COMMUN MONOGR, V76, P408, DOI 10.1080/03637750903310360
   Helfat CE, 2000, STRATEGIC MANAGE J, V21, P961, DOI 10.1002/1097-0266(200010/11)21:10/11<961::AID-SMJ132>3.0.CO;2-E
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Im G, 2014, INFORM SYST RES, V25, P72, DOI 10.1287/isre.2013.0496
   JAMES LR, 1982, J APPL PSYCHOL, V67, P219, DOI 10.1037/0021-9010.67.2.219
   Joblin M, 2017, EMPIR SOFTW ENG, V22, P2050, DOI 10.1007/s10664-016-9478-9
   Junni P, 2013, ACAD MANAGE PERSPECT, V27, P299, DOI 10.5465/amp.2012.0015
   Kathuria A., 2012, P INT C INF SYST
   Kietzmann J, 2013, J STRATEGIC INF SYST, V22, P282, DOI 10.1016/j.jsis.2013.03.003
   King WR, 2005, COMMUN ASSOC INF SYS, V16, P880
   LeBreton JM, 2008, ORGAN RES METHODS, V11, P815, DOI 10.1177/1094428106296642
   Lee, 2017, P INT C INF SYST TRA, P1
   Lee G., 2012, BALANCING RIGOR STAN
   Lee G., 2009, Academy Of Management Annual Meeting Proceedings, P1
   Lee G., 2010, P INT C INF SYST
   Lee G, 2006, COMMUN ACM, V49, P35, DOI 10.1145/1164394.1164417
   Lee G, 2013, IEEE T SOFTWARE ENG, V39, P1753, DOI 10.1109/TSE.2013.40
   Lee G, 2010, MIS QUART, V34, P87
   Lee T, 2016, IEEE T SOFTWARE ENG, V42, P1015, DOI 10.1109/TSE.2016.2550458
   Lewis MW, 2000, ACAD MANAGE REV, V25, P760, DOI 10.2307/259204
   Lin Z, 2007, MANAGE SCI, V53, P1645, DOI 10.1287/mnsc.1070.0712
   Lindell MK, 2001, J APPL PSYCHOL, V86, P114, DOI 10.1037//0021-9010.86.1.114
   Lindner J.R., 2001, J AGR ED, V42, P43, DOI [10.5032/jae.2001.04043, DOI 10.5032/JAE.2001.04043, https://doi.org/10.5032/jae.2001.04043]
   Lyytinen K, 2006, EUR J INFORM SYST, V15, P183, DOI 10.1057/palgrave.ejis.3000604
   MacKenzie SB, 2012, J RETAILING, V88, P542, DOI 10.1016/j.jretai.2012.08.001
   MALONE TW, 1987, MANAGE SCI, V33, P1317, DOI 10.1287/mnsc.33.10.1317
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   Massey AP, 2003, J MANAGE INFORM SYST, V19, P129
   Miller CC, 1997, ACAD MANAGE J, V40, P189, DOI 10.5465/257026
   Mithas S, 2016, MIS QUART, V40, P223, DOI 10.25300/MISQ/2016/40.1.10
   Mookerjee VS, 2002, IEEE T SOFTWARE ENG, V28, P684, DOI 10.1109/TSE.2002.1019482
   Napier NP, 2011, EUR J INFORM SYST, V20, P674, DOI 10.1057/ejis.2011.32
   Newcomer K.E., 2015, Handbook of Practical Program Evaluation, DOI [DOI 10.1002/9781119171386, 10.1002/9781119171386]
   NIDUMOLU S, 1995, INFORM SYST RES, V6, P191, DOI 10.1287/isre.6.3.191
   O'Reilly CA, 2004, HARVARD BUS REV, V82, P74
   O'Reilly CA, 2008, RES ORGAN BEHAV, V28, P185, DOI 10.1016/j.riob.2008.06.002
   OLSON EM, 1995, J MARKETING, V59, P48, DOI 10.2307/1252014
   Pavlou PA, 2006, INFORM SYST RES, V17, P198, DOI 10.1287/isre.1060.0094
   Pavlou PA, 2011, DECISION SCI, V42, P239, DOI 10.1111/j.1540-5915.2010.00287.x
   Petter S, 2007, MIS QUART, V31, P623
   Pfeffer J., 1978, EXTERNAL CONTROL ORG
   Podsakoff PM, 2003, J APPL PSYCHOL, V88, P879, DOI 10.1037/0021-9010.88.5.879
   Preacher KJ, 2004, BEHAV RES METH INS C, V36, P717, DOI 10.3758/BF03206553
   Preacher KJ, 2008, BEHAV RES METHODS, V40, P879, DOI 10.3758/BRM.40.3.879
   Protogerou A, 2012, IND CORP CHANGE, V21, P615, DOI 10.1093/icc/dtr049
   Raisch S, 2008, J MANAGE, V34, P375, DOI 10.1177/0149206308316058
   Ramesh B, 2012, INFORM SYST RES, V23, P323, DOI 10.1287/isre.1110.0351
   Rousseau V, 2010, GROUP ORGAN MANAGE, V35, P751, DOI 10.1177/1059601110390835
   Scholtes I, 2016, EMPIR SOFTW ENG, V21, P642, DOI 10.1007/s10664-015-9406-4
   Schroeder M A, 1990, West J Nurs Res, V12, P175, DOI 10.1177/019394599001200204
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shenhar AJ, 2001, LONG RANGE PLANN, V34, P699, DOI 10.1016/S0024-6301(01)00097-8
   Simsek Z, 2009, J MANAGE STUD, V46, P864, DOI 10.1111/j.1467-6486.2009.00841.x
   Sivasubramaniam N, 2012, J PROD INNOVAT MANAG, V29, P803, DOI 10.1111/j.1540-5885.2012.00940.x
   Slaughter SA, 1998, COMMUN ACM, V41, P67, DOI 10.1145/280324.280335
   Sobel M.E., 1982, SOCIOLOGICAL METHODO, P290, DOI DOI 10.2307/270723
   Song XM, 1998, J PROD INNOVAT MANAG, V15, P289, DOI 10.1111/1540-5885.1540289
   Sutanto J, 2015, ACM TRANS MANAG INF, V6, DOI 10.1145/2688489
   Tanriverdi H, 2007, INFORM SYST RES, V18, P280, DOI 10.1287/isre.1070.0129
   Teasley SD, 2002, IEEE T SOFTWARE ENG, V28, P671, DOI 10.1109/TSE.2002.1019481
   Teece DJ, 2007, STRATEGIC MANAGE J, V28, P1319, DOI 10.1002/smj.640
   Teece DJ, 1997, STRATEGIC MANAGE J, V18, P509, DOI 10.1002/(SICI)1097-0266(199708)18:7<509::AID-SMJ882>3.0.CO;2-Z
   Temizkan O, 2015, J MANAGE INFORM SYST, V32, P116, DOI 10.1080/07421222.2015.1029382
   Tindale R. S., 2009, ENCY GROUP PROCESSES
   Tiwana A, 2010, J MANAGE INFORM SYST, V27, P87, DOI 10.2753/MIS0742-1222270203
   Tiwana A, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1348250.1348257
   Turner N., 2011, THESIS U BATH BATH
   Tushman ML, 1996, CALIF MANAGE REV, V38, P8, DOI 10.2307/41165852
   Urbach N., 2010, J INFORM TECHNOLOGY, V11, P2
   Gregory RW, 2015, INFORM SYST RES, V26, P57, DOI 10.1287/isre.2014.0554
   Wiredu GO, 2011, INFORM SYST J, V21, P175, DOI 10.1111/J.1365-2575.2010.00364.x
   Xue L, 2012, MIS QUART, V36, P509
   Yan M., 2013, PROCEEDING 34 INT C
   Zhao XS, 2010, J CONSUM RES, V37, P197, DOI 10.1086/651257
NR 110
TC 0
Z9 0
U1 2
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2021
VL 47
IS 4
BP 836
EP 849
DI 10.1109/TSE.2019.2904571
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA RP8GH
UT WOS:000641961100008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kechagia, M
   Mechtaev, S
   Sarro, F
   Harman, M
AF Kechagia, Maria
   Mechtaev, Sergey
   Sarro, Federica
   Harman, Mark
TI Evaluating Automatic Program Repair Capabilities to Repair API Misuses
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tools; Maintenance engineering; Computer bugs; Benchmark testing;
   Software; Java; Security; Automatic program repair; Application
   Programming Interfaces (APIs); API misuses; bug benchmarks
AB API misuses are well-known causes of software crashes and security vulnerabilities. However, their detection and repair is challenging given that the correct usages of (third-party) apis might be obscure to the developers of client programs. This paper presents the first empirical study to assess the ability of existing automated bug repair tools to repair api misuses, which is a class of bugs previously unexplored. Our study examines and compares 14 Java test-suite-based repair tools (11 proposed before 2018, and three afterwards) on a manually curated benchmark (APIRepBench) consisting of 101 api misuses. We develop an extensible execution framework (APIARTy) to automatically execute multiple repair tools. Our results show that the repair tools are able to generate patches for 28 percent of the api misuses considered. While the 11 less recent tools are generally fast (the median execution time of the repair attempts is 3.87 minutes and the mean execution time is 30.79 minutes), the three most recent are less efficient (i.e., 98 percent slower) than their predecessors. The tools generate patches for api misuses that mostly belong to the categories of missing null check, missing value, missing exception, and missing call. Most of the patches generated by all tools are plausible (65 percent), but only few of these patches are semantically correct to human patches (25 percent). Our findings suggest that the design of future repair tools should support the localisation of complex bugs, including different categories of api misuses, handling of timeout issues, and ability to configure large software projects. Both APIRepBench and APIARTy have been made publicly available for other researchers to evaluate the capabilities of repair tools on detecting and fixing api misuses.
C1 [Kechagia, Maria; Mechtaev, Sergey; Sarro, Federica; Harman, Mark] UCL, Dept Comp Sci, London WC1E 6BT, England.
   [Harman, Mark] Facebook London, London W1T 1FB, England.
C3 University of London; University College London; Facebook Inc
RP Sarro, F (corresponding author), UCL, Dept Comp Sci, London WC1E 6BT, England.
EM m.kechagia@ucl.ac.uk; s.mechtaev@ucl.ac.uk; f.sarro@ucl.ac.uk;
   mark.harman@ucl.ac.uk
OI Kechagia, Maria/0000-0001-9092-3244; Sarro, Federica/0000-0002-9146-442X
FU ERC Advanced fellowship [741278]
FX This work was supported by the ERC Advanced fellowship grant no. 741278
   (EPIC). The authors would like to thank Dr. Matias Martinez for
   responding promptly to our questions about using ASTOR.
CR Acar Y, 2016, P IEEE S SECUR PRIV, P289, DOI 10.1109/SP.2016.25
   Alur R, 2005, ACM SIGPLAN NOTICES, V40, P98, DOI 10.1145/1047659.1040314
   Amann S, 2019, IEEE T SOFTWARE ENG, V45, P1170, DOI 10.1109/TSE.2018.2827384
   Amann S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P464, DOI [10.1145/2901739.2903506, 10.1109/MSR.2016.055]
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Bavishi R, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P613, DOI 10.1145/3338906.3338952
   Buse RPL, 2012, PROC INT CONF SOFTW, P782, DOI 10.1109/ICSE.2012.6227140
   Chen LS, 2017, IEEE INT CONF AUTOM, P637, DOI 10.1109/ASE.2017.8115674
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Dhar A, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P555, DOI 10.1145/2786805.2786877
   Durieux T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P302, DOI 10.1145/3338906.3338911
   Durieux T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P349, DOI 10.1109/SANER.2017.7884635
   Durieux T, 2016, 2016 IEEE/ACM 11TH INTERNATIONAL WORKSHOP IN AUTOMATION OF SOFTWARE TEST (AST), P85, DOI [10.1145/2896921.2896931, 10.1109/AST.2016.021]
   Fazzini M, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P204, DOI 10.1145/3293882.3330571
   Feng Y, 2017, ACM SIGPLAN NOTICES, V52, P599, DOI 10.1145/3093333.3009851
   Forrest Stephanie, 2009, P 11 ANN C GEN EV CO, P947
   Gao Q, 2015, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2015.81
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hua JR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P12, DOI 10.1145/3180155.3180245
   Jiang JJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P255, DOI 10.1109/ASE.2019.00033
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kechagia M, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P192, DOI 10.1145/3293882.3330552
   Kechagia M, 2015, EMPIR SOFTW ENG, V20, P1785, DOI 10.1007/s10664-014-9343-7
   Kim J, 2020, EMPIR SOFTW ENG, V25, P719, DOI 10.1007/s10664-019-09770-1
   Kim J, 2019, EMPIR SOFTW ENG, V24, P4071, DOI 10.1007/s10664-019-09742-5
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   Koyuncu A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P314, DOI 10.1145/3338906.3338935
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le XBD, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P376, DOI 10.1145/3092703.3098225
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Lin D., 2017, INT C SYSTEMS PROGRA, P55
   Liu K., 2018, PROC IEEE 26 INT C S, P1
   Liu K, 2020, PROC INT CONF SOFTW, P615, DOI 10.1145/3377811.3380338
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Liu K, 2019, IEEE INT CONF SOFTW, P102, DOI 10.1109/ICST.2019.00020
   Liu K, 2018, ASIA PAC SOFWR ENG, P658, DOI 10.1109/APSEC.2018.00085
   Liu XL, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P118, DOI 10.1109/SANER.2018.8330202
   Liva G, 2021, IEEE T SOFTWARE ENG, V47, P2369, DOI 10.1109/TSE.2019.2948351
   Long F, 2016, PROC INT CONF SOFTW, P702, DOI 10.1145/2884781.2884872
   Ma SQ, 2017, LECT NOTES COMPUT SC, V10493, P229, DOI 10.1007/978-3-319-66399-9_13
   Madeiral F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P468, DOI [10.1109/saner.2019.8667991, 10.1109/SANER.2019.8667991]
   Marginean A, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P269, DOI 10.1109/ICSE-SEIP.2019.00039
   Martinez M., 2016, P 25 INT S SOFTWARE, P441, DOI 10.1145/2931037
   Martinez M, 2019, J SYST SOFTWARE, V151, P65, DOI 10.1016/j.jss.2019.01.069
   Martinez M, 2018, LECT NOTES COMPUT SC, V11036, P65, DOI 10.1007/978-3-319-99241-9_3
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Mohagheghi P, 2007, EMPIR SOFTW ENG, V12, P471, DOI 10.1007/s10664-007-9040-x
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   Motwani M, 2018, EMPIR SOFTW ENG, V23, P2901, DOI [10.1007/s10664-017-9550-0, 10.1145/3180155.3182533]
   Nadi S, 2016, PROC INT CONF SOFTW, P935, DOI 10.1145/2884781.2884790
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Reinking A, 2015, LECT NOTES COMPUT SC, V9206, P511, DOI 10.1007/978-3-319-21690-4_35
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Saha RK, 2018, IEEE WORK CONF MIN S, P10, DOI 10.1145/3196398.3196473
   Saha RK, 2018, PROC IEEE ACM INT C, P77, DOI 10.1145/3183440.3183487
   Sinha S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P153
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Tan SH, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P187, DOI 10.1145/3180155.3180243
   Nguyen T, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1013, DOI 10.1145/2950290.2983931
   Tian Y, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P752, DOI 10.1145/3106237.3106300
   Vall ~ee-Rai R., 2010, CASCON 1 DECADE HIGH, P214, DOI DOI 10.1145/1925805.1925818
   van der Spek P, 2005, ACM SIGPLAN NOTICES, V40, P47, DOI 10.1145/1064165.1064173
   van Tonder R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/3180155.3180250
   Wang WC, 2019, J SYST SOFTWARE, V156, P100, DOI 10.1016/j.jss.2019.06.076
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wen M, 2019, PROC INT CONF SOFTW, P866, DOI 10.1109/ICSE.2019.00093
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xu XZ, 2019, PROC INT CONF SOFTW, P512, DOI 10.1109/ICSE.2019.00063
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Yang ZJ, 2018, IEEE INT CONF SOFTW, P161, DOI 10.1109/ICST.2018.00025
   Ye H, 2019, 2019 IEEE 1ST INTERNATIONAL WORKSHOP ON INTELLIGENT BUG FIXING (IBF '19), P1, DOI [10.1109/ibf.2019.8665475, 10.1109/icnsurv.2019.8735415, 10.1109/IBF.2019.8665475]
   Yuan Y, 2020, IEEE T SOFTWARE ENG, V46, P1040, DOI 10.1109/TSE.2018.2874648
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
NR 83
TC 11
Z9 12
U1 2
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 18
PY 2021
VL 48
IS 7
BP 2658
EP 2679
DI 10.1109/TSE.2021.3067156
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5YX
UT WOS:000825973300002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sondhi, D
   Jobanputra, M
   Rani, D
   Purandare, S
   Sharma, S
   Purandare, R
AF Sondhi, Devika
   Jobanputra, Mayank
   Rani, Divya
   Purandare, Salil
   Sharma, Sakshi
   Purandare, Rahul
TI Mining Similar Methods for Test Adaptation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Libraries; Testing; Tools; Software development management; Python;
   Documentation; Open source software; Test suites; mining; software
   testing; function similarity
AB Developers may choose to implement a library despite the existence of similar libraries, considering factors such as computational performance, language or platform dependency, accuracy, convenience, and completeness of an API. As a result, GitHub hosts several library projects that have overlaps in their functionalities. These overlaps have been of interest to developers from the perspective of code reuse or the preference of one implementation over the other. Through an empirical study, we explore the extent and nature of existence of these similarities in the library functions. We have further studied whether the similarity of functions across different libraries and their associated test suites can be leveraged to reveal defects in one another. We see scope for effectively using the mining of test suites from the perspective of revealing defects in a program or its documentation. Another noteworthy observation made in the study is that similar functions may exist across libraries implemented in the same language as well as in different languages. Identifying the challenges that lie in building a testing tool, we automate the entire process in Metallicus, a test mining and recommendation tool. Metallicus returns a test suite for the given input of a query function and a template for its test suite. On a dataset of query functions taken from libraries implemented in Java or Python, Metallicus revealed 46 defects.
C1 [Sondhi, Devika; Purandare, Salil; Purandare, Rahul] Indraprastha Inst Informat Technol Delhi, Dept Comp Sci & Engn, Delhi 110020, India.
   [Rani, Divya] GITA Bhubaneswar, Dept Comp Sci & Engn, Bhubaneswar 752054, Odisha, India.
   [Jobanputra, Mayank] IIT Madras, Chennai 600036, Tamil Nadu, India.
   [Sharma, Sakshi] IIIT Bhubaneswar, Dept Comp Sci & Engn, Bhubaneswar 751003, Odisha, India.
C3 Indraprastha Institute of Information Technology Delhi; Gandhi Institute
   For Technological Advancement; Indian Institute of Technology System
   (IIT System); Indian Institute of Technology (IIT) - Madras;
   International Institute of Information Technology, Bhubaneswar
RP Sondhi, D (corresponding author), Indraprastha Inst Informat Technol Delhi, Dept Comp Sci & Engn, Delhi 110020, India.
EM devikas@iiitd.ac.in; mayankjobanputra@gmail.com; ranidivya063@gmail.com;
   salil17093@iiitd.ac.in; phs.sakshi@gmail.com; purandare@iiiitd.ac.in
OI Jobanputra, Mayank/0000-0002-8802-2401; Purandare,
   Rahul/0000-0001-8677-0601; Rani, Divya/0000-0001-8904-3610; Purandare,
   Salil/0000-0002-5147-3233
FU Department of Science and Technology (DST) (India); Science and
   Engineering Research Board (SERB); Confederation of Indian Industry
   (CII); Microsoft Research; Infosys Center for AI at IIIT-Delhi
FX This work was supported in part by the Department of Science and
   Technology (DST) (India), Science and Engineering Research Board (SERB),
   Confederation of Indian Industry (CII), Microsoft Research, and Infosys
   Center for AI at IIIT-Delhi. We thank Dhriti Khanna and Ridhi Jain, who
   were co-participants in the labelling of the extracted match paiforrs.
   We also thank the six participants of the user study that was conducted
   to capture the efforts required in preparing inputs to METALLICUS.
CR [Anonymous], 2018, AWESOME JAVA
   [Anonymous], 2018, AWESOME PYTHON
   [Anonymous], 2017, GITHUB 2017 STAT
   Asaithambi Suriya Priya R., 2013, Safe and Secure Software Reuse. 13th International Conference on Software Reuse, ICSR 2013. Proceedings: LNCS 7925, P49, DOI 10.1007/978-3-642-38977-1_4
   Bajracharya S.K., 2010, P 18 ACM SIGSOFT INT, P157, DOI 10.1145/1882291.1882316
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Breckel A., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P175, DOI 10.1109/MSR.2012.6224278
   Bui NDQ, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P33, DOI 10.1145/3183399.3183427
   Chatterjee S, 2009, LECT NOTES COMPUT SC, V5503, P385
   Della Toffola L, 2017, IEEE INT CONF AUTOM, P44, DOI 10.1109/ASE.2017.8115617
   Fang C., 2020, P 29 ACM SIGSOFT INT, P516, DOI 10.1145/3395363.3397362
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P321, DOI 10.1145/1368088.1368132
   Grechanik M., 2007, PROC 4 IEEE INT WORK, P12, DOI DOI 10.1109/MSR.2007.9
   Gulwani S, 2018, ACM SIGPLAN NOTICES, V53, P465, DOI [10.1145/3192366.3192387, 10.1145/3296979.3192387]
   Harris S., 2003, SIMIAN SIMILARITY AN
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Janjic W, 2013, 2013 8TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST (AST), P100, DOI 10.1109/IWAST.2013.6595799
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jiang Lingxiao, 2007, P THE 6 JOINT M EURO, P55, DOI DOI 10.1145/1287624.1287634
   Juergens E., 2008, P SOFTW ENG WORKSH, P443
   Kawaguchi S, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P184, DOI 10.1109/APSEC.2004.69
   Lam P., 2011, P CET US COMP INFR W, V15, P35
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Liu Chao, 2006, Proc. 12th ACMSIGKDD Int'l Con. on Knowledge Discovery and Data Mining (KDD 06), P872, DOI DOI 10.1145/1150402.1150522
   Livshits V.B., 2005, ESEC SIGSOFT FSE, P296, DOI [DOI 10.1145/1095430.1081754, DOI 10.1145/1081706.1081754]
   McMillan C, 2012, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2012.6227178
   McMillan C, 2012, PROC INT CONF SOFTW, P848, DOI 10.1109/ICSE.2012.6227134
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Melhase T., 2012, JAVA2PYTHON
   Mikolov T., 2013, INT C LEARNING REPRE, P1
   Nafi KW, 2020, J SYST SOFTWARE, V162, DOI 10.1016/j.jss.2019.110491
   Nguyen A.T., 2014, P 29 ACM IEEE INT C, P457, DOI [10.1145/2642937.2643010, DOI 10.1145/2642937.2643010]
   Perez Daniel, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P518, DOI 10.1109/MSR.2019.00078
   Ramos J, 2003, P 1 INSTRUCTIONAL C, V242, P29
   Rehurek R., 2011, Gensim-python framework for vector space modelling, V3
   Roziere B., 2020, ADV NEURAL INFORM PR, V33
   Sager T., 2006, P 2006 INT WORKSHOP, P65, DOI DOI 10.1145/1137983.1138000
   Seiffert D, 2017, J SYST SOFTWARE, V123, P79, DOI 10.1016/j.jss.2016.10.002
   Sidorov G, 2014, COMPUT SIST, V18, P491
   Sondhi D, 2019, IEEE INT CONF SOFTW, P79, DOI 10.1109/ICST.2019.00018
   Stolee KT, 2016, J SYST SOFTWARE, V116, P35, DOI 10.1016/j.jss.2015.04.081
   Taneja K., 2010, P IEEE ACM INT C AUT, P131
   Teyton C, 2013, WORK CONF REVERSE EN, P192, DOI 10.1109/WCRE.2013.6671294
   Thung F, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P600, DOI 10.1109/ICSM.2012.6405331
   Vislayski T, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P512, DOI 10.1109/SANER.2018.8330250
   Wang YR, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P440, DOI 10.1145/2591062.2591106
   Zhang TY, 2017, PROC INT CONF SOFTW, P665, DOI 10.1109/ICSE.2017.67
   Zhang Y, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P13, DOI 10.1109/SANER.2017.7884605
NR 48
TC 0
Z9 0
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 4
PY 2021
VL 48
IS 7
BP 2262
EP 2276
DI 10.1109/TSE.2021.3057163
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5ZE
UT WOS:000825974000002
DA 2024-07-18
ER

PT J
AU Palomba, F
   Tamburri, DA
   Fontana, FA
   Oliveto, R
   Zaidman, A
   Serebrenik, A
AF Palomba, Fabio
   Tamburri, Damian Andrew
   Fontana, Francesca Arcelli
   Oliveto, Rocco
   Zaidman, Andy
   Serebrenik, Alexander
TI Beyond Technical Aspects: How Do Community Smells Influence the
   Intensity of Code Smells?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Code smells; organizational structure; community smells; mixed-methods
   study
ID CLUSTER-ANALYSIS METHOD; BAD; IMPACT; ALGORITHMS; COMPLEXITY; QUALITY;
   FAULTS
AB Code smells are poor implementation choices applied by developers during software evolution that often lead to critical flaws or failure. Much in the same way, community smells reflect the presence of organizational and socio-technical issues within a software community that may lead to additional project costs. Recent empirical studies provide evidence that community smells are often-if not always-connected to circumstances such as code smells. In this paper we look deeper into this connection by conducting a mixed-methods empirical study of 117 releases from 9 open-source systems. The qualitative and quantitative sides of our mixed-methods study were run in parallel and assume a mutually-confirmative connotation. On the one hand, we survey 162 developers of the 9 considered systems to investigate whether developers perceive relationship between community smells and the code smells found in those projects. On the other hand, we perform a fine-grained analysis into the 117 releases of our dataset to measure the extent to which community smells impact code smell intensity (i.e., criticality). We then propose a code smell intensity prediction model that relies on both technical and community-related aspects. The results of both sides of our mixed-methods study lead to one conclusion: community-related factors contribute to the intensity of code smells. This conclusion supports the joint use of community and code smells detection as a mechanism for the joint management of technical and social problems around software development communities.
C1 [Palomba, Fabio] Univ Zurich, CH-8006 Zurich, Switzerland.
   [Tamburri, Damian Andrew; Serebrenik, Alexander] Eindhoven Univ Technol, NL-5612 AZ Eindhoven, Netherlands.
   [Fontana, Francesca Arcelli] Univ Milano Bicocca, I-20126 Milan, Italy.
   [Oliveto, Rocco] Univ Molise, I-86100 Campobasso, Italy.
   [Zaidman, Andy] Delft Unvers Technol, NL-2628 CD Delft, Netherlands.
C3 University of Zurich; Eindhoven University of Technology; University of
   Milano-Bicocca; University of Molise; Delft University of Technology
RP Palomba, F (corresponding author), Univ Zurich, CH-8006 Zurich, Switzerland.
EM palomba@ifi.uzh.ch; d.a.tamburri@tue.nl; arcelli@unimib.it;
   rocco.oliveto@unimol.it; a.e.zaidman@tudelft.nl; a.serebrenik@tue.nl
RI Fontana, Francesca Arcelli/K-4785-2016; Tamburri, Damian
   Andrew/AAJ-2507-2021; Zaidman, Andy/O-6542-2014
OI Tamburri, Damian Andrew/0000-0003-1230-8961; Zaidman,
   Andy/0000-0003-2413-3935; Arcelli Fontana,
   Francesca/0000-0002-1195-530X; Serebrenik,
   Alexander/0000-0002-1418-0095; Palomba, Fabio/0000-0001-9337-5116
FU Swiss National Science Foundation through the SNF [PP00P2_170529]
FX The authors would like to thank the Associate Editor and anonymous
   Reviewers for the insightful comments that allowed to significantly
   strengthen this paper. Palomba gratefully acknowledges the support of
   the Swiss National Science Foundation through the SNF Project No.
   PP00P2_170529.
CR Almeida DA, 2017, INT C PROGRAM COMPRE, P1, DOI 10.1109/ICPC.2017.7
   Alon U, 2007, NAT REV GENET, V8, P450, DOI 10.1038/nrg2102
   Ammerlaan E, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P504, DOI 10.1109/SANER.2015.7081865
   Androutsellis-Theotokis Stephanos, 2010, Foundations and Trends in Technology, Information and Operations Management, V4, P187, DOI 10.1561/0200000026
   [Anonymous], 2018, EMPIR SOFTW ENG
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   [Anonymous], 2016, 2016 IEEE 24th International Conference on Program Comprehension (ICPC)
   [Anonymous], 2002, RES DESIGN QUALITATI
   Antoine J.Y., 2014, P 14 C EUR CHAPT ASS, P550, DOI DOI 10.3115/V1/E14-1058
   Avelino Guilherme, 2016, Proceedings of IEEE 24th International Conference on Program Comprehension (ICPC), P1
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Baldi P, 2000, BIOINFORMATICS, V16, P412, DOI 10.1093/bioinformatics/16.5.412
   Bass L., 1997, SOFTWARE ARCHITECTUR
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Bergman JZ, 2012, J SOC PSYCHOL, V152, P17, DOI 10.1080/00224545.2010.538763
   Bird Christian, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P109, DOI 10.1109/ISSRE.2009.17
   Bo Pang, 2008, Foundations and Trends in Information Retrieval, V2, P1, DOI 10.1561/1500000001
   Brier G. W., 1950, MON WEATHER REV, V78, P1, DOI 10.1175/1520-0493(1950)078andlt;0001:VOFEITandgt;2.0.CO;2
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Carmer S.G., 1985, J. Agron. Educ, V14, P19, DOI [10.2134/jae1985.0019, DOI 10.2134/JAE1985.0019]
   Cataldo M, 2012, J SOFTW-EVOL PROC, V24, P153, DOI 10.1002/smr.477
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Catolino G, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P43, DOI 10.1145/3197231.3198447
   Catolino G, 2018, J SYST SOFTWARE, V143, P14, DOI 10.1016/j.jss.2018.05.003
   Chatzigeorgiou A, 2014, INNOV SYST SOFTW ENG, V10, P3, DOI 10.1007/s11334-013-0205-z
   Chhabra JK, 2003, INFORM SOFTWARE TECH, V45, P539, DOI [10.1016/SO950-5849(03)00033-8, 10.1016/S0950-5849(03)00033-8]
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Conover W. J., 1998, PRACTICAL NONPARAMET, V3rd
   Constantinou E, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P34, DOI 10.1109/SANER.2017.7884607
   CONWAY ME, 1968, DATAMATION, V14, P28
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Cunningham W., 1993, OOPS Messenger, V4, P29
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Datta S., 2011, P 4 IND SOFTW ENG C, P21
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Di Nucci D, 2018, IEEE T SOFTWARE ENG, V44, P5, DOI 10.1109/TSE.2017.2659747
   Di Penta M, 2017, PROC IEEE ACM INT C, P499, DOI 10.1109/ICSE-C.2017.163
   Dillman DA., 2009, INTERNET MAIL MIXED
   Fernandes E, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915984
   Ferreira M, 2017, INT C PROGRAM COMPRE, P207, DOI 10.1109/ICPC.2017.35
   FINCH J, 1987, SOCIOLOGY, V21, P105, DOI 10.1177/0038038587021001008
   Fonseca SB, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P243, DOI 10.1109/ICGSE.2006.261241
   Fontana F. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P450, DOI 10.1109/ICSTW.2011.12
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2017, KNOWL-BASED SYST, V128, P43, DOI 10.1016/j.knosys.2017.04.014
   Fontana FA, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P16, DOI 10.1109/MTD.2015.7332620
   Fontana FA, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a5
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Friedman M, 1937, J AM STAT ASSOC, V32, P675, DOI 10.2307/2279372
   GATES CE, 1978, AGRON J, V70, P462, DOI 10.2134/agronj1978.00021962007000030024x
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Gupta A, 2018, ENTROPY-SWITZ, V20, DOI 10.3390/e20050372
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Han J, 2012, MOR KAUF D, P1
   Harispe S., 2015, SEMANTIC SIMILARITY, V8
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   HendersonSellers B, 1996, OBJECT ORIENTED SYST, V3, P143
   Herbold S., 2013, P 9 INT C PREDICTIVE, P1
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Joblin M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P563, DOI 10.1109/ICSE.2015.73
   Johnson R. B., 2004, ED RES, V33, P14, DOI DOI 10.3102/0013189X033007014
   Jongeling R, 2017, EMPIR SOFTW ENG, V22, P2543, DOI 10.1007/s10664-016-9493-x
   Kaur A, 2017, 2017 INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND DATA SCIENCE (MLDS 2017), P9, DOI 10.1109/MLDS.2017.8
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kohavi R, 1997, ARTIF INTELL, V97, P273, DOI 10.1016/S0004-3702(97)00043-X
   Korver F., 2003, Journal of Communication Management, V7, P197, DOI [10.1108/13632540310807377, DOI 10.1108/13632540310807377]
   Kovalenko V, 2018, IEEE INT CONF AUTOM, P202, DOI 10.1145/3238147.3238169
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Kruchten Philippe, 2012, Software Engineering Notes, V37, P36, DOI 10.1145/2347696.2347698
   Kwan I, 2011, IEEE T SOFTWARE ENG, V37, P307, DOI 10.1109/TSE.2011.29
   Lancichinetti A, 2011, PLOS ONE, V6, DOI 10.1371/journal.pone.0018961
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Likert R., 1932, ARCH PSYCHOL, V140, P55
   Lin B, 2017, INT CONF GLOBAL SOFT, P66, DOI 10.1109/ICGSE.2017.11
   Macdonald IG., 1998, Symmetric functions and Hall polynomials
   Magnoni S., 2017, COMMUN ACM
   Magnoni S., 2016, COPYRIGHT POLITECNIC
   Mansoor U, 2017, SOFTWARE QUAL J, V25, P529, DOI 10.1007/s11219-016-9309-7
   Marinescu R, 2012, IBM J RES DEV, V56, DOI 10.1147/JRD.2012.2204512
   Mislove A, 2007, IMC'07: PROCEEDINGS OF THE 2007 ACM SIGCOMM INTERNET MEASUREMENT CONFERENCE, P29
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Munson JC, 1998, PROC IEEE INT CONF S, P24, DOI 10.1109/ICSM.1998.738486
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Nassif M, 2017, PROC IEEE INT CONF S, P261, DOI 10.1109/ICSME.2017.64
   Novielli N, 2018, IEEE WORK CONF MIN S, P364, DOI 10.1145/3196398.3196403
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Oizumi W, 2016, PROC INT CONF SOFTW, P440, DOI 10.1145/2884781.2884868
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Oliveto R, 2010, EUR CON SFTWR MTNCE, P248, DOI 10.1109/CSMR.2010.47
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Palomba F, 2019, IEEE T SOFTWARE ENG, V45, P194, DOI 10.1109/TSE.2017.2770122
   Palomba F, 2019, INFORM SOFTWARE TECH, V105, P43, DOI 10.1016/j.infsof.2018.08.004
   Palomba F, 2018, PROC IEEE INT CONF S, P311, DOI 10.1109/ICSME.2018.00040
   Palomba F, 2018, IEEE T SOFTWARE ENG, V44, P977, DOI 10.1109/TSE.2017.2752171
   Palomba F, 2018, PROC IEEE ACM INT C, P240, DOI 10.1145/3183440.3194950
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2018, INFORM SOFTWARE TECH, V99, P1, DOI 10.1016/j.infsof.2018.02.004
   Palomba F, 2017, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2017.12
   Palomba F, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P487, DOI 10.1109/SANER.2017.7884659
   Palomba F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P482, DOI 10.1109/MSR.2015.69
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Pascarella L, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P144, DOI 10.1145/3197231.3197251
   Peters R, 2012, EUR CON SFTWR MTNCE, P411, DOI 10.1109/CSMR.2012.79
   Pietrzak B, 2006, LECT NOTES COMPUT SC, V4044, P75
   Powers David M. W., 2015, arXiv preprint arXiv:1503.06410
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Rasool G, 2015, J SOFTW-EVOL PROC, V27, P867, DOI 10.1002/smr.1737
   Rigby PC, 2016, PROC INT CONF SOFTW, P1006, DOI 10.1145/2884781.2884851
   Sahin D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2675067
   Scanniello G., 2017, P 25 INT C PROGR COM
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Serebrenik A, 2017, THERE ARE OTHER FISH
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Singer J, 2002, IEEE T SOFTWARE ENG, V28, P1171, DOI 10.1109/TSE.2002.1158289
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   Spinellis D, 2009, ELECTRON NOTES THEOR, V233, P5, DOI 10.1016/j.entcs.2009.02.058
   Tahmid A, 2017, International Journal of Software Engineering, Technology and Applications, V2, P41
   Tahmid A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 4, P8, DOI 10.1109/SANER.2016.45
   Taibi D, 2017, INFORM SOFTWARE TECH, V92, P223, DOI 10.1016/j.infsof.2017.08.008
   Tamburri DA, 2016, IEEE SOFTWARE, V33, P70, DOI 10.1109/MS.2016.144
   Tamburri DA, 2015, J INTERNET SERV APPL, V6, DOI 10.1186/s13174-015-0024-6
   Tamburri DA, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P61, DOI 10.1109/WICSA.2015.16
   Tamburri DA, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P93, DOI 10.1109/CHASE.2013.6614739
   Tamburri DA, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2522968.2522971
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Valetto G., 2007, 4 INT WORKSHOP MININ, P25, DOI DOI 10.1109/MSR.2007.33
   van den Eijnden RJJM, 2016, COMPUT HUM BEHAV, V61, P478, DOI 10.1016/j.chb.2016.03.038
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Vasilescu Bogdan., 2011, Proceedings of the 2Nd International Workshop on Emerging Trends in Software Metrics, WETSoM '11, P23
   Wasserman S., 1994, SOCIAL NETWORK ANAL
   Williams Laurie A., 2003, Pair programming illuminated
   Wu XD, 2008, KNOWL INF SYST, V14, P1, DOI 10.1007/s10115-007-0114-2
   Zhou YM, 2009, IEEE T SOFTWARE ENG, V35, P607, DOI 10.1109/TSE.2009.32
NR 143
TC 57
Z9 60
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2021
VL 47
IS 1
BP 108
EP 129
DI 10.1109/TSE.2018.2883603
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA PR6XN
UT WOS:000607376900005
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Nassif, M
   Treude, C
   Robillard, MP
AF Nassif, Mathieu
   Treude, Christoph
   Robillard, Martin P.
TI Automatically Categorizing Software Technologies
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Taxonomy; information retrieval; natural language processing; Wikipedia;
   tagging
AB Informal language and the absence of a standard taxonomy for software technologies make it difficult to reliably analyze technology trends on discussion forums and other on-line venues. We propose an automated approach called $\mathrm{Witt}$ Witt for the categorization of software technologies (an expanded version of the hypernym discovery problem). $\mathrm{Witt}$ Witt takes as input a phrase describing a software technology or concept and returns a general category that describes it (e.g., integrated development environment), along with attributes that further qualify it (commercial, php, etc.). By extension, the approach enables the dynamic creation of lists of all technologies of a given type (e.g., web application frameworks). Our approach relies on Stack Overflow and Wikipedia, and involves numerous original domain adaptations and a new solution to the problem of normalizing automatically-detected hypernyms. We compared $\mathrm{Witt}$ Witt with six independent taxonomy tools and found that, when applied to software terms, $\mathrm{Witt}$ Witt demonstrated better coverage than all evaluated alternative solutions, without a corresponding degradation in false positive rate.
C1 [Nassif, Mathieu; Robillard, Martin P.] McGill Univ, Sch Comp Sci, Montreal, PQ H3A 0G4, Canada.
   [Treude, Christoph] Univ Adelaide, Sch Comp Sci, Adelaide, SA 5005, Australia.
C3 McGill University; University of Adelaide
RP Nassif, M (corresponding author), McGill Univ, Sch Comp Sci, Montreal, PQ H3A 0G4, Canada.
EM mnassif@cs.mcgill.ca; christoph.treude@adelaide.edu.au;
   martin@cs.mcgill.ca
RI Nassif, Mathieu/GXF-5254-2022; Treude, Christoph/AAZ-6257-2021
OI Treude, Christoph/0000-0002-6919-2149
FU Natural Sciences and Engineering Council of Canada (NSERC)
FX This work was funded by the Natural Sciences and Engineering Council of
   Canada (NSERC).
CR [Anonymous], 1992, COLING 1992, DOI DOI 10.3115/992133.992154
   [Anonymous], 2008, Tech. Rep.
   [Anonymous], [No title captured]
   [Anonymous], 2004, P 17 INT C NEUR INF
   [Anonymous], 2012, DCMI MET TERMS
   [Anonymous], 2010, Proceedings of the 2010 Conference on Empirical Methods in Natural Language Processing
   [Anonymous], [No title captured]
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bird Steven, 2009, NATURAL LANGUAGE PRO, DOI DOI 10.1007/S10579-010-9124-X
   Bizer C, 2009, J WEB SEMANT, V7, P154, DOI 10.1016/j.websem.2009.07.002
   Caraballo SA, 1999, Proceedings of the 37th Conference on Computational Linguistics, P120, DOI DOI 10.3115/1034678.1034705
   Dalvi B.B., 2012, P 5 ACM INT C WEB SE, DOI DOI 10.1145/2124295.2124327
   Dojchinovski Milan, 2013, Machine Learning and Knowledge Discovery in Databases. European Conference, ECML PKDD 2013. Proceedings: LNCS 8190, P654, DOI 10.1007/978-3-642-40994-3_48
   Falleri JR, 2010, WEBIST 2010: PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS AND TECHNOLOGY, VOL 1, P40
   Flati T, 2014, PROCEEDINGS OF THE 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P945
   Gravano L., 2001, IEEE DATA ENG, V24, P28
   Jaccard P., 1901, B SOCIT VAUDOISE SCI, V37, P547, DOI [10.5169/seals-266440, DOI 10.5169/SEALS-266440]
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Li XM, 2012, PROCEEDINGS OF THE 7TH EURO-ASIA CONFERENCE ON ENVIRONMENT AND CSR: TOURISM, MICE, HOSPITALITY MANAGEMENT AND EDUCATION SESSION, PT I, P64
   Manning C.D., 1999, FDN STAT NATURAL LAN
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Mendes Pablo N, 2011, P 7 INT C SEM SYST, P1, DOI [DOI 10.1145/2063518.2063519, 10.1145/2063518.2063519]
   Mihalcea Rada, 2007, P 16 ACM C C INF KNO, P233, DOI DOI 10.1145/1321440.1321475.19
   Miller G.A., 1990, Int. J. Lexicogr, V3, P235, DOI [DOI 10.1093/IJL/3.4.235, 10.1093/ijl/3.4.235]
   Milne D, 2008, J MENT HEALTH, V17, P509, DOI 10.1080/09638230701530259
   Nakayama K, 2008, P WORKSH SEM SEARCH, P59, DOI DOI 10.1109/TSC.2011.59
   Nonnen J., 2011, 2011 18th Working Conference on Reverse Engineering, P99, DOI 10.1109/WCRE.2011.21
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Ritter A., 2009, Proceedings of AAAI-09 Spring Symposium on Learning by Reading and Learning to Read, P88
   Saha AK, 2013, IEEE WORK CONF MIN S, P73, DOI 10.1109/MSR.2013.6624009
   Seitner J, 2016, LREC 2016 - TENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION, P360
   Stanley Clayton, 2013, P 12 INT C COGN MOD, P414
   Thung F, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P600, DOI 10.1109/ICSM.2012.6405331
   Tian Y, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P568, DOI 10.1145/2591062.2591071
   Tian Y, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P44, DOI 10.1109/CSMR-WCRE.2014.6747213
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Treude C, 2012, IEEE T SOFTWARE ENG, V38, P19, DOI 10.1109/TSE.2010.91
   Wang SW, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P604, DOI 10.1109/ICSM.2012.6405332
   Wang T, 2014, FRONT COMPUT SCI-CHI, V8, P69, DOI 10.1007/s11704-013-2394-x
   Wu W T, 2012, P 2012 ACM SIGMOD IN, P481, DOI DOI 10.1145/2213836.2213891
   Xia X, 2013, IEEE WORK CONF MIN S, P287, DOI 10.1109/MSR.2013.6624040
   Yamada I., 2009, EMNLP '09: Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing, P929
   Yang JQ, 2014, EMPIR SOFTW ENG, V19, P1856, DOI 10.1007/s10664-013-9264-x
   Zesch T, 2008, SIXTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION, LREC 2008, P1646
NR 45
TC 10
Z9 10
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2020
VL 46
IS 1
BP 20
EP 32
DI 10.1109/TSE.2018.2836450
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA KE2MI
UT WOS:000508392800002
DA 2024-07-18
ER

PT J
AU Mercan, H
   Yilmaz, C
   Kaya, K
AF Mercan, Hanefi
   Yilmaz, Cemal
   Kaya, Kamer
TI CHiP: A Configurable Hybrid Parallel Covering Array Constructor
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Simulated annealing; Graphics processing units; Parallel processing;
   Benchmark testing; Upper bound; Scalability; Covering arrays; parallel
   computing; graphics processing units; CUDA; metaheuristic search;
   constraint satisfaction problem
ID TEST-GENERATION; TEST SUITES; OPTIMIZATION; ALGORITHMS; STRATEGY;
   SEARCH; BOUNDS
AB We present a configurable, hybrid, and parallel covering array constructor, called CHiP. CHiP is parallel in that it utilizes vast amount of parallelism provided by graphics processing units (GPUs). CHiP is hybrid in that it bundles the bests of two construction approaches for computing covering arrays; a metaheuristic search-based approach for efficiently covering a large portion of the required combinations and a constraint satisfaction-based approach for effectively covering the remaining hard-to-cover-by-chance combinations. CHiP is configurable in that a trade-off between covering array sizes and construction times can be made. We have conducted a series of experiments, in which we compared the efficiency and effectiveness of CHiP to those of a number of existing constructors by using both full factorial designs and well-known benchmarks. In these experiments, we report new upper bounds on covering array sizes, demonstrating the effectiveness of CHiP, and the first results for a higher coverage strength, demonstrating the scalability of CHiP.
C1 [Mercan, Hanefi; Yilmaz, Cemal; Kaya, Kamer] Sabanci Univ, Fac Engn & Nat Sci, TR-34956 Istanbul, Turkey.
C3 Sabanci University
RP Yilmaz, C (corresponding author), Sabanci Univ, Fac Engn & Nat Sci, TR-34956 Istanbul, Turkey.
EM hanefimercan@sabanciuniv.edu; cyilmaz@sabanciuniv.edu;
   kaya@sabanciuniv.edu
RI Yilmaz, Cemal/AAY-4500-2020; Mercan, Hanefi/R-8772-2019; Kaya,
   Kamer/J-8972-2015
OI Yilmaz, Cemal/0000-0003-4124-2295; Mercan, Hanefi/0000-0002-9171-082X
FU Scientific and Technological Research Council of Turkey [113E546]
FX This research was supported by the Scientific and Technological Research
   Council of Turkey (113E546). Furthermore, the Tesla K40 machines used
   for this research was donated by the NVIDIA Corporation.
CR Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Banbara M, 2010, LECT NOTES COMPUT SC, V6397, P112, DOI 10.1007/978-3-642-16242-8_9
   Bryce RC, 2006, INFORM SOFTWARE TECH, V48, P960, DOI 10.1016/j.infsof.2006.03.004
   Bryce RC, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1082
   Calvagna A, 2009, IEEE ENABL TECHNOL, P213, DOI 10.1109/WETICE.2009.52
   Calvagna A, 2009, IEEE ICST WORKSHOP, P10, DOI 10.1109/ICSTW.2009.7
   CERNY V, 1985, J OPTIMIZ THEORY APP, V45, P41, DOI 10.1007/BF00940812
   Cohen M.B., 2007, P 2007 INT S SOFTW T, P129
   Cohen MB, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P394, DOI 10.1109/ISSRE.2003.1251061
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Colbourn C.J., 2004, Le Matematiche, VLIX, P125
   Czerwonka J., 2008, PAIRWISE TESTING REA
   Danziger P, 2009, THEOR COMPUT SCI, V410, P5403, DOI 10.1016/j.tcs.2009.07.057
   Demiroz G., 2012, P 4 INT C ADV SYST T, P9
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Garvin BJ, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/SSBSE.2009.25
   George H. Avila, 2012, THESIS
   HAJEK B, 1988, MATH OPER RES, V13, P311, DOI 10.1287/moor.13.2.311
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Hnich B., 2004, Recent Advances in Constraints. Joint ERCIM/CoLogNet International Workshop on Constraint Solving and Constraint Logic Programming, CSCLP 2004. Revised Selected and Invited Papers (Lecture Notes in Artificial Intelligence Vol.3319), P172
   Hnich B, 2006, CONSTRAINTS, V11, P199, DOI 10.1007/s10601-006-7094-9
   Hou MM, 2006, LECT NOTES COMPUT SC, V4175, P138
   Ido N, 2003, J COMB DES, V11, P89, DOI 10.1002/jcd.10039
   Inam R., 2010, An Introduction to GPGPU Programming - CUDA Architecture
   Jenkins B., 2005, JENNY PAIRWISE TESTI
   Jia Y, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P540, DOI 10.1109/ICSE.2015.71
   Johansen Martin Fagereng, 2012, P 16 INT SOFTWARE PR, P46, DOI [10.1145/2362536.2362547, DOI 10.1145/2362536.2362547]
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Kobayashi N., 2002, DESIGN EVALUATION AU
   Koc U., 2014, THESIS
   Kuhn DR, 2015, ADV COMPUT, V99, P1, DOI 10.1016/bs.adcom.2015.05.003
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Lei Y, 2007, SOFTW TEST VERIF REL, V17, P207, DOI 10.1002/stvr.369
   Lin JK, 2015, IEEE INT CONF AUTOM, P494, DOI 10.1109/ASE.2015.61
   Lopez-Escogido D, 2008, LECT NOTES ARTIF INT, V5317, P44, DOI 10.1007/978-3-540-88636-5_4
   Mats G., 2006, HSIKITR06001 U SKOVD
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Nurmela KJ, 2004, DISCRETE APPL MATH, V138, P143, DOI 10.1016/S0166-218X(03)00291-9
   Rothermel G, 2004, ACM T SOFTW ENG METH, V13, P277, DOI 10.1145/1027092.1027093
   Segall I., 2011, P 2011 INT S SOFTWAR, P254
   Stevens B., 1998, Designs, Codes and Cryptography, V15, P279, DOI 10.1023/A:1008329410829
   Stevens B., 1998, P C CTR ADV STUD COL
   Tamura N., 2008, P 2 INT CSP SOLV COM, P65
   Torres-Jimenez J, 2012, INFORM SCIENCES, V185, P137, DOI 10.1016/j.ins.2011.09.020
   Williams A. W., 2002, Testing of Communicating Systems XIV. Application to Internet Technologies and Services. IFIP TC6/WG6.1 Fourteenth International Conference on Testing of Communicating Systems (TestCom 2002), P283
   Williams AW, 2000, INT FED INFO PROC, V48, P59
   Wu HY, 2015, IEEE T EVOLUT COMPUT, V19, P575, DOI 10.1109/TEVC.2014.2362532
   Yamada A, 2016, IEEE INT CONF AUTOM, P614, DOI 10.1145/2970276.2970335
   Yan J, 2006, P INT COMP SOFTW APP, P385
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Yilmaz C, 2014, IEEE T SOFTWARE ENG, V40, P43, DOI 10.1109/TSE.2013.53
   Yilmaz C, 2013, IEEE T SOFTWARE ENG, V39, P684, DOI 10.1109/TSE.2012.65
   Yokoi K, 2015, PROCEEDINGS OF INTERNATIONAL CONFERENCE ON ARTIFICIAL LIFE AND ROBOTICS (ICAROB2015), P1
   Younis MI, 2010, ETRI J, V32, P73, DOI 10.4218/etrij.10.0109.0266
   Yu LB, 2014, IEEE HI ASS SYS ENGR, P65, DOI 10.1109/HASE.2014.18
   Yu LB, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P370, DOI 10.1109/ICST.2013.52
   Yu LB, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P242, DOI 10.1109/ICST.2013.35
   Yuan X, 2011, IEEE T SOFTWARE ENG, V37, P559, DOI 10.1109/TSE.2010.50
NR 59
TC 16
Z9 16
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2019
VL 45
IS 12
BP 1270
EP 1291
DI 10.1109/TSE.2018.2837759
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA JW0NQ
UT WOS:000502756700006
DA 2024-07-18
ER

PT J
AU Choetkiertikul, M
   Dam, HK
   Tran, T
   Pham, T
   Ghose, A
   Menzies, T
AF Choetkiertikul, Morakot
   Hoa Khanh Dam
   Truyen Tran
   Trang Pham
   Ghose, Aditya
   Menzies, Tim
TI A Deep Learning Model for Estimating Story Points
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software analytics; effort estimation; story point estimation; deep
   learning
ID NEURAL-NETWORKS; SOFTWARE; PROJECT; COMPLEXITY; PREDICTION; STATISTICS
AB Although there has been substantial research in software analytics for effort estimation in traditional software projects, little work has been done for estimation in agile projects, especially estimating the effort required for completing user stories or issues. Story points are the most common unit of measure used for estimating the effort involved in completing a user story or resolving an issue. In this paper, we propose a prediction model for estimating story points based on a novel combination of two powerful deep learning architectures: long short-term memory and recurrent highway network. Our prediction system is end-to-end trainable from raw input data to prediction outcomes without any manual feature engineering. We offer a comprehensive dataset for story points-based estimation that contains 23,313 issues from 16 open source projects. An empirical evaluation demonstrates that our approach consistently outperforms three common baselines (Random Guessing, Mean, and Median methods) and six alternatives (e.g., using Doc2Vec and Random Forests) in Mean Absolute Error, Median Absolute Error, and the Standardized Accuracy.
C1 [Choetkiertikul, Morakot; Hoa Khanh Dam; Ghose, Aditya] Univ Wollongong, Fac Engn & Informat Sci, Sch Comp & Informat Technol, Wollongong, NSW 2522, Australia.
   [Choetkiertikul, Morakot] Mahidol Univ, Fac Informat & Commun Technol, Nakhon Pathom 73170, Thailand.
   [Truyen Tran; Trang Pham] Deakin Univ, Sch Informat Technol, Waurn Ponds, Vic 3216, Australia.
   [Menzies, Tim] North Carolina State Univ, Raleigh, NC 27695 USA.
C3 University of Wollongong; Mahidol University; Deakin University; North
   Carolina State University
RP Choetkiertikul, M (corresponding author), Univ Wollongong, Fac Engn & Informat Sci, Sch Comp & Informat Technol, Wollongong, NSW 2522, Australia.; Choetkiertikul, M (corresponding author), Mahidol Univ, Fac Informat & Commun Technol, Nakhon Pathom 73170, Thailand.
EM mc650@uow.edu.au; hoa@uow.edu.au; truyen.tran@deakin.edu.au;
   phtra@deakin.edu.au; aditya@uow.edu.au; tim.menzies@gmail.com
RI Choetkiertikul, Morakot/AAN-8822-2020; Pham, Trang Ngoc/KRP-7874-2024;
   Menzies, Tim/X-7680-2019; Dam, Hoa Khanh/C-6058-2014
OI Choetkiertikul, Morakot/0000-0001-8188-4749; Menzies,
   Tim/0000-0002-5040-3196; Dam, Hoa Khanh/0000-0003-4246-0526; Tran,
   Truyen/0000-0001-6531-8907
FU Faculty of Information and Communication Technology, Mahidol University;
   NVIDIA Corporation
FX This research project was partially supported by Faculty of Information
   and Communication Technology, Mahidol University. We also gratefully
   acknowledge the support of NVIDIA Corporation with the donation of the
   Titan X Pascal GPU used for this research.
CR Abdi H., 2007, Encyclopedia of measurement and statistics, P1
   Abrahamsson Pekka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P344
   Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], ARXIV E PRINTS
   [Anonymous], 2016, PR4OCEEDINGS 30 INT
   [Anonymous], DELIVERING LARGE SCA
   [Anonymous], EFFORT ESTIMATION ST
   [Anonymous], P 35 ACM SIGPLAN C P
   [Anonymous], 2002, HAWTHORN WOODS RENAI
   [Anonymous], 1989, TECHNOMETRICS, DOI [10.1080/00401706.1989.10488618, DOI 10.1080/01421590601106353]
   [Anonymous], 2003, 9 PANHELLENIC C INFO
   [Anonymous], 2016, PROMISE
   [Anonymous], 1997, NEURAL COMPUT
   [Anonymous], 2002, Encyclopedia of Software Engineering, DOI DOI 10.1002/0471028959.SOF282
   [Anonymous], 2017, Proceedings of the 34th International Conference on Machine Learning-Volume
   [Anonymous], 1SC7 ISOIEC JTC
   [Anonymous], 2008, Proceedings of the 4th international workshop on Predictor models in software engineering, DOI [DOI 10.1145/1370788.1370804, 10.1145/1370788.1370804]
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   [Anonymous], 2008, P 7 ACM INT C IMAGE
   [Anonymous], 2014, P INT C INT C MACH L
   [Anonymous], 2004, P SOFTWARE MEASUREME
   [Anonymous], PROC INT CONF SOFTW
   [Anonymous], 2014, SOFTWARE PROJECT EFF
   [Anonymous], 2011, INCOSE International Symposium
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bengio Y, 2009, FOUND TRENDS MACH LE, V2, P1, DOI 10.1561/2200000006
   Bhattacharya Pamela., 2011, PROCEEDING 8 WORKING, P207, DOI DOI 10.1145/1985441.1985472
   Bianchini M, 2014, IEEE T NEUR NET LEAR, V25, P1553, DOI 10.1109/TNNLS.2013.2293637
   Braga PL, 2007, PROC INT C TOOLS ART, P181, DOI 10.1109/ICTAI.2007.172
   Cervone H. Frank, 2011, OCLC Systems & Services, V27, P18, DOI 10.1108/10650751111106528
   Choetkiertikul M, 2018, IEEE T SOFTWARE ENG, V44, P551, DOI 10.1109/TSE.2017.2693989
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   Cohn M., 2005, Agile Estimating and Planning
   Collobert R, 2011, J MACH LEARN RES, V12, P2493
   Collopy F, 2007, INT J FORECASTING, V23, P469, DOI 10.1016/j.ijforecast.2007.05.011
   Dam H. K., 2016, FSE 2016, P1
   Erhan D, 2010, J MACH LEARN RES, V11, P625
   Flyvbjerg B, 2011, HARVARD BUS REV, V89, P23, DOI 10.2139/ssrn.2229735
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Gers FA, 2000, NEURAL COMPUT, V12, P2451, DOI 10.1162/089976600300015015
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Graves A, 2013, INT CONF ACOUST SPEE, P6645, DOI 10.1109/ICASSP.2013.6638947
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Gutmann MU, 2012, J MACH LEARN RES, V13, P307
   Hearty P, 2009, IEEE T SOFTWARE ENG, V35, P124, DOI 10.1109/TSE.2008.76
   Hinton GE, 2006, SCIENCE, V313, P504, DOI 10.1126/science.1127647
   Hinton G, 2012, IEEE SIGNAL PROC MAG, V29, P82, DOI 10.1109/MSP.2012.2205597
   Dam HK, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P944, DOI 10.1145/2950290.2983985
   Hochreiter Sepp., 2009, A Field Guide to Dynamical Recurrent Networks, P237
   Jia YQ, 2014, PROCEEDINGS OF THE 2014 ACM CONFERENCE ON MULTIMEDIA (MM'14), P675, DOI 10.1145/2647868.2654889
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Jorgensen M, 2014, IEEE SOFTWARE, V31, P37, DOI 10.1109/MS.2014.49
   Jorgensen M, 2009, IEEE T SOFTWARE ENG, V35, P368, DOI 10.1109/TSE.2009.2
   Kaiming He, 2015, 2015 IEEE International Conference on Computer Vision (ICCV). Proceedings, P1026, DOI 10.1109/ICCV.2015.123
   Kalchbrenner N, 2014, PROCEEDINGS OF THE 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P655, DOI 10.3115/v1/p14-1062
   Kanmani S, 2007, ICCTA 2007: INTERNATIONAL CONFERENCE ON COMPUTING: THEORY AND APPLICATIONS, PROCEEDINGS, P261
   Kanmani S., 2008, 1st India Software Engineering Conference. ISEC 2008, P141
   Karpathy A., 2015, ARXIV150602078
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kocaguneli E, 2015, EMPIR SOFTW ENG, V20, P813, DOI 10.1007/s10664-014-9300-5
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Kocaguneli E, 2011, EUROMICRO CONF PROC, P419, DOI 10.1109/SEAA.2011.71
   Kumar A, 2016, PR MACH LEARN RES, V48
   Li YF, 2009, J SYST SOFTWARE, V82, P241, DOI 10.1016/j.jss.2008.06.001
   McCarthy J, 2007, ARTIF INTELL, V171, P1174, DOI 10.1016/j.artint.2007.10.009
   McConnell S., 2006, Software Estimation: Demystifying the Black Art
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   Menzies T., 2015, The promise repository of empirical software engineering data
   Menzies T, 2006, IEEE T SOFTWARE ENG, V32, P883, DOI 10.1109/TSE.2006.114
   Menzies T, 2012, EMPIR SOFTW ENG, V17, P1, DOI 10.1007/s10664-011-9193-5
   Menzies Tim, 2014, Sharing data and models in software engineering
   Mhaskar H, 2017, AAAI CONF ARTIF INTE, P2343
   Montúfar G, 2014, ADV NEUR IN, V27
   Moraes R, 2013, EXPERT SYST APPL, V40, P621, DOI 10.1016/j.eswa.2012.07.059
   Ng JYH, 2015, PROC CVPR IEEE, P4694, DOI 10.1109/CVPR.2015.7299101
   Panda A, 2015, PROCEDIA COMPUT SCI, V57, P772, DOI 10.1016/j.procs.2015.07.474
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Perkusich Mirko., 2013, SAC'13: Proceedings of the 28th Annual ACM Symposium on Applied Computing, page, P1037
   Port D, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P51
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Schmidhuber J, 2015, NEURAL NETWORKS, V61, P85, DOI 10.1016/j.neunet.2014.09.003
   Sentas P, 2005, INFORM SOFTWARE TECH, V47, P17, DOI 10.1016/j.infsof.2004.05.001
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Sommerville I., 2010, SOFTWARE ENG
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Srivastava RK., 2015, P 28 INT C NEURAL IN, P2377, DOI DOI 10.48550/ARXIV.1507.06228
   Sundermeyer M, 2012, 13TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION 2012 (INTERSPEECH 2012), VOLS 1-3, P194
   Sutskever I, 2014, ADV NEUR IN, V27
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   Pham T, 2017, J BIOMED INFORM, V69, P218, DOI 10.1016/j.jbi.2017.04.001
   Pham T, 2016, INT C PATT RECOG, P3542, DOI 10.1109/ICPR.2016.7900183
   Usman M., 2014, PROMISE '14: Proceedings of the 10th International Conference on Predictive Models in Software Engineering, page, P82
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Weston J., 2008, P 25 INT C MACH LEAR, P1168
   Whigham PA, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2738037
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Zwillinger D., 1999, CRC Standard Probability and Statistics Tables and Formulae
NR 109
TC 94
Z9 99
U1 10
U2 58
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2019
VL 45
IS 7
BP 637
EP 656
DI 10.1109/TSE.2018.2792473
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA IK7MZ
UT WOS:000476775600001
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Palyart, M
   Murphy, GC
   Masrani, V
AF Palyart, Marc
   Murphy, Gail C.
   Masrani, Vaden
TI A Study of Social Interactions in Open Source Component Use
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software reuse; collaboration; social interactions; OSS components
AB All kinds of software projects, whether open or closed source, rely on open source components. Repositories that serve open source components to organizations, such as the Central Repository and npmjs. org, report billions of requests per year. Despite the widespread reliance of projects on open source components, little is known about the social interactions that occur between developers of a project using a component and developers of the component itself. In this paper, we investigate the social interactions that occur for 5,133 pairs of projects, from two different communities (Java and Ruby) representing user projects that depend on a component project. We consider such questions as how often are there social interactions when a component is used? When do the social interactions occur? And, why do social interactions occur? From our investigation, we observed that social interactions typically occur after a component has been chosen for use and relied upon. When social interactions occur, they most frequently begin with creating issues or feature requests. We also found that the more use a component receives, the less likely it is that developers of project using the component will interact with the component project, and when those interactions occur, they will be shorter in duration. Our results provide insight into how socio-technical interactions occur beyond the level of an individual or small group of projects previously studied by others and identify the need for a new model of socio-technical congruence for dependencies between, instead of within, projects.
C1 [Palyart, Marc; Murphy, Gail C.; Masrani, Vaden] Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1Z4, Canada.
C3 University of British Columbia
RP Palyart, M (corresponding author), Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1Z4, Canada.
EM mpalyart@cs.ubc.ca; murphy@cs.ubc.ca; vadmas@cs.ubc.ca
CR [Anonymous], 2006, SYST SCI 2006 HICSS
   [Anonymous], 2017, PAPER ARTIFACTS
   [Anonymous], 2015, SONATYPE 2015 STATE
   Benbya H, 2010, COMMUN ASSOC INF SYS, V27, P589
   Betz Stefanie, 2013, Proceedings of the 2013 3rd International Workshop on Replication in Empirical Software Engineering Research (RESER 2013), P15, DOI 10.1109/RESER.2013.8
   Bird Christian, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P109, DOI 10.1109/ISSRE.2009.17
   Cataldo M., 2006, P 2006 20 06 ANN C C, P353, DOI DOI 10.1145/1180875.1180929
   Cataldo M, 2008, CSCW: 2008 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, CONFERENCE PROCEEDINGS, P579
   Falleri J. - R., 2013, ARXIV13090456 U BORD
   Finley Klint, 2016, WIRED
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Krishnamurthy S., 2006, Knowledge Technology & Policy, V18, P17, DOI 10.1007/s12130-006-1002-x
   Kula RG, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P127, DOI 10.1109/VISSOFT.2014.29
   Lammel R., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, P1317, DOI 10.1145/1982185.1982471
   Mileva YM, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P57
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Raemaekers S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P378, DOI 10.1109/ICSM.2012.6405296
   Raymond E. S., 1998, 1 MONDAY, V330
   Rigby PC, 2012, IEEE SOFTWARE, V29, P56, DOI 10.1109/MS.2012.24
   Teyton C, 2014, J SOFTW-EVOL PROC, V26, P1030, DOI 10.1002/smr.1660
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Weiss A., 2007, EMERGING FREE OPEN S, P46
   Weiss M, 2006, INT FED INFO PROC, V203, P21
NR 24
TC 10
Z9 10
U1 1
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2018
VL 44
IS 12
BP 1132
EP 1145
DI 10.1109/TSE.2017.2756043
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HD6AP
UT WOS:000452614100001
DA 2024-07-18
ER

PT J
AU Kintis, M
   Papadakis, M
   Jia, Y
   Malevris, N
   Le Traon, Y
   Harman, M
AF Kintis, Marinos
   Papadakis, Mike
   Jia, Yue
   Malevris, Nicos
   Le Traon, Yves
   Harman, Mark
TI Detecting Trivial Mutant Equivalences via Compiler Optimisations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Mutation testing; equivalent mutants; duplicated mutants; compiler
   optimisation
ID DATA-FLOW; MUTATION; COST; TOOL
AB Mutation testing realises the idea of fault-based testing, i.e., using artificial defects to guide the testing process. It is used to evaluate the adequacy of test suites and to guide test case generation. It is a potentially powerful form of testing, but it is well-known that its effectiveness is inhibited by the presence of equivalent mutants. We recently studied Trivial Compiler Equivalence (TCE) as a simple, fast and readily applicable technique for identifying equivalent mutants for C programs. In the present work, we augment our findings with further results for the Java programming language. TCE can remove a large portion of all mutants because they are determined to be either equivalent or duplicates of other mutants. In particular, TCE equivalent mutants account for 7.4 and 5.7 percent of all C and Java mutants, while duplicated mutants account for a further 21 percent of all C mutants and 5.4 percent Java mutants, on average. With respect to a benchmark ground truth suite (of known equivalent mutants), approximately 30 percent (for C) and 54 percent (for Java) are TCE equivalent. It is unsurprising that results differ between languages, since mutation characteristics are language-dependent. In the case of Java, our new results suggest that TCE may be particularly effective, finding almost half of all equivalent mutants.
C1 [Kintis, Marinos; Papadakis, Mike; Le Traon, Yves] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, L-4365 Esch Sur Alzette, Luxembourg.
   [Jia, Yue; Harman, Mark] UCL, CREST Ctr, London WC1E 6BT, England.
   [Jia, Yue; Harman, Mark] Facebook, Menlo Pk, CA 94025 USA.
   [Malevris, Nicos] Athens Univ Econ & Business, Athens 10434, Greece.
C3 University of Luxembourg; University of London; University College
   London; Facebook Inc; Athens University of Economics & Business
RP Kintis, M (corresponding author), Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, L-4365 Esch Sur Alzette, Luxembourg.
EM marinos.kintis@uni.lu; michail.papadakis@uni.lu; yue.jia@ucl.ac.uk;
   ngm@aueb.gr; yves.letraon@uni.lu; mark.harman@ucl.ac.uk
RI LE TRAON, Yves/T-2911-2019
FU Research Centre of Athens University of Economics and Business
   (RC/AUEB); National Research Fund, Luxembourg
   [INTER/MOBILITY/14/7562175]; Microsoft Azure Grant; UK EPSRC
   [EP/I033688, EP/G060525]; 'Platform Grant' for the Centre for Research
   on Evolution Search and Testing (CREST) at UCL; EPSRC [EP/J017515]
FX Marinos Kintis is partly supported by the Research Centre of Athens
   University of Economics and Business (RC/AUEB). Mike Papadakis is
   supported by the National Research Fund, Luxembourg,
   INTER/MOBILITY/14/7562175 and by Microsoft Azure Grant 2015. Mark Harman
   is partly supported by the UK EPSRC projects EP/I033688 (GISMO) and
   EP/G060525, a 'Platform Grant' for the Centre for Research on Evolution
   Search and Testing (CREST) at UCL. Yue Jia is supported by the EPSRC
   project EP/J017515 (DAASE) and by Microsoft Azure Grant 2014.
CR Adamopoulos K, 2004, LECT NOTES COMPUT SC, V3103, P1338
   Ammann P, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P21, DOI 10.1109/ICST.2014.13
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   Androutsopoulos K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P573, DOI 10.1145/2568225.2568314
   [Anonymous], 2011, P 8 EUR SOFTW ENG C, DOI DOI 10.1145/2025113.2025144
   [Anonymous], 1980, THESIS
   Baker R, 2013, IEEE T SOFTWARE ENG, V39, P787, DOI 10.1109/TSE.2012.56
   Baldwin D, 1979, 276 YAL U
   Bardoczi S., 2015, 2015: Landscape Odyssey-Landscape Architecture in Hungary, P1, DOI DOI 10.1109/ICST.2015.7102607
   Budd T. A., 1978, AFIPS Conference Proceedings vol.47. 1978 National Computer Conference, P623
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   Daran M., 1996, SIGSOFT Software Engineering Notes, V21, P158, DOI [10.1145/229000.226313, 10.1145/226295.226313]
   Delamaro M.E., 2001, Proteum/IM 2.0: An Integrated Mutation Testing Environment, P91, DOI [10.1007/978-1-4757-5939-6_17, DOI 10.1007/978-1-4757-5939-6_17]
   Delamaro ME, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P203, DOI 10.1109/ICST.2014.33
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Deng L, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P84, DOI 10.1109/ICST.2013.20
   Frankl PG, 1997, J SYST SOFTWARE, V38, P235, DOI 10.1016/S0164-1212(96)00154-9
   Ghandehari LS, 2014, IEEE ICST WORKSHOP, P68, DOI 10.1109/ICSTW.2014.8
   Grün BJM, 2009, IEEE ICST WORKSHOP, P192, DOI 10.1109/ICSTW.2009.37
   Harman M, 2001, KLUW INT S ADV DATA, V24, P5
   Harman M., 2014, Proceedings of the 29th ACM/IEEE international conference on Automated software engineering, P397
   Hierons R.M., 1999, J SOFTW TEST VERIFIC, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:43.0.CO;2-3
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jia Y, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P249, DOI 10.1109/SCAM.2008.36
   Jia Y, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P94, DOI 10.1109/TAIC-PART.2008.18
   Jia Yue, 2016, P 25 INT S SOFTWARE, P354
   Just R., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P11, DOI 10.1109/ISSRE.2012.31
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kaminski G., 2011, Proceedings of the 6th International Workshop on Automation of Software Test, P57, DOI [10.1145/1982595.1982608, DOI 10.1145/1982595.1982608]
   Kaminski G, 2013, J SYST SOFTWARE, V86, P2002, DOI 10.1016/j.jss.2012.08.024
   Kintis M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P701, DOI 10.1109/ICST.2012.160
   Kintis M, 2016, IEEE INT WORK C SO, P147, DOI 10.1109/SCAM.2016.28
   Kintis M, 2015, INFORM SOFTWARE TECH, V68, P1, DOI 10.1016/j.infsof.2015.07.009
   Kintis M, 2015, SOFTW TEST VERIF REL, V25, P508, DOI 10.1002/stvr.1529
   Kintis M, 2014, IEEE ICST WORKSHOP, P196, DOI 10.1109/ICSTW.2014.21
   Kintis M, 2013, ASIA PAC SOFWR ENG, P180, DOI 10.1109/APSEC.2013.34
   Kintis M, 2010, ASIA PAC SOFWR ENG, P300, DOI 10.1109/APSEC.2010.42
   Kurtz B, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P571, DOI 10.1145/2950290.2950322
   Lam P., 2011, P CET US COMP INFR W, V15, P35
   Langdon WB, 2010, J SYST SOFTWARE, V83, P2416, DOI 10.1016/j.jss.2010.07.027
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Madeyski L, 2014, IEEE T SOFTWARE ENG, V40, P23, DOI 10.1109/TSE.2013.44
   Madeyski L, 2010, IET SOFTW, V4, P32, DOI 10.1049/iet-sen.2008.0038
   Namin AS, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P351, DOI 10.1145/1368088.1368136
   Nica S, 2012, ELECTRON PROC THEOR, P1
   Offut A. J., 1997, Software Testing, Verification and Reliability, V7, P165, DOI 10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt A. J., 1994, Software Testing, Verification and Reliability, V4, P131, DOI 10.1002/stvr.4370040303
   Offutt AJ, 1996, COMPASS '96 - PROCEEDINGS OF THE ELEVENTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P224, DOI 10.1109/CMPASS.1996.507890
   Offutt AJ, 1996, SOFTWARE PRACT EXPER, V26, P165, DOI 10.1002/(SICI)1097-024X(199602)26:2<165::AID-SPE5>3.0.CO;2-K
   Papadakis Mike, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P121, DOI 10.1109/ISSRE.2010.38
   Papadakis Mike, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P90, DOI 10.1109/ICSTW.2010.50
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Papadakis M, 2014, SCI COMPUT PROGRAM, V95, P298, DOI 10.1016/j.scico.2014.05.012
   Patrick M, 2014, IEEE ICST WORKSHOP, P186, DOI 10.1109/ICSTW.2014.18
   Polo M, 2009, SOFTW TEST VERIF REL, V19, P111, DOI 10.1002/stvr.392
   Mateo PR, 2015, SOFTW TEST VERIF REL, V25, P464, DOI 10.1002/stvr.1534
   Mateo PR, 2013, IEEE T SOFTWARE ENG, V39, P570, DOI 10.1109/TSE.2012.39
   Schuler David, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P45, DOI 10.1109/ICST.2010.30
   Schuler D, 2013, SOFTW TEST VERIF REL, V23, P353, DOI 10.1002/stvr.1473
   Schuler D, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P69
   Smith BH, 2009, EMPIR SOFTW ENG, V14, P341, DOI 10.1007/s10664-008-9083-7
   Tai KC, 1996, IEEE T SOFTWARE ENG, V22, P552, DOI 10.1109/32.536956
   Untch R. H., 1993, SIGSOFT Software Engineering Notes, V18, P139, DOI 10.1145/174146.154265
   Voas J.M., 1997, SOFTWARE FAULT INJEC
   Wohlin C., 2012, Experimentation in Software Engineering
   WONG WE, 1995, J SYST SOFTWARE, V31, P185, DOI 10.1016/0164-1212(94)00098-0
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Yu-Seung Ma, 2006, 28th International Conference on Software Engineering Proceedings, P869
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
   Zhang L., 2013, P 2013 INT S SOFTW T, P235
   Zheng H, 2010, 2ND IEEE INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER CONTROL (ICACC 2010), VOL. 2, P431, DOI 10.1109/ICACC.2010.5486640
NR 73
TC 52
Z9 52
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2018
VL 44
IS 4
BP 308
EP 333
DI 10.1109/TSE.2017.2684805
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GF4CH
UT WOS:000431906800001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Fowkes, J
   Chanthirasegaran, P
   Ranca, R
   Allamanis, M
   Lapata, M
   Sutton, C
AF Fowkes, Jaroslav
   Chanthirasegaran, Pankajan
   Ranca, Razvan
   Allamanis, Miltiadis
   Lapata, Mirella
   Sutton, Charles
TI Autofolding for Source Code Summarization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Source code summarization; program comprehension; topic modelling
ID IN-SOURCE CODE; LATENT; INFORMATION; MODELS
AB Developers spend much of their time reading and browsing source code, raising new opportunities for summarization methods. Indeed, modern code editors provide code folding, which allows one to selectively hide blocks of code. However this is impractical to use as folding decisions must be made manually or based on simple rules. We introduce the autofolding problem, which is to automatically create a code summary by folding less informative code regions. We present a novel solution by formulating the problem as a sequence of AST folding decisions, leveraging a scoped topic model for code tokens. On an annotated set of popular open source projects, we show that our summarizer outperforms simpler baselines, yielding a 28 percent error reduction. Furthermore, we find through a case study that our summarizer is strongly preferred by experienced developers. More broadly, we hope this work will aid program comprehension by turning code folding into a usable and valuable tool.
C1 [Fowkes, Jaroslav; Chanthirasegaran, Pankajan; Allamanis, Miltiadis; Lapata, Mirella; Sutton, Charles] Univ Edinburgh, Sch Informat, Edinburgh EH8 9AB, Midlothian, Scotland.
   [Ranca, Razvan] Tractable, Oval Off 11-12 Oval, London E2 9DT, England.
C3 University of Edinburgh
RP Fowkes, J (corresponding author), Univ Edinburgh, Sch Informat, Edinburgh EH8 9AB, Midlothian, Scotland.
EM jaroslav.fowkes@ed.ac.uk; pchanthi@ed.ac.uk; razvan@tractable.io;
   m.allamanis@ed.ac.uk; mlap@inf.ed.ac.uk; csutton@ed.ac.uk
OI Fowkes, Jaroslav/0000-0002-8048-4572
FU Engineering and Physical Sciences Research Council [EP/K024043/1];
   Microsoft Research; EPSRC [EP/K024043/1] Funding Source: UKRI
FX This work was supported by the Engineering and Physical Sciences
   Research Council (grant number EP/K024043/1) and by Microsoft Research
   through its PhD Scholarship Programme. We are also grateful to Rebecca
   Mason for allowing us to adapt her TopicSum implementation to source
   code and would like to thank Brian Doll for useful discussions.
CR Abebe SL, 2011, IEEE INT WORK C SO, P125, DOI 10.1109/SCAM.2011.18
   Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   Allamanis M, 2013, IEEE WORK CONF MIN S, P207, DOI 10.1109/MSR.2013.6624029
   ANNIE TT YING., 2013, P 2013 9 JOINT M FDN, P655
   [Anonymous], 2013, P 9 JOINT M EUR SOFT
   [Anonymous], 2008, THESIS U CAMBRIDGE
   [Anonymous], 2007, Latent Semantic Analysis: A Road to Meaning. Ed. by
   Baldi PF, 2008, ACM SIGPLAN NOTICES, V43, P543, DOI 10.1145/1449955.1449807
   Blei DM, 2012, COMMUN ACM, V55, P77, DOI 10.1145/2133806.2133826
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bragdon A., 2010, Proceedings of the 32nd International Conference on Software Engineering (ICSE'10), P455, DOI [DOI 10.1145/1806799.1806866, 10.1145/1806799.1806866]
   Buntine WL, 1994, J ARTIF INTELL RES, V2, P159, DOI 10.1613/jair.62
   Buse RPL, 2012, PROC INT CONF SOFTW, P782, DOI 10.1109/ICSE.2012.6227140
   Cockburn A, 2003, INTERACT COMPUT, V15, P389, DOI 10.1016/S0953-5438(03)00003-1
   De Lucia A, 2014, EMPIR SOFTW ENG, V19, P1383, DOI 10.1007/s10664-013-9285-5
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Eddy BP, 2013, CONF PROC INT SYMP C, P13, DOI 10.1109/ICPC.2013.6613829
   Erosheva E, 2004, P NATL ACAD SCI USA, V101, P5220, DOI 10.1073/pnas.0307760101
   Fowkes J, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P649, DOI 10.1145/2889160.2889171
   Gethers M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1034, DOI 10.1145/1985793.1985988
   Guha S., 1999, Proceedings of the Thirty-First Annual ACM Symposium on Theory of Computing, P574, DOI 10.1145/301250.301406
   Haghighi Aria, 2009, P HUMAN LANGUAGE TEC, P362, DOI DOI 10.3115/1620754.1620807
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Hendrix T. D., 1998, ACM SIGADA ADA LETT, V18, P142
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Jacob F., 2010, P ACM SE REG C
   Jones KS, 2007, INFORM PROCESS MANAG, V43, P1449, DOI 10.1016/j.ipm.2007.03.009
   Khoo Y.P., 2008, WORKSHOP PROGRAM ANA, P57
   Kim Jayoung, 2013, J AUTOMATION CONTROL, V1, DOI DOI 10.1371/J0URNAL.P0NE.0060505
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Kullbach B, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/WCRE.2001.957805
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Lin CY, 2004, ROUGE: A Package for Automatic Evaluation of Summaries, P74, DOI DOI 10.1253/JCJ.34.1213
   MacKay D.J.C., 1995, NAT LANG ENG, V1, P289
   Mani S., 2012, P ACM SIGSOFT 20 INT, P1, DOI DOI 10.1145/2393596.2393607
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   McBurney P.W., 2014, P 22 INT C PROGRAM C, P291
   Mimno D. M., 2007, ICML, V227, P633
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Movshovitz-Attias Dana, 2013, ACL
   Nguyen A.T., 2013, P 2013 9 JOINT M FDN, P651
   Pado Sebastian, 2006, User's Guide to SIGF: Significance Testing by Approximate Randomisation
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Rastkar Sarah, 2010, P 32 ACM IEEE INT C, V1, P505, DOI DOI 10.1145/1806799.1806872
   Rodeghero P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P390, DOI 10.1145/2568225.2568247
   Rugaber S., 2008, GTCS0809
   Savage T, 2010, Proceedings of the 2010 IEEE International Conference on Software Maintenance, ICSM '10, P1, DOI [10.1109/ICSM.2010.5609654, DOI 10.1109/ICSM.2010.5609654]
   Silva J, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187674
   Sridhara G, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P101, DOI 10.1145/1985793.1985808
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   Starke J, 2009, PROC IEEE INT CONF S, P157, DOI 10.1109/ICSM.2009.5306335
   Storey MA, 2005, PROG COMPREHEN, P181, DOI 10.1109/WPC.2005.38
   Thomas SW, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1138, DOI 10.1145/1985793.1986020
   Wang J, 2013, IEEE WORK CONF MIN S, P319, DOI 10.1109/MSR.2013.6624045
   Weninger T., 2012, CIKM
   Xie Tao, 2006, Proc. MSR, P54
NR 61
TC 28
Z9 36
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2017
VL 43
IS 12
BP 1095
EP 1109
DI 10.1109/TSE.2017.2664836
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FQ1RH
UT WOS:000418134800001
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Zave, P
AF Zave, Pamela
TI Reasoning About Identifier Spaces: How to Make Chord Correct
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computers and information processing; distributed computing;
   peer-to-peer computing; software engineering; formal verification
ID SERVICE
AB The Chord distributed hash table (DHT) is well-known and often used to implement peer-to-peer systems. Chord peers find other peers, and access their data, through a ring-shaped pointer structure in a large identifier space. Despite claims of proven correctness, i.e., eventual reachability, previous work has shown that the Chord ring-maintenance protocol is not correct under its original operating assumptions. Previous work has not, however, discovered whether Chord could be made correct under the same assumptions. The contribution of this paper is to provide the first specification of correct operations and initialization for Chord, an inductive invariant that is necessary and sufficient to support a proof of correctness, and two independent proofs of correctness. One proof is informal and intuitive, and applies to networks of any size. The other proof is based on a formal model in Alloy, and uses fully automated analysis to prove the assertions for networks of bounded size. The two proofs complement each other in several important ways.
C1 [Zave, Pamela] AT&T Labs Res, Bedminster, NJ 07921 USA.
C3 AT&T
RP Zave, P (corresponding author), AT&T Labs Res, Bedminster, NJ 07921 USA.
EM pamela@research.att.com
CR Awerbuch B., 2006, P 18 ANN ACM S PAR A, P318
   Awerbuch Baruch, 2004, P 15 ANN ACM SIAM S, P318
   Azmy N, 2016, LECT NOTES COMPUT SC, V9675, P86, DOI 10.1007/978-3-319-33600-8_5
   Bakhshi R, 2007, ELECTRON NOTES THEOR, V181, P35, DOI 10.1016/j.entcs.2007.01.052
   Balakrishnan H., 2013, COMMUNICATION
   DeCandia Giuseppe, 2007, Operating Systems Review, V41, P205, DOI 10.1145/1323293.1294281
   Fiat A, 2005, LECT NOTES COMPUT SC, V3669, P803
   Freedman MJ, 2005, USENIX Association Proceedings of the Second Workshop on Real, Large Distributed Systems, P55
   Glendenning L, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P15
   GUPTA A, 2003, P 1 BIENN C INN DAT
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Killian C., 2007, Proceedings of the 4th USENIX conference on Networked systems design and implementation, NSDI'07, (Berkeley, CA, USA), P18, DOI 10.5555/1973430.1973448
   Krishnamurthy S., 2005, PEER TO PEER SYSTEMS
   LI XZ, 2004, ACT CONC TOP DISTR, V3274, P320
   Liben-Nowell D., 2002, P 21 ANN S PRINC DIS, P233, DOI DOI 10.1145/571825.571863
   Loo B. T., 2005, P 20 ACM S OP SYST P, P75, DOI [10.1145/1095810.1095818, DOI 10.1145/1095810.1095818]
   LYNCH N, 2002, PROC REV PAP 1 INT, V2429, P295
   Maymounkov P, 2002, LECT NOTES COMPUT SC, V2429, P53
   Muthitacharoen A., 2005, 2005044 MIT CSAIL
   Needels K., 2009, SAC 09, P54
   Newcombe C, 2015, COMMUN ACM, V58, P66, DOI 10.1145/2699417
   PADON O, 2016, PROC 37 ACM SIGPL, V51, P614, DOI DOI 10.1145/2908080.2908118
   Ratnasamy S, 2001, ACM SIGCOMM COMP COM, V31, P161, DOI 10.1145/964723.383072
   Rowstron A., 2001, Proceedings of the Middleware 2001, P329, DOI DOI 10.1007/3-540-45518-3_18
   SIT E, 2002, P 1 INT WORKSH PEER, V2429, P261
   Stoica I, 2003, IEEE ACM T NETWORK, V11, P17, DOI 10.1109/TNET.2002.808407
   Stoica I, 2001, ACM SIGCOMM COMP COM, V31, P149, DOI 10.1145/964723.383071
   WILCOX JR, 2015, P 36 ACM SIGPLAN C P, V50, P357, DOI DOI 10.1145/2737924.2737958
   Yabandeh M., 2009, Symposium on Networked Systems Design and Implementation, P229
   Zave P., 2015, ARXIV150206461V2CSDC
   Zave P., 2014, FORMAL ASPECTS COMPU
   Zave P, 2012, ACM SIGCOMM COMP COM, V42, P50, DOI 10.1145/2185376.2185383
   Zhao BY, 2004, IEEE J SEL AREA COMM, V22, P41, DOI 10.1109/JSAC.2003.818784
NR 33
TC 16
Z9 20
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2017
VL 43
IS 12
BP 1144
EP 1156
DI 10.1109/TSE.2017.2655056
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FQ1RH
UT WOS:000418134800004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tufano, M
   Palomba, F
   Bavota, G
   Oliveto, R
   Di Penta, M
   De Lucia, A
   Poshyvanyk, D
AF Tufano, Michele
   Palomba, Fabio
   Bavota, Gabriele
   Oliveto, Rocco
   Di Penta, Massimiliano
   De Lucia, Andrea
   Poshyvanyk, Denys
TI When and Why Your Code Starts to Smell Bad (and Whether the Smells Go
   Away)
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Code smells; empirical study; mining software repositories
ID SOFTWARE; IMPACT; EVOLUTION; QUALITY
AB Technical debt is a metaphor introduced by Cunningham to indicate "not quite right code which we postpone making it right". One noticeable symptom of technical debt is represented by code smells, defined as symptoms of poor design and implementation choices. Previous studies showed the negative impact of code smells on the comprehensibility and maintainability of code. While the repercussions of smells on code quality have been empirically assessed, there is still only anecdotal evidence on when and why bad smells are introduced, what is their survivability, and how they are removed by developers. To empirically corroborate such anecdotal evidence, we conducted a large empirical study over the change history of 200 open source projects. This study required the development of a strategy to identify smell-introducing commits, the mining of over half a million of commits, and the manual analysis and classification of over 10K of them. Our findings mostly contradict common wisdom, showing that most of the smell instances are introduced when an artifact is created and not as a result of its evolution. At the same time, 80 percent of smells survive in the system. Also, among the 20 percent of removed instances, only 9 percent are removed as a direct consequence of refactoring operations.
C1 [Tufano, Michele] Coll William & Mary, Williamsburg, VA 23185 USA.
   [Poshyvanyk, Denys] Coll William & Mary, Dept Comp Sci, Williamsburg, VA 23185 USA.
   [Palomba, Fabio; De Lucia, Andrea] Univ Salerno, I-84084 Fisciano, SA, Italy.
   [Bavota, Gabriele] Univ Svizzera Italiana, CH-6900 Lugano, Switzerland.
   [Oliveto, Rocco] Univ Molise, I-86090 Pesche, IS, Italy.
   [Di Penta, Massimiliano] Univ Sannio, I-82100 Benevento, BN, Italy.
C3 William & Mary; William & Mary; University of Salerno; Universita della
   Svizzera Italiana; University of Molise; University of Sannio
RP Tufano, M (corresponding author), Coll William & Mary, Williamsburg, VA 23185 USA.
EM mtufano@email.wm.edu; fpalomba@unisa.it; gabriele.bavota@usi.ch;
   rocco.oliveto@unimol.it; dipenta@unisannio.it; adelucia@unisa.it;
   denys@cs.wm.edu
RI De Lucia, Andrea/AAG-6781-2020; Di Penta, Massimiliano/AAF-9656-2021
OI BAVOTA, Gabriele/0000-0002-2216-3148; Poshyvanyk,
   Denys/0000-0002-5626-7586; Palomba, Fabio/0000-0001-9337-5116; De Lucia,
   Andrea/0000-0002-4238-1425
FU NSF [CCF-1525902, CCF-1253837]; University of Molise; Division of
   Computing and Communication Foundations; Direct For Computer & Info Scie
   & Enginr [1253837] Funding Source: National Science Foundation
FX We would like to sincerely thank the anonymous reviewers for their
   careful reading of our manuscript and extremely useful comments that
   were very helpful in significantly improving the paper. Michele Tufano
   and Denys Poshyvanyk from W&M were partially supported via NSF
   CCF-1525902 and CCF-1253837 grants. Fabio Palomba is partially funded by
   the University of Molise. This paper is an extension of "When and Why
   Your Code Starts to Smell Bad" that appeared in the Proceedings of the
   37th IEEE/ACM International Conference on Software Engineering (ICSE
   2015), Florence, Italy, pp. 403-414, 2015 [81].
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Alshayeb M, 2009, INFORM SOFTWARE TECH, V51, P1319, DOI 10.1016/j.infsof.2009.04.002
   [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], SURVIVAL ANAL
   [Anonymous], WHY YOUR CODE STARTS
   [Anonymous], P 4 INT WORKSH SOFTW
   [Anonymous], P 27 IEEE INT C SOFT
   Antoniol Giuliano, 2008, P 2008 C CTR ADV STU
   Arcoverde R., 2011, WORKSH REF TOOLS, P33
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Bavota G, 2013, PROC IEEE INT CONF S, P280, DOI 10.1109/ICSM.2013.39
   Bavota G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P56, DOI 10.1109/ICSM.2012.6405253
   Bazrafshan S, 2013, PROC IEEE INT CONF S, P50, DOI 10.1109/ICSM.2013.16
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Boussaa Mohamed, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P50, DOI 10.1007/978-3-642-39742-4_6
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Chaparro O, 2014, PROC IEEE INT CONF S, P456, DOI 10.1109/ICSME.2014.73
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Claes M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P212, DOI 10.1109/MSR.2015.27
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Cunningham W., 1993, OOPS Messenger, V4, P29
   D'Ambros Marco, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P23, DOI 10.1109/QSIC.2010.58
   Deligiannis I, 2004, J SYST SOFTWARE, V72, P129, DOI 10.1016/S0164-1212(03)00240-1
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Fontana FA, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P609, DOI 10.1109/SANER.2016.84
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gatrell M, 2015, SCI COMPUT PROGRAM, V102, P44, DOI 10.1016/j.scico.2014.12.002
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   KAPLAN EL, 1958, J AM STAT ASSOC, V53, P457, DOI 10.2307/2281868
   Kataoka Y, 2002, PROC IEEE INT CONF S, P576, DOI 10.1109/ICSM.2002.1167822
   Kessentini M., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, P113
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Lehman M.M., 1985, SOFTWARE EVOLUTION P
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Ligu E, 2013, PROC IEEE INT CONF S, P392, DOI 10.1109/ICSM.2013.55
   Lim E, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.130
   Lozano Angelo., 2007, Ninth International Workshop on Principles of software evolution, P31
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Moser R, 2008, LECT NOTES COMPUT SC, V5082, P252
   Munro MatthewJames., 2005, Software Metrics, P15, DOI 10.1109/metrics.2005.38
   Murphy GC, 2007, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSM.2007.4362611
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Neamtiu I, 2013, J SOFTW-EVOL PROC, V25, P193, DOI 10.1002/smr.564
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Oliveto R, 2010, EUR CON SFTWR MTNCE, P248, DOI 10.1109/CSMR.2010.47
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Parnas D. L., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P279, DOI 10.1109/ICSE.1994.296790
   Peters R, 2012, EUR CON SFTWR MTNCE, P411, DOI 10.1109/CSMR.2012.79
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Sahin D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2675067
   Sheskin D. J., 2000, Handbook of Parametric and Nonparametric Statistical Procedures
   Shull F., 2013, PERSPECTIVES FUTURE, P179, DOI DOI 10.1007/978-3-642-37395-4_12
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Stroggylos K., 2007, P 5 INT WORKSH SOFTW, P10, DOI [10.1109/WOSQ.2007.11, DOI 10.1109/WOSQ.2007.11]
   Stroulia E, 2001, OOIS 2001: 7TH INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED INFORMATION SYSTEMS, PROCEEDINGS, P113
   Szoke G, 2014, IEEE INT WORK C SO, P95, DOI 10.1109/SCAM.2014.18
   Thummalapenta S, 2010, EMPIR SOFTW ENG, V15, P1, DOI 10.1007/s10664-009-9108-x
   Travassos GH, 1999, ACM SIGPLAN NOTICES, V34, P47, DOI 10.1145/320385.320389
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Vaucher S, 2009, WORK CONF REVERSE EN, P145, DOI 10.1109/WCRE.2009.23
   Wang Y, 2009, PROC IEEE INT CONF S, P413, DOI 10.1109/ICSM.2009.5306290
   Webster BruceF., 1995, PITFALLS OBJECT ORIE
   Xie GW, 2009, PROC IEEE INT CONF S, P51, DOI 10.1109/ICSM.2009.5306356
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
   Zeller A, 2009, WHY PROGRAMS FAIL: A GUIDE TO SYSTEMATIC DEBUGGING, 2ND EDITION
NR 90
TC 131
Z9 140
U1 6
U2 23
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2017
VL 43
IS 11
BP 1063
EP 1088
DI 10.1109/TSE.2017.2653105
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FM5XS
UT WOS:000415117000005
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Song, J
   Cadar, C
   Pietzuch, P
AF Song, JaeSeung
   Cadar, Cristian
   Pietzuch, Peter
TI SYMBEXNET: Testing Network Protocol Implementations with Symbolic
   Execution and Rule-Based Specifications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Symbolic execution; network security; testing; interoperability testing
ID TEST SUITE DERIVATION; VERIFICATION
AB Implementations of network protocols, such as DNS, DHCP and Zeroconf, are prone to flaws, security vulnerabilities and interoperability issues caused by developer mistakes and ambiguous requirements in protocol specifications. Detecting such problems is not easy because (i) many bugs manifest themselves only after prolonged operation; (ii) reasoning about semantic errors requires a machine-readable specification; and (iii) the state space of complex protocol implementations is large. This article presents a novel approach that combines symbolic execution and rule-based specifications to detect various types of flaws in network protocol implementations. The core idea behind our approach is to (1) automatically generate high-coverage test input packets for a network protocol implementation using single-and multi-packet exchange symbolic execution (targeting stateless and stateful protocols, respectively) and then (2) use these packets to detect potential violations of manual rules derived from the protocol specification, and check the interoperability of different implementations of the same network protocol. We present a system based on these techniques, SYMBEXNET, and evaluate it on multiple implementations of two network protocols: Zeroconf, a service discovery protocol, and DHCP, a network configuration protocol. SYMBEXNET is able to discover non-trivial bugs as well as interoperability problems, most of which have been confirmed by the developers.
C1 [Song, JaeSeung] Sejong Univ, Dept Comp & Informat Secur, Seoul, South Korea.
   [Cadar, Cristian; Pietzuch, Peter] Univ London Imperial Coll Sci Technol & Med, Dept Comp, London SW7 2AZ, England.
C3 Sejong University; Imperial College London
RP Song, J (corresponding author), Sejong Univ, Dept Comp & Informat Secur, Seoul, South Korea.
EM jssong@sejong.ac.kr; c.cadar@imperial.ac.uk; prp@imperial.ac.uk
RI Song, JaeSeung/AAC-2587-2019
OI Pietzuch, Peter/0000-0002-6963-5640
FU Mobile VCE; UK Government via the Engineering and Physical Sciences
   Research Council; EPSRC [EP/G059861/1, EP/I012036/1] Funding Source:
   UKRI
FX The work reported in this article has formed part of the Flexible
   Networks area of the Core 5 Research Programme of the Virtual Centre of
   Excellence in Mobile & Personal Communications, Mobile VCE
   (www.mobilevce.com), and has been jointly funded by Mobile VCEs
   industrial member companies and the UK Government, via the Engineering
   and Physical Sciences Research Council. This article is partly based on
   a paper published in the International Conference on Computer
   Communication Networks (ICCCN 2011)[42].
CR Alexander Steve, 1997, 2132 RFC, VRFC
   Alur R, 2001, LECT NOTES COMPUT SC, V2102, P169
   [Anonymous], 2006, P 13 ACM C COMPUTER
   [Anonymous], 2011, P 20 INT C COMP COMM, DOI DOI 10.1109/ICCCN.2011.6005945
   [Anonymous], 2008, BLACK OPS 2008 ITS E
   Avallone S, 2004, INT CONF QUANT EVAL, P316
   Bradner S., 1997, 2119 IETF RFC
   Bradner S., 1996, 2026 IETF RFC
   Brenna Lars., 2007, SIGMOD 07, P1100, DOI DOI 10.1145/1247480.1247620
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cadar C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1066, DOI 10.1145/1985793.1985995
   Cheshire S., 2010, IETF INTERNET DRAFT
   Cheshire S., 2005, ZERO CONFIGURATION N
   Dill R., 2002, UDHCP CLIENT SERVER
   Droms R., 1997, 2131 IETF RFC
   Duflot M., 2010, HDB FORMAL METHODS I
   Feamster N, 2004, ACM SIGCOMM COMP COM, V34, P87, DOI 10.1145/972374.972390
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid Patrice, 2008, Network and Distributed Systems Security
   Hao RB, 2004, IEEE ACM T NETWORK, V12, P823, DOI 10.1109/TNET.2004.836136
   Internet Software Consortium, 2004, ISC DHCP
   Islam Syed M. S., 2006, IJCSA, V3, P145
   JaeSeung Song, 2010, 2010 8th IEEE International Conference on Pervasive Computing and Communications Workshops (PERCOM Workshops), P582, DOI 10.1109/PERCOMW.2010.5470504
   Joshi Pallavi., 2007, PROC ESEC FSE, P561, DOI DOI 10.1145/1295014.1295041
   Kang SW, 2000, COMPUT NETW, V32, P347, DOI 10.1016/S1389-1286(00)00005-0
   Khanna G, 2004, SYM REL DIST SYST, P18, DOI 10.1109/RELDIS.2004.1353000
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Koné O, 2000, COMPUT COMMUN, V23, P642, DOI 10.1016/S0140-3664(99)00223-6
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   License G., GCOV GNU COVERAGE TO
   Liu Xuezheng., 2008, Proceedings of the 5th USENIX Symposium on Networked Systems Design and Implementation, NSDI'08, P423
   Maag S, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P1908
   Majumdar R, 2007, PROC INT CONF SOFTW, P416
   Mansouri-Samani M., 1997, Distributed Systems Engineering, V4, P96, DOI 10.1088/0967-1846/4/2/004
   Marinescu PD, 2012, PROC INT CONF SOFTW, P716, DOI 10.1109/ICSE.2012.6227146
   MOCKAPETRIS P, 1987, 1034 IETF RFC
   Musuvathi M, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE FIRST SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION (NSDI'04), P155
   Roesch M, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE THIRTEENTH SYSTEMS ADMINISTRATION CONFERENCE (LISA XIII), P229
   Sasnauskas R, 2010, PROCEEDINGS OF THE 9TH ACM/IEEE INTERNATIONAL CONFERENCE ON INFORMATION PROCESSING IN SENSOR NETWORKS, P186, DOI 10.1145/1791212.1791235
   Schultz-Moller NP, 2009, Em: Proceedings of the Third ACM International Conference on Distributed Event-Based Systems, P1
   Seol S, 2003, COMPUT NETW, V43, P735, DOI 10.1016/S1389-1286(03)00316-5
   Sistla AP, 2000, ACM T SOFTW ENG METH, V9, P133, DOI 10.1145/350887.350891
   Tanenbaum A.S., 2002, COMPUT NETW, VFourth
   Udrea O, 2008, INFORM COMPUT, V206, P130, DOI 10.1016/j.ic.2007.05.007
   Vallejo A, 2007, IEEE COMMUN MAG, V45, P140, DOI 10.1109/MCOM.2007.4342835
   Vitkovsky S., 2009, DHQUERY
   Wagner D, 2001, P IEEE S SECUR PRIV, P156, DOI 10.1109/SECPRI.2001.924296
   Wang AD, 2009, LECT NOTES COMPUT SC, V5418, P61, DOI 10.1007/978-3-540-92995-6_5
NR 48
TC 28
Z9 34
U1 0
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2014
VL 40
IS 7
BP 695
EP 709
DI 10.1109/TSE.2014.2323977
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AM9HF
UT WOS:000340191000004
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Basin, D
   Harvan, M
   Klaedtke, F
   Zalinescu, E
AF Basin, David
   Harvan, Matus
   Klaedtke, Felix
   Zalinescu, Eugen
TI Monitoring Data Usage in Distributed Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Monitors; temporal logic; verification; distributed systems; regulation
ID CHECKING
AB IT systems manage increasing amounts of sensitive data and there is a growing concern that they comply with policies that regulate data usage. In this paper, we use temporal logic to express policies and runtime monitoring to check system compliance. While well-established methods for monitoring linearly ordered system behavior exist, a major challenge is monitoring distributed and concurrent systems where actions are locally observed in the different system parts. These observations can only be partially ordered, while policy compliance may depend on the actions' actual order of appearance. Technically speaking, it is in general intractable to check compliance of partially ordered traces. We identify fragments of our policy specification language for which compliance can be checked efficiently, namely, by monitoring a single representative trace in which the observed actions are totally ordered. Through a case study we show that the fragments are capable of expressing nontrivial policies and that monitoring representative traces is feasible on real-world data.
C1 [Basin, David; Harvan, Matus; Klaedtke, Felix; Zalinescu, Eugen] ETH, Inst Informat Secur, CH-8092 Zurich, Switzerland.
C3 Swiss Federal Institutes of Technology Domain; ETH Zurich
RP Basin, D (corresponding author), ETH, Inst Informat Secur, Univ Str 6, CH-8092 Zurich, Switzerland.
EM David.Basin@inf.ethz.ch; Matus.Harvan@inf.ethz.ch;
   Felix.Klaedtke@inf.ethz.ch; Eugen.Zalinescu@inf.ethz.ch
FU Nokia Research Center, Switzerland
FX This work was supported by the Nokia Research Center, Switzerland. The
   authors thank Imad Aad, Debmalya Biswas, Olivier Bornet, Olivier Dousse,
   Juha Laurila, and Valtteri Niemi for valuable input.
CR Aad I., 2010, P INT WORKSH SENS AP
   Abiteboul Serge, 1994, FDN DATABASES LOGICA
   ALUR R, 1992, LECT NOTES COMPUT SC, V600, P74, DOI 10.1007/BFb0031988
   [Anonymous], 2008, P 28 IARCS C FDN SOF, DOI [DOI 10.4230/LIPICS.FSTTCS.2008.1740, 10.4230/LIPIcs.FSTTCS.2008.1740]
   [Anonymous], 2012, LNCS, DOI DOI 10.1007/978-3-642-29860-8
   Barringer H, 2010, J AEROS COMP INF COM, V7, P365, DOI 10.2514/1.49356
   Basin D., 2011, Proceedings of the 2011 Eighteenth International Symposium on Temporal Representation and Reasoning (TIME 2011), P88, DOI 10.1109/TIME.2011.14
   Basin D, 2010, SACMAT 2010: PROCEEDINGS OF THE 15TH ACM SYMPOSIUM ON ACCESS CONTROL MODELS AND TECHNOLOGIES, P23, DOI 10.1145/1809842.1809849
   Bauer A, 2006, P AUSTR SOFTW ENG C
   Bauer A, 2016, FORM METHOD SYST DES, V48, P46, DOI [10.1007/978-3-642-32759-9_10, 10.1007/s10703-016-0253-8]
   Chase CM, 1998, DISTRIB COMPUT, V11, P191, DOI 10.1007/s004460050049
   CHOMICKI J, 1995, ACM T DATABASE SYST, V20, P149, DOI 10.1145/210197.210200
   Diekert V., 1995, BOOK TRACES
   Dinesh N, 2008, LECT NOTES COMPUT SC, V5289, P86
   Genon A, 2006, LECT NOTES COMPUT SC, V4085, P557
   Goodloe A., 2010, NASACR2010216724 NAS
   GROCE A, 2010, P 32 ACM IEEE INT C, V2, P129
   Hallé S, 2012, IEEE T SERV COMPUT, V5, P192, DOI 10.1109/TSC.2011.10
   Hopcroft John E., 2000, INTRO AUTOMATA THEOR
   Lamport L., 1983, Information Processing 83. Proceedings of the IFIP 9th World Computer Congress, P657
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   Markey N, 2003, LECT NOTES COMPUT SC, V2761, P251
   Massart T, 2008, INFORM PROCESS LETT, V106, P120, DOI 10.1016/j.ipl.2007.10.013
   Peled D, 1998, LECT NOTES COMPUT SC, V1427, P17, DOI 10.1007/BFb0028727
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Ramanujam R, 1996, THEORETICAL ASPECTS OF RATIONALITY AND KNOWLEDGE, P1
   Roger M, 2001, P IEEE CSFW, P220, DOI 10.1109/CSFW.2001.930148
   Sen K, 2004, PROC INT CONF SOFTW, P418, DOI 10.1109/ICSE.2004.1317464
   Tanenbaum A.S., 2002, DISTRIBUTED SYSTEMS
   Wang S., 2012, P 2 INT C RUNT VER, V7186, P442, DOI [10.1007/978-3-642-29860-8_35, DOI 10.1007/978-3-642-29860-8_35]
   Zhou WC, 2009, LECT NOTES COMPUT SC, V5779, P184, DOI 10.1007/978-3-642-04694-0_13
NR 31
TC 18
Z9 18
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2013
VL 39
IS 10
BP 1403
EP 1426
DI 10.1109/TSE.2013.18
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 228FO
UT WOS:000325171400005
DA 2024-07-18
ER

PT J
AU Pradel, M
   Gross, TR
AF Pradel, Michael
   Gross, Thomas R.
TI Name-Based Analysis of Equally Typed Method Arguments
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing and debugging; maintenance; documentation; static program
   analysis; anomaly detection; method arguments
ID SPECIFICATIONS; INFERENCE
AB When calling a method that requires multiple arguments, programmers must pass the arguments in the expected order. For statically typed languages, the compiler helps programmers by checking that the type of each argument matches the type of the formal parameter. Unfortunately, types are futile for methods with multiple parameters of the same type. How can a programmer check that equally typed arguments are passed in the correct order? This paper presents two simple, yet effective, static program analyses that detect problems related to the order of equally typed arguments. The key idea is to leverage identifier names to infer the semantics of arguments and their intended positions. The analyses reveal problems that affect the correctness, understandability, and maintainability of a program, such as accidentally reversed arguments and misleading parameter names. Most parts of the analyses are language-agnostic. We evaluate the approach with 24 real-world programs written in Java and C. Our results show the analyses to be effective and efficient. One analysis reveals anomalies in the order of equally typed arguments; it finds 54 relevant problems with a precision of 82 percent. The other analysis warns about misleading parameter names and finds 31 naming bugs with a precision of 39 percent.
C1 [Pradel, Michael; Gross, Thomas R.] ETH, Zurich, Switzerland.
C3 Swiss Federal Institutes of Technology Domain; ETH Zurich
RP Pradel, M (corresponding author), ETH, Zurich, Switzerland.
EM michael@binaervarianz.de
FU Swiss National Science Foundation [200021-134453]; Swiss National
   Science Foundation (SNF) [200021_134453] Funding Source: Swiss National
   Science Foundation (SNF)
FX The work presented in this paper was supported in part by the Swiss
   National Science Foundation under grant number 200021-134453. Thanks to
   Zoltan Majo, Christine Zeller, Peter Arrenbrecht, and the anonymous
   reviewers for their insightful comments and suggestions.
CR Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   [Anonymous], 2007, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering
   [Anonymous], 2010, P 26 IEEE INT C SOFT, DOI DOI 10.1109/ICSM.2010.5609576
   [Anonymous], 2007, 6th joint meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), DOI DOI 10.1145/1287624.1287632
   [Anonymous], 2007, P 2007 INT S SOFTWAR
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Butler S, 2011, LECT NOTES COMPUT SC, V6813, P130, DOI 10.1007/978-3-642-22655-7_7
   Butler S, 2010, EUR CON SFTWR MTNCE, P156, DOI 10.1109/CSMR.2010.27
   Chang R.-Y., 2007, P 2007 INT S SOFTWAR, P163, DOI DOI 10.1145/1273463.1273486
   Cohen W.W., 2003, IJCAI WORKSH INF INT, P73, DOI DOI 10.5555/3104278.3104293
   Engler D., 2001, Operating Systems Review, V35, P57, DOI 10.1145/502059.502041
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Erwig Martin., 2002, PADL 02 P 4 INT S PR, P173
   Gabel M., 2008, SIGSOFT FSE, P339, DOI DOI 10.1145/1453101.1453150
   Greenfieldboyce D, 2007, ACM SIGPLAN NOTICES, V42, P321, DOI 10.1145/1297105.1297051
   Guo PhilipJ., 2006, P 2006 INT S SOFTWAR, P255
   Hangal S, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P291, DOI 10.1109/ICSE.2002.1007976
   Hangal S, 2009, PROC INT CONF SOFTW, P155, DOI 10.1109/ICSE.2009.5070517
   Henkel J, 2007, IEEE T SOFTWARE ENG, V33, P526, DOI 10.1109/TSE.2007.70705
   Henning J. L., 2006, SIGARCH COMPUT ARCHI, V34, P1, DOI [DOI 10.1145/1186736.1186737, 10.1145/1186736.1186737]
   Host EW, 2009, LECT NOTES COMPUT SC, V5653, P294, DOI 10.1007/978-3-642-03013-0_14
   Hovemeyer David., 2004, ACM Conference on Object-Oriented Programming Systems, Lan-guages, and Applications, OOPSLA '04, P132
   Lawall J.L., 2010, PROC IEEE ACM INTL C, P103
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Lo D., 2006, SIGSOFT FSE, P265
   Monperrus M, 2010, LECT NOTES COMPUT SC, V6183, P2, DOI 10.1007/978-3-642-14107-2_2
   Nguyen TT, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P383, DOI 10.1145/1595696.1595767
   Pradel M., 2011, P 2011 INT S SOFTW T, P232
   Pradel M, 2009, IEEE INT CONF AUTOM, P371, DOI 10.1109/ASE.2009.60
   Shan Lu, 2007, Operating Systems Review, V41, P103, DOI 10.1145/1323293.1294272
   Thummalapenta S, 2009, IEEE INT CONF AUTOM, P283, DOI 10.1109/ASE.2009.72
   Thummalapenta S, 2009, PROC INT CONF SOFTW, P496, DOI 10.1109/ICSE.2009.5070548
   Wasylkowski A, 2009, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2009.30
   Whaley J., 2002, Software Engineering Notes, V27, P221, DOI 10.1145/566171.566212
   Zhang C, 2012, PROC INT CONF SOFTW, P826, DOI 10.1109/ICSE.2012.6227136
NR 36
TC 12
Z9 13
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2013
VL 39
IS 8
BP 1127
EP 1143
DI 10.1109/TSE.2013.7
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 191BU
UT WOS:000322388400006
DA 2024-07-18
ER

PT J
AU Duboc, L
   Letier, E
   Rosenblum, DS
AF Duboc, Leticia
   Letier, Emmanuel
   Rosenblum, David S.
TI Systematic Elaboration of Scalability Requirements through Goal-Obstacle
   Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements/specifications; analysis; performance measures; quality
   analysis and evaluation; goal-oriented requirements engineering; KAOS;
   scalability
ID SECURITY REQUIREMENTS
AB Scalability is a critical concern for many software systems. Despite the recognized importance of considering scalability from the earliest stages of development, there is currently little support for reasoning about scalability at the requirements level. This paper presents a goal-oriented approach for eliciting, modeling, and reasoning about scalability requirements. The approach consists of systematically identifying scalability-related obstacles to the satisfaction of goals, assessing the likelihood and severity of these obstacles, and generating new goals to deal with them. The result is a consolidated set of requirements in which important scalability concerns are anticipated through the precise, quantified specification of scaling assumptions and scalability goals. The paper presents results from applying the approach to a complex, large-scale financial fraud detection system.
C1 [Duboc, Leticia] State Univ Rio de Janeiro UERJ, Dept Comp Sci, BR-20550900 Rio De Janeiro, RJ, Brazil.
   [Letier, Emmanuel] UCL, Dept Comp Sci, London WC1E 6BT, England.
   [Rosenblum, David S.] Natl Univ Singapore, Sch Comp, Singapore 117417, Singapore.
C3 Universidade do Estado do Rio de Janeiro; University of London;
   University College London; National University of Singapore
RP Duboc, L (corresponding author), State Univ Rio de Janeiro UERJ, Dept Comp Sci, 534 Maracana, BR-20550900 Rio De Janeiro, RJ, Brazil.
EM leticia@ime.uerj.br; e.letier@cs.ucl.ac.uk; david@comp.nus.edu.sg
RI Duboc, Leticia/GXZ-5044-2022; Rosenblum, David S/C-1890-2008
FU European IST FET program in project SENSORIA [IST-2005-016004]; UCL
   studentship; EPSRC [EP/H011447/1]; Royal Society; EPSRC [EP/H011447/1]
   Funding Source: UKRI
FX This work was partially supported by the European IST FET program in
   project SENSORIA (IST-2005-016004), a UCL studentship to Leticia Duboc,
   the EPSRC grant EP/H011447/1, and a Wolfson Research Merit Award from
   the Royal Society to David Rosenblum. The authors thank Capacitas and
   NICE Actimize (formerly Searchspace) for discussions that led to many of
   the scalability tactics presented in this paper, and the anonymous
   referees for their constructive comments.
CR Actuate Corporation, 2009, M SCAL REQ ENT REP S
   Akao Y., 1990, QUALITY FUNCTION DEP
   [Anonymous], 2001, Security Engineering: A Guide to Building Dependable Distributed Systems
   [Anonymous], 2004, The rational unified process: an introduction
   [Anonymous], 2000, P C FUTURE SOFTWARE, DOI DOI 10.1145/336512.336556
   Bahsoon R, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P9, DOI 10.1109/WICSA.2008.45
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   Brataas G., 2004, Software Engineering Notes, V29, P125, DOI 10.1145/974043.974064
   Chung L., 2000, Non-functional Requirements in Software Engineering
   Darimont R., 1996, Software Engineering Notes, V21, P179, DOI 10.1145/250707.239131
   Duboc L., 2010, THESIS U COLL LONDON
   Duboc L., 2008, P 16 IEEE INT S REQ
   Duboc L., 2007, P THE 6 JOINT M EURO, P375, DOI [10.1145/1287624.1287679, DOI 10.1145/1287624.1287679]
   FANO RM, 1965, IEEE SPECTRUM, V2, P56, DOI 10.1109/MSPEC.1965.5531878
   Feather M.S., 2002, P C INT DES PROC TEC
   Foster I, 2001, INT J HIGH PERFORM C, V15, P200, DOI 10.1177/109434200101500302
   Gabriel R.P., 2006, Companion to the 21st ACM SIGPLAN symposium on object-oriented programming systems, languages, and applications, P632
   Giorgini P, 2002, LECT NOTES COMPUT SC, V2503, P167
   Haley CB, 2008, IEEE T SOFTWARE ENG, V34, P133, DOI 10.1109/TSE.2007.70754
   Heaven W., 2011, P 19 IEEE REQ ENG C
   ISO, 1991, ISO 9126
   Jackson M., 2001, PROBLEM FRAMES ANAL
   Jogalekar P, 2000, IEEE T PARALL DISTR, V11, P589, DOI 10.1109/71.862209
   Kazman R, 2001, PROC INT CONF SOFTW, P297, DOI 10.1109/ICSE.2001.919103
   KOYMANS R, 1992, SPECIFYING MESSAGE P
   Letier E., 2004, Software Engineering Notes, V29, P53, DOI 10.1145/1041685.1029905
   Letier E, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P83, DOI 10.1109/ICSE.2002.1007958
   LETIER E, 2001, THESIS U CATHOLIQUE
   Leveson N.G., 1995, Safeware: System Safety and Computers
   Linthicum D., 2010, INFOWORLD CLOUD  MAR
   Maiden N, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P105, DOI 10.1109/RE.2005.34
   Masticola S, 2005, LECT NOTES COMPUT SC, V3713, P355, DOI 10.1007/11557432_26
   Microsoft TechNet Library, 2009, QUANT AV SCAL REQ
   Nallur V., 2010, Proceedings of the 2010 ACM Symposium on Applied Computing, SAC '10, P367
   Popper K., 2005, The logic of scientific discovery
   Potts C., 1995, DIS '95. Symposium on Designing Interactive Systems: Processes, Practices, Medthods, and Techniques. Conference Proceedings, P247, DOI 10.1145/225434.225462
   Robertson S., 2006, Mastering the Requirements Process
   ROBINSON WN, 1990, 12TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P268, DOI 10.1109/ICSE.1990.63633
   Rosenblum D.S., 1997, P 6 EUR SOFTW ENG C, P334
   Ruthruff J.R., 2006, 2006 INT S SOFTW TES, P49
   Smith ConnieU., 2001, PERFORMANCE SOLUTION
   Tao Chen, 2011, Proceedings of the 2011 IEEE 4th International Conference on Cloud Computing (CLOUD 2011), P766, DOI 10.1109/CLOUD.2011.114
   van Lamsweerde A, 2004, PROC INT CONF SOFTW, P148, DOI 10.1109/ICSE.2004.1317437
   van Lamsweerde A, 2000, IEEE T SOFTWARE ENG, V26, P978, DOI 10.1109/32.879820
   Van Lamsweerde A, 2008, SYSTEMATIC REQUIREME
   van Steen M, 1998, P INT COMP SOFTW APP, P285, DOI 10.1109/CMPSAC.1998.716669
   Walters J. P., 2008, 2008 22nd International Conference on Advanced Information Networking and Applications - Workshops, P861, DOI 10.1109/AINA.2008.45
   Weinstock C.B., 2006, On system scalability
   Weyuker EJ, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P152, DOI 10.1109/METRIC.2002.1011334
   Wiegert J, 2007, IEEE IC COMP COM NET, P179
   Williams L.G., 2005, P INT COMP MEAS GROU, P341
   Yen J, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P87, DOI 10.1109/ISRE.1997.566845
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
   Zardari S., 2011, P 2 INT WORKSHOP SOF, P29
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
   Zhou Yanzhou, 2009, Proceedings of the 2009 Second International Workshop on Computer Science and Engineering (WCSE 2009), P111, DOI 10.1109/WCSE.2009.777
NR 56
TC 15
Z9 16
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2013
VL 39
IS 1
BP 119
EP 140
DI 10.1109/TSE.2012.12
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 063KJ
UT WOS:000312996800006
DA 2024-07-18
ER

PT J
AU Liu, SY
   Chen, YT
   Nagoya, F
   McDermid, JA
AF Liu, Shaoying
   Chen, Yuting
   Nagoya, Fumiko
   McDermid, John A.
TI Formal Specification-Based Inspection for Verification of Programs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Specification-based program inspection; software inspection; formal
   specification; program verification
ID CODE INSPECTIONS; SOFTWARE; DESIGN; ANIMATION; CHECKLIST; SYSTEMS
AB Software inspection is a static analysis technique that is widely used for defect detection, but which suffers from a lack of rigor. In this paper, we address this problem by taking advantage of formal specification and analysis to support a systematic and rigorous inspection method. The aim of the method is to use inspection to determine whether every functional scenario defined in the specification is implemented correctly by a set of program paths and whether every program path of the program contributes to the implementation of some functional scenario in the specification. The method is comprised of five steps: deriving functional scenarios from the specification, deriving paths from the program, linking scenarios to paths, analyzing paths against the corresponding scenarios, and producing an inspection report, and allows for a systematic and automatic generation of a checklist for inspection. We present an example to show how the method can be used, and describe an experiment to evaluate its performance by comparing it to perspective-based reading (PBR). The result shows that our method may be more effective in detecting function-related defects than PBR but slightly less effective in detecting implementation-related defects. We also describe a prototype tool to demonstrate the supportability of the method, and draw some conclusions about our work.
C1 [Liu, Shaoying] Hosei Univ, Dept Comp Sci, Tokyo, Japan.
   [Chen, Yuting] Shanghai Jiao Tong Univ, Software Sch, Shanghai, Peoples R China.
   [Nagoya, Fumiko] Aoyama Gakuin Univ, Grad Sch Int Management, Tokyo 150, Japan.
   [McDermid, John A.] Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
C3 Hosei University; Shanghai Jiao Tong University; Aoyama Gakuin
   University; University of York - UK
RP Liu, SY (corresponding author), Hosei Univ, Dept Comp Sci, Tokyo, Japan.
OI McDermid, John Alexander/0000-0003-4745-4272
FU Ministry of Education, Culture, Sports, Science and Technology of Japan
   [16016279, 18500027]; Grants-in-Aid for Scientific Research [16016279,
   18500027] Funding Source: KAKEN
FX The authors would like to thank all the students who joined the
   experiment for their efforts and cooperation in fulfilling their tasks.
   They also thank Xi Wang, Weikai Miao, and Junya Yukawa for their various
   helps and responsible cooperation in performing the experiment and
   analyzing the result, and Tomoya Sano and Masashi Goya for their
   excellent contributions to the development of the prototype tool.
   Finally, their gratitude goes to four anonymous reviewers for their
   insightful comments on the previous version of this paper that have
   helped them significantly improve the quality of their work. This work
   is supported by the Ministry of Education, Culture, Sports, Science and
   Technology of Japan under Grant-in-Aid for Scientific Research on
   Priority Areas (No. 16016279) and C (No. 18500027).
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   [Anonymous], 2012, COVERITY STAT ANAL
   [Anonymous], 1990, Predicate Calculus and Program Semantics
   [Anonymous], 1997, Fourth NASA Langley Formal Methods Workshop (LFM)
   Aurum A, 2002, SOFTW TEST VERIF REL, V12, P133, DOI 10.1002/stvr.243
   Babin G., 2001, International Journal of Computers & Applications, V23, P141
   Back R.-J., 1998, Refinement Calculus
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   BARNARD J, 1994, IEEE SOFTWARE, V11, P59, DOI 10.1109/52.268958
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   BERNOT G, 1991, SOFTWARE ENG J, V6, P387, DOI 10.1049/sej.1991.0040
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   BISANT DB, 1989, IEEE T SOFTWARE ENG, V15, P1294, DOI 10.1109/TSE.1989.559782
   Bush WR, 2000, SOFTWARE PRACT EXPER, V30, P775, DOI 10.1002/(SICI)1097-024X(200006)30:7<775::AID-SPE309>3.0.CO;2-H
   Chechik M, 2001, IEEE T SOFTWARE ENG, V27, P651, DOI 10.1109/32.935856
   Clarke Edmund M., 2001, Model Checking
   Dawes J., 1991, VDM SL REFERENCE GUI
   Dick J., 1993, FME'93: Industrial-Strength Formal Methods. First International Symposium of Formal Methods Europe Proceedings, P268, DOI 10.1007/BFb0024651
   Dunsmore A, 2003, IEEE SOFTWARE, V20, P21, DOI 10.1109/MS.2003.1207450
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Gabow H. N., 1976, IEEE Transactions on Software Engineering, VSE-2, P227, DOI 10.1109/TSE.1976.233819
   Gilb Tom, 1993, Software inspections
   Hall A, 2005, LECT NOTES COMPUT SC, V3785, P1
   Heitmeyer C., 1998, Proceedings of FMSP'98. Second Workshop on Formal Methods in Software Practice, P92, DOI 10.1145/298595.298863
   Heitmeyer C., 2002, Encyclopedia of Software Engineering, Vsecond
   Hoare C. A. R., 1973, Acta Informatica, V2, P335, DOI 10.1007/BF00289504
   Hoare C. A. R., 1998, Unifying Theories of Programming
   IEEE Standard for Software Rev, 1997, 10281997 IEEE CS
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson D., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P730, DOI 10.1109/ICSE.2000.870482
   Jalote P, 2007, INT J RELIAB QUAL SA, V14, P283, DOI 10.1142/S0218539307002659
   Jin X.H., 2005, 25 SQRL U LIM
   Jones CB., 1990, SYSTEMATIC SOFTWARE
   Kelly D, 2000, CASCON 00 P 2000 C C, P6
   KEMMERER RA, 1985, IEEE T SOFTWARE ENG, V11, P32, DOI 10.1109/TSE.1985.231535
   KNIGHT JC, 1993, COMMUN ACM, V36, P51, DOI 10.1145/163359.163366
   Kollanus S., 2007, COMPUTER SCI INFORM, V40
   Kuhn DR, 1999, ACM T SOFTW ENG METH, V8, P411, DOI 10.1145/322993.322996
   Kurita T, 2008, LECT NOTES COMPUT SC, V5014, P425, DOI 10.1007/978-3-540-68237-0_31
   Laitenberger O, 2001, IEEE T SOFTWARE ENG, V27, P387, DOI 10.1109/32.922713
   Laitenberger O., 2002, HDB SOFTWARE ENG KNO, P517
   Larsen PG, 1996, IEEE SOFTWARE, V13, P48, DOI 10.1109/52.493020
   Liu SY, 2008, J SYST SOFTWARE, V81, P234, DOI 10.1016/j.jss.2007.05.036
   Liu Shaoying., 2004, Formal Engineering for Industrial Software Development
   Liu SY, 2005, LECT NOTES COMPUT SC, V3785, P421
   Liu SY, 1998, IEEE INT C ENG COMP, P100, DOI 10.1109/ICECCS.1998.706660
   McDonald J, 1998, SECOND INTERNATIONAL CONFERENCE ON FORMAL ENGINEERING METHODS, PROCEEDINGS, P165, DOI 10.1109/ICFEM.1998.730580
   Miller T, 2002, LECT NOTES COMPUT SC, V2495, P192
   Morgan Carroll, 1994, Programming from specifications
   Morrey I, 1998, J SYST SOFTWARE, V41, P147, DOI 10.1016/S0164-1212(97)10016-4
   Parnas D. L., 1992, 260 CRL TRIO MCMASTE
   Parnas DL, 2003, IEEE T SOFTWARE ENG, V29, P674, DOI 10.1109/TSE.2003.1223642
   PARNAS DL, 1991, NUCL SAFETY, V32, P189
   PARNAS DL, 1994, IEEE T SOFTWARE ENG, V20, P948, DOI 10.1109/32.368133
   PARNAS DL, 1987, J SYST SOFTWARE, V7, P259, DOI 10.1016/0164-1212(87)90025-2
   PORTER A.A., 1996, ADV COMPUT, V42, P39
   Porter AA, 1997, IEEE T SOFTWARE ENG, V23, P329, DOI 10.1109/32.601071
   Reuys A., 2003, P WORKSH PROD LIN EN, P35
   Sahara S, 2004, P 2004 S SCI TECHN S, P93
   Shannon M., 2004, SOFTWARE TESTING TEC
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Software Formal Inspections Standard, 1993, ORAL HLTH STATUS ORA
   Stelting Stephen., 2001, Applied Java Patterns
   Stepney S., 1998, P BCS FACS 3 NO FORM
   Stocks P, 1996, IEEE T SOFTWARE ENG, V22, P777, DOI 10.1109/32.553698
   Thayer R. H., 2010, SOFTWARE ENG STANDAR
   Thelin T, 2003, IEEE T SOFTWARE ENG, V29, P687, DOI 10.1109/TSE.2003.1223644
   Thelin T, 2001, INFORM SOFTWARE TECH, V43, P925, DOI 10.1016/S0950-5849(01)00201-4
   Travassos GH, 1999, ACM SIGPLAN NOTICES, V34, P47, DOI 10.1145/320385.320389
   Vieira M.E., 2000, EFOCS3398 U CAL
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Wassyng A., 2006, International Journal on Software Tools for Technology Transfer, V8, P337, DOI 10.1007/s10009-005-0209-6
   Wassyng A, 2003, LECT NOTES COMPUT SC, V2805, P133
   Wheeler David A., 1996, Software Inspection: An Industry Best Practice for Defect Detection and Removal
   Wiegers Karl Eugene, 2002, Peer reviews in software: A practical guide
   Winkler D., 2008, IMPROVEMENT DEFECT D
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Woodcock J., 1996, Using Z: Specification, Refinement, and Proof
   Woodcock J, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592436
NR 80
TC 27
Z9 29
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2012
VL 38
IS 5
BP 1100
EP 1122
DI 10.1109/TSE.2011.102
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 009BA
UT WOS:000308999100008
DA 2024-07-18
ER

PT J
AU Holzmann, GJ
   Joshi, R
   Groce, A
AF Holzmann, Gerard J.
   Joshi, Rajeev
   Groce, Alex
TI Swarm Verification Techniques
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering tools and techniques; logic model checking;
   distributed algorithms; software verification
AB The range of verification problems that can be solved with logic model checking tools has increased significantly in the last few decades. This increase in capability is based on algorithmic advances and new theoretical insights, but it has also benefitted from the steady increase in processing speeds and main memory sizes on standard computers. The steady increase in processing speeds, though, ended when chip-makers started redirecting their efforts to the development of multicore systems. For the near-term future, we can anticipate the appearance of systems with large numbers of CPU cores, but without matching increases in clock-speeds. We will describe a model checking strategy that can allow us to leverage this trend and that allows us to tackle significantly larger problem sizes than before.
C1 [Holzmann, Gerard J.; Joshi, Rajeev] CALTECH, Jet Prop Lab, NASA, Pasadena, CA 91109 USA.
   [Groce, Alex] Oregon State Univ, Sch Elect Engn & Comp Sci, Kelley Engn Ctr 1148, Corvallis, OR 97331 USA.
C3 California Institute of Technology; National Aeronautics & Space
   Administration (NASA); NASA Jet Propulsion Laboratory (JPL); Oregon
   State University
RP Holzmann, GJ (corresponding author), CALTECH, Jet Prop Lab, NASA, 4800 Oak Grove Dr, Pasadena, CA 91109 USA.
EM gerard.holzmann@jpl.nasa.gov; rajeev.joshi@jpl.nasa.gov;
   agroce@gmail.com
FU US National Aeronautics and Space Administration (NASA)
FX The research described in this paper was carried out at the Jet
   Propulsion Laboratory, California Institute of Technology, under a
   contract with the US National Aeronautics and Space Administration
   (NASA). The work was supported in part by NASA's Exploration Technology
   Development Program (ETDP) on Reliable Software Engineering.
CR Ball T., 2001, Model Checking Software. 8th International SPIN Workshop. Proceedings (Lecture Notes in Computer Science Vol.2057), P103
   BIRD DL, 1983, IBM SYST J, V22, P229, DOI 10.1147/sj.223.0229
   Dwyer MB, 2007, PROC INT CONF SOFTW, P3
   Holzmann G.J., 2009, MODEL CHECKING BOUND
   Holzmann G.J., 2004, P 11 SPIN WORKSH, P77
   Holzmann G.J., 1987, P 6 INT C PROT SPEC
   Holzmann GJ, 2007, IEEE T SOFTWARE ENG, V33, P659, DOI 10.1109/TSE.2007.70724
   Holzmann GJ, 2000, LECT NOTES COMPUT SC, V1885, P131
   HOLZMANN GJ, 1985, AT&T TECH J, V64, P2413, DOI 10.1002/j.1538-7305.1985.tb00010.x
   Holzmann GJ, 2000, BELL LABS TECH J, V5, P72, DOI 10.1002/bltj.2223
   Holzmann GJ, 2004, The SPIN model checker: primer and reference manual, V1003
   Hyvärinen AEJ, 2008, LECT NOTES ARTIF INT, V5144, P125, DOI 10.1007/978-3-540-85110-3_11
   Moore G.E., 1965, ELECTRONICS, V38
   Musuvathi M., 2008, P ACM SIGPLAN C PROG, P7
   Ohmura K, 2009, LECT NOTES COMPUT SC, V5584, P524, DOI 10.1007/978-3-642-02777-2_47
   Owen D., 2003, P 15 INT C SOFTW ENG
   PENIX J, 2005, FORMAL METHODS SYSTE, V26
   Qadeer S, 2005, LECT NOTES COMPUT SC, V3440, P93
   Sivaraj H., 2003, P 2 INT WORKSH PAR D
   Visser W., 2003, PROGRAMS INT J AUTOM, V10, P3
   WEST CH, 1989, COMP COMM R, V19, P303, DOI 10.1145/75247.75276
   Wintersteiger CM, 2009, LECT NOTES COMPUT SC, V5643, P715, DOI 10.1007/978-3-642-02658-4_60
NR 22
TC 53
Z9 56
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2011
VL 37
IS 6
BP 845
EP 857
DI 10.1109/TSE.2010.110
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 854SE
UT WOS:000297513700006
DA 2024-07-18
ER

PT J
AU Burgy, L
   Réveillère, L
   Lawall, J
   Muller, G
AF Burgy, Laurent
   Reveillere, Laurent
   Lawall, Julia
   Muller, Gilles
TI Zebu: A Language-Based Approach for Network Protocol Message Processing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Network protocols; message parsing; message composing; domain-specific
   languages
AB A network application communicates with other applications according to a set of rules known as a protocol. This communication is managed by the part of the application known as the protocol-handling layer, which enables the manipulation of protocol messages. The protocol-handling layer is a critical component of a network application since it represents the interface between the application and the outside world. It must thus satisfy two constraints: It must be efficient to be able to treat a large number of messages and it must be robust to face various attacks targeting the application itself or the underlying platform. Despite these constraints, the development process of this layer still remains rudimentary and requires a high level of expertise. It includes translating the protocol specification written in a high-level formalism such as ABNF toward low-level code such as C. The gap between these abstraction levels can entail many errors. This paper proposes a new language-based approach to developing protocol-handling layers, to improve their robustness without compromising their performance. Our approach is based on the use of a domain-specific language, Zebu, to specify the protocol-handling layer of network applications that use textual HTTP-like application protocols. The Zebu syntax is very close to that of ABNF, facilitating the adoption of Zebu by domain experts. By annotating the original ABNF specification of a protocol, the Zebu user can dedicate the protocol-handling layer to the needs of a given application. The Zebu compiler first checks the annotated specification for inconsistencies, and then generates a protocol-handling layer according to the annotations. This protocol-handling layer is made up of a set of data structures that represent a message, a parser that fills in these data structures, and various stub functions to access these data structures or drive the parsing of a message.
C1 [Burgy, Laurent] Princeton Univ, Princeton, NJ 08540 USA.
   [Reveillere, Laurent] Univ Bordeaux, LaBRI, F-33405 Talence, France.
   [Lawall, Julia] Univ Copenhagen, DIKU, LiP6, F-75005 Paris, France.
   [Muller, Gilles] INRIA Regal, LIP6, F-750005 Paris, France.
C3 Princeton University; Universite de Bordeaux; Centre National de la
   Recherche Scientifique (CNRS); Sorbonne Universite; Sorbonne Universite
RP Burgy, L (corresponding author), Princeton Univ, 35 Olden St, Princeton, NJ 08540 USA.
EM lburgy@princeton.edu; laurent.reveillere@labri.fr; julia@diku.dk;
   gilles.muller@lip6.fr
CR Agrawal H., 1989, SERCTR41P PURD U COM
   [Anonymous], P 6 ACM SIGCOMM C IN
   Borisov N., 2007, NDSS
   Burgy L, 2007, SYM REL DIST SYST, P149, DOI 10.1109/SRDS.2007.26
   Cortes M, 2004, BELL LABS TECH J, V9, P155, DOI 10.1002/bltj.20048
   Cortes M, 2002, FOURTH INTERNATIONAL SYMPOSIUM ON MULTIMEDIA SOFTWARE ENGINEERING, PROCEEDINGS, P246, DOI 10.1109/MMSE.2002.1181620
   CROCKER D, 1997, RFC 2234 AUGMENTED B
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   FISHER K, 2005, PLDI, P295
   Hazel P., 2006, PCRE PERL COMPATIBLE
   Johnson StephenC., 1975, YACC YET ANOTHER COM
   KRISHNAMURTHY S, 2006, P 3 INT C MOB UB SYS, P1
   Leggio S, 2005, P 2 INT WORKSH WIR A
   Lesk M.E., 1975, LEX LEXICAL ANAL GEN
   *LINPH, 2010, OP SOURC SIP VID PHO
   MADHAVAPEDDY A, 2007, THESIS CAMBRIDGED U
   McCann PeterJ., 2000, P ACM SIGCOMM C, P321
   MOIZARD A, 2001, GNU OSIP LIB
   Musuvathi M, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE FIRST SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION (NSDI'04), P155
   Paxson V, 1999, COMPUT NETW, V31, P2435, DOI 10.1016/S1389-1286(99)00112-7
   Pelinescu A, 2003, IEEE NETWORK, V17, P9
   Postel Jonathan B., 1982, 821 RFC
   Qie XH, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P45
   Rosenberg J, 2002, 3261 IETF RFC
   SPARKS R, 2006, 4475 RFC INT ENG TAS
   SPENCER A, 2010, ASTERISK OPEN SOURCE
   Stuedi P., 2007, P 8 ACM IFIP USENIX
   Wanke S, 2007, LECT NOTES COMPUT SC, V4606, P103
   Wessels D., 2004, Squid: the Definitive Guide
   2010, EXMAP CONSOLE
   2003, EXTENDED OSIP LIB
   2006, SOFIA SIP
   2010, LIVEMEDIA STREAMING
NR 33
TC 10
Z9 12
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2011
VL 37
IS 4
BP 575
EP 591
DI 10.1109/TSE.2010.64
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 801QT
UT WOS:000293456000008
DA 2024-07-18
ER

PT J
AU Lanotte, R
   Maggiolo-Schettini, A
   Troina, A
AF Lanotte, Ruggero
   Maggiolo-Schettini, Andrea
   Troina, Angelo
TI Time and Probability-Based Information Flow Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Probabilistic timed automata; multilevel security; information flow
   analysis; weak bisimulation
AB In multilevel systems, it is important to avoid unwanted indirect information flow from higher levels to lower levels, namely, the so-called covert channels. Initial studies of information flow analysis were performed by abstracting away from time and probability. It is already known that systems that are proven to be secure in a possibilistic framework may turn out to be insecure when time or probability is considered. Recently, work has been done in order to consider also aspects either of time or of probability, but not both. In this paper, we propose a general framework based on Probabilistic Timed Automata, where both probabilistic and timing covert channels can be studied. We define a Noninterference security property and a Nondeducibility on Composition security property, which allow expressing information flow in a timed and probabilistic setting. We then compare these properties with analogous ones defined in contexts where either time or probability or neither of them are taken into account. This permits a classification of the properties depending on their discerning power. As an application, we study a system with covert channels that we are able to discover by applying our techniques.
C1 [Lanotte, Ruggero] Univ Insubria, Dipartimento Sci Cultura Polit & Informaz, I-22100 Como, Italy.
   [Maggiolo-Schettini, Andrea] Univ Pisa, Dipartimento Informat, I-56127 Pisa, Italy.
   [Troina, Angelo] Univ Turin, Dipartimento Informat, I-10149 Turin, Italy.
C3 University of Insubria; University of Pisa; University of Turin
RP Lanotte, R (corresponding author), Univ Insubria, Dipartimento Sci Cultura Polit & Informaz, Via Carloni 78, I-22100 Como, Italy.
EM ruggero.lanotte@uninsubria.it; maggiolo@di.unipi.it; troina@di.unito.it
RI Troina, Angelo/H-2985-2012
OI Lanotte, Ruggero/0000-0002-3335-234X
CR Aldini A., 2004, Journal of Computer Security, V12, P191
   Aldini A, 2008, INT J INF SECUR, V7, P219, DOI 10.1007/s10207-007-0050-x
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   ALUR R, 1992, P WORKSH REAL TIM TH, P28
   [Anonymous], 1995, J COMPUT SECUR, DOI [DOI 10.3233/JCS-1994/1995-3103, 10.3233/JCS-1994/1995-3103]
   [Anonymous], 2000, P POPL 00
   Baier C, 1997, LECT NOTES COMPUT SC, V1254, P119
   Barber M, 2003, J ECCLESIAST HIST, V54, P137
   Beauquier D, 2003, THEOR COMPUT SCI, V292, P65, DOI 10.1016/S0304-3975(01)00215-8
   Bellman R., 1957, Dynamic programming
   Boreale M, 2009, INFORM COMPUT, V207, P699, DOI 10.1016/j.ic.2008.12.007
   BOUYER P, 2002, RS0235 BRICS
   CATTANI S, 2002, P 13 INT C CONC THEO, P371
   Cerans Karlis., 1993, CAV 92, P302
   CHATZIKOKOLAKIS K, 2009, P INT C FDN SOFTW SC, P318
   Chatzikokolakis K, 2007, LECT NOTES COMPUT SC, V4703, P42
   Chaum D., 1988, Journal of Cryptology, V1, P65, DOI 10.1007/BF00206326
   Clark D, 2005, J LOGIC COMPUT, V15, P181, DOI 10.1093/logcom/exi009
   DESHARNAIS J, 2002, P ANN IEEE S LOG COM
   Di Pierro A, 2005, THEOR COMPUT SCI, V340, P3, DOI 10.1016/j.tcs.2005.03.002
   Di Pierro A., 2004, Journal of Computer Security, V12, P37
   Di Pierro A, 2007, J LOGIC ALGEBR PROGR, V72, P173, DOI 10.1016/j.jlap.2007.02.007
   DIPIERRO A, 2003, P INT C CONC THEOR, P508
   DIPIERRO A, 2008, P INT C INF COMM SEC, P81
   Evans N, 2000, LECT NOTES COMPUT SC, V1895, P222
   Focardi R, 2000, P IEEE CSFW, P170, DOI 10.1109/CSFW.2000.856935
   Focardi Riccardo, 2001, ELECT NOT THEOR COMP, V62, P229, DOI [10.1016/S1571-0661(04)00329-9, DOI 10.1016/S1571-0661(04)00329-9]
   Goguen J. A., 1982, Proceedings of the 1982 Symposium on Security and Privacy, P11
   Gray J. W., 1992, Journal of Computer Security, V1, P255, DOI DOI 10.3233/JCS-1992-13-405
   Halmos P. R., 1950, MEASURE THEORY
   HENZINGER TA, 1994, INFORM COMPUT, V111, P193, DOI 10.1006/inco.1994.1045
   Howard H., 1960, DYNAMIC PROGRAMMING
   Kwiatkowska M, 2002, THEOR COMPUT SCI, V282, P101, DOI 10.1016/S0304-3975(01)00046-9
   KWIATKOWSKA M, 2003, CSR0310 U BIRM
   LANOTTE R, 2004, CSLO0411100 CORR
   LANOTTE R, 2008, WEAK BISIMULATION PR
   LANOTTE R, 2004, P INT WORKSH FORM AS
   Laroussinie F., 1995, CONCUR '95: Concurrency Theory. 6th International Conference. Proceedings, P27
   Larsen KG, 1997, INFORM COMPUT, V134, P75, DOI 10.1006/inco.1997.2623
   McCullough D., 1988, Proceedings of the 1988 IEEE Symposium on Security and Privacy (Cat. No.88CH2558-5), P177, DOI 10.1109/SECPRI.1988.8110
   Millen J. K., 1990, Proceedings. The Computer Security Foundations Workshop III (Cat. No.TH0315-2), P84, DOI 10.1109/CSFW.1990.128188
   Milner R., 1989, Communication and concurrency
   TROINA A, 2006, THESIS U PISA
   van Breugel F, 2001, LECT NOTES COMPUT SC, V2076, P421
   Wang Yi, 1990, CONCUR '90. Theories of Concurrency: Unification and Extension, P502, DOI 10.1007/BFb0039080
NR 45
TC 8
Z9 10
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2010
VL 36
IS 5
BP 719
EP 734
DI 10.1109/TSE.2010.4
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 653YP
UT WOS:000282135000009
DA 2024-07-18
ER

PT J
AU Skene, J
   Raimondi, F
   Emmerich, W
AF Skene, James
   Raimondi, Franco
   Emmerich, Wolfgang
TI Service-Level Agreements for Electronic Services
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Service-level agreements; electronic services; contracts;
   domain-specific languages; model-driven engineering
AB The potential of communication networks and middleware to enable the composition of services across organizational boundaries remains incompletely realized. In this paper, we argue that this is in part due to outsourcing risks and describe the possible contribution of Service-Level Agreements (SLAs) to mitigating these risks. For SLAs to be effective, it should be difficult to disregard their original provisions in the event of a dispute between the parties. Properties of understandability, precision, and monitorability ensure that the original intent of an SLA can be recovered and compared to trustworthy accounts of service behavior to resolve disputes fairly and without ambiguity. We describe the design and evaluation of a domain-specific language for SLAs that tend to exhibit these properties and discuss the impact of monitorability requirements on service-provision practices.
C1 [Skene, James] Univ Auckland, Dept Comp Sci, Auckland 1, New Zealand.
   [Raimondi, Franco] Middlesex Univ, Sch Engn & Informat Sci, London NW4 4BTT, England.
   [Emmerich, Wolfgang] UCL, Dept Comp Sci, London WC1E 6BT, England.
C3 University of Auckland; Middlesex University; University of London;
   University College London
RP Skene, J (corresponding author), Univ Auckland, Dept Comp Sci, Bldg 303,38 Princes St, Auckland 1, New Zealand.
EM j.skene@gmail.com; f.raimondi@mdx.ac.uk; w.emmerich@cs.ucl.ac.uk
OI Raimondi, Franco/0000-0002-9508-7713
FU IST; EPSRC
FX Jason Crampton, Allan Skene, and Domenico Davide Lamanna were joint
   authors of some of the papers, the results of whichwehave summarized
   here. This research was funded by the IST project TAPAS and the EPSRC
   Divergent Grid project. We are also grateful for the contributions of
   our partners in the IST project PLASTIC to the continued development of
   SLAng and to Zuhlke Engineering Ltd. for supporting the preparation of
   this manuscript.
CR [Anonymous], WEB SERV LEV AGR WSL
   [Anonymous], WEB SERV ARCH
   [Anonymous], GOOGLE CEOS NEW PARA
   *BEA SYST INC, 2006, SOA PRACT GUID 1
   Davulcu H, 1999, RIDE-VE '99 - NINTH INTERNATIONAL WORKSHOP ON RESEARCH ISSUES ON DATA ENGINEERING: INFORMATION TECHNOLOGY FOR VIRTUAL ENTERPRISES, PROCEEDINGS, P12, DOI 10.1109/RIDE.1999.758587
   *DEC, 1992, PROGR ONC RPC
   Emmerich W, 2005, J GRID COMPUT, V3, P283, DOI DOI 10.1007/S10723-005-9015-3
   EVANS AS, 1999, P 2 INT C UN MOD LAN, P140
   FROLUND S, 1998, TR9810 HP LAB
   Greschler D., 2002, International Journal of Network Management, V12, P317, DOI 10.1002/nem.446
   Huhns MN, 2005, IEEE INTERNET COMPUT, V9, P75, DOI 10.1109/MIC.2005.21
   Jones A., 1993, DEONTIC LOGIC COMPUT, P275
   Loyall JP, 1998, FIRST INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING (ISORC '98), P43, DOI 10.1109/ISORC.1998.666767
   MALINVERNO P, 2007, G00150358 GARTN INC
   Menasce D. A., 2001, Capacity Planning for Web Services: Metrics, Models, and Methods
   Molina-Jimenez C, 2005, LECT NOTES COMPUT SC, V3549, P36
   Neal S, 2003, SEVENTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P50, DOI 10.1109/EDOC.2003.1233837
   OMG, 2003, MDA GUID VERS 1 0 1
   *OMG, 2002, MET FAC COR SPEC VER
   *OMG, 2002, UML 2 0 SUP FIN AD S
   *OMG, 2003, UML 2 0 OCL FIN AD S
   *OP GRID FOR, 2006, WEB SERV ARG SPEC WS
   PASCHKE A, 2005, P INT C INT AG WEB T
   Rappa MA, 2004, IBM SYST J, V43, P32, DOI 10.1147/sj.431.0032
   SAHAI A, 2001, HPL2001310R1
   SINHA A, 1992, COMMUN ACM, V35, P77, DOI 10.1145/129902.129908
   Skene J, 2004, PROC INT CONF SOFTW, P179, DOI 10.1109/ICSE.2004.1317440
   Skene J., 2006, GAMMA 06 P 2006 INT, P47
   SKENE J, 2004, P INT IEEE ENT DISTR
   SKENE J, 2007, THESIS U LONDON
   Skene J., 2007, 6 INT WORKSHOP SOFTW, P3
   Sturm R., 2000, FDN SERVICE LEVEL MA
   Susarla A., 2006, Information Systems Outsourcing: Enduring Themes, New Perspectives and Global Challenges, P481
   TOSIC V, 2002, THESIS OTTAWA CARLET
   *W3C, 2004, OWL S SEM MARK WEB S
   Wright Von, 1951, Mind, V60, P1, DOI [10.1093/mind/LX.237.1, DOI 10.1093/MIND/LX.237.1]
   2009, SLANG OPEN SOURCE PR
   2009, CONDOR PROJECT
   2009, GRIDSAM GRID JOB SUB
   2009, AMAZON ELASTIC COMPU
   2008, ACTIVEBPEL OPEN SOUR
   2009, JANET UKS ED RES NET
   [No title captured]
NR 43
TC 27
Z9 33
U1 0
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2010
VL 36
IS 2
BP 288
EP 304
DI 10.1109/TSE.2009.55
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 574ZH
UT WOS:000276032300011
DA 2024-07-18
ER

PT J
AU Beydoun, G
   Low, G
   Henderson-Sellers, B
   Mouratidis, H
   Gomez-Sanz, JJ
   Pavón, J
   Gonzalez-Perez, C
AF Beydoun, Ghassan
   Low, Graham
   Henderson-Sellers, Brian
   Mouratidis, Haralambos
   Gomez-Sanz, Jorge J.
   Pavon, Juan
   Gonzalez-Perez, Cesar
TI FAML: A Generic Metamodel for MAS Development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Modeling; metamodel; multiagent systems
AB In some areas of software engineering research, there are several metamodels claiming to capture the main issues. Though it is profitable to have variety at the beginning of a research field, after some time, the diversity of metamodels becomes an obstacle, for instance to the sharing of results between research groups. To reach consensus and unification of existing metamodels, metamodel-driven software language engineering can be applied. This paper illustrates an application of software language engineering in the agent-oriented software engineering research domain. Here, we introduce a relatively generic agent-oriented metamodel whose suitability for supporting modeling language development is demonstrated by evaluating it with respect to several existing methodology-specific metamodels. First, the metamodel is constructed by a combination of bottom-up and top-down analysis and best practice. The concepts thus obtained and their relationships are then evaluated by mapping to two agent-oriented metamodels: TAO and Islander. We then refine the metamodel by extending the comparisons with the metamodels implicit or explicit within five more extant agent-oriented approaches: Adelfe, PASSI, Gaia, INGENIAS, and Tropos. The resultant FAML metamodel is a potential candidate for future standardization as an important component for engineering an agent modeling language.
C1 [Beydoun, Ghassan] Univ Wollongong, Fac Informat, Sch Informat Syst & Technol, Wollongong, NSW 2522, Australia.
   [Low, Graham] Univ New S Wales, Australian Sch Business, Sch Informat Syst Technol & Management, Sydney, NSW 2052, Australia.
   [Henderson-Sellers, Brian] Univ Technol Sydney, Sch Software, Fac Engn & Informat Technol, Sydney, NSW 2007, Australia.
   [Mouratidis, Haralambos] Univ E London, Sch Comp & Technol, London E16 2RD, England.
   [Gomez-Sanz, Jorge J.; Pavon, Juan] Univ Complutense Madrid, Fac Informat, E-28040 Madrid, Spain.
   [Gonzalez-Perez, Cesar] Inst Estudios Gallegos Padre Sarmiento, CSIC, Spanish Natl Res Council, Heritage Lab LaPa, Santiago De Compostela 15704, Galici, Spain.
C3 University of Wollongong; University of New South Wales Sydney;
   University of Technology Sydney; University of East London; Complutense
   University of Madrid; Consejo Superior de Investigaciones Cientificas
   (CSIC); CSIC-XUGA - Instituto de Estudios Gallegos Padre Sarmiento
   (IEGPS)
RP Beydoun, G (corresponding author), Univ Wollongong, Fac Informat, Sch Informat Syst & Technol, Wollongong, NSW 2522, Australia.
EM ghassan@uow.edu.au; g.low@unsw.edu.au; brian@it.uts.edu.au;
   haris@uel.ac.uk; jjgomez@sip.ucm.es; jpavon@fdi.ucm.es;
   cesar.gonzalez-perez@iegps.csic.es
RI Gonzalez-Perez, Cesar A./B-8437-2009; SANZ, JORGE JESUS
   GOMEZ/L-4398-2014; Beydoun, Ghassan/L-5554-2017; Pavón,
   Juan/B-9363-2008; Beydoun, Ghassan/E-8952-2011; Mestras, Juan
   Pavón/AAC-3533-2020
OI Pavón, Juan/0000-0002-9553-8123; Gomez-Sanz, Jorge/0000-0003-4534-378X;
   Gonzalez-Perez, Cesar/0000-0002-3976-7589; Beydoun,
   Ghassan/0000-0001-8087-5445; Mouratidis, Haralambos/0000-0002-2599-0712
CR [Anonymous], 2000, Reasoning About Rational Agents
   [Anonymous], 2010, ARTIF INTELL
   Azaiez S, 2006, MULTIAGENT GRID SYST, V2, P435, DOI 10.3233/MGS-2006-2409
   Bauer B., 2001, International Journal of Software Engineering and Knowledge Engineering, V11, P207, DOI 10.1142/S0218194001000517
   BELLIFEMINE F, 2006, MULTIAGENT PROGRAMMI, P125
   Bernon C, 2005, KNOWL ENG REV, V20, P99, DOI 10.1017/S0269888905000421
   Bernon C., 2005, Agent-oriented methodologies, P172
   BERNON C, 2005, P 5 INT WORKSH AG OR, P62
   BERNON C, 2002, ENG SOC AGENTS WORLD
   BERTOLINI D, 2005, TROPOS VISUAL LANGUA
   Beydoun C, 2005, INT J COOP INF SYST, V14, P45, DOI 10.1142/S0218843005001080
   Beydoun G, 2009, INFORM SOFTWARE TECH, V51, P832, DOI 10.1016/j.infsof.2008.05.003
   Beydoun G, 2006, LECT NOTES COMPUT SC, V3914, P126
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   BRESCIANI P, 2001, P INT C AUT AG
   CAIRE G, 2002, AGENT ORIENTED SOFTW, V2, P119
   CERNUZZI L, 2002, P OBJ OR PROGR SYST
   Cervenka R., 2007, AML AGENT MODELING L
   CHAVEZ C, 2002, P ASP OR MOD UML WOR
   CHOREN R, 2005, P INT WORKSH SOFTW E, P198
   COSSENTINO M, 2005, AGENT ORIENTED METHO, P79, DOI DOI 10.4018/978-1-59140-581-8.CH004]
   COSSENTINO M, 2002, P INT C SOFTW ENG RE
   COTTENIER T, 2005, P INT C MOD DRIV ENG, P100
   DASILVA VA, 2003, P WORKSH SOFTW ENG M
   DASILVA VT, 2003, SOFTWARE ENG LARGE S, P1
   DELOACH S, 2009, INT J AGENT ORIENTED, V3
   Dori D, 2002, COMMUN ACM, V45, P82, DOI 10.1145/581571.581599
   Durfee EdmundH., 1989, DISTRIBUTED ARTIFICI, V2, P229
   Esteva M., 2002, Proceedings of the First International Joint Conference on Autonomous Agents and Multiagent Systems, P1045
   FERBER J, 1992, DISTRIBUTED ARTIFICI
   *FIPA, 2003, METH GLOSS FIPAMG
   FUENTES L, 2006, P WORKSH MOD BAS DEV, P10
   Fuxman A, 2004, REQUIR ENG, V9, P132, DOI 10.1007/s00766-004-0191-7
   Henderson-Sellers B, 2005, J OBJECT TECHNOL, V4, P131, DOI 10.5381/jot.2005.4.2.a3
   Henderson-Sellers Brian., 2005, AGENT ORIENTED METHO
   HENDERSONSELLER.B, 2005, P MULT SYST APPL 4 4, P142
   Hendorson-Sellers B, 1999, LECT NOTES COMPUT SC, V1723, P49
   KACEM MH, 2006, P 2006 ACM S APPL CO
   KRUCHTEN P, 1996, P 2 INT SOFTW ARCH W, P5
   LOW GC, 2007, P PAC RIM INT C MULT
   Luger G.F., 2002, ARTIF INTELL, V4th
   Mine T, 2004, LECT NOTES ARTIF INT, V3191, P31
   ODELL J, 2008, COMMUNICATION
   ODELL J, 2005, P 5 INT WORKSH AG OR, P78
   Odell James., 2000, AOIS WORKSHOP AAAI 2, P3
   ODELL JJ, 2003, P INT WORKSH AG OR S, P16
   OMALLEY SA, 2001, P 2 INT WORKSH AG OR
   *OMG, 2008, AG MET PROF AMP REQ
   Padgham L., 2004, DEV INTELLIGENT AGEN, V1
   Pavon J., 2005, Agent-oriented Methodologies, P236
   Pfeifer Rolf, 2001, Understanding Intelligence
   Platon E, 2007, AUTON AGENT MULTI-AG, V14, P31, DOI 10.1007/s10458-006-9000-7
   Rodriguez J.A., 2003, DESIGN CONSTRUCTION
   Sabas A, 2002, 6TH WORLD MULTICONFERENCE ON SYSTEMICS, CYBERNETICS AND INFORMATICS, VOL I, PROCEEDINGS, P211
   Shehory O., 2001, Proceedings of the Fifth International Conference on Autonomous Agents, P624, DOI 10.1145/375735.376473
   SIERRA C, 2005, COMMUNICATION
   SILVA V, 2004, AUTON AGENT MULTI-AG, V9, P145
   Tidhar G, 1999, SIXTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-99)/ELEVENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE (IAAI-99), P829
   Topçu O, 2008, ACM T MODEL COMPUT S, V18, DOI 10.1145/1371574.1371576
   Tran Q.N., 2005, AGENT ORIENTEDMETHOD, P341
   VALCKENAERS P, J AUTONOMOUS AGENTS, V14, P61
   Verstraete Paul, 2008, International Journal of Agent-Oriented Software Engineering, V2, P62, DOI 10.1504/IJAOSE.2008.016800
   Winikoff M, 2005, MU S ART SOC SIM ORG, V15, P175, DOI 10.1007/0-387-26350-0_7
   Wooldridge M, 2000, AUTON AGENT MULTI-AG, V3, P285, DOI 10.1023/A:1010071910869
   WOOLDRIDGE M, 2005, AGENT ORIENTED METHO, P136
   Woolridge M., 1999, Proceedings of the Third International Conference on Autonomous Agents, P69, DOI 10.1145/301136.301165
   Yu E., 1995, MODELLING STRATEGIC
   Zambonelli F, 2004, AUTON AGENT MULTI-AG, V9, P253, DOI 10.1023/B:AGNT.0000038028.66672.1e
   Zambonelli F, 2003, ACM T SOFTW ENG METH, V12, P317, DOI 10.1145/958961.958963
   Zhu H, 2001, INT J SOFTW ENG KNOW, V11, P529, DOI 10.1142/S0218194001000657
   ZHU H, 2005, P 10 IEEE INT WORKSH
   [No title captured]
NR 72
TC 104
Z9 111
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2009
VL 35
IS 6
BP 841
EP 863
DI 10.1109/TSE.2009.34
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 524VP
UT WOS:000272172800007
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Demsky, B
   Rinard, M
AF Demsky, Brian
   Rinard, Martin
TI Automatic Extraction of Heap Reference Properties in Object-Oriented
   Programs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Program understanding; roles; design recovery
AB We present a new technique for helping developers understand heap referencing properties of object-oriented programs and how the actions of the program affect these properties. Our dynamic analysis uses the aliasing properties of objects to synthesize a set of roles; each role represents an abstract object state intended to be of interest to the developer. We allow the developer to customize the analysis to explore the object states and behavior of the program at multiple different and potentially complementary levels of abstraction. The analysis uses roles as the basis for three abstractions: role transition diagrams, which present the observed transitions between roles and the methods responsible for the transitions; role relationship diagrams, which present the observed referencing relationships between objects playing different roles; and enhanced method interfaces, which present the observed roles of method parameters. Together, these abstractions provide useful information about important object and data structure properties and how the actions of the program affect these properties. We have implemented the role analysis and have used this implementation to explore the behavior of several Java programs. Our experience indicates that, when combined with a powerful graphical user interface, roles are a useful abstraction for helping developers explore and understand the behavior of object-oriented programs.
C1 [Demsky, Brian] Univ Calif Irvine, Irvine, CA 92697 USA.
   [Rinard, Martin] MIT, Comp Sci & Artificial Intelligence Lab, Stata Ctr, Cambridge, MA 02139 USA.
C3 University of California System; University of California Irvine;
   Massachusetts Institute of Technology (MIT)
RP Demsky, B (corresponding author), Univ Calif Irvine, 544E Engn Tower, Irvine, CA 92697 USA.
EM bdemsky@gmail.com; rinard@lcs.mit.edu
FU Direct For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [0811397] Funding Source: National Science
   Foundation
CR AMMONS G, 2002, P 29 ANN ACM S PRINC
   [Anonymous], P 2002 ACM SIGSOFT I
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Cook J. E., 1998, ACM Transactions on Software Engineering and Methodology, V7, P215, DOI 10.1145/287000.287001
   DEMSKY B, 2002, P INT C SOFTW ENG MA
   DEPAUW W, 2009, JINSIGHT TOOL VISUAL
   ELLSON J, 2009, GRAPHVIZ
   Engler Dawson R., 2001, Proceedings of the 18th ACM Symposium on Operating Systems Principles, P57
   Ernst M. D., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P449, DOI 10.1109/ICSE.2000.870435
   Ernst M. D., 1999, P INT C SOFTW ENG, P1
   FAMILIAR R, 2009, ADAPTIVE ROLE PLAYIN
   FOWLER M, 1997, DEALING ROLES
   Jackson D, 2000, IEEE SOFTWARE, V17, P63, DOI 10.1109/52.896251
   Jackson D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P194, DOI 10.1109/ICSE.1999.841009
   JACKSON D, 2000, 797 MIT LAB COMP SCI
   JACOBS B, 2009, PATTERNS USING PROCE
   Korn J., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P314, DOI 10.1109/WCRE.1999.806970
   KREMENEK T, 2006, P 7 C USENIX S OP SY
   KUNCAK V, 2002, P 29 ANN ACM S PRINC
   Li Z., 2005, ESEC FSE
   NANDA MG, 2005, P 20 ANN ACM SIGPLAN
   OCallahan R, 1997, PROC INT CONF SOFTW, P338, DOI 10.1145/253228.253351
   OCALLAHAN R, 2002, THESIS CARNEGIE MELL
   PENNINGTON N, 1987, P 2 WORKSH EMP STUD, P100
   Ramanathan MK, 2007, PROC INT CONF SOFTW, P240
   *RAT INC, 2009, UN MOD LANG
   RIDDLE WE, 1977, SOFTWARE ENG NOTES, V2, P11
   SHOHAM S, 2007, P 2007 INT S SOFTW T
   *SUN MICR, 2009, JAV VIRT MACH PROF I
   Wasylkowski Andrzej, 2007, P 6 JOINT M EUROPEAN, P35, DOI [10.1145/1287624.1287632, DOI 10.1145/1287624.1287632]
NR 30
TC 3
Z9 4
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2009
VL 35
IS 3
BP 305
EP 324
DI 10.1109/TSE.2008.91
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 450NL
UT WOS:000266408000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Casale, G
AF Casale, Giuliano
TI CoMoM: Efficient Class-Oriented Evaluation of Multiclass Performance
   Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 10th Workshop on Mathematical Performance Modeling and Analysis
CY JUN 02, 2008
CL Annapolis, MD
DE Multiclass applications; queuing networks; performance modeling; exact
   analysis; state-dependent attributes
ID ALGORITHMS; BEHAVIOR; NETWORKS
AB We introduce the Class-oriented Method of Moments (CoMoM), a new exact algorithm to compute performance indexes in closed multiclass queuing networks. Closed models are important for performance evaluation of multitier applications, but when the number of service classes is large, they become too expensive to solve with exact methods such as Mean Value Analysis (MVA). CoMoM addresses this limitation by a new recursion that scales efficiently with the number of classes. Compared to the MVA algorithm, which recursively computes mean queue lengths, CoMoM also carries on in the recursion information on higher-order moments of queue lengths. We show that this additional information greatly reduces the number of operations needed to solve the model and makes CoMoM the best-available algorithm for networks with several classes. We conclude the paper by generalizing CoMoM to the efficient computation of marginal queue-length probabilities, which finds application in the evaluation of state-dependent attributes such as quality-of-service metrics.
C1 Coll William & Mary, Dept Comp Sci, Williamsburg, VA 23187 USA.
C3 William & Mary
RP Casale, G (corresponding author), Coll William & Mary, Dept Comp Sci, 140 McGlothlin St Hall, Williamsburg, VA 23187 USA.
EM casale@cs.wm.edu
RI Casale, Giuliano/W-5595-2019
OI Casale, Giuliano/0000-0003-4548-7951
CR Barrett R, 1994, TEMPLATES SOLUTION L, DOI DOI 10.1137/1.9781611971538
   BASKETT F, 1975, J ACM, V22, P248, DOI 10.1145/321879.321887
   CASALE G, 2008, WMCS200804 COLL WILL
   CASALE G, EXACT ANAL PERFORMAN
   CASALE G, 2006, P JOINT ACM SIGMETRI, P169
   CHANDY KM, 1980, COMMUN ACM, V23, P573, DOI 10.1145/359015.359020
   CHU Y, 1997, 975 CITI U MICH
   Cohen D. I. A., 1978, Basic techniques of combinatorial theory
   CONWAY AE, 1986, J ACM, V33, P768, DOI 10.1145/6490.6495
   Elnozahy EN, 2003, LECT NOTES COMPUT SC, V2325, P179
   Harrison P. G., 2004, PROC IEEE MASCOTS, P223
   Harrison PG, 2002, PERFORM EVALUATION, V47, P131, DOI 10.1016/S0166-5316(01)00061-X
   Kounev S., 2003, Proceedings of the Computer Measurement Group's International Conference (CMG'03), P273
   LAM SS, 1982, J ACM, V29, P492, DOI 10.1145/322307.322321
   LAM SS, 1983, IEEE T COMPUT, V32, P1062, DOI 10.1109/TC.1983.1676157
   LAMACCHIA BA, 1991, LECT NOTES COMPUT SC, V537, P109
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   MENASCE D.A., 1998, CAPACITY PLANNING WE
   REISER M, 1975, IBM J RES DEV, V19, P283, DOI 10.1147/rd.193.0283
   REISER M, 1980, J ACM, V27, P313, DOI 10.1145/322186.322195
   SCHONHAGE A, 1971, COMPUTING, V7, P281, DOI 10.1007/BF02242355
   Urgaonkar B., 2005, SIGMETRICS Perform. Eval. Rev, V33, P291, DOI [10.1145/1071690.1064252, DOI 10.1145/1071690.1064252]
   VILLARD G, 2007, P INT S SYMB ALG COM, P391
   ZAHORJAN J, 1984, PERFORM EVALUATION, V4, P99, DOI 10.1016/0166-5316(84)90004-X
NR 24
TC 5
Z9 5
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2009
VL 35
IS 2
BP 162
EP 177
DI 10.1109/TSE.2008.79
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 424FT
UT WOS:000264551600003
DA 2024-07-18
ER

PT J
AU Mendes, E
   Mosley, N
AF Mendes, Emilia
   Mosley, Nile
TI Bayesian Network Models for Web Effort Prediction: A Comparative Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Web cost estimation; project management; software engineering; Web
   engineering
ID COST ESTIMATION
AB Objective. The objective of this paper is to compare, using a cross-company data set, several Bayesian Network (BN) models for Web effort estimation. Method. Eight BNs were built; four automatically using Hugin and PowerSoft tools with two training sets, each containing data on 130 Web projects from the Tukutuku database; four using a causal graph elicited by a domain expert, with parameters obtained by automatically fitting the graph to the same training sets used in the automated elicitation ( hybrid models). The accuracy of all eight models was measured using two validation sets, each containing data on 65 projects, and point estimates. As a benchmark, the BN-based estimates were also compared to estimates obtained using Manual Stepwise Regression (MSWR), Case-Based Reasoning (CBR), and mean and median-based effort models. Results. MSWR presented significantly better predictions than any of the BN models built herein and, in addition, was the only technique to provide significantly superior predictions to a median-based effort model. Two BN models, BNAuHu and BNHyHu, presented similar to, or significantly better accuracy than, the mean-based effort model and similar accuracy to the median-based effort model; however, both showed significantly worse accuracy than MSWR. The other two BN models showed worse accuracy than at least mean-based predictions. Conclusions. This paper investigated data-driven and hybrid BN models using project data from the Tukutuku database. Our results suggest that the use of simpler models, such as the median effort, can outperform more complex models, such as BNs. In addition, MSWR seemed to be the only effective technique for Web effort estimation.
C1 [Mendes, Emilia] Univ Auckland, Dept Comp Sci, Auckland 1, New Zealand.
   [Mosley, Nile] MetriQ Ltd, Auckland, New Zealand.
C3 University of Auckland
RP Mendes, E (corresponding author), Univ Auckland, Dept Comp Sci, Private Bag 92019, Auckland 1, New Zealand.
EM emilia@cs.auckland.ac.nz; nile@metriq.biz
RI Mendes, Maria E/B-4207-2015
OI Mendes, Emilia/0000-0003-0449-5322
FU Royal Society of New Zealand [UOA0611]
FX This work is supported by the Royal Society of New Zealand, under the
   Marsden Fund Research Grant UOA0611. The authors would like to thank the
   DE and the Web companies who volunteered data to the Tukutuku project,
   in particular A/Prof. F. Ferrucci. The authors would also like to thank
   A. Nicholson, K. Korb, their PhD students, and C. Pollino for early
   discussions in the use of BNs. Finally, the authors would like to thank
   the reviewers for their insightful comments and suggestions.
CR Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], P EASE
   [Anonymous], 2007, P 6 INT WORLD WID WE
   [Anonymous], P 7 INT SOFTW METR S
   Baresi L, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P62, DOI 10.1109/METRIC.2003.1232456
   Baresi L, 2002, WISE 2002: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS ENGINEERING, P345, DOI 10.1109/WISE.2002.1181670
   BIBI S, 2003, P 1 BALK C INF
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   Briand LC, 1998, PROC INT CONF SOFTW, P390, DOI 10.1109/ICSE.1998.671392
   Cheng J., 1997, P 6 INT C INF KNOWL
   CHRISTODOULOU SP, 2000, P 2 ICSE WORKSH WEB, P75
   COSTAGLIOLA G, 2006, P INT C WEB ENG ICWE, P9
   Druzdzel MJ, 1999, J AM MED INFORM ASSN, P1049
   Druzdzel MJ, 2000, IEEE T KNOWL DATA EN, V12, P481, DOI 10.1109/TKDE.2000.868901
   Fenton N, 2004, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE.2004.1317462
   Fenton N, 2002, IEEE SOFTWARE, V19, P116, DOI 10.1109/MS.2002.1020298
   FEWSTER R, 2001, P 7 INT SOFTW METR S, P338
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   Jensen FV, 1996, INTRO BAYESIAN NETWO
   Kitchenham B, 1998, IEEE T SOFTWARE ENG, V24, P278, DOI 10.1109/32.677185
   KITCHENHAM BA, 2001, IEE P SOFTWARE ENG, V148
   KNOBBE AJ, 2005, P 9 EUR C PRINC PRAC
   LAURITZEN SL, 1995, COMPUT STAT DATA AN, V19, P191, DOI 10.1016/0167-9473(93)E0056-A
   Lokan Chris., 2006, 2006 ACMIEEE INT S E, P75, DOI DOI 10.1145/1159733.1159747
   Mahoney SM, 1996, UNCERTAINTY IN ARTIFICIAL INTELLIGENCE, P389
   Mangia L, 2003, FOURTH INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS ENGINEERING, PROCEEDINGS, P53
   Mendes E, 2005, J SYST SOFTWARE, V77, P157, DOI 10.1016/j.jss.2004.08.034
   Mendes E, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P348, DOI 10.1109/METRIC.2004.1357920
   Mendes E., 2000, Proceedings 2000 Australian Software Engineering Conference, P203, DOI 10.1109/ASWEC.2000.844577
   Mendes E., 2002, IEE Proceedings-Software, V149, P86, DOI 10.1049/ip-sen:20020337
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   Mendes E, 2002, P INT COMP SOFTW APP, P393, DOI 10.1109/CMPSAC.2002.1045034
   Mendes E, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P79, DOI 10.1109/ISESE.2002.1166928
   Mendes E., 2001, IEEE Multimedia, V8, P50, DOI 10.1109/93.923953
   Mendes E., 2005, WEB ENG, P1
   MENDES E, 2007, P ACM IEEE INT S EMP, P334
   MENDES E, 2003, P 14 ACM C HYP HYP N, P173
   Mendes E., 2002, P IEEE METR S JUN OT, P141
   Mendes E, 2007, LECT NOTES COMPUT SC, V4607, P90
   Neil M, 2000, KNOWL ENG REV, V15, P257, DOI 10.1017/S0269888900003039
   Pearl J., 1988, PROBABILISTIC REASON
   Pendharkar PC, 2005, IEEE T SOFTWARE ENG, V31, P615, DOI 10.1109/TSE.2005.75
   Reifer D, 2002, IEEE SOFTWARE, V19, P12, DOI 10.1109/52.991324
   Reifer DJ, 2000, IEEE SOFTWARE, V17, P57, DOI 10.1109/52.895169
   Ruhe M, 2003, PROC INT CONF SOFTW, P285, DOI 10.1109/ICSE.2003.1201208
   Stamelos I, 2003, INFORM SOFTWARE TECH, V45, P51, DOI 10.1016/S0950-5849(02)00163-5
   Steck H., 1999, P 2 WORKSH DAT MIN D
   Woodberry O, 2004, LECT NOTES ARTIF INT, V3339, P1101
NR 49
TC 51
Z9 55
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2008
VL 34
IS 6
BP 723
EP 737
DI 10.1109/TSE.2008.64
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 376HR
UT WOS:000261175200001
DA 2024-07-18
ER

PT J
AU Dzidek, WJ
   Arisholm, E
   Briand, LC
AF Dzidek, Wojciech James
   Arisholm, Erik
   Briand, Lionel C.
TI A realistic empirical evaluation of the costs and benefits of UML in
   software maintenance
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE empirical software engineering; UML; modeling; object-oriented
   programming; software maintainability; quasiexperiment
AB The Unified Modeling Language (UML) is the de facto standard for object-oriented software analysis and design modeling. However, few empirical studies exist which investigate the costs and evaluate the benefits of using UML in realistic contexts. Such studies are needed so that the software industry can make informed decisions regarding the extent to which they should adopt UML in their development practices. This is the first controlled experiment that investigates the costs of maintaining and the benefits of using UML documentation during the maintenance and evolution of a real nontrivial system, using professional developers as subjects, working with a state-of-the-art UML tool during an extended period of time. The subjects in the control group had no UML documentation. In this experiment, the subjects in the UML group had, on average, a practically and statistically significant 54 percent increase in the functional correctness of changes (p = 0.03) and an insignificant 7 percent overall improvement in design quality (p = 0.22), though a much larger improvement was observed on the first change task ( 56 percent), at the expense of an insignificant 14 percent increase in development time caused by the overhead of updating the UML documentation (p = 0.35).
C1 Simula Res Lab, Dept Software Engn, N-1325 Lysaker, Norway.
   Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
C3 University of Oslo
RP Dzidek, WJ (corresponding author), Simula Res Lab, Dept Software Engn, POB 134, N-1325 Lysaker, Norway.
EM jamesdz@simula.no; erika@simula.no; briand@simula.no
CR Anda B, 2006, EMPIR SOFTW ENG, V11, P555, DOI 10.1007/s10664-006-9020-6
   [Anonymous], 2008, GUIDE ADV EMPIRICAL, DOI [10.1007/978-1-84800-044-5_14, DOI 10.1007/978-1-84800-044-5_14]
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Arisholm E, 2007, IEEE T SOFTWARE ENG, V33, P65, DOI 10.1109/TSE.2007.17
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   Beck K., 2000, PROGRAMMING EXPLAINE
   Binder R.V., 2000, AW OBJ TECHNOL S
   Bloch J., 2001, EFFECTIVE JAVA PROGR
   Brewer J., 1989, Multimethod Research: A Synthesis of Styles, DOI 10.1002/nur.4770140212
   Briand LC, 2006, IEEE T SOFTWARE ENG, V32, P642, DOI 10.1109/TSE.2006.96
   BROAD W, 1986, BETRAYERS TRUTH
   Bruegge B., 2009, OBJECT ORIENTED SOFT
   Cohen J., 1988, STAT POWER ANAL BEHA
   Collins Harry M., 1985, Changing order: Replication and induction in scientific practice
   CURTIS B, 1980, P IEEE, V68, P1144, DOI 10.1109/PROC.1980.11813
   Devore J., 1999, APPL STAT ENG SCI
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   FOWLER M, 2000, UML DISTILLED BRIEF
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   García LV, 2004, OIKOS, V105, P657, DOI 10.1111/j.0030-1299.2004.13046.x
   Glass R. L., 2002, FACTS FALLACIES SOFT
   Gosling J., 2000, The Java Language Specification
   HOLMES J, 2004, STRUTS COMPLETE REFE
   Holsti O., 1969, Content analysis for the social sciences and humanities
   HOVE SE, 2005, P 11 IEEE INT S SOFT
   HUXLEY TH, 1965, NEW TREASURY SCI
   *IBM, 2004, ECL
   *IBM, 2007, RAT SOFTW ARCH
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   KOFLER M, 2001, MYSQL
   McGibbon Thomas., 1996, SOFTWARE RELIABILITY
   Meyers Scott., 1997, EFFECTIVE C, V2nd
   *MICR, 2002, VIS
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Myers R.H., 2002, Generalized Linear Modelswith Applications in Engineering and the Sciences
   Popper K., 2005, The logic of scientific discovery
   POWELL TA, 2001, HTML COMPLETE REFERE
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   SHULL F, 2002, P 8 IEEE INT S SOFTW
   *SIM RES LAB, 2004, BESTWEB
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   *SUN MICR, 2003, JAVASERVER PAG 2 0 S
   *TEL, 2003, TAU
   Tian J., 2005, Software Quality Engineering: Testing, Quality Assurance, and Quantifiable Improvement
   Tilley S., 2003, Proceedings of the 21st Annual International Conference on Documentation, P184
   Tryggeseth E., 1997, Empirical Software Engineering, V2, P201, DOI 10.1023/A:1009778023863
   2004, BORLAND TOGETHER ECL
NR 49
TC 86
Z9 93
U1 1
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2008
VL 34
IS 3
BP 407
EP 432
DI 10.1109/TSE.2008.15
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 306CA
UT WOS:000256223600007
DA 2024-07-18
ER

PT J
AU Zhang, HY
AF Zhang, Hongyu
TI On the distribution of software faults
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software fault distribution; empirical research; replication
AB The Pareto principle is often used to describe how faults in large software systems are distributed over modules. A recent paper by Andersson and Runeson again confirmed the Pareto principle of fault distribution. In this paper, we show that the distribution of software faults can be more precisely described as the Weibull distribution.
C1 Tsinghua Univ, Sch Software, Beijing 100084, Peoples R China.
C3 Tsinghua University
RP Zhang, HY (corresponding author), Tsinghua Univ, Sch Software, Beijing 100084, Peoples R China.
EM hongyu@tsinghua.edu.cn
RI zhang, hongyu/ABC-3702-2021
OI zhang, hongyu/0000-0002-3063-9425
CR Andersson C, 2007, IEEE T SOFTWARE ENG, V33, P273, DOI 10.1109/TSE.2007.1005
   Cooper R.A., 1983, Data, Models, and Statistical Analysis
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Juran J.M., 1988, QUALITY CONTROL HDB, V4th, p26.1
   Keller Gerald., 1999, Statistics for Management and Economics, VFourth
   Ramakumar R., 1993, Engineering reliability: fundamentals and applications
   Zimmermann T., 2007, P ICSE 2007 WORK 3 I, DOI [10.1109/PROMISE.2007.10, DOI 10.1109/PROMISE.2007.10]
NR 7
TC 41
Z9 53
U1 1
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2008
VL 34
IS 2
BP 301
EP 302
DI 10.1109/TSE.2007.70771
PG 2
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 276SC
UT WOS:000254161500010
DA 2024-07-18
ER

PT J
AU Weimer, W
   Mishra, N
AF Weimer, Westley
   Mishra, Nina
TI Privately finding specifications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE specification techniques; software quality; learning; privacy
AB Buggy software is a,reality and automated techniques for discovering bugs are highly desirable. A specification describes the correct behavior of a program. For example, a file must eventually be closed once it has been opened. Specifications are learned by finding patterns in normal program execution traces versus erroneous ones. With,more traces, more specifications can be learned more accurately. By combining traces from multiple parties that possess distinct programs but use a common library, it is possible to obtain sufficiently many traces. However, obtaining traces from competing parties is problematic: By revealing traces, it may be possible to learn. that one party writes buggier code than another. We present an algorithm by which mutually distrusting parties can work together to learn,program specifications while preserving their privacy. We use a perturbation algorithm to obfuscate individual trace values while still allowing statistical trends to be mined from the data. Despite the noise introduced to safeguard privacy, empirical evidence suggests that our algorithm learns specifications that find 85 percent of the bugs that a no-privacy approach would find.
C1 [Weimer, Westley; Mishra, Nina] Univ Virginia, Dept Comp Sci, Charlottesville, VA 22903 USA.
C3 University of Virginia
RP Weimer, W (corresponding author), Univ Virginia, Dept Comp Sci, 151 Engn Way,POb 400740, Charlottesville, VA 22903 USA.
EM weimer@cs.virginia.edu; nmishra@cs.virginia.edu
CR AGGARWAL G, 2004, P 30 INT C VER LARG
   Alur R, 2005, ACM SIGPLAN NOTICES, V40, P98, DOI 10.1145/1047659.1040314
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   Andrews T, 2004, LECT NOTES COMPUT SC, V3170, P1
   [Anonymous], P ACM C
   [Anonymous], J AM STAT ASS
   [Anonymous], 10031 IEEE
   Artho C, 2006, LECT NOTES COMPUT SC, V4085, P412
   Ball T., 2006, P 1 EUR SYST C APR, P103
   Chen H, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE 11TH USENIX SECURITY SYMPOSIUM, P171
   CHEN H., 2004, P 11 ANN NETW DISTR
   Chou Andy., 2001, P 18 ACM S OPERATING, P73
   Chow J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE 13TH USENIX SECURITY SYMPOSIUM, P321
   CLARKE EM, 2000, COMPUTER AIDED VERIF, V1855, P154, DOI 10.1007/10722167_15
   Conway CL, 2005, LECT NOTES COMPUT SC, V3576, P449
   Corbett J. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P762, DOI 10.1109/ICSE.2000.870490
   Das M, 2002, ACM SIGPLAN NOTICES, V37, P57, DOI 10.1145/543552.512538
   Engler Dawson R., 2001, Proceedings of the 18th ACM Symposium on Operating Systems Principles, P57
   Flanagan C., 2001, FME 2001: Formal Methods for Increasing Software Productivity. International Symposium on Formal Methods Europe. Proceedings (Lecture Notes in Computer Science Vol.2021), P500
   FLANAGAN C, 2002, P ACM SIGPLAN 2002 C, P234
   Goldreich O., 2019, Providing Sound Foundations for Cryptography: On the Work of Shafi Goldwasser and Silvio Micali, P307, DOI DOI 10.1145/3335741.3335755
   Henzinger ThomasA., 2002, Proc. of the Symposium on Principles of Programming Languages. POPL, P58
   Hovemeyer David., 2004, ACM Conference on Object-Oriented Programming Systems, Lan-guages, and Applications, OOPSLA '04, P132
   Johnson M, 2004, MU S ART SOC SIM ORG, V13, P119
   Kupferman O, 2006, LECT NOTES COMPUT SC, V4218, P110
   LIBLIT B, 2003, P ACM SIGPLAN 2003 C, P141
   Livshits VB, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 14TH USENIX SECURITY SYMPOSIUM, P271
   MISHRA N, 2006, PODS, P143
   NIMMER JW, 2002, P 2002 INT S SOFTW T, P232
   PERRY E, 2002, ORACLE92 JDBC DEV GU
   RAMAN A, 1997, P 14 INT C MACH LEAR
   Ringenburg M.F., 2005, C COMPUTER COMMUNICA, P354, DOI DOI 10.1145/1102120.1102166
   SHAMIR A, 1979, COMMUN ACM, V22, P612, DOI 10.1145/359168.359176
   Shankar U, 2001, USENIX ASSOCIATION PROCEEDINGS OF THE 10TH USENIX SECURITY SYMPOSIUM, P201
   Taghdiri M, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/ASE.2004.1342732
   Vasudevan P, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P289, DOI 10.1109/SERA.2006.25
   Weimer W, 2005, LECT NOTES COMPUT SC, V3440, P461
   WEIMER W, 2004, OOPSLA 04, P419
   Whaley J., 2002, Software Engineering Notes, V27, P221, DOI 10.1145/566171.566212
   Yao A. C., 1986, 27th Annual Symposium on Foundations of Computer Science (Cat. No.86CH2354-9), P162, DOI 10.1109/SFCS.1986.25
NR 40
TC 3
Z9 4
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2008
VL 34
IS 1
BP 21
EP 32
DI 10.1109/TSE.2007.70744
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 265QH
UT WOS:000253375500003
DA 2024-07-18
ER

PT J
AU Wilson, SP
   Samaniego, FJ
AF Wilson, Simon P.
   Samaniego, Francisco J.
TI Nonparametric analysis of the order-statistic model in software
   reliability
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Beta-Stacy process; order statistics; reliability; testing strategies;
   nonparametric statistics; survival analysis
ID INFERENCE; GROWTH
AB In the literature on statistical inference in software reliability, the assumptions of parametric models and random sampling of bugs have been pervasive. We argue that both assumptions are problematic, the first because of robustness concerns and the second due to logical and practical difficulties. These considerations motivate the approach taken in this paper. We propose a nonparametric software reliability model based on the order-statistic paradigm. The objective of the work is to estimate, from data on discovery times observed within a type I censoring framework, both the underlying distribution F from which discovery times are generated and N, the unknown number of bugs in the software. The estimates are used to predict the next time to failure. The approach makes use of Bayesian nonparametric inference methods, in particular, the beta-Stacy process. The proposed methodology is illustrated on both real and simulated data.
C1 Univ Dublin Trinity Coll, Dept Stat, Dublin 2, Ireland.
   Univ Calif Davis, Dept Stat, Davis, CA 95616 USA.
C3 Trinity College Dublin; University of California System; University of
   California Davis
RP Wilson, SP (corresponding author), Univ Dublin Trinity Coll, Dept Stat, Dublin 2, Ireland.
EM simon.wilson@tcd.ie; fjsamaniego@ucdavis.edu
OI Wilson, Simon/0000-0003-0312-3586
CR [Anonymous], J ROYAL STAT SOC C
   Barghout M., 1998, Software Testing, Verification and Reliability, V8, P113, DOI 10.1002/(SICI)1099-1689(1998090)8:3<113::AID-STVR159>3.0.CO;2-8
   BUNGE J, 1993, J AM STAT ASSOC, V88, P364, DOI 10.2307/2290733
   CAMPBELL G, 1979, NUCL SCI ENG, V71, P267, DOI 10.13182/NSE79-A19063
   CAMPODONICO S, 1995, J AM STAT ASSOC, V90, P220, DOI 10.2307/2291146
   David H. A., 2004, ORDER STAT
   ElAroui MA, 1996, IEEE T RELIAB, V45, P652, DOI 10.1109/24.556589
   FERGUSON TS, 1973, ANN STAT, V1, P209, DOI 10.1214/aos/1176342360
   Gelman A., 1995, BAYESIAN DATA ANAL, DOI DOI 10.1201/9780429258411
   Jelinski Z., 1972, STAT COMPUTER PERFOR
   JOE H, 1989, IEEE T SOFTWARE ENG, V15, P1485, DOI 10.1109/32.41340
   LAWLESS JF, 1995, TECHNOMETRICS, V37, P158, DOI 10.2307/1269617
   LITTLEWOOD B, 1981, IEEE T RELIAB, V30, P145, DOI 10.1109/TR.1981.5221009
   MAZZUCHI TA, 1988, IEEE T RELIAB, V37, P248, DOI 10.1109/24.3749
   MILLER DR, 1986, IEEE T SOFTWARE ENG, V12, P12, DOI 10.1109/TSE.1986.6312915
   NAGEL PM, 1984, 172378 NASA LANGL RE
   RAFTERY AE, 1987, J AM STAT ASSOC, V82, P1163, DOI 10.2307/2289395
   RODRIGUEZ MT, 2001, SAFETY RELIABILITY S, P1999
   Samaniego F. J., 2005, 0501 TRIN COLL DEP S
   SOFER A, 1991, IEEE T RELIAB, V40, P329, DOI 10.1109/24.85453
   Walker S, 1997, ANN STAT, V25, P1762
   Walker S, 1998, SCAND J STAT, V25, P669, DOI 10.1111/1467-9469.00128
   Walker SG, 1999, J R STAT SOC B, V61, P485, DOI 10.1111/1467-9868.00190
NR 23
TC 14
Z9 15
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2007
VL 33
IS 3
BP 198
EP 208
DI 10.1109/TSE.2007.27
PG 11
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 130GN
UT WOS:000243788000005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yilmaz, C
   Porter, A
   Krishna, AS
   Memon, AM
   Schmidt, DC
   Gokhale, AS
   Natarajan, B
AF Yilmaz, Cemal
   Porter, Adam
   Krishna, Arvind S.
   Memon, Atif M.
   Schmidt, Douglas C.
   Gokhale, Aniruddha S.
   Natarajan, Balachandran
TI Reliable effects screening: A distributed continuous quality assurance
   process for monitoring performance degradation in evolving software
   systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE distributed continuous quality assurance; performance-oriented
   regression testing; design-of-experiments theory
ID DESIGN
AB Developers of highly configurable performance-intensive software systems often use in-house performance-oriented "regression testing" to ensure that their modifications do not adversely affect their software's performance across its large configuration space. Unfortunately, time and resource constraints can limit in-house testing to a relatively small number of possible configurations, followed by unreliable extrapolation from these results to the entire configuration space. As a result, many performance bottlenecks escape detection until systems are fielded. In our earlier work, we improved the situation outlined above by developing an initial quality assurance process called "main effects screening." This process 1) executes formally designed experiments to identify an appropriate subset of configurations on which to base the performance-oriented regression testing, 2) executes benchmarks on this subset whenever the software changes, and 3) provides tool support for executing these actions on in-the-field and in-house computing resources. Our initial process had several limitations, however, since it was manually configured (which was tedious and error-prone) and relied on strong and untested assumptions for its accuracy (which made its use unacceptably risky in practice). This paper presents a new quality assurance process called "reliable effects screening" that provides three significant improvements to our earlier work. First, it allows developers to economically verify key assumptions during process execution. Second, it integrates several model-driven engineering tools to make process configuration and execution much easier and less error prone. Third, we evaluate this process via several feasibility studies of three large, widely used performance-intensive software frameworks. Our results indicate that reliable effects screening can detect performance degradation in large-scale systems more reliably and with significantly less resources than conventional techniques.
C1 IBM TJ Watson Res Ctr, Hawthorne, NY 10532 USA.
   Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
   Vanderbilt Univ, Dept Elect Engn & Comp Sci, Nashville, TN 37325 USA.
   Symantec, Pune 411020, Maharashtra, India.
C3 International Business Machines (IBM); University System of Maryland;
   University of Maryland College Park; Vanderbilt University; Symantec
RP Yilmaz, C (corresponding author), IBM TJ Watson Res Ctr, 19 Skyline Dr, Hawthorne, NY 10532 USA.
EM cyilmaz@us.ibm.com; aporter@cs.umd.edu; arvindkr@qualcomm.com;
   atif@cs.umd.edu; schmidt@dre.vanderbilt.edu; a.gokhale@vanderbilt.edu;
   bala_natrajan@symantec.com
OI Yilmaz, Cemal/0000-0003-4124-2295; Gokhale,
   Aniruddha/0000-0002-7706-7102
CR [Anonymous], SIGCOMM COMPUTER COM
   Balasubramanian K, 2006, COMPUTER, V39, P33, DOI 10.1109/MC.2006.54
   Box G.E., 1978, Statistics for Experimenters, V664
   Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   BROWNLIE R, 1992, AT&T TECH J, V71, P41, DOI 10.1002/j.1538-7305.1992.tb00164.x
   Burr K., 1998, P INT C SOFTW TEST A
   CHILDERS B, 2003, P INT PAR DISTR PROC
   Dalal S. R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P285, DOI 10.1109/ICSE.1999.841019
   Dunietz IS, 1997, PROC INT CONF SOFTW, P205, DOI 10.1145/253228.253271
   GRUNDY J, 2001, P 16 INT C AUT SOFTW
   KOLARIK W, 1995, CREATING QUALITY SYS
   KRISHNA AS, 2004, P 8 INT C SOFTW REUS
   KRISHNA AS, 2005, P MODELS WORKSH MDD
   KRISHNA AS, 2004, P 10 REAL TIM TECHN
   Kuhn D.R., 2002, Proceedings of 27th Annual NASA Goddard Software Engineering Workshop, 2002, P91, DOI DOI 10.1109/SEW.2002.1199454
   Lédeczi A, 2001, COMPUTER, V34, P44, DOI 10.1109/2.963443
   LIU Y, 2002, P 40 INT C TECHN OBJ
   Lu CY, 2002, REAL-TIME SYST, V23, P85, DOI 10.1023/A:1015398403337
   MANDL R, 1985, COMMUN ACM, V28, P1054, DOI 10.1145/4372.4375
   Memon A., 2004, P 26 IEEE ACM INT C
   Memon AM, 2001, IEEE T SOFTWARE ENG, V27, P144, DOI 10.1109/32.908959
   MITCHELL TJ, 1974, TECHNOMETRICS, V16, P203, DOI 10.2307/1267940
   Montgomery DC., 1996, INTRO STAT QUALITY C, V3rd
   Schmidt D., 2000, Pattern-Oriented Software Architecture, Patterns for Concurrent and Networked Objects, V2
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Tukey J.W., 1977, EXPLORATORY DATA ANA, V2
   TURKAY E, 2004, P 42 ANN SE C APR
   White B, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P255, DOI 10.1145/1060289.1060313
   Wu C F J., 2011, Experiments: Planning, Analysis, and Optimization
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Yilmaz C, 2005, PROC INT CONF SOFTW, P293
   YILMAZ C, 2004, P INT S SOFTW TEST A, P45
   YOTOV K., 2003, P ACM SIGPLAN C PROG
   ZHANG R, 2002, P INT C DISTR SYST J
NR 34
TC 7
Z9 11
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2007
VL 33
IS 2
BP 124
EP 141
DI 10.1109/TSE.2007.20
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 120MX
UT WOS:000243090100004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Krishnamurthy, D
   Rolia, JA
   Majumdar, S
AF Krishnamurthy, Diwakar
   Rolia, Jerome A.
   Majumdar, Shikharesh
TI A synthetic workload generation technique for stress testing
   session-based systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE performance of systems; measurement techniques; modeling techniques;
   software engineering; testing tools; Internet applications; electronic
   commerce; Web servers
AB Enterprise applications are often business critical but lack effective synthetic workload generation techniques to evaluate performance. These workloads are characterized by sessions of interdependent requests that often cause and exploit dynamically generated responses. Interrequest dependencies must be reflected in synthetic workloads for these systems to exercise application functions correctly. This poses significant challenges for automating the construction of representative synthetic workloads and manipulating workload characteristics for sensitivity analyses. This paper presents a technique to overcome these problems. Given request logs for a system under study, the technique automatically creates a synthetic workload that has specified characteristics and maintains the correct interrequest dependencies. The technique is demonstrated through a case study involving a TPC-W e-commerce system. Results show that incorrect performance results can be obtained by neglecting interrequest dependencies, thereby highlighting the value of our technique. The study also exploits our technique to investigate the impact of several workload characteristics on system performance. Results establish that high variability in the distributions of session length, session idle times, and request service times can cause increased contention among sessions, leading to poor system responsiveness. To the best of our knowledge, these are the first results of this kind for a session-based system. We believe our technique is of value for studies where fine control over workload is essential.
C1 Univ Calgary, Dept Elect & Comp Engn, Calgary, AB T2N 1N4, Canada.
   Hewlett Packard Labs, Enterprise Software & Syst Lab, Palo Alto, CA 94304 USA.
   Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
C3 University of Calgary; Hewlett-Packard; Carleton University
RP Krishnamurthy, D (corresponding author), Univ Calgary, Dept Elect & Comp Engn, 2500 Univ Dr NW, Calgary, AB T2N 1N4, Canada.
EM dkrishna@ucalgary.ca; jerry.rolia@hp.com; majumdar@sce.carleton.ca
CR [Anonymous], P INT C MEAS MOD COM
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   [Anonymous], 1997, LINEAR ALGEBRA
   Arlitt M., 2001, ACM T INTERNET TECHN, V1, P44
   Barford P., 1998, Performance Evaluation Review, V26, P151, DOI 10.1145/277858.277897
   BERAN J, 1995, IEEE T COMMUN, V43, P1566, DOI 10.1109/26.380206
   Crovella ME, 1997, IEEE ACM T NETWORK, V5, P835, DOI 10.1109/90.650143
   Ferrari D., 1984, Performance Evaluation Review, V12, P8, DOI 10.1145/1031382.809309
   GONG W, 2001, P 39 ALL C COMM CONT
   KANT K, 2001, P WORKSH COMP ARCH E
   KELLY T, 2005, P WORKSH REAL LARG D, P43
   KRISHNAMURTHY D, 2004, THESIS CARLETON U OT
   KRISHNAMURTHY D, 2001, 11 GI ITG C MEAS MOD, P225
   Krishnamurthy D., 2003, P COMP MEAS GROUP C, P639
   Mahanti A, 2000, PERFORM EVALUATION, V42, P187, DOI 10.1016/S0166-5316(00)00032-8
   Menasce D., 2000, Proceedings of the 2nd ACM Conference on Electronic Commerce, P56
   MENASCE DA, 1999, P 1 ACM C EL COMM, P119
   Mosberger D., 1998, P WORKSH INT SERV PE
   Park K, 1996, 1996 INTERNATIONAL CONFERENCE ON NETWORK PROTOCOLS, PROCEEDINGS, P171, DOI 10.1109/ICNP.1996.564935
   PAXSON V, 1995, IEEE ACM T NETWORK, V3, P226, DOI 10.1109/90.392383
   Ranjan S, 2002, INT WORKSH QUAL SERV, P3, DOI 10.1109/IWQoS.2002.1006569
   Trivedi KishorS., 2002, PROBABILITY STAT REL, V2nd
   Vallamsetty U., 2003, Electronic Commerce Research, V3, P167, DOI 10.1023/A:1021585529079
   Willinger W, 1997, IEEE ACM T NETWORK, V5, P71, DOI 10.1109/90.554723
   2006, SILK PERFORMER
   2006, TPC W WEB COMMERCE B
   LOAD RUNNER
NR 27
TC 58
Z9 68
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2006
VL 32
IS 11
BP 868
EP 882
DI 10.1109/TSE.2006.106
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 101EE
UT WOS:000241720900002
DA 2024-07-18
ER

PT J
AU Lei, Y
   Carver, RH
AF Lei, Yu
   Carver, Richard H.
TI Reachability testing of concurrent programs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software testing; reachability testing; concurrent programming
ID ALGORITHM
AB One approach to testing concurrent programs, called reachability testing, generates synchronization sequences automatically and on-the-fly, without constructing any static models. In this paper, we present a general execution model for concurrent programs that allows reachability testing to be applied to several commonly used synchronization constructs. We also present a new method for performing reachability testing. This new method guarantees that every partially ordered synchronization sequence will be exercised exactly once without having to save any sequences that have already been exercised. We describe a prototype reachability testing tool called Rich Test and report some empirical results, including a comparison between Rich Test and a partial order reduction-based tool called VeriSoft. Rich Test performed significantly better for the programs in our study.
C1 Univ Texas, Dept Comp Sci & Engn, Arlington, TX 76019 USA.
   George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
C3 University of Texas System; University of Texas Arlington; George Mason
   University
RP Lei, Y (corresponding author), Univ Texas, Dept Comp Sci & Engn, Arlington, TX 76019 USA.
EM ylei@cse.uta.edu; rcarver@cs.gmu.edu
RI Lei, Yu/IAN-0544-2023; Lei, Yuhong/JAX-7675-2023; Lei, YU/HJZ-0213-2023
CR Andrews G.R., 2000, Foundations of Multithreaded, Parallel, and Distributed Programming
   [Anonymous], P 28 COMP SOFTW APPL
   [Anonymous], P INT C FORM ENG MET
   [Anonymous], 2005, I KPAI
   Bechini A, 1998, INT CON DISTR COMP S, P266, DOI 10.1109/ICDCS.1998.679522
   BERNSTEIN AJ, 1966, IEEE TRANS ELECTRON, VEC15, P757, DOI 10.1109/PGEC.1966.264565
   BRUENING D, 1999, THESIS MIT
   Carver RH, 2006, MODERN MULTITHREADING: IMPLEMENTING, TESTING, AND DEBUGGING MULTITHREADED JAVA AND C++/PTHREADS/WIN32 PROGRAMS, P1
   Carver RH, 1998, IEEE T SOFTWARE ENG, V24, P471, DOI 10.1109/32.689403
   CARVER RH, 1991, IEEE SOFTWARE, V8, P66, DOI 10.1109/52.73751
   Edelstein O, 2002, IBM SYST J, V41, P111, DOI 10.1147/sj.411.0111
   FIDGE C, 1991, COMPUTER, V24, P28, DOI 10.1109/2.84874
   Godefroid P, 2005, FORM METHOD SYST DES, V26, P77, DOI 10.1007/s10703-005-1489-x
   Havelund K., 2000, International Journal on Software Tools for Technology Transfer (STTT), V2, P366, DOI [10.1007/s100090050043., DOI 10.1007/S100090050043]
   Hwang GH, 1995, INT J SOFTW ENG KNOW, V5, P493, DOI 10.1142/S0218194095000241
   KATZ S, 1992, THEOR COMPUT SCI, V101, P337, DOI 10.1016/0304-3975(92)90054-J
   Koppol PV, 2002, IEEE T SOFTWARE ENG, V28, P607, DOI 10.1109/TSE.2002.1010062
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   Lei Y, 2002, IEEE INT C ENG COMP, P35, DOI 10.1109/ICECCS.2002.1181496
   Lei Y, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P346
   Mattern F., 1989, Parallel and Distributed Algorithms. Proceedings of the International Workshop, P215
   NETZER RHB, 1993, P ACM ONR WORKSH PAR, P1
   RICART G, 1981, COMMUN ACM, V24, P9, DOI 10.1145/358527.358537
   SAVAGE S, 1998, IEEE T COMPUTER SYST, V15, P391
   STOLLER SD, 2002, P 2 WORKSH RUNT VERF
   TAI KC, 1991, IEEE T SOFTWARE ENG, V17, P45, DOI 10.1109/32.67578
   Tai KC, 1997, INT CON DISTR COMP S, P261, DOI 10.1109/ICDCS.1997.598047
   Tai KC, 1997, SECOND INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR PARALLEL AND DISTRIBUTED SYSTEMS, PROCEEDINGS, P50, DOI 10.1109/PDSE.1997.596826
   TAI KC, 1996, HDB PARALLEL DISTRIB, P955
   TAYLOR RN, 1992, IEEE T SOFTWARE ENG, V18, P206, DOI 10.1109/32.126769
   TAYLOR RN, 1983, COMMUN ACM, V26, P362, DOI 10.1145/69586.69587
   Ulrich A., 1997, Formal Description Techniques and Protocol Specification, Testing and Verification. FORTE X/PSTV XVII'97. IFIP TC6 WG6.1 Joint International Conference on Formal Description Techniques for Distributed Systems and Communication Protocols (FORTE X) and Protocol Specification, Testing and Verification (PSTV XVII), P7
   YANG C, 1998, P INT S SOFTW TEST A, P153
   YANG RD, 1992, INFORM SOFTWARE TECH, V34, P43, DOI 10.1016/0950-5849(92)90093-5
   1983, ADA LANGUAGE REFEREN
NR 35
TC 52
Z9 65
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2006
VL 32
IS 6
BP 382
EP 403
DI 10.1109/TSE.2006.56
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 055VP
UT WOS:000238479000003
DA 2024-07-18
ER

PT J
AU Costagliola, G
   Deufemia, V
   Ferrucci, F
   Gravino, C
AF Costagliola, G
   Deufemia, V
   Ferrucci, F
   Gravino, C
TI Constructing meta-CASE workbenches by exploiting visual language
   generators
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE meta-CASE tools; metamodeling techniques; visual languages; visual
   programming environment generators
ID SPECIFICATION
AB In this paper, we propose an approach for the construction of meta-CASE workbenches, which suitably integrates the technology of visual language generation systems, UML metamodeling, and interoperability techniques based on the GXL (Graph eXchange Language) format. The proposed system consists of two major components. Environments for single visual languages are generated by using the Modeling Language Environment Generator (MEG), which follows a metamodel/grammar-approach. The abstract syntax of a visual language is defined by UML class diagrams, which serve as a base for the grammar specification of the language. The Workbench Generator (WoG) allows designers to specify the target workbench by means of a process model given in terms of a suitable activity diagram. Starting from the supplied specification WoG generates the customized workbench by integrating the required environments.
C1 Univ Salerno, Dipartimento Matemat & Informat, I-84084 Fisciano, SA, Italy.
C3 University of Salerno
RP Univ Salerno, Dipartimento Matemat & Informat, I-84084 Fisciano, SA, Italy.
EM gcostagliola@unisa.it; deufemia@unisa.it; fferrucci@unisa.it;
   gravino@unisa.it
RI Deufemia, Vincenzo/M-3553-2016; Jaafar, Mohamad Farid/B-4563-2010;
   Ferrucci, Filomena/AAG-6799-2020; Costagliola, Gennaro/GLV-1530-2022
OI Deufemia, Vincenzo/0000-0002-6711-3590; Ferrucci,
   Filomena/0000-0002-0975-8972; Costagliola, Gennaro/0000-0003-3816-7765;
   Gravino, Carmine/0000-0002-4394-9035
CR [Anonymous], 2000, RATIONAL UNIFIED PRO
   [Anonymous], 1985, Compilers principles, techniques, and tools
   ASTESIANO E, 2003, P WORKSH CONS PROBL, V2
   BALDI M, 1994, SOFTWARE PROCESS MOD, P279
   Bandinelli Sergio., 1994, software process modelling and technology
   Bardohl R, 2002, SCI COMPUT PROGRAM, V44, P181, DOI 10.1016/S0167-6423(02)00038-2
   BARGHOUTI NS, 1992, P 5 ACM SIGSOFT S SO, P21
   BENSHAUL IZ, 1994, PROC INT CONF SOFTW, P179, DOI 10.1109/ICSE.1994.296777
   Bottoni P, 1999, ACM T PROGR LANG SYS, V21, P1077, DOI 10.1145/330643.330644
   BOTTONI P, 2002, P 2 INT C THEOR APPL, P305
   BOTTONI P, 2001, P 4 INT C UN MOD LAN
   Bruegge B., 2009, OBJECT ORIENTED SOFT
   Chok S. S., 2003, ACM Transactions on Computer-Human Interaction, V10, P244, DOI 10.1145/937549.937553
   Conallen J., 1999, BUILDING WEB APPL UM
   Costagliola G, 2004, ACM T SOFTW ENG METH, V13, P431, DOI 10.1145/1040291.1040293
   Costagliola G, 1997, IEEE T SOFTWARE ENG, V23, P777, DOI 10.1109/32.637392
   Costagliola G, 2002, IEEE 2002 SYMPOSIA ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P131, DOI 10.1109/HCC.2002.1046365
   Costagliola G, 2002, P 14 INT C SOFTW ENG, P201, DOI [10.1145/568760.568795, DOI 10.1145/568760.568795]
   CRUELLAS JC, 2002, BUSINESS COMPONENT B, V705, P101
   de Lara J., 2002, ICEIS 2002. Proceedings of the Fourth International Conference on Enterprise Information Systems, P642
   DERNIAME JC, 1999, LECT NOTES COMPUTER, V1500
   DUI D, 2003, OBJECTS COMPONENTS A
   EBERT J, 1995, GRAPHTHEORETIC CONCE
   EBERT J, 1997, P 9 C ADV INF SYST E
   Emmerich W., 1997, Theory and Practice of Object Systems, V3, P213, DOI 10.1002/(SICI)1096-9942(1997)3:3<213::AID-TAPO3>3.0.CO;2-U
   FERGUSON RI, 2000, P 1 INT C THEORY APP
   FERGUSON RI, 1993, 933 U SOUND
   Ferrucci F, 2001, IEEE SYMPOSIA ON HUMAN-CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P382, DOI 10.1109/HCC.2001.995295
   FERRUCCI F, 2001, ENCY SOFTWARE ENG
   FINDEISEN P, 1994, METAVIEW SYSTEM
   FUGGETTA A, 1993, COMPUTER, V26, P25, DOI 10.1109/2.247645
   GRUNDY J, 2001, ENCY SOFTWARE ENG
   HARRISON W, 2000, FUTURE SOFTWARE  JUN
   Helm R., 1990, Proceedings of the 1990 IEEE Workshop on Visual Languages (Cat. No.90TH0330-1), P98, DOI 10.1109/WVL.1990.128389
   Holt RC, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P162, DOI 10.1109/WCRE.2000.891463
   ILVARI J, 1996, COMMUN ACM, V39, P94
   JACKSON S, 2000, P INT C SOFTW ENG JU, P730
   Jarzabek S, 1998, COMMUN ACM, V41, P93, DOI 10.1145/280324.280338
   Johnson S.C., 1978, YACC YET ANOTHER COM
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Kuzniarz L., 2002, 200206 BLEK I TECHN
   Kuzniarz L., 2003, 200306 BLEK I TECHN
   Liu Nan, 2002, Journal of Biomedicine & Biotechnology, V2, P106, DOI 10.1155/S1110724302204040
   Machado RJ, 2005, 12th IEEE International Conference and Workshops on the Engineering of Computer-Based Systems, Proceedings, P173, DOI 10.1109/ECBS.2005.73
   MANGAN P, 2002, P 13 AUSTR DAT C ADC, P103
   Marriott K., 1998, VISUAL LANGUAGE THEO
   Medina-Mores R., 1992, Proceedings of the 1992 ACM Conference on Computer-Supported Cooperative Work, P281, DOI DOI 10.1145/143457.143530
   *METACASE CONS, 2001, MET
   MEYERS S, 1991, IEEE SOFTWARE, V8, P49, DOI 10.1109/52.62932
   Minas M, 2002, SCI COMPUT PROGRAM, V44, P157, DOI 10.1016/S0167-6423(02)00037-0
   Najork M. A., 1993, Proceedings 1993 IEEE Symposium on Visual Languages (Cat. No.93TH0562-9), P12, DOI 10.1109/VL.1993.269567
   Nentwich C., 2002, ACM T INTERNET TECHN, V2, P151, DOI [10.1145/514183.514186, DOI 10.1145/514183.514186]
   *OMG, 2005, XML MET INT XMI SPEC
   *OMG, 2005, OBJ CONSTR LANG SPEC
   *OMG, 2005, SOFTW PROC ENG MET S
   RIBO JM, 2001, SOFTWARE PROCESS TEC
   Rumbaugh James, 1999, The unified modeling language reference manual
   SCHUERR A, 1995, P 5 EUR SOFTW ENG C
   SORENSON PG, 1988, IEEE SOFTWARE, V5, P30, DOI 10.1109/52.2008
   SOURROUILLE JL, 2002, P 14 INT C SOFTW ENG, P217
   SPIVEY JM, 2001, INT SERIES COMPUTER
   SWENSON KD, 1994, J COLLABORATIVE COMP, V1, P15
   Uskudarli S. M., 1995, Proceedings. 11th IEEE International Symposium on Visual Languages (Cat. No.95TB8105), P234, DOI 10.1109/VL.1995.520814
   Whittle J., 2005, Software and Systems Modeling, P71, DOI DOI 10.1007/S10270-004-0067-9
   WINTER A, 2001, P 9 INT S GRAPH DRAW, P485
   WINTER A, 2002, SOFTWARE VISUALIZATI
   *XSL, 2001, EXT STYL LANG XSL VE
   Zhang K, 2001, IEEE T SOFTWARE ENG, V27, P289, DOI 10.1109/32.917521
NR 68
TC 10
Z9 12
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2006
VL 32
IS 3
BP 156
EP 175
DI 10.1109/TSE.2006.23
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 033LC
UT WOS:000236848300002
DA 2024-07-18
ER

PT J
AU Xing, ZC
   Stroulia, E
AF Xing, ZC
   Stroulia, E
TI Analyzing the evolutionary history of the logical design of
   object-oriented software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 20th IEEE International Conference on Software Maintenance (ICSM 2004)
CY SEP 11-14, 2004
CL Chicago, IL
SP IEEE Comp Soc
DE restructuring; reverse engineering; reengineering
ID SEQUENCE
AB Today, most object-oriented software systems are developed using an evolutionary process model. Therefore, understanding the phases that the system's logical design has gone through and the style of their evolution can provide valuable insights in support of consistently maintaining and evolving the system, without compromising the integrity and stability of its architecture. In this paper, we present a method for analyzing the evolution of object-oriented software systems from the point of view of their logical design. This method relies on UMLDiff, a UML-structure differencing algorithm, which, given a sequence of UML class models corresponding to the logical design of a sequence of system code releases, produces a sequence of "change records" that describe the design-level changes between subsequent system releases. This change-records sequence is subsequently analyzed from the perspective of each individual system class, to produce the class-evolution profile, i.e., a class-specific change-records' sequence. Three types of longitudinal analyses - phasic, gamma, and optimal matching analysis - are applied to the class-evolution profiles to recover a high-level abstraction of distinct evolutionary phases and their corresponding styles and to identify class clusters with similar evolution trajectories. The recovered knowledge facilitates the overall understanding of system evolution and the planning of future maintenance activities. We report on one real-world case study evaluating our approach.
C1 Univ Alberta, Dept Comp Sci, Edmonton, AB T6G 2E1, Canada.
C3 University of Alberta
RP Univ Alberta, Dept Comp Sci, Edmonton, AB T6G 2E1, Canada.
EM xing@cs.ualberta.ca; stroulia@cs.ualberta.ca
RI Stroulia, Eleni/H-6518-2018
OI Stroulia, Eleni/0000-0002-8784-8236
CR ABBOTT A, 1990, AM J SOCIOL, V96, P144, DOI 10.1086/229495
   [Anonymous], 2003, OMG UNIFIED MODELING
   BARNARD D, 1995, 95375 QUEENS U
   Barry EJ, 2003, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2003.1201192
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   Demeyer S, 2000, ACM SIGPLAN NOTICES, V35, P166, DOI 10.1145/354222.353183
   EGYED A, 2001, P 16 IEEE INT C AUT
   Eick SG, 2002, IEEE T SOFTWARE ENG, V28, P396, DOI 10.1109/TSE.2002.995435
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   GALL H, 1998, P 14 INT C SOFTW MAI
   German D.M., 2004, P 16 INT C SOFTWARE, P336
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   GODFREY MW, 2000, P 16 INT C SOFTW MAI
   Gosling J., 2005, Java Language Specification, Vthird
   Hassan AE, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P123, DOI 10.1109/WCRE.2003.1287243
   Holmes M.E., 1991, STUDYING INTERPERSON, P286
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   LANZA M, 2001, P INT WORKSH PRINC S
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   PELZ DC, 1985, KNOWLEDGE, V6, P261, DOI 10.1177/107554708500600304
   RYDER BG, 2001, P WORKSH PROGRAM AN
   SABHERWAL R, 1993, ORGAN SCI, V4, P548, DOI 10.1287/orsc.4.4.548
   Selonen P., 2003, Journal of Database Management, V14, P37, DOI 10.4018/jdm.2003070103
   Shirabad JS, 2001, PROC IEEE INT CONF S, P22, DOI 10.1109/ICSM.2001.972708
   SIMON K, 1986, THEORETICAL COMPUTER, V58, P376
   Stroulia E, 2001, OOIS 2001: 7TH INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED INFORMATION SYSTEMS, PROCEEDINGS, P113
   Tu Q, 2002, PROG COMPREHEN, P127, DOI 10.1109/WPC.2002.1021334
   Van Rysselberghe F, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P126, DOI 10.1109/IWPSE.2003.1231219
   WAGNER RA, 1974, J ACM, V21, P168, DOI 10.1145/321796.321811
   Xing Z., 2004, P 16 INT C SOFTW ENG
   XING Z, 2004, P 12 INT WORKSH PROG
   XING Z, 2004, P OOPSLA ETX WORKSH
   XING Z, 2005, P 21 INT C SOFTW MAI
   Xing ZC, 2004, PROC IEEE INT CONF S, P242
   ZIMMERMANN T, 2003, P INT WORKSH PRINC S
NR 36
TC 42
Z9 49
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2005
VL 31
IS 10
BP 850
EP 868
DI 10.1109/TSE.2005.106
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 980JR
UT WOS:000233015300005
DA 2024-07-18
ER

PT J
AU Wang, DF
   Bastani, FB
   Yen, IL
AF Wang, DF
   Bastani, FB
   Yen, IL
TI Automated aspect-oriented decomposition of process-control systems for
   ultra-high dependability assurance
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software decomposition; dependability assurance; process-control
   systems; aspect-oriented modeling
ID MODEL CHECKING
AB This paper presents a method for decomposing process-control systems. This decomposition method is automated, meaning that a series of principles that can be evolved to support automated tools are given to help a designer decompose complex systems into a collection of simpler components. Each component resulting from the decomposition process can be designed and implemented independently of the other components. Also, these components can be tested or verified by the end-user independently of each other. Moreover, the system properties, such as safety, stability, and reliability, can be mathematically inferred from the properties of the individual components. These components are referred to as IDEAL ( Independently Developable End-user Assessable Logical) components. This decomposition method is applied to a case study specified by the High-Integrity Systems group at Sandia National Labs, which involves the control of a future version of the Bay Area Rapid Transit ( BART) system.
C1 Univ Texas, Dept Comp Sci, Richardson, TX 75083 USA.
C3 University of Texas System; University of Texas Dallas
RP Univ Texas, Dept Comp Sci, POB 830688,EC 31, Richardson, TX 75083 USA.
EM dongfeng.wang@student.utdallas.edu; bastani@utdallas.edu;
   ilyen@utdallas.edu
CR [Anonymous], 2012, Temporal Logic
   Araújo J, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P58
   ATLEE JM, 1993, IEEE T SOFTWARE ENG, V19, P24, DOI 10.1109/32.210305
   Bastani FB, 2001, SIXTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, P65, DOI 10.1109/HASE.2001.966808
   Bastani FB, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P314, DOI 10.1109/ISSRE.2001.989485
   Bastani FB, 1999, ANN SOFTW ENG, V7, P5, DOI 10.1023/A:1018950608266
   BASTANI FB, 1999, P IEEE INT S SOFTW R
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Bista BB, 2001, 15TH INTERNATIONAL CONFERENCE ON INFORMATION NETWORKING, PROCEEDINGS, P171, DOI 10.1109/ICOIN.2001.905425
   Brinksma E., 1993, Computer Aided Verification. 5th International Conference, CAV '93 Proceedings, P371
   BURCH JR, 1990, P INT C VAR LARG SCA
   CAMPOS SV, 1996, THESIS CARNEGIE MELL
   Chan W, 1998, IEEE T SOFTWARE ENG, V24, P498, DOI 10.1109/32.708566
   CLARK E, 2001, NETW MAG, V16, P14
   Clarke S, 2002, SCI COMPUT PROGRAM, V44, P71, DOI 10.1016/S0167-6423(02)00030-8
   Clarke S., 1999, P 1999 ACM SIGPLAN C, P325
   DUGAN JB, 1993, J SYSTEMS SAFETY JUN
   EMERSON EA, 1986, J ACM, V33, P151, DOI 10.1145/4904.4999
   FILMAN RE, 2005, ASPECT ORIENTED SOFT, P283
   GRUMBERG O, 1994, ACM T PROGR LANG SYS, V16, P843, DOI 10.1145/177492.177725
   JEZEQUEL JM, 2002, P WORKSH ASP OR MOD
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales Gregor., 2001, Proceedings of the 15th European Conference on Object-Oriented Programming, P327
   Kim S, 2004, IEEE T SOFTWARE ENG, V30, P218
   LAM SS, 1994, IEEE T SOFTWARE ENG, V20, P55, DOI 10.1109/32.263755
   LAM SS, 1984, IEEE T SOFTWARE ENG, V10, P325, DOI 10.1109/TSE.1984.5010246
   LAMPORT L, 1994, ACM T PROGR LANG SYS, V16, P872, DOI 10.1145/177492.177726
   LEVESON NG, 1994, IEEE T SOFTWARE ENG, V20, P684, DOI 10.1109/32.317428
   LING HA, 1991, IEEE T COMPUT, V40, P376
   LING HA, 1993, IEEE T COMPUT, V42, P15
   Mendhekar A., 1997, SPL97009P9710044 XER
   MORASCA S, 1996, P 1996 ACM SIGSOFT I, V21
   NARAIN S, 1990, P 22 C WINT SIM DEC
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   PNUELI A, 1981, THEOR COMPUT SCI, V13, P45, DOI 10.1016/0304-3975(81)90110-9
   SHERE KD, 1994, COMPUTER, V27, P35, DOI 10.1109/2.261919
   Singh G., 1993, Proceedings 1993 International Conference on Network Protocols, P98, DOI 10.1109/ICNP.1993.340928
   STEFFEN B, 1996, INT J FORMAL ASPECTS, V8, P607
   Tarr P, 2001, PROC INT CONF SOFTW, P729
   THOMAS AH, 2001, P 4 INT WORKSH HYBR, P275
   TOINARD C, 1999, ACM SIGOPS OP SYST R, V33
   WANG DF, 2005, STEPWISE DEV HIGH AS
   WANG DF, 2005, P 8 IEEE INT S OBJ O
   WINTER V, 1999, BAY AREA RAPID TRANS
   Yu YJ, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P38
   ZAVE P, 1985, ACM T PROGR LANG SYS, V7, P10, DOI 10.1145/2363.2365
NR 46
TC 1
Z9 1
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2005
VL 31
IS 9
BP 713
EP 732
DI 10.1109/TSE.2005.99
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 964CZ
UT WOS:000231857600001
DA 2024-07-18
ER

PT J
AU Coppit, D
   Yang, JL
   Khurshid, S
   Le, W
   Sullivan, K
AF Coppit, D
   Yang, JL
   Khurshid, S
   Le, W
   Sullivan, K
TI Software assurance by bounded exhaustive testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT IEEE International Symposium on Software Testing and Analysis
CY JUL 11-14, 2004
CL Boston, MA
SP IEEE
DE formal methods; program verification; testing and debugging
ID COVERAGE
AB Bounded exhaustive testing ( BET) is a verification technique in which software is automatically tested for all valid inputs up to specified size bounds. A particularly interesting case of BET arises in the context of systems that take structurally complex inputs. Early research suggests that the BET approach can reveal faults in small systems with inputs of low structural complexity, but its potential utility for larger systems with more complex input structures remains unclear. We set out to test its utility on one such system. We used Alloy and TestEra to generate inputs to test the Galileo dynamic fault tree analysis tool, for which we already had both a formal specification of the input space and a test oracle. An initial attempt to generate inputs using a straightforward translation of our specification to Alloy did not work well. The generator failed to generate inputs to meaningful bounds. We developed an approach in which we factored the specification, used TestEra to generate abstract inputs based on one factor, and passed the results through a postprocessor that reincorporated information from the second factor. Using this technique, we were able to generate test inputs to meaningful bounds, and the inputs revealed nontrivial faults in the Galileo implementation, our specification, and our oracle. Our results suggest that BET, combined with specification abstraction and factoring techniques, could become a valuable addition to our verification toolkit and that further investigation is warranted.
C1 Coll William & Mary, Dept Comp Sci, Williamsburg, VA 23187 USA.
   Univ Virginia, Dept Comp Sci, Charlottesville, VA 22901 USA.
   Univ Texas, Austin, TX 78712 USA.
C3 William & Mary; University of Virginia; University of Texas System;
   University of Texas Austin
RP Coll William & Mary, Dept Comp Sci, Williamsburg, VA 23187 USA.
EM david@coppit.org; jy6q@virginia.edu; khurshid@ece.utexas.edu;
   weile@virginia.edu; sullivan@virginia.edu
CR ADRION WR, 1982, COMPUT SURV, V14, P159, DOI 10.1145/356876.356879
   [Anonymous], 1992, The Z Notation
   [Anonymous], 1990, Software testing techniques {
   Bayardo R.J., 1997, P 14 NAT C ART INT 9, P203
   BOYAPATI C, 2002, P INT S SOFTW TEST A, P203
   Boyd M. A., 1991, THESIS DUKE U DURHAM
   CHANG J, 1999, P EUR SOFTW ENG C AC
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   Coppit D., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P750, DOI 10.1109/ICSE.2000.870487
   Coppit D, 2003, PROC INT CONF SOFTW, P198, DOI 10.1109/ICSE.2003.1201200
   Coppit D, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P270, DOI 10.1109/ISSRE.2000.885878
   COPPIT D, 2003, THESIS U VIRGINIA CH
   COPPIT D, 2003, P INT S SOFTW REL EN, P168
   Dick J., 1993, FME'93: Industrial-Strength Formal Methods. First International Symposium of Formal Methods Europe Proceedings, P268, DOI 10.1007/BFb0024651
   DOYLE SA, 1995, DIG PAP INT SYMP FAU, P249, DOI 10.1109/FTCS.1995.466973
   DUGAN JB, 1992, IEEE T RELIAB, V41, P363, DOI 10.1109/24.159800
   Dugan JB, 2000, IEEE T RELIAB, V49, P49, DOI 10.1109/24.855536
   Godefroid Patrice., 1997, Proceedings of POPL, P174
   Gulati R, 1997, P A REL MAI, P57, DOI 10.1109/RAMS.1997.571665
   HAASL D., 1981, Fault tree handbook
   Harrold MaryJean., 2000, ICSE 00 P C FUTURE S, P61
   Havelund K., 2000, INT J SOFTWARE TOOLS, V2
   Helke S., 1997, ZUM '97: The Z Formal Specification Notation. 10th International Conference of Z Users Proceedings, P52, DOI 10.1007/BFb0027283
   HORCHER HM, 1995, LECT NOTES COMPUTER, V967, P152
   Jackson D., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P730, DOI 10.1109/ICSE.2000.870482
   Jackson D, 1996, IEEE T SOFTWARE ENG, V22, P484, DOI 10.1145/226295.226322
   Khurshid S, 2004, LECT NOTES COMPUT SC, V2919, P272
   Khurshid  S., 2003, P INT C TOOLS ALG CO
   Khurshid Sarfraz., 2001, ELECT NOTES THEORETI, V55
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   KNIGHT JC, 1986, IEEE T SOFTWARE ENG, V12, P96, DOI 10.1109/TSE.1986.6312924
   MACCOLL I, 1996, 9605 U QUEENSL DEP C
   MARINOV D, 2001, P INT C AUT SOFTW EN
   MARINOV D, 2003, MITLCSTR921 CSAIL
   MORELL LJ, 1990, IEEE T SOFTWARE ENG, V16, P844, DOI 10.1109/32.57623
   MOSKEWICZ M, 2001, P DES AUT C JUN
   OFFUTT J, 1999, P INT C UN MOD LANG
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   SAALTINK M, 1997, LECT NOTES COMPUTER, V1212, P72, DOI DOI 10.1007/BFB0027284]
   SCHWARTZ E, 1999, THESIS MIT CAMBRIDGE
   SHLYAKHTER L, 2001, P WORKSH THEOR APPL
   Stocks P, 1996, IEEE T SOFTWARE ENG, V22, P777, DOI 10.1109/32.553698
   Sullivan KJ, 1999, DIG PAP INT SYMP FAU, P232, DOI 10.1109/FTCS.1999.781056
   *SUN MICR, 2001, JAV 2 PLATF STAND ED
   WEYUKER EJ, 1980, IEEE T SOFTWARE ENG, V6, P236, DOI 10.1109/TSE.1980.234485
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
   [No title captured]
   [No title captured]
NR 48
TC 18
Z9 21
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2005
VL 31
IS 4
BP 328
EP 339
DI 10.1109/TSE.2005.52
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 929BY
UT WOS:000229318300005
DA 2024-07-18
ER

PT J
AU Oliveira, TC
   Alencar, PSC
   Filho, IM
   de Lucena, CJP
   Cowan, DD
AF Oliveira, TC
   Alencar, PSC
   Filho, IM
   de Lucena, CJP
   Cowan, DD
TI Software process representation and analysis for framework instantiation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE frameworks; instantiation; software process; software design;
   specification; lightweight analysis; design analysis
AB Object-oriented frameworks are currently regarded as a promising technology for reusing designs and implementations. However, developers find there is still a steep learning curve when extracting the design rationale and understanding the framework documentation during framework instantiation. Thus, instantiation is a costly process in terms of time, people, and other resources. These problems raise a number of questions including: "How can we raise the level of abstraction in which the framework instantiation is expressed, reasoned about and implemented?" "How can the same high-level design abstractions that were used to develop the framework be used during framework instantiation instead of using source code as is done currently?" "How Can we define extended design abstractions that can allow framework instantiation to be explicitly represented and validated?" In this paper, we present an approach to framework instantiation based on software processes that addresses these issues. Our main goal is to represent the framework design models in an explicit and declarative way, and support changes to this design based on explicit instantiation tasks based on software processes while maintaining system integrity, invariants, and general constraints. In this way, the framework instantiation can be performed in a valid and controlled way.
C1 Pontificia Univ Catolica Rio de Janeiro, Dept Informat, BR-22453 Rio De Janeiro, RJ, Brazil.
   Univ Waterloo, Sch Comp Sci, Comp Syst Grp, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Pontificia Univ Catolica Rio de Janeiro, Dept Informat, Rua Marques Sao Vicente 225,10 Andar, BR-22453 Rio De Janeiro, RJ, Brazil.
EM toacy@inf.puc-rio.br; palencar@csg.uwaterloo.ca; ivan@inf.puc-rio.br;
   lucena@inf.puc-rio.br; dcowan@csg.uzvaterloo.ca
RI Oliveira, Toacy/AAG-2789-2019
OI Oliveira, Toacy/0000-0001-8184-2442
CR Alencar P., 1999, Proceedings. Twenty-Third Annual International Computer Software and Applications Conference (Cat. No.99CB37032), P160, DOI 10.1109/CMPSAC.1999.812694
   ALENCAR PSC, 1996, P 3 INT S FORM METH
   [Anonymous], 1995, Design patterns for object-oriented software development
   Batory D, 2000, KLUWER INT SER ENG C, V576, P227
   Beck Kent, 1997, SMALLTALK BEST PRACT
   Bennett Keith H, 2000, Software maintenance and evolution, P73, DOI DOI 10.1145/336512.336534
   BIGGERSTAFF TJ, 1989, COMPUTER, V22, P36, DOI 10.1109/2.30731
   BOOCH G, 1999, UNIFIED MODELLING LA
   BRAY Y, EXTENSIBLE MARKUP LA
   CARVALHO SER, 1997, P US BRAZ JOINT WORK
   Cass A. G., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P754, DOI 10.1109/ICSE.2000.870488
   Clark James., 1999, XSL TRANSFORMATIONS
   CURTIS B, 1992, COMMUN ACM, V35, P75, DOI 10.1145/130994.130998
   D'Souza D., 1998, OBJECTS COMPONENTS F
   DONG J, 2001, P 7 INT C OBJ OR INF, P540
   FAYAD M, 1999, DOMAIN SPECIFIC APPL
   Fayad M., 1999, IMPLEMENTING APPL FR
   Fayad Mohamed E., 1999, Building Application Frameworks: Object-oriented Foundations of Framework Design
   Florijn G, 1997, LECT NOTES COMPUT SC, V1241, P472, DOI 10.1007/BFb0053391
   Fontoura M, 2000, J SYST SOFTWARE, V54, P239, DOI 10.1016/S0164-1212(00)00054-6
   Fontoura M., 2001, The UML Profile for Framework Architectures
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   FRAKES WB, 1991, P 13 INT C SOFTW ENG, P52
   Froehlich G, 1997, PROC INT CONF SOFTW, P491, DOI 10.1145/253228.253432
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Haeberer AM, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P260, DOI 10.1109/ASE.1998.732667
   Herbsleb JD, 2001, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.2001.919083
   HIGHTOWER R, 2001, JAVA TOOLS EXTREME P
   Jackson D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P194, DOI 10.1109/ICSE.1999.841009
   JACOBSON I, 1997, SOFTWARE REUSE ARCH
   JOHNSON R, 1992, P OOPSLA 92 C
   KAISER GE, 1988, IEEE SOFTWARE, V5, P40, DOI 10.1109/52.2023
   Keller R. K., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P226, DOI 10.1109/ICSE.1999.841012
   KELLNER C, 1990, P 6 INT SOFTW PROC W, P7
   Kellner M. I., 1991, Proceedings. First International Conference on the Software Process. Manufacturing Complex Systems (Cat. No.91TH0418-4), P8, DOI 10.1109/ICSP.1991.664337
   KICZALES G, 1991, ART META OBJECT PROT
   Kramer C, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P208, DOI 10.1109/WCRE.1996.558905
   Krasner G., 1998, J OBJECT ORIENTED PR, V1
   MEZINI M, 1998, P C OBJ OR PROGR SYS, P97
   Mikkonen T, 1998, PROC INT CONF SOFTW, P115, DOI 10.1109/ICSE.1998.671108
   MILI H, 1995, IEEE T SOFTWARE ENG, V21, P528, DOI 10.1109/32.391379
   Minsky N., 1996, THEORY PRACTICE OBJE, V2
   MINSKY NH, 1996, THEOR PRACT OBJ SYST, V2, P286
   OLIVEIRA TC, 2000, MCC182000
   OLIVEIRA TC, 2002, P 1 WORKSH DECL META
   OLIVEIRA TC, 2000, P IASTED INT C SOFTW, P330
   Ortigosa A, 1999, TOOLS, V29, P131, DOI 10.1109/TOOLS.1999.779006
   Pal P. P., 1995, Technology of Object-Oriented Languages and Systems TOOLS 17. Proceedings of the Seventeenth International Conference, P25
   RAMAKRISHNA YS, 1997, P 9 INT C COMP AID V
   RIEHLE D, 1998, P 1998 C OBJ OR PROG, P117
   Riley J., 1994, Proceedings of the conference on TRI-Ada'94, P16
   *XSB, XSB LOG PROGR SYST V
NR 52
TC 11
Z9 12
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2004
VL 30
IS 3
BP 145
EP 159
DI 10.1109/TSE.2004.1271169
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 803BN
UT WOS:000220206700001
DA 2024-07-18
ER

PT J
AU Goseva-Popstojanova, K
   Hassan, A
   Guedem, A
   Abdelmoez, W
   Nassar, DEM
   Ammar, H
   Mili, A
AF Goseva-Popstojanova, K
   Hassan, A
   Guedem, A
   Abdelmoez, W
   Nassar, DEM
   Ammar, H
   Mili, A
TI Architectural-level risk analysis using UML
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE risk assessment; UML specification; software architecture; dynamic
   complexity; dynamic coupling; severity of failure; Markov model
ID OBJECT-ORIENTED DESIGN; METRICS SUITE; SOFTWARE
AB Risk assessment is an essential part in managing software development. Performing risk assessment, during the early development phases enhances resource allocation decisions. In order to improve the software development process and the quality of software products, we need to be able to build risk analysis models based on data that can be collected, early in the development process. These models will help identify the high-risk components and connectors of the product architecture, so that remedial actions may be taken in order to control and optimize the development process and improve the quality of the product. In this paper, we present a risk assessment methodology which can be used in the early phases of the software life cycle. We use the Unified Modeling Language (UML) and commercial modeling environment Rational Rose Real Time (RoseRT) to obtain UML model statistics. First, for each component and connector in software architecture, a dynamic heuristic risk factor is obtained and severity is assessed based on hazard analysis. Then, a Markov model is constructed to obtain scenarios risk factors. The risk factors of use cases and the overall system risk factor are estimated using the scenarios risk factors within our methodology, we also identify critical components and connectors that would require careful analysis, design, implementation and more testing effort. The risk assessment methodology is applied on a pacemaker case study.
C1 W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
   New Jersey Inst Technol, Coll Comp Sci, Newark, NJ 07102 USA.
C3 West Virginia University; New Jersey Institute of Technology
RP W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
EM katerina@csee.wvu.edu; hassan@csee.wvu.edu; guedem@csee.wvu.edu;
   rabie@csee.wvu.edu; dmnassar@csee.wvu.edu; ammar@csee.wvu.edu;
   mili@cis.njit.edu
RI Abdelmoez, Walid/AAJ-9939-2021
OI mili, amira/0000-0003-3002-7303; Goseva-Popstojanova,
   Katerina/0000-0003-4683-672X
CR Ammar HH, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P108, DOI 10.1109/METRIC.1997.637171
   [Anonymous], GUIDE RELIABILITY EN
   Bieman J, 1994, P ACM S SOFTW REUS S, P259
   Bowles J., 1998, Proceedings of the Annual Reliability and Maintainability Symposium, P48
   Briand L, 1997, PROC INT CONF SOFTW, P412, DOI 10.1145/253228.253367
   CHEUNG RC, 1980, IEEE T SOFTWARE ENG, V6, P118, DOI 10.1109/TSE.1980.234477
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHIDAMBER SR, 1991, SIGPLAN NOTICES, V26, P197
   Douglass BrucePowel., 1998, REAL TIME UML DEV EF
   El Emam K, 2001, J SYST SOFTWARE, V55, P301, DOI 10.1016/S0164-1212(00)00079-0
   ELEMAM K, 1999, 43609 NRC I INF TECH
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Goseva-Popstojanova K, 2001, PERFORM EVALUATION, V45, P179, DOI 10.1016/S0166-5316(01)00034-7
   Harrison W., 1988, Journal of Management Information Systems, V4, P93
   HASSAN A, 2001, P 5 WORLD MULT SYST, V4, P559
   HEIMANN DI, 1995, P A REL MAI, P433, DOI 10.1109/RAMS.1995.513280
   Hitz M., 1995, P INT S APPL CORP CO, P78
   KHOSHGOFTAAR T, 1995, P 1995 SOFTW REL TES, P20
   Khoshgoftaar T. M., 1996, Empirical Software Engineering, V1, P31, DOI 10.1007/BF00125810
   Khoshgoftaar T. M., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P116, DOI 10.1109/ISSRE.1999.809316
   Khoshgoftaar T. M., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P129, DOI 10.1109/METRIC.1993.263793
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Munson J., 1996, HDB SOFTWARE RELIABI, P493
   Musa J.D., 1996, HDB SOFTWARE RELIABI, P167
   Rumbaugh James, 1999, The unified modeling language reference manual
   Trivedi KishorS., 2002, PROBABILITY STAT REL, V2nd
   Wang T, 2003, PROC INT CONF SOFTW, P808, DOI 10.1109/ICSE.2003.1201297
   Yacoub S. M., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P50, DOI 10.1109/METRIC.1999.809725
   Yacoub SM, 2000, JOOP, V13, P8
   Yacoub SM, 2002, IEEE T SOFTWARE ENG, V28, P529, DOI 10.1109/TSE.2002.1010058
   1997, NASASTD871913A
   2000, NASA SAFETY MANUAL P
NR 32
TC 72
Z9 94
U1 2
U2 23
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2003
VL 29
IS 10
BP 946
EP 960
DI 10.1109/TSE.2003.1237174
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 729CF
UT WOS:000185753100007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Briand, LC
   Labiche, Y
   Wang, YH
AF Briand, LC
   Labiche, Y
   Wang, YH
TI An investigation of graph-based class integration test order strategies
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE integration testing; integration order; object-oriented software
   engineering; experimentation
ID OBJECT-ORIENTED INTEGRATION
AB The issue of ordering class integration in the context of integration testing has been discussed by a number of researchers. More specifically, strategies have been proposed to generate a test order while minimizing stubbing. Recent papers have addressed the problem of deriving an integration order in the presence of dependency cycles in the class diagram. Such dependencies represent a practical problem as they make any topological ordering of classes impossible. Three main approaches, aimed at "breaking" cycles, have been proposed. The first one was proposed by Tai and Daniels [22] and is based on assigning a higher-level order according to aggregation and inheritance relationships and a lower-level order according to associations. The second one was proposed by Le Traon et al. [16] and is based on identifying strongly connected components in the dependency graph. The third one was proposed by Briand et al. [6]; it combines some of the principles of the two previous approaches and addresses some of their shortcomings (e.g., the first approach may result into unnecessary stubbing whereas the second may lead to breaking cycles by "removing" aggregation or inheritance dependencies, thus leading to complex stubbing). This paper reviews these strategies (principles are described, advantages and drawbacks are precisely investigated) and provides both analytical and empirical comparisons based on five case studies.
C1 Carleton Univ, Dept Syst & Comp Engn, Software Qual Engn Lab, Ottawa, ON K1S 5B6, Canada.
C3 Carleton University
RP Carleton Univ, Dept Syst & Comp Engn, Software Qual Engn Lab, 1124 Colonel Dr, Ottawa, ON K1S 5B6, Canada.
EM briand@sce.carleton.ca; labiche@sce.carleton.ca; yihong@sce.carelton.ca
OI Labiche, Yvan/0000-0001-8880-4836
CR [Anonymous], 1999, Graphs, Networks and Algorithm
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], 1990, Software testing techniques {
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Briand L.C., 2003, SOFTWARE ENG COMPUTA
   Briand LC, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P287, DOI 10.1109/ISSRE.2001.989482
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Devore J.L., 1999, PROBABILITY STAT ENG, V5th
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   HARROL DMJ, 1992, P 14 IEEE INT C SOFT, P66
   JORGENSEN PC, 1994, COMMUN ACM, V37, P30, DOI 10.1145/182987.182989
   KUNG DC, 1995, J OBJECT-ORIENT PROG, V8, P51
   Kung DC, 1996, J SYST SOFTWARE, V32, P21, DOI 10.1016/0164-1212(95)00047-X
   Labiche Y., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P136, DOI 10.1109/ICSE.2000.870405
   Le Hanh V., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P381
   Le Traon Y, 2000, IEEE T RELIAB, V49, P12, DOI 10.1109/24.855533
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   MACIASZEK LA, 2001, ANAL SYSTEM DESIGN D
   McGregor JohnD., 2001, A Practical Guide to Testing Object-Oriented Software
   PERRY DE, 1990, J OBJECT-ORIENT PROG, V2, P13
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Tai KC, 1999, J OBJECT-ORIENT PROG, V12, P18
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Tarjan R., 1973, SIAM Journal on Computing, V2, P211, DOI 10.1137/0202017
   WEYUKER EJ, 1988, COMMUN ACM, V31, P668, DOI 10.1145/62959.62963
NR 25
TC 60
Z9 76
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2003
VL 29
IS 7
BP 594
EP 607
DI 10.1109/TSE.2003.1214324
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 698HG
UT WOS:000183992500002
DA 2024-07-18
ER

PT J
AU Zhang, F
   Cheung, TY
AF Zhang, F
   Cheung, TY
TI Optimal transfer trees and distinguishing trees for testing observable
   nondeterministic finite-state machines
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE average weight; distinguishing tree; nondeterministic finite-state
   machine; testing; transfer tree; weighted height
ID MINIMIZATION
AB The fault-state detection approach for blackbox testing consists of two phases. The first is to bring the system under test (SUT) from its initial state to a targeted state t and the second is to check various specified properties of the SUT at t. This paper investigates the first phase for testing systems specified as observable nondeterministic finite-state machines with probabilistic and weighted transitions. This phase involves two steps. The first step transfers,the SUT to some state t' and the second step identifies whether t' is indeed the targeted state t or not. State transfer is achieved by moving the SUT along one of the paths of a transfer tree (TT) and state identification is realized by using diagnosis trees (DT). A theoretical foundation for the existence and characterization of TT and DT with minimum weighted height or minimum average weight is presented. Algorithms for their computation are proposed.
C1 Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
   City Univ Hong Kong, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
C3 Hong Kong Polytechnic University; City University of Hong Kong
RP Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
EM csfzhang@comp.polyu.edu.hk; cscheung@cityu.edu.hk
CR Alur R., 1995, Proceedings of the Twenty-Seventh Annual ACM Symposium on the Theory of Computing, P363, DOI 10.1145/225058.225161
   CHEUNG TY, 1995, J PARALLEL DISTR COM, V28, P94, DOI 10.1006/jpdc.1995.1091
   CHEUNG TY, 1991, P 11 IFIP G6 1 INT S, P278
   CONDON A, 1988, J COMPUT SYST SCI, V36, P452, DOI 10.1016/0022-0000(88)90038-4
   Derman C, 1972, Finite State Markov Decision Processes
   FUJIWARA S, 1992, IFIP TRANS C, V3, P267
   HOGREFE D, 1992, OSI FORMAL SPECIFICA
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   Horn R., 1985, Matrix Analysis, DOI [10.1017/CBO9780511810817, 10.1017/CBO9781139020411]
   HOWARD R, 1980, DYNAMIC PROGRAMMING
   KLOOMSTERMAN H, 1993, PROTOCOL TEST SYSTEM, V5, P297
   Kohavi Z., 1978, Switching and Finite Automata Theory, Vsecond
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Low S. H., 1993, Proceedings 1993 International Conference on Network Protocols, P368, DOI 10.1109/ICNP.1993.340890
   LUO G, 1994, IEEE T SOFTWARE ENG, V20, P149, DOI 10.1109/32.265636
   LUO G, 1992, INFORM PROCESS LETT, V44, P333, DOI 10.1016/0020-0190(92)90110-H
   Rothermel G, 1998, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.1998.738487
   SABNANI K, 1988, COMPUT NETWORKS ISDN, V15, P285, DOI 10.1016/0169-7552(88)90064-5
   Sarikaya B., 1993, Principles of protocol engineering and conformance testing
   Starke P. H., 1972, ABSTRACT AUTOMATA
   TRIPATHY P, 1993, IFIP TRANS C, V11, P309
   Wong WE, 1998, SOFTWARE PRACT EXPER, V28, P347, DOI 10.1002/(SICI)1097-024X(19980410)28:4<347::AID-SPE145>3.0.CO;2-L
   Wong WE, 1997, P INT COMP SOFTW APP, P522, DOI 10.1109/CMPSAC.1997.625062
   YI W, 1992, IFIP TRANS C, V8, P47
NR 24
TC 23
Z9 28
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2003
VL 29
IS 1
BP 1
EP 14
DI 10.1109/TSE.2003.1166585
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 633GD
UT WOS:000180273500001
DA 2024-07-18
ER

PT J
AU Liu, S
   Dou, SJ
   Chen, JJ
   Zhang, ZR
   Lu, Y
AF Liu, Shuang
   Dou, Shujie
   Chen, Junjie
   Zhang, Zhirun
   Lu, Ye
TI Differential Testing of Machine Translators Based on Compositional
   Semantics
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Semantics; Internet; Web and internet services; Urban areas; Testing;
   Syntactics; Handover; Software testing; software quality; machine
   translation
AB Powered by the advances of deep neural networks, machine translation software has achieved rapid progresses recently. Machine translators are widely adopted in people's daily lives, e.g., for information consumption, medical consumption and online shopping. However, machine translators are far from robust, and may produce wrong translations, which could potentially cause misunderstandings or even serious consequences. It is thus critical to detect errors in machine translators, and provide informative feedback for developers. In this work, we adopt the differential testing method to test machine translators. In particular, we use mature commercial translators as reference machine translation engines. Based on the principle of compositionality, which specifies that the meaning of a complex expression is determined by the meanings of its constituent expressions and the syntactic rules used to combine them, we design the oracle which conducts similarity comparison guided by syntactic structure and semantic encoding. In particular, we employ the constituency parsing to obtain the part-whole structure relation between a sentence and one of its component. Then we compute the semantic similarity of each sentence part with pre-trained language model and expert knowledge. We implement our approach into a tool named DCS, conduct experiments on three popular machine translators, i.e., Google translate, Baidu translate and Microsoft Bing translate, and compare DCS with two state-of-the-art approaches, i.e., CIT and CAT. The experiment results show that DCS achieves 8.6% and 35.4% higher precision, respectively. Moreover, the errors reported by DCS have the lowest redundancy in terms of the duplicated error locations in the source sentence. DCS can be used in complement with existing approaches and achieve higher detection precision. It also shows comparable efficiency with state-of-the-art approaches.
C1 [Liu, Shuang] Renmin Univ China, Sch Informat, Beijing 100872, Peoples R China.
   [Dou, Shujie; Chen, Junjie] Tianjin Univ, Coll Intelligence & Comp, Tianjin 300350, Peoples R China.
   [Zhang, Zhirun] Tianjin Univ, Sch New Media & Commun, Tianjin 300072, Peoples R China.
   [Lu, Ye] Nankai Univ, Coll Cyber Sci, Tianjin 300350, Peoples R China.
   [Lu, Ye] Chinese Acad Sci, State Key Lab Processors, ICT, Beijing 100190, Peoples R China.
   [Lu, Ye] Minist Educ, Key Lab Data & Intelligent Syst Secur DISSec, Tianjin 300350, Peoples R China.
C3 Renmin University of China; Tianjin University; Tianjin University;
   Nankai University; Chinese Academy of Sciences
RP Lu, Y (corresponding author), Nankai Univ, Coll Cyber Sci, Tianjin 300350, Peoples R China.; Lu, Y (corresponding author), Chinese Acad Sci, State Key Lab Processors, ICT, Beijing 100190, Peoples R China.; Lu, Y (corresponding author), Minist Educ, Key Lab Data & Intelligent Syst Secur DISSec, Tianjin 300350, Peoples R China.
EM liushuangcs@gmail.com; doushujie@tju.edu.cn; junjiechen@tju.edu.cn;
   zzr2022245010@tju.edu.cn; luye@nankai.edu.cn
RI Chen, Junjie/ABE-8685-2020
OI Chen, Junjie/0000-0003-4509-2271; Zhang, Zhirun/0009-0009-9613-1542
FU National Natural Science Foundation of China
FX No Statement Available
CR [Anonymous], 2022, Cable news network
   [Anonymous], 2022, Lost in translation: 13 international marketing fails
   [Anonymous], 2022, The Google Translate engine
   [Anonymous], 2022, Stanford Parser
   [Anonymous], 2022, Baidu translator API
   [Anonymous], 2006, Proceedings of LREC
   [Anonymous], 2022, Google Cloud Translation
   [Anonymous], 2015, After Google Translate's latest update, IBC Culture finde his tory's biggest language mistakes including a US president stat ing 1 desire the Poles carmally
   [Anonymous], 2022, The Chinese sentence representation model
   [Anonymous], 2017, Palestinian man is arrested by polim after posting "good morning in Arabic on Facebook which was wrongly translated as "attack them
   [Anonymous], 2022, The fling Micrison Translator
   [Anonymous], 2022, Azure Microsoft Translator
   Belinkov Y, 2018, Arxiv, DOI arXiv:1711.02173
   Brubaker C, 2014, P IEEE S SECUR PRIV, P114, DOI 10.1109/SP.2014.15
   Chen YT, 2016, ACM SIGPLAN NOTICES, V51, P85, DOI [10.1145/2980983.2908095, 10.1145/2908080.2908095]
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Dou ZY, 2021, 16TH CONFERENCE OF THE EUROPEAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (EACL 2021), P2112
   Feng FXY, 2022, Arxiv, DOI arXiv:2007.01852
   Gao TY, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P6894
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   Gupta S, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P863, DOI 10.1145/3368089.3409756
   Hassan H, 2018, Arxiv, DOI arXiv:1803.05567
   He PJ, 2020, PROC INT CONF SOFTW, P961, DOI 10.1145/3377811.3380339
   He PJ, 2021, PROC INT CONF SOFTW, P410, DOI 10.1109/ICSE43902.2021.00047
   HINTIKKA J, 1984, SYNTHESE, V59, P27, DOI 10.1007/BF00873280
   HUDSON RA, 1980, LINGUISTICS, V18, P179, DOI 10.1515/ling.1980.18.3-4.179
   Jabiyev B, 2021, CCS '21: PROCEEDINGS OF THE 2021 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1805, DOI 10.1145/3460120.3485384
   Jaewon Hur, 2021, 2021 IEEE Symposium on Security and Privacy (SP), P1286, DOI 10.1109/SP40001.2021.00103
   Ji P, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P468, DOI 10.1109/ASE51524.2021.9678715
   Kamigaito H, 2020, AAAI CONF ARTIF INTE, V34, P8050
   Li S, 2018, Arxiv, DOI arXiv:1805.06504
   Lin Chin-Yew, 2004, Text summarization branches out, P74, DOI DOI 10.2307/3105454
   Liu Q., 2019, P 23 C COMPUTATIONAL, P33
   Liu S, 2020, Arxiv, DOI arXiv:2005.06945
   Liu YH, 2019, Arxiv, DOI arXiv:1907.11692
   Liu Zhiyuan, 2020, Compositional Semantics, P43, DOI DOI 10.1007/978-981-15-5573-23
   Mam M. C, 2017, Strategic insights: Lost in translation
   McKeeman William M., 1998, DIGIT TECH J, V10, P100
   Noller Y, 2020, PROC INT CONF SOFTW, P1273, DOI 10.1145/3377811.3380363
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Park J, 2021, PROC INT CONF SOFTW, P13, DOI 10.1109/ICSE43902.2021.00015
   PELLETIER FJ, 1994, TOPOI-INT REV PHILOS, V13, P11, DOI 10.1007/BF00763644
   Petsios T, 2017, P IEEE S SECUR PRIV, P615, DOI 10.1109/SP.2017.27
   Quan LL, 2020, IEEE INT CONF AUTOM, P524, DOI 10.1145/3324884.3416552
   Ristad ES, 1998, IEEE T PATTERN ANAL, V20, P522, DOI 10.1109/34.682181
   Sabet MJ, 2021, Arxiv, DOI arXiv:2004.08728
   Sun ZY, 2022, PROC INT CONF SOFTW, P1181, DOI 10.1145/3510003.3510206
   Sun ZY, 2020, PROC INT CONF SOFTW, P974, DOI 10.1145/3377811.3380420
   Turovsky B, 2022, Ten years of Google Tramlate
   Turovsky B., 2022, HIT IR-lab Tongyici Cilin
   Wang JY, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P692, DOI 10.1109/ASE51524.2021.9678792
   Wu Y, 2016, arXiv, P1
   Yan YM, 2021, 59TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 11TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (ACL-IJCNLP 2021), VOL 1, P5065
   Ye GX, 2021, PROCEEDINGS OF THE 42ND ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '21), P435, DOI 10.1145/3453483.3454054
   Zhao H., 2014, P 10 CHIN WORKSH MAC, P129
NR 55
TC 0
Z9 0
U1 3
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2023
VL 49
IS 12
BP 5046
EP 5059
DI 10.1109/TSE.2023.3323969
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CL0K1
UT WOS:001125287400010
OA hybrid
DA 2024-07-18
ER

PT J
AU Geethal, C
   Böehme, M
   Pham, V
AF Geethal, Charaka
   Bohme, Marcel
   Pham, Van-Thuan
TI Human-in-the-Loop Automatic Program Repair
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Automated test oracles; semi-automatic program repair; classification
   algorithms; active machine learning
ID GENERATION
AB learn2fix is a human-in-the-loop interactive program repair technique, which can be applied when no bug oracle-except the user who is reporting the bug-is available. This approach incrementally learns the condition under which the bug is observed by systematic negotiation with the user. In this process, learn2fix generates alternative test inputs and sends some of those to the user for obtaining their labels. A limited query budget is assigned to the user for this task. A query is a Yes/No question: "When executing this alternative test input, the program under test produces the following output; is the bug observed?". Using the labelled test inputs, learn2fix incrementally learns an automatic bug oracle to predict the user's response. A classification algorithm in machine learning is used for this task. Our key challenge is to maximise the oracle's accuracy in predicting the tests that expose the bug given a practical, small budget of queries. After learning the automatic oracle, an existing program repair tool attempts to repair the bug using the alternative tests that the user has labelled. Our experiments demonstrate that learn2fix trains a sufficiently accurate automatic oracle with a reasonably low labelling effort (lt. 20 queries), and the oracles represented by interpolation-based classifiers produce more accurate predictions than those represented by approximation-based classifiers. Given the user-labelled test inputs, generated using the interpolation-based approach, the GenProg and Angelix automatic program repair tools produce patches that pass a much larger proportion of validation tests than the manually constructed test suites provided by the repair benchmark.
C1 [Geethal, Charaka] Monash Univ, Clayton, Vic 3800, Australia.
   [Geethal, Charaka] Univ Ruhuna, Fac Sci, Dept Comp Sci, Matara 81000, Sri Lanka.
   [Bohme, Marcel] Max Planck Inst Secur & Privacy, D-44799 Bochum, Germany.
   [Pham, Van-Thuan] Univ Melbourne, Carlton, Vic 3053, Australia.
C3 Monash University; University Ruhuna; University of Melbourne
RP Geethal, C (corresponding author), Monash Univ, Clayton, Vic 3800, Australia.; Geethal, C (corresponding author), Univ Ruhuna, Fac Sci, Dept Comp Sci, Matara 81000, Sri Lanka.
EM charak-ageethal@gmail.com
OI Bohme, Marcel/0000-0002-4470-1824
CR Afshan S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P352, DOI 10.1109/ICST.2013.11
   [Anonymous], 2013, Tech. Rep.
   [Anonymous], 2009, Technical report
   [Anonymous], 2012, International Symposium on Software Testing and Analysis, ISSTA 2012, Minneapolis, MN, USA, July 15-20, 2012, DOI DOI 10.1145/2338965.2336790
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Barrett C, 2021, FRONT ARTIF INTEL AP, P1267, DOI 10.3233/FAIA201017
   Begel A, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P120
   Böhme M, 2020, IEEE INT CONF SOFTW, P274, DOI 10.1109/ICST46399.2020.00036
   Böhme M, 2019, IEEE T SOFTWARE ENG, V45, P489, DOI 10.1109/TSE.2017.2785841
   Böhme M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2329, DOI 10.1145/3133956.3134020
   Bowring J. F., 2004, Software Engineering Notes, V29, P195, DOI 10.1145/1013886.1007539
   Bozkurt M., 2011, Proceedings of the 2011 IEEE 6th International Symposium on Service Oriented System Engineering (SOSE 2011), P13, DOI 10.1109/SOSE.2011.6139088
   Braga R, 2018, SBES'18: PROCEEDINGS OF THE XXXII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P142, DOI 10.1145/3266237.3266273
   Briand LC, 2008, INT CONF QUAL SOFTW, P3, DOI 10.1109/QSIC.2008.29
   Chen C, 2018, COMPUT SECUR, V75, P118, DOI 10.1016/j.cose.2018.02.002
   Dittrich D, 2011, IEEE SECUR PRIV, V9, P32, DOI 10.1109/MSP.2010.199
   Eddy SR, 2004, NAT BIOTECHNOL, V22, P1177, DOI 10.1038/nbt0904-1177
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Ferrer J, 2012, SOFTWARE PRACT EXPER, V42, P1331, DOI 10.1002/spe.1135
   Gao X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P8, DOI 10.1145/3293882.3330558
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Harman Mark, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P182, DOI 10.1109/ICSTW.2010.31
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Holub A, 2008, PROC CVPR IEEE, P885
   Hu Jin, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P727, DOI 10.1109/CSSE.2008.774
   Jin Wei., 2013, P 2013 INT S SOFTWAR, P213, DOI DOI 10.1145/2483760.2483763
   Joshi AJ, 2009, PROC CVPR IEEE, P2364
   Kapugama CG, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P215, DOI 10.1145/3533767.3534406
   Kecman V, 2005, STUD FUZZ SOFT COMP, V177, P1
   Kolb S, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2333
   Koza J. R., 1992, Toward a Practice of Autonomous Systems. Proceedings of the First European Conference on Artificial Life, P110
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le XBD, 2019, PROC INT CONF SOFTW, P524, DOI 10.1109/ICSE.2019.00064
   Liang HL, 2018, IEEE T RELIAB, V67, P1199, DOI 10.1109/TR.2018.2834476
   Liu XJ, 2017, P INT COMP SOFTW APP, P256, DOI 10.1109/COMPSAC.2017.125
   Longadge R, 2013, Arxiv, DOI [arXiv:1305.1707, DOI 10.48550/ARXIV.1305.1707]
   Manès VJM, 2021, IEEE T SOFTWARE ENG, V47, P2312, DOI 10.1109/TSE.2019.2946563
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   McMinn P., 2010, P 1 INT WORKSH SOFTW, P1
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Motwani M, 2022, IEEE T SOFTWARE ENG, V48, P637, DOI 10.1109/TSE.2020.2998785
   Motwani M, 2021, PROC IEEE ACM INT C, P309, DOI 10.1109/ICSE-Companion52605.2021.00134
   Pastore F, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P342, DOI 10.1109/ICST.2013.13
   Pezzè M, 2014, ADV COMPUT, V95, P1, DOI 10.1016/B978-0-12-800160-8.00001-2
   Pham V, 2021, IEEE T SOFTWARE ENG, V47, P1980, DOI 10.1109/TSE.2019.2941681
   ROSENBLUM DS, 1995, IEEE T SOFTWARE ENG, V21, P19, DOI 10.1109/32.341844
   Sarker Iqbal H, 2021, SN Comput Sci, V2, P160, DOI 10.1007/s42979-021-00592-x
   Serebryany Konstantin, 2012, USENIX, P309
   Shahamiri SR, 2012, AUTOMAT SOFTW ENG, V19, P303, DOI 10.1007/s10515-011-0094-z
   Shahamiri SR, 2011, INFORM SOFTWARE TECH, V53, P774, DOI 10.1016/j.infsof.2011.02.006
   Singh A, 2016, PROCEEDINGS OF THE 10TH INDIACOM - 2016 3RD INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT, P1310
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Staats M, 2012, PROC INT CONF SOFTW, P870, DOI 10.1109/ICSE.2012.6227132
   Tan SH, 2017, PROC IEEE ACM INT C, P180, DOI 10.1109/ICSE-C.2017.76
   Tan SH, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P471, DOI 10.1109/ICSE.2015.65
   Taylor Ramsay, 2012, Testing Software and Systems. 24th IFIP WG 6.1 International Conference (ICTSS 2012). Proceedings, P184, DOI 10.1007/978-3-642-34691-0_14
   Pham VT, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P891, DOI 10.1109/ICSE.2015.99
   Vanmali M, 2002, INT J INTELL SYST, V17, P45, DOI 10.1002/int.1002
   Williams R., 2002, Triangle classification problem
   Wyner AJ, 2017, J MACH LEARN RES, V18, P1
   Xiong YF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P789, DOI 10.1145/3180155.3180182
   Yang JQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P831, DOI 10.1145/3106237.3106274
   Yi J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P24, DOI 10.1145/3180155.3182517
   Yi JY, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P740, DOI 10.1145/3106237.3106262
   Yu ZX, 2019, EMPIR SOFTW ENG, V24, P33, DOI 10.1007/s10664-018-9619-4
   Zalewski M, 2014, American fuzzy lop
   Zeller A., 2023, TheFuzzing Book
NR 70
TC 0
Z9 0
U1 4
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2023
VL 49
IS 10
BP 4526
EP 4549
DI 10.1109/TSE.2023.3305052
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA Y1NF7
UT WOS:001102997400003
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Zhou, Y
   Sun, Y
   Tang, Y
   Chen, YQ
   Sun, J
   Poskitt, CM
   Liu, Y
   Yang, ZJ
AF Zhou, Yuan
   Sun, Yang
   Tang, Yun
   Chen, Yuqi
   Sun, Jun
   Poskitt, Christopher M. M.
   Liu, Yang
   Yang, Zijiang
TI Specification-Based Autonomous Driving System Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Fuzzing; Planning; Roads; Vehicle dynamics; Sun; Sensors;
   Autonomous driving system; coverage criteria; fuzzing; specification
   languages; testing
AB Autonomous vehicle (AV) systems must be comprehensively tested and evaluated before they can be deployed. Highfidelity simulators such as CARLA or LGSVL allow this to be done safely in very realistic and highly customizable environments. Existing testing approaches, however, fail to test simulated AVs systematically, as they focus on specific scenarios and oracles (e.g., lane following scenario with the "no collision" requirement) and lack any coverage criteria measures. In this paper, we propose AVUnit, a framework for systematically testing AV systems against customizable correctness specifications. Designed modularly to support different simulators, AVUnit consists of two new languages for specifying dynamic properties of scenes (e.g., changing pedestrian behaviour after waypoints) and fine-grained assertions about the AV's journey. AVUnit further supports multiple fuzzing algorithms that automatically search for test cases that violate these assertions, using robustness and coverage measures as fitness metrics. We evaluated the implementation of AVUnit for the LGSVL+Apollo simulation environment, finding 19 kinds of issues in Apollo, which indicate that the open-source Apollo does not perform well in complex intersections and lane-changing related scenarios.
C1 [Zhou, Yuan; Sun, Yang; Tang, Yun; Sun, Jun; Poskitt, Christopher M. M.; Liu, Yang] Nanyang Technol Univ, Sch Comp Sci & Engn, Singapore 639798, Singapore.
   [Chen, Yuqi] ShanghaiTech Univ, Shanghai 201210, Peoples R China.
   [Yang, Zijiang] Xi An Jiao Tong Univ, Xian 710049, Shaanxi, Peoples R China.
   [Yang, Zijiang] GuardStrike Inc, Xian 710074, Shaanxi, Peoples R China.
C3 Nanyang Technological University; ShanghaiTech University; Xi'an
   Jiaotong University
RP Zhou, Y (corresponding author), Nanyang Technol Univ, Sch Comp Sci & Engn, Singapore 639798, Singapore.
EM y.zhou@ntu.eud.sg; yangsun.2020@phdcs.smu.edu.sg; yun005@e.ntu.edu.sg;
   chenyq@shanghaitech.edu.cn; junsun@smu.edu.sg; cposkitt@smu.edu.sg;
   yangliu@ntu.edu.sg; zijiang@xjtu.edu.cn
RI LEE, YU/JXY-2338-2024; Poskitt, Christopher M/S-1002-2016; chen,
   yuqi/KBB-4137-2024
OI Poskitt, Christopher M/0000-0002-9376-2471; tang,
   yun/0000-0002-6000-6848; Sun, Jun/0000-0002-3545-1392
FU Ministry of Education, Singapore under its Academic Research Fund Tier 3
   [MOET32020-0004]; Ministry of Education, Singapore under its Academic
   Research Fund Tier 2 [MOE-T2EP20120-0004]; NRF Investigatorship
   [NRF-NRFI06-2020-0001]; National Natural Science Foundation of China
   [62032010]
FX This work was supported in part by the Ministry of Education, Singapore
   under its Academic Research Fund Tier 3 under Grant MOET32020-0004 and
   in part by Academic Research Fund Tier 2 under Grant MOE-T2EP20120-0004,
   in part by the NRF Investigatorship under Grant NRF-NRFI06-2020-0001,
   and in part by the National Natural Science Foundation of China under
   Grant 62032010. Any opinions, findings and conclusions or
   recommendations expressed in this material are those of the author(s)
   and do not reflect the views of the Ministry of Education, Singapore.
CR Althoff M, 2018, IEEE INT VEH SYM, P1326, DOI 10.1109/IVS.2018.8500374
   Althoff M, 2017, IEEE INT VEH SYM, P719, DOI 10.1109/IVS.2017.7995802
   [Anonymous], 2018, SOC AUTOMOTIVE ENG S
   Arcaini P, 2021, IEEE INT CONF SOFTW, P295, DOI 10.1109/ICST49551.2021.00042
   Arrieta A, 2018, IEEE T IND INFORM, V14, P1055, DOI 10.1109/TII.2017.2788019
   Association for standardization of automation and measuring systems (ASAM), 2020, US
   Baidu, 2019, AP 6 0
   Bashetty Sai Krishna, 2020, 2020 IEEE International Conference on Robotics and Automation (ICRA), P11353, DOI 10.1109/ICRA40945.2020.9197053
   BEGLEROVIC H, 2017, 2017 IEEE 20 INT C I, P1, DOI DOI 10.1109/ITSC.2017.8317768
   Bender P, 2014, IEEE INT VEH SYM, P420, DOI 10.1109/IVS.2014.6856487
   Calò A, 2020, IEEE INT CONF SOFTW, P375, DOI 10.1109/ICST46399.2020.00045
   Changwen Li, 2022, 2022 International Conference on Robotics and Automation (ICRA), P7738, DOI 10.1109/ICRA46639.2022.9811794
   Deshmukh JV, 2017, FORM METHOD SYST DES, V51, P5, DOI 10.1007/s10703-017-0286-7
   Ding WH, 2020, IEEE INT CONF ROBOT, P4314, DOI [10.1109/icra40945.2020.9197145, 10.1109/ICRA40945.2020.9197145]
   Dosovitskiy A., 2017, P 1 ANN C ROB LEARN, P1, DOI DOI 10.48550/ARXIV.1711.03938
   Dreossi T, 2019, LECT NOTES COMPUT SC, V11561, P432, DOI 10.1007/978-3-030-25540-4_25
   Foretellix Ltd, 2020, MEAS SCEN DESCR LANG
   Fremont DJ, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P63, DOI 10.1145/3314221.3314633
   Gambi A, 2022, 2022 FOURTH IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST 2022), P95, DOI 10.1109/AITest55621.2022.00022
   Gambi A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3338906.3338942
   Hauer F, 2019, IEEE INT C INTELL TR, P2950, DOI 10.1109/ITSC.2019.8917326
   Kaufmann D, 2021, THIRD IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST 2021), P118, DOI 10.1109/AITEST52744.2021.00032
   Klischat M, 2019, IEEE INT VEH SYM, P2352, DOI 10.1109/IVS.2019.8814230
   Lee CW, 2020, IEEE INT VEH SYM, P1317, DOI 10.1109/IV47402.2020.9304552
   Li GP, 2020, PROC INT SYMP SOFTW, P25, DOI 10.1109/ISSRE5003.2020.00012
   Majumdar R, 2021, LECT NOTES COMPUT SC, V12649, P172, DOI 10.1007/978-3-030-71500-7_9
   Maler O, 2004, LECT NOTES COMPUT SC, V3253, P152, DOI 10.1007/978-3-540-30206-3_12
   Menzel T, 2018, IEEE INT VEH SYM, P1821, DOI 10.1109/IVS.2018.8500406
   Mullins Galen E., 2017, 2017 IEEE International Conference on Robotics and Automation (ICRA), P1443, DOI 10.1109/ICRA.2017.7989173
   Mullins GE, 2018, IEEE INT CONF ROBOT, P5636
   Najm Wassim G, 2013, Technical Report DOT HS 811 732
   Neurohr C, 2020, IEEE INT VEH SYM, P121, DOI [10.1109/iv47402.2020.9304823, 10.1109/IV47402.2020.9304823]
   Nickovic D, 2020, LECT NOTES COMPUT SC, V12302, P564, DOI 10.1007/978-3-030-59152-6_34
   Nitsche P, 2017, ACCIDENT ANAL PREV, V107, P137, DOI 10.1016/j.aap.2017.07.011
   Paardekooper J.-P., 2019, PROC 26 INT TECH C E, P1
   Piazzoni A, 2021, THIRD IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST 2021), P143, DOI 10.1109/AITEST52744.2021.00035
   Queiroz R, 2019, IEEE INT VEH SYM, P287, DOI 10.1109/IVS.2019.8814107
   Roesener C, 2016, 2016 IEEE 19TH INTERNATIONAL CONFERENCE ON INTELLIGENT TRANSPORTATION SYSTEMS (ITSC), P1360, DOI 10.1109/ITSC.2016.7795734
   Rong GD, 2020, IEEE INT C INTELL TR, DOI 10.1109/itsc45102.2020.9294422
   Schutt B., 2020, PROC 23 ACMIEEE INT, P114, DOI 10.1145/3365438.3410933
   Tang Y, 2022, Arxiv, DOI arXiv:2206.09357
   Thorn Eric, 2018, A framework for automated driving system testable cases and scenarios
   Tuncali CE, 2020, IEEE T INTELL VEHICL, V5, P265, DOI 10.1109/TIV.2019.2955903
   Tuncali CE, 2018, IEEE INT VEH SYM, P1555
   Tuncali CE, 2018, DES AUT CON, DOI 10.1145/3195970.3199852
   Wang S, 2020, IEEE INT CONF AUTOM, P1053, DOI 10.1145/3324884.3416584
   Zeller A., 2019, The fuzzing book
   Zhao D, 2017, IEEE T INTELL TRANSP, V18, P595, DOI 10.1109/TITS.2016.2582208
   Zhou Y, 2023, ARXIV
NR 49
TC 1
Z9 1
U1 5
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2023
VL 49
IS 6
BP 3391
EP 3410
DI 10.1109/TSE.2023.3254142
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA J9KW5
UT WOS:001012752300004
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Gu, SH
   Rong, GP
   Ren, T
   Zhang, H
   Shen, HF
   Yu, YD
   Li, X
   Ouyang, J
   Chen, CA
AF Gu, Shenghui
   Rong, Guoping
   Ren, Tian
   Zhang, He
   Shen, Haifeng
   Yu, Yongda
   Li, Xian
   Ouyang, Jian
   Chen, Chunan
TI TrinityRCL: Multi-Granular and Code-Level Root Cause Localization Using
   Multiple Types of Telemetry Data in Microservice Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Microservice architectures; Telemetry; Measurement; Codes; Monitoring;
   Location awareness; Computer architecture; Root cause; telemetry data;
   microservices
AB The microservice architecture has been commonly adopted by large scale software systems exemplified by a wide range of online services. Service monitoring through anomaly detection and root cause analysis (RCA) is crucial for these microservice systems to provide stable and continued services. However, compared with monolithic systems, software systems based on the layered microservice architecture are inherently complex and commonly involve entities at different levels of granularity. Therefore, for effective service monitoring, these systems have a special requirement of multi-granular RCA. Furthermore, as a large proportion of anomalies in microservice systems pertain to problematic code, to timely troubleshoot these anomalies, these systems have another special requirement of RCA at the finest code-level. Microservice systems rely on telemetry data to perform service monitoring and RCA of service anomalies. The majority of existing RCA approaches are only based on a single type of telemetry data and as a result can only support uni-granular RCA at either application-level or service-level. Although there are attempts to combine metric and tracing data in RCA, their objective is to improve RCA's efficiency or accuracy rather than to support multi-granular RCA. In this article, we propose a new RCA solution TrinityRCL that is able to localize the root causes of anomalies at multiple levels of granularity including application-level, service-level, host-level, and metric-level, with the unique capability of code-level localization by harnessing all three types of telemetry data to construct a causal graph representing the intricate, dynamic, and nondeterministic relationships among the various entities related to the anomalies. By implementing and deploying TrinityRCL in a real production environment, we evaluate TrinityRCL against two baseline methods and the results show that TrinityRCL has a significant performance advantage in terms of accuracy at the same level of granularity with comparable efficiency and is particularly effective to support large-scale systems with massive telemetry data.
C1 [Gu, Shenghui; Rong, Guoping; Zhang, He; Yu, Yongda; Li, Xian] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Jiangsu, Peoples R China.
   [Ren, Tian; Ouyang, Jian; Chen, Chunan] Meituan, Beijing 100102, Peoples R China.
   [Shen, Haifeng] Australian Catholic Univ, Peter Faber Business Sch, HilstLab, Sydney, NSW 2060, Australia.
C3 Nanjing University; Australian Catholic University
RP Rong, GP (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Jiangsu, Peoples R China.
EM shenghui.gu@smail.nju.edu.cn; ronggp@nju.edu.cn; rentian@meituan.com;
   hezhang@nju.edu.cn; haifeng.shen@acu.edu.au; yuyongda@smail.nju.edu.cn;
   lixian-go@foxmail.com; ouyangjian@meituan.com; chunan.chen@meituan.com
RI Rong, Guoping/CAH-6145-2022
OI Ouyang, Jian/0000-0002-6834-0971
FU National Key Research and Development Program of China [2019YFE0105500];
   Research Council of Norway [309494]; Meituan; Key Research and
   Development Program of Jiangsu Province [BE2021002-2]; National Natural
   Science Foundation of China [62072227, 62202219]
FX This work was supported in part by the National Key Research and
   Development Program of China under Grant 2019YFE0105500, in part by the
   Research Council of Norway under Grant 309494, in part by the Meituan,
   the Key Research and Development Program of Jiangsu Province under Grant
   BE2021002-2, and in part by the National Natural Science Foundation of
   China under Grants 62072227 and 62202219.
CR Aggarwal P, 2021, LECT NOTES COMPUT SC, V12632, P137, DOI 10.1007/978-3-030-76352-7_17
   Andrews R, 2022, J BUS ANAL, V5, P51, DOI 10.1080/2573234X.2021.1947751
   [Anonymous], 2003, P 12 INT C WORLD WID
   Anu H, 2019, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSME.2019.00022
   Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Benesty J., 2009, NOISE REDUCTION SPEE, P1, DOI [10.1007/978-3-642-00296-0_5, DOI 10.1007/978-3-642-00296-05]
   Berndt D.J., 1994, AAAI 94 WORKSH KNOWL, V10, P359, DOI [10.5555/3000850.3000887, DOI 10.5555/3000850.3000887]
   Brandón A, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110432
   Chen LP, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P39, DOI 10.1109/ICSA.2018.00013
   Chen PF, 2019, IEEE T SERV COMPUT, V12, P214, DOI 10.1109/TSC.2016.2607739
   Chouakria AD, 2007, ADV DATA ANAL CLASSI, V1, P5, DOI 10.1007/s11634-006-0004-6
   Fowler SJ., 2016, Production-ready microservices
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Gan Y, 2019, TWENTY-FOURTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXIV), P19, DOI 10.1145/3297858.3304004
   Gatev R., 2021, INTRO DISTRIBUTED AP, P233, DOI [10.1007/978--1-4842-6998-5_12, DOI 10.1007/978--1-4842-6998-5_12]
   Gu SH, 2023, IEEE T SOFTWARE ENG, V49, P902, DOI 10.1109/TSE.2022.3166924
   He PJ, 2018, IEEE INT CONF AUTOM, P178, DOI 10.1145/3238147.3238193
   Huang LX, 2021, PROCEEDINGS OF THE 2021 ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC '21), P76, DOI 10.1145/3472883.3486994
   Ibidunmoye O, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2791120
   Jamshidi P, 2018, IEEE SOFTWARE, V35, P24
   Li H, 2021, IEEE T SOFTWARE ENG, V47, P2858, DOI 10.1109/TSE.2020.2970422
   Li H, 2018, EMPIR SOFTW ENG, V23, P2655, DOI 10.1007/s10664-018-9595-8
   Li ZY, 2021, INT WORKSH QUAL SERV, DOI 10.1109/IWQOS52092.2021.9521340
   Lin JJ, 2018, LECT NOTES COMPUT SC, V11236, P3, DOI 10.1007/978-3-030-03596-9_1
   Liu P, 2020, PROC INT SYMP SOFTW, P48, DOI 10.1109/ISSRE5003.2020.00014
   Liu XT, 2020, LECT NOTES COMPUT SC, V12470, P251, DOI 10.1007/978-3-030-64437-6_13
   Liu YY, 2013, P NATL ACAD SCI USA, V110, P2460, DOI 10.1073/pnas.1215508110
   Ma M, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P246, DOI 10.1145/3366423.3380111
   Marron M., 2018, ACM SIGPLAN Notices - DLS, V18, P25, DOI [DOI 10.1145/3276945.3276952, 10.1145/3393673, DOI 10.1145/3393673]
   Meng Y, 2020, 2020 IEEE/ACM 28TH INTERNATIONAL SYMPOSIUM ON QUALITY OF SERVICE (IWQOS), DOI 10.1109/iwqos49365.2020.9213058
   Myunghwan Kim, 2013, Performance Evaluation Review, V41, P93
   Pan J-Y, 2004, P 10 ACM SIGKDD INT, P653, DOI DOI 10.1145/1014052.1014135
   Pecchia A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P169, DOI 10.1109/ICSE.2015.145
   Rong GP, 2023, IEEE T DEPEND SECURE, V20, P2746, DOI 10.1109/TDSC.2022.3181143
   Rong GP, 2020, PROC INT SYMP SOFTW, P335, DOI 10.1109/ISSRE5003.2020.00039
   Rong GP, 2020, PROC IEEE INT CONF S, P12, DOI 10.1109/ICSME46990.2020.00012
   Rong GP, 2018, 2018 25TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC), P171, DOI 10.1109/ASWEC.2018.00031
   Soldani J, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3501297
   Sridharan C., 2018, Distributed Systems Observability
   WALKER AJ, 1974, ELECTRON LETT, V10, P127, DOI 10.1049/el:19740097
   Wang HZ, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P419, DOI 10.1109/ASE51524.2021.9678708
   Wang HZ, 2019, PROC VLDB ENDOW, V12, P1942, DOI 10.14778/3352063.3352105
   Wang P, 2018, 2018 18TH IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND GRID COMPUTING (CCGRID), P492, DOI 10.1109/CCGRID.2018.00076
   Waseem M, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P201, DOI 10.1145/3463274.3463337
   Weng JP, 2018, IEEE ACM T NETWORK, V26, P1646, DOI 10.1109/TNET.2018.2843805
   Wu L, 2020, IEEE IFIP NETW OPER, DOI 10.1109/noms47738.2020.9110353
   Yu GB, 2021, PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE 2021 (WWW 2021), P3087, DOI 10.1145/3442381.3449905
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Yuan D, 2012, ACM T COMPUT SYST, V30, DOI 10.1145/2110356.2110360
   Zhi C, 2019, PROC IEEE INT CONF S, P459, DOI 10.1109/ICSME.2019.00079
   Zhou X, 2021, IEEE T SOFTWARE ENG, V47, P243, DOI 10.1109/TSE.2018.2887384
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
NR 53
TC 2
Z9 2
U1 5
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2023
VL 49
IS 5
BP 3071
EP 3088
DI 10.1109/TSE.2023.3241299
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA G8MH8
UT WOS:000991628700003
DA 2024-07-18
ER

PT J
AU Aranda, AM
   Dieste, O
   Panach, JI
   Juristo, N
AF Aranda, Alejandrina M.
   Dieste, Oscar
   Panach, Jose Ignacio
   Juristo, Natalia
TI Effect of Requirements Analyst Experience on Elicitation Effectiveness:
   A Family of Quasi-Experiments
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Interviews; Software; Training; Task analysis; Software engineering;
   Programming profession; Software systems; Elicitation; requirements
   analyst; experience; effectiveness; problem domain; quasi-experiment
ID DELIBERATE PRACTICE; DOMAIN KNOWLEDGE; ACQUISITION; EXPERT;
   REPRESENTATION
AB Context. In software engineering there is a widespread assumption that experience improves requirements analyst effectiveness, although empirical studies demonstrate the opposite. Aim. Determine whether experience (interviews, eliciting, development, professional) influences requirements elicitation using interviews. Method. We ran 12 quasi-experiments recruiting 124 subjects in which we measured analyst effectiveness as the number of items (i.e., concepts, rules, processes) correctly elicited. The experimental task was to elicit requirements using the open interview technique followed by the consolidation of the elicited information in domains with which the analysts were and were not familiar. Results. In unfamiliar domains, interview experience, requirements experience, development experience, and professional experience does not have any relationship with analyst effectiveness. In familiar domains, effectiveness varies depending on the type of experience. Interview experience has a positive effect, whereas professional experience has a moderate negative effect. Requirements experience appears to have a moderately positive effect; however, the statistical power of the analysis is insufficient to be able to confirm this point. Development experience has no effect. Conclusion. Experience impacts analyst effectiveness differently depending on the problem domain type (familiar, unfamiliar). Generally, experience does not account for all the observed variability in effectiveness, so there are other influential factors.
C1 [Aranda, Alejandrina M.; Dieste, Oscar; Juristo, Natalia] Univ Politec Madrid, Escuela Tecn Super Ingn Informat, Boadilla Del Monte 28660, Spain.
   [Panach, Jose Ignacio] Univ Valencia, Dept Informat, Valencia 46100, Spain.
C3 Universidad Politecnica de Madrid; University of Valencia
RP Panach, JI (corresponding author), Univ Valencia, Dept Informat, Valencia 46100, Spain.
EM am.aranda@alumnos.upm.es; odieste@fi.upm.es; joigpana@uv.es;
   natalia@fi.upm.es
RI Dieste, Oscar/K-6193-2014
OI Dieste, Oscar/0000-0002-3060-7853; Panach Navarrete, Jose
   Ignacio/0000-0002-7043-6227
FU SREC [PGC2018-097265-B-I00]; Spanish Ministry of Science and Innovation
   [PID2021-123824OB-I00]; FEDER from Generalitat Valenciana; Itaipu
   Binacional, Paraguay [GV/2021/072]
FX This work was supported in part by under Project PGC2018-097265-B-I00,
   in part by SREC under Grant PID2021-123824OB-I00, in part by the Spanish
   Ministry of Science and Innovation and co-financed by FEDER under Grant
   GV/2021/072 from Generalitat Valenciana. Alejandrina Aranda holds a PhD
   grant from Itaipu Binacional, Paraguay.
CR Agarwal R., 1991, Knowledge Acquisition, V3, P421, DOI 10.1016/S1042-8143(05)80027-5
   Agarwal R., 1990, Journal of Management Information Systems, V7, P123
   Albayrak Ö, 2014, EMPIR SOFTW ENG, V19, P241, DOI 10.1007/s10664-012-9221-0
   [Anonymous], 2013, STAT ANAL DATA DISPL
   [Anonymous], 1995, SYSTEMS REQUIREMENTS
   [Anonymous], 1993, Software Requirements-objects, Functions and States
   Anwar F, 2011, COMM COM INF SC, V181, P600
   Aranda A. M., 2022, ZENODO, DOI [10.5281/zenodo.6139653, DOI 10.5281/ZENODO.6139653]
   Aranda AM, 2016, IEEE T SOFTWARE ENG, V42, P427, DOI 10.1109/TSE.2015.2494588
   Atkins C., 2013, 1522851 E TENN STAT
   Aurum A., 2005, Engineering and Managing Software Requirements
   Baltes S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P187, DOI 10.1145/3236024.3236061
   Belsley D., 1991, CONDITIONING DIAGNOS
   Browne G. J., 2014, COMPUTING HDB
   Browne GJ, 2001, J MANAGE INFORM SYST, V17, P223, DOI 10.1080/07421222.2001.11045665
   Burton A. M., 1988, ECAI 88. Proceedings of the 8th European Conference on Artificial Intelligence, P85
   Camerer Colin. F., 1997, RES JUDGMENT DECISIO, P195
   Campbell RL, 1996, J EXP THEOR ARTIF IN, V8, P277, DOI 10.1080/095281396147339
   Carrizo D, 2014, INFORM SOFTWARE TECH, V56, P644, DOI 10.1016/j.infsof.2014.01.009
   Catolino G, 2019, PROC IEEE INT CONF S, P223, DOI 10.1109/ICSME.2019.00034
   CHI MTH, 1981, COGNITIVE SCI, V5, P121, DOI 10.1207/s15516709cog0502_2
   Chow DL, 2015, PSYCHOTHERAPY, V52, P337, DOI 10.1037/pst0000015
   Christel M.G., 1992, Issues in requirements elicitation
   Cohen J., 1988, STAT POWER ANAL BEHA
   Colvin G., 1973, TALENT IS OVERRATED
   Colvin Geoffrey., 2008, Talent is Overrated: What Really Separates World-class Performers from Everybody Else
   Curtis B., 1984, Proceedings of the 7th International Conference on Software Engineering (cat. no. 84CH2011-5), P97
   de Groot A. D., 1965, THOUGHT CHOICE CHESS
   Debnath S, 2021, INT REQUIR ENG CONF, P233, DOI 10.1109/RE51729.2021.00028
   Ericsson K.A., 1991, GEN THEORY EXPERTISE
   Ericsson KA, 2006, CAMBRIDGE HANDBOOK OF EXPERTISE AND EXPERT PERFORMANCE, P683
   ERICSSON KA, 1993, PSYCHOL REV, V100, P363, DOI 10.1037/0033-295X.100.3.363
   Ericsson KA, 1996, ANNU REV PSYCHOL, V47, P273, DOI 10.1146/annurev.psych.47.1.273
   Everitt BS, 2010, CAMBRIDGE DICT STAT
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Falkenberg E. D., 1997, IFIP WG, V8
   Ferrari A, 2020, REQUIR ENG, V25, P417, DOI 10.1007/s00766-020-00334-0
   Ferrari A, 2019, INT REQUIR ENG CONF, P28, DOI 10.1109/RE.2019.00015
   Ferrari A, 2016, REQUIR ENG, V21, P333, DOI 10.1007/s00766-016-0249-3
   Field A., 2013, DISCOVERING STAT USI
   Geraci A., 1991, IEEE STANDARD COMPUT
   Gunter CA, 2000, IEEE SOFTWARE, V17, P37, DOI 10.1109/52.896248
   Hadar I, 2014, REQUIR ENG, V19, P143, DOI 10.1007/s00766-012-0163-2
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Helmstetter S., 2020, PROC 31 SYMPOS X DFX, P21
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Latorre R, 2014, IEEE T SOFTWARE ENG, V40, P381, DOI 10.1109/TSE.2013.2295827
   Li PL, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P700, DOI 10.1109/ICSE.2015.335
   MacDorman KF, 2011, INT J HUM-COMPUT INT, V27, P280, DOI 10.1080/10447318.2011.540472
   Marakas GM, 1998, INFORM SYST RES, V9, P37, DOI 10.1287/isre.9.1.37
   MCDANIEL MA, 1988, J APPL PSYCHOL, V73, P327, DOI 10.1037/0021-9010.73.2.327
   Mendongal MG, 2008, IEEE INT C ENG COMP, P203, DOI 10.1109/ICECCS.2008.38
   Miles J., 2001, APPL REGRESSION CORR
   Moreno-Montes de Oca I, 2015, INFORM SOFTWARE TECH, V58, P187, DOI 10.1016/j.infsof.2014.07.011
   Niknafs A., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P181, DOI 10.1109/RE.2012.6345802
   Niknafs A, 2017, EMPIR SOFTW ENG, V22, P80, DOI 10.1007/s10664-015-9416-2
   Niknafs A, 2013, S VIS LANG HUM CEN C, P279, DOI 10.1109/RE.2013.6636730
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Pacheco C, 2018, IET SOFTW, V12, P365, DOI 10.1049/iet-sen.2017.0144
   Pitts MG, 2004, J MANAGE INFORM SYST, V21, P203, DOI 10.1080/07421222.2004.11045795
   Rosenthal K., 2020, PROC INT C CONCEPTUA
   Schenk K. D., 1998, Journal of Management Information Systems, V15, P9
   Shrikanth NC, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09957-5
   Siegmund J, 2014, EMPIR SOFTW ENG, V19, P1299, DOI 10.1007/s10664-013-9286-4
   Sim S. E., 2006, UCIISR066 I SOFTW RE
   Sonnentag S, 2006, CAMBRIDGE HANDBOOK OF EXPERTISE AND EXPERT PERFORMANCE, P373
   Vitalari N. P., 1992, CHALLENGES STRATEGIE, P163
   WALZ DB, 1993, COMMUN ACM, V36, P63, DOI 10.1145/163430.163447
   YADAV SB, 1988, COMMUN ACM, V31, P1090, DOI 10.1145/48529.48533
   York D. G., 2000, AJ, V120, P1579, DOI [DOI 10.1086/301513, 10.1086/301513]
   Young R.R., 2002, The Journal of Defense Software Engineering, P9
   Zhang Z., 2007, SOFTWARE QUALITY MAN, P225
   Zowghi D, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P19, DOI 10.1007/3-540-28244-0_2
NR 73
TC 0
Z9 0
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2088
EP 2106
DI 10.1109/TSE.2022.3210076
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600038
OA hybrid
DA 2024-07-18
ER

PT J
AU Lin, B
   Wang, SW
   Liu, ZX
   Xia, X
   Mao, XG
AF Lin, Bo
   Wang, Shangwen
   Liu, Zhongxin
   Xia, Xin
   Mao, Xiaoguang
TI Predictive Comment Updating With Heuristics and AST-Path-Based Neural
   Learning: A Two-Phase Approach
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Deep learning; Pipelines; Syntactics; Predictive models;
   Licenses; Software maintenance; Comment update; deep learning; code
   embedding
ID CODE
AB Just-in-time comment update is a promising way to reduce the burden of developers during software maintenance and evolution. Existing approaches can be divided into two categories: the heuristic-based approach and the deep-learning-based approach. The heuristic-based approach is restricted to a specific type of comment updates (i.e., code-indicative updates), but performs well on such type. The effectiveness of deep-learning-based approach is limited but it can handle diverse comment updates. Considering the complementary advantages of existing approaches, an intuitive idea is to combine them for better performance. To investigate this idea, we first conduct a pre-study experiment which shows that to construct an effective comment updater by combining heuristic-based and deep-learning-based approaches, we need to tackle two main challenges: 1) the heuristic-based approach may bring side effects to cases which cannot be updated by it; and 2) the current deep-learning-based approach is with limited effectiveness. Then, we propose a novel two-phase approach named S_Coachto cope with these two challenges and effectively perform comment updates. In the first phase, S_Coachintegrates nine distinctive features identified through our large-scale empirical analysis into a predictive model, which can predict whether the contents of the comment updates can be found in the corresponding code changes, namely, the comment updates are code-indicative updates. If so, the updates are then generated by an off-the-shelf heuristic-based approach; otherwise, S_Coachleverages a deep learning model, which we specially designed for non-code-indicative updates, to infer the new comment based on the old comment and code change. Motivated by our manual observation on the limitation of existing approaches on non-code-indicative updates, our deep learning model adopts the Abstract Syntax Tree path technique, which can capture the program structure information for effectively embedding code changes. Our evaluation shows that our approach outperforms the state-of-the-art by around 20% with respect to the number of correct comments it generates. Via in-depth analysis, we illustrate the rationale of each design decision as well as point out potential directions.
C1 [Lin, Bo; Wang, Shangwen; Mao, Xiaoguang] Natl Univ Def Technol, Changsha 410073, Hunan, Peoples R China.
   [Wang, Shangwen; Liu, Zhongxin; Xia, Xin] Zhejiang Univ, Hangzhou 310027, Zhejiang, Peoples R China.
C3 National University of Defense Technology - China; Zhejiang University
RP Wang, SW (corresponding author), Natl Univ Def Technol, Changsha 410073, Hunan, Peoples R China.; Wang, SW; Liu, ZX (corresponding author), Zhejiang Univ, Hangzhou 310027, Zhejiang, Peoples R China.
EM linbo19@nudt.edu.cn; wangshangwen13@nudt.edu.cn; liu_zx@zju.edu.cn;
   xin.xia@acm.org; xgmao@nudt.edu.cn
RI Wang, Shangwen/IQW-8844-2023
OI Wang, Shangwen/0000-0003-1469-2063; Xia, Xin/0000-0002-6302-3256; Liu,
   Zhongxin/0000-0002-1981-1626; Lin, Bo/0000-0001-5905-4677
FU National Natural Science Foundation of China [61872445, 61672529];
   Zhejiang University Education Foundation Qizhen Scholar Foundation
FX This work was supported in part by the National Natural Science
   Foundation of China under Grants 61872445 and 61672529, and in part by
   the Zhejiang University Education Foundation Qizhen Scholar Foundation.
CR Alon U., 2019, PROC 7 INT C LEARN R
   Alon U, 2020, PR MACH LEARN RES, V119
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Alon U, 2018, ACM SIGPLAN NOTICES, V53, P404, DOI [10.1145/3192366.3192412, 10.1145/3296979.3192412]
   Alshammari A, 2021, PROC INT CONF SOFTW, P1572, DOI 10.1109/ICSE43902.2021.00140
   [Anonymous], 2021, RANDOM FOREST SCIKIT
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bao LF, 2021, IEEE T SOFTWARE ENG, V47, P1277, DOI 10.1109/TSE.2019.2918536
   Carvalho NR, 2015, J SYST SOFTWARE, V100, P117, DOI 10.1016/j.jss.2014.10.013
   Ciurumelea A, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P456, DOI [10.1109/SANER48275.2020.9054866, 10.1109/saner48275.2020.9054866]
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fan YR, 2020, IEEE T SOFTWARE ENG, V46, P495, DOI 10.1109/TSE.2018.2864217
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Gao ZP, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P218, DOI 10.1145/3468264.3468553
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gros D, 2020, IEEE INT CONF AUTOM, P746, DOI 10.1145/3324884.3416546
   Hata H, 2019, PROC INT CONF SOFTW, P1211, DOI 10.1109/ICSE.2019.00123
   He JJ, 2020, INT C PROGRAM COMPRE, P117, DOI 10.1145/3387904.3389263
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Ibrahim WM, 2012, J SYST SOFTWARE, V85, P2293, DOI 10.1016/j.jss.2011.09.019
   Jiang YJ, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P578, DOI 10.1145/3468264.3468616
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kleinbaum D.G., 2002, Logistic Regression
   Kovalenko Vladimir, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P13, DOI 10.1109/MSR.2019.00013
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Lin B, 2021, INT C PROGRAM COMPRE, P36, DOI 10.1109/ICPC52881.2021.00013
   Lin Tan, 2007, Operating Systems Review, V41, P145, DOI 10.1145/1323293.1294276
   Liu F, 2020, INT C PROGRAM COMPRE, P37, DOI 10.1145/3387904.3389261
   Liu ZY, 2018, P INT COMP SOFTW APP, P154, DOI 10.1109/COMPSAC.2018.00028
   Liu ZX, 2020, IEEE INT CONF AUTOM, P585, DOI 10.1145/3324884.3416581
   Liu ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P176, DOI 10.1109/ASE.2019.00026
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mastropaolo A, 2021, Arxiv, DOI arXiv:2107.10544
   Mockus A., 2014, PROC INT C SOFTW ENG
   Motwani M, 2018, EMPIR SOFTW ENG, V23, P2901, DOI [10.1007/s10664-017-9550-0, 10.1145/3180155.3182533]
   Nguyen S, 2020, PROC INT CONF SOFTW, P1372, DOI 10.1145/3377811.3380926
   Padioleau Y, 2009, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.2009.5070533
   Panichella S, 2016, PROC INT CONF SOFTW, P547, DOI 10.1145/2884781.2884847
   Panthaplackel S, 2021, AAAI CONF ARTIF INTE, V35, P427
   Panthaplackel S, 2020, AAAI CONF ARTIF INTE, V34, P8592
   Panthaplackel S, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P1853
   Pascarella L, 2019, EMPIR SOFTW ENG, V24, P1499, DOI 10.1007/s10664-019-09694-w
   Patil T. R., 2013, International Journal Of Computer Science And Applications, V6, P256
   Rani P, 2021, Arxiv, DOI arXiv:2108.10766
   Ratol IK, 2017, IEEE INT CONF AUTOM, P112, DOI 10.1109/ASE.2017.8115624
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   See A, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1073, DOI 10.18653/v1/P17-1099
   Shi ES, 2022, Arxiv, DOI arXiv:2107.07112
   Shibata Yusuxke, 1999, Byte Pair encoding: A text compression scheme that accelerates pattern matching
   Shin Hwei Tan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P260, DOI 10.1109/ICST.2012.106
   Siy H, 2001, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2001.972741
   Sobreira V, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P130, DOI 10.1109/SANER.2018.8330203
   Sridhara G., 2010, P IEEE ACM INT C AUT, P43, DOI DOI 10.1145/1858996.1859006
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   Storey MA, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P251, DOI 10.1145/1368088.1368123
   Sui YL, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428301
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Treude C, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1509, DOI 10.1145/3368089.3417045
   Viviani G, 2021, IEEE T SOFTWARE ENG, V47, P1402, DOI 10.1109/TSE.2019.2924006
   Wang S., 2019, 2019 ACMIEEE INT S E, P1, DOI DOI 10.1109/ESEM.2019.8870172
   Wang SW, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P741, DOI 10.1145/3468264.3468567
   Wang SW, 2020, IEEE INT CONF AUTOM, P968, DOI 10.1145/3324884.3416590
   Wang SW, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P260, DOI 10.1145/3319008.3319349
   Wang Shangwen, 2021, arXiv
   Wen FC, 2019, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2019.00019
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wong E, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P380, DOI 10.1109/SANER.2015.7081848
   Woodfield S. N., 1981, 5th International Conference on Software Engineering, P215
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Ying A. T., 2005, ACM SIGSOFT software engineering notes, V30, P1
   Zhang J., 2020, PROC WORKSHOP COMPUT
   Zhang J, 2019, IEEE T SOFTWARE ENG, V45, P898, DOI 10.1109/TSE.2018.2809496
   Zhang JF, 2021, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, ACL-IJCNLP 2021, P4454
   Zhang JY, 2021, Arxiv, DOI arXiv:2103.13426
   Zhou Y, 2020, IEEE T SOFTWARE ENG, V46, P1004, DOI 10.1109/TSE.2018.2872971
   Zhou Y, 2017, PROC INT CONF SOFTW, P27, DOI 10.1109/ICSE.2017.11
   Ziarko W., 1997, Fundamenta Informaticae, V30, P373
NR 80
TC 8
Z9 8
U1 3
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1640
EP 1660
DI 10.1109/TSE.2022.3185458
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600014
OA hybrid
DA 2024-07-18
ER

PT J
AU Zhou, NWL
   Zhou, H
   Hoppe, D
AF Zhou, Naweiluo
   Zhou, Huan
   Hoppe, Dennis
TI Containerization for High Performance Computing Systems: Survey and
   Prospects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Containers; Cloud computing; Engines; Security; Kernel; Hardware;
   Virtual machine monitors; AI; cloud computing; container; HPC; job
   scheduling; orchestration; resource management
ID RESOURCE-MANAGEMENT; ORCHESTRATION; DOCKER; CLOUD
AB Containers improve the efficiency in application deployment and thus have been widely utilised on Cloud and lately in High Performance Computing (HPC) environments. Containers encapsulate complex programs with their dependencies in isolated environments making applications more compatible and portable. Often HPC systems have higher security levels compared to Cloud systems, which restrict users' ability to customise environments. Therefore, containers on HPC need to include a heavy package of libraries making their size relatively large. These libraries usually are specifically optimised for the hardware, which compromises portability of containers. Per contra, a Cloud container has smaller volume and is more portable. Furthermore, containers would benefit from orchestrators that facilitate deployment and management of containers at a large scale. Cloud systems in practice usually incorporate sophisticated container orchestration mechanisms as opposed to HPC systems. Nevertheless, some solutions to enable container orchestration on HPC systems have been proposed in state of the art. This paper gives a survey and taxonomy of efforts in both containerisation and its orchestration strategies on HPC systems. It highlights differences thereof between Cloud and HPC. Lastly, challenges are discussed and the potentials for research and engineering are envisioned.
C1 [Zhou, Naweiluo; Zhou, Huan; Hoppe, Dennis] Univ Stuttgart, High Performance Comp Ctr Stuttgart HLRS, D-70569 Stuttgart, Germany.
C3 University of Stuttgart
RP Zhou, NWL (corresponding author), Univ Stuttgart, High Performance Comp Ctr Stuttgart HLRS, D-70569 Stuttgart, Germany.
EM naweiluo.zhou@ieee.org; huan.zhou@hlrs.de; hoppe@hlrs.de
FU European Union's Horizon 2020 Research and Innovation Programme
   [825355]; Ministry of Science, Research and the Arts of the State of
   Baden-Wurttemberg, Germany; H2020 - Industrial Leadership [825355]
   Funding Source: H2020 - Industrial Leadership
FX This work was supported in part by the European Union's Horizon 2020
   Research and Innovation Programme under Grant 825355 (CYBELE), and in
   part by the Ministry of Science, Research and the Arts of the State of
   Baden-Wurttemberg, Germany, through the Project CATALYST.
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Abraham S, 2020, IEEE INT CONF CLOUD, P284, DOI 10.1109/CLOUD49709.2020.00048
   Aldinucci M., 2017, Journal of Physics: Conference Series, V898, DOI 10.1088/1742-6596/898/8/082039
   AMBER, 2022, ASSISTED MODEL BUILD
   [Anonymous], 2018, CONT VIRT MACH BAR M
   [Anonymous], MOABHPC SUITE
   Azab A, 2017, INT CONF CLOUD ENG, P279, DOI 10.1109/IC2E.2017.52
   Bahls D., 2016, P CRAY US GROUP C
   Barika M, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3332301
   Beltre A, 2019, PROCEEDINGS OF CANOPIE-HPC 2019:2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON CONTAINERS AND NEW ORCHESTRATION PARADIGMS FOR ISOLATED ENVIRONMENTS IN HPC (CANOPIE-HPC), P11, DOI 10.1109/CANOPIE-HPC49598.2019.00007
   Benedicic L, 2020, LECT NOTES COMPUT SC, V11887, P46, DOI 10.1007/978-3-030-34356-9_5
   Bernstein D, 2014, IEEE CLOUD COMPUT, V1, P81, DOI 10.1109/MCC.2014.51
   Brayford D, 2019, IEEE HIGH PERF EXTR, DOI 10.1109/hpec.2019.8916576
   Buyya R., 2019, A Lightweight Container Middleware for Edge Cloud Architectures, P145
   Canon RS, 2019, PROCEEDINGS OF CANOPIE-HPC 2019:2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON CONTAINERS AND NEW ORCHESTRATION PARADIGMS FOR ISOLATED ENVIRONMENTS IN HPC (CANOPIE-HPC), P49, DOI 10.1109/CANOPIE-HPC49598.2019.00012
   Capit N, 2005, 2005 IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, VOLS 1 AND 2, P776
   Carnero J, 2018, PROCEEDINGS 2018 INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING & SIMULATION (HPCS), P431, DOI 10.1109/HPCS.2018.00075
   Casalicchio E., 2017, VALUETOOLS 2016 10 E, DOI [10.4108/eai.25-10-2016.2266649, DOI 10.4108/EAI.25-10-2016.2266649]
   Casalicchio E, 2020, CONCURR COMP-PRACT E, V32, DOI 10.1002/cpe.5668
   Casalicchio E, 2019, EAI SPRINGER INNOVAT, P221, DOI 10.1007/978-3-319-92378-9_14
   Cérin C, 2020, INT SYM COMP ARCHIT, P281, DOI 10.1109/SBAC-PAD49847.2020.00046
   Ciechanowicz P., 2009, The Munster Skeleton Library Muesli-A Comprehensive Overview
   Colonnelli I, 2021, IEEE T EMERG TOP COM, V9, P1723, DOI 10.1109/TETC.2020.3019202
   Cray XC 40, 2022, OVERVIW CRAY XC40 AR
   Di Nitto E, 2020, INT SYMP SYMB NUMERI, P133, DOI 10.1109/SYNASC51798.2020.00031
   Dirk M, 2014, LINUX J, V2014
   Dongarra J., 1979, LINPACK Users' Guide
   Dongarra J., 2015, HPCG BENCHMARK NEW M, V42
   Evangelinos C., 2008, CCA, P22
   Feitelson DG, 2005, LECT NOTES COMPUT SC, V3277, P1
   Feng Liu, 2018, SC18: International Conference for High Performance Computing, Networking, Storage and Analysis. Proceedings, P493, DOI 10.1109/SC.2018.00041
   Fernandez GP, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P138, DOI 10.1145/3297280.3297296
   Gantikow Holger, 2020, High Performance Computing. ISC High Performance 2020 International Workshops. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12321), P343, DOI 10.1007/978-3-030-59851-8_23
   Gantikow H, 2016, LECT NOTES COMPUT SC, V9945, P685, DOI 10.1007/978-3-319-46079-6_48
   Gao PX, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P249
   Gentzsch W, 2001, FIRST IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, PROCEEDINGS, P35, DOI 10.1109/CCGRID.2001.923173
   Gerhardt Lisa, 2017, Journal of Physics: Conference Series, V898, DOI 10.1088/1742-6596/898/8/082021
   Gough, 2009, GNU SCI LIB REFERENC
   Gropp W., 1994, USING MPI PORTABLE P
   Guangchao Hu, 2019, 2019 IEEE 21st International Conference on High Performance Computing and Communications; IEEE 17th International Conference on Smart City; IEEE 5th International Conference on Data Science and Systems (HPCC/SmartCity/DSS). Proceedings, P2587, DOI 10.1109/HPCC/SmartCity/DSS.2019.00362
   Hale JS, 2017, COMPUT SCI ENG, V19, P40, DOI 10.1109/MCSE.2017.2421459
   Higgins J, 2015, LECT NOTES COMPUT SC, V9137, P506, DOI 10.1007/978-3-319-20119-1_36
   Hightower K., 2017, Kubernetes: up and running dive into future of infrastructure, V1st
   Hindman B., 2011, S NETW SYST DES IMPL
   Hoeb M, 2020, LECT NOTES COMPUT SC, V12137, P206, DOI 10.1007/978-3-030-50371-0_15
   Hovestadt M, 2003, LECT NOTES COMPUT SC, V2862, P1
   HPGMG, 2022, HIGH PERFORMANCE GEO
   Huber D., 2022, PROC 29 EUR
   Huerta EA, 2020, J BIG DATA-GER, V7, DOI 10.1186/s40537-020-00361-2
   Huttermann M., 2012, DevOps for Developers
   IMB, 2022, INTR INT MPI BENCHM
   Jackson D., 2001, LNCS, P87, DOI DOI 10.1007/3-540-45540-X
   Jouppi NP, 2017, 44TH ANNUAL INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE (ISCA 2017), P1, DOI 10.1145/3079856.3080246
   Julian S, 2016, PROCEEDINGS OF XSEDE16: DIVERSITY, BIG DATA, AND SCIENCE AT SCALE, DOI 10.1145/2949550.2949562
   Kandiraju G, 2014, IBM J RES DEV, V58, DOI 10.1147/JRD.2014.2298133
   Khan A, 2017, IEEE CLOUD COMPUT, V4, P42
   Khan M, 2018, INT CONF CLOUD ENG, P392, DOI 10.1109/IC2E.2018.00074
   Klusacek D., 2015, Proceedings of the 24th International Symposium on High-Performance Parallel and Distributed Computing, P203
   Kurtzer GM, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0177459
   Kyunam Cho, 2019, 2019 IEEE International Conference on Computational Science and Engineering (CSE) and IEEE International Conference on Embedded and Ubiquitous Computing (EUC). Proceedings, P266, DOI 10.1109/CSE/EUC.2019.00059
   Leite L, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3359981
   Maenhaut PJ, 2020, J NETW SYST MANAG, V28, P197, DOI 10.1007/s10922-019-09504-0
   Manvi SS, 2014, J NETW COMPUT APPL, V41, P424, DOI 10.1016/j.jnca.2013.10.004
   Marshall P., 2013, XRDS CROSSROADS ACM, V19
   Martin JP, 2018, HUM-CENT COMPUT INFO, V8, DOI 10.1186/s13673-017-0124-3
   Mateescu G, 2011, FUTURE GENER COMP SY, V27, P440, DOI 10.1016/j.future.2010.11.003
   Mayer R, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3363554
   McLay R., 2011, 2011 INT C HIGH PERF, P1, DOI [10.1145/2063348.2063360, DOI 10.1145/2063348.2063360]
   Message Passing Interface Forum, 2021, MPI: A message-passing interface standard version 4.0
   Morabito R, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON CLOUD ENGINEERING (IC2E 2015), P386, DOI 10.1109/IC2E.2015.74
   Mu'alem AW, 2001, IEEE T PARALL DISTR, V12, P529, DOI 10.1109/71.932708
   Muli J., 2018, JENKINS FUNDAMENTALS
   Muscianisi G, 2020, LECT NOTES COMPUT SC, V11887, P61, DOI 10.1007/978-3-030-34356-9_6
   Nadgowda S, 2017, INT CON DISTR COMP S, P2137, DOI 10.1109/ICDCS.2017.91
   NAMD, 2022, SIM MOL DYN
   Narkhede N., 2017, Kafka The Definitive Guide-Realtime data and stream processing at scale
   Netto MAS, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3150224
   Nguyen N. D., 2017, 2017 IEEE 7th Annual Computing and Communication Workshop and Conference (CCWC), P1
   Olivier Terzo J. M., 2022, HPC BIG DATA AI CONV, V1st
   Pahl C, 2019, IEEE T CLOUD COMPUT, V7, P677, DOI 10.1109/TCC.2017.2702586
   Pandey S, 2014, INT CONF COMM SYST, P555, DOI 10.1109/CSNT.2014.117
   Paszke A, 2019, ADV NEUR IN, V32
   Piras ME, 2020, LECT NOTES COMPUT SC, V11887, P25, DOI 10.1007/978-3-030-34356-9_3
   Prabhakaran S., 2016, THESIS TU DARMSTADT
   Priedhorsky R, 2017, SC'17: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, DOI 10.1145/3126908.3126925
   Reuther A, 2018, J PARALLEL DISTR COM, V111, P76, DOI 10.1016/j.jpdc.2017.06.009
   Rodriguez MA, 2019, SOFTWARE PRACT EXPER, V49, P698, DOI 10.1002/spe.2660
   Rosado T, 2014, PROCEEDINGS OF THE 18TH INTERNATIONAL DATABASE ENGINEERING AND APPLICATIONS SYMPOSIUM (IDEAS14), P366, DOI 10.1145/2628194.2628195
   Rudyy O, 2019, INT PARALL DISTRIB P, P567, DOI 10.1109/IPDPS.2019.00066
   Ruhela A., 2020, PROC HPC STATE PRACT
   Allen BS, 2020, Arxiv, DOI arXiv:2007.10290
   S.K. S, 2017, PRACTICAL LXC LXD LI, V1st
   Saha P., 2018, P PRACT EXP ADV RES, P1
   Sammons G., 2016, EXPLORING ANSIBLE 2
   Sampedro Z., 2018, Proceedings of the Practice and Experience on Advanced Research Computing, P1, DOI [DOI 10.1145/3219104.3219147, 10.1145/3219104.3219147]
   Sefraoui O., 2012, INT J COMPUTER APPL, V55, P38, DOI 10.5120/8738-2991
   Sergeev A, 2018, Arxiv, DOI arXiv:1802.05799
   Shafie Khorassani K., 2022, PRACTICE EXPERIENCE
   Sharma P, 2016, MIDDLEWARE '16: PROCEEDINGS OF THE 17TH INTERNATIONAL MIDDLEWARE CONFERENCE, DOI 10.1145/2988336.2988337
   Shen ZM, 2019, TWENTY-FOURTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXIV), P121, DOI 10.1145/3297858.3304016
   Somasundaram TS, 2014, FUTURE GENER COMP SY, V34, P47, DOI 10.1016/j.future.2013.12.024
   Soppelsa F., 2016, Native Docker Clustering with Swarm
   Souza A, 2019, IEEE ACM INT SYMP, P399, DOI [10.1109/CCGRID.2019.00054, 10.1109/CCGRID.2019.000.54]
   Staples G, 2006, Proceedings of the 2006 ACM/IEEE conference on Supercomputing, DOI 10.1145/1188455.1188464
   Sun W, 2007, LECT NOTES COMPUT SC, V4749, P558
   Tosatto A, 2015, 2015 9TH INTERNATIONAL CONFERENCE ON COMPLEX, INTELLIGENT, AND SOFTWARE INTENSIVE SYSTEMS CISIS 2015, P70, DOI 10.1109/CISIS.2015.35
   VASP, 2022, AT SCAL MAT MOD
   Vavilapalli V.K., P 4 ANN S CLOUD COMP
   Vayghan LA, 2018, PROCEEDINGS 2018 IEEE 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING (CLOUD), P970, DOI 10.1109/CLOUD.2018.00148
   White T., 2012, HADOOP DEFINITIVE GU
   Wofford Q., 2021, PROC 11 WORKSHOP SCI
   Wrede F., 2017, PROC S APPL COMPUT
   WRF, 2022, WEATHER RES FORECAST
   Yi GM, 2019, J SUPERCOMPUT, V75, P4248, DOI 10.1007/s11227-019-02937-z
   Yoo AB, 2003, LECT NOTES COMPUT SC, V2862, P44
   Younge AJ, 2017, INT CONF CLOUD COMP, P74, DOI 10.1109/CloudCom.2017.40
   Zaharia M, 2016, COMMUN ACM, V59, P56, DOI 10.1145/2934664
   Zhang J, 2017, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON UTILITY AND CLOUD COMPUTING (UCC' 17), P151, DOI 10.1145/3147213.3147231
   Zhang J, 2016, PROC INT CONF PARAL, P268, DOI 10.1109/ICPP.2016.38
   Zhong ZH, 2020, ACM T INTERNET TECHN, V20, DOI 10.1145/3378447
   Zhou N., 2021, SUSTAINED SIMULATION
   Zhou N., 2022, CYBELE HYBRID ARCHIT
   Zhou NWL, 2021, J CLOUD COMPUT-ADV S, V10, DOI 10.1186/s13677-021-00231-z
   Zhou NWL, 2020, IEEE INT CONF CLOUD, P34, DOI 10.1109/CLOUD49709.2020.00017
   ZHOU SN, 1993, SOFTWARE PRACT EXPER, V23, P1305, DOI 10.1002/spe.4380231203
NR 125
TC 11
Z9 11
U1 3
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2722
EP 2740
DI 10.1109/TSE.2022.3229221
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600074
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Berntzen, M
   Hoda, R
   Moe, NB
   Stray, V
AF Berntzen, Marthe
   Hoda, Rashina
   Moe, Nils Brede
   Stray, Viktoria
TI A Taxonomy of Inter-Team Coordination Mechanisms in Large-Scale Agile
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Taxonomy; Task analysis; Agile software development; Teamwork;
   Protocols; Planning; Large-scale agile; agile software development;
   inter-team coordination; case study; taxonomy
ID SOFTWARE-DEVELOPMENT; PRODUCT OWNER; KNOWLEDGE; COMMUNICATION;
   ORGANIZATIONS; CHALLENGES; WORK
AB In large-scale agile software development, many teams work together to achieve overarching project goals. The more teams, the greater the coordination requirements. Despite the growing popularity of large-scale agile, inter-team coordination is challenging to practice and research. We conducted a case study over 1.5 years in a large-scale software development firm to better understand which inter-team coordination mechanisms are used in large-scale agile and how they support inter-team coordination. Based on a thematic analysis of 31 interviews, 113 hours of observations, and supplemental material, we identified 27 inter-team coordination mechanisms. From this, we offer the following contributions. First, we propose a taxonomy of inter-team coordination with three categories: coordination meetings, such as communities of practice, inter-team stand-ups, and retrospectives; coordination roles, such as the program architects and the platform team; and coordination tools and artefacts, such as Slack and JIRA as well as inter-team task boards, product backlogs, and roadmaps. Second, the coordination mechanisms displayed combinations of four key characteristics, technical, organizational, physical, and social (TOPS), which form the basis of the TOPS framework to capture the multifaceted characteristics of coordination mechanisms. Technical relates to the software product and/or technical tools supporting software development. Organizational pertains to the structural aspects of the organization. Physical refers to tangible or spatial characteristics. Social captures interpersonal and community-based characteristics. Finally, the taxonomy and the TOPS framework provide a knowledge base and a structured approach for researchers to study as well as for software practitioners to understand and improve inter-team coordination in large-scale agile.
C1 [Berntzen, Marthe; Stray, Viktoria] Univ Oslo, Dept Informat, N-0373 Oslo, Norway.
   [Hoda, Rashina] Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
   [Moe, Nils Brede; Stray, Viktoria] SINTEF Digital, N-7645 Trondheim, Norway.
C3 University of Oslo; Monash University; SINTEF
RP Berntzen, M (corresponding author), Univ Oslo, Dept Informat, N-0373 Oslo, Norway.
EM marthenb@ifi.uio.no; rashina@gmail.com; nils.b.moe@sintef.no;
   stray@ifi.uio.no
RI Stray, Viktoria/E-9563-2016; Berntzen, Marthe/GYV-1266-2022; Moe, Nils
   Brede/AAD-8183-2021
OI Stray, Viktoria/0000-0002-6032-2074; Berntzen,
   Marthe/0000-0003-1455-2562; Hoda, Rashina/0000-0001-5147-8096; Moe, Nils
   Brede/0000-0003-2669-0778
FU Research Council of Norway through theresearch project Autonomous teams
   (A-teams) [267704]; Norwe-gian Centre for Research Data
FX This work was supported by the Research Council of Norway through
   theresearch project Autonomous teams (A-teams) Project under Grant
   267704.This work involved human subjects or animals in its research.
   Approval of allethical and experimental procedures and protocols was
   granted by The Norwe-gian Centre for Research Data
CR Alter S., 2019, COMPLEX SYST INFORM, P1
   Bass JM, 2019, IEEE SOFTWARE, V36, P58, DOI 10.1109/MS.2018.2885524
   Bass JM, 2015, EMPIR SOFTW ENG, V20, P1525, DOI 10.1007/s10664-014-9322-z
   Batra D, 2010, COMMUN ASSOC INF SYS, V27, P379
   Berntzen M, 2021, LECT NOTES BUS INF P, V419, P140, DOI 10.1007/978-3-030-78098-2_9
   Berntzen M, 2021, INT J ELECTRON COMM, V25, P7, DOI 10.1080/10864415.2021.1846851
   Berntzen M, 2019, LECT NOTES BUS INF P, V355, P121, DOI 10.1007/978-3-030-19034-7_8
   Bick S, 2018, IEEE T SOFTWARE ENG, V44, P932, DOI 10.1109/TSE.2017.2730870
   Bider I., 2017, Proceedings of the 3rd International Workshop on Socio-Technical Perspective in IS development (STPIS'17), P90
   Bostrom RP., 1977, MIS Quarterly, V1, P11, DOI [10.2307/248710, DOI 10.2307/249019, DOI 10.2307/248710, 10.2307/249019]
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Brede N, 2018, IJISPM-INT J INF SYS, V6, P45, DOI 10.12821/ijispm060303
   Carstensen P. H., 1996, Computer Supported Cooperative Work (CSCW), V5, P387, DOI 10.1007/BF00136712
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   Conboy K, 2019, IEEE SOFTWARE, V36, P44, DOI 10.1109/MS.2018.2884865
   Crang M., 2007, DOING ETHNOGRAPHIES
   Crowston K., 2003, ORG BUSINESS KNOWLED, P43
   Crowston K., 2015, Human-computer interaction and management information systems: Foundations, P134
   Digital.ai, 2021, 15 ANN STAT AG REP 2
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dingsoyr T, 2019, IEEE SOFTWARE, V36, P30, DOI 10.1109/MS.2018.2884884
   Dingsoyr T, 2018, PROJ MANAG J, V49, P64, DOI 10.1177/8756972818798980
   Dingsoyr T, 2018, EMPIR SOFTW ENG, V23, P490, DOI 10.1007/s10664-017-9524-2
   Dingsoyr T, 2014, LECT NOTES COMPUT SC, V8892, P273, DOI 10.1007/978-3-319-13835-0_20
   Edison H, 2022, IEEE T SOFTWARE ENG, V48, P2709, DOI 10.1109/TSE.2021.3069039
   Espinosa JA, 2007, J MANAGE INFORM SYST, V24, P135, DOI 10.2753/MIS0742-1222240104
   Espinosa J.Alberto., 2004, Team Cognition: Understanding the Factors That Drive Process and Performance, P107, DOI [DOI 10.1037/10690-006, 10.1037/10690-000, DOI 10.1037/10690-000]
   Florea R, 2019, SOFTWARE QUAL J, V27, P1449, DOI 10.1007/s11219-019-09462-5
   Fosslien L., 2020, Harvard Business Review, P1
   Fowler M., 2001, Software Development, V9, P28
   Gittell J.H., 2006, RELATIONAL PERSPECTI, P74, DOI DOI 10.4337/9781781950548.00011
   Giuffrida R, 2015, INFORM SOFTWARE TECH, V63, P11, DOI 10.1016/j.infsof.2015.02.013
   Glisczinski D, 2018, J TRANSFORM EDUC, V16, P175, DOI 10.1177/1541344618777367
   Govers M., 2018, MANAGEMENT STUDIES, V6, P177, DOI [10.17265/2328-2185/2018.03.003, DOI 10.17265/2328-2185/2018.03.003]
   GUBA EG, 1981, ECTJ-EDUC COMMUN TEC, V29, P75
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Hoda R, 2022, IEEE T SOFTWARE ENG, V48, P3808, DOI 10.1109/TSE.2021.3106280
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   Hussain W, 2022, IEEE T SOFTWARE ENG, V48, P5158, DOI 10.1109/TSE.2022.3140230
   Jarzabkowski PA, 2012, ORGAN SCI, V23, P907, DOI 10.1287/orsc.1110.0693
   Kalenda M, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1954
   Kettunen P, 2017, EUR J FUTURES RES, V5, DOI 10.1007/s40309-017-0123-7
   Kim H, 2015, TELECOMMUN POLICY, V39, P944, DOI 10.1016/j.telpol.2015.09.001
   Larman C., 2016, Large-Scale Scrum: More with LeSS
   Leffingwell D., 2018, SAFE 4 5 REFERENCE G
   Lewis K, 2003, J APPL PSYCHOL, V88, P587, DOI 10.1037/0021-9010.88.4.587
   Malone TW, 1999, MANAGE SCI, V45, P425, DOI 10.1287/mnsc.45.3.425
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   McChesney IR, 2004, INFORM SOFTWARE TECH, V46, P473, DOI 10.1016/j.infsof.2003.10.001
   Nickerson RC, 2013, EUR J INFORM SYST, V22, P336, DOI 10.1057/ejis.2012.26
   Niven P.R. y., 2016, Objectives and key results: Driving focus, alignment, and engagement with OKRs
   Okhuysen GA, 2009, ACAD MANAG ANN, V3, P463, DOI 10.1080/19416520903047533
   Orlikowski WJ, 2008, ACAD MANAG ANN, V2, P433, DOI 10.1080/19416520802211644
   Paasivaara M, 2019, IEEE SOFTWARE, V36, P64, DOI 10.1109/MS.2018.2886827
   Paasivaara M, 2018, EMPIR SOFTW ENG, V23, P2550, DOI 10.1007/s10664-017-9555-8
   Petre M, 2020, IEEE SOFTWARE, V37, P21, DOI 10.1109/MS.2020.3014413
   Ralph P., 2021, ACM SIGSOFT Software Engineering Notes, V46, P19, DOI DOI 10.1145/3437479.3437483
   Ralph P, 2020, EMPIR SOFTW ENG, V25, P4927, DOI 10.1007/s10664-020-09875-y
   Ralph P, 2019, IEEE T SOFTWARE ENG, V45, P712, DOI 10.1109/TSE.2018.2796554
   Rico R, 2008, ACAD MANAGE REV, V33, P163
   Rigby DK, 2018, HARVARD BUS REV, V96, P88
   Robson C., 2016, REAL WORLD RES RESOU
   Ruhe G.C. Wohlin., 2014, SOFTWARE PROJECT MAN
   Russo D, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3464938
   Russo D, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09945-9
   Sablis A, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2297
   Salas E, 2005, SMALL GR RES, V36, P555, DOI 10.1177/1046496405277134
   Schmidt K., 1996, Computer Supported Cooperative Work (CSCW), V5, P155, DOI 10.1007/BF00133655
   Sharp H, 2016, IEEE T SOFTWARE ENG, V42, P786, DOI 10.1109/TSE.2016.2519887
   Shastri Y, 2021, J SYST SOFTWARE, V173, DOI 10.1016/j.jss.2020.110871
   Smite D, 2021, LECT NOTES BUS INF P, V419, P3, DOI 10.1007/978-3-030-78098-2_1
   Smite D, 2019, IEEE SOFTWARE, V36, P51, DOI 10.1109/MS.2018.2886178
   Smite D, 2014, EMPIR SOFTW ENG, V19, P105, DOI 10.1007/s10664-012-9217-9
   Storey MA, 2020, EMPIR SOFTW ENG, V25, P4097, DOI 10.1007/s10664-020-09858-z
   Stray V, 2022, P 55 HAW INT C SYST
   Stray V, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110717
   Stray V, 2016, J SYST SOFTWARE, V114, P101, DOI 10.1016/j.jss.2016.01.004
   Strode DE, 2016, INFORM SYST FRONT, V18, P23, DOI 10.1007/s10796-015-9574-1
   Strode DE, 2012, J SYST SOFTWARE, V85, P1222, DOI 10.1016/j.jss.2012.02.017
   Thompson J.D., 2011, Organizations in action: Social science bases of administrative theory
   VANDEVEN AH, 1976, AM SOCIOL REV, V41, P322
   Walsham G, 2006, EUR J INFORM SYST, V15, P320, DOI 10.1057/palgrave.ejis.3000589
   Wenger E., 2002, Cultivating Communities of Practice: A Guide to Managing Knowledge
   Williams L, 2003, COMPUTER, V36, P39, DOI 10.1109/MC.2003.1204373
   Yang C, 2016, J SYST SOFTWARE, V111, P157, DOI 10.1016/j.jss.2015.09.028
   Zaitsev A, 2020, INFORM ORGAN-UK, V30, DOI 10.1016/j.infoandorg.2020.100288
NR 86
TC 16
Z9 16
U1 7
U2 28
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 699
EP 718
DI 10.1109/TSE.2022.3160873
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900013
OA Green Submitted, Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Zhao, YJ
   Li, L
   Wang, HY
   He, Q
   Grundy, J
AF Zhao, Yanjie
   Li, Li
   Wang, Haoyu
   He, Qiang
   Grundy, John
TI APIMatchmaker: Matching the Right APIs for Supporting the Development of
   Android Apps
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Software; Java; Training; Predictive models; Collaborative
   filtering; Redundancy; Android; API; recommendation; collaborative
   filtering; apimatchmaker
ID RECOMMENDATION
AB Android developers are often faced with the need to learn how to use different APIs suitable for their projects. Automated API recommendation approaches have been invented to help fill this gap, and these have been demonstrated to be useful to some extent. Unfortunately, most state-of-the-art works are not proposed for Android developers, and the ones dedicated to Android app development often suffer from high redundancy and poor run-time performance, or do not target the problem of recommending API usage patterns. To address this gap we propose to the community a new tool, namely APIMatchmaker, to recommend API usages by learning directly from similar real-world Android apps. Unlike existing recommendation approaches, which leverage a single context to find similar projects, we innovatively introduce a multi-dimensional, context-aware, collaborative filtering approach to better achieve the purpose. Specifically, in addition to code similarity, we also take app descriptions (or topics) into consideration to ensure that similar apps also provide similar functions. We evaluate APIMatchmaker on a large number of real-world Android apps and observe that APIMatchmaker yields a high success rate in recommending APIs for Android apps under development, and it is also able to outperform the state-of-the-art.
C1 [Zhao, Yanjie; Li, Li; Grundy, John] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Wang, Haoyu] Huazhong Univ Sci & Technol, Sch Cyber Sci & Engn, Wuhan 430074, Hubei, Peoples R China.
   [He, Qiang] Swinburne Univ Technol, Fac Sci Engn & Technol, Hawthorn, Vic 3122, Australia.
C3 Monash University; Huazhong University of Science & Technology;
   Swinburne University of Technology
RP Li, L (corresponding author), Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
EM Yanjie.Zhao@monash.edu; li.li@monash.edu; haoyuwang@hust.edu.cn;
   qhe@swin.edu.au; john.grundy@monash.edu
RI Li, Chun/KBC-9591-2024; Li, Li/AAR-3316-2020; tian, ye/KGL-6485-2024;
   Zhao, Yanjie/HNJ-6191-2023; Yu, Chongxiu/KDM-7354-2024; Grundy,
   John/I-6681-2012
OI Zhao, Yanjie/0000-0001-8793-5367; Yu, Chongxiu/0000-0002-8221-6221;
   Grundy, John/0000-0003-4928-7076; Li, Li/0000-0003-2990-1614
FU ARC [FL190100035, DE200100016];  [DP200100020]
FX & nbsp;This work was supported in part by ARC Laureate Fellowship under
   Grant FL190100035, in part by ARC Discovery Early Career Researcher
   Award (DECRA) Project under Grant DE200100016, and in part by Discovery
   Project under Grant DP200100020.
CR Aggarwal C.C., 2014, Frequent Pattern Mining, P19, DOI [10.1007/978-3-319- 07821-2_2, 10.1007/978-3-319-07821-2_2]
   Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   [Anonymous], 2017, Proceedings of the 9th Asia-Pacific Symposium on Internetware-Internetware'17, DOI DOI 10.23919/EETA.2017.7993206
   APIMatchmaker, 2021, DAT APIMATCHMAKER
   Arzt Steven, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P13, DOI 10.1109/MOBILESoft.2017.2
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Azad S, 2017, ACM T SOFTW ENG METH, V25, DOI 10.1145/2990497
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   Brusilovski P., 2007, The Adaptive Web: Methods and Strategies of Web Personalization, V4321
   Cai HP, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P216, DOI 10.1145/3293882.3330564
   Chan W., 2012, PROC ACM SIGSOFT 20, P1, DOI DOI 10.1145/2393596.2393606
   Chen A, 2005, LECT NOTES COMPUT SC, V3479, P244, DOI 10.1007/11426646_23
   Chen CY, 2016, IEEE INT CONF AUTOM, P834, DOI 10.1145/2970276.2970290
   Coppola R, 2017, P 13 INT C PRED MOD, P22, DOI [10.1145/3127005.3127008, DOI 10.1145/3127005.3127008]
   Dong SK, 2018, L N INST COMP SCI SO, V254, P172, DOI 10.1007/978-3-030-01701-9_10
   Fowkes J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P254, DOI 10.1145/2950290.2950319
   Gu XD, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P602, DOI 10.1109/ASE.2019.00061
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   He Q, 2022, IEEE T SOFTWARE ENG, V48, P150, DOI 10.1109/TSE.2020.2982154
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Jiang H, 2019, IEEE T SERV COMPUT, V12, P34, DOI 10.1109/TSC.2016.2592909
   Kim K, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P946, DOI 10.1145/3180155.3180187
   Lam P., 2011, P CET US COMP INFR W, V15, P35
   Li L, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P153, DOI 10.1145/3213846.3213857
   Li L, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P584, DOI 10.1109/SANER.2016.51
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Li MH, 2017, PROC INT CONF SOFTW, P335, DOI 10.1109/ICSE.2017.38
   Liu P, 2020, IEEE WORK CONF MIN S, P548, DOI 10.1145/3379597.3387503
   Ma Z, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P653, DOI 10.1145/2889160.2889178
   Mcmillan C, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522930
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Moreno L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P880, DOI 10.1109/ICSE.2015.98
   Nguyen PT, 2021, IEEE T SOFTWARE ENG, V48, P2417, DOI 10.1109/TSE.2021.3059907
   Nguyen PT, 2019, PROC INT CONF SOFTW, P1050, DOI 10.1109/ICSE.2019.00109
   Nie LM, 2016, IEEE T SERV COMPUT, V9, P771, DOI 10.1109/TSC.2016.2560165
   Niu HR, 2017, J SYST SOFTWARE, V129, P127, DOI 10.1016/j.jss.2016.07.026
   Omar C, 2012, PROC INT CONF SOFTW, P859, DOI 10.1109/ICSE.2012.6227133
   Omori T., 2015, INF MEDIA TECHNOL, V10, P210
   Raghothaman M, 2016, PROC INT CONF SOFTW, P357, DOI 10.1145/2884781.2884808
   Rahman MM, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P349, DOI 10.1109/SANER.2016.80
   Rasthofer S, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23066
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Roos P, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P757, DOI 10.1109/ICSE.2015.240
   Sch_afer M., 2013, RC25359 NAN TU
   Sun ZB, 2020, APPL SOFT COMPUT, V90, DOI 10.1016/j.asoc.2020.106163
   Nguyen T, 2016, PROC INT CONF SOFTW, P416, DOI 10.1145/2884781.2884873
   Nguyen TT, 2015, IEEE INT CONF AUTOM, P795, DOI 10.1109/ASE.2015.109
   Thung F, 2017, IEEE TETCI, V1, P145, DOI 10.1109/TETCI.2017.2699222
   Thung F, 2013, IEEE INT CONF AUTOM, P290, DOI 10.1109/ASE.2013.6693088
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Wu JW, 2017, SCI CHINA INFORM SCI, V60, DOI 10.1007/s11432-017-9058-0
   Xia ZL, 2017, 6TH INTERNATIONAL WORKSHOP ON SOFTWARE MINING (SOFTWAREMINING), P24, DOI 10.1109/SOFTWAREMINING.2017.8100850
   Yuan WZ, 2019, INFORM SOFTWARE TECH, V107, P30, DOI 10.1016/j.infsof.2018.10.010
   Yuan WZ, 2018, PROC IEEE ACM INT C, P364, DOI 10.1145/3183440.3195011
   Zhang HY, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P956, DOI 10.1145/2950290.2983955
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
NR 57
TC 12
Z9 12
U1 2
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 113
EP 130
DI 10.1109/TSE.2022.3146831
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA L1HD8
UT WOS:001020827200006
DA 2024-07-18
ER

PT J
AU Kannengiesser, N
   Lins, S
   Sander, C
   Winter, K
   Frey, H
   Sunyaev, A
AF Kannengiesser, Niclas
   Lins, Sebastian
   Sander, Christian
   Winter, Klaus
   Frey, Hellmuth
   Sunyaev, Ali
TI Challenges and Common Solutions in Smart Contract Development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Smart contracts; Distributed ledger; Codes; Fabrics; Programming;
   Computer languages; Bitcoin; Blockchain; distributed ledger technology;
   decentralized applications (dapps); patterns; smart contracts; software
   development
ID DATA SATURATION
AB Smart contracts are a promising means of formalizing and reliably enforcing agreements between entities using distributed ledger technology (DLT). Research has revealed that a significant number of smart contracts are subject to programming flaws, making them vulnerable to attacks and leading to detrimental effects, such as asset loss. Researchers and developers call for a thorough analysis of challenges to identify their causes and propose solutions. To respond to these calls, we conducted two literature reviews and diverse expert interviews and synthesized scattered knowledge on challenges and solutions. We identified 29 challenges (e.g., code visibility, code updateability, and encapsulation) and 60 solutions (e.g., gas limit specification, off-ledger computations, and shadowing). Moreover, we developed 20 software design patterns (SDPs) in collaboration with smart contract developers. The SDPs help developers adjust their programming habits and thus support them in their daily development practices. Our results provide actionable knowledge for smart contract developers to overcome the identified challenges and offer support for comparing smart contract integration concepts across three fundamentally different DLT protocols (i.e., Ethereum, EOSIO, and Hyperledger Fabric). Moreover, we support developers in becoming aware of peculiarities in smart contract development and the resulting benefits and drawbacks.
C1 [Kannengiesser, Niclas; Lins, Sebastian; Sunyaev, Ali] Karlsruhe Inst Technol, Inst Appl Informat & Formal Descript Methods, D-76133 Karlsruhe, Germany.
   [Kannengiesser, Niclas; Sunyaev, Ali] KASTEL Secur Res Labs, D-76131 Karlsruhe, Germany.
   [Sander, Christian; Winter, Klaus; Frey, Hellmuth] EnBW Energie Baden Wurttemberg AG, D-76131 Karlsruhe, Germany.
C3 Helmholtz Association; Karlsruhe Institute of Technology
RP Kannengiesser, N (corresponding author), Karlsruhe Inst Technol, Inst Appl Informat & Formal Descript Methods, D-76133 Karlsruhe, Germany.
EM niclas.kannengiesser@kit.edu; lins@kit.edu; c.sander@enbw.com;
   k.winter@enbw.com; h.frey@enbw.com; sunyaev@kit.edu
RI Kannengießer, Niclas/GOK-1458-2022
OI Kannengießer, Niclas/0000-0002-2880-3361; Sunyaev,
   Ali/0000-0002-4353-8519; Lins, Sebastian/0000-0001-7480-275X
FU EnBW Energie Baden-Wurttemberg AG, Germany; KASTEL Security Research
   Labs
FX This work was funded by the EnBW Energie Baden-Wurttemberg AG, Germany,
   and supported by the KASTEL Security Research Labs.
CR Abdellatif T, 2018, INT CONF NEW TECHNOL
   Adler J, 2018, IEEE 2018 INTERNATIONAL CONGRESS ON CYBERMATICS / 2018 IEEE CONFERENCES ON INTERNET OF THINGS, GREEN COMPUTING AND COMMUNICATIONS, CYBER, PHYSICAL AND SOCIAL COMPUTING, SMART DATA, BLOCKCHAIN, COMPUTER AND INFORMATION TECHNOLOGY, P1145, DOI 10.1109/Cybermatics_2018.2018.00207
   Akca S, 2019, ASIA PAC SOFWR ENG, P482, DOI 10.1109/APSEC48747.2019.00071
   Alexander C, 1999, IEEE SOFTWARE, V16, P71, DOI 10.1109/52.795104
   Ampatzoglou A, 2007, INFORM SOFTWARE TECH, V49, P445, DOI 10.1016/j.infsof.2006.07.003
   Andesta E, 2019, Arxiv, DOI arXiv:1912.04780
   Andrychowicz M, 2014, P IEEE S SECUR PRIV, P443, DOI 10.1109/SP.2014.35
   [Anonymous], JTC1SC7 ISOIEC
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   Antonino P, 2020, Arxiv, DOI arXiv:2002.02710
   Appleton B., Patterns and Software: Essential Concepts and Terminology
   Araoz M, MEDIUM
   Attaran M., 2019, ARCHITECTURE BLOCKCH, P21, DOI DOI 10.1007/978-3-030-03035-3
   Atzei N, 2018, LECT NOTES COMPUT SC, V10804, P217, DOI 10.1007/978-3-319-89722-6_9
   Atzei N, 2017, LECT NOTES COMPUT SC, V10204, P164, DOI 10.1007/978-3-662-54455-6_8
   Bai XM, 2018, PROCEEDINGS OF 2018 7TH INTERNATIONAL CONFERENCE ON SOFTWARE AND COMPUTER APPLICATIONS (ICSCA 2018), P322, DOI 10.1145/3185089.3185138
   Bartoletti Massimo, 2017, Financial Cryptography and Data Security. FC 2017 International Workshops WAHC, BITCOIN, VOTING, WTSC, and TA. Revised Selected Papers: LNCS 10323, P494, DOI 10.1007/978-3-319-70278-0_31
   Bertoni Guido., 2012, Keccak implementation overview
   Bhargavan K, 2016, PROCEEDINGS OF THE 2016 ACM WORKSHOP ON PROGRAMMING LANGUAGES AND ANALYSIS FOR SECURITY (PLAS'16), P91, DOI 10.1145/2993600.2993611
   Blockgenic, EOSIO SMART CONTR TU
   Bonneau J., BITCOIN PUBLIC RANDO
   Borchers J., 2001, PATTERN APPROACH INT
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   BROTHERSON MJ, 1994, TOP EARLY CHILD SPEC, V14, P101, DOI 10.1177/027112149401400110
   Buterin V., EIP 214 NEW OPCODE S
   Buterin V., 2015, Ethereum
   Ca~nada A. C., MEDIUM
   Cachin C, 2005, J CRYPTOL, V18, P219, DOI 10.1007/s00145-005-0318-0
   Chatterjee K, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN AND CRYPTOCURRENCY (ICBC), P403, DOI [10.1109/bloc.2019.8751326, 10.1109/BLOC.2019.8751326]
   Chaum D., 1983, Advances in Cryptology, Proceedings of Crypto 82, P199
   Chen JC, 2021, Arxiv, DOI arXiv:2007.00286
   Chen JC, 2022, IEEE T SOFTWARE ENG, V48, P327, DOI 10.1109/TSE.2020.2989002
   Chen J, 2019, THEOR COMPUT SCI, V777, P155, DOI 10.1016/j.tcs.2019.02.001
   Chen T, 2021, IEEE T EMERG TOP COM, V9, P1433, DOI 10.1109/TETC.2020.2979019
   Chen T, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P81, DOI 10.1145/3183399.3183420
   Chen T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P442, DOI 10.1109/SANER.2017.7884650
   Chen WL, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P1409, DOI 10.1145/3178876.3186046
   Chinen Y, 2020, Arxiv, DOI arXiv:2007.01029
   Chow J., CONSENSYS BLOG
   community B, SCRIPT
   ConsenSys, SMART CONTR SEC BEST
   ConsenSys, KNOWN ATT
   Corbin J, 2008, Techniques and procedures for developing grounded theory, V3rd
   Demir M, 2019, 2019 COMPANION OF THE 19TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS-C 2019), P442, DOI 10.1109/QRS-C.2019.00086
   Desrosiers L., IBM DEVELOPER
   DOS. Network, DOS NETW DEC OR SER
   Dwivedi V., 2019, Revised Selected Papers, V1046, P738
   E. Foundation, EXPR CONTR STRUCT
   Eberhardt J, 2018, SERIAL'18: PROCEEDINGS OF THE 2018 WORKSHOP ON SCALABLE AND RESILIENT INFRASTRUCTURES FOR DISTRIBUTED LEDGERS, P7, DOI 10.1145/3284764.3284766
   Efremov A., CONCURRENCY PATTERNS
   Enyeart D., RESOLVE PHANTOM READ
   EOS. Authority, EOSIO WATCH PLUG EOS
   EOSIO, EOS VM LOW LAT HIGH
   EOSIO, RAMAS SYST
   EOSIO, INL ACT EXT CONTR
   EOSIO, CONS PROT
   EOSIO, ACC PERM
   EOSIO, EOS GET DAT OUTS WOR
   EOSIO, T PROT
   EOSIO, 2021, EOS TOK CPP
   EOSIO, STOR READM
   Eskandari Shayan, 2020, Financial Cryptography and Data Security. FC 2019 International Workshops, VOTING and WTSC. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 11599), P170, DOI 10.1007/978-3-030-43725-1_13
   Ethereum, CONTR ABI SPEC
   Ethereum, SOL ASS
   Ethereum Foundation, ETH FDN EIP 1
   Ethereum Foundation, SOL DOC TYP
   Feist J, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB 2019), P8, DOI 10.1109/WETSEB.2019.00008
   Fusch PI, 2015, QUAL REP, V20, P1408
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   Gao JB, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P23, DOI 10.1109/ICSE-Companion.2019.00029
   Gao JB, 2019, INT C PROGRAM COMPRE, P294, DOI 10.1109/ICPC.2019.00048
   Goddard J., MEDIUM
   Gojka Efthimios-Enias, 2021, Intelligent Computing. Proceedings of the 2021 Computing Conference. Lecture Notes in Networks and Systems (LNNS 285), P722, DOI 10.1007/978-3-030-80129-8_50
   GORDEN R., 1975, Interviewing: Strategy, Techniques and Tactics
   Grech N, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276486
   Grossman S, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3158136
   Guest G, 2006, FIELD METHOD, V18, P59, DOI 10.1177/1525822X05279903
   He NY, 2020, Arxiv, DOI arXiv:2003.06568
   Heiss J, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN (BLOCKCHAIN 2019), P496, DOI 10.1109/Blockchain.2019.00075
   Hertig A., RISE REPLAY ATTACKS
   Hitchens R., MEDIUM
   Hitches R., MEDIUM
   Hu B, 2021, PATTERNS, V2, DOI 10.1016/j.patter.2020.100179
   Huang YF, 2019, IEEE ACCESS, V7, P150184, DOI 10.1109/ACCESS.2019.2946988
   Huang Y, 2019, INT C PROGRAM COMPRE, P260, DOI 10.1109/ICPC.2019.00045
   Huang YH, 2020, Arxiv, DOI arXiv:2002.05369
   Hyperledger, SMART CONTR CHAINC
   Hyperledger, 2020, T HANDL
   Hyperledger Architecture Working Group, FABR CHAINC LIF
   Hyperledger Foundation, ORD SERV
   Hyperledger Foundation, MEMB SERV PROV MSP
   Hyperledger Foundation, PRIV DAT
   Hyperledger Foundation, CHANNELS
   Info W. T, DID ERC725 METH
   Jeng YW, 2019, IEEE INT CONF SERV, P25, DOI 10.1109/SOCA.2019.00012
   Kaleem M, 2020, 2020 2ND CONFERENCE ON BLOCKCHAIN RESEARCH & APPLICATIONS FOR INNOVATIVE NETWORKS AND SERVICES (BRAINS), P107, DOI [10.1109/brains49436.2020.9223278, 10.1109/BRAINS49436.2020.9223278]
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Kannengiesser N., 2020, P 53 HAW INT C SYST
   Kannengiesser N, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3379463
   Khazanchi D., 2008, MWAIS 2008 P
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kolluri A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P363, DOI 10.1145/3293882.3330560
   Konstantopoulos G., MEDIUM
   Kosba A, 2016, P IEEE S SECUR PRIV, P839, DOI 10.1109/SP.2016.55
   LAMPORT L, 1982, ACM T PROGR LANG SYS, V4, P382, DOI 10.1145/357172.357176
   Lea D., 1994, SIGSOFT Software Engineering Notes, V19, P39, DOI 10.1145/181610.181617
   Li JS, 2019, 2019 IEEE CONFERENCE ON DEPENDABLE AND SECURE COMPUTING (DSC), P57, DOI 10.1109/dsc47296.2019.8937559
   Li ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1198, DOI 10.1109/ASE.2019.00136
   Liu C, 2018, PROC IEEE ACM INT C, P65, DOI 10.1145/3183440.3183495
   Liu Y, 2018, LECT NOTES COMPUT SC, V10974, P92, DOI 10.1007/978-3-319-94478-4_7
   Lucking M, 2021, ELECTRONICS-SWITZ, V10, DOI 10.3390/electronics10060654
   Luecking M, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN AND CRYPTOCURRENCY (IEEE ICBC), DOI 10.1109/icbc48266.2020.9169411
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Marchesi L, 2020, PROCEEDINGS OF THE 2020 IEEE 3RD INTERNATIONAL WORKSHOP ON BLOCKCHAIN ORIENTED SOFTWARE ENGINEERING (IWBOSE '20), P9, DOI [10.1109/iwbose50093.2020.9050163, 10.1109/IWBOSE50093.2020.9050163]
   Marx S., STOP USING SOLIDITYS
   Mavridou A, 2017, Arxiv, DOI arXiv:1711.09327
   McConnell Steve., 2004, Code Complete, V2nd ed
   Mense A, 2014, IIWAS2018: THE 20TH INTERNATIONAL CONFERENCE ON INFORMATION INTEGRATION AND WEB-BASED APPLICATIONS & SERVICES, P375, DOI 10.1145/3282373.3282419
   Miller Andrew, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P280, DOI 10.1007/978-3-030-03427-6_22
   Morse JM, 2015, QUAL HEALTH RES, V25, P587, DOI 10.1177/1049732315576699
   Myers M. D., 2007, Information and Organization, V17, P2, DOI 10.1016/j.infoandorg.2006.11.001
   Niebuhr S, 2008, LECT NOTES COMPUT SC, V4940, P586
   Nikolic I, 2018, Arxiv, DOI arXiv:1802.06038
   OpenZeppelin, SAFEMATH
   P. Technologies, PARITY
   Palladiono S., PARITY WALLET HACK R
   Paré G, 2015, INFORM MANAGE-AMSTER, V52, P183, DOI 10.1016/j.im.2014.08.008
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Peck ME, 2017, IEEE SPECTRUM, V54, P38, DOI 10.1109/MSPEC.2017.8048838
   Perez D, 2020, Arxiv, DOI arXiv:1902.06710
   Pierrot C, 2018, CRYPTOGR COMMUN, V10, P211, DOI 10.1007/s12095-017-0264-3
   Qtum, 2020, MEDIUM 1027
   Quan LJ, 2019, Arxiv, DOI arXiv:1906.10362
   randao, RAND NUMB PROGR IS V
   Rezaei S, 2020, P INT COMP SOFTW APP, P1027, DOI 10.1109/COMPSAC48688.2020.0-137
   Riehle D., 1996, Theory and Practice of Object Systems, V2, P3, DOI 10.1002/(SICI)1096-9942(1996)2:1<3::AID-TAPO1>3.0.CO;2-#
   Rodler M, 2018, Arxiv, DOI arXiv:1812.05934
   Saunders B, 2018, QUAL QUANT, V52, P1893, DOI 10.1007/s11135-017-0574-8
   Sayeed S, 2020, IEEE ACCESS, V8, P24416, DOI 10.1109/ACCESS.2020.2970495
   Schindler P., HYDRAND PRACTICAL CO
   Schneidewind C, 2020, Arxiv, DOI arXiv:2005.06227
   Sergey I., 2017, INT C FIN CRYPT DAT, P478
   Strauss A. L., 1997, Grounded Theory in Practice
   Sunyaev A, 2021, BUS INFORM SYST ENG+, V63, P457, DOI 10.1007/s12599-021-00684-1
   Szabo N., 1997, First Monday, V2
   TANENBAUM A. S., 2016, Distributed Systems: Principles and Paradigms., V2
   The Ontology Team, 2020, MEDIUM 0512
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Tolmach P, 2021, Arxiv, DOI arXiv:2008.02712
   Torres CF, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P664, DOI 10.1145/3274694.3274737
   Unknown, PACK SYNC
   Vilsack T., 2016, MEDIUM
   Vitanov A, MEDIUM
   Vyperlang, VYP
   Wang S, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360615
   Wang W, 2021, IEEE T NETW SCI ENG, V8, P1133, DOI 10.1109/TNSE.2020.2968505
   Wang XM, 2020, IEEE T SERV COMPUT, V13, P314, DOI 10.1109/TSC.2019.2949561
   Wöhrer M, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN AND CRYPTOCURRENCY (IEEE ICBC), DOI 10.1109/icbc48266.2020.9169399
   Wöhrer M, 2018, IEEE 2018 INTERNATIONAL CONGRESS ON CYBERMATICS / 2018 IEEE CONFERENCES ON INTERNET OF THINGS, GREEN COMPUTING AND COMMUNICATIONS, CYBER, PHYSICAL AND SOCIAL COMPUTING, SMART DATA, BLOCKCHAIN, COMPUTER AND INFORMATION TECHNOLOGY, P1513, DOI 10.1109/Cybermatics_2018.2018.00255
   Wöhrer M, 2018, 2018 IEEE 1ST INTERNATIONAL WORKSHOP ON BLOCKCHAIN ORIENTED SOFTWARE ENGINEERING (IWBOSE), P2, DOI 10.1109/IWBOSE.2018.8327565
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Worley CR, 2019, LECT NOTES BUS INF P, V339, P264, DOI 10.1007/978-3-030-04849-5_24
   Wright CS, 2020, ADV INTELL SYST COMP, V1037, P299, DOI 10.1007/978-3-030-29516-5_23
   Xie R., HACKER NOON
   Xu XW, 2018, EUROPLOP 2018: PROCEEDINGS OF THE 23RD EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS, DOI [10.3897/phytokeys.96.23142, 10.1145/3282308.3282312]
   Yamashita K, 2019, 2019 IEEE 2ND INTERNATIONAL WORKSHOP ON BLOCKCHAIN ORIENTED SOFTWARE ENGINEERING (IWBOSE), P1, DOI [10.1109/iwbose.2019.8666486, 10.1109/IWBOSE.2019.8666486]
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
   Young M., ETHEREUM WORLD NEWS
   Zhang F, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P270, DOI 10.1145/2976749.2978326
   Zhao XF, 2017, INT CONF SYST INFORM, P1743, DOI 10.1109/ICSAI.2017.8248566
   Zou WQ, 2021, IEEE T SOFTWARE ENG, V47, P2084, DOI 10.1109/TSE.2019.2942301
NR 171
TC 16
Z9 16
U1 1
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4291
EP 4318
DI 10.1109/TSE.2021.3116808
PG 28
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800004
OA hybrid
DA 2024-07-18
ER

PT J
AU Kang, HJ
   Lo, D
AF Kang, Hong Jin
   Lo, David
TI Active Learning of Discriminative Subgraph Patterns for API Misuse
   Detection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Detectors; Software development management; Java; Tools; Software;
   Computer bugs; Ciphers; API-Misuse detection; discriminative subgraph
   mining; graph classification; active learning
ID CLASSIFICATION
AB A common cause of bugs and vulnerabilities are the violations of usage constraints associated with Application Programming Interfaces (APIs). API misuses are common in software projects, and while there have been techniques proposed to detect such misuses, studies have shown that they fail to reliably detect misuses while reporting many false positives. One limitation of prior work is the inability to reliably identify correct patterns of usage. Many approaches confuse a usage pattern's frequency for correctness. Due to the variety of alternative usage patterns that may be uncommon but correct, anomaly detection-based techniques have limited success in identifying misuses. We address these challenges and propose ALP (Actively Learned Patterns), reformulating API misuse detection as a classification problem. After representing programs as graphs, ALP mines discriminative subgraphs. While still incorporating frequency information, through limited human supervision, we reduce the reliance on the assumption relating frequency and correctness. The principles of active learning are incorporated to shift human attention away from the most frequent patterns. Instead, ALP samples informative and representative examples while minimizing labeling effort. In our empirical evaluation, ALP substantially outperforms prior approaches on both MUBench, an API Misuse benchmark, and a new dataset that we constructed from real-world software projects.
C1 [Kang, Hong Jin; Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
C3 Singapore Management University
RP Kang, HJ (corresponding author), Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
EM hjkang.2018@phdcs.smu.edu.sg; davidlo@smu.edu.sg
RI Lo, David/A-2493-2012
OI Lo, David/0000-0002-4367-7201
FU National Research Foundation, Singapore under its Industry Alignment
   Fund -Pre-positioning (IAF-PP) Funding Initiative
FX This work was supported by the National Research Foundation, Singapore
   under its Industry Alignment Fund -Pre-positioning (IAF-PP) Funding
   Initiative. Any opinions, findings and conclusions or recommendations
   expressed in this material are those of the author(s) and do not reflect
   the views of National Research Foundation, Singapore.
CR Amann S, 2019, IEEE T SOFTWARE ENG, V45, P1170, DOI 10.1109/TSE.2018.2827384
   Amann S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P464, DOI [10.1145/2901739.2903506, 10.1109/MSR.2016.055]
   ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   [Anonymous], 2020, JFREECHART
   [Anonymous], 2020, SANTUARIO
   [Anonymous], 2020, APACHE COMMONS MATH
   [Anonymous], 2020, Apache PDFBox
   [Anonymous], 2020, JACKRABBIT
   [Anonymous], 2020, H2 DATABASE
   [Anonymous], 2020, APACHE BIGTOP
   [Anonymous], 2020, APACHE CURATOR
   [Anonymous], 2020, SWINGX
   [Anonymous], 2020, APACHE COMMONS LANG
   [Anonymous], 2020, APACHE FOP
   [Anonymous], 2020, APACHE COMMONS TEXT
   [Anonymous], 2007, 6th joint meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), DOI DOI 10.1145/1287624.1287632
   [Anonymous], 2020, BCEL
   [Anonymous], 2020, WILDFLY EYTRON
   [Anonymous], HYRUMS LAW
   [Anonymous], 2020, APACHE FORTRESS
   Argyros G, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1690, DOI 10.1145/2976749.2978383
   Asyrofi MH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P637, DOI [10.1109/SANER48275.2020.9054809, 10.1109/saner48275.2020.9054809]
   Bowring J. F., 2004, Software Engineering Notes, V29, P195, DOI 10.1145/1013886.1007539
   Breunig MM, 2000, SIGMOD REC, V29, P93, DOI 10.1145/335191.335388
   Calimeri F, 2016, ARTIF INTELL, V231, P151, DOI 10.1016/j.artint.2015.09.008
   Chalin P, 2006, LECT NOTES COMPUT SC, V4157, P100
   CHOW CK, 1970, IEEE T INFORM THEORY, V16, P41, DOI 10.1109/TIT.1970.1054406
   Cohn DA, 1996, J ARTIF INTELL RES, V4, P129, DOI 10.1613/jair.295
   Cortes C, 2016, LECT NOTES ARTIF INT, V9925, P67, DOI 10.1007/978-3-319-46379-7_5
   Dagan I., 1995, Machine Learning. Proceedings of the Twelfth International Conference on Machine Learning, P150
   de Ruiter J, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P193
   Dekel U, 2009, PROC INT CONF SOFTW, P320, DOI 10.1109/ICSE.2009.5070532
   Dupont P, 2008, APPL ARTIF INTELL, V22, P77, DOI 10.1080/08839510701853200
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Egele M., 2013, P 2013 ACM SIGSAC C, P73
   Ertekin S, 2007, P 16 ACM C C INF KNO, P127
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Foo D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P791, DOI 10.1145/3236024.3275535
   Fowkes J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P254, DOI 10.1145/2950290.2950319
   Fujii A, 1998, COMPUT LINGUIST, V24, P573
   Gardner AB, 2006, J MACH LEARN RES, V7, P1025
   Gebser M., 2008, USERS GUIDE GRINGO C, P11086
   Gharehyazie M, 2017, IEEE WORK CONF MIN S, P291, DOI 10.1109/MSR.2017.15
   github, 2020, ITEXTPDF
   Gu XD, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P602, DOI 10.1109/ASE.2019.00061
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Hagberg A. A., 2008, EXPLORING NETWORK ST, P11, DOI DOI 10.1016/J.JELECTROCARD.2010.09.003
   Herbei R, 2006, CAN J STAT, V34, P709, DOI 10.1002/cjs.5550340410
   Huang SJ, 2014, IEEE T PATTERN ANAL, V36, P1936, DOI 10.1109/TPAMI.2014.2307881
   Inokuchi A, 2000, LECT NOTES COMPUT<D>, V1910, P13
   Jin D, 2012, PROC INT CONF SOFTW, P1427, DOI 10.1109/ICSE.2012.6227231
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Jun Gao, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P388, DOI 10.1109/MSR.2019.00065
   Kechagia M, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P192, DOI 10.1145/3293882.3330552
   Khan SS, 2014, KNOWL ENG REV, V29, P345, DOI 10.1017/S026988891300043X
   Kochhar PS, 2015, IEEE ICST WORKSHOP
   Kochhar PS, 2013, EUR CON SFTWR MTNCE, P353, DOI 10.1109/CSMR.2013.48
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Kong X., 2011, P 17 ACM SIGKDD INT, P654, DOI [10.1145/2020408.2020511, DOI 10.1145/2020408.2020511]
   Krüger S, 2021, IEEE T SOFTWARE ENG, V47, P2382, DOI 10.1109/TSE.2019.2948910
   Lamothe M, 2020, PROC INT CONF SOFTW, P912, DOI 10.1145/3377811.3380433
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Legunsen O, 2016, IEEE INT CONF AUTOM, P602, DOI 10.1145/2970276.2970356
   Lewis D. D., 1994, SIGIR '94. Proceedings of the Seventeenth Annual International ACM-SIGIR Conference on Research and Development in Information Retrieval, P3
   Lewis D.D., 1994, MACH LEARN P 1994, P148
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Lin ZY, 2016, IEEE INT CONF AUTOM, P368, DOI 10.1145/2970276.2970355
   Lopes CV, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133908
   Lu Huihua., 2012, P 8 INT C PREDICTIVE, P79
   Moll-Udina A, 2021, OCUL IMMUNOL INFLAMM, V29, P1591, DOI 10.1080/09273948.2020.1769139
   Monperrus M, 2010, LECT NOTES COMPUT SC, V6183, P2, DOI 10.1007/978-3-642-14107-2_2
   Nadi S, 2016, PROC INT CONF SOFTW, P935, DOI 10.1145/2884781.2884790
   Nguyen PT, 2019, PROC INT CONF SOFTW, P1050, DOI 10.1109/ICSE.2019.00109
   Nguyen TT, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P383, DOI 10.1145/1595696.1595767
   Perera P, 2019, PROC CVPR IEEE, P2893, DOI 10.1109/CVPR.2019.00301
   Pham LH, 2017, PROC IEEE ACM INT C, P155, DOI 10.1109/ICSE-C.2017.87
   Pradel M, 2012, PROC INT CONF SOFTW, P925, DOI 10.1109/ICSE.2012.6227127
   Reinhardt A, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P880, DOI 10.1145/3236024.3264585
   Rennie JD., 2003, P 20 INT C MACHINE L
   Robbes R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P904, DOI 10.1145/1985793.1985940
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Schiller TW, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P596, DOI 10.1145/2568225.2568285
   Settles B, 2008, P C EMP METH NAT LAN, P1070, DOI DOI 10.3115/1613715.1613855
   Sim J, 2005, PHYS THER, V85, P257
   Sven Amann, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P265, DOI 10.1109/MSR.2019.00053
   Tax DMJ, 2008, PATTERN RECOGN LETT, V29, P1565, DOI 10.1016/j.patrec.2008.03.010
   Thoma Marisa, 2009, Proccedings of the 2009 SIAM Conference on Data Mining SDM 2009, P1076
   Thummalapenta S, 2011, AUTOMAT SOFTW ENG, V18, P293, DOI 10.1007/s10515-011-0086-z
   Thung F, 2015, INT C PROGRAM COMPRE, P60, DOI 10.1109/ICPC.2015.15
   Walkinshaw N, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P209, DOI 10.1109/WCRE.2007.45
   Wang J, 2013, IEEE WORK CONF MIN S, P319, DOI 10.1109/MSR.2013.6624045
   Wasylkowski A, 2011, AUTOMAT SOFTW ENG, V18, P263, DOI 10.1007/s10515-011-0084-1
   Wen M, 2019, PROC INT CONF SOFTW, P866, DOI 10.1109/ICSE.2019.00093
   Yan XF, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P721, DOI 10.1109/ICDM.2002.1184038
   Zhang C, 2012, PROC INT CONF SOFTW, P826, DOI 10.1109/ICSE.2012.6227136
   Zhang JX, 2021, IEEE T SOFTWARE ENG, V47, P1299, DOI 10.1109/TSE.2019.2919304
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
   Zhong H, 2020, PROC INT CONF SOFTW, P899, DOI 10.1145/3377811.3380922
   Zhong H, 2019, IEEE T SOFTWARE ENG, V45, P319, DOI 10.1109/TSE.2017.2782280
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
NR 103
TC 4
Z9 5
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 2761
EP 2783
DI 10.1109/TSE.2021.3069978
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500005
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Paz, A
   El Boussaidi, G
   Mili, H
AF Paz, Andres
   El Boussaidi, Ghizlane
   Mili, Hafedh
TI <i>checsdm</i>: A Method for Ensuring Consistency in Heterogeneous
   Safety-Critical System Design
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Unified modeling language; Software packages; Tools; Object oriented
   modeling; Safety; Guidelines; Design methodology; Model-driven
   engineering; safety-critical systems; heterogeneous design; consistency;
   design guidelines; DO-178C
AB Safety-critical systems are highly heterogeneous, combining different characteristics. Effectively designing such systems requires a complex modelling approach that deals with diverse components (e.g., mechanical, electronic, software)-each having its own underlying domain theories and vocabularies-as well as with various aspects of the same component (e.g., function, structure, behaviour). Furthermore, the regulated nature of such systems prescribes the objectives for their design verification and validation. This paper proposes checsdm, a systematic approach, based on Model-Driven Engineering (MDE), for assisting engineering teams in ensuring consistency of heterogeneous design of safety-critical systems. The approach is developed as a generic methodology and a tool framework, that can be applied to various design scenarios involving different modelling languages and different design guidelines. The methodology comprises an iterative three-phased process. The first phase, elicitation, aims at specifying requirements of the heterogeneous design scenario. Using the proposed tool framework, the second phase, codification, consists in building a particular tool set that supports the heterogeneous design scenario and helps engineers in flagging consistency errors for review and eventual correction. The third phase, operation, applies the tool set to actual system designs. Empirical evaluation of the work is presented through two executions of the checsdm approach for the specific cases of a design scenario involving a mix of UML, Simulink and Stateflow, and a design scenario involving a mix of AADL, Simulink and Stateflow. The operation phase of the first case was performed over three avionics systems and the identified inconsistencies in the design models of these systems were compared to the results of a fully manual verification carried out by professional engineers. The evaluation also includes an assessment workshop with industrial practitioners to examine their perceptions about the approach. The empirical validation indicates the feasibility and "cost-effectiveness" of the approach. Inconsistencies were identified in the three avionics systems with a greater recall rate over the manual verification. The assessment workshop shows the practitioners found the approach easy to understand and gave an overall likelihood of adoption within the context of their work.
C1 [Paz, Andres; El Boussaidi, Ghizlane] Univ Quebec, Dept Genie Logiciel & TI, Ecole Technol Super, Montreal, PQ H3C 1K3, Canada.
   [Mili, Hafedh] Univ Quebec Montreal, Dept Informat, Montreal, PQ H2X 3Y7, Canada.
C3 University of Quebec; University of Quebec Montreal; Ecole de
   Technologie Superieure - Canada; University of Quebec; University of
   Quebec Montreal
RP Paz, A (corresponding author), Univ Quebec, Dept Genie Logiciel & TI, Ecole Technol Super, Montreal, PQ H3C 1K3, Canada.
EM andres.paz-loboguerrero.1@ens.etsmtl.ca; ghizlane.elboussaidi@etsmtl.ca;
   mili.hafedh@uqam.ca
RI Paz, Andrés/GQH-9815-2022; Mili, Hafedh/JAO-1456-2023
OI Paz, Andrés/0000-0002-0743-769X; El Boussaidi,
   Ghizlane/0000-0001-6145-774X
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
   [CRDPJ 463076-14]; Consortium for Research and Innovation in Aerospace
   in Quebec (CRIAQ) [AVIO604]
FX This research was partially supported by the Natural Sciences and
   Engineering Research Council of Canada (NSERC) (CRDPJ 463076-14) and the
   Consortium for Research and Innovation in Aerospace in Quebec (CRIAQ)
   under project AVIO604. The authors thank all projectmembers for their
   feedback.
CR Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Bombino Massimo, 2013, International Journal on Software Tools for Technology Transfer, V15, P363, DOI 10.1007/s10009-012-0230-5
   Combemale B, 2014, COMPUTER, V47, P68, DOI 10.1109/MC.2014.147
   da Silva MAA, 2010, LECT NOTES COMPUT SC, V6051, P348, DOI 10.1007/978-3-642-13094-6_28
   Dijkman RM, 2008, INFORM SOFTWARE TECH, V50, P737, DOI 10.1016/j.infsof.2007.07.007
   Eker J, 2003, P IEEE, V91, P127, DOI 10.1109/JPROC.2002.805829
   El Hamlaoui M, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1695, DOI 10.1145/3167132.3167425
   Farkas Tibor, 2009, 2009 33rd Annual IEEE International Computer Software and Applications Conference (COMPSAC 2009), P516, DOI 10.1109/COMPSAC.2009.185
   Ferrari A, 2013, SCI COMPUT PROGRAM, V78, P828, DOI 10.1016/j.scico.2012.04.003
   FINKELSTEIN ACW, 1994, IEEE T SOFTWARE ENG, V20, P569, DOI 10.1109/32.310667
   Finlayson MA, 2014, PROCEEDINGS OF THE SEVENTH GLOBAL WORDNET CONFERENCE, GWC 2014, P78
   Ghidella, 2018, FAULT DETECTION CONT
   Lee EA, 2010, LECT NOTES COMPUT SC, V6395, P273
   Levine W. S., 1996, The Control Handbook
   MathWorks Automotive Advisory Board, 2012, CONTR ALG MOD GUID U
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Paige, 2018, EPSILON BOOK ECLIPSE, P123
   Paz A, 2019, P INT COMP SOFTW APP, P37, DOI 10.1109/COMPSAC.2019.00015
   Paz A, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1262, DOI 10.1145/3167132.3167268
   Potter, 2016, DO 178 CASE STUDY
   Radio Technical Commission for Aeronautics Inc., 2011, DO332 RTCA INC WASH
   Radio Technical Commission for Aeronautics Inc., 2011, DO331 RTCA INC WASH
   Radio Technical Commission for Aeronautics Inc., 2011, DO178C RTCA INC WASH
   Roques P., 2016, MBSE with the ARCADIA Method and the Capella Tool
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sakairi T, 2012, 2012 PROCEEDINGS OF SICE ANNUAL CONFERENCE (SICE), P2011
   Sarkis A, 2014, 2014 11TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS (ITNG), P27, DOI 10.1109/ITNG.2014.57
   Sj_ostedt, 2008, OMER4 POSTPR 2008, P137
   Tanaka K, 2017, PROCEEDINGS OF 2017 INTERNATIONAL CONFERENCE ON INDUSTRIAL DESIGN ENGINEERING (ICIDE 2017), P76, DOI 10.1145/3178264.3178284
   van den Brand M, 2015, SCI COMPUT PROGRAM, V97, P75, DOI 10.1016/j.scico.2013.11.020
   Varro Daniel, 2016, SOFSEM 2016 : Theory and Practice of Computer Science. 42nd International Conference on Current Trends in Theory and Practice of Computer Science. Proceedings: LNCS 9587, P51, DOI 10.1007/978-3-662-49192-8_5
   Yu, 2011, P 2011 ACM S APPL CO, P354
NR 32
TC 3
Z9 4
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2021
VL 47
IS 12
BP 2713
EP 2739
DI 10.1109/TSE.2020.2966994
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XM6HB
UT WOS:000728924600005
DA 2024-07-18
ER

PT J
AU Jin, WX
   Liu, T
   Cai, YF
   Kazman, R
   Mo, R
   Zheng, QH
AF Jin, Wuxia
   Liu, Ting
   Cai, Yuanfang
   Kazman, Rick
   Mo, Ran
   Zheng, Qinghua
TI Service Candidate Identification from Monolithic Systems Based on
   Execution Traces
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Atomic measurements; Frequency measurement; Testing; Computer
   architecture; History; Microservice; monolith decomposition; service
   candidate; execution trace; functionality; modularity; evolvability
ID SOFTWARE; CODE; COHESION; TAXONOMY
AB Monolithic systems increasingly suffer from maintainability and scalability issues as they grow in functionality, size, and complexity. It is widely believed that (micro)service-based architectures can alleviate these problems as each service is supposed to have the following characteristics: clearly defined functionality, sufficient modularity, and the ability to evolve independently. Industrial practices show that service extraction from a legacy monolithic system is labor-intensive and complex. Existing work on service candidate identification aims to group entities of a monolithic system into potential service candidates, but this process has two major challenges: first, it is difficult to extract service candidates with consistent quality; second, it is hard to evaluate the identified service candidates regarding the above three characteristics. To address these challenges, this paper proposes the Functionality-oriented Service Candidate Identification (FoSCI) framework to identify service candidates from a monolithic system. Our approach is to record the monolith's execution traces, and extract services candidates using a search-based functional atom grouping algorithm. We also contribute a comprehensive service candidate evaluation suite that uses interface information, structural/conceptual dependency, and commit history. This evaluation system consists of 8 metrics, measuring functionality, modularity, and evolvability respectively of identified service candidates. We compare FoSCI with three existing methods, using 6 widely-used open-source projects as our evaluation subjects. Our results show that FoSCI outperforms existing methods in most measures.
C1 [Jin, Wuxia; Liu, Ting; Zheng, Qinghua] Xi An Jiao Tong Univ, Key Lab Intelligent Networks & Network Secur MOEK, Minist Educ, Xian 718900, Shaanxi, Peoples R China.
   [Cai, Yuanfang; Mo, Ran] Drexel Univ, Dept Comp Sci, Philadelphia, PA 19104 USA.
   [Kazman, Rick] Univ Hawaii, Dept Informat Technol Management, Honolulu, HI 96822 USA.
C3 Xi'an Jiaotong University; Drexel University; University of Hawaii
   System
RP Liu, T (corresponding author), Xi An Jiao Tong Univ, Key Lab Intelligent Networks & Network Secur MOEK, Minist Educ, Xian 718900, Shaanxi, Peoples R China.
EM wx_jin@stu.xjtu.edu.cn; tingliu@mail.xjtu.edu.cn; yfcai@cs.drexel.edu;
   kazman@hawaii.edu; rm859@drexel.edu; qhzheng@mail.xjtu.edu.cn
OI Liu, Ting/0000-0002-7600-0934; Kazman, Rick/0000-0003-0392-2783
FU National Key R&D Program of China [2016YFB0800202]; National Natural
   Science Foundation of China [61632015, 61772408, U1766215, 61721002,
   61532015, 61833015]; Ministry of Education Innovation Research Team
   [IRT_17R86]; United States National Sciences Foundation [1816594,
   1835292, 1823177]
FX This work was supported by National Key R&D Program of China
   (2016YFB0800202), National Natural Science Foundation of China
   (61632015, 61772408, U1766215, 61721002, 61532015, 61833015), Ministry
   of Education Innovation Research Team (IRT_17R86). This work was also
   supported by the United States National Sciences Foundation grants
   1816594, 1835292, and 1823177. This paper is an extended version of our
   conference paper on IEEE ICWS 2018 [1]. We redefine the problem as
   service candidate identification, design a new framework and enhance the
   method by introducing search-based functional atom grouping, and improve
   the measurement system by adding Modularity and designing Independence
   of Evolvability.
CR Alimadadi S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P776, DOI 10.1145/3180155.3180216
   Allier S, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P214, DOI 10.1109/WICSA.2011.35
   Alshuqayran N, 2016, IEEE INT CONF SERV, P44, DOI 10.1109/SOCA.2016.15
   Andritsos P, 2005, IEEE T SOFTWARE ENG, V31, P150, DOI 10.1109/TSE.2005.25
   Athanasopoulos D, 2015, IEEE T SERV COMPUT, V8, P550, DOI 10.1109/TSC.2014.2310195
   Bavota G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559935
   Bavota G, 2013, EMPIR SOFTW ENG, V18, P901, DOI 10.1007/s10664-012-9226-8
   Bogner J., 2017, PROC 27 INT WORKSHOP, P107, DOI [10.1145/3143434.3143443, DOI 10.1145/3143434.3143443]
   Branke E, 2004, LECT NOTES COMPUT SC, V3242, P722, DOI 10.1007/978-3-540-30217-9_73
   Breivold HP, 2012, INFORM SOFTWARE TECH, V54, P16, DOI 10.1016/j.infsof.2011.06.002
   Candela I, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2928268
   Chatterjee M., 2002, Cluster Computing, V5, P193, DOI 10.1023/A:1013941929408
   Chen R, 2017, ASIA PAC SOFWR ENG, P466, DOI 10.1109/APSEC.2017.53
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Di Francesco P, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P21, DOI 10.1109/ICSA.2017.24
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dragoni N., 2017, PRESENT ULTERIOR SOF, P195, DOI DOI 10.1007/978-3-319-67425-4_12
   Fowler M., 2002, Patterns of Enterprise Application Architecture
   Garcia J., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P552, DOI 10.1109/ASE.2011.6100123
   Garcia J, 2013, IEEE INT CONF AUTOM, P486, DOI 10.1109/ASE.2013.6693106
   Gholami MF, 2016, J SYST SOFTWARE, V120, P31, DOI 10.1016/j.jss.2016.06.068
   Gysel M, 2016, LECT NOTES COMPUT SC, V9846, P185, DOI 10.1007/978-3-319-44482-6_12
   Hamou-Lhadj A, 2006, INT C PROGRAM COMPRE, P181, DOI 10.1109/ICPC.2006.45
   Harms H, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P902, DOI 10.1145/3106237.3117775
   Jin WX, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2018), P211, DOI 10.1109/ICWS.2018.00034
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Knoche H, 2018, IEEE SOFTWARE, V35, P44, DOI 10.1109/MS.2018.2141035
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Kwon YW, 2014, AUTOMAT SOFTW ENG, V21, P345, DOI 10.1007/s10515-013-0136-9
   Levcovitz A, 2016, ABS160503175 CORR
   Li Y, 2018, IEEE T SOFTWARE ENG, V44, P182, DOI 10.1109/TSE.2017.2664824
   Lutellier T, 2018, IEEE T SOFTWARE ENG, V44, P159, DOI 10.1109/TSE.2017.2671865
   Mancoridis S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P50, DOI 10.1109/ICSM.1999.792498
   Mancoridis S, 1998, PROG COMPREHEN, P45, DOI 10.1109/WPC.1998.693283
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Mazlami G, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P524, DOI 10.1109/ICWS.2017.61
   Millett S., 2015, Patterns, Principles, and Practices of DomainDriven Design
   Nadareishvili I., 2016, Microservice Architecture: Aligning Principles, Practices, and Culture
   Newman S., 2015, BUILDING MICROSERVIC
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Patel C, 2009, EUR CON SFTWR MTNCE, P27, DOI 10.1109/CSMR.2009.62
   Poshyvanyk D, 2006, PROC IEEE INT CONF S, P469
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Rohatgi A, 2008, INT C PROGRAM COMPRE, P234, DOI 10.1109/ICPC.2008.35
   Safyallah H, 2006, INT C PROGRAM COMPRE, P84, DOI 10.1109/ICPC.2006.19
   Shatnawi A, 2018, INT C PROGRAM COMPRE, P189, DOI 10.1145/3196321.3196349
   Stine M., 2015, Migrating to cloud-native application architectures
   Tilevich E, 2014, COMPUTER, V47, P75, DOI 10.1109/MC.2014.6
   Tzerpos V, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P258
   Van Hoorn A., 2012, P 3 ACM SPEC INT C P, P247, DOI DOI 10.1145/2188286.2188326
   Zhang Y, 2012, ACM SIGPLAN NOTICES, V47, P233, DOI 10.1145/2398857.2384634
NR 52
TC 48
Z9 53
U1 0
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2021
VL 47
IS 5
BP 987
EP 1007
DI 10.1109/TSE.2019.2910531
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SC1RN
UT WOS:000650457700008
OA hybrid
DA 2024-07-18
ER

PT J
AU Uddin, G
   Khomh, F
AF Uddin, Gias
   Khomh, Foutse
TI Automatic Mining of Opinions Expressed About APIs in Stack Overflow
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Benchmark testing; Usability; Search engines; Java; Data mining; Tools;
   API; opinion; categorization; review; API aspect; API review mining
ID TRACEABILITY LINKS; AGREEMENT; SENTIMENT; KAPPA; CODE
AB With the proliferation of online developer forums, developers share their opinions about the APIs they use. The plethora of such information can present challenges to the developers to get quick but informed insights about the APIs. To understand the potential benefits of such API reviews, we conducted a case study of opinions in Stack Overflow using a benchmark dataset of 4,522 sentences. We observed that opinions about diverse API aspects (e.g., usability) are prevalent and offer insights that can shape developers' perception and decisions related to software development. Motivated by the finding, we built a suite of techniques to automatically mine and categorize opinions about APIs from forum posts. First, we detect opinionated sentences in the forum posts. Second, we associate the opinionated sentences to the API mentions. Third, we detect API aspects (e.g., performance, usability) in the reviews. We developed and deployed a tool called Opiner, supporting the above techniques. Opiner is available online as a search engine, where developers can search for APIs by their names to see all the aggregated opinions about the APIs that are automatically mined and summarized from developer forums.
C1 [Uddin, Gias] McGill Univ, Sch Comp Sci, Montreal, PQ H3A 0G4, Canada.
   [Khomh, Foutse] Ecole Polytech Montreal, SWAT Team, Montreal, PQ H3T 1J4, Canada.
C3 McGill University; Universite de Montreal; Polytechnique Montreal
RP Uddin, G (corresponding author), McGill Univ, Sch Comp Sci, Montreal, PQ H3A 0G4, Canada.
EM giasu@cs.mcgill.ca; foutse.khomh@polymtl.ca
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX We sincerely thank the anonymous reviewers for providing us valuable
   feedback to improve the paper. We are grateful to Prof Novielli for
   providing cues on how to train the SentiCR classifier, to run the
   Senti4SD classifier, and for kindly reviewing the contents of Section
   8.1. We thank all the coders who participated in the development of the
   benchmark data and the evaluation of the algorithms. This work is partly
   supported by the Natural Sciences and Engineering Research Council of
   Canada (NSERC).
CR Ahmed T, 2017, IEEE INT CONF AUTOM, P106, DOI 10.1109/ASE.2017.8115623
   Anderson A, 2013, P 22 INT C WORLD WID, DOI DOI 10.1145/2488388.2488398
   [Anonymous], An Introduction to Information Retrieval
   [Anonymous], 2009, MAKING APIS MORE USA
   [Anonymous], 2001, EMOTIONS SOCIAL PSYC
   [Anonymous], 2019, Machine learning in python
   [Anonymous], 2017, MACHINE LEARNING PYT
   [Anonymous], 2014, Proceedings of the 17th ACM conference on Computer supported cooperative work social computing
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Bacchelli A., 2010, Proceedings of the 32nd International Conference on Software Engineering, P375
   Bacchelli A, 2012, PROC INT CONF SOFTW, P375, DOI 10.1109/ICSE.2012.6227177
   Bacchelli A, 2011, EUR CON SFTWR MTNCE, P15, DOI 10.1109/CSMR.2011.6
   Backon J., 2017, DECLINE GPL
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bazelli B, 2013, PROC IEEE INT CONF S, P460, DOI 10.1109/ICSM.2013.72
   Blair-Goldensohn S., 2008, P WWW WORKSH NLP INF
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Calefato F, 2014, P 12 WORK C MIN SOFT
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Calefato F, 2017, INT CONF AFFECT, P79, DOI 10.1109/ACIIW.2017.8272591
   Chandra S, 2013, PROCEEDINGS OF 2013 INTERNATIONAL CONFERENCE ON CIRCUITS, POWER AND COMPUTING TECHNOLOGIES (ICCPCT 2013), P494
   Chawla NV, 2010, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, SECOND EDITION, P875, DOI 10.1007/978-0-387-09823-4_45
   Chen CY, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962588
   Chen CY, 2017, PROC INT CONF SOFTW, P450, DOI 10.1109/ICSE.2017.48
   Chen CY, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P338, DOI 10.1109/SANER.2016.21
   Chen GB, 2016, IEEE INT CONF AUTOM, P744, DOI 10.1145/2970276.2970317
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Chendev Yu. G., 2013, PROBLEMS ENV MANAGEM, P201, DOI DOI 10.1145/2488388.2488407
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Correa D, 2014, P 21 ASIA PACIFIC SO
   Correa D, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P631, DOI 10.1145/2566486.2568036
   Dagenais B., 2010, P 18 INT S FDN SOFTW, P127
   Dagenais B, 2012, PROC INT CONF SOFTW, P47, DOI 10.1109/ICSE.2012.6227207
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   FasterXML, 2016, JACKSON
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Ginsca AL, 2013, P 2013 WORKSH DAT DR, P25, DOI [10.1145/2513577.2513579, DOI 10.1145/2513577.2513579]
   Gómez M, 2017, IEEE SOFTWARE, V34, P81, DOI 10.1109/MS.2017.46
   Google, 2016, GSON
   Guerrouj L, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P321, DOI 10.1109/SANER.2015.7081842
   Guzman E., 2014, Association for Computing Machinery, P352
   Guzman E, 2013, P 2013 9 JOINT M FDN, P671, DOI 10.1145/2491411.2494578
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Hamner B, 2018, METRICS
   Hatzivassiloglou Vasileios., 2000, P INT C COMPUTATIONA, P299, DOI DOI 10.3115/990820.990864
   Hou D, 2011, P IEEE 19 INT C PROG, P53
   Hou DQ, 2013, PROC IEEE INT CONF S, P60, DOI 10.1109/ICSM.2013.17
   Hsu C.-W., 2003, PRACTICAL GUIDE SUPP
   Hu MQ, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P755
   IBM, 2016, ALCH SENT DET
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P400, DOI 10.1145/2591062.2591108
   Islam MR, 2017, IEEE WORK CONF MIN S, P203, DOI 10.1109/MSR.2017.9
   Jongeling R, 2017, EMPIR SOFTW ENG, V22, P2543, DOI 10.1007/s10664-016-9493-x
   Jongeling R, 2015, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSM.2015.7332508
   Kavaler David, 2013, Social Informatics. 5th International Conference, SocInfo 2013. Proceedings: LNCS 8238, P405, DOI 10.1007/978-3-319-03260-3_35
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Lanza M., 2018, P 40 IEEE ACM INT C
   Lin B, 2018, **DROPPED REF**
   Linares-Vasquez M., 2014, P 22 INT C PROGR COM, P83, DOI DOI 10.1145/2597008.2597155
   Liu B., 2012, SYNTHESIS LECT HUMAN, V5, P1, DOI [DOI 10.2200/S00416ED1V01Y201204HLT016, 10.2200/s00416ed1v01y201204hlt016]
   Liu Bing., 2016, Sentiment Analysis and Subjectivity, V2nd
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   Makrehchi M, 2008, LECT NOTES COMPUT SC, V4956, P222
   Mäntylä M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P247, DOI [10.1109/MSR.2016.033, 10.1145/2901739.2901752]
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Moonen L, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/WCRE.2001.957806
   Murgia A., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P262
   Nielsen F. A., 2011, ARXIV
   NLTK, 2016, PROC WORKSHOP SEMANT
   Novielli N, 2018, IEEE WORK CONF MIN S, P364, DOI 10.1145/3196398.3196403
   Novielli N, 2018, IEEE WORK CONF MIN S, P14, DOI 10.1145/3196398.3196453
   Novielli N, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P33, DOI 10.1145/2804381.2804387
   Oracle, 2017, JAV DAT API
   Ortu M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P303, DOI 10.1109/MSR.2015.35
   Overflow S, 2017, JSON XML COMP
   Overflow S., 2017, TAG SYNONYMS
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Pang B, 2002, PROCEEDINGS OF THE 2002 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING, P79, DOI 10.3115/1118693.1118704
   Pletea D., 2014, 11 WORKING C MSR, P348, DOI [10.1145/2597073.2597117, DOI 10.1145/2597073.2597117]
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Powers D. M. W., 1998, New methods in language processing and computational natural language learning, P151, DOI DOI 10.3115/1603899.1603924
   Rigby PC, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P832, DOI 10.1109/ICSE.2013.6606629
   Robillard MP, 2015, EMPIR SOFTW ENG, V20, P1558, DOI 10.1007/s10664-014-9323-y
   Röder M, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P399, DOI 10.1145/2684822.2685324
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Sebastiani F, 2002, ACM COMPUT SURV, V34, P1, DOI 10.1145/505282.505283
   Sebastiani F., 2006, P 5 INT C LANG RES E, P417, DOI DOI 10.1155/2015/715730
   Silveira N, 2014, LREC 2014 - NINTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION, P2897
   Singer J., 1999, Fifth IEEE Workshop on Empirical Studies of Software Maintenance (WESS99). Theme: How to Wade Through the Mire of Evidence?, P71
   Socher Richard, 2013, P 2013 C EMPIRICAL M, P1631
   Sonatype, 2014, MAVEN CENTRAL REPOSI
   Stanley C., 2013, P ICCM, V2013
   Storey Margaret-Anne, 2012, Crowd Documentation: Exploring the Coverage and the Dynamics of API Discussions on Stack Overflow, V11
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Tausczik Y.R., 2014, Proceedings of the 17th ACM Conference on Computer Supported Cooperative Work and Social Computing, CSCW'14, P355
   Thelwall M, 2010, J AM SOC INF SCI TEC, V61, P2544, DOI 10.1002/asi.21416
   Toutanova K., 2003, P 2003 C N AM CHAPT, V1, P173
   Uddin G., 2017, Resolving API mentions in informal documents
   Uddin G, 2017, PRIMARY SURVEY NEEDS
   Uddin G, 2016, PILOT SURVEY NEEDS A
   Uddin G, 2019, IEEE T SOFTW ENG, V40
   Uddin G, 2018, OPINION VALUE ANAL A
   Uddin G, 2017, IEEE INT CONF AUTOM, P159, DOI 10.1109/ASE.2017.8115629
   Uddin G, 2017, IEEE INT CONF AUTOM, P978, DOI 10.1109/ASE.2017.8115715
   Viera AJ, 2005, FAM MED, V37, P360
   Wang S., 2012, Baselines and bigrams: Simple, good sentiment and topic classification, P90
   Warriner AB, 2013, BEHAV RES METHODS, V45, P1191, DOI 10.3758/s13428-012-0314-x
   Wikipedia, 2014, APPL PROGR INT
   Wilson TS, 2005, PHIL EDUC, P347, DOI 10.3115/1220575.1220619
   Wong E, 2013, IEEE INT CONF AUTOM, P562, DOI 10.1109/ASE.2013.6693113
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
   Zhang YY, 2013, CONF PROC INT SYMP C, P142, DOI 10.1109/ICPC.2013.6613842
   Zhou B., 2014, Proceedings of the International Conference on Program Comprehension (ICPC'14), P95, DOI DOI 10.1145/2597008.2597142
   Zou CY, 2014, PROC IEEE INT CONF S, P593, DOI 10.1109/ICSME.2014.103
NR 117
TC 16
Z9 16
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2021
VL 47
IS 3
BP 522
EP 559
DI 10.1109/TSE.2019.2900245
PG 38
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA RA1TM
UT WOS:000631200300005
DA 2024-07-18
ER

PT J
AU Paterson, C
   Calinescu, R
AF Paterson, Colin
   Calinescu, Radu
TI Observation-Enhanced QoS Analysis of Component-Based Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Quality of service; Unified modeling language; Analytical models; Markov
   processes; Probabilistic logic; Component architectures; Quality of
   service; component-based systems; Markov models; probabilistic model
   checking
ID PHASE-TYPE DISTRIBUTIONS; PROBABILISTIC MODEL CHECKER; QUANTITATIVE
   VERIFICATION; SELF-ADAPTATION; 3 MOMENTS; PERFORMANCE; QUALITY;
   ALGORITHMS; EFFICIENT; BOUNDS
AB We present a new method for the accurate analysis of the quality-of-service (QoS) properties of component-based systems. Our method takes as input a QoS property of interest and a high-level continuous-time Markov chain (CTMC) model of the analysed system, and refines this CTMC based on observations of the execution times of the system components. The refined CTMC can then be analysed with existing probabilistic model checkers to accurately predict the value of the QoS property. The paper describes the theoretical foundation underlying this model refinement, the tool we developed to automate it, and two case studies that apply our QoS analysis method to a service-based system implemented using public web services and to an IT support system at a large university, respectively. Our experiments show that traditional CTMC-based QoS analysis can produce highly inaccurate results and may lead to invalid engineering and business decisions. In contrast, our new method reduced QoS analysis errors by 84.4-89.6 percent for the service-based system and by 94.7-97 percent for the IT support system, significantly lowering the risk of such invalid decisions.
C1 [Paterson, Colin; Calinescu, Radu] Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
C3 University of York - UK
RP Calinescu, R (corresponding author), Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
EM colin.paterson@york.ac.uk; radu.calinescu@york.ac.uk
OI Calinescu, Radu/0000-0002-2678-9260; Paterson, Colin/0000-0002-6678-3752
FU SPF [EP/V026747/1] Funding Source: UKRI
CR Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   Anderson W. J., 2012, Continuous-time Markov chains: An applications-oriented approach
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2014, Technical report
   [Anonymous], [No title captured]
   Asmussen S, 1996, SCAND J STAT, V23, P419
   Aziz A, 1996, LNCS, P269, DOI [DOI 10.1007/3-540-61474-5_75, 10.1007/3-540-61474-5_75, DOI 10.1007/3-540-61474-5]
   Baarir Soheib, 2009, Performance Evaluation Review, V36, P4, DOI 10.1145/1530873.1530876
   Baier C, 2013, MATH STRUCT COMP SCI, V23, P751, DOI 10.1017/S0960129512000254
   Baier C, 2003, IEEE T SOFTWARE ENG, V29, P524, DOI 10.1109/TSE.2003.1205180
   Becker AH, 2006, DIVIN REREAD LATE AN, P169
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Behrmann G, 2006, INT CONF QUANT EVAL, P125
   Bobbio A, 2005, STOCH MODELS, V21, P303, DOI 10.1081/STM-200056210
   BOBBIO A, 1992, COMPUTER PERFORMANCE EVALUATION, P33
   Brázdil T, 2015, LECT NOTES COMPUT SC, V9259, P141, DOI 10.1007/978-3-319-22264-6_10
   Buchholz P, 2014, SPRINGERBRIEF MATH, P5, DOI 10.1007/978-3-319-06674-5_2
   Calinescu R., 2017, Self-Aware Computing Systems, P337
   Calinescu R, 2018, IEEE T SOFTWARE ENG, V44, P1039, DOI 10.1109/TSE.2017.2738640
   Calinescu R, 2018, J SYST SOFTWARE, V143, P140, DOI 10.1016/j.jss.2018.05.013
   Calinescu R, 2016, IEEE T RELIAB, V65, P107, DOI 10.1109/TR.2015.2452931
   Calinescu R, 2015, LECT NOTES COMPUT SC, V9033, P235, DOI 10.1007/978-3-662-46675-9_16
   Calinescu R, 2013, IEEE INT CONF AUTOM, P734, DOI 10.1109/ASE.2013.6693145
   Calinescu R, 2013, 2013 INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE), P131, DOI 10.1109/TASE.2013.41
   Carrasco JA, 2002, IEEE T COMPUT, V51, P254, DOI 10.1109/12.990125
   Ciobanu G, 2014, LECT NOTES COMPUT SC, V8829, P91, DOI 10.1007/978-3-319-11737-9_7
   da Silva J, 2017, REV CONTEMP EDUC, V12, P193
   Dehnert C, 2017, LECT NOTES COMPUT SC, V10427, P592, DOI 10.1007/978-3-319-63390-9_31
   Fackrell M, 2009, HEALTH CARE MANAG SC, V12, P11, DOI 10.1007/s10729-008-9070-y
   Filieri A, 2016, IEEE T SOFTWARE ENG, V42, P75, DOI 10.1109/TSE.2015.2421318
   Filieri A, 2012, FORM ASP COMPUT, V24, P163, DOI 10.1007/s00165-011-0207-2
   Franco JM, 2016, J SYST SOFTWARE, V115, P42, DOI 10.1016/j.jss.2016.01.026
   Franks G, 2009, IEEE T SOFTWARE ENG, V35, P148, DOI 10.1109/TSE.2008.74
   Gallotti S, 2008, LECT NOTES COMPUT SC, V5281, P119, DOI 10.1007/978-3-540-87879-7_8
   Gerasimou S, 2018, AUTOMAT SOFTW ENG, V25, P785, DOI 10.1007/s10515-018-0235-8
   Gerasimou S, 2015, IEEE INT CONF AUTOM, P319, DOI 10.1109/ASE.2015.22
   Ghezzi C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P277, DOI 10.1145/2568225.2568234
   Hessel Anders, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P77, DOI 10.1007/978-3-540-78917-8_3
   Horvath A., 2000, Approximating heavy tailed behaviour with phase type distributions
   Horváth A, 2007, STOCH MODELS, V23, P167, DOI 10.1080/15326340701300712
   Infante Lopez G. G., 2001, Process Algebra and Probabilistic Methods. Performance Modelling and Verification. Joint International Workshop, PAPM-PROBMIV 2001. Proceedings (Lecture Notes in Computer Science Vol.2165), P57
   Jansen DN, 2008, LECT NOTES COMPUT SC, V4899, P69
   Katoen JP, 2011, PERFORM EVALUATION, V68, P90, DOI 10.1016/j.peva.2010.04.001
   Korenciak L'ubos, 2014, Computer Performance Engineering. 11th European Workshop, EPEW 2014. Proceedings: LNCS 8721, P119, DOI 10.1007/978-3-319-10885-8_9
   Koziolek A, 2013, J SYST SOFTWARE, V86, P2542, DOI 10.1016/j.jss.2013.03.081
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Kwiatkowska M, 2007, LECT NOTES COMPUT SC, V4486, P220
   Kwiatkowska M, 2013, COMPUT SCI-RES DEV, V28, P295, DOI 10.1007/s00450-013-0249-1
   Leavens G.T., 2000, FDN COMPONENT BASED
   Marsan MA., 1994, Modelling with Generalized Stochastic Petri Nets
   Marshall AH, 2009, INT T OPER RES, V16, P213, DOI 10.1111/j.1475-3995.2009.00672.x
   Meedeniya I, 2014, SOFTW SYST MODEL, V13, P1395, DOI 10.1007/s10270-012-0277-5
   Muller H, 2014, EVOLVING SOFTWARE SY, P229
   Norris J. R., 1998, MARKOV CHAINS
   OCinneide C. A., 1999, Commun. Stat. Stoch. Model, V15, P731, DOI [DOI 10.1080/15326349908807560, 10.1080/15326349908807560.781]
   Okamura H, 2014, COMMUN STAT-SIMUL C, V43, P2031, DOI 10.1080/03610918.2013.848895
   Okamura H, 2016, SPRINGER SER RELIAB, P49, DOI 10.1007/978-3-319-30599-8_3
   Paterson C, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P121, DOI 10.1109/ICSA.2017.14
   Perez-Palacin D, 2012, J SYST SOFTWARE, V85, P2796, DOI 10.1016/j.jss.2012.04.077
   Reinecke Philipp, 2013, Computer Performance Engineering. 10th European Workshop, EPEW 2013. Proceedings: LNCS 8168, P164, DOI 10.1007/978-3-642-40725-3_13
   Reinecke P., 2012, 2012 Ninth International Conference on Quantitative Evaluation of Systems (QEST 2012), P201, DOI 10.1109/QEST.2012.29
   Reinecke P, 2012, COMPUT MATH APPL, V64, P3840, DOI 10.1016/j.camwa.2012.03.016
   Sato N, 2007, LECT NOTES COMPUT SC, V4749, P107
   Smith C. U., 1993, Performance Evaluation of Computer and Communication Systems. Joint Tutorial Papers Performance '93 and Sigmetrics '93, P509, DOI 10.1007/BFb0013866
   Smith CU, 2007, LECT NOTES COMPUT SC, V4486, P395
   Stewart W. J., 2009, Probability, Markov Chains, Queues, and Simulation: the Mathematical Basis of Performance Modeling
   Su GX, 2013, LECT NOTES COMPUT SC, V8144, P297, DOI 10.1007/978-3-642-41202-8_20
   Thümmler A, 2006, IEEE T DEPEND SECURE, V3, P245, DOI 10.1109/TDSC.2006.27
   Wang JF, 2008, J SUPERCOMPUT, V45, P296, DOI 10.1007/s11227-008-0173-5
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
   Yamaguchi Y, 2010, COMMUN STAT-THEOR M, V39, P2333, DOI 10.1080/03610926.2010.483306
   Yin GG., 2012, Continuous-Time Markov Chains and Applications: A Singular Perturbation Approach
NR 74
TC 12
Z9 12
U1 1
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2020
VL 46
IS 5
BP 526
EP 548
DI 10.1109/TSE.2018.2864159
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA LS2LR
UT WOS:000536221400003
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Natella, R
   Winter, S
   Cotroneo, D
   Suri, N
AF Natella, Roberto
   Winter, Stefan
   Cotroneo, Domenico
   Suri, Neeraj
TI Analyzing the Effects of Bugs on Software Interfaces
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Unified modeling language; Computer bugs; Perturbation
   methods; Testing; Fault tolerance; Dependability; fault injection;
   software components; error propagation; error modeling; error handling
ID FAULT INJECTION TECHNIQUES; FAILURE PROPAGATION; ERROR PROPAGATION;
   COMPONENT; COTS; DEPENDABILITY; RELIABILITY; ACCURACY; MUTATION;
   BEHAVIOR
AB Critical systems that integrate software components (e.g., from third-parties) need to address the risk of residual software defects in these components. Software fault injection is an experimental solution to gauge such risk. Many error models have been proposed for emulating faulty components, such as by injecting error codes and exceptions, or by corrupting data with bit-flips, boundary values, and random values. Even if these error models have been able to find breaches in fragile systems, it is unclear whether these errors are in fact representative of software faults. To pursue this open question, we propose a methodology to analyze how software faults in C/C++ software components turn into errors at components' interfaces (interface error propagation), and present an experimental analysis on what, where, and when to inject interface errors. The results point out that the traditional error models, as used so far, do not accurately emulate software faults, but that richer interface errors need to be injected, by: injecting both fail-stop behaviors and data corruptions; targeting larger amounts of corrupted data structures; emulating silent data corruptions not signaled by the component; combining bit-flips, boundary values, and data perturbations.
C1 [Natella, Roberto; Cotroneo, Domenico] Federico II Univ Naples, DIETI Dept, I-80138 Naples, NA, Italy.
   [Winter, Stefan; Suri, Neeraj] Tech Univ Darmstadt, DEEDS Grp, D-64289 Darmstadt, Germany.
C3 University of Naples Federico II; Technical University of Darmstadt
RP Natella, R (corresponding author), Federico II Univ Naples, DIETI Dept, I-80138 Naples, NA, Italy.
EM roberto.natella@unina.it; sw@cs.tu-darmstadt.de; cotroneo@unina.it;
   suri@cs.tu-darmstadt.de
RI Winter, Stefan/AAN-1627-2020; Natella, Roberto/AAT-7087-2020
OI Winter, Stefan/0000-0001-8244-995X; Natella,
   Roberto/0000-0003-1084-4824; Suri, Neeraj/0000-0003-1688-1167
FU UniNA; Compagnia di San Paolo; BMBF TUD-CRISP
FX This work has been supported by UniNA and Compagnia di San Paolo in the
   frame of "Programma STAR" (project "FIDASTE"), and in part by BMBF
   TUD-CRISP.
CR Abdelmoez W, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P384, DOI 10.1109/METRIC.2004.1357923
   Aliabadi Maryam Raiyat, 2016, Computer Safety, Reliability and Security. 35th International Conference, SAFECOMP 2016. Proceedings: LNCS 9922, P12, DOI 10.1007/978-3-319-45477-1_2
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], PUBLICATION SERIES J
   [Anonymous], 2008, WILEY ONLINE LIB
   [Anonymous], JUSTIFYING USE SOFTW
   [Anonymous], P 16 IEEE INT S SOFT
   [Anonymous], ESTIMATING ERROR PRO
   [Anonymous], 2626242011 ISO
   [Anonymous], 2005, 2RDU00001
   [Anonymous], P WORKSH SELF HEAL A
   Arlat J, 2003, IEEE T COMPUT, V52, P1115, DOI 10.1109/TC.2003.1228509
   Arlat J, 2002, IEEE T COMPUT, V51, P138, DOI 10.1109/12.980005
   ARLAT J, 1990, IEEE T SOFTWARE ENG, V16, P166, DOI 10.1109/32.44380
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Barbosa R, 2005, LECT NOTES COMPUT SC, V3463, P246
   BARTON JH, 1990, IEEE T COMPUT, V39, P575, DOI 10.1109/12.54853
   Bouissou Olivier., 2009, The International Space System Engineering Conference: Data Systems in Aerospace-DASIA 2009, V1, P1
   Brosch F, 2012, IEEE T SOFTWARE ENG, V38, P1319, DOI 10.1109/TSE.2011.94
   Cardoso J., 2004, J. Web Semant., V1, P281, DOI [10.1016/j.websem.2004.03.001, DOI 10.1016/J.WEBSEM.2004.03.001]
   Caruso F, 2012, ICAART: PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON AGENTS AND ARTIFICIAL INTELLIGENCE, VOL 1, P400, DOI 10.5220/0003805504000405
   Chandra S, 1998, DIG PAP INT SYMP FAU, P240, DOI 10.1109/FTCS.1998.689475
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Christmansson J, 1996, DIG PAP INT SYMP FAU, P304, DOI 10.1109/FTCS.1996.534615
   Cormen T. H., 2009, Introduction to Algorithms, VSecond
   Cortellessa V, 2007, LECT NOTES COMPUT SC, V4608, P140
   Cotroneo D, 2018, IEEE T DEPEND SECURE, V15, P40, DOI 10.1109/TDSC.2016.2522968
   Cotroneo D, 2012, 2012 NINTH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC 2012), P162, DOI 10.1109/EDCC.2012.12
   Cotroneo D, 2013, IEEE SECUR PRIV, V11, P38, DOI 10.1109/MSP.2013.54
   CRISTIAN F, 1991, COMMUN ACM, V34, P56, DOI 10.1145/102792.102801
   Danglot B, 2018, EMPIR SOFTW ENG, V23, P2086, DOI 10.1007/s10664-017-9571-8
   Daran M., 1996, SIGSOFT Software Engineering Notes, V21, P158, DOI [10.1145/229000.226313, 10.1145/226295.226313]
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Duraes JA, 2006, IEEE T SOFTWARE ENG, V32, P849, DOI 10.1109/TSE.2006.113
   Dvorak D., 2009, AIAA INFOTECH AEROSP, V1882, P1, DOI DOI 10.2514/6.2009-1882
   Eldh S, 2007, LECT NOTES COMPUT SC, V4581, P74
   Filieri A, 2010, LECT NOTES COMPUT SC, V6092, P1, DOI 10.1007/978-3-642-13238-4_1
   Galli E, 2008, IEEE ACM DIS SIM, P319, DOI 10.1109/DS-RT.2008.44
   Goerzen C, 2010, J INTELL ROBOT SYST, V57, P65, DOI 10.1007/s10846-009-9383-1
   Goseva-Popstojanova K, 2001, PERFORM EVALUATION, V45, P179, DOI 10.1016/S0166-5316(01)00034-7
   Grunske L, 2008, IEEE HI ASS SYS ENGR, P283, DOI 10.1109/HASE.2008.32
   Hari SKS, 2012, ASPLOS XVII: SEVENTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P123
   Henning J. L., 2006, SIGARCH COMPUT ARCHI, V34, P1, DOI [DOI 10.1145/1186736.1186737, 10.1145/1186736.1186737]
   Hiller M, 2004, IEEE T COMPUT, V53, P512, DOI 10.1109/TC.2004.1275294
   Hiller M, 2001, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P161, DOI 10.1109/DSN.2001.941402
   Holzmann GJ, 2014, COMMUN ACM, V57, P64, DOI 10.1145/2560217.2560218
   Hsueh MC, 1997, COMPUTER, V30, P75, DOI 10.1109/2.585157
   Hunt J.W., 1976, An Algorithm for Differential File Comparison
   ISO, 2011, 2626262011 ISO
   Jarboui T, 2002, 2002 PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P51, DOI 10.1109/PRDC.2002.1185618
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Johansson A, 2005, I C DEPEND SYS NETWO, P86, DOI 10.1109/DSN.2005.45
   Johansson A, 2007, I C DEPEND SYS NETWO, P502, DOI 10.1109/DSN.2007.71
   Kanawati G.A., 1993, Proceedings of the 9th AIAA Computing in Aerospace Conference, P1297
   KANAWATI GA, 1995, IEEE T COMPUT, V44, P248, DOI 10.1109/12.364536
   Kang P, 2018, SOFTWARE PRACT EXPER, V48, P385, DOI 10.1002/spe.2501
   KAO WL, 1993, IEEE T SOFTWARE ENG, V19, P1105, DOI 10.1109/32.256857
   Kargén U, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P782, DOI 10.1145/2786805.2786844
   Koopman P, 2000, IEEE T SOFTWARE ENG, V26, P837, DOI 10.1109/32.877845
   Lanzaro A., 2014, P 2014 INT S SOFTW T, P397
   Madeira H, 2000, DSN 2000: INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P417, DOI 10.1109/ICDSN.2000.857571
   Marick B., 1994, The craft of software testing: Subsystem testing including object-based and object-oriented testing
   Marinescu PD, 2011, ACM T COMPUT SYST, V29, DOI 10.1145/2063509.2063511
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   Mohamed A, 2008, INT CONF QUAL SOFTW, P402, DOI 10.1109/QSIC.2008.46
   Mohamed H, 2010, CAIRO INT BIOM ENG, P98, DOI 10.1109/CIBEC.2010.5716066
   Moraes R, 2006, EDCC 2006: SIXTH EUROPEAN DEPENDABLE COMPUTING CONFERENCE, PROCEEDINGS, P53
   Mukherjee SS, 2003, IEEE MICRO, V23, P70, DOI 10.1109/MM.2003.1261389
   Myers EW, 1986, ALGORITHMICA, V1, P251, DOI 10.1007/BF01840446
   Natella R, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2841425
   Natella R, 2013, IEEE T SOFTWARE ENG, V39, P80, DOI 10.1109/TSE.2011.124
   Ng WT, 2001, IEEE T COMPUT, V50, P322, DOI 10.1109/12.919278
   Nicola Matthias., 2003, Proceedings of the ACM International Conference on Information and Knowledge Management (CIKM), P175
   O'Callahan R, 2017, 2017 USENIX ANNUAL TECHNICAL CONFERENCE (USENIX ATC '17), P377
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Petersen K, 2018, IEEE T SOFTWARE ENG, V44, P237, DOI 10.1109/TSE.2017.2677909
   Popic P, 2005, 16th IEEE International Symposium on Software Reliability Engineering, Proceedings, P53, DOI 10.1109/ISSRE.2005.18
   Racunas P, 2007, INT S HIGH PERF COMP, P169
   Ries G. L., 1994, Digest of Papers. The Twenty-Fourth International Symposium on Fault-Tolerant Computing (Cat. No.94CH3441-3), P86, DOI 10.1109/FTCS.1994.315654
   Serebryany K., 2012, USENIX ATC 2012, P309
   Sullivan M., 1991, Digest of Papers. Fault-Tolerant Computing: Twenty-First International Symposium (Cat. No.91CH2985-0), P2, DOI 10.1109/FTCS.1991.146625
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Tice C, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P941
   VOAS J, 1991, IEEE SOFTWARE, V8, P41, DOI 10.1109/52.73748
   Voas J, 1997, IEEE SOFTWARE, V14, P73, DOI 10.1109/52.595959
   Voas J, 1998, IEEE SOFTWARE, V15, P16, DOI 10.1109/52.663777
   Voas JM, 1998, COMPUTER, V31, P53, DOI 10.1109/2.683008
   Wang L, 2015, IEEE T DEPEND SECURE, V12, P243, DOI 10.1109/TDSC.2014.2327967
   Wei JS, 2014, I C DEPEND SYS NETWO, P375, DOI 10.1109/DSN.2014.2
   Weyuker EJ, 1998, IEEE SOFTWARE, V15, P54, DOI 10.1109/52.714817
   Winter S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P51, DOI 10.1145/1985793.1985801
NR 92
TC 6
Z9 6
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2020
VL 46
IS 3
BP 280
EP 301
DI 10.1109/TSE.2018.2850755
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA KX9OY
UT WOS:000522205900003
DA 2024-07-18
ER

PT J
AU He, Q
   Zhou, R
   Zhang, XY
   Wang, YC
   Ye, DY
   Chen, FF
   Grundy, JC
   Yang, Y
AF He, Qiang
   Zhou, Rui
   Zhang, Xuyun
   Wang, Yanchun
   Ye, Dayong
   Chen, Feifei
   Grundy, John C.
   Yang, Yun
TI Keyword Search for Building Service-Based Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Service-based system; keyword search; service composition; web service;
   quality of service; cloud computing
ID WEB; SELECTION
AB With the fast growth of applications of service-oriented architecture (SOA) in software engineering, there has been a rapid increase in demand for building service-based systems (SBSs) by composing existing Web services. Finding appropriate component services to compose is a key step in the SBS engineering process. Existing approaches require that system engineers have detailed knowledge of SOA techniques which is often too demanding. To address this issue, we propose Keyword Search for Service-based Systems (KS3), a novel approach that integrates and automates the system planning, service discovery and service selection operations for building SBSs based on keyword search. KS3 assists system engineers without detailed knowledge of SOA techniques in searching for component services to build SBSs by typing a few keywords that represent the tasks of the SBSs with quality constraints and optimisation goals for system quality, e.g., reliability, throughput and cost. KS3 offers a new paradigm for SBS engineering that can significantly save the time and effort during the system engineering process. We conducted large-scale experiments using two real-world Web service datasets to demonstrate the practicality, effectiveness and efficiency of KS3.
C1 [He, Qiang] Wuhan Univ, State Key Lab Software Engn, Wuhan 430072, Peoples R China.
   [He, Qiang] Swinburne Univ Technol, Sch Software Engn & Elect Engn, Melbourne, Vic 3122, Australia.
   [Zhou, Rui] Victoria Univ, Ctr Appl Informat, Melbourne, Vic 3122, Australia.
   [Zhang, Xuyun] Univ Auckland, Auckland 1010, New Zealand.
   [Wang, Yanchun; Ye, Dayong; Yang, Yun] Swinburne Univ Technol, Sch Software & Elect Engn, Melbourne, Vic 3122, Australia.
   [Chen, Feifei] Federat Univ Australia, Sch Engn & Informat Technol, Melbourne, Vic, Australia.
   [Grundy, John C.] Deakin Univ, Sch Informat Technol, Geelong, Vic 3125, Australia.
C3 Wuhan University; Swinburne University of Technology; Victoria
   University; University of Auckland; Swinburne University of Technology;
   Federation University Australia; Deakin University
RP He, Q (corresponding author), Wuhan Univ, State Key Lab Software Engn, Wuhan 430072, Peoples R China.; He, Q (corresponding author), Swinburne Univ Technol, Sch Software Engn & Elect Engn, Melbourne, Vic 3122, Australia.
EM qhe@swin.edu.au; rui.zhou@vu.edu.au; xuyun.zhang@auckland.ac.nz;
   yanchunwang@swin.edu.au; dye@swin.edu.au; chenfeifei1983@gmail.com;
   j.grundy@deakin.edu.au; yyang@swin.edu.au
RI Wang, Yixuan/GZK-6559-2022; wang, yiran/IAP-0414-2023; Wang,
   Yijun/GXW-1763-2022; Chen, Feifei/AAE-7966-2020; Zhou, Rui/P-4352-2019;
   Wang, yanru/JAX-5241-2023; zhang, xu/GYE-3558-2022; Wang,
   Yin/HCI-9352-2022; Grundy, John/AAF-1716-2019; wang,
   yixuan/GXW-2866-2022; Wang, Yiru/JMB-2281-2023; wang, yi/GVT-8516-2022;
   Wu, Yiping/JJF-6185-2023; ZHANG, XUCHEN/KBB-7989-2024
OI Zhou, Rui/0000-0001-6807-4362; Grundy, John/0000-0003-4928-7076; Wu,
   Yiping/0009-0000-6223-5786; Ye, Dayong/0000-0002-7561-0992; Zhang,
   Xuyun/0000-0001-7353-4159
FU Australian Research Council [DP150101775]
FX This work is partly supported by Australian Research Council Discovery
   Project DP150101775. We are grateful for Jian Wang's help with crawling
   the information from programmableweb.com. Qiang He is the corresponding
   author of this paper.
CR [Anonymous], 2010, P 19 INT C WORLD WID, DOI DOI 10.1145/1772690.1772693
   [Anonymous], 2013, BPM PROD AN COMP IBM
   [Anonymous], 2003, SIGECOM EXCH
   [Anonymous], 2008, P 17 INT C WORLD WID, DOI DOI 10.1145/1367497.1367605
   [Anonymous], 1992, STEINER TREE PROBLEM
   Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   Balasubramaniam S, 2008, IEEE SOFTWARE, V25, P50, DOI 10.1109/MS.2008.159
   Baresi L, 2011, IEEE T SOFTWARE ENG, V37, P247, DOI 10.1109/TSE.2010.37
   Barros A. P., 2006, IT Professional, V8, P31, DOI 10.1109/MITP.2006.123
   Benslimane D, 2008, IEEE INTERNET COMPUT, V12, P13, DOI 10.1109/MIC.2008.110
   Bergamaschi S., 2011, ACM SIGMOD, P565
   Bhalotia G, 2002, PROC INT CONF DATA, P431, DOI 10.1109/ICDE.2002.994756
   Brogi A, 2008, ACM T INTERNET TECHN, V8, DOI 10.1145/1391949.1391953
   Calinescu R, 2011, IEEE T SOFTWARE ENG, V37, P387, DOI 10.1109/TSE.2010.92
   Cardellini V, 2012, IEEE T SOFTWARE ENG, V38, P1138, DOI 10.1109/TSE.2011.68
   Carpineto C, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2071389.2071390
   Cassar G, 2014, IEEE T SERV COMPUT, V7, P654, DOI 10.1109/TSC.2013.28
   Dojchinovski Milan, 2012, The Semantic Web. 11th International Semantic Web Conference (ISWC 2012). Proceedings, P34, DOI 10.1007/978-3-642-35176-1_3
   Durrett R., 2007, Cambridge Series in Statistical and Probabilistic Mathematics
   Feng ZY, 2015, COMPUT J, V58, P1293, DOI 10.1093/comjnl/bxu080
   Golenberg K., 2008, SIGMOD Conference, P927
   He Q, 2014, IEEE T SOFTWARE ENG, V40, P461, DOI 10.1109/TSE.2013.48
   He Q, 2014, IEEE T SOFTWARE ENG, V40, P192, DOI 10.1109/TSE.2013.2297911
   Hoffmann J, 2007, P 22 NAT C ART INT A, V22, P1013
   Hristidis V., 2002, Proceedings of the Twenty-eighth International Conference on Very Large Data Bases, P670
   Huang G, 2015, IEEE T SERV COMPUT, V8, P494, DOI 10.1109/TSC.2014.2347293
   Jiang MH, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P393, DOI 10.1145/2723372.2749447
   Keman Huang, 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P552, DOI 10.1109/ICWS.2012.32
   Kil H, 2009, WORLD WIDE WEB, V12, P321, DOI 10.1007/s11280-009-0064-6
   Klein Adrian., 2012, Proceedings of the 21st International Conference on World Wide Web, WWW'12, P959
   Klusch M., 2006, Proceedings of the fifth international joint conference on Autonomous agents and multiagent systems, P915
   Klusch M., 2009, J WEB SEMANT, V7, P915
   Kuster U., 2007, P 16 INT C WORLD WID, P1033
   Lin MF, 2013, INFORM SYST RES, V24, P906, DOI 10.1287/isre.2013.0480
   Liu XZ, 2015, IEEE T SERV COMPUT, V8, P2, DOI 10.1109/TSC.2014.2304729
   Lyu SX, 2014, IEEE INT CONGR BIG, P374, DOI 10.1109/BigData.Congress.2014.62
   MILLER CE, 1960, J ACM, V7, P326, DOI 10.1145/321043.321046
   Ni YY, 2016, IEEE T AUTOM SCI ENG, V13, P579, DOI 10.1109/TASE.2015.2466691
   Oh Seog-Chan, 2008, IEEE Transactions on Services Computing, V1, P15, DOI 10.1109/TSC.2008.1
   Patii AbhijitA., 2004, WWW 04, P553
   Pistore M, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P1252
   Riabov A., 2008, Proceeding of the 17th international con- ference on World Wide Web, P775
   Risse T., 2009, P 18 INT C WORLD WID, P881, DOI DOI 10.1145/1526709.1526828
   Shang JX, 2013, INT CONF SERVICE SCI, P208, DOI 10.1109/ICSS.2013.29
   Trummer I, 2014, IEEE T SOFTWARE ENG, V40, P167, DOI 10.1109/TSE.2013.61
   Vaquero LM, 2009, ACM SIGCOMM COMP COM, V39, P50, DOI 10.1145/1496091.1496100
   Wagner F., 2012, P 21 INT C WORLD WID, P969, DOI DOI 10.1145/2187836.2187966
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   Zheng Zibin., 2010, P 32 ACMIEEE INT C S, V1, P35, DOI DOI 10.1145/1806799.1806809
   Zou GB, 2014, IEEE T SERV COMPUT, V7, P2, DOI 10.1109/TSC.2012.27
NR 50
TC 49
Z9 49
U1 0
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL 1
PY 2017
VL 43
IS 7
BP 658
EP 674
DI 10.1109/TSE.2016.2624293
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FA8OD
UT WOS:000405704400004
DA 2024-07-18
ER

PT J
AU Damevski, K
   Shepherd, DC
   Schneider, J
   Pollock, L
AF Damevski, Kostadin
   Shepherd, David C.
   Schneider, Johannes
   Pollock, Lori
TI Mining Sequences of Developer Interactions in Visual Studio for Usage
   Smells
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE IDE usage data; data mining; pattern mining; usability analysis
AB In this paper, we present a semi-automatic approach for mining a large-scale dataset of IDE interactions to extract usage smells, i.e., inefficient IDE usage patterns exhibited by developers in the field. The approach outlined in this paper first mines frequent IDE usage patterns, filtered via a set of thresholds and by the authors, that are subsequently supported (or disputed) using a developer survey, in order to form usage smells. In contrast with conventional mining of IDE usage data, our approach identifies time-ordered sequences of developer actions that are exhibited by many developers in the field. This pattern mining workflow is resilient to the ample noise present in IDE datasets due to the mix of actions and events that these datasets typically contain. We identify usage patterns and smells that contribute to the understanding of the usability of Visual Studio for debugging, code search, and active file navigation, and, more broadly, to the understanding of developer behavior during these software development activities. Among our findings is the discovery that developers are reluctant to use conditional breakpoints when debugging, due to perceived IDE performance problems as well as due to the lack of error checking in specifying the conditional.
C1 [Damevski, Kostadin] Virginia Commonwealth Univ, Dept Comp Sci, Richmond, VA 23234 USA.
   [Shepherd, David C.] ABB Corp Res, Raleigh, NC 27606 USA.
   [Schneider, Johannes] ABB Corp Res, CH-5405 Baden, Switzerland.
   [Pollock, Lori] Univ Delaware, Dept Comp & Informat Sci, Newark, DE 19350 USA.
C3 Virginia Commonwealth University; ABB; ABB; University of Delaware
RP Damevski, K (corresponding author), Virginia Commonwealth Univ, Dept Comp Sci, Richmond, VA 23234 USA.
EM damevski@acm.org; david.shepherd@us.abb.com;
   johannes.schneider@ch.abb.com; pollock@udel.edu
RI Damevski, Kostadin/F-4476-2014
OI Damevski, Kostadin/0000-0001-7799-2026; Shepherd, David
   C./0000-0003-2017-7842
CR Amann S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P124, DOI 10.1109/SANER.2016.39
   Bragdon A., 2010, Proceedings of the 32nd International Conference on Software Engineering (ICSE'10), P455, DOI [DOI 10.1145/1806799.1806866, 10.1145/1806799.1806866]
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Fournier-Viger P, 2014, J MACH LEARN RES, V15, P3389
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Khodabandelou G., 2014, P 11 WORKING C MININ, DOI DOI 10.1145/2597073.2597101
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Miliaraki I., 2013, P ACM SIGMOD INT C M, P797
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Murphy-Hill Emerson., 2012, P ACM SIGSOFT 20 INT, p42:1
   Negara S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P803, DOI 10.1145/2568225.2568317
   NIELSEN J, 1994, COMMUN ACM, V37, P66, DOI 10.1145/175276.175282
   Nielsen J., 2006, J NIELSENS ALERTBOX
   Perera D, 2009, IEEE T KNOWL DATA EN, V21, P759, DOI 10.1109/TKDE.2008.138
   Shepherd D., 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P1
   Snipes W, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P105, DOI 10.1145/2591062.2591171
   Snipes W, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1277, DOI 10.1109/ICSE.2013.6606697
   Spiliopoulou M, 2000, COMMUN ACM, V43, P127, DOI 10.1145/345124.345167
   Vakilian M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1106, DOI 10.1145/2568225.2568282
   Vargas A., 2010, P 7 INT C METH TECHN
   Wang JS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P762, DOI 10.1109/ICSE.2013.6606622
   Yoon Y., 2011, Proceedings of the 3rd ACM SIGPLAN workshop on Evaluation and usability of programming languages and tools, P25
   Zou LJ, 2007, INT C PROGRAM COMPRE, P135
NR 24
TC 25
Z9 26
U1 0
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2017
VL 43
IS 4
BP 359
EP 371
DI 10.1109/TSE.2016.2592905
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ES7IH
UT WOS:000399722800004
OA Green Published
DA 2024-07-18
ER

PT J
AU Xiong, YF
   Zhang, HS
   Hubaux, A
   She, S
   Wang, J
   Czarnecki, K
AF Xiong, Yingfei
   Zhang, Hansheng
   Hubaux, Arnaud
   She, Steven
   Wang, Jie
   Czarnecki, Krzysztof
TI Range Fixes: Interactive Error Resolution for Software Configuration
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Consistency management; error resolution; range fix; software
   configuration
ID DIAGNOSIS; REPAIR; MODELS
AB To prevent ill-formed configurations, highly configurable software often allows defining constraints over the available options. As these constraints can be complex, fixing a configuration that violates one or more constraints can be challenging. Although several fix-generation approaches exist, their applicability is limited because (1) they typically generate only one fix or a very long fix list, difficult for the user to identify the desirable fix; and (2) they do not fully support non-Boolean constraints, which contain arithmetic, inequality, and string operators. This paper proposes a novel concept, range fix, for software configuration. A range fix specifies the options to change and the ranges of values for these options. We also design an algorithm that automatically generates range fixes for a violated constraint. We have evaluated our approach with three different strategies for handling constraint interactions, on data from nine open source projects over two configuration platforms. The evaluation shows that our notion of range fix leads to mostly simple yet complete sets of fixes, and our algorithm is able to generate fixes within one second for configuration systems with a few thousands options and constraints.
C1 [Xiong, Yingfei; Zhang, Hansheng; Wang, Jie] Peking Univ, Sch Elect Engn & Comp Sci, Inst Software, Beijing 100871, Peoples R China.
   [Xiong, Yingfei; Zhang, Hansheng; Wang, Jie] Minist Educ, Key Lab High Confidence Software Technol, Beijing, Peoples R China.
   [Hubaux, Arnaud] ASML, Eindhoven, Netherlands.
   [She, Steven; Czarnecki, Krzysztof] Univ Waterloo, Dept Elect & Comp Engn, Waterloo, ON N2L 3G1, Canada.
C3 Peking University; ASML Holding; University of Waterloo
RP Xiong, YF (corresponding author), Peking Univ, Sch Elect Engn & Comp Sci, Inst Software, Beijing 100871, Peoples R China.
EM xiongyf@pku.edu.cn; zhanghs12@sei.pku.edu.cn; contact@ahubaux.com;
   shshe@gsd.uwaterloo.ca; 617072740@qq.com; kczarnec@gsd.uwaterloo.ca
OI Xiong, Yingfei/0000-0001-8991-747X
FU National Basic Research Program of China (973) [2014CB347701]; High-Tech
   Research and Development Program of China [2013AA01A605]; National
   Natural Science Foundation of China [61202071, 61332010, 61421091];
   NSERC
FX The authors would like to thank Thorsten Berger at University of Leipzig
   for his patient lessons on eCos and CDL, and Gelin Zhou at University of
   Waterloo for fruitful discussion on the algorithm of this approach. This
   research was supported by the National Basic Research Program of China
   (973) under Grant No. 2014CB347701, the High-Tech Research and
   Development Program of China under Grant No. 2013AA01A605, the National
   Natural Science Foundation of China under Grant No. 61202071, 61332010,
   61421091, and NSERC. Yingfei Xiong is the corresponding author.
CR [Anonymous], 2010, SMT LIB STANDARD VER
   [Anonymous], INT C CURR TRENDS TH
   Argelich J, 2010, ELECTRON P THEOR COM, P11, DOI 10.4204/EPTCS.29.2
   Bak K, 2011, LECT NOTES COMPUT SC, V6563, P102, DOI 10.1007/978-3-642-19440-5_7
   Barreiros J, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P157, DOI 10.1145/2648511.2648528
   Berger T., 2010, P INT C AUT SOFTW EN, P73, DOI DOI 10.1145/1858996.1859010
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Berger Thorsten, 2010, FORMAL SEMANTICS CDL
   Bickford P., 1999, HUMAN INTERFACE ONLI
   Bjorner N, 2009, LECT NOTES COMPUT SC, V5505, P307, DOI 10.1007/978-3-642-00768-2_27
   Czarnecki K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P23, DOI 10.1109/SPLINE.2007.24
   DAVIS E, 1987, ARTIF INTELL, V32, P281, DOI 10.1016/0004-3702(87)90091-9
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Demsky B, 2003, ACM SIGPLAN NOTICES, V38, P78, DOI 10.1145/949343.949314
   Egyed Alexander, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P99, DOI 10.1109/ASE.2008.20
   Felfernig A, 2004, ARTIF INTELL, V152, P213, DOI 10.1016/S0004-3702(03)00117-6
   GREINER R, 1989, ARTIF INTELL, V41, P79, DOI 10.1016/0004-3702(89)90079-9
   Hadzic T., 2004, P INT C EC TECHN ORG, P131
   Hubaux A., 2012, 6 INT WORKSHOP VARIA, P149
   Jose M, 2011, ACM SIGPLAN NOTICES, V46, P437, DOI 10.1145/1993316.1993550
   Junker U, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P167
   Mani S., 2010, P IEEEACM INT C AUTO, P195
   Marques- Silva Joao, 2013, P INT JOINT C ARTIFI, P615, DOI DOI 10.1007/978-3-319-10428-739
   Mendonca M., 2009, THESIS U WATERLOO WA
   Nadi S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P140, DOI 10.1145/2568225.2568283
   Nentwich C, 2003, PROC INT CONF SOFTW, P455, DOI 10.1109/ICSE.2003.1201223
   Nohrer A., 2012, VAMOS, P83
   Olaechea R., 2014, P 18 INT SOFTW PROD, V1, P92
   Passos L., 2011, P INT SOFTW PROD LIN
   Rabkin A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P193, DOI 10.1109/ASE.2011.6100053
   REITER R, 1987, ARTIF INTELL, V32, P57, DOI 10.1016/0004-3702(87)90062-2
   Scheffczyk J., 2004, P 2004 ACM S DOC ENG, P137, DOI 10.1145/1030397.1030426
   She Steven, 2010, FORMAL SEMANTICS KCO
   Steimann F, 2013, LECT NOTES COMPUT SC, V8107, P18, DOI 10.1007/978-3-642-41533-3_2
   Trinidad P, 2008, J SYST SOFTWARE, V81, P883, DOI 10.1016/j.jss.2007.10.030
   Tucker C, 2007, PROC INT CONF SOFTW, P178
   VEER B, 2001, ECOS COMPONENT WRITE
   Wang Bo, 2013, Jingji Dongwu Xuebao, V17, P82
   Wang B, 2010, LECT NOTES COMPUT SC, V6394, P181
   White J, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P225, DOI 10.1109/SPLC.2008.16
   Xiong Y., 2011, 20110605 GSDLAB TR
   Xiong YF, 2012, PROC INT CONF SOFTW, P58, DOI 10.1109/ICSE.2012.6227206
   Xiong YF, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P315, DOI 10.1145/1595696.1595757
   Xu TY, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P244, DOI 10.1145/2517349.2522727
   Yin ZN, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P159
   Zhang S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P312, DOI 10.1109/ICSE.2013.6606577
NR 46
TC 20
Z9 23
U1 3
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2015
VL 41
IS 6
BP 603
EP 619
DI 10.1109/TSE.2014.2383381
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CK3ZL
UT WOS:000356155700005
DA 2024-07-18
ER

PT J
AU Cai, Y
   Chan, WK
AF Cai, Yan
   Chan, W. K.
TI Magiclock: Scalable Detection of Potential Deadlocks in Large-Scale
   Multithreaded Programs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Deadlock detection; multithreaded programs; concurrency; lock order
   graph; scalability
AB We present Magiclock, a novel potential deadlock detection technique by analyzing execution traces (containing no deadlock occurrence) of large-scale multithreaded programs. Magiclock iteratively eliminates removable lock dependencies before potential deadlock localization. It divides lock dependencies into thread specific partitions, consolidates equivalent lock dependencies, and searches over the set of lock dependency chains without the need to examine any duplicated permutations of the same lock dependency chains. We validate Magiclock through a suite of real-world, large-scale multithreaded programs. The experimental results show that Magiclock is significantly more scalable and efficient than existing dynamic detectors in analyzing and detecting potential deadlocks in execution traces of large-scale multithreaded programs.
C1 [Cai, Yan; Chan, W. K.] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Hong Kong, Peoples R China.
C3 City University of Hong Kong
RP Cai, Y (corresponding author), City Univ Hong Kong, Dept Comp Sci, Tat Chee Ave, Hong Kong, Hong Kong, Peoples R China.
EM ycai.mail@gmail.com; wkchan@cityu.edu.hk
RI Chan, Wah Kheong/AGA-6636-2022
OI Chan, Wah Kheong/0000-0002-9105-5837; Chan, Wing
   Kwong/0000-0001-7726-6235
FU Early Career Scheme of the Research Grant Council of Hong Kong [123512]
FX The authors thank the editors and the anonymous reviewers for their
   invaluable comments and suggestions. This work was supported in part by
   the Early Career Scheme of the Research Grant Council of Hong Kong
   (project no. 123512).
CR Agarwal R, 2010, IBM J RES DEV, V54, DOI 10.1147/JRD.2010.2060276
   Bensalem S, 2005, P PAR DISTR SYST TES
   Bensalem S., 2006, PADTAD'06, P41, DOI DOI 10.1145/1147403.1147412
   Bond MD, 2010, ACM SIGPLAN NOTICES, V45, P255, DOI 10.1145/1809028.1806626
   Burckhardt S, 2010, ACM SIGPLAN NOTICES, V45, P167, DOI 10.1145/1735971.1736040
   Cai, 2014, P 36 INT C SOFTW ENG, P12
   Cai Y, 2013, IEEE T PARALL DISTR, V24, P2407, DOI 10.1109/TPDS.2013.13
   Cai Y, 2013, ACM SIGPLAN NOTICES, V48, P311, DOI 10.1145/2517327.2442560
   Cai Y, 2012, PROC INT CONF SOFTW, P606, DOI 10.1109/ICSE.2012.6227156
   Cai Y, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P160, DOI 10.1109/ISSRE.2011.12
   Deshmukh J, 2009, IEEE INT CONF AUTOM, P480, DOI 10.1109/ASE.2009.14
   Farchi E., 2005, P PAR DISTR SYST TES
   Flanagan C, 2009, ACM SIGPLAN NOTICES, V44, P121, DOI 10.1145/1543135.1542490
   Havelund K, 2000, LECT NOTES COMPUT SC, V1885, P245
   Jin GL, 2011, ACM SIGPLAN NOTICES, V46, P389, DOI 10.1145/1993316.1993544
   Joshi P, 2009, ACM SIGPLAN NOTICES, V44, P110, DOI 10.1145/1543135.1542489
   Joshi Pallavi, 2010, P 18 ACM SIGSOFT INT, P327, DOI 10.1145/1882291.1882339
   Jula H., 2008, OSDI, P295
   KNAPP E, 1987, COMPUT SURV, V19, P303, DOI 10.1145/45075.46163
   Lai Z., 2010, ICSE, P235, DOI [10.1145/1806799.1806836, DOI 10.1145/1806799.1806836]
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   LUK CK, 2005, P ACM SIGPLAN C PROG, P191
   Marino D, 2009, ACM SIGPLAN NOTICES, V44, P134, DOI 10.1145/1543135.1542491
   Nagarakatte S, 2012, ACM SIGPLAN NOTICES, V47, P543, DOI 10.1145/2345156.2254128
   Naik M, 2009, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2009.5070538
   Nir-Buchbinder Y, 2008, LECT NOTES COMPUT SC, V5289, P104
   Raman R, 2012, ACM SIGPLAN NOTICES, V47, P531, DOI [10.1145/2345156.2254127, 10.1145/2345156.1993502]
   Shanbhag VK, 2008, ASIA PAC SOFWR ENG, P361, DOI 10.1109/APSEC.2008.68
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Wang Yin, 2008, 8 USENIX S OP SYST D, P281
   Williams A, 2005, LECT NOTES COMPUT SC, V3586, P602
   Zhai K., 2012, P 2012 INT S SOFTW T, P221
   Zhi Da Luo, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P309, DOI 10.1109/ICST.2011.22
NR 34
TC 40
Z9 47
U1 0
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2014
VL 40
IS 3
BP 266
EP 281
DI 10.1109/TSE.2014.2301725
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AF4FH
UT WOS:000334666500004
DA 2024-07-18
ER

PT J
AU Rodriguez-Navas, G
   Proenza, J
AF Rodriguez-Navas, Guillermo
   Proenza, Julian
TI Using Timed Automata for Modeling Distributed Systems with Clocks:
   Challenges and Solutions
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Embedded systems; real-time systems; clock synchronization; model
   checking; timed automata; hybrid automata
ID REACHABILITY ANALYSIS; VERIFICATION; CHECKING
AB The application of model checking for the formal verification of distributed embedded systems requires the adoption of techniques for realistically modeling the temporal behavior of such systems. This paper discusses how to model with timed automata the different types of relationships that may be found among the computer clocks of a distributed system, namely, ideal clocks, drifting clocks, and synchronized clocks. For each kind of relationship, a suitable modeling pattern is thoroughly described and formally verified.
C1 [Rodriguez-Navas, Guillermo; Proenza, Julian] Univ Illes Balears, Dept Ciencies Matemat & Informat, Palma De Mallorca 07122, Spain.
C3 Universitat de les Illes Balears
RP Rodriguez-Navas, G (corresponding author), Univ Illes Balears, Dept Ciencies Matemat & Informat, Campus UIB, Palma De Mallorca 07122, Spain.
EM guillermo.rodriguez-navas@uib.es; julian.proenza@uib.es
RI Proenza, Julian/B-7602-2014; Rodriguez-Navas, Guillermo/L-9539-2014
OI Proenza, Julian/0000-0001-7238-0557; Rodriguez-Navas,
   Guillermo/0000-0002-4987-7669
FU Spanish Science and Innovation Ministry [DPI2008-02195]; Spanish Economy
   and Competitiveness Ministry [DPI2011-22992]; FEDER
FX This work was supported by the Spanish Science and Innovation Ministry
   under grant DPI2008-02195, by the Spanish Economy and Competitiveness
   Ministry under grant DPI2011-22992, and by the FEDER.
CR Akshay S, 2008, LECT NOTES COMPUT SC, V5201, P82, DOI 10.1007/978-3-540-85361-9_10
   ALUR R, 1993, INFORM COMPUT, V104, P2, DOI 10.1006/inco.1993.1024
   Alur R, 2005, LECT NOTES COMPUT SC, V3414, P70
   [Anonymous], 2001, MODEL CHECKING
   Asarin E, 2000, LECT NOTES COMPUT SC, V1790, P20
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Bowman H., 1998, P 3 INT WORKSH FORM
   Brinksma E., 2004, VERIFICATION MODELLI
   Daws C, 1995, IEEE REAL TIME, P66, DOI 10.1109/REAL.1995.495197
   De Wulf M, 2008, FORM METHOD SYST DES, V33, P45, DOI 10.1007/s10703-008-0056-7
   Dima C, 2007, LECT NOTES COMPUT SC, V4711, P185
   Henzinger TA, 1998, J COMPUT SYST SCI, V57, P94, DOI 10.1006/jcss.1998.1581
   Holzmann GJ, 2011, IEEE T SOFTWARE ENG, V37, P845, DOI 10.1109/TSE.2010.110
   Jha S, 2007, LECT NOTES COMPUT SC, V4763, P241
   Katoen J.-P., 1998, CONCEPTS ALGORITHMS
   Kim M, 2011, IEEE T SOFTWARE ENG, V37, P146, DOI 10.1109/TSE.2010.68
   Lenzen C, 2010, J ACM, V57, DOI 10.1145/1667053.1667057
   Li P, 2004, IEEE T SOFTWARE ENG, V30, P613, DOI 10.1109/TSE.2004.45
   Mader A., 2007, CONSTRUCTION VERIFIC
   Miyawaki F, 2005, IEEE T IND ELECTRON, V52, P1227, DOI 10.1109/TIE.2005.855692
   Mohalik S, 2008, DES AUT CON, P296
   Mokadem HB, 2010, IEEE T AUTOM SCI ENG, V7, P921, DOI 10.1109/TASE.2010.2050199
   Rodriguez-Navas G., 2010, BEHAV MODELING EMBED
   Tschirner S., 2008, P 7 ACM INT C EMB SO
   Vaandrager F., 2010, QUASIMODO PROJECT DE
   VERISSIMO P, 1994, REAL-TIME SYST, V7, P105, DOI 10.1007/BF01088801
   Wang R, 2007, IET SOFTW, V1, P127, DOI 10.1049/iet-sen:20070009
NR 27
TC 17
Z9 18
U1 0
U2 19
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2013
VL 39
IS 6
BP 857
EP 868
DI 10.1109/TSE.2012.73
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 149RG
UT WOS:000319338200009
DA 2024-07-18
ER

PT J
AU Ali, N
   Guéhéneuc, YG
   Antoniol, G
AF Ali, Nasir
   Gueheneuc, Yann-Gael
   Antoniol, Giuliano
TI Trustrace: Mining Software Repositories to Improve the Accuracy of
   Requirement Traceability Links
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Traceability; requirements; feature; source code; repositories; experts;
   trust-based model
ID CODE
AB Traceability is the only means to ensure that the source code of a system is consistent with its requirements and that all and only the specified requirements have been implemented by developers. During software maintenance and evolution, requirement traceability links become obsolete because developers do not/cannot devote effort to updating them. Yet, recovering these traceability links later is a daunting and costly task for developers. Consequently, the literature has proposed methods, techniques, and tools to recover these traceability links semi-automatically or automatically. Among the proposed techniques, the literature showed that information retrieval (IR) techniques can automatically recover traceability links between free-text requirements and source code. However, IR techniques lack accuracy (precision and recall). In this paper, we show that mining software repositories and combining mined results with IR techniques can improve the accuracy (precision and recall) of IR techniques and we propose Trustrace, a trust-based traceability recovery approach. We apply Trustrace on four medium-size open-source systems to compare the accuracy of its traceability links with those recovered using state-of-the-art IR techniques from the literature, based on the Vector Space Model and Jensen-Shannon model. The results of Trustrace are up to 22.7 percent more precise and have 7.66 percent better recall values than those of the other techniques, on average. We thus show that mining software repositories and combining the mined data with existing results from IR techniques improves the precision and recall of requirement traceability links.
C1 [Ali, Nasir; Gueheneuc, Yann-Gael; Antoniol, Giuliano] Ecole Polytech, Dept Genie Informat & Genie Logiciel, Montreal, PQ H3C 3A7, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Ali, N (corresponding author), Ecole Polytech, Dept Genie Informat & Genie Logiciel, CP 6079,Succursale Ctr Ville, Montreal, PQ H3C 3A7, Canada.
EM nasir.ali@polymtl.ca; yann-gael.gueheneuc@polymtl.ca; antoniol@ieee.org
RI Guéhéneuc, Yann-Gaël/K-9371-2019
FU NSERC Research Chairs on Software Cost-effective Change and Evolution;
   NSERC Research Chairs on Software Patterns and Patterns of Software
FX The authors thank Dr. Bram Adams, assistant professor at the Ecole
   Polytechnique de Montreal, for his invaluable feedback. This work is
   partly supported by the NSERC Research Chairs on Software Cost-effective
   Change and Evolution and on Software Patterns and Patterns of Software.
CR Abadi A, 2008, INT C PROGRAM COMPRE, P103, DOI 10.1109/ICPC.2008.30
   Ali N., 2011, 2011 18th Working Conference on Reverse Engineering, P45, DOI 10.1109/WCRE.2011.16
   Ali N., 2011, FACTORS IMPACTING IN
   Ali N, 2011, CONF PROC INT SYMP C, P111, DOI 10.1109/ICPC.2011.42
   [Anonymous], J SOFTWARE MAINTENAN
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Artz D, 2007, J WEB SEMANT, V5, P58, DOI 10.1016/j.websem.2007.03.002
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2011, CONF PROC INT SYMP C, P21, DOI 10.1109/ICPC.2011.34
   De Lucia A, 2011, IEEE T SOFTWARE ENG, V37, P205, DOI 10.1109/TSE.2010.89
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Frakes WB., 1992, Information retrieval: Data structures and algorithms
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Grandison T, 2000, IEEE Communications Surveys Tutorials, V3, P2, DOI [DOI 10.1109/COMST.2000.5340804, 10.1109/COMST.2000.5340804]
   Hayes JH, 2008, WORK CONF REVERSE EN, P165, DOI 10.1109/WCRE.2008.36
   Hayes JH, 2007, INNOV SYST SOFTW ENG, V3, P193, DOI 10.1007/s11334-007-0024-1
   Hayes JH, 2005, INT J SOFTW ENG KNOW, V15, P751, DOI 10.1142/S021819400500252X
   Hayes JH, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P249
   Kagdi H., 2006, P 2006 INT WORKSH MI, P47, DOI [DOI 10.1145/1137983.1137996, 10.1145/1137983.1137996]
   KAGDI H., 2007, International Workshop on Traceability in Emerging Forms of Software Engineering, P32
   Kagdi H, 2007, INT C PROGRAM COMPRE, P145
   Koufaris M, 2004, INFORM MANAGE-AMSTER, V41, P379, DOI 10.1016/j.im.2003.08.004
   Liu Dapeng, 2007, P 22 IEEEACM INT C A, P234, DOI 10.1145/1321631.1321667
   Mader Patrick, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P49, DOI 10.1109/ASE.2008.15
   Maletic JI, 2009, 2009 ICSE WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P16, DOI 10.1109/TEFSE.2009.5069577
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   McKnight DH, 2002, J STRATEGIC INF SYST, V11, P297, DOI 10.1016/S0963-8687(02)00020-3
   PALMER JW, 2000, J COMPUTER MEDIATED, V5
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   SHERBA S.A., 2003, Second International Software Requirements to Architectures Workshop (STRAW 03), P150
   Van den Berg RJ, 2001, PROD PLAN CONTROL, V12, P514, DOI 10.1080/09537280110042738
   Wang W, 2010, EXPERT SYST APPL, V37, P5599, DOI 10.1016/j.eswa.2010.02.053
   Zhao W, 2006, ACM T SOFTW ENG METH, V15, P195, DOI 10.1145/1131421.1131424
   Zou XC, 2010, EMPIR SOFTW ENG, V15, P119, DOI 10.1007/s10664-009-9114-z
NR 40
TC 65
Z9 75
U1 0
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2013
VL 39
IS 5
BP 725
EP 741
DI 10.1109/TSE.2012.71
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 140GL
UT WOS:000318642300008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Nallur, V
   Bahsoon, R
AF Nallur, Vivek
   Bahsoon, Rami
TI A Decentralized Self-Adaptation Mechanism for Service-Based Applications
   in the Cloud
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Self-adaptation; market based; multi-agent systems
ID SOFTWARE; ORGANIZATION
AB Cloud computing, with its promise of (almost) unlimited computation, storage, and bandwidth, is increasingly becoming the infrastructure of choice for many organizations. As cloud offerings mature, service-based applications need to dynamically recompose themselves to self-adapt to changing QoS requirements. In this paper, we present a decentralized mechanism for such self-adaptation, using market-based heuristics. We use a continuous double-auction to allow applications to decide which services to choose, among the many on offer. We view an application as a multi-agent system and the cloud as a marketplace where many such applications self-adapt. We show through a simulation study that our mechanism is effective for the individual application as well as from the collective perspective of all applications adapting at the same time.
C1 [Nallur, Vivek; Bahsoon, Rami] Univ Birmingham, Sch Comp Sci, Birmingham B15 2TT, W Midlands, England.
C3 University of Birmingham
RP Nallur, V (corresponding author), Univ Birmingham, Sch Comp Sci, Birmingham B15 2TT, W Midlands, England.
EM nallur@gmail.com; r.bahsoon@cs.bham.ac.uk
OI Nallur, Vivek/0000-0003-0447-4150
FU EPSRC [EP/L001802/1] Funding Source: UKRI
CR [Anonymous], 2010, P 19 INT C WORLD WID, DOI DOI 10.1145/1772690.1772693
   [Anonymous], 2006, IBM ARCH BLUEPR AUT
   [Anonymous], 2006, THESIS U SOUTHAMPTON
   [Anonymous], 2009, AM INC AM SPOT INST
   [Anonymous], TECHNICAL REPORT
   Ardagna D, 2005, 2005 IEEE International Conference on Web Services, Vols 1 and 2, Proceedings, P805
   Baresi L., 2008, ACM SEAMS 08, P57
   Benatallah B, 2002, PROC INT CONF DATA, P297, DOI 10.1109/ICDE.2002.994738
   BRANS JP, 1985, MANAGE SCI, V31, P647, DOI 10.1287/mnsc.31.6.647
   Breskovic I., 2011, Proceedings of the 2011 IEEE 9th International Conference on Dependable, Autonomic and Secure Computing (DASC 2011), P81, DOI 10.1109/DASC.2011.38
   Buyya R., 2009, CLOUDBUS TOOLKIT MAR, P22
   Buyya R, 2008, HPCC 2008: 10TH IEEE INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P5, DOI 10.1109/HPCC.2008.172
   Canfora G, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1069
   Cardoso J., 2004, J. Web Semant., V1, P281, DOI [10.1016/j.websem.2004.03.001, DOI 10.1016/J.WEBSEM.2004.03.001]
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Cheng S.-W., 2006, INT WORKSH SELF AD S, P2, DOI DOI 10.1145/1137677.1137679
   Cheng SW, 2005, LECT NOTES COMPUT SC, V3460, P158
   Clearwater S.H., 1996, MARKET BASED CONTROL, P253
   Cliff D., 1998, Simple Bargaining Agents for Decentralized Market-Based Control
   CloudHarmony, 2012, DO SLAS REALL MATT 1
   Di Nitto E, 2008, AUTOMAT SOFTW ENG, V15, P313, DOI 10.1007/s10515-008-0032-x
   Duboc L., 2007, P THE 6 JOINT M EURO, P375, DOI [10.1145/1287624.1287679, DOI 10.1145/1287624.1287679]
   Eymann T., 2003, P EUR GRIDS C, P9
   Freidman D., 1993, DOUBLE AUCTION MARKE
   GODE DK, 1993, J POLIT ECON, V101, P119, DOI 10.1086/261868
   Gupta A, 1999, COMMUN ACM, V42, P57, DOI 10.1145/315762.315772
   Harty Kieran., 1996, A Market Approach to Operating System Memory Allocation, P126
   He M., 2003, ACM Trans. Interet Technol, V3, P218
   He MH, 2003, IEEE T KNOWL DATA EN, V15, P985, DOI 10.1109/TKDE.2003.1209014
   HO YC, 1980, LARGE SCALE SYST, V1, P51
   Jennings NR, 2000, PAC RIM INT C ART IN, P1
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Klemperer P., 1999, J ECON SURV, V13, P227, DOI [DOI 10.1111/1467-6419.00083, 10.1111/1467-6419.00083]
   Koestler Arthur., 1989, The ghost in the machine
   Kokar MM, 1999, IEEE INTELL SYST APP, V14, P37, DOI 10.1109/5254.769883
   Laddaga R, 1999, IEEE INTELL SYST APP, V14, P26, DOI 10.1109/MIS.1999.769879
   Liangzhao Zeng, 2001, Proceedings of the 27th International Conference on Very Large Data Bases, P697
   Matsumoto M., 1998, ACM Transactions on Modeling and Computer Simulation, V8, P3, DOI 10.1145/272991.272995
   Michlmayr Anton., 2009, MWSOC 09 P 4 INT WOR, P1, DOI DOI 10.1145/1657755.1657756
   Nallur V., 2010, P 25 ACM S APPL COMP
   Niu J., 2008, P 7 INT C AUTONOMOUS, P1079
   Niu JZ, 2010, AUTON AGENT MULTI-AG, V21, P172, DOI 10.1007/s10458-009-9110-0
   Oreizy P, 1998, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.1998.671114
   Ramchurn SD, 2004, KNOWL ENG REV, V19, P1, DOI 10.1017/S0269888904000116
   ROTH AE, 1995, GAME ECON BEHAV, V8, P164, DOI 10.1016/S0899-8256(05)80020-X
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Serugendo GD, 2005, KNOWL ENG REV, V20, P165, DOI [10.1017/S0269888905000494, 10.1017/.S0269888905000494]
   Stonebraker M., 1994, Proceedings of the Third International Conference on Parallel and Distributed Information Systems (Cat. No.94TH0668-4), P58, DOI 10.1109/PDIS.1994.331732
   Waldspurger C. A., 1994, Proceedings of the First USENIX Symposium on Operating Systems Design and Implementation (OSDI), P1
   WALDSPURGER CA, 1992, IEEE T SOFTWARE ENG, V18, P103, DOI 10.1109/32.121753
   Wei Zhang, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P493, DOI 10.1109/COMPSAC.2010.76
   Wellman MP, 1993, J ARTIF INTELL RES, V1, P1
   Weyns D., 2010, Proceedings of the 2010 ICSE Workshop on Software Engineering for Adaptive and Self-Managing Systems (SEAMS), P84, DOI [DOI 10.1145/1808984.1808994, 10.1145/1808984.1808994]
   Wurman PR, 2001, GAME ECON BEHAV, V35, P304, DOI 10.1006/game.2000.0828
   Zeng L., 2003, Proceedings of the 12th International Conference on World Wide Web, P411, DOI [DOI 10.1145/775152.775211, 10.1145/775152.775211]
   Zeng L, 2007, LECT NOTES COMPUT SC, V4749, P132
NR 56
TC 60
Z9 67
U1 0
U2 26
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2013
VL 39
IS 5
BP 591
EP 612
DI 10.1109/TSE.2012.53
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 140GL
UT WOS:000318642300002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Nguyen, HA
   Nguyen, TT
   Pham, NH
   Al-Kofahi, J
   Nguyen, TN
AF Hoan Anh Nguyen
   Tung Thanh Nguyen
   Pham, Nam H.
   Al-Kofahi, Jafar
   Nguyen, Tien N.
TI Clone Management for Evolving Software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Clone management; clone consistency analysis; clone synchronization;
   clone merging
ID CODE; DUPLICATION; ALGORITHMS
AB Recent research results suggest a need for code clone management. In this paper, we introduce JSync, a novel clone management tool. JSync provides two main functions to support developers in being aware of the clone relation among code fragments as software systems evolve and in making consistent changes as they create or modify cloned code. JSync represents source code and clones as (sub) trees in Abstract Syntax Trees, measures code similarity based on structural characteristic vectors, and describes code changes as tree editing scripts. The key techniques of JSync include the algorithms to compute tree editing scripts, to detect and update code clones and their groups, to analyze the changes of cloned code to validate their consistency, and to recommend relevant clone synchronization and merging. Our empirical study on several real-world systems shows that JSync is efficient and accurate in clone detection and updating, and provides the correct detection of the defects resulting from inconsistent changes to clones and the correct recommendations for change propagation across cloned code.
C1 [Hoan Anh Nguyen; Tung Thanh Nguyen; Pham, Nam H.; Al-Kofahi, Jafar; Nguyen, Tien N.] Iowa State Univ, Ames, IA 50011 USA.
C3 Iowa State University
RP Nguyen, HA (corresponding author), Iowa State Univ, Coover Hall, Ames, IA 50011 USA.
EM hoan@iastate.edu; tung@iastate.edu; namphamhoai@gmail.com;
   jafar@iastate.edu; tien@iastate.edu
RI Nguyen, Tung Thanh/HDN-1889-2022; Nguyen, Anh/GQQ-3393-2022; Nguyễn,
   Tùng/JWA-2810-2024
OI Nguyen, Tung/0000-0003-4232-0566
FU Vietnam Education Foundation (VEF); Direct For Computer & Info Scie &
   Enginr; Division of Computing and Communication Foundations [1018600]
   Funding Source: National Science Foundation
FX This project was funded in part by a grant from the Vietnam Education
   Foundation (VEF) for Tung Thanh Nguyen.
CR Andoni A., 2012, E2LSH 0 1 USER MANUA
   [Anonymous], 1998, P INT C SOFTW MAINT
   Asklund Ulf., 1994, Proceedings ofNordic Workshop on Programming Environment Research, P231
   Aversano L., 2007, P 11 EUR C SOFTW MAI
   Baker BS, 1997, SIAM J COMPUT, V26, P1343, DOI 10.1137/S0097539793246707
   Bakota T, 2007, PROC IEEE INT CONF S, P234
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Chilowicz M., 2009, P 17 IEEE INT C PROG
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   Dagenais B., 2008, P 23 ACM SIGPLAN C O
   Duala-Ekoko E., 2008, P 30 IEEE INT C SOFT
   Duala-Ekoko E, 2007, PROC INT CONF SOFTW, P158
   Ducasse S., 1999, P IEEE INT C SOFTW M
   Estublier J, 2005, ACM T SOFTW ENG METH, V14, P383, DOI 10.1145/1101815.1101817
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Gabel M, 2010, ACM SIGPLAN NOTICES, V45, P175, DOI 10.1145/1932682.1869475
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P321, DOI 10.1145/1368088.1368132
   Göde N, 2009, EUR CON SFTWR MTNCE, P219, DOI 10.1109/CSMR.2009.20
   Higo Y., 2007, P 14 AS PAC SOFTW EN
   Jablonski Patricia., 2007, P WORKSHOP ECLIPSE T, P16
   Jiang Lingxiao, 2007, P THE 6 JOINT M EURO, P55, DOI DOI 10.1145/1287624.1287634
   Juergens E., 2009, P 31 IEEE INT C SOFT
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Kim M., 2005, P 10 EUR SOFTW ENG C
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Krinke J., 2001, P 8 WORK C REV ENG
   Krinke J, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P170, DOI 10.1109/WCRE.2007.7
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Lippe E., 1992, SIGSOFT Software Engineering Notes, V17, P78, DOI 10.1145/142882.143753
   Marcus A, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P107, DOI 10.1109/ASE.2001.989796
   Mende T, 2009, J SOFTW MAINT EVOL-R, V21, P143, DOI 10.1002/smr.402
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Mitter F., 2006, THESIS U ZURICH
   Nguyen HA, 2009, LECT NOTES COMPUT SC, V5503, P440
   Nguyen T. T., 2009, P IEEE INT C SOFTW M
   Nguyen T. T., 2009, P IEEE ACM 24 INT C
   Nguyen TT, 2010, LECT NOTES COMPUT SC, V6013, P74, DOI 10.1007/978-3-642-12029-9_6
   Qi H, 2007, ADV INTEL SYS RES, DOI 10.2991/iske.2007.270
   Rajapakse D. C., 2007, P 39 IEEE INT C SOFT
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Tairas R., 2012, BIBLIO CODE DETECTIO
   Toomim M., 2004, P IEEE S VIS LANG HU
   Walenstein A., 2003, P 10 WORK C REV ENG
   Wit de, 2009, P IEEE INT C SOFTW M
   Wuu Yang, 1992, ACM Transactions on Software Engineering and Methodology, V1, P310, DOI 10.1145/131736.131756
   ZHANG KZ, 1995, PATTERN RECOGN, V28, P463, DOI 10.1016/0031-3203(94)00109-Y
NR 47
TC 65
Z9 76
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2012
VL 38
IS 5
BP 1008
EP 1026
DI 10.1109/TSE.2011.90
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 009BA
UT WOS:000308999100002
DA 2024-07-18
ER

PT J
AU Xuan, JF
   Jiang, H
   Ren, ZL
   Luo, ZX
AF Xuan, Jifeng
   Jiang, He
   Ren, Zhilei
   Luo, Zhongxuan
TI Solving the Large Scale Next Release Problem with a Backbone-Based
   Multilevel Algorithm
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE The next release problem; backbone; soft backbone; multilevel algorithm;
   requirements instance generation; search-based requirements engineering
ID LANDSCAPE ANALYSIS; SEARCH; REQUIREMENTS; OPTIMIZATION; PRIORITIZATION;
   EVOLUTIONARY; COST; ART
AB The Next Release Problem (NRP) aims to optimize customer profits and requirements selection for the software releases. The research on the NRP is restricted by the growing scale of requirements. In this paper, we propose a Backbone-based Multilevel Algorithm (BMA) to address the large scale NRP. In contrast to direct solving approaches, the BMA employs multilevel reductions to downgrade the problem scale and multilevel refinements to construct the final optimal set of customers. In both reductions and refinements, the backbone is built to fix the common part of the optimal customers. Since it is intractable to extract the backbone in practice, the approximate backbone is employed for the instance reduction while the soft backbone is proposed to augment the backbone application. In the experiments, to cope with the lack of open large requirements databases, we propose a method to extract instances from open bug repositories. Experimental results on 15 classic instances and 24 realistic instances demonstrate that the BMA can achieve better solutions on the large scale NRP instances than direct solving approaches. Our work provides a reduction approach for solving large scale problems in search-based requirements engineering.
C1 [Xuan, Jifeng; Jiang, He; Ren, Zhilei] Dalian Univ Technol, Sch Software, Dalian 116621, Peoples R China.
   [Luo, Zhongxuan] Dalian Univ Technol, Sch Math Sci, Dalian 116621, Peoples R China.
C3 Dalian University of Technology; Dalian University of Technology
RP Xuan, JF (corresponding author), Dalian Univ Technol, Sch Software, Dalian 116621, Peoples R China.
EM xuan@mail.dlut.edu.cn; hejiang@ieee.org; ren@mail.dlut.edu.cn;
   zxluo@dlut.edu.cn
RI Xuan, Jifeng/F-2177-2016
OI Xuan, Jifeng/0000-0002-2968-3496
FU National Natural Science Foundation of China [61175062, 60805024,
   61033012]; National Research Foundation for the Doctoral Program of
   Higher Education of China [20070141020]
FX The authors greatly thank our anonymous reviewers for their insightful
   comments and corrections. They thank Edward Prendergast and Qingna Fan
   with Intel Corporation for their helpful suggestions. This work is
   partially supported by the National Natural Science Foundation of China
   under grants 61175062, 60805024, and 61033012, and the National Research
   Foundation for the Doctoral Program of Higher Education of China under
   grant 20070141020.
CR Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   [Anonymous], P 11 ANN GEN EV COMP
   [Anonymous], 1979, COMPUTERS INTRACTABI
   [Anonymous], 2010, GENETIC EVOLUTIONARY
   [Anonymous], 2010, 12 ANN C GEN EV COMP
   [Anonymous], 2010, P IEEE C EV COMP JUL
   [Anonymous], 2011, MIN CHALL 2007 2009
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Azar J, 2007, IEEE SOFTWARE, V24, P32, DOI 10.1109/MS.2007.30
   Bagnall AJ, 2001, INFORM SOFTWARE TECH, V43, P883, DOI 10.1016/S0950-5849(01)00194-X
   Baker P, 2006, PROC IEEE INT CONF S, P176
   Bowman M, 2010, IEEE T SOFTWARE ENG, V36, P817, DOI 10.1109/TSE.2010.70
   Carlshamre P, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84
   Castro-Herrera Carlos., 2009, the Symposium on Applied Computing, SAC'09, P1419, DOI [10.1145/1529282.1529601, DOI 10.1145/1529282.1529601]
   Cheng BHC, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P285, DOI 10.1109/FOSE.2007.17
   Climer S, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P707
   Dag JNO, 2006, EMPIR SOFTW ENG, V11, P303, DOI 10.1007/s10664-006-6405-5
   Dag JNO, 2005, IEEE SOFTWARE, V22, P32, DOI 10.1109/MS.2005.1
   Davis AM, 2003, COMPUTER, V36, P42, DOI 10.1109/MC.2003.1185216
   del Sagrado Jose, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P67, DOI 10.1109/SSBSE.2010.18
   Duan C, 2009, REQUIR ENG, V14, P73, DOI 10.1007/s00766-009-0079-7
   Feather M.S., 2006, REV 06, 14th RE, P10
   Finkelstein A, 2009, REQUIR ENG, V14, P231, DOI 10.1007/s00766-009-0075-y
   Gorschek T, 2008, INFORM SOFTWARE TECH, V50, P67, DOI 10.1016/j.infsof.2007.10.003
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M., 2009, P 11 ANN C GEN EV CO, P1681, DOI [10.1145/1569901.1570126, DOI 10.1145/1569901.1570126]
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Hutter F, 2009, J ARTIF INTELL RES, V36, P267, DOI 10.1613/jair.2861
   Jiang H., 2010, P 12 ANN C GEN EV CO, P217, DOI [10.1145/1830483.1830525, DOI 10.1145/1830483.1830525]
   Jiang H, 2008, SCI CHINA SER F, V51, P476, DOI 10.1007/s11432-008-0042-0
   Jiang H, 2008, IEEE C EVOL COMPUTAT, P2404, DOI 10.1109/CEC.2008.4631119
   Jianmin Hou, 2010, Proceedings of the Third International Conference on Information and Computing Science (ICIC 2010), P166, DOI 10.1109/ICIC.2010.48
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Kilby P, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P175
   Krogmann K, 2010, IEEE T SOFTWARE ENG, V36, P865, DOI 10.1109/TSE.2010.69
   Kryazhimskiy S, 2009, P NATL ACAD SCI USA, V106, P18638, DOI 10.1073/pnas.0905497106
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   Mahdavi K, 2003, PROC IEEE INT CONF S, P315, DOI 10.1109/ICSM.2003.1235437
   Martí R, 2003, INT SER OPER RES MAN, V57, P355, DOI 10.1007/0-306-48056-5_12
   Mc Elroy J, 2010, REQUIR ENG, V15, P337, DOI 10.1007/s00766-010-0097-5
   MCGILL R, 1978, AM STAT, V32, P12, DOI 10.2307/2683468
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   McMinn P, 2012, IEEE T SOFTWARE ENG, V38, P453, DOI 10.1109/TSE.2011.18
   Merz P, 2000, IEEE T EVOLUT COMPUT, V4, P337, DOI 10.1109/4235.887234
   Michalewicz Z., 2000, SOLVE IT MODERN HEUR, P35
   Ngo-The A, 2009, IEEE T SOFTWARE ENG, V35, P109, DOI 10.1109/TSE.2008.80
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Qasem M, 2010, IEEE T EVOLUT COMPUT, V14, P518, DOI 10.1109/TEVC.2009.2033579
   Regnell B, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P254
   Ruhe G, 2005, IEEE SOFTWARE, V22, P47, DOI 10.1109/MS.2005.164
   Saliu M.O., 2007, P 6 JOINT M EUROPEAN, P105, DOI DOI 10.1145/1287624.1287641
   SLANEY J, 2001, P 17 INT JOINT C ART, P254
   Svahnberg M, 2010, INFORM SOFTWARE TECH, V52, P237, DOI 10.1016/j.infsof.2009.11.006
   Walshaw C, 2002, OPER RES, V50, P862, DOI 10.1287/opre.50.5.862.373
   Wang Z, 2010, IEEE T RELIAB, V59, P563, DOI 10.1109/TR.2010.2057310
   Yang B, 2008, IEEE T SOFTWARE ENG, V34, P813, DOI 10.1109/TSE.2008.47
   Yang ZY, 2008, INFORM SCIENCES, V178, P2985, DOI 10.1016/j.ins.2008.02.017
   Yuanyuan Zhang, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P47, DOI 10.1109/SSBSE.2010.16
   Zhang W, 2006, REQUIR ENG, V11, P205, DOI 10.1007/s00766-006-0033-x
   Zhang WX, 2004, ARTIF INTELL, V158, P1, DOI 10.1016/j.artint.2004.04.001
   Zhang YY, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1129
   Zhang Y, 2008, LECT NOTES COMPUT SC, V5025, P88, DOI 10.1007/978-3-540-69062-7_8
NR 65
TC 56
Z9 58
U1 0
U2 24
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2012
VL 38
IS 5
BP 1195
EP 1212
DI 10.1109/TSE.2011.92
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 009BA
UT WOS:000308999100013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Li, W
AF Li, Wei
TI QoS Assurance for Dynamic Reconfiguration of Component-Based Software
   Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Change management; componentware; dynamic reconfiguration; modeling the
   QoS assurance process; system evolution
ID UPGRADES
AB A major challenge of dynamic reconfiguration is Quality of Service (QoS) assurance, which is meant to reduce application disruption to the minimum for the system's transformation. However, this problem has not been well studied. This paper investigates the problem for component-based software systems from three points of view. First, the whole spectrum of QoS characteristics is defined. Second, the logical and physical requirements for QoS characteristics are analyzed and solutions to achieve them are proposed. Third, prior work is classified by QoS characteristics and then realized by abstract reconfiguration strategies. On this basis, quantitative evaluation of the QoS assurance abilities of existing work and our own approach is conducted through three steps. First, a proof-of-concept prototype called the reconfigurable component model is implemented to support the representation and testing of the reconfiguration strategies. Second, a reconfiguration benchmark is proposed to expose the whole spectrum of QoS problems. Third, each reconfiguration strategy is tested against the benchmark and the testing results are evaluated. The most important conclusion from our investigation is that the classified QoS characteristics can be fully achieved under some acceptable constraints.
C1 [Li, Wei] Cent Queensland Univ, Ctr Intelligent & Networked Syst, Rockhampton, Qld 4702, Australia.
   [Li, Wei] Cent Queensland Univ, Sch Informat & Commun Technol, Rockhampton, Qld 4702, Australia.
C3 Central Queensland University; Central Queensland University
RP Li, W (corresponding author), Cent Queensland Univ, Ctr Intelligent & Networked Syst, Rockhampton, Qld 4702, Australia.
EM w.li@cqu.edu.au
OI Li, Wei/0000-0002-9229-6405
FU Central Queensland University Australia
FX This work was partially supported by Central Queensland University
   Australia under Research Advancement Awards Scheme (RAAS) Grants,
   2006-2007. The author would like to thank Dr. Ian Peake from RMIT
   University Australia for his proofreading of this paper.
CR Ajmani S, 2006, LECT NOTES COMPUT SC, V4067, P452
   Almeida J.P.A., 2003, P WORKSH MOD DRIV AR, P91
   Almeida JPA, 2004, INT WKSHP FUT TR DIS, P286
   [Anonymous], REV SOFTWARE UPGRADE
   [Anonymous], P INT C DES AN SIM D
   Arshad N, 2003, PROC INT C TOOLS ART, P39, DOI 10.1109/TAI.2003.1250168
   Bidan C, 1998, FOURTH INTERNATIONAL CONFERENCE ON CONFIGURABLE DISTRIBUTED SYSTEMS, PROCEEDINGS, P35, DOI 10.1109/CDS.1998.675756
   Cook J. E., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P203, DOI 10.1109/ICSE.1999.841010
   De Palma N., 2001, P 6 INT WORKSH COMP
   Dowling J., 2001, P 3 INT C METALEVEL, P81, DOI DOI 10.1007/3-540-45429-2
   DOWLING J, 2001, P OOPSLA 2001 WORKSH
   Evans H., 2004, IEE Proceedings-Software, V151, P30, DOI 10.1049/ip-sen:20040081
   Gorinsek J., 2003, Proc. ETAPS 2003 Workshop Unanticipated Software Evolution (USE '03), P57
   Guay W. L., 2010, Proceedings of the 2010 IEEE International Conference on Cluster Computing (CLUSTER 2010), P126, DOI 10.1109/CLUSTER.2010.21
   Hicks M, 2005, ACM T PROGR LANG SYS, V27, P1049, DOI 10.1145/381694.378798
   Hillman J, 2004, PROC INT CONF SOFTW, P594, DOI 10.1109/ICSE.2004.1317481
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   JANSSENS N, 2004, P MIDDL 2004 WORKSH, P256
   Janssens Nico., 2007, Proceedings of the 1st workshop on Middlewareapplication interaction: in conjunction with Euro-Sys 2007, MAI '07, P1
   Ji Zhang, 2004, "Third Workshop on Architecting Dependable Systems (WADS)" W19S Workshop - 26th International Conference on Software Engineering, P17, DOI 10.1049/ic:20040495
   Kim DK, 2008, PROCEEDINGS IEEE SOUTHEASTCON 2008, VOLS 1 AND 2, P210
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   Léger M, 2010, LECT NOTES COMPUT SC, V6092, P74, DOI 10.1007/978-3-642-13238-4_5
   Li W, 2011, J SYST SOFTWARE, V84, P2123, DOI 10.1016/j.jss.2011.05.060
   Li W, 2009, J SOFTW MAINT EVOL-R, V21, P19, DOI 10.1002/smr.397
   Mitchell S, 1999, INT FED INFO PROC, V15, P17
   Moser LE, 2002, P INT COMP SOFTW APP, P982, DOI 10.1109/CMPSAC.2002.1045134
   Rasche A, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P322, DOI 10.1109/ISORC.2008.44
   Senivongse T., 1999, Proceedings of the International Symposium on Distributed Objects and Applications, P201, DOI 10.1109/DOA.1999.794027
   Solarski M, 2002, P INT COMP SOFTW APP, P1038, DOI 10.1109/CMPSAC.2002.1045145
   Stoyle J.G., 2007, ACM T PROGR LANG SYS, V29, P183
   Surajbali B., 2010, P 9 WORKSH ASP COMP, P33
   Tewksbury LA, 2001, PROC IEEE INT CONF S, P488, DOI 10.1109/ICSM.2001.972762
   Truyen E., 2008, Proceedings of the 7th International Conference on Aspect-Oriented Software Development, P120, DOI DOI 10.1145/1353482.1353497
   Vandewoude Y, 2007, IEEE T SOFTWARE ENG, V33, P856, DOI 10.1109/TSE.2007.70733
   WARREN I, 2000, THESIS LANCASTER U
   Warren I, 2006, IEEE INT CONF AUTOM, P37
   Wurthinger T., 2010, P 7 WORKSH REFL AOP
   Wurthinger Thomas., 2010, P 8 INT C PRINC PRAC, P10, DOI [DOI 10.1145/1852761.1852764, 10.1145/1852761.1852764]
NR 39
TC 21
Z9 22
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2012
VL 38
IS 3
BP 658
EP 676
DI 10.1109/TSE.2011.37
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 947FP
UT WOS:000304414400011
DA 2024-07-18
ER

PT J
AU Malek, S
   Medvidovic, N
   Mikic-Rakic, M
AF Malek, Sam
   Medvidovic, Nenad
   Mikic-Rakic, Marija
TI An Extensible Framework for Improving a Distributed Software System's
   Deployment Architecture
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software architecture; software deployment; quality of service;
   self-adaptive software
AB A distributed system's allocation of software components to hardware nodes (i.e., deployment architecture) can have a significant impact on its quality of service (QoS). For a given system, there may be many deployment architectures that provide the same functionality, but with different levels of QoS. The parameters that influence the quality of a system's deployment architecture are often not known before the system's initial deployment and may change at runtime. This means that redeployment of the software system may be necessary to improve the system's QoS properties. This paper presents and evaluates a framework aimed at finding the most appropriate deployment architecture for a distributed software system with respect to multiple, possibly conflicting QoS dimensions. The framework supports formal modeling of the problem and provides a set of tailorable algorithms for improving a system's deployment. We have realized the framework on top of a visual deployment architecture modeling and analysis environment. The framework has been evaluated for precision and execution-time complexity on a large number of simulated distributed system scenarios, as well as in the context of two third-party families of distributed applications.
C1 [Malek, Sam] George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
   [Medvidovic, Nenad] Univ So Calif, Dept Comp Sci, Los Angeles, CA 90089 USA.
   [Mikic-Rakic, Marija] Google Inc, Santa Monica, CA 90401 USA.
C3 George Mason University; University of Southern California; Google
   Incorporated
RP Malek, S (corresponding author), George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
EM smalek@gmu.edu; neno@usc.edu; marija@google.com
FU US National Science Foundation [0905665, 0312780, 0820170, 0820060];
   Infosys; Defense Advanced Research Project Agency; US Army; Boeing; Jet
   Propulsion Laboratory; Bosch Research and Technology Centers; Division
   of Computing and Communication Foundations; Direct For Computer & Info
   Scie & Enginr [0820170, 0905665] Funding Source: National Science
   Foundation; Division of Computing and Communication Foundations; Direct
   For Computer & Info Scie & Enginr [0312780, 0820060] Funding Source:
   National Science Foundation
FX This work was sponsored by the US National Science Foundation under
   Grant numbers 0905665, 0312780, 0820170, and 0820060, as well as the
   Infosys, Defense Advanced Research Project Agency, US Army, Boeing, the
   Jet Propulsion Laboratory, and Bosch Research and Technology Centers.
   Any opinions, findings, and conclusions expressed in this paper are
   those of the authors and do not necessarily relect the views of the
   funding organizations. The authors wish to thank the anonymous reviewers
   for their helpful comments.
CR [Anonymous], 2011, ARCHITECTURE ANAL DE
   [Anonymous], 1990, IEEE STAND COMP DICT
   [Anonymous], 1998, INTEGER PROGRAMMING
   [Anonymous], 2001, HIGH AVAILABILITY DE
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Balsamo S., 2002, INT WORKSH SOFTW PER
   Bastarrica M.C., 1998, P INT C PRINC DISTR
   Bennani M., 2005, P IEEE INT C AUT COM
   Carzaniga A., 1997, P INT C SOFTW ENG MA
   Carzaniga A., 1998, CHARACTERIZATION FRA
   Castillo E., 2001, Building and solving mathematical programming models in engineering and science
   Cooray D., 2010, P IEEE ACM INT C AUT
   Czyzyk J, 1998, IEEE COMPUT SCI ENG, V5, P68, DOI 10.1109/99.714603
   Dashofy EM, 2005, ACM T SOFTW ENG METH, V14, P199, DOI 10.1145/1061254.1061258
   Edwards G., 2007, P INT C FUND APPR SO
   Edwards G., 2008, P INT C AUT SOFTW EN
   Epifani I., 2009, P INT C SOFTW ENG MA
   Garlan David., 2003, ARCHITECTING DEPENDA
   Gummadi K., 2002, P ACM SIGCOMM COMP C
   Gyires T., 1995, P IEEE INT C SYST MA
   Hall R.S., 1999, P 21 INT C SOFTW ENG
   Hoganson KE, 1999, IEEE T COMPUT, V48, P1173, DOI 10.1109/12.811107
   Hunt G., 1999, P 3 S OP SYST DES IM
   Ingersoll J.E. Jr., 1987, Theory of financial decision making
   ISARD M., 2007, EU ROSYS, P59
   Jones M., 1997, P S OP SYST PRINC
   Kichkaylo T., 2003, P INT PAR DISTR PROC
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   Kramer J., 2007, P INT C SOFTW ENG MA
   Lee C., 1999, P IEEE 20 REAL TIM S
   Malek S, 2005, IEEE T SOFTWARE ENG, V31, P256, DOI 10.1109/TSE.2005.29
   Malek S., 2007, THESIS U SO CALIFORN
   Malek S., 2007, P INT C SOFTW ENG MA
   Malek S., 2005, P 3 INT WORK C COMP
   Malek S., 2006, P 4 INT WORKSH MIDDL
   Malek S, 2010, J SYST SOFTWARE, V83, P972, DOI 10.1016/j.jss.2009.11.003
   Manolios P., 2007, P INT S SOFTW TEST A
   Medvidovic N, 2003, COMPUTER, V36, P66, DOI 10.1109/MC.2003.1231196
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Medvidovic N., 2002, P 14 INT C SOFTW ENG
   Medvidovic N, 2007, INFORM SOFTWARE TECH, V49, P12, DOI 10.1016/j.infsof.2006.08.006
   Menasce D.A., 2010, P 1 JOINT WOSPWOSP S
   Menascé DA, 2005, IEEE INTERNET COMPUT, V9, P90, DOI 10.1109/MIC.2005.42
   Mikic-Rakic M., 2004, P 2 INT WORK C COMP
   Mikic-Rakic M., 2005, P INT WORK C COMP DE
   Mikic-Rakic M., 2008, P INT WORKSH SOFTW A
   Mikic-Rakic M., 2004, P INT C AUT COMP MAY
   Neugebauer R., 2000, P 9 WORKSH ACM SIGOP
   Newton R., 2009, P 6 USENIX S NETW SY
   Oreizy P., 2008, P INT C SOFTW ENG MA
   Oreizy P., 1998, P INT C SOFTW ENG AP
   Pham H, 1995, SOFTWARE RELIABILITY
   Poladian V., 2004, P 26 INT C SOFTW ENG
   Russell S., 1995, Prentice Hall series in artificial intelligence, V25, P27
   Seo C., 2007, P INT C AUT SOFTW EN
   Seo C., 2008, P INT S COMP BAS SOF
   Sousa J. P., 2008, P INT C SOFTW DAT TE
   Sousa JP, 2006, IEEE T SYST MAN CY C, V36, P328, DOI 10.1109/TSMCC.2006.871588
   Stallings W., 2003, CRYPTOGRAPHY NETWORK
   Strunk EA, 2006, IEEE T DEPEND SECURE, V3, P172, DOI 10.1109/TDSC.2006.33
   Subramani V., 2002, P INT S HIGH PERF DI
   Taylor R.N., 2008, SOFTWARE ARCHITECTUR
   Tilevich E, 2009, ACM T SOFTW ENG METH, V19, DOI 10.1145/1555392.1555394
   Walsh W.E., 2004, P INT C AUT COMP MAY
   Zhang J., 2006, P INT C SOFTW ENG MA
NR 65
TC 49
Z9 62
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2012
VL 38
IS 1
BP 73
EP 100
DI 10.1109/TSE.2011.3
PG 28
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881HG
UT WOS:000299472600007
DA 2024-07-18
ER

PT J
AU Kimelman, D
   Kimelman, M
   Mandelin, D
   Yellin, DM
AF Kimelman, Doug
   Kimelman, Marsha
   Mandelin, David
   Yellin, Daniel M.
TI Bayesian Approaches to Matching Architectural Diagrams
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Bayesian techniques; IT system architecture; modeling tools; change
   control
AB IT system architectures and many other kinds of structured artifacts are often described by formal models or informal diagrams. In practice, there are often a number of versions of a model or diagram, such as a series of revisions, divergent variants, or multiple views of a system. Understanding how versions correspond or differ is crucial, and thus, automated assistance for matching models and diagrams is essential. We have designed a framework for finding these correspondences automatically based on Bayesian methods. We represent models and diagrams as graphs whose nodes have attributes such as name, type, connections to other nodes, and containment relations, and we have developed probabilistic models for rating the quality of candidate correspondences based on various features of the nodes in the graphs. Given the probabilistic models, we can find high-quality correspondences using search algorithms. Preliminary experiments focusing on architectural models suggest that the technique is promising.
C1 [Kimelman, Doug] IBM Corp, Thomas J Watson Res Ctr, Dept Software Technol, Yorktown Hts, NY 10598 USA.
   [Mandelin, David] Mozilla Corp, Mountain View, CA 94041 USA.
   [Yellin, Daniel M.] IBM Corp, Israel Software Lab, IL-96951 Jerusalem, Israel.
C3 International Business Machines (IBM); International Business Machines
   (IBM)
RP Kimelman, D (corresponding author), IBM Corp, Thomas J Watson Res Ctr, Dept Software Technol, POB 704, Yorktown Hts, NY 10598 USA.
EM dnk@us.ibm.com; marshak@shaw.ca; dmandelin@mozilla.com;
   daniely@il.ibm.com
RI Yellin, Daniel/KIJ-5338-2024
CR Abrams S, 2006, IBM SYST J, V45, P481, DOI 10.1147/sj.453.0481
   Alexander Ian., 2002, Proc of the 1st Int Workshop on Traceability, P26
   [Anonymous], P C INN DAT RES CIDR
   Anthony Richard, 2003, LARGE SCALE SOFTWARE
   Antoniol G, 2001, SOFTWARE PRACT EXPER, V31, P331, DOI 10.1002/spe.374
   Berger J, 1999, Z SOZIOL, V28, P1
   Cicchetti A, 2007, J OBJECT TECHNOL, V6, P165, DOI 10.5381/jot.2007.6.9.a9
   DECHTER R, 1985, J ACM, V32, P505, DOI 10.1145/3828.3830
   Doan AnHai., 2001, ACM Sigmod Record, V30, P509, DOI DOI 10.1145/375663.375731
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Hale Laura P, 2004, Ann Diagn Pathol, V8, P50, DOI 10.1016/j.anndiagpath.2003.11.006
   *IBM, 2009, IBM INS APPL ARCH EX
   Jaynes E. T., 2003, Probability Theory
   Jossic A, 2007, 2007 INTERNATIONAL CONFERENCE ON SYSTEMS ENGINEERING AND MODELING, PROCEEDINGS, P79, DOI 10.1109/ICSEM.2007.373336
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Lin YH, 2007, EUR J INFORM SYST, V16, P349, DOI 10.1057/palgrave.ejis.3000685
   Madhavan J., 2001, Proceedings of the 27th International Conference on Very Large Data Bases, P49
   MANDELIN D, 2006, P 28 INT C SOFTW ENG
   Melnik S., 2002, P 18 INT C DAT ENG
   MOORE PG, 1956, BIOMETRIKA, V43, P482, DOI 10.1093/biomet/43.3-4.482
   OHST D, 2003, P INT C SOFTW MAINT
   Rahm E, 2001, VLDB J, V10, P334, DOI 10.1007/s007780100057
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   RILLING J, 2007, TR74211 IBM
   Rozanski N., 2005, SOFTWARE SYSTEMS ARC
   SHERBA S.A., 2003, 2nd International Workshop on Traceability in Emerging Forms of Software Engineering at 18th IEEE International Conference on Automated Software Engineering, P32
   SPANOUDAKIS G, 2004, SOFTW SYST MODEL, V3, P273
   TARJAN DE, 1983, DATA STRUCTURES NETW
   *TM FOR, 2009, TM FOR INF FRAM SID
   TREUDE C, 2007, P 6 JOINT M EUR SOFT, P295, DOI DOI 10.1145/1287624.1287665
   Tu KW, 2005, LECT NOTES COMPUT SC, V3453, P888
   Xing Z., 2005, Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering, P54
   YIH W, 2006, P 3 C EM ANT JUL
   Youngs R, 1999, IBM SYST J, V38, P32, DOI 10.1147/sj.381.0032
   2009, NGOSS SHARED INFORM
   2006, HDB ARCHITECTURES IN, P669
NR 36
TC 6
Z9 7
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2010
VL 36
IS 2
BP 248
EP 274
DI 10.1109/TSE.2009.56
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 574ZH
UT WOS:000276032300009
DA 2024-07-18
ER

PT J
AU Yuan, X
   Memon, AM
AF Yuan, Xun
   Memon, Atif M.
TI Generating Event Sequence-Based Test Cases Using GUI Runtime State
   Feedback
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE GUI testing; automated testing; model-based testing; GUITAR testing
   system
ID SOFTWARE; SUITE; MODEL
AB This paper presents a fully automatic model-driven technique to generate test cases for Graphical user interfaces (GUIs)-based applications. The technique uses feedback from the execution of a "seed test suite," which is generated automatically using an existing structural event interaction graph model of the GUI. During its execution, the runtime effect of each GUI event on all other events pinpoints event semantic interaction (ESI) relationships, which are used to automatically generate new test cases. Two studies on eight applications demonstrate that the feedback-based technique 1) is able to significantly improve existing techniques and helps identify serious problems in the software and 2) the ESI relationships captured via GUI state yield test suites that most often detect more faults than their code, event, and event-interaction-coverage equivalent counterparts.
C1 [Yuan, Xun; Memon, Atif M.] Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
C3 University System of Maryland; University of Maryland College Park
RP Yuan, X (corresponding author), Univ Maryland, Dept Comp Sci, 4115 AV Williams Bldg, College Pk, MD 20742 USA.
EM xyuan@cs.umd.edu; atif@cs.umd.edu
RI Jaafar, Mohamad Farid/B-4563-2010
FU US National Science Foundation [CCF-0447864]; US Office of Naval
   Research [N00014-05-1-0421]
FX The authors thank the anonymous reviewers whose comments and suggestions
   helped to extend the second empirical study, reshape its results, and
   improve the flow of the text. This work was partially supported by the
   US National Science Foundation under grant CCF-0447864 and the US Office
   of Naval Research under grant N00014-05-1-0421.
CR [Anonymous], J ELECTRONIC TESTING
   [Anonymous], P 6 ACM SIGSOFT INT
   APFELBAUM L, 1995, P INT AUT TEST C
   AUGUSTON M, 2005, P 1 INT WORKSH ADV M, P1
   Barnett M, 2004, LECT NOTES COMPUT SC, V2931, P252
   Bell NH, 2001, OSTEOPOROSIS INT, V12, P43, DOI 10.1007/s001980170156
   Belli F, 2006, SOFTW TEST VERIF REL, V16, P3, DOI 10.1002/stvr.335
   Belli F, 2007, APPL INTELL, V26, P161, DOI 10.1007/s10489-006-0008-0
   Bernhard P. J., 1994, ACM Transactions on Software Engineering and Methodology, V3, P201, DOI 10.1145/196092.196088
   Boyapati C., 2002, ISSTA 02, P123, DOI DOI 10.1145/566172.566191
   Briand LC, 2004, PROC INT CONF SOFTW, P86, DOI 10.1109/ICSE.2004.1317431
   CAMPBELL C, 2008, FORMAL METHODS TESTI, P39
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Clarke J., 1998, P PAC NW SOFTW QUAL
   DAMORIM M, 2006, P 21 IEEE ACM INT C
   Dustin E., 1999, AUTOMATED SOFTWARE T
   ESMELIOGLU S, 1997, P PAC NW SOFTW QUAL, P127
   Farchi E, 2002, IBM SYST J, V41, P89, DOI 10.1147/sj.411.0089
   Ferguson R., 1996, ACM Transactions on Software Engineering and Methodology, V5, P63, DOI 10.1145/226155.226158
   Gallagher MJ, 1997, IEEE T SOFTWARE ENG, V23, P473, DOI 10.1109/32.624304
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Howe AE, 1997, KNOWLEDGE-BASED SOFTWARE ENGINEERING, P77, DOI 10.1023/A:1008607721339
   Hyoung Seok Hong, 1995, Proceedings 1995 Asia Pacific Software Engineering Conference, P234, DOI 10.1109/APSEC.1995.496972
   IPATE F, 2004, FUNDAMENTA INFORM, V64, P205
   KASIK DJ, 1996, P C HUM FACT COMP SY, P244
   KOOPMAN PWM, 2006, P INT WORKSH FORM AP, P115
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Lee CE, 2003, CURR APPL PHYS, V3, P405, DOI 10.1016/S1567-1739(03)00101-9
   Lucio L, 2005, LECT NOTES COMPUT SC, V3475, P57
   MAURER PM, 1990, IEEE SOFTWARE, V7, P50, DOI 10.1109/52.56422
   Memon AM, 2005, IEEE T SOFTWARE ENG, V31, P884, DOI 10.1109/TSE.2005.117
   Memon AM, 2001, IEEE T SOFTWARE ENG, V27, P144, DOI 10.1109/32.908959
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   Miller W., 1976, IEEE Transactions on Software Engineering, VSE-2, P223, DOI 10.1109/TSE.1976.233818
   Myers B. A., 1992, CHI '92 Conference Proceedings. ACM Conference on Human Factors in Computing Systems. Striking a Balance, P195, DOI 10.1145/142750.142789
   PACHECO C, 2007, P 29 INT C SOFTW ENG, P396
   Pasquet M, 2008, INT S COLLAB TECHNOL, P121, DOI 10.1109/CTS.2008.4543921
   RICHARDSON DJ, 1993, IEEE T SOFTWARE ENG, V19, P533, DOI 10.1109/32.232020
   Rothermel G, 2004, ACM T SOFTW ENG METH, V13, P277, DOI 10.1145/1027092.1027093
   SARIKAYA B, 1989, COMPUT NETWORKS ISDN, V17, P111, DOI 10.1016/0169-7552(89)90004-4
   SHEHADY RK, 1997, P INT S FAULT TOL CO, V27, P80
   VONMAYRHAUSER A, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P26, DOI 10.1109/ICSM.1994.336792
   White L, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P110, DOI 10.1109/ISSRE.2000.885865
   Whittaker JA, 1997, ANN SOFTW ENG, V4, P115, DOI 10.1023/A:1018975029705
   WOIT D, 1993, P INT S SOFTW TEST A, P2
   Xie Q, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189752
   Xie T., 2006, Automated Software Engineering, V13, P345, DOI 10.1007/s10851-006-8530-6
   YUAN X, 2009, USING GUI RUN TIME S
   Yuan X, 2007, PROC INT CONF SOFTW, P396
NR 49
TC 75
Z9 90
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2010
VL 36
IS 1
BP 81
EP 95
DI 10.1109/TSE.2009.68
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 548TI
UT WOS:000273988900007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kraft, NA
   Duffy, EB
   Malloy, BA
AF Kraft, Nicholas A.
   Duffy, Edward B.
   Malloy, Brian A.
TI Grammar Recovery from Parse Trees and Metrics-Guided Grammar Refactoring
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Grammar; grammar recovery; grammar refactoring; grammar metrics; parse
   tree
ID C++ COMPILERS; LANGUAGE
AB Many software development tools that assist with tasks such as testing and maintenance are specific to a particular development language and require a parser for that language. Because a grammar is required to develop a parser, construction of these software development tools is dependent upon the availability of a grammar for the development language. However, a grammar is not always available for a language and, in these cases, acquiring a grammar is the most difficult, costly, and time-consuming phase of tool construction. In this paper, we describe a methodology for grammar recovery from a hard-coded parser. Our methodology is comprised of manual instrumentation of the parser, a technique for automatic grammar recovery from parse trees, and a semiautomatic metrics-guided approach to refactoring an iterative grammar to obtain a recursive grammar. We present the results of a case study in which we recover and refactor a grammar from version 4.0.0 of the GNU C++ parser and then refactor the recovered grammar using our metrics-guided approach. Additionally, we present an evaluation of the recovered and refactored grammar by comparing it to the ISO C++98 grammar.
C1 [Kraft, Nicholas A.] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
   [Duffy, Edward B.; Malloy, Brian A.] Clemson Univ, Sch Comp, Clemson, SC 29634 USA.
C3 University of Alabama System; University of Alabama Tuscaloosa; Clemson
   University
RP Kraft, NA (corresponding author), Univ Alabama, Dept Comp Sci, Box 870290, Tuscaloosa, AL 35487 USA.
EM nkraft@cs.ua.edu; malloy@cs.clemson.edu; malloy@cs.clemson.edu
CR Alexandrescu A., 2001, Modern C++ Design: Generic Programming and Design Patterns Applied
   ALVES T, 2005, METRIFICATION SDF GR
   *AM NAT STAND I, 1998, 148821998E AM NAT ST
   [Anonymous], GNU COMP COLL
   [Anonymous], P 2 INT WORKSH THEOR
   [Anonymous], DOXYGEN
   Beszedes A., 2005, Proceedings of the 13th IEEE Workshop on Software Technology and Engineering Practice (STEP 2005), P93
   BOUWERS E, 2007, P 7 WORKSH LANG DESC, P82
   Cox CL, 2004, PLAST RUBBER COMPOS, V33, P426, DOI 10.1179/174328904X29939
   Crepinsek M, 2005, ACM SIGPLAN NOTICES, V40, P29, DOI 10.1145/1064165.1064171
   Devanbu PT, 1999, ACM T SOFTW ENG METH, V8, P177, DOI 10.1145/304399.304402
   Dubey A, 2008, IET SOFTW, V2, P223, DOI 10.1049/iet-sen:20070061
   Duffy EB, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P11, DOI 10.1109/WCRE.2007.11
   Garey M.R., 1979, COMPUTERS INTRACTABI
   GOLD EM, 1967, INFORM CONTROL, V10, P447, DOI 10.1016/S0019-9958(67)91165-5
   GROUP LR, 2007, IPLASMA INTEGRATED P
   Gschwind T, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P48, DOI 10.1109/WCRE.2004.40
   Harm J., 2000, Informatica, V24, P355
   HEERING J, 1989, SIGPLAN NOTICES, V24, P43, DOI 10.1145/71605.71607
   Hennessy M., 2005, PROC 20 IEEEACM INT, P104
   *ISO IEC, 1996, 149771996E ISOIEC JT
   Javed F., 2004, Proceedings of the 42nd annual Southeast regional conference, P404
   Klint P, 2005, ACM T SOFTW ENG METH, V14, P331, DOI 10.1145/1072997.1073000
   Kort J., 2002, ELECT NOTES THEORETI, V65
   Kraft NA, 2007, SCI COMPUT PROGRAM, V69, P3, DOI 10.1016/j.scico.2007.01.012
   Kraft NA, 2007, INFORM SOFTWARE TECH, V49, P292, DOI 10.1016/j.infsof.2006.10.014
   Lammel R., 2001, Fundamental Approaches to Software Engineering. 4th International Conference, FASE 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2029), P201
   Lämmel R, 2001, SOFTWARE PRACT EXPER, V31, P1395, DOI 10.1002/spe.423
   Lämmel R, 2001, IEEE SOFTWARE, V18, P78, DOI 10.1109/52.965809
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   LOHMANN W, 2004, P 4 WORKSH LANG DESC
   Malloy BA, 2003, DR DOBBS J, V28, P54
   Malloy BA, 2003, SOFTWARE PRACT EXPER, V33, P19, DOI 10.1002/spe.493
   Malloy BA, 2002, DR DOBBS J, V27, P71
   PAAKKI J, 1995, ACM COMPUT SURV, V27, P196, DOI 10.1145/210376.197409
   Power JE, 2004, J SOFTW MAINT EVOL-R, V16, P405, DOI 10.1002/smr.293
   SAKAKIBARA Y, 1992, INFORM COMPUT, V97, P23, DOI 10.1016/0890-5401(92)90003-X
   Sakakibara Y, 2000, LECT NOTES ARTIF INT, V1891, P229
   Sellink A, 2002, SCI COMPUT PROGRAM, V45, P193, DOI 10.1016/S0167-6423(02)00061-8
   Sellink A., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P245, DOI 10.1109/ICSM.1999.792622
   van Deursen A., 2002, Journal of Computing and Information Technology - CIT, V10, P1, DOI 10.2498/cit.2002.01.01
   2009, GCC TESTING EFFORTS
NR 42
TC 9
Z9 10
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2009
VL 35
IS 6
BP 780
EP 794
DI 10.1109/TSE.2009.65
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 524VP
UT WOS:000272172800004
DA 2024-07-18
ER

PT J
AU Vicario, E
   Sassoli, L
   Carnevali, L
AF Vicario, Enrico
   Sassoli, Luigi
   Carnevali, Laura
TI Using Stochastic State Classes in Quantitative Evaluation of Dense-Time
   Reactive Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Correctness verification; performance and dependability evaluation;
   stochastic Time Petri nets; non-Markovian Stochastic Petri Nets;
   dense-time state-space analysis; Difference Bounds Matrix; Markov
   Renewal Theory
ID PETRI NETS; VERIFICATION; TOOL
AB In the verification of reactive systems with nondeterministic densely valued temporal parameters, the state-space can be covered through equivalence classes, each composed of a discrete logical location and a dense variety of clock valuations encoded as a Difference Bounds Matrix (DBM). The reachability relation among such classes enables qualitative verification of properties pertaining events ordering and stimulus/response deadlines, but it does not provide any measure of probability for feasible behaviors. We extend DBM equivalence classes with a density-function which provides a measure for the probability of individual states. To this end, we extend Time Petri Nets by associating a probability density-function to the static firing interval of each nondeterministic transition. We then explain how this stochastic information induces a probability distribution for the states contained within a DBM class and how this probability evolves in the enumeration of the reachability relation among classes. This enables the construction of a stochastic transition system which supports correctness verification based on the theory of TPNs, provides a measure of probability for each feasible run, enables steady-state analysis based on Markov Renewal Theory. In so doing, we provide a means to identify feasible behaviors and to associate them with a measure of probability in models with multiple concurrent generally distributed nondeterministic timers.
C1 [Vicario, Enrico; Sassoli, Luigi; Carnevali, Laura] Univ Florence, Dipartimento Sistemi & Informat, I-50139 Florence, Italy.
C3 University of Florence
RP Vicario, E (corresponding author), Univ Florence, Dipartimento Sistemi & Informat, 3 Via Santa Marta, I-50139 Florence, Italy.
EM vicario@dsi.unifi.it; sassoli@dsi.unifi.it; carnevali@dsi.unifi.it
RI vicario, enrico/ABG-4344-2020
OI vicario, enrico/0000-0002-4983-4386
FU Italian Ministry of University; PRIN
FX This work was partially supported by the project WiSeDeMon funded by the
   Italian Ministry of University and Research as a part of the PRIN 2007
   Program.
CR Alur R, 1996, IEEE T SOFTWARE ENG, V22, P181, DOI 10.1109/32.489079
   ALUR R, 1990, P 5 S LOG COMP SCI J
   ALUR R, 1990, P 17 INT C AUT LANG
   [Anonymous], 91262001 ISOIEC
   [Anonymous], 1989, P 3 INT WORKSH PETR
   BENGTSSON J, 1996, HYBRID SYSTEMS, V3
   Berthomieu B., 1983, Information Processing 83. Proceedings of the IFIP 9th World Computer Congress, P41
   Berthomieu B, 2004, INT J PROD RES, V42, P2741, DOI [10.1080/00207540412331312688, 10.1080/00207540410001705257]
   BERTHOMIEU B, 1991, IEEE T SOFTWARE ENG, V17, P259, DOI 10.1109/32.75415
   Bobbio A, 2000, IEEE T SOFTWARE ENG, V26, P36, DOI 10.1109/32.825765
   Bobbio A., 1995, Proceedings. International Computer Performance and Dependability Symposium (Cat. No.95TH8034), P124, DOI 10.1109/IPDS.1995.395811
   BOBBIO A, 1994, STOCH MODELS, V10, P661
   Bucci G, 2004, IEEE T SOFTWARE ENG, V30, P97, DOI 10.1109/TSE.2004.1265815
   BUCCI G, 2004, P 1 INT C QUANT EV S
   BUCCI G, 2005, P 2 INT C QUANT EV S
   Buttazzo G., 2005, S COMP SCI
   Carnevali L, 2009, IEEE T SOFTWARE ENG, V35, P178, DOI 10.1109/TSE.2008.101
   CHOI H, 1994, PERFORM EVALUATION, V20, P337, DOI 10.1016/0166-5316(94)90021-3
   CIARDO G, 1994, IEEE T SOFTWARE ENG, V20, P506, DOI 10.1109/32.297939
   DAWS C, 1995, HYBRID SYSTEMS, V3
   Dill D., 1989, P WORKSH COMP AID VE
   Gardey G, 2005, LECT NOTES COMPUT SC, V3576, P418
   German R., 1999, Proceedings 8th International Workshop on Petri Nets and Performance Models (Cat. No.PR00331), P64, DOI 10.1109/PNPM.1999.796537
   GERMAN R, 1994, PERFORM EVALUATION, V20, P317, DOI 10.1016/0166-5316(94)90020-5
   German R., 2000, PERFORMANCE ANAL COM
   Harel D., 1985, LOGICS MODELS CONCUR
   Jong WT, 1999, IEEE T SYST MAN CY B, V29, P541, DOI 10.1109/3477.775271
   LIME D, 2003, P 5 INT FED AUT CONT
   Lindemann C, 1999, PERFORM EVALUATION, V36-7, P35, DOI 10.1016/S0166-5316(99)00020-6
   Lindemann C, 1996, PERFORM EVALUATION, V27-8, P565, DOI 10.1016/0166-5316(96)00021-1
   MARSAN MA, 1987, LECT NOTES COMPUT SC, V266, P132
   MARSAN MA, 1984, ACM T COMPUT SYST, V2, P93, DOI 10.1145/190.191
   MOLLOY MK, 1985, IEEE T SOFTWARE ENG, V11, P417, DOI 10.1109/TSE.1985.232230
   Neuts MF., 1981, Matrix-Geometric Solutions in Stochastic Models
   PENCZEK W, 2004, P 25 INT C APPL THEO
   POPSTOJANOVA KG, 2000, PERFORM EVALUATION, P385
   SASSOLI L, 2006, P 4 INT C QUANT EV S
   SASSOLI L, 2007, P 5 INT C QUANT EV S
   STANKOVIC JA, 1990, REAL-TIME SYST, V2, P247, DOI 10.1007/BF01995673
   Telek M, 1998, IEEE INTERNATIONAL COMPUTER PERFORMANCE AND DEPENDABILITY SYMPOSIUM -PROCEEDINGS, P44, DOI 10.1109/IPDS.1998.707708
   Vicario E, 2001, IEEE T SOFTWARE ENG, V27, P728, DOI 10.1109/32.940727
   *WOLFRAMRESEARCH, 2009, MATH 5 2
   Xu DX, 2002, IEEE T SOFTWARE ENG, V28, P984, DOI 10.1109/TSE.2002.1041054
NR 43
TC 42
Z9 44
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2009
VL 35
IS 5
BP 703
EP 719
DI 10.1109/TSE.2009.36
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 498PM
UT WOS:000270154300008
DA 2024-07-18
ER

PT J
AU Basit, HA
   Jarzabek, S
AF Basit, Hamid Abdul
   Jarzabek, Stan
TI A Data Mining Approach for Detecting Higher-Level Clones in Software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 23rd IEEE International Conference on Software Maintenance
CY OCT 02-05, 2007
CL Paris, FRANCE
SP IEEE, IEEE Comp Soc, IEEE France Sect, TCSE, IEEE Comp Soc, Tech Council Software Engn, Reeng Forum, Univ Waterloo, Univ Studi Sannio
DE Design concepts; maintainability; restructuring; reverse engineering;
   reengineering; reusable software
ID MAINTENANCE; DESIGN
AB Code clones are similar program structures recurring in variant forms in software system(s). Several techniques have been proposed to detect similar code fragments in software, so-called simple clones. Identification and subsequent unification of simple clones is beneficial in software maintenance. Even further gains can be obtained by elevating the level of code clone analysis. We observed that recurring patterns of simple clones often indicate the presence of interesting higher-level similarities that we call structural clones. Structural clones show a bigger picture of similarity situation than simple clones alone. Being logical groups of simple clones, structural clones alleviate the problem of huge number of clones typically reported by simple clone detection tools, a problem that is often dealt with postdetection visualization techniques. Detection of structural clones can help in understanding the design of the system for better maintenance and in reengineering for reuse, among other uses. In this paper, we propose a technique to detect some useful types of structural clones. The novelty of our approach includes the formulation of the structural clone concept and the application of data mining techniques to detect these higher-level similarities. We describe a tool called Clone Miner that implements our proposed technique. We assess the usefulness and scalability of the proposed techniques via several case studies. We discuss various usage scenarios to demonstrate in what ways the knowledge of structural clones adds value to the analysis based on simple clones alone.
C1 [Basit, Hamid Abdul] Lahore Univ Management Sci, Lahore, Pakistan.
   [Jarzabek, Stan] Natl Univ Singapore, Singapore 117543, Singapore.
C3 Lahore University of Management Sciences; National University of
   Singapore
RP Basit, HA (corresponding author), Lahore Univ Management Sci, Lahore, Pakistan.
EM hamidb@lums.edu.pk; stan@comp.nus.edu.sg
RI Basit, Hamid/AAG-3806-2020
OI Basit, Hamid/0000-0002-1684-4262
CR [Anonymous], 1997, DESIGN PATTERNS ELEM
   [Anonymous], P 29 S PRINC PROGR L
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Balazinska M, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P98, DOI 10.1109/WCRE.2000.891457
   BALAZINSKA M, 1999, P 6 WORK C REV ENG, P326
   BASIT H A, 2007, P 6 JOINT M EUR SOFT, P513, DOI DOI 10.1145/1287624.1287698
   Basit HA, 2005, PROC INT CONF SOFTW, P451
   Basit Hamid Abdul, 2005, SIGSOFT Softw. Eng. Notes, V30, P156, DOI [10.1145/1095430.1081733, DOI 10.1145/1095430.1081733]
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   BIGGERSTAFF TJ, 1989, COMPUTER, V22, P36, DOI 10.1109/2.30731
   BUSS E, 1994, IBM SYST J, V33, P477, DOI 10.1147/sj.333.0477
   Clements P., 2002, Software product lines
   Cordy JR, 2003, PROG COMPREHEN, P196
   De Lucia A, 2004, PROG COMPREHEN, P132, DOI 10.1109/WPC.2004.1311055
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Fowler M., 1997, ANAL PATTERNS REUSAB
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   GIL JY, 2005, P 20 ANN ACM SIGPLAN, P97
   GRAHNE G, 2003, P 1 IEEE ICDM WORKSH
   Han J., 2012, Data Mining, P393, DOI [DOI 10.1016/B978-0-12-381479-1.00009-5, 10.1016/B978-0-12-381479-1.00009-5]
   HIGO Y, 2004, P 8 IASTED INT C SOF, P222
   Jarzabek S, 2007, Effective software maintenance and evolution: A reuse-based approach
   JARZABEK S, 2003, P ESEC FSE 03 EUR SO, P237
   Jarzabek S, 2006, J SOFTW MAINT EVOL-R, V18, P267, DOI 10.1002/smr.333
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser C, 2005, PROC IEEE INT CONF S, P305
   KOZACZYNSKI W, 1992, IEEE T SOFTWARE ENG, V18, P1065, DOI 10.1109/32.184761
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Marcus A, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P107, DOI 10.1109/ASE.2001.989796
   Mayrand J, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P244, DOI 10.1109/ICSM.1996.565012
   PARNAS DL, 1994, P ICSE, V16, P279
   RICH C, 1990, IEEE SOFTWARE, V7, P82, DOI 10.1109/52.43053
   Rich C., 1990, PROGRAMMERS APPRENTI
   RIEGER M, 2005, THESIS U BERN
   Sommerville I., 1996, Software Engineering, V5th
   Ueda Y, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P67, DOI 10.1109/METRIC.2002.1011326
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 53
TC 57
Z9 67
U1 0
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2009
VL 35
IS 4
BP 497
EP 514
DI 10.1109/TSE.2009.16
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 474TB
UT WOS:000268305800006
DA 2024-07-18
ER

PT J
AU Storey, MA
   Ryall, J
   Singer, J
   Myers, D
   Cheng, LT
   Muller, M
AF Storey, Margaret-Anne
   Ryall, Jody
   Singer, Janice
   Myers, Del
   Cheng, Li-Te
   Muller, Michael
TI How Software Developers Use Tagging to Support Reminding and Refinding
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 23rd IEEE International Conference on Software Maintenance
CY OCT 02-05, 2007
CL Paris, FRANCE
SP IEEE, IEEE Comp Soc, IEEE France Sect, TCSE, IEEE Comp Soc, Tech Council Software Engn, Reeng Forum, Univ Waterloo, Univ Studi Sannio
DE Annotations; software navigation; software tagging; tags; software
   development tools
AB Developers frequently add annotations to source code to help them remember pertinent information and mark locations of interest for future investigation. Finding and refinding these notes is a form of navigation that is integral to software maintenance. Although there is some tool support in modern development environments for authoring and navigating these comments, we have observed that these annotations often fail to remind and are sometimes difficult to find by the programmer. To address these shortcomings, we have designed a new approach for software navigation called Tags for Software Engineering Activities (TagSEA). TagSEA combines the notion of waypointing (a mechanism for marking locations in spatial navigation) with social tagging to support programmers in defining semantically rich annotations to source code comments. The tool provides support for creating, editing, navigating, and managing these annotations. We present the results from two empirical studies, where we observed and then analyzed how professional programmers used source code annotations to support their development activities over 24 months. Our findings indicate that the addition of semantic information to annotations can improve their value. We also provide suggestions on how annotation tools in general may be improved.
C1 [Storey, Margaret-Anne; Ryall, Jody; Myers, Del] Univ Victoria, Dept Comp Sci, Victoria, BC V8W 3P6, Canada.
   [Singer, Janice] Natl Res Council Canada, Ottawa, ON K1A 0R6, Canada.
   [Cheng, Li-Te; Muller, Michael] IBM Res, Cambridge, MA 02142 USA.
C3 University of Victoria; National Research Council Canada; International
   Business Machines (IBM)
RP Storey, MA (corresponding author), Univ Victoria, Dept Comp Sci, POB 3055,STN CSC, Victoria, BC V8W 3P6, Canada.
EM mstorey@uvic.ca; jryall@uvic.ca; Janice.singer@nrc-cnrc.gc.ca;
   delmyers.cs@gmail.com; li-te_cheng@us.ibm.com; michael_muller@us.ibm.com
CR [Anonymous], 2005, D-Lib Magazine
   [Anonymous], 2006, Proc. 2006 20th Anniversary Conf. Computer Supported Coop. Work
   Brothers L., 1990, P 1990 ACM C COMPUTE, P169
   Capra Robert G., 2006, THESIS VIRGINIA POLY
   CATTUTO C, 2007, VOCABULARY GROWTH CO
   Cheng LT, 2007, PROC INT CONF SOFTW, P788
   CHI EH, 2007, P HUM COMP INT CONS
   Coblenz M.J., 2006, Proceedings of the 2006 OOPSLA Workshop on Eclipse Technology Exchange, V195, P65, DOI [10.1145/1188835.1188849, DOI 10.1145/1188835.1188849]
   Creswell J.W., 2013, Research Design (International Student Edition): Qualitative, Quantitative, and Mixed Methods Approaches, V4th
   Dagenais B, 2007, PROC INT CONF SOFTW, P47, DOI 10.1109/ICSECOMPANION.2007.51
   DAMIANOS L, 2006, P WWW TAGG WORKSH
   DeLine R, 2005, 2005 IEEE Symposium on Visual Language and Human-Centric Computing, Proceedings, P241, DOI 10.1109/VLHCC.2005.32
   FRASER C, 2008, P IEEE S VIS LANG HU, P73
   FURNAS GW, 1987, COMMUN ACM, V30, P964, DOI 10.1145/32206.32212
   Golder SA, 2006, J INF SCI, V32, P198, DOI 10.1177/0165551506062337
   Kersten M, 2005, P 2005 INT C ASP OR, P159, DOI DOI 10.1145/1052898.1052912
   KERSTEN M, 2006, P IND TRACK C ASP OR
   LARKIN FJ, 1999, BASIC COASTAL NAVIGA
   Majid I., 2005, Proceedings of the 2005 OOPSLA Workshop on Eclipse Technology Exchange, P70, DOI [10.1145/1117696.1117711, DOI 10.1145/1117696.1117711]
   Marshall CC, 1997, ACM DIGITAL LIBRARIES '97, P131
   Muller MJ, 2007, GROUP'07: PROCEEDINGS OF THE 2007 INTERNATIONAL ACM CONFERENCE ON SUPPORTING GROUP WORK, P341
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Oezbek Christopher, 2007, 2007 IEEE International Conference on Software Maintenance, P64, DOI 10.1109/ICSM.2007.4362619
   Pan Y. X., 2008, P 41 ANN HAWAII INT, P158
   PFEIFFER JH, 2005, P OBJ OR PROGR SYST, P60
   Robillard M.P., 2005, Proceedings of the 2005 OOPSLA Workshop on Eclipse Technology Exchange, P65
   SELZNAK, 2009, WE ARE MORONS QUICK
   Singer J, 2005, PROC IEEE INT CONF S, P325
   STOREY MA, 2007, P INT C SOFTW MAINT, P265
   STOREY MA, 2008, P INT C SOFTW ENG, P251
   TEEVAN J, 2007, THESIS MIT
   Vinson N.G., 1999, CHI 99, P278, DOI DOI 10.1145/302979.303062
   Ying A. T., 2005, ACM SIGSOFT software engineering notes, V30, P1
   2009, JAVADOC HOME PAGE
NR 34
TC 32
Z9 38
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2009
VL 35
IS 4
BP 470
EP 483
DI 10.1109/TSE.2009.15
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 474TB
UT WOS:000268305800004
DA 2024-07-18
ER

PT J
AU Han, T
   Katoen, JP
   Damman, B
AF Han, Tingting
   Katoen, Joost-Pieter
   Damman, Berteun
TI Counterexample Generation in Probabilistic Model Checking
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Diagnostic feedback; Markov chain; model checking; regular expression;
   shortest path
ID REGULAR EXPRESSIONS
AB Providing evidence for the refutation of a property is an essential, if not the most important, feature of model checking. This paper considers algorithms for counterexample generation for probabilistic CTL formulas in discrete-time Markov chains. Finding the strongest evidence (i.e., the most probable path) violating a (bounded) until-formula is shown to be reducible to a single-source (hop-constrained) shortest path problem. Counterexamples of smallest size that deviate most from the required probability bound can be obtained by applying (small amendments to) k-shortest (hop-constrained) paths algorithms. These results can be extended to Markov chains with rewards, to LTL model checking, and are useful for Markov decision processes. Experimental results show that, typically, the size of a counterexample is excessive. To obtain much more compact representations, we present a simple algorithm to generate (minimal) regular expressions that can act as counterexamples. The feasibility of our approach is illustrated by means of two communication protocols: leader election in an anonymous ring network and the Crowds protocol.
C1 [Han, Tingting; Katoen, Joost-Pieter; Damman, Berteun] Univ Aachen, RWTH, Dept Comp Sci, D-52074 Aachen, Germany.
   [Han, Tingting; Katoen, Joost-Pieter; Damman, Berteun] Univ Twente, Dept Comp Sci, NL-7500 AE Enschede, Netherlands.
C3 RWTH Aachen University; University of Twente
RP Han, T (corresponding author), Univ Aachen, RWTH, Dept Comp Sci, Ahornstr 55, D-52074 Aachen, Germany.
EM tingting.han@cs.rwth-aachen.de; katoen@cs.rwth-aachen.de; berteun@dds.nl
RI HAN, TINGTING/GQZ-8692-2022; Katoen, Joost-Pieter/O-3307-2018
OI Katoen, Joost-Pieter/0000-0002-6143-1926
FU NWO
FX Christel Baier, David N. Jansen and Alexandru Mereacre are kindly
   acknowledged for their useful remarks on the paper. The authors thank
   the reviewers for their detailed and helpful feedback. This research has
   been supported by the NWO project QUPES and the EU FP7 project
   QUASIMODO.
CR Ahuja R.K., 1993, NETWORK FLOWS ALGORI
   Aljazzar H, 2005, LECT NOTES COMPUT SC, V3829, P177
   Aljazzar H, 2006, LECT NOTES COMPUT SC, V4202, P33
   ANDERSSON C, 2004, IFIP WG 9 2 9 6 11 7, P35
   ANDOVA S, 2003, P INT C FORM MOD AN, P88
   ANDRES ME, 2007, P 4 HAIF VE IN PRESS
   Andrino MH, 2008, PROCEEDINGS OF THE ASME PRESSURE VESSELS AND PIPING CONFERENCE 2007, VOL 5, P157
   [Anonymous], 1998, ACM Trans Inform Syst Secur TISSEC, DOI DOI 10.1145/290163.290168
   [Anonymous], 2001, Problem Solving in Automata, Languages and Complexity
   [Anonymous], 2017, An Introduction to Formal Languages and Automata
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Ball Thomas., 2003, PROC 30 ANN ACM SIGP, P97
   BEHRMANN G, 2005, ACM SIGMETRICS PERFO, V32, P34
   Bellman R., 1958, Q APPL MATH, V16, P87
   BERRY G, 1986, THEOR COMPUT SCI, V48, P117, DOI 10.1016/0304-3975(86)90088-5
   BRZOZOWSKI JA, 1964, J ACM, V11, P481, DOI 10.1145/321239.321249
   Clarke E, 2002, IEEE S LOG, P19, DOI 10.1109/LICS.2002.1029814
   CLARKE EM, 2000, P COMP AID VER, P154
   Comtet L, 1974, Advanced Combinatorics. The Art of Finite and Infinite Expansions
   CORMEN TH, 2001, INTRO ALGORITHMS, P588
   DAMMAN B, 2008, P INT C QUANT EV SYS
   Daws C, 2005, LECT NOTES COMPUT SC, V3407, P280
   DEALFARO L, 2000, P CAV, P186
   DELGADO M, 2004, P INT C IMPL APPL AU, P312
   Dijkstra E. W., 1959, NUMER MATH, V1, P269, DOI [10.1007/BF01386390, DOI 10.1007/BF01386390]
   Eppstein D, 1998, SIAM J COMPUT, V28, P652, DOI 10.1137/S0097539795290477
   FORNEY GD, 1973, P IEEE, V61, P268, DOI 10.1109/PROC.1973.9030
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Gramlich G, 2007, J COMPUT SYST SCI, V73, P908, DOI 10.1016/j.jcss.2006.11.002
   Gurfinkel A, 2003, LECT NOTES COMPUT SC, V2619, P160
   Han F, 2007, PRECIS ENG, V31, P331, DOI 10.1016/j.precisioneng.2007.01.005
   HAN T, 2007, P INT C TOOLS ALG CO, P72
   Han YS, 2007, THEOR COMPUT SCI, V370, P110, DOI 10.1016/j.tcs.2006.09.025
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   HART S, 1983, ACM T PROGR LANG SYS, V5, P356, DOI 10.1145/2166.357214
   Hermanns H, 2008, LECT NOTES COMPUT SC, V5123, P162
   ITAI A, 1990, INFORM COMPUT, V88, P60, DOI 10.1016/0890-5401(90)90004-2
   JAFFE JM, 1984, NETWORKS, V14, P95, DOI 10.1002/net.3230140109
   Jiménez VM, 1999, LECT NOTES COMPUT SC, V1668, P15
   JIN H, 2004, P C SOFTW TOOLS TECH, V6, P102
   Katoen JP, 2007, LECT NOTES COMPUT SC, V4424, P87
   Katoen JP, 2007, LECT NOTES COMPUT SC, V4590, P311
   Katoen JP, 2005, INT CONF QUANT EVAL, P243, DOI 10.1109/QEST.2005.2
   Kleene S.C., 1956, AUTOMATA STUDIES, P3
   Kuipers F, 2004, IEEE NETWORK, V18, P16, DOI 10.1109/MNET.2004.1337731
   Kwiatkowska M, 2006, INT CONF QUANT EVAL, P157
   KWIATKOWSKA MZ, 2004, P C SOFTW TOOLS TECH, V6, P128
   LARSEN KG, 1991, INFORM COMPUT, V94, P1, DOI 10.1016/0890-5401(91)90030-6
   Lawler EL, 2001, COMBINATORIAL OPTIMI
   Le Guen H, 2002, MODELLING AND SIMULATION 2002, P548
   Liu G, 2001, IEEE INFOCOM SER, P743, DOI 10.1109/INFCOM.2001.916263
   Martins E., 1999, INT J FOUND COMPUT S, V10, P247
   MCIVER A, 2008, P TECHN C FORM METH, P100
   Mehlhorn K., 2000, Proceedings 8th European Symposium on Algorithms, P326
   Neumann C., 2005, CONVERTING DETERMINI
   Shmatikov V., 2004, Journal of Computer Security, V12, P355
   Shoham S, 2003, LECT NOTES COMPUT SC, V2725, P275
   VAHASIPILA A, 2005, P HAW INT C SYST SCI
   Vidal E, 2005, IEEE T PATTERN ANAL, V27, P1013, DOI 10.1109/TPAMI.2005.147
   VITERBI AJ, 1967, IEEE T INFORM THEORY, V13, P260, DOI 10.1109/TIT.1967.1054010
NR 60
TC 57
Z9 65
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2009
VL 35
IS 2
BP 241
EP 257
DI 10.1109/TSE.2009.5
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 424FT
UT WOS:000264551600008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kemper, P
   Tepper, C
AF Kemper, Peter
   Tepper, Carsten
TI Automated Trace Analysis of Discrete-Event System Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cycle reduction; debugging techniques; trace analysis; discrete-event
   simulation
AB In this paper, we describe a novel technique that helps a modeler gain insight into the dynamic behavior of a complex stochastic discrete-event simulation model based on trace analysis. We propose algorithms to distinguish progressive from repetitive behavior in a trace and to extract a minimal progressive fragment of a trace. The implied combinatorial optimization problem for trace reduction is solved in linear time with dynamic programming. We present and compare several approximate and one exact solution method. Information on the reduction operation as well as the reduced trace itself helps a modeler to recognize the presence of certain errors and identify their cause. We track down a subtle modeling error in a dependability model of a multiclass server system to illustrate the effectiveness of our approach in revealing the cause of an observed effect. The proposed technique has been implemented and integrated in Traviando, a trace analyzer to debug stochastic simulation models.
C1 [Kemper, Peter] Coll William & Mary, Dept Comp Sci, Williamsburg, VA 23187 USA.
   [Tepper, Carsten] ITGAIN Consulting, Hannover, Germany.
C3 William & Mary
RP Kemper, P (corresponding author), Coll William & Mary, Dept Comp Sci, Williamsburg, VA 23187 USA.
EM kemper@cs.wm.edu
CR [Anonymous], 2001, Algorithms in C, Part 5: Graph Algorithms
   [Anonymous], 2000, Simulation Modeling and Analysis
   Banks J., 2000, GETTING STARTED AUTO
   Bause F, 2002, LECT NOTES COMPUT SC, V2324, P51
   Bause F, 1998, LECT NOTES COMPUT SC, V1469, P356
   Bellman R., 1957, Dynamic programming
   Deavours DD, 2002, IEEE T SOFTWARE ENG, V28, P956, DOI 10.1109/TSE.2002.1041052
   Heindel W, 1996, Aktuelle Radiol, V6, P308
   Ibarra O.H., 1992, Allerton 1992: Proceedings of the 13rd Annual Allerton Conference on Communication, Control, and Computing, P575
   KELTON WD, 2002, SIMULTATION ARENA
   Kemper P, 2005, PROCEEDINGS OF THE 2005 WINTER SIMULATION CONFERENCE, VOLS 1-4, P427, DOI 10.1109/WSC.2005.1574278
   KEMPER P, 2007, P WINT SIM C
   Kemper P, 2007, INT CONF QUANT EVAL, P101, DOI 10.1109/QEST.2007.41
   Kemper P, 2006, INT CONF QUANT EVAL, P135
   Krahl D, 2005, Proceedings of the 2005 Winter Simulation Conference, Vols 1-4, P62, DOI 10.1109/WSC.2005.1574240
   MAO W, COMMUNICATION
   Nivasch G, 2004, INFORM PROCESS LETT, V90, P135, DOI [10.1016/j.ipl.2004.01.016, 10.1016/j.ip1.2004.01.016]
   Sadowski DA, 2005, PROCEEDINGS OF THE 2005 WINTER SIMULATION CONFERENCE, VOLS 1-4, P56, DOI 10.1109/WSC.2005.1574239
   Sammapun U, 2005, 11TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P147, DOI 10.1109/RTCSA.2005.84
   Sargent RG, 2005, PROCEEDINGS OF THE 2005 WINTER SIMULATION CONFERENCE, VOLS 1-4, P130, DOI 10.1109/WSC.2005.1574246
   SEDGEWICK R, 1982, SIAM J COMPUT, V11, P376, DOI 10.1137/0211030
   Woodside C. M., 1991, Proceedings of the Fourth International Workshop on Petri Nets and Performance Models (PNPM91) (Cat. No.91TH0386-3), P64, DOI 10.1109/PNPM.1991.238781
NR 22
TC 24
Z9 25
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2009
VL 35
IS 2
BP 195
EP 208
DI 10.1109/TSE.2008.75
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 424FT
UT WOS:000264551600005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kistijantoro, AI
   Morgan, G
   Shrivastava, SK
   Little, MC
AF Kistijantoro, Achmad Imam
   Morgan, Graham
   Shrivastava, Santosh K.
   Little, Mark C.
TI Enhancing an application server to support available components
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE application servers; availability; Enterprise Java Beans; fault
   tolerance; middleware; replication; transactions
ID REPLICATION; TRANSACTIONS
AB Three-tier middleware architecture is commonly used for hosting enterprise-distributed applications. Typically, the application is decomposed into three layers: front end, middle tier, and back end. Front end ("Web server") is responsible for handling user interactions and acts as a client of the middle tier, while back end provides storage facilities for applications. Middle tier ("Application server") is usually the place where all computations are performed. One of the benefits of this architecture is that it allows flexible management of a cluster of computers for performance and scalability; further, availability measures, such as replication, can be introduced in each tier in an application-specific manner. However, incorporation of availability measures in a multitier system poses challenging system design problems of integrating open, nonproprietary solutions to transparent failover, exactly once execution of client requests, nonblocking transaction processing, and an ability to work with clusters. This paper describes how replication for availability can be incorporated within the middle and back-end tiers, meeting all these challenges. This paper develops an approach that requires enhancements to the middle tier only for supporting replication of both the middleware back-end tiers. The design, implementation, and performance evaluation of such a middle-tier-based replication scheme for multidatabase transactions on a widely deployed open source application server (JBoss) are presented.
C1 [Kistijantoro, Achmad Imam] Bandung Inst Technol, Sch Elect Engn & Informat, ITB, Bandung 40135, Indonesia.
   [Morgan, Graham; Shrivastava, Santosh K.] Univ Newcastle, Sch Comp Sci, Newcastle Upon Tyne NE1 7RU, Tyne & Wear, England.
   [Little, Mark C.] Red Hat UK Ltd, Windsor SI4 1TE, Berks, England.
C3 Institute Technology of Bandung; Newcastle University - UK
RP Kistijantoro, AI (corresponding author), Bandung Inst Technol, Sch Elect Engn & Informat, ITB, Labtek 5,Ganesha 10, Bandung 40135, Indonesia.
EM imam@informatika.org; Graham.Morgan@ncl.ac.uk;
   Santosh.Shrivastava@ncl.ac.uk; MLittle@redhat.com
RI Morgan, Graham/AAF-9579-2020; Kistijantoro, Imam/AAC-7608-2021
OI Kistijantoro, Imam/0000-0003-2065-6675; Morgan,
   Graham/0000-0002-0089-0395
CR AMZA C, 2003, P 4 ACM IFIP USENIX, P998
   [Anonymous], 2006, 15 INT C WORLD WID W
   BABAOGLU O, 2004, P INT S DISTR OBJ AP, P1413
   Baldoni R, 2003, SOFTWARE PRACT EXPER, V33, P767, DOI 10.1002/spe.525
   BARGA R, 2000, P 7 INT C EXT DAT TE, P462
   Barga Roger., 2004, ACM Trans. Interet Technol, V4, P289
   BARGHOUTHI S, 2008, BUILDING HIGH AVAI 3
   BERNSTEIN PA, 1990, SIGMOD REC, V19, P112, DOI 10.1145/93605.98721
   BERNSTEIN PA, 1993, P INT C DISTR COMP S, P491
   BIRMAN KP, 1993, COMMUN ACM, V36, P37, DOI 10.1145/163298.163303
   CECCHET E, 2004, P USENIX ANN TECHN C, P89
   Felber P, 1998, THEOR PRACT OBJ SYST, V4, P93, DOI 10.1002/(SICI)1096-9942(1998)4:2<93::AID-TAPO4>3.0.CO;2-8
   Frolund S, 2002, IEEE T SOFTWARE ENG, V28, P378, DOI 10.1109/TSE.2002.995430
   Hammer M., 1980, ACM Transactions on Database Systems, V5, P431, DOI 10.1145/320610.320621
   JIMENEZPARIS R, 2001, P 15 INT C DISTR COM, P93
   Kemme B, 2000, ACM T DATABASE SYST, V25, P333, DOI 10.1145/363951.363955
   KEMME B, 2005, P 31 INT C VER LARG
   Kistijantoro AI, 2003, SYM REL DIST SYST, P89, DOI 10.1109/RELDIS.2003.1238058
   KISTIJANTORO AI, 2006, P INT WORKSH REL DEC, P1555
   LABOUREY S, 2002, JBOSS CLUSTERING
   Little M. C., 1999, Proceedings 1999 IEEE Workshop on Internet Applications (Cat. No.PR00197), P112, DOI 10.1109/WIAPP.1999.788028
   Little M. C., 1998, Distributed Systems Engineering, V5, P156, DOI 10.1088/0967-1846/5/4/003
   Little MC, 1998, ENTERPRISE DISTRIBUTED OBJECT COMPUTING - PROCEEDINGS SECOND INTERNATIONAL WORKSHOP, P194, DOI 10.1109/EDOC.1998.723255
   Moser LE, 1999, DIG PAP INT SYMP FAU, P150, DOI 10.1109/FTCS.1999.781045
   Moser LE, 1998, THEOR PRACT OBJ SYST, V4, P81, DOI 10.1002/(SICI)1096-9942(1998)4:2<81::AID-TAPO3>3.0.CO;2-A
   Patino-Martinez M., 2005, ACM T COMPUTERS, V23, P1
   PEREZSORROSAL F, 2006, P 26 IEEE INT C DIST
   Reddy PK, 1998, 3RD IFCIS INTERNATIONAL CONFERENCE ON COOPERATIVE INFORMATION SYSTEMS - PROCEEDINGS, P406, DOI 10.1109/COOPIS.1998.706315
   ROEHM B, 2008, WEBSPHERE APPL SERVE
   Wiesmann M, 2000, SYM REL DIST SYST, P206, DOI 10.1109/RELDI.2000.885408
   WILSON A, 2008, DISTRIBUTED T 2 PHAS
   WU H, 2004, P COOPIS DOA ODBASE, P1376
   Zhang X, 2006, EDCC 2006: SIXTH EUROPEAN DEPENDABLE COMPUTING CONFERENCE, PROCEEDINGS, P119
   Zhao WB, 2005, IEEE T DEPEND SECURE, V2, P20, DOI 10.1109/TDSC.2005.14
NR 34
TC 8
Z9 9
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2008
VL 34
IS 4
BP 531
EP 545
DI 10.1109/TSE.2008.38
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 330JI
UT WOS:000257936500008
DA 2024-07-18
ER

PT J
AU Apel, S
   Leich, T
   Saake, G
AF Apel, Sven
   Leich, Thomas
   Saake, Gunter
TI Aspectual feature modules
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE feature-oriented programming; aspect-oriented programming; software
   product lines; incremental software development; collaboration-based
   design; separation of concerns; crosscutting modularity
AB Two programming paradigms are gaining attention in the overlapping fields of software product lines (SPLs) and incremental software development (ISD). Feature-oriented programming (FOP) aims at large-scale compositional programming and feature modularity in SPLs using ISD. Aspect-oriented programming (AOP) focuses on the modularization of crosscutting concerns in complex software. Although feature modules, the main abstraction mechanisms of FOP, perform well in implementing large-scale software building blocks, they are incapable of modularizing certain kinds of crosscutting concerns. This weakness is exactly the strength of aspects, the main abstraction mechanisms of AOP. We contribute a systematic evaluation and comparison of FOP and AOP. It reveals that aspects and feature modules are complementary techniques. Consequently, we propose the symbiosis of FOP and AOP and aspectual feature modules (AFMs), a programming technique that integrates feature modules and aspects. We provide a set of tools that support implementing AFMs on top of Java and C++. We apply AFMs to a nontrivial case study demonstrating their practical applicability and to justify our design choices.
C1 [Apel, Sven] Univ Passau, Dept Math & Informat, D-94030 Passau, Germany.
   [Leich, Thomas] Metop Res Inst, Dept Appl Informat, D-39106 Magdeburg, Germany.
   [Saake, Gunter] Univ Magdeburg, Sch Comp Sci, D-39106 Magdeburg, Germany.
C3 University of Passau; Otto von Guericke University
RP Apel, S (corresponding author), Univ Passau, Dept Math & Informat, D-94030 Passau, Germany.
EM apel@infosun.fim.uni-passau.de; thomas.leich@metop.de;
   saake@iti.cs.uni-magdeburg.de
RI Leich, Thomas/N-8106-2017
OI Apel, Sven/0000-0003-3687-2233
CR Achermann F, 2005, THEOR COMPUT SCI, V331, P367, DOI 10.1016/j.tcs.2004.09.022
   ALDRICH J, 2005, P 19 EUR C OBJ OR PR, P144
   Alexander R, 2003, IEEE SOFTWARE, V20, P91, DOI 10.1109/MS.2003.1241373
   Alves V., 2006, Proceedings of the 5th international conference on Generative Programming and Component Engineering, P201, DOI [10.1145/1173706, DOI 10.1145/1173706]
   Androutsellis-Theotokis S, 2004, ACM COMPUT SURV, V36, P335, DOI 10.1145/1041680.1041681
   Anfurrutia FI, 2007, LECT NOTES COMPUT SC, V4607, P473
   [Anonymous], 2005, ADDISON WESLEY OBJEC
   [Anonymous], PRAX INF KOMMUN
   APEL S, 2006, P GPCE WORKSH ASP OR
   APEL S, 2007, THESIS U MAGDEBURG
   APEL S, 1914, P INT C GEN PROGR CO, P125
   APEL S, 2004, P ASE WORKSH SOFT EN, P137
   Apel S., 2007, MIP0706 U PASS DEP I
   Apel S, 2007, J OBJECT TECHNOL, V6, P13, DOI 10.5381/jot.2007.6.9.a1
   Apel Sven, 2006, P 5 INT C GENERATIVE, P59
   ARACIC I, 2006, T ASPECT ORIENTED SO, V3880, P135
   Batory Don, 2007, POPL 2007. The 34th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P135, DOI 10.1145/1190216.1190238
   Batory D., 1997, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V9, P107, DOI 10.1023/A:1008617930959
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Batory D, 2002, ACM T SOFTW ENG METH, V11, P191, DOI 10.1145/505145.505147
   Batory D., 1992, ACM Transactions on Software Engineering and Methodology, V1, P355, DOI 10.1145/136586.136587
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   BATORY D, 1995, P S SOFTW REUS SEATT, P27
   BATORY D, 2003, P 9 EUR SOFTW ENG C, P48
   Bergee MJ, 2005, J RES MUSIC EDUC, V53, P177, DOI 10.2307/3345517
   BERGER ED, 2001, P 2001 ACM SIGPLAN C, P114
   BODDEN E, 2006, P INT NET OBJECTDAYS, P49
   Böhm K, 2007, VLDB J, V16, P463, DOI 10.1007/s00778-005-0175-3
   Bohm Apel. K., 2005, P CAISE WORKSH ADAP, V2, P139
   Bosch J, 1999, INFORM SOFTWARE TECH, V41, P257, DOI 10.1016/S0950-5849(99)00007-5
   BRACHA G, 2003, P INT C OBJ OR PROGR, P303
   Bravenboer M, 2004, ACM SIGPLAN NOTICES, V39, P365, DOI 10.1145/1035292.1029007
   BUCHMANN E, 2005, P INT C WEB INF SYST, P72
   Cardone R, 2001, PROC INT CONF SOFTW, P285, DOI 10.1109/ICSE.2001.919102
   Cardone R., 2002, 1 INT C ASPECT ORIEN, P76
   CHITCHYAN R, 1963, P INT C ASP OR SOFTW, P36
   Clarke S., 1999, P 1999 ACM SIGPLAN C, P325
   Coady Y., 2003, P 2 INT C ASPECT ORI, P50
   COLYER A, 2004, COMP0012004
   Colyer A., 2004, P 3 INT C ASPECT ORI, P56, DOI DOI 10.1145/976270.976279
   Cook William R., 1989, PhD dissertation
   COSTANZA P, 2006, P JOINT MOD LANG C, P84
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   Czarnecki K., 2000, GEN PROGRAMMING METH
   DANTAS DS, 2006, POPL 06, P383
   Ducasse S, 2006, ACM T PROGR LANG SYS, V28, P331, DOI 10.1145/1119479.1119483
   Elrad T, 2001, COMMUN ACM, V44, P28
   ERNST E, 2003, P EUR C OBJ OR PROGR, P303
   Filman RobertE., 2005, ASPECT ORIENTED SOFT, P21
   Griss ML, 2000, SPRINGER INT SER ENG, V576, P271
   Griswold WG, 2006, IEEE SOFTWARE, V23, P51, DOI 10.1109/MS.2006.24
   HANENBERG S, 2002, P 8 INT C OBJ OR INF, P507
   HARRISON W, 1993, SIGPLAN NOTICES, V28, P411, DOI 10.1145/167962.165932
   Harrison William, 2002, RC22685 IBM RES DIV
   HERRMANN S, 1948, P INT NET OBJECTDAYS, P248
   HUNLETH F, 2002, P JOINT C LANG COMP, P38
   Kästner C, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P223, DOI 10.1109/SPLINE.2007.12
   KENDALL EA, 1999, P ACM C OBJ OR SYST, P353
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales Gregor., 2001, Proceedings of the 15th European Conference on Object-Oriented Programming, P327
   Klein Jacques., 2006, AOSD, P27
   Lee K, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P103
   LEICH T, 2005, P E EUR C ADV DAT IN, P324
   Lieberherr K, 2003, COMPUT J, V46, P542, DOI 10.1093/comjnl/46.5.542
   LIEBERHERR K, 1999, NUCCS9901 NE U COLL
   Lieberherr KJ, 2004, PROC INT CONF SOFTW, P2, DOI 10.1109/ICSE.2004.1317408
   LIU J, 2006, P INT C SOFTW ENG IC, P112
   Lohmann D., 2006, P 1 ACM SIGOPS EUROS, P191
   Lohmann D, 2006, LECT NOTES COMPUT SC, V4242, P227
   Lopez-Herrejon R., 2006, THESIS U TEXAS AUSTI
   Lopez-Herrejon R, 2006, TR0624 U TEX AUST DE
   Lopez-Herrejon Roberto., 2006, Proceedings of the 2006 ACM SIGPLAN symposium on Partial evaluation and semantics-based program manipulation (New York, NY, USA), PEPM '06, P68
   Lopez-Herrejon RE, 2007, LECT NOTES COMPUT SC, V4422, P423
   LOPEZHERREJON R, 1976, P EUR C OBJ OR PROGR, P169
   LOUGHRAN N, 2004, P 8 INT C SOFTW REUS, P127
   MADSEN OL, 1989, SIGPLAN NOTICES, V24, P397, DOI 10.1145/74878.74919
   MASUHARA H, 1980, P EUR C OBJ OR PROGR, P2
   McDirmid S, 2001, ACM SIGPLAN NOTICES, V36, P211, DOI 10.1145/504311.504298
   MCDIRMID S, 1982, P INT C SP OR SOFTW, P70
   MEHNER K, 2003, CSEG103 LANC U COMP
   MEZINI M, 2000, P INT C ASP OR SOFTW, P90
   MEZINI M, 2002, P INT C OBJ OR PROGR, P63
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   NYSTROM N, 2004, P INT C OBJ OR PROGR, P87
   NYSTROM N, 2006, P OOPSLA 06, P21
   Ongkingco N., 2006, P INT C ASP OR SOFTW, P39
   Ossher H., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P734, DOI 10.1109/ICSE.2000.870483
   OSSHER H, 1992, P INT C OBJ OR PROGR, P25
   Ostermann K, 2005, LECT NOTES COMPUT SC, V3586, P214
   Ostermann K, 2002, LECT NOTES COMPUT SC, V2374, P89
   PARNAS DL, 1979, IEEE T SOFTWARE ENG, V5, P128, DOI 10.1109/TSE.1979.234169
   PEZINI M, 1986, P INT S FDN SOFTW EN, P127
   Prehofer C, 1997, LECT NOTES COMPUT SC, V1241, P419
   Pulvermüller E, 2000, TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS - TOOLS 34, PROCEEDINGS, P95, DOI 10.1109/TOOLS.2000.868962
   Rajlich V, 2006, COMMUN ACM, V49, P67, DOI 10.1145/1145287.1145289
   REENSKAUG T, 1992, J OBJECT-ORIENT PROG, V5, P27
   Sihman M, 2003, COMPUT J, V46, P529, DOI 10.1093/comjnl/46.5.529
   SINGHAL VP, 1996, THESIS U TEXAS AUSTI
   Smaragdakis Y, 2002, ACM T SOFTW ENG METH, V11, P215, DOI 10.1145/505145.505148
   SPINCZYK O, 2005, SOFTWARE DEV J, P68
   Steimann F, 2000, DATA KNOWL ENG, V35, P83, DOI 10.1016/S0169-023X(00)00023-9
   STEIMANN F, 2005, P INT C MOD DRIV ENG, P171
   Steimann F, 2006, ACM SIGPLAN NOTICES, V41, P481, DOI 10.1145/1167515.1167514
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   SULLIVAN K, 2005, P 10 EUR SOFTW ENG C, P166
   Szyperski C., 2002, Component Software-Beyond Object-Oriented Programming
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   TRUJILLO S, 2007, P INT C GEN PROGR CO
   TRUJILLO S, 2006, P 5 INT C GEN PROGR, P191
   Truyen E, 2001, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2001.919097
   VANHILST M, 1996, P 2 JSSST INT S OBJ, P22
   VanHilst Michael., 1996, P 11 ACM SIGPLAN C O, P359
   Wand M, 2004, ACM T PROGR LANG SYS, V26, P890, DOI 10.1145/1018203.1018208
   WIRTH N, 1971, COMMUN ACM, V14, P221, DOI 10.1145/362575.362577
   WOHLSTADTER E, 2006, P 5 INT C ASP OR SOF, P99
   Xin B., 2004, UUCS04001 U UTAH SCH
   Zhang C., 2004, Proc. OOPSLA 2004, P188
   [No title captured]
   [No title captured]
   [No title captured]
NR 120
TC 77
Z9 84
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2008
VL 34
IS 2
BP 162
EP 180
DI 10.1109/TSE.2007.70770
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 276SC
UT WOS:000254161500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Li, JY
   Conradi, R
   Slyngstad, OPN
   Torchiano, M
   Morisio, M
   Bunse, C
AF Li, Jingyue
   Conradi, Reidar
   Slyngstad, Odd Petter N.
   Torchiano, Marco
   Morisio, Maurizio
   Bunse, Christian
TI A state-of-the-practice survey of risk management in development with
   off-the-shelf software components
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software engineering/reusable software; software engineering/management;
   software engineering/software; engineering process
ID COTS SOFTWARE; INTEGRATION; CHALLENGES
AB An international survey on risk management in software development with Off-the-Shelf (OTS) components is reported upon and discussed. The survey investigated actual risk-management activities and their correlations with the occurrences of typical risks in OTS component-based development. Data from 133 software projects in Norway, Italy, and Germany were collected using a stratified random sample of IT companies. The results show that OTS components normally do not contribute negatively to the quality of the software system as a whole, as is commonly expected. However, issues such as the underestimation of integration effort and inefficient debugging remain problematic and require further investigation. The results also illustrate several promising effective risk-reduction activities, e. g., putting more effort into learning relevant OTS components, integrating unfamiliar components first, thoroughly evaluating the quality of candidate OTS components, and regularly monitoring the support capability of OTS providers. Five hypotheses are proposed regarding these risk-reduction activities. The results also indicate that several other factors, such as project, cultural, and human-social factors, have to be investigated to thoroughly deal with the possible risks of OTS-based projects.
C1 [Li, Jingyue; Conradi, Reidar; Slyngstad, Odd Petter N.] Norwegian Univ Sci & Technol, Dept Comp & Informat Sci, Software Engn Grp, IDI, NO-7491 Trondheim, Norway.
   [Torchiano, Marco; Morisio, Maurizio] Politecn Torino, Dipartimento Automat & Informat, I-10129 Turin, Italy.
   [Bunse, Christian] Int Univ Germany, Sch IT, D-76646 Bruchsal, Germany.
C3 Norwegian University of Science & Technology (NTNU); Polytechnic
   University of Turin
RP Li, JY (corresponding author), Norwegian Univ Sci & Technol, Dept Comp & Informat Sci, Software Engn Grp, IDI, Sem Saelandsvei 7-9, NO-7491 Trondheim, Norway.
EM jingyue@idi.ntnu.no; conradi@idi.ntnu.no; oslyngst@idi.ntnu.no;
   marco.torchiano@polito.it; maurizio.morisio@polito.it;
   Christian.Bunse@i-u.de
OI Torchiano, Marco/0000-0001-5328-368X
CR ABTS C, 2000, P 11 EUR SOFTW CONTR, P325
   ABTS C, 2000, USCCSE2000501
   [Anonymous], SEI93TR006
   [Anonymous], 1989, Software risk management tutorial
   [Anonymous], P 10 NORD WORKSH PRO
   [Anonymous], APPL MULTIPLE REGRES
   BARKI H, 1993, J MANAGEMENT INFORM, V22, P359
   Basili VR, 2001, COMPUTER, V34, P91, DOI 10.1109/2.920618
   BASILI VR, 2002, SOFTWARE TECHNOLOGY, V5, P4
   BASS L, 2001, CMUSEI2000TN007
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Boehm BW, 2003, LECT NOTES COMPUT SC, V2580, P36
   *CBSENET, 2004, COMP BAS SOFTW ENG N
   Chittister CG, 1996, IEEE T SYST MAN CY A, V26, P521, DOI 10.1109/3468.531900
   Cohen B., 2000, Explaining psychological statistics
   Conradi R., 2005, PROC 4 INT S EMPIRIC, P214
   Crnkovic I., 2002, BUILDING RELIABLE CO
   DONALD JR, 2003, IEEE SOFTWARE, V20, P94
   Fitzgerald B, 2004, COMPUTER, V37, P92, DOI 10.1109/MC.2004.38
   Gemmer A, 1997, COMPUTER, V30, P33, DOI 10.1109/2.589908
   Glass Robert L, 2001, IEEE software, V18, P112, DOI [DOI 10.1109/MS.2001.965816, 10.1109/MS.2001.922739, DOI 10.1109/MS.2001.922739]
   Hand DJ, 1996, J ROY STAT SOC A STA, V159, P445, DOI 10.2307/2983326
   Hecht Herbert., 2003, Systems Reliability and Failure Prevention
   Keil M, 1998, COMMUN ACM, V41, P76, DOI 10.1145/287831.287843
   Kotonya G, 2001, EUROMICRO CONF PROC, P12, DOI 10.1109/EURMIC.2001.952433
   Lauesen S, 2006, REQUIR ENG, V11, P111, DOI 10.1007/s00766-005-0022-5
   Lawton G, 2002, COMPUTER, V35, P18, DOI 10.1109/2.989921
   Li J., 2006, P 9 INT C SOFTW REUS, P16
   LI J, 2006, P 28 INT C SOFTW ENG, P897, DOI DOI 10.1145/1134285.1134446
   LI J, 2005, P 11 IEEE INT SOFTW, P26
   LI J, IN PRESS IEEE SOFTWA
   Li J, 2006, EMPIR SOFTW ENG, V11, P433, DOI 10.1007/s10664-006-9005-5
   Likert R., 1932, Archives of Pyschology, V22, P5
   Madanmoban TR, 2004, IEEE SOFTWARE, V21, P62, DOI 10.1109/MS.2004.45
   Moynihan T, 1997, IEEE SOFTWARE, V14, P35, DOI 10.1109/52.589229
   *NORW CENS BUR SSB, 2002, ICT CO DAT
   POCOCK SJ, 1987, NEW ENGL J MED, V317, P426, DOI 10.1056/NEJM198708133170706
   PODSAKOFF PM, 1986, J MANAGE, V12, P531, DOI 10.1177/014920638601200408
   Ropponen J, 2000, IEEE T SOFTWARE ENG, V26, P98, DOI 10.1109/32.841112
   Rose LC, 2003, LECT NOTES COMPUT SC, V2693, P352
   Ruffin M, 2004, IEEE SOFTWARE, V21, P82, DOI 10.1109/MS.2004.1259227
   Sherer S. A., 1995, Proceedings of the Twenty-Eighth Hawaii International Conference on System Sciences, P369, DOI 10.1109/HICSS.1995.375618
   Sommerville I., 2004, Software Engineering
   SPECTOR PE, 1980, J SOC PSYCHOL, V112, P115, DOI 10.1080/00224545.1980.9924303
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   Torchiano M, 2004, IEEE SOFTWARE, V21, P88, DOI 10.1109/MS.2004.1270770
   VELLEMAN PF, 1993, AM STAT, V47, P1, DOI DOI 10.1080/00031305.1993.10475938
   VIGDER MR, 1996, 39190 NRC
   Vitharana P, 2003, COMMUN ACM, V46, P67, DOI 10.1145/859670.859671
   Voas J, 1998, IEEE SOFTWARE, V15, P16, DOI 10.1109/52.663777
   Voas JM, 1998, COMPUTER, V31, P44, DOI 10.1109/MC.1998.683006
   Wallace L, 2004, COMMUN ACM, V47, P68, DOI 10.1145/975817.975819
   2005, COMMON RISKS RISK RE
NR 54
TC 34
Z9 39
U1 1
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2008
VL 34
IS 2
BP 271
EP 286
DI 10.1109/TSE.2008.14
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 276SC
UT WOS:000254161500008
DA 2024-07-18
ER

PT J
AU Ardagna, D
   Pernici, B
AF Ardagna, Danilo
   Pernici, Barbara
TI Adaptive service composition in flexible processes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Web services; quality of service; service composition; integer
   programming
AB In advanced service oriented systems, complex applications, described as abstract business processes, can be executed by invoking a number of available Web services. End users can specify different preferences and constraints and service selection can be performed dynamically identifying the best set of services available at runtime. In this paper, we introduce a new modeling approach to the Web service selection problem that is particularly effective for large processes and when QoS constraints are severe. In the model, the Web service selection problem is formalized as a mixed integer linear programming problem, loops peeling is adopted in the optimization, and constraints posed by stateful Web services are considered. Moreover, negotiation techniques are exploited to identify a feasible solution of the problem, if one does not exist. Experimental results compare our method with other solutions proposed in the literature and demonstrate the effectiveness of our approach toward the identification of an optimal solution to the QoS constrained Web service selection problem.
C1 Politecn Milan, Dipartimento Elettr & Informat, I-20133 Milan, Italy.
C3 Polytechnic University of Milan
RP Ardagna, D (corresponding author), Politecn Milan, Dipartimento Elettr & Informat, Via Ponzio 34-5, I-20133 Milan, Italy.
EM ardagna@elet.polimi.it; pernici@elet.polimi.it
RI ; Pernici, Barbara/C-1035-2016
OI Ardagna, Danilo/0000-0003-4224-927X; Pernici,
   Barbara/0000-0002-2034-9774
CR AGARWAL V, 2005, P 14 INT C WORLD WID, P128
   AMALDI E, 1995, THEOR COMPUT SCI, V147, P181, DOI 10.1016/0304-3975(94)00254-G
   [Anonymous], 1998, INTEGER PROGRAMMING
   [Anonymous], 1981, LECT NOTES EC MATH S
   [Anonymous], 2006, INTERNETWORKING TCP
   Ardagna D., 2006, International Journal of Business Process Integration and Management, V1, P233, DOI 10.1504/IJBPIM.2006.012622
   BACON DF, 1994, ACM COMPUT SURV, V26, P345, DOI 10.1145/197405.197406
   Bonatti P.A., 2005, Proc. 14th Int'l Conf. World Wide Web (WWW'05), P530
   Brandic I, 2005, FIRST INTERNATIONAL CONFERENCE ON E-SCIENCE AND GRID COMPUTING, PROCEEDINGS, P108, DOI 10.1109/E-SCIENCE.2005.69
   Canfora G., 2005, P INT C WEB SERV ICW
   CARDOSO J, 2002, THESIS U GEORGIA
   CASATI F, 2004, P 2 ACM INT C SERV O, P316
   Ceri S, 2007, ACM T INTERNET TECHN, V7, DOI 10.1145/1189740.1189742
   CHANDRASEKARAN S, 2003, ELECT MARKET INT J E, V13
   CHASE J.S., 2001, P 19 ACM S OPERATING, P103
   CLARO DB, 2005, P INT C WEB SERV ICW
   Comuzzi M, 2005, NINTH IEEE INTERNATIONAL EDOC ENTERPRISE COMPUTING CONFERENCE, PROCEEDINGS, P70, DOI 10.1109/EDOC.2005.4
   DACOSTA LAG, 2004, P INT C WEB SERV ICW
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Emmerich W., 2006, Journal of Grid Computing, V3, P283
   FARATIN P, 1998, INT J ROBOTICS AUTON, V24
   Fox GC, 2006, CONCURR COMP-PRACT E, V18, P1009, DOI 10.1002/cpe.1019
   Jaeger M.C., 2005, P INT C COOP INF SYS
   LAZOVIK A, 2005, J DIGITAL LIB, P1
   Lazovik A., 2004, P 2 INT C SERVICE OR, DOI [10.1145/1035167.1035182, DOI 10.1145/1035167.1035182]
   MAAMAR Z, 2003, P WEB SERV AG BAS EN
   Menascé DA, 2002, IEEE INTERNET COMPUT, V6, P72, DOI 10.1109/MIC.2002.1067740
   Ouzzani M, 2004, IEEE INTERNET COMPUT, V8, P34
   Patii AbhijitA., 2004, WWW 04, P553
   Pernici B., 2006, MOBILE INFORM SYSTEM
   Pistore M, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P1252
   SRIVASTAVA B, 2003, P INT C AUT PLANN SC
   Wohlstadter E, 2004, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.2004.1317441
   YU T, 2005, P INT C SERV OR COMP
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   Zhang LJ, 2004, P IEEE I C SERV COMP, P177
NR 36
TC 578
Z9 663
U1 0
U2 51
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2007
VL 33
IS 6
BP 369
EP 384
DI 10.1109/TSE.2007.1011
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 160PJ
UT WOS:000245954500001
DA 2024-07-18
ER

PT J
AU Menzies, T
   Chen, ZH
   Hihn, J
   Lum, K
AF Menzies, Tim
   Chen, Zhihao
   Hihn, Jairus
   Lum, Karen
TI Selecting best practices for effort estimation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE model-based effort estimation; COCOMO; deviation; data mining
AB Effort estimation often requires generalizing from a small number of historical projects. Generalization from such limited experience is an inherently underconstrained problem. Hence, the learned effort models can exhibit large deviations that prevent standard statistical methods (e.g., t-tests) from distinguishing the performance of alternative effort-estimation methods. The COSEEKMO effort-modeling workbench applies a set of heuristic rejection rules to comparatively assess results from alternative models. Using these rules, and despite the presence of large deviations, COSEEKMO can rank alternative methods for generating effort models. Based on our experiments with COSEEKMO, we advise a new view on supposed "best practices" in model-based effort estimation: 1) Each such practice should be viewed as a candidate technique which may or may not be useful in a particular domain, and 2) tools like COSEEKMO should be used to help analysts explore and select the best method for a particular domain.
C1 W Virginia Univ, Dept Comp Sci, Morgantown, WV 26506 USA.
   CALTECH, Jet Prop Lab, Pasadena, CA 91109 USA.
C3 West Virginia University; California Institute of Technology; National
   Aeronautics & Space Administration (NASA); NASA Jet Propulsion
   Laboratory (JPL)
RP Menzies, T (corresponding author), W Virginia Univ, Dept Comp Sci, Morgantown, WV 26506 USA.
EM tim@menzies.us; chenscott@gmail.com; jhihn@mail.jpl.nasa.gov;
   ktlum@mail.jpl.nasa.gov
RI Chen, Zhihao/A-2208-2010; Menzies, Tim/X-7680-2019
OI Menzies, Tim/0000-0002-5040-3196
CR [Anonymous], YOURDON PRESS COMPUT
   [Anonymous], 2005, Data mining: Practical machine learning tools and techniques
   [Anonymous], 1995, Empirical methods for artificial intelligence
   BASILI VR, 2002, P 24 INT C SOFTW ENG
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   Boehm BW., 1981, Software Engineering Economics
   BRIEMAN L, 1996, MACH LEARN, V24, P123
   CHEN Z, 2005, P PROMISE WORKSH INT
   CHEN Z, 2005, IEEE SOFTWARE    NOV
   CHULANI BBS, 1998, P C INT SOC PAR AN I
   CHULANI S, 1999, IEEE T SOFTWARE  JUL, V25
   CHULANI S, 1999, J PARAMETRICS, V15, P175
   Ferens D., 1998, J PARAMETRICS, V18, P55
   Frank E., 1999, Data Mining: Practical Machine Learning Tools and Techniques with Java Implementations
   Habib-agahi H., 1998, J PARAMETRICS NOV, P59
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   HO TK, 1994, IEEE T PATTERN ANAL, V16, P66, DOI 10.1109/34.273716
   *ISPA, 2006, P 2006 INT C INT SOC
   Jensen Randall., 1983, 5 ISPA C, P88
   Jones TC, 1998, Estimating software costs
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M., 2004, IEEE T SOFTWARE ENG, V30
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   KIRSOPP C, 2002, P 22 SGAI INT C KNOW
   KLIIJNEN J, 1997, J STAT COMPUT SIM, V57, P111
   Kohavi R, 1997, ARTIF INTELL, V97, P273, DOI 10.1016/S0004-3702(97)00043-X
   LUM K, 2002, P C INT SOC PAR AN I
   MENZIES T, 2005, P INT C SOFTW ENG IC
   Miller A., 2002, SUBSET SELECTION REG
   PARK R, 1988, P 4 COCOMO US GROUP
   PROVOST F, 2001, MACHINE LEARNING, V42
   Quinlan J. R., 1992, Proceedings of the 5th Australian Joint Conference on Artificial Intelligence. AI '92, P343
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Strutzke R., 2005, ESTIMATING SOFTWARE
   Stukes S., 1991, TR90075491 MAN CONS
   STUKES S, 1998, J PARAMETRICS, V18, P77
   Yildiz OT, 2006, IEEE T PATTERN ANAL, V28, P392, DOI 10.1109/TPAMI.2006.61
NR 37
TC 120
Z9 131
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2006
VL 32
IS 11
BP 883
EP 895
DI 10.1109/TSE.2006.114
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 101EE
UT WOS:000241720900003
DA 2024-07-18
ER

PT J
AU Nebut, C
   Fleurey, F
   Le Traon, Y
   Jézéquel, JM
AF Nebut, C
   Fleurey, F
   Le Traon, Y
   Jézéquel, JM
TI Automatic test generation:: A use case driven approach
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE use case; test generation; scenarios; contracts; UML
AB Use cases are believed to be a good basis for system testing. Yet, to automate the test generation process, there is a large gap to bridge between high-level use cases and concrete test cases. We propose a new approach for automating the generation of system test scenarios in the context of object-oriented embedded software, taking into account traceability problems between high-level views and concrete test case execution. Starting from a formalization of the requirements based on use cases extended with contracts, we automatically build a transition system from which we synthesize test cases. Our objective is to cover the system in terms of statement coverage with those generated tests: An empirical evaluation of our approach is given based on this objective and several case studies. We briefly discuss the experimental deployment of our approach in the field at Thales Airborne Systems.
C1 CNRS, LIRMM, F-34392 Montpellier 5, France.
   Univ Montpellier 2, F-34392 Montpellier 5, France.
   Inst Natl Rech Informat & Automat, IRISA, F-35042 Rennes, France.
   Univ Rennes 1, F-35042 Rennes, France.
   France Telecom, R&D MAPS, Lannion, France.
C3 Centre National de la Recherche Scientifique (CNRS); Universite
   Paul-Valery; Universite Perpignan Via Domitia; Universite de
   Montpellier; Universite de Montpellier; Universite de Rennes; Universite
   de Rennes; Orange SA
RP CNRS, LIRMM, 161 Rue Ada, F-34392 Montpellier 5, France.
EM nebut@lirmm.fr; ffleurey@irisa.fr; yves.letraon@francetelecom.com;
   jezequel@irisa.fr
RI Jezequel, Jean-Marc/AAF-3854-2019; LE TRAON, Yves/T-2911-2019; Jaafar,
   Mohamad Farid/B-4563-2010
OI Jezequel, Jean-Marc/0000-0002-0582-9745; LE TRAON,
   Yves/0000-0002-1045-4861
CR [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 1998, RATIONAL UNIFIED PRO
   Basanieri F., 2002, P 5 INT C UN MOD LAN, P383
   Benattou M., 2002, P ECOOP WORKSH INT T
   BERNOT G, 1991, SOFTWARE ENG J, V6, P387, DOI 10.1049/sej.1991.0040
   Binder R.V., 2000, AW OBJ TECHNOL S
   Bjork R, 2005, ATM SIMULATION
   Briand L., 2004, SCE0403 CARL U
   BRIAND LC, 2002, SOFTW SYST MODEL, V1, P10, DOI [10.1007/s10270-002-0004-8, DOI 10.1007/S10270-002-0004-8]
   Carver RH, 1998, IEEE T SOFTWARE ENG, V24, P471, DOI 10.1109/32.689403
   Cheon Yoonsik., 2001, A simple and practical approach to unit testing
   Cockburn A, 1997, J OBJECT-ORIENT PROG, V10, P35
   COUSOT P, 1977, P C 4 ANN ACM SIGPLA, P283
   D'Souza DesmondF., 1999, OBJECTS COMPONENTS F
   Daniels F. J., 1999, Proceedings of Technology of Object-Oriented Languages and Systems - TOOLS 30 (Cat. No.PR00278), P74, DOI 10.1109/TOOLS.1999.787537
   Dick J., 1993, FME'93: Industrial-Strength Formal Methods. First International Symposium of Formal Methods Europe Proceedings, P268, DOI 10.1007/BFb0024651
   FLEUREY F, 2005, FRAMEWORK TRACE EXEC
   FOWLER M, 1998, DISTRIBUTED COMP APR
   FROHLICH P, 2000, P 14 EUR C OBJ OR PR
   GAMMA E, 2005, JUNIT
   Gargantini A, 1999, LECT NOTES COMPUT SC, V1687, P146, DOI 10.1145/318774.318939
   GIBSON P, 2001, FORMAL REQUIREMENTS
   Heitmeyer C, 1997, COMPASS '97 - ARE WE MAKING PROGRESS TOWARDS COMPUTER ASSURANCE?, P35, DOI 10.1109/CMPASS.1997.613206
   Helke S., 1997, ZUM '97: The Z Formal Specification Notation. 10th International Conference of Z Users Proceedings, P52, DOI 10.1007/BFb0027283
   Jard C, 2003, INFORM SOFTWARE TECH, V45, P805, DOI 10.1016/S0950-5849(03)00061-2
   JARD C, 2002, P 6 WORLD C INT DES
   Kim Y. G., 1999, IEE Proceedings-Software, V146, P187, DOI 10.1049/ip-sen:19990602
   LEGEARD B, 2002, P C FORM METH EUR
   LUGATO D, 2002, ELECT NOTES THEORETI, V66
   MARRIOTT K, 2000, PROGRAMMING CONSTRAI
   MEYER OC, 1992, CLIN EXP RHEUMATOL, V10, P1
   NEBUT C, 2003, P 5 WORKSH PROD FAM
   NEBUT C, 2003, P 14 IEEE INT S SOFT
   *OBJ MAN GROUP, UN MOD LANG OCL
   *OCL, 2005, OCL TOOLK
   OFFUTT J, 1999, P 2 INT C UN MOD LAN
   RIEBISCH M, 2002, P INT C NET OBJECTDA, V2591, P394
   Ryser J., 1999, P 12 INT C SOFTW SYS
   Ryser J., 2000, P 17 INT C TEST COMP
   RYSER J, 1998, STATE ART REQUUIREME
   TAHAT L, 2001, P 25 ANN INT COMP SO
   *THAL INRIA CEA, 2005, PROGR RECH CARROLL
   Warmer J.B., 1998, OBJECT CONSTRAINT LA
   WEIDENHAUPT K, 1998, IEEE SOFTWARE    MAR
NR 44
TC 132
Z9 156
U1 1
U2 22
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2006
VL 32
IS 3
BP 140
EP 155
DI 10.1109/TSE.2006.22
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 033LC
UT WOS:000236848300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tan, HBK
   Yang, Y
   Bian, L
AF Tan, HBK
   Yang, Y
   Bian, L
TI Systematic transformation of functional analysis model into OO design
   and implementation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE functional model; object-oriented model; functional decomposition;
   requirements analysis; design; model transformation
AB Functional refinement is beneficial to Object-Oriented (OO) software development, especially for problems with more complex functions. However, the use of functional refinement in OO software development has not received much attention. This paper proposes an enhanced data flow diagram (DFD), called data flow net (DF net), for specifying use-cases through functional decomposition. It proposes a novel approach to complement existing OO software development methods with functional decomposition for realizing use-cases, especially those with more complex functions. In the requirements analysis stage, the proposed approach realizes use-cases through functional refinement and specifies them in DF nets. In the design and implementation stages, it transforms the DF nets systematically and precisely into OO design and implementation. The approach is amenable to automation and a prototype has been developed to support the transformation process. In the development of an OO system, it is seamless to realize some of the use-cases using the proposed approach and the remaining use-cases in the same target system using any existing OO software development methods.
C1 Nanyang Technol Univ, Sch Elect & Elect Engn, Singapore 639798, Singapore.
C3 Nanyang Technological University
RP Nanyang Technol Univ, Sch Elect & Elect Engn, Block 52,Nanyang Ave, Singapore 639798, Singapore.
EM ibktan@ntu.edu.sg
RI Tan, Hee Beng Kuan/A-5147-2011
CR ALABISO B, 1988, P OOPSLA 88, P335
   Cheng BHC, 2002, IEEE T SOFTWARE ENG, V28, P747, DOI 10.1109/TSE.2002.1027798
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   *COMP SYST GROUP C, 1995, CAL SCH
   DeMarco T., 1978, STRUCTURED ANAL SYST
   FRANCE RB, 1992, IEEE T SOFTWARE ENG, V18, P329, DOI 10.1109/32.129221
   GRAY L, 1988, P 5 WASH AD S JUN 27, P151
   Grünbacher P, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P202
   HATLEY DJ, 1988, STRATEGIES REAL TIME
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   JALOTE P, 1989, IEEE T SOFTWARE ENG, V15, P264, DOI 10.1109/32.21754
   Morris M. G., 1996, Proceedings of the Twenty-Ninth Hawaii International Conference on System Sciences, P232, DOI 10.1109/HICSS.1996.495404
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   PRIESTLEY M, PRACTICAL OBJECTED D
   RIZMAN K, 1991, COMPUTER INFORMATION, V6, P359
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Rumpe B., 1999, Proceedings Fifth IEEE International Conference on Engineering of Complex Computer Systems (ICECCS'99) (Cat. No.PR00434), P43, DOI 10.1109/ICECCS.1999.802849
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Wang EY, 2000, INT J SOFTW ENG KNOW, V10, P5, DOI 10.1142/S0218194000000031
   WANG EY, 1998, P 10 INT C SOFTW ENG
   WARD PT, 1986, IEEE T SOFTWARE ENG, V12, P198, DOI 10.1109/TSE.1986.6312936
   Wieringa R, 1998, LECT NOTES COMPUT SC, V1526, P69
   Wieringa R, 1998, ACM COMPUT SURV, V30, P459, DOI 10.1145/299917.299919
   Wolber D, 1997, J OBJECT-ORIENT PROG, V10, P31
NR 26
TC 11
Z9 12
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2006
VL 32
IS 2
BP 111
EP 135
DI 10.1109/TSE.2006.1599420
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 012AD
UT WOS:000235309700004
DA 2024-07-18
ER

PT J
AU Gregoriades, A
   Sutcliffe, A
AF Gregoriades, A
   Sutcliffe, A
TI Scenario-based assessment of nonfunctional requirements
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE nonfunctional requirements validation; scenario-based testing; Bayesian
   belief networks; systems engineering
ID HUMAN ERROR
AB This paper describes a method and a tool for validating nonfunctional requirements in complex socio-technical systems. The System Requirements Analyzer (SRA) tool validates system reliability and operational performance requirements using scenario-based testing. Scenarios are transformed into sequences of task steps and the reliability of human agents performing tasks with computerized technology is assessed using Bayesian Belief Network (BN) models. The tool tests system performance within an envelope of environmental variations and reports the number of tests that pass a benchmark threshold. The tool diagnoses problematic areas in scenarios representing pathways through system models, assists in the identification of their causes, and supports comparison of alternative requirements specifications and system designs. It is suitable for testing socio-technical systems where operational scenarios are sequential and deterministic, in domains where designs are incrementally modified so set up costs of the BNs can be defrayed over multiple tests.
C1 Univ Surrey, Sch Management, Surrey Def Technol Ctr, Guildford GU2 7XH, Surrey, England.
   Univ Manchester, Sch Informat, Manchester M60 1QD, Lancs, England.
C3 University of Surrey; University of Manchester
RP Univ Surrey, Sch Management, Surrey Def Technol Ctr, Guildford GU2 7XH, Surrey, England.
EM A.Gregoriades@surrey.ac.uk; ags@man.ac.uk
RI Gregoriades, Andreas/IZP-5446-2023
OI Gregoriades, Andreas/0000-0002-7422-1514
CR ANDERSON JS, 1993, P C REQ ENG RE 93
   Annett J., 1967, OCCUP PSYCHOL, V41, P211
   [Anonymous], 1983, HDB HUMAN RELIABILIT
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], 1995, Scenario-based design: Envisioning work and technology in system development
   Anton A. I., 1998, Requirements Engineering, V3, P219, DOI 10.1007/s007660050006
   Bailey R.W., 1982, Human performance engineering
   Carroll JM, 1998, IEEE T SOFTWARE ENG, V24, P1156, DOI 10.1109/32.738344
   CASEY K, 2003, P INT C PRINC PRACT
   CUNNING S, 1999, P S ENG COMP BAS SYS
   DAVIS AM, 1994, IEEE SOFTWARE, V11, P12, DOI 10.1109/52.268949
   DOPRADOLEITE JCS, 2004, IEEE T SOFTWARE ENG, V30, P328
   DUBOIS P, 1997, P 3 IEEE INT S REQ E
   ENGELS G, 2003, ELECT NOTES THEORETI, V82
   Fenton N, 2002, IEEE SOFTWARE, V19, P116, DOI 10.1109/MS.2002.1020298
   FENTON N, 1991, SOFTWARE RELIABILITY
   FENTON N, 2000, J SYSTEMS SOFTWARE
   FENTON N, 1999, CRITICAL SYSTEMS, V8, P10
   Fenton N., 2000, Making Decisions: Using Bayesian Nets and MCDA
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   FENTON NE, 2003, JSIMP BN MODEL TOOL
   FUXMAN A, 2001, P INT S REQ ENG 01
   GALLIERS J, 1999, IEEE T SOFTWARE ENG, V25, P341
   Gemino A, 2004, REQUIR ENG, V9, P153, DOI 10.1007/s00766-003-0182-0
   GRAU A, 1997, P 1 E EUR S ADV DAT
   Gregoriades A, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P154
   GREGORIADES A, 2003, P C ADV INF SYST ENG
   GREGORIADES A, 2002, P 12 ANN INT COUNC S
   Hansen KM, 1998, IEEE T SOFTWARE ENG, V24, P573, DOI 10.1109/32.708570
   Haumer P, 1998, IEEE T SOFTWARE ENG, V24, P1036, DOI 10.1109/32.738338
   HEITMEYER C, 1998, P C FMSP 98
   Hollnagel E, 1998, COGNITIVE RELIABILIT, DOI 10.1016/B978-0-08-042848-2.X5000-3
   Hollnagel E., 1993, Human Reliability Analysis: Context and Control
   Hollnagel E., 1990, HUMAN COMPUTER INTER
   HSIA P, 1993, IEEE SOFTWARE, V10, P75, DOI 10.1109/52.241974
   Jeffords R. D., 2003, Software Engineering Notes, V28, P28, DOI 10.1145/949952.940077
   Kirwan B., 1994, A Guide to Practical Human Reliability Assessment
   LALIOTI V, 1994, INFORM SYST, V19, P291, DOI 10.1016/0306-4379(94)90047-7
   LALIOTI V, 1997, P HAW INT C SYST SCI, V30, P7
   Leveson N.G., 1995, Safeware: System Safety and Computers
   Leveson NG, 2000, IEEE T SOFTWARE ENG, V26, P15, DOI 10.1109/32.825764
   MYLOPOULOS J, 1992, IEEE T SOFTWARE ENG, V18, P483, DOI 10.1109/32.142871
   MYLOPOULOS J, 1999, COMMUN ACM, V42, P1
   Neil M, 2000, KNOWL ENG REV, V15, P257, DOI 10.1017/S0269888900003039
   Nixon BA, 2000, IEEE T SOFTWARE ENG, V26, P1122, DOI 10.1109/32.888627
   Norman D. A., 1988, PSYCHOL EVERYDAY THI
   Pearl J., 1988, PROBABILISTIC REASON
   POTTS C, 1994, IEEE SOFTWARE, V11, P21, DOI 10.1109/52.268952
   POTTS C, 1995, P 2 INT S REQ ENG
   POTTS C, 1999, P INT S REQ ENG
   RASMUSSEN J, 1983, IEEE T SYST MAN CYB, V13, P257, DOI 10.1109/TSMC.1983.6313160
   RASMUSSEN J, 1990, PHILOS T R SOC B, V327, P449, DOI 10.1098/rstb.1990.0088
   Reason J., 1991, HUMAN ERROR
   Reason J., 2000, MANAGING RISKS ORG A
   Rolland C, 1998, IEEE T SOFTWARE ENG, V24, P1055, DOI 10.1109/32.738339
   Ryser J., 1999, P 12 INT C SOFTW SYS
   SEYFF N, 2004, P INT C SOFTW ENG IC
   SHIN JE, 2004, REQUIREMENTS ENG
   Sutcliffe A, 1998, INT J HUM-COMPUT INT, V10, P381, DOI 10.1207/s15327590ijhc1004_5
   Sutcliffe A., 2002, DOMAIN THEORY PATTER
   Sutcliffe AG, 1998, IEEE T SOFTWARE ENG, V24, P1072, DOI 10.1109/32.738340
   SUTCLIFFE AG, 1997, P C HUM COMP INT INT
   SUTCLIFFE AG, 2002, P 1 IEEE JOINT INT C
   SUTCLIFFE AG, 1999, P 4 IEEE INT S REQ E
   van Lamsweerde A, 2000, IEEE T SOFTWARE ENG, V26, P978, DOI 10.1109/32.879820
   van Lamsweerde A., 2001, P 5 IEEE INT S REQ E
   VANLAMSWEERDE A, 2004, P REQ ENG C
   Visser M, 2001, IEEE T SYST MAN CY C, V31, P1, DOI 10.1109/5326.923264
   WRIGHT D, 1994, 135 CIT U CTR SOFTW
   YU ESK, 1994, P 4 WORKSH INF TECHN
   ZHU H, 2000, REQUIR ENG, V5, P2
   ZIV H, 1997, P INT C SOFTW MAINT
NR 72
TC 29
Z9 31
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2005
VL 31
IS 5
BP 392
EP 409
DI 10.1109/TSE.2005.59
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 929VC
UT WOS:000229373700003
DA 2024-07-18
ER

PT J
AU Fu, C
   Milanova, A
   Ryder, BG
   Wonnacott, DG
AF Fu, C
   Milanova, A
   Ryder, BG
   Wonnacott, DG
TI Robustness testing of Java server applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT IEEE International Symposium on Software Testing and Analysis
CY JUL 11-14, 2004
CL Boston, MA
SP IEEE
DE reliability; def-use testing; Java; exceptions; test coverage metrics
ID PROGRAMS
AB This paper presents a new compile-time analysis that enables a testing methodology for white-box coverage testing of error recovery code (i.e., exception handlers) of server applications written in Java, using compiler-directed fault injection. The analysis allows compiler-generated instrumentation to guide the fault injection and to record the recovery code exercised. (An injected fault is experienced as a Java exception.) The analysis 1) identifies the exception-flow "def-uses" to be tested in this manner, 2) determines the kind of fault to be requested at a program point, and 3) finds appropriate locations for code instrumentation. The analysis incorporates refinements that establish sufficient context sensitivity to ensure relatively precise def-use links and to eliminate some spurious def-uses due to demonstrably infeasible control flow. A runtime test harness calculates test coverage of these links using an exception def-catch metric. Experiments with the methodology demonstrate the utility of the increased precision in obtaining good test coverage on a set of moderately sized server benchmarks.
C1 Rutgers State Univ, Dept Comp Sci, Piscataway, NJ 08854 USA.
   Rensselaer Polytech Inst, Dept Comp Sci, Troy, NY 12180 USA.
   Haverford Coll, Dept Comp Sci, Haverford, PA 19041 USA.
C3 Rutgers University System; Rutgers University New Brunswick; Rensselaer
   Polytechnic Institute; Haverford College
RP Rutgers State Univ, Dept Comp Sci, Piscataway, NJ 08854 USA.
EM chenfu@cs.rutgers.edu; milanova@cs.rpi.edu; ryder@cs.rutgers.edu;
   davew@cs.haverford.edu
CR Aho A., 1988, Compilers - Principles, Techniques and Tools
   [Anonymous], P INT S FAULT TOL CO
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], P 2 S FDN SOFTW ENG
   *AP SOFTW FDN, 2004, AP JARK PROJ
   *AP SOFTW FDN, 2004, AP JAK TOMC
   ARLAT J, 1993, IEEE T COMPUT, V42, P913, DOI 10.1109/12.238482
   Arnold K., 1997, JAVA PROGRAMMING LAN, VSecond
   Bieman JM, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P166, DOI 10.1109/ISSRE.1996.558776
   Bodík R, 1997, LECT NOTES COMPUT SC, V1301, P361, DOI 10.1145/267896.267921
   Bouricius W.G., 1969, ACM '69: Proceedings of the 1969 24th national conference, P295, DOI DOI 10.1145/800195.805940
   CHATTERJEE R, 1999, P ACM SIGACT SIGPLAN
   CHOI JD, 1999, P ACM SIGPLAN SIGSOF, P21
   Cierniak Michal., 2000, PROCEEEDINGS ACM SIG, P13
   Cukier M., 1999, Proceedings of the 18th IEEE Symposium on Reliable Distributed Systems, P168, DOI 10.1109/RELDIS.1999.805093
   Dawson S, 1996, DIG PAP INT SYMP FAU, P404, DOI 10.1109/FTCS.1996.534626
   Dean J, 1995, LECT NOTES COMPUT SC, V952, P77, DOI 10.1007/3-540-49538-x_5
   FRANKL PG, 1988, IEEE T SOFTWARE ENG, V14, P1483, DOI 10.1109/32.6194
   FU C, 2003, DCSTR518 RUTG U
   FU C, 2003, P INT C DEP SYST NET
   FU C, 2004, P ACM SIGSOFT INT S, P23
   Grove D., 2001, ACM T PROGRAMMING LA, V23
   GROVE JDD, 1997, P ACM SIGPLAN C OBJ, P108
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Han S., 1995, Proc. of International Computer Performance and Dependability Symposium, P204
   Heintze N., 1994, Proceedings of the 1994 ACM Conference on LISP and Functional Programming, P306, DOI 10.1145/182409.182495
   JO JW, 2004, J SYSTEMS SOFTWARE
   Kanawati G.A., 1992, 1992 FTCS 22 INT S F, P336
   LEE S, 2000, P ACM SIGPLAN JAV GR
   LHYOTAK O, 2003, P INT C COMP CONSTR, P153
   LI X, 2002, P 1 WORKSH NOV US SY
   MARLOWE TJ, 1990, ACTA INFORM, V28, P121, DOI 10.1007/BF01237234
   MILANOVA A, 2003, THESIS RUTGERS U
   MILANOVA A, 2005, ACM T SOFTWARE ENG M, V14
   Myers Glenford J., 2011, The Art of Software Testing
   NAGARAJA K, 2003, P 4 USENIX S INT TEC
   OCallahan R., 2000, THESIS CARNEGIE MELL
   OGASAWARA T, 2001, P ACM SIGPLAN C OBJ, P83
   RADWIN MJ, 2003, JAVA NETWORK FILE SY
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   Robillard MP, 2003, ACM T SOFTW ENG METH, V12, P191, DOI 10.1145/941566.941569
   ROUNTEV A, 2001, P C OBJ OR PROGR SYS, P43
   ROUNTEV A, 2004, P 2004 ACM SIGSOFT I, V29, P1, DOI DOI 10.1145/1007512.1007514
   Ryder BG, 2003, LECT NOTES COMPUT SC, V2622, P126
   *SABL MCGILL, 2003, SOOT JAV OPT FRAM
   Scott M., 2000, PROGRAMMING LANGUAGE
   Sharir M., 1981, Program flow analysis. Theory and applications, P189
   Shivers O. G., 1991, THESIS CARNEGIE MELL
   Sinha S, 2000, IEEE T SOFTWARE ENG, V26, P849, DOI 10.1109/32.877846
   SINHA S, 1999, P INT C SOFTW MAINT
   Sinha S, 2004, P 26 INT C SOFTW ENG
   Sortokin Peter., 2003, FTP SERVER JAVA
   Souter AL, 2002, INFORM SOFTWARE TECH, V44, P721, DOI 10.1016/S0950-5849(02)00126-X
   SOUTER AL, 2001, P IEEE INT WORKSH SO
   *SPECB ORG, 1998, SPEC JVM98 BENCHM
   Tang D, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P192, DOI 10.1109/ISSRE.1997.630864
   TANG D, 1992, ACM T COMPUTER S MAY, P567
   Tsai TK, 1999, IEEE T COMPUT, V48, P1183, DOI 10.1109/12.811108
   *VOL LLC, 2004, VOL
   Welsh Matt., 2001, SIGOPS OPER SYST REV, V35, P230
   [No title captured]
   [No title captured]
   2003, MUFFIN WORLD WIDE WE
NR 63
TC 29
Z9 42
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2005
VL 31
IS 4
BP 292
EP 311
DI 10.1109/TSE.2005.51
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 929BY
UT WOS:000229318300003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Vokác, M
AF Vokác, M
TI Defect frequency and design patterns:: An empirical study of industrial
   code
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE design patterns; defects; defect frequency; industrial code; case study;
   maintenance
ID FRAMEWORK
AB Software "design patterns" seek to package proven solutions to design problems in a form that makes it possible to find, adapt, and reuse them. A common claim is that a design based on properly applied patterns will have fewer defects than more ad hoc solutions. This case study analyzes the weekly evolution and maintenance of a large commercial product ( C++, 500,000 LOC) over three years, comparing defect rates for classes that participated in selected design patterns to the code at large. We found that there are significant differences in defect rates among the patterns, ranging from 63 percent to 154 percent of the average rate. We developed a new set of tools able to extract design pattern information at a rate of 3x10(6) lines of code per hour, with relatively high precision. Based on a qualitative analysis of the code and the nature of the patterns, we conclude that the Observer and Singleton patterns are correlated with larger code structures and, so, can serve as indicators of code that requires special attention. Conversely, code designed with the Factory pattern is more compact and possibly less closely coupled and, consequently, has lower defect numbers. The Template Method pattern was used in both simple and complex situations, leading to no clear tendency.
C1 Simula Res Lab, NO-1325 Lysaker, Norway.
RP Simula Res Lab, POB 134, NO-1325 Lysaker, Norway.
EM marek@vokac.org
CR ALBINAMIOT H, 2001, P 16 ANN INT C AUT S, P26
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   Antoniol G, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P23, DOI 10.1109/METRIC.1998.731224
   Antoniol G, 2001, J SYST SOFTWARE, V59, P181, DOI 10.1016/S0164-1212(01)00061-9
   Badros GJ, 2000, SOFTWARE PRACT EXPER, V30, P907, DOI 10.1002/(SICI)1097-024X(20000710)30:8<907::AID-SPE324>3.0.CO;2-I
   Balanyi Z, 2003, PROC IEEE INT CONF S, P305, DOI 10.1109/ICSM.2003.1235436
   Bansiya J, 1998, DR DOBBS J, V23, P20
   Bieman JM, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P40, DOI 10.1109/METRIC.2003.1232454
   Bieman JM, 2001, PROC IEEE INT CONF S, P580, DOI 10.1109/ICSM.2001.972775
   Chu WC, 2000, J SOFTW MAINT-RES PR, V12, P121, DOI 10.1002/(SICI)1096-908X(200003/04)12:2<121::AID-SMR206>3.0.CO;2-T
   DEMARIS A, 1991, PSYCHOL BULL, V110, P557, DOI 10.1037/0033-2909.110.3.557
   Florijn G, 1997, LECT NOTES COMPUT SC, V1241, P472, DOI 10.1007/BFb0053391
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Guéhéneuc YG, 2001, TOOLS, V39, P296, DOI 10.1109/TOOLS.2001.941682
   Hosmer W., 2000, Applied Logistic Regression, VSecond
   Huston B, 2001, J SYST SOFTWARE, V58, P261, DOI 10.1016/S0164-1212(01)00043-7
   Jaccard James, 2001, Interaction effects in logistic regression
   Keller R. K., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P226, DOI 10.1109/ICSE.1999.841012
   Kleinbaum D.G., 1994, LOGISTIC REGRESSION
   Kramer C, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P208, DOI 10.1109/WCRE.1996.558905
   Larman C., 2001, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and the Unified Process, V2nd
   *MINITAB INC, 2003, MINITAB 13 32
   NEUMANN G, 2002, P 16 EUR C OBJ OR PR, P392
   *PERF INC, 2004, PERF SOFTW CONF MAN
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P1134, DOI 10.1109/32.988711
   Prechelt L., 1999, Informatik Forschung und Entwicklung, V14, P74, DOI 10.1007/s004500050127
   Rising L., 1998, PATTERNS HDB
   Schauer R, 1998, PROG COMPREHEN, P4, DOI 10.1109/WPC.1998.693273
   SCHMIDT D, 1995, P EUR C OBJ OR PROGR, V952, P399
   *SCI TOOLW INC, 2003, UND C
   *TECHEXCEL, 2004, DEV TRACK DEF TRACK
   Vokác M, 2004, EMPIR SOFTW ENG, V9, P149, DOI 10.1023/B:EMSE.0000027778.69251.1f
   VOKAC M, IN PRESS J OBJECT TE
NR 33
TC 56
Z9 64
U1 2
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2004
VL 30
IS 12
BP 904
EP 917
DI 10.1109/TSE.2004.99
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881RI
UT WOS:000225886200005
DA 2024-07-18
ER

PT J
AU Chae, HS
   Kwon, YR
   Bae, DH
AF Chae, HS
   Kwon, YR
   Bae, DH
TI Improving cohesion metrics for classes by considering dependent instance
   variables
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE cohesion; object-oriented design; metrics/measurement
ID OBJECT-ORIENTED DESIGN; SOFTWARE; VALIDATION; SYSTEMS; QUALITY
AB The existing cohesion metrics for classes do not consider the characteristics of dependent instance variables that are commonly used in a class and, thus, do not properly reflect the cohesiveness of the class. This paper presents an approach for improving the cohesion metrics by considering the characteristics of the dependent instance variables in an object-oriented program.
C1 Pusan Natl Univ, Dept Comp Sci & Engn, Pusan 609735, South Korea.
   Korea Adv Inst Sci & Technol, Div Comp Sci, Dept Elect Engn & Comp Sci, Taejon 305701, South Korea.
C3 Pusan National University; Korea Advanced Institute of Science &
   Technology (KAIST)
RP Pusan Natl Univ, Dept Comp Sci & Engn, 30 Jangjeon Dong, Pusan 609735, South Korea.
EM hschae@pusan.ac.kr; kwon@selab.kaist.ac.kr; bae@selab.kaist.ac.kr
RI Bae, Doo-Hwan/C-1538-2011; Kwon, Yong Rae/C-1872-2011
CR Alshayeb M, 2003, IEEE T SOFTWARE ENG, V29, P1043, DOI 10.1109/TSE.2003.1245305
   [Anonymous], 2001, P 5 EUR C SOFTW MAIN
   [Anonymous], P 1995 S SOFTW REUS
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P345, DOI 10.1109/ICSE.1999.841025
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P963, DOI 10.1109/32.965338
   BRIAND LC, 1998, EMPIR SOFTW ENG, V1, P65
   BRUNTINK M, 2004, P 4 INT WORKSH SOURC
   CARD DN, 1986, IEEE T SOFTWARE ENG, V12, P264, DOI 10.1109/TSE.1986.6312942
   CARD NN, 1985, P 8 INT C SOFTW ENG, P372
   Chae HS, 2000, SOFTWARE PRACT EXPER, V30, P1405, DOI 10.1002/1097-024X(200010)30:12<1405::AID-SPE330>3.0.CO;2-3
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   CHIDAMBER SR, 1991, P OOPSLA 91, P197
   DEVANBU PT, 1992, P 14 INT C SOFTW ENG, P307
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Henderson-Sellers B., 1996, Software Metrics
   HITZ M, 1995, P S APPL CORP COMP
   Kabaili Hind, 2000, P 4 INT ECOOP WORKSH, P29
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   LINTON M, 1988, CSLTR88358 STANF U
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Stevens W., 1974, IBM SYSTEMS J, V12
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
NR 26
TC 19
Z9 26
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2004
VL 30
IS 11
BP 826
EP 832
PG 7
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 867OX
UT WOS:000224853000008
DA 2024-07-18
ER

PT J
AU Edwards, SH
   Sitaraman, M
   Weide, BW
   Hollingsworth, J
AF Edwards, SH
   Sitaraman, M
   Weide, BW
   Hollingsworth, J
TI Contract-checking wrappers for C++ classes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE assertion checkers; binary components; design by contract;
   preconditions; postconditions; class invariants; coding techniques;
   debugging aids; specification
AB Two kinds of interface contract violations can occur in component-based software: A client component can fail to satisfy a requirement of a component it is using, or a component implementation can fail to fulfill its obligations to the client. The traditional approach to detecting and reporting such violations is to embed assertion checks into component source code, with compile-time control over whether they are enabled. This works well for the original component developers, but it fails to meet the needs of component clients who do not have access to source code for such components. A wrapper-based approach, in which contract checking is not hard-coded into the underlying component but is "layered" on top of it, offers several relative advantages. It is practical and effective for C++ classes. Checking code can be distributed in binary form along with the underlying component, it can be installed or removed without requiring recompilation of either the underlying component or the client code, it can be selectively enabled or disabled by the component client on a per-component basis, and it does not require the client to have access to any special tools ( which might have been used by the component developer) to support wrapper installation and control. Experimental evidence indicates that wrappers in C++ impose modest additional overhead compared to inlining assertion checks.
C1 Virginia Polytech Inst & State Univ, Dept Comp Sci, Blacksburg, VA 24061 USA.
   Clemson Univ, Dept Comp Sci, Clemson, SC 29634 USA.
   Ohio State Univ, Dept Comp Sci & Engn, Columbus, OH 43210 USA.
   Indiana Univ SE, Dept Comp Sci, New Albany, IN 47150 USA.
C3 Virginia Polytechnic Institute & State University; Clemson University;
   University System of Ohio; Ohio State University; Indiana University
   System; Indiana University Southeast
RP Virginia Polytech Inst & State Univ, Dept Comp Sci, Mail Stop 0106, Blacksburg, VA 24061 USA.
EM edwards@cs.vt.edu; murali@cs.clemson.edu; weide.1@osu.edu;
   jholly@ius.edu
CR Alexandrescu A., 2001, Modern C++ Design: Generic Programming and Design Patterns Applied
   [Anonymous], 1997, Object-oriented software construction
   [Anonymous], 2000, The C++ Programming Language
   [Anonymous], 1986, Abstraction and Specification in Program Development
   Batov V., 2000, C/C++ Users Journal, V18, P44
   Beugnard A, 1999, COMPUTER, V32, P38, DOI 10.1109/2.774917
   Cheon Y, 2002, LECT NOTES COMPUT SC, V2374, P231
   Cheon Yoonsik., 2002, Proceedings of the International Conference on Software Engineering Research and Practice (SERP'02), P322
   Coplien JO, 1992, ADV C PROGRAMMING ST
   Duncan A., 1998, TRCS9832 U CAL SANT
   Edwards SH, 1997, IEEE T SOFTWARE ENG, V23, P83, DOI 10.1109/32.585498
   Edwards SH, 2000, SOFTW TEST VERIF REL, V10, P249, DOI 10.1002/1099-1689(200012)10:4<249::AID-STVR215>3.0.CO;2-C
   Edwards SH, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P46, DOI 10.1109/ICSR.1998.685729
   FINDLER R.B., 2001, P 8 EUROPEAN SOFTWAR, P229, DOI DOI 10.1145/503209.503240
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gulcu C., 2003, COMPLETE LOG4J MANUA
   Hollingsworth J. E., 2000, Software Engineering Notes, V25, P11, DOI 10.1145/357474.355048
   Kramer R, 1998, TOOLS 26 - TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES - PROCEEDINGS, P295, DOI 10.1109/TOOLS.1998.711021
   Leavens Gary T., 1999, Behavioral Specifications of Businesses and Systems, P175
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Musser D.R., 2001, STL Tutorial and Reference Guide. C++ Programming with the Standard Template Library, V2nd
   PARNAS DL, 1972, COMMUN ACM, V15, P330, DOI 10.1145/355602.361309
   Perry D. E., 1989, Proceedings. 11th International Conference on Software Engineering (Cat. No.89CH2718-5), P2, DOI 10.1145/74587.74588
   PLOSCH R, 2002, J OBJECT TECHNOLOGY, V1, P5
   ROSENBLUM DS, 1995, IEEE T SOFTWARE ENG, V21, P19, DOI 10.1109/32.341844
   SHAKIR G, 1997, SYSTEMATIC GENERATOR
   Szyperski C., 2002, COMPONENT SOFTWARE, V2nd
   TAN N, 2003, IEE P SOFTWARE ENG, V150, P329
   TAN RP, 2003, 0311 IOW STAT U DEP, P29
   Vitharana P, 2003, COMMUN ACM, V46, P67, DOI 10.1145/859670.859671
   Voas J, 1997, IEEE SOFTWARE, V14, P118, DOI 10.1109/52.582981
   VOAS J, 1999, SOFTWARE QUALITY PRO, V1
   Wang CQ, 1997, IEEE T SOFTWARE ENG, V23, P314, DOI 10.1109/32.588523
   WING JM, 1990, COMPUTER, V23, P8, DOI 10.1109/2.58215
   WING JM, 1990, IEEE T SOFTWARE ENG, V16, P1076, DOI 10.1109/32.58791
   [No title captured]
   2004, ICONTRACT PLUS MAKIN
NR 37
TC 11
Z9 12
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2004
VL 30
IS 11
BP 794
EP 810
DI 10.1109/TSE.2004.80
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 867OX
UT WOS:000224853000006
DA 2024-07-18
ER

PT J
AU Batory, D
   Sarvela, JN
   Rauschmayer, A
AF Batory, D
   Sarvela, JN
   Rauschmayer, A
TI Scaling step-wise refinement
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE specification; design notations and documentation; representation;
   design concepts; methodologies; data abstraction; extensible languages;
   program synthesis; feature-oriented programming; refinement
AB Step-wise refinement is a powerful paradigm for developing a complex program from a simple program by adding features incrementally. We present the AHEAD (Algebraic Hierarchical Equations for Application Design) model that shows how step-wise refinement scales to synthesize multiple programs and multiple noncode representations. AHEAD shows that software can have an elegant, hierarchical mathematical structure that is expressible as nested sets of equations. We review a tool set that supports AHEAD. As a demonstration of its viability, we have bootstrapped AHEAD tools from equational specifications, refining Java and non-Java artifacts automatically; a task that was accomplished only by ad hoc means previously.
C1 Univ Texas, Dept Comp Sci, Austin, TX 78712 USA.
   Univ Munich, Inst Informat, D-80538 Munich, Germany.
C3 University of Texas System; University of Texas Austin; University of
   Munich
RP Univ Texas, Dept Comp Sci, Austin, TX 78712 USA.
EM batory@cs.utexas.edu; sarvela@cs.utexas.edu; axel@rauschma.de
CR [Anonymous], 1977, P 5 INT JOINT C ARTI
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   BALZER R, 1989, SOFTWARE REUSABILITY, V2
   Batory D, 2000, IEEE T SOFTWARE ENG, V26, P441, DOI 10.1109/32.846301
   Batory D, 1997, IEEE T SOFTWARE ENG, V23, P67, DOI 10.1109/32.585497
   BATORY D, 2002, AUTOMATED SOFTWA SEP
   BATORY D, 1998, P 5 INT C SOFTW REUS
   BATORY D, 2003, P ACM SIGSOFT C ESEC
   BATORY D, 2002, ACM T SOFTWARE E APR
   BAXTER I, 1992, COMM ACM         APR
   Bernstein PA, 1999, INFORM SYST, V24, P71, DOI 10.1016/S0306-4379(99)00006-X
   BIDOIT M, 2003, LECT NOTES COMPUTER
   BOSSI A, 1999, P 9 INT WORKSH LOG B
   BRACHA G, 1990, SIGPLAN NOTICES, V25, P303, DOI 10.1145/97946.97982
   Cardone R, 2001, PROC INT CONF SOFTW, P285, DOI 10.1109/ICSE.2001.919102
   Clifton C, 2000, ACM SIGPLAN NOTICES, V35, P130, DOI 10.1145/354222.353181
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   EHRIG H, 1990, FUNDAMENTALS ALGEBRA, V2
   Ehrig Hartmut., 1985, Fundamentals of algebraic specification, V1
   FLATT M, 1998, ACM S PRINC PROGR LA, P171
   Forman I, 1999, PUTTING METACLASSES
   GRAY J, 2001, COMM ACM         OCT
   GRISS M, 2000, P 1 INT SOFTW PROD L
   HARRISON W, 1993, SIGPLAN NOTICES, V28, P411, DOI 10.1145/167962.165932
   HARRISON W, 2000, P ANN ACM SIGPLAN C
   HEIN A, 2000, P SOFTW PROD LIN C S
   JACKSON D, 2001, ACM SIGSOFT C FSE ES
   Jackson M, 1998, IEEE T SOFTWARE ENG, V24, P831, DOI 10.1109/32.729683
   Kang Kyo C, 1990, Technical Report
   KOCZALES G, 1997, P ANN EUR C OBJ OR P, P220
   LI H, 2002, P C AUT SOFTW ENG
   LIU J, IN PRESS AUTOMATIC R
   LOPEZHERREJON RE, 2001, P 2001 C GEN COMP BA
   MCDIRMID S, 2001, P ANN ACM SIGPLAN C
   Mellor SJ, 2003, IEEE SOFTWARE, V20, P14, DOI 10.1109/MS.2003.1231145
   MEZINI M, 1998, P C OBJ OR PROGR SYS, P97
   NENNINGER M, 1995, P ICSE 17 WORKSH FOR
   Ossher H, 2001, COMMUN ACM, V44, P43, DOI 10.1145/383845.383856
   PERRY D, 1989, P ACM SIGSOFT C
   PREHOFER C, 2001, CONCURRENCY COMPUTAT, V13
   PREHOFER C, 1997, P ANN EUR C OBJ OR P
   REENSKAUG T, 1992, J OBJECT-ORIENT PROG, V5, P27
   SANNELLA D, 1999, LOGIC PROGRAM SYNTHE, P1
   SMARAGDAKIS Y, 2002, ACM T SOFTWARE S APR
   Sullivan K. J., 1992, ACM Transactions on Software Engineering and Methodology, V1, P229, DOI 10.1145/131736.131744
   SZTIPANOVITS J, 2002, P C GEN PROGR COMP B
   TARR P, 1999, P INT C SOFTW ENG
   *U TX CTR AG TECHN, 2002, AHEAD TOOL DOC
   VANDEURSEN A, 1997, P SIGPLAN WORKSH DOM
   VanHilst Michael., 1996, P 11 ACM SIGPLAN C O, P359
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
   WIRSING M, 1990, HDB THEORETICAL COMP, P676
   WOLF WA, 1981, FUNDAMENTAL STRUCTUR
   Zave P, 2003, MG COMP SCI, P353
   [No title captured]
NR 55
TC 266
Z9 297
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2004
VL 30
IS 6
BP 355
EP 371
DI 10.1109/TSE.2004.23
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 820IW
UT WOS:000221383400002
DA 2024-07-18
ER

PT J
AU Jorgensen, M
AF Jorgensen, M
TI Realism in assessment of effort estimation uncertainty: It matters how
   you ask
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE cost estimation; risk management; software psychology
ID SOFTWARE-DEVELOPMENT EFFORT; ACCURACY
AB Traditionally, software professionals are requested to provide minimum-maximum intervals to indicate the uncertainty of their effort estimates. In this paper, we claim that the traditional request is not optimal and leads to overoptimistic views about the level of estimation uncertainty. Instead, we propose that it is better to frame the request for uncertainty assessment: "How likely is it that the actual effort will be more than/less than X?" Our claim is based on the results of a previously reported experiment and field studies in two companies. The two software companies were instructed to apply the traditional and our alternative, framing on random samples of their projects. In total, we collected information about 47 projects applying the traditional framing and 28 projects applying the alternative framing.
C1 Simula Res Lab, NO-1325 Lysaker, Norway.
RP Jorgensen, M (corresponding author), Simula Res Lab, POB 134, NO-1325 Lysaker, Norway.
EM magne.jorgensen@simula.no
RI Jorgensen, Magne/H-4402-2016
CR Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], P INT C PROJ MAN
   Connolly T, 1997, MANAGE SCI, V43, P1029, DOI 10.1287/mnsc.43.7.1029
   Epley N, 1999, J EXP SOC PSYCHOL, V35, P578, DOI 10.1006/jesp.1999.1390
   Jorgensen M, 2004, INFORM SOFTWARE TECH, V46, P3, DOI 10.1016/S0950-5349(03)00093-4
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P79, DOI 10.1016/S0164-1212(02)00160-7
   Jorgensen M, 2003, INFORM SOFTWARE TECH, V45, P123, DOI 10.1016/S0950-5849(02)00188-X
   JORGENSEN M, 2004, J PROJECT MANAGEMENT, V22
   JORGENSEN M, IN PRESS EMPIRICAL S
   Kahneman D, 1982, JUDGMENT UNCERTAINTY, DOI DOI 10.1097/00001888-199907000-00012
   Kahneman D., 1982, Judgment under uncertainty: Heuristics and biases, P509, DOI DOI 10.1017/CBO9780511809477.036
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   Moder J.J., 1995, PROJECT MANAGEMENT C, V3rd
   MOLOKKEN K, IN PRESS EMPIRICAL S
   *NASA, 1990, MAN HDB SOFTW DEV
   Yaniv I, 1997, J BEHAV DECIS MAKING, V10, P21, DOI 10.1002/(SICI)1099-0771(199703)10:1<21::AID-BDM243>3.0.CO;2-G
NR 16
TC 45
Z9 51
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2004
VL 30
IS 4
BP 209
EP 217
DI 10.1109/TSE.2004.1274041
PG 9
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 810YV
UT WOS:000220740500001
DA 2024-07-18
ER

PT J
AU Petrenko, A
   Boroday, S
   Groz, R
AF Petrenko, A
   Boroday, S
   Groz, R
TI Confirming configurations in EFSM testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE formal methods; test design; model checking; extended finite state
   machine; functional testing; conformance testing; test derivation; state
   identification; model-based testing
ID FINITE-STATE MACHINES; MODEL
AB In this paper, we investigate the problem of configuration verification for the extended FSM (EFSM) model. This is an extension of the FSM state identification problem. Specifically, given a configuration ("state vector") and an arbitrary set of configurations, determine an input sequence such that the EFSM in the given configuration produces an output sequence different from that of the configurations in the given set or at least in a maximal. proper subset. Such a sequence can be used in a test case to confirm the destination configuration of a particular EFSM transition. We demonstrate that this problem could be reduced to the EFSM traversal problem, so that the existing methods and tools developed in the context of model checking become applicable. We introduce notions of EFSM projections and products and, based on these notions, we develop a theoretical framework for determining configuration-confirming sequences. The proposed approach is illustrated on a realistic example.
C1 Ctr Rech Informat Montreal, Montreal, PQ H3A 1B9, Canada.
   IMAG, LSR, F-38402 St Martin Dheres, France.
RP Ctr Rech Informat Montreal, Montreal, PQ H3A 1B9, Canada.
EM petrenko@crim.ca; boroday@crim.ca; groz@imag.fr
OI Petrenko, Alexandre/0000-0002-2938-1666
CR Alur R, 1996, IEEE T SOFTWARE ENG, V22, P181, DOI 10.1109/32.489079
   Alur R., 1995, Proceedings of the Twenty-Seventh Annual ACM Symposium on the Theory of Computing, P363, DOI 10.1145/225058.225161
   [Anonymous], P IFIP 14 INT C TEST
   [Anonymous], P 12 C IEEE COMP COM
   [Anonymous], P 5 IEEE S SWITCH CI
   BORODAY S, 2002, P 3 SAM SDL MSC WORK, P141
   Cabodi G, 1998, FORM METHOD SYST DES, V12, P267, DOI 10.1023/A:1008632417306
   CAMURATI P, 1991, DIMACS SERIES DISCRE, V3, P505
   CHANSON ST, 1993, P INFOCOM 93, V1, P106
   CHANSON ST, 1994, P INFOCOM 94 C COMP, V2, P792
   CHENG KT, 1993, ACM IEEE D, P86
   CHO H, 1991, DIMACS SERIES DISCRE, V3, P615
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   CHUN W, 1991, FORMAL DESCRIPTION T, V3, P191
   CHUN WJ, 1992, IFIP TRANS C, V8, P245
   Clarke EM, 1999, MODEL CHECKING, P1
   CLATIN M, 1995, P IFIP 8 INT WORKSH
   DOLDI L, 2003, VALIDATION COMMUNICA, P310
   EK A, 1997, P 8 SDL FOR EV FRANC, P245
   Fernandez JC, 1997, SCI COMPUT PROGRAM, V29, P123, DOI 10.1016/S0167-6423(96)00032-9
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   GILL A, 1962, INTRO THEORY FINITE, P207
   GROZ R, 1997, P INT C FORM DESCR T, P465
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   HSIEH EP, 1971, IEEE T COMPUT, VC 20, P1152, DOI 10.1109/T-C.1971.223100
   HUANG CM, 1994, P INT COMP S C, V2, P842
   HUANG S, 1996, P IFIP C FORM DESCR, V9, P403
   *ISO IEC, 1997, 9074 ISO
   *ITUT, 1994, Z100 ITUT
   KERBRAT A, 1999, P SDL FORUM 99 MONTR, P135
   KOH LS, 1994, P INT C NETW PROT, P64
   KRISHNAKUMAR AS, 1993, P 5 INT C COMP AID V, P110
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   LEE D, 1994, IEEE T COMPUT, V43, P306, DOI 10.1109/12.272431
   LI X, 1994, P 7 INT WORKSH PROT, P225
   LUO G, 1994, IEEE T SOFTWARE ENG, V20, P149, DOI 10.1109/32.265636
   Miller RE, 1996, CONFERENCE PROCEEDINGS OF THE 1996 IEEE FIFTEENTH ANNUAL INTERNATIONAL PHOENIX CONFERENCE ON COMPUTERS AND COMMUNICATIONS, P225, DOI 10.1109/PCCC.1996.493638
   MILLER RE, 1992, IFIP TRANS C, V8, P13
   Okun V., 2002, P INT C SYST SCI APP, P1351
   *OMG, 2002, UN MOD LANG VERS 1 4
   Petrenko A., 1996, Testing of Communicating Systems. IFIP TC6 9th International Workshop on Testing of Communicating Systems, P125
   Petrenko A, 1996, COMPUT NETWORKS ISDN, V29, P81, DOI 10.1016/S0169-7552(96)00019-0
   PETRENKO A, 1992, IFIP TRANS C, V8, P229
   Petromilli M, 1999, MARK HEALTH SERV, V19, P5
   QIXIANG P, 1996, P ICCT 96 INT C COMM, V1, P218
   Ramalingom T, 1996, IEEE INFOCOM SER, P1141, DOI 10.1109/INFCOM.1996.493058
   Rusu V, 2000, LECT NOTES COMPUT SC, V1945, P338
   SIDHU DP, 1989, IEEE T SOFTWARE ENG, V15, P413, DOI 10.1109/32.16602
   Stocks P, 1996, IEEE T SOFTWARE ENG, V22, P777, DOI 10.1109/32.553698
   *TEL AB, 2000, OBJ GEODE SDL SIM RE
   URAL H, 1987, COMPUT COMMUN, V10, P234, DOI 10.1016/0140-3664(87)90137-X
   URAL H, 1993, P IFIP 6 INT C FORM, P339
   VASILEVSKI MP, 1973, CYBERNETICS, P653
   VONBOCHMANN G, 1994, P INT S SOFTW TEST A, P109
   WANG CJ, 1994, P 7 INT WORKSH PROT, P155
   WARSHALL S, 1962, J ACM, V9, P11, DOI 10.1145/321105.321107
   YEVTUSHENKO N, 1990, AUTOM CONTROL COMP S, V24, P65
NR 58
TC 95
Z9 113
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2004
VL 30
IS 1
BP 29
EP 42
DI 10.1109/TSE.2004.1265734
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 757QD
UT WOS:000187572200003
DA 2024-07-18
ER

PT J
AU Little, RG
   Gibson, ML
AF Little, RG
   Gibson, ML
TI Perceived influences on implementing data warehousing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE discovery; data warehouse; data warehousing implementation; data mining;
   decision support systems; online analytical processing; expert
   interviews; survey instrument; factor analysis; Cronbach's coefficient
   alpha; latent factor names
AB This study surveyed data warehousing implementation project participants to determine what aspects they perceived should contribute to the implementation process. The respondents included: functional managers/staff, IS managers/staff, and consultants. The study identified eight significant factors that participants perceived should impact data warehouse implementation.
C1 Auburn Univ, Dept Inforamt Syst Decis Sci, Montgomery, AL 36124 USA.
   Univ Houston, Coll Technol, Dept Ind Technol, Houston, TX 77204 USA.
C3 Auburn University System; Auburn University; Auburn University
   Montgomery; University of Houston System; University of Houston
RP Little, RG (corresponding author), Auburn Univ, Dept Inforamt Syst Decis Sci, POB 244023, Montgomery, AL 36124 USA.
CR [Anonymous], 1992, RES METHODS BUSINESS
   BARQUIN R, 1996, J DATA WAREHOUSING, V1, P2
   CHURCHILL GA, 1979, J MARKETING RES, V16, P64, DOI 10.2307/3150876
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   CRONBACH LJ, 1963, BRIT J STATIST PSYCH, V16, P137, DOI 10.1111/j.2044-8317.1963.tb00206.x
   Fairhead N., 1995, Business Quarterly, V60, P89
   Gorsuch R.L., 1983, FACTOR ANAL
   GRAY P., 1998, Decision Support in the Data Warehouse
   HAIR JF, 1995, MULTIVARIATE DATA AN
   INMON WH, 1999, DSS ENV DATA WAREHOU
   INMON WH, 1999, DATA WAREHOUSE DATA
   Kim J.O., 1978, Introduction to factor analysis: What it is and how to do it
   Lederer A. L., 1992, Journal of Management Information Systems, V9, P25
   MCFADDEN F, 1996, J DATA WAREHOUSING, V1, P61
   MCFADDEN FR, 1996, P HAW INT C SYST SCI
   Nunnally JC, 1978, PSYCHOMETRIC THEORY
   PENDSE N, 2001, WHAT IS OLAP
   Spector P.E., 1992, SUMMATED RATING SCAL, V82
NR 18
TC 15
Z9 18
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2003
VL 29
IS 4
BP 290
EP 296
DI 10.1109/TSE.2003.1191794
PG 7
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 664PT
UT WOS:000182070000001
DA 2024-07-18
ER

PT J
AU Denaro, G
   Heydarov, R
   Mohebbi, A
   Pezzè, M
AF Denaro, Giovanni
   Heydarov, Rahim
   Mohebbi, Ali
   Pezze, Mauro
TI Prevent: An Unsupervised Approach to Predict Software Failures in
   Production
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Training; Production; Predictive models; Monitoring; Key performance
   indicator; Training data; Time measurement; Failure prediction;
   distributed applications; machine learning
AB This paper presents Prevent, a fully unsupervised approach to predict and localize failures in distributed enterprise applications. Software failures in production are unavoidable. Predicting failures and locating failing components online are the first steps to proactively manage faults in production. Many techniques predict failures from anomalous combinations of system metrics with supervised, weakly supervised, and semi-supervised learning models. Supervised approaches require large sets of labelled data not commonly available in large enterprise applications, and address failure types that can be either captured with predefined rules or observed while training supervised models. Prevent integrates the core ingredients of unsupervised approaches into a novel fully unsupervised approach to predict failures and localize failing resources. The results of experimenting with Prevent on a commercially-compliant distributed cloud system indicate that Prevent provides more stable, reliable and timely predictions than supervised learning approaches, without requiring the often impractical training with labeled data.
C1 [Denaro, Giovanni; Pezze, Mauro] Univ Milano Bicocca, Dept Informat Syst & Commun, I-20126 Milan, Italy.
   [Heydarov, Rahim; Mohebbi, Ali; Pezze, Mauro] USI Univ Svizzera Italiana USI, Fac Informat, CH-6900 Lugano, Switzerland.
   [Pezze, Mauro] Constructor Inst, CH-8200 Schaffhausen, Switzerland.
C3 University of Milano-Bicocca
RP Denaro, G (corresponding author), Univ Milano Bicocca, Dept Informat Syst & Commun, I-20126 Milan, Italy.
EM giovanni.denaro@unimib.it; rahim.heydarov@usi.ch; ali.mohebbi@usi.ch;
   mauro.pezze@usi.ch
OI mohebbi, ali/0000-0002-4844-4351; DENARO, GIOVANNI/0000-0002-7566-8051;
   PEZZE, MAURO/0000-0001-5193-7379
FU Swiss SNF project ASTERIx: Automatic System TEsting of InteRactive
   software applications
FX No Statement Available
CR Ahmad S, 2017, NEUROCOMPUTING, V262, P134, DOI 10.1016/j.neucom.2017.04.070
   Arnold A, 2007, KDD-2007 PROCEEDINGS OF THE THIRTEENTH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P66
   Bach SH, 2017, PR MACH LEARN RES, V70
   Berthelot D, 2019, ADV NEUR IN, V32
   Bodík P, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P111
   Bodo L., 2015, P INT C SOFTW ENG RE, P255
   Bontemps L, 2016, LECT NOTES COMPUT SC, V10018, P141, DOI 10.1007/978-3-319-48057-2_9
   Carreira-Perpinan M. A., 2005, Aistats, V10, P33
   Chandler D., 1987, INTRO MODERN STAT ME
   Chapelle O., 2006, SEMISUPERVISED LEARN
   Chung I.-H., 2008, P IEEE INT S PAR DIS, P1
   Colman-Meixner C, 2016, IEEE COMMUN SURV TUT, V18, P2244, DOI 10.1109/COMST.2016.2531104
   Davis NA, 2017, IEEE INT CONF CLOUD, P544, DOI 10.1109/CLOUD.2017.75
   Denaro Giovanni., 2002, P IEEE INT C SOFTWAR, P361
   Dorogovtsev SN, 2008, REV MOD PHYS, V80, P1275, DOI 10.1103/RevModPhys.80.1275
   Druck B., 2009, P C EMP METH NAT LAN, P81, DOI DOI 10.3115/1699510.1699522
   Du M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1285, DOI 10.1145/3133956.3134015
   elastic, Elasticsearch-A distributed, RESTful search and analytics engine
   Fernandes G, 2016, J NETW COMPUT APPL, V64, P1, DOI 10.1016/j.jnca.2015.11.024
   Fischer Asja, 2012, Progress in Pattern Recognition, Image Analysis, ComputerVision, and Applications. Proceedings 17th Iberoamerican Congress, CIARP 2012, P14, DOI 10.1007/978-3-642-33275-3_2
   Fulp ErrinW., 2008, WASL'08: Proceedings of the First USENIX conference on Analysis of system logs, P5
   Gao JC, 2022, IEEE T SERV COMPUT, V15, P1411, DOI [10.1109/BigData47090.2019.9006011, 10.1109/TSC.2020.2993728, 10.1109/bigdata47090.2019.9006011]
   Gazzola L, 2017, PROC INT SYMP SOFTW, P67, DOI 10.1109/ISSRE.2017.10
   GRANGER CWJ, 1969, ECONOMETRICA, V37, P424, DOI 10.2307/1912791
   Ibidunmoye O, 2018, IEEE T NETW SERV MAN, V15, P217, DOI 10.1109/TNSM.2017.2750906
   Ibidunmoye O, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2791120
   IBM Corporation, Operations Analytics Predictive Insights 1.3.6
   Islam T, 2017, 2017 IEEE 1ST INTERNATIONAL CONFERENCE ON COGNITIVE COMPUTING (ICCC 2017), P24, DOI 10.1109/IEEE.ICCC.2017.11
   Kang H., 2012, P 2 USENIX WORKSH HO
   Laine S, 2017, Arxiv, DOI [arXiv:1610.02242, DOI 10.48550/ARXIV.1610.02242]
   Langville AN, 2005, SIAM REV, V47, P135, DOI 10.1137/S0036144503424786
   Liang P., 2009, P 26 ANN INT C MACH
   Lu HH, 2012, IEEE INT CONF AUTOM, P314, DOI 10.1145/2351676.2351734
   Magalhaes J. P., 2011, Proceedings of the 2011 IEEE 10th International Symposium on Network Computing and Applications (NCA 2011), P171, DOI 10.1109/NCA.2011.30
   Magalhaes J. P., 2010, Proceedings 2010 Ninth IEEE International Symposium on Network Computing and Applications (NCA), P60, DOI 10.1109/NCA.2010.15
   Magalhaes J.P., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, SAC '11, P209
   Malik H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1012, DOI 10.1109/ICSE.2013.6606651
   Mann GS, 2010, J MACH LEARN RES, V11, P955
   Mariani L, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110464
   Mariani L, 2018, IEEE INT CONF SOFTW, P262, DOI 10.1109/ICST.2018.00034
   Martin T, 2014, PHYS REV E, V90, DOI 10.1103/PhysRevE.90.052808
   McKinney W., 2011, P 10 PYTH SCI C SCIP, P96, DOI DOI 10.25080/MAJORA-EBAA42B7-014
   Monni C, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P69, DOI 10.1109/ICSE-NIER.2019.00026
   Monni C, 2019, IEEE INT CONF SOFTW, P148, DOI 10.1109/ICST.2019.00024
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Nistor Adrian., 2014, ISSTA'14, P282, DOI DOI 10.1145/2610384.2610410
   Ozcelik B, 2016, IEEE T SOFTWARE ENG, V42, P26, DOI 10.1109/TSE.2015.2442577
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Prasad NR, 2009, CMC-COMPUT MATER CON, V14, P1, DOI 10.1145/1541880.1541882
   Profillidis V.A., 2018, Modeling of Transport Demand: Analyzing, Calculating, and Forecasting Transport Demand
   Qiang Guan, 2012, Journal of Communications, V7, P52, DOI 10.4304/jcm.7.1.52-61
   Ratner A, 2016, ADV NEUR IN, V29
   Roumani Y, 2019, INT J INFORM MANAGE, V47, P131, DOI 10.1016/j.ijinfomgt.2019.01.014
   Salfner F, 2010, ACM COMPUT SURV, V42, DOI 10.1145/1670679.1670680
   Sambasivan R. R., 2011, NSDI, V5, P1
   Sauvanaud C, 2016, PROC INT SYMP SOFTW, P196, DOI 10.1109/ISSRE.2016.32
   Scott J., 2011, The SAGE Handbook of Social Network Analysis
   Seabold S., 2010, P 9 PYTH SCI C, P57, DOI DOI 10.25080/MAJORA-92BF1922-011
   Stack P., 2017, P 1 INT WORKSH NEXT
   Stewart R, 2017, AAAI CONF ARTIF INTE, P2576
   Sun XY, 2019, PROCEEDINGS OF THE 2019 56TH ACM/EDAC/IEEE DESIGN AUTOMATION CONFERENCE (DAC), DOI 10.1145/3316781.3317918
   Tan YM, 2012, INT CON DISTR COMP S, P285, DOI 10.1109/ICDCS.2012.65
   Tan YM, 2010, PODC 2010: PROCEEDINGS OF THE 2010 ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING, P173, DOI 10.1145/1835698.1835741
   Tehrani AF, 2017, MULTIAGENT GRID SYST, V13, P97, DOI 10.3233/MGS-170263
   Tu H, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P394, DOI 10.1109/ASE51524.2021.9678617
   Zhang JY, 2022, Arxiv, DOI arXiv:2202.05433
   Zhang ZW, 2018, IET SOFTW, V12, P527, DOI 10.1049/iet-sen.2017.0198
NR 67
TC 0
Z9 0
U1 3
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2023
VL 49
IS 12
BP 5139
EP 5153
DI 10.1109/TSE.2023.3327583
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CL0K1
UT WOS:001125287400007
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Fang, XW
   Calinescu, R
   Gerasimou, S
   Alhwikem, F
AF Fang, Xinwei
   Calinescu, Radu
   Gerasimou, Simos
   Alhwikem, Faisal
TI Fast Parametric Model Checking With Applications to Software
   Performability Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Markov processes; Parametric statistics; Software systems; Analytical
   models; Probabilistic logic; Web servers; Software algorithms;
   Parametric model checking; software performability; nonfunctional
   software properties; Markov models
ID VERIFICATION; QUALITY
AB We present an efficient parametric model checking technique for the analysis of software performability, i.e., of the performance and dependability properties of software systems. The new parametric model checking (pMC) technique works by using a heuristic to automatically decompose a parametric discrete-time Markov chain (pDTMC) model of the software system under verification into fragments that can be analysed independently, yielding results that are then combined to establish the required software performability properties. Our fast parametric model checking (fPMC) technique enables the formal analysis of software systems modelled by pDTMCs that are too complex to be handled by existing pMC methods. Furthermore, for many pDTMCs that state-of-the-art parametric model checkers can analyse, fPMC produces solutions (i.e., algebraic formulae) that are simpler and much faster to evaluate. We show experimentally that adding fPMC to the existing repertoire of pMC methods improves the efficiency of parametric model checking significantly, and extends its applicability to software systems with more complex behaviour than currently possible.
C1 [Fang, Xinwei; Calinescu, Radu; Gerasimou, Simos] Univ York, Dept Comp Sci, York YO10 5GH, England.
   [Alhwikem, Faisal] Qassim Univ, Coll Comp, Dept Comp Sci, Buraydah 51452, Saudi Arabia.
C3 University of York - UK; Qassim University
RP Calinescu, R (corresponding author), Univ York, Dept Comp Sci, York YO10 5GH, England.
EM radu.calinescu@york.ac.uk
OI Calinescu, Radu/0000-0002-2678-9260
FU UKRI [EP/V026747/1]; ORCA-Hub PRF project "COVE"; Assuring Autonomy
   International Programme; 'SESAME - Secure and Safe Multi-Robot Systems'
   under H2020-EU [101017258]
FX This work was supported in part by the UKRI under project EP/V026747/1
   "Trustworthy Autonomous SystemsNode in Resilience," in part by the
   ORCA-Hub PRF project "COVE,", in part by the Assuring Autonomy
   International Programme and in part by 'SESAME - Secure and Safe
   Multi-Robot Systems' under H2020-EU Grant 101017258.
CR Alasmari N, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111275
   Ameller D, 2016, SOFTWARE QUAL J, V24, P271, DOI 10.1007/s11219-015-9268-4
   Andova S, 2003, LECT NOTES COMPUT SC, V2791, P88
   [Anonymous], 2023, fPMC project website
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   Ashok P, 2018, LECT NOTES COMPUT SC, V11138, P317, DOI 10.1007/978-3-030-01090-4_19
   Baier C, 2020, INFORM COMPUT, V272, DOI 10.1016/j.ic.2019.104504
   Balsamo S, 2003, PERFORM EVALUATION, V51, P269, DOI 10.1016/S0166-5316(02)00099-8
   Balsamo S, 2012, J SYST SOFTWARE, V85, P1520, DOI 10.1016/j.jss.2011.11.1042
   Bianco A., 1995, Foundations of Software Technology and Theoretical Computer Science. 15th Conference. Proceedings, P499
   Calinescu R., 2017, Self-Aware Computing Systems, P337
   Calinescu R, 2013, Assurances for Self-Adaptive Systems, V7740, P297, DOI DOI 10.1007/978-3-642-36249-1_11
   Calinescu R, 2021, IEEE T SOFTWARE ENG, V47, P1114, DOI 10.1109/TSE.2019.2912958
   Calinescu R, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND SELF-ORGANIZING SYSTEMS (ACSOS 2020), P242, DOI 10.1109/ACSOS49614.2020.00047
   Calinescu R, 2018, J SYST SOFTWARE, V143, P140, DOI 10.1016/j.jss.2018.05.013
   Calinescu R, 2016, LECT NOTES COMPUT SC, V9636, P540, DOI 10.1007/978-3-662-49674-9_32
   Calinescu R, 2016, IEEE T RELIAB, V65, P107, DOI 10.1109/TR.2015.2452931
   Calinescu R, 2009, LECT NOTES COMPUT SC, V5503, P421
   Ciesinski R, 2004, LECT NOTES COMPUT SC, V2925, P147
   Classen A., 2010, ICSE 10, V1, P335, DOI DOI 10.1145/1806799.1806850
   Clements P., 2002, Software product lines
   Daws C, 2005, LECT NOTES COMPUT SC, V3407, P280
   de Lemos Rogerio, 2017, Software Engineering for Self-Adaptive Systems III. Assurances. International Seminar. Revised Selected and Invited Papers: LNCS 9640, P3, DOI 10.1007/978-3-319-74183-3_1
   Dehnert C, 2017, LECT NOTES COMPUT SC, V10427, P592, DOI 10.1007/978-3-319-63390-9_31
   Dressler F, 2010, IEEE COMMUN MAG, V48, P176, DOI 10.1109/MCOM.2010.5621985
   Dressler F, 2010, COMPUT NETW, V54, P881, DOI 10.1016/j.comnet.2009.10.024
   Fang XW, 2021, PROC INT CONF SOFTW, P835, DOI 10.1109/ICSE43902.2021.00081
   FILIERI A, 2013, ASSURANCES SELF ADAP, V7740, P30, DOI DOI 10.1007/978-3-642-36249-1
   Filieri A, 2016, IEEE T SOFTWARE ENG, V42, P75, DOI 10.1109/TSE.2015.2421318
   Filieri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P341, DOI 10.1145/1985793.1985840
   Franks G, 2009, IEEE T SOFTWARE ENG, V35, P148, DOI 10.1109/TSE.2008.74
   Gainer P, 2018, LECT NOTES COMPUT SC, V11138, P300, DOI 10.1007/978-3-030-01090-4_18
   Gerasimou S, 2018, AUTOMAT SOFTW ENG, V25, P785, DOI 10.1007/s10515-018-0235-8
   Gerasimou S, 2015, IEEE INT CONF AUTOM, P319, DOI 10.1109/ASE.2015.22
   Ghezzi Carlo, 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P170, DOI 10.1109/SPLC.2011.33
   Ghezzi C, 2013, INFORM SOFTWARE TECH, V55, P508, DOI 10.1016/j.infsof.2012.07.017
   Hahn Ernst Moritz, 2011, International Journal on Software Tools for Technology Transfer, V13, P3, DOI 10.1007/s10009-010-0146-x
   Hahn EM, 2014, LECT NOTES COMPUT SC, V8442, P312, DOI 10.1007/978-3-319-06410-9_22
   Hahn EM, 2011, LECT NOTES COMPUT SC, V6617, P146, DOI 10.1007/978-3-642-20398-5_12
   Hahn EM, 2010, LECT NOTES COMPUT SC, V6174, P660, DOI 10.1007/978-3-642-14295-6_56
   Hajnal M, 2019, LECT NOTES COMPUT SC, V11705, P147, DOI 10.1007/978-3-030-28042-0_10
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Hezavehi SM, 2021, ACM T AUTON ADAP SYS, V15, DOI 10.1145/3487921
   Jansen N, 2014, LECT NOTES COMPUT SC, V8657, P404, DOI 10.1007/978-3-319-10696-0_31
   Kretínsky J, 2020, LOG METH COMPUT SCI, V16, DOI 10.23638/LMCS-16(4:3)2020
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Lanna A, 2018, INFORM SOFTWARE TECH, V94, P59, DOI 10.1016/j.infsof.2017.10.001
   Lindemann C., 1998, Perform. Eval. Rev., V26, P3
   Mendonça DF, 2016, INFORM SOFTWARE TECH, V80, P245, DOI 10.1016/j.infsof.2016.09.005
   Paterson C, 2020, IEEE T SOFTWARE ENG, V46, P526, DOI 10.1109/TSE.2018.2864159
   Perez-Palacin D, 2010, ELECTRON NOTES THEOR, V261, P181, DOI 10.1016/j.entcs.2010.01.012
   Quatmann T, 2016, LECT NOTES COMPUT SC, V9938, P50, DOI 10.1007/978-3-319-46520-3_4
   Selman B., 2006, Encyclopedia of cognitive science, DOI DOI 10.1002/0470018860.S00015
   Solano GF, 2019, 2019 IEEE/ACM 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2019), P89, DOI 10.1109/SEAMS.2019.00020
   Su GX, 2016, PROC INT CONF SOFTW, P73, DOI 10.1145/2884781.2884814
   Sun CA, 2010, J SYST SOFTWARE, V83, P502, DOI 10.1016/j.jss.2009.10.011
NR 56
TC 0
Z9 0
U1 2
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2023
VL 49
IS 10
BP 4707
EP 4730
DI 10.1109/TSE.2023.3313645
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA Y1NF7
UT WOS:001102997400011
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Hu, YT
   Fang, YL
   Sun, YF
   Jia, YR
   Wu, YM
   Zou, DQ
   Jin, H
AF Hu, Yutao
   Fang, Yilin
   Sun, Yifan
   Jia, Yaru
   Wu, Yueming
   Zou, Deqing
   Jin, Hai
TI Code2Img: Tree-Based Image Transformation for Scalable Code Clone
   Detection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Code clone; clone detection; scalability
ID NEURAL-NETWORK; SEARCH; MODEL
AB Code clone detection is an active research domain of software engineering. There are two core demands for clone detection: scalable detection and complicated clone detection. For scalable detection, existing approaches treat the source code as a text or token sequence and then calculate their similarity. However, the text-based and token-based approaches are difficult to detect complicated clone types due to the lack of consideration of code structure. The methods based on intermediate representations of code can effectively achieve complex clone types detection but are limited by the complexity of representations to be scalable. In this paper, we propose Code2Img, a tree-based code clone detector, which satisfies scalability while detecting complicated clones effectively. Given the source code, we first perform clone filtering by the inverted index to locate the suspected clones. For each suspected clone, we create the adjacency image based on the adjacency matrix of the normalized abstract syntax tree (AST). Then we design an image encoder to highlight the structural details further and refine pixels of the image. Specifically, we employ the Markov model to encode the adjacency image into a state probability image and remove its useless pixels. By this, the original complex tree can be transformed into a one-dimensional vector while preserving the structural feature of the AST. Finally, we detect clones by calculating the Jaccard Similarity of these vectors. We conduct comparative evaluations on effectiveness and scalability with eight other state-of-the-art clone detectors (SourcererCC, NIL, LVMapper, Nicad, Siamese, CCAligner, Deckard, and Yang2018). The experimental results show that Code2Img achieves the best performance among all the comparative tools in terms of both detection effectiveness and scalability. It indicates that Code2Img can be applicable to scalable complicated clone detection.
C1 [Hu, Yutao; Fang, Yilin; Sun, Yifan; Jia, Yaru; Zou, Deqing] Huazhong Univ Sci & Technol, Hubei Engn Res Ctr Big Data Secur, Sch Cyber Sci & Engn, Natl Engn Res Ctr Big Data Technol & Syst,Serv Com, Wuhan 430074, Peoples R China.
   [Wu, Yueming] Nanyang Technol Univ, Sch Comp Sci & Engn, Singapore 639798, Singapore.
   [Jin, Hai] Huazhong Univ Sci & Technol, Sch Comp Sci & Technol, Cluster & Grid Comp Lab, Natl Engn Res Ctr Big Data Technol & Syst,Serv Com, Wuhan 430074, Peoples R China.
C3 Huazhong University of Science & Technology; Nanyang Technological
   University; Huazhong University of Science & Technology
RP Wu, YM (corresponding author), Nanyang Technol Univ, Sch Comp Sci & Engn, Singapore 639798, Singapore.
EM yutaohu@hust.edu.cn; yilinfang@hust.edu.cn; sunyifan@hust.edu.cn;
   yrjia@hust.edu.cn; wuyueming21@gmail.com; deqingzou@hust.edu.cn;
   hjin@hust.edu.cn
RI Sun, Yifan/AFH-2942-2022; Wu, Yueming/KFS-2587-2024
OI Sun, Yifan/0000-0002-0801-7697; Wu, Yueming/0000-0002-1515-3558; Fang,
   Yilin/0009-0004-7095-7366
FU National Science Foundation of China [62172168]; Hubei Province Key
   Ramp;D Technology Special Innovation Project [2021BAA032]
FX This work was supported in part by the National Science Foundation of
   China under Grant 62172168 and in part by Hubei Province Key R & D
   Technology Special Innovation Project under Grant 2021BAA032.
CR Al-Ekram R, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P363, DOI 10.1109/ISESE.2005.1541846
   [Anonymous], CLOC COUNT LINES COD
   [Anonymous], 2014, Javaparser
   [Anonymous], Bigclonebench
   [Anonymous], 2022, Ambient Software Evolution Group: IJaDataset 2.0
   BALDI P, 1993, NEURAL COMPUT, V5, P402, DOI 10.1162/neco.1993.5.3.402
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   BENGIO Y, 1992, IEEE T NEURAL NETWOR, V3, P252, DOI 10.1109/72.125866
   Blackducks, about us
   fossanalytics, About Us
   Gharehyazie M, 2017, IEEE WORK CONF MIN S, P291, DOI 10.1109/MSR.2017.15
   github, Google Code
   Göde N, 2009, EUR CON SFTWR MTNCE, P219, DOI 10.1109/CSMR.2009.20
   Harris M., 2007, GPU GEMS, V3, P851
   Hua W, 2021, IEEE T RELIAB, V70, P304, DOI 10.1109/TR.2020.3001918
   Ishihara T., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P387, DOI 10.1109/WCRE.2012.48
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kamiya Toshihiro, 2021, Code Clone Analysis: Research, Tools, and Practices, P31
   Li GH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P272, DOI [10.1109/saner48275.2020.9054832, 10.1109/SANER48275.2020.9054832]
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Lopes CV, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133908
   Mondal M, 2017, INT WORKS SOFTW CLON, P38
   Mou LL, 2015, Arxiv, DOI arXiv:1409.5718
   Nakagawa T, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P830, DOI 10.1145/3468264.3468564
   Nishi MA, 2018, J SYST SOFTWARE, V137, P130, DOI 10.1016/j.jss.2017.11.039
   nvidia, about us
   Ossher J., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P283, DOI 10.1109/ICSM.2011.6080795
   Ragkhitwetsagul C, 2019, EMPIR SOFTW ENG, V24, P2236, DOI 10.1007/s10664-019-09697-7
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy J. R., 2007, QUEENS SCH COMPUTING, V541, P64
   Saini V, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P354, DOI 10.1145/3236024.3236026
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Scantist, about us
   Svajlenko J, 2017, PROC IEEE ACM INT C, P177, DOI 10.1109/ICSE-C.2017.78
   Svajlenko J, 2015, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2015.7332459
   Svajlenko J, 2013, INT WORKS SOFTW CLON, P16, DOI 10.1109/IWSC.2013.6613037
   Wang PC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1066, DOI 10.1145/3180155.3180179
   Wang Tiantian, 2013, P 2013 9 JOINT M FDN, P455
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/SANER48275.2020.9054857, 10.1109/saner48275.2020.9054857]
   Wang Xiao, 2022, arXiv
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   WIGSTROM H, 1974, KYBERNETIK, V16, P103, DOI 10.1007/BF00271633
   Wu C., 2019, Sci. China Inf. Sci., V62, P1
   Wu M, 2020, IEEE ACCESS, V8, P27986, DOI 10.1109/ACCESS.2020.2971545
   Wu YM, 2020, IEEE INT CONF AUTOM, P821, DOI 10.1145/3324884.3416562
   Yang YM, 2018, P INT COMP SOFTW APP, P286, DOI 10.1109/COMPSAC.2018.00045
   Yin WP, 2017, Arxiv, DOI [arXiv:1702.01923, DOI 10.48550/ARXIV.1702.01923]
   Yutao H., 2022, P IEEE ACM 37 INT C, P1
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhao G, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/3236024.3236068
NR 52
TC 2
Z9 2
U1 3
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2023
VL 49
IS 9
BP 4429
EP 4442
DI 10.1109/TSE.2023.3295801
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA S4DL9
UT WOS:001070689400008
DA 2024-07-18
ER

PT J
AU Wang, YH
   Liu, HX
   Gao, SQ
   Tang, X
AF Wang, Yihui
   Liu, Huaxiao
   Gao, Shanquan
   Tang, Xiao
TI Animation2API: API Recommendation for the Implementation of Android UI
   Animations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE User interface; UI animation; API recommendation
AB UI animations, such as card movement and menu slide in/out, provide appealing user experience and enhance the usability of mobile applications. In the process of UI animation implementation, it is difficult for developers to identify suitable APIs for the animation to be implemented from a large number of APIs. Fortunately, the huge app market contains millions of apps, and they can provide valuable data resources for solving this problem. By summarizing the API usage for the same or similar animations in apps, reusable knowledge can be mined for the API recommendation. In this paper, we propose a novel method Animation2API, which mines the knowledge about APIs from existing apps and recommends APIs for UI animations. Different from existing text-based API recommendation approaches, Animation2API takes the UI animation in GIF/video format as query input. Firstly, we construct a database containing mappings between UI animations and APIs by analyzing a broad set of apps. Then, we build a UI animation feature extractor, which can be used to gain temporal-spatial feature vectors of UI animations. By comparing the temporal-spatial feature vectors between UI animations, we identify animations that are similar to the query animation from the database. Finally, we summarize the APIs used for implementing these animations and recommend a list of APIs for developers. The empirical evaluation results show that our method can achieve 82.66% Success rate and outperform the baseline Guru by 230.77% and 184.95% in terms of Precision and Recall when considering twenty APIs. In the user study, we take the scenarios of using web search and ChatGPT to implement animations as baselines, and the results show that participants can complete animations faster (14.54%) after using Animation2API. Furthermore, participants' positive feedbacks on the questionnaire indicate the usefulness of Animation2API.
C1 [Wang, Yihui; Liu, Huaxiao; Tang, Xiao] Jilin Univ, Coll Comp Sci & Technol, Jilin 130012, Peoples R China.
   [Wang, Yihui; Liu, Huaxiao; Tang, Xiao] Jilin Univ, Key Lab Symbol Comp & Knowledge Engn, Minist Educ, Jilin 130012, Peoples R China.
   [Gao, Shanquan] Yanshan Univ, Sch Informat Sci & Engn, Qinhuangdao 066004, Peoples R China.
C3 Jilin University; Jilin University; Yanshan University
RP Liu, HX (corresponding author), Jilin Univ, Coll Comp Sci & Technol, Jilin 130012, Peoples R China.; Liu, HX (corresponding author), Jilin Univ, Key Lab Symbol Comp & Knowledge Engn, Minist Educ, Jilin 130012, Peoples R China.
EM liuhuaxiao@jlu.edu.cn
OI liu, huaxiao/0000-0002-8151-1413
FU Jilin Provincial Natural Science Foundation; Fundamental Research Funds
   for the Central Universities [20230101070JC]; National Natural Science
   Foundation of China (NSFC) [2022-JCXK-16]; Science and Technology
   Research Project of Education Department of JiLin Province of China
   [62102160];  [JJKH20211104KJ]
FX The work was supported in part by the Jilin Provincial Natural Science
   Foundation under Grant 20230101070JC, in part by the Fundamental
   Research Funds for the Central Universities under Grant JLU
   (2022-JCXK-16), in part by the National Natural Science Foundation of
   China (NSFC)under Grant 62102160, and in part by Science and Technology
   Research Project of Education Department of JiLin Province of China
   under Grant JJKH20211104KJ.
CR Abid Shamsa, 2022, ESEC/FSE 2022: Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P1647, DOI 10.1145/3540250.3558937
   Adobe, Company of Science and Art. "Adobe after effects.
   Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   Android Developers, Write automated tests with UI Automator
   Baldi P., 2012, P ICML WORKSH UNS TR, P37
   Beltramelli T, 2018, PROCEEDINGS OF THE ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS (EICS'18), DOI 10.1145/3220134.3220135
   Berger J. O., 1985, STAT DECISION THEORY, DOI DOI 10.1007/978-1-4757-4286-2
   Bertasius G, 2021, PR MACH LEARN RES, V139
   Cai L, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1075, DOI 10.1145/3338906.3341174
   Cao KB, 2021, PROC INT CONF SOFTW, P1273, DOI 10.1109/ICSE43902.2021.00116
   Chen CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P665, DOI 10.1145/3180155.3180222
   Chen JS, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3391613
   Chen M, 2021, IEEE T BIG DATA, V7, P750, DOI 10.1109/TBDATA.2017.2717439
   Chen QY, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3434280
   Deka B, 2017, UIST'17: PROCEEDINGS OF THE 30TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P845, DOI 10.1145/3126594.3126651
   Desnos A., 2013, Google Code, V153
   Tran D, 2015, IEEE I CONF COMP VIS, P4489, DOI 10.1109/ICCV.2015.510
   framer, What is Framer?
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   He XC, 2021, PROC INT CONF SOFTW, P1634, DOI 10.1109/ICSE43902.2021.00145
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Huhtala J, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1339
   Ji SW, 2013, IEEE T PATTERN ANAL, V35, P221, DOI 10.1109/TPAMI.2012.59
   KEYS RG, 1981, IEEE T ACOUST SPEECH, V29, P1153, DOI 10.1109/TASSP.1981.1163711
   Khoshgoftaar T.M., 2009, ADV ARTIFICIAL INTEL, DOI [10.1155/2009/421425, DOI 10.1155/2009/421425]
   Kim S, 2021, PROC INT CONF SOFTW, P150, DOI 10.1109/ICSE43902.2021.00026
   Kit E., Export Kit
   Kraft JF, 2017, PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON HUMAN-COMPUTER INTERACTION WITH MOBILE DEVICES AND SERVICES (MOBILEHCI '17), DOI 10.1145/3098279.3098566
   Li L, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P153, DOI 10.1145/3213846.3213857
   Li L, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P584, DOI 10.1109/SANER.2016.51
   Liddle D., 2016, P 34 ACM INT C DES C, P1
   Liu XY, 2018, IEEE INT CONF AUTOM, P282, DOI 10.1145/3238147.3238216
   Merz Benedikt, 2016, CHI EA ' 16), P3152, DOI [10.1145/2851581.2892489, DOI 10.1145/2851581.2892489]
   Moran K, 2020, IEEE T SOFTWARE ENG, V46, P196, DOI 10.1109/TSE.2018.2844788
   Nathan Manousos K. O., Flinto
   Nguyen PT, 2021, IEEE T SOFTWARE ENG, V48, P2417, DOI 10.1109/TSE.2021.3059907
   Nguyen PT, 2019, PROC INT CONF SOFTW, P1050, DOI 10.1109/ICSE.2019.00109
   Niu HR, 2017, J SYST SOFTWARE, V129, P127, DOI 10.1016/j.jss.2016.07.026
   Novick D., 2011, P 29 ACM INT C DES C
   Qianyao Xu, 2020, Human-Computer Interaction. Design and User Experience. Thematic Area, HCI 2020 Held as Part of the 22nd International Conference, HCII 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12181), P498, DOI 10.1007/978-3-030-49059-1_37
   Radford A., 2019, LANGUAGE MODELS ARE
   Rahman MM, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P349, DOI 10.1109/SANER.2016.80
   Schlienger C, 2007, LECT NOTES COMPUT SC, V4662, P207
   Sirres R, 2018, EMPIR SOFTW ENG, V23, P2622, DOI 10.1007/s10664-017-9544-y
   Su T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P245, DOI 10.1145/3106237.3106298
   Nguyen TT, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P65, DOI 10.1145/3183399.3183422
   Nguyen T, 2016, PROC INT CONF SOFTW, P416, DOI 10.1145/2884781.2884873
   Thomas B. H., 2001, ACM Transactions on Computer-Human Interaction, V8, P198, DOI 10.1145/502907.502909
   Thung F, 2013, IEEE INT CONF AUTOM, P290, DOI 10.1109/ASE.2013.6693088
   Turpin A., 2006, Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P11, DOI 10.1145/1148170.1148176
   Vaswani A, 2017, ADV NEUR IN, V30
   Vincent P., 2008, INT C MACH LEARN ICM, P1096, DOI [10.1145/1390156.1390294, DOI 10.1145/1390156.1390294]
   Vincent P, 2010, J MACH LEARN RES, V11, P3371
   Wikipedia, ChatGPT
   Wu ZM, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376324
   Xu CY, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P119, DOI 10.1109/ICSE-Companion.2019.00053
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Yu HB, 2016, 8TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2016), P45, DOI 10.1145/2993717.2993727
   Yuan WZ, 2019, INFORM SOFTWARE TECH, V107, P30, DOI 10.1016/j.infsof.2018.10.010
   Zhang C, 2012, PROC INT CONF SOFTW, P826, DOI 10.1109/ICSE.2012.6227136
   Zhao DH, 2020, PROC INT CONF SOFTW, P1286, DOI 10.1145/3377811.3380411
   Zhao YJ, 2023, IEEE T SOFTWARE ENG, V49, P113, DOI [10.1109/TSE.2022.3146831, 10.1109/IECON49645.2022.9968601]
   Zhao YJ, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106619
NR 64
TC 1
Z9 1
U1 5
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2023
VL 49
IS 9
BP 4411
EP 4428
DI 10.1109/TSE.2023.3294971
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA S4DL9
UT WOS:001070689400007
DA 2024-07-18
ER

PT J
AU Bousy, IP
   Barr, ET
   Clark, D
AF Bousy, Iason Papapanagiotakis
   Barr, Earl T. T.
   Clark, David
TI PopArt: Ranked Testing Efficiency
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; randomness; systematic; efficiency; probability
   distribution
ID SYMBOLIC EXECUTION; PARTITION; PROGRAM; MODEL; NUMBER
AB Too often, programmers are under pressure to maximize their confidence in the correctness of their code with a tight testing budget. Should they spend some of that budget on finding "interesting" inputs or spend their entire testing budget on test executions? Work on testing efficiency has explored two competing approaches to answer this question: systematic partition testing (ST), which defines a testing partition and tests its parts, and random testing (RT), which directly samples inputs with replacement. A consensus as to which is better when has yet to emerge. We present Probability Ordered Partition Testing (PopArt), a new systematic partition-based testing strategy that visits the parts of a testing partition in decreasing probability order and in doing so leverages any non-uniformity over that partition. We show how to construct a homogeneous testing partition, a requirement for systematic testing, by using an executable oracle and the path partition. A program's path partition is a naturally occurring testing partition that is usually skewed for the simple reason that some paths execute more frequently than others. To confirm this conventional wisdom, we instrument programs from the Codeflaws repository and find that 80% of them have a skewed path probability distribution. PopArt visits the parts of a testing partition in decreasing probability order. We then compare PopArt with RT to characterise the configuration space in which each is more efficient. We show that, when simulating Codeflaws, PopArt outperforms RT after $100{,}000$100,000 executions. Our results reaffirm RT's power for very small testing budgets but also show that for any application requiring high (above 90%) probability-weighted coverage PopArt should be preferred. In such cases, despite paying more for each test execution, we prove that PopArt outperforms RT: it traverses parts whose cumulative probability bounds that of random testing, showing that sampling without replacement pays for itself, given a nonuniform probability over a testing partition.
C1 [Bousy, Iason Papapanagiotakis; Barr, Earl T. T.; Clark, David] UCL, Dept Comp Sci, London WC1E 6BT, England.
C3 University of London; University College London
RP Bousy, IP (corresponding author), UCL, Dept Comp Sci, London WC1E 6BT, England.
EM iason.pap@ucl.ac.uk; e.barr@ucl.ac.uk; david.clark@ucl.ac.uk
OI Barr, Earl Theodore/0000-0003-0771-7891; Clark,
   David/0000-0002-7004-934X
FU EPSRC funded research Project [EP/P005888/1]; EPSRC [EP/P005888/1]
   Funding Source: UKRI
FX This work was supported by EPSRC funded research Project under Grant
   EP/P005888/1 Information Theory and Test Suite Selection.
CR AMMANN P, 1994, COMPASS '94 - PROCEEDINGS OF THE NINTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P69, DOI 10.1109/CMPASS.1994.318466
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P258, DOI 10.1109/TSE.2011.121
   Barvinok A., 2007, GEOMETRIC COMBINATOR
   BARVINOK AI, 1994, MATH OPER RES, V19, P769, DOI 10.1287/moor.19.4.769
   Böhme M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P632, DOI 10.1145/2635868.2635923
   Böhme M, 2016, IEEE T SOFTWARE ENG, V42, P345, DOI 10.1109/TSE.2015.2487274
   Böhme M, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P713, DOI 10.1145/3368089.3409729
   Böhme M, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P678, DOI 10.1145/3368089.3409748
   Böhme M, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3210309
   Böhme M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2329, DOI 10.1145/3133956.3134020
   Boyapati C., 2002, Software Engineering Notes, V27, P123, DOI 10.1145/566171.566191
   Brennan T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P535, DOI 10.1145/3106237.3106303
   Brooks P. A., 2007, Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering, P333
   Brown J. R., 1975, SIGPLAN Notices, V10, P518, DOI 10.1145/390016.808475
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Cha SK, 2015, P IEEE S SECUR PRIV, P725, DOI 10.1109/SP.2015.50
   Chen TY, 1996, IEEE T SOFTWARE ENG, V22, P109, DOI 10.1109/32.485221
   CHEN TY, 1994, IEEE T SOFTWARE ENG, V20, P977, DOI 10.1109/32.368132
   Chen TY, 2001, J SYST SOFTWARE, V58, P65, DOI 10.1016/S0164-1212(01)00028-0
   Ciupa I, 2011, SOFTW TEST VERIF REL, V21, P3, DOI 10.1002/stvr.415
   De Loera JA, 2004, J SYMB COMPUT, V38, P1273, DOI 10.1016/j.jsc.2003.04.003
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Emmi M., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P151
   Eva B, 2019, J PHILOS, V116, P390, DOI 10.5840/jphil2019116724
   Ferrante M, 2014, Materials Matematics, V2014, P1
   Filieri A, 2015, IEEE INT CONF AUTOM, P703, DOI 10.1109/ASE.2015.78
   Filieri A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P437, DOI 10.1145/2635868.2635899
   Filieri A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P622, DOI 10.1109/ICSE.2013.6606608
   Garousi V, 2016, INFORM SOFTWARE TECH, V76, P92, DOI 10.1016/j.infsof.2016.04.015
   Gay Gregory., 2014, Proceedings of the 7th International Workshop on Search-Based Software Testing. SBST 2014, P19
   Geldenhuys J., 2012, PROC INT S SOFTW TES
   Godefroid P, 2017, IEEE INT CONF AUTOM, P50, DOI 10.1109/ASE.2017.8115618
   Godefroid P, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P206, DOI 10.1145/1375581.1375607
   Gomes CP, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2293
   Gomes CP, 2009, FRONT ARTIF INTEL AP, V185, P633, DOI 10.3233/978-1-58603-929-5-633
   Gopinath D, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P282, DOI 10.1109/ICSE-Companion.2019.00115
   Gross H.-G., 2005, Component-Based Software Testing with UML
   Gutjahr WJ, 1999, IEEE T SOFTWARE ENG, V25, P661, DOI 10.1109/32.815325
   HAMLET D, 1990, IEEE T SOFTWARE ENG, V16, P1402, DOI 10.1109/32.62448
   HAMLET R, 1989, ACM SIGSOFT, V14, P28, DOI 10.1145/75309.75313
   Hamlet R., 2002, ENCY SOFTWARE ENG, P970, DOI [10.1002/0471028959.sof268, DOI 10.1002/0471028959.SOF268]
   He JX, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P531, DOI 10.1145/3319535.3363230
   Jiménez DA, 2005, ACM SIGPLAN NOTICES, V40, P107, DOI 10.1145/1064978.1065025
   Kalibera T, 2013, PROCEEDINGS OF THE ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT (ISMM '13), P63
   Kuhn R, 2020, COMPUTER, V53, P37, DOI 10.1109/MC.2019.2959918
   Larus JR, 1999, ACM SIGPLAN NOTICES, V34, P259, DOI 10.1145/301631.301678
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Lyu M., 1996, Handbook of Software Reliability Engineering
   Musa J. D., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P334, DOI 10.1109/ISSRE.1994.341399
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   OHagan A., 2006, Uncertain judgements: Eliciting experts' probabilities
   Olsthoorn M, 2020, IEEE INT CONF AUTOM, P1224, DOI 10.1145/3324884.3418930
   Pasareanu CS, 2013, AUTOMAT SOFTW ENG, V20, P391, DOI 10.1007/s10515-013-0122-2
   Pasareanu Corina S., 2008, P 2008 INT S SOFTW T, P15, DOI [DOI 10.1145/1390630.1390635, DOI 10.1145/1390630]
   Rafi D. M., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P36, DOI 10.1109/IWAST.2012.6228988
   Rajan A, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P161, DOI 10.1145/1368088.1368111
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Serebryany Kostya, 2017, OSS-Fuzz-Google's continuous fuzzing service for open source software
   Sharma R, 2011, LECT NOTES COMPUT SC, V6603, P262, DOI 10.1007/978-3-642-19811-3_19
   Souza M, 2011, LECT NOTES COMPUT SC, V6617, P359, DOI 10.1007/978-3-642-20398-5_26
   Staats M, 2012, LECT NOTES COMPUT SC, V7212, P409, DOI 10.1007/978-3-642-28872-2_28
   Sutton M., 2007, Fuzzing: brute force vulnerability discovery
   Takanen A, 2018, ADV TOP SCI TECH CHI, P1
   Tan SH, 2017, PROC IEEE ACM INT C, P180, DOI 10.1109/ICSE-C.2017.76
   Thevenod-Fosse Pascale., 1991, Software Testing, Verification and Reliability, V1, P5
   TSOUKALAS MZ, 1993, IEEE T SOFTWARE ENG, V19, P687, DOI 10.1109/32.238569
   Ung D., 2001, Computer Architecture News, V29, P55, DOI 10.1145/373574.373590
   Visser W., 2004, Software Engineering Notes, V29, P97, DOI 10.1145/1013886.1007526
   Visser W, 2012, P FSE, P58, DOI DOI 10.1145/2393596.2393665
   Visser W, 2017, SOUTH AFRICAN INSTITUTE OF COMPUTER SCIENTISTS AND INFORMATION TECHNOLOGISTS (SACSIT 2017), P319, DOI 10.1145/3129416.3129433
   Weisberg J., 2021, The Stanford Encyclopedia of Philosophy
   WEYUKER EJ, 1980, IEEE T SOFTWARE ENG, V6, P236, DOI 10.1109/TSE.1980.234485
   WEYUKER EJ, 1991, IEEE T SOFTWARE ENG, V17, P703, DOI 10.1109/32.83906
   Whittaker J., 1992, PROC 25 HAWAII INT C, P428
   WHITTAKER JA, 1994, IEEE T SOFTWARE ENG, V20, P812, DOI 10.1109/32.328991
   Whittaker JA, 2000, COMPUTER, V33, P36, DOI 10.1109/2.889091
   Wikipedia contributors, 2021, CURV FITT WIK FREE E
   Wikipedia contributors, 2021, COUP COLL PROBL WIK
   Wikipedia contributors, 2021, ZIPF MAND LAW WIK FR
   Zeller A., 2021, The fuzzing book
NR 82
TC 0
Z9 0
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2221
EP 2238
DI 10.1109/TSE.2022.3214796
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600045
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cao, YL
   Chen, L
   Ma, WWY
   Li, YH
   Zhou, YM
   Wang, LZ
AF Cao, Yulu
   Chen, Lin
   Ma, Wanwangying
   Li, Yanhui
   Zhou, Yuming
   Wang, Linzhang
TI Towards Better Dependency Management: A First Look at Dependency Smells
   in Python Projects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Python; Software; Codes; Libraries; Ecosystems; Maintenance engineering;
   Data mining; Cross-project dependency; dependency smell; python
ID EVOLUTION
AB Managing cross-project dependencies is tricky in modern software development. A primary way to manage dependencies is using dependency configuration files, which brings convenience to the entire software ecosystem, including developers, maintainers, and users. However, developers may introduce dependency smells if dependency configuration files are not well written and maintained. Dependency smells are recurring violations of dependency management in dependency configuration files and can potentially lead to severe consequences. This paper provides an in-depth look at three dependency smells, namely, Missing Dependency, Bloated Dependency, and Version Constraint Inconsistency in Python projects. First, we implement a tool called Python Cross-project Dependency- PyCD to accurately extract dependency information from configuration files. The evaluation result on 212 Python projects shows that PyCD outperforms state-of-the-art tools. Then, we make an empirical study for three dependency smells in 132 Python projects to investigate the pervasiveness, causes, and evolution. The results show that: 1) dependency smells are prevalent in Python projects and exist inconsistently in different projects; 2) dependency smells are introduced into Python projects for different reasons, mainly due to the problems of synchronous update and collaborative development; and 3) dependency smells can be removed with different patterns according to different dependency smells. Furthermore, we report and get responses for 40 harmful dependency smell instances, 34 of which have been responded that these dependency smells do exist in the projects, and 10 instances are fixed or under process. The feedback from developers indicates that dependency smells can have a negative impact on project maintenance. Our study highlights that these dependency smells deserve the attention of developers.
C1 [Cao, Yulu; Chen, Lin; Li, Yanhui; Zhou, Yuming; Wang, Linzhang] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
   [Ma, Wanwangying] Huawei Technol Co Ltd, Shenzhen 518129, Peoples R China.
C3 Nanjing University; Huawei Technologies
RP Chen, L (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
EM suliuzh@163.com; lchen@nju.edu.cn; wwyma@smail.nju.edu.cn;
   yanhuili@nju.edu.cn; zhouyuming@nju.edu.cn; lzwang@nju.edu.cn
OI Cao, Yulu/0000-0002-6623-1165; Li, Yanhui/0000-0003-2282-7175; Wang,
   Linzhang/0000-0003-4794-1652
FU National Natural Science Foundation of China [61872177, 62172202,
   62172205]; Cooperation Fund of Huawei-Nanjing University Next Generation
   Programming Innovation Lab [YBN2019105178SW23]
FX The work was supported in part by the National Natural Science
   Foundation of China under Grants 61872177, 62172202, and 62172205 and in
   part by the Cooperation Fund of Huawei-Nanjing University Next
   Generation Programming Innovation Lab under Grant YBN2019105178SW23.
CR Abate P, 2012, J SYST SOFTWARE, V85, P2228, DOI 10.1016/j.jss.2012.02.018
   Ajienka N, 2017, INT SYMP EMP SOFTWAR, P141, DOI 10.1109/ESEM.2017.21
   [Anonymous], 2020, GITHUBS DEPENDENCY G
   [Anonymous], 2004, MODULARITY DEV EVOLU
   Artho C., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P141, DOI 10.1109/MSR.2012.6224274
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Bavota G, 2013, PROC IEEE INT CONF S, P280, DOI 10.1109/ICSM.2013.39
   Bogart C, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447245
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Chen ZF, 2020, INT C PROGRAM COMPRE, P83, DOI 10.1145/3387904.3389253
   Claes M., 2018, Software Technology, P35, DOI DOI 10.1002/9781119174240.CH3
   Cogo FR, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09980-6
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   Decan A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P2, DOI 10.1109/SANER.2017.7884604
   Decan A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P493, DOI 10.1109/SANER.2016.12
   Dietrich Jens, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P349, DOI 10.1109/MSR.2019.00061
   Fan G., 2020, P 29 ACM SIGSOFT INT, P463, DOI [DOI 10.1145/3395363.3397388, 10.1145/3395363.3397388]
   Golzadeh Mehdi, 2019, ESEC/FSE 2019: Proceedings of the 2019 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P1226, DOI 10.1145/3338906.3342497
   Han J, 2012, MOR KAUF D, P1
   Hejderup J, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P101, DOI 10.1145/3183399.3183417
   Horton E, 2019, Arxiv, DOI arXiv:1905.11127
   Huang KF, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P518, DOI 10.1145/3368089.3409689
   Jafari AJ, 2022, IEEE T SOFTWARE ENG, V48, P3790, DOI 10.1109/TSE.2021.3106247
   Kim DJ, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09969-1
   Li ZH, 2019, PROC INT CONF SOFTW, P152, DOI 10.1109/ICSE.2019.00032
   Libraries.io, 2020, US
   Ma WWY, 2016, PROCEEDINGS 2016 THIRD INTERNATIONAL CONFERENCE ON TRUSTWORTHY SYSTEMS AND THEIR APPLICATIONS (TSA), P87, DOI 10.1109/TSA.2016.23
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Paixao M, 2017, IEEE INT CONF AUTOM, P95, DOI 10.1109/ASE.2017.8115622
   Pashchenko I, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1513, DOI 10.1145/3372297.3417232
   Pimentel JF, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09961-9
   Prana GAA, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09959-3
   python, 2021, PEP 440
   Rahman A, 2019, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2019.00033
   Soto-Valero C, 2020, Arxiv, DOI arXiv:2001.07808
   Soto-Valero C, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1021, DOI 10.1145/3468264.3468589
   Nguyen T, 2016, PROC INT CONF SOFTW, P416, DOI 10.1145/2884781.2884873
   Tamburri DA, 2021, IEEE T SOFTWARE ENG, V47, P630, DOI 10.1109/TSE.2019.2901490
   Vu DL, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P780, DOI 10.1145/3468264.3468592
   Wang JW, 2021, PROC INT CONF SOFTW, P1622, DOI 10.1109/ICSE43902.2021.00144
   Wang Y, 2020, Arxiv, DOI arXiv:2006.07633
   Wang Y, 2020, PROC INT CONF SOFTW, P125, DOI 10.1145/3377811.3380426
   Wang Y, 2020, PROC IEEE INT CONF S, P35, DOI 10.1109/ICSME46990.2020.00014
   Wang Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P319, DOI 10.1145/3236024.3236056
   Zerouali Ahmed, 2021, arXiv
NR 45
TC 5
Z9 6
U1 4
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1741
EP 1765
DI 10.1109/TSE.2022.3191353
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600019
DA 2024-07-18
ER

PT J
AU Jiang, YJ
   Liu, H
   Luo, XQ
   Zhu, ZH
   Chi, XY
   Niu, N
   Zhang, YX
   Hu, YM
   Bian, P
   Zhang, L
AF Jiang, Yanjie
   Liu, Hui
   Luo, Xiaoqing
   Zhu, Zhihao
   Chi, Xiaye
   Niu, Nan
   Zhang, Yuxia
   Hu, Yamin
   Bian, Pan
   Zhang, Lu
TI BugBuilder: An Automated Approach to Building Bug Repository
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Maintenance engineering; Software; Control systems;
   Location awareness; Codes; Software testing; Bug; defect; testing;
   patch; repository; dataset; refactoring
ID SOFTWARE; DEVELOPERS
AB Bug-related research, e.g., fault localization, program repair, and software testing, relies heavily on high-quality and large-scale software bug repositories. The importance of such repositories is twofold. On one side, real-world bugs and their associated patches may inspire novel approaches for finding, locating, and repairing software bugs. On the other side, the real-world bugs and their patches are indispensable for rigorous and meaningful evaluation of approaches to software testing, fault localization, and program repair. To this end, a number of software bug repositories, e.g., iBUGS and Defects4J, have been constructed recently by mining version control systems and bug tracking systems. However, fully automated construction of bug repositories by simply taking bug-fixing commits from version control systems often results in inaccurate patches that contain many bug-irrelevant changes. Although we may request experts or developers to manually exclude the bug-irrelevant changes (as the authors of Defects4J did), such extensive human intervention makes it difficult to build large-scale bug repositories. To this end, in this paper, we propose an automatic approach, called BugBuilder, to construct bug repositories from version control systems. Different from existing approaches, it automatically extracts complete and concise bug-fixing patches and excludes bug-irrelevant changes. It first detects and excludes software refactorings involved in bug-fixing commits. BugBuilder then enumerates all subsets of the remaining part, and discards invalid subsets by compilation and software testing. If exactly a single subset survives the validation, this subset is taken as the complete and concise bug-fixing patch for the associated bug. In case multiple subsets survive, BugBuilder employs a sequence of heuristics to select the most likely one. Evaluation results on 809 real-world bug-fixing commits in Defects4J suggest that BugBuilder successfully extracted complete and concise bug-fixing patches from forty-three percent of the bug-fixing commits, and its precision (99%) was even higher than human experts. We also built a bug repository, called GrowingBugs, with the proposed approach. The resulting repository serves as evidence of the usefulness of the proposed approach, as well as a publicly available benchmark for bug-related research.
C1 [Jiang, Yanjie; Liu, Hui; Luo, Xiaoqing; Zhu, Zhihao; Chi, Xiaye; Zhang, Yuxia; Hu, Yamin] Beijing Inst Technol, Sch Comp Sci & Technol, Beijing 100081, Peoples R China.
   [Niu, Nan] Univ Cincinnati, Dept EECS, Cincinnati, OH 45221 USA.
   [Bian, Pan] Huawei Technol Co Ltd, Shenzhen 518129, Guangdong, Peoples R China.
   [Zhang, Lu] Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing 100871, Peoples R China.
C3 Beijing Institute of Technology; University System of Ohio; University
   of Cincinnati; Huawei Technologies; Peking University
RP Liu, H (corresponding author), Beijing Inst Technol, Sch Comp Sci & Technol, Beijing 100081, Peoples R China.
EM 2990094974@qq.com; liuhui08@bit.edu.cn; ccluo33@163.com;
   2899329254@qq.com; chixiaye@icloud.com; nan.niu@uc.edu;
   yuxiazh@bit.edu.cn; ymhu@bit.edu.cn; bianpan@huawei.com;
   zhanglu@sei.pku.edu.cn
RI Yang, han/KFS-2671-2024; wang, qiang/IZW-1751-2023; Wang,
   Yitong/KBA-1959-2024; Zhang, Lijun/JEZ-7925-2023; huang,
   libo/JMB-4345-2023; liu, huan/JEO-4705-2023; Zhang, Yihao/JGM-3514-2023;
   Shi, Yaolin/JXN-8322-2024; zheng, Li/JVN-7465-2024; chen,
   xian/KHW-2227-2024; zhang, lm/JWP-8874-2024; Yang, Yifan/JTV-1487-2023;
   zhang, ling/JXW-6931-2024; li, yifan/JHU-9272-2023; yang,
   peng/JEZ-8452-2023; wang, yitian/JFA-6804-2023; zhang,
   zheng/KBQ-7815-2024; zhang, xu/JEO-4879-2023; LI, Xiang/JBJ-8387-2023;
   zhao, lin/JPK-8436-2023; Luo, Xiaoqing/AAM-2176-2021; Liu,
   yujing/JQI-7225-2023; Ma, Xiaodong/JAN-7473-2023; Zhang,
   Wenli/JXL-4317-2024; Wang, Chen/JZE-6385-2024; LIU, HAO/JBI-9623-2023;
   yuanyuan, Li/JEZ-6497-2023; Wang, lili/IXD-9828-2023; LIU,
   HUI/JPX-8014-2023; li, jincheng/GQP-6856-2022
OI Zhang, Lu/0000-0001-8304-7055; Niu, Nan/0000-0001-5566-2368; Liu,
   Hui/0000-0002-3267-6801
FU National Natural Science Foundation of China [62172037]; CCF-Huawei
   Formal Verification Innovation Research Plan
FX This work was supported in part by the National Natural Science
   Foundation of China under Grant 62172037 and in part by CCF-Huawei
   Formal Verification Innovation Research Plan.
CR Almogahed A, 2021, J INF COMMUN TECHNOL, V20, P511, DOI 10.32890/jict2021.20.4.3
   atlasofplaces, 2021, US
   Böhme M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P117, DOI 10.1145/3106237.3106255
   bugzilla, 2021, US
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   Daniel B, 2009, IEEE INT CONF AUTOM, P433, DOI 10.1109/ASE.2009.17
   Dig D, 2008, IEEE T SOFTWARE ENG, V34, P321, DOI 10.1109/TSE.2008.29
   Dinella E., 2020, INT C LEARN REPR ICL
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Durieux T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P302, DOI 10.1145/3338906.3338911
   eclipse, 2021, US
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   github, 2021, about us
   github, about us
   Github, 2022, About us
   Google, 2021, About us
   Gyimesi P, 2019, IEEE INT CONF SOFTW, P90, DOI 10.1109/ICST.2019.00019
   Hamdi O, 2021, 2021 IEEE/ACM 8TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2021), P28, DOI 10.1109/MobileSoft52590.2021.00010
   He H, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P72, DOI 10.1109/SANER50967.2021.00016
   Herbold S., 2021, A Fine-grained Data Set and Analysis of Tangling in Bug Fixing Commits
   issues.apache, 2021, US
   Jeffrey D, 2009, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2009.5090029
   Jiang YJ, 2021, PROC INT CONF SOFTW, P686, DOI 10.1109/ICSE43902.2021.00069
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kaur S, 2021, ARCH COMPUT METHOD E, V28, P3087, DOI 10.1007/s11831-020-09491-5
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kim M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/1985793.1985815
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Lee J, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P61, DOI 10.1145/3213846.3213856
   Li X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P169, DOI 10.1145/3293882.3330574
   Li Y, 2020, PROC INT CONF SOFTW, P602, DOI 10.1145/3377811.3380345
   Lin D., 2017, INT C SYSTEMS PROGRA, P55
   Lu Shan, 2005, P WORKSH EV SOFTW DE
   Madeiral F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P468, DOI [10.1109/saner.2019.8667991, 10.1109/SANER.2019.8667991]
   Majd A, 2020, EXPERT SYST APPL, V147, DOI 10.1016/j.eswa.2019.113156
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Mei H, 2018, SCI CHINA INFORM SCI, V61, DOI 10.1007/s11432-017-9355-3
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Nam J, 2019, INFORM SOFTWARE TECH, V112, P164, DOI 10.1016/j.infsof.2019.04.014
   Palomba F, 2017, INT C PROGRAM COMPRE, P176, DOI 10.1109/ICPC.2017.38
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Peruma A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10045-x
   Saha RK, 2018, IEEE WORK CONF MIN S, P10, DOI 10.1145/3196398.3196473
   Silva D, 2017, IEEE WORK CONF MIN S, P269, DOI 10.1109/MSR.2017.14
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   sourceforge, 2021, about us
   Spacco J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083149
   storage.googleapis, 2021, US
   Tan SH, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P187, DOI 10.1145/3180155.3180243
   Tan SH, 2017, PROC IEEE ACM INT C, P180, DOI 10.1109/ICSE-C.2017.76
   Tan SH, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P471, DOI 10.1109/ICSE.2015.65
   Thung F, 2013, WORK CONF REVERSE EN, P92, DOI 10.1109/WCRE.2013.6671284
   Tomassi DA, 2019, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2019.00048
   Tsantalis N, 2022, IEEE T SOFTWARE ENG, V48, P930, DOI 10.1109/TSE.2020.3007722
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Weissgerber P, 2006, IEEE INT CONF AUTOM, P231
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xiong YF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P789, DOI 10.1145/3180155.3180182
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Zhimin He, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P45, DOI 10.1109/ESEM.2013.20
   Zhong H, 2022, IEEE T SOFTWARE ENG, V48, P571, DOI 10.1109/TSE.2020.2996975
NR 65
TC 3
Z9 4
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1443
EP 1463
DI 10.1109/TSE.2022.3177713
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600004
DA 2024-07-18
ER

PT J
AU Li, YK
   Soliman, M
   Avgeriou, P
   Somers, L
AF Li, Yikun
   Soliman, Mohamed
   Avgeriou, Paris
   Somers, Lou
TI Self-Admitted Technical Debt in the Embedded Systems Industry: An
   Exploratory Case Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Source coding; Software; Codes; Industries; Interviews; Embedded
   systems; Documentation; Technical debt; self-admitted technical debt;
   mining software repositories; source code comment; issue tracking
   system; commit; empirical study
AB Technical debt denotes shortcuts taken during software development, mostly for the sake of expedience. When such shortcuts are admitted explicitly by developers (e.g., writing a TODO/Fixme comment), they are termed as Self-Admitted Technical Debt or SATD. There has been a fair amount of work studying SATD management in Open Source projects, but SATD in industry is relatively unexplored. At the same time, there is no work focusing on developers' perspectives towards SATD and its management. To address this, we conducted an exploratory case study in cooperation with an industrial partner to study how they think of SATD and how they manage it. Specifically, we collected data by identifying and characterizing SATD in different sources (issues, source code comments, and commits) and carried out a series of interviews with 12 software practitioners. The results show: 1) the core characteristics of SATD in industrial projects; 2) developers' attitudes towards identified SATD and statistics; 3) triggers for practitioners to introduce and repay SATD; 4) relations between SATD in different sources; 5) practices used to manage SATD; 6) challenges and tooling ideas for SATD management.
C1 [Li, Yikun; Soliman, Mohamed; Avgeriou, Paris] Univ Groningen, Bernoulli Inst Math, Comp Sci & Artificial Intelligence, NL-9712 CP Groningen, Netherlands.
   [Somers, Lou] Eindhoven Univ Technol, Dept Math & Comp Sci, NL-5612 AZ Eindhoven, Netherlands.
C3 University of Groningen; Eindhoven University of Technology
RP Li, YK (corresponding author), Univ Groningen, Bernoulli Inst Math, Comp Sci & Artificial Intelligence, NL-9712 CP Groningen, Netherlands.
EM yikun.li@rug.nl; m.a.m.soliman@rug.nl; p.avgeriou@rug.nl;
   l.j.a.m.somers@tue.nl
OI Li, Yikun/0000-0002-1566-725X; Avgeriou, Paris/0000-0002-7101-0754
FU ITEA3; RVO [17038]
FX This work was supported by ITEA3 and RVO under Grant 17038
   VISDOM(https://visdom-project.github.io/website).
CR Alhefdhi A, 2022, Arxiv, DOI arXiv:2012.12466
   AlOmar EA, 2022, SCI COMPUT PROGRAM, V213, DOI 10.1016/j.scico.2021.102693
   Atlassian Corporation PLC, 2022, DEF PRIOR FIELD VAL
   Atlassian Corporation PLC, 2022, WHAT AR ISS TYP
   Avgeriou P, 2016, Dagstuhl reports, V6, DOI DOI 10.4230/DAGREP.6.4.110
   Bellomo S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P327, DOI [10.1145/2901739.2901754, 10.1109/MSR.2016.041]
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Chen X, 2022, IEEE T RELIAB, V71, P1309, DOI 10.1109/TR.2021.3087864
   Dai K., 2017, QUASOQ APSEC, P59
   Farias MAD, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106270
   Farias MAD, 2017, LECT NOTES BUS INF P, V291, P284, DOI 10.1007/978-3-319-62386-3_14
   de Lima BS, 2022, SOFTWARE QUAL J, V30, P729, DOI 10.1007/s11219-021-09578-7
   DeJonckheere M, 2019, FAM MED COMMUNITY HE, V7, DOI 10.1136/fmch-2018-000057
   Ebert C, 2009, COMPUTER, V42, P42, DOI 10.1109/MC.2009.118
   Flisar J, 2019, IEEE ACCESS, V7, P106475, DOI 10.1109/ACCESS.2019.2933318
   Graaf H, 2003, IEEE SOFTWARE, V20, P61, DOI 10.1109/MS.2003.1241368
   Guo ZQ, 2019, Arxiv, DOI arXiv:1910.13238
   Guo ZQ, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447247
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   Iammarino M, 2021, J SYST SOFTWARE, V178, DOI 10.1016/j.jss.2021.110976
   Iammarino M, 2019, PROC IEEE INT CONF S, P186, DOI 10.1109/ICSME.2019.00029
   Kamei E.d.S., 2016, QUASOQ TDA APSEC, P68
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Li YK, 2023, Arxiv, DOI arXiv:2202.02387
   Li YK, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10128-3
   Li YK, 2020, EUROMICRO CONF PROC, P495, DOI 10.1109/SEAA51224.2020.00083
   Liu ZX, 2018, PROC IEEE ACM INT C, P9, DOI 10.1145/3183440.3183478
   Maipradit R, 2020, IEEE INT WORK C SO, P54, DOI 10.1109/SCAM51674.2020.00011
   Maipradit R, 2020, EMPIR SOFTW ENG, V25, P3770, DOI 10.1007/s10664-020-09854-3
   Maldonado ED, 2017, PROC IEEE INT CONF S, P238, DOI 10.1109/ICSME.2017.8
   Maldonado ED, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P9, DOI 10.1109/MTD.2015.7332619
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mensah S, 2018, J SYST SOFTWARE, V135, P37, DOI 10.1016/j.jss.2017.09.026
   Mensah Solomon, 2016, PROC CEUR WORKSHOP P, V1771, P72
   Microsoft Corporation, 2022, DEF FEAT EP AZ BOARD
   Passos AFD, 2015, PROCEEDINGS OF THE 17TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY (SBQS), P21, DOI 10.1145/3275245.3275248
   Phaithoon S, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1257, DOI 10.1109/ASE51524.2021.9678680
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Rantala L, 2020, EUROMICRO CONF PROC, P385, DOI 10.1109/SEAA51224.2020.00069
   Rantala L, 2020, SOFTWARE QUAL J, V28, P1551, DOI 10.1007/s11219-020-09520-3
   Ren XX, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3324916
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Russo B, 2022, Arxiv, DOI arXiv:2205.02208
   Sala I, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P278, DOI 10.1145/3463274.3464455
   Santos R. M., 2021, PROC INT C ENTERPRIS, P542
   Santos RM, 2020, PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS (ICEIS), VOL 2, P157, DOI 10.5220/0009796001570165
   Seidman I., 2006, Interviewing as Qualitative Research: A Guide for Researchers in Education and the Social Sciences
   Sierra G, 2019, J SYST SOFTWARE, V152, P70, DOI 10.1016/j.jss.2019.02.056
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Strauss A.L., 1990, BASICS QUALITATIVE R
   Tu T. Menzies, 2022, EMPIR SOFTW ENG, V27, P1
   Van Solingen Rini, 2002, ENCY SOFTWARE ENG, V2002, P528
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang X, 2020, IEEE INT CONF AUTOM, P871, DOI 10.1145/3324884.3416583
   Wattanakriengkrai S, 2019, ASIA PAC SOFWR ENG, P316, DOI 10.1109/APSEC48747.2019.00050
   Wattanakriengkrai S, 2018, INT WORKSH EMPIR ENG, P7, DOI 10.1109/IWESEP.2018.00010
   Xavier L, 2020, IEEE WORK CONF MIN S, P137, DOI 10.1145/3379597.3387459
   Xiao T, 2021, Arxiv, DOI arXiv:2102.09775
   Yamashita A, 2015, PROC IEEE INT CONF S, P121, DOI 10.1109/ICSM.2015.7332458
   Yan M, 2019, IEEE T SOFTWARE ENG, V45, P1211, DOI 10.1109/TSE.2018.2831232
   Yu DJ, 2021, FRONT COMPUT SCI-CHI, V15, DOI 10.1007/s11704-020-9281-z
   Yu JJ, 2022, J SYST SOFTWARE, V187, DOI 10.1016/j.jss.2022.111219
   Yu Z, 2022, IEEE T SOFTWARE ENG, V48, P1676, DOI 10.1109/TSE.2020.3031401
   Zampetti F, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10031-3
   Zampetti F, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P355, DOI [10.1109/SANER48275.2020.9054868, 10.1109/saner48275.2020.9054868]
   Zampetti F, 2018, IEEE WORK CONF MIN S, P526, DOI 10.1145/3196398.3196423
   Zampetti F, 2017, PROC IEEE INT CONF S, P216, DOI 10.1109/ICSME.2017.44
   Zhu K., 2021, J PHYS
   Zhuang GQ, 2022, J INTERNET TECHNOL, V23, P631, DOI 10.53106/160792642022052303021
NR 70
TC 6
Z9 6
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2545
EP 2565
DI 10.1109/TSE.2022.3224378
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600065
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Pan, WF
   Ming, H
   Kim, DK
   Yang, ZJ
AF Pan, Weifeng
   Ming, Hua
   Kim, Dae-Kyoo
   Yang, Zijiang
TI Pride: Prioritizing Documentation Effort Based on a PageRank-Like
   Algorithm and Simple Filtering Rules
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Documentation; Couplings; Software; Software metrics; Java; Task
   analysis; Code documentation; program comprehension; software
   maintenance; PageRank; software metrics
ID KEY CLASSES; COMPREHENSION; FRAMEWORK; CONTEXT; METRICS
AB Code documentation can be helpful in many software quality assurance tasks. However, due to resource constraints (e.g., time, human resources, and budget), programmers often cannot document their work completely and timely. In the literature, two approaches (one is supervised and the other is unsupervised) have been proposed to prioritize documentation effort to ensure the most important classes to be documented first. However, both of them contain several limitations. The supervised approach overly relies on a difficult-to-obtain labeled data set and has high computation cost. The unsupervised one depends on a graph representation of the software structure, which is inaccurate since it neglects many important couplings between classes. In this paper, we propose an improved approach, named Pride, to prioritize documentation effort. First, Pride uses a weighted directed class coupling network to precisely describe classes and their couplings. Second, we propose a PageRank-like algorithm to quantify the importance of classes in the whole class coupling network. Third, we use a set of software metrics to quantify source code complexity and further propose a simple but easy-to-operate filtering rule. Fourth, we sort all the classes according to their importance in descending order and use the filtering rule to filter out unimportant classes. Finally, a threshold k is utilized, and the top -k% ranked classes are the identified important classes to be documented first. Empirical results on a set of nine software systems show that, according to the average ranking of the Friedman test, Pride is superior to the existing approaches in the whole data set.
C1 [Pan, Weifeng] Zhejiang Gongshang Univ, Sch Comp Sci & Informat Engn, Hangzhou 310018, Zhejiang, Peoples R China.
   [Ming, Hua; Kim, Dae-Kyoo] Oakland Univ, Sch Engn & Comp Sci, Rochester, MI 48309 USA.
   [Yang, Zijiang] Xi An Jiao Tong Univ, Sch Comp Sci, Xian 710049, Shaanxi, Peoples R China.
   [Yang, Zijiang] Guard Strike Inc, Xian 710049, Shaanxi, Peoples R China.
C3 Zhejiang Gongshang University; Oakland University; Xi'an Jiaotong
   University
RP Pan, WF (corresponding author), Zhejiang Gongshang Univ, Sch Comp Sci & Informat Engn, Hangzhou 310018, Zhejiang, Peoples R China.; Ming, H (corresponding author), Oakland Univ, Sch Engn & Comp Sci, Rochester, MI 48309 USA.
EM wfpan@zjgsu.edu.cn; ming@oakland.edu; kim2@oakland.edu;
   zijiang@xjtu.edu.cn
RI Kim, Daekyoo/HGE-1133-2022
OI Kim, Daekyoo/0000-0002-6123-2900; /0000-0001-6355-1385
FU Natural Science Foundation of Zhejiang Province [LY22F020007]; National
   Natural Science Foundation of China [62032010, 61832014]; Key R&D
   Program of Zhejiang Province [2019C01004, 2019C03123]
FX This work was supported in part by the Natural Science Foundation of
   Zhejiang Province under Grant LY22F020007, in part by the National
   Natural Science Foundation of China under Grants 62032010 and 61832014,
   and in part by the Key R & D Program of Zhejiang Province under Grants
   2019C01004 and 2019C03123.
CR Abbas M, 2019, ASIA PAC SOFWR ENG, P31, DOI 10.1109/APSEC48747.2019.00014
   Abreu FB, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P47, DOI 10.1109/CSMR.2001.914968
   Alqmase M, 2019, J COMPUT SCI TECH-CH, V34, P1063, DOI 10.1007/s11390-019-1960-6
   Amarjeet, 2017, INFORM SOFTWARE TECH, V82, P96, DOI 10.1016/j.infsof.2016.09.011
   [Anonymous], 2004, P VLDB2004
   [Anonymous], 2013, PageRank with Priors: an Influence Propagation Perspective
   Bianchini M., 2005, ACM Transactions on Internet Technology, V5, P92, DOI 10.1145/1052934.1052938
   Briand L, 1997, PROC INT CONF SOFTW, P412, DOI 10.1145/253228.253367
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   Brito e Abreu F., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P13, DOI 10.1109/CSMR.2000.827300
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Bruel JM, 2001, OOIS 2001: 7TH INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED INFORMATION SYSTEMS, PROCEEDINGS, P5
   Chandra A. K., 1985, Journal of Logic Programming, V2, P1, DOI 10.1016/0743-1066(85)90002-0
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Corritore CL, 2001, INT J HUM-COMPUT ST, V54, P1, DOI 10.1006/ijhc.2000.0423
   e Abreu F. B., 1995, P EUR C OBJ OR PROGR
   García S, 2010, INFORM SCIENCES, V180, P2044, DOI 10.1016/j.ins.2009.12.010
   García S, 2008, J MACH LEARN RES, V9, P2677
   Gori M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2766
   Hagan MT, 1997, NEURAL NETWORK DESIG
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Hammad Maen, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P148, DOI 10.1109/ICPC.2010.31
   Hashemi A, 2020, EXPERT SYST APPL, V142, DOI 10.1016/j.eswa.2019.113024
   Haveliwala T., 1999, 386 STANF
   Haveliwala TH, 2003, IEEE T KNOWL DATA EN, V15, P784, DOI 10.1109/TKDE.2003.1208999
   Hirsch JE, 2005, P NATL ACAD SCI USA, V102, P16569, DOI 10.1073/pnas.0507655102
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Jin Y, 2009, P INT COMP SOFTW APP, P361, DOI 10.1109/COMPSAC.2009.55
   Kang DZ, 2004, INT WKSHP FUT TR DIS, P222
   Kumar G., 2011, 2011 2nd International Conference on Computer and Communication Technology, P11, DOI 10.1109/ICCCT.2011.6075206
   Langville A. N., 2003, Internet Math, V1, P335, DOI DOI 10.1080/15427951.2004.10129091
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   Li YH, 2006, IEEE T KNOWL DATA EN, V18, P1138, DOI 10.1109/TKDE.2006.130
   Lin Tan, 2007, Operating Systems Review, V41, P145, DOI 10.1145/1323293.1294276
   Linstead E, 2009, DATA MIN KNOWL DISC, V18, P300, DOI 10.1007/s10618-008-0118-x
   Liu SR, 2021, INFORM SOFTWARE TECH, V140, DOI 10.1016/j.infsof.2021.106686
   Ma YT, 2010, J COMPUT SCI TECH-CH, V25, P1184, DOI 10.1007/s11390-010-9398-x
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   McBurney PW, 2018, IEEE T SOFTWARE ENG, V44, P897, DOI 10.1109/TSE.2017.2716950
   McBurney PW, 2016, IEEE T SOFTWARE ENG, V42, P103, DOI 10.1109/TSE.2015.2465386
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Meyer P, 2014, ADV COMPLEX SYST, V17, DOI 10.1142/S0219525915500046
   Niu N, 2016, IEEE T CYBERNETICS, V46, P1962, DOI 10.1109/TCYB.2015.2419811
   Osman H, 2013, PROC IEEE INT CONF S, P140, DOI 10.1109/ICSM.2013.25
   Page L., 1999, PAGERANK CITATION RA
   Pan WF, 2021, IEEE T SOFTWARE ENG, V47, P2272, DOI 10.1109/TSE.2019.2946357
   Pan WF, 2018, FUTURE GENER COMP SY, V81, P188, DOI 10.1016/j.future.2017.10.006
   Perin F., 2010, PROC 4 WORKSHOP FAMI, P1
   Peters DK, 1998, IEEE T SOFTWARE ENG, V24, P161, DOI 10.1109/32.667877
   Pfeiffer RH, 2021, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR52588.2021.00017
   Puppin D., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1409, DOI 10.1145/1141277.1141605
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   Saaty T.L, 1980, Advanced Optimization and Decision-Making Techniques in Textile Manufacturing, DOI DOI 10.1201/9780429504419-2
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Shin Hwei Tan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P260, DOI 10.1109/ICST.2012.106
   Sora I, 2019, INFORM SOFTWARE TECH, V116, DOI 10.1016/j.infsof.2019.106176
   Steidl D., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P93, DOI 10.1109/WCRE.2012.19
   Suzuki S, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P380, DOI 10.1109/SEAA.2017.24
   Takai Y, 2020, KDD '20: PROCEEDINGS OF THE 26TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P1970, DOI 10.1145/3394486.3403248
   Thung F., 2014, P 22 INT C PROGR COM, P110, DOI 10.1145/2597008.2597157
   Treude C, 2017, PROC IEEE INT CONF S, P509, DOI 10.1109/ICSME.2017.24
   Tsantalis N, 2005, IEEE T SOFTWARE ENG, V31, P601, DOI 10.1109/TSE.2005.83
   [王木生 Wang Musheng], 2011, [计算机科学与探索, Journal of Frontiers of Computer Science & Technology], V5, P891
   WOLVERTO.RW, 1974, IEEE T COMPUT, VC 23, P615, DOI 10.1109/T-C.1974.224002
   Xie T, 2006, LECT NOTES COMPUT SC, V4067, P380
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Yang XL, 2016, P INT COMP SOFTW APP, P22, DOI 10.1109/COMPSAC.2016.83
   Zaidman A, 2008, J SOFTW MAINT EVOL-R, V20, P387, DOI 10.1002/smr.370
   Zhang MS, 2021, IEEE T SOFTWARE ENG, V47, P1089, DOI 10.1109/TSE.2019.2911283
NR 70
TC 10
Z9 10
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2023
VL 49
IS 3
BP 1118
EP 1151
DI 10.1109/TSE.2022.3171469
PG 34
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA A1QF2
UT WOS:000952938700010
DA 2024-07-18
ER

EF