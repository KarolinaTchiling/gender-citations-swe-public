FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Choetkiertikul, M
   Dam, HK
   Tran, T
   Ghose, A
   Grundy, J
AF Choetkiertikul, Morakot
   Dam, Hoa Khanh
   Truyen Tran
   Ghose, Aditya
   Grundy, John
TI Predicting Delivery Capability in Iterative Software Development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Mining software engineering repositories; empirical software
   engineering; iterative software development
ID ENSEMBLES; NETWORKS; TIME
AB Iterative software development has become widely practiced in industry. Since modern software projects require fast, incremental delivery for every iteration of software development, it is essential to monitor the execution of an iteration, and foresee a capability to deliver quality products as the iteration progresses. This paper presents a novel, data-driven approach to providing automated support for project managers and other decision makers in predicting delivery capability for an ongoing iteration. Our approach leverages a history of project iterations and associated issues, and in particular, we extract characteristics of previous iterations and their issues in the form of features. In addition, our approach characterizes an iteration using a novel combination of techniques including feature aggregation statistics, automatic feature learning using the Bag-of-Words approach, and graph-based complexity measures. An extensive evaluation of the technique on five large open source projects demonstrates that our predictive models outperform three common baseline methods in Normalized Mean Absolute Error and are highly accurate in predicting the outcome of an ongoing iteration.
C1 [Choetkiertikul, Morakot; Dam, Hoa Khanh; Ghose, Aditya] Univ Wollongong, Fac Engn & Informat Sci, Sch Comp & Informat Technol, Wollongong, NSW 2522, Australia.
   [Truyen Tran; Grundy, John] Deakin Univ, Sch Informat Technol, Geelong, Vic 3216, Australia.
C3 University of Wollongong; Deakin University
RP Choetkiertikul, M (corresponding author), Univ Wollongong, Fac Engn & Informat Sci, Sch Comp & Informat Technol, Wollongong, NSW 2522, Australia.
EM mc650@uow.edu.au; hoa@uow.edu.au; truyen.tran@deakin.edu.au;
   aditya@uow.edu.au; j.grundy@deakin.edu.au
RI Dam, Hoa Khanh/C-6058-2014; Choetkiertikul, Morakot/AAN-8822-2020;
   Grundy, John/AAF-1716-2019
OI Choetkiertikul, Morakot/0000-0001-8188-4749; Grundy,
   John/0000-0003-4928-7076; Tran, Truyen/0000-0001-6531-8907
CR Abrahamsson Pekka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P344
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], 2004, Software Engineering and Knowledge Engineering
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2006, Proceedings of the 12th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P424, DOI [DOI 10.1145/1150402.1150450, 10.1145/1150402.1150450]
   [Anonymous], 2008, Proceedings of the 4th international workshop on Predictor models in software engineering, DOI [DOI 10.1145/1370788.1370804, 10.1145/1370788.1370804]
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   [Anonymous], 2008, P 7 ACM INT C IMAGE
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Baccianella S, 2009, INT CONF INTELL SYST, P283, DOI 10.1109/ISDA.2009.230
   Benediktsson O, 2003, SOFTWARE QUAL J, V11, P265, DOI 10.1023/A:1025809010217
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Bettencourt N., 2012, Proceedings of the 2nd International Conference on Web Intelligence, Mining and Semantics - WIMS'12, page, P1
   Bhattacharya P, 2012, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2012.6227173
   Bhattacharya Pamela., 2011, PROCEEDING 8 WORKING, P207, DOI DOI 10.1145/1985441.1985472
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Cervone H. Frank, 2011, OCLC Systems & Services, V27, P18, DOI 10.1108/10650751111106528
   Choetkiertikul M, 2015, IEEE INT CONF AUTOM, P353, DOI 10.1109/ASE.2015.55
   Choetkiertikul M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P280, DOI 10.1109/MSR.2015.33
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cohn M., 2005, Agile Estimating and Planning
   Conte S. D., 1986, SOFTW ENG METRICS MO
   da Costa DA, 2014, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSME.2014.50
   Dietterich TG, 2000, MACH LEARN, V40, P139, DOI 10.1023/A:1007607513941
   Dietterich TG, 2000, LECT NOTES COMPUT SC, V1857, P1, DOI 10.1007/3-540-45014-9_1
   Esbensen KH, 2010, J CHEMOMETR, V24, P168, DOI 10.1002/cem.1310
   Everson RM, 2006, PATTERN RECOGN LETT, V27, P918, DOI 10.1016/j.patrec.2005.10.016
   Fang C, 2012, DECIS SUPPORT SYST, V52, P635, DOI 10.1016/j.dss.2011.10.021
   Fernández-Delgado M, 2014, J MACH LEARN RES, V15, P3133
   Flyvbjerg B, 2011, HARVARD BUS REV, V89, P23, DOI 10.2139/ssrn.2229735
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   Friedman JH, 2002, COMPUT STAT DATA AN, V38, P367, DOI 10.1016/S0167-9473(01)00065-2
   Galar M, 2012, IEEE T SYST MAN CY C, V42, P463, DOI 10.1109/TSMCC.2011.2161285
   Genuer R, 2010, PATTERN RECOGN LETT, V31, P2225, DOI 10.1016/j.patrec.2010.03.014
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Goldberg K, 2001, INFORM RETRIEVAL, V4, P133, DOI 10.1023/A:1011419012209
   Halawani Sami M., 2011, Journal of Computer Sciences, V7, P387, DOI 10.3844/jcssp.2011.387.393
   Hearty P, 2009, IEEE T SOFTWARE ENG, V35, P124, DOI 10.1109/TSE.2008.76
   Hu Y, 2013, DECIS SUPPORT SYST, V56, P439, DOI 10.1016/j.dss.2012.11.001
   Huang L., 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, P163, DOI DOI 10.1145/1858996
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jurman G, 2012, PLOS ONE, V7, DOI 10.1371/journal.pone.0036540
   Kaufman S, 2012, ACM T KNOWL DISCOV D, V6, DOI 10.1145/2382577.2382579
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Marks Lionel, 2011, P 7 INT C PRED MOD S
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   McCallum D.R., 1982, Proceedings of ACM, P44
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   Michael B., 2012, MCKINSEY Q
   Mockus A, 2003, PROC INT CONF SOFTW, P274, DOI 10.1109/ICSE.2003.1201207
   Moreno García MN, 2008, EXPERT SYST APPL, V34, P522, DOI 10.1016/j.eswa.2006.09.022
   Opitz D., 1999, J ARTIF INTELL RES, V11, P169, DOI DOI 10.1613/JAIR.614
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Perkusich Mirko., 2013, SAC'13: Proceedings of the 28th Annual ACM Symposium on Applied Computing, page, P1037
   Port D, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P51
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Rahman MM, 2009, INT SYMP EMP SOFTWAR, P440
   Rokach L, 2009, COMPUT STAT DATA AN, V53, P4046, DOI 10.1016/j.csda.2009.07.017
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Torkar R., 2010, P 21 IEEE INT S SOFT, P1
   Tumer K., 1996, Connection Science, V8, P385, DOI 10.1080/095400996116839
   Tumer K, 2003, PATTERN ANAL APPL, V6, P65, DOI 10.1007/s10044-002-0181-7
   Tuv E, 2009, J MACH LEARN RES, V10, P1341
   Usman M., 2014, PROMISE '14: Proceedings of the 10th International Conference on Predictive Models in Software Engineering, page, P82
   Usman M., 2015, P 19 INT C EVALUATIO, P1, DOI DOI 10.1145/2745802.2745813
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Williams L, 2012, COMMUN ACM, V55, P71, DOI 10.1145/2133806.2133823
   Xia X, 2015, INFORM SOFTWARE TECH, V61, P93, DOI 10.1016/j.infsof.2014.12.006
   Xia X, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P174, DOI 10.1109/CSMR-WCRE.2014.6747167
   Xu ZH, 2007, COMM COM INF SC, V2, P266
   Zegura EW, 1996, IEEE INFOCOM SER, P594, DOI 10.1109/INFCOM.1996.493353
   Zimmermann T, 2012, PROC INT CONF SOFTW, P1074, DOI 10.1109/ICSE.2012.6227112
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 88
TC 32
Z9 34
U1 3
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2018
VL 44
IS 6
BP 551
EP 573
DI 10.1109/TSE.2017.2693989
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GJ4FE
UT WOS:000435335100003
DA 2024-07-18
ER

PT J
AU Martin, W
   Sarro, F
   Jia, Y
   Zhang, YY
   Harman, M
AF Martin, William
   Sarro, Federica
   Jia, Yue
   Zhang, Yuanyuan
   Harman, Mark
TI A Survey of App Store Analysis for Software Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE App store; analysis; mining; API; feature; release planning;
   requirements engineering; reviews; security; ecosystem
ID MOBILE APPS; USER REVIEWS; CHALLENGES; USAGE
AB App Store Analysis studies information about applications obtained from app stores. App stores provide a wealth of information derived from users that would not exist had the applications been distributed via previous software deployment methods. App Store Analysis combines this non-technical information with technical information to learn trends and behaviours within these forms of software repositories. Findings from App Store Analysis have a direct and actionable impact on the software teams that develop software for app stores, and have led to techniques for requirements engineering, release planning, software design, security and testing. This survey describes and compares the areas of research that have been explored thus far, drawing out common aspects, trends and directions future research should take to address open problems and challenges.
C1 [Martin, William; Sarro, Federica; Jia, Yue; Zhang, Yuanyuan; Harman, Mark] UCL, Dept Comp Sci, London WC1E 6B, England.
C3 University of London; University College London
RP Martin, W (corresponding author), UCL, Dept Comp Sci, London WC1E 6B, England.
EM w.martin@ucl.ac.uk; f.sarro@ucl.ac.uk; yue.jia@ucl.ac.uk;
   yuanyuan.zhang@ucl.ac.uk; mark.harman@ucl.ac.uk
OI Sarro, Federica/0000-0002-9146-442X
FU EPRSC [EP/J017515]; EPSRC [EP/J017515/1] Funding Source: UKRI
FX We thank the anonymous reviewers for their very helpful feedback, and
   our many colleagues who responded with their valuable comments on an
   earlier version of this survey. This research was supported by EPRSC
   (DAASE grant no. EP/J017515).
CR Abdullah NAS, 2014, IEEE CONF OPEN SYST, P42, DOI 10.1109/ICOS.2014.7042407
   Abu Bakar Normi Sham Awang, 2013, 2013 International Conference on Advanced Computer Science Applications and Technologies (ACSAT), P406, DOI 10.1109/ACSAT.2013.86
   Agarwal N, 2014, P ANN HICSS, P4739, DOI 10.1109/HICSS.2014.582
   Al-Subaihin A., 2015, P 3 INT WORKSH SOFTW, P1, DOI DOI 10.1145/2804345.2804346
   Al-Subaihin AA, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962600
   Albanesius C., 2012, MOBILE APP REV GOOGL
   Alharbi K, 2015, P 17 INT C HUM COMP, P515, DOI DOI 10.1145/2785830.2785892
   Ali K., 2012, KDD 12 P 18 ACM SIGK, P204
   Amazon. com, 2013, AM MEC TURK
   [Anonymous], 2015, P 31 ANN COMP SEC AP
   [Anonymous], 2014, LNICST, DOI DOI 10.1007/978-3-319-05452-04
   [Anonymous], 2011, Proceedings of the 13th international conference on Human computer interaction with mobile devices and services, DOI [10.1145/2037373.2037383, DOI 10.1145/2037373.2037383]
   [Anonymous], 2013, Proceeding of the 11th annual international conference on Mobile systems, applications, and services, DOI [10.1145/2462456.2464461, DOI 10.1145/2462456.2464461]
   [Anonymous], 2015, THESIS
   [Anonymous], NON TRADITIONAL REF
   [Anonymous], 2010, P USENIX S OP SYST D
   [Anonymous], PROC 24 US NIX CONF
   Arp D, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23247
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Askalidis G., 2015, COMPUTING RES REPOSI, P1
   Au Kathy Wain Yee, 2012, P 2012 ACM C COMP CO, P217
   Avdiienko V, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P426, DOI 10.1109/ICSE.2015.61
   Azad Shams Abubakar, 2015, THESIS
   Bakar Normi Sham Awang Abu, 2013, Lecture Notes on Software Engineering, V1, P219, DOI 10.7763/LNSE.2013.V1.49
   Barrera D, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P73, DOI 10.1145/1866307.1866317
   Bartel A, 2014, IEEE T SOFTWARE ENG, V40, P617, DOI 10.1109/TSE.2014.2322867
   Bastani O, 2015, ACM SIGPLAN NOTICES, V50, P299, DOI [10.1145/2858965.2814274, 10.1145/2814270.2814274]
   Batyuk L., 2011, 2011 6th International Conference on Malicious and Unwanted Software, P66, DOI 10.1109/MALWARE.2011.6112328
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Ben Lulu DL, 2016, MOB INF SYST, V2016, DOI 10.1155/2016/3083450
   Berardi G, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P585, DOI 10.1145/2695664.2695997
   Bhattacharya P, 2013, EUR CON SFTWR MTNCE, P133, DOI 10.1109/CSMR.2013.23
   Bhoraskar R, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P1021
   Blasing Thomas, 2010, 2010 5th International Conference on Malicious and Unwanted Software (MALWARE 2010), P55, DOI 10.1109/MALWARE.2010.5665792
   Book T., 2013, COMPUTING RES REPOSI, P1
   Borges HS, 2015, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.12
   Butler M, 2011, IEEE PERVAS COMPUT, V10, P4, DOI 10.1109/MPRV.2011.1
   Callaham J., 2015, Google says there are 1.4 billion active android devices worldwide
   Carbunar B, 2015, PROCEEDINGS OF THE 2015 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM 2015), P242, DOI 10.1145/2808797.2808823
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Cen L., 2015, P 2015 SIAM INT C DA, DOI [10.1137/1.9781611974010.74, DOI 10.1137/1.9781611974010.74]
   Cen L., 2014, PIR SIGIR
   Cen L, 2015, IEEE T DEPEND SECURE, V12, P400, DOI 10.1109/TDSC.2014.2355839
   Chakradeo S., 2013, Proceedings of ACM Conference on Security and Privacy in Wireless and Mobile Networks WiSec, P13
   Chandy R.H. Gu., 2012, P 2 JOINT WICOWAIRWE, P56
   Chen M., 2011, P 2011 ICONFERENCE I, P661, DOI DOI 10.1145/1940761.1940859
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Chendev Yu. G., 2013, PROBLEMS ENV MANAGEM, P201, DOI DOI 10.1145/2488388.2488407
   Chia PernHui., 2012, WWW 12 P 21 INT C WO, P311, DOI [10.1145/2187836.2187879, DOI 10.1145/2187836.2187879]
   Cocco Luisanna, 2014, Mobile Web Information Systems. 11th International Conference (MobiWIS 2014). Proceedings: LNCS 8640, P233, DOI 10.1007/978-3-319-10359-4_19
   Comino S., 2015, UPDATES MANAGEMENT M
   Corral L, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P22, DOI 10.1109/MobileSoft.2015.10
   COSMIC, 2015, COMM SOFTW MEAS INT
   Coulton P, 2011, INT J MOB HUM COMPUT, V3, P55, DOI 10.4018/jmhci.2011100104
   Crussell Jonathan, 2012, Computer Security - ESORICS 2012. Proceedings 17th European Symposium on Research in Computer Security, P37, DOI 10.1007/978-3-642-33167-1_3
   Crussell J., 2013, European Symposium on Research in Computer Security, P182
   Crussell J, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P123, DOI 10.1145/2594368.2594391
   D'Avanzo L, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1631, DOI 10.1145/2695664.2695948
   d'Heureuse N, 2012, MOB COMPUT COMMUN RE, V16, P16, DOI 10.1145/2396756.2396759
   DAI-Labor, 2015, ANDR
   Datta D, 2013, 2013 INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND BIG DATA (CLOUDCOM-ASIA), P205, DOI 10.1109/CLOUDCOM-ASIA.2013.56
   Deng Z, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P44, DOI 10.1145/2810103.2813675
   Dering ML, 2014, IEEE MILIT COMMUN C, P300, DOI 10.1109/MILCOM.2014.52
   Enck W, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P235
   Eric D, 2014, QUAL INNOV PROSPER, V18, P27, DOI 10.12776/QIP.V18I2.337
   F. T. Commission, 2015, COMPL COPPA FREQ ASK
   Ferreira D, 2012, INT J MOB HUM COMPUT, V4, P28, DOI 10.4018/jmhci.2012070102
   Ferrucci F, 2015, LECT NOTES COMPUT SC, V9459, P271, DOI 10.1007/978-3-319-26844-6_20
   Ferrucci F, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P365, DOI 10.1109/SEAA.2015.23
   Finkelstein A., 2014, RN1410 U COLL LOND
   Francese R, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P357, DOI 10.1109/SEAA.2015.22
   Friedman N, 1997, MACH LEARN, V29, P131, DOI 10.1023/A:1007465528199
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Gao CY, 2015, 9TH IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2015), P284, DOI 10.1109/SOSE.2015.13
   Garg R, 2013, MIS QUART, V37, P1253, DOI 10.25300/MISQ/2013/37.4.12
   Gibler C., 2012, P 5 INT C TRUST TRUS, V7344, P291, DOI DOI 10.1007/978-3-642-30921-2
   GinLemon, 2011, SMART LAUNCH 3 SIMPL
   Glodek W, 2013, 2013 IEEE MILITARY COMMUNICATIONS CONFERENCE (MILCOM 2013), P980, DOI 10.1109/MILCOM.2013.170
   Gómez M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P567, DOI 10.1109/ICSE.2015.195
   Gómez M, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P1, DOI 10.1109/MobileSoft.2015.8
   Gorla A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1025, DOI 10.1145/2568225.2568276
   Goul M., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P4168, DOI 10.1109/HICSS.2012.421
   Grace M., 2012, P 10 INT C MOB SYST, P281
   Grace M.C., 2012, P 5 ACM C SEC PRIV W, P101, DOI DOI 10.1145/2185448.2185464
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Guerrouj L, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P321, DOI 10.1109/SANER.2015.7081842
   Gui JP, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P100, DOI 10.1109/ICSE.2015.32
   Guzman Emitza, 2015, 2015 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM). Proceedings, P1, DOI 10.1109/ESEM.2015.7321214
   Guzman E, 2015, IEEE INT CONF AUTOM, P771, DOI 10.1109/ASE.2015.88
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Ha E, 2013, 2013 IEEE CONSUMER COMMUNICATIONS AND NETWORKING CONFERENCE (CCNC), P149, DOI 10.1109/CCNC.2013.6488439
   Hao S, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P204, DOI 10.1145/2594368.2594390
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   He XQ, 2015, PROCEEDINGS 2015 IEEE INTERNATIONAL CONFERENCE ON BIG DATA, P1043, DOI 10.1109/BigData.2015.7363858
   Heitkötter H, 2013, LECT NOTES BUS INF P, V140, P120
   Henze Niels, 2011, P 13 INT C HUM COMP, P581
   Hindle A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P46, DOI 10.1109/SANER.2016.60
   Ho Tsung-Hsuan., 2014, Proceedings of the 4th ACM conference on Data and application security and privacy, P187
   Hoon L., 2012, AUSTR COMP HUM INT C, P245
   Hoon L., 2013, ANAL MOBILE APP REV
   Hoon L, 2016, ADV INTELL SYST, V405, P223, DOI 10.1007/978-3-319-26285-7_19
   Hoon Leonard., 2013, Proceedings of the 25th Australian Computer-Human Interaction Conference: Augmentation, Application, Innovation, Collaboration, P229
   Huang JJ, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P977
   Huang W., 2015, P 2015 INT S SOFTWAR, P106, DOI 10.1145/2771783.2771803
   Iacob C., 2013, P 27 INT BCS HUM COM, V29, P6
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Ihm SY, 2013, 2013 IEEE THIRD INTERNATIONAL CONFERENCE ON CLOUD AND GREEN COMPUTING (CGC 2013), P561, DOI 10.1109/CGC.2013.95
   JEON J, 2012, P 2 ACM WORKSH SEC P, DOI 10.1145/2381934.2381938
   Jiang H., 2014, P 6 AS PAC S INT INT, P45, DOI DOI 10.1145/2677832.2677842
   Jiawei Zhu, 2012, Information and Communication Security. 14th International Conference (ICICS 2012). Proceedings, P228, DOI 10.1007/978-3-642-34129-8_20
   Jing Y., 2014, P 4 ACM C DATA APPL, P99, DOI DOI 10.1145/2557547.2557549
   Jo Yohan, 2011, P 4 ACM INT C WEB SE, P815, DOI DOI 10.1145/1935826.1935932
   Joorabchi ME, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P450, DOI 10.1109/ISSRE.2015.7381838
   Jung EY, 2012, MARKET LETT, V23, P929, DOI 10.1007/s11002-012-9207-0
   Khalid H, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P610, DOI 10.1145/2635868.2635909
   Khalid H, 2016, IEEE SOFTWARE, V33, P34, DOI 10.1109/MS.2015.29
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Khalid H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1474, DOI 10.1109/ICSE.2013.6606749
   Khalid Mubasher, 2015, International Journal of Information Technology and Computer Science, V7, P35, DOI 10.5815/ijitcs.2015.10.05
   Khalid Mubasher, 2015, International Journal of Information Engineering and Electronic Business, V7, P39, DOI 10.5815/ijieeb.2015.05.06
   Khanmohammadi K., 2015, P 5 ANN ACM CCS WORK, P81
   Kim D, 2016, AUTOMAT SOFTW ENG, V23, P591, DOI 10.1007/s10515-015-0182-6
   Kim J, 2014, SERV BUS, V8, P1, DOI 10.1007/s11628-013-0184-z
   Krutz DE, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P522, DOI 10.1109/MSR.2015.79
   Lageman N, 2015, IEEE MILIT COMMUN C, P324, DOI 10.1109/MILCOM.2015.7357463
   Lee G., 2011, Americas Conference Information Systems, P3912
   Lee G, 2014, J MANAGE INFORM SYST, V31, P133, DOI 10.2753/MIS0742-1222310206
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Liang TP, 2016, INT J ELECTRON COMM, V20, P236, DOI 10.1080/10864415.2016.1087823
   Lim S. L., 2012, ACM SIGEVOLUTION, V6, P2, DOI [10.1145/2384697, DOI 10.1145/2384697.]
   Lim S.L., 2012, P 13 INT C SYNTH SIM
   Lim SL, 2016, IEEE T EVOLUT COMPUT, V20, P529, DOI 10.1109/TEVC.2015.2494382
   Lim SL, 2015, IEEE T SOFTWARE ENG, V41, P40, DOI 10.1109/TSE.2014.2360674
   Lim SL, 2013, 2013 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P2672
   Lin JL, 2012, UBICOMP'12: PROCEEDINGS OF THE 2012 ACM INTERNATIONAL CONFERENCE ON UBIQUITOUS COMPUTING, P501
   Lin J, 2014, SIGIR'14: PROCEEDINGS OF THE 37TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P647
   Lin J, 2013, SIGIR'13: THE PROCEEDINGS OF THE 36TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH & DEVELOPMENT IN INFORMATION RETRIEVAL, P283
   Linares-Vasquez M., 2014, PROC 11 WORK C MININ, P242
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Linares-Vásquez M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P714, DOI 10.1145/2591062.2591092
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Liu B., 2015, P ANN INT C MOB SYST, P89
   Liu B, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P315, DOI 10.1145/2684822.2685322
   Liu Bin, 2014, 11 USENIX S NETW SYS, P57
   Lulu David., 2013, International Conference on Intelligent User Interfaces, P297
   Ma SQ, 2015, P INT COMP SOFTW APP, P179, DOI 10.1109/COMPSAC.2015.93
   Maalej W, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.153
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Malavolta I, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P56, DOI 10.1109/MobileSoft.2015.15
   Malavolta I, 2015, IEEE INT CONF MO, P25, DOI [10.1109/MobServ.2015.14, 10.1109/MS.2015.14]
   Manevitz LM, 2002, J MACH LEARN RES, V2, P139, DOI 10.1162/15324430260185574
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Mao K., 2016, RN1501 U COLL LOND
   marketsandmarkets.com, 2010, WORLD MOB APPL MARK
   Martin W., 2015, RN1507 U COLL LOND
   Martin W., 2016, RN1602 U COLL LOND
   Martin W, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P659, DOI 10.1145/2889160.2891033
   Martin W, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P435, DOI 10.1145/2950290.2950320
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   McIlroy S., 2015, IEEE SOFTW
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1067, DOI 10.1007/s10664-015-9375-7
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1346, DOI 10.1007/s10664-015-9388-2
   Megumi Wano, 2014, 2014 17th International Conference on Network-Based Information Systems (NBiS). Proceedings, P580, DOI 10.1109/NBiS.2014.51
   Mimno D, 2011, EMNLP, P262, DOI DOI 10.5555/2145432.2145462
   Minelli R, 2013, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSM.2013.76
   Minelli R, 2013, EUR CON SFTWR MTNCE, P144, DOI 10.1109/CSMR.2013.24
   Mojica IJ, 2014, IEEE SOFTWARE, V31, P78, DOI 10.1109/MS.2013.142
   Mokarizadeh Shahab, 2013, WEBIST 2013. 9th International Conference on Web Information Systems and Technologies. Proceedings, P527
   Moller Andreas, 2012, P 3 INT WORKSH RES L, P3
   Montandon JE, 2013, WORK CONF REVERSE EN, P401, DOI 10.1109/WCRE.2013.6671315
   Moran K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P673, DOI 10.1145/2786805.2786857
   Mutchler P., 2015, P MOB SEC TECHN WORK, P1
   Nagappan M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P21, DOI 10.1109/SANER.2016.88
   Nayebi M., 2015, PEERJ PREPRINTS, V3
   Ng YY, 2014, P INT COMP SOFTW APP, P509, DOI 10.1109/COMPSAC.2014.95
   Oh Jeungmin, 2013, Proceedings of the ACM SIGCHI Conference on Human Factors in Computing Systems, CHI'13, P1809
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Pandita Rahul, 2013, USENIX SECURITY 13, P527
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Park DH, 2015, SIGIR 2015: PROCEEDINGS OF THE 38TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P533, DOI 10.1145/2766462.2767759
   Peiravian N, 2013, PROC INT C TOOLS ART, P300, DOI 10.1109/ICTAI.2013.53
   Peng Hao., 2012, P ACM C COMPUTER COM, P241
   Petsas Thanasis., 2013, P 2013 C INTERNET ME, P277, DOI DOI 10.1145/2504730.2504749
   Vu PM, 2015, IEEE INT CONF AUTOM, P789, DOI 10.1109/ASE.2015.101
   Vu PM, 2015, IEEE INT CONF AUTOM, P749, DOI 10.1109/ASE.2015.85
   Potharaju R, 2012, LECT NOTES COMPUT SC, V7159, P106, DOI 10.1007/978-3-642-28166-2_11
   Preuss T., 2012, IFPUG GUIDE IT SOFTW, P408
   Preuss T., 2013, P INT COST EST AN AS
   Qu ZY, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1354, DOI 10.1145/2660267.2660287
   Rastogi V., 2013, P 3 ACM C DAT APPL S, P209
   Ravindranath L, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P190, DOI 10.1145/2594368.2594377
   Rein A.-D., 2013, P LEAN ENT SOFTW SYS, P165
   Robertson S, 2004, J DOC, V60, P503, DOI 10.1108/00220410410560582
   Ruiz I. J. M., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P113
   Ruiz IJM, 2016, IEEE SOFTWARE, V33, P86, DOI 10.1109/MS.2015.56
   Ruiz IJM, 2016, IEEE SOFTWARE, V33, P74, DOI 10.1109/MS.2014.81
   Ruiz IJM, 2014, IEEE SOFTWARE, V31, P86, DOI 10.1109/MS.2014.79
   Sahami Shirazi A., 2013, PROC 5 ACM SIGCHI S, P275
   Sanz B., 2013, Proceedings of the International Conference on Network and System Security, P178
   Sanz B, 2013, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON SECURITY AND CRYPTOGRAPHY (SECRYPT 2013), P387
   Sanz B, 2013, CYBERNET SYST, V44, P469, DOI 10.1080/01969722.2013.803889
   Sanz B, 2012, CONSUM COMM NETWORK, P149, DOI 10.1109/CCNC.2012.6181075
   Sarro F., 2013, UCLAPPA REPOSITORY R
   Sarro F, 2015, INT REQUIR ENG CONF, P76, DOI 10.1109/RE.2015.7320410
   Schütte J, 2015, INT CON ADV INFO NET, P571, DOI 10.1109/AINA.2015.238
   Seneviratne  S., 2015, P 8 ACM C SEC PRIV W
   Seneviratne S, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P949, DOI 10.1145/2736277.2741084
   Sethumadhavan G., 2011, 6 IFPUG INT SOFTW ME
   Shabtai A., 2010, Proceedings 2010 International Conference on Computational Intelligence and Security (CIS 2010), P329, DOI 10.1109/CIS.2010.77
   Sharma C., 2010, SIZING GLOBAL MOBILE, V659
   Shi WX, 2014, 2014 IEEE International Conference on Data Mining Workshop (ICDMW), P1242, DOI 10.1109/ICDMW.2014.23
   Shuler C., 2012, JG COON SES WORKSH N
   Stevens R, 2013, IEEE WORK CONF MIN S, P31, DOI 10.1109/MSR.2013.6624000
   Svedic Z., 2015, THESIS
   Syer MD, 2015, SOFTWARE QUAL J, V23, P485, DOI 10.1007/s11219-014-9238-2
   Syer MD, 2011, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2011.25
   Syer MarkD., 2013, Proceedings of the 2013 Conference of the Center for Advanced Studies on Collaborative Research, CASCON '13, P283
   Tan J, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P91, DOI 10.1145/2556288.2557400
   Teufl P., 2012, Security and Privacy in Mobile Information and Communication Systems, V94, P1, DOI DOI 10.1007/978-3-642-30244-2_1
   Teufl P, 2016, SECUR COMMUN NETW, V9, P389, DOI 10.1002/sec.675
   Tian Y, 2015, MEDIAT INFLAMM, V2015, DOI 10.1155/2015/819232
   Tong YX, 2015, J COMPUT SCI TECH-CH, V30, P1130, DOI 10.1007/s11390-015-1588-0
   Universite du Luxembourg, 2016, ANDR
   Vakulenko S., 2014, P 35 INT C INF SYST, P1
   Van Heeringen Harold, 2014, 2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement. (IWSM-MENSURA). Proceedings, P11, DOI 10.1109/IWSM.Mensura.2014.8
   Vasa R., 2012, AUSTR COMP HUM INT C, P241, DOI DOI 10.1145/2414536.2414577
   Viennot N., 2014, 2014 ACM INT C MEAS, P221, DOI DOI 10.1145/2637364.2592003
   Viennot N., 2014, GITHUB NVIENNOT PLAY
   Vigneri L., 2015, ARXIV PREPRINT ARXIV, P1
   Vision Mobile, 2015, DEV EC Q1 2015 STAT
   VisionMobile, 2013, DEV EC 2013 TOOLS RE
   von Rhein A., 2015, LIFTING INTERAPP DAT
   Wan M, 2015, IEEE ICST WORKSHOP
   Wang HY, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING (UBICOMP 2015), P1107, DOI 10.1145/2750858.2805833
   Wang HQ, 2015, ACSR ADV COMPUT, V20, P71
   Wang W, 2014, IEEE T INF FOREN SEC, V9, P1869, DOI 10.1109/TIFS.2014.2353996
   Wang Y, 2013, LECT NOTES COMPUT SC, V7964, P226, DOI 10.1007/978-3-642-39256-6_15
   Watanabe Takuya, 2015, S US PRIV SEC SOUPS, P241
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Xie Z., 2015, P 8 ACM C SEC PRIV W, P1
   Xing Liu, 2014, 2014 2nd IEEE International Conference on Mobile Cloud Computing, Services and Engineering (MobileCloud), P142, DOI 10.1109/MobileCloud.2014.22
   Xu W, 2013, PROC INT SYMP SOFTW, P400, DOI 10.1109/ISSRE.2013.6698893
   Yang W, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P303, DOI 10.1109/ICSE.2015.50
   Yang Y., 2014, TECH REP
   Yin Peifeng., 2013, Proceedings of ACM Interna- tional Conference on Web Search and Data Mining, P395
   You Joung Ham, 2014, International Journal of Computer and Communication Engineering, V3, P149, DOI 10.7763/IJCCE.2014.V3.310
   Zhang F., 2014, P 2014 ACM C SEC PRI, P25, DOI DOI 10.1145/2627393.2627395
   Zhang M, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P518, DOI 10.1145/2810103.2813669
   Zhong N., 2013, P 28 ANN ACM S APPL, P499, DOI DOI 10.1145/2480362.2480460
   Zhou Y., 2015, P 8 ACM C SEC PRIV W
   Zhou YJ, 2012, P IEEE S SECUR PRIV, P95, DOI 10.1109/SP.2012.16
   Zhu HS, 2015, ACM T INTEL SYST TEC, V5, DOI 10.1145/2532515
   Zhu HS, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P951, DOI 10.1145/2623330.2623705
   Zhu HS, 2015, IEEE T CYBERNETICS, V45, P1303, DOI 10.1109/TCYB.2014.2349954
   Zhu HS, 2013, PROCEEDINGS OF THE 22ND ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT (CIKM'13), P619, DOI 10.1145/2505515.2505547
   Zhu HS, 2015, IEEE T KNOWL DATA EN, V27, P74, DOI 10.1109/TKDE.2014.2320733
   Zhu HS, 2014, IEEE T MOBILE COMPUT, V13, P1550, DOI 10.1109/TMC.2013.113
   Zhu Hengshu, 2012, PROC 21 ACM INT C IN, P1617
NR 260
TC 210
Z9 235
U1 6
U2 52
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2017
VL 43
IS 9
BP 817
EP 847
DI 10.1109/TSE.2016.2630689
PG 31
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FH6TE
UT WOS:000411309800002
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Xia, X
   Lo, D
   Ding, Y
   Al-Kofahi, JM
   Nguyen, TN
   Wang, XY
AF Xia, Xin
   Lo, David
   Ding, Ying
   Al-Kofahi, Jafar
   Nguyen, Tien
   Wang, Xinyu
TI Improving Automated Bug Triaging with Specialized Topic Model
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Developer; bug triaging; feature information; topic model
AB Bug triaging refers to the process of assigning a bug to the most appropriate developer to fix. It becomes more and more difficult and complicated as the size of software and the number of developers increase. In this paper, we propose a new framework for bug triaging, which maps the words in the bug reports (i.e., the term space) to their corresponding topics (i.e., the topic space). We propose a specialized topic modeling algorithm named multi-feature topic model (MTM) which extends Latent Dirichlet Allocation (LDA) for bug triaging. MTM considers product and component information of bug reports to map the term space to the topic space. Finally, we propose an incremental learning method named TopicMiner which considers the topic distribution of a new bug report to assign an appropriate fixer based on the affinity of the fixer to the topics. We pair TopicMiner with MTM (TopicMiner(MTM)). We have evaluated our solution on 5 large bug report datasets including GCC, OpenOffice, Mozilla, Netbeans, and Eclipse containing a total of 227,278 bug reports. We show that TopicMiner(MTM) can achieve top-1 and top-5 prediction accuracies of 0.4831-0.6868, and 0.7686-0.9084, respectively. We also compare TopicMiner(MTM) with Bugzie, LDAKL, SVM-LDA, LDA-Activity, and Yang et al.'s approach. The results show that TopicMinerMTM on average improves top-1 and top-5 prediction accuracies of Bugzie by 128.48 and 53.22 percent, LDA-KL by 262.91 and 105.97 percent, SVM- LDA by 205.89 and 110.48 percent, LDA-Activity by 377.60 and 176.32 percent, and Yang et al.'s approach by 59.88 and 13.70 percent, respectively.
C1 [Xia, Xin; Wang, Xinyu] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310058, Zhejiang, Peoples R China.
   [Lo, David; Ding, Ying] Singapore Management Univ, Sch Informat Syst, Singapore 17890, Singapore.
   [Al-Kofahi, Jafar; Nguyen, Tien] Iowa State Univ, Dept Elect & Comp Engn, Ames, IA 50011 USA.
C3 Zhejiang University; Singapore Management University; Iowa State
   University
RP Xia, X (corresponding author), Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310058, Zhejiang, Peoples R China.
EM xxia@zju.edu.cn; davidlo@smu.edu.sg; ying.ding.2011@smu.edu.sg;
   jafar@iastate.edu; tien@iastate.edu; wangxinyu@zju.edu.cn
RI Xia, Xin/AAD-6217-2022; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Lo, David/0000-0002-4367-7201
FU National Basic Research Program of China (the 973 Program)
   [2015CB352201]; NSFC Program [61572426]; National Key Technology R&D
   Program of the Ministry of Science and Technology of China
   [2015BAH17F01]
FX This research was supported by the National Basic Research Program of
   China (the 973 Program) under grant 2015CB352201, NSFC Program (No.
   61572426), and National Key Technology R&D Program of the Ministry of
   Science and Technology of China under grant 2015BAH17F01. Xinyu Wang is
   the corresponding author.
CR Abdi H., 2007, Encyclopedia of measurement and statistics, DOI DOI 10.4135/9781412952644.N299
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   [Anonymous], EUSAR 2014 10 EUR C
   [Anonymous], 2007, 4 INT WORKSHOP MININ
   [Anonymous], 2007, Latent Semantic Analysis: A Road to Meaning. Ed. by
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bertram D, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P291
   Bhattacharya P., 2010, Software Main- tenance (ICSM), 2010 IEEE International Conference on, P1
   Binkley D., 2014, 22nd International Conference on Program Comprehension (Hyderabad, India, 2014), P26, DOI [DOI 10.1145/2597008.2597150, 10.1145/2597008.2597150]
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bortis G, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P342, DOI 10.1109/ICSE.2013.6606580
   Cliff N., 2014, ORDINAL METHODS BEHA
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Heinrich Gregor., 2005, Tech. Rep
   Hofmann T, 1999, UNCERTAINTY IN ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P289
   Ibrahim WM, 2012, J SYST SOFTWARE, V85, P2293, DOI 10.1016/j.jss.2011.09.019
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Kagdi H, 2012, J SOFTW-EVOL PROC, V24, P3, DOI 10.1002/smr.530
   Kolassa C., 2013, SOFSEM 2013 THEORY P
   Linares-Vásquez M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P451, DOI 10.1109/ICSM.2012.6405306
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   Naguib H, 2013, IEEE WORK CONF MIN S, P22, DOI 10.1109/MSR.2013.6623999
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Shokripour R, 2015, J SYST SOFTWARE, V102, P109, DOI 10.1016/j.jss.2014.12.049
   Shokripour R, 2013, IEEE WORK CONF MIN S, P2, DOI 10.1109/MSR.2013.6623997
   Somasundaram K., 2012, Proceedings of the 5th India Software Engineering Conference, ISEC '12, P125, DOI DOI 10.1145/2134254.2134276
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Tamrawi A, 2011, P 19 ACM SIGSOFT S 1, P365, DOI [DOI 10.1145/2025113.2025163, 10.31274/etd-180810-1814, DOI 10.31274/ETD-180810-1814]
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wu WJ, 2011, ASIA PAC SOFWR ENG, P389, DOI 10.1109/APSEC.2011.15
   Xia X., 2015, MORE ACCURATE BUG TR
   Xia X, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P174, DOI 10.1109/CSMR-WCRE.2014.6747167
   Xia X, 2013, WORK CONF REVERSE EN, P72, DOI 10.1109/WCRE.2013.6671282
   Xie X, 2012, P 8 INT C PRED MOD S, P19, DOI [DOI 10.1145/2365324.2365329, 10.1145/2365324.2365329]
   Yang G, 2014, P INT COMP SOFTW APP, P97, DOI 10.1109/COMPSAC.2014.16
NR 39
TC 115
Z9 124
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2017
VL 43
IS 3
BP 272
EP 297
DI 10.1109/TSE.2016.2576454
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ER2CW
UT WOS:000398602600005
OA Green Published
DA 2024-07-18
ER

PT J
AU Bosu, A
   Carver, JC
   Bird, C
   Orbeck, J
   Chockley, C
AF Bosu, Amiangshu
   Carver, Jeffrey C.
   Bird, Christian
   Orbeck, Jonathan
   Chockley, Christopher
TI Process Aspects and Social Dynamics of Contemporary Code Review:
   Insights from Open Source Development and Industrial Practice at
   Microsoft
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Code review; open source; OSS; survey; peer impressions; commercial
   projects
ID TRUST; INSPECTIONS; DESIGN; SCALE
AB Many open source and commercial developers practice contemporary code review, a lightweight, informal, tool-based code review process. To better understand this process and its benefits, we gathered information about code review practices via surveys of open source software developers and developers from Microsoft. The results of our analysis suggest that developers spend approximately 10-15 percent of their time in code reviews, with the amount of effort increasing with experience. Developers consider code review important, stating that in addition to finding defects, code reviews offer other benefits, including knowledge sharing, community building, and maintaining code quality. The quality of the code submitted for review helps reviewers form impressions about their teammates, which can influence future collaborations. We found a large amount of similarity between the Microsoft and OSS respondents. One interesting difference is that while OSS respondents view code review as an important method of impression formation, Microsoft respondents found knowledge dissemination to be more important. Finally, we found little difference between distributed and co-located Microsoft teams. Our findings identify the following key areas that warrant focused research: 1) exploring the non-technical benefits of code reviews, 2) helping developers in articulating review comments, and 3) assisting reviewers' program comprehension during code reviews.
C1 [Bosu, Amiangshu] Southern Illinois Univ, Dept Comp Sci, Carbondale, IL 62901 USA.
   [Carver, Jeffrey C.; Orbeck, Jonathan; Chockley, Christopher] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
   [Bird, Christian] Microsoft Corportat, Microsoft Res, Redmond, WA 98052 USA.
C3 Southern Illinois University System; Southern Illinois University;
   University of Alabama System; University of Alabama Tuscaloosa;
   Microsoft
RP Bosu, A (corresponding author), Southern Illinois Univ, Dept Comp Sci, Carbondale, IL 62901 USA.
EM abosu@cs.siu.edu; carver@cs.ua.edu; cbird@microsoft.com;
   jdorbeck@ua.edu; cmchockley@ua.edu
RI Carver, Jeffrey/AFP-1987-2022; Bosu, Amiangshu/AAB-1259-2020; Carver,
   Jeffrey/AAM-8202-2020
OI Carver, Jeffrey/0000-0002-7824-9151; Carver,
   Jeffrey/0000-0002-7824-9151; Bosu, Amiangshu/0000-0002-3178-6232
FU US National Science Foundation [1322276, 1156563]; Direct For Computer &
   Info Scie & Enginr; Division of Computing and Communication Foundations
   [1156563] Funding Source: National Science Foundation; Office of
   Advanced Cyberinfrastructure (OAC); Direct For Computer & Info Scie &
   Enginr [1322276] Funding Source: National Science Foundation
FX This research is partially supported by the US National Science
   Foundation Grant No. 1322276, 1156563. Any opinions expressed in this
   material are those of the authors and do not necessarily reflect the
   views of the National Science Foundation. We would also like to thank
   Brook Bowers and Luis Aguiar for assistance in data analysis.
CR [Anonymous], 2006, BEST KEPT SECRETS PE
   [Anonymous], 2011, SCALE DEV THEORY APP
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   Asundi J., 2007, Proceedings of the 40th Annual Hawaii International Conference on System Sciences, p166c
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Baysal O, 2013, WORK CONF REVERSE EN, P122, DOI 10.1109/WCRE.2013.6671287
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Beveridge W.I. B., 1950, ART SCI INVESTIGATIO
   Bird C., 2012, PROC ACM SIGSOFT 20
   Bird C, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P191, DOI 10.1109/MSR.2015.25
   Bosu Amiangshu, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P133, DOI 10.1109/ESEM.2013.23
   Bosu A, 2014, 2014 ACM IEEE INT S, P1, DOI DOI 10.1145/2652524.2652544
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   Bosu A, 2014, IFIP ADV INF COMM TE, V427, P31
   Bosu A, 2014, J SYST SOFTWARE, V94, P4, DOI 10.1016/j.jss.2014.03.061
   Briand LC, 2004, J SYST SOFTWARE, V73, P205, DOI 10.1016/j.jss.2004.01.015
   BUKOWSKI WM, 1994, J SOC PERS RELAT, V11, P471, DOI 10.1177/0265407594113011
   Cohen J., 1988, STAT POWER ANAL BEHA
   Czerwonka J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P27, DOI 10.1109/ICSE.2015.131
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Fagan Michael E., 2002, Software pioneers, P562, DOI DOI 10.1007/978-3-642-59412-0_34
   Fink A., 2003, The survey handbook, V1
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gilb Tom, 1993, Software inspections
   Harjumaa L, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P29
   Johnson PM, 1998, COMMUN ACM, V41, P49, DOI 10.1145/269012.269020
   JOHNSONGEORGE C, 1982, J PERS SOC PSYCHOL, V43, P1306, DOI 10.1037/0022-3514.43.6.1306
   Lakhani K. R., 2003, 442503 MIT
   Lakhani K.R., 2002, The Boston Consulting Group hacker survey
   Lerner J, 2002, J IND ECON, V50, P197, DOI 10.1111/1467-6451.00174
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Litwin M. S., 1995, How to Measure Survey Reliability and Validity, V7
   MCALLISTER DJ, 1995, ACAD MANAGE J, V38, P24, DOI 10.5465/256727
   Murphy-Hill E, 2015, IEEE T SOFTWARE ENG, V41, P65, DOI 10.1109/TSE.2014.2357438
   PORTER AA, 1995, IEEE T SOFTWARE ENG, V21, P563, DOI 10.1109/32.391380
   Raymond E. S., 1998, HOMESTEADING NOOSPHE, V3
   Raymond Eric, 1999, KNOWLEDGE TECHNOLOGY, V12, P23, DOI DOI 10.1007/S12130-999-1026-0
   REMPEL JK, 1985, J PERS SOC PSYCHOL, V49, P95, DOI 10.1037/0022-3514.49.1.95
   Rigby P. C., 2006, DCS305IR U VICT
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2012, IEEE SOFTWARE, V29, P56, DOI 10.1109/MS.2012.24
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Robinson J.P., 1991, Measures of personality and social psychological attitude, P1, DOI DOI 10.1016/B978-0-12-590241-0.50005-8
   Rombach D, 2008, ACM SIGSOFT SOFTW EN, V33, P26
   ROTTER JB, 1967, J PERS, V35, P651, DOI 10.1111/j.1467-6494.1967.tb01454.x
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Sutherland A, 2009, PROC INT CONF SOFTW, P259, DOI 10.1109/ICSE-COMPANION.2009.5070996
   von Hippel E, 2003, ORGAN SCI, V14, P209, DOI 10.1287/orsc.14.2.209.14992
   Votta L. G.  Jr., 1993, SIGSOFT Software Engineering Notes, V18, P107, DOI 10.1145/167049.167070
   Waldo J., 2009, CODE REV
   Welsh M., 2012, MY LOVE AFFAIR CODE
   Wiegers Karl Eugene, 2002, Peer reviews in software: A practical guide
   Wohlin C, 2003, LECT NOTES COMPUT SC, V2765, P7
   Yi-Han Lee, 2011, Proceedings of International MultiConference of Engineers and Computer Scientists 2011 (IMECS 2011), P1
NR 57
TC 86
Z9 91
U1 2
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2017
VL 43
IS 1
BP 56
EP 75
DI 10.1109/TSE.2016.2576451
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA EK2TT
UT WOS:000393780300004
OA hybrid
DA 2024-07-18
ER

PT J
AU Eghbali, S
   Tahvildari, L
AF Eghbali, Sepehr
   Tahvildari, Ladan
TI Test Case Prioritization Using Lexicographical Ordering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Regression testing; test case prioritization; lexicographical ordering
ID MUTATION; STRATEGIES
AB Test case prioritization aims at ordering test cases to increase the rate of fault detection, which quantifies how fast faults are detected during the testing phase. A common approach for test case prioritization is to use the information of previously executed test cases, such as coverage information, resulting in an iterative (greedy) prioritization algorithm. Current research in this area validates the fact that using coverage information can improve the rate of fault detection in prioritization algorithms. The performance of such iterative prioritization schemes degrade as the number of ties encountered in prioritization steps increases. In this paper, using the notion of lexicographical ordering, we propose a new heuristic for breaking ties in coverage based techniques. Performance of the proposed technique in terms of the rate of fault detection is empirically evaluated using a wide range of programs. Results indicate that the proposed technique can resolve ties and in turn noticeably increases the rate of fault detection.
C1 [Eghbali, Sepehr; Tahvildari, Ladan] Univ Waterloo, Dept Elect & Comp Engn, 200 Univ Ave West, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Eghbali, S (corresponding author), Univ Waterloo, Dept Elect & Comp Engn, 200 Univ Ave West, Waterloo, ON N2L 3G1, Canada.
EM s2eghbal@uwaterloo.ca; ltahvild@uwaterloo.ca
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX This research was supported by Natural Sciences and Engineering Research
   Council of Canada (NSERC). The authors would like to express their
   appreciations to the associate editor and the anonymous reviewers for
   their valuable suggestions.
CR Alshahwan N., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P181
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], GI JAHRESTAGUNG
   [Anonymous], INT S SOFTW TEST AN
   Arafeen MJ, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P312, DOI 10.1109/ICST.2013.12
   Briand LC, 2002, PROC IEEE INT CONF S, P252, DOI 10.1109/ICSM.2002.1167775
   Carlson Ryan, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P382, DOI 10.1109/ICSM.2011.6080805
   Chen TY, 1996, INFORM PROCESS LETT, V60, P135, DOI 10.1016/S0020-0190(96)00135-4
   Chen TY, 2001, SOFTW TEST VERIF REL, V11, P165, DOI 10.1002/stvr.221
   Dickinson W, 2001, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2001.919107
   Do H, 2006, EMPIR SOFTW ENG, V11, P33, DOI 10.1007/s10664-006-5965-8
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Do H, 2010, IEEE T SOFTWARE ENG, V36, P593, DOI 10.1109/TSE.2010.58
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   Epitropakis M. G., 2014, RN1401 UCL DEP COMP
   FISHBURN PC, 1974, MANAGE SCI, V20, P1442, DOI 10.1287/mnsc.20.11.1442
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Hao D, 2013, P INT COMP SOFTW APP, P169, DOI 10.1109/COMPSAC.2013.31
   Harrold M. J., 1988, Proceedings of the Conference on Software Maintenance - 1988 (IEEE Cat. No.88CH2615-3), P362, DOI 10.1109/ICSM.1988.10188
   Hong S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P232, DOI 10.1109/ICST.2013.32
   Huang YC, 2012, J SYST SOFTWARE, V85, P626, DOI 10.1016/j.jss.2011.09.063
   Iversen G. R., 1987, ANAL OF VARIANCE
   Jeffrey D, 2005, PROC IEEE INT CONF S, P549
   Jeffrey D, 2006, P INT COMP SOFTW APP, P411
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Kaner C, 2008, Lessons learned in software testing
   Kim JM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P119, DOI 10.1109/ICSE.2002.1007961
   Kim YM, 2003, CONF P INDIUM PHOSPH, P145
   Kinneer A., 2006, TECH REP
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Kumar A, 2010, DEV SPEED SCALE GOOG
   Leon D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P442, DOI 10.1109/ISSRE.2003.1251065
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Lin JW, 2009, INFORM SOFTWARE TECH, V51, P679, DOI 10.1016/j.infsof.2008.11.004
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Mei H, 2012, IEEE T SOFTWARE ENG, V38, P1258, DOI 10.1109/TSE.2011.106
   Mirarab Siavash, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P278, DOI 10.1109/ICST.2008.57
   Mirarab S, 2007, LECT NOTES COMPUT SC, V4422, P276
   Mirarab S, 2012, IEEE T SOFTWARE ENG, V38, P936, DOI 10.1109/TSE.2011.56
   Namin AS, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P57
   Park H, 2008, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON INFORMATION SECURITY AND ASSURANCE, P32
   Park Sangmin., 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering. FSE'12, p35:1, DOI DOI 10.1145/2393596.2393636
   PIWOWARSKI P, 1993, PROC INT CONF SOFTW, P287, DOI 10.1109/ICSE.1993.346035
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P130, DOI 10.1109/ICSE.2002.1007962
   Sampath Sreedevi., 2006, P 2006 WORKSHOP TEST, P23
   Smith A.M., 2009, P 2009 ACM S APPL CO, p[461, 467], DOI DOI 10.1145/1529282.1529382
   Sprenkle S, 2005, PROC IEEE INT CONF S, P587
   Srikanth H, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P62, DOI 10.1109/ISESE.2005.1541815
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Zhang L., 2012, FSE, P40
   Zhang LM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P192, DOI 10.1109/ICSE.2013.6606565
   Zhang LM, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P170, DOI 10.1109/ISSRE.2011.26
   Zhang L, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P213
NR 60
TC 37
Z9 39
U1 1
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2016
VL 42
IS 12
BP 1178
EP 1195
DI 10.1109/TSE.2016.2550441
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EF9TG
UT WOS:000390672800005
DA 2024-07-18
ER

PT J
AU Su, GX
   Feng, Y
   Chen, TL
   Rosenblum, DS
AF Su, Guoxin
   Feng, Yuan
   Chen, Taolue
   Rosenblum, David S.
TI Asymptotic Perturbation Bounds for Probabilistic Model Checking with
   Empirically Determined Probability Parameters
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Asymptotic perturbation bound; discrete-time Markov chain; numerical
   iteration; optimization; parametric Markov chain; perturbation analysis;
   probabilistic model checking; quadratic programming
ID COMPLEXITY
AB Probabilistic model checking is a verification technique that has been the focus of intensive research for over a decade. One important issue with probabilistic model checking, which is crucial for its practical significance but is overlooked by the state-of-the-art largely, is the potential discrepancy between a stochastic model and the real-world system it represents when the model is built from statistical data. In the worst case, a tiny but nontrivial change to some model quantities might lead to misleading or even invalid verification results. To address this issue, in this paper, we present a mathematical characterization of the consequences of model perturbations on the verification distance. The formal model that we adopt is a parametric variant of discrete-time Markov chains equipped with a vector norm to measure the perturbation. Our main technical contributions include a closed-form formulation of asymptotic perturbation bounds, and computational methods for two arguably most useful forms of those bounds, namely linear bounds and quadratic bounds. We focus on verification of reachability properties but also address automata-based verification of omega-regular properties. We present the results of a selection of case studies that demonstrate that asymptotic perturbation bounds can accurately estimate maximum variations of verification results induced by model perturbations.
C1 [Su, Guoxin; Rosenblum, David S.] Natl Univ Singapore, Sch Comp, Dept Comp Sci, Singapore 117548, Singapore.
   [Feng, Yuan] Univ Technol Sydney, Ctr Quantum Computat & Intelligent Syst, Sydney, NSW 2007, Australia.
   [Feng, Yuan] Chinese Acad Sci, AMSS UTS Joint Res Lab Quantum Computat, Beijing 100864, Peoples R China.
   [Chen, Taolue] Middlesex Univ, Dept Comp Sci, London, England.
C3 National University of Singapore; University of Technology Sydney;
   Chinese Academy of Sciences; Middlesex University
RP Su, GX (corresponding author), Natl Univ Singapore, Sch Comp, Dept Comp Sci, Singapore 117548, Singapore.
EM sugx@comp.nus.edu.sg; yuan.feng@uts.edu.au; t.chen@mdx.ac.uk;
   david@comp.nus.edu.sg
RI Feng, Yuan/AGN-2907-2022; Su, Gang/G-6092-2011; Rosenblum, David
   S/C-1890-2008
OI Feng, Yuan/0000-0002-3097-3896; Chen, Taolue/0000-0002-5993-1665; Su,
   Guoxin/0000-0002-2087-4894
FU Singapore Ministry of Education [R-252-000-458-133]; Australian Research
   Council [DP130102764, DP160101652]; National Natural Science Foundation
   of China [61428208, 61502260]; CAS/SAFEA International Partnership
   Program for Creative Research Team; State Key Laboratory of Novel
   Software Technology at Nanjing University; EPSRC [EP/P00430X/1] Funding
   Source: UKRI
FX This research is partially supported by the Singapore Ministry of
   Education (Grant No. R-252-000-458-133), the Australian Research Council
   (Grant Nos. DP130102764 and DP160101652), the National Natural Science
   Foundation of China (Grant Nos. 61428208 and 61502260), the CAS/SAFEA
   International Partnership Program for Creative Research Team, and an
   oversea grant from the State Key Laboratory of Novel Software Technology
   at Nanjing University. We thank the anonymous reviewers for their
   instructive comments on an earlier version of the paper.
CR Agrawal M, 2015, J ACM, V62, DOI 10.1145/2629417
   Allender E, 1996, RAIRO-INF THEOR APPL, V30, P1
   Alur R, 2005, LECT NOTES COMPUT SC, V3414, P70
   [Anonymous], 1998, Cambridge Series in Statistical and Probabilistic Mathematics
   [Anonymous], 1990, Matrix Perturbation Theory. Computer Science and Scientific Computing
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Baier C, 2003, IEEE T SOFTWARE ENG, V29, P524, DOI 10.1109/TSE.2003.1205180
   Bartocci E, 2011, LECT NOTES COMPUT SC, V6605, P326, DOI 10.1007/978-3-642-19835-9_30
   Benedikt M, 2013, LECT NOTES COMPUT SC, V7795, P32, DOI 10.1007/978-3-642-36742-7_3
   Bouyer P, 2006, LECT NOTES COMPUT SC, V3887, P238, DOI 10.1007/11682462_25
   Calinescu R., 2015, IEEE T REL IN PRESS
   Calinescu R, 2012, COMMUN ACM, V55, P69, DOI 10.1145/2330667.2330686
   Chatterjee K, 2008, LECT NOTES COMPUT SC, V4962, P302, DOI 10.1007/978-3-540-78499-9_22
   Chen TL, 2013, 2013 INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE), P85, DOI 10.1109/TASE.2013.20
   Chen TL, 2013, INFORM PROCESS LETT, V113, P210, DOI 10.1016/j.ipl.2013.01.004
   Chen TL, 2009, LECT NOTES COMPUT SC, V5799, P104, DOI 10.1007/978-3-642-04761-9_10
   CHEUNG RC, 1980, IEEE T SOFTWARE ENG, V6, P118, DOI 10.1109/TSE.1980.234477
   Cho GE, 2001, LINEAR ALGEBRA APPL, V335, P137, DOI 10.1016/S0024-3795(01)00320-2
   Cortellessa V, 2007, LECT NOTES COMPUT SC, V4608, P140
   COURCOUBETIS C, 1995, J ASSOC COMPUT MACH, V42, P857, DOI 10.1145/210332.210339
   Couvreur JM, 2003, LECT NOTES ARTIF INT, V2850, P361, DOI 10.1007/978-3-540-39813-4_26
   Daws C, 2005, LECT NOTES COMPUT SC, V3407, P280
   Donaldson R, 2008, LECT N BIOINFORMAT, V5307, P269, DOI 10.1007/978-3-540-88562-7_20
   Filieri A., 2016, IEEE T SOFT IN PRESS, V42, P74
   Filieri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P341, DOI 10.1145/1985793.1985840
   Forejt V, 2011, LECT NOTES COMPUT SC, V6659, P53, DOI 10.1007/978-3-642-21455-4_3
   Ghezzi C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P33, DOI 10.1109/ICSE.2013.6606549
   Ghorbal Khalil., 2012, REACHABILITY PROBLEM, P107
   Hahn Ernst Moritz, 2011, International Journal on Software Tools for Technology Transfer, V13, P3, DOI 10.1007/s10009-010-0146-x
   Hahn EM, 2011, LECT NOTES COMPUT SC, V6617, P146, DOI 10.1007/978-3-642-20398-5_12
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Heidergott B, 2008, WODES' 08: PROCEEDINGS OF THE 9TH INTERNATIONAL WORKSHOP ON DISCRETE EVENT SYSTEMS, P99, DOI 10.1109/WODES.2008.4605929
   Kähler D, 2008, LECT NOTES COMPUT SC, V5125, P724, DOI 10.1007/978-3-540-70575-8_59
   Kato T., 2005, PERTURBATION THEORY
   Kwiatkowsa M., 2012, 2012 Ninth International Conference on Quantitative Evaluation of Systems (QEST 2012), P203, DOI 10.1109/QEST.2012.14
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Lasserre JB, 2001, SIAM J OPTIMIZ, V11, P796, DOI 10.1137/S1052623400366802
   MathWorks Inc, 2012, MATLAB VERS 8 0 R201
   Meedeniya I, 2014, SOFTW SYST MODEL, V13, P1395, DOI 10.1007/s10270-012-0277-5
   Mieghem P.V., 2005, Performance Analysis of Communications Networks and Systems
   Norman G, 2005, IEEE T COMPUT AID D, V24, P1629, DOI 10.1109/TCAD.2005.852033
   Pavese E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P602, DOI 10.1109/ICSE.2013.6606606
   Puggelli Alberto, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P527, DOI 10.1007/978-3-642-39799-8_35
   Puterman M., 1990, Handb Oper Res Manage Sci, V2, P331
   Rodrigues G, 2005, LECT NOTES COMPUT SC, V3442, P111, DOI 10.1007/978-3-540-31984-9_9
   Rodrigues GN, 2005, LECT NOTES COMPUT SC, V3713, P339, DOI 10.1007/11557432_25
   Sahni S., 1974, SIAM Journal on Computing, V3, P262, DOI 10.1137/0203021
   Sen K, 2006, LECT NOTES COMPUT SC, V3920, P394
   Su GX, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P311, DOI 10.1145/2568225.2568256
   Su GX, 2014, LECT NOTES COMPUT SC, V8837, P364, DOI 10.1007/978-3-319-11936-6_26
   Su GX, 2013, LECT NOTES COMPUT SC, V8144, P297, DOI 10.1007/978-3-642-41202-8_20
   Taolue Chen, 2014, CONCUR 2014 - Concurrency Theory. 25th International Conference, CONCUR 2014. Proceedings: LNCS 8704, P218, DOI 10.1007/978-3-662-44584-6_16
   Vardi M. Y., 1985, 26th Annual Symposium on Foundations of Computer Science (Cat. No.85CH2224-4), P327, DOI 10.1109/SFCS.1985.12
NR 53
TC 12
Z9 13
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2016
VL 42
IS 7
BP 623
EP 639
DI 10.1109/TSE.2015.2508444
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DR7AX
UT WOS:000380053500002
OA Green Published
DA 2024-07-18
ER

PT J
AU Aranda, AM
   Dieste, O
   Juristo, N
AF Aranda, Alejandrina M.
   Dieste, Oscar
   Juristo, Natalia
TI Effect of Domain Knowledge on Elicitation Effectiveness: An Internally
   Replicated Controlled Experiment
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Controlled experiment; domain knowledge; requirements elicitation;
   internal replication
ID REQUIREMENTS ELICITATION; ANALYSTS
AB Context. Requirements elicitation is a highly communicative activity in which human interactions play a critical role. A number of analyst characteristics or skills may influence elicitation process effectiveness. Aim. Study the influence of analyst problem domain knowledge on elicitation effectiveness. Method. We executed a controlled experiment with post-graduate students. The experimental task was to elicit requirements using open interview and consolidate the elicited information immediately afterwards. We used four different problem domains about which students had different levels of knowledge. Two tasks were used in the experiment, whereas the other two were used in an internal replication of the experiment; that is, we repeated the experiment with the same subjects but with different domains. Results. Analyst problem domain knowledge has a small but statistically significant effect on the effectiveness of the requirements elicitation activity. The interviewee has a big positive and significant influence, as does general training in requirements activities and interview experience. Conclusion. During early contacts with the customer, a key factor is the interviewee; however, training in tasks related to requirements elicitation and knowledge of the problem domain helps requirements analysts to be more effective.
C1 [Aranda, Alejandrina M.; Dieste, Oscar; Juristo, Natalia] Univ Politecn Madrid, Escuela Tecn Super Ingenieros Informat, Campus Montegancedo, Boadilla Del Monte 28660, Spain.
C3 Universidad Politecnica de Madrid
RP Aranda, AM; Dieste, O; Juristo, N (corresponding author), Univ Politecn Madrid, Escuela Tecn Super Ingenieros Informat, Campus Montegancedo, Boadilla Del Monte 28660, Spain.
EM am.aranda@alumnos.upm.es; odieste@fi.upm.es; natalia@fi.upm.es
RI Dieste, Oscar/K-6193-2014
OI Dieste, Oscar/0000-0002-3060-7853
FU Spanish Ministry of Ministry of Economy and Competitiveness
   [TIN2011-23216]; Itaipu Binacional, Paraguay
FX This work was supported in part by the project TIN2011-23216 funded by
   the Spanish Ministry of Ministry of Economy and Competitiveness.
   Alejandrina Aranda holds a PhD grant from Itaipu Binacional, Paraguay.
CR Agarwal R., 1990, Journal of Management Information Systems, V7, P123
   Albayrak Ö, 2014, EMPIR SOFTW ENG, V19, P241, DOI 10.1007/s10664-012-9221-0
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], 1995, SYSTEMS REQUIREMENTS
   [Anonymous], ENG MANAGING SOFTWAR
   [Anonymous], 1993, Software Requirements-objects, Functions and States
   Anwar F, 2011, COMM COM INF SC, V181, P600
   Aranda A., 2014, P 18 INT C EV ASS SO, DOI DOI 10.1145/2601248.2601291
   Bausell R.B., 2002, Power analysis for experimental research: a practical guide for the biological, medical and social sciences
   BROWN BW, 1980, BIOMETRICS, V36, P69, DOI 10.2307/2530496
   Browne GJ, 2001, J MANAGE INFORM SYST, V17, P223, DOI 10.1080/07421222.2001.11045665
   Burton A. M., 1988, ECAI 88. Proceedings of the 8th European Conference on Artificial Intelligence, P85
   Carrizo D, 2014, INFORM SOFTWARE TECH, V56, P644, DOI 10.1016/j.infsof.2014.01.009
   Carver J. C., 2010, P 1 INT WORKSH REP E
   Choi Bernard C K, 2005, Prev Chronic Dis, V2, pA13
   Christel M.G., 1992, Issues in requirements elicitation
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cook T. D., 1979, QUASIEXPERIMENTATION
   Dieste O, 2011, IEEE T SOFTWARE ENG, V37, P283, DOI 10.1109/TSE.2010.33
   Ericsson KA, 2007, HARVARD BUS REV, V85, P114
   Exadaktylos F, 2013, SCI REP-UK, V3, DOI 10.1038/srep01213
   Falkenberg E. D., 1996, IFIP WG 8 1 TASK GRO
   Friedman Daniel., 1994, Experimental methods : a primer for economists
   Graham J. W., 1999, STAT STRATEGIES SMAL, pv
   Gunter CA, 2000, IEEE SOFTWARE, V17, P37, DOI 10.1109/52.896248
   Gupta Sandeep K, 2011, Perspect Clin Res, V2, P109, DOI 10.4103/2229-3485.83221
   Hadar I, 2014, REQUIR ENG, V19, P143, DOI 10.1007/s00766-012-0163-2
   Hedges L. V., 1984, STAT METHODS METAANA, V24, P25, DOI [DOI 10.1002/EV.1376, 10.1016/C2009-0-03396-0, DOI 10.1016/C2009-0-03396-0, 10.1002/ev.1376]
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Hoyle R. H., 1999, STAT STRATEGIES SMAL, pv
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Jorgensen M, 2007, J SYST SOFTWARE, V80, P1472, DOI 10.1016/j.jss.2006.09.047
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kristensson P., 2016, J PROD INNOVATION MA, V21
   Kuehl R.O., 2000, Design of experiments: statistical principles of research designand analysis, V2nd
   Lewis-Beck Michael, 2003, SAGE ENCY SOCIAL SCI
   Marakas GM, 1998, INFORM SYST RES, V9, P37, DOI 10.1287/isre.9.1.37
   McAllister C.A., 2006, Requirements determination of information systems: User and developer perceptions of factors contributing to misunderstandings
   Mehrotra G, 2011, THESIS U WATERLOO WA
   Meyers LS., 2012, APPL MULTIVARIATE RE
   Montori VM, 2001, CAN MED ASSOC J, V165, P1339
   Niknafs A., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P181, DOI 10.1109/RE.2012.6345802
   Niknafs A., 2014, THESIS U WATERLOO WA
   Niknafs A, 2013, S VIS LANG HUM CEN C, P279, DOI 10.1109/RE.2013.6636730
   Pacheco C, 2012, J SYST SOFTWARE, V85, P2171, DOI 10.1016/j.jss.2012.04.075
   Pitts MG, 2004, J MANAGE INFORM SYST, V21, P203, DOI 10.1080/07421222.2004.11045795
   Razali Rozilawati, 2011, Journal of Theoretical and Applied Information Technology, V33, P250
   Richy F, 2004, INTERNET J EPIDEMIOL, V1, P1
   SCHOENFELD AH, 1982, J EXP PSYCHOL LEARN, V8, P484, DOI 10.1037/0278-7393.8.5.484
   Senn S., 2002, CROSS OVER TRIALS CL, V156, P512, DOI DOI 10.1002/0470854596
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Sommerville I., 2009, REQUIREMENTS ENG GOO
   Vitharana P, 2012, INFORM MANAGE-AMSTER, V49, P24, DOI 10.1016/j.im.2011.12.004
   YADAV SB, 1988, COMMUN ACM, V31, P1090, DOI 10.1145/48529.48533
   Young R.R., 2002, The Journal of Defense Software Engineering, P9
   Zowghi D, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P19, DOI 10.1007/3-540-28244-0_2
NR 56
TC 22
Z9 22
U1 1
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2016
VL 42
IS 5
BP 427
EP 451
DI 10.1109/TSE.2015.2494588
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DM1IA
UT WOS:000376097700002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Wang, T
   Sun, J
   Wang, XY
   Liu, Y
   Si, YJ
   Dong, JS
   Yang, XH
   Li, XH
AF Wang, Ting
   Sun, Jun
   Wang, Xinyu
   Liu, Yang
   Si, Yuanjie
   Dong, Jin Song
   Yang, Xiaohu
   Li, Xiaohong
TI A Systematic Study on Explicit-State Non-Zenoness Checking for Timed
   Automata
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Timed automata; non-Zenoness; model checking; verification tool
ID MODEL-CHECKING; VERIFICATION; POWER; TOOL
AB Zeno runs, where infinitely many actions occur within finite time, may arise in Timed Automata models. Zeno runs are not feasible in reality and must be pruned during system verification. Thus it is necessary to check whether a run is Zeno or not so as to avoid presenting Zeno runs as counterexamples during model checking. Existing approaches on non-Zenoness checking include either introducing an additional clock in the Timed Automata models or additional accepting states in the zone graphs. In addition, there are approaches proposed for alternative timed modeling languages, which could be generalized to Timed Automata. In this work, we investigate the problem of non-Zenoness checking in the context of model checking LTL properties, not only evaluating and comparing existing approaches but also proposing a new method. To have a systematic evaluation, we develop a software toolkit to support multiple non-Zenoness checking algorithms. The experimental results show the effectiveness of our newly proposed algorithm, and demonstrate the strengths and weaknesses of different approaches.
C1 [Wang, Ting; Wang, Xinyu; Si, Yuanjie; Yang, Xiaohu] Zhejiang Univ, Coll Comp Sci, Hangzhou, Zhejiang, Peoples R China.
   [Sun, Jun] Singapore Univ Technol & Design, ISTD, Singapore, Singapore.
   [Liu, Yang] Nanyang Technol Univ, Sch Comp Engn, Singapore 639798, Singapore.
   [Dong, Jin Song] Natl Univ Singapore, Sch Comp, Singapore 117548, Singapore.
   [Li, Xiaohong] Tianjin Univ, Sch Comp Sci & Technol, Tianjin, Peoples R China.
C3 Zhejiang University; Singapore University of Technology & Design;
   Nanyang Technological University; National University of Singapore;
   Tianjin University
RP Wang, T (corresponding author), Zhejiang Univ, Coll Comp Sci, Hangzhou, Zhejiang, Peoples R China.
EM qdw@zju.edu.cn; sunjun@sutd.edu.sg; wangxinyu@zju.edu.cn;
   yangliu@ntu.edu.sg; siyuanjie@zju.edu.cn; dongjs@comp.nus.edu.sg;
   yangxh@zju.edu.cn; xiaohongli@tju.edu.cn
RI liu, yang/HIU-0559-2022; LIU, YANG/HWQ-4615-2023; Liu, Yang/D-2306-2013;
   liu, yang/HHY-8583-2022; yang, liu/HTN-9175-2023; yang,
   liu/GVU-8760-2022; liu, yang/HQY-7531-2023; Liu, Yang/HNJ-6693-2023
OI Liu, Yang/0000-0001-7300-9215; Sun, Jun/0000-0002-3545-1392
FU National Natural Science Foundation Program [61103032]; National Key
   Technology Support Program of P.R. China [2014BAH24F02]
FX Xinyu Wang is the corresponding author. This work was supported by the
   National Natural Science Foundation Program (No. 61103032) and the
   National Key Technology Support Program (No. 2014BAH24F02) of P.R.
   China.
CR Aceto L, 2003, THEOR COMPUT SCI, V300, P411, DOI 10.1016/S0304-3975(02)00334-1
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Alur R, 1999, THEOR COMPUT SCI, V211, P253, DOI 10.1016/S0304-3975(97)00173-4
   Balaguer S, 2012, LECT NOTES COMPUT SC, V7454, P100, DOI 10.1007/978-3-642-32940-1_9
   Behrmann G., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P341
   Beyer D, 2003, LECT NOTES COMPUT SC, V2725, P122
   Bouyer P, 2004, FORM METHOD SYST DES, V24, P281, DOI 10.1023/B:FORM.0000026093.21513.31
   Bowman H, 2006, FORM ASP COMPUT, V18, P459, DOI 10.1007/s00165-006-0010-7
   Bozga M, 1998, LECT NOTES COMPUT SC, V1427, P546, DOI 10.1007/BFb0028779
   Cattani S, 2005, FORM ASP COMPUT, V17, P138, DOI 10.1007/s00165-005-0064-y
   Chatterjee K, 2011, HSCC 11: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P221
   David A, 2010, LECT NOTES COMPUT SC, V6252, P365
   DILL DL, 1990, LECT NOTES COMPUT SC, V407, P197
   Dong JS, 2008, IEEE T SOFTWARE ENG, V34, P844, DOI 10.1109/TSE.2008.52
   Gómez R, 2007, LECT NOTES COMPUT SC, V4763, P195
   HENZINGER TA, 1994, INFORM COMPUT, V111, P193, DOI 10.1006/inco.1994.1045
   Henzinger TA, 1995, LECT NOTES COMPUT SC, V944, P417
   Herbreteau F, 2012, FORM METHOD SYST DES, V40, P122, DOI 10.1007/s10703-011-0133-1
   Herbreteau F, 2010, LECT NOTES COMPUT SC, V6252, P218
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Ouaknine J, 2004, IEEE S LOG, P54, DOI 10.1109/LICS.2004.1319600
   Ouaknine J., 2002, ELECT NOTES THEOR CO, V68
   ROKICKI TG, 1993, THESIS STANFORD U ST
   Schwoon S, 2005, LECT NOTES COMPUT SC, V3440, P174
   Sun J, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430537
   Sun J, 2009, LECT NOTES COMPUT SC, V5643, P709, DOI 10.1007/978-3-642-02658-4_59
   Tripakis S, 2005, FORM METHOD SYST DES, V26, P267, DOI 10.1007/s10703-005-1632-8
   Tripakis S., 1999, Formal Methods for Real-Time and Probabilistic Systems. 5th International AMAST Workshop, ARTS'99. Proceedings, P299
   Tripakis S., 1996, Tools and Algorithms for the Construction and Analysis of Systems. Second International Workshop, TACAS '96. Proceedings, P329
   Tripakis S, 2009, ACM T COMPUT LOG, V10, DOI 10.1145/1507244.1507245
   VARDI MY, 1994, INFORM COMPUT, V115, P1, DOI 10.1006/inco.1994.1092
   Wang F, 2003, LECT NOTES COMPUT SC, V2575, P189
   Wang F., 2002, FORTE 2001 IIFIP, V69, P235, DOI [10.1007/0-306-47003-915, DOI 10.1007/0-306-47003-915]
   Wang F, 2006, IEEE T SOFTWARE ENG, V32, P510, DOI 10.1109/TSE.2006.71
   Wang F, 2011, REAL-TIME SYST, V47, P285, DOI 10.1007/s11241-011-9122-0
   Wang F, 2008, REAL TIM SYST SYMP P, P195, DOI 10.1109/RTSS.2008.53
   Yi W., 1994, PROC 7 INT C FORMAL, P223, DOI [10.1007/978-0-387-34878-018, DOI 10.1007/978-0-387-34878-018]
NR 37
TC 6
Z9 6
U1 0
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2015
VL 41
IS 1
BP 3
EP 18
DI 10.1109/TSE.2014.2359893
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AY8EZ
UT WOS:000347788400002
OA Green Published
DA 2024-07-18
ER

PT J
AU Vara, JM
   Bollati, VA
   Jiménez, A
   Marcos, E
AF Manuel Vara, Juan
   Bollati, Veronica A.
   Jimenez, Alvaro
   Marcos, Esperanza
TI Dealing with Traceability in the MDD of Model Transformations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Model-driven engineering; model transformations; traceability
ID OF-THE-ART; DRIVEN; MANAGEMENT; SUPPORT
AB Traceability has always been acknowledged as a relevant topic in Software Engineering. However, keeping track of the relationships between the different assets involved in a development process is a complex and tedious task. The fact that the main assets handled in any model-driven engineering project are models and model transformations eases the task. In order to take advantage of this scenario, which has not been appropriately capitalized on by the most widely adopted model transformation languages before, this work presents MeTAGeM-Trace, a methodological and technical proposal with which to support the model-driven development of model transformations that include trace generation. The underlying idea is to start from a high-level specification of the transformation which is subsequently refined into lower-level transformation models in terms of a set of DSLs until the source code that implements the transformation can be generated. Running this transformation produces not only the corresponding target models, but also a trace model between the elements of the source and target models. As part of the proposal, an EMF-based toolkit has been developed to support the development of ATL and ETL model transformations. This toolkit has been empirically validated by conducting a set of case studies following a systematic research methodology.
C1 [Manuel Vara, Juan; Bollati, Veronica A.; Jimenez, Alvaro; Marcos, Esperanza] Univ Rey Juan Carlos, Madrid, Spain.
C3 Universidad Rey Juan Carlos
RP Vara, JM (corresponding author), Univ Rey Juan Carlos, Madrid, Spain.
EM juanmanuel.vara@urjc.es; veronica.bollati@urjc.es;
   alvaro.jimenez@urjc.es; esperanza.marcos@urjc.es
RI Martinez, Esperanza Marcos/AAS-8564-2021; Martinez, Esperanza
   Marcos/JCE-5935-2023; Vara, Juan Manuel/K-6774-2014
OI Vara, Juan Manuel/0000-0002-8637-6580; Marcos,
   Esperanza/0000-0003-2666-9995
FU MASAI project [TIN-2011-22617]; Spanish Ministry of Science and
   Innovation; iTrace project [PRIN13-IYA15/ 2013/00190/001]; University
   Rey Juan Carlos
FX This research was carried out in the framework of the MASAI project
   (TIN-2011-22617), financed by the Spanish Ministry of Science and
   Innovation and the iTrace project (PRIN13-IYA15/ 2013/00190/001),
   financed by the University Rey Juan Carlos.
CR Aizenbud-Reshef N, 2006, IBM SYST J, V45, P515, DOI 10.1147/sj.453.0515
   Amelunxen C, 2008, IET SOFTW, V2, P204, DOI 10.1049/iet-sen:20070076
   [Anonymous], 2013, ELECT COMMUNICATIONS
   [Anonymous], P 2 EUR C MOD DRIV A
   [Anonymous], SOFTW SYST MODEL
   [Anonymous], THESIS RJ CARLOS U M
   [Anonymous], DESIGNING SOFTWARE I
   [Anonymous], THESIS KARLSRUHE I T
   [Anonymous], P 1 WORKSH AC MOD EC
   [Anonymous], 1990, 610121990 IEEE
   [Anonymous], INF SOFTW TECHNOL
   [Anonymous], 2003, P 1 BIENN C INN DAT
   [Anonymous], TAXONOMY DEFINITION
   [Anonymous], 2010, P 6 ECMFA TRAC WORKS
   [Anonymous], 2003, MDA GUIDE VERSION 1
   [Anonymous], MODEL DRIVEN ENG LAN
   [Anonymous], 2 EUR C MOD DRIV ARC
   [Anonymous], 2003, CASE STUDY RES DESIG
   [Anonymous], P 4 EUR C MOD DRIV A
   [Anonymous], 2006, ECL SUMM EUR ECL MOD
   [Anonymous], P DOCT S MODELS
   [Anonymous], J OBJECT TECHNOL
   Aranega V, 2011, COMM COM INF SC, V50, P137
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Arkley P, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P385, DOI 10.1109/RE.2005.49
   Baxter P, 2008, QUAL REP, V13, P544
   Bézivin J, 2006, LECT NOTES COMPUT SC, V3844, P120
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4199, P440
   Bondé L, 2006, APPLICATIONS OF SPECIFICATION AND DESIGN LANGUAGES FOR SOCS, P263, DOI 10.1007/978-1-4020-4998-9_15
   Boronat A, 2005, LECT NOTES COMPUT SC, V3748, P316
   Brambilla Marco, 2012, MODELDRIVEN SOFTWARE
   Briand LC, 2003, PROC IEEE INT CONF S, P256, DOI 10.1109/ICSM.2003.1235428
   Brun COdric., 2008, UPGRADE, The European Journal for the Informatics Professional IX, V2, P29
   Bruneliere Hugo., 2010, P IEEEACM INT C AUTO, P173, DOI DOI 10.1145/1858996.1859032
   Burmester S., 2004, International Journal on Software Tools for Technology Transfer, V6, P203, DOI 10.1007/s10009-004-0155-8
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Czarnecki K, 2009, LECT NOTES COMPUT SC, V5563, P260, DOI 10.1007/978-3-642-02408-5_19
   Del Fabro MD, 2009, SOFTW SYST MODEL, V8, P305, DOI 10.1007/s10270-008-0094-z
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Grammel Birgit., 2010, ECMFA TW 10 P 6 ECMF, P7
   Gronback R. C., 2009, ECLIPSE MODELING PRO
   Guerra E, 2013, SOFTW SYST MODEL, V12, P555, DOI 10.1007/s10270-011-0211-2
   Guerra E, 2010, LECT NOTES COMPUT SC, V6394, P376
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Jouault F., 2005, P EUROPEAN C MODEL D, P29
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Jouault F, 2007, SCI COMPUT PROGRAM, V68, P114, DOI 10.1016/j.scico.2007.05.005
   Kappel Gerti, 2012, Conceptual Modelling and Its Theoretical Foundations. Essays Dedicated to Bernhard Thalheim on the Occasion of his 60th Birthday, P197, DOI 10.1007/978-3-642-28279-9_15
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kurtev I, 2008, LECT NOTES COMPUT SC, V5088, P377
   Lano Kevin, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P47, DOI 10.1007/978-3-642-21732-6_4
   Mäder P, 2009, LECT NOTES COMPUT SC, V5562, P174, DOI 10.1007/978-3-642-02674-4_13
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Naslavsky L., 2005, P 3 INT WORKSHOP TRA, P25, DOI DOI 10.1145/1107656.1107663
   Oldevik J, 2005, LECT NOTES COMPUT SC, V3748, P239
   Paige R.F., 2008, ECMDA Traceability Workshop (ECMDA-TW) 2008, Proceedings, P49
   Ramesh B, 1997, ANN SOFTW ENG, V3, P397, DOI 10.1023/A:1018969401055
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sánchez Cuadrado J, 2006, LECT NOTES COMPUT SC, V4066, P158
   Santiago I, 2013, ENASE: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P212, DOI 10.5220/0004523402120217
   Santiago I, 2013, LECT NOTES COMPUT SC, V8217, P429, DOI 10.1007/978-3-642-41924-9_35
   Santiago I, 2012, INFORM SOFTWARE TECH, V54, P1340, DOI 10.1016/j.infsof.2012.07.008
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Stevens P, 2008, LECT NOTES COMPUT SC, V5235, P408, DOI 10.1007/978-3-540-88643-3_10
   Tisi M, 2009, LECT NOTES COMPUT SC, V5562, P18, DOI 10.1007/978-3-642-02674-4_3
   Toffetti G, 2013, J VISUAL LANG COMPUT, V24, P207, DOI 10.1016/j.jvlc.2012.10.003
   Vara JM, 2012, J UNIVERS COMPUT SCI, V18, P2364
   Vara JM, 2012, J SYST SOFTWARE, V85, P2368, DOI 10.1016/j.jss.2012.04.080
   Vignaga A., 2009, Metrics for measuring atl model transformations
   Völter M, 2011, IEEE SOFTWARE, V28, P20, DOI 10.1109/MS.2011.139
   von Knethen A, 2003, PROC IEEE INT CONF S, P246, DOI 10.1109/ICSM.2003.1235427
   Willink Edward, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P58, DOI 10.1007/978-3-642-38883-5_8
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
NR 80
TC 17
Z9 18
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2014
VL 40
IS 6
BP 555
EP 583
DI 10.1109/TSE.2014.2316132
PG 29
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AJ9KV
UT WOS:000338030200002
DA 2024-07-18
ER

PT J
AU Shepperd, M
   Bowes, D
   Hall, T
AF Shepperd, Martin
   Bowes, David
   Hall, Tracy
TI Researcher Bias: The Use of Machine Learning in Software Defect
   Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software defect prediction; meta-analysis; researcher bias
ID FAULT-PRONENESS; EMPIRICAL-ANALYSIS; CLASSIFICATION; METRICS; MODELS;
   ANOVA; METAANALYSIS; QUALITY
AB Background. The ability to predict defect-prone software components would be valuable. Consequently, there have been many empirical studies to evaluate the performance of different techniques endeavouring to accomplish this effectively. However no one technique dominates and so designing a reliable defect prediction model remains problematic. Objective. We seek to make sense of the many conflicting experimental results and understand which factors have the largest effect on predictive performance. Method. We conduct a meta-analysis of all relevant, high quality primary studies of defect prediction to determine what factors influence predictive performance. This is based on 42 primary studies that satisfy our inclusion criteria that collectively report 600 sets of empirical prediction results. By reverse engineering a common response variable we build a random effects ANOVA model to examine the relative contribution of four model building factors (classifier, data set, input metrics and researcher group) to model prediction performance. Results. Surprisingly we find that the choice of classifier has little impact upon performance (1.3 percent) and in contrast the major (31 percent) explanatory factor is the researcher group. It matters more who does the work than what is done. Conclusion. To overcome this high level of researcher bias, defect prediction researchers should (i) conduct blind analysis, (ii) improve reporting protocols and (iii) conduct more intergroup studies in order to alleviate expertise issues. Lastly, research is required to determine whether this bias is prevalent in other applications domains.
C1 [Shepperd, Martin; Hall, Tracy] Brunel Univ, Uxbridge UB8 3PH, Middx, England.
   [Bowes, David] Univ Hertfordshire, Sci & Technol Res Inst, Hatfield AL10 9AB, Herts, England.
C3 Brunel University; University of Hertfordshire
RP Shepperd, M (corresponding author), Brunel Univ, Uxbridge UB8 3PH, Middx, England.
EM martin.shepperd@brunel.ac.uk; d.h.bowes@brunel.ac.uk;
   tracy.hall@brunel.ac.uk
RI Shepperd, Martin/F-9683-2013
OI Shepperd, Martin/0000-0003-1874-6145; Hall, Tracy/0000-0002-2728-9014;
   Bowes, David/0000-0001-7014-2811
FU EPSRC [EP/E063039/1] Funding Source: UKRI
CR [Anonymous], 2006, ISESE '06: Proceedings of the 5th International Symposium on Empirical Software Engineering. Volume II: Short Papers and Posters, DOI DOI 10.1145/1159733.1159739.
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Arisholm E., 2008, TR200806 U OSL DEP I
   Arisholm E, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ISSRE.2007.22
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Baldi P, 2000, BIOINFORMATICS, V16, P412, DOI 10.1093/bioinformatics/16.5.412
   Bebarta V, 2003, ACAD EMERG MED, V10, P684, DOI 10.1111/j.1553-2712.2003.tb00056.x
   Bird Christian, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P109, DOI 10.1109/ISSRE.2009.17
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Blettner M, 1999, INT J EPIDEMIOL, V28, P1, DOI 10.1093/ije/28.1.1
   Boulesteix AL, 2010, BIOINFORMATICS, V26, P437, DOI 10.1093/bioinformatics/btp648
   Bowes D, 2014, AUTOMAT SOFTW ENG, V21, P287, DOI 10.1007/s10515-013-0129-8
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Çaglayan B, 2009, 2009 ICSE WORKSHOP ON EMERGING TRENDS IN FREE-LIBRE-OPEN SOURCE SOFTWARE RESEARCH AND DEVELOPMENT, P31, DOI 10.1109/FLOSS.2009.5071357
   Calikli Gul, 2009, 2009 24th International Symposium on Computer and Information Sciences (ISCIS), P531, DOI 10.1109/ISCIS.2009.5291866
   Catal C, 2007, DEPCOS - RELCOMEX '07: INTERNATIONAL CONFERENCE ON DEPENDABILITY OF COMPUTER SYSTEMS, PROCEEDINGS, P238, DOI 10.1109/DEPCOS-RELCOMEX.2007.8
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cruz A. E. C., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P361, DOI 10.1145/1810295.1810393
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   DAVENPORT EC, 1991, EDUC PSYCHOL MEAS, V51, P821, DOI 10.1177/001316449105100403
   de Carvalho AB, 2010, J SYST SOFTWARE, V83, P868, DOI 10.1016/j.jss.2009.12.023
   de Carvalho AB, 2008, PROC INT C TOOLS ART, P387, DOI 10.1109/ICTAI.2008.76
   Denaro G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1109/ICSE.2002.1007972
   Rodríguez JD, 2010, IEEE T PATTERN ANAL, V32, P569, DOI 10.1109/TPAMI.2009.187
   Drummond Chris., 2009, Replicability is not reproducibility: nor is it good science
   Egger M, 1998, BRIT MED J, V316, P140
   Faraway J. J., 2002, Practical Regression and Anova using R, V168
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Forman George, 2010, ACM SIGKDD Explorations Newsletter, DOI DOI 10.1145/1882471.1882479
   Glass G.V., 1981, MetaAnalysis in Social Research
   Glass G. V., 1976, ED RES, V5, P3, DOI [DOI 10.3102/0013189X005010003, 10.2307/1174772ISSN0536-1036, 10.3102/0013189x005010003]
   Gray David, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P96, DOI 10.1049/ic.2011.0012
   Guo L, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P417
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall T, 2012, 2012 11TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2012), VOL 2, P314, DOI 10.1109/ICMLA.2012.226
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   HARWELL MR, 1992, J EDUC STAT, V17, P315, DOI 10.2307/1165127
   Hernández-Orallo J, 2012, J MACH LEARN RES, V13, P2813
   Ince DC, 2012, NATURE, V482, P485, DOI 10.1038/nature10836
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Kanmani S, 2007, INFORM SOFTWARE TECH, V49, P483, DOI 10.1016/j.infsof.2006.07.005
   Kaur A, 2009, 2009 SECOND INTERNATIONAL CONFERENCE ON MACHINE VISION, PROCEEDINGS, ( ICMV 2009), P242, DOI 10.1109/ICMV.2009.54
   Kaur A, 2008, 2008 INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER THEORY AND ENGINEERING, P37, DOI 10.1109/ICACTE.2008.204
   Khoshgoftaar T. M., 2002, Empirical Software Engineering, V7, P297, DOI 10.1023/A:1020511004267
   Khoshgoftaar TM, 2004, EMPIR SOFTW ENG, V9, P229, DOI 10.1023/B:EMSE.0000027781.18360.9b
   Kitchenham B, 2009, P 5 INT C PRED MOD S, P1, DOI DOI 10.1145/1540438.1540444
   Kitchenham B., 2007, EBSE200701 KEEL U ST
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Kohavi R., 1995, INT JOINT C ART INT, V2, P1137, DOI DOI 10.1067/MOD.2000.109031
   Koru AG, 2005, IEEE SOFTWARE, V22, P23, DOI 10.1109/MS.2005.149
   Krishnamoorthya K, 2007, COMPUT STAT DATA AN, V51, P5731, DOI 10.1016/j.csda.2006.09.039
   Kutlubay O, 2007, EUROMICRO CONF PROC, P322
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Levine TR, 2002, HUM COMMUN RES, V28, P612, DOI 10.1093/hcr/28.4.612
   Lim TS, 1996, COMPUT STAT DATA AN, V22, P287, DOI 10.1016/0167-9473(95)00054-2
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   MA Y, 2006, ADV MACHINE LEARNING, P237
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Michie D., 1994, MACHINE LEARNING NEU
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Mizuno O., 2007, Proceedings of the 11th Joint Meeting of the European Software Engineering Conference and the 14th ACM SIGSOFT Symposium on Foundations of Software Engineering, P405
   Mizuno O., 2007, Proceedings of 4th International Workshop on Mining Software Repositories, P4
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   MYNATT CR, 1977, Q J EXP PSYCHOL, V29, P85, DOI 10.1080/00335557743000053
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Nugroho Ariadi, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P21, DOI 10.1109/MSR.2010.5463285
   Pai GJ, 2007, IEEE T SOFTWARE ENG, V33, P675, DOI [10.1109/TSE.2007.70722, 10.1109/TSE.2007.70722.]
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   Pierce CA, 2004, EDUC PSYCHOL MEAS, V64, P916, DOI 10.1177/0013164404264848
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Raeder T., 2010, Proceedings 2010 10th IEEE International Conference on Data Mining (ICDM 2010), P421, DOI 10.1109/ICDM.2010.110
   Seliya N, 2005, NINTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH-ASSURANCE SYSTEMS ENGINEERING, P89, DOI 10.1109/HASE.2005.4
   SHAPIRO S, 1994, AM J EPIDEMIOL, V140, P771, DOI 10.1093/oxfordjournals.aje.a117324
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P987, DOI 10.1109/32.965339
   Shepperd M., 2011, IT DOESNT MATTER WHA
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shivaji S, 2009, IEEE INT CONF AUTOM, P600, DOI 10.1109/ASE.2009.76
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Singh Y, 2008, LECT NOTES COMPUT SC, V5089, P204, DOI 10.1007/978-3-540-69566-0_18
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Tosun A, 2009, INT SYMP EMP SOFTWAR, P478
   Turhan B, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P231
   Vandecruys O, 2008, J SYST SOFTWARE, V81, P823, DOI 10.1016/j.jss.2007.07.034
   Vivanco R., 2010, P 23 CAN C EL COMP E, P1
   Warrens MJ, 2008, PSYCHOMETRIKA, V73, P487, DOI 10.1007/s11336-008-9059-y
   West BT, 2007, Linear mixed models: a practical guide using statistical software
   Zhang HY, 2009, PROC IEEE INT CONF S, P274, DOI 10.1109/ICSM.2009.5306304
   Zhou YM, 2006, IEEE T SOFTWARE ENG, V32, P771, DOI 10.1109/TSE.2006.102
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 94
TC 227
Z9 258
U1 1
U2 44
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2014
VL 40
IS 6
BP 603
EP 616
DI 10.1109/TSE.2014.2322358
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA AJ9KV
UT WOS:000338030200004
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Basin, D
   Clavel, M
   Egea, M
   de Dios, MAG
   Dania, C
AF Basin, David
   Clavel, Manuel
   Egea, Marina
   Garcia de Dios, Miguel A.
   Dania, Carolina
TI A Model-Driven Methodology for Developing Secure Data-Management
   Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Model-driven development; model-driven security; access control; GUI
   models; model transformation
ID GENERATION
AB We present a novel model-driven methodology for developing secure data-management applications. System developers proceed by modeling three different views of the desired application: its data model, security model, and GUI model. These models formalize respectively the application's data domain, authorization policy, and its graphical interface together with the application's behavior. Afterwards a model-transformation function lifts the policy specified by the security model to the GUI model. This allows a separation of concerns where behavior and security are specified separately, and subsequently combined to generate a security-aware GUI model. Finally, a code generator generates a multi-tier application, along with all support for access control, from the security-aware GUI model. We report on applications built using our approach and the associated tool.
C1 [Basin, David] ETH, Dept Comp Sci, Zurich, Switzerland.
   [Clavel, Manuel; Garcia de Dios, Miguel A.; Dania, Carolina] IMDEA Software, Madrid 28223, Spain.
   [Egea, Marina] ATOS Res & Innovat, Madrid, Spain.
C3 Swiss Federal Institutes of Technology Domain; ETH Zurich; IMDEA
   Software Institute
RP Basin, D (corresponding author), ETH, Dept Comp Sci, Zurich, Switzerland.
EM basin@inf.ethz.ch; manuel.clavel@imdea.org; marina.egea@atos.net;
   miguelangel.garcia@imdea.org; carolina.dania@imdea.org
RI Egea, Marina/G-4354-2013
OI Basin, David/0000-0003-2952-939X
FU EU [256980]; Spanish Ministry of Science and Innovation Project
   [TIN2009-14599-C03-01]; Spanish Ministry of Economy and Competitiveness
   Project [TIN2012-39391-C04-04]; Comunidad de Madrid Program
   "PROMETIDOS-CM" [S2009TIC-1465]
FX This work was partially supported by the EU FP7-ICT Project "NESSoS:
   Network of Excellence on Engineering Secure Future Internet Software
   Services and Systems" (256980), by the Spanish Ministry of Science and
   Innovation Project "DESAFIOS-10" (TIN2009-14599-C03-01), by the Spanish
   Ministry of Economy and Competitiveness Project "StrongSoft"
   (TIN2012-39391-C04-04), and by Comunidad de Madrid Program
   "PROMETIDOS-CM" (S2009TIC-1465).
CR ActionGUI, 2013, TECHNICAL REPORT
   Basin D, 2006, ACM T SOFTW ENG METH, V15, P39, DOI 10.1145/1125808.1125810
   Basin David, 2011, Foundations of Security Analysis and Design VI. FOSAD Tutorial Lectures: LNCS 6858, P101, DOI 10.1007/978-3-642-23082-0_4
   Basin D, 2011, APPLIED INFORMATION SECURITY: A HANDS-ON APPROACH, P1, DOI 10.1007/978-3-642-24474-2_1
   Basin D, 2010, LECT NOTES COMPUT SC, V5965, P201, DOI 10.1007/978-3-642-11747-3_16
   Baumeister H, 1999, LECT NOTES COMPUT SC, V1723, P614
   Busch M., 2012, ACTIONUWE TRANSFORMA
   Busch M., 2011, THESIS LUDWIG MAXIMI
   Busch M, 2009, LECT NOTES COMPUT SC, V5648, P505, DOI 10.1007/978-3-642-02818-2_49
   Calvary G, 2002, CAMELEON REFERENCE F
   da Cruz A.M.R., 2010, THESIS FACULDADE ENG
   Elkoutbi M., 2006, Automated Software Engineering, V13, P5, DOI 10.1007/s10515-006-5465-5
   Ferraiolo D. F., 2001, ACM Transactions on Information and Systems Security, V4, P224, DOI 10.1145/501978.501980
   Jia XP, 2007, SOFTWARE QUAL J, V15, P27, DOI 10.1007/s11219-006-9002-3
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Kroiss C, 2009, LECT NOTES COMPUT SC, V5648, P493, DOI 10.1007/978-3-642-02818-2_46
   Kulkarni V, 2010, LECT NOTES COMPUT SC, V6395, P331
   Limbourg Q, 2005, LECT NOTES COMPUT SC, V3425, P200
   Molina P.J., 2002, COMPUT AIDED DESIGN, P63, DOI DOI 10.1007/978-94-010-0421-3_5
   Mozilla Foundation, 2013, XML US INT LANG XUL
   Object Management Group, 2003, TECHNICAL REPORT
   Object Management Group, 2012, TECHNICAL REPORT
   Pastor O, 2001, INFORM SYST, V26, P507, DOI 10.1016/S0306-4379(01)00035-7
   da Cruz AMR, 2010, LECT NOTES COMPUT SC, V6394, P256
   Schramm A, 2010, LECT NOTES COMPUT SC, V6394, P271
   Valdazo J., 2012, THESIS U COMPLUTENSE
   Web Models Company, 2010, WEB RAT YOU THINK YO
   Woodcock J., 1996, Using Z: Specification, Refinement, and Proof
NR 28
TC 15
Z9 16
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2014
VL 40
IS 4
BP 324
EP 337
DI 10.1109/TSE.2013.2297116
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AH3WD
UT WOS:000336056000001
DA 2024-07-18
ER

PT J
AU Latorre, R
AF Latorre, Roberto
TI Effects of Developer Experience on Learning and Applying Unit
   Test-Driven Development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Test-driven development; test-first design; software engineering
   process; software quality/SQA; software construction; process
   conformance; programmer productivity
ID SOFTWARE-DEVELOPMENT; QUALITY; PRODUCTIVITY; TEAMS; TDD
AB Unit test-driven development (UTDD) is a software development practice where unit test cases are specified iteratively and incrementally before production code. In the last years, researchers have conducted several studies within academia and industry on the effectiveness of this software development practice. They have investigated its utility as compared to other development techniques, focusing mainly on code quality and productivity. This quasi-experiment analyzes the influence of the developers' experience level on the ability to learn and apply UTDD. The ability to apply UTDD is measured in terms of process conformance and development time. From the research point of view, our goal is to evaluate how difficult is learning UTDD by professionals without any prior experience in this technique. From the industrial point of view, the goal is to evaluate the possibility of using this software development practice as an effective solution to take into account in real projects. Our results suggest that skilled developers are able to quickly learn the UTDD concepts and, after practicing them for a short while, become as effective in performing small programming tasks as compared to more traditional test-last development techniques. Junior programmers differ only in their ability to discover the best design, and this translates into a performance penalty since they need to revise their design choices more frequently than senior programmers.
C1 [Latorre, Roberto] Univ Autonoma Madrid, Madrid, Spain.
C3 Autonomous University of Madrid
RP Latorre, R (corresponding author), Univ Autonoma Madrid, Madrid, Spain.
EM roberto.latorre@uam.es
RI Latorre, Roberto/F-9436-2012
OI Latorre, Roberto/0000-0003-3835-7905
CR Abrahamsson P, 2005, INT FED INFO PROC, V180, P227
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   Astels Dave, 2003, Test-Driven Development: A Practical Guide
   Beck K, 2001, IEEE SOFTWARE, V18, P87, DOI 10.1109/52.951502
   Bhat T., 2006, Proceedings of the 2006 ACM/IEEE International Symposium on Empirical Software Engineering (ISESE '06), P356, DOI [DOI 10.1145/1159733.1159787, 10.1145/1159733.1159787]
   Cao L, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.1
   Causevic A., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P337, DOI 10.1109/ICST.2011.19
   Crispin I, 2006, IEEE SOFTWARE, V23, P70, DOI 10.1109/MS.2006.157
   Domino MA, 2007, INFORM TECHNOL MANAG, V8, P297, DOI 10.1007/s10799-007-0016-8
   Dvornik T, 2011, 2011 24TH IEEE-CS CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING (CSEET), P51, DOI 10.1109/CSEET.2011.5876137
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Erdogmus Hakan, 2010, Encyclopedia of Software Engineering, P1211
   George B, 2004, INFORM SOFTWARE TECH, V46, P337, DOI 10.1016/j.infsof.2003.09.011
   GEORGE B, 2003, P 2003 ACM S APPL CO, P1135, DOI DOI 10.1145/952532.952753
   Geras A, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P405, DOI 10.1109/METRIC.2004.1357925
   Hendricksons E., 2008, P 7 SOFTW TEST AUSTR
   Hilton Michael., 2012, Proceedings of the 17th ACM Annual Conference on Innovation and Technology in Computer Science Education, ITiCSE'12, P93
   Höfer A, 2009, LECT NOTES BUS INF P, V31, P33
   Janzen D, 2005, COMPUTER, V38, P43, DOI 10.1109/MC.2005.314
   Janzen DS, 2008, IEEE SOFTWARE, V25, P77, DOI 10.1109/MS.2008.34
   Jeffries R, 2007, IEEE SOFTWARE, V24, P24, DOI 10.1109/MS.2007.75
   Kollanus S., 2008, Proceedings of the 8th International Conference on Computing Education Research, P25
   Koskela L., 2007, Test Driven: Practical TDD and Acceptance TDD for Java Developers
   Kou HB, 2010, AUTOMAT SOFTW ENG, V17, P57, DOI 10.1007/s10515-009-0058-8
   Latorre R, 2014, EMPIR SOFTW ENG, V19, P753, DOI 10.1007/s10664-013-9281-9
   MacQueen J., 1967, P 5 BERK S MATH STAT, P281
   Madeyski L, 2007, LECT NOTES COMPUT SC, V4764, P200
   Madeyski L, 2010, TEST-DRIVEN DEVELOPMENT, P1, DOI 10.1007/978-3-642-04288-1
   Maximilien EM, 2003, PROC INT CONF SOFTW, P564, DOI 10.1109/ICSE.2003.1201238
   Müller MM, 2007, EMPIR SOFTW ENG, V12, P593, DOI 10.1007/s10664-007-9048-2
   Muller M. M., 2002, IEE Proceedings-Software, V149, P131, DOI 10.1049/ip-sen:20020540
   Müller MM, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P151, DOI 10.1109/METRIC.2004.1357899
   Nagappan N, 2008, EMPIR SOFTW ENG, V13, P289, DOI 10.1007/s10664-008-9062-z
   Rafique Y, 2013, IEEE T SOFTWARE ENG, V39, P835, DOI 10.1109/TSE.2012.28
   Rasmusson J, 2003, IEEE SOFTWARE, V20, P21, DOI 10.1109/MS.2003.1196316
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Ryan S, 2009, J SYST SOFTWARE, V82, P229, DOI 10.1016/j.jss.2008.05.037
   Sfetsos P, 2006, EMPIR SOFTW ENG, V11, P269, DOI 10.1007/s10664-006-6404-6
   van Deursen A, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P176, DOI 10.1109/WCRE.2001.957822
   Van Deursen Arie., 2001, Refactoring Test Code
   Williams L., 2003, P 14 INT S SOFTW REL, V2003, P34
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Xu R, 2005, IEEE T NEURAL NETWOR, V16, P645, DOI 10.1109/TNN.2005.845141
   Ynchausti R.A., 2001, P XP 2001 C CAGL IT, P79
NR 44
TC 19
Z9 23
U1 4
U2 22
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2014
VL 40
IS 4
BP 381
EP 395
DI 10.1109/TSE.2013.2295827
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AH3WD
UT WOS:000336056000004
DA 2024-07-18
ER

PT J
AU Lee, G
   Espinosa, JA
   DeLone, WH
AF Lee, Gwanhoo
   Espinosa, J. Alberto
   DeLone, William H.
TI Task Environment Complexity, Global Team Dispersion, Process
   Capabilities, and Coordination in Software Development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Global boundaries; global software development; user requirements
   dynamism; software process capability; task environment complexity; team
   coordination; team dispersion
ID INFORMATION-SYSTEMS SUCCESS; PERFORMANCE; KNOWLEDGE; MODEL;
   AMBIDEXTERITY; FLEXIBILITY; UNCERTAINTY; AGILITY; SPACE; WORK
AB Software development teams are increasingly global. Team members are separated by multiple boundaries such as geographic location, time zone, culture, and organization, presenting substantial coordination challenges. Global software development becomes even more challenging when user requirements change dynamically. However, little empirical research has investigated how team dispersion across multiple boundaries and user requirements dynamism, which collectively increase task environment complexity, influence team coordination and software development success in the global context. Further, we have a limited understanding of how software process capabilities such as rigor, standardization, agility, and customizability mitigate the negative effects of global team dispersion and user requirements dynamism. To address these important issues, we test a set of relevant hypotheses using field survey data obtained from both project managers and stakeholders. Our results show that global team dispersion and user requirements dynamism have a negative effect on coordination effectiveness. We find that the negative effect of global team dispersion on coordination effectiveness decreases as process standardization increases and that the negative effect of user requirements dynamism on coordination effectiveness decreases as process agility increases. We find that coordination effectiveness has a positive effect on global software development success in terms of both process and product aspects.
C1 [Lee, Gwanhoo; Espinosa, J. Alberto; DeLone, William H.] Amer Univ, Kogod Sch Business, Washington, DC 20016 USA.
C3 American University
RP Lee, G (corresponding author), Amer Univ, Kogod Sch Business, 4400 Massachusetts Ave NW, Washington, DC 20016 USA.
FU Kogod School of Business at American University, Washington, DC, and its
   Center for IT and the Global Economy (CITGE)
FX This work was supported in part by research grants from the Kogod School
   of Business at American University, Washington, DC, and its Center for
   IT and the Global Economy (CITGE).
CR Adler PS, 1999, ORGAN SCI, V10, P43, DOI 10.1287/orsc.10.1.43
   Agerfalk P.J., 2006, COMMUN ACM, V49, P27
   Ågerfalk PJ, 2009, INFORM SYST RES, V20, P317, DOI 10.1287/isre.1090.0244
   Ahern D., 2008, CMMI DISTILLED PRACT
   Aiken L.S., 1992, MULTIPLE REGRESSION
   Allen T. J., 1977, Managing the flow of technology: technology transfer and the dissemination of technical information within RD organizations
   ANCONA DG, 1992, ORGAN SCI, V3, P321, DOI 10.1287/orsc.3.3.321
   [Anonymous], 2005, Extreme programming explained: Embrace change
   [Anonymous], 2004, Agile and Iterative Development
   ARGOTE L, 1995, J APPL SOC PSYCHOL, V25, P512, DOI 10.1111/j.1559-1816.1995.tb01765.x
   Banker RD, 2000, INFORM SYST RES, V11, P219, DOI 10.1287/isre.11.3.219.12209
   Banker RD, 1998, MANAGE SCI, V44, P433, DOI 10.1287/mnsc.44.4.433
   Belsley D. A., 2005, Regression Diagnostics: Identifying Influential Data and Sources of Collinearity
   Berry D, 2003, IBM SYST J, V42, P542, DOI 10.1147/sj.424.0542
   Birkinshaw J, 2004, MIT SLOAN MANAGE REV, V45, P47
   Boehm B.W., 2004, Balancing Agility and Discipline: A Guide for the Perplexed
   Cameron J, 2002, COMMUN ACM, V45, P72, DOI 10.1145/504729.504731
   CAMPBELL DJ, 1988, ACAD MANAGE REV, V13, P40, DOI 10.2307/258353
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   Cockburn A., 2007, Agile software development: the cooperative game
   Cohen J., 1988, STAT POWER ANAL BEHA
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   COOPRIDER JG, 1991, J MANAGE INFORM SYST, V7, P67
   Cramton CD, 2001, ORGAN SCI, V12, P346, DOI 10.1287/orsc.12.3.346.10098
   Crowston K, 1998, IBM SYST J, V37, P227, DOI 10.1147/sj.372.0227
   Cummings JN, 2004, MANAGE SCI, V50, P352, DOI 10.1287/mnsc.1030.0134
   Cummings JN, 2009, INFORM SYST RES, V20, P420, DOI 10.1287/isre.1090.0239
   CURTIS B, 1992, COMMUN ACM, V35, P75, DOI 10.1145/130994.130998
   Cusumano M, 2008, COMMUN ACM, V51, P15, DOI 10.1145/1314215.1314218
   Damian D, 2008, IEEE T SOFTWARE ENG, V34, P116, DOI 10.1109/TSE.2007.70758
   Darcy DP, 2005, IEEE T SOFTWARE ENG, V31, P982, DOI 10.1109/TSE.2005.130
   Deephouse C., 1995, Journal of Management Information Systems, V12, P187
   DeLone WH, 2003, J MANAGE INFORM SYST, V19, P9, DOI 10.1080/07421222.2003.11045748
   DeLone WH, 1992, INFORM SYST RES, V3, P60, DOI 10.1287/isre.3.1.60
   DESANCTIS G, 1994, ORGAN SCI, V5, P121, DOI 10.1287/orsc.5.2.121
   DORFMAN R, 1979, REV ECON STAT, V61, P146, DOI 10.2307/1924845
   DUNCAN RB, 1972, ADMIN SCI QUART, V17, P313, DOI 10.2307/2392145
   Espinosa J. A., 2006, Information Technology & People, V19, P345, DOI 10.1108/09593840610718036
   Espinosa JA, 2007, ORGAN SCI, V18, P613, DOI 10.1287/orsc.1070.0297
   Espinosa JA, 2007, J MANAGE INFORM SYST, V24, P135, DOI 10.2753/MIS0742-1222240104
   Espinosa JA, 2012, IEEE T ENG MANAGE, V59, P91, DOI 10.1109/TEM.2011.2126579
   Espinosa JA, 2003, J MANAGE INFORM SYST, V19, P157
   Fitzgerald B, 2003, COMMUN ACM, V46, P64, DOI 10.1145/641205.641206
   Fryer K., 2008, GLOBAL SOFTWARE DEV
   Harris ML, 2009, INFORM SYST RES, V20, P400, DOI 10.1287/isre.1090.0240
   Harter DE, 2012, IEEE T SOFTWARE ENG, V38, P810, DOI 10.1109/TSE.2011.63
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Hinds PJ, 2003, ORGAN SCI, V14, P615, DOI 10.1287/orsc.14.6.615.24872
   HUMPHREY WS, 1991, IEEE SOFTWARE, V8, P11, DOI 10.1109/52.300031
   Huy QN, 2002, ADMIN SCI QUART, V47, P31, DOI 10.2307/3094890
   Jalote P., 2000, CMM PRACTICE PROCESS
   Jarke M, 1998, COMMUN ACM, V41, P32, DOI 10.1145/290133.290145
   Karamouzis Frances, 2011, KEY ISSUES IT SERVIC
   Kemerer C. F., 1995, Annals of Software Engineering, V1, P1, DOI 10.1007/BF02249043
   KLIMOSKI R, 1994, J MANAGE, V20, P403, DOI 10.1177/014920639402000206
   KORSGAARD MA, 1995, J MANAGE, V21, P657, DOI 10.1177/014920639502100404
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Krishnan MS, 1999, IEEE T SOFTWARE ENG, V25, P800, DOI 10.1109/32.824401
   LATANE B, 1995, PERS SOC PSYCHOL B, V21, P795, DOI 10.1177/0146167295218002
   Lee G, 2005, EUR J INFORM SYST, V14, P75, DOI 10.1057/palgrave.ejis.3000523
   Lee G, 2006, COMMUN ACM, V49, P35, DOI 10.1145/1164394.1164417
   Lee G, 2010, MIS QUART, V34, P87
   Loch KD, 2003, IEEE T ENG MANAGE, V50, P45, DOI 10.1109/TEM.2002.808257
   Lu M., 2006, J GLOBAL INFORM TECH, V9, P4, DOI DOI 10.1080/1097198X.2006.10856412
   Lyytinen K, 2006, EUR J INFORM SYST, V15, P183, DOI 10.1057/palgrave.ejis.3000604
   Malhotra NK, 2006, MANAGE SCI, V52, P1865, DOI 10.1287/mnsc.1060.0597
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   March J.G., 1958, ORGANIZATIONS
   Maruping LM, 2009, INFORM SYST RES, V20, P377, DOI 10.1287/isre.1090.0238
   MILLER D, 1982, STRATEGIC MANAGE J, V3, P1, DOI 10.1002/smj.4250030102
   NIDUMOLU S, 1995, INFORM SYST RES, V6, P191, DOI 10.1287/isre.6.3.191
   Nidumolu S. R., 1996, Journal of Management Information Systems, V13, P77
   Nidumolu SR, 1996, INFORM MANAGE, V31, P135, DOI 10.1016/S0378-7206(96)01073-7
   Nidumolu SR, 1998, MIS QUART, V22, P105, DOI 10.2307/249392
   O'Leary MB, 2010, ORGAN SCI, V21, P115, DOI 10.1287/orsc.1090.0434
   Olson GM, 2000, HUM-COMPUT INTERACT, V15, P139, DOI 10.1207/S15327051HCI1523_4
   Orlikowski WJ, 2002, ORGAN SCI, V13, P249, DOI 10.1287/orsc.13.3.249.2776
   Oshri I, 2008, INFORM SYST J, V18, P593, DOI 10.1111/j.1365-2575.2007.00243.x
   Petter S, 2007, MIS QUART, V31, P623
   PODSAKOFF PM, 1986, J MANAGE, V12, P531, DOI 10.1177/014920638601200408
   Pyster AB, 2005, IEEE SOFTWARE, V22, P18, DOI 10.1109/MS.2005.137
   Ramesh B, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1164394.1164418
   Ramesh B, 2012, INFORM SYST RES, V23, P323, DOI 10.1287/isre.1110.0351
   Ren YQ, 2008, J MANAGE INFORM SYST, V25, P105, DOI 10.2753/MIS0742-1222250105
   Sambamurthy V, 2000, DECISION SCI, V31, P391, DOI 10.1111/j.1540-5915.2000.tb01628.x
   Sarker S, 2004, EUR J INFORM SYST, V13, P3, DOI 10.1057/palgrave.ejis.3000485
   Sarker S, 2009, INFORM SYST RES, V20, P440, DOI 10.1287/isre.1090.0241
   Slaughter SA, 2006, MIS QUART, V30, P891
   Teasley SD, 2002, IEEE T SOFTWARE ENG, V28, P671, DOI 10.1109/TSE.2002.1019481
   Thompson J., 2017, Organizations in action
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   van Oosterhout M, 2006, EUR J INFORM SYST, V15, P132, DOI 10.1057/palgrave.ejis.3000601
   VANDEVEN AH, 1976, AM SOCIOL REV, V41, P322
   Whitten J., 2001, System analysis and Design Methods, V5th
   WOOD RE, 1986, ORGAN BEHAV HUM DEC, V37, P60, DOI 10.1016/0749-5978(86)90044-0
   Xia WD, 2005, J MANAGE INFORM SYST, V22, P45, DOI 10.1080/07421222.2003.11045831
   Xia WD, 2004, COMMUN ACM, V47, P68, DOI 10.1145/986213.986215
   Xu P, 2007, J MANAGE INFORM SYST, V24, P293, DOI [10.2753/MIS0742-1222240211, 10.2753/MIS0742-I22224021I]
NR 98
TC 23
Z9 30
U1 0
U2 48
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2013
VL 39
IS 12
BP 1753
EP 1771
DI 10.1109/TSE.2013.40
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 260PO
UT WOS:000327607000008
DA 2024-07-18
ER

PT J
AU Jiau, HC
   Mar, LW
   Chen, JC
AF Jiau, Hewijin Christine
   Mar, Lee Wei
   Chen, Jinghong Cox
TI OBEY: Optimal Batched Refactoring Plan Execution for Class
   Responsibility Redistribution
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Reengineering; class responsibility redistribution; batched refactoring
   execution; change impact analysis; optimization
ID SOFTWARE; CONFLICTS; MODEL
AB The redistribution of class responsibilities is a common reengineering practice in object-oriented (OO) software evolution. During the redistribution, developers frequently construct batched refactoring plans for moving multiple methods and fields among various classes. With an objective of carefully maintaining the cohesion and coupling degree of the class design, executing a batched refactoring plan without introducing any objective-violating side effect into the refactored code is essential. However, using most refactoring engines for batched refactoring plan execution introduces coupling-increasing Middle Man bad smell in the final refactored code and therefore makes the refactoring execution suboptimal in achieving the redistribution objective. This work proposes OBEY, a methodology for optimal batched refactoring plan execution. OBEY analyzes a batched refactoring plan, identifies Middle Man symptoms that cause suboptimal execution, and renovates the plan for optimal execution. We have conducted an empirical study on three open-source software projects to confirm the effectiveness of OBEY in a practical context.
C1 [Jiau, Hewijin Christine; Chen, Jinghong Cox] Natl Cheng Kung Univ, Dept Elect Engn, Tainan 701, Taiwan.
   [Mar, Lee Wei] Natl Cheng Kung Univ, Inst Comp & Commun Engn, Tainan 701, Taiwan.
C3 National Cheng Kung University; National Cheng Kung University
RP Jiau, HC (corresponding author), Natl Cheng Kung Univ, Dept Elect Engn, 1 Univ Rd, Tainan 701, Taiwan.
EM jiauhjc@mail.ncku.edu.tw; lwmar@nature.ee.ncku.edu.tw; coxchen@gmail.com
FU Taiwan National Science Council (NSC) [NSC 97-2221-E-006-177-MY3,
   98-2221-E-006-099-MY2, 99-2218-E-006-002, 100-2221-E-006-133-MY3,
   101-2221-E-006-247-MY3]
FX The authors would like to thank Professor Paul Strooper and the
   anonymous reviewers for their valuable suggestions that improved this
   paper. This research was supported in part by the Taiwan National
   Science Council (NSC) under Contracts NSC 97-2221-E-006-177-MY3,
   98-2221-E-006-099-MY2, 99-2218-E-006-002, 100-2221-E-006-133-MY3, and
   101-2221-E-006-247-MY3.
CR [Anonymous], 2012, VIS STUD
   [Anonymous], 2012, JustCode
   [Anonymous], 2012, XCODE
   [Anonymous], 2012, NetBeans
   [Anonymous], 2012, CodeRush
   [Anonymous], 2012, VIS ASS 10
   [Anonymous], 2012, J BUILDER
   [Anonymous], 2012, INTELLIJ IDEA
   [Anonymous], INFOCOMP J COMPUTER
   [Anonymous], 2012, JDEVELOPER
   [Anonymous], 2012, ECL JAV DEV TOOLS JD
   [Anonymous], 2012, RESHARPER
   [Anonymous], 2007, P 6 JOINT M EUR SOFT
   [Anonymous], 2012, JCREATOR
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bavota G, 2010, PROC IEEE INT CONF S
   Bavota G, 2011, J SYST SOFTWARE, V84, P397, DOI 10.1016/j.jss.2010.11.918
   Bowman M, 2010, IEEE T SOFTWARE ENG, V36, P817, DOI 10.1109/TSE.2010.70
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Bruegge B., 2009, OBJECT ORIENTED SOFT
   Cassell K, 2009, IEEE INT CONF AUTOM, P595, DOI 10.1109/ASE.2009.21
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cinneide M.O., 2000, THESIS NATL U IRELAN
   Cinneide M.O., 1999, P IEEE INT C SOFTW M
   D'Ambros M, 2009, IEEE T SOFTWARE ENG, V35, P720, DOI 10.1109/TSE.2009.17
   Demeyer S., 2002, Object-Oriented Reengineering Patterns
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   Eclipse Foundation, 2012, ECLIPSE
   Fokaefs M, 2009, PROC IEEE INT CONF S, P93, DOI 10.1109/ICSM.2009.5306332
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Jiau H.C., 2009, ACM SIGSOFT SOFTWARE, V34, P1
   Kerievsky J., 2007, REFACTORING PATTERNS
   Kniesel G, 2004, SCI COMPUT PROGRAM, V52, P9, DOI 10.1016/j.scico.2004.03.002
   Lambers L, 2006, ELECTRON NOTES THEOR, V152, P97, DOI 10.1016/j.entcs.2006.01.017
   Liu H, 2008, IET SOFTW, V2, P446, DOI 10.1049/iet-sen:20070033
   Mar L.W., 2008, PREVIEWING EFFECTS R
   Mar L.W., 2010, P 1 CROSS STRAIT C S
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Mealy E, 2006, 2006 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P331
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mens T, 2007, SOFTW SYST MODEL, V6, P269, DOI 10.1007/s10270-006-0044-6
   Mens T, 2005, ELECTRON NOTES THEOR, V127, P113, DOI 10.1016/j.entcs.2004.08.038
   Mitchell B., 2002, THESIS DREXEL U
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Moha N, 2010, FORM ASP COMPUT, V22, P345, DOI 10.1007/s00165-009-0115-x
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Moore I, 1996, ACM SIGPLAN NOTICES, V31, P235, DOI 10.1145/236338.236361
   Munro MatthewJames., 2005, Software Metrics, P15, DOI 10.1109/metrics.2005.38
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Ratzinger J., 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI DOI 10.1145/1082983.1083155
   Ren X, 2006, IEEE T SOFTWARE ENG, V32, P718, DOI 10.1109/TSE.2006.90
   Roberts D., 1999, Ph. D. Dissertation
   Ryder BG, 2001, ACM SIGPLAN NOTICES, P46
   Schach Stephen R., 2004, Object-Oriented and Classical Software Engineering
   Schäfer M, 2010, ACM SIGPLAN NOTICES, V45, P286, DOI 10.1145/1932682.1869485
   Schäfer M, 2009, LECT NOTES COMPUT SC, V5653, P369, DOI 10.1007/978-3-642-03013-0_17
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Serban G, 2008, LECT NOTES ARTIF INT, V5097, P693, DOI 10.1007/978-3-540-69731-2_67
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   Streckenbach M, 2004, ACM SIGPLAN NOTICES, V39, P315, DOI 10.1145/1035292.1029003
   Tip F, 2003, ACM SIGPLAN NOTICES, V38, P13, DOI 10.1145/949343.949308
   Tip F, 2011, ACM T PROGR LANG SYS, V33, DOI 10.1145/1961204.1961205
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Xu X, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P75
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 68
TC 9
Z9 9
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2013
VL 39
IS 9
BP 1245
EP 1263
DI 10.1109/TSE.2013.19
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 207ZG
UT WOS:000323643000006
DA 2024-07-18
ER

PT J
AU Zickert, F
   Beck, R
AF Zickert, Frank
   Beck, Roman
TI Coping with Existing Systems in Information Systems Development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Complexity measures; improvements; software maintenance; software
   engineering process
ID SOFTWARE; COMPLEXITY; QUALITY; COORDINATION; PERFORMANCE; FAMILIARITY;
   MODEL; TEAM
AB Determining how to cope with existing systems is an important issue for information systems development (ISD). In this paper, we investigate how well different ISD patterns are suited for coping with existing systems. Empirical results, gathered from three software development projects undertaken by a financial institution, suggest propositions regarding how ISD patterns and existing systems affect the characteristics of objective ISD complexity, which in turn determine overall experienced complexity. Existing systems increase complexity due to conflicting interdependencies, but ISD patterns that reduce this complexity, such as those that employ bottom-up or concurrent consideration patterns, are best suited for coping with existing systems. In contrast, top-down and iterative focusing patterns, as classically used in new development, increase the complexity associated with conflicting interdependency, which makes them particularly unsuited for coping with existing systems in ISD.
C1 [Zickert, Frank; Beck, Roman] Goethe Univ Frankfurt, E Finance Lab, Chair E Finance & Serv Sci, Inst Informat Syst, D-60323 Frankfurt, Germany.
C3 Goethe University Frankfurt
RP Zickert, F (corresponding author), Goethe Univ Frankfurt, E Finance Lab, Chair E Finance & Serv Sci, Inst Informat Syst, Gruneburgpl 1, D-60323 Frankfurt, Germany.
EM mail@frankzickert.de; rbeck@wiwi.uni-frankfurt.de
RI Beck, Roman/AAL-7820-2020
OI Beck, Roman/0000-0002-6341-2382
CR Abdel-Hamid T., 1991, SOFTWAR PROJECT DYNA
   Agrawal M, 2007, IEEE T SOFTWARE ENG, V33, P145, DOI 10.1109/TSE.2007.29
   Anda BCD, 2009, IEEE T SOFTWARE ENG, V35, P407, DOI 10.1109/TSE.2008.89
   [Anonymous], 1997, Software engineering with reusable components
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   Banker RD, 2000, INFORM SYST RES, V11, P219, DOI 10.1287/isre.11.3.219.12209
   Banker RD, 1998, MANAGE SCI, V44, P433, DOI 10.1287/mnsc.44.4.433
   Basili V., 1988, UMIACSTR8892
   Basili VR, 1996, COMMUN ACM, V39, P104, DOI 10.1145/236156.236184
   BASILI VR, 1990, IEEE SOFTWARE, V7, P19, DOI 10.1109/52.43045
   Beck K., 2000, EXTREME PROGRAMMING
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Benbasat I, 1996, DECIS SUPPORT SYST, V17, P241, DOI 10.1016/0167-9236(96)00003-6
   Benbya H., 2006, Information Technology & People, V19, P12, DOI 10.1108/09593840610649952
   Bennett Keith H, 2000, Software maintenance and evolution, P73, DOI DOI 10.1145/336512.336534
   Bergman M., 2002, Scandinavian Journal of Information Systems, V14, P37
   Bergman M., 2002, Requirements Engineering, V7, P152, DOI 10.1007/s007660200011
   Boehm B., 2007, SOFTWARE ENG BW BOEH, P151
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Buckley J, 2005, J SOFTW MAINT EVOL-R, V17, P309, DOI 10.1002/smr.319
   CAMPBELL DJ, 1988, ACAD MANAGE REV, V13, P40, DOI 10.2307/258353
   CAMPBELL JP, 1995, ANN EMERG MED, V26, P590, DOI 10.1016/S0196-0644(95)70009-9
   Canfora G., 2002, HDB SOFTWARE ENG KNO, P91
   Chapin N, 2001, J SOFTW MAINT EVOL-R, V13, P3, DOI 10.1002/smr.220
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   Cummins F.A., 2002, ENTERPRISE INTEGRATI
   Deephouse C., 1995, Journal of Management Information Systems, V12, P187
   Dubé L, 2003, MIS QUART, V27, P597
   Duimering PR, 2006, KNOWL PROCESS MANAG, V13, P239, DOI 10.1002/kpm.260
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Espinosa JA, 2007, ORGAN SCI, V18, P613, DOI 10.1287/orsc.1070.0297
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   Frakes W, 1996, ACM COMPUT SURV, V28, P415, DOI 10.1145/234528.234531
   Gebauer J, 2006, J ASSOC INF SYST, V7, P122, DOI 10.17705/1jais.00084
   Gill T. G., 2006, Informing Science, V9, P1
   GOODMAN PS, 1991, J APPL PSYCHOL, V76, P578, DOI 10.1037/0021-9010.76.4.578
   Gregor S, 2006, MIS QUART, V30, P611
   Hanseth O, 1996, SCI TECHNOL HUM VAL, V21, P407, DOI 10.1177/016224399602100402
   Hasselbring W, 2000, COMMUN ACM, V43, P33
   HIRSCHHEIM R, 1989, COMMUN ACM, V32, P1199, DOI 10.1145/67933.67937
   JICK TD, 1979, ADMIN SCI QUART, V24, P602, DOI 10.2307/2392366
   Kauffman Stuart A., 1995, At Home in the Universe: The Search for Laws of Self-Organization and Complexity
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   LEE AS, 1989, MIS QUART, V13, P33, DOI 10.2307/248698
   Lee AS, 2003, INFORM SYST RES, V14, P221, DOI 10.1287/isre.14.3.221.16560
   Lientz B P., 1980, Software Maintenance Management
   Luger G.F., 2002, ARTIF INTELL, V4th
   Marengo L, 2005, J ECON BEHAV ORGAN, V58, P303, DOI 10.1016/j.jebo.2004.03.020
   Mckeen J D., 2002, Communications of the Association for Information Systems, V8, P451
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   MILI H, 1995, IEEE T SOFTWARE ENG, V21, P528, DOI 10.1109/32.391379
   NEWELL A, 1976, COMMUN ACM, V19, P113, DOI 10.1145/360018.360022
   NIDUMOLU S, 1995, INFORM SYST RES, V6, P191, DOI 10.1287/isre.6.3.191
   Nosek J. T., 1990, Journal of Software Maintenance: Research and Practice, V2, P157, DOI 10.1002/smr.4360020303
   Patton MQ, 1999, HEALTH SERV RES, V34, P1189
   PETTIGREW AM, 1989, HARV BUS C, V1, P13
   Pigoski ThomasM., 1997, PRACTICAL SOFTWARE M
   Pohl K., 1996, Requirements engineering: An overview
   Rajlich V, 2006, COMMUN ACM, V49, P67, DOI 10.1145/1145287.1145289
   Rajlich VT, 2000, COMPUTER, V33, P66, DOI 10.1109/2.869374
   Sawhney M, 2001, HARVARD BUS REV, V79, P100
   Sawyer S, 2001, QUALITATIVE RESEARCH IN IS: ISSUES AND TRENDS, P163
   SHAW M, 1990, IEEE SOFTWARE, V7, P15, DOI 10.1109/52.60586
   Shenhar AJ, 2001, MANAGE SCI, V47, P394, DOI 10.1287/mnsc.47.3.394.9772
   Simon H.A., 1996, The Sciences of the Artificial, V3rd ed
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P908, DOI 10.1109/32.730542
   Walsham G, 2006, EUR J INFORM SYST, V15, P320, DOI 10.1057/palgrave.ejis.3000589
   WALZ DB, 1993, COMMUN ACM, V36, P63, DOI 10.1145/163430.163447
   Yin R., 1994, CASE STUDY RES DESIG
   Yin RK, 1999, HEALTH SERV RES, V34, P1209
   Zickert F., 2011, P 10 INT C WIRTSCH
NR 72
TC 1
Z9 1
U1 0
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2012
VL 38
IS 5
BP 1027
EP 1039
DI 10.1109/TSE.2011.89
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 009BA
UT WOS:000308999100003
DA 2024-07-18
ER

PT J
AU Coronato, A
   De Pietro, G
AF Coronato, Antonio
   De Pietro, Giuseppe
TI Tools for the Rapid Prototyping of Provably Correct Ambient Intelligence
   Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Safety critical ambient intelligence systems; middleware
   infrastructures; designing tools
ID SPECIFICATION; VERIFICATION; SERVICE; DESIGN; SYSTEM
AB Ambient Intelligence technologies have not yet been widely adopted in safety critical scenarios. This principally has been due to fact that acceptable degrees of dependability have not been reached for the applications that rely on such technologies. However, the new critical application domains, like Ambient Assisted Living and Smart Hospitals, which are currently emerging, are increasing the need for methodologies and tools that can improve the reliability of the final systems. This paper presents a middleware architecture for safety critical Ambient Intelligence applications which provides the developer with services for runtime verification. It is now possible to continuously monitor and check the running system against correctness properties defined at design time. Moreover, a visual tool which allows the formal design of several of the characteristics of an Ambient Intelligence application and the automatic generation of setting up parameters and code for the middleware infrastructure is also presented.
C1 [Coronato, Antonio; De Pietro, Giuseppe] CNR, Inst High Performance Comp & Networking ICAR, I-80131 Naples, Italy.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto di Calcolo e Reti ad
   Alte Prestazioni (ICAR-CNR)
RP Coronato, A (corresponding author), CNR, Inst High Performance Comp & Networking ICAR, Via P Castellino 111, I-80131 Naples, Italy.
EM antonio.coronato@na.icar.cnr.it; giuseppe.depietro@na.icar.cnr.it
RI Coronato, Antonio/R-6386-2016; Coronato, Antonio/B-5235-2015; de pietro,
   giuseppe/K-3074-2012; de pietro, giuseppe/L-6139-2019; De Pietro,
   Giuseppe/AAZ-1151-2020
OI Coronato, Antonio/0000-0001-8177-032X; Coronato,
   Antonio/0000-0001-8177-032X; de pietro, giuseppe/0000-0002-4675-5957; 
CR Acampora G, 2005, IEEE T IND INFORM, V1, P97, DOI 10.1109/TII.2005.844431
   Acampora G, 2010, ACM T AUTON ADAP SYS, V5, DOI 10.1145/1740600.1740604
   Acampora G, 2007, IEEE C EVOL COMPUTAT, P4100, DOI 10.1109/CEC.2007.4425006
   BOWEN JP, 1992, SAFETY OF COMPUTER CONTROL SYSTEMS 1992 (SAFECOMP'92), P93
   Cardelli L., 2000, Conference Record of POPL'00: 27th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages. Papers Presented at the Symposium, P365, DOI 10.1145/325694.325742
   Cardelli L, 2000, THEOR COMPUT SCI, V240, P177, DOI 10.1016/S0304-3975(99)00231-5
   Charatonik W, 2003, THEOR COMPUT SCI, V308, P277, DOI 10.1016/S0304-3975(02)00832-0
   Charatonik W., 2001, Computer Science Logic. 15th International Workshop, CSL 2001 10th Annual Conference of the EACSL. Proceedings (Lecture Notes in Computer Science Vol.2142), P339
   Cimatti A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P359
   Clark E., 1999, MODEL CHECKING
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Clavel M, 2002, THEOR COMPUT SCI, V285, P187, DOI 10.1016/S0304-3975(01)00359-0
   Cook DJ, 2009, J CARDIOTHOR VASC AN, V23, P277, DOI 10.1053/j.jvca.2009.02.009
   Coronato A, 2011, ACM T AUTON ADAP SYS, V6, DOI 10.1145/1921641.1921650
   Coronato A, 2010, COMPUTER, V43, P60, DOI 10.1109/MC.2010.335
   Coronato A, 2010, ACM T EMBED COMPUT S, V10, DOI 10.1145/1814539.1814551
   Coronato A, 2009, PERS UBIQUIT COMPUT, V13, P527, DOI 10.1007/s00779-009-0223-x
   Corsaro A, 2003, IEEE T PARALL DISTR, V14, P1155, DOI 10.1109/TPDS.2003.1247675
   Eugster PT, 2003, ACM COMPUT SURV, V35, P114, DOI 10.1145/857076.857078
   Felber P, 2004, IEEE T COMPUT, V53, P497, DOI 10.1109/TC.2004.1275293
   Fortino G, 2009, INT SYM IND EMBED, P128, DOI 10.1109/SIES.2009.5196205
   Gärtner FC, 1999, ACM COMPUT SURV, V31, P1, DOI 10.1145/311531.311532
   HALL A, 1990, IEEE SOFTWARE, V7, P11, DOI 10.1109/52.57887
   Hall RS, 2004, CCNC 2004: 1ST IEEE CONSUMER COMMUNICATIONS AND NETWORKING CONFERENCE, PROCEEDINGS, P394, DOI 10.1109/CCNC.2004.1286894
   Hierons RM, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459354
   Hoare CAR, 2009, ACM COMPUT SURV, V41, P22
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Karlsson D, 2007, DES AUTOM EMBED SYST, V11, P49, DOI 10.1007/s10617-006-9723-3
   Kern C., 1999, ACM Transactions on Design Automation of Electronic Systems, V4, P123, DOI 10.1145/307988.307989
   Kupferman O, 2000, J ACM, V47, P312, DOI 10.1145/333979.333987
   Lee RG, 2007, IEEE T INF TECHNOL B, V11, P507, DOI 10.1109/TITB.2006.888701
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Lipprandt M, 2009, C HUM SYST INTERACT, P136
   Mardare R, 2005, LECT NOTES COMPUT SC, V3082, P85
   McMillan K. L., 1993, Symbolic model checking
   Paulson L. C., 1989, Journal of Automated Reasoning, V5, P363, DOI 10.1007/BF00248324
   Päun G, 2000, J COMPUT SYST SCI, V61, P108, DOI 10.1006/jcss.1999.1693
   Ranganathan A, 2008, INT CONF PERVAS COMP, P160, DOI 10.1109/PERCOM.2008.116
   Rosu G., 2005, Automated Software Engineering, V12, P151, DOI 10.1007/s10515-005-6205-y
   Saha G.K., 2006, UBIQUITY, V2006, P5
   Schiele G, 2007, FIFTH ANNUAL IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS WORKSHOPS, PROCEEDINGS, P585, DOI 10.1109/PERCOMW.2007.53
   Sobel AEK, 2002, IEEE T SOFTWARE ENG, V28, P308, DOI 10.1109/32.991322
   Tazari MR, 2010, HANDBOOK OF AMBIENT INTELLIGENCE AND SMART ENVIRONMENTS, P1171, DOI 10.1007/978-0-387-93808-0_43
   Wang F, 2004, P IEEE, V92, P1283, DOI 10.1109/JPROC.2004.831197
   WEIS T, 2006, P INT WORKSH COMB TH
   Wu JK, 2008, IEEE T CONSUM ELECTR, V54, P1166, DOI 10.1109/TCE.2008.4637602
   Zebin Chen, 2007, First International Workshop on Software Engineering for Pervasive Computing Applications, Systems, and Environments (SEPCASE '07), DOI 10.1109/SEPCASE.2007.4
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
NR 48
TC 26
Z9 27
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2012
VL 38
IS 4
BP 975
EP 991
DI 10.1109/TSE.2011.67
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 983LE
UT WOS:000307120000015
DA 2024-07-18
ER

PT J
AU Brickey, J
   Walczak, S
   Burgess, T
AF Brickey, Jonalan
   Walczak, Steven
   Burgess, Tony
TI Comparing Semi-Automated Clustering Methods for Persona Development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Clustering; interaction styles; personas; user-centered design; user
   interfaces
ID HUMAN-COMPUTER INTERACTION; AGREEMENT
AB Current and future information systems require a better understanding of the interactions between users and systems in order to improve system use and, ultimately, success. The use of personas as design tools is becoming more widespread as researchers and practitioners discover its benefits. This paper presents an empirical study comparing the performance of existing qualitative and quantitative clustering techniques for the task of identifying personas and grouping system users into those personas. A method based on Factor (Principal Components) Analysis performs better than two other methods which use Latent Semantic Analysis and Cluster Analysis as measured by similarity to expert manually defined clusters.
C1 [Brickey, Jonalan] US Army, Combating Terrorism Ctr, West Point, NY 10996 USA.
   [Walczak, Steven] Univ Colorado Denver, Sch Business, Denver, CO 80217 USA.
   [Burgess, Tony] US Mil Acad, US Armys, Ctr Adv Leader Dev & Org Learning CALDOL, West Point, NY 10996 USA.
C3 University of Colorado System; University of Colorado Denver; Children's
   Hospital Colorado; University of Colorado Anschutz Medical Campus;
   United States Military Academy; United States Department of Defense;
   United States Army
RP Brickey, J (corresponding author), US Army, Combating Terrorism Ctr, 122 Lincoln Hall USMA, West Point, NY 10996 USA.
EM Jonalan.Brickey@us.army.mil; Steven.Walczak@ucdenver.edu;
   Tony.Burgess@usma.edu
OI Walczak, Steven/0000-0002-0449-6272
FU US Army's Center for the Advancement of Leader Development and
   Organizational Learning at the US Military Academy
FX The authors wish to thank the members of the US Army's Company Command
   forum and the members of the expert panel. This work was supported in
   part by a grant from the US Army's Center for the Advancement of Leader
   Development and Organizational Learning at the US Military Academy. The
   authors also wish to thank Thomas Miaskiewicz for his assistance in
   understanding and developing our LSA model.
CR Alag S., 2009, Collective intelligence in action
   Almirall M, 2010, SECOND INTERNATIONAL CONFERENCE ON MOBILE, HYBRID, AND ON-LINE LEARNING (ELML 2010), P151, DOI 10.1109/eLmL.2010.38
   [Anonymous], 2006, ROMAN 2006 15 IEEE I
   [Anonymous], 2003, About Face 2.0: The Essentials of Interaction Design
   BARRETT JFR, 1990, LANCET, V336, P549, DOI 10.1016/0140-6736(90)92097-2
   Brickey J., 2010, P 43 ANN HAW INT C S, P213
   Broschinsky D, 2008, AGILE 2008, PROCEEDINGS, P543, DOI 10.1109/Agile.2008.91
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cook M.A., 1996, BUILDING ENTERPRISE
   Cooper A., 1999, The inmates are running the asylum
   Dantin U., 2005, P 7 AUSTR C COMP ED, V42, P239
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Davis FD, 2006, ADV MANAG INFORM SYS, V5, P395
   Dharwada P., 2007, HUMAN FACTORS ERGONO, P469
   Dixon N., 2005, CompanyCommand: Unleashing the power of the Army profession
   Drego V.L., 2010, FORRESTER RES
   Drego V.L., 2008, FORRESTER RES
   Fuller R., 1996, P HUM FACT WEB 2 C
   GERLACH JH, 1991, MIS QUART, V15, P527, DOI 10.2307/249456
   Hair JF, 2010, Multivariate data analysis
   Hoekman R., 2006, Designing the obvious: a common sense approach to web application design
   Jansen B.J., 2008, HDB RES WEB LOG ANAL, P1
   Javahery H., 2007, P IEEE INT C SYSTEMS, P1517, DOI DOI 10.1109/ICSMC.2007.4414054
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   LeRouge Cynthia., 2010, P 43 ANN HAWAII INT, P1, DOI DOI 10.1109/HICSS.2010.426
   Lindgren A, 2007, LECT NOTES COMPUT SC, V4555, P460
   Long F., 2009, P IRISH ERGONOMICS S, P1
   McGinn J, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P1521
   Miaskiewicz T., 2006, P 5 ANN WORKSH HCI R, P50
   Miaskiewicz T, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P1501
   Morgan G.A., 2007, SPSS INTRO STAT USE, V3rd
   Mulder S., 2007, USER IS ALWAYS RIGHT
   Naghshin R, 2003, 200S IEEE SYMPOSIUM ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, P239
   Nieters J.E., 2007, P ACM HCI 2007 C HUM, P1817
   Panke S., 2007, MERLOT J Online Learn Teach, V3, P179
   Powell S., 2007, IADIS INT J COMPUTER, V2, P82
   Pruitt J., 2006, The Persona Lifecycle, DOI [DOI 10.1016/B9780125662512/500034, 10.1016/b978-012566251-2/50003-4, DOI 10.1016/B978-012566251-2/50003-4]
   Pruitt John, 2003, P 2003 C DES US EXP, P1, DOI 10.1145/997078.997089
   Randolph G., 2004, INFORM SCI, V7, P105
   Sambamurthy V, 2003, MIS QUART, V27, P237
   Sinha R., 2003, P CHI 03 CHI 03 HUM, P830, DOI [DOI 10.1145/766011.766017, 10.1145/765891.766017, DOI 10.1145/765891.766017]
   Tabachnick B.G., 2012, Using multivariate statistics, V6th
   Walczak S, 2010, J ORGAN END USER COM, V22, P24, DOI 10.4018/joeuc.2010100102
   Zhang P, 2005, COMMUN ASSOC INF SYS, V15, P512
NR 45
TC 32
Z9 35
U1 0
U2 24
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2012
VL 38
IS 3
BP 537
EP 546
DI 10.1109/TSE.2011.60
PG 10
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 947FP
UT WOS:000304414400003
DA 2024-07-18
ER

PT J
AU Jorgensen, M
   Grimstad, S
AF Jorgensen, Magne
   Grimstad, Stein
TI Software Development Estimation Biases: The Role of Interdependence
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Effort estimation; estimation bias; cultural differences; software
   engineering
ID CULTURAL ORIENTATION; SELF-CONSTRUALS; COGNITION; JUDGMENT; NEED;
   INDIVIDUALISM; PERSONALITY; SENSITIVITY; INFORMATION; THINK
AB Software development effort estimates are frequently too low, which may lead to poor project plans and project failures. One reason for this bias seems to be that the effort estimates produced by software developers are affected by information that has no relevance for the actual use of effort. We attempted to acquire a better understanding of the underlying mechanisms and the robustness of this type of estimation bias. For this purpose, we hired 374 software developers working in outsourcing companies to participate in a set of three experiments. The experiments examined the connection between estimation bias and developer dimensions: self-construal (how one sees oneself), thinking style, nationality, experience, skill, education, sex, and organizational role. We found that estimation bias was present along most of the studied dimensions. The most interesting finding may be that the estimation bias increased significantly with higher levels of interdependence, i.e., with stronger emphasis on connectedness, social context, and relationships. We propose that this connection may be enabled by an activation of one's self-construal when engaging in effort estimation, and a connection between a more interdependent self-construal and increased search for indirect messages, lower ability to ignore irrelevant context, and a stronger emphasis on socially desirable responses.
C1 [Jorgensen, Magne; Grimstad, Stein] Simula Res Lab, NO-1325 Lysaker, Norway.
   [Jorgensen, Magne; Grimstad, Stein] Univ Oslo, NO-1325 Lysaker, Norway.
C3 University of Oslo
RP Jorgensen, M (corresponding author), Simula Res Lab, POB 134, NO-1325 Lysaker, Norway.
EM magnej@simula.no; steingr@simula.no
RI Jorgensen, Magne/H-4402-2016
FU Research Council of Norway
FX This research project was funded by The Research Council of Norway
   through the industry-project EVISOFT.
CR Aaker JL, 1997, J CONSUM RES, V24, P315, DOI 10.1086/209513
   Agrawal N, 2005, J CONSUM RES, V31, P841, DOI 10.1086/426620
   Aranda J., 2005, P EUR SOFTW ENG C AC
   Buehler R., 2010, CULTURE OPTIMI UNPUB
   CACIOPPO JT, 1982, J PERS SOC PSYCHOL, V42, P116, DOI 10.1037/0022-3514.42.1.116
   CACIOPPO JT, 1984, J PERS ASSESS, V48, P306, DOI 10.1207/s15327752jpa4803_13
   Choi I, 2003, J PERS SOC PSYCHOL, V84, P46, DOI 10.1037/0022-3514.84.1.46
   Choi I, 1999, PSYCHOL BULL, V125, P47, DOI 10.1037/0033-2909.125.1.47
   Choi I, 2007, PERS SOC PSYCHOL B, V33, P691, DOI 10.1177/0146167206298568
   Cole M., 1996, CULTURAL PSYCHOL ONC
   Coon HM, 2001, J CROSS CULT PSYCHOL, V32, P348, DOI 10.1177/0022022101032003006
   Ford DP, 2003, IEEE T ENG MANAGE, V50, P8, DOI 10.1109/TEM.2002.808265
   Grimm SD, 1999, J RES PERS, V33, P415, DOI 10.1006/jrpe.1999.2256
   Grimstad S., 2007, P 18 AUSTR SOFTW ENG
   Grimstad S., 2009, IET SOFTWARE
   Gudykunst WB, 1996, HUM COMMUN RES, V22, P510, DOI 10.1111/j.1468-2958.1996.tb00377.x
   Hannover B, 2005, SELF IDENTITY, V4, P159, DOI 10.1080/13576500444000245
   Hara K, 2004, INT J INTERCULT REL, V28, P1, DOI 10.1016/j.ijintrel.2003.12.005
   Heine SJ, 2002, J PERS SOC PSYCHOL, V82, P903, DOI 10.1037//0022-3514.82.6.903
   Hofstede G., 1980, CULTURAL CONSEQUENCE
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P953, DOI 10.1109/TSE.2004.92
   Jorgensen M., 2004, International Journal of Project Management, V22, P317, DOI 10.1016/S0263-7863(03)00085-1
   Jorgensen M, 2001, INFORM SOFTWARE TECH, V43, P939, DOI 10.1016/S0950-5849(01)00203-8
   Jorgensen M., 2006, International Journal of Project Management, V24, P522, DOI 10.1016/j.ijproman.2006.04.001
   Jorgensen M, 2008, IEEE SOFTWARE, V25, P78
   Jorgensen M, 2007, J SYST SOFTWARE, V80, P1472, DOI 10.1016/j.jss.2006.09.047
   Jorgensen M, 2011, IEEE T SOFTWARE ENG, V37, P695, DOI 10.1109/TSE.2010.78
   Jorgensen M, 2010, J SYST SOFTWARE, V83, P29, DOI 10.1016/j.jss.2009.03.076
   Jorgenson M, 2009, IEEE SOFTWARE, V26, P79, DOI 10.1109/MS.2009.71
   Kahneman D, 1982, JUDGMENT UNCERTAINTY, DOI DOI 10.1097/00001888-199907000-00012
   Kolstad A, 2009, J CROSS CULT PSYCHOL, V40, P275, DOI 10.1177/0022022108328917
   Krishna A, 2008, J CONSUM RES, V35, P337, DOI 10.1086/588686
   Kurman J, 2002, CROSS-CULT RES, V36, P73, DOI 10.1177/1069397102036001004
   Lalwani AK, 2006, J PERS SOC PSYCHOL, V90, P165, DOI 10.1037/0022-3514.90.1.165
   Lee F, 1996, PERS SOC PSYCHOL B, V22, P732, DOI 10.1177/0146167296227007
   Lehman D.R., 2004, ANN REV PSCYHOLOGY, V55, P690
   Majumdar D.N., 1961, RACES CULTURES INDIA
   MARKUS HR, 1991, PSYCHOL REV, V98, P224, DOI 10.1037/0033-295X.98.2.224
   Masuda T, 2001, J PERS SOC PSYCHOL, V81, P922, DOI 10.1037//0022-3514.81.5.922
   Molokken Kjetil, 2003, P INT S EMP SOFTW EN
   Moore DA, 2007, J PERS SOC PSYCHOL, V92, P972, DOI 10.1037/0022-3514.92.6.972
   Nunnally JC, 1978, PSYCHOMETRIC THEORY
   Oyserman D, 2008, PSYCHOL BULL, V134, P311, DOI 10.1037/0033-2909.134.2.311
   Petty RE, 2008, PERS SOC PSYCHOL B, V34, P900, DOI 10.1177/0146167208316692
   Pronin E, 2007, TRENDS COGN SCI, V11, P37, DOI 10.1016/j.tics.2006.11.001
   SINGELIS TM, 1994, PERS SOC PSYCHOL B, V20, P580, DOI 10.1177/0146167294205014
   Visser BA, 2008, J INDIVID DIF, V29, P35, DOI 10.1027/1614-0001.29.1.35
   Weber EU, 2000, APPL PSYCHOL-INT REV, V49, P32, DOI 10.1111/1464-0597.00005
NR 48
TC 18
Z9 19
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2012
VL 38
IS 3
BP 677
EP 693
DI 10.1109/TSE.2011.40
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 947FP
UT WOS:000304414400012
DA 2024-07-18
ER

PT J
AU Khatchadourian, R
   Greenwood, P
   Rashid, A
   Xu, GQ
AF Khatchadourian, Raffi
   Greenwood, Phil
   Rashid, Awais
   Xu, Guoqing
TI Pointcut Rejuvenation: Recovering Pointcut Expressions in Evolving
   Aspect-Oriented Software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software development environments; software maintenance; software tools
ID DESIGN
AB Pointcut fragility is a well-documented problem in Aspect-Oriented Programming; changes to the base code can lead to join points incorrectly falling in or out of the scope of pointcuts. In this paper, we present an automated approach that limits fragility problems by providing mechanical assistance in pointcut maintenance. The approach is based on harnessing arbitrarily deep structural commonalities between program elements corresponding to join points selected by a pointcut. The extracted patterns are then applied to later versions to offer suggestions of new join points that may require inclusion. To illustrate that the motivation behind our proposal is well founded, we first empirically establish that join points captured by a single pointcut typically portray a significant amount of unique structural commonality by analyzing patterns extracted from 23 AspectJ programs. Then, we demonstrate the usefulness of our technique by rejuvenating pointcuts in multiple versions of three of these programs. The results show that our parameterized heuristic algorithm was able to accurately and automatically infer the majority of new join points in subsequent software versions that were not captured by the original pointcuts.
C1 [Khatchadourian, Raffi; Xu, Guoqing] Ohio State Univ, Dept Comp Sci & Engn, Columbus, OH 43210 USA.
   [Greenwood, Phil; Rashid, Awais] Univ Lancaster, Dept Comp, Lancaster LA1 4WA, England.
C3 University System of Ohio; Ohio State University; Lancaster University
RP Khatchadourian, R (corresponding author), Ohio State Univ, Dept Comp Sci & Engn, Columbus, OH 43210 USA.
EM khatchad@cse.ohio-state.edu; greenwop@comp.lancs.ac.uk;
   awais@comp.lancs.ac.uk; xug@cse.ohio-state.edu
RI Khatchadourian, Raffi/AAH-2180-2019
OI Khatchadourian, Raffi/0000-0002-7930-0182; Rashid,
   Awais/0000-0002-0109-1341
FU European Commission [IST-33710, IST-2-004349]
FX This work was supported in part by European Commission grants IST-33710
   (AMPLE) and IST-2-004349 (AOSD-Europe). The authors would like to thank
   Barthelemy Dagenais, Tao Xie, Alexander Egyed, Martin Robillard, Alfred
   V. Aho, Marc Eaddy, Linton Ye, and David Chiu for their answers to many
   technical and research-related questions and for referring them to
   related work. They would also like to thank the anonymous reviewers for
   their extremely useful comments and suggestions.
CR Anbalagan P, 2007, PROC INT CONF SOFTW, P127
   [Anonymous], P WORKSH ADV SEP CON
   Apel S, 2010, J OBJECT TECHNOL, V9, P117, DOI 10.5381/jot.2010.9.1.a2
   Avgustinov P, 2006, LECT NOTES COMPUT SC, V3880, P293
   Bacon DF, 1996, ACM SIGPLAN NOTICES, V31, P324, DOI 10.1145/236338.236371
   Braem M, 2006, LECT NOTES COMPUT SC, V4089, P66
   Cazzola Walter., 2006, 3rd ECOOP Workshop on Reflection, AOP and Meta-Data for Software Evolution, P35
   Dagenais Barthelemy., 2007, ASE 07, P254, DOI DOI 10.1145/1321631.1321669
   Dean J, 1995, LECT NOTES COMPUT SC, V952, P77, DOI 10.1007/3-540-49538-x_5
   Eichberg M, 2004, LECT NOTES COMPUT SC, V3302, P366
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Griswold WG, 2006, IEEE SOFTWARE, V23, P51, DOI 10.1109/MS.2006.24
   Gudmundson S., 2001, P WORKSH ADV SEP CON
   Gybels Kris., 2003, P 2 INT C ASPECT ORI, P60
   Hilsdale E., 2004, INT C ASPECT ORIENTE, P26
   Hoffman Kevin., 2007, P 5 INT S PRINCIPLES, P63
   Kellens A, 2006, LECT NOTES COMPUT SC, V4067, P501
   Khatchadourian R., 2008, INT WORKSH FDN ASP O, P19
   Khatchadourian R, 2009, IEEE INT CONF AUTOM, P575, DOI 10.1109/ASE.2009.37
   Khatchadourian RT, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P261, DOI 10.1109/SCAM.2008.32
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Klose K., 2005, P WORKSH FDN ASP OR
   Koppen C., 2004, P EUR INT WORKSH ASP
   Laddad Ramnivas., 2003, ASPECTJ ACTION
   Lippert M., 2002, P INT C SOFTW ENG, P418
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Masuhara H, 2003, LECT NOTES COMPUT SC, V2622, P46
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Ostermann K, 2005, LECT NOTES COMPUT SC, V3586, P214
   Perez-Toledano M.A., 2007, SOFTWARE ENG ADV, P4
   Rajan H, 2008, LECT NOTES COMPUT SC, V5142, P155, DOI 10.1007/978-3-540-70592-5_8
   Robillard MP, 2006, PROC IEEE INT CONF S, P479
   Robillard MP, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P406, DOI 10.1109/ICSE.2002.1007986
   Sakurai Kouhei., 2008, AOSD '08: Proceedings of the 7th intern,ational conference on Aspect-oriented software development, P96
   Seiter L.M., 2007, INT WORKSHOP LINKING, P3
   Sillito J., 2004, ECOOP 2004 - Object-Oriented Programming. 18th European Conference. Proceedings (Lecture Notes in Computer Science Vol.3086), P246
   Stoerzer M, 2005, PROC IEEE INT CONF S, P653
   Sullivan Kevin., 2005, SIGSOFT SOFTW ENG NO, V30, P166
   The Eclipse Foundation, 2009, JDT WEAV FEAT
   Wloka J., 2008, 7th international conference on Aspect-oriented software development, P132, DOI DOI 10.1145/1353482.1353499
   Ye L., 2008, P 7 INT C ASP OR SOF, P144
NR 43
TC 1
Z9 1
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2012
VL 38
IS 3
BP 642
EP 657
DI 10.1109/TSE.2011.21
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 947FP
UT WOS:000304414400010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fraser, G
   Zeller, A
AF Fraser, Gordon
   Zeller, Andreas
TI Mutation-Driven Generation of Unit Tests and Oracles
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Mutation analysis; test case generation; unit testing; test oracles;
   assertions; search-based testing
AB To assess the quality of test suites, mutation analysis seeds artificial defects (mutations) into programs; a nondetected mutation indicates a weakness in the test suite. We present an automated approach to generate unit tests that detect these mutations for object-oriented classes. This has two advantages: First, the resulting test suite is optimized toward finding defects modeled by mutation operators rather than covering code. Second, the state change caused by mutations induces oracles that precisely detect the mutants. Evaluated on 10 open source libraries, our mu TEST prototype generates test suites that find significantly more seeded defects than the original manually written test suites.
C1 [Fraser, Gordon; Zeller, Andreas] Saarland Univ Comp Sci, Software Engn Chair, D-66123 Saarbrucken, Germany.
C3 Saarland University
RP Fraser, G (corresponding author), Saarland Univ Comp Sci, Software Engn Chair, Campus E1 1, D-66123 Saarbrucken, Germany.
EM fraser@cs.uni-saarland.de; zeller@cs.uni-saarland.de
OI Zeller, Andreas/0000-0003-4719-8803
FU DFG [Ze509/5-1]; Google
FX The authors thank David Schuler for his work on Javalanche, and Andrea
   Arcuri, Valentin Dallmeier, Andrzej Wasylkowski, Jeff Offutt, Eva May,
   and the anonymous reviewers for comments on earlier versions of this
   paper. This project has been funded by DFG grant Ze509/5-1, and by a
   Google Focused Research Award on "Test Amplification."
CR Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Andrews James H., 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P19, DOI 10.1109/ASE.2008.12
   ANDREWS J.H., 2006, Proceedings of the 1st international workshop on Random testing, P36, DOI [10.1145/1145735.1145741, DOI 10.1145/1145735.1145741]
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2007, ESEC FSE 2007, DOI DOI 10.1145/1287624.1287707
   Arcuri Andrea, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P205, DOI 10.1109/ICST.2010.17
   Arcuri Andrea, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P469, DOI 10.1109/ICST.2010.16
   Arcuri A, 2008, INFORM SCIENCES, V178, P3075, DOI 10.1016/j.ins.2007.11.024
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Ayari K, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1074
   Boshernitsan M., 2006, ISSTA, P169
   Bottaci L., 2001, P INT WORKSH SOFTW E, P3
   Chvatal V., 1979, Mathematics of Operations Research, V4, P233, DOI 10.1287/moor.4.3.233
   Ciupa I, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P71, DOI 10.1145/1368088.1368099
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Fraser G., 2011, P IEEE 4 INT C SOFTW
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Harman M, 2004, IEEE T SOFTWARE ENG, V30, P3, DOI 10.1109/TSE.2004.1265732
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Inkumsah Kobi, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P297, DOI 10.1109/ASE.2008.40
   Jones BF, 1998, COMPUT J, V41, P98, DOI 10.1093/comjnl/41.2.98
   Lei Y, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P267
   Leitner Andreas, 2007, 22 IEEE ACM INT C AU, P417, DOI 10.1145/1321631.1321698
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Namin AS, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P351, DOI 10.1145/1368088.1368136
   Offutt A. J., 1992, ACM Transactions on Software Engineering and Methodology, V1, P5, DOI 10.1145/125489.125473
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt AJ, 1999, SOFTWARE PRACT EXPER, V29, P167, DOI 10.1002/(SICI)1097-024X(199902)29:2<167::AID-SPE225>3.0.CO;2-V
   Orso Alessandro., 2008, Proceedings of the 2008 international workshop on dynamic analysis: held in conjunction with the ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2008), WODA '08, P36, DOI DOI 10.1145/1401827.1401835
   Pacheco C, 2005, LECT NOTES COMPUT SC, V3586, P504
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Rothermel G, 1998, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.1998.738487
   Salcianu A, 2005, LECT NOTES COMPUT SC, V3385, P199
   Schuler David, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P45, DOI 10.1109/ICST.2010.30
   Schuler D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P297, DOI 10.1145/1595696.1595750
   Schuler D, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P69
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Sharma R, 2011, LECT NOTES COMPUT SC, V6603, P262, DOI 10.1007/978-3-642-19811-3_19
   Taneja Kunal, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P407, DOI 10.1109/ASE.2008.60
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Tonella P., 2004, Software Engineering Notes, V29, P119, DOI 10.1145/1013886.1007528
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wappler S, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1053
   Williams N, 2005, LECT NOTES COMPUT SC, V3463, P281
   Xie T, 2006, LECT NOTES COMPUT SC, V4067, P380
   Xu Z., 2010, PROC GECCO, P1365
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
   Zhang L., 2010, P IEEE 26 INT C SOFT
NR 52
TC 255
Z9 276
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2012
VL 38
IS 2
BP 278
EP 292
DI 10.1109/TSE.2011.93
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 913ZF
UT WOS:000301915200004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kwon, T
   Su, ZD
AF Kwon, Taeho
   Su, Zhendong
TI Automatic Detection of Unsafe Dynamic Component Loadings
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Unsafe component loading; dynamic analysis
AB Dynamic loading of software components (e.g., libraries or modules) is a widely used mechanism for an improved system modularity and flexibility. Correct component resolution is critical for reliable and secure software execution. However, programming mistakes may lead to unintended or even malicious components being resolved and loaded. In particular, dynamic loading can be hijacked by placing an arbitrary file with the specified name in a directory searched before resolving the target component. Although this issue has been known for quite some time, it was not considered serious because exploiting it requires access to the local file system on the vulnerable host. Recently, such vulnerabilities have started to receive considerable attention as their remote exploitation became realistic. It is now important to detect and fix these vulnerabilities. In this paper, we present the first automated technique to detect vulnerable and unsafe dynamic component loadings. Our analysis has two phases: 1) apply dynamic binary instrumentation to collect runtime information on component loading (online phase), and 2) analyze the collected information to detect vulnerable component loadings (offline phase). For evaluation, we implemented our technique to detect vulnerable and unsafe component loadings in popular software on Microsoft Windows and Linux. Our evaluation results show that unsafe component loading is prevalent in software on both OS platforms, and it is more severe on Microsoft Windows. In particular, our tool detected more than 4,000 unsafe component loadings in our evaluation, and some can lead to remote code execution on Microsoft Windows.
C1 [Kwon, Taeho; Su, Zhendong] Univ Calif Davis, Dept Comp Sci, Ctr Software Syst Res, Davis, CA 95616 USA.
C3 University of California System; University of California Davis
RP Kwon, T (corresponding author), Univ Calif Davis, Dept Comp Sci, Ctr Software Syst Res, Kemper Hall,1 Shields Ave, Davis, CA 95616 USA.
EM kwon@cs.ucdavis.edu; su@cs.ucdavis.edu
OI Su, Zhendong/0000-0002-2970-1391
FU US National Science Foundation (NSF) CAREER [0546844]; NSF CyberTrust
   [0627749]; NSF CCF [0702622, 1117603]; NSF TC [0917392]; US Air Force
   [FA9550-07-1-0532]; Direct For Computer & Info Scie & Enginr [1117603,
   0627749, 0702622, 0546844] Funding Source: National Science Foundation;
   Direct For Computer & Info Scie & Enginr; Division Of Computer and
   Network Systems [0917392] Funding Source: National Science Foundation;
   Division Of Computer and Network Systems [0627749] Funding Source:
   National Science Foundation; Division of Computing and Communication
   Foundations [0702622, 0546844, 1117603] Funding Source: National Science
   Foundation
FX The authors thank the anonymous reviewers for their detailed and
   constructive comments on earlier versions of this paper. This research
   was supported in part by US National Science Foundation (NSF) CAREER
   Grant No. 0546844, NSF CyberTrust Grant No. 0627749, NSF CCF Grant No.
   0702622, NSF TC Grant No. 0917392, NSF CCF Grant No. 1117603, and the US
   Air Force under grant FA9550-07-1-0532. The information presented here
   does not necessarily reflect the position or the policy of the
   Government and no official endorsement should be inferred.
CR [Anonymous], 2011, MICROSOFT RELEASES T
   [Anonymous], 2011, MICROSOFT PORTABLE E
   [Anonymous], 2011, END DLL HELL
   [Anonymous], 2011, SECURITY CONTENT SAF
   [Anonymous], 2011, EXECUTABLE LINKABLE
   [Anonymous], 2011, MS09 014 ADDRESSING
   [Anonymous], 2011, SIDE BY SIDE ASSEMBL
   [Anonymous], 2011, WINDOWS RESOURCE PRO
   [Anonymous], 2011, UPDATE 40 WINDOWS AP
   [Anonymous], 2011, LOADLIBRARYEX FUNCTI
   [Anonymous], 2011, WHAT GOES INSIDE WIN
   [Anonymous], 2011, UAC DESIGNED ANNOY U
   [Anonymous], 2008, NDSS
   [Anonymous], 2011, LONG TERM IMPACT USE
   [Anonymous], 2011, ZERO DAY WINDOWS BUG
   [Anonymous], 2011, EXPLOITING DLL HIJAC
   [Anonymous], 2006, P 13 ACM C COMPUTER
   [Anonymous], 2011, ID LINUX MAN PAGE
   [Anonymous], 2011, DYNAMIC LINK LIB SEA
   [Anonymous], 2011, RES TOLD MICROSOFT W
   [Anonymous], 2011, IES UNSAFE DLL LOADI
   [Anonymous], 2011, USER ACCOUNT CONTROL
   [Anonymous], 2011, HACKING TOOLKIT PUBL
   [Anonymous], 2011, IDA PRO DISASSEMBLER
   [Anonymous], 2011, WINDOWS DLL EXPLOITS
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Chari S., 2010, P NETW DISTR SYST SE
   Chen S., 2005, P 14 C USENIX SEC S
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Dhurjati D., 2006, 28th International Conference on Software Engineering Proceedings, P162, DOI 10.1145/1134285.1134309
   Goldberg I., 1996, P 6 C USENIX SEC S F
   Grier C., 2009, P WORKSH WEB 2 0 SEC
   Grier C, 2008, P IEEE S SECUR PRIV, P402, DOI 10.1109/SP.2008.19
   Kwon T., 2010, P 19 INT S SOFTW TES, P107
   LAROCHELLE D, 2001, P 10 C USENIX SEC S
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Microsoft Security TechCenter. Combined Security Update for Microsoft Office, 2011, MICROSOFT SECURITY B
   Molnar David, 2009, P 18 C USENIX SEC S, V9, P67
   Ruwase O, 2004, P NETW DISTR SYST SE
   Saxena P, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P225
   Song DX., 2007, P NETW DISTR SYST SE
   Wang H.J., 2009, P USENIX SECURITY S, P417
   Wang Tielei., 2009, NETWORK DISTRIBUTED
   Whitehouse O., 2007, P BLACK HAT DC C
   Xu Ru-Gang., 2008, ISSTA, P27
NR 45
TC 3
Z9 8
U1 2
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2012
VL 38
IS 2
BP 293
EP 313
DI 10.1109/TSE.2011.108
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 913ZF
UT WOS:000301915200005
DA 2024-07-18
ER

PT J
AU Toledo, R
   Núñez, A
   Tanter, É
   Noyé, J
AF Toledo, Rodolfo
   Nunez, Angel
   Tanter, Eric
   Noye, Jacques
TI Aspectizing Java Access Control
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Programming languages; security; aspect-oriented programming; access
   control
ID SECURITY; SEMANTICS
AB It is inevitable that some concerns crosscut a sizeable application, resulting in code scattering and tangling. This issue is particularly severe for security-related concerns: It is difficult to be confident about the security of an application when the implementation of its security-related concerns is scattered all over the code and tangled with other concerns, making global reasoning about security precarious. In this study, we consider the case of access control in Java, which turns out to be a crosscutting concern with a nonmodular implementation based on runtime stack inspection. We describe the process of modularizing access control in Java by means of Aspect-Oriented Programming (AOP). We first show a solution based on AspectJ, the most popular aspect-oriented extension to Java, that must rely on a separate automata infrastructure. We then put forward a novel solution via dynamic deployment of aspects and scoping strategies. Both solutions, apart from providing a modular specification of access control, make it possible to easily express other useful policies such as the Chinese wall policy. However, relying on expressive scope control results in a compact implementation, which, at the same time, permits the straightforward expression of even more interesting policies. These new modular implementations allowed by AOP alleviate maintenance and evolution issues produced by the crosscutting nature of access control.
C1 [Toledo, Rodolfo; Tanter, Eric] Univ Chile, Pleiad Lab, Dept Comp Sci, Santiago 8370459, Chile.
   [Nunez, Angel; Noye, Jacques] Ecole Mines Nantes INRIA, ASCOLA Project Team, LINA 4, F-44307 Nantes 3, France.
C3 Universidad de Chile; IMT - Institut Mines-Telecom; IMT Atlantique
RP Toledo, R (corresponding author), Univ Chile, Pleiad Lab, Dept Comp Sci, Blanco Encalada 2120, Santiago 8370459, Chile.
EM rtoledo@dcc.uchile.cl; Angel.Nunez@mines-nantes.fr;
   etanter@dcc.uchile.cl; Jacques.Noye@mines-nantes.fr
RI Tanter, Éric/A-7955-2008
OI Tanter, Éric/0000-0002-7359-890X
FU CONICYT/INRIA; INRIA Associate Team RAPIDS; FONDECYT [111051]
FX The authors would like to thank the anonymous reviewers for their
   feedback. This work was partially funded by by the CONICYT/INRIA project
   CORDIAL, the INRIA Associate Team RAPIDS, and FONDECYT project 111051.
CR Abadi Martin., 2003, Proceedings of the 10th Annual Network and Distributed System Security Symposium, P107
   Alhadidi D, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P15
   [Anonymous], 1992, 15 NAT COMP SEC C
   [Anonymous], 2000, P INT SCH FDN SEC AN
   Aracic I, 2006, LECT NOTES COMPUT SC, V3880, P135
   Bodden E, 2006, LECT NOTES INFORM, P49
   Brewer D. F. C., 1989, Proceedings 1989 IEEE Symposium on Security and Privacy (Cat. No.89CH2703-7), P206, DOI 10.1109/SECPRI.1989.36295
   Cacho Nelio., 2008, AOSD 08 P 7 INT C AS, P72
   De Win B, 2001, INT FED INFO PROC, V78, P125
   De Win B., 2002, Informatica, V26, P141
   de Win B., 2004, P INT C ASP OR SOFTW, P633
   De Win Bart., 2001, Workshop on Advanced Separation of Concerns (ECOOP 2001), P1
   DEWIN B, 2003, P ACSA WORKSH APPL E, P1
   ECMA, 2009, ECMASCRIPT LANG SPEC
   Erlingsson U, 2000, P IEEE S SECUR PRIV, P246, DOI 10.1109/SECPRI.2000.848461
   FELLEISEN M, 1991, SCI COMPUT PROGRAM, V17, P35, DOI 10.1016/0167-6423(91)90036-W
   Filho F.C., 2006, INT C FDN SOFTWARE E, P152
   Fischer J, 2009, LECT NOTES COMPUT SC, V5653, P173, DOI 10.1007/978-3-642-03013-0_9
   GONG L, 2003, INSIDE JAVA 2 PLATFO
   Gong L., 1997, P USENIX S SEC SYST
   Hardy N., 1988, Operating Systems Review, V22, P36, DOI 10.1145/54289.871709
   Huang M., 2004, P AOSD TECHN APPL LE
   Karjoth G, 2000, P IEEE CSFW, P224, DOI 10.1109/CSFW.2000.856939
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Masuhara H, 2003, LECT NOTES COMPUT SC, V2895, P105
   Masuhara H, 2003, LECT NOTES COMPUT SC, V2622, P46
   Mourad A, 2008, COMPUT SECUR, V27, P101, DOI 10.1016/j.cose.2008.04.003
   Mourad A, 2009, COMPUT SECUR, V28, P341, DOI 10.1016/j.cose.2009.02.003
   Pistoia M, 2007, P IEEE S SECUR PRIV, P149, DOI 10.1109/SP.2007.10
   Ramachandran R., 2006, THESIS VICTORIA U WE
   Schärli N, 2004, ACM SIGPLAN NOTICES, V39, P130, DOI 10.1145/1035292.1028988
   Schneider F. B., 2000, ACM Transactions on Information and Systems Security, V3, P30, DOI 10.1145/353323.353382
   Slowikowski P., 2003, P WORKSH AN ASP OR S
   Sun Microsystems Inc, 2011, JAV SEC ARCH
   Tanter É, 2009, ACM SIGPLAN NOTICES, V44, P3, DOI 10.1145/1837513.1640137
   Tanter É, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P27
   Tanter Eric, 2010, P 9 ACM INT C ASP OR, P37, DOI DOI 10.1145/1739230.1739236
   Tanter Eric, 2008, 7 INT C ASP OR SOFTW, P168, DOI [10.1145/1353482.1353503, DOI 10.1145/1353482.1353503]
   Toledo R., 2010, P 9 ACM INT C ASPECT, P13
   Toledo R, 2011, IEEE SOFTWARE, V28, P76, DOI 10.1109/MS.2010.154
   Viega J., 2001, Cutter IT Journal, V14, P31
   Wallach DS, 2000, ACM T SOFTW ENG METH, V9, P341, DOI 10.1145/363516.363520
   Wallach DS, 1998, 1998 IEEE SYMPOSIUM ON SECURITY AND PRIVACY - PROCEEDINGS, P52, DOI 10.1109/SECPRI.1998.674823
   Wand M, 2004, ACM T PROGR LANG SYS, V26, P890, DOI 10.1145/1018203.1018208
   Welch I., 1999, Proceedings 7th IEEE Workshop on Future Trends of Distributed Computing Systems, P155, DOI 10.1109/FTDCS.1999.818799
NR 45
TC 5
Z9 6
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2012
VL 38
IS 1
BP 101
EP 117
DI 10.1109/TSE.2011.6
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881HG
UT WOS:000299472600008
DA 2024-07-18
ER

PT J
AU Lallchandani, JT
   Mall, R
AF Lallchandani, Jaiprakash T.
   Mall, R.
TI A Dynamic Slicing Technique for UML Architectural Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software architecture; UML; architectural metamodel; dynamic slicing;
   impact analysis
AB This paper proposes a technique for dynamic slicing of UML architectural models. The presence of related information in diverse model parts (or fragments) makes dynamic slicing of Unified Modeling Language (UML) models a complex problem. We first extract all relevant information from a UML model specifying a software architecture into an intermediate representation, which we call a Model Dependency Graph (MDG). For a given slicing criterion, our slicing algorithm traverses the constructed MDG to identify the relevant model parts that are directly or indirectly affected during the execution of a specified scenario. One novelty of our approach is computation of dynamic slice based on the structural and behavioral (interactions only) UML models as against independently processing separate UML models, and determining the implicit interdependencies among different model elements distributed across model views. We also briefly discuss a prototype tool named Archlice, which we have developed to implement our algorithm.
C1 [Lallchandani, Jaiprakash T.; Mall, R.] Indian Inst Technol, Dept Comp Sci & Engn, Kharagpur 721302, W Bengal, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Kharagpur
RP Lallchandani, JT (corresponding author), Indian Inst Technol, Dept Comp Sci & Engn, Kharagpur 721302, W Bengal, India.
EM jtl@cse.iitkgp.ernet.in; rajib@cse.iitkgp.ernet.in
CR Allen R.B., 1992, PROCESSING, V1, P134
   Allen R.J., 1997, A Formal Approach to Software Architecture
   [Anonymous], 1990, Software testing techniques {
   Bae JH, 2008, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P1253, DOI 10.1109/ITNG.2008.179
   Bang-Jensen J., 2007, DIGRAPHS THEORY ALGO
   Bell D., 2004, UML SEQUENCE DIAGRAM
   Binkley D, 1998, INFORM SOFTWARE TECH, V40, P583, DOI 10.1016/S0950-5849(98)00085-8
   Bohner S. A., 1996, SOFTWARE CHANGE IMPA
   Briand LC, 2006, J SYST SOFTWARE, V79, P339, DOI 10.1016/j.jss.2005.05.001
   CLEMENTS P., 2002, EVALUATING SOFTWARE
   Fangjun W., 2004, J ELECT, V21, P249, DOI [10.1007/BF02687879, DOI 10.1007/BF02687879]
   Gallagher K, 2008, IEEE T SOFTWARE ENG, V34, P260, DOI 10.1109/TSE.2007.70757
   Gasevic D., 2007, MODEL DRIVEN ENG LAN
   Gîrba T, 2005, ELECTRON NOTES THEOR, V137, P57, DOI 10.1016/j.entcs.2005.07.005
   Inc N.M., 2010, MAG UML V11 6
   Kagdi H, 2005, PROC IEEE INT CONF S, P635
   Kim T., 1999, P AOM IAOM 17 INT C
   Kim T., 2000, J. Computer and Information Science, V1, P91
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Korel B, 2003, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.2003.1235404
   Koskinen J., 2002, Acta Cybernetica, V15, P547
   Lallchandani J.T., 2008, IITCS08SE14
   Lallchandani J.T., 2010, THESIS INDIAN I TECH
   Lammel R., 2005, P C XML 2005 NOV
   MALL R, 2008, FUNDAMENTALS SOFTWAR
   Medvidovic N, 2002, ACM T SOFTW ENG METH, V11, P2, DOI 10.1145/504087.504088
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Milicev D, 2002, IEEE T SOFTWARE ENG, V28, P413, DOI 10.1109/TSE.2002.995438
   Mund GB, 2002, INFORM SOFTWARE TECH, V44, P123, DOI 10.1016/S0950-5849(01)00224-5
   *OBJ MAN GROUP, 2005, UN MOD LANG SPEC VER
   Ojala V., 2007, HUTTCSB25 HELS U TEC
   Stafford J., 1998, CUCS85898
   Stafford JA, 2003, LECT NOTES COMPUT SC, V2804, P52
   SysML, 2008, SYSML OMG SYST MOD L
   Taeho Kim, 1999, Proceedings. Twenty-Third Annual International Computer Software and Applications Conference (Cat. No.99CB37032), P61, DOI 10.1109/CMPSAC.1999.812677
   TIP F, 1995, J PROGRAM LANG, V3, P121
   UML, 2009, UML UN MOD LANG SUP
   Van Langenhove S., 2005, P FNRS CONT DAY THEO
   Wang J, 2002, LECT NOTES COMPUT SC, V2495, P435
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Weiser MD., 1979, PROGRAM SLICES FORMA
   Zhao J., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P215, DOI 10.1109/CSMR.2000.827330
   Zhao J., 1998, P 3 INT WORKSH SOFTW, P163
   Zhao JJ, 1997, NEW TECHNOLOGIES ON COMPUTER SOFTWARE, P135
   Zhao JJ, 1998, IEEE INT C ENG COMP, P87, DOI 10.1109/ICECCS.1998.706659
NR 46
TC 17
Z9 20
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2011
VL 37
IS 6
BP 737
EP 771
DI 10.1109/TSE.2010.112
PG 35
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 854SE
UT WOS:000297513700001
DA 2024-07-18
ER

PT J
AU Liu, X
   Yang, Y
   Jiang, YC
   Chen, JJ
AF Liu, Xiao
   Yang, Yun
   Jiang, Yuanchun
   Chen, Jinjun
TI Preventing Temporal Violations in Scientific Workflows: Where and How
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Workflow management; exception handling; reliability; software
   verification; statistical methods
ID FIXED-TIME CONSTRAINTS; DYNAMIC VERIFICATION; GENETIC-ALGORITHM;
   CHECKPOINT SELECTION
AB Due to the dynamic nature of the underlying high-performance infrastructures for scientific workflows such as grid and cloud computing, failures of timely completion of important scientific activities, namely, temporal violations, often take place. Unlike conventional exception handling on functional failures, nonfunctional QoS failures such as temporal violations cannot be passively recovered. They need to be proactively prevented through dynamically monitoring and adjusting the temporal consistency states of scientific workflows at runtime. However, current research on workflow temporal verification mainly focuses on runtime monitoring, while the adjusting strategy for temporal consistency states, namely, temporal adjustment, has so far not been thoroughly investigated. For this issue, two fundamental problems of temporal adjustment, namely, where and how, are systematically analyzed and addressed in this paper. Specifically, a novel minimum probability time redundancy-based necessary and sufficient adjustment point selection strategy is proposed to address the problem of where and an innovative genetic-algorithm-based effective and efficient local rescheduling strategy is proposed to tackle the problem of how. The results of large-scale simulation experiments with generic workflows and specific real-world applications demonstrate that our temporal adjustment strategy can remarkably prevent the violations of both local and global temporal constraints in scientific workflows.
C1 [Liu, Xiao; Yang, Yun; Chen, Jinjun] Swinburne Univ Technol, Fac Informat & Commun Technol, Melbourne, Vic 3122, Australia.
   [Yang, Yun] Anhui Univ, Sch Comp Sci & Technol, Hefei 230039, Anhui, Peoples R China.
   [Jiang, Yuanchun] Hefei Univ Technol, Inst Elect Commerce, Sch Management, Hefei 230009, Peoples R China.
   [Jiang, Yuanchun] Univ Pittsburgh, Grad Sch Business, Pittsburgh, PA 15260 USA.
   [Chen, Jinjun] Univ Technol Sydney, Fac Engn & Informat Technol, Sydney, NSW 2007, Australia.
C3 Swinburne University of Technology; Anhui University; Hefei University
   of Technology; Pennsylvania Commonwealth System of Higher Education
   (PCSHE); University of Pittsburgh; University of Technology Sydney
RP Liu, X (corresponding author), Swinburne Univ Technol, Fac Informat & Commun Technol, Melbourne, Vic 3122, Australia.
EM xliu@swin.edu.au; yyang@swin.edu.au; yuanchunjiang@gmail.com;
   jinjun.chen@gmail.com
RI Chen, Jinjun/AAP-2361-2020; Liu, Xiao/AAG-1593-2020; jiang,
   anyi/GPT-0379-2022
OI Liu, Xiao/0000-0001-8400-5754; Chen, Jinjun/0000-0003-1677-9525
FU Australian Research Council [LP0990393]; State Administration of Foreign
   Experts Affairs of China [P201100001]; National Natural Science
   Foundation of China [61170192]
FX The authors appreciate the valuable comments from anonymous reviewers.
   The research work reported in this paper is partly supported by the
   Australian Research Council under LP0990393 as well as State
   Administration of Foreign Experts Affairs of China Project P201100001,
   and the National Natural Science Foundation of China under grant No.
   61170192. The authors are grateful for part of the simulation work done
   by Qing Lu and English proofreading by Michael Jensen. Y. Yang is the
   corresponding author for the paper.
CR [Anonymous], 2004, The Grid: Blueprint for a New Computing Infrastructure. Vol
   [Anonymous], P 2008 IEEE INT PAR
   [Anonymous], J PARALLEL DISTR COM
   Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   Bucci G, 2005, IEEE T SOFTWARE ENG, V31, P913, DOI 10.1109/TSE.2005.122
   Buhr PA, 2000, IEEE T SOFTWARE ENG, V26, P820, DOI 10.1109/32.877844
   Casati F, 2000, IEEE T SOFTWARE ENG, V26, P760, DOI 10.1109/32.879813
   Chatfield C., 2004, ANAL TIME SERIES INT
   Chen JJ, 2007, ACM T AUTON ADAP SYS, V2, DOI 10.1145/1242060.1242063
   Chen JJ, 2008, CONCURR COMP-PRACT E, V20, P347, DOI 10.1002/cpe.1220
   Chen JJ, 2007, CONCURR COMP-PRACT E, V19, P965, DOI 10.1002/cpe.1088
   Chen JJ, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000793
   Chen JJ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P141, DOI 10.1145/1368088.1368108
   Cooper K., 2004, Proceedings. 18th International Parallel and Distributed Processing Symposium
   Eder J., 1999, Advanced Information Systems Engineering. 11th International Conference, CAiSE'99. Proceedings (Lecture Notes in Computer Science Vol. 1626), P286
   Hagen C, 2000, IEEE T SOFTWARE ENG, V26, P943, DOI 10.1109/32.879818
   Han J., 2006, DATA MINING CONCEPTS, DOI 10.1016/C2009-0-61819-5
   Hwang R, 2008, COMPUT OPER RES, V35, P976, DOI 10.1016/j.cor.2006.05.013
   Jia Yu, 2006, Scientific Programming, V14, P217
   Kim KH, 2007, CCGRID 2007: SEVENTH IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, P541
   Kwok YK, 1999, ACM COMPUT SURV, V31, P406, DOI 10.1145/344588.344618
   Law A.M., 2007, SIMULATION MODELLING, Vfourth
   Liu X., 2009, P INT C SOFTW PROC T
   Liu X, 2008, LECT NOTES COMPUT SC, V5240, P180
   Liu X, 2011, CONCURR COMP-PRACT E, V23, P1893, DOI 10.1002/cpe.1739
   Machine Learning Group Dept. of Computer Science Univ. of Sheffield, 2010, GA TOOLK
   Marjanovic O., 1999, Knowledge and Information Systems, V1, P157
   Martinez A, 2007, IEEE T PARALL DISTR, V18, P1714, DOI 10.1109/TPDS.2007.1108
   Miller M., 2008, CLOUD COMPUTING WEB
   Moore M, 2004, PARALLEL COMPUT, V30, P567, DOI 10.1016/j.parco.2003.12.005
   Nadarajah S, 2008, IEEE T VLSI SYST, V16, P210, DOI 10.1109/TVLSI.2007.912191
   Nat'l Meteorological Data Center, 2010, CHIN MET DAT SHAR SE
   Oh J, 2004, J SYST SOFTWARE, V71, P245, DOI 10.1016/S0164-1212(02)00147-4
   Pozewaunig H., 1997, P 1 E EUR S ADV DAT
   Prodan R, 2008, IEEE T PARALL DISTR, V19, P378, DOI 10.1109/TPDS.2007.70734
   Russell N., 2006, BPM0604 BPM CTR
   Russell N, 2006, LECT NOTES COMPUT SC, V4001, P288, DOI 10.1007/11767138_20
   Stout EA, 2008, FUSION ENG DES, V83, P535, DOI 10.1016/j.fusengdes.2007.12.025
   Stroud K.A., 2007, Engineering Mathematics
   van der Aalst WMP, 2000, STAT NEERL, V54, P237, DOI 10.1111/1467-9574.00139
   Virine L., 2007, MANAGEMENT CONCE OCT
   Wu AS, 2004, IEEE T PARALL DISTR, V15, P824, DOI 10.1109/TPDS.2004.38
   Xiao Liu, 2008, 2008 IEEE Fourth International Conference on eScience, P23, DOI 10.1109/eScience.2008.14
   Xu J, 2000, IEEE T PARALL DISTR, V11, P1019, DOI 10.1109/71.888642
   Yang Y, 2007, P IEEE INT C E-SCI, P51, DOI 10.1109/e-Science.2007.2
   Yu J., 2005, J Grid Comput, V3, P171, DOI DOI 10.1007/S10723-005-9010-8
   Yu J, 2007, GRIDSTR200710 U MELB
   Yu Zhifeng., 2007, IPDPS 2007 IEEE INT, P115
   Yuan D., 2010, P 24 IEEE INT PAR DI
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   Zhang Du., 2005, MACHINE LEARNING APP
   Zhuge H, 2005, IEEE T KNOWL DATA EN, V17, P1721, DOI 10.1109/TKDE.2005.190
   Zhuge H, 2001, J SYST SOFTWARE, V55, P231, DOI 10.1016/S0164-1212(00)00073-X
NR 53
TC 48
Z9 54
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2011
VL 37
IS 6
BP 805
EP 825
DI 10.1109/TSE.2010.99
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 854SE
UT WOS:000297513700004
DA 2024-07-18
ER

PT J
AU Feng, X
   Parnas, DL
   Tse, TH
   O'Callaghan, T
AF Feng, Xin
   Parnas, David Lorge
   Tse, T. H.
   O'Callaghan, Tony
TI A Comparison of Tabular Expression-Based Testing Strategies
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tabular expression; test case constraint; subsume; unconditionally
   subsume; conditionally subsume
ID FAULT CLASSES; SOFTWARE; SPECIFICATION; DOCUMENTATION; SEMANTICS;
   PROGRAMS; SYSTEMS
AB Tabular expressions have been proposed as a notation to document mathematically precise but readable software specifications. One of the many roles of such documentation is to guide testers. This paper 1) explores the application of four testing strategies (the partition strategy, decision table-based testing, the basic meaningful impact strategy, and fault-based testing) to tabular expression-based specifications, and 2) compares the strategies on a mathematical basis through formal and precise definitions of the subsumption relationship. We also compare these strategies through experimental studies. These results will help researchers improve current methods and will enable testers to select appropriate testing strategies for tabular expression-based specifications.
C1 [Feng, Xin] United Int Coll, Div Sci & Technol, Zhuhai, Guangdong, Peoples R China.
   [Parnas, David Lorge] Univ Limerick, Software Qual Res Lab, Limerick, Ireland.
   [Parnas, David Lorge] McMaster Univ, Hamilton, ON, Canada.
   [Tse, T. H.] Univ Hong Kong, Dept Comp Sci, Pokfulam, Hong Kong, Peoples R China.
   [O'Callaghan, Tony] Univ Limerick, Interact Design Ctr, Limerick, Ireland.
C3 Beijing Normal University - Hong Kong Baptist University United
   International College; University of Limerick; McMaster University;
   University of Hong Kong; University of Limerick
RP Feng, X (corresponding author), United Int Coll, Div Sci & Technol, Zhuhai, Guangdong, Peoples R China.
EM xinfeng@uic.edu.hk; david.parnas@ul.ie; thtse@cs.hku.hk;
   tony.ocallaghan@ul.ie
RI Tse, T.H./C-6590-2008
OI Tse, T.H./0000-0002-0460-8377
FU Science Foundation Ireland (SFI) [01/P1.2/C009, 03/CE3/1405]; Research
   Grants Council of Hong Kong [717308]
FX This research is sponsored by Science Foundation Ireland (SFI) under
   grants 01/P1.2/C009 and 03/CE3/1405, and the General Research Fund of
   the Research Grants Council of Hong Kong under project no. 717308.
CR Agrawal H., 1989, Technical Report. Technical Report SERCTR- 41- P
   ALSPAUGH TA, 1992, NRLFR5530929194
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 2006, CIT
   BABER RL, 2005, P INT C INF TECHN CO, V2, P428
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   Chen T. Y., 1999, Proceedings Sixth Asia Pacific Software Engineering Conference (ASPEC'99) (Cat. No.PR00509), P606, DOI 10.1109/APSEC.1999.809656
   Chen TY, 2006, J SYST SOFTWARE, V79, P591, DOI 10.1016/j.jss.2005.05.029
   Chen TY, 1996, IEEE T SOFTWARE ENG, V22, P109, DOI 10.1109/32.485221
   Chen TY, 2001, SOFTW TEST VERIF REL, V11, P165, DOI 10.1002/stvr.221
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   CLERMONT M, 2005, ACM SIGSOFT SOFTWARE, V30, P1
   Demillo R. A., 1993, ACM Transactions on Software Engineering and Methodology, V2, P109, DOI 10.1145/151257.151258
   FENG X, 2008, P TEST AC IND C PRAC, P59
   FENG X, 2002, THESIS U HONG KONG
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P202, DOI 10.1109/32.221133
   Grochtmann M., 1993, Software Testing, Verification and Reliability, V3, P63, DOI 10.1002/stvr.4370030203
   Halmos P. R., 1960, NAIVE SET THEORY
   HENINGER KL, 1980, IEEE T SOFTWARE ENG, V6, P2, DOI 10.1109/TSE.1980.230208
   HOWDEN WE, 1982, IEEE T SOFTWARE ENG, V8, P371, DOI 10.1109/TSE.1982.235571
   Janicki R, 2005, FUND INFORM, V67, P343
   Janicki R, 2001, SCI COMPUT PROGRAM, V39, P189, DOI 10.1016/S0167-6423(00)00004-6
   JANICKI R, 1997, RELATIONAL METHODS C, P184
   Jorgensen P., 2008, Software Testing: A Craftsman's Approach, VThird
   Kaminski G, 2008, SOFTW TEST VERIF REL, V18, P149, DOI 10.1002/stvr.386
   Kuhn DR, 1999, ACM T SOFTW ENG METH, V8, P411, DOI 10.1145/322993.322996
   Lau MF, 2005, ACM T SOFTW ENG METH, V14, P247, DOI 10.1145/1072997.1072998
   Lau MF, 2001, 2001 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P21, DOI 10.1109/ASWEC.2001.948494
   LIU S, 2001, THESIS MCMASTER U
   MORELL LJ, 1990, IEEE T SOFTWARE ENG, V16, P844, DOI 10.1109/32.57623
   Myers Glenford J., 2011, The Art of Software Testing
   Okun V, 2004, INFORM SOFTWARE TECH, V46, P525, DOI 10.1016/j.infsof.2003.10.003
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   PARNAS DL, 1995, SCI COMPUT PROGRAM, V25, P41, DOI 10.1016/0167-6423(95)96871-J
   PARNAS DL, 1991, NUCL SAFETY, V32, P189
   PARNAS DL, 1994, IEEE T SOFTWARE ENG, V20, P948, DOI 10.1109/32.368133
   PARNAS DL, 1992, 260 MCM U
   PARNAS DL, 1994, P IFIP WORLD C, V3, P270
   Peters DK, 1998, IEEE T SOFTWARE ENG, V24, P161, DOI 10.1109/32.667877
   QUINN C, 2006, P INT C SOFTW ENG AD
   Sekerinski E., 2003, Formal Aspects of Computing, V15, P215, DOI 10.1007/s00165-003-0010-9
   SHEN H, 1995, THESIS MCMASTER U
   Tai KC, 1996, IEEE T SOFTWARE ENG, V22, P552, DOI 10.1109/32.536956
   van Schouwen A.J., 1993, P ISRE IEEE, P198
   WEYUKER E, 1994, IEEE T SOFTWARE ENG, V20, P353, DOI 10.1109/32.286420
   WEYUKER EJ, 1991, IEEE T SOFTWARE ENG, V17, P703, DOI 10.1109/32.83906
   WEYUKER EJ, 1993, IEEE T SOFTWARE ENG, V19, P912, DOI 10.1109/32.241773
   YU YT, 2006, J SYST SOFTWARE, V79, P577, DOI DOI 10.1016/J.JSS.2005.05.030
   Zucker J. I., 1996, Formal Aspects of Computing, V8, P679, DOI 10.1007/BF01213494
NR 49
TC 9
Z9 10
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2011
VL 37
IS 5
BP 616
EP 634
DI 10.1109/TSE.2011.78
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 823YC
UT WOS:000295162900002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Perepletchikov, M
   Ryan, C
AF Perepletchikov, Mikhail
   Ryan, Caspar
TI A Controlled Experiment for Evaluating the Impact of Coupling on the
   Maintainability of Service-Oriented Software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Services systems; design concepts; maintainability; product metrics;
   empirical studies
ID METRICS; DESIGN; MODEL
AB One of the goals of Service-Oriented Computing (SOC) is to improve software maintainability as businesses become more agile, and thus underlying processes and rules change more frequently. This paper presents a controlled experiment examining the relationship between coupling in service-oriented designs, as measured using a recently proposed suite of SOC-specific coupling metrics and software maintainability in terms of the specific subcharacteristics of analyzability, changeability, and stability. The results indicate a statistically significant causal relationship between the investigated coupling metrics and the maintainability of service-oriented software. As such, the investigated metrics can facilitate coupling related design decisions with the aim of producing more maintainable service-oriented software products.
C1 [Perepletchikov, Mikhail; Ryan, Caspar] RMIT Univ, Sch Comp Sci & IT, Melbourne, Vic, Australia.
C3 Royal Melbourne Institute of Technology (RMIT)
RP Perepletchikov, M (corresponding author), RMIT Univ, Sch Comp Sci & IT, Melbourne, Vic, Australia.
EM mikhail.perepletchikov@rmit.edu.au; caspar.ryan@rmit.edu.au
OI Ryan, Caspar/0000-0002-5569-6012; Perepletchikov,
   Mikhail/0000-0002-4029-7908
FU ARC (Australian Research Council) [DP0988345]; Australian Research
   Council [DP0988345] Funding Source: Australian Research Council
FX This work is funded by the ARC (Australian Research Council), under
   Discovery scheme no. DP0988345.
CR [Anonymous], P 6 INT C EMP ASS SO
   [Anonymous], 1988, Statistical power analysis for the behavioral sciences
   [Anonymous], P 13 INT C ADV INF S
   [Anonymous], 2003, PERSPECTIVES WEB SER
   [Anonymous], WEB SERVICES CONCEPT
   [Anonymous], FUTURE SOFTWARE ENG
   [Anonymous], P 8 INT C OBJ OR INF
   [Anonymous], AN IT 3 0 MICR EXC S
   [Anonymous], CONTROLLED EXPT EVAL
   [Anonymous], 147642006 ISOIECIEEE
   Arsanjani A, 2008, IBM SYST J, V47, P377, DOI 10.1147/sj.473.0377
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Basili1 Victor R, 1994, Encyclopedia of software engineering, V1994, P528
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P513, DOI 10.1109/32.926174
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P722, DOI 10.1109/32.815329
   CANT SN, 1995, INFORM SOFTWARE TECH, V37, P351, DOI 10.1016/0950-5849(95)91491-H
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   Dagpinar M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P155, DOI 10.1109/WCRE.2003.1287246
   Dijkman R, 2004, INT J COOP INF SYST, V13, P337, DOI 10.1142/S0218843004001012
   Erl T., 2009, SOA DESIGN PATTERNS, VFirst
   Erl T., 2007, SOA Principles of Service Design
   Faul F, 2007, BEHAV RES METHODS, V39, P175, DOI 10.3758/BF03193146
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Guruge Anuram., 2004, Web Services: Theory and Practice
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   ISO/IEC, 2001, Technical Report, V1st
   Levine D.M., 2001, APPL STAT ENG SCI
   Li W., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P52, DOI 10.1109/METRIC.1993.263801
   MARCUS R, 1976, BIOMETRIKA, V63, P655, DOI 10.1093/biomet/63.3.655
   Moen RonaldD., 1991, Improving quality through planned experimentation
   Papazoglou M., 2007, Web Services: Principles and Technology
   Papazoglou MP, 2007, COMPUTER, V40, P38, DOI 10.1109/MC.2007.400
   Pasley J, 2005, IEEE INTERNET COMPUT, V9, P60, DOI 10.1109/MIC.2005.56
   Perepletchikov Mikhail, 2008, Journal of Software, V3, P1, DOI 10.4304/jsw.3.2.1-14
   Perepletchikov M, 2007, 2007 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P329, DOI 10.1109/ASWEC.2007.17
   Perepletchikov M, 2010, IEEE T SERV COMPUT, V3, P89, DOI 10.1109/TSC.2010.23
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   SCHNEIDEWIND NF, 1992, IEEE T SOFTWARE ENG, V18, P410, DOI 10.1109/32.135774
   Shaughnessy J.J., 2005, Research methods in psychology, V7th
   Singh MunindarP., 2005, SERVICE ORIENTED COM
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   Wan-Kadir WMN, 2004, J SYST ARCHITECT, V50, P367, DOI 10.1016/j.sysarc.2003.09.006
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   YOURDON E, 1979, STRUCTURED DESIGN FU
   Zuse Horst., 1998, A framework of software measurement
NR 48
TC 25
Z9 27
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2011
VL 37
IS 4
BP 449
EP 465
DI 10.1109/TSE.2010.61
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 801QT
UT WOS:000293456000001
DA 2024-07-18
ER

PT J
AU Marcus, A
   Poshyvanyk, D
   Ferenc, R
AF Marcus, Andrian
   Poshyvanyk, Denys
   Ferenc, Rudolf
TI Using the conceptual cohesion of classes for fault prediction in
   Object-Oriented systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software cohesion; textual coherence; fault prediction; fault proneness;
   program comprehension; information retrieval; Latent Semantic Indexing
ID EMPIRICAL VALIDATION; TRACEABILITY LINKS; SOFTWARE QUALITY; METRICS;
   INFORMATION; RETRIEVAL; PRONENESS; CODE
AB High cohesion is a desirable property of software as it positively impacts understanding, reuse, and maintenance. Currently proposed measures for cohesion in Object-Oriented (OO) software reflect particular interpretations of cohesion and capture different aspects of it. Existing approaches are largely based on using the structural information from the source code, such as attribute references, in methods to measure cohesion. This paper proposes a new measure for the cohesion of classes in OO software systems based on the analysis of the unstructured information embedded in the source code, such as comments and identifiers. The measure, named the Conceptual Cohesion of Classes (C3), is inspired by the mechanisms used to measure textual coherence in cognitive psychology and computational linguistics. This paper presents the principles and the technology that stand behind the C3 measure. A large case study on three open source software systems is presented which compares the new measure with an extensive set of existing metrics and uses them to construct models that predict software faults. The case study shows that the novel measure captures different aspects of class cohesion compared to any of the existing cohesion measures. In addition, combining C3 with existing structural cohesion metrics proves to be a better predictor of faulty classes when compared to different combinations of structural cohesion metrics.
C1 [Marcus, Andrian; Poshyvanyk, Denys] Wayne State Univ, Dept Comp Sci, Detroit, MI 48202 USA.
   [Ferenc, Rudolf] Univ Szeged, Dept Software Engn, H-6720 Szeged, Hungary.
C3 Wayne State University; Szeged University
RP Marcus, A (corresponding author), Wayne State Univ, Dept Comp Sci, 5143 Cass Ave, Detroit, MI 48202 USA.
EM amarcus@cs.wayne.edu; denys@cs.wayne.edu; ferenc@inf.u-szeged.hu
RI ; Ferenc, Rudolf/A-1317-2008
OI Poshyvanyk, Denys/0000-0002-5626-7586; Marcus,
   Andrian/0000-0001-5450-5598; Ferenc, Rudolf/0000-0001-8897-7403
CR Allen E.B., 2001, PROC 7 INT SOFTWARE, P124
   [Anonymous], ACM SIGSOFT SOFTWARE
   [Anonymous], NRCERB1064
   [Anonymous], P 1995 S SOFTW REUS
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G, 2000, PROG COMPREHEN, P253, DOI 10.1109/WPC.2000.852502
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BERRY MW, 1992, INT J SUPERCOMPUT AP, V6, P13, DOI 10.1177/109434209200600103
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand L.C., 1998, PROC 5 INT SOFTWARE, P43
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Brittenham GM, 2001, SEMIN HEMATOL, V38, P37, DOI 10.1053/shem.2001.20143
   Chae HS, 2000, SOFTWARE PRACT EXPER, V30, P1405, DOI 10.1002/1097-024X(200010)30:12<1405::AID-SPE330>3.0.CO;2-3
   Chae HS, 2004, IEEE T SOFTWARE ENG, V30, P826, DOI 10.1109/TSE.2004.88
   Chen ZQ, 2002, PROC IEEE INT CONF S, P377, DOI 10.1109/ICSM.2002.1167794
   CHIDAMBER SR, 1991, OOPSLA 91 CONFERENCE PROCEEDINGS : OBJECT-ORIENTED PROGRAMMING SYSTEMS, LANGUAGES, AND APPLICATIONS, P197, DOI 10.1145/118014.117970
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   Cho ES, 1998, 1998 ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P78, DOI 10.1109/APSEC.1998.733591
   Counsell S, 2005, FIFTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P161, DOI 10.1109/SCAM.2005.19
   Counsell S, 2006, ACM T SOFTW ENG METH, V15, P123, DOI 10.1145/1131421.1131422
   Darcy DP, 2005, IEEE SOFTWARE, V22, P17, DOI 10.1109/MS.2005.160
   de Oca CM, 1998, PROC IEEE INT CONF S, P16, DOI 10.1109/ICSM.1998.738485
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   DILLON M, 1983, INFORM PROCESS MANAG, V19, P402, DOI 10.1016/0306-4573(83)90062-6
   Dragan N, 2006, PROC IEEE INT CONF S, P24
   DUMAIS ST, 1991, BEHAV RES METH INS C, V23, P229, DOI 10.3758/BF03203370
   Eder J., 1994, Coupling and cohesion in objectoriented systems
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Etzkorn L, 2000, TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS - TOOLS 34, PROCEEDINGS, P71, DOI 10.1109/TOOLS.2000.868960
   Etzkorn LH, 2004, INFORM SOFTWARE TECH, V46, P677, DOI 10.1016/j.infsof.2003.12.002
   Etzkorn LH, 2002, J SOFTW MAINT EVOL-R, V14, P293, DOI 10.1002/smr.255
   Etzkorn LH, 1997, COMPUTER, V30, P66, DOI 10.1109/2.625311
   Ferenc R, 2004, PROC IEEE INT CONF S, P60, DOI 10.1109/ICSM.2004.1357790
   Ferenc R, 2002, PROC IEEE INT CONF S, P172, DOI 10.1109/ICSM.2002.1167764
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   Foltz PW, 1998, DISCOURSE PROCESS, V25, P285, DOI 10.1080/01638539809545029
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Halliday M.A.K., 1976, Cohesion in English, DOI 10.1677/ERC-09-0254
   Henderson-Sellers B., 1996, Software Metrics
   HITZ M, 1995, P 3 INT S APPL CORP
   Jobson J.D., 1992, APPL MULTIVARIATE DA
   Jolliffe I.T., 1986, PRINCIPLE COMPONENT
   Kherfi ML, 2004, ACM COMPUT SURV, V36, P35, DOI 10.1145/1013208.1013210
   Kintsch W., 1998, COMPREHENSION PARADI
   Kramer S, 2004, ACM T SOFTW ENG METH, V13, P332, DOI 10.1145/1027092.1027094
   Kuhn A, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P133
   Landauer TK, 1997, PSYCHOL REV, V104, P211, DOI 10.1037/0033-295X.104.2.211
   Lee JK, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P79
   LEE YS, 1995, P INT C SOFTW QUAL
   Lorch R.F., 1995, SOURCES COHERENCE RE
   Maletic JI, 2002, PROG COMPREHEN, P289, DOI 10.1109/WPC.2002.1021351
   Maletic JI, 2001, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.2001.919085
   Marcollo H, 2006, J FLUID STRUCT, V22, P197, DOI 10.1016/j.jfluidstructs.2005.10.001
   Marcus A, 2005, PROC IEEE INT CONF S, P133
   Marcus A, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P107, DOI 10.1109/ASE.2001.989796
   Marcus A, 2005, INT J SOFTW ENG KNOW, V15, P811, DOI 10.1142/S0218194005002543
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   MARCUS A, 2003, THESIS KENT STATE U
   Meyers TM, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P256, DOI 10.1109/WCRE.2004.34
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   Ott L. M., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P71, DOI 10.1109/METRIC.1993.263799
   PATEL S, 1992, P 14 INT C SOFTW ENG, P38
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2007, INT C PROGRAM COMPRE, P37
   Poshyvanyk D, 2006, PROC IEEE INT CONF S, P469
   Quah TS, 2003, PROC IEEE INT CONF S, P116
   Sahami M., 2006, WWW 06, DOI DOI 10.1145/1135777.1135834
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Succi G, 2005, EMPIR SOFTW ENG, V10, P81, DOI 10.1023/B:EMSE.0000048324.12188.a2
   Yin R. K., 2015, CASE STUDY RES DESIG
   Zhao JJ, 2004, LECT NOTES COMPUT SC, V2984, P54
   Zhou YM, 2003, ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P215, DOI 10.1109/APSEC.2003.1254374
   Zhou YM, 2002, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.2002.1167746
NR 78
TC 158
Z9 191
U1 1
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2008
VL 34
IS 2
BP 287
EP 300
DI 10.1109/TSE.2007.70768
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 276SC
UT WOS:000254161500009
DA 2024-07-18
ER

PT J
AU Cortellessa, V
   Pierini, P
   Rossi, D
AF Cortellessa, Vittorio
   Pierini, Pierluigi
   Rossi, Daniele
TI Integrating software models and platform models for performance analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software performance; software model; platform model; UML; simulation
AB System performance is a key factor to take into account throughout the software life cycle of modern computer systems, mostly due to their typical characteristics such as distributed deployment, code mobility, and platform heterogeneity. An open challenge in this direction is to integrate the performance validation as a transparent and efficient activity in the system development process. Several methodologies have been proposed to automate the transformation of software/ hardware models into performance models. In this paper, we do not take a transformational approach; rather, we present a framework to integrate a software model with a platform model in order to build a performance model. Performance indices are obtained from simulation of the resulting performance model. Our framework provides a library of predefined resource models, model annotation and integration procedures, and simulation support that makes the performance analysis a much easier activity. We present the results obtained from two different industrial case studies that show the maturity and the stability of our approach.
C1 Univ Aquila, Dipartimento Informat, I-67010 Coppito, Italy.
   Technolabs SpA, I-67100 Laquila, Italy.
C3 University of L'Aquila
RP Cortellessa, V (corresponding author), Univ Aquila, Dipartimento Informat, Via Vetoio 1, I-67010 Coppito, Italy.
EM cortelle@di.univaq.it; pierluigi.pierini@technolabs.it
RI Sangiovanni-Vincentelli, Alberto L/F-5742-2018; Sangiovanni-Vincentelli,
   Alberto/S-3822-2019
CR AMMAR HH, 2001, P ACS IEEE INT C COM
   ARIEF LB, 2000, P 2 INT WORKSH SOFTW
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   BALSAMO S, 2003, P EUR SOFTW ENG C AC
   Bernardi S., 2002, 3 INT WORKSH SOFTW P
   CORTELLESSA V, 2007, 0022007 TRCS U LAQ D
   CORTELLESSA V, 2004, P INT S OBJ OR REAL
   CORTELLESSA V, 2005, P INT S OBJ OR REAL
   Gomaa H., 2000, DESIGNING CONCURRENT
   HARRELD H, 1998, FEDERAL COMPUTER WEE
   *HYPERFORMIX, 2005, ENG PERF EARL APPL L
   *IBM, 2007, IBM RAT ROS REAL TIM
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   MILLER J, 2003, OMG20030601
   Mitschele-Thiel A, 1999, COMPUT NETW, V31, P1801, DOI 10.1016/S1389-1286(99)00061-4
   OBER I, 2003, P INT WORKSH SPEC VA
   *OMG, 2007, FORMAL20050102 OMG
   POOLEY R, 1998, P 14 UK PERF ENG WOR
   ROLIA JA, 1995, IEEE T SOFTWARE ENG, V21, P689, DOI 10.1109/32.403785
   RYAN H, 2000, OUTLOOK 2000, P3
   Sancho PP, 2004, LECT NOTES COMPUT SC, V3236, P278
   Selic B., 1998, Languages, Compilers, and Tools for Embedded Systems. ACM SIGPLAN Workshop LCTES'98. Proceedings, P250, DOI 10.1007/BFb0057795
   SELIC B, 2004, P INT S OBJ OR REAL
   SELIC B, 2005, P INT S OBJ OR REAL
   *SIEM INF COMM NET, 2007, SURP SER PROD
   Woodside M, 2001, PERFORM EVALUATION, V45, P107, DOI 10.1016/S0166-5316(01)00033-5
   WOODSIDE M, 1998, P 1 INT WORKSH SOFTW
   WOODSIDE M, 2005, P 5 INT WORKSH SOFTW
   YACOUB S, 2000, P 6 INT C REL QUAL D
   YILMAZ C, 2005, P INT C SOFTW ENG
   1998, P 1 INT WORKSH SOFTW
NR 31
TC 16
Z9 17
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2007
VL 33
IS 6
BP 385
EP 401
DI 10.1109/TSE.2007.1014
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 160PJ
UT WOS:000245954500002
DA 2024-07-18
ER

PT J
AU Olague, HM
   Etzkorn, LH
   Gholston, S
   Quattlebaum, S
AF Olague, Hector M.
   Etzkorn, Letha H.
   Gholston, Sampson
   Quattlebaum, Stephen
TI Empirical validation of three software metrics suites to predict
   fault-proneness of object-oriented classes developed using highly
   iterative or agile software development processes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE object-oriented software metrics; object-oriented metrics; software
   quality metrics; software maintenance programming; software reuse
ID SYSTEMS; DESIGN
AB Empirical validation of software metrics suites to predict fault proneness in object-oriented (OO) components is essential to ensure their practical use in industrial settings. In this paper, we empirically validate three OO metrics suites for their ability to predict software quality in terms of fault-proneness: the Chidamber and Kemerer (CK) metrics, Abreu's Metrics for Object-Oriented Design ( MOOD), and Bansiya and Davis' Quality Metrics for Object-Oriented Design (QMOOD). Some CK class metrics have previously been shown to be good predictors of initial OO software quality. However, the other two suites have not been heavily validated except by their original proposers. Here, we explore the ability of these three metrics suites to predict fault-prone classes using defect data for six versions of Rhino, an open-source implementation of JavaScript written in Java. We conclude that the CK and QMOOD suites contain similar components and produce statistical models that are effective in detecting error-prone classes. We also conclude that the class components in the MOOD metrics suite are not good class fault-proneness predictors. Analyzing multivariate binary logistic regression models across six Rhino versions indicates these models may be useful in assessing quality in OO classes produced using modern highly iterative or agile software development processes.
C1 USA, Space & Missile Def Command, SMDC RDTI S, Huntsville, AL 35807 USA.
   Univ Alabama, Dept Comp Sci, Huntsville, AL 35899 USA.
   Univ Alabama, Ind & Syst Engn & Engn Management Dept, Huntsville, AL 35899 USA.
   Dragonfly Athlet, Hartselle, AL 35640 USA.
C3 University of Alabama System; University of Alabama Huntsville;
   University of Alabama System; University of Alabama Huntsville
RP Olague, HM (corresponding author), USA, Space & Missile Def Command, SMDC RDTI S, POB 1500, Huntsville, AL 35807 USA.
EM holague@cs.uah.edu; letzkorn@cs.uah.edu; gholston@ise.uah;
   stephen@covidimus.net
CR Abreu FBE, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P90, DOI 10.1109/METRIC.1996.492446
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bellini P, 2005, IEEE INT C ENG COMP, P205
   Binkley AB, 1998, PROC INT CONF SOFTW, P452, DOI 10.1109/ICSE.1998.671604
   BOYD N, 2005, E COMMUNICATION 0906
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Denaro G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1109/ICSE.2002.1007972
   e Abreu F.B., 2000, Proceedings Euromicro Conference on Software Maintenance and Reengineering, P13
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Etzkorn LH, 2004, INFORM SOFTWARE TECH, V46, P677, DOI 10.1016/j.infsof.2003.12.002
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Harrison R, 1998, IEEE T SOFTWARE ENG, V24, P491, DOI 10.1109/32.689404
   Hopkins WillG., 2003, A new view of statistics
   Hosmer W., 2000, Applied Logistic Regression, VSecond
   *INF PROC LTD, 2004, CONT US MAN
   JENSEN A, 2004, OVERVIEW EVALUATION
   Nesi P, 1998, J SYST SOFTWARE, V42, P89, DOI 10.1016/S0164-1212(97)10021-8
   QUATTLEBAUM S, 2004, THESIS U ALABAMA HUN
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   *XLMINER ONL HELP, 2006, CYT STAT SOFTW RES S
NR 23
TC 170
Z9 194
U1 1
U2 33
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2007
VL 33
IS 6
BP 402
EP 419
DI 10.1109/TSE.2007.1015
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 160PJ
UT WOS:000245954500003
DA 2024-07-18
ER

PT J
AU Demsky, B
   Rinard, MC
AF Demsky, Brian
   Rinard, Martin C.
TI Goal-directed reasoning for specification-based data structure repair
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 27th International Conference on Software Engineering (ICSE 2005)
CY MAY 15-21, 2005
CL St Louis, MO
SP ACM, SIGSOFT, IEEE, IEEE Comp Soc
DE testing and debugging; language constructs and features
ID REDUNDANCY
AB Software errors and hardware failures can cause data structures in running programs to violate key data structure consistency properties. As a result of this violation, the program may produce unacceptable results or even fail. We present a new data structure repair system. This system accepts a specification of data structure consistency properties stated in terms of an abstract set- and relation- based model of the data structures in the running program. It then automatically generates a repair algorithm that, during the execution of the program, detects and repairs any violations of these constraints. The goal is to enable the program to continue to execute acceptably in the face of otherwise crippling data structure corruption errors. We have applied our system to repair inconsistent data structures in five applications: CTAS ( an air traffic control system), AbiWord ( an open source word processing program), Freeciv ( an interactive multiplayer game), a parallel x86 emulator, and a simplified Linux file system. Our results indicate that the generated repair algorithms can effectively repair inconsistent data structures in these applications to enable the applications to continue to operate successfully in cases where the original application would have failed. Without repair, all of the applications fail.
C1 Univ Calif Irvine, Dept Elect Engn & Comp Sci, Irvine, CA 92697 USA.
   MIT, Comp Sci & Artificial Intelligence Lab, Stata Ctr, Cambridge, MA 02139 USA.
C3 University of California System; University of California Irvine;
   Massachusetts Institute of Technology (MIT)
RP Demsky, B (corresponding author), Univ Calif Irvine, Dept Elect Engn & Comp Sci, Irvine, CA 92697 USA.
EM bdemsky@uci.edu; rinard@lcs.mit.edu
CR ACCETTA M, 1986, P USENIX SUMM C
   ANDERSON T, 1976, P 2 INT C SOFTW ENG, P447
   [Anonymous], 2002, UCBCSD021175
   [Anonymous], P 25 INT S FAULT TOL
   [Anonymous], P 22 INT C SOFTW ENG
   [Anonymous], chkdsk.
   [Anonymous], 1996, ARIANE 5, Flight 501 Failure
   [Anonymous], 2000, Self-Stabilization
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Avizienis A., 1995, Software fault tolerance, V3, P23
   Candea G, 2001, EIGHTH WORKSHOP ON HOT TOPICS IN OPERATING SYSTEMS, PROCEEDINGS, P125, DOI 10.1109/HOTOS.2001.990072
   CERI S, 1990, VERY LARGE DATA BASES, P566
   CERI S, 1994, ACM T DATABASE SYST, V19, P367, DOI 10.1145/185827.185828
   DEMSKY B, 2006, THESIS MIT
   DEMSKY B, 2003, P 14 IEEE INT S SOFT
   DEMSKY B, 2003, P 18 ANN C OBJ OR PR
   DEMSKY B, 2005, P 2005 INT C SOFTW E
   DIJKSTRA EW, 1974, COMMUN ACM, V17, P643, DOI 10.1145/361179.361202
   GHIYA R, 1996, P 23 ACM SIGPLAN SIG
   GOEL AL, 1985, IEEE T SOFTWARE ENG, V11
   GRIFFIN T, 1992, AT T DAT DAY SEPT
   GUPTA NK, 1997, P 19 INT C SOFTW ENG
   HALLEM S, 2002, P SIGPLAN 02 C PROGR
   HAUGK G, 1985, AT&T TECH J, V64, P1385, DOI 10.1002/j.1538-7305.1985.tb00280.x
   HOOVER R, 1992, P SIGPLAN 92 C PROGR
   HUANG K, 1998, P 1998 ANN IEEE WORK
   JACKSON D, 2000, 797 MIT LAB COMP SCI
   LADD DA, 1994, USENIX 1994 VER HIGH
   LI CCJ, 1989, IEEE T COMPUT, V38, P1481, DOI 10.1109/12.42119
   LITMAN D, 1997, P 12 ANN C OBJ OR PR
   LOPEZ GE, 1997, THESIS U WASHINGTON
   MAY TC, 1979, IEEE T ELECT DEVICES, V26
   MISHRA A, 1996, P 11 ANN C OBJ OR PR
   MOURAD S, 1987, IEEE T SOFTW ENG SEP
   PLANK JS, 1995, PROCEEDINGS OF THE 1995 USENIX TECHNICAL CONFERENCE, P213
   RAMAMOORTHY CV, 1972, IEEE T COMPUT, VC 21, P137, DOI 10.1109/TC.1972.5008918
   *RAT INC, 2006, UN MOD LANG
   Reuter A, 1993, T PROCESSING CONCEPT
   RINARD M, 2006, P 20 ACM INT C SUP
   Rosenblum Mendel, 1991, P 13 ACM S OP SYST P
   Shirvani PP, 2000, IEEE T RELIAB, V49, P273, DOI 10.1109/24.914544
   TAYLOR D, 1981, P 11 INT S FAULT TOL
   TAYLOR DJ, 1982, IEEE T COMPUT, V31, P602, DOI 10.1109/TC.1982.1676057
   TAYLOR DJ, 1980, IEEE T SOFTWARE ENG, V6, P585, DOI 10.1109/TSE.1980.234507
   TAYLOR DJ, 1980, IEEE T SOFTWARE ENG, V6, P595, DOI 10.1109/TSE.1980.230803
   TAYLOR M, 2002, IEEE MICR        MAR
   URBAN SD, 1990, IEEE T KNOWLEDGE DAT, V2
   WEYUKER EJ, 1995, P 3 ACM SIGSOFT S FD
   WIES T, 2006, P INT C VER MOD CHEC
   YAU SS, 1975, P INT C REL SOFTW, P450
   YOUNG JW, 1974, COMMUN ACM, V17, P530, DOI 10.1145/361147.361115
   ZHANG Y, 2005, ACM SIGOPS OPERATING, V39, P72
   2006, CTR TRACON AUTOMATIO
   2006, E2FSPROGS RELEASE NO
   2006, EXT2 FSCK MANUAL PAG
   2006, CHANGELOG REISERFSPR
NR 56
TC 26
Z9 33
U1 2
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2006
VL 32
IS 12
BP 931
EP 951
DI 10.1109/TSE.2006.122
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 104VJ
UT WOS:000241988400002
DA 2024-07-18
ER

PT J
AU Tsantalis, N
   Chatzigeorgiou, A
   Stephanides, G
   Halkidis, ST
AF Tsantalis, Nikolaos
   Chatzigeorgiou, Alexander
   Stephanides, George
   Halkidis, Spyros T.
TI Design pattern detection using similarity scoring
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE patterns; object-oriented design methods; graph algorithms;
   restructuring; reverse engineering; reengineering
ID SUBGRAPH ISOMORPHISM; CODE
AB The identification of design patterns as part of the reengineering process can convey important information to the designer. However, existing pattern detection methodologies generally have problems in dealing with one or more of the following issues: Identification of modified pattern versions, search space explosion for large systems and extensibility to novel patterns. In this paper, a design pattern detection methodology is proposed that is based on similarity scoring between graph vertices. Due to the nature of the underlying graph algorithm, this approach has the ability to also recognize patterns that are modified from their standard representation. Moreover, the approach exploits the fact that patterns reside in one or more inheritance hierarchies, reducing the size of the graphs to which the algorithm is applied. Finally, the algorithm does not rely on any pattern-specific heuristic, facilitating the extension to novel design structures. Evaluation on three open-source projects demonstrated the accuracy and the efficiency of the proposed method.
C1 Univ Macedonia, Dept Appl Informat, Thessaloniki 54006, Greece.
C3 University of Macedonia
RP Tsantalis, N (corresponding author), Univ Macedonia, Dept Appl Informat, 156 Egnatia Str, Thessaloniki 54006, Greece.
EM nikos@java.uom.gr; achat@uom.gr; steph@uom.gr; halkidis@uom.gr
RI Tsantalis, Nikolaos/AAR-7845-2020; Chatzigeorgiou,
   Alexandros/AAL-6077-2021
OI Tsantalis, Nikolaos/0000-0003-2508-3845; 
CR Albin-Amiot H, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P166, DOI 10.1109/ASE.2001.989802
   [Anonymous], The Design Pattern Detection tool Homepage
   Antoniol G, 2001, J SYST SOFTWARE, V59, P181, DOI 10.1016/S0164-1212(01)00061-9
   Balanyi Z, 2003, PROC IEEE INT CONF S, P305, DOI 10.1109/ICSM.2003.1235436
   Bengoetxea E., 2002, Ph.D. thesis
   BERGENTI F, 2000, P 12 INT C SOFTW ENG
   Blondel VD, 2004, SIAM REV, V46, P647, DOI 10.1137/S0036144502415960
   BROWN K, 1996, TR9607 N CAR STAT U
   Cook DJ, 1993, J ARTIF INTELL RES, V1, P231, DOI 10.1613/jair.43
   Costagliola G, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P102, DOI 10.1109/CSMR.2005.23
   Ferenc R, 2005, PROC IEEE INT CONF S, P295
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GUEHENEUC Y, 2004, P 11 WORK C REV ENG
   Heuzeroth Dirk, 2003, P 11 IEEE INT WORKSH
   Kleinberg JM, 1999, J ACM, V46, P604, DOI 10.1145/324133.324140
   Messmer BT, 2000, IEEE T KNOWL DATA EN, V12, P307, DOI 10.1109/69.842269
   Prechelt Lutz., 1998, J UNIVERS COMPUT SCI, V4, P866
   Richter A., 1998, Molecular Physics Reports, V21, P11
   SMITH JM, 2003, P 18 IEEE INT C AUT
   Smith S, 2002, ECONTENT, V25, P40
   Tonella P., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P230, DOI 10.1109/ICSM.1999.792619
   ULLMANN JR, 1976, J ACM, V23, P31, DOI 10.1145/321921.321925
   Vokác M, 2004, IEEE T SOFTWARE ENG, V30, P904, DOI 10.1109/TSE.2004.99
   VOKAC M, 2005, J OBJECT TECHNOLOGY, V2
   WENDEHALS L, 2004, P 6 WORKSH SOFTW REE, P63
   WENDEHALS L, 2003, P WORKSH DYN AN WODA
   2006, JREFACTORY
NR 28
TC 260
Z9 294
U1 1
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2006
VL 32
IS 11
BP 896
EP 909
DI 10.1109/TSE.2006.112
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 101EE
UT WOS:000241720900004
DA 2024-07-18
ER

PT J
AU Song, QB
   Shepperd, M
   Cartwright, M
   Mair, C
AF Song, QB
   Shepperd, M
   Cartwright, M
   Mair, C
TI Software defect association mining and defect correction effort
   prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software defect prediction; defect association; defect isolation effort;
   defect correction effort
ID CAPTURE-RECAPTURE MODELS; PROCESS IMPROVEMENT
AB Much current software defect prediction work focuses on the number of defects remaining in a software system. In this paper, we present association rule mining based methods to predict defect associations and defect correction effort. This is to help developers detect software defects and assist project managers in allocating testing resources more effectively. We applied the proposed methods to the SEL defect data consisting of more than 200 projects over more than 15 years. The results show that, for defect association prediction, the accuracy is very high and the false-negative rate is very low. Likewise, for the defect correction effort prediction, the accuracy for both defect isolation effort prediction and defect correction effort prediction are also high. We compared the defect correction effort prediction method with other types of methods-PART, C4.5, and Naive Bayes-and show that accuracy has been improved by at least 23 percent. We also evaluated the impact of support and confidence levels on prediction accuracy, false-negative rate, false-positive rate, and the number of rules. We found that higher support and confidence levels may not result in higher prediction accuracy, and a sufficient number of rules is a precondition for high prediction accuracy.
C1 Xi An Jiao Tong Univ, Dept Comp Sci & Technol, Xian 710049, Shaanxi, Peoples R China.
   Brunel Univ, Sch Informat Sci Comp & Math, Uxbridge UB8 3PH, Middx, England.
C3 Xi'an Jiaotong University; Brunel University
RP Xi An Jiao Tong Univ, Dept Comp Sci & Technol, 28 Xian Ning W Rd, Xian 710049, Shaanxi, Peoples R China.
EM qbsong@mail.xjtu.edu.cn; martin.shepperd@brunel.ac.uk;
   michelle.cartwright@brunel.ac.uk; carolyn.mair@brunel.ac.uk
RI Shepperd, Martin/F-9683-2013
OI Shepperd, Martin/0000-0003-1874-6145
CR Ali K., 1997, Proceedings of the Third International Conference on Knowledge Discovery and Data Mining, P115
   [Anonymous], P 26 INT C SOFTW ENG
   [Anonymous], 1998, P 4 INT C KNOWLEDGE
   [Anonymous], P 15 INT C MACH LEAR
   [Anonymous], P ACM SIGMOD C MAN D
   BHANDARI I, 1994, IBM SYST J, V33, P182, DOI 10.1147/sj.331.0182
   BHANDARI I, 1993, IEEE T SOFTWARE ENG, V19, P1157, DOI 10.1109/32.249661
   BHANDARI IS, 1993, P WORKSH KNOWL DISC
   Briand LC, 2000, IEEE T SOFTWARE ENG, V26, P518, DOI 10.1109/32.852741
   COMPTON BT, 1990, J SYST SOFTWARE, V12, P199, DOI 10.1016/0164-1212(90)90040-S
   DONG G, 1999, P 2 INT C DISC SCI, P30
   Ebrahimi NB, 1997, IEEE T SOFTWARE ENG, V23, P529, DOI 10.1109/32.624308
   El Emam K, 2001, IEEE T SOFTWARE ENG, V27, P851, DOI 10.1109/32.950319
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Frank E, 2000, MACH LEARN, V41, P5, DOI 10.1023/A:1007670802811
   HELLER G, 1992, SEL92002
   KENNEY GQ, 1993, IEEE T RELIAB, V42, P107, DOI 10.1109/24.210280
   MUNSON JC, 1990, INFORM SOFTWARE TECH, V32, P106, DOI 10.1016/0950-5849(90)90109-5
   Padberg F, 2004, IEEE T SOFTWARE ENG, V30, P17, DOI 10.1109/TSE.2004.1265733
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Runeson P., 1998, Empirical Software Engineering, V3, P381, DOI 10.1023/A:1009728205264
   She R., 2003, P 9 ACM SIGKDD INT C
   Srikant R., 1997, Proceedings of the Third International Conference on Knowledge Discovery and Data Mining, P67
   VANDERWIEL SA, 1993, IEEE T SOFTWARE ENG, V19, P1045, DOI 10.1109/32.256852
   Wang K, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P363
   WANG K, 2000, P 6 INT C KNOWL DISC
   Wohlin C, 1998, PROC INT CONF SOFTW, P400, DOI 10.1109/ICSE.1998.671393
   YANG Q, 2001, P 7 ACM SIGKDD INT C
   YIN X, 2003, P 2003 SIAM INT C DA
   YING ATT, 2004, P 1 INT WORKSH MIN S
NR 31
TC 99
Z9 118
U1 1
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2006
VL 32
IS 2
BP 69
EP 82
DI 10.1109/TSE.2006.1599417
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 012AD
UT WOS:000235309700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Damas, C
   Lambeau, B
   Dupont, P
   van Lamsweerde, A
AF Damas, C
   Lambeau, B
   Dupont, P
   van Lamsweerde, A
TI Generating annotated behavior models from end-user scenarios
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE scenario-based elicitation; synthesis of behavior models; scenario
   generation; invariant generation; labeled transition systems; message
   sequence charts; model validation; incremental learning; analysis tools
ID IDENTIFICATION
AB Requirements-related scenarios capture typical examples of system behaviors through sequences of desired interactions between the software-to-be and its environment. Their concrete, narrative style of expression makes them very effective for eliciting software requirements and for validating behavior models. However, scenarios raise coverage problems as they only capture partial histories of interaction among system component instances. Moreover, they often leave the actual requirements implicit. Numerous efforts have therefore been made recently to synthesize requirements or behavior models inductively from scenarios. Two problems arise from those efforts. On the one hand, the scenarios must be complemented with additional input such as state assertions along episodes or flowcharts on such episodes. This makes such techniques difficult to use by the nonexpert end-users who provide the scenarios. On the other hand, the generated state machines may be hard to understand as their nodes generally convey no domain-specific properties. Their validation by analysts, complementary to model checking and animation by tools, may therefore be quite difficult. This paper describes tool-supported techniques that overcome those two problems. Our tool generates a labeled transition system (LTS) for each system component from simple forms of message sequence charts (MSC) taken as examples or counterexamples of desired behavior. No additional input is required. A global LTS for the entire system is synthesized first. This LTS covers all scenario examples and excludes all counterexamples. It is inductively generated through an interactive procedure that extends known learning techniques for grammar induction. The procedure is incremental on training examples. It interactively produces additional scenarios that the end-user has to classify as examples or counterexamples of desired behavior. The LTS synthesis procedure may thus also be used independently for requirements elicitation through scenario questions generated by the tool. The synthesized system LTS is then projected on local LTS for each system component. For model validation by analysts, the tool generates state invariants that decorate the nodes of the local LTS.
C1 Catholic Univ Louvain, Dept Comp Sci & Engn INGI, B-1348 Louvain, Belgium.
C3 Universite Catholique Louvain
RP Catholic Univ Louvain, Dept Comp Sci & Engn INGI, Pl St Barbe 2, B-1348 Louvain, Belgium.
EM damas@info.ucl.ac.be; blambeau@info.ucl.ac.be; pdupont@info.ucl.ac.be;
   avl@info.ucl.ac.be
CR Alur R, 1999, LECT NOTES COMPUT SC, V1664, P114
   [Anonymous], LINKOPING ELECT ARTI
   [Anonymous], 1999, Concurrency-state models and Java programs
   DAMM W, 2001, FORMAL METHODS SYSTE, V19
   Dupont P., 1996, Grammatical Inference: Learning Syntax from Sentences. Third International Colloquium, ICGI-96 Proceedings, P222, DOI 10.1007/BFb0033357
   DUPONT P, 1994, GRAMMATICAL INFERENC, P199
   GIANNAKOPOULOU D, 2003, P ESEC FSE
   GOLD EM, 1978, INFORM CONTROL, V37, P302, DOI 10.1016/S0019-9958(78)90562-4
   GOLD EM, 1967, INFORM CONTROL, V10, P447, DOI 10.1016/S0019-9958(67)91165-5
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   ICHIKAWA H, 1991, IEEE T COMPUT, V40, P553, DOI 10.1109/12.88473
   ITU, 1996, MESS SEQ CHARTS REC
   Jarke M, 1998, IEEE T SOFTWARE ENG, V24, P1033, DOI 10.1109/TSE.1998.738337
   Jeffords R., 1998, Software Engineering Notes, V23, P56, DOI 10.1145/291252.288218
   Joseph M., 1996, REAL TIME SYSTEMS SP
   KRAMER J, 1983, IEE PROC-E, V130, P1, DOI 10.1049/ip-e.1983.0001
   KRUGER I, 1998, P IFIP WG10 3 WG10 5, P61
   Lang K. J., 1998, Grammatical Inference. 4th International Colloquium, ICGI-98. Proceedings, P1, DOI 10.1007/BFb0054059
   Lang K. J., 1992, Proceedings of the Fifth Annual ACM Workshop on Computational Learning Theory, P45, DOI 10.1145/130385.130390
   LETIER E, 2005, P ICSE 2005 27 INT C
   Magee J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P499, DOI 10.1109/ICSE.2000.870440
   MAKINEN E, 2001, P ICSE 2001 INT C SO
   Milner R., 1989, Communication and concurrency
   ONCINA J, 1992, S MACH PERC, V1, P49
   ONCINA J, 1993, IEEE T PATTERN ANAL, V15, P448, DOI 10.1109/34.211465
   Uchitel S, 2003, IEEE T SOFTWARE ENG, V29, P99, DOI 10.1109/TSE.2003.1178048
   UCHITEL S, 2001, P ESEC FSE 01 9 EUR
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   VANLAMSWEERDE A, 1998, IEEE T SOFWARE ENG, V24
   WEIDENHAUPT K, 1998, IEEE SOFTWARE    MAR
   Whittle J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P314, DOI 10.1109/ICSE.2000.870422
NR 31
TC 53
Z9 68
U1 1
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2005
VL 31
IS 12
BP 1056
EP 1073
DI 10.1109/TSE.2005.138
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 995RU
UT WOS:000234122300006
DA 2024-07-18
ER

PT J
AU Gokhale, SS
   Lyu, MRT
AF Gokhale, SS
   Lyu, MRT
TI A simulation approach to structure-based software reliability analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE application structure; reliability analysis; discrete-event simulation
ID FAULT-TOLERANT; RECOVERY; GROWTH
AB Structure-based techniques enable an analysis of the influence of individual components on the application reliability. In an effort to ensure analytical tractability, prevalent structure-based analysis techniques are based on assumptions which preclude the use of these techniques for reliability analysis during the testing and operational phases. In this paper, we develop simulation procedures to assess the impact of individual components on the reliability of an application in the presence of fault detection and repair strategies that may be employed during testing. We also develop simulation procedures to analyze the application reliability for various operational configurations. We illustrate the potential of simulation procedures using several examples. Based on the results of these examples, we provide novel insights into how testing and repair strategies can be tailored depending on the application structure to achieve the desired reliability in a cost-effective manner. We also discuss how the results could be used to explore alternative operational configurations of a software application taking into consideration the application structure so as to cause minimal interruption in the field.
C1 Univ Connecticut, Dept Comp Sci & Engn, Storrs, CT 06269 USA.
   Chinese Univ Hong Kong, Dept Comp Sci & Engn, Shatin, Hong Kong, Peoples R China.
C3 University of Connecticut; Chinese University of Hong Kong
RP Univ Connecticut, Dept Comp Sci & Engn, 371 Fairfield Rd Unit 1155, Storrs, CT 06269 USA.
EM ssg@engr.uconn.edu; lyu@cse.cuhk.edu.hk
CR [Anonymous], 1996, HDB SOFTWARE RELIABI
   [Anonymous], P 10 INT S SOFTW REL
   BAVUSO SJ, 1987, IEEE T RELIAB, V36, P176, DOI 10.1109/TR.1987.5222335
   CHEUNG RC, 1980, IEEE T SOFTWARE ENG, V6, P118, DOI 10.1109/TSE.1980.234477
   DEFAMIE M, 1999, P INT C SOFTW MAINT
   DUANE JT, 1964, IEEE T AEROSP, VAS 2, P563, DOI 10.1109/TA.1964.4319640
   DUGAN JB, 1989, IEEE T COMPUT, V38, P775, DOI 10.1109/12.24286
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   GOEL AL, 1979, 791 SYR U DEP IE OR
   GOKHALE S, 2004, P ISSAT C AUG
   GOKHALE S, 2004, SOFTWARE QUALITY J
   GOKHALE S, 2002, P INT S SOFTW REL EN
   GOKHALE S, 1997, P COMP ASS COMPASS 9, P105
   Gokhale SS, 1997, PACIFIC RIM INTERNATIONAL SYMPOSIUM ON FAULT-TOLERANT SYSTEMS, PROCEEDINGS, P167, DOI 10.1109/PRFTS.1997.640143
   Gokhale SS, 1999, ANN SOFTW ENG, V8, P85, DOI 10.1023/A:1018923329647
   Gokhale SS, 2003, LECT NOTES COMPUT SC, V2677, P245
   Gokhale SS, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P202, DOI 10.1109/ISSRE.1998.730883
   Goseva-Popstojanova K, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P307, DOI 10.1109/ISSRE.2003.1251052
   Jelinski Z., 1972, Statistical Computer Performance Evaluation, P465, DOI DOI 10.1016/B978-0-12-266950-7.50028-1
   KANOUN K, 1993, IEEE T RELIAB, V42, P205, DOI 10.1109/24.229488
   Krishnamurthy S, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P146, DOI 10.1109/ISSRE.1997.630860
   LAPRIE JC, 1990, COMPUTER, V23, P39, DOI 10.1109/2.56851
   LAPRIE JC, 1992, IEEE T SOFTWARE ENG, V18, P130, DOI 10.1109/32.121755
   LAPRIE JC, 1991, IEEE T SOFTWARE ENG, V17, P370, DOI 10.1109/32.90436
   LITTLEWOOD B, 1976, P S COMP SOFTW ENG, P281
   Lo JH, 2002, P INT COMP SOFTW APP, P7, DOI 10.1109/CMPSAC.2002.1044526
   Lyu M.R., 1996, Handbook of Software Reliability Engineering, P71
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   NICOLA VF, 1990, IEEE T SOFTWARE ENG, V16, P350, DOI 10.1109/32.48942
   Randell B., 1975, IEEE Transactions on Software Engineering, VSE-1, P220, DOI 10.1109/TSE.1975.6312842
   RIZZOLI AE, 2004, COLLECTION MODELING
   SCHEIDEWIND NF, 2003, P INT S SOFTW REL EN, P257
   SIEGRIST K, 1988, IEEE T SOFTWARE ENG, V14, P1049, DOI 10.1109/32.42744
   SIEGRIST K, 1988, IEEE T SOFTWARE ENG, V14, P1478, DOI 10.1109/32.6192
   SINGH H, 2001, P INT S SOFTW REL EN
   Singpurwalla N.D., 1999, Statistical Methods in Software Engineering by Springer
   Tausworthe RC, 1996, IEEE SOFTWARE, V13, P77, DOI 10.1109/52.506464
   TOMEK LA, 1993, IEEE T SOFTWARE ENG, V19, P1071, DOI 10.1109/32.256854
   Trivedi K.S., 2001, Probability and statistics with reliability, queueing, and computer science applications, V2nd
   Wood A, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P136, DOI 10.1109/ISSRE.1997.630858
   Yacoub SM, 2002, IEEE T SOFTWARE ENG, V28, P529, DOI 10.1109/TSE.2002.1010058
   YAMADA S, 1983, IEEE T RELIAB, V32, P475, DOI 10.1109/TR.1983.5221735
NR 42
TC 41
Z9 58
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2005
VL 31
IS 8
BP 643
EP 656
DI 10.1109/TSE.2005.86
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 953OL
UT WOS:000231086500002
DA 2024-07-18
ER

PT J
AU Evermann, J
   Wand, Y
AF Evermann, J
   Wand, Y
TI Toward formalizing domain modeling semantics in language syntax
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE analysis; methodologies; specification; object-oriented design methods;
   design concepts; CASE; ontology
ID ONTOLOGY
AB Information Systems are situated in and are representations of some business or organizational domain. Hence, understanding the application domain is critical to the success of information systems development. To support domain understanding, the application domain is represented in conceptual models. The correctness of conceptual models can affect the development outcome and prevent costly rework during later development stages. This paper proposes a method to restrict the syntax of a modeling language to ensure that only possible configurations of a domain can be modeled, thus increasing the likelihood of creating correct domain models. The proposed method, based on domain ontologies, captures relationships among domain elements via constraints on the language metamodel, thus restricting the set of statements about the domain that can be generated with the language. In effect, this method creates domain specific modeling languages from more generic ones. The method is demonstrated using the Unified Modeling Language (UML). Specifically, it is applied to the subset of UML dealing with object behavior and its applicability is demonstrated on a specific modeling example.
C1 Victoria Univ Wellington, Sch Informat Management, Wellington, New Zealand.
   Univ British Columbia, Sauder Sch Business, Vancouver, BC V6T 1Z2, Canada.
C3 Victoria University Wellington; University of British Columbia
RP Victoria Univ Wellington, Sch Informat Management, Box 600, Wellington, New Zealand.
EM joerg.evermann@vuw.ac.nz; yair.wand@ubc.ca
CR [Anonymous], 1977, TREATISE BASIC PHILO
   [Anonymous], 2000, Knowledge Representation: Logical, Philosophical, and Computational Foundations
   [Anonymous], 1981, Dictionary of Philosophy
   Arango G., 1989, Proceedings of Fifth International Workshop on Software Specification and Design (Cat. No.89CH2717-7), P152, DOI 10.1145/75199.75224
   Bodart F, 2001, INFORM SYST RES, V12, P384, DOI 10.1287/isre.12.4.384.9702
   BODART F, 1996, P INT C INF SYST, P450
   BOEHM BW, 1988, IEEE T SOFTWARE ENG, V14, P1462, DOI 10.1109/32.6191
   BREU R, 1997, P 11 EUR C OBJ OR PR
   BREU R, 1998, UNIFIED MODELING LAN
   BRUEL JM, 1999, UN MOD LANG NOT P 1
   Bunge MA., 1979, TREATISE BASIC PHILO, DOI 10.1007/978-94-009-9392-1
   Cilia M, 2003, LECT NOTES COMPUT SC, V2830, P169
   COCKROFT S, 2003, P 7 PAC AS C INF SYS
   Cohen S, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P86, DOI 10.1109/ICSR.1998.685733
   DUSSART A, 2002, ECOLE HAUTE ETUDES C
   EVANS A, 1999, BEHAV SPECIFICATIONS
   EVANS A, 1999, UN MOD LANG NOT P 1
   EVANS A, 1999, UN MOD LANG STAND P, P99
   EVANS A, 1998, P 2 NO FORM METH WOR
   EVANS AS, 1998, P WORKSH IND STRENGT
   EVERMANN J, 2001, P 20 INT C CONC MOD, P354
   EVERMANN J, 2003, THESIS U BRIT COLUMB
   EVERMANN J, 2001, P WORKSH INF TECHN S, P91
   Galfione P, 2000, 11TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATION, PROCEEDINGS, P813, DOI 10.1109/DEXA.2000.875119
   GEMINO A, 1999, THESIS U BRIT COLUMB
   GOMAA H, 1992, P 25 HAW INT C SYSTE, V2, P46
   Green P, 2000, INFORM SYST, V25, P73, DOI 10.1016/S0306-4379(00)00010-7
   Gruninger M, 2002, COMMUN ACM, V45, P39, DOI 10.1145/503124.503146
   Guarino N, 2002, COMMUN ACM, V45, P61, DOI 10.1145/503124.503150
   HAREL D, 1988, COMMUN ACM, V31, P514, DOI 10.1145/42411.42414
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   Harel D, 1996, PROC INT CONF SOFTW, P246, DOI 10.1109/ICSE.1996.493420
   Holsapple CW, 2002, COMMUN ACM, V45, P42, DOI 10.1145/503124.503147
   HUSSMANN H, 2000, P 3 INT C UN MOD LAN
   ISCOE N, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P340, DOI 10.1109/ICSE.1991.130660
   JACKSON M, 1995, PROC INT CONF SOFTW, P283, DOI 10.1145/225014.225041
   JAYASE T, 2001, P 39 INT C EXH TECHN, P108
   KOLP M, 2002, P 14 INT C SOFTW ENG, P183
   Kuhn T. S., 1962, STRUCTURE SCI REVOLU
   LANO K, 1999, P JOINT EUR C THEOR
   MORANDIN E, 1998, P 24 EUR C, V2, P890
   Morisio M, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P321, DOI 10.1109/ASE.2000.873688
   Noy NF, 1997, AI MAG, V18, P53
   *OBJ MAN GROUP, 2001, UN MOD LANG SPEC VER
   Offen R., 2002, Requirements Engineering, V7, P172, DOI 10.1007/s007660200012
   OPDAHL A, 1999, INFORMATION SYSTEM C
   OPDAHL A, 1999, P INF SYST FDN WORKS
   Opdahl A. L., 2002, Software and Systems Modeling, V1, P43
   Opdahl AL, 2001, J SYST SOFTWARE, V57, P119, DOI 10.1016/S0164-1212(00)00123-0
   Parsons J, 1997, COMMUN ACM, V40, P104, DOI 10.1145/265563.265578
   Philippow N, 2001, EIGHTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P128, DOI 10.1109/ECBS.2001.922414
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   ROE P, 2003, P JOINT MOD LANG C, P63
   ROZEN S, 1989, COMMUN ACM, V32, P988, DOI 10.1145/65971.65977
   Scheer A.W., 1999, ARIS BUSINESS PROCES
   SMITH B, 2001, P 2 INT C FORM ONT I, pR3
   Uschold M, 1996, KNOWL ENG REV, V11, P93, DOI 10.1017/S0269888900007797
   Wand Y, 1999, ACM T DATABASE SYST, V24, P494, DOI 10.1145/331983.331989
   Wand Y, 1993, INFORM SYST J, V3, P217, DOI 10.1111/j.1365-2575.1993.tb00127.x
   Wand Y., 1989, OBJECT ORIENTED CONC, P537
   Warmer J., 1999, AW OBJ TECHNOL S
   Weber R, 1996, INFORM SYST J, V6, P147, DOI 10.1111/j.1365-2575.1996.tb00010.x
NR 62
TC 51
Z9 61
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2005
VL 31
IS 1
BP 21
EP 37
DI 10.1109/TSE.2005.15
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 893QP
UT WOS:000226734600002
DA 2024-07-18
ER

PT J
AU Arisholm, E
   Briand, LC
   Foyen, A
AF Arisholm, E
   Briand, LC
   Foyen, A
TI Dynamic coupling measurement for object-oriented software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE coupling measurement; change predictions; quality modeling; maintenance
AB The relationships between coupling and external quality factors of object-oriented software have been studied extensively for the past few years. For example, several studies have identified clear empirical relationships between class-level coupling and class fault-proneness. A common way to define and measure coupling is through structural properties and static code analysis. However, because of polymorphism, dynamic binding, and the common presence of unused ("dead") code in commercial software, the resulting coupling measures are imprecise as they do not perfectly reflect the actual coupling taking place among classes at runtime. For example, when using static analysis to measure coupling, it is difficult and sometimes impossible to determine what actual methods can be invoked from a client class if those methods are overridden in the subclasses of the server classes. Coupling measurement has traditionally been performed using static code analysis, because most of the existing work was done on nonobject oriented code and because dynamic code analysis is more expensive and complex to perform. For modern software systems, however, this focus on static analysis can be problematic because although dynamic binding existed before the advent of object-orientation, its usage has increased significantly in the last decade. This paper describes how coupling can be defined and precisely measured based on dynamic analysis of systems. We refer to this type of coupling as dynamic coupling. An empirical evaluation of the proposed dynamic coupling measures is reported in which we study the relationship of these measures with the change proneness of classes. Data from maintenance releases of a large Java system are used for this purpose. Preliminary results suggest that some dynamic coupling measures are significant indicators of change proneness and that they complement existing coupling measures based on static analysis.
C1 Simula Res Lab, Dept Software Engn, Lysaker, Norway.
   Carleton Univ, Softwazre Qual Engn Lab, Ottawa, ON, Canada.
C3 Carleton University
RP Simula Res Lab, Dept Software Engn, Lysaker, Norway.
EM erika@simula.no; briand@sce.carleton.ca; audunf@ifi.uio.no
CR [Anonymous], 2003, JAVA COMPILER COMPIL
   Arisholm E., 2001, Empirical Software Engineering, V6, P231, DOI 10.1023/A:1011439416657
   Arisholm E, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P33, DOI 10.1109/METRIC.2002.1011323
   ARISHOLM E, 2001, THESIS U OSLO
   ARISHOLM E, 2003, 200305 SIM RES LAB
   BOOCH G, 1998, UNIFIED MODELING LAN
   BRATTHALL L, 2001, P 3 INT C PROD FOC S
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   Briand LC, 2002, ADV COMPUT, V56, P97, DOI 10.1016/S0065-2458(02)80005-5
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   BRIAND LC, 2002, SOFTW SYST MODEL, V1, P10, DOI [10.1007/s10270-002-0004-8, DOI 10.1007/S10270-002-0004-8]
   BRITOEABREU F, 1995, P ECOOP 95 WORKSH ME
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   CHAUMUN MA, 2000, P 4 EUR WORK C SOFTW, P45
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   Deligiannis I. S., 2002, Empirical Software Engineering, V7, P193, DOI 10.1023/A:1016392131540
   Dunteman George., 1989, PRINCIPAL COMPONENT
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Freund R., 1998, REGRESSION ANAL STAT
   JAKARTA, 2003, APACHE JAKARTA PROJE
   Kabaili H, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P39, DOI 10.1109/CSMR.2001.914966
   LAKHOTIA A, 1999, P IEEE WORK C REV EN, P36
   MYERS GJ, 1976, SOFTWARE RELIABILITY
   SNEED HM, 1985, IEEE T SOFTWARE ENG, V11, P909, DOI 10.1109/TSE.1985.232548
   THWIN MMT, 2003, P IEEE INT C SOFTW M
   Warmer J., 1999, AW OBJ TECHNOL S
   Yacoub S. M., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P50, DOI 10.1109/METRIC.1999.809725
   Yacoub SM, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P210, DOI 10.1109/ISSRE.2000.885873
NR 30
TC 174
Z9 195
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2004
VL 30
IS 8
BP 491
EP 506
DI 10.1109/TSE.2004.41
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 837CL
UT WOS:000222605000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Prowell, SJ
   Poore, JH
AF Prowell, SJ
   Poore, JH
TI Foundations of sequence-based software specification
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software specification; sequence-based specification; trace
   specification; requirements analysis; correctness; completeness;
   consistency
AB Rigorous specification early in the software development process can greatly reduce the cost of later development and maintenance, as well as provide an explicit means to manage risk and identify and meet safety requirements. Sequence-based software specification is a collection of techniques for implementing rigorous, practical software specification. The primary result of this research is the sequence enumeration method of specification writing. Straightforward, systematic enumeration of all sequences to produce an arguably complete, consistent, and traceably correct specification is made practical by controlling the growth of the process.
C1 Univ Tennessee, Dept Comp Sci, Knoxville, TN 37996 USA.
C3 University of Tennessee System; University of Tennessee Knoxville
RP Prowell, SJ (corresponding author), Univ Tennessee, Dept Comp Sci, 203 Claxton Complex,1122 Volunteer Blvd, Knoxville, TN 37996 USA.
RI Prowell, Stacy/H-5082-2016
OI Prowell, Stacy/0000-0002-2104-5641
CR [Anonymous], 1993, Texts and Monographs in Computer Science
   BARTUSSEK W, 1978, P 2 C EUR COOP INF V, P211
   Broy M., 1992, Journal of Functional Programming, V2, P1, DOI 10.1017/S0956796800000241
   BROY M, 1990, FUNCTIONAL SPECIFICA
   COHN PP, 1979, UNIVERSAL ALGEBRA
   HOFFMAN DM, 1998, IEEE T SOFTWARE ENG, V14, P1243
   Janicki R, 2001, IEEE T SOFTWARE ENG, V27, P577, DOI 10.1109/32.935852
   Kelly D. P., 2000, Cutter IT Journal, V13, P7
   MILLS HD, 1986, PRINCIPLES INFORMATI
   MILLS HD, 1988, IEEE COMPUT, V21, P23
   PARNAS DL, 1989, 89261 QUEENS U KINGS
   POORE JH, 1999, STAT TESTING DEFENSE, P124
   PROWELL SJ, 1998, CLEANROOM SOFTWARE E
   PROWELL SJ, 1999, P HARL MILLS C MAY
   WHITE E, 1993, COMMUNITY PSYCHIAT N, V2, P1
NR 15
TC 43
Z9 47
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2003
VL 29
IS 5
BP 417
EP 429
DI 10.1109/TSE.2003.1199071
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 675HM
UT WOS:000182688000003
DA 2024-07-18
ER

PT J
AU Zhou, YN
   Hu, X
   Xu, SH
   Jia, Y
   Liu, YH
   Wang, JY
   Xu, GQ
   Wang, W
   Liu, SY
   Baker, T
AF Zhou, Yingnan
   Hu, Xue
   Xu, Sihan
   Jia, Yan
   Liu, Yuhao
   Wang, Junyong
   Xu, Guangquan
   Wang, Wei
   Liu, Shaoying
   Baker, Thar
TI Multi-Misconfiguration Diagnosis via Identifying Correlated
   Configuration Parameters
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Correlation; Software; Behavioral sciences; Yarn; Source coding;
   Manuals; Codes; Configuration; correlation; multi-misconfiguration;
   parameters; diagnosis
AB Software configuration requires that the user sets appropriate values to specified variables, known as configuration parameters, which potentially affect the behaviors of software system. It is an essential means for software reliability, but how to ensure correct configurations remains a great challenge, especially when a large number of parameter settings are involved. Existing studies on misconfiguration diagnosis treat all configurations independently, ignoring the constraints and correlations among different configurations. In this article, we reveal the phenomenon of multi-misconfigurations and present a tool, MMD, for multi-misconfigurations diagnosis. Specifically, MMD consists of two modules: Correlated Configurations Analysis and Primary Misconfigurations Diagnosis. The former determines the correlation among each pair of configurations by analyzing the control and data flows related to each configuration. The latter is responsible for collecting a list of configurations ranked according to their suspiciousness. Combining the outputs of two modules, MMD is able to assist the user in multi-misconfigurations diagnosis. We evaluate MMD on seven popular Java projects: Randoop, Soot, Synoptic, Hdfs, Hbase, Yarn, and Zookeeper. MMD identifies 510 configuration correlations with a 4.9% false positive rate. Furthermore, it effectively diagnoses 22 multi-misconfigurations collected from StackOverflow, outperforming two state-of-the-art baselines.
C1 [Zhou, Yingnan; Liu, Yuhao; Wang, Junyong; Wang, Wei] Beijing Jiaotong Univ, Sch Comp & Informat Technol, Beijing 100091, Peoples R China.
   [Zhou, Yingnan] Nankai Univ, Coll Cyber Space, Key Lab Data & Intelligent Syst Secur, Minist Educ, Tianjin 300354, Peoples R China.
   [Hu, Xue; Xu, Guangquan] Tianjin Univ, Coll Intelligence & Comp, Tianjin Key Lab Adv Networking TANK, Tianjin 300354, Peoples R China.
   [Xu, Sihan; Jia, Yan] Nankai Univ, Coll Cyber Sci, DISSec, Tianjin 300354, Peoples R China.
   [Liu, Shaoying] Hiroshima Univ, Grad Sch Adv Sci & Engn, Higashihiroshima 7398511, Japan.
   [Baker, Thar] Univ Brighton, Sch Architecture Technol & Engn, Brighton BN2 4GJ, England.
C3 Beijing Jiaotong University; Nankai University; Tianjin University;
   Nankai University; Hiroshima University; University of Brighton
RP Xu, SH; Jia, Y (corresponding author), Nankai Univ, Coll Cyber Sci, DISSec, Tianjin 300354, Peoples R China.
EM yingnanzhou@bjtu.edu.cn; huxue00@tju.edu.cn; xusihan@nankai.edu.cn;
   jiay@nankai.edu.cn; yuhao.liu@bjtu.edu.cn; junyong.wang@bjtu.edu.cn;
   losin@tju.edu.cn; wangwei1@bjtu.edu.cn; sliu@hiroshima-u.ac.jp;
   t.shamsa@brighton.ac.uk
RI Xu, Sihan/HOF-7293-2023; Jia, Yan/ACB-3936-2022
OI Jia, Yan/0000-0003-0689-2508; Xu, Sihan/0000-0002-6887-6231; WANG,
   WEI/0000-0002-5974-1589; Baker, Thar/0000-0002-5166-4873
FU Fundamental Research Funds for the Central Universities of China
   [2020JBZ104]; National Natural Science Foundation of China [U21A20463,
   U22B2027, 62172297, 62202245, 62102198, 61971029, 61902276]; Tianjin
   Intelligent Manufacturing Special Fund Project [20211097]; China
   Postdoctoral Science Foundation [2021M691673, 2023T160335]
FX This work was supported in part by the Fundamental Research Funds for
   the Central Universities of China under Grant 2020JBZ104; in part by the
   National Natural Science Foundation of China under Grants U21A20463,
   U22B2027, 62172297, 62202245, 62102198, 61971029,and 61902276; in part
   by Tianjin Intelligent Manufacturing Special Fund Project under Grant
   20211097; and in part by China Postdoctoral Science Foundation under
   Grants 2021M691673 and 2023T160335.
CR Abal I, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3149119
   Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   [Anonymous], How to control the number of Hadoop IPC retry attempts for a Spark job submission?
   [Anonymous], Namenode doesn't detect datanodes failure
   [Anonymous], Apache Spark: Setting executor instances does not change the executors
   [Anonymous], On master node: Failed construction of Regionserver: java.net.BindException
   [Anonymous], 2016, Apache Hadoop
   [Anonymous], Hbase client RPC timeout
   [Anonymous], Not able to connect to remote Hbase
   [Anonymous], How to decrease heartbeat time of slave nodes in Hadoop
   [Anonymous], Map-reduce jobs failed with virtual memory beyond limit in Yarn cluster
   [Anonymous], Unable to start zookeeper server
   [Anonymous], Is there any file to read when on of my datanode was dead
   [Anonymous], HBase scan performance
   [Anonymous], Is it possible to replicate the namenode in hadoop?
   [Anonymous], Why does a datanode doesn't disappear in the hadoop web site when the datanode job is killed?
   [Anonymous], Datanode decommisioning vs write
   [Anonymous], SOOT
   apache, Yarn
   apache, Hdfs
   Arumuga PiramanayagamNainar., 2010, P 32 ACMIEEE INT C S, P255, DOI [10.1145/1806799.1806839, DOI 10.1145/1806799.1806839]
   Attariyan M., 2010, P 9 USENIX S OP SYST, P1
   Chen QR, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P362, DOI 10.1145/3368089.3409727
   Davril Jean-Marc., 2013, JOINT M EUR SOFTW EN, P290, DOI DOI 10.1145/2491411.2491455
   Dong Z, 2015, PROC IEEE INT CONF S, P171, DOI 10.1109/ICSM.2015.7332463
   Dong Z, 2013, 2013 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P162, DOI 10.1109/ISSREW.2013.6688897
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   github, Jchord properties
   github, Synoptic
   Horcas JM, 2023, IEEE T SOFTWARE ENG, V49, P1102, DOI 10.1109/TSE.2022.3171404
   Hsu CJ, 2018, Arxiv, DOI arXiv:1803.01296
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Keller L, 2008, I C DEPEND SYS NETWO, P157, DOI 10.1109/DSN.2008.4630084
   Li SS, 2018, IEEE T RELIAB, V67, P1393, DOI 10.1109/TR.2018.2865962
   Liu B, 2016, SOFTW TEST VERIF REL, V26, P431, DOI 10.1002/stvr.1605
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Mahgoub A, 2019, PROCEEDINGS OF THE 2019 USENIX ANNUAL TECHNICAL CONFERENCE, P223
   Mehta S, 2020, PROCEEDINGS OF THE 17TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION, P435
   Meinicke J, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P233, DOI 10.1145/3377813.3381366
   Niwattanakul Suphakit, 2013, IMECS 2013 Proceedings of International Multiconference of Engineers and Computer Scientists, P380
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Rabkin A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P193, DOI 10.1109/ASE.2011.6100053
   Rabkin A, 2013, IEEE SOFTWARE, V30, P88, DOI 10.1109/MS.2012.73
   Randel B., 1995, Software fault tolerance, P1
   Sayagh M, 2020, IEEE T SOFTWARE ENG, V46, P646, DOI 10.1109/TSE.2018.2867847
   sourceforge, Wala
   stackexchange, US
   Talwadker R, 2017, SYSTOR'17: PROCEEDINGS OF THE 10TH ACM INTERNATIONAL SYSTEMS AND STORAGE CONFERENCE, DOI 10.1145/3078468.3078484
   Tang CQ, 2015, SOSP'15: PROCEEDINGS OF THE TWENTY-FIFTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P328, DOI 10.1145/2815400.2815401
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Von Rhein A, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3280986
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
   Wong W. Eric, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P42
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Woolson RF, 2007, Wiley encyclopedia of clinical trials, P1, DOI [10.1002/9780471462422.eoct979, DOI 10.1002/9780471462422.EOCT979]
   Xiang CC, 2020, PROCEEDINGS OF THE 2020 USENIX ANNUAL TECHNICAL CONFERENCE, P265
   Xiong YF, 2015, IEEE T SOFTWARE ENG, V41, P603, DOI 10.1109/TSE.2014.2383381
   Xu TY, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P244, DOI 10.1145/2517349.2522727
   Yin ZN, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P159
   Yuan D., 2011, P 2011 USENIX C USEN, P28
   Yuan D, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P143
   Zhang JL, 2021, P ACM PROGRAM LANG, V5, DOI 10.1145/3485517
   Zhang JQ, 2014, ACM SIGPLAN NOTICES, V49, P687, DOI 10.1145/2541940.2541983
   Zhang S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P152, DOI 10.1145/2568225.2568251
   Zhang S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P312, DOI 10.1109/ICSE.2013.6606577
NR 65
TC 0
Z9 0
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2023
VL 49
IS 10
BP 4624
EP 4638
DI 10.1109/TSE.2023.3308755
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA Y1NF7
UT WOS:001102997400007
DA 2024-07-18
ER

PT J
AU Fang, CR
   Yu, SC
   Su, T
   Zhang, J
   Tian, YH
   Liu, Y
AF Fang, Chunrong
   Yu, Shengcheng
   Su, Ting
   Zhang, Jing
   Tian, Yuanhan
   Liu, Yang
TI Test Report Generation for Android App Testing Via Heterogeneous Data
   Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Testing; Graphical user interfaces; Operating systems;
   Mobile applications; Taxonomy; Inspection; Android testing; GUI testing;
   test report generation
ID DUPLICATE BUG REPORTS
AB The rising of the Android market demands higher quality assurance of Android applications (apps) to sharpen the competitive edge, and techniques for traditional software have problems adapting for mobile apps. Android apps often require testing on a large-scale device cluster, which produces a large amount of test reports consisting of heterogeneous data, e.g., hardware information, GUI screenshots, runtime logs. Such data are hard to merge to be unified analyzed, while they serve as an essential basis for bug inspection and fixing. Existing test report generation or analysis techniques can only handle testing data from different devices separately. They simply list all the information to app developers and have no further processing to summarize test reports. Besides, they neglect the inner connection of the heterogeneous data. Such techniques cannot improve the report reviewing effectiveness and efficiency, and they can hardly find the inner links and rules of the bug occurrence on different devices. As a result, developers still need to devote many efforts to inspect and fix bugs. In this paper, a large amount of test reports are investigated by the authors, as to construct a structured bug model to analyze heterogeneous data of the testing results. According to the investigation, we also define the Bug Inconsistency of testing results from multiple devices and build a novel bug taxonomy. In general, an automated approach is proposed to generate structured and comprehensible test reports from raw testing results from multiple devices. Based on the approach, a tool, namely BreGat, is implemented to evaluate the classification and deduplication capability of our approach. The experimental results of 30 Android apps on 20 devices show that BreGat can successfully cover 83% bug categories and exclude 76% duplicate bugs. Furthermore, a user study involving 16 developers shows that our test reports are more comprehensible and BreGat greatly improves the bug inspection efficiency compared to the state-of-the-art tool.
C1 [Fang, Chunrong; Yu, Shengcheng; Zhang, Jing; Tian, Yuanhan] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Jiangsu, Peoples R China.
   [Su, Ting] East China Normal Univ, Sch Software Engn, Shanghai Key Lab Trustworthy Comp, Shanghai 200050, Peoples R China.
   [Liu, Yang] Nanyang Technol Univ, Singapore 639798, Singapore.
C3 Nanjing University; East China Normal University; Nanyang Technological
   University
RP Fang, CR (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Jiangsu, Peoples R China.
EM fangchunrong@nju.edu.cn; yusc@smail.nju.edu.cn; krave_su@163.com;
   zhang_jing@smail.nju.edu.cn; allentianxxx@foxmail.com;
   yangliu@ntu.edu.sg
RI Liu, Yang/D-2306-2013; Fang, Chunrong/GPW-9872-2022
OI Liu, Yang/0000-0001-7300-9215; Fang, Chunrong/0000-0002-9930-7111; Yu,
   Shengcheng/0000-0003-4640-8637
FU National Natural Science Foundation of China [62141215, 62272220,
   62072178, 61802171]; "Digital Silk Road" Shanghai International Joint
   Lab of Trustworthy Intelligent Software [22510750100]; National Research
   Foundation [NRF2018NCR-NSOE003-0001]; Science, Technology and Innovation
   Commission of Shenzhen Municipality [CJGJZD20200617103001003];
   Postgraduate Research & Practice Innovation Program of Jiangsu Province
   [KYCX22_0174]
FX This work was supported partially by the National Natural Science
   Foundation of China under Grants 62141215, 62272220, 62072178, and
   61802171, in part by the "Digital Silk Road" Shanghai International
   Joint Lab of Trustworthy Intelligent Software under Grant 22510750100,
   in part by the National Research Foundation through its National
   Satellite of Excellence in Trustworthy Software Systems under Grant
   NSOE-TSS project under the National Cybersecurity R & D (NCR) under
   Grant NRF2018NCR-NSOE003-0001, in part by the Science, Technology and
   Innovation Commission of Shenzhen Municipality under Grant
   CJGJZD20200617103001003, and in part by the Postgraduate Research &
   Practice Innovation Program of Jiangsu Province under Grant KYCX22_0174.
CR A. Authors, 2019, BREGAT QUESTIONNAIRE
   Aggarwal K, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1821
   Alipour A, 2013, IEEE WORK CONF MIN S, P183, DOI 10.1109/MSR.2013.6624026
   Almhana R, 2016, IEEE INT CONF AUTOM, P286, DOI 10.1145/2970276.2970344
   Amalfitano D, 2018, SOFTW TEST VERIF REL, V28, DOI 10.1002/stvr.1654
   Amalfitano D, 2012, IEEE INT CONF AUTOM, P258, DOI 10.1145/2351676.2351717
   [Anonymous], 2011, USENIX SEC S
   [Anonymous], [No title captured]
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Chaparro O, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P396, DOI 10.1145/3106237.3106285
   Chaparro O, 2017, PROC IEEE ACM INT C, P421, DOI 10.1109/ICSE-C.2017.27
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Coelho R, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P134, DOI 10.1109/MSR.2015.20
   Creswell J.W., 2017, QUALITATIVE INQUIRY
   Dan Han, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P83, DOI 10.1109/WCRE.2012.18
   Fan LL, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P408, DOI 10.1145/3180155.3180222
   Fang C., 2019, BREGAT ONLINE APPEND
   Fazzini M, 2017, IEEE INT CONF AUTOM, P308, DOI 10.1109/ASE.2017.8115644
   Friedman M, 1937, J AM STAT ASSOC, V32, P675, DOI 10.2307/2279372
   He DJ, 2018, IEEE INT CONF AUTOM, P167, DOI 10.1145/3238147.3238185
   Hindle A, 2019, EMPIR SOFTW ENG, V24, P902, DOI 10.1007/s10664-018-9643-4
   Hu Cuixiong, 2011, Proceedings of the 6th International Workshop on Automation of Software Test, P77
   Jha AK, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P111, DOI 10.1109/MOBILESoft.2019.00024
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Joorabchi ME, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P450, DOI 10.1109/ISSRE.2015.7381838
   Ki T, 2019, PROC INT CONF SOFTW, P246, DOI 10.1109/ICSE.2019.00040
   Kochhar PS, 2015, IEEE ICST WORKSHOP
   Kong PF, 2019, IEEE T RELIAB, V68, P45, DOI 10.1109/TR.2018.2865733
   Li L, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P153, DOI 10.1145/3213846.3213857
   Linares-Vasquez M, 2014, P 22 INT C PROGR C, P83
   Linares-Vásquez M, 2017, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSME.2017.27
   Linares-Vásquez M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P233, DOI 10.1145/3106237.3106275
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Malisa L, 2016, LECT NOTES COMPUT SC, V9878, P217, DOI 10.1007/978-3-319-45744-4_11
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Moran K., 2016, CRASHSCOPE ONLINE AP
   Moran K, 2017, PROC IEEE ACM INT C, P15, DOI 10.1109/ICSE-C.2017.16
   Moran K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P673, DOI 10.1145/2786805.2786857
   Moran K, 2016, IEEE INT CONF SOFTW, P33, DOI 10.1109/ICST.2016.34
   Rakha MS, 2016, EMPIR SOFTW ENG, V21, P1960, DOI 10.1007/s10664-015-9404-6
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Scalabrino Simone, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P288, DOI 10.1109/MSR.2019.00055
   Scalabrino S, 2020, EMPIR SOFTW ENG, V25, P5006, DOI 10.1007/s10664-020-09877-w
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Su T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P245, DOI 10.1145/3106237.3106298
   Wei LL, 2020, IEEE T SOFTWARE ENG, V46, P1176, DOI 10.1109/TSE.2018.2876439
   Wei LL, 2019, PROC INT CONF SOFTW, P878, DOI 10.1109/ICSE.2019.00094
   Wei LL, 2016, IEEE INT CONF AUTOM, P226, DOI 10.1145/2970276.2970312
   White M, 2015, INT C PROGRAM COMPRE, P48, DOI 10.1109/ICPC.2015.14
   Wu L., 2013, PROC 20 SIGSAC C COM, P623, DOI DOI 10.1145/2508859.2516728
   Yu SC, 2021, PROC INT CONF SOFTW, P946, DOI 10.1109/ICSE43902.2021.00090
   Yu SC, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1277, DOI 10.1109/ASE.2019.00161
   Zaeem RN, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P183, DOI 10.1109/ICST.2014.31
   Zeng X, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P987, DOI 10.1145/2950290.2983958
   Zhao Y, 2019, PROC INT CONF SOFTW, P128, DOI 10.1109/ICSE.2019.00030
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 60
TC 0
Z9 0
U1 2
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2023
VL 49
IS 5
BP 3032
EP 3051
DI 10.1109/TSE.2023.3237247
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA G8MH8
UT WOS:000991628700001
DA 2024-07-18
ER

PT J
AU Guo, JZ
   Ying, MS
AF Guo, Jingzhe
   Ying, Mingsheng
TI Software Pipelining for Quantum Loop Programs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Quantum program scheduling; quantum program compilation
AB We propose a method for performing software pipelining on quantum for-loop programs to exploit parallelism in and across iterations. We redefined concepts useful in program optimization, including array aliasing, instruction dependency, and resource conflict required in optimizing quantum programs. Using these concepts, we present a software pipelining framework exploiting instruction-level parallelism in quantum loop programs. This method is further enhanced with several improvements to reduce total gate count and program depth. The optimization method is then evaluated on some popular quantum algorithms like Grover and QAOA, and compared under different configurations and with several baseline compilers. The evaluation results show that our approach can schedule loop programs with depth close to the depth of the entire loop unrolling while generating smaller code sizes and consuming much less time. This is the first step towards optimization of a quantum program with such loop control flow, as far as we know.
C1 [Guo, Jingzhe; Ying, Mingsheng] Tsinghua Univ, Dept Comp Sci & Technol, Beijing 100190, Peoples R China.
   [Ying, Mingsheng] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing 100045, Peoples R China.
C3 Tsinghua University; Chinese Academy of Sciences; Institute of Software,
   CAS
RP Guo, JZ (corresponding author), Tsinghua Univ, Dept Comp Sci & Technol, Beijing 100190, Peoples R China.
EM gjz20@mails.tsinghua.edu.cn; yingmsh@tsinghua.edu.cn
RI Ying, Mingsheng/A-8379-2008
OI Ying, Mingsheng/0000-0003-4847-702X; Jingzhe, Guo/0000-0002-7921-9771
FU National Key R&D Program of China [2018YFA0306701]; National Natural
   Science Foundation of China [61832015]
FX This work was supported in part by the National Key R & D Program of
   China under Grant 2018YFA0306701 and in part by the National Natural
   Science Foundation of China under Grant 61832015
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   Aiken A., 1988, OPTIMAL LOOP PARALLE, DOI [10.1145/53990.54021, DOI 10.1145/53990.54021]
   Aiken A., 2016, SOFTWARE PIPELINING, P167
   Asfaw A., 2020, Learn Quantum Computation Using Qiskit
   Banerjee U., 1996, DEPENDENCE ANAL, V3, DOI [10.1007/b102376, DOI 10.1007/B102376]
   Botea A., 2018, P 11 INT S COMBINATO, V9, P138, DOI [10.1609/socs.v9i1.18463, DOI 10.1609/SOCS.V9I1.18463]
   Developers Cirq, 2021, Zenodo, DOI 10.5281/ZENODO.5182845
   Córcoles AD, 2021, PHYS REV LETT, V127, DOI 10.1103/PhysRevLett.127.100501
   Farhi E., 2014, ARXIV
   Fu X, 2019, INT S HIGH PERF COMP, P224, DOI 10.1109/HPCA.2019.00040
   Griebl M, 2000, INT J PARALLEL PROG, V28, P607, DOI 10.1023/A:1007516818651
   Grover L. K., 1996, Proceedings of the Twenty-Eighth Annual ACM Symposium on the Theory of Computing, P212, DOI 10.1145/237814.237866
   Guerreschi GG, 2018, QUANTUM SCI TECHNOL, V3, DOI 10.1088/2058-9565/aacf0b
   Hagog M., 2004, GCC DEV SUMMIT
   Itoko T, 2019, 24TH ASIA AND SOUTH PACIFIC DESIGN AUTOMATION CONFERENCE (ASP-DAC 2019), P191, DOI 10.1145/3287624.3287701
   JavadiAbhari A, 2015, PARALLEL COMPUT, V45, P2, DOI 10.1016/j.parco.2014.12.001
   Klabnik S., 2018, The Rust Programming Language
   LAM M, 1988, SIGPLAN NOTICES, V23, P318
   Lattner T. M., 2005, THESIS U ILLINOIS UR
   Llosa J, 1996, PROCEEDINGS OF THE 1996 CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES (PACT '96), P80, DOI 10.1109/PACT.1996.554030
   Murali P, 2020, TWENTY-FIFTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXV), P1001, DOI 10.1145/3373376.3378477
   Nielsen M. A, 2011, Quantum Computation and Quantum Information: 10th Anniversary Edition
   Q. D. Team, 2020, QISK TERR BAS SCHED
   Rau B.R., 1994, P 27 ANN INT S MICRO, P63
   Smith RS, 2017, Arxiv, DOI arXiv:1608.03355
   Shi YN, 2019, TWENTY-FOURTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXIV), P1031, DOI 10.1145/3297858.3304018
   Shor PW, 1997, SIAM J COMPUT, V26, P1484, DOI 10.1137/S0036144598347011
   Sivarajah S, 2021, QUANTUM SCI TECHNOL, V6, DOI 10.1088/2058-9565/ab8e92
   Steiger DS, 2018, Arxiv, DOI arXiv:1612.08091
   Ying M., 2016, Foundations of Quantum Programming
   Ying M., 2009, COMMUTATIVITY UNPUB
   Ying MS, 2011, ACM T PROGR LANG SYS, V33, DOI 10.1145/2049706.2049708
   Ying MS, 2010, ACTA INFORM, V47, P221, DOI 10.1007/s00236-010-0117-4
NR 33
TC 0
Z9 0
U1 3
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2815
EP 2828
DI 10.1109/TSE.2022.3232623
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600079
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Jiang, MH
   Dai, QM
   Zhang, WL
   Chang, R
   Zhou, YJ
   Luo, XP
   Wang, RY
   Liu, Y
   Ren, K
AF Jiang, Muhui
   Dai, Qinming
   Zhang, Wenlong
   Chang, Rui
   Zhou, Yajin
   Luo, Xiapu
   Wang, Ruoyu
   Liu, Yang
   Ren, Kui
TI A Comprehensive Study on ARM Disassembly Tools
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Reduced instruction set computing; Thumb; Switches; Computer
   architecture; Symbols; Debugging; Computer bugs; ARM; disassembly;
   reverse engineering
AB Embedded devices are becoming ubiquitous, and ARM is becoming the dominant architecture for them. Meanwhile, there is a pressing need to perform security assessments for these devices. Due to different types of peripherals, emulating the software, i.e., firmware, of these devices in scale is challenging. Therefore, static analysis is still widely used. Existing works usually leverage off-the-shelf tools to disassemble stripped ARM binaries and (implicitly) assume that reliably disassembling binaries is a solved problem. However, whether this assumption really holds is unknown. In this paper, we conduct the first comprehensive study on ARM disassembly tools. Specifically, we build 1,896 ARM binaries (including 248 obfuscated ones) with different compilers, compiling options, and obfuscation methods. We then evaluate them using eight state-of-the-art ARM disassembly tools (including both commercial and noncommercial ones) in three different versions on their capabilities to locate instruction boundary, function boundary, and function signature. Instruction and function boundary are two fundamental primitives that the other primitives are built upon while function signature is significant for control flow integrity (CFI) techniques. Our work reveals some observations that have not been systematically summarized and/or confirmed. For instance, we find that the existence of both ARM and Thumb instruction sets, and the reuse of the BL instruction for both function calls and branches bring serious challenges to disassembly tools. Our evaluation sheds light on the limitations of state-of-the-art disassembly tools and points out potential directions for improvement.
C1 [Jiang, Muhui; Chang, Rui; Ren, Kui] Zhejiang Univ, Hangzhou 310027, Peoples R China.
   [Dai, Qinming; Zhou, Yajin] Zhejiang Univ, Sch Cyber Sci & Technol, Hangzhou 310027, Peoples R China.
   [Zhang, Wenlong; Zhou, Yajin; Ren, Kui] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310027, Peoples R China.
   [Luo, Xiapu] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
   [Wang, Ruoyu] Arizona State Univ, Tempe, AZ 85281 USA.
   [Liu, Yang] Nanyang Technol Univ, Singapore 639798, Singapore.
C3 Zhejiang University; Zhejiang University; Zhejiang University; Hong Kong
   Polytechnic University; Arizona State University; Arizona State
   University-Tempe; Nanyang Technological University
RP Chang, R (corresponding author), Zhejiang Univ, Hangzhou 310027, Peoples R China.
EM jiangmuhui@gmail.com; qinm_dai@zju.edu.cn; wl_zhang@zju.edu.cn;
   crix1021@zju.edu.cn; yajin_zhou@zju.edu.cn; csxluo@comp.polyu.edu.hk;
   fishw@asu.edu; yangliu@ntu.edu.sg; kuiren@zju.edu.cn
RI Liu, Yang/D-2306-2013; Wang, Ruoyu/J-3803-2017; chang,
   rui/KEI-1676-2024; Ren, Kui/AGE-3662-2022
OI Liu, Yang/0000-0001-7300-9215; Wang, Ruoyu/0000-0002-7091-0291; CHANG,
   RUI/0000-0002-0178-0171
CR Abera T, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P743, DOI 10.1145/2976749.2978358
   Andriesse D, 2017, 2017 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P), P177, DOI 10.1109/EuroSP.2017.11
   Andriesse D, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P583
   Antonakakis M, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P1093
   Bao T, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P845
   Bauman E, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23300
   Ben Khadra MA, 2016, 2016 INTERNATIONAL CONFERENCE ON COMPILERS, ARCHITECTURE AND SYNTHESIS FOR EMBEDDED SYSTEMS (CASES), DOI 10.1145/2968455.2968505
   Binary Ninja, 2022, NEW KIND REV PLATF
   Brumley David, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P463, DOI 10.1007/978-3-642-22110-1_37
   Buildroot, 2022, MAK EMB LIN EAS
   Capstone, 2022, ULT DIS
   Chandramohan M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P678, DOI 10.1145/2950290.2950350
   Chen DM, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23415
   Chengbin Pang, 2021, 2021 IEEE Symposium on Security and Privacy (SP), P833, DOI 10.1109/SP40001.2021.00012
   Chua ZL, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P99
   Cifuentes C, 2001, SCI COMPUT PROGRAM, V40, P171, DOI 10.1016/S0167-6423(01)00014-4
   Clang, 2022, DOCUMENTATION
   Clements AA, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P1201
   Costin A, 2016, ASIA CCS'16: PROCEEDINGS OF THE 11TH ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P437, DOI 10.1145/2897845.2897900
   Costin A, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P95
   David Y, 2018, ACM SIGPLAN NOTICES, V53, P392, DOI [10.1145/3173162.3177157, 10.1145/3296957.3177157]
   Dyninst, 2019, DYN PUTT PERF HIGH P
   Eager M. J., 2019, INTRO DWARF DEBUGGIN
   Eschweiler S, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23185
   Feng B, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P1237
   Feng Q., 2016, P 2016 ACM SIGSAC C, P480, DOI [10.1145/2976749.2978370, DOI 10.1145/2976749.2978370]
   freertos, 2022, FREERTOS KERN
   GCC, 2022, OPT CONTR OPT
   Ghidra, 2022, SOFTW REV ENG SRE SU
   github, 2019, ISS BAP UNPUB
   github, 2019, ISS RADARE2 UNPUB
   github, 2019, ISS GHIDR UNPUB
   github, 2019, ISS BIN NINJ UNPUB
   Hernandez G, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2245, DOI 10.1145/3133956.3134050
   Hopper Disassembler, 2022, US
   IDA Pro, 2022, US
   infocenter, 2022, PROC CALL STAND ARM
   infocenter.arm, 2020, ARMMAPPING SYMB
   infocenter.arm, 2020, B BL BX BLX BXJ
   Jacobson E., 2011, P 10 ACM SIGPLAN SIG, P1
   Junod P, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE PROTECTION (SPRO), P3, DOI 10.1109/SPRO.2015.10
   Karampatziakis N., 2010, Advances in Neural Information Processing Systems, V23, P1063
   Kim T, 2017, ANN COMPUT SECURITY, P412, DOI 10.1145/3134600.3134627
   krebsonsecurity, SOURC COD IOT BOTN M
   Kruegel C, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE 13TH USENIX SECURITY SYMPOSIUM, P255
   LASZLO T, 2009, SECTIO COMPUTATORICA, V30, P3
   linux, 2022, OBJD DISPL INF OBJ F
   Lu KJ, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1867, DOI 10.1145/3319535.3354244
   mbed, 2022, ARM MBED OS
   Mera Alejandro, 2021, 2021 IEEE Symposium on Security and Privacy (SP), P1938, DOI 10.1109/SP40001.2021.00018
   Miller K, 2019, PROC INT CONF SOFTW, P1187, DOI 10.1109/ICSE.2019.00121
   Muhui Jiang, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P401, DOI 10.1145/3395363.3397377
   Newsom J., 2005, PRACTICAL APPROACHES, P1
   OpenWRT, 2022, US
   Payer Mathias, 2015, LNCS, P144, DOI DOI 10.1007/978-3-319-20550-28
   Pewny J, 2015, P IEEE S SECUR PRIV, P709, DOI 10.1109/SP.2015.49
   popcon.debian, 2020, DEB POP CONT
   Prakash A, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23297
   Prasad M, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK, P211
   Psutil, 2022, US
   Qiao R, 2017, I C DEPEND SYS NETWO, P201, DOI 10.1109/DSN.2017.29
   rada, 2022, RADARE2
   Redini N, 2020, P IEEE S SECUR PRIV, P1544, DOI 10.1109/SP40000.2020.00036
   Rosenblum N., 2008, AAAI, V2, P798
   Saxena P, 2008, INT SYM CODE GENER, P74
   Schwarz B, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P45, DOI 10.1109/WCRE.2002.1173063
   Shin ECR, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P611
   Shoshitaishvili Y, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23294
   Shoshitaishvili Y, 2016, P IEEE S SECUR PRIV, P138, DOI 10.1109/SP.2016.17
   Soltan S, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P15
   source.android, 2022, ANDR OP SOURC PROJ
   theguardian, DDOS ATTACK DISRUPTE
   theregister, MIR IOT BOTN BLAM SM
   van der Veen V, 2016, P IEEE S SECUR PRIV, P934, DOI 10.1109/SP.2016.60
   Wang RY, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23225
   Xu XJ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P363, DOI 10.1145/3133956.3134018
   Xu ZZ, 2017, PROC INT CONF SOFTW, P462, DOI 10.1109/ICSE.2017.49
   Xue YX, 2019, IEEE T SOFTWARE ENG, V45, P1125, DOI 10.1109/TSE.2018.2827379
   You I., 2010, P 2010 INT C BROADB, P297, DOI DOI 10.1109/BWCCA.2010.85
   Zaddach J, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23229
   Zhang C, 2013, P IEEE S SECUR PRIV, P559, DOI 10.1109/SP.2013.44
   Zhang F., 2014, P 2014 ACM C SEC PRI, P25, DOI DOI 10.1145/2627393.2627395
   Zhang M, 2013, 22 USENIX SEC S USEN, P337, DOI [10.5555/2534766.2534796, DOI 10.1145/2818000.2818016]
   Zhang Mingwei., 2015, P 31 ANN COMPUTER SE, P91
NR 84
TC 0
Z9 0
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1683
EP 1703
DI 10.1109/TSE.2022.3187811
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600016
DA 2024-07-18
ER

PT J
AU Nong, Y
   Sharma, R
   Hamou-Lhadj, A
   Luo, XP
   Cai, HP
AF Nong, Yu
   Sharma, Rainy
   Hamou-Lhadj, Abdelwahab
   Luo, Xiapu
   Cai, Haipeng
TI Open Science in Software Engineering: A Study on Deep Learning-Based
   Vulnerability Detection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Testing; Replicability; Codes; Training; Security; Deep
   learning; Open science; availability; executability; reproducibility;
   replicability; case study; vulnerability detection; deep learning
ID REPRODUCIBILITY; REPEATABILITY; CODE
AB Open science is a practice that makes scientific research publicly accessible to anyone, hence is highly beneficial. Given the benefits, the software engineering (SE) community has been diligently advocating open science policies during peer reviews and publication processes. However, to this date, there has been few studies that look into the status and issues of open science in SE from a systematic perspective. In this paper, we set out to start filling this gap. Given the great breadth of SE in general, we constrained our scope to a particular topic area in SE as an example case. Recently, an increasing number of deep learning (DL) approaches have been explored in SE, including DL-based software vulnerability detection, a popular, fast-growing topic that addresses an important problem in software security. We exhaustively searched the literature in this area and identified 55 relevant works that propose a DL-based vulnerability detection approach. This was then followed by comprehensively investigating the four integral aspects of open science: availability, executability, reproducibility, and replicability. Among other findings, our study revealed that only a small percentage (25.5%) of the studied approaches provided publicly available tools. Some of these available tools did not provide sufficient documentation and complete implementation, making them not executable or not reproducible. The uses of balanced or artificially generated datasets caused significantly overrated performance of the respective techniques, making most of them not replicable. Based on our empirical results, we made actionable suggestions on improving the state of open science in each of the four aspects. We note that our results and recommendations on most of these aspects (availability, executability, reproducibility) are not tied to the nature of the chosen topic (DL-based vulnerability detection) hence are likely applicable to other SE topic areas. We also believe our results and recommendations on replicability to be applicable to other DL-based topics in SE as they are not tied to (the particular application of DL in) detecting software vulnerabilities.
C1 [Nong, Yu; Sharma, Rainy; Cai, Haipeng] Washington State Univ, Sch Elect Engn & Comp Sci, Pullman, WA 99164 USA.
   [Hamou-Lhadj, Abdelwahab] Concordia Univ, Dept Elect & Comp Engn, Montreal, PQ H3G 1M8, Canada.
   [Luo, Xiapu] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
C3 Washington State University; Concordia University - Canada; Hong Kong
   Polytechnic University
RP Cai, HP (corresponding author), Washington State Univ, Sch Elect Engn & Comp Sci, Pullman, WA 99164 USA.
EM yu.nong@wsu.edu; rainy.sharma@wsu.edu; wahab.hamou-lhadj@concordia.ca;
   luoxiapu@gmail.com; chapering@gmail.com
RI Cai, Haipeng/K-7802-2015; Nong, Yu/AEU-7962-2022
OI Cai, Haipeng/0000-0002-5224-9970; Hamou-Lhadj,
   Abdelwahab/0000-0002-3319-5006
FU Army Research Office [W911NF-21-1-0027]; Office of Naval Research
   [N000142212111]; U.S. Department of Defense (DOD) [N000142212111]
   Funding Source: U.S. Department of Defense (DOD)
FX This work was supported in part by Army Research Office under Grant
   W911NF-21-1-0027, and in part by the Office of Naval Research under
   Grant N000142212111.
CR Albahar MA, 2020, IEEE ACCESS, V8, P14999, DOI 10.1109/ACCESS.2020.2965726
   Allamams M, 2019, PROCEEDINGS OF THE 2019 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!' 19), P143, DOI 10.1145/3359591.3359735
   An WY, 2020, IEEE INT SYMP PARAL, P337, DOI 10.1109/ISPA-BDCloud-SocialCom-SustainCom51426.2020.00068
   [Anonymous], 2016, P 25 INT S SOFTWARE, DOI DOI 10.1145/2931037.2931047
   [Anonymous], 2012, ACM SIGSOFT SOFTW EN
   Association for Computing Machinery, 2021, ART REV BADG CURR TE
   Ban XB, 2019, CONCURR COMP-PRACT E, V31, DOI 10.1002/cpe.5103
   Beyer D, 2019, LECT NOTES COMPUT SC, V11429, P133, DOI 10.1007/978-3-030-17502-3_9
   Boll A., 2020, P INT C SYST MOD MAN, P111
   Bonneel N, 2020, ACM T GRAPHIC, V39, DOI 10.1145/3386569.3392413
   Brooks A., 1996, ISERN9610 U STRATHCL, V2
   Brownlee J., 2014, Classification accuracy is not enough: more performance measures you can use
   Bruening D, 2011, PROCEED CGO, P213, DOI 10.1109/CGO.2011.5764689
   Cao DF, 2020, IEEE INT CONF TRUST, P539, DOI 10.1109/TrustCom50675.2020.00078
   Catal C, 2016, PROC INT MULTICONFER, P19
   Catal C, 2017, LECT NOTES ARTIF INT, V10526, P59, DOI 10.1007/978-3-319-67274-8_6
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Cheng X, 2019, IEEE INT C ENG COMP, P41, DOI 10.1109/ICECCS.2019.00012
   Choi MJ, 2017, Arxiv, DOI arXiv:1703.02458
   Clemente CJ, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P95, DOI 10.1109/QRS.2018.00023
   Collberg C, 2016, COMMUN ACM, V59, P62, DOI 10.1145/2812803
   D. Science, 2022, FIGSHARE
   Sestili CD, 2018, Arxiv, DOI arXiv:1808.09897
   Daoudi N, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09955-7
   de Magalhaes CVC, 2015, INFORM SOFTWARE TECH, V64, P76, DOI 10.1016/j.infsof.2015.02.001
   Demidov R., 2019, PROC FUTURE TECHNOL, P454
   Deng J, 2009, PROC CVPR IEEE, P248, DOI 10.1109/CVPRW.2009.5206848
   Duan X, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4665
   Easterbrook SM, 2014, NAT GEOSCI, V7, P779, DOI 10.1038/ngeo2283
   Fan GS, 2019, ASIA PAC SOFWR ENG, P244, DOI 10.1109/APSEC48747.2019.00041
   Fang Y, 2019, PLOS ONE, V14, DOI 10.1371/journal.pone.0225196
   Fehr J., 2016, Best Practices for Replicability, Reproducibility and Reusability of Computer-Based Experiments Exemplified by Model Reduction Software
   Ferreira F, 2021, 36TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2021, P1542, DOI 10.1145/3412841.3442029
   Filus K., 2020, S MODELLING ANAL SIM, P102
   Gao J, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P803, DOI 10.1145/3236024.3275524
   Gao Y., 2019, INT C INFORM COMMUNI, V11999, P199
   Gomez O.S., 2010, International Symposium on Empirical Software Engineering and Measurement, P1, DOI [DOI 10.1145/1852786.1852790, 10.1145/1852786.1852790]
   González-Barahona JM, 2012, EMPIR SOFTW ENG, V17, P75, DOI 10.1007/s10664-011-9181-9
   Gundersen OE, 2018, AAAI CONF ARTIF INTE, P1644
   Han WJ, 2020, 2020 5TH INTERNATIONAL CONFERENCE ON MECHANICAL, CONTROL AND COMPUTER ENGINEERING (ICMCCE 2020), P1462, DOI 10.1109/ICMCCE51767.2020.00320
   Harer J., 2018, P ADV NEURAL INF PRO, P7944
   Dam HK, 2021, IEEE T SOFTWARE ENG, V47, P67, DOI 10.1109/TSE.2018.2881961
   Hu Y., 2019, THESIS HARBIN I TECH
   Huang GY, 2019, IEEE ACCESS, V7, P28291, DOI 10.1109/ACCESS.2019.2900462
   Ince DC, 2012, NATURE, V482, P485, DOI 10.1038/nature10836
   Jabeen G., 2019, PROC 31 INT C SOFTW, P349
   Juristo N, 2012, LECT NOTES COMPUT SC, V7007, P60
   Juristo N, 2011, EMPIR SOFTW ENG, V16, P295, DOI 10.1007/s10664-010-9141-9
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Dam HK, 2017, Arxiv, DOI arXiv:1708.02368
   Kim J, 2019, LECT NOTES COMPUT SC, V11730, P731, DOI 10.1007/978-3-030-30490-4_58
   Kitchenham B, 2020, EMPIR SOFTW ENG, V25, P353, DOI 10.1007/s10664-019-09747-0
   Krishnamurthi S, 2015, COMMUN ACM, V58, P34, DOI 10.1145/2658987
   Kroening D., 2014, CBMC-C bounded model checker, P389, DOI DOI 10.1007/978-3-642-54862-8_26
   Le T., 2018, P INT C LEARN REPR
   Li L, 2020, PR MACH LEARN RES, V115, P367
   Li RH, 2019, IEEE ACCESS, V7, P134660, DOI 10.1109/ACCESS.2019.2942043
   Li RH, 2019, IEEE ACCESS, V7, P80079, DOI 10.1109/ACCESS.2019.2923227
   Li X, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10051692
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2821, DOI 10.1109/TDSC.2021.3076142
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Lima A., 2014, 8 INT AAAI C WEBL SO, DOI [10.1609/icwsm.v8i1.14552, DOI 10.1609/ICWSM.V8I1.14552]
   Lin GJ, 2021, IEEE T DEPEND SECURE, V18, P2469, DOI 10.1109/TDSC.2019.2954088
   Lin GJ, 2020, LECT NOTES COMPUT SC, V11999, P219, DOI 10.1007/978-3-030-41579-2_13
   Lin GJ, 2018, IEEE T IND INFORM, V14, P3289, DOI 10.1109/TII.2018.2821768
   Liu BC, 2012, INT C MULTIMED INFO, P152, DOI 10.1109/MINES.2012.202
   Liu C, 2020, Arxiv, DOI arXiv:2006.14244
   Liu SG, 2022, IEEE T DEPEND SECURE, V19, P438, DOI 10.1109/TDSC.2020.2984505
   Liu SG, 2020, IEEE T FUZZY SYST, V28, P1329, DOI 10.1109/TFUZZ.2019.2958558
   Liu SG, 2020, IEEE T IND INFORM, V16, P2154, DOI 10.1109/TII.2019.2942800
   Mahmood Z, 2018, INFORM SOFTWARE TECH, V99, P148, DOI 10.1016/j.infsof.2018.02.003
   Mao Y, 2020, IEEE INT CONF BIG DA, P4651, DOI 10.1109/BigData50022.2020.9377803
   Masuzzo Paola, 2017, PREPRINT
   McGraw G, 2004, IEEE SECUR PRIV, V2, P80, DOI 10.1109/MSECP.2004.1281254
   McKiernan EC, 2016, ELIFE, V5, DOI 10.7554/eLife.16800
   Mendez D., 2020, Contemporary Empirical Methods in Software Engineering, P477
   Mirowski P, 2018, SOC STUD SCI, V48, P171, DOI 10.1177/0306312718772086
   Nong Y, 2021, INFORM SOFTWARE TECH, V137, DOI 10.1016/j.infsof.2021.106614
   Nong Y, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P557, DOI [10.1109/saner48275.2020.9054851, 10.1109/SANER48275.2020.9054851]
   Orlando S., 2001, Data Warehousing and Knowledge Discovery. Third International Conference, DaWaK 2001. Proceedings (Lecture Notes in Computer Science Vol.2114), P71
   Pang Y., 2017, Proceedings of the 2017 International Conference on Deep Learning Technologies - ICDLT '17, P6, DOI DOI 10.1145/3094243.3094245
   Piantadosi Gabriele, 2019, Reproducible Research in Pattern Recognition. Second International Workshop, RRPR 2018. Revised Selected Papers: Lecture Notes in Computer Science (LNCS 11455), P104, DOI 10.1007/978-3-030-23987-9_10
   Ralph P, 2021, Arxiv, DOI arXiv:2010.03525
   Rasool A., 2019, WHICH IS MOST VULNER
   Robles Gregorio, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P171, DOI 10.1109/MSR.2010.5463348
   Robles G., 2010, P 1 INT WORKSH REPL, P1
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Ross S.M., 2020, Introduction to Probability and Statistics for Engineers and Scientists
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Saccente N, 2019, 2019 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2019), P114, DOI 10.1109/ASEW.2019.00040
   Saha RK, 2018, IEEE WORK CONF MIN S, P10, DOI 10.1145/3196398.3196473
   Santos MS, 2018, IEEE COMPUT INTELL M, V13, P59, DOI 10.1109/MCI.2018.2866730
   Seward J, 2005, USENIX Association Proceedings of the General Track: 2005 UNENIX Annual Technical Conference, P17
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Srikant S., 2020, THESIS MIT
   Suneja S, 2020, Arxiv, DOI arXiv:2006.08614
   Tanwar A, 2020, Arxiv, DOI [arXiv:2004.12783, 10.48550/ARXIV.2004.12783]
   Tawosi V, 2022, IEEE T SOFTWARE ENG, V48, P3185, DOI 10.1109/TSE.2021.3083360
   Tian JF, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2020.106289
   Nguyen T, 2020, LECT NOTES ARTIF INT, V12085, P164, DOI 10.1007/978-3-030-47436-2_13
   Nguyen V, 2019, IEEE IJCNN, DOI 10.1109/ijcnn.2019.8851923
   Nguyen V, 2020, LECT NOTES ARTIF INT, V12084, P699, DOI 10.1007/978-3-030-47426-3_54
   Vollmer S, 2020, BMJ, V368, P1
   Wang XM, 2018, 2018 10TH INTERNATIONAL CONFERENCE ON ADVANCED INFOCOMM TECHNOLOGY (ICAIT), P184, DOI 10.1109/ICAIT.2018.8686548
   Wu F, 2017, PROCEEDINGS OF 2017 3RD IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND COMMUNICATIONS (ICCC), P1298, DOI 10.1109/CompComm.2017.8322752
   Zagane M, 2020, IEEE ACCESS, V8, P74562, DOI 10.1109/ACCESS.2020.2988557
   ZHENG J., 2019, P 2019 2 INT C ALGOR, P160, DOI DOI 10.1145/3377713.3377738
   Zhou Y., 2019, Proceedings of the Advances in Neural Information Processing Systems, V32, P1
   Zou DQ, 2021, IEEE T DEPEND SECURE, V18, P2224, DOI 10.1109/TDSC.2019.2942930
NR 110
TC 4
Z9 4
U1 6
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1983
EP 2005
DI 10.1109/TSE.2022.3207149
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600032
DA 2024-07-18
ER

PT J
AU Tizard, J
   Devine, P
   Wang, HC
   Blincoe, K
AF Tizard, James
   Devine, Peter
   Wang, Hechen
   Blincoe, Kelly
TI A Software Requirements Ecosystem: Linking Forum, Issue Tracker, and
   FAQs for Requirements Management
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Documentation; Computer bugs; Open source software;
   Ecosystems; Browsers; Software engineering; Requirements engineering;
   machine learning; natural language processing; deep learning; open
   source software; user feedback; software engineering
AB User feedback is an important resource in modern software development, often containing requirements that help address user concerns and desires for a software product. The feedback in online channels is a recent focus for software engineering researchers, with multiple studies proposing automatic analysis tools. In this work, we investigate the product forums of two large open source software projects. Through a quantitative analysis, we show that forum feedback is often manually linked to related issue tracker entries and product documentation. By linking feedback to their existing documentation, development teams enhance their understanding of known issues, and direct their users to known solutions. We discuss how the links between forum, issue tracker, and product documentation form a requirements ecosystem that has not been identified in the previous literature. We apply state-of-the-art deep-learning to automatically match forum posts with related issue tracker entries. Our approach identifies requirement matches with a mean average precision of 58.9% and hit ratio of 82.2%. Additionally, we apply deep-learning using an innovative clustering technique, achieving promising performance when matching forum posts to related product documentation. We discuss the possible applications of these automated techniques to support the flow of requirements between forum, issue tracker, and product documentation.
C1 [Tizard, James; Devine, Peter; Wang, Hechen; Blincoe, Kelly] Univ Auckland, Human Aspects Software Engn Lab, Auckland 1010, New Zealand.
C3 University of Auckland
RP Tizard, J (corresponding author), Univ Auckland, Human Aspects Software Engn Lab, Auckland 1010, New Zealand.
EM jtiz003@aucklanduni.ac.nz; pdev438@aucklanduni.ac.nz;
   hwan531@aucklanduni.ac.nz; k.blincoe@auckland.ac.nz
OI Blincoe, Kelly/0000-0003-4092-9706; Tizard, James/0000-0001-9076-0852;
   Wang, Hechen/0000-0002-0079-9559
CR [Anonymous], BBC NEWS
   [Anonymous], FIREFOX PUBLIC DATA
   [Anonymous], ?About us"
   [Anonymous], Bug report writing guidelines - mozilla
   Ayata D., 2018, THESIS BOGAZICI U IS
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Cer D, 2018, Arxiv, DOI [arXiv:1803.11175, DOI 10.48550/ARXIV.1803.11175]
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Devine P, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P87, DOI 10.1109/REW53955.2021.00020
   Di Sorbo A, 2017, PROC IEEE ACM INT C, P55, DOI 10.1109/ICSE-C.2017.5
   Ghosh J, 2006, GROUPING MULTIDIMENSIONAL DATA: RECENT ADVANCES IN CLUSTERING, P73, DOI 10.1007/3-540-28349-8_3
   Groen EC, 2017, IEEE SOFTWARE, V34, P44, DOI 10.1109/MS.2017.33
   Guzman E, 2017, INT REQUIR ENG CONF, P11, DOI 10.1109/RE.2017.88
   Guzman E, 2017, REQUIR ENG, V22, P387, DOI 10.1007/s00766-017-0274-x
   Guzman E, 2016, INT REQUIR ENG CONF, P96, DOI 10.1109/RE.2016.67
   Haering M, 2021, PROC INT CONF SOFTW, P970, DOI 10.1109/ICSE43902.2021.00092
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Khan JA, 2019, INT REQUIR ENG CONF, P63, DOI 10.1109/RE.2019.00018
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Leimeister JM, 2014, ELECTRON MARK, V24, P255, DOI 10.1007/s12525-014-0174-6
   Lin JF, 2021, PROC INT CONF SOFTW, P324, DOI 10.1109/ICSE43902.2021.00040
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Martens D, 2019, INT REQUIR ENG CONF, P131, DOI 10.1109/RE.2019.00024
   Mekala RR, 2021, INT REQUIR ENG CONF, P139, DOI 10.1109/RE51729.2021.00020
   Mozilla foundation website, US
   Oehri E, 2020, INT REQUIR ENG CONF, P44, DOI 10.1109/RE48521.2020.00017
   Pagano D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P953, DOI 10.1109/ICSE.2013.6606645
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Panichella S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1023, DOI 10.1145/2950290.2983938
   Pavlick E, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL) AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (IJCNLP), VOL 2, P425
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Reimers N, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P3982
   Stanik C, 2021, INT REQUIR ENG CONF, P150, DOI 10.1109/RE51729.2021.00021
   Sultan Md Arafat, 2014, Transactions of the Association for Computational Linguistics, V2, P219
   Tizard J, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P328, DOI 10.1109/REW53955.2021.00057
   Tizard J, 2022, REQUIR ENG, V27, P293, DOI 10.1007/s00766-021-00357-1
   Tizard J, 2020, INT REQUIR ENG CONF, P55, DOI 10.1109/RE48521.2020.00018
   Tizard J, 2019, INT REQUIR ENG CONF, P17, DOI 10.1109/RE.2019.00014
   van der Wolf J., 2015, Principles of Plant-Microbe Interactions: Microbes for Sustainable Agriculture, P65, DOI DOI 10.1007/978-3-319-08575-3_9
   van Oordt S, 2021, INT REQUIR ENG CONF, P221, DOI 10.1109/RE51729.2021.00027
   VideoLAN organisation website, US
   Wonnacott TH., 1990, INTRO STAT
   Zhu M, 2004, Recall, precision and average precision
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 44
TC 1
Z9 1
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2381
EP 2393
DI 10.1109/TSE.2022.3219458
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600055
DA 2024-07-18
ER

PT J
AU Soares, E
   Ribeiro, M
   Gheyi, R
   Amaral, G
   Santos, A
AF Soares, Elvys
   Ribeiro, Marcio
   Gheyi, Rohit
   Amaral, Guilherme
   Santos, Andre
TI Refactoring Test Smells With JUnit 5: Why Should Developers Keep
   Up-to-Date?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Software development management; Java; Automation; Open source
   software; Libraries; Maintenance engineering; Software/Program
   verification; test design; testing strategies
AB Test smells are symptoms in the test code that indicate possible design or implementation problems. Previous research demonstrated their harmfulness and the developers' acknowledgment of test smells' effects, prevention, and refactoring strategies. Test automation frameworks are constantly evolving, and the JUnit, one of the most used ones for Java projects, has its version 5 available since late 2017. However, we do not know the extent to which developers use the newly introduced features and whether such features indeed help refactor existing test code to remove test smells. This article conducts a mixed-method study investigation to minimize these knowledge gaps. Our study consists of three parts. First, we evaluate the usage of this framework and its features by analyzing the source code of 485 popular Java open-source projects on GitHub that use JUnit. We found that 15.9% of these projects use the JUnit 5 library. We also found that, from 17 new features detected in use, only 3 (i.e., 17.6%) are responsible for more than 70% of usages, limiting optimized propositions to test code creation and maintenance. Second, after identifying features in the JUnit 5 framework that could be considered to test smells removal and prevention, we use these features to propose novel refactorings. In particular, we present refactorings based on 7 introduced JUnit 5 features that help to remove 13 test smells, such as Assertion Roulette, Test Code Duplication, and Conditional Test Logic. Third, to evaluate our refactorings with the opinions of experienced developers, we (i) survey 212 developers for their preferences and comments about our refactorings, corroborating the benefits of our proposals and raising community feedback on JUnit 5 features, and (ii) we refactor actual test code from popular GitHub Java projects and submit 38 Pull Requests, reaching a 94% acceptance rate among respondents. As implications of our study, we alert the software testing community (i.e., practitioners and researchers) to the need to study the JUnit 5 features to effectively remove and prevent test smells. To better assist this process, we give directions on how test smells can be refactored using such features.
C1 [Soares, Elvys; Santos, Andre] Univ Fed Pernambuco UFPE, Ctr Informat, BR-50670901 Recife, PE, Brazil.
   [Soares, Elvys] Inst Fed Alagoas IFAL, BR-57020600 Maceio, AL, Brazil.
   [Ribeiro, Marcio; Amaral, Guilherme] Univ Fed Alagoas UFAL, Inst Comp, BR-57072900 Maceio, Brazil.
   [Gheyi, Rohit] Univ Fed Campina Grande UFCG, Dept Sistemas & Comp, BR-58428830 Campina Grande, PB, Brazil.
C3 Universidade Federal de Pernambuco; Instituto Federal de Alagoas (IFAL)
RP Soares, E (corresponding author), Univ Fed Pernambuco UFPE, Ctr Informat, BR-50670901 Recife, PE, Brazil.
EM eas5@cin.ufpe.br; marcio@ic.ufal.br; rohit@dsc.ufcg.edu.br;
   gvma@ic.ufal.br; alms@cin.ufpe.br
RI ; Santos, Andre/D-8279-2013; Ribeiro, Marcio/C-8356-2017
OI Mota Amaral, Guilherme Volney/0000-0002-0107-3020; Santos,
   Andre/0000-0001-6661-5970; Soares, Elvys/0000-0001-7593-0147; Ribeiro,
   Marcio/0000-0002-4293-4261
CR Aljedaani W, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P170, DOI 10.1145/3463274.3463335
   [Anonymous], 2019, SOFTWARE UNIT TEST S
   Bartlett J E, 2001, INFORM TECHNOLOGY LE, V19, P1, DOI DOI 10.1109/LPT.2009.2020494
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Bavota G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P56, DOI 10.1109/ICSM.2012.6405253
   Bechtold S., 2020, JUNIT 5 USER GUIDE
   Borba P, 2003, LECT NOTES COMPUT SC, V2743, P457
   Bugayenko Y., 2015, FEW THOUGHTS UNIT TE
   De Bleser Jonas, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P457, DOI 10.1109/MSR.2019.00072
   Desikan S., 2006, Software Testing: Principles and Practice
   Dustin E., 1999, AUTOMATED SOFTWARE T
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fowler M., 2011, ERADICATING NONDETER
   Greiler M, 2013, IEEE WORK CONF MIN S, P387, DOI 10.1109/MSR.2013.6624053
   Greiler M, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P322, DOI 10.1109/ICST.2013.45
   Karhu Katja, 2009, 2009 2nd International Conference on Software Testing Verification and Validation (ICST 2009), P201, DOI 10.1109/ICST.2009.16
   Kim DJ, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09969-1
   Kim DJ, 2021, PROC INT CONF SOFTW, P62, DOI 10.1109/ICSE43902.2021.00019
   Kim DJ, 2020, PROC INT CONF SOFTW, P149, DOI 10.1145/3377812.3382176
   Lambiase S, 2020, INT C PROGRAM COMPRE, P441, DOI 10.1145/3387904.3389296
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Martinez M, 2020, PROC INT CONF SOFTW, P69, DOI 10.1145/3377812.3382151
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Meyer B, 2008, COMPUTER, V41, P99, DOI 10.1109/MC.2008.306
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Nödler J, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P101, DOI 10.1109/ICST.2009.34
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Panichella A, 2020, PROC IEEE INT CONF S, P523, DOI 10.1109/ICSME46990.2020.00056
   Peruma A., 2019, P 29 ANN INT C COMP, P193, DOI DOI 10.5555/3370272.3370293
   Peruma A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1650, DOI 10.1145/3368089.3417921
   Quadri SMK., 2010, International Journal of Computer Applications, V6, P7, DOI [10.5120/1343-1448, DOI 10.5120/1343-1448]
   Reichhart S, 2007, J OBJECT TECHNOL, V6, P231, DOI 10.5381/jot.2007.6.9.a12
   Santana Railana, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P374, DOI 10.1145/3422392.3422510
   Junior NS, 2020, Arxiv, DOI arXiv:2003.05613
   Soares E, 2020, PROCEEDINGS OF THE 5TH BRAZILIAN SYMPOSIUM ON SYSTEMATIC AND AUTOMATED SOFTWARE TESTING, SAST 2020, P50, DOI 10.1145/3425174.3425212
   Spadini D, 2020, IEEE WORK CONF MIN S, P311, DOI 10.1145/3379597.3387453
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Van Rompaey B, 2007, IEEE T SOFTWARE ENG, V33, P800, DOI 10.1109/TSE.2007.70745
   Zerouali A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P417, DOI 10.1109/SANER.2017.7884645
NR 40
TC 7
Z9 7
U1 2
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2023
VL 49
IS 3
BP 1152
EP 1170
DI 10.1109/TSE.2022.3172654
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA A1QF2
UT WOS:000952938700011
DA 2024-07-18
ER

PT J
AU Sabir, F
   Guéhéneuc, YG
   Palma, F
   Moha, N
   Rasool, G
   Akhtar, H
AF Sabir, Fatima
   Gueheneuc, Yann-Gael
   Palma, Francis
   Moha, Naouel
   Rasool, Ghulam
   Akhtar, Hassan
TI A Mixed-Method Approach to Recommend Corrections and Correct REST
   Antipatterns
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Tools; Social networking (online); Simple object access protocol;
   Measurement; Linguistics; History; Rest APIs; rest antipatterns;
   recommendations; corrections; change history
ID CODE-1ST WEB SERVICES; SMELLS; PATTERNS; IMPACT
AB Many companies, e.g., Facebook and YouTube, use the REST architecture and provide REST APIs to their clients. Like any other software systems, REST APIs need maintenance and must evolve to improve and stay relevant. Antipatterns-poor design practices-hinder this maintenance and evolution. Although the literature defines many antipatterns and proposes approaches for their (automatic) detection, their correction did not receive much attention. Therefore, we apply a mixed-method approach to study REST APIs and REST antipatterns with the objectives to recommend corrections or, when possible, actually correct the REST antipatterns. Qualitatively, via case studies, we analyse the evolution of 11 REST APIs, including Facebook, Twitter, and YouTube, over six years. We detect occurrences of eight REST antipatterns in the years 2014, 2017, and 2020 in 17 versions of 11 REST APIs. Thus, we show that (1) REST APIs and antipatterns evolve over time and (2) developers seem to remove antipatterns. Qualitatively via a discourse analysis, we analyse developers' forums and report that developers are concerned with the occurrences of REST antipatterns and discuss corrections to these antipatterns. Following these qualitative studies, using an engineering-research approach, we propose the following novel and unique contributions: (1) we describe and compare the corrections of eight REST antipatterns from the academic literature and from developers' forums; (2) we devise and describe algorithms to recommend corrections to some of these antipatterns; (3) we present algorithms and a tool to correct some of these antipatterns by intercepting and modifying responses from REST APIs; and, (4) we validate the recommendations and the corrections manually and via a survey answered by 24 REST developers. Thus, we propose to REST API developers and researchers the first, grounded approach to correct REST antipatterns.
C1 [Sabir, Fatima; Gueheneuc, Yann-Gael] Concordia Univ, Dept Comp Sci, Montreal, PQ H3G 1M8, Canada.
   [Sabir, Fatima; Rasool, Ghulam] COMSATS Univ Islamabad, Dept Comp Sci, Islamabad 45550, Pakistan.
   [Palma, Francis] Linnaeus Univ, Dept Comp Sci & Media Technol, S-35195 Vaxjo, Smaland, Sweden.
   [Moha, Naouel] Univ Quebec, Ecole Technol Super, Dept Comp Sci, Montreal, PQ H3C 3P8, Canada.
   [Akhtar, Hassan] Ericsson Islamabad, Dept Serv Delivery, Islamabad 44000, Pakistan.
C3 Concordia University - Canada; COMSATS University Islamabad (CUI);
   Linnaeus University; University of Quebec; University of Quebec
   Montreal; Ecole de Technologie Superieure - Canada
RP Sabir, F (corresponding author), Concordia Univ, Dept Comp Sci, Montreal, PQ H3G 1M8, Canada.
EM fatima.sabir@concordia.ca; yann-gael.gueheneuc@concordia.ca;
   francis.palma@lnu.se; moha.naouel@estmtl.ca; grasool@cuilahore.edu.pk;
   hassan.akhtarr@gmail.com
RI Palma, Francis/HPC-9574-2023
OI Sabir, Fatima/0000-0001-8707-6603; Gueheneuc,
   Yann-Gael/0000-0002-4361-2563
FU International Research Support Initiative Program (IRSIP); Canada
   Research Chair program; NSERC Discovery Grant Program; Higher Education
   Commission (HEC), Pakistan
FX This work was supported in part by the International Research Support
   Initiative Program (IRSIP) and funded by the Higher Education Commission
   (HEC), Pakistan. It was also partly funded by the Canada Research Chair
   program and NSERC Discovery Grant Program.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Abebe SL, 2011, IEEE INT WORK C SO, P125, DOI 10.1109/SCAM.2011.18
   Alizadeh Vahid, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P823, DOI 10.1109/ASE.2019.00081
   Allamaraju S., 2010, Restful web services cookbook: solutions for improving scalability and simplicity
   [Anonymous], 2012, WEB INFORM SYSTEMS E
   [Anonymous], 2017, API MANAGEMENT
   Arora P, 2015, PROCEEDINGS OF THE 2015 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM 2015), P1232, DOI 10.1145/2808797.2809318
   Athanasopoulos M, 2015, J SYST SOFTWARE, V100, P149, DOI 10.1016/j.jss.2014.10.038
   Au-Yeung J, 2020, Best practices for rest api design
   Bán D, 2014, LECT NOTES COMPUT SC, V8583, P337, DOI 10.1007/978-3-319-09156-3_25
   Bermbach D, 2016, LECT NOTES COMPUT SC, V9671, P188, DOI 10.1007/978-3-319-38791-8_11
   Bülthoff F, 2014, LECT NOTES COMPUT SC, V8798, P64, DOI 10.1007/978-3-319-11955-7_6
   Crasso M, 2010, IEEE INTERNET COMPUT, V14, P48, DOI 10.1109/MIC.2010.81
   Daigneau R., 2011, SERVICE DESIGN PATTE
   Demange A, 2013, LECT NOTES COMPUT SC, V8274, P114, DOI 10.1007/978-3-642-45005-1_9
   Erl T., 2012, Soa with rest: Principles, patterns constraints for building enterprise solutions with rest, V1st
   Erl T., 2008, SOA Design Patterns
   Espinha T, 2015, J SYST SOFTWARE, V100, P27, DOI 10.1016/j.jss.2014.10.014
   Faisal MS, 2019, COMPUT HUM BEHAV, V100, P168, DOI 10.1016/j.chb.2018.06.013
   Guerrouj L, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P321, DOI 10.1109/SANER.2015.7081842
   Haupt F, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P55, DOI 10.1109/ICSA.2017.40
   Jacobson D., 2011, APIs: A Strategy Guide
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Kopecky J, 2014, IT-INF TECHNOL, V56, P90, DOI 10.1515/itit-2013-1035
   Li Li, 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P508, DOI 10.1109/ICWS.2011.54
   Liu H, 2013, IEEE T SOFTWARE ENG, V39, P1112, DOI 10.1109/TSE.2013.4
   Maleshkova M., 2010, Proceedings 2010 8th IEEE European Conference on Web Services (ECOWS 2010), P107, DOI 10.1109/ECOWS.2010.9
   Masse M., 2011, REST API Design Rulebook: Designing Consistent RESTfulWeb Service Interface
   Mateos C, 2015, SOFTWARE PRACT EXPER, V45, P925, DOI 10.1002/spe.2268
   Mateos C, 2013, IEEE INTERNET COMPUT, V17, P46, DOI 10.1109/MIC.2013.4
   Mens T, 2007, SOFTW SYST MODEL, V6, P269, DOI 10.1007/s10270-006-0044-6
   Mercedes M., 2009, Philippine Computing Society Congress, P1
   Mills C, 2020, EMPIR SOFTW ENG, V25, P3086, DOI 10.1007/s10664-020-09823-w
   Mkaouer MW, 2017, EMPIR SOFTW ENG, V22, P894, DOI 10.1007/s10664-016-9426-8
   Murphy L., 2017, PRELIMINARY ANAL RES, V1001
   Nottingham M., 1974, BEST CURRENT PRACTIS
   Coscia JLO, 2014, SCI COMPUT PROGRAM, V89, P374, DOI 10.1016/j.scico.2014.03.015
   Coscia JLO, 2013, INT J WEB GRID SERV, V9, P107, DOI 10.1504/IJWGS.2013.054108
   Ouni A, 2017, IEEE T SERV COMPUT, V10, P603, DOI 10.1109/TSC.2015.2502595
   Ouni A, 2015, J SYST SOFTWARE, V105, P18, DOI 10.1016/j.jss.2015.03.040
   Ozdemir E., 2020, APPL APPROACHES OBJE, V1, P133
   Palma F, 2019, IEEE T SOFTWARE ENG, V45, P1024, DOI 10.1109/TSE.2018.2819180
   Palma F, 2017, INT J COOP INF SYST, V26, DOI 10.1142/S0218843017420011
   Palma F, 2015, LECT NOTES COMPUT SC, V9435, P171, DOI 10.1007/978-3-662-48616-0_11
   Palma F, 2014, LECT NOTES COMPUT SC, V8831, P230, DOI 10.1007/978-3-662-45391-9_16
   Pautasso C., 2009, SOME REST DESIGN PAT
   Petrillo F., 2017, PROC 7 INT C CLOUD C, P376
   Petrillo F, 2016, LECT NOTES COMPUT SC, V9936, P157, DOI 10.1007/978-3-319-46295-0_10
   Purushothaman Jobinesh., 2015, RESTful Java Web Services: Design scalable and robust RESTful web services with JAX-RS and Jersey extension APIs
   Rathee A, 2020, INFORM SYST FRONT, V22, P1519, DOI 10.1007/s10796-019-09948-4
   Reschke F., 2014, HYPERTEXT TRANSFER P
   Richardson L., 2008, RESTFUL WEB SERVICES
   Rodríguez C, 2016, LECT NOTES COMPUT SC, V9671, P21, DOI 10.1007/978-3-319-38791-8_2
   Roy-Fielding, 1999, BEST CURRENT PRACTIS
   Saint-Andre, 2012, BEST CURRENT PRACTIS
   Salvatierra G, 2012, LECT NOTES COMPUT SC, V7336, P484, DOI 10.1007/978-3-642-31128-4_36
   Sandoval Jose., 2009, RESTful Java Web Services
   Seinturier L, 2012, SOFTWARE PRACT EXPER, V42, P559, DOI 10.1002/spe.1077
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   Sohan SM, 2017, S VIS LANG HUM CEN C, P53, DOI 10.1109/VLHCC.2017.8103450
   Souichi U., 2014, U.S. Patent, Patent No. 8745595
   Terpolilli M., 2013, U.S. Patent, Patent No. 8407673
   Terra R, 2018, J SYST SOFTWARE, V138, P19, DOI 10.1016/j.jss.2017.11.073
   Terra R, 2015, SOFTWARE PRACT EXPER, V45, P315, DOI 10.1002/spe.2228
   Tilkov S., 2009, REST ANTIPATTERNS
   Tsantalis N, 2011, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2011.7
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Uddin G, 2015, IEEE SOFTWARE, V32, P68, DOI 10.1109/MS.2014.80
   Vidal SA, 2016, AUTOMAT SOFTW ENG, V23, P501, DOI 10.1007/s10515-014-0175-x
   Walter B, 2016, INFORM SOFTWARE TECH, V74, P127, DOI 10.1016/j.infsof.2016.02.003
   Wang HS, 2017, PROC CVPR IEEE, P3633, DOI 10.1109/CVPR.2017.387
   Wingkvist A., 2013, PROC 36 INF SYST RES, P669
NR 74
TC 0
Z9 0
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4319
EP 4338
DI 10.1109/TSE.2021.3117023
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800005
DA 2024-07-18
ER

PT J
AU Mondal, S
   Nasre, R
AF Mondal, Shouvick
   Nasre, Rupesh
TI Colosseum: Regression Test Prioritization by Delta Displacement in Test
   Coverage
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Test-case prioritization; regression testing; code-change displacement;
   priority distribution; queue interleaving
AB The problem of test-case prioritization has been pursued for over three decades now and continues to be one of the active topics in software testing research. In this paper, we focus on a code-coverage based regression test-prioritization solution (Colosseum) that takes into account the position of changed (delta) code elements (basic-blocks) along the loop-free straight-line execution path of the regression test-cases. We propose a heuristic that logically associates each of these paths with three parameters: (i) the offset (displacement a) of the first delta from the starting basic-block, (ii) the offset (displacement c) of the last delta from the terminating basic block, and (iii) the average scattering (displacement b) within all the intermediate basic-blocks. We hypothesize that a regression test-case path with a shorter overall displacement has a good chance of propagating the affects of the code-changes to the observable outputs in the program. Colosseum prioritizes test-cases with smaller overall displacements and executes them early in the regression test-execution cycle. The underlying intuition is that the probability of a test-case revealing a regression fault depends on the probability of the corresponding change propagation. The change in this context can potentially lead to an error. Extending this logic, delta displacement provides an approximation to failed error propagation. Evaluation on 20 open-source C projects from the Software-artifact Infrastructure Repository and GitHub (totaling: 694,512 SLOC, 280 versions, and 69,305 test-cases) against four state-of-the-art prioritizations reveals that: Colosseum outperforms the competitors with an overall 84.61% success in terms of 13 prioritization effectiveness metrics, majority of which prefer to execute top-k% prioritized test-cases.
C1 [Mondal, Shouvick; Nasre, Rupesh] Indian Inst Technol, Dept Comp Sci & Engn, Chennai 600036, Tamil Nadu, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Madras
RP Mondal, S (corresponding author), Indian Inst Technol, Dept Comp Sci & Engn, Chennai 600036, Tamil Nadu, India.
EM shouvick@cse.iitm.ac.in; rupesh@cse.iitm.ac.in
RI Mondal, Shouvick/JJF-4290-2023
OI Mondal, Shouvick/0000-0002-0703-8728
FU NSM Project [CS/19-20/1123/MEIT/008606]
FX The work of Rupesh Nasre was supported by NSM Project
   CS/19-20/1123/MEIT/008606.
CR Abou Assi R, 2018, PROC INT SYMP SOFTW, P123, DOI 10.1109/ISSRE.2018.00023
   Ammann Paul, 2008, Introduction to software testing, V1st
   Baral K, 2020, IEEE INT CONF SOFTW, P254, DOI 10.1109/ICST46399.2020.00034
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   Bertolino A, 2021, IEEE T SOFTWARE ENG, V47, P881, DOI 10.1109/TSE.2019.2906187
   Budd T. A., 1980, THESIS YALE U COMP S
   Carlson Ryan, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P382, DOI 10.1109/ICSM.2011.6080805
   Chekam TT, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3425497
   Chen JJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P656, DOI 10.1145/3236024.3236053
   Clark D, 2012, INFORM PROCESS LETT, V112, P335, DOI 10.1016/j.ipl.2012.01.004
   Debroy Vidroha, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P165, DOI 10.1109/ISSRE.2009.14
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Do H, 2010, IEEE T SOFTWARE ENG, V36, P593, DOI 10.1109/TSE.2010.58
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   Epitropakis M. G., 2015, P INT S SOFTW TEST A, P234, DOI [DOI 10.1145/2771783.2771788, 10.1145/2771783.2771788]
   Garousi V, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2251
   Gopinath R, 2017, IEEE INT CONF SOFTW, P47, DOI 10.1109/ICST.2017.12
   HALBWACHS N, 1991, P IEEE, V79, P1305, DOI 10.1109/5.97300
   Harrold MJ, 2009, PROC IEEE INT CONF S, P5, DOI 10.1109/ICSM.2009.5306347
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Joo J, 2020, IEEE INT CONF SOFTW, P398, DOI 10.1109/ICST46399.2020.00047
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Laski J., 1995, Software Testing, Verification and Reliability, V5, P81, DOI 10.1002/stvr.4370050203
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Liu WL, 2007, INT C COMP AID DES C, P252
   Masri W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559932
   Miranda B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P222, DOI 10.1145/3180155.3180210
   Mondal S., 2019, DATA FILES MAHTAB PH
   Mondal S, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110850
   Mondal S, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110403
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Pizzoleto AV, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.100
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Santelices R., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P11, DOI 10.1109/ICST.2011.46
   Wang XM, 2009, PROC INT CONF SOFTW, P45, DOI 10.1109/ICSE.2009.5070507
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P201
   Yu Z, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P883, DOI 10.1145/3338906.3340448
NR 41
TC 1
Z9 2
U1 3
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 4060
EP 4073
DI 10.1109/TSE.2021.3111169
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800019
DA 2024-07-18
ER

PT J
AU Nguyen, T
   Nguyen, K
   Dwyer, MB
AF ThanhVu Nguyen
   KimHao Nguyen
   Dwyer, Matthew B.
TI Using Symbolic States to Infer Numerical Invariants
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Inference algorithms; Tools; Security; Performance analysis; Engines;
   Encoding; Benchmark testing; Program invariants; numerical invariants;
   dynamic analysis; symbolic execution; counterexample guided refinement;
   program testing and verification
ID PROGRAM INVARIANTS; VERIFICATION
AB Automatically inferring invariant specifications has proven valuable in enabling a wide range of software verification and validation approaches over the past two decades. Recent approaches have shifted from using observation of concrete program states to exploiting symbolic encodings of sets of concrete program states in order to improve the quality of inferred invariants. In this paper, we demonstrate that working directly with symbolic states generated by symbolic execution approaches can improve invariant inference further. Our technique uses a counterexample-based algorithm that iteratively creates concrete states from symbolic states, infers candidate invariants from both concrete and symbolic states, and then validates or refutes candidate invariants using symbolic states. The refutation process serves both to eliminate spurious invariants and to drive the inference process to produce more precise invariants. This framework can be employed to infer complex invariants that capture nonlinear polynomial relations among program variables. The open-source SymInfer tool implements these ideas to automatically generate invariants at arbitrary locations in Java or C programs. Our preliminary results show that across a collection of four benchmarks SymInfer improves on the state-of-the-art by efficiently inferring more informative invariants than prior work.
C1 [ThanhVu Nguyen] George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
   [KimHao Nguyen] Univ Nebraska, Lincoln, NE 68588 USA.
   [Dwyer, Matthew B.] Univ Virginia, Dept Comp Sci, Charlottesville, VA 22901 USA.
C3 George Mason University; University of Nebraska System; University of
   Nebraska Lincoln; University of Virginia
RP Nguyen, T (corresponding author), George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
EM tvn@gmu.edu; kdnguyen@cse.unl.edu; matthewbdwyer@virginia.edu
OI Dwyer, Matthew/0000-0002-1937-1544; Nguyen, ThanhVu/0000-0002-4255-4592
FU UNL Faculty Award; National Science Foundation [1948536, 1617916,
   1901769]; U.S. Army Research Office [W911NF-19-1-0054]; DARPA ARCOS
   program [FA8750-20-C-0507]; Division of Computing and Communication
   Foundations; Direct For Computer & Info Scie & Enginr [1617916] Funding
   Source: National Science Foundation; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1948536, 1901769] Funding Source: National Science Foundation
FX We thank the anonymous reviewers for helpful comments. This work was
   supported by the UNL Faculty Award, by the National Science Foundation
   under Grants 1948536, 1617916, and 1901769, by the U.S. Army Research
   Office under Grant W911NF-19-1-0054, and by the DARPA ARCOS program
   under Contract FA8750-20-C-0507.
CR Allamigeon X, 2008, LECT NOTES COMPUT SC, V5079, P189
   Anand S, 2007, LECT NOTES COMPUT SC, V4424, P134
   [Anonymous], 2014, P 2014 INT S SOFTW T, DOI DOI 10.1145/2610384.2610389
   [Anonymous], SYGUS SYNTAX GUIDED
   [Anonymous], 2000, THESIS U WASHINGTON
   [Anonymous], COVERITY SCANNER
   [Anonymous], INFER STATIC ANAL
   [Anonymous], HOLA PROGRAMS SMT LI
   [Anonymous], 2014, INTERPROC ANAL RECUR
   [Anonymous], Sage Mathematics Software
   Antonopoulos T, 2017, ACM SIGPLAN NOTICES, V52, P362, DOI [10.1145/3140587.3062378, 10.1145/3062341.3062378]
   Beyer Dirk, 2007, International Journal on Software Tools for Technology Transfer, V9, P505, DOI 10.1007/s10009-007-0044-z
   Beyer D, 2017, LECT NOTES COMPUT SC, V10206, P331, DOI 10.1007/978-3-662-54580-5_20
   Bjorner N., 2015, TOOLS ALGORITHMS CON, P194
   Bodik R, 2000, ACM SIGPLAN NOTICES, V35, P321, DOI 10.1145/358438.349342
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cashin P, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P411, DOI 10.1109/ASE.2019.00046
   Clarke E, 2003, J ACM, V50, P752, DOI 10.1145/876638.876643
   Cormen T.H., 2009, INTRO ALGORITHMS
   Cousot P, 1996, ACM COMPUT SURV, V28, P324, DOI 10.1145/234528.234740
   Cousot P, 2005, LECT NOTES COMPUT SC, V3444, P21
   Cousot P., 1992, Journal of Logic and Computation, V2, P511, DOI 10.1093/logcom/2.4.511
   Csallner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P281, DOI 10.1145/1368088.1368127
   Das M, 2002, ACM SIGPLAN NOTICES, V37, P57, DOI 10.1145/543552.512538
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Fedyukovich G, 2018, PROCEEDINGS OF THE 2018 18TH CONFERENCE ON FORMAL METHODS IN COMPUTER AIDED DESIGN (FMCAD), P170
   Fedyukovich G, 2019, LECT NOTES COMPUT SC, V11561, P259, DOI 10.1007/978-3-030-25540-4_14
   Fedyukovich G, 2018, LECT NOTES COMPUT SC, V10805, P251, DOI 10.1007/978-3-319-89960-2_14
   Fedyukovich G, 2017, PROCEEDINGS OF THE 17TH CONFERENCE ON FORMAL METHODS IN COMPUTER AIDED DESIGN (FMCAD 2017), P100, DOI 10.23919/FMCAD.2017.8102247
   Garg P, 2016, ACM SIGPLAN NOTICES, V51, P499, DOI 10.1145/2914770.2837664
   Graf S, 1997, LECT NOTES COMPUT SC, V1254, P72
   Gulwani S, 2009, ACM SIGPLAN NOTICES, V44, P127, DOI 10.1145/1594834.1480898
   Gulwani S, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P375, DOI 10.1145/1542476.1542518
   Gulwani S, 2009, LECT NOTES COMPUT SC, V5643, P51, DOI 10.1007/978-3-642-02658-4_7
   Gupta A, 2009, LECT NOTES COMPUT SC, V5643, P634, DOI 10.1007/978-3-642-02658-4_48
   Gurfinkel A, 2015, LECT NOTES COMPUT SC, V9206, P343, DOI 10.1007/978-3-319-21690-4_20
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   HOARE CAR, 1971, COMMUN ACM, V14, P39, DOI 10.1145/362452.362489
   Hojjat H, 2018, PROCEEDINGS OF THE 2018 18TH CONFERENCE ON FORMAL METHODS IN COMPUTER AIDED DESIGN (FMCAD), P158
   Hojjat H, 2017, INT SYMP SYMB NUMERI, P145, DOI 10.1109/SYNASC.2017.00033
   Kapur Deepak, 2013, Automated Reasoning and Mathematics. Essays in Memory of William W. McCune, P189, DOI 10.1007/978-3-642-36675-8_11
   Ma KK, 2011, LECT NOTES COMPUT SC, V6887, P95, DOI 10.1007/978-3-642-23702-7_11
   Komuravelli A, 2016, FORM METHOD SYST DES, V48, P175, DOI 10.1007/s10703-016-0249-4
   Krishnan HGV, 2020, LECT NOTES COMPUT SC, V12225, P101, DOI 10.1007/978-3-030-53291-8_7
   Le T., 2020, P ACM PROGRAMMING LA, V4, P1
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Maclagan D., 2015, Introduction to tropical geometry
   Mine A., 2006, Higher-Order and Symbolic Computation, V19, P31, DOI 10.1007/s10990-006-8609-1
   Mine A., THESIS ECOLE POLYTEC
   Padhi S, 2016, ACM SIGPLAN NOTICES, V51, P42, DOI [10.1145/2908080.2908099, 10.1145/2980983.2908099]
   Perkins JH, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P87
   Prabhu S, 2018, LECT NOTES COMPUT SC, V11002, P326, DOI 10.1007/978-3-319-99725-4_20
   Rodríguez-Carbonell E, 2007, J SYMB COMPUT, V42, P443, DOI 10.1016/j.jsc.2007.01.002
   RODRIGUEZCARBON.E, 2004, P INT S SYMB ALG COM, P266
   Rummer Philipp, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P347, DOI 10.1007/978-3-642-39799-8_24
   Sharma R, 2013, LECT NOTES COMPUT SC, V7792, P574, DOI 10.1007/978-3-642-37036-6_31
   Siegel SF, 2015, PROCEEDINGS OF SC15: THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, DOI 10.1145/2807591.2807635
   Srivastava Saurabh, 2013, International Journal on Software Tools for Technology Transfer, V15, P497, DOI 10.1007/s10009-012-0223-4
   Staats M., 2010, ISSTA, P183
   Strang G., 1993, INTRO LINEAR ALGEBRA, V3
   Nguyen TV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P608, DOI 10.1145/2568225.2568275
   ThanhVu Nguyen, 2020, SEAD 2020: Proceedings of the 3rd SIGSOFT International Workshop on Software Security from Design to Deployment, P11, DOI 10.1145/3416507.3423189
   Nguyen T, 2017, IEEE INT CONF AUTOM, P804
   Nguyen T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P605, DOI 10.1145/3106237.3106281
   Nguyen T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2556782
   Nguyen T, 2012, PROC INT CONF SOFTW, P683, DOI 10.1109/ICSE.2012.6227149
   Ngo VC, 2017, P IEEE S SECUR PRIV, P710, DOI 10.1109/SP.2017.53
   Visser Willem, 2012, P FSE, DOI DOI 10.1145/2393596.2393665
   Yang G., 2012, P 2012 INT S SOFTW T, P144, DOI DOI 10.1145/2338965.2336771
   Yao JN, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P106, DOI 10.1145/3385412.3385986
NR 72
TC 1
Z9 1
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 3877
EP 3899
DI 10.1109/TSE.2021.3106964
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800009
DA 2024-07-18
ER

PT J
AU Chakraborty, S
   Krishna, R
   Ding, YRB
   Ray, B
AF Chakraborty, Saikat
   Krishna, Rahul
   Ding, Yangruibo
   Ray, Baishakhi
TI Deep Learning Based Vulnerability Detection: Are We There Yet?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Predictive models; Neural networks; Testing; Data models; Security;
   Training; Training data; Vulnerability; deep learning based
   vulnerability detection; real world vulnerabilities; graph neural
   network based vulnerability detection
AB Automated detection of software vulnerabilities is a fundamental problem in software security. Existing program analysis techniques either suffer from high false positives or false negatives. Recent progress in Deep Learning (DL) has resulted in a surge of interest in applying DL for automated vulnerability detection. Several recent studies have demonstrated promising results achieving an accuracy of up to 95 percent at detecting vulnerabilities. In this paper, we ask, "how well do the state-of-the-art DL-based techniques perform in a real-world vulnerability prediction scenario?" To our surprise, we find that their performance drops by more than 50 percent. A systematic investigation of what causes such precipitous performance drop reveals that existing DL-based vulnerability prediction approaches suffer from challenges with the training data (e.g., data duplication, unrealistic distribution of vulnerable classes, etc.) and with the model choices (e.g., simple token-based models). As a result, these approaches often do not learn features related to the actual cause of the vulnerabilities. Instead, they learn unrelated artifacts from the dataset (e.g., specific variable/function names, etc.). Leveraging these empirical findings, we demonstrate how a more principled approach to data collection and model design, based on realistic settings of vulnerability prediction, can lead to better solutions. The resulting tools perform significantly better than the studied baseline-up to 33.57 percent boost in precision and 128.38 percent boost in recall compared to the best performing model in the literature. Overall, this paper elucidates existing DL-based vulnerability prediction systems' potential issues and draws a roadmap for future DL-based vulnerability prediction research.
C1 [Chakraborty, Saikat; Krishna, Rahul; Ding, Yangruibo; Ray, Baishakhi] Columbia Univ, New York, NY 10027 USA.
C3 Columbia University
RP Krishna, R (corresponding author), Columbia Univ, New York, NY 10027 USA.
EM saikatc@cs.columbia.edu; i.m.ralk@gmail.com;
   yangruibo.ding@columbia.edu; rayb@cs.columbia.edu
RI Krishna, Rahul/HJG-7915-2022; Chakraborty, Saikat/ABD-4690-2020; Ding,
   Yangruibo/JEP-6503-2023
OI Chakraborty, Saikat/0000-0002-6889-7171; 
FU National Science Foundation [CCF 1845893, CCF 1822965, CNS 1842456]
FX The authors would like to thank Yufan Zhuang for help in data collection
   and Dr. Suman Jana for their extensive feedback on this paper. This work
   was supported by National Science Foundation under Grants CCF 1845893,
   CCF 1822965, and CNS 1842456.
CR Aggarwal A, 2006, P INT COMP SOFTW APP, P343
   Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   Allamams M, 2019, PROCEEDINGS OF THE 2019 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!' 19), P143, DOI 10.1145/3359591.3359735
   Allamanis M, 2018, Arxiv, DOI arXiv:1711.00740
   [Anonymous], CWE761
   [Anonymous], 2013, 500297 NAT I STAND T
   [Anonymous], CVE20208597
   [Anonymous], BUFFER OVERFLOW VULN
   [Anonymous], 2017, CWE 761 EXAMPLE
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Ayewah N, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P1, DOI 10.1145/1251535.1251536
   Baesens B, 2000, KES'2000: FOURTH INTERNATIONAL CONFERENCE ON KNOWLEDGE-BASED INTELLIGENT ENGINEERING SYSTEMS & ALLIED TECHNOLOGIES, VOLS 1 AND 2, PROCEEDINGS, P313, DOI 10.1109/KES.2000.885819
   Barua Sukarna, 2013, Advances in Knowledge Discovery and Data Mining. 17th Pacific-Asia Conference (PAKDD 2013). Proceedings, P317, DOI 10.1007/978-3-642-37456-2_27
   Barua S, 2014, IEEE T KNOWL DATA EN, V26, P405, DOI 10.1109/TKDE.2012.232
   Bengio Y, 2013, IEEE T PATTERN ANAL, V35, P1798, DOI 10.1109/TPAMI.2013.50
   Blagus R, 2013, BMC BIOINFORMATICS, V14, DOI 10.1186/1471-2105-14-106
   Booth H., 2013, The national vulnerability database (nvd): Overview
   Bridle J. S., 1990, Neurocomputing, Algorithms, Architectures and Applications. Proceedings of the NATO Advanced Research Workshop, P227
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Cirkovic, 2008, GLOBAL CATASTROPHIC, V15, P308
   Delaitre Aurelien, 2013, 2013 IEEE Seventh International Conference on Software Security and Reliability Companion (SERE-C), P163, DOI 10.1109/SERE-C.2013.10
   Dias M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P341, DOI 10.1109/SANER.2015.7081844
   Efron B., 1993, INTRO BOOTSTRAP, DOI 10.1007/978-1-4899-4541-9
   Eskandari M, 2013, J COMPUT VIROL HACKI, V9, P77, DOI 10.1007/s11416-013-0181-8
   Flawfinder, WWW DWHEEL COM FLAWF
   GIROSI F, 1995, NEURAL COMPUT, V7, P219, DOI 10.1162/neco.1995.7.2.219
   Guo WB, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P364, DOI 10.1145/3243734.3243792
   Hagan MT, 1997, NEURAL NETWORK DESIG
   Heckman S, 2011, INFORM SOFTWARE TECH, V53, P363, DOI 10.1016/j.infsof.2010.12.007
   Herzig K, 2016, EMPIR SOFTW ENG, V21, P303, DOI 10.1007/s10664-015-9376-6
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Hess M. R., 2004, ANN M AM ED RES ASS, P1
   Hoffer E, 2015, LECT NOTES COMPUT SC, V9370, P84, DOI 10.1007/978-3-319-24261-3_7
   Hongzhe Li, 2013, 2013 International Conference on Availability, Reliability and Security (ARES), P446, DOI 10.1109/ARES.2013.59
   Jelihovschi E.G., 2014, TEMA (São Carlos), V15, P3
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Koehn Philipp, 2004, EMNLP
   L. Developers, 2019, CLANG
   Lachaux MA, 2020, Arxiv, DOI arXiv:2006.03511
   Lemieux C, 2018, IEEE INT CONF AUTOM, P475, DOI 10.1145/3238147.3238176
   Li YJ, 2017, Arxiv, DOI arXiv:1511.05493
   Li Z, 2021, Arxiv, DOI arXiv:1807.06756
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Li Z, 2019, IEEE ACCESS, V7, P103184, DOI 10.1109/ACCESS.2019.2930578
   Ma R., 2019, CHIN CCONFERENCE TRU, P58
   Mackerras P., CVE 2020 8597 PATCH
   Mao CZ, 2019, ADV NEUR IN, V32
   NIST, 2018, SOFTW ASS REF DAT PR
   Pashchenko I, 2017, INT SYMP EMP SOFTWAR, P163, DOI 10.1109/ESEM.2017.24
   Plunkett K., 1997, EXERCISES RETHINKING
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Rong X, 2016, Arxiv, DOI arXiv:1411.2738
   Ruck D W, 1990, IEEE Trans Neural Netw, V1, P296, DOI 10.1109/72.80266
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Schroff F, 2015, PROC CVPR IEEE, P815, DOI 10.1109/CVPR.2015.7298682
   Seiffert C, 2010, IEEE T SYST MAN CY A, V40, P185, DOI 10.1109/TSMCA.2009.2029559
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   She DD, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P737, DOI 10.1145/3368089.3409723
   She DD, 2020, P IEEE S SECUR PRIV, P1527, DOI 10.1109/SP40000.2020.00022
   She DD, 2019, P IEEE S SECUR PRIV, P803, DOI 10.1109/SP.2019.00052
   Shen S., 2019, PROC NETW DISTRIB SY, P1
   Smith J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P248, DOI 10.1145/2786805.2786812
   Sothornprapakorn S, 2018, P INT COMP SOFTW APP, P74, DOI 10.1109/COMPSAC.2018.00018
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Turian J, 2010, ACL 2010: 48TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P384
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Wang J, 2017, IEEE I CONF COMP VIS, P2612, DOI [10.1109/ICCV.2017.283, 10.1109/ICCV.2017.65]
   Wang Tielei, 2009, NDSS
   Wu Gang., 2003, ICML 2003 WORKSHOP L, P49
   Wuchner T., 2015, INT C DET INTR MALW, P98, DOI [10.1007/978-3-319-20550, DOI 10.1007/978-3-319-20550-2_6, 10.1007/978-3-319-20550-2_6]
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Zhao R, 2018, IEEE T IND ELECTRON, V65, P1539, DOI 10.1109/TIE.2017.2733438
   Zhou YQ, 2019, ADV NEUR IN, V32
   Zhou YQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P914, DOI 10.1145/3106237.3117771
   Zou DQ, 2021, IEEE T DEPEND SECURE, V18, P2224, DOI 10.1109/TDSC.2019.2942930
NR 76
TC 132
Z9 134
U1 17
U2 38
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3280
EP 3296
DI 10.1109/TSE.2021.3087402
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500004
OA Green Submitted
HC Y
HP N
DA 2024-07-18
ER

PT J
AU Liu, JK
   Xia, X
   Lo, D
   Zhang, HX
   Zou, Y
   Hassan, AE
   Li, SP
AF Liu, Jiakun
   Xia, Xin
   Lo, David
   Zhang, Haoxiang
   Zou, Ying
   Hassan, Ahmed E.
   Li, Shanping
TI Broken External Links on Stack Overflow
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Internet; Software engineering; Software; Knowledge engineering; Web
   search; Computer bugs; Tools; Empirical software engineering; stack
   overflow; broken link
AB Stack Overflow hosts valuable programming-related knowledge with 11,926,354 links that reference to the third-party websites. The links that reference to the resources hosted outside the Stack Overflow websites extend the Stack Overflow knowledge base substantially. However, with the rapid development of programming-related knowledge, many resources hosted on the Internet are not available anymore. Based on our analysis of the Stack Overflow data that was released on Jun. 2, 2019, 14.2 percent of the links on Stack Overflow are broken links. The broken links on Stack Overflow can obstruct viewers from obtaining desired programming-related knowledge, and potentially damage the reputation of the Stack Overflow as viewers might regard the posts with broken links as obsolete. In this paper, we characterize the broken links on Stack Overflow. 65 percent of the broken links in our sampled questions are used to show examples, e.g., code examples. 70 percent of the broken links in our sampled answers are used to provide supporting information, e.g., explaining a certain concept and describing a step to solve a problem. Only 1.67 percent of the posts with broken links are highlighted as such by viewers in the posts' comments. Only 5.8 percent of the posts with broken links removed the broken links. Viewers cannot fully rely on the vote scores to detect broken links, as broken links are common across posts with different vote scores. The websites that host resources that can be maintained by their users are referenced by broken links the most on Stack Overflow - a prominent example of such websites is GitHub. The posts and comments related to the web technologies, i.e., JavaScript, HTML, CSS, and jQuery, are associated with more broken links. Based on our findings, we shed lights for future directions and provide recommendations for practitioners and researchers.
C1 [Liu, Jiakun; Li, Shanping] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310027, Peoples R China.
   [Xia, Xin] Huawei, Software Engn Applicat Technol Lab, Hangzhou 518129, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
   [Zhang, Haoxiang] Huawei, Ctr Software Excellence, Markham, ON L3R 5A4, Canada.
   [Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
   [Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON K7L 3N6, Canada.
C3 Zhejiang University; Huawei Technologies; Singapore Management
   University; Huawei Technologies; Queens University - Canada; Queens
   University - Canada
RP Xia, X (corresponding author), Huawei, Software Engn Applicat Technol Lab, Hangzhou 518129, Peoples R China.
EM jkliu@zju.edu.cn; xin.xia@acm.org; davidlo@smu.edu.sg;
   haoxiang.zhang@huawei.com; zou@queensu.ca; ahmed@cs.queensu.ca;
   shan@zju.edu.cn
RI Zou, Ying/KLC-9380-2024; Lo, David/A-2493-2012
OI Liu, Jiakun/0000-0002-7273-6709; Xia, Xin/0000-0002-6302-3256; Lo,
   David/0000-0002-4367-7201
FU National Science Foundation of China [U20A20173]; Key Research and
   Development Program of Zhejiang Province [2021C 01014]; National
   Research Foundation, Singapore under its Industry Alignment Fund
   -Prepositioning (IAFPP) Funding Initiative
FX This research was partially supported by the National Science Foundation
   of China (No. U20A20173), Key Research and Development Program of
   Zhejiang Province (No.2021C 01014), and the National Research
   Foundation, Singapore under its Industry Alignment Fund -Prepositioning
   (IAFPP) Funding Initiative. Any opinions, findings, and conclusions, or
   recommendations expressed in this material are those of the author(s)
   and do not reflect the views of the National Research Foundation,
   Singapore.
CR Al Safwan K, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P397, DOI 10.1145/3338906.3338979
   Anderson Ashton, 2012, P 18 ACM SIGKDD INT, DOI DOI 10.1145/2339530.2339665
   [Anonymous], 2010, COMMENT EVERYWHERE
   [Anonymous], 2014, HYPERTEXT TRANSFER P
   [Anonymous], 2017, IVE BEEN TOLD CREATE
   [Anonymous], 2010, MARKDOWN HELP CODE P
   [Anonymous], 2014, ASK GOOD QUESTION
   [Anonymous], 2013, WHY IS VOTING IMPORT
   [Anonymous], 2010, WRITE GOOD ANSWER
   [Anonymous], 2014, BULLET LIST SIMILAR
   [Anonymous], 2014, REFERENCE MAT WRITTE
   [Anonymous], 2013, WHY CAN PEOPLE EDIT
   [Anonymous], 2014, FORMAT MY POSTS USIN
   [Anonymous], 2013, WHAT ARE TAGS SHOULD
   [Anonymous], 2013, WHAT DOES IT MEAN AN
   [Anonymous], 2010, THE VOTE
   Arora SK, 2016, J ASSOC INF SCI TECH, V67, P1904, DOI 10.1002/asi.23503
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Baltes Sebastian, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P191, DOI 10.1109/MSR.2019.00038
   Baltes S, 2022, IEEE T SOFTWARE ENG, V48, P135, DOI 10.1109/TSE.2020.2981898
   Baltes S, 2018, IEEE WORK CONF MIN S, P319, DOI 10.1145/3196398.3196430
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Benesty J, 2009, SPRINGER TOP SIGN PR, V2, P37, DOI 10.1007/978-3-642-00296-0_5
   Brown A., 2006, Archiving websites: a practical guide for information management professionals, V1st
   Cai L, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1075, DOI 10.1145/3338906.3341174
   Cavusoglu H., 2015, P 18 ACM C COMP COMP
   Chen FX, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P320, DOI 10.1145/2786805.2786819
   Cheng CL, 2017, 2017 12TH INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS AND KNOWLEDGE ENGINEERING (IEEE ISKE), DOI 10.1109/ULTSYM.2017.8091659
   Chunyang Chen, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274302
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Correa D, 2013, IEEE AUS SOFT ENGR, P88, DOI 10.1109/ASWEC.2013.20
   Fetterly D, 2004, SOFTWARE PRACT EXPER, V34, P213, DOI 10.1002/spe.577
   Fielding R., 2014, RFC 7231
   FIELLER EC, 1957, BIOMETRIKA, V44, P470, DOI 10.2307/2332878
   Gao S, 2017, IEEE INT C ENG COMP, P90, DOI 10.1109/ICECCS.2017.30
   Gómez C, 2013, IEEE WORK CONF MIN S, P81, DOI 10.1109/MSR.2013.6624011
   Habibzadeh P, 2013, APPL CLIN INFORM, V4, P455, DOI 10.4338/ACI-2013-07-RA-0055
   Hanrahan BV, 2012, P ACM 2012 C COMP SU, P91, DOI DOI 10.1145/2141512.2141550
   Hennessey J, 2013, BMC BIOINFORMATICS, V14, DOI 10.1186/1471-2105-14-S14-S5
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Klein M, 2014, PLOS ONE, V9, DOI 10.1371/journal.pone.0115253
   Koehler W, 2004, INFORM RES, V9
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Li G, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1080, DOI 10.1145/2675133.2675155
   Linares-Vasquez M., 2014, P 22 INT C PROGR COM, P83, DOI DOI 10.1145/2597008.2597155
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   McCown F., 2005, ARXIVCS0511077
   PAL A, 2012, P 6 INT AAAI C WEBL, P274, DOI DOI 10.1609/ICWSM.V6I1.14262
   Price L., 2011, INTERNET ARCHIVING T
   Rahman MM, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P194, DOI 10.1109/CSMR-WCRE.2014.6747170
   Rath M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P834, DOI 10.1145/3180155.3180207
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   SAHA RK, 2013, P 2013 9 JOINT M FDN, P663, DOI DOI 10.1145/2491411.2494585
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Tong Zeng, 2019, Information in Contemporary Society. 14th International Conference, iConference 2019. Proceedings: Lecture Notes in Computer Science (LNCS 11420), P170, DOI 10.1007/978-3-030-15742-5_16
   Viera AJ, 2005, FAM MED, V37, P360
   Wang SW, 2020, IEEE T SOFTWARE ENG, V46, P1024, DOI 10.1109/TSE.2018.2874470
   Wang SW, 2014, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSME.2014.51
   Wang T, 2015, 9TH IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2015), P107, DOI 10.1109/SOSE.2015.34
   Weir I., 2015, Spearman's correlation
   Xia X, 2017, EMPIR SOFTW ENG, V22, P3149, DOI 10.1007/s10664-017-9514-4
   Xia X, 2013, IEEE WORK CONF MIN S, P287, DOI 10.1109/MSR.2013.6624040
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Ye DH, 2017, EMPIR SOFTW ENG, V22, P375, DOI 10.1007/s10664-016-9430-z
   Zhang HX, 2021, IEEE T SOFTWARE ENG, V47, P2520, DOI 10.1109/TSE.2019.2954319
   Zhang HX, 2021, IEEE T SOFTWARE ENG, V47, P850, DOI 10.1109/TSE.2019.2906315
NR 70
TC 4
Z9 4
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3242
EP 3267
DI 10.1109/TSE.2021.3086494
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500002
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Rosa, W
   Clark, BK
   Madachy, R
   Boehm, BW
AF Rosa, Wilson
   Clark, Bradford K.
   Madachy, Raymond
   Boehm, Barry W.
TI Empirical Effort and Schedule Estimation Models for Agile Processes in
   the US DoD
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; US Department of Defense; Schedules; Estimation; Contracts;
   Unified modeling language; Agile software development; Agile software
   processes; cost estimation; requirements; specification; software
   acquisition; software process; time estimation
ID SOFTWARE-DEVELOPMENT EFFORT; IMPROVE; SIZE
AB Estimating the cost and schedule of agile software projects is critical at an early phase to establish baseline budgets and schedules for the selection of competitive bidders. The challenge is that common agile sizing measures such as story points and user stories are not practical for early estimation as these are often reported after contract award in DoD. This study provides a set of effort and schedule estimation models for agile projects using a sizing measure that is available before proposal evaluation based on data from 36 DoD agile projects. The results suggest that initial software requirements, defined as the sum of functions and external interfaces, is an effective sizing measure for early estimation of effort and schedule of agile projects. The models' accuracy improves when application domain groups and peak staff are added as inputs.
C1 [Rosa, Wilson] Dept Navy, Arlington, VA 22201 USA.
   [Clark, Bradford K.] Software Metr Inc, Haymarket, VA USA.
   [Madachy, Raymond] Naval Postgrad Sch, Dept Syst Engn, Monterey, CA 93943 USA.
   [Boehm, Barry W.] Univ Southern Calif, USC Ctr Syst & Software Engn, Los Angeles, CA 90089 USA.
C3 United States Department of Defense; United States Navy; Naval
   Postgraduate School; University of Southern California
RP Rosa, W (corresponding author), Dept Navy, Arlington, VA 22201 USA.
EM wilson.rosa@navy.mil; brad@software-metrics.com; rjmadach@nps.edu;
   boehm@usc.edu
CR Abrahao S, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P465, DOI 10.1109/SEAA.2008.53
   Alleman GB, 2003, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P114, DOI 10.1109/ADC.2003.1231460
   Alshayeb M, 2003, IEEE T SOFTWARE ENG, V29, P1043, DOI 10.1109/TSE.2003.1245305
   Bilgaiyan Saurabh, 2016, 2016 2nd International Conference on Computational Intelligence and Networks (CINE), P112, DOI 10.1109/CINE.2016.27
   Choetkiertikul M, 2019, IEEE T SOFTWARE ENG, V45, P637, DOI 10.1109/TSE.2018.2792473
   Choetkiertikul M, 2018, IEEE T SOFTWARE ENG, V44, P551, DOI 10.1109/TSE.2017.2693989
   Clark B., 2015, SOFTWARE COST ESTIMA
   Danh NC, 2013, PROCEEDINGS OF 2013 IEEE RIVF INTERNATIONAL CONFERENCE ON COMPUTING AND COMMUNICATION TECHNOLOGIES: RESEARCH, INNOVATION, AND VISION FOR THE FUTURE (RIVF), P27, DOI 10.1109/RIVF.2013.6719861
   Department of Defense, 2020, SOFTW RES DAT REP
   Department of Navy, 2010, SOFTW CRIT GUID SYST
   Ebrahimi NB, 1999, IEEE T SOFTWARE ENG, V25, P136, DOI 10.1109/32.748922
   Hastings TE, 2001, IEEE T SOFTWARE ENG, V27, P337, DOI 10.1109/32.917523
   Hericko M, 2008, INFORM SOFTWARE TECH, V50, P772, DOI 10.1016/j.infsof.2007.08.005
   Jones Capers, 2013, Software Engineering Notes, V38, P1, DOI 10.1145/2492248.2492268
   Jorgensen M, 2005, IEEE T SOFTWARE ENG, V31, P942, DOI 10.1109/TSE.2005.128
   Jorgensen M, 2011, IEEE T SOFTWARE ENG, V37, P695, DOI 10.1109/TSE.2010.78
   Kaya M, 2011, EUROMICRO CONF PROC, P404, DOI 10.1109/SEAA.2011.60
   Lipkin I., 2011, THESIS U TOLEDO TOLE
   Madachy R, 2011, INT SYMP EMP SOFTWAR, P392, DOI 10.1109/ESEM.2011.56
   Malik A., 2011, THESIS U SO CALIFORN
   Malik AA, 2011, INFORM SCIENCES, V181, P2747, DOI 10.1016/j.ins.2009.12.002
   MATSON JE, 1994, IEEE T SOFTWARE ENG, V20, P275, DOI 10.1109/32.277575
   Molokken-Ostvold K, 2005, IEEE T SOFTWARE ENG, V31, P754, DOI 10.1109/TSE.2005.96
   MUKHOPADHYAY T, 1992, IEEE T SOFTWARE ENG, V18, P915, DOI 10.1109/32.163607
   Nan N, 2009, IEEE T SOFTWARE ENG, V35, P624, DOI 10.1109/TSE.2009.18
   Nassif AB, 2013, J SYST SOFTWARE, V86, P144, DOI 10.1016/j.jss.2012.07.050
   Ochodek M, 2011, INFORM SOFTWARE TECH, V53, P200, DOI 10.1016/j.infsof.2010.10.005
   Owais M, 2016, INT CONF CONTEMP, P150
   Pendharkar PC, 2005, IEEE T SOFTWARE ENG, V31, P615, DOI 10.1109/TSE.2005.75
   Pillai K, 1997, IEEE T SOFTWARE ENG, V23, P485, DOI 10.1109/32.624305
   Popli R, 2015, 2015 2ND INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT (INDIACOM), P1357
   Popli R, 2014, 2014 INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT (INDIACOM), P564, DOI 10.1109/IndiaCom.2014.6828023
   Popli R, 2013, PROCEEDINGS OF THE 2013 INTERNATIONAL CONFERENCE ON INFORMATION SYSTEMS AND COMPUTER NETWORKS (ISCON), P98, DOI 10.1109/ICISCON.2013.6524182
   Rosa W., 2014, PROC 8 ACMIEEE INT S, P1
   Rosa W., 2014, 29 INT FOR COCOMO SY, P627
   Rosa W, 2017, INT SYMP EMP SOFTWAR, P30, DOI 10.1109/ESEM.2017.10
   Saini A, 2018, INT CONF RELI INFO, P779, DOI 10.1109/ICRITO.2018.8748381
   Sharma A., 2010, SIGSOFT SOFTW ENG NO, V35, P1
   Sharma A, 2012, PROC TECH, V4, P716, DOI 10.1016/j.protcy.2012.05.116
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Singh Parminder, 2015, 2015 4th International Conference on Reliability, Infocom Technologies and Optimization (ICRITO) (Trends and Future Directions), P1, DOI 10.1109/ICRITO.2015.7359327
   Sungjoo Kang, 2010, 2010 IEEE/ACIS 9th International Conference on Computer and Information Science (ICIS 2010), P743, DOI 10.1109/ICIS.2010.126
   Tanveer B, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP), P41, DOI [10.1109/ICSSP.2016.014, 10.1145/2904354.2904373]
   TECOLOTE Inc, 2020, AUT COST EST INT TOO
   United States Department of Defense, 2016, AG EARN VAL MAN PROG
   United States Department of Defense, 2020, DOD INSTR 5000 87 OP
   United States Department of Defense Chief Information Officer, 2019, DOD ENT DEVS REF DES
   United States Department of Defense Science Board, 2018, DES ACQ SOFTW DEF SY
   United States Government Accountability Office, 2020, AG ASS GUID BEST PRA
   United States Government Accountability Office, 2012, SOFTW DEV EFF PRACT
   United States House of Representatives, 2018, DEP DEF APPR BILL 20
   Usman M., 2014, PROMISE '14: Proceedings of the 10th International Conference on Predictive Models in Software Engineering, page, P82
   Usman M., 2015, P 19 INT C EVALUATIO, P1, DOI DOI 10.1145/2745802.2745813
   Usman M, 2016, PROCEEDINGS OF 2016 JOINT CONFERENCE OF THE INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P219, DOI [10.1109/IWSM-Mensura.2016.14, 10.1109/IWSM-Mensura.2016.042]
   Valerdi R., 2005, THESIS U SO CALIFORN
NR 55
TC 7
Z9 7
U1 7
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 3117
EP 3130
DI 10.1109/TSE.2021.3080666
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500024
DA 2024-07-18
ER

PT J
AU Bajammal, M
   Stocco, A
   Mazinanian, D
   Mesbah, A
AF Bajammal, Mohammad
   Stocco, Andrea
   Mazinanian, Davood
   Mesbah, Ali
TI A Survey on the Use of Computer Vision to Improve Software Engineering
   Tasks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Visualization; Software engineering; Computer vision; Software;
   Task analysis; Graphical user interfaces; Computer vision; software
   engineering; survey
ID VISUALIZATION; INTERFACES
AB Software engineering (SE) research has traditionally revolved around engineering the source code. However, novel approaches that analyze software through computer vision have been increasingly adopted in SE. These approaches allow analyzing the software from a different complementary perspective other than the source code, and they are used to either complement existing source code-based methods, or to overcome their limitations. The goal of this manuscript is to survey the use of computer vision techniques in SE with the aim of assessing their potential in advancing the field of SE research. We examined an extensive body of literature from top-tier SE venues, as well as venues from closely related fields (machine learning, computer vision, and human-computer interaction). Our inclusion criteria targeted papers applying computer vision techniques that address problems related to any area of SE. We collected an initial pool of 2,716 papers, from which we obtained 66 final relevant papers covering a variety of SE areas. We analyzed what computer vision techniques have been adopted or designed, for what reasons, how they are used, what benefits they provide, and how they are evaluated. Our findings highlight that visual approaches have been adopted in a wide variety of SE tasks, predominantly for effectively tackling software analysis and testing challenges in the web and mobile domains. The results also show a rapid growth trend of the use of computer vision techniques in SE research.
C1 [Bajammal, Mohammad; Mazinanian, Davood; Mesbah, Ali] Univ British Columbia, Vancouver, BC V6T 1Z4, Canada.
   [Stocco, Andrea] Univ Svizzera Italiana, CH-6900 Lugano, Switzerland.
C3 University of British Columbia; Universita della Svizzera Italiana
RP Bajammal, M (corresponding author), Univ British Columbia, Vancouver, BC V6T 1Z4, Canada.
EM bajammal@ece.ubc.ca; andrea.stocco@usi.ch; dmazinanian@ece.ubc.ca;
   amesbah@ece.ubc.ca
RI Mesbah, Ali/C-3675-2013; Stocco, Andrea/GVT-6917-2022
OI Stocco, Andrea/0000-0001-8956-3894; Mesbah, Ali/0000-0002-8783-7967
CR Al-Kaff A, 2018, EXPERT SYST APPL, V92, P447, DOI 10.1016/j.eswa.2017.09.033
   Alegroth E., 2015, 2015 IEEE 8 INT C SO, P1
   Alégroth E, 2018, IEEE INT CONF SOFTW, P172, DOI 10.1109/ICST.2018.00026
   Alégroth E, 2017, EMPIR SOFTW ENG, V22, P2937, DOI 10.1007/s10664-016-9497-6
   Alégroth E, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P439, DOI 10.1109/ICST.2013.61
   Amalfitano D., 2014, P 2014 INT WORKSH LO, P9
   [Anonymous], 2015, EUROGRAPHICS C VISUA, DOI DOI 10.2312/EUROVISSTAR.20151114
   [Anonymous], 2015, 2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST)
   [Anonymous], 2003, P SIGCHI C HUM FACT, DOI DOI 10.1145/642611.642690
   Bajammal M, 2018, IEEE INT CONF AUTOM, P601, DOI 10.1145/3238147.3238194
   Bajammal M, 2018, IEEE INT CONF SOFTW, P193, DOI 10.1109/ICST.2018.00028
   Bao LF, 2019, IEEE T SOFTWARE ENG, V45, P823, DOI 10.1109/TSE.2018.2802916
   Bao LF, 2017, EMPIR SOFTW ENG, V22, P134, DOI 10.1007/s10664-015-9417-1
   Bao LF, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P673, DOI 10.1109/ICSE.2015.220
   Bay H, 2006, LECT NOTES COMPUT SC, V3951, P404, DOI 10.1007/11744023_32
   Beszédes A, 2019, ACTA POLYTECH HUNG, V16, P207, DOI 10.12700/APH.16.3.2019.3.11
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Brunetti A, 2018, NEUROCOMPUTING, V300, P17, DOI 10.1016/j.neucom.2018.01.092
   Burg B, 2015, UIST'15: PROCEEDINGS OF THE 28TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P259, DOI 10.1145/2807442.2807473
   Caetano Anabela, 2002, SSS 02, P9
   Caserta P, 2011, IEEE T VIS COMPUT GR, V17, P913, DOI 10.1109/TVCG.2010.110
   Chang TH, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1535
   Chen CF, 2017, IUI'17: PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON INTELLIGENT USER INTERFACES, P245, DOI 10.1145/3025171.3025190
   Chen CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P665, DOI 10.1145/3180155.3180222
   Choudhary S. R., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P171, DOI 10.1109/ICST.2012.97
   Choudhary S.R., 2010, P 2010 IEEE INT C SO, P1, DOI DOI 10.1109/ICSM.2010.5609723
   Choudhary SR, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P702, DOI 10.1109/ICSE.2013.6606616
   Coyette A, 2007, LECT NOTES COMPUT SC, V4662, P150
   DAUBECHIES I, 1990, IEEE T INFORM THEORY, V36, P961, DOI 10.1109/18.57199
   Deka B, 2017, UIST'17: PROCEEDINGS OF THE 30TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P845, DOI 10.1145/3126594.3126651
   Deka B, 2016, UIST 2016: PROCEEDINGS OF THE 29TH ANNUAL SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P767, DOI 10.1145/2984511.2984581
   Delamaro ME, 2013, SOFTW TEST VERIF REL, V23, P171, DOI 10.1002/stvr.463
   Dixon M, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P969
   Dixon M, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1525
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Feng Y, 2016, IEEE INT CONF AUTOM, P202, DOI 10.1145/2970276.2970367
   Fraser G, 2012, PROC INT CONF SOFTW, P178, DOI 10.1109/ICSE.2012.6227195
   Gandhi T, 2006, P IEEE INT TRANSP SY, P976, DOI DOI 10.1109/ITSC.2006.1706871
   Garousi V., 2017, Proc. 2017 ACM SIGSOFT, P21, DOI DOI 10.1145/3121245.3121250
   Givens P, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1165, DOI 10.1109/ICSE.2013.6606669
   Gyimesi P, 2021, SOFTW TEST VERIF REL, V31, DOI 10.1002/stvr.1751
   Gyimesi P, 2019, IEEE INT CONF SOFTW, P90, DOI 10.1109/ICST.2019.00019
   Hammoudi M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P751, DOI 10.1145/2950290.2950294
   Hammoudi M, 2016, IEEE INT CONF SOFTW, P180, DOI 10.1109/ICST.2016.16
   He MM, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P123, DOI 10.1109/ICWS.2016.24
   Hori A., 2015, 27 INT C SOFTW ENG K, P639, DOI DOI 10.18293/SEKE2015-17
   Huang F., 2019, P CHI C HUM FACT COM, P104
   Issa A, 2012, IEEE INT S WEB SYST, P11, DOI 10.1109/WSE.2012.6320526
   Janai Joel, 2020, Foundations and Trends in Computer Graphics and Vision, V12, P1, DOI 10.1561/0600000079
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kanellakis C, 2017, J INTELL ROBOT SYST, V87, P141, DOI 10.1007/s10846-017-0483-z
   Kiraç MF, 2018, J SYST SOFTWARE, V136, P266, DOI 10.1016/j.jss.2017.06.023
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Koschke R, 2003, J SOFTW MAINT EVOL-R, V15, P87, DOI 10.1002/smr.270
   Kuchta T, 2018, EMPIR SOFTW ENG, V23, P3187, DOI 10.1007/s10664-018-9600-2
   Kumar A, 2008, IEEE T IND ELECTRON, V55, P348, DOI 10.1109/TIE.1930.896476
   Landay JA, 2001, COMPUTER, V34, P56, DOI 10.1109/2.910894
   Leotta M, 2018, SOFTW TEST VERIF REL, V28, DOI 10.1002/stvr.1665
   Leotta M, 2016, J SOFTW-EVOL PROC, V28, P177, DOI 10.1002/smr.1771
   Li FF, 2006, IEEE T PATTERN ANAL, V28, P594, DOI 10.1109/TPAMI.2006.79
   Li Y, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P503
   Liang Hsiang-Sheng., 2013, P 26 ANN ACM S USER, P353, DOI DOI 10.1145/2501988
   LIM S, 2018, P 31 ANN ACM S US IN, P991
   Lin YD, 2014, IEEE T SOFTWARE ENG, V40, P957, DOI 10.1109/TSE.2014.2331982
   Mahajan S., 2014, P 29 IEEEACM INT C A
   Mahajan SG, 2015, 2015 2ND INTERNATIONAL CONFERENCE ON EMERGING INFORMATION TECHNOLOGY AND ENGINEERING SOLUTIONS (EITES 2015), P1, DOI 10.1109/EITES.2015.11
   Mahajan S, 2016, IEEE INT CONF SOFTW, P191, DOI 10.1109/ICST.2016.35
   Martin D, 2001, EIGHTH IEEE INTERNATIONAL CONFERENCE ON COMPUTER VISION, VOL II, PROCEEDINGS, P416, DOI 10.1109/ICCV.2001.937655
   Moran K, 2018, IEEE INT CONF AUTOM, P543, DOI 10.1145/3238147.3238203
   Moran K, 2020, IEEE T SOFTWARE ENG, V46, P196, DOI 10.1109/TSE.2018.2844788
   Moran K, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P165, DOI 10.1145/3180155.3180246
   NATARAJAN S, 2018, P 5 INT C MOB SOFTW, P224
   Novais RL, 2013, INFORM SOFTWARE TECH, V55, P1860, DOI 10.1016/j.infsof.2013.05.008
   Novak C. L., 1992, Proceedings. 1992 IEEE Computer Society Conference on Computer Vision and Pattern Recognition (Cat. No.92CH3168-2), P599, DOI 10.1109/CVPR.1992.223129
   Osman MH, 2018, EUROMICRO CONF PROC, P396, DOI 10.1109/SEAA.2018.00070
   Patrick M, 2016, IEEE INT CONF AUTOM, P654, DOI 10.1145/2970276.2970333
   Ponzanelli L, 2016, PROC INT CONF SOFTW, P261, DOI 10.1145/2884781.2884824
   Reinecke K, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P2693, DOI 10.1145/2858036.2858077
   Reiss SP, 2018, AUTOMAT SOFTW ENG, V25, P157, DOI 10.1007/s10515-017-0216-3
   Russakovsky O, 2015, INT J COMPUT VISION, V115, P211, DOI 10.1007/s11263-015-0816-y
   Sabaren LN, 2018, J COMPUT SCI TECHNOL, V18, P18, DOI 10.24215/16666038.18.e03
   Scharf A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P822, DOI 10.1109/ICSE.2013.6606628
   Seifert J., 2011, Proceedings of the 13th International Conference on Human Computer Interaction with Mobile Devices and Services, P109
   Selay E., 2014, P INT C DIG IM COMP, P1, DOI DOI 10.1109/DICTA.2014.7008093
   Semenenko N, 2013, PROC IEEE INT CONF S, P528, DOI 10.1109/ICSM.2013.88
   Stocco A, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P503, DOI 10.1145/3236024.3236063
   Storey Margaret-Anne D., 2005, P 2005 ACM S SOFTWAR, P193, DOI DOI 10.1145/1056018.1056045
   Sun SH, 2018, PR MACH LEARN RES, V80
   Swearngin A, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300305
   Tanno H, 2018, IEEE ICST WORKSHOP, P356, DOI 10.1109/ICSTW.2018.00073
   Nguyen TA, 2015, IEEE INT CONF AUTOM, P248, DOI 10.1109/ASE.2015.32
   van der Linden D, 2019, IEEE T SOFTWARE ENG, V45, P736, DOI 10.1109/TSE.2018.2802910
   Wan M., 2017, DETECTING DISPLAY EN, V27
   Wang Z, 2004, IEEE T IMAGE PROCESS, V13, P600, DOI 10.1109/TIP.2003.819861
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Wu SM, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P1180, DOI 10.1145/2998181.2998364
   Wu ZP, 2020, STRUCT MULTIDISCIP O, V62, P597, DOI 10.1007/s00158-020-02516-4
   Xiao XS, 2019, PROC INT CONF SOFTW, P257, DOI 10.1109/ICSE.2019.00041
   Xu Z, 2018, ACM T INTERNET TECHN, V18, DOI 10.1145/3140544
   Yandrapally R, 2020, PROC INT CONF SOFTW, P186, DOI 10.1145/3377811.3380416
   Yang B, 2006, IIH-MSP: 2006 INTERNATIONAL CONFERENCE ON INTELLIGENT INFORMATION HIDING AND MULTIMEDIA SIGNAL PROCESSING, PROCEEDINGS, P167
   Yee H, 2001, ACM T GRAPHIC, V20, P39, DOI 10.1145/383745.383748
   Yu SC, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1066, DOI 10.1109/ASE.2019.00103
   Yu-chi Liu, 2010, 2010 International Conference on Optics, Photonics and Energy Engineering (OPEE 2010), P277, DOI 10.1109/OPEE.2010.5508131
   Yuan A, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376870
   Zhang CC, 2017, IEEE INT CONF AUTOM, P38, DOI 10.1109/ASE.2017.8115616
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang YP, 2012, SECUR COMMUN NETW, V5, P404, DOI 10.1002/sec.324
   Zhao DH, 2019, PROC INT CONF SOFTW, P350, DOI 10.1109/ICSE.2019.00049
   Zheng XJS, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1
NR 110
TC 6
Z9 6
U1 3
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2022
VL 48
IS 5
BP 1722
EP 1742
DI 10.1109/TSE.2020.3032986
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 1I8CJ
UT WOS:000797454000017
DA 2024-07-18
ER

PT J
AU Soremekun, E
   Pavese, E
   Havrikov, N
   Grunske, L
   Zeller, A
AF Soremekun, Ezekiel
   Pavese, Esteban
   Havrikov, Nikolas
   Grunske, Lars
   Zeller, Andreas
TI Inputs From Hell: Learning Input Distributions for Grammar-Based Test
   Generation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Test case generation; probabilistic grammars; input samples
AB Grammars can serve as producers for structured test inputs that are syntactically correct by construction. A probabilistic grammar assigns probabilities to individual productions, thus controlling the distribution of input elements. Using the grammars as input parsers, we show how to leant input distributions from input samples, allowing to create inputs that are similar to the sample; by inverting the probabilities, we can create inputs that are dissimilar to the sample. This allows for three test generation strategies: 1) "Common inputs"-by learning from common inputs, we can create inputs that are similar to the sample; this is useful for regression testing. 2) "Uncommon inputs"-learning from common inputs and inverting probabilities yields inputs that are strongly dissimilar to the sample; this is useful for completing a test suite with "inputs from hell" that test uncommon features, yet are syntactically valid. 3) "Failure-inducing inputs"-learning from inputs that caused failures in the past gives us inputs that share similar features and thus also have a high chance of triggering bugs; this is useful for testing the completeness of fixes. Our evaluation on three common input formats (JSON, JavaScript, CSS) shows the effectiveness of these approaches. Results show that "common inputs" reproduced 96 percent of the methods induced by the samples. In contrast, for almost all subjects (95 percent), the "uncommon inputs" covered significantly different methods from the samples. Learning from failure-inducing samples reproduced all exceptions (100 percent) triggered by the failure-inducing samples and discovered new exceptions not found in any of the samples learned from.
C1 [Soremekun, Ezekiel] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, L-1855 Luxembourg, Luxembourg.
   [Pavese, Esteban; Grunske, Lars] Humboldt Univ, Dept Comp Sci, D-10117 Berlin, Germany.
   [Havrikov, Nikolas; Zeller, Andreas] CISPA Helholtz Ctr Informat Secur, D-66123 Saarbrucken, Germany.
C3 University of Luxembourg; Humboldt University of Berlin
RP Soremekun, E (corresponding author), Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, L-1855 Luxembourg, Luxembourg.
EM ezekiel.soremekun@uni.lu; Pavesees@informatik.hu-berlin.de;
   nikolas.havrikov@cispa.saarland; grunske@informatik.hu-berlin.de;
   zeller@cispa.saarland
RI Grunske, Lars/AAH-4550-2019; Soremekun, Ezekiel/ADE-1138-2022
OI Grunske, Lars/0000-0002-8747-3745; Soremekun,
   Ezekiel/0000-0002-0039-8106
FU Deutsche Forschungsgemeinschaft
FX We thank the reviewers for their helpful comments. This work was
   (partially) funded by Deutsche Forschungsgemeinschaft, Project
   "Extracting and Mining of Probabilistic Event Structures from Software
   Systems (EMPRESS)".
CR Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   [Anonymous], 2016, P 25 INT S SOFTW TES, DOI DOI 10.1145/2931037.2931056
   [Anonymous], 2006, COMPILERS PRINCIPLES
   Bastani O, 2017, ACM SIGPLAN NOTICES, V52, P95, DOI [10.1145/3062341.3062349, 10.1145/3140587.3062349]
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   Böhme M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2329, DOI 10.1145/3133956.3134020
   Buja A, 2009, PHILOS T R SOC A, V367, P4361, DOI 10.1098/rsta.2009.0120
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cadar C, 2008, ACM T INFORM SYST SE, V12, DOI 10.1145/1455518.1455522
   Cekan O, 2017, 2017 EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN (DSD), P356, DOI 10.1109/DSD.2017.26
   Chomsky Noam, 2002, SYNTACTIC STRUCTURES
   Christakis M, 2016, PROC INT CONF SOFTW, P144, DOI 10.1145/2884781.2884843
   DAMASHEK M, 1995, SCIENCE, V267, P843, DOI 10.1126/science.267.5199.843
   Della Toffola L, 2017, IEEE INT CONF AUTOM, P44, DOI 10.1109/ASE.2017.8115617
   FAN YQ, 1994, ECONOMET THEOR, V10, P316, DOI 10.1017/S0266466600008434
   Feldt R, 2013, PROC INT SYMP SOFTW, P350, DOI 10.1109/ISSRE.2013.6698888
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Geman S, 2000, P INT ENC SOC BEH SC, p12 075
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid P, 2017, IEEE INT CONF AUTOM, P50, DOI 10.1109/ASE.2017.8115618
   Godefroid P, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P206, DOI 10.1145/1375581.1375607
   Gopinath R, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P172, DOI 10.1145/3368089.3409679
   Groce A., 2012, P INT S SOFTW TEST A, P78, DOI DOI 10.1145/2338965.2336763
   Guo HF, 2015, SOFTWARE PRACT EXPER, V45, P1519, DOI 10.1002/spe.2278
   Hai-Feng Guo, 2013, Testing Software and Systems. 25th IFIP WG 6.1 International Conference, ICTSS 2013. Proceedings: LNCS 8254, P17, DOI 10.1007/978-3-642-41707-8_2
   HANFORD KV, 1970, IBM SYST J, V9, P242, DOI 10.1147/sj.94.0242
   Havrikov N, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P189, DOI 10.1109/ASE.2019.00027
   Herfert S, 2017, IEEE INT CONF AUTOM, P861, DOI 10.1109/ASE.2017.8115697
   Höschele M, 2016, IEEE INT CONF AUTOM, P720, DOI 10.1145/2970276.2970321
   Holler Christian, 2012, USENIX SEC S
   Hopcroft John E, 2001, Introduction to Automata Theory, Languages, and Computation, V32, P60, DOI DOI 10.1145/568438.568455
   Jin W, 2012, PROC INT CONF SOFTW, P474, DOI 10.1109/ICSE.2012.6227168
   Khurshid S, 2003, LECT NOTES COMPUT SC, V2619, P553
   Kifetew FM, 2017, EMPIR SOFTW ENG, V22, P928, DOI 10.1007/s10664-015-9422-4
   Kifetew FM, 2014, LECT NOTES COMPUT SC, V8636, P138
   Kifetew FM, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P163, DOI 10.1109/ICST.2014.29
   Lämmel R, 2006, LECT NOTES COMPUT SC, V3964, P19
   Li Y, 2013, ACM SIGPLAN NOTICES, V48, P19, DOI [10.1145/2509136.2509553, 10.1145/2544173.2509553]
   Lin Zhiqiang., 2008, P 16 ACM SIGSOFT INT, P83
   Liu P, 2017, PROC INT CONF SOFTW, P643, DOI 10.1109/ICSE.2017.65
   Liu TQ, 2014, ACM T GRAPHIC, V33, DOI 10.1145/2661229.2661243
   Luke S, 2000, IEEE T EVOLUT COMPUT, V4, P274, DOI 10.1109/4235.873237
   Manning C.D., 1999, FDN STAT NATURAL LAN
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Mera M, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P415, DOI 10.1145/3293882.3338983
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   OHair K, 2004, SUN DEV NETWORK DEV, V28
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Parr T., 2013, The Definitive ANTLR 4 Reference
   Patra J, 2016, LEARNING FUZZ APPL I
   Poulding S, 2015, J SYST SOFTWARE, V103, P296, DOI 10.1016/j.jss.2014.11.042
   Rawat S, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23404
   SAKAKIBARA Y, 1994, NUCLEIC ACIDS RES, V22, P5112, DOI 10.1093/nar/22.23.5112
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Shi QK, 2016, IEEE T RELIAB, V65, P19, DOI 10.1109/TR.2015.2434953
   Smite D, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/ICGSE.2008.22
   Su T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P245, DOI 10.1145/3106237.3106298
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Visser W., 2004, Software Engineering Notes, V29, P97, DOI 10.1145/1013886.1007526
   Wang JJ, 2017, P IEEE S SECUR PRIV, P579, DOI 10.1109/SP.2017.23
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Yang XJ, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P283
   Zalewski M, 2018, American Fuzzy Lop
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 66
TC 10
Z9 11
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2022
VL 48
IS 4
BP 1138
EP 1153
DI 10.1109/TSE.2020.3013716
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 0N4HC
UT WOS:000782799700003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alrimawi, F
   Pasquale, L
   Mehta, D
   Yoshioka, N
   Nuseibeh, B
AF Alrimawi, Faeq
   Pasquale, Liliana
   Mehta, Deepak
   Yoshioka, Nobukazu
   Nuseibeh, Bashar
TI Incidents are Meant for Learning, Not Repeating: Sharing Knowledge About
   Security Incidents in Cyber-Physical Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cyber-physical systems; security incidents; smart building; knowledge
   sharing
AB Cyber-physical systems (CPSs) are part of many critical infrastructures such as industrial automation and transportation systems. Thus, security incidents targeting CPSs can have disruptive consequences to assets and people. As incidents tend to re-occur, sharing knowledge about these incidents can help organizations be more prepared to prevent, mitigate or investigate future incidents. This paper proposes a novel approach to enable representation and sharing of knowledge about CPS incidents across different organizations. To support sharing, we represent incident knowledge (incident patterns) capturing incident characteristics that can manifest again, such as incident activities or vulnerabilities exploited by offenders. Incident patterns are a more abstract representation of specific incident instances and, thus, are general enough to be applicable to various systems - different from the one in which the incident originally occurred. They can also avoid disclosing potentially sensitive information about an organization's assets and resources. We provide an automated technique to extract an incident pattern from a specific incident instance. To understand how an incident pattern can manifest again in other cyber-physical systems, we also provide an automated technique to instantiate incident patterns to specific systems. We demonstrate the feasibility of our approach in the application domain of smart buildings. We evaluate correctness, scalability, and performance using two substantive scenarios inspired by real-world systems and incidents.
C1 [Alrimawi, Faeq; Nuseibeh, Bashar] Univ Limerick, Lero Irish Software Res Ctr, Limerick V94 T9PX, Ireland.
   [Pasquale, Liliana] Univ Coll Dublin, Dublin, Ireland.
   [Pasquale, Liliana] Lero Irish Software Res Ctr, Limerick, Ireland.
   [Mehta, Deepak] United Technol Res Ctr, Cork T23 XN53, Ireland.
   [Yoshioka, Nobukazu] Natl Inst Informat, Chiyoda Ku, Tokyo 1018430, Japan.
C3 University of Limerick; University College Dublin; University of
   Limerick; Raytheon Technologies; Research Organization of Information &
   Systems (ROIS); National Institute of Informatics (NII) - Japan
RP Alrimawi, F (corresponding author), Univ Limerick, Lero Irish Software Res Ctr, Limerick V94 T9PX, Ireland.
EM faeq.rimawi@gmail.com; liliana.pasquale@ucd.ie; MehtaD@utrc.utc.com;
   nobukazu@nii.ac.jp; basharmuseibeh@lero.ie
OI Yoshioka, Nobukazu/0000-0002-1986-5675; Alrimawi,
   Faeq/0000-0002-2236-5073; Nuseibeh, Bashar/0000-0002-3476-053X
FU ERC [291652]; EPSRC; Science Foundation Ireland [13/RC/2094,
   15/SIRG/3501]; EU H2020 CyberSec4Europe project [830929]; Science
   Foundation Ireland (SFI) [15/SIRG/3501] Funding Source: Science
   Foundation Ireland (SFI)
FX This work was partially supported by ERC Advanced Grant no. 291652
   (ASAP), EPSRC, Science Foundation Ireland grants 13/RC/2094 and
   15/SIRG/3501, and EU H2020 CyberSec4Europe project grant 830929.
CR Ahmad A, 2012, COMPUT SECUR, V31, P643, DOI 10.1016/j.cose.2012.04.001
   Alrimawi F, 2019, IEEE ACCESS, V7, P111513, DOI 10.1109/ACCESS.2019.2934221
   Alrimawi F, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SECURITY AWARENESS FROM DESIGN TO DEPLOYMENT (SEAD), P33, DOI [10.23919/SEAD.2018.8472851, 10.1145/3194707.3194714]
   [Anonymous], 2012, STRUCTURED THREAT IN, V11, P1
   [Anonymous], 2015, Cyber-physical attacks: A growing invisible threat
   Bollé T, 2018, DIGIT INVEST, V24, pS2, DOI 10.1016/j.diin.2018.01.002
   Caltagirone S., 2013, Technical Report
   Cardenas A., 2009, POWER ENERGY ENG C, P1
   Cichonski P., 2012, COMPUTER SECURITY IN, DOI [10.6028/NIST.SP.800-61r2, DOI 10.6028/NIST.SP.800-61R2]
   Cornish D.B., 1994, P INT SEM ENV CRIM C
   Do Q, 2018, COMPUT NETW, V138, P1, DOI 10.1016/j.comnet.2018.03.024
   Fani, 2015, 27 INT C SOFTW ENG K, P455, DOI DOI 10.18293/SEKE2015-101
   Gomariz Antonio, 2013, Advances in Knowledge Discovery and Data Mining. 17th Pacific-Asia Conference, PAKDD 2013. Proceedings, P50, DOI 10.1007/978-3-642-37453-1_5
   Hawrylak P. J., 2012, Proceedings of the 2012 5th International Symposium on Resilient Control Systems (ISRCS), P161, DOI 10.1109/ISRCS.2012.6309311
   Kastner W, 2005, P IEEE, V93, P1178, DOI 10.1109/JPROC.2005.849726
   Krebs B, 2016, IOT REALITY SMART DE
   Lallie HS, 2018, IEEE T INF FOREN SEC, V13, P1110, DOI 10.1109/TIFS.2017.2771238
   Lee, 2016, ANAL CYBER ATTACK UK
   Lee EA, 2010, DES AUT CON, P737
   Lee R. M., 2014, IND CONTROL SYST, V30, P1
   Liu S, 2013, IEEE T EMERG TOP COM, V1, P273, DOI 10.1109/TETC.2013.2296440
   Miculan M, 2014, ARXIV14121042
   Milner R, 2006, INFORM COMPUT, V204, P60, DOI 10.1016/j.ic.2005.07.003
   Milner R., 2009, SPACE MOTION COMMUNI, DOI DOI 10.1017/CBO9780511626661
   MITRE Corporation, 2007, COMM ATT PATT EN CLA
   Mundt T, 2016, 2016 INTERNATIONAL CONFERENCE ON CYBER SECURITY AND PROTECTION OF DIGITAL SERVICES (CYBER SECURITY)
   OASIS Open, 2017, INTR TAXII
   Pasquale L, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P9, DOI 10.1145/3183399.3183426
   Pasquale L, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P43, DOI 10.1145/2593929.2593939
   Prud'homme C., 2016, About choco solver
   Rowlingson R., 2004, International Journal of Digital Evidence, V2, P1
   Schreck T, 2018, THESIS FAU ERLANGEN
   Schulz K. U., 2002, International Journal on Document Analysis and Recognition, V5, P67, DOI 10.1007/s10032-002-0082-8
   Sevegnani M, 2016, LECT NOTES COMPUT SC, V9780, P494, DOI 10.1007/978-3-319-41540-6_27
   Tulechki N., 2015, NATURAL LANGUAGE PRO
   West-Brown MJ, 2003, CMUSEI2003HB002
   Yadav T, 2015, COMM COM INF SC, V536, P438, DOI 10.1007/978-3-319-22915-7_40
   Yampolskiy M, 2015, INT J CRIT INFR PROT, V8, P40, DOI 10.1016/j.ijcip.2014.09.003
NR 38
TC 3
Z9 3
U1 1
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2022
VL 48
IS 1
BP 120
EP 134
DI 10.1109/TSE.2020.2981310
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YG0HJ
UT WOS:000742179000007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cai, HP
   Ryder, B
AF Cai, Haipeng
   Ryder, Barbara
TI A Longitudinal Study of Application Structure and Behaviors in Android
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Androids; Humanoid robots; Security; Runtime; Measurement; Codes;
   Android; code structure; app behavior; longitudinal study; evolution;
   app analysis; security; ICC
AB With the rise of the mobile computing market, Android has received tremendous attention from both academia and industry. Application programming in Android is known to have unique characteristics, and Android apps be particularly vulnerable to various security attacks. In response, numerous solutions for particular security issues have been proposed. However, there is little broad understanding about Android app code structure and behaviors along with their implications for app analysis and security defense, especially in an evolutionary perspective. To mitigate this gap, we present a longitudinal characterization study of Android apps to systematically investigate how they are built and execute over time. Through lightweight static analysis and method-level tracing, we examined the code and execution of 17,664 apps sampled from the apps developed in each of eight past years, with respect to metrics in three complementary dimensions. Our study revealed that (1) apps functionalities heavily rely on the Android framework/SDK, and the reliance continues to grow, (2) Activity components constantly dominated over other types of components and were responsible for the invocation of most lifecycle callbacks, (3) event-handling callbacks consistently focused more on user-interface events than system events, (4) the overall use of callbacks has been slowly diminishing over time, (5) the majority of exercised inter-component communications (ICCs) did not carry any data payloads, and (6) sensitive data sources and sinks targeted only one/two dominant categories of information or operations, and the ranking of source/sink categories remained quite stable throughout the eight years. We discuss the implications of our empirical findings for cost-effective app analysis and security defense for Android, and make cost-effectiveness improvement recommendations accordingly.
C1 [Cai, Haipeng] Washington State Univ, Sch Elect Engn & Comp Sci, Pullman, WA 99164 USA.
   [Ryder, Barbara] Virginia Tech, Dept Comp Sci, Blacksburg, VA 24061 USA.
C3 Washington State University; Virginia Polytechnic Institute & State
   University
RP Cai, HP (corresponding author), Washington State Univ, Sch Elect Engn & Comp Sci, Pullman, WA 99164 USA.
EM haipeng.cai@wsu.edu; ryder@cs.vt.edu
RI Cai, Haipeng/K-7802-2015
OI Cai, Haipeng/0000-0002-5224-9970; Ryder, Barbara/0000-0002-4755-6941
CR Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   [Anonymous], 2015, ANDR MONK
   [Anonymous], 2011, CETUS USERS COMPILER
   [Anonymous], 2015, P 8 ACM C SEC PRIV W, DOI DOI 10.1145/2766498.2766506
   [Anonymous], 2010, P USENIX S OP SYST D
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Avdiienko V, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P426, DOI 10.1109/ICSE.2015.61
   Backes M, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P356, DOI 10.1145/2976749.2978333
   Bugiel S., 2012, In NDSS, V17, P19
   Cai H., 2017, SYSTEMATIC DYNAMIC C
   Cai HP, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P216, DOI 10.1145/3293882.3330564
   Cai HP, 2017, PROC IEEE INT CONF S, P364, DOI 10.1109/ICSME.2017.31
   Cai HP, 2017, PROC IEEE INT CONF S, P643, DOI 10.1109/ICSME.2017.35
   Cao C., 2015, Proceedings of the 31st Annual Computer Security Applications Conference, Los Angeles, CA, USA, December 7-11, 2015, ACSAC'15, P361
   Chin E., 2011, P 9 INT C MOB SYST A, P239, DOI DOI 10.1145/1999995.2000018
   Dan Han, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P83, DOI 10.1109/WCRE.2012.18
   Dietz M., 2011, Proceedings of the 20th USENIX Conference on Security, SEC'11, P23
   Dilhara M, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P67, DOI 10.1145/3197231.3197255
   Elish KO, 2020, IEEE T MOBILE COMPUT, V19, P90, DOI 10.1109/TMC.2018.2889495
   Enck W, 2011, P 20 USENIX C SEC SE, P2
   Enck W, 2009, IEEE SECUR PRIV, V7, P50, DOI 10.1109/MSP.2009.26
   Facebook, 2018, SAP INT AUT SOFTW TE
   Faruki P, 2015, IEEE COMMUN SURV TUT, V17, P998, DOI 10.1109/COMST.2014.2386139
   Felt AP, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P627
   Felt Adrienne Porter, 2012, P 2 ACM WORKSHOP SEC, P33, DOI 10.1145/2381934.2381943
   Felt AP, 2012, P 8 S USABLE PRIVACY, P1, DOI DOI 10.1145/2335356.2335360
   Ferreira D, 2011, LECT NOTES COMPUT SC, V6696, P19, DOI 10.1007/978-3-642-21726-5_2
   Google, 2019, ANDR KOTL
   Google, 2019, APP CAT GOOGL PLAY
   Google, 2015, ANDR DEB BRIDG
   Google, 2015, ANDR LOGC
   Gordon MI, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23089
   Hammad M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P421, DOI 10.1145/3180155.3180228
   Hao S, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P204, DOI 10.1145/2594368.2594390
   Hay R., 2015, P 2015 INT S SOFTWAR, P118
   Hecht G, 2015, IEEE INT CONF AUTOM, P236, DOI 10.1109/ASE.2015.46
   Huang W., 2015, P 2015 INT S SOFTWAR, P106, DOI 10.1145/2771783.2771803
   Jimenez M, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P222, DOI 10.1109/QRS.2016.34
   Li L, 2017, INFORM SOFTWARE TECH, V88, P67, DOI 10.1016/j.infsof.2017.04.001
   Linares-Vasquez M., 2014, PROC 11 WORK C MININ, P242
   Linares-Vásquez M, 2017, IEEE WORK CONF MIN S, P2, DOI 10.1109/MSR.2017.60
   Lindorfer Martina, 2014, 2014 Third International Workshop on Building Analysis Datasets and Gathering Experience Returns for Security (BADGERS). Proceedings, P3, DOI 10.1109/BADGERS.2014.7
   Liu F, 2017, PROCEEDINGS OF THE SEVENTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY (CODASPY'17), P159, DOI 10.1145/3029806.3029843
   Liu F, 2017, IEEE SEC PRIV WORKS, P189, DOI 10.1109/SPW.2017.12
   Livshits B, 2015, COMMUN ACM, V58, P44, DOI 10.1145/2644805
   Lu Long, 2012, P 2012 ACM C COMP CO, P229, DOI DOI 10.1145/2382196.2382223
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Maji AK., 2012, 2012 42nd Annual IEEE/IFIP International Conference on, P1
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Marforio C, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P51
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Minelli R, 2013, EUR CON SFTWR MTNCE, P144, DOI 10.1109/CSMR.2013.24
   Mojica IJ, 2014, IEEE SOFTWARE, V31, P78, DOI 10.1109/MS.2013.142
   Newsome J., 2005, NDSS, V5, P3
   Octeau D, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P77, DOI 10.1109/ICSE.2015.30
   Octeau Damien, 2013, P 22 USENIX SECURITY, P543
   Pauck F, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P331, DOI 10.1145/3236024.3236029
   Qiu LN, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P176, DOI 10.1145/3213846.3213873
   Rasthofer S, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23039
   Ruiz I. J. M., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P113
   Shen F., 2014, P 29 ACMIEEE INT C A, P515, DOI DOI 10.1145/2642937.2643018
   Sufatrio, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2733306
   Tam K, 2017, ACM COMPUT SURV, V49, DOI 10.1145/3017427
   Thomas D.R., 2015, P 5 ANN ACM CCS WORK, P87
   Thomas DR, 2015, LECT NOTES COMPUT SC, V9379, P126, DOI 10.1007/978-3-319-26096-9_13
   Wei FG, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1329, DOI 10.1145/2660267.2660357
   Wei XT, 2012, MOBICOM 12: PROCEEDINGS OF THE 18TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING, P137
   Wermke D, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P222, DOI 10.1145/3274694.3274726
   Wu DJ, 2012, ASIA JT CONF INF SEC, P62, DOI 10.1109/AsiaJCIS.2012.18
   Yang C, 2014, LECT NOTES COMPUT SC, V8712, P163, DOI 10.1007/978-3-319-11203-9_10
   Yang SQ, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P89, DOI 10.1109/ICSE.2015.31
   Yang SQ, 2015, IEEE INT CONF AUTOM, P658, DOI 10.1109/ASE.2015.76
   Zhauniarovich Y, 2014, LECT NOTES COMPUT SC, V8566, P130, DOI 10.1007/978-3-662-43936-4_9
   Zhou YJ, 2012, P IEEE S SECUR PRIV, P95, DOI 10.1109/SP.2012.16
   Zhou YJ, 2011, LECT NOTES COMPUT SC, V6740, P93, DOI 10.1007/978-3-642-21599-5_7
NR 75
TC 34
Z9 34
U1 2
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2021
VL 47
IS 12
BP 2934
EP 2955
DI 10.1109/TSE.2020.2975176
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XM6HB
UT WOS:000728924600018
DA 2024-07-18
ER

PT J
AU Thongtanunam, P
   Hassan, AE
AF Thongtanunam, Patanamon
   Hassan, Ahmed E.
TI Review Dynamics and Their Impact on Software Quality
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Software quality; Human factors; Collaboration; Measurement; Manuals;
   Proposals; Codes; Performance evaluation; Code review; collaboration;
   human aspects; software quality; peer review; biases
ID SOCIAL-CONTEXT; CODE; INSPECTIONS
AB Code review is a crucial activity for ensuring the quality of software products. Unlike the traditional code review process of the past where reviewers independently examine software artifacts, contemporary code review processes allow teams to collaboratively examine and discuss proposed patches. While the visibility of reviewing activities including review discussions in a contemporary code review tends to increase developer collaboration and openness, little is known whether such visible information influences the evaluation decision of a reviewer or not (i.e., knowing others' feedback about the patch before providing ones own feedback). Therefore, in this work, we set out to investigate the review dynamics, i.e., a practice of providing a vote to accept a proposed patch, in a code review process. To do so, we first characterize the review dynamics by examining the relationship between the evaluation decision of a reviewer and the visible information about a patch under review (e.g., comments and votes that are provided by prior co-reviewers). We then investigate the association between the characterized review dynamics and the defect-proneness of a patch. Through a case study of 83,750 patches of the OpenStack and Qt projects, we observe that the amount of feedback (either votes and comments of prior reviewers) and the co-working frequency of a reviewer with the patch author are highly associated with the likelihood that the reviewer will provide a positive vote to accept a proposed patch. Furthermore, we find that the proportion of reviewers who provided a vote consistent with prior reviewers is significantly associated with the defect-proneness of a patch. However, the associations of these review dynamics are not as strong as the confounding factors (i.e., patch characteristics and overall reviewing activities). Our observations shed light on the implicit influence of the visible information about a patch under review on the evaluation decision of a reviewer. Our findings suggest that the code reviewing policies that are mindful of these practices may help teams improve code review effectiveness. Nonetheless, such review dynamics should not be too concerning in terms of software quality.
C1 [Thongtanunam, Patanamon] Univ Melbourne, Parkville, Vic 3010, Australia.
   [Hassan, Ahmed E.] Queens Univ, Kingston, ON K7L 3N6, Canada.
C3 University of Melbourne; Queens University - Canada
RP Thongtanunam, P (corresponding author), Univ Melbourne, Parkville, Vic 3010, Australia.
EM patanamon.t@unimelb.edu.au; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   Australian Research Council's Discovery Early Career ResearcherAward
   (DECRA) [DE210101091]; Australian Research Council [DE210101091] Funding
   Source: Australian Research Council
FX This work was supported by the Natural Sciences and Engineering Research
   Council of Canada (NSERC). The work of Patanamon Thongtanunam was
   supported in part by the Australian Research Council's Discovery Early
   Career ResearcherAward (DECRA) funding scheme (DE210101091).
CR AIKENHEAD GS, 1985, SCI EDUC, V69, P453, DOI 10.1002/sce.3730690403
   Aurum A, 2002, SOFTW TEST VERIF REL, V12, P133, DOI 10.1002/stvr.243
   Babyak MA, 2004, PSYCHOSOM MED, V66, P411, DOI 10.1097/01.psy.0000127692.23278.a9
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Bavota G, 2015, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSM.2015.7332454
   Baysal O., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P447, DOI 10.1109/WCRE.2012.54
   Baysal O, 2016, EMPIR SOFTW ENG, V21, P932, DOI 10.1007/s10664-015-9366-8
   Bedeian AG, 2004, ACAD MANAG LEARN EDU, V3, P198, DOI 10.5465/AMLE.2004.13500489
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bird Christian, 2006, P MSR, P137, DOI DOI 10.1145/1137983.1138016
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Bosu A, 2014, J SYST SOFTWARE, V94, P4, DOI 10.1016/j.jss.2014.03.061
   Bosu Amiangshu, 2014, P 8 ACM IEEE INT S E, P33
   Bunderson JS, 2011, ORGAN SCI, V22, P1182, DOI 10.1287/orsc.1100.0590
   Carver JC, 2015, IEEE SOFTWARE, V32, P27, DOI 10.1109/MS.2015.113
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   de Guinea AO, 2012, INFORM MANAGE-AMSTER, V49, P301, DOI 10.1016/j.im.2012.08.003
   DEUTSCH MORTON, 1955, JOUR ABNORMAL AND SOCIAL PSYCHOL, V51-31, P629, DOI 10.1037/h0046408
   EFRON B, 1986, J AM STAT ASSOC, V81, P461, DOI 10.2307/2289236
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Fuller S., 2012, Knowledge management foundations
   German DM, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P523, DOI 10.1145/3180155.3180217
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Hames I., 2007, Peer Review and Manuscript Management of Scientific Journals: Guidelines for Good Practice
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Harrell FE, 2015, SPRINGER SER STAT, DOI 10.1007/978-3-319-19425-7
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Huelsenbeck JP, 1997, ANNU REV ECOL SYST, V28, P437, DOI 10.1146/annurev.ecolsys.28.1.437
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Jiarpakdee J, 2018, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSME.2018.00018
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Lamont M, 2016, RESEARCH ASSESSMENT IN THE HUMANITIES: TOWARDS CRITERIA AND PROCEDURES, P31, DOI 10.1007/978-3-319-29016-4_4
   Larrick RP, 2016, ANNU REV ORGAN PSYCH, V3, P441, DOI 10.1146/annurev-orgpsych-041015-062445
   Le Goues C, 2018, COMMUN ACM, V61, P30, DOI 10.1145/3208157
   Lee A, 2017, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2017.25
   McClurg SD, 2006, AM J POLIT SCI, V50, P737, DOI 10.1111/j.1540-5907.2006.00213.x
   McConnell J., 2018, MOZILLA EXPT AIMS RE
   McDonald N., 2013, CHI'13 Extended Abstracts on Human Factors in Computing Systems: ACM, P139
   McIntosh S., 2014, 11 MSR, P192, DOI DOI 10.1145/2597073.2597076
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Mesmer-Magnus JR, 2011, ORGAN BEHAV HUM DEC, V115, P214, DOI 10.1016/j.obhdp.2011.03.002
   Minson JA, 2018, MANAGE SCI, V64, P4177, DOI 10.1287/mnsc.2017.2823
   Morales R, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P171, DOI 10.1109/SANER.2015.7081827
   Münnich A, 1999, MATH SOC SCI, V37, P211, DOI 10.1016/S0165-4896(98)00030-4
   Pangsakulyanont T, 2014, INT WORKSH EMPIR ENG, P49, DOI 10.1109/IWESEP.2014.11
   Pavitt C, 2014, SMALL GR RES, V45, P704, DOI 10.1177/1046496414548353
   Pissarra J., 2005, J MANAGE PSYCHOL, V20, P275, DOI DOI 10.1108/02683940510589055
   PORTER AL, 1985, SCI TECHNOL HUM VAL, P33
   Purvanova RK, 2014, PSYCHOL-MANAG J, V17, P2, DOI 10.1037/mgr0000009
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2594458
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Scacchi W., 2007, Advances in Computers, V69, P243, DOI [DOI 10.1016/S0065-2458(06)69005-0, 10.1016/S0065-2458(06)69005-0]
   Seeber M, 2017, SCIENTOMETRICS, V113, P567, DOI 10.1007/s11192-017-2264-7
   Shimagaki J, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P212, DOI 10.1145/2889160.2889243
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Stasser G, 2003, PSYCHOL INQ, V14, P304, DOI 10.1207/S15327965PLI1403&4_21
   Steenbergen MR, 2002, AM J POLIT SCI, V46, P218, DOI 10.2307/3088424
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Suhay E, 2015, POLIT BEHAV, V37, P221, DOI 10.1007/s11109-014-9269-1
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Thongtanunam P, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P168, DOI 10.1109/MSR.2015.23
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Thongtanunam P, 2014, PROC IEEE INT CONF S, P605, DOI 10.1109/ICSME.2014.106
   Tomkins A, 2017, P NATL ACAD SCI USA, V114, P12708, DOI 10.1073/pnas.1707323114
   TRAVIS GDL, 1991, SCI TECHNOL HUM VAL, V16, P322, DOI 10.1177/016224399101600303
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Tsay J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P144, DOI 10.1145/2635868.2635882
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Xia X, 2015, PROC IEEE INT CONF S, P261, DOI 10.1109/ICSM.2015.7332472
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
NR 84
TC 18
Z9 19
U1 3
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2021
VL 47
IS 12
BP 2698
EP 2712
DI 10.1109/TSE.2020.2964660
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA XM6HB
UT WOS:000728924600004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Koch, P
   Schekotihin, K
   Jannach, D
   Hofer, B
   Wotawa, F
AF Koch, Patrick
   Schekotihin, Konstantin
   Jannach, Dietmar
   Hofer, Birgit
   Wotawa, Franz
TI Metric-Based Fault Prediction for Spreadsheets
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Measurement; Software; Prediction algorithms; Predictive models; Tools;
   Radio frequency; Task analysis; Spreadsheets; fault prediction; machine
   learning
ID SMELLS; ERRORS
AB Electronic spreadsheets are widely used in organizations for various data analytics and decision-making tasks. Even though faults within such spreadsheets are common and can have significant negative consequences, today's tools for creating and handling spreadsheets provide limited support for fault detection, localization, and repair. Being able to predict whether a certain part of a spreadsheet is faulty or not is often central for the implementation of such supporting functionality. In this work, we propose a novel approach to fault prediction in spreadsheet formulas, which combines an extensive catalog of spreadsheet metrics with modern machine learning algorithms. An analysis of the individual metrics from our catalog reveals that they are generally suited to discover a wide range of faults. Their predictive power is, however, limited when considered in isolation. Therefore, in our approach we apply supervised learning algorithms to obtain fault predictors that utilize all data provided by multiple spreadsheet metrics from our catalog. Experiments on different datasets containing faulty spreadsheets show that particularly Random Forests classifiers are often effective. As a result, the proposed method is in many cases able to make highly accurate predictions whether a given formula of a spreadsheet is faulty.(1) 1. Results of a preliminary study were published in [1] .
C1 [Koch, Patrick] AAU Klagenfurt, Tech Sci, A-9020 Klagenfurt, Austria.
   [Schekotihin, Konstantin] AAU Klagenfurt, Intelligent Syst, A-9020 Klagenfurt, Austria.
   [Jannach, Dietmar] AAU Klagenfurt, Informat Syst, A-9020 Klagenfurt, Austria.
   [Hofer, Birgit; Wotawa, Franz] Graz Univ Technol, A-8010 Graz, Austria.
C3 Graz University of Technology
RP Koch, P (corresponding author), AAU Klagenfurt, Tech Sci, A-9020 Klagenfurt, Austria.
EM patrick.koch@aau.at; konstantin.schekotihin@aau.at;
   Dietmar.Jannach@aau.at; bhofer@ist.tugraz.at; wotawa@ist.tugraz.at
RI Schekotihin, Konstantin/IZN-7815-2023
OI Schekotihin, Konstantin/0000-0002-0286-0958; Wotawa,
   Franz/0000-0002-0462-2283; Hofer, Birgit/0000-0001-5144-059X
FU Austrian Science Fund (FWF) [I2144]; DEbugging Of Spreadsheet programs
   (DEOS); Austrian Science Fund (FWF) [I2144] Funding Source: Austrian
   Science Fund (FWF)
FX The work was funded by the Austrian Science Fund (FWF), project I2144:
   DEbugging Of Spreadsheet programs (DEOS).
CR Abraham R, 2007, J VISUAL LANG COMPUT, V18, P71, DOI 10.1016/j.jvlc.2006.06.001
   Abraham R, 2009, IEEE T SOFTWARE ENG, V35, P94, DOI 10.1109/TSE.2008.73
   Abreu R, 2014, PROC IEEE INT CONF S, P625, DOI 10.1109/ICSME.2014.111
   Abreu R, 2014, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSME.2014.33
   Barowy DW, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276518
   Bregar A., 2004, Complexity metrics for spreadsheet models, P85
   Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   Breiman L., 2001, Mach. Learn., V45, P5
   Catal C, 2011, EXPERT SYST APPL, V38, P4626, DOI 10.1016/j.eswa.2010.10.024
   Catal C, 2009, INFORM SCIENCES, V179, P1040, DOI 10.1016/j.ins.2008.12.001
   Chambers C, 2009, J VISUAL LANG COMPUT, V20, P269, DOI 10.1016/j.jvlc.2009.04.002
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Cunha J, 2012, S VIS LANG HUM CEN C, P243, DOI 10.1109/VLHCC.2012.6344535
   Cunha J, 2012, LECT NOTES COMPUT SC, V7336, P202, DOI 10.1007/978-3-642-31128-4_15
   Dou WS, 2017, IEEE T SOFTWARE ENG, V43, P226, DOI 10.1109/TSE.2016.2584059
   Dou WS, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P787, DOI 10.1145/2950290.2950359
   Dou WS, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P848, DOI 10.1145/2568225.2568316
   Fisher Marc, 2005, P 1 WORKSHOP END USE, P1
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Getzner E, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P102, DOI 10.1109/QRS.2017.21
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Guyon I., 2003, Journal of Machine Learning Research, V3, P1157, DOI 10.1162/153244303322753616
   Hermans F., 2012, P EUR SPREADSH RISKS, P77
   Hermans F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P7, DOI 10.1109/ICSE.2015.129
   Hermans F, 2015, EMPIR SOFTW ENG, V20, P549, DOI 10.1007/s10664-013-9296-2
   Hermans F, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P409, DOI 10.1109/ICSM.2012.6405300
   Hermans F, 2012, PROC INT CONF SOFTW, P441, DOI 10.1109/ICSE.2012.6227171
   Hodnigg K., 2008, Proceedings of EuSpRIG 2008 Conference, P79
   Hofer B, 2013, LECT NOTES COMPUT SC, V7793, P68, DOI 10.1007/978-3-642-37057-1_6
   James G, 2013, SPRINGER TEXTS STAT, V103, P303, DOI 10.1007/978-1-4614-7138-7_8
   Jannach D, 2013, ENASE: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P117, DOI 10.5220/0004410601170124
   Jannach D, 2014, J SYST SOFTWARE, V94, P129, DOI 10.1016/j.jss.2014.03.058
   Koch P, 2019, J SYST SOFTWARE, V147, P64, DOI 10.1016/j.jss.2018.09.092
   Koch P, 2018, 2018 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P285, DOI 10.1109/VLHCC.2018.8506490
   Koch P, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P25, DOI 10.1145/3183399.3183402
   Kolcz A., 2004, ACM SIGKDD EXPLORATI, V6, P1, DOI [10.2973/odp.proc.ir.207.2004, DOI 10.1145/1007730.1007733]
   Lin Yi, 2002, J AM STAT ASSOC, P101
   Ma WWY, 2016, 2016 INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, TESTING AND EVOLUTION (SATE 2016), P24, DOI 10.1109/SATE.2016.11
   Palomba F, 2016, PROC IEEE INT CONF S, P245, DOI 10.1109/ICSME.2016.27
   Panko R. R., 2005, P EUR SPREADSH RISKS, P15
   Peterson L.E., 2009, SCHOLARPEDIA, V4, P1883, DOI 10.4249/scholarpedia.1883
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Reschenhofer T., 2016, P EUR SPREADSH RISKS, P37
   Rothermel G, 1998, PROC INT CONF SOFTW, P198, DOI 10.1109/ICSE.1998.671118
   Schapire RE, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P1401
   Schmitz T, 2016, S VIS LANG HUM CEN C, P157, DOI 10.1109/VLHCC.2016.7739679
   Singh R., 2017, MSRT20175
   Xu L, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P423, DOI 10.1109/SANER.2018.8330229
   Zeller A, 2010, IEEE INT WORK C SO, P3, DOI 10.1109/SCAM.2010.23
   Zhang RQ, 2017, J SYST SOFTWARE, V126, P87, DOI 10.1016/j.jss.2016.03.061
NR 50
TC 3
Z9 4
U1 2
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2021
VL 47
IS 10
BP 2195
EP 2207
DI 10.1109/TSE.2019.2944604
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WH1IX
UT WOS:000707441900009
OA hybrid
DA 2024-07-18
ER

PT J
AU Heinrich, R
   Strittmatter, M
   Reussner, R
AF Heinrich, Robert
   Strittmatter, Misha
   Reussner, Ralf
TI A Layered Reference Architecture for Metamodels to Tailor Quality
   Modeling and Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer architecture; Object oriented modeling; Analytical models;
   Biological system modeling; Tools; Software; Systematics;
   Domain-specific modeling language; reference architecture; metamodel;
   quality analysis
ID SOFTWARE
AB Nearly all facets of our everyday life strongly depend on software-intensive systems. Besides correctness, highly relevant quality properties of these systems include performance, as directly perceived by the user, and maintainability, as an important decision factor for evolution. These quality properties strongly depend on architectural design decisions. Hence, to ensure high quality, research and practice is interested in approaches to analyze the system architecture for quality properties. Therefore, models of the system architecture are created and used for analysis. Many different languages (often defined by metamodels) exist to model the systems and reason on their quality. Such languages are mostly specific to quality properties, tools or development paradigms. Unfortunately, the creation of a specific model for any quality property of interest and any different tool used is simply infeasible. Current metamodels for quality modeling and analysis are often not designed to be extensible and reusable. Experience from generalizing and extending metamodels result in hard to evolve and overly complex metamodels. A systematic way of creating, extending and reusing metamodels for quality modeling and analysis, or parts of them, does not exist yet. When comparing metamodels for different quality properties, however, substantial parts show quite similar language features. This leads to our approach to define the first reference architecture for metamodels for quality modeling and analysis. A reference architecture in software engineering provides a general architecture for a given application domain. In this paper, we investigate the applicability of modularization concepts from object-oriented design and the idea of a reference architecture to metamodels for quality modeling and analysis to systematically create, extend and reuse metamodel parts. Thus, the reference architecture allows to tailor metamodels. Requirements on the reference architecture are gathered from a historically grown metamodel. We specify modularization concepts as a foundation of the reference architecture. Detailed application guidelines are described. We argue the reference architecture supports instance compatibility and non-intrusive, independent extension of metamodels. In four case studies, we refactor historically grown metamodels and compare them to the original metamodels. The study results show the reference architecture significantly improves evolvability as well as need-specific use and reuse of metamodels.
C1 [Heinrich, Robert; Strittmatter, Misha; Reussner, Ralf] Karlsruhe Inst Technol, D-76131 Karlsruhe, Germany.
C3 Helmholtz Association; Karlsruhe Institute of Technology
RP Heinrich, R (corresponding author), Karlsruhe Inst Technol, D-76131 Karlsruhe, Germany.
EM heinrich@kit.edu; strittmatter@kit.edu; reussner@kit.edu
OI Heinrich, Robert/0000-0003-0779-9444; Reussner, Ralf/0000-0002-9308-6290
FU Helmholtz Association of German Research Centers; MWK (Ministry of
   Science, Research and the Arts Baden-Wurttemberg) in the funding line
   Research Seed Capital (RiSC)
FX This work was supported by the Helmholtz Association of German Research
   Centers and theMWK (Ministry of Science, Research and the Arts
   Baden-W_urttemberg) in the funding line Research Seed Capital (RiSC). We
   thank Reiner Jung for valuable discussions and support on metrics for
   metamodel coupling and complexity, Amine Kechaou for implementing the
   MRS Diagram Editor, Sandro Koch for help with the KAMP4aPS metamodel,
   Philipp Merkle for generous and very competent R support, Roman
   Pilipchuk and the Camunda Services GmbH for supplying us with BPMN2
   models, and Christian Stier for excellent feedback.
CR Alam O, 2013, LECT NOTES COMPUT SC, V8107, P604, DOI 10.1007/978-3-642-41533-3_37
   Allen EB, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P182, DOI 10.1109/METRIC.2002.1011337
   Allen EB, 2007, SOFTWARE QUAL J, V15, P179, DOI 10.1007/s11219-006-9010-3
   [Anonymous], 2011, ISO/IEC 25010:2011
   [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2014, ALIGNING BUSINESS PR
   [Anonymous], 2015, Unified Modeling Language
   [Anonymous], 2015, BOOK SOFTWARE ENG 10
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Atkinson C, 2012, P 2 INT MAST CLASS M
   Atkinson C, 2010, COMM COM INF SC, V69, P206
   Bak K, 2011, LECT NOTES COMPUT SC, V6563, P102, DOI 10.1007/978-3-642-19440-5_7
   Basciani F, 2016, PROCEEDINGS 2016 10TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P88, DOI 10.1109/QUATIC.2016.22
   Bause F., 1995, Quantitative Evaluation of Computing and Communication Systems. 8th International Conference on Modelling Techniques and Tools for Computer Performance Evaluation Performance Tools '95. 8th GI/ITG Conference on Measuring, Modelling and Evaluating Computing and Communication Systems MMB'95. Proceedings, P224, DOI 10.1007/BFb0024318
   Breivold Hongyu Pei, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P327, DOI 10.1109/COMPSAC.2008.50
   Briand L. C., 2001, Empirical Software Engineering, V6, P11, DOI 10.1023/A:1009815306478
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Brosch F, 2012, IEEE T SOFTWARE ENG, V38, P1319, DOI 10.1109/TSE.2011.94
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Combemale B, 2018, COMPUT LANG SYST STR, V54, P139, DOI 10.1016/j.cl.2018.05.004
   Combemale B, 2011, LECT NOTES COMPUT SC, V6698, P35, DOI 10.1007/978-3-642-21470-7_4
   Cruz-Lemus JA, 2010, INFORM SCIENCES, V180, P2209, DOI 10.1016/j.ins.2010.01.026
   de Lara J, 2010, LECT NOTES COMPUT SC, V6394, P16
   Degueule T, 2017, COMPUT LANG SYST STR, V49, P176, DOI 10.1016/j.cl.2016.09.001
   Degueule Thomas., 2015, SLE 2015 P 2015 ACM, P25, DOI DOI 10.1145/2814251.2814252
   Drath R, 2008, IEEE INT C EMERG, P616, DOI 10.1109/ETFA.2008.4638461
   Furst S., 2009, P 14 INT VDI C EL SY, V62
   Garmendia A., 2014, XM@ MoDELS, V1239, P22
   Gelissen J, 2003, INFORM TECHNOLOGY EU
   Goldschmidt T., 2012, MODELLIERUNG 2012, VP-201, P59
   Guy Clement, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P400, DOI 10.1007/978-3-642-31491-9_30
   Hahn R., THESIS KARLSRUHE I T
   Hauck M, 2009, THESIS U KARLSRUHE T
   Hegedus Abel, 2010, Proceedings of the 2010 8th IEEE International Conference on Software Engineering and Formal Methods (SEFM 2010), P145, DOI 10.1109/SEFM.2010.28
   Heinrich R., 2018, P 30 INT C SOFTW ENG, P336
   Heinrich R, 2018, J SYST SOFTWARE, V146, P167, DOI 10.1016/j.jss.2018.08.058
   Heinrich R, 2017, SOFTW SYST MODEL, V16, P257, DOI 10.1007/s10270-015-0457-1
   Hinkel G, 2017, MODELSWARD: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P253, DOI 10.5220/0006105502530260
   Hinkel G, 2016, PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2016), P145
   Holldobler K., 2021, MontiCore Language Workbench and Library Handbook
   IEEE Architecture Working Group, 2000, IEEE STD 1471 2000
   Iovino L, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.3.a3
   Jiménez-Pastor A, 2017, J SYST SOFTWARE, V132, P204, DOI 10.1016/j.jss.2017.07.011
   Jung R., 2014, P 2 WORKSH VIEW BAS
   Jung R, 2016, THESIS KIEL U KIEL G
   Jung R, 2016, LECT NOTES COMPUT SC, V9765, P141, DOI 10.1007/978-3-319-42064-6_10
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Kechaou A, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS: COMPANION PROCEEDINGS (MODELS-COMPANION '18), P32, DOI 10.1145/3270112.3270119
   Kounev S., 2014, DESCARTES MODELING L
   Kro J., 2015, SOFTWARETECHNIK TREN, V35
   Kuhn T., 2015, P 19 INT C SOFTW PRO, P71, DOI DOI 10.1145/2791060.2791092
   Langer P, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.1.a8
   Lédeczi A, 2001, COMPUTER, V34, P44, DOI 10.1109/2.963443
   Levendovszky T, 2014, SOFTW SYST MODEL, V13, P807, DOI 10.1007/s10270-012-0313-5
   Martin R. C, 1995, DESIGNING OBJECTORIE
   Méndez-Acuña D, 2016, COMPUT LANG SYST STR, V46, P206, DOI 10.1016/j.cl.2016.09.004
   Méndez-Acuña D, 2016, LECT NOTES COMPUT SC, V9679, P393, DOI 10.1007/978-3-319-35122-3_26
   Mernik M, 2002, LECT NOTES COMPUT SC, V2304, P1
   Muller PA, 2005, LECT NOTES COMPUT SC, V3713, P264, DOI 10.1007/11557432_19
   Object Management Group, 2016, MOF 251 CORE SPECIFI
   Object Management Group, 2011, UML PROF MARTE MOD A
   Object Management Group BPMN Technical Committee, 2014, BUSINESS PROCESS MOD
   Pilipchuk R., 2018, P CTR EUR CYB C
   Pilipchuk R., 2018, P CENTR EUR CYB C
   Raskob W., 2015, P CRIT INFR PROT RES
   Rathfelder C, 2013, MODELLING EVENT BASE
   Rentschler A, 2015, THESIS KARLSRUHE I T
   Reussner RH, 2016, MODELING AND SIMULATING SOFTWARE ARCHITECTURES: THE PALLADIO APPROACH, P1
   Roques P., 2016, 8 EUROPEAN C EMBEDDE
   Rostami K, 2015, QOSA'15 PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGSOFT CONFERENCE ON QUALITY OF SOFTWARE ARCHITECTURES, P21, DOI 10.1145/2737182.2737198
   Schottle M., 2015, COMPANION P 14 INT C, P11, DOI DOI 10.1145/2735386.2735922
   Schutt D., 1977, 15th IEEE Computer Society International Conference, P295
   Seidl M., 2015, UML CLASSROOM
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
   Strittmatter M, 2014, P S SOFTW PERF, P160
   Strittmatter M., 2016, ME MODELS, P30
   Strittmatter M., 2018, SUPPLEMENTARY MAT EV
   Strüber D, 2014, LECT NOTES COMPUT SC, V8411, P47
   Szárnyas G, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P87, DOI 10.1145/2976767.2976786
   Vacchi E, 2015, COMPUT LANG SYST STR, V43, P1, DOI 10.1016/j.cl.2015.02.001
   Voelter M, 2012, PROC INT CONF SOFTW, P1449, DOI 10.1109/ICSE.2012.6227070
   Willnecker F., 2014, P S SOFTW PERF, P177
NR 84
TC 4
Z9 4
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2021
VL 47
IS 4
BP 775
EP 800
DI 10.1109/TSE.2019.2903797
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA RP8GH
UT WOS:000641961100005
DA 2024-07-18
ER

PT J
AU Fejzer, M
   Narebski, J
   Przymus, P
   Stencel, K
AF Fejzer, Mikolaj
   Narebski, Jakub
   Przymus, Piotr
   Stencel, Krzysztof
TI Tracking Buggy Files: New Efficient Adaptive Bug Localization Algorithm
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Location awareness; Software; History; Software
   algorithms; Machine learning algorithms; Training; Bug reports; software
   maintenance; learning to rank
ID METRICS
AB Upon receiving a new bug report, developers need to find its cause in the source code. Bug localization can be helped by a tool that ranks all source files according to how likely they include the bug. This problem was thoroughly examined by numerous scientists. We introduce a novel adaptive bug localization algorithm. The concept behind it is based on new feature weighting approaches and an adaptive selection algorithm utilizing pointwise learn-to-rank method. The algorithm is evaluated on publicly available datasets, and is competitive in terms of accuracy and required computational resources compared to state-of-the-art. Additionally, to improve reproducibility we provide extended datasets that include computed features and partial steps, and we also provide the source code.
C1 [Fejzer, Mikolaj; Narebski, Jakub] Nicolaus Copernicus Univ Torun, Fac Math & Comp Sci, PL-87100 Torun, Poland.
   [Przymus, Piotr] Nicolaus Copernicus Univ Torun, PL-87100 Torun, Poland.
   [Stencel, Krzysztof] Univ Warsaw, PL-00927 Warsaw, Poland.
C3 Nicolaus Copernicus University; Nicolaus Copernicus University;
   University of Warsaw
RP Przymus, P (corresponding author), Nicolaus Copernicus Univ Torun, PL-87100 Torun, Poland.
EM mfejzer@mat.umk.pl; jnareb@mat.umk.pl; piotr.przymus@mat.umk.pl;
   stencel@mimuw.edu.pl
RI Stencel, Krzysztof/H-9940-2014; Przymus, Piotr/D-5273-2014
OI Stencel, Krzysztof/0000-0001-6356-4872; Fejzer,
   Mikolaj/0000-0003-1496-2289; Przymus, Piotr/0000-0001-9548-2388;
   Narebski, Jakub/0000-0002-3296-3915
FU Polish National Agency for Academic Exchange under a project name Open
   NCU
FX This work was supported in part by the Polish National Agency for
   Academic Exchange under a project name Open NCU.
CR Lam AN, 2015, IEEE INT CONF AUTOM, P476, DOI 10.1109/ASE.2015.73
   Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   [Anonymous], 2006, P ACMSIGKDD INT C KN
   [Anonymous], 2002, NLTK: The natural language toolkit. In Proceedings of the ACL-02 workshop on effective tools and methodologies for teaching natural language processing and computational linguistics-volume 1 (pp. 63-70), DOI DOI 10.48550/ARXIV.CS/0205028
   Antoniol G, 2005, PROC IEEE INT CONF S, P357
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   Dang V, 2018, LEMUR PROJECT WIKI R
   Dilshener T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P286, DOI [10.1109/MSR.2016.037, 10.1145/2901739.2901775]
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Garfinkel S., 2005, WIRED NEWS
   Geurts P, 2006, MACH LEARN, V63, P3, DOI 10.1007/s10994-006-6226-1
   Guyon I., 2003, Journal of Machine Learning Research, V3, P1157, DOI 10.1162/153244303322753616
   Hagberg A. A., 2008, EXPLORING NETWORK ST, P11, DOI DOI 10.1016/J.JELECTROCARD.2010.09.003
   Hofmann H, 2017, J COMPUT GRAPH STAT, V26, P469, DOI 10.1080/10618600.2017.1305277
   Huo X., 2016, IJCAI, P1606
   Jiang Y, 2015, 2015 INTERNATIONAL SYMPOSIUM ON BIOELECTRONICS AND BIOINFORMATICS (ISBB), P1, DOI 10.1109/ISBB.2015.7344908
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P1597, DOI 10.1109/TSE.2013.24
   Kochhar Pavneet Singh, 2014, P 2 ACM IEEE INT C, P803, DOI DOI 10.1145/2642937.2642997
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Levene H., 1960, ESSAYS HONOR HAROLD
   McKinney Wes, 2011, Python for high performance and scientific computing, V14, P1, DOI DOI 10.1002/MMCE.20381
   Meffert K, 2016, JGAP LIB
   Mills C, 2018, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSME.2018.00046
   Moreno L, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P567, DOI 10.1145/2786805.2786859
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nash M. S, 2001, TECHNOMETRICS, V43
   Oliphant T. E., 2006, A guide to NumPy
   Owen AB, 2007, CONTEMP MATH, V443, P59
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Ross BC, 2014, PLOS ONE, V9, DOI 10.1371/journal.pone.0087357
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Shi ZD, 2018, APPL SOFT COMPUT, V62, P636, DOI 10.1016/j.asoc.2017.10.048
   Smola AJ, 2004, STAT COMPUT, V14, P199, DOI 10.1023/B:STCO.0000035301.49549.88
   Trevor H., 2009, The Elements of Statistical Learning: Data Mining, Inference, and Prediction
   Wang SW, 2016, J SOFTW-EVOL PROC, V28, P921, DOI 10.1002/smr.1801
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Ye X, 2016, IEEE T SOFTWARE ENG, V42, P379, DOI 10.1109/TSE.2015.2479232
   Youm KC, 2017, INFORM SOFTWARE TECH, V82, P177, DOI 10.1016/j.infsof.2016.11.002
   Zhang J, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-014-5241-2
   Zhang Tong, 2004, P 21 INT C MACH LEAR, P116, DOI DOI 10.1145/1015330.1015332
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zhu J, 2009, STAT INTERFACE, V2, P349
NR 47
TC 3
Z9 3
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 8
PY 2021
VL 48
IS 7
BP 2557
EP 2569
DI 10.1109/TSE.2021.3064447
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5YS
UT WOS:000825972800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Huang, Y
   Jiang, JY
   Luo, XP
   Chen, XP
   Zheng, ZB
   Jia, N
   Huang, G
AF Huang, Yuan
   Jiang, Jinyu
   Luo, Xiapu
   Chen, Xiangping
   Zheng, Zibin
   Jia, Nan
   Huang, Gang
TI Change-Patterns Mapping: A Boosting Way for Change Impact Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Task analysis; Tools; Couplings; Boosting; Software systems;
   Licenses; Change impact analysis; change-patterns; coupling dependency;
   boosting method
ID SOURCE CODE; LOCATION; RANKING
AB Change impact analysis (CIA) is a specialized process of program comprehension that investigates the ripple effects of a code change in a software system. In this paper, we present a boosting way for change impact analysis via mapping the historical change-patterns to current CIA task in a cross-project scenario. The change-patterns reflect the coupling dependencies between changed entities in a change set. A traditional CIA tool (such as ImpactMiner) outputs an initial impact set for a starting entity. To boost the traditional CIA tool, our approach retrieves an equivalent entity from various historical change sets for the starting entity. Then, the change-patterns between the equivalent entity and the rest of entities in the change set are mapped to the CIA task at hand. For current CIA task, if an entity in the initial impact set involves the similar change-pattern with the starting entity when comparing with the mapped change-pattern, we will reward the impacted confidence of the entity. Accuracy improvements are observed in the experiments when applying our boosting method to three famous CIA tools, i.e., ImpactMiner, JRipples and ROSE.
C1 [Huang, Yuan; Zheng, Zibin] Sun Yat Sen Univ, Sch Software Engn, Guangzhou 510006, Peoples R China.
   [Jiang, Jinyu] Sun Yat Sen Univ, Sch Comp Sci & Engn, Guangzhou 510006, Peoples R China.
   [Chen, Xiangping] Sun Yat Sen Univ, Sch Commun & Design, Guangdong Key Lab Big Data Anal & Simulat Publ Op, Guangzhou 510006, Peoples R China.
   [Luo, Xiapu] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
   [Jia, Nan] Hebei GEO Univ, Sch Informat Engn, Shijiazhuang 050031, Hebei, Peoples R China.
   [Huang, Gang] Peking Univ, Minist Educ, Key Lab High Confidence Software Technol, Beijing 100871, Peoples R China.
C3 Sun Yat Sen University; Sun Yat Sen University; Sun Yat Sen University;
   Hong Kong Polytechnic University; Hebei GEO University; Peking
   University
RP Chen, XP (corresponding author), Sun Yat Sen Univ, Sch Commun & Design, Guangdong Key Lab Big Data Anal & Simulat Publ Op, Guangzhou 510006, Peoples R China.
EM huangyjn@gmail.com; exitzpie@163.com; csxluo@comp.polyu.edu.hk;
   chenxp8@mail.sysu.edu.cn; zhzibin@mail.sysu.edu.cn;
   jianan_0101@hgu.edu.cn; hg@pku.edu.cn
RI Zheng, Zibin/E-3024-2014
OI Zheng, Zibin/0000-0002-7878-4330; chen, xiang ping/0000-0001-8234-3186
FU Key Area Research and Development Program of Guang dong Province
   [2020B010164002]; National Natural Science Foundation of China
   [61725201, 61902441, 61722214]; Guangdong Basic and Applied Basic
   Research Foundation [2020A1515010973]; China Postdoctoral Sc ience
   Foundation [2018M640855]; Hong Kong RGC Project [152239/18E];
   Fundamental Research Funds for the Central Universities [20wkpy06,
   20lgpy129]; Beijing Outstanding Young Scientist Program
   [BJJWZYJH01201910001004]
FX This work was supported by the Key Area Research and Development Program
   of Guang dong Province under Grant 2020B010164002, the National Natural
   Science Foundation of China under Grants 61902441 and 61722214,
   Guangdong Basic and Applied Basic Research Foundation under Grant
   2020A1515010973, China Postdoctoral Sc ience Foundation (2018M640855),
   Hong Kong RGC Project No. 152239/18E, the Fundamental Research Funds for
   the Central Universities under Grant 20wkpy06, 20lgpy129, the National
   Natural Science Foundation of China under Grant 61725201, and the
   Beijing Outstanding Young Scientist Program under Grant
   BJJWZYJH01201910001004.
CR Abdeen H, 2015, INFORM SOFTWARE TECH, V67, P220, DOI 10.1016/j.infsof.2015.07.007
   Acharya M., 2012, PROC ACM SIGSOFT 20
   [Anonymous], 2010, IEEE INT C SOFTWARE
   [Anonymous], 2006, P 2006 INT WORKSHOP
   Apiwattanapong T, 2005, PROC INT CONF SOFTW, P432
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Barnett M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P134, DOI 10.1109/ICSE.2015.35
   Bassett B, 2013, CONF PROC INT SYMP C, P133, DOI 10.1109/ICPC.2013.6613841
   Binkley D, 2015, J SYST SOFTWARE, V101, P30, DOI 10.1016/j.jss.2014.11.013
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   Briand LC, 2002, PROC IEEE INT CONF S, P252, DOI 10.1109/ICSM.2002.1167775
   Buckner J, 2005, PROG COMPREHEN, P149, DOI 10.1109/WPC.2005.22
   Cai H., 2014, ASE 2014 P 29 ACMIEE, P343
   Cai HP, 2016, IEEE INT CONF AUTOM, P344, DOI 10.1145/2970276.2970352
   Canfora G, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P259
   Ceccarelli M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P163, DOI 10.1145/1810295.1810320
   Chochlov M, 2017, INFORM SOFTWARE TECH, V88, P110, DOI 10.1016/j.infsof.2017.04.003
   De Lucia A, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P21, DOI 10.1109/FOSM.2008.4659245
   Díaz J, 2011, LECT NOTES COMPUT SC, V6903, P114, DOI 10.1007/978-3-642-23798-0_12
   Dit B, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P540, DOI 10.1145/2591062.2591064
   Dit B, 2013, IEEE WORK CONF MIN S, P131, DOI 10.1109/MSR.2013.6624019
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Fowler M, 2004, INVERSION CONTROL CO
   Freecol, 2002, US
   Gethers M, 2012, PROC INT CONF SOFTW, P430, DOI 10.1109/ICSE.2012.6227172
   Hsqldb, 2001, US
   Huang L, 2007, SERA 2007: 5TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT, AND APPLICATIONS, PROCEEDINGS, P374, DOI 10.1109/SERA.2007.46
   Huang Y, 2022, IEEE T SOFTWARE ENG, V48, P1463, DOI 10.1109/TSE.2020.3021902
   Huang Y, 2020, J COMPUT SCI TECH-CH, V35, P1258, DOI 10.1007/s11390-020-0496-0
   Huang Y, 2020, IEEE T RELIAB, V69, P88, DOI 10.1109/TR.2019.2931725
   Huang Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P770, DOI 10.1145/3236024.3264841
   Huang Y, 2017, INT SYMP EMP SOFTWAR, P414, DOI 10.1109/ESEM.2017.56
   Huang Y, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1859
   Jaccard P., 1912, New Phytologist, V11, P37, DOI [10.1111/j.1469-8137.1912.tb05611.x, DOI 10.1111/J.1469-8137.1912.TB05611.X]
   Jamwiki, 2006, US
   jedit, 1999, US
   Jhotdraw, 2000, US
   Kagdi H., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P119, DOI 10.1109/WCRE.2010.21
   Kagdi H, 2013, EMPIR SOFTW ENG, V18, P933, DOI 10.1007/s10664-012-9233-9
   Law J, 2003, PROC INT CONF SOFTW, P308, DOI 10.1109/ICSE.2003.1201210
   Liu Dapeng, 2007, P 22 IEEEACM INT C A, P234, DOI 10.1145/1321631.1321667
   Makagiga, 2005, US
   Nasseri E, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P269, DOI 10.1109/ASWEC.2008.78
   Omegat, 2002, US
   Park S, 2011, J SYST SOFTWARE, V84, P528, DOI 10.1016/j.jss.2010.11.919
   Petrenko M, 2009, INT C PROGRAM COMPRE, P10, DOI 10.1109/ICPC.2009.5090023
   Pmd, 2017, US
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Razzaq A, 2020, EMPIR SOFTW ENG, V25, P266, DOI 10.1007/s10664-019-09734-5
   Rolfsnes T, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P201, DOI 10.1109/SANER.2016.101
   Scanniello G, 2015, EMPIR SOFTW ENG, V20, P1666, DOI 10.1007/s10664-014-9327-7
   Shaowei Wang, 2011, 2011 18th Working Conference on Reverse Engineering, P92, DOI 10.1109/WCRE.2011.72
   Torchiano M., 2010, P ACM IEEE INT S EMP
   Tsantalis N, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P329
   Wilde N, 2003, J SYST SOFTWARE, V65, P105, DOI [10.1016/S0164-1212(02)00052-3, 10.1016/s0164-1212(02)00052-3]
   Yamashita A, 2013, J SYST SOFTWARE, V86, P2639, DOI 10.1016/j.jss.2013.05.007
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Ye X, 2016, IEEE T SOFTWARE ENG, V42, P379, DOI 10.1109/TSE.2015.2479232
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zhang Jie, 2014, P 29 ACM IEEE INT C, P701, DOI DOI 10.1145/2642937.2642994
   Zhang T, 2016, COMPUT J, V59, P741, DOI 10.1093/comjnl/bxv114
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 63
TC 4
Z9 4
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 16
PY 2021
VL 48
IS 7
BP 2376
EP 2398
DI 10.1109/TSE.2021.3059481
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5ZA
UT WOS:000825973600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Chen, JJ
   Wang, GC
   Hao, D
   Xiong, YF
   Zhang, HY
   Zhang, L
   Xie, B
AF Chen, Junjie
   Wang, Guancheng
   Hao, Dan
   Xiong, Yingfei
   Zhang, Hongyu
   Zhang, Lu
   Xie, Bing
TI Coverage Prediction for Accelerating Compiler Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Compiler testing; test prioritization; machine learning
ID PRIORITIZATION
AB Compilers are one of the most fundamental software systems. Compiler testing is important for assuring the quality of compilers. Due to the crucial role of compilers, they have to be well tested. Therefore, automated compiler testing techniques (those based on randomly generated programs) tend to run a large number of test programs (which are test inputs of compilers). The cost for compilation and execution for these test programs is significant. These techniques can take a long period of testing time to detect a relatively small number of compiler bugs. That may cause many practical problems, e.g., bringing a lot of costs including time costs and financial costs, and delaying the development/release cycle. Recently, some approaches have been proposed to accelerate compiler testing by executing test programs that are more likely to trigger compiler bugs earlier according to some criteria. However, these approaches ignore an important aspect in compiler testing: different test programs may have similar test capabilities (i.e., testing similar functionalities of a compiler, even detecting the same compiler bug), which may largely discount their acceleration effectiveness if the test programs with similar test capabilities are executed all the time. Test coverage is a proper approximation to help distinguish them, but collecting coverage dynamically is infeasible in compiler testing since most test programs are generated on the fly by automatic test-generation tools like Csmith. In this paper, we propose the first method to predict test coverage statically for compilers, and then propose to prioritize test programs by clustering them according to the predicted coverage information. The novel approach to accelerating compiler testing through coverage prediction is called COP (short for COverage Prediction). Our evaluation on GCC and LLVM demonstrates that COP significantly accelerates compiler testing, achieving an average of 51.01 percent speedup in test execution time on an existing dataset including three old release versions of the compilers and achieving an average of 68.74 percent speedup on a new dataset including 12 latest release versions. Moreover, COP outperforms the state-of-the-art acceleration approach significantly by improving $17.16\%\sim 82.51\%$17.16%similar to 82.51% speedups in different settings on average.
C1 [Chen, Junjie; Wang, Guancheng; Hao, Dan; Xiong, Yingfei; Zhang, Lu; Xie, Bing] Peking Univ, Inst Software, EECS, Beijing 100871, Peoples R China.
   [Chen, Junjie; Wang, Guancheng; Hao, Dan; Xiong, Yingfei; Zhang, Lu; Xie, Bing] Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing 100871, Peoples R China.
   [Zhang, Hongyu] Univ Newcastle, Newcastle, NSW 2308, Australia.
C3 Peking University; Peking University; University of Newcastle
RP Chen, JJ; Hao, D (corresponding author), Peking Univ, Inst Software, EECS, Beijing 100871, Peoples R China.
EM chenjunjie@pku.edu.cn; guancheng.wang@pku.edu.cn; haodan@pku.edu.cn;
   xiongyf@pku.edu.cn; hongyu.zhang@newcastle.edu.au; zhanglucs@pku.edu.cn;
   xiebing@pku.edu.cn
RI zhang, hongyu/ABC-3702-2021; Chen, Junjie/ABE-8685-2020; Hao,
   Dan/A-8600-2015
OI zhang, hongyu/0000-0002-3063-9425; Chen, Junjie/0000-0003-4509-2271;
   Wang, Guancheng/0000-0002-4338-8813; Hao, Dan/0000-0001-8295-303X
FU National Key Research and Development Program [2017YFB1001803]; National
   Natural Science Foundation of China [61672047, 61529201, 61872008,
   61828201, 61672045, 61861130363]
FX This work is supported by the National Key Research and Development
   Program 2017YFB1001803, and the National Natural Science Foundation of
   China under Grant No. 61672047, 61529201, 61872008, 61828201, 61672045,
   61861130363.
CR [Anonymous], 2000, Icml, DOI DOI 10.1007/3-540-44491-2_3
   [Anonymous], 2016, P 25 INT S SOFTW TES, DOI DOI 10.1145/2931037.2931056
   [Anonymous], 1990, Political Analysis, DOI [10.1093/pan/2.1.173, DOI 10.1093/PAN/2.1.173]
   [Anonymous], 1962, P SPRING JOINT COMP, DOI DOI 10.1145/1460833.1460869
   Boujarwah AS, 1997, INFORM SOFTWARE TECH, V39, P617, DOI 10.1016/S0950-5849(97)00017-7
   Boussaa M, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P335, DOI 10.1109/QRS.2016.45
   Busjaeger B, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P975, DOI 10.1145/2950290.2983954
   Carlson Ryan, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P382, DOI 10.1109/ICSM.2011.6080805
   Chae HS, 2011, J SYST SOFTWARE, V84, P2053, DOI 10.1016/j.jss.2011.04.023
   Chen J., 2018, P 32 EUR C OBJ OR PR
   Chen J., 2018, DAGSTUHL REPORTS, V7, P50
   Chen JJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P656, DOI 10.1145/3236024.3236053
   Chen JJ, 2018, PROC IEEE ACM INT C, P472, DOI 10.1145/3183440.3183456
   Chen JJ, 2017, PROC INT CONF SOFTW, P700, DOI 10.1109/ICSE.2017.70
   Chen JJ, 2017, IEEE INT CONF SOFTW, P418, DOI 10.1109/ICST.2017.45
   Chen JJ, 2016, PROC INT CONF SOFTW, P180, DOI 10.1145/2884781.2884878
   Chen JJ, 2016, IEEE INT CONF SOFTW, P266, DOI 10.1109/ICST.2016.19
   Chen Y, 2013, ACM SIGPLAN NOTICES, V48, P197, DOI 10.1145/2499370.2462173
   Chen YT, 2016, ACM SIGPLAN NOTICES, V51, P85, DOI [10.1145/2980983.2908095, 10.1145/2908080.2908095]
   Dai JH, 2013, APPL SOFT COMPUT, V13, P211, DOI 10.1016/j.asoc.2012.07.029
   Do Hyunsook., 2008, Proceedings of the International Symposium on Software Testing and Analysis (ISSTA), P51
   Do Hyunsook., 2006, P ACM SIGSOFT INT S, P141, DOI DOI 10.1145/1181775.1181793
   Donaldson AF, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133917
   Donaldson AF, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET), P44, DOI [10.1109/MET.2016.016, 10.1145/2896971.2896978]
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   Fu WH, 2017, IEICE T INF SYST, VE100D, P1218, DOI 10.1587/transinf.2016EDP7356
   Groce A., 2012, P INT S SOFTW TEST A, P78, DOI DOI 10.1145/2338965.2336763
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   HANFORD KV, 1970, IBM SYST J, V9, P242, DOI 10.1147/sj.94.0242
   Hartigan J. A., 1979, Applied Statistics, V28, P100, DOI 10.2307/2346830
   Hou SS, 2008, PROC IEEE INT CONF S, P257, DOI 10.1109/ICSM.2008.4658074
   Jiang B, 2015, J SYST SOFTWARE, V105, P91, DOI 10.1016/j.jss.2015.03.066
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Jones JA, 2001, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSM.2001.972715
   Kim JM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P119, DOI 10.1109/ICSE.2002.1007961
   Korel B, 2005, PROC IEEE INT CONF S, P559
   Kossatchev AS, 2005, PROGRAM COMPUT SOFT+, V31, P10, DOI 10.1007/s11086-005-0002-z
   Le V, 2015, ACM SIGPLAN NOTICES, V50, P386, DOI [10.1145/2814270.2814319, 10.1145/2858965.2814319]
   Le Vu, 2015, P 2015 INT S SOFTW T, P327, DOI DOI 10.1145/2771783.2771785
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Lidbury C, 2015, ACM SIGPLAN NOTICES, V50, P65, DOI [10.1145/2737924.2737986, 10.1145/2813885.2737986]
   Lindig C., 2005, AADEBUG, P3
   Lipowski A, 2012, PHYSICA A, V391, P2193, DOI 10.1016/j.physa.2011.12.004
   Liu WL, 2007, INT C COMP AID DES C, P252
   Lou Y., 2018, ADV COMPUTERS
   MALISHEVSKY AG, 2006, TRUNLCSE20060004 DEP
   McKeeman William M., 1998, DIGIT TECH J, V10, P100
   Mei H, 2018, SCI CHINA INFORM SCI, V61, DOI 10.1007/s11432-017-9355-3
   Mei H, 2012, IEEE T SOFTWARE ENG, V38, P1258, DOI 10.1109/TSE.2011.106
   Mei L., 2009, P 18 INT C WORLD WID, P901, DOI DOI 10.1145/1526709.1526830
   Nagai E., 2013, Workshop on Synthesis And System Integration of Mixed Information Technologies (SASIMI 2013), P88
   Nagai E., 2012, WORKSH SYNTH SYST IN, P48
   Namin AS, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P57
   Palka Michal H, 2011, P 6 INT WORKSH AUT S, P91, DOI DOI 10.1145/1982595.1982615
   Park H, 2008, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON INFORMATION SECURITY AND ASSURANCE, P32
   Pflanzer M., 2016, P 4 INT WORKSH OPENC, P1, DOI DOI 10.1145/2909437.2909439
   Regehr J, 2012, ACM SIGPLAN NOTICES, V47, P335, DOI 10.1145/2345156.2254104
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Spieker H, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P12, DOI 10.1145/3092703.3092709
   Steel RGD., 1962, Inc Stat, V11, P170, DOI [10.1002/bimj.19620040313, DOI 10.1002/BIMJ.19620040313]
   Sun CN, 2016, PROC INT CONF SOFTW, P203, DOI 10.1145/2884781.2884879
   Sun CN, 2016, ACM SIGPLAN NOTICES, V51, P849, DOI 10.1145/3022671.2984038
   Sun Chengnian, 2016, P 25 INT S SOFTW TES, P294
   Tao QM, 2010, ASIA PAC SOFWR ENG, P270, DOI 10.1109/APSEC.2010.39
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P216, DOI [10.1145/2666356.2594334, 10.1145/2594291.2594334]
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Wang S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P523, DOI 10.1145/3106237.3106258
   Willmott CJ, 2005, CLIMATE RES, V30, P79, DOI 10.3354/cr030079
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Woo G, 2007, LECT NOTES COMPUT SC, V4498, P100
   Xu R, 2005, IEEE T NEURAL NETWOR, V16, P645, DOI 10.1109/TNN.2005.845141
   Yang XJ, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P283
   Yoo S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P201
   Zhang LM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P192, DOI 10.1109/ICSE.2013.6606565
   Zhang L, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P213
   Zhang QR, 2017, ACM SIGPLAN NOTICES, V52, P347, DOI [10.1145/3062341.3062379, 10.1145/3140587.3062379]
   Zhang Y, 2019, SCI CHINA INFORM SCI, V62, DOI 10.1007/s11432-017-9415-3
   Zhao C, 2009, 2009 ICSE WORKSHOP ON AUTOMATION OF SOFTWARE TEST, P36, DOI 10.1109/IWAST.2009.5069039
   Zhong H, 2008, INFORM SOFTWARE TECH, V50, P534, DOI 10.1016/j.infsof.2007.06.003
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 85
TC 21
Z9 21
U1 1
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2021
VL 47
IS 2
BP 261
EP 278
DI 10.1109/TSE.2018.2889771
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QG7HE
UT WOS:000617753400003
DA 2024-07-18
ER

PT J
AU Yin, LZ
   Dong, W
   Liu, WW
   Wang, J
AF Yin, Liangze
   Dong, Wei
   Liu, Wanwei
   Wang, Ji
TI On Scheduling Constraint Abstraction for Multi-Threaded Program
   Verification
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Instruction sets; Electrooculography; Encoding; Concurrent computing;
   Programming; Model checking; Tools; Multi-threaded program; bounded
   model checking; scheduling constraint; event order graph
ID MODEL CHECKING; CONCURRENT
AB Bounded model checking is among the most efficient techniques for the automated verification of concurrent programs. However, due to the nondeterministic thread interleavings, a large and complex formula is usually required to give an exact encoding of all possible behaviors, which significantly limits the scalability. Observing that the large formula is usually dominated by the exact encoding of the scheduling constraint, this paper proposes a novel scheduling constraint based abstraction refinement method for multi-threaded C program verification. Our method is both efficient in practice and complete in theory, which is challenging for existing techniques. To achieve this, we first proposed an effective and powerful technique which works well for nearly all benchmarks we evaluated. We have proposed the notion of Event Order Graph (EOG), and have devised two graph-based algorithms over EOG for counterexample validation and refinement generation, which can often obtain a small yet effective refinement constraint. Then, to ensure completeness, our method was enhanced with two constraint-based algorithms for counterexample validation and refinement generation. Experimental results on SV-COMP 2017 benchmarks and two real-world server systems indicate that our method is promising and significantly outperforms the state-of-the-art tools.
C1 [Yin, Liangze; Dong, Wei; Liu, Wanwei] Natl Univ Def Technol, Sch Comp, Lab Software Engn Complex Syst, Changsha 410073, Hunan, Peoples R China.
   [Wang, Ji] Natl Univ Def Technol, Sch Comp, State Key Lab High Performance Comp, Lab Software Engn Complex Syst, Changsha 410073, Hunan, Peoples R China.
C3 National University of Defense Technology - China; National University
   of Defense Technology - China
RP Dong, W (corresponding author), Natl Univ Def Technol, Sch Comp, Lab Software Engn Complex Syst, Changsha 410073, Hunan, Peoples R China.; Wang, J (corresponding author), Natl Univ Def Technol, Sch Comp, State Key Lab High Performance Comp, Lab Software Engn Complex Syst, Changsha 410073, Hunan, Peoples R China.
EM yinliangze@163.com; wdong@nudt.edu.cn; wwliu@nudt.edu.cn; wj@nudt.edu.cn
OI Dong, Wei/0000-0002-8033-7943; Liu, Wanwei/0000-0002-2315-1704
FU National Nature Science Foundation of China [61690203, 61532007];
   National Key R&D program of China [2017YFB1001802]
FX This work was funded by the National Nature Science Foundation of China
   (No. 61690203, No. 61532007); and the National Key R&D program of China
   (No. 2017YFB1001802).
CR Abd Elkader K, 2016, LECT NOTES COMPUT SC, V9779, P329, DOI 10.1007/978-3-319-41528-4_18
   Elkader KA, 2015, LECT NOTES COMPUT SC, V9109, P23, DOI 10.1007/978-3-319-19249-9_3
   Abdulla P, 2014, ACM SIGPLAN NOTICES, V49, P373, DOI 10.1145/2535838.2535845
   Adve SV, 1996, COMPUTER, V29, P66, DOI 10.1109/2.546611
   Alglave Jade, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P141, DOI 10.1007/978-3-642-39799-8_9
   [Anonymous], P 35 ACM SIGPLAN C P
   Barnat Jiri, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P863, DOI 10.1007/978-3-642-39799-8_60
   Bergan T, 2013, ACM SIGPLAN NOTICES, V48, P677, DOI [10.1145/2509136.2509508, 10.1145/2544173.2509508]
   Beyer D, 2017, LECT NOTES COMPUT SC, V10206, P331, DOI 10.1007/978-3-662-54580-5_20
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   Bouajjani A, 2015, ACM SIGPLAN NOTICES, V50, P651, DOI [10.1145/2775051.2677002, 10.1145/2676726.2677002]
   Coons KE, 2013, ACM SIGPLAN NOTICES, V48, P833, DOI [10.1145/2544173.2509556, 10.1145/2509136.2509556]
   Cordeiro L, 2012, LECT NOTES COMPUT SC, V7214, P534, DOI 10.1007/978-3-642-28756-5_42
   Dan A, 2015, LECT NOTES COMPUT SC, V8931, P449
   Dan AM, 2013, LECT NOTES COMPUT SC, V7935, P84, DOI 10.1007/978-3-642-38856-9_7
   Deligiannis P, 2015, IEEE INT CONF AUTOM, P166, DOI 10.1109/ASE.2015.30
   Dinsdale-Young T, 2013, ACM SIGPLAN NOTICES, V48, P287, DOI 10.1145/2480359.2429104
   Farzan Azadeh, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P191, DOI 10.1007/978-3-642-39799-8_12
   Farzan A, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P297
   Gavran I., 2015, LEIBNIZ INT P INFORM, V42, P483
   Günther H, 2016, LECT NOTES COMPUT SC, V9636, P954, DOI 10.1007/978-3-662-49674-9_69
   Gupta A, 2011, CAH ETUD AFR, P415, DOI 10.4000/etudesafricaines.16712
   Gupta A, 2015, ACM SIGPLAN NOTICES, V50, P433, DOI [10.1145/2676726.2677008, 10.1145/2775051.2677008]
   Gupta A, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P331, DOI 10.1145/1926385.1926424
   Huang A, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P686, DOI 10.1145/2889160.2891042
   Huang J, 2015, ACM SIGPLAN NOTICES, V50, P165, DOI [10.1145/2737924.2737975, 10.1145/2813885.2737975]
   Inverso O, 2014, LECT NOTES COMPUT SC, V8559, P585, DOI 10.1007/978-3-319-08867-9_39
   Khoshnood Sepideh, 2015, P 2015 INT S SOFTW E, P165
   Kusano M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P799, DOI 10.1145/2950290.2950291
   Lahav O, 2015, LECT NOTES COMPUT SC, V9135, P311, DOI 10.1007/978-3-662-47666-6_25
   Machado N, 2015, ACM SIGPLAN NOTICES, V50, P586, DOI [10.1145/2813885.2737973, 10.1145/2737924.2737973]
   Malkis A, 2010, LECT NOTES COMPUT SC, V6337, P356, DOI 10.1007/978-3-642-15769-1_22
   Popeea C, 2014, 2014 FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD), P187, DOI 10.1109/FMCAD.2014.6987612
   Popeea C, 2013, LECT NOTES COMPUT SC, V7795, P633, DOI 10.1007/978-3-642-36742-7_51
   Rakamaric Z, 2014, LECT NOTES COMPUT SC, V8559, P106, DOI 10.1007/978-3-319-08867-9_7
   Sinha N, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P423, DOI 10.1145/1926385.1926433
   Thomson P, 2014, ACM SIGPLAN NOTICES, V49, P15, DOI [10.1145/2692916.2555260, 10.1145/2555243.2555260]
   Tomasco Ermenegildo, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P551, DOI 10.1007/978-3-662-46681-0_52
   Tomasco E, 2016, LECT NOTES COMPUT SC, V9636, P938, DOI 10.1007/978-3-662-49674-9_65
   Duong TT, 2017, INT CONF SYST SCI EN, P375, DOI 10.1109/ICSSE.2017.8030900
   Wu JY, 2012, ACM SIGPLAN NOTICES, V47, P205, DOI 10.1145/2345156.2254090
   Zhang NL, 2015, ACM SIGPLAN NOTICES, V50, P250, DOI [10.1145/2813885.2737956, 10.1145/2737924.2737956]
   Zhang Xin., 2014, PLDI, P27
   Zheng MC, 2015, IEEE INT CONF AUTOM, P830, DOI 10.1109/ASE.2015.99
NR 44
TC 18
Z9 19
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2020
VL 46
IS 5
BP 549
EP 565
DI 10.1109/TSE.2018.2864122
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA LS2LR
UT WOS:000536221400004
DA 2024-07-18
ER

PT J
AU Kalliamvakou, E
   Bird, C
   Zimmermann, T
   Begel, A
   DeLine, R
   German, DM
AF Kalliamvakou, Eirini
   Bird, Christian
   Zimmermann, Thomas
   Begel, Andrew
   DeLine, Robert
   German, Daniel M.
TI What Makes a Great Manager of Software Engineers?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software engineering management; empirical studies; software companies
ID PERSON-ORGANIZATION FIT; TRANSFORMATIONAL LEADERSHIP; PSYCHOLOGICAL
   EMPOWERMENT; PERFORMANCE; MOTIVATION; PRODUCTIVITY; WORKPLACE; DESIGN;
   WORK
AB Having great managers is as critical to success as having a good team or organization. In general, a great manager is seen as fuelling the team they manage, enabling it to use its full potential. Though software engineering research studies factors that may affect the performance and productivity of software engineers and teams (like tools and skills), it has overlooked the software engineering manager. The software industry's growth and change in the last decades is creating a need for a domain-specific view of management. On the one hand, experts are questioning how the abundant work in management applies to software engineering. On the other hand, practitioners are looking to researchers for evidence-based guidance on how to manage software teams. We conducted a mixed methods empirical study of software engineering management at Microsoft to investigate what manager attributes developers and engineering managers perceive important and why. We present a conceptual framework of manager attributes, and find that technical skills are not the sign of greatness for an engineering manager. Through statistical analysis we identify how engineers and managers relate in their views, and how software engineering differs from other knowledge work groups in its perceptions about what makes great managers. We present strategies for putting the attributes to use, discuss implications for research and practice, and offer avenues for further work.
C1 [Kalliamvakou, Eirini; German, Daniel M.] Univ Victoria, Dept Comp Sci, Victoria, BC V8W 2Y2, Canada.
   [Bird, Christian; Zimmermann, Thomas; Begel, Andrew; DeLine, Robert] Microsoft Corportation, Microsoft Res, Redmond, WA 98052 USA.
C3 University of Victoria; Microsoft
RP Kalliamvakou, E (corresponding author), Univ Victoria, Dept Comp Sci, Victoria, BC V8W 2Y2, Canada.
EM ikaliam@uvic.ca; cbird@microsoft.com; tzimmer@microsoft.com;
   Andrew.Begel@microsoft.com; rdeline@microsoft.com; dmg@uvic.ca
RI Begel, Andrew/AAP-9630-2020; Zimmermann, Thomas/C-4377-2019
OI Begel, Andrew/0000-0002-7425-4818; Zimmermann,
   Thomas/0000-0003-4905-1469
CR [Anonymous], GREAT MANAGERS CAN F
   [Anonymous], 1988, Statistical power analysis for the behavioral sciences
   [Anonymous], 2016, WHAT GOOGLE LEARNED
   [Anonymous], 8 STUPIDEST MANAGEME
   [Anonymous], 2008, Changing Software Development: Learning to Be Agile
   [Anonymous], 1919, ORG FOR WORK
   [Anonymous], 2015, QUALITATIVE RES GUID, DOI DOI 10.1177/0004867415595287
   [Anonymous], 1988, PRINCIPLES SOFTWARE
   [Anonymous], LEADERS NEED DIFFERE
   [Anonymous], 2015, CODING MANUAL QUALIT
   [Anonymous], 2001, QUALITATIVE EVALUATI
   [Anonymous], PROTOTYPE FUTURE KNO
   [Anonymous], 2005, IEEE ENG MANAG REV
   [Anonymous], PERCEPTION IS REALIT
   [Anonymous], MANAGING TECH TEAMS
   [Anonymous], 2005, P 11 IEEE INT SOFTW
   [Anonymous], J HUMAN RESOURCE MAN
   [Anonymous], WHY GREAT MANAGERS A
   [Anonymous], HARVARD BUS REV BLOG
   [Anonymous], MANAGING HUMANS BITI
   [Anonymous], HARVARD BUS REV
   Artto K, 2009, INT J PROJ MANAG, V27, P1, DOI 10.1016/j.ijproman.2007.10.007
   Artz BM, 2017, ILR REV, V70, P419, DOI 10.1177/0019793916650451
   Avolio BJ, 2004, J ORGAN BEHAV, V25, P951, DOI 10.1002/job.283
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Begel A, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P1, DOI 10.1109/CHASE.2009.5071401
   Benson Suzanne G, 2003, J Nurs Manag, V11, P315, DOI 10.1046/j.1365-2834.2003.00409.x
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Brace I., 2018, Questionnaire design: How to plan, structure and write survey material for effective market research
   BROWN SP, 1993, J MARKETING RES, V30, P63, DOI 10.2307/3172514
   Cable DM, 1996, ORGAN BEHAV HUM DEC, V67, P294, DOI 10.1006/obhd.1996.0081
   Charette R. N., 1989, SOFTWARE ENG RISK AN
   Coupe RT, 1996, J INFORM TECHNOL, V11, P173, DOI 10.1080/026839696345379
   Crainer S., 2000, The Management century: A Critical review of 20th century thought practice
   Csikszentmihalyi M., 1991, Flow: The Psychology of Optimal Experience, DOI DOI 10.5465/AMR.1991.4279513
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Dagenais B., 2010, Proc. of the ICSE 10, P275, DOI DOI 10.1145/1806799.1806842
   DeMarco T., 2013, Peopleware: productive projects and teams
   Drucker P.F., 2007, MANAGEMENT CHALLENGE
   Drucker PF, 1999, CALIF MANAGE REV, V41, P79, DOI 10.2307/41165987
   Dybå T, 2000, IEEE SOFTWARE, V17, P82, DOI 10.1109/52.877872
   Edmondson A, 1999, ADMIN SCI QUART, V44, P350, DOI 10.2307/2666999
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Fitzpatrick BrianW., 2012, Team Geek: A Software Developer's Guide to Working Well with Others
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   Fowler F. J., 2013, Survey research methods
   Franca C., 2014, Motivated software engineers are engaged and focused, while satisfied ones are happy, P32
   Garvin DA, 2013, HARVARD BUS REV, V91, P74
   George G, 1999, J BUS PSYCHOL, V13, P545, DOI 10.1023/A:1022923005165
   Gilbreth Frank H., 1919, Fatigue Study: The Elimination of Humanity's Greatest Unnecessary Waste, A First Step in Motion Study
   Golafshani N., 2003, QUAL REP, V8, P597, DOI DOI 10.46743/2160-3715/2003.1870
   Green GC, 2005, INFORM SOFTWARE TECH, V47, P543, DOI 10.1016/j.infsof.2004.10.004
   Grove A.S., 1985, High output management
   HACKMAN JR, 1976, ORGAN BEHAV HUM PERF, V16, P250, DOI 10.1016/0030-5073(76)90016-7
   HACKMAN JR, 1975, J APPL PSYCHOL, V60, P159, DOI 10.1037/h0076546
   Harter JK, 2003, FLOURISHING: POSITIVE PSYCHOLOGY AND THE LIFE WELL-LIVED, P205, DOI 10.1037/10594-009
   Harter JK, 2002, J APPL PSYCHOL, V87, P268, DOI 10.1037/0021-9010.87.2.268
   Howell A, 2012, INT J HUM RESOUR MAN, V23, P731, DOI 10.1080/09585192.2011.561251
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   Jolliffe I. T., 2002, PRINCIPAL COMPONENT
   Jugdev K., 2001, International Project Management Journal, V7, P36
   Kayworth TR, 2001, J MANAGE INFORM SYST, V18, P7, DOI 10.1080/07421222.2002.11045697
   Kiechel W, 2012, HARVARD BUS REV, V90, P62
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Kristof AL, 1996, PERS PSYCHOL, V49, P1, DOI 10.1111/j.1744-6570.1996.tb01790.x
   Kuper A., 2013, The Social Science Encyclopedia
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Li PL, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P700, DOI 10.1109/ICSE.2015.335
   Litwin M. S., 1995, How to Measure Survey Reliability and Validity, V7
   Lutters WG, 2007, INFORM SOFTWARE TECH, V49, P576, DOI 10.1016/j.infsof.2007.02.013
   Maslow AH, 1943, PSYCHOL REV, V50, P370, DOI 10.1037/h0054346
   McDonald J.H., 2009, HDB BIOL STAT, V2
   McGregor D., 1960, The human side of enterprise, V21
   Menon ST, 2001, APPL PSYCHOL-INT REV, V50, P153, DOI 10.1111/1464-0597.00052
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Miyazaki Y., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P292
   Morrel-Samuels P, 2002, HARVARD BUS REV, V80, P111
   Murray A., 2010, WALL STREET J ESSENT
   O'Connor GC, 2001, J PROD INNOVAT MANAG, V18, P231, DOI 10.1111/1540-5885.1840231
   O'Keefe PA, 2014, J EXP SOC PSYCHOL, V53, P70, DOI 10.1016/j.jesp.2014.02.004
   Oliva R, 2011, J OPER MANAG, V29, P434, DOI 10.1016/j.jom.2010.11.012
   Paul AK, 2003, INT J HUM RESOUR MAN, V14, P1246, DOI 10.1080/0958519032000145648
   Peter L., 1969, The Peter principle: Why things go wrong
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   RAINWATER J, 2002, HERDING CATS PRIMER
   Ruhe G, 2002, LECT NOTES COMPUT SC, V2640, P104
   Ryan RM, 2000, AM PSYCHOL, V55, P68, DOI 10.1037/0003-066X.55.1.68
   Saxena A, 2014, SIGMIS-CPR'14: PROCEEDINGS OF THE 2014 CONFERENCE ON COMPUTERS AND PEOPLE RESEARCH, P25, DOI 10.1145/2599990.2599995
   Schein E.H., 2010, ORG CULTURE LEADERSH, V2
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Spencer D., 2009, CARD SORTING DESIGNI
   SPREITZER GM, 1995, ACAD MANAGE J, V38, P1442, DOI 10.5465/256865
   Strahle W.M., 1996, J PERS SELL SALES M, V16, P1
   Svejvig P, 2015, INT J PROJ MANAG, V33, P278, DOI 10.1016/j.ijproman.2014.06.004
   Taylor F., 1967, The principles of scientific management
   Tyagi Pradeep K., 1989, Journal of the Academy of Marketing Science, V17, P235
   Valcour M., 2014, Harvard Business Review
   van Waardenburg G, 2013, INFORM SOFTWARE TECH, V55, P2154, DOI 10.1016/j.infsof.2013.07.012
   Walumbwa FO, 2011, J OCCUP ORGAN PSYCH, V84, P153, DOI 10.1348/096317910X485818
   Womack J., 2003, Lean Thinking: Banish Waste and Create Wealth in Your Corporation
   Yang JX, 2010, J MANAGE STUD, V47, P654, DOI 10.1111/j.1467-6486.2009.00902.x
   Yanow Dvora., 2015, INTERPRETATION METHO, V2nd
   Zhang SL, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P62, DOI 10.1109/ICGSE.2006.261217
NR 104
TC 27
Z9 29
U1 0
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2019
VL 45
IS 1
BP 87
EP 106
DI 10.1109/TSE.2017.2768368
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA HH4ZO
UT WOS:000455735600005
DA 2024-07-18
ER

PT J
AU Li, Y
   Zhu, CG
   Rubin, J
   Chechik, M
AF Li, Yi
   Zhu, Chenguang
   Rubin, Julia
   Chechik, Marsha
TI Semantic Slicing of Software Version Histories
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software changes; version control; dependency; program analysis
AB Software developers often need to transfer functionality, e.g., a set of commits implementing a new feature or a bug fix, from one branch of a configuration management system to another. That can be a challenging task as the existing configuration management tools lack support for matching high-level, semantic functionality with low-level version histories. The developer thus has to either manually identify the exact set of semantically-related commits implementing the functionality of interest or sequentially port a segment of the change history, "inheriting" additional, unwanted functionality. In this paper, we tackle this problem by providing automated support for identifying the set of semantically-related commits implementing a particular functionality, which is defined by a set of tests. We formally define the semantic slicing problem, provide an algorithm for identifying a set of commits that constitute a slice, and propose techniques to minimize the produced slice. We then instantiate the overall approach, CSLICER, in a specific implementation for Java projects managed in Git and evaluate its correctness and effectiveness on a set of open-source software repositories. We show that it allows to identify subsets of change histories that maintain the functionality of interest but are substantially smaller than the original ones.
C1 [Li, Yi; Zhu, Chenguang; Chechik, Marsha] Univ Toronto, Dept Comp Sci, Toronto, ON M5S3G4, Canada.
   [Rubin, Julia] Univ British Columbia, Dept Elect & Comp Engn, Vancouver, BC V6T 1Z4, Canada.
C3 University of Toronto; University of British Columbia
RP Li, Y (corresponding author), Univ Toronto, Dept Comp Sci, Toronto, ON M5S3G4, Canada.
EM liyi@cs.toronto.edu; czhu@cs.toronto.edu; mjulia@ece.ubc.ca;
   chechik@cs.toronto.edu
RI Li, Yi/AAG-4899-2020
OI Li, Yi/0000-0003-4562-8208
CR [Anonymous], 2016, UNDERSTANDING DARCS
   [Anonymous], 2016, TRY WITH RESOURCES S
   Arnold Robert S., 1996, SOFTWARE CHANGE IMPA
   Bille P, 2005, THEOR COMPUT SCI, V337, P217, DOI 10.1016/j.tcs.2004.12.030
   Brun Y, 2013, IEEE T SOFTWARE ENG, V39, P1358, DOI 10.1109/TSE.2013.28
   Chawathe S. S., 1996, SIGMOD Record, V25, P493, DOI 10.1145/235968.233366
   Dig D, 2008, IEEE T SOFTWARE ENG, V34, P321, DOI 10.1109/TSE.2008.29
   Dig D, 2006, LECT NOTES COMPUT SC, V4067, P404
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fluri B, 2006, INT C PROGRAM COMPRE, P35, DOI 10.1109/ICPC.2006.16
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Görg C, 2005, PROG COMPREHEN, P205, DOI 10.1109/WPC.2005.18
   Hashimoto M, 2008, WORK CONF REVERSE EN, P279, DOI 10.1109/WCRE.2008.44
   Hayashi S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P617, DOI 10.1109/ICSM.2012.6405336
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Igarashi A, 2001, ACM T PROGR LANG SYS, V23, P396, DOI 10.1145/503502.503505
   KAHN AB, 1962, COMMUN ACM, V5, P558, DOI 10.1145/368996.369025
   Kastner Christian, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P258, DOI 10.1109/ASE.2008.36
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   KUNG D, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P202, DOI 10.1109/ICSM.1994.336774
   Law J, 2003, PROC INT CONF SOFTW, P308, DOI 10.1109/ICSE.2003.1201210
   Li Y, 2016, IEEE INT CONF AUTOM, P495, DOI 10.1145/2970276.2970336
   Li Y, 2015, IEEE INT CONF AUTOM, P686, DOI 10.1109/ASE.2015.47
   Lingming Zhang, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P23, DOI 10.1109/ICSM.2011.6080769
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Muslu K, 2015, IEEE INT CONF AUTOM, P697, DOI 10.1109/ASE.2015.53
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Orso A., 2003, Software Engineering Notes, V28, P128, DOI 10.1145/949952.940089
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Rothermel G., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P201, DOI 10.1109/ICSE.1994.296779
   Rubin Julia., 2012, P SOFTWARE PRODUCT L, P156, DOI DOI 10.1145/2362536.2362558
   Schuler D., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P90, DOI 10.1109/ICST.2011.32
   Sommerville I., 2004, Software Engineering
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
   Zhang S, 2008, PROC IEEE INT CONF S, P87, DOI 10.1109/ICSM.2008.4658057
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 40
TC 21
Z9 23
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2018
VL 44
IS 2
BP 182
EP 201
DI 10.1109/TSE.2017.2664824
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FW1ND
UT WOS:000425065000004
DA 2024-07-18
ER

PT J
AU Charalampidou, S
   Ampatzoglou, A
   Chatzigeorgiou, A
   Gkortzis, A
   Avgeriou, P
AF Charalampidou, Sofia
   Ampatzoglou, Apostolos
   Chatzigeorgiou, Alexander
   Gkortzis, Antonios
   Avgeriou, Paris
TI Identifying Extract Method Refactoring Opportunities Based on Functional
   Relevance
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Design tools and techniques; object-oriented programming;
   metrics/measurement
ID OBJECT-ORIENTED SYSTEMS; TECHNICAL DEBT; IDENTIFICATION; CODE; DESIGN;
   SMELLS
AB 'Extract Method' is considered one of the most frequently applied and beneficial refactorings, since the corresponding Long Method smell is among the most common and persistent ones. Although Long Method is conceptually related to the implementation of diverse functionalities within a method, until now, this relationship has not been utilized while identifying refactoring opportunities. In this paper we introduce an approach (accompanied by a tool) that aims at identifying source code chunks that collaborate to provide a specific functionality, and propose their extraction as separate methods. The accuracy of the proposed approach has been empirically validated both in an industrial and an open-source setting. In the former case, the approach was capable of identifying functionally related statements within two industrial long methods (approx. 500 LoC each), with a recall rate of 93 percent. In the latter case, based on a comparative study on open-source data, our approach ranks better compared to two well-known techniques of the literature. To assist software engineers in the prioritization of the suggested refactoring opportunities the approach ranks them based on an estimate of their fitness for extraction. The provided ranking has been validated in both settings and proved to be strongly correlated with experts' opinion.
C1 [Charalampidou, Sofia; Ampatzoglou, Apostolos; Gkortzis, Antonios; Avgeriou, Paris] Univ Groningen, Inst Math & Comp Sci, NL-9712 CP Groningen, Netherlands.
   [Chatzigeorgiou, Alexander] Univ Macedonia, Dept Appl Informat, Thessaloniki 54006, Greece.
C3 University of Groningen; University of Macedonia
RP Charalampidou, S (corresponding author), Univ Groningen, Inst Math & Comp Sci, NL-9712 CP Groningen, Netherlands.
EM s.charalampidou@rug.nl; a.ampatzoglou@rug.nl; achat@uom.gr;
   antonis.gkortzis@gmail.com; paris@cs.rug.nl
RI Chatzigeorgiou, Alexandros/AAL-6077-2021; Ampatzoglou,
   Apostolos/AAC-3632-2020
OI Avgeriou, Paris/0000-0002-7101-0754
FU ITEA2 project [11013 PROMES]
FX This research has been partially funded by the ITEA2 project 11013
   PROMES. We would like to thank Oce and the three engineers who
   participated in the study.
CR Al Dallal J, 2011, IEEE T SOFTWARE ENG, V37, P788, DOI 10.1109/TSE.2010.97
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Ampatzoglou A, 2015, INFORM SOFTWARE TECH, V64, P52, DOI 10.1016/j.infsof.2015.04.001
   [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Badri L., 2004, J OBJECT TECHNOL, V3, P145
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Bavota G, 2011, J SYST SOFTWARE, V84, P397, DOI 10.1016/j.jss.2010.11.918
   Bavota Gabriele., 2010, Proceedings of the IEEE International Conference on Software Maintenance ICSM, P1
   Beck K., 1997, MAKE IT RUN MAKE IT
   Bieman J. M., 1995, SIGSOFT Software Engineering Notes, P259, DOI 10.1145/223427.211856
   Bonja C., 2006, ACM SE 44 P 44 ANN S, P91
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Charalampidou Sofia, 2015, P 11 INT C PRED MOD, P8
   Chatzigeorgiou A, 2014, INNOV SYST SOFTW ENG, V10, P3, DOI 10.1007/s11334-013-0205-z
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   DeMarco T., 1979, STRUCTURED ANAL SYST
   Field A., 2013, Discovering statistics using IBM SPSS statistics, V4th, P591
   Fokaefs M, 2012, J SYST SOFTWARE, V85, P2241, DOI 10.1016/j.jss.2012.04.013
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Friedman J., 2001, ELEMENTS STAT LEARNI, V1, DOI DOI 10.1007/978-0-387-84858-7
   Garcia J, 2009, EUR CON SFTWR MTNCE, P255, DOI 10.1109/CSMR.2009.59
   Gregg D, 2005, CONCURR COMP-PRACT E, V17, P757, DOI 10.1002/cpe.846
   Hitz M., 1995, International Symposium on Applied Corporate Computing, P25
   Kakarontzas G, 2013, J SYST SOFTWARE, V86, P349, DOI 10.1016/j.jss.2012.08.041
   Komondoor R., 2000, Conference Record of POPL'00: 27th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages. Papers Presented at the Symposium, P155, DOI 10.1145/325694.325713
   Lippert M., 2006, Refactoring in large software projects: performing complex restructurings successfully
   Marg L., 2014, P 1 WORKSH AUT MAN M, P21
   Meananeatra P., 2011, P 8 INT C EL ENG EL, P17
   Mens T, 2007, SOFTW SYST MODEL, V6, P269, DOI 10.1007/s10270-006-0044-6
   Moreno L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P880, DOI 10.1109/ICSE.2015.98
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   Piveta Eduardo, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P319, DOI 10.1109/COMPSAC.2008.119
   Silva D, 2014, 22 INT C PROGRAM COM, P146
   Tsantalis N, 2011, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2011.7
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Yang LM, 2009, ASIA PAC SOFWR ENG, P43, DOI 10.1109/APSEC.2009.20
   Yoshida N, 2012, EUR CON SFTWR MTNCE, P365, DOI 10.1109/CSMR.2012.45
   YOURDON E, 1979, STRUCTURED DESIGN FU
   Zhao W, 2003, ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P68, DOI 10.1109/APSEC.2003.1254359
   Zhao W, 2004, PROC INT CONF SOFTW, P293, DOI 10.1109/ICSE.2004.1317452
NR 44
TC 20
Z9 21
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2017
VL 43
IS 10
BP 954
EP 974
DI 10.1109/TSE.2016.2645572
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FJ9YP
UT WOS:000413137700004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Borg, M
   Wnuk, K
   Regnell, B
   Runeson, P
AF Borg, Markus
   Wnuk, Krzysztof
   Regnell, Bjorn
   Runeson, Per
TI Supporting Change Impact Analysis Using a Recommendation System: An
   Industrial Case Study in a Safety-Critical Context
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Case; maintenance management; software and system safety; tracing
ID RECOVERING TRACEABILITY LINKS; GOAL-CENTRIC TRACEABILITY;
   INFORMATION-RETRIEVAL; SOFTWARE; REQUIREMENTS; CODE; TECHNOLOGY; TOOLS;
   MODEL
AB Change Impact Analysis (CIA) during software evolution of safety-critical systems is a labor-intensive task. Several authors have proposed tool support for CIA, but very few tools were evaluated in industry. We present a case study on ImpRec, a recommendation System for Software Engineering (RSSE), tailored for CIA at a process automation company. ImpRec builds on assisted tracing, using information retrieval solutions and mining software repositories to recommend development artifacts, potentially impacted when resolving incoming issue reports. In contrast to the majority of tools for automated CIA, ImpRec explicitly targets development artifacts that are not source code. We evaluate ImpRec in a two-phase study. First, we measure the correctness of ImpRec's recommendations by a simulation based on 12 years' worth of issue reports in the company. Second, we assess the utility of working with ImpRec by deploying the RSSE in two development teams on different continents. The results suggest that ImpRec presents about 40 percent of the true impact among the top-10 recommendations. Furthermore, user log analysis indicates that ImpRec can support CIA in industry, and developers acknowledge the value of ImpRec in interviews. In conclusion, our findings show the potential of reusing traceability associated with developers' past activities in an RSSE.
C1 [Borg, Markus] SICS Swedish ICT AB, Ideon Sci Pk,Bldg Beta 2,Scheelevagen 17, SE-22370 Lund, Sweden.
   [Wnuk, Krzysztof] Blekinge Inst Technol, SE-37141 Karlskrona, Sweden.
   [Regnell, Bjorn; Runeson, Per] Lund Univ, SE-22100 Lund, Sweden.
C3 RISE Research Institutes of Sweden; Blekinge Institute Technology; Lund
   University
RP Borg, M (corresponding author), SICS Swedish ICT AB, Ideon Sci Pk,Bldg Beta 2,Scheelevagen 17, SE-22370 Lund, Sweden.
EM markus.borg@sics.se; krzysztof.wnuk@bth.se; bjorn.regnell@cs.lth.se;
   per.runeson@cs.lth.se
RI Runeson, Per/H-5113-2019; Borg, Markus/F-3609-2010
OI Runeson, Per/0000-0003-2795-4851; Borg, Markus/0000-0001-7879-4371;
   Regnell, Bjorn/0000-0002-9380-6120
FU Industrial Excellence Center EASE-Embedded Applications Software
   Engineering; Knowledge Foundation in Sweden [20140218]
FX This work was funded by the Industrial Excellence Center EASE-Embedded
   Applications Software Engineering,<SUP>13</SUP> and also partially
   supported by a research grant for the ORION project (reference number
   20140218) from The Knowledge Foundation in Sweden. Thanks go to all
   participants in the case study. This research was carried out while
   Markus Borg was with Lund University.
CR Abi-Antoun M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P221, DOI 10.1109/SANER.2015.7081832
   Acharya M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P746, DOI 10.1145/1985793.1985898
   Ali N, 2013, IEEE T SOFTWARE ENG, V39, P725, DOI 10.1109/TSE.2012.71
   Amyot D, 2003, COMPUT NETW, V42, P285, DOI 10.1016/S1389-1286(03)00244-5
   [Anonymous], 2014, Recommendation Systems in Software Engineering, DOI DOI 10.1007/978
   [Anonymous], EXPT SOFTWARE ENG PR
   [Anonymous], 2006, ENCY COGNITIVE SCI
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2004, Lucene in Action
   [Anonymous], 2006, P 2006 INT WORKSHOP
   [Anonymous], 2014, RECOMMENDATION SYSTE, DOI DOI 10.1007/978-3-642-45135-5_12
   [Anonymous], 2010, 61508 IEC
   [Anonymous], 2011, P INT WORKSH MACH LE
   [Anonymous], 2005, ACM SIGKDD EXPLORATI
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Anvik John, 2005, P 2005 OOPSLA WORKSH, P35
   Arnold R. S., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P292, DOI 10.1109/ICSM.1993.366933
   Arora C, 2015, INT REQUIR ENG CONF, P6, DOI 10.1109/RE.2015.7320403
   Asuncion HazelineU., 2012, Software and Systems Traceability, P129, DOI [10.1007/978-1-4471-2239-5_6, DOI 10.1007/978-1-4471-2239-5_6]
   Avazpour I, 2014, Recomm Syst Softw Eng, P245
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Bifet A, 2010, J MACH LEARN RES, V11, P1601
   Bohner S. A., 1996, SOFTWARE CHANGE IMPA
   Bohner SA, 2002, PROC IEEE INT CONF S, P263, DOI 10.1109/ICSM.2002.1167777
   Borg Markus, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P243, DOI 10.1109/ESEM.2013.39
   Borg Markus, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P111, DOI 10.1049/ic.2012.0014
   Borg M., 2014, Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement. ESEM'14, DOI DOI 10.1145/2652524.2652556
   Borg M., 2014, Recommendation systems in software engineering, P477
   Borg M, 2016, LECT NOTES COMPUT SC, V9923, P346, DOI 10.1007/978-3-319-45480-1_28
   Borg M, 2016, J SOFTW-EVOL PROC, V28, P427, DOI 10.1002/smr.1784
   Borg M, 2014, EMPIR SOFTW ENG, V19, P1565, DOI 10.1007/s10664-013-9255-y
   Borg M, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P72, DOI 10.1109/TEFSE.2013.6620158
   Borg M, 2013, EUR CON SFTWR MTNCE, P79, DOI 10.1109/CSMR.2013.18
   Borg M, 2012, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2012.27
   Borg M, 2011, EUR CON SFTWR MTNCE, P365, DOI 10.1109/CSMR.2011.54
   Briand LC, 2006, J SYST SOFTWARE, V79, P339, DOI 10.1016/j.jss.2005.05.001
   Canfora G., 2005, P 11 IEEE INT SOFTWA, P29, DOI [DOI 10.1109/METRICS2005.18, DOI 10.1109/METRICS.2005.28]
   Chen KR, 2001, PROC IEEE INT CONF S, P230, DOI 10.1109/ICSM.2001.972736
   Chou IH, 2011, ANN NUCL ENERGY, V38, P2174, DOI 10.1016/j.anucene.2011.06.016
   Cleland-Huang J, 2005, PROC INT CONF SOFTW, P362
   Cleland-Huang J, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P135, DOI 10.1109/RE.2005.78
   Cleland-Huang Jane, 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P179, DOI 10.1007/978-3-642-28714-5_16
   Cleland-Huang J, 2008, IEEE T SOFTWARE ENG, V34, P685, DOI 10.1109/TSE.2008.45
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   Cubranic D., 2004, THESIS
   Cuddeback D., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P231, DOI 10.1109/RE.2010.35
   Dag JNO, 2005, IEEE SOFTWARE, V22, P32, DOI 10.1109/MS.2005.1
   DANTAS CR, 2007, BRAZ S SOFTW ENG SBE, P236
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2009, EMPIR SOFTW ENG, V14, P57, DOI 10.1007/s10664-008-9090-8
   Dubey A, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P129, DOI 10.1109/ICGSE.2013.24
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Eldh Sigrid, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P412, DOI 10.1109/ICST.2010.58
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   European Committee for Electrotechnical Standardisation, 1999, 50129 DD ENV EUR COM
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   Gethers M, 2012, PROC INT CONF SOFTW, P430, DOI 10.1109/ICSE.2012.6227172
   Ghosh S, 2013, ASIA PAC SOFWR ENG, P148, DOI 10.1109/APSEC.2013.30
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Gotel O., 2012, SOFTWARE SYSTEMS TRA, P3, DOI [DOI 10.1007/978-1-4471-2239-5_1, 10.1007/978-1-4471-2239-5_1]
   Grimm K, 2003, PROC INT CONF SOFTW, P498, DOI 10.1109/ICSE.2003.1201228
   Habli Ibrahim, 2010, International Journal of Critical Computer-Based Systems, V1, P364, DOI 10.1504/IJCCBS.2010.036605
   Hayes JH, 2007, INNOV SYST SOFTW ENG, V3, P193, DOI 10.1007/s11334-007-0024-1
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Huang J, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P1225
   International Electrotechnical Commission, 2013, 611313 IEC
   International Electrotechnical Commission, 2003, 615111 IEC
   ISO Standard, 2011, iSO 26262-1:2011
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Jansen BJ, 2006, LIBR INFORM SCI RES, V28, P407, DOI 10.1016/j.lisr.2006.06.005
   Jonsson H, 2012, PROC INT SYMP SOFTW, P355, DOI 10.1109/ISSREW.2012.80
   Kagdi H., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P119, DOI 10.1109/WCRE.2010.21
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Kelly T. P., 1999, THESIS
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Kilpinen M, 2009, ICED 09 - THE 17TH INTERNATIONAL CONFERENCE ON ENGINEERING DESIGN, VOL 1: DESIGN PROCESSES, P205
   Kilpinen MS., 2008, THESIS
   Klevin A., 2012, THESIS
   Law J, 2003, PROC INT CONF SOFTW, P308, DOI 10.1109/ICSE.2003.1201210
   Lehnert S., 2011, PROC 12 INT WORKSHOP, P41, DOI DOI 10.1145/2024445.2024454
   LEHNERT S., 2011, REV SOFTWARE CHANGE
   Lettner Daniela., 2014, Proceedings of the 2014 International Conference on Software and System Process, page, P40, DOI DOI 10.1145/2600821.2600826
   Li BX, 2013, SOFTW TEST VERIF REL, V23, P613, DOI 10.1002/stvr.1475
   Li Y, 2008, LECT NOTES COMPUT SC, V5007, P100
   de la Vara JL, 2016, IEEE T SOFTWARE ENG, V42, P1095, DOI 10.1109/TSE.2016.2553032
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Marcus A, 2005, INT J SOFTW ENG KNOW, V15, P811, DOI 10.1142/S0218194005002543
   Matejka J, 2009, UIST 2009: PROCEEDINGS OF THE 22ND ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P193
   Murphy-Hill E., 2014, Recommendation Systems in Software Engineering, P223, DOI DOI 10.1007/978-3-642-45135-59
   Myklebust T., 2014, P 12 PROB SAF ASS MA, P1
   Nair S, 2014, INFORM SOFTWARE TECH, V56, P689, DOI 10.1016/j.infsof.2014.03.001
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Orso A, 2004, PROC INT CONF SOFTW, P491, DOI 10.1109/ICSE.2004.1317471
   Orso A., 2003, Software Engineering Notes, V28, P128, DOI 10.1145/949952.940089
   Panichella S., 2014, THESIS
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Petrenko M, 2009, INT C PROGRAM COMPRE, P10, DOI 10.1109/ICPC.2009.5090023
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Radio Technical Commission for Aeronautics, 2012, 178C DO RAD TECHN CO
   Regnell B, 2008, IEEE SOFTWARE, V25, P42, DOI 10.1109/MS.2008.48
   Robillard M., 2014, SYSTEMS SOFTWARE ENG, P1
   Robinson B, 2010, P INT S EMP SOFTW EN, V21, P1
   Rovegård P, 2008, IEEE T SOFTWARE ENG, V34, P516, DOI 10.1109/TSE.2008.32
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Schaffer BS, 2003, ORGAN RES METHODS, V6, P169, DOI 10.1177/1094428103251542
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Sparck-Jones K, 2000, INFORM PROCESS MANAG, V36, P779, DOI 10.1016/S0306-4573(00)00015-7
   Stalhane T, 2014, LECT NOTES COMPUT SC, V8696, P444, DOI 10.1007/978-3-319-10557-4_48
   Sulaman SM, 2014, EUROMICRO CONF PROC, P17, DOI 10.1109/SEAA.2014.25
   Svensson R. Berntsson, 2015, CASE STUDY EVALUATIO, P230
   Svensson RB, 2012, REQUIR ENG, V17, P283, DOI 10.1007/s00766-011-0125-0
   Treude C, 2015, IEEE T SOFTWARE ENG, V41, P565, DOI 10.1109/TSE.2014.2387172
   van Rijsbergen C. J, 1979, Information Retrieval, V2nd
   Vierhauser M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P125, DOI 10.1145/2591062.2591179
   von Knethen A, 2003, PROC IEEE INT CONF S, P246, DOI 10.1109/ICSM.2003.1235427
   Wong W. Eric, 2010, Proceedings 2010 Fourth IEEE International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2010), P14, DOI 10.1109/SSIRI.2010.38
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
   Zou XC, 2010, EMPIR SOFTW ENG, V15, P119, DOI 10.1007/s10664-009-9114-z
NR 120
TC 26
Z9 29
U1 4
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL 1
PY 2017
VL 43
IS 7
BP 675
EP 700
DI 10.1109/TSE.2016.2620458
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FA8OD
UT WOS:000405704400005
DA 2024-07-18
ER

PT J
AU Wang, HB
   Wang, L
   Yu, Q
   Zheng, ZB
   Bouguettaya, A
   Lyu, MR
AF Wang, Hongbing
   Wang, Lei
   Yu, Qi
   Zheng, Zibin
   Bouguettaya, Athman
   Lyu, Michael R.
TI Online Reliability Prediction via Motifs-Based Dynamic Bayesian Networks
   for Service-Oriented Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Online reliability prediction; time series; service-oriented computing;
   system of systems
ID FAILURES
AB A service-oriented System of Systems (SoS) considers a system as a service and constructs a robust and value-added SoS by outsourcing external component systems through service composition techniques. Online reliability prediction for the component systems for the purpose of assuring the overall Quality of Service (QoS) is often a major challenge in coping with a loosely coupled SoS operating under dynamic and uncertain running environments. It is also a prerequisite for guaranteeing runtime QoS of a SoS through optimal service selection for reliable system construction. We propose a novel online reliability time series prediction approach for the component systems in a service-oriented SoS. We utilize Probabilistic Graphical Models (PGMs) to yield near-future, time series predictions. We assess the approach via invocation records collected from widely used real Web services. Experimental results have confirmed the effectiveness of the approach.
C1 [Wang, Hongbing; Wang, Lei] Southeast Univ, Sch Comp Sci & Engn, SIPAILOU 2, Nanjing 210096, Jiangsu, Peoples R China.
   [Wang, Hongbing; Wang, Lei] Southeast Univ, Key Lab Comp Network & Informat Integrat, SIPAILOU 2, Nanjing 210096, Jiangsu, Peoples R China.
   [Wang, Lei] Nanjing Forestry Univ, Dept Management Sci & Engn, Nanjing 210037, Jiangsu, Peoples R China.
   [Yu, Qi] Rochester Inst Technol, Coll Comp & Informat Sci, 102 Lomb Mem Dr, Rochester, NY 14623 USA.
   [Zheng, Zibin] Sun Yat Sen Univ, Sch Data & Comp Sci, Guangzhou 510275, Guangdong, Peoples R China.
   [Zheng, Zibin] Sun Yat Sen Univ, Minist Educ, Key Lab Machine Intelligence & Adv Comp, Guangzhou 510275, Guangdong, Peoples R China.
   [Lyu, Michael R.] Chinese Univ Hong Kong, Shenzhen Res Inst, HSB-101 Shatin, Hong Kong, Peoples R China.
   [Lyu, Michael R.] Chinese Univ Hong Kong, Dept Comp Sci & Engn, HSB-101 Shatin, Hong Kong, Peoples R China.
   [Lyu, Michael R.] Natl Univ Def Technol, Sch Comp Sci, Changsha 410073, Hunan, Peoples R China.
   [Bouguettaya, Athman] Univ Sydney, Sch Informat Technol, Sydney, NSW 2006, Australia.
C3 Southeast University - China; Southeast University - China; Nanjing
   Forestry University; Rochester Institute of Technology; Sun Yat Sen
   University; Sun Yat Sen University; CUHK Shenzhen Research Institute;
   Chinese University of Hong Kong; Chinese University of Hong Kong;
   National University of Defense Technology - China; University of Sydney
RP Wang, HB (corresponding author), Southeast Univ, Sch Comp Sci & Engn, SIPAILOU 2, Nanjing 210096, Jiangsu, Peoples R China.; Wang, HB (corresponding author), Southeast Univ, Key Lab Comp Network & Informat Integrat, SIPAILOU 2, Nanjing 210096, Jiangsu, Peoples R China.
EM hbw@seu.edu.cn; leiwang@seu.edu.cn; qi.yu@rit.edu;
   zhzibin@mail.sysu.edu.cn; athman.bouguettaya@sydney.edu.au;
   lyu@cse.cuhk.edu.hk
RI Bouguettaya, Athman/B-7515-2011; Wang, Lei/AFC-9386-2022; Zheng,
   Zibin/E-3024-2014
OI Wang, Lei/0000-0002-1511-7266; Bouguettaya, Athman/0000-0003-1254-8092;
   yu, qi/0000-0002-0426-5407; Zheng, Zibin/0000-0002-7878-4330
FU NSFC [61672152, 61232007, 61532013]; Collaborative Innovation Centers of
   Novel Software Technology and Industrialization and Wireless
   Communications Technology; Australian Research Council's Linkage
   Projects funding scheme [LP120200305]; Australian Research Council
   [LP120200305] Funding Source: Australian Research Council
FX This work was partially supported by NSFC Projects (Nos. 61672152,
   61232007, 61532013), Collaborative Innovation Centers of Novel Software
   Technology and Industrialization and Wireless Communications Technology,
   and Australian Research Council's Linkage Projects funding scheme (No.
   LP120200305). H. Wang is the corresponding author.
CR ACKOFF RL, 1971, MANAGE SCI, V17, P661, DOI 10.1287/mnsc.17.11.661
   Amin A., 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P74, DOI 10.1109/ICWS.2012.37
   Amin A, 2013, J SYST SOFTWARE, V86, P1923, DOI 10.1016/j.jss.2013.03.045
   Amin A, 2012, IEEE INT CONF AUTOM, P130, DOI 10.1145/2351676.2351695
   Andrzejak A, 2007, 2007 10TH IFIP/IEEE INTERNATIONAL SYMPOSIUM ON INTEGRATED NETWORK MANAGEMENT (IM 2009), VOLS 1 AND 2, P159, DOI 10.1109/INM.2007.374780
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   [Anonymous], 2004, THESIS
   [Anonymous], 2009, P 2009 SIAM INT C DA
   [Anonymous], 1998, Biological Sequence Analysis: Probabilistic Models of Proteins and Nucleic Acids
   [Anonymous], EVID BASED COMPLEMEN, DOI DOI 10.1016/J.ATM0SRES.2013.02.011
   [Anonymous], 2012, MACHINE LEARNING PRO
   ANSI/ IEEE, 1991, 7291991 ANSIIEEE
   Blake MB, 2008, IEEE INTERNET COMPUT, V12, P55, DOI 10.1109/MIC.2008.24
   Brosch F, 2012, IEEE T SOFTWARE ENG, V38, P1319, DOI 10.1109/TSE.2011.94
   Calinescu R, 2011, IEEE T SOFTWARE ENG, V37, P387, DOI 10.1109/TSE.2010.92
   Cardellini V, 2012, IEEE T SOFTWARE ENG, V38, P1138, DOI 10.1109/TSE.2011.68
   Cardoso J., 2004, J. Web Semant., V1, P281, DOI [10.1016/j.websem.2004.03.001, DOI 10.1016/J.WEBSEM.2004.03.001]
   Chen MY, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P595, DOI 10.1109/DSN.2002.1029005
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Cheng FT, 2005, IEEE INT CONF ROBOT, P4062
   Cooke-Davies T., 2007, P PMI GLOBAL C US, P1
   Crowell J., 2002, USING FRACTAL ANAL M, P1
   CSENKI A, 1990, IEEE T RELIAB, V39, P177, DOI 10.1109/24.55879
   Daidone A, 2006, SYM REL DIST SYST, P245
   de Lemos R., 2013, Lecture Notes in Computer Science, V7475, P1, DOI DOI 10.1007/978-3-642-35813-5_1
   Elfawal-Mansour H, 2013, SERV ORIENTED COMPUT, V7, P101, DOI 10.1007/s11761-012-0109-z
   FAA, 2014, NEXT GEN AIR TRANSP
   Fan GS, 2013, J SYST SOFTWARE, V86, P1089, DOI 10.1016/j.jss.2012.11.037
   Hamerly Greg, 2001, 18 INT C MACHINE LEA, P1
   Han J, 2012, MOR KAUF D, P1
   Hatonen K, 1996, NOMS '96 - 1996 IEEE NETWORK OPERATIONS AND MANAGEMENT SYMPOSIUM, VOLS. 1-4, P520, DOI 10.1109/NOMS.1996.539622
   Hoffmann GA, 2007, IEEE T RELIAB, V56, P615, DOI 10.1109/TR.2007.909764
   Hughes GF, 2002, IEEE T RELIAB, V51, P350, DOI 10.1109/TR.2002.802886
   Jamshidi M., 2011, System of systems engineering: innovations for the twenty--first century, V58
   Kiciman E, 2005, IEEE T NEURAL NETWOR, V16, P1027, DOI 10.1109/TNN.2005.853411
   Koller D., 2009, Probabilistic graphical models: principles and techniques
   Korbicz J., 2004, FAULT DIAGNOSIS MODE
   Levy D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P271, DOI 10.1109/ISSRE.2003.1251049
   Liang YL, 2006, I C DEPEND SYS NETWO, P425
   Lunze J., 2003, AUTOMATISIERUNGSTECH
   Mansour HE, 2011, IEEE T SERV COMPUT, V4, P328, DOI 10.1109/TSC.2010.16
   McKinley PK, 2004, COMPUTER, V37, P56, DOI 10.1109/MC.2004.48
   Milo R, 2002, SCIENCE, V298, P824, DOI 10.1126/science.298.5594.824
   Murray J.F., 2005, Journal of Machine Learning research, P816
   Palviainen M, 2011, J SYST SOFTWARE, V84, P1054, DOI 10.1016/j.jss.2011.01.048
   Pfefferman JD, 2002, IEEE T RELIAB, V51, P434, DOI 10.1109/TR.2002.804733
   Qiang Guan, 2012, Journal of Communications, V7, P52, DOI 10.4304/jcm.7.1.52-61
   Rao J, 2011, IEEE T PARALL DISTR, V22, P426, DOI 10.1109/TPDS.2010.92
   Rothenhaus KJ, 2009, IEEE SYST J, V3, P304, DOI 10.1109/JSYST.2009.2022572
   Salfner F., 2006, 208 HUM BOLDT U DEP
   Salfner F, 2010, ACM COMPUT SURV, V42, DOI 10.1145/1670679.1670680
   Savor T, 1997, THIRD IEEE REAL-TIME TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P136, DOI 10.1109/RTTAS.1997.601351
   Shellman ER, 2013, MOL BIOSYST, V9, P352, DOI 10.1039/c2mb25346a
   Shereshevsky M, 2003, 2003 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P721, DOI 10.1109/DSN.2003.1209987
   Silic M., 2013, P 9 JOINT M FDN SOFT, P70, DOI 10.1145/2491411.2491424
   Sousa-Poza Andres, 2008, International Journal of Systems of Systems Engineering, V1, P1, DOI 10.1504/IJSSE.2008.018129
   Takenaka K, 2012, INTSOC CONF THERMAL, P194, DOI 10.1109/ITHERM.2012.6231430
   Turnbull D., 2003, TECH REP
   Vaidyanathan K., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P84, DOI 10.1109/ISSRE.1999.809313
   Vilalta R, 2002, IBM SYST J, V41, P461, DOI 10.1147/sj.413.0461
   Ward A., 1998, Performance Evaluation Review, V26, P38, DOI 10.1145/306225.306237
   Ward A.W., 2000, ANAL COMMUNICATION N, P1
   Ye N, 2001, QUAL RELIAB ENG INT, V17, P105, DOI 10.1002/qre.392
   Yu Q., 2012, WORLD WIDE WEB, V17, P33
   Yu Q., 2013, P 20 IEEE INT C WEB, P31
   Zheng ZB, 2013, IEEE T SERV COMPUT, V6, P289, DOI 10.1109/TSC.2011.59
   Zheng ZB, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430545.2430548
   Zheng ZB, 2010, INT J WEB SERV RES, V7, P21, DOI 10.4018/jwsr.2010100102
   Zheng Zibin., 2010, P 32 ACMIEEE INT C S, V1, P35, DOI DOI 10.1145/1806799.1806809
   Zisman A, 2013, IEEE T SOFTWARE ENG, V39, P954, DOI 10.1109/TSE.2012.84
NR 70
TC 31
Z9 36
U1 0
U2 45
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2017
VL 43
IS 6
BP 556
EP 579
DI 10.1109/TSE.2016.2615615
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EX8XS
UT WOS:000403534100003
DA 2024-07-18
ER

PT J
AU Storey, MA
   Zagalsky, A
   Figueira, F
   Singer, L
   German, DM
AF Storey, Margaret-Anne
   Zagalsky, Alexey
   Figueira Filho, Fernando
   Singer, Leif
   German, Daniel M.
TI How Social and Communication Channels Shape and Challenge a
   Participatory Culture in Software Development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Participatory culture; communication; social media; CSCW; software
   engineering
ID MEDIA RICHNESS; REQUIREMENTS
AB Software developers use many different communication tools and channels in their work. The diversity of these tools has dramatically increased over the past decade and developers now have access to a wide range of socially enabled communication channels and social media to support their activities. The availability of such social tools is leading to a participatory culture of software development, where developers want to engage with, learn from, and co-create software with other developers. However, the interplay of these social channels, as well as the opportunities and challenges they may create when used together within this participatory development culture are not yet well understood. In this paper, we report on a large-scale survey conducted with 1,449 GitHub users. We discuss the channels these developers find essential to their work and gain an understanding of the challenges they face using them. Our findings lay the empirical foundation for providing recommendations to developers and tool designers on how to use and improve tools for software developers.
C1 [Storey, Margaret-Anne] Univ Victoria, Comp Sci, Victoria, BC V8P 5C2, Canada.
   [Storey, Margaret-Anne] Univ Victoria, Software Engn Program, Victoria, BC V8P 5C2, Canada.
   [Zagalsky, Alexey; Singer, Leif] Univ Victoria, Victoria, BC V8P 5C2, Canada.
   [German, Daniel M.] Univ Victoria, Dept Comp Sci, Victoria, BC V8P 5C2, Canada.
   [Figueira Filho, Fernando] Univ Fed Rio Grande do Norte, Software Engn, BR-59078970 Natal, RN, Brazil.
C3 University of Victoria; University of Victoria; University of Victoria;
   University of Victoria; Universidade Federal do Rio Grande do Norte
RP Storey, MA (corresponding author), Univ Victoria, Comp Sci, Victoria, BC V8P 5C2, Canada.; Storey, MA (corresponding author), Univ Victoria, Software Engn Program, Victoria, BC V8P 5C2, Canada.
EM mstorey@uvic.ca; alexeyza@uvic.ca; fernando@dimap.ufrn.br;
   lsinger@uvic.ca; dmg@uvic.ca
OI Zagalsky, Alexey/0000-0002-8510-1454
CR [Anonymous], 2011, Proceedings of the 24th annual ACM symposium on User interface software and technology
   [Anonymous], 2008, Changing Software Development: Learning to Be Agile
   [Anonymous], 2012, FUTURE COLLABORATIVE
   [Anonymous], 2012, MCKINSEY GLOB I
   [Anonymous], CONFRONTING CHALLENG
   Baysal O, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P666, DOI 10.1145/2635868.2635887
   Begel A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P12, DOI 10.1145/2568225.2568233
   Bjorn P, 2014, ACM T COMPUT-HUM INT, V21, DOI 10.1145/2670534
   Black S., 2010, Proceedings of the 1st Workshop on Web 2.0 for Software Engineering, P1
   Calefato F, 2012, EMPIR SOFTW ENG, V17, P640, DOI 10.1007/s10664-011-9179-3
   Crowston K., 2006, P IEEE 39 HAW INT C, DOI DOI 10.1109/HICSS.2006.101
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   DAFT RL, 1986, MANAGE SCI, V32, P554, DOI 10.1287/mnsc.32.5.554
   David PA, 2008, INF ECON POLICY, V20, P364, DOI 10.1016/j.infoecopol.2008.10.001
   Dennis AR, 1998, INFORM SYST RES, V9, P256, DOI 10.1287/isre.9.3.256
   Dittrich Y., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P103, DOI 10.1109/ICGSE.2011.21
   Fried J., 2013, Remote: Office not required
   Giuffrida R, 2015, INFORM SOFTWARE TECH, V63, P11, DOI 10.1016/j.infsof.2015.02.013
   Giuffrida R, 2013, INFORM SOFTWARE TECH, V55, P1143, DOI 10.1016/j.infsof.2013.01.004
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Lanubile F, 2013, SOCIAL SOFTWARE KEY
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   McLuhan Marshall., 1967, MEDIUM IS MESSAGE
   NAUR P, 1985, MICROPROC MICROPROG, V15, P253, DOI 10.1016/0165-6074(85)90032-8
   Olson GM, 2000, HUM-COMPUT INTERACT, V15, P139, DOI 10.1207/S15327051HCI1523_4
   Parnin C, 2011, SOFTWARE QUAL J, V19, P5, DOI 10.1007/s11219-010-9104-9
   Pham R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P112, DOI 10.1109/ICSE.2013.6606557
   Postman Neil., 2000, Proceedings of the Media Ecology Association, V1, P10
   Robles G., 2014, P 11 WORKING C MININ, DOI [10.1145/2597073, DOI 10.1145/2597073]
   Scacchi W., 2002, IEE Proceedings-Software, V149, P24, DOI 10.1049/ip-sen:20020202
   Shihab E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P107, DOI 10.1109/MSR.2009.5069488
   Singer L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P211, DOI 10.1145/2568225.2568305
   Singhal LK, 2013, ADV MATER RES-SWITZ, V794, P103, DOI 10.4028/www.scientific.net/AMR.794.103
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Storey Margaret-Anne, 2014, FUT SOFTW ENG P, P100, DOI 10.1145/2593882.2593887
   Stuart H. C., 2012, Network Computing, DOI [DOI 10.1145/2145204.2145275, 10.1145/2145204.2145275]
   Treude C., 2011, Proceedings of the 19th Symposium and the 13th European Conference on Foundations of Software Engineering, ESEC/FSE '11, P91
   Turner T, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P841
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Wenger EC, 2000, HARVARD BUS REV, V78, P139
NR 41
TC 107
Z9 118
U1 2
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2017
VL 43
IS 2
BP 185
EP 204
DI 10.1109/TSE.2016.2584053
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA EN0XX
UT WOS:000395735900005
DA 2024-07-18
ER

PT J
AU Atachiants, R
   Doherty, G
   Gregg, D
AF Atachiants, Roman
   Doherty, Gavin
   Gregg, David
TI Parallel Performance Problems on Shared-Memory Multicore Systems:
   Taxonomy and Observation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Parallel programming; multicore; multi-threaded; optimization;
   performance problems; performance analysis; diagnosis; debugging;
   taxonomy
ID AGREEMENT; TOOLS
AB The shift towards multicore processing has led to a much wider population of developers being faced with the challenge of exploiting parallel cores to improve software performance. Debugging and optimizing parallel programs is a complex and demanding task. Tools which support development of parallel programs should provide salient information to allow programmers of multicore systems to diagnose and distinguish performance problems. Appropriate design of such tools requires a systematic analysis of the problems which might be identified, and the information used to diagnose them. Building on the literature, we put forward a potential taxonomy of parallel performance problems, and an observational model which links measurable performance data to these problems. We present a validation of this model carried out with parallel programming experts, identifying areas of agreement and disagreement. This is accompanied with a survey of the prevalence of these problems in software development. From this we can identify contentious areas worthy of further exploration, as well as those with high prevalence and strong agreement, which are natural candidates for initial moves towards better tool support.
C1 [Atachiants, Roman; Doherty, Gavin; Gregg, David] Trinity Coll Dublin, Dublin 2, Ireland.
C3 Trinity College Dublin
RP Atachiants, R (corresponding author), Trinity Coll Dublin, Dublin 2, Ireland.
EM roman.atachiants@gmail.com; Gavin.Doherty@tcd.ie; David.Gregg@tcd.ie
RI Doherty, Gavin/AAH-4939-2019
OI Doherty, Gavin/0000-0002-9617-7008
FU Science Foundation Ireland [10/CE/I1855]
FX This work was supported by supported by Science Foundation Ireland grant
   10/CE/I1855 to Lero - the Irish Software Research Centre. The authors
   are grateful to all of the programmers and experts who participated in
   the studies presented here.
CR Adhianto L, 2010, CONCURR COMP-PRACT E, V22, P685, DOI 10.1002/cpe.1553
   Akhter S., 2006, MULTICORE PROGRAMMIN, V33
   Anderson T. E., 1990, IEEE Transactions on Parallel and Distributed Systems, V1, P6, DOI 10.1109/71.80120
   [Anonymous], 2010, 2010 IEEE INT S PAR, DOI DOI 10.1109/IPDPS.2010.5470434
   [Anonymous], 248966030 INT CORP
   [Anonymous], 2007, TECH REP
   [Anonymous], 1991, Algorithmic skeletons: structured management of parallel computation
   [Anonymous], DISTRIB SIMUL
   [Anonymous], 2005, ACMIEEE SC 2005 C SC
   [Anonymous], N3429120119 INCITS
   [Anonymous], TECH REP
   [Anonymous], YCS276 U YORK
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 1 WORKSH DES SELF MA
   [Anonymous], 2014, 25 ANNIVERSARY INT C, DOI DOI 10.1145/2591635.2667164
   [Anonymous], MSDN COMMON PATTERNS
   [Anonymous], P 2 USENIX WORKSH HO
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   [Anonymous], 2013, P SIGCHI C HUMAN FAC
   [Anonymous], 2005, ACM SIGARCH COMPUTER
   [Anonymous], 353512003US INT CORP
   [Anonymous], AUTOMATIC PERFORMANC
   [Anonymous], 1967, AFIPS, DOI 10.1145/1465482.1465560
   Asanovic K, 2009, COMMUN ACM, V52, P56, DOI 10.1145/1562764.1562783
   Atachiants R, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P2501, DOI 10.1145/2556288.2557350
   Begel A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P12, DOI 10.1145/2568225.2568233
   BENARI M, 1982, PRINCIPLES CONCURREN
   Bishop M, 1996, COMPUT SYST, V9, P131
   Blasgen M., 1979, Operating Systems Review, V13, P20, DOI 10.1145/850657.850659
   BOLOSKY WJ, 1991, SIGPLAN NOTICES, V26, P212, DOI 10.1145/106973.106994
   Breshears Clay., 2009, ART CONCURRENCY THRE
   Bryant RandalE., 2010, COMPUTER SYSTEMS PRO, V2nd
   Burtscher Martin., 2010, P 2010 ACMIEEE INT C, P1, DOI DOI 10.1109/SC.2010.41
   CASAVANT TL, 1993, J PARALLEL DISTR COM, V18, P103, DOI 10.1006/jpdc.1993.1049
   Chandra R., 2001, PARALLEL PROGRAMMING, DOI DOI 10.5555/355074
   Chen TH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1001, DOI 10.1145/2568225.2568259
   De Bosschere K, 2008, IT-INF TECHNOL, V50, P285, DOI 10.1524/itit.2008.0497
   De Pauw W, 2002, LECT NOTES COMPUT SC, V2269, P151
   Drongowski P.J., 2008, An introduction to analysis and optimization with AMD CodeAnalyst TM Performance Analyzer, P1
   Engler D., 2003, Operating Systems Review, V37, P237, DOI 10.1145/1165389.945468
   Foo KC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P159, DOI 10.1109/ICSE.2015.144
   FOTHERINGHAM J, 1961, COMMUN ACM, V4, P435, DOI 10.1145/366786.366800
   Fritz T., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P175
   Goswami D, 1999, INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED PROCESSING TECHNIQUES AND APPLICATIONS, VOLS I-V, PROCEEDINGS, P1250
   Goto K, 2008, ACM T MATH SOFTWARE, V34, DOI 10.1145/1356052.1356053
   Han S, 2012, P 34 INT C SOFTW ENG, P176
   HEATH MT, 1991, IEEE SOFTWARE, V8, P29, DOI 10.1109/52.84214
   Heirman Wim, 2014, 2014 IEEE 20th International Symposium on High-Performance Computer Architecture (HPCA), P678, DOI 10.1109/HPCA.2014.6835975
   Hennessy John L, 2011, Computer Architecture: A Quantitative Approach
   Herlihy M., 2008, ART MULTIPROCESSOR P
   Huang YB, 2012, INT CONFER PARA, P253
   Ipek E, 2005, LECT NOTES COMPUT SC, V3648, P196
   Jovic M, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P155
   Kandiraju G. B., 2002, Performance Evaluation Review, V30, P129, DOI 10.1145/511399.511351
   Kim SB, 2004, 13TH INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURE AND COMPILATION TECHNIQUES, PROCEEDINGS, P111
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lawrance J, 2013, IEEE T SOFTWARE ENG, V39, P197, DOI 10.1109/TSE.2010.111
   Lee JH, 2010, CONF PROC INT SYMP C, P270, DOI 10.1145/1816038.1815996
   Levy M, 2009, IEEE MICRO, V29, P7, DOI 10.1109/MM.2009.41
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Litoiu M, 2013, J SOFTW-EVOL PROC, V25, P871, DOI 10.1002/smr.1563
   Mahapatra N R., 1999, XRDS CROSSROADS ACM, V5, P2, DOI [10.1145/357783.331677, DOI 10.1145/357783.331677]
   MaK J., 2009, WODa, P42
   Mattson T, 2008, DES AUT CON, P7
   Mckenney P.E., 2009, Is Parallel Programming Hard, And If So, Why?
   Meuer Hans Werner, 2014, TOP500 HIST TRENDS F, V1st
   MILLER BP, 1995, COMPUTER, V28, P37, DOI 10.1109/2.471178
   Murphy-Hill E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1, DOI 10.1145/2568225.2568226
   Mytkowicz T, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P187, DOI 10.1145/1806596.1806618
   Netzer R. H. B., 1992, ACM Letters on Programming Languages and Systems, V1, P74, DOI 10.1145/130616.130623
   Nistor A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P562, DOI 10.1109/ICSE.2013.6606602
   Odaira R, 2014, ACM SIGPLAN NOTICES, V49, P131, DOI [10.1145/2555243.2555247, 10.1145/2692916.2555247]
   Papamarcos M. S., 1984, 11th Annual International Symposium on Computer Architecture. Conference Proceedings (Cat. No. 84CH2051-1), P348, DOI 10.1145/800015.808204
   Pirolli P., 1995, P SIGCHI C HUM FACT, P51, DOI DOI 10.1145/223904.223911
   Rajwar R, 2001, INT SYMP MICROARCH, P294, DOI 10.1109/MICRO.2001.991127
   Reinders J., 2005, Vtune performance analyzer essentials
   Reinders James, 2007, Intel threading building blocks-outfitting C++ for multi-core processor parallelism
   Russell K, 2006, ACM SIGPLAN NOTICES, V41, P263, DOI 10.1145/1167515.1167496
   Sadowski Caitlin., 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research (FoSER '10), P309
   Shende SS, 2006, INT J HIGH PERFORM C, V20, P287, DOI 10.1177/1094342006064482
   Siegmund N, 2012, PROC INT CONF SOFTW, P167, DOI 10.1109/ICSE.2012.6227196
   Singh A., 1996, Int. Conf. Parallel Distrib. Process. Tech. Appl, P230
   SNYDER L, 1984, COMPUTER, V17, P27, DOI 10.1109/MC.1984.1659183
   Snyder L., 1986, Proceedings of the 1986 International Conference on Parallel Processing (Cat. No.86CH2355-6), P628
   Stol KJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P187, DOI 10.1145/2568225.2568249
   Süss M, 2008, LECT NOTES COMPUT SC, V4315, P312
   Tallent NR, 2010, PPOPP 2010: PROCEEDINGS OF THE 2010 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING, P269, DOI 10.1145/1693453.1693489
   TORRELLAS J, 1994, IEEE T COMPUT, V43, P651, DOI 10.1109/12.286299
   Trinder P. W., 1998, Journal of Functional Programming, V8, P23, DOI 10.1017/S0956796897002967
   Venkataramani G, 2011, ACM T ARCHIT CODE OP, V8, DOI 10.1145/1970386.1970389
   Viera AJ, 2005, FAM MED, V37, P360
   WOLFE M, 1987, INT J PARALLEL PROG, V16, P137, DOI 10.1007/BF01379099
   Yang L.T., 2005, Proceedings of the 2005 ACM/IEEE conference on Supercomputing, P40
   Zaman S., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P199, DOI 10.1109/MSR.2012.6224281
   Zhang W, 2011, PROCEEDINGS OF THE STLE/ASME INTERNATIONAL JOINT TRIBOLOGY CONFERENCE, 2010, P25
   Zhuravlev S, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P129
NR 97
TC 6
Z9 6
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2016
VL 42
IS 8
BP 764
EP 785
DI 10.1109/TSE.2016.2519346
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DT4UE
UT WOS:000381475800003
OA Green Published
DA 2024-07-18
ER

PT J
AU Itzik, N
   Reinhartz-Berger, I
   Wand, Y
AF Itzik, Nili
   Reinhartz-Berger, Iris
   Wand, Yair
TI Variability Analysis of Requirements: Considering Behavioral Differences
   and Reflecting Stakeholders' Perspectives
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software product line engineering; variability analysis; feature
   diagrams; requirements specifications; ontology
ID PRODUCT; REUSE
AB Adoption of Software Product Line Engineering (SPLE) to support systematic reuse of software-related artifacts within product families is challenging, time-consuming and error-prone. Analyzing the variability of existing artifacts needs to reflect different perspectives and preferences of stakeholders in order to facilitate decisions in SPLE adoption. Considering that requirements drive many development methods and activities, we introduce an approach to analyze variability of behaviors as presented in functional requirements. The approach, called semantic and ontological variability analysis (SOVA), uses ontological and semantic considerations to automatically analyze differences between initial states (preconditions), external events (triggers) that act on the system, and final states (post-conditions) of behaviors. The approach generates feature diagrams typically used in SPLE to model variability. Those diagrams are organized according to perspective profiles, reflecting the needs and preferences of the potential stakeholders for given tasks. We conducted an empirical study to examine the usefulness of the approach by comparing it to an existing tool which is mainly based on a latent semantic analysis measurement. SOVA appears to create outputs that are more comprehensible in significantly shorter times. These results demonstrate SOVA's potential to allow for flexible, behavior-oriented variability analysis.
C1 [Itzik, Nili; Reinhartz-Berger, Iris] Univ Haifa, Dept Informat Syst, IL-3498838 Haifa, Israel.
   [Wand, Yair] Univ British Columbia, Sauder Sch Business, Vancouver, BC V6T 1Z4, Canada.
C3 University of Haifa; University of British Columbia
RP Itzik, N (corresponding author), Univ Haifa, Dept Informat Syst, IL-3498838 Haifa, Israel.
EM nitzik@campus.haifa.ac.il; iris@is.haifa.ac.il; yair.wand@ubc.ca
CR ACHER M., 2012, P 6 INT WORKSH VAR M, P45, DOI DOI 10.1145/2110147.2110153
   Alves V, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P67, DOI 10.1109/SPLC.2008.18
   [Anonymous], ONTOLOGY
   [Anonymous], 1977, ONTOLOGY
   [Anonymous], DOMAIN ENG PRODUCT L
   Bakar NH, 2015, J SYST SOFTWARE, V106, P132, DOI 10.1016/j.jss.2015.05.006
   Bécan G, 2016, EMPIR SOFTW ENG, V21, P1794, DOI 10.1007/s10664-014-9357-1
   Berger Thorsten, 2013, 7 INT WORKSH VAR MOD, DOI DOI 10.1145/2430502.2430513
   Burgess C, 1998, DISCOURSE PROCESS, V25, P211, DOI 10.1080/01638539809545027
   Chen K, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P31
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Clarke D., 2010, SPLC WORKSH, P91
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P143, DOI 10.1002/spip.225
   Davril Jean-Marc., 2013, JOINT M EUR SOFTW EN, P290, DOI DOI 10.1145/2491411.2491455
   DAY WHE, 1984, J CLASSIF, V1, P7, DOI 10.1007/BF01890115
   Dumitru H, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P181, DOI 10.1145/1985793.1985819
   Ferrari A., 2013, Proceedings of the 17th International Software Product Line Conference, P116, DOI [10.1145/2491627.2491634, DOI 10.1145/2491627.2491634]
   Gildea D, 2002, COMPUT LINGUIST, V28, P245, DOI 10.1162/089120102760275983
   Gomaa WH., 2013, international journal of Computer Applications, V68, P13, DOI 10.5120/11638-7118
   Halmans Gunter., 2003, SOFTWARE SYSTEM MODE, V2, P15
   Hariri N, 2013, IEEE T SOFTWARE ENG, V39, P1736, DOI 10.1109/TSE.2013.39
   Itzik N., 2014, Proceedings of CAiSE 2014 Forum, P177
   Itzik N., 2014, REVE'2014, SPLC proceedings - Volume 2: Workshops, Demonstrations, and Tools, P44, DOI DOI 10.1145/2647908.2655966
   Iversen G. R., 1987, ANAL OF VARIANCE
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kang Kyo C, 1990, Technical Report
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Krueger C.W., 2006, Software Mass Customization
   Krueger CW, 2002, LECT NOTES COMPUT SC, V2290, P282
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   Lopez-Herrejon RE, 2015, J SYST SOFTWARE, V103, P353, DOI 10.1016/j.jss.2014.10.037
   Mani I, 2006, COLING/ACL 2006, VOLS 1 AND 2, PROCEEDINGS OF THE CONFERENCE, P753
   McGregor JD, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.74
   Medelyan E, 2008, J AM SOC INF SCI TEC, V59, P1026, DOI 10.1002/asi.20790
   Mihalcea R., 2006, P 21 NAT C ART INT, V6, P775
   Morton T., 2005, Opennlp: A java-based nlp toolkit
   Niu N, 2008, INT REQUIR ENG CONF, P155, DOI 10.1109/RE.2008.49
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Raghunathan K., 2010, Proceedings of the 2010 Conference on Empirical Methods in Natural Language Processing, EMNLP '10, P492
   Reinhartz-Berger I, 2014, LECT NOTES COMPUT SC, V8484, P150, DOI 10.1007/978-3-319-07881-6_11
   Reinhartz-Berger I, 2013, DATA KNOWL ENG, V87, P320, DOI 10.1016/j.datak.2012.09.005
   Reinhartz-Berger I, 2011, LECT NOTES COMPUT SC, V6998, P275, DOI 10.1007/978-3-642-24606-7_21
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Turney P. D., 2001, P 12 EUR C MACH LEAR, P491, DOI DOI 10.1007/3-540-44795-4_42
   WAND Y, 1995, INFORM SYST J, V5, P203, DOI 10.1111/j.1365-2575.1995.tb00108.x
   WAND Y, 1990, IEEE T SOFTWARE ENG, V16, P1282, DOI 10.1109/32.60316
   WESTON N., 2009, P 13 INT SOFTWARE PR, P211
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   WU ZB, 1994, 32ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P133
   ZHAO H, 2008, J FRONTIERS COMPUTER, V2, P260
NR 52
TC 34
Z9 35
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2016
VL 42
IS 7
BP 687
EP 706
DI 10.1109/TSE.2015.2512599
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA DR7AX
UT WOS:000380053500005
DA 2024-07-18
ER

PT J
AU Harvie, DP
   Agah, A
AF Harvie, David P.
   Agah, Arvin
TI Targeted Scrum: Applying Mission Command to Agile Software Development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Scrum; mission command; line of effort; product design meeting; agile;
   empirical software engineering
AB Software engineering and mission command are two separate but similar fields, as both are instances of complex problem solving in environments with ever changing requirements. Our research hypothesis is that modifications to agile software development based on inspirations from mission command can improve the software engineering process in terms of planning, prioritizing, and communication of software requirements and progress, as well as improving the overall software product. Targeted Scrum is a modification of Traditional Scrum based on three inspirations from Mission Command: End State, Line of Effort, and Targeting. These inspirations have led to the introduction of the Product Design Meeting and modifications of some current Scrum meetings and artifacts. We tested our research hypothesis using a semester-long undergraduate level software engineering class. Students developed two software projects, one using Traditional Scrum and the other using Targeted Scrum. We then assessed how well both methodologies assisted the software development teams in planning and developing the software architecture, prioritizing requirements, and communicating progress. We also evaluated the software product produced by both methodologies. We found that Targeted Scrum did better in assisting the software development teams in the planning and prioritization of the requirements. However, Targeted Scrum had a negligible effect on improving the software development teams external and internal communications. Finally, Targeted Scrum did not have an impact on the product quality by the top performing and worst performing teams. Targeted Scrum did assist the product quality of the teams in the middle of the performance spectrum.
C1 [Harvie, David P.; Agah, Arvin] Univ Kansas, Dept Elect Engn & Comp Sci, Lawrence, KS 66045 USA.
C3 University of Kansas
RP Harvie, DP; Agah, A (corresponding author), Univ Kansas, Dept Elect Engn & Comp Sci, Lawrence, KS 66045 USA.
EM david.harvie@ku.edu; agah@ku.edu
OI Harvie, David/0000-0003-2576-3349
CR [Anonymous], JOINT PUBL 5 0 JOINT
   [Anonymous], JOINT PUBL 3 60 JOIN
   [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], THESIS SCH ADV MILIT
   [Anonymous], ARM DOCTR RES PUBL 5
   [Anonymous], FIELD MAN 3 60 TARG
   [Anonymous], ARM DOCTR PUBL 6 0 M
   [Anonymous], 2013, METRICS 1 3 6
   [Anonymous], P 1 WORKSH AG REQ EN
   [Anonymous], P C2 AGILITY LESSONS
   [Anonymous], JOINT PUBL 3 0 JOINT
   [Anonymous], PRENTICE HALL OBJECT
   [Anonymous], EXC 2013
   [Anonymous], 2010, SYSTEMS SOFTWARE ENG, P1, DOI DOI 10.1109/IEEESTD.2010.5733835
   [Anonymous], ARM DOCTR PUBL 3 0 U
   [Anonymous], ARM DOCTR REF PUBL 6
   Cao L, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.1
   Dempsey M., 2012, Mission command: White paper
   Drury M, 2012, J SYST SOFTWARE, V85, P1239, DOI 10.1016/j.jss.2012.01.058
   Li J, 2010, IEEE INT C SOL DIEL
   Marshall S., 2010, ACM SIGPLAN NOTICES, P74, DOI DOI 10.1145/1932682.1869467
   Overhage S., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P5452, DOI 10.1109/HICSS.2012.387
   Royce W.W., 1970, P IEEE WESCON IEEE, P1
   Rubin Kenneth S., 2012, Essential Scrum: A practical guide to the most popular Agile process, V1st
   Schwaber K., 2012, Software in 30 days: How agile managers beat the odds, delight their customers, and leave competitors in the dust
   Schwaber K., 2011, The Scrum Guide - The Definitive Guide to Scrum: The Rules of the Game
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Shy John., 1986, MAKERS MODERN STRATE, P143
   Sutherland J, 2007, AGILE 2007, Proceedings, P272, DOI 10.1109/AGILE.2007.52
   U.S. Army War College, 2012, ARM RUNS SEN LEAD RE
   Widder W., 2002, MIL REV, V82, P3
NR 31
TC 15
Z9 19
U1 4
U2 45
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2016
VL 42
IS 5
BP 476
EP 489
DI 10.1109/TSE.2015.2489654
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DM1IA
UT WOS:000376097700004
DA 2024-07-18
ER

PT J
AU Kessentini, W
   Kessentini, M
   Sahraoui, H
   Bechikh, S
   Ouni, A
AF Kessentini, Wael
   Kessentini, Marouane
   Sahraoui, Houari
   Bechikh, Slim
   Ouni, Ali
TI A Cooperative Parallel Search-Based Software Engineering Approach for
   Code-Smells Detection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Search-based software engineering; code-smells; software quality;
   distributed evolutionary algorithms
ID OPTIMIZATION; FRAMEWORK; ALGORITHM; DEFECTS
AB We propose in this paper to consider code-smells detection as a distributed optimization problem. The idea is that different methods are combined in parallel during the optimization process to find a consensus regarding the detection of code-smells. To this end, we used Parallel Evolutionary algorithms (P-EA) where many evolutionary algorithms with different adaptations (fitness functions, solution representations, and change operators) are executed, in a parallel cooperative manner, to solve a common goal which is the detection of code-smells. An empirical evaluation to compare the implementation of our cooperative P-EA approach with random search, two single population-based approaches and two code-smells detection techniques that are not based on meta-heuristics search. The statistical analysis of the obtained results provides evidence to support the claim that cooperative P-EA is more efficient and effective than state of the art detection approaches based on a benchmark of nine large open source systems where more than 85 percent of precision and recall scores are obtained on a variety of eight different types of code-smells.
C1 [Kessentini, Wael; Sahraoui, Houari; Ouni, Ali] Univ Montreal, Dept Comp Sci, Montreal, PQ, Canada.
   [Kessentini, Marouane; Bechikh, Slim] Univ Michigan, Dept Comp Sci, Dearborn, MI 48128 USA.
C3 Universite de Montreal; University of Michigan System; University of
   Michigan
RP Kessentini, W (corresponding author), Univ Montreal, Dept Comp Sci, Montreal, PQ, Canada.
EM kessentw@iro.umontreal.ca; marouane@umich.edu;
   sahraouh@iro.umontreal.ca; slim@umich.edu; ouniali@iro.umontreal.ca
RI Bechikh, Slim/AAF-6435-2020; Ouni, Ali/Y-8280-2019
OI Bechikh, Slim/0000-0003-1378-7415; Ouni, Ali/0000-0003-4708-0362
CR Abran A., 1993, Journal of Software Maintenance: Research and Practice, V5, P63, DOI 10.1002/smr.4360050202
   Adamopoulos K, 2004, LECT NOTES COMPUT SC, V3103, P1338
   Alba E, 2005, WILEY SER PARA DIST, P1, DOI 10.1002/0471739383
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], ACT 12 C LANG MOD OB
   Arcuri A, 2008, IEEE C EVOL COMPUTAT, P162, DOI 10.1109/CEC.2008.4630793
   Banzhaf W, 1994, LECT NOTES COMPUT SC, V866, P322
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Brudno M., 2004, THESIS STANFORD U ST
   Burczynski T, 2004, ENG APPL ARTIF INTEL, V17, P337, DOI 10.1016/j.engappai.2004.04.007
   Catal C, 2009, INFORM SCIENCES, V179, P1040, DOI 10.1016/j.ins.2008.12.001
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Ciupke O., 1999, Proceedings of Technology of Object-Oriented Languages and Systems - TOOLS 30 (Cat. No.PR00278), P18, DOI 10.1109/TOOLS.1999.787532
   Cohen J., 1988, STAT POWER ANAL BEHA
   Czibula IG, 2009, PROCEEDINGS OF THE 10TH INTERNATIONAL SYMPOSIUM ON SYMBOLIC AND NUMERIC ALGORITHMS FOR SCIENTIFIC COMPUTING, P253, DOI 10.1109/SYNASC.2008.17
   Dhambri K, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P279
   Eiben AE, 2011, SWARM EVOL COMPUT, V1, P19, DOI 10.1016/j.swevo.2011.02.001
   Erni K, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P64, DOI 10.1109/METRIC.1996.492444
   Ferrucci F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P462, DOI 10.1109/ICSE.2013.6606592
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Goldberg D. E., 1989, GENETIC ALGORITHMS S
   Harman M., ACM COMPUT SURV, V45
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Hassaine S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P343, DOI 10.1109/QUATIC.2010.61
   Hou H., 2006, P 44 SE C MELB FL US, P134
   Hughes EJ, 2005, IEEE C EVOL COMPUTAT, P222
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Karafotias G, 2013, 2013 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P349
   Kessentini M., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, P113
   Kessentini M, 2012, SOFTW SYST MODEL, V11, P209, DOI 10.1007/s10270-010-0175-7
   Kessentini M, 2011, CONF PROC INT SYMP C, P81, DOI 10.1109/ICPC.2011.22
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Kothari SC, 2004, SOFTWARE QUAL J, V12, P99, DOI 10.1023/B:SQJO.0000024058.90885.6a
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Langelier G., 2005, Proc. IEEE/ACM Automated Software Engineering, P214
   Li XD, 2012, IEEE T EVOLUT COMPUT, V16, P210, DOI 10.1109/TEVC.2011.2112662
   Liu H, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P265, DOI 10.1145/1595696.1595738
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Mitchell M., 1998, INTRO GENETIC ALGORI
   Moha N., 2007, ASE 07 2007 ACM IEEE, P527, DOI [10.1145/1321631.1321727, DOI 10.1145/1321631.1321727]
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Munro MJ, 2005, 2005 11th International Symposium on Software Metrics (METRICS), P124
   Nanni L, 2008, EXPERT SYST APPL, V35, P1463, DOI 10.1016/j.eswa.2007.08.028
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Ren J, 2011, LECT NOTES COMPUT SC, V6956, P127, DOI 10.1007/978-3-642-23716-4_14
   Salehie M, 2006, INT C PROGRAM COMPRE, P159, DOI 10.1109/ICPC.2006.6
   Salto C, 2012, APPL INTELL, V36, P800, DOI 10.1007/s10489-011-0297-9
   Siarry P, 2008, NAT COMPUT SER, P1, DOI 10.1007/978-3-540-72960-0
   Talbi E-G, 2009, Metaheuristics: from Design to Implementation, DOI DOI 10.1002/9780470496916
   Tomassini M, 2010, GENET PROGRAM EVOL M, V11, P129, DOI 10.1007/s10710-010-9106-1
   Travassos GH, 1999, ACM SIGPLAN NOTICES, V34, P47, DOI 10.1145/320385.320389
   Tsantalis N, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P329
   Wang Y, 2007, IEEE T SYST MAN CY B, V37, P560, DOI 10.1109/TSMCB.2006.886164
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 55
TC 82
Z9 92
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2014
VL 40
IS 9
BP 841
EP 861
DI 10.1109/TSE.2014.2331057
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AR9MI
UT WOS:000343898600001
DA 2024-07-18
ER

PT J
AU Hertis, M
   Juric, MB
AF Hertis, Matej
   Juric, Matjaz B.
TI An Empirical Analysis of Business Process Execution Language Usage
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE WS-BPEL Analysis; complexity measure; service composition; process
   patterns; process complexity; process comprehension; empirical study
ID PROCESS MODELS; COMPLEXITY; PATTERNS
AB The current state of executable business process languages allows for and demands optimization of design practices and specifications. In this paper, we present the first empirical study that analyses Web Services Business Process Execution Language (WS-BPEL or BPEL) usage and characteristics of real world executable business processes. We have analysed 1,145 BPEL processes by measuring activity usage and process complexity. In addition, we investigated the occurrence of activity usage patterns. The results revealed that the usage frequency of BPEL activities varies and that some activities have a strong co-occurrence. BPEL activities often appear in activity patterns that are repeated in multiple processes. Furthermore, the current process complexity metrics have proved to be inadequate for measuring BPEL process complexity. The empirical results provide fundamental knowledge on how BPEL specification and process design practices can be improved. We propose BPEL design guidelines and BPEL language improvements for the design of more understandable and less complex processes. The results are of interest to business process language designers, business process tool developers, business process designers and developers, and software engineering researchers, and contribute to the general understanding of BPEL and service-oriented architecture.
C1 [Hertis, Matej] Univ Ljubljana, Fac Comp & Informat Sci, Lab Integrat Informat Syst, SI-1000 Ljubljana, Slovenia.
   [Hertis, Matej] Seltron Doo, Maribor 2000, Slovenia.
   [Juric, Matjaz B.] Univ Ljubljana, SI-1000 Ljubljana, Slovenia.
C3 University of Ljubljana; University of Ljubljana
RP Hertis, M (corresponding author), Univ Ljubljana, Fac Comp & Informat Sci, Lab Integrat Informat Syst, Trzaska Cesta 25, SI-1000 Ljubljana, Slovenia.
EM matej.hertis@fri.uni-lj.si; matjaz.juric@fri.uni-lj.si
CR [Anonymous], J SYST INTEGR
   [Anonymous], 2009, Assessing progress towards the AU's 10% budget target for agriculture, P1
   [Anonymous], 2002, USING FAULT HANDLING
   Asai T, 2002, SIAM PROC S, P158
   Becker J, 2000, LECT NOTES COMPUT SC, V1806, P30
   Becker J., 2004, Proceedings of the 15th irma international conference, P1
   Börger E, 2012, SOFTW SYST MODEL, V11, P305, DOI 10.1007/s10270-011-0214-z
   Cardoso J., 2007, Software Process Improvement and Practice, V12, P35, DOI 10.1002/spip.302
   Cardoso J, 2006, LECT NOTES COMPUT SC, V4103, P117
   Cardoso J., 2005, WROKFLOW HDB
   Cardoso J, 2006, P IEEE I C SERV COMP, P167, DOI 10.1109/SCC.2006.82
   Chengying Mao, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P349, DOI 10.1109/QSIC.2010.21
   Chinosi M, 2012, COMPUT STAND INTER, V34, P124, DOI 10.1016/j.csi.2011.06.002
   Deng Min, 2010, Proceedings of the 2010 International Conference on Communications and Mobile Computing (CMC 2010), P559, DOI 10.1109/CMC.2010.271
   Deng N., 2010, P INT C COMP INT SOF, P1
   Deng N., 2011, J COMPUT INFORM SYST, V7, P2299
   Eberle H, 2010, LECT NOTES COMPUT SC, V6275, P358
   Eindhoven University of Technology and Queensland University of Technology, 2010, WORKFL PATT
   Erickson J, 2007, COMMUN ACM, V50, P46, DOI 10.1145/1278201.1278205
   Gorlach K., 2011, WS BEPL EXTENSION CO
   Gruhn V, 2007, SCI COMPUT PROGRAM, V65, P4, DOI 10.1016/j.scico.2006.08.003
   Gruhn V, 2006, PROCEEDINGS OF THE FIFTH IEEE INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS, VOLS 1 AND 2, P236, DOI 10.1109/COGINF.2006.365702
   Gruhn V, 2009, PROCEEDINGS OF THE 8TH IEEE INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS, P339, DOI 10.1109/COGINF.2009.5250717
   Gschwind T, 2008, LECT NOTES COMPUT SC, V5240, P4, DOI 10.1007/978-3-540-85758-7_4
   Hallwyl T., 2010, Proceedings of the 25th ACM Symposium on Applied Computing (SAC'10), P2472
   Hertis M., 2013, EMPIRICAL ANAL BPEL
   IBM, 2013, LIFE CYCL MAN BPEL S
   IBM, 2012, WORK BPEL EXT
   Jiang CT, 2013, KNOWL ENG REV, V28, P75, DOI 10.1017/S0269888912000331
   Juric M. B., 2010, WS BPEL 2 0 SOA COMP, P616
   Juric M. B., 2010, WS BPEL 2 0 SOA COMP, P644
   Juric MB, 2009, INFORM SOFTWARE TECH, V51, P1261, DOI 10.1016/j.infsof.2009.03.003
   Kloppmann M., 2005, WS BPEL EXTENSION SU
   Kloppmann M., 2005, WS BPEL EXTENSION PE
   Koehler J., 2007, IBM WEBSPHERE DEV TE, V10, P4
   Koenig D., 2011, IBM DEVELOPERWORKS
   Kovacs M., 2008, INT J COMPUT SYST SC, V23, P261
   Liu A, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P272
   Lohmann N, 2008, DATA KNOWL ENG, V64, P38, DOI 10.1016/j.datak.2007.06.006
   Ma ZL, 2009, ICNS: 2009 FIFTH INTERNATIONAL CONFERENCE ON NETWORKING AND SERVICES, P63, DOI 10.1109/ICNS.2009.76
   Manoj D., 2006, BUSINESS PROCESS MAN
   Mendling J, 2010, INFORM SYST, V35, P467, DOI 10.1016/j.is.2009.03.009
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Mendling J., 2006, BPM-06-08, BPM Center Report
   Mendling J, 2007, LECT NOTES COMPUT SC, V4714, P48
   Muketha G. M., 2010, Information Technology Journal, V9, P1336, DOI 10.3923/itj.2010.1336.1344
   Number O. M. G. D., 2011, BUSINESS PROCESS MOD
   OASIS, 2007, Web Services Business Process Execution Language Version 2.0
   Oracle, 2013, T FAULT PROP SEM BPE
   Oracle, 2013, OR FUS MIDDL 10G DOC
   Ouyang C, 2005, LECT NOTES COMPUT SC, V3826, P484
   Reijers HA, 2011, INFORM SYST, V36, P881, DOI 10.1016/j.is.2011.03.003
   Reijers HA, 2011, IEEE T SYST MAN CY A, V41, P449, DOI 10.1109/TSMCA.2010.2087017
   González LS, 2010, BUS PROCESS MANAG J, V16, P114, DOI 10.1108/14637151011017976
   Sanchez-Gonzalez L., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, P1445, DOI [DOI 10.1145/1982185.1982496, 10.1145/1982185.1982496]
   Schumm D., 2007, PROCESSES GRAPHICAL
   Schumm D, 2010, IEEE INT ENTERP DIST, P89, DOI 10.1109/EDOC.2010.16
   Shao JQ, 2003, CAN J ELECT COMPUT E, V28, P69, DOI 10.1109/CJECE.2003.1532511
   Smirnov S, 2012, COMPUT IND, V63, P98, DOI 10.1016/j.compind.2011.11.001
   The Apache Software Foundation, 2013, BPEL EXT
   van Breugel F., 2006, Models and Verification of BPEL
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   van Grondelle JC, 2011, LECT NOTES BUS INF P, V92, P38
   Wohed P, 2003, LECT NOTES COMPUT SC, V2813, P200
   WOHED P, 2002, FITTR200204 QUT
   zur Muehlen M, 2008, LECT NOTES COMPUT SC, V5074, P465
   [No title captured]
NR 67
TC 17
Z9 18
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2014
VL 40
IS 8
BP 738
EP 757
DI 10.1109/TSE.2014.2322618
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AR9MG
UT WOS:000343898400001
DA 2024-07-18
ER

PT J
AU Kim, S
AF Kim, Saehwa
TI Synthesizing Multithreaded Code from Real-Time Object-Oriented Models
   via Schedulability-Aware Thread Derivation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Multitasking; object-oriented design methods; real-time systems and
   embedded systems; system integration and implementation
ID SYSTEM-DESIGN; MULTITASKING
AB One of the major difficulties in developing embedded systems with object-oriented modeling is to translate a designed model into code that satisfies required real-time performance. This paper proposes scenario-based implementation synthesis architecture with timing guarantee (SISAtime) that addresses these difficulties. The problems that SISAtime must solve are: how to synthesize multithreaded-code from a real-time object-oriented model; and how to design supporting development tools and runtime system architecture while ensuring that the scenarios in the system have minimal response times and the code satisfies the given timing constraints with a minimal number of threads. SISAtime provides a new scheduling algorithm which minimizes scenario response times. SISAtime also provides a new thread derivation method that derives tasks and maps tasks to threads while automatically assigning task scheduling attributes. We have fully implemented SISAtime by extending the RoseRT development tool that uses UML 2.0 as a modeling language, and we applied it to an existing industrial private branch exchange system. The performance evaluation results show that the response times, context switches, and the number of threads of the system with SISAtime were reduced by 21.6, 33.2, and 65.2 percent, respectively, compared to the system with the best known existing thread derivation method.
C1 Hankuk Univ Foreign Studies, Dept Informat Commun Engn, Yongin 449791, Gyeonggi Do, South Korea.
C3 Hankuk University Foreign Studies
RP Kim, S (corresponding author), Hankuk Univ Foreign Studies, Dept Informat Commun Engn, Global Campus,San 89, Yongin 449791, Gyeonggi Do, South Korea.
EM ksaehwa@hufs.ac.kr
FU Hankuk University of Foreign Studies Research Fund
FX This work was supported by the Hankuk University of Foreign Studies
   Research Fund of 2013. The author thanks anonymous reviewers for their
   highly valuable comments.
CR [Anonymous], 2013, MOD DRIV ARCH MDA
   [Anonymous], 1999, DOING HARD TIME DEV
   Awad Maher., 1996, Object-Oriented Technology for Real-Time Systems, A Practical Approach using OMT and Fusion
   Bennett AJ, 2004, IEEE COMPUTER SOCIETY'S 12TH ANNUAL INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS, AND SIMULATION OF COMPUTER AND TELECOMMUNICATIONS SYSTEMS - PROCEEDINGS, P67, DOI 10.1109/MASCOT.2004.1348183
   Bletsas K, 2006, INFORM PROCESS LETT, V99, P83, DOI 10.1016/j.ipl.2006.03.002
   BOASSON M, 1993, IEEE T AUTOMAT CONTR, V38, P1094, DOI 10.1109/9.231463
   BURNS A, 1996, REAL TIME SYSTEMS SP, P32
   Bush S.E., 1993, PRIVATE BRANCH EXCHA
   Chen JX, 2005, RTAS 2005: 11TH IEEE REAL TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P385
   Douglass BrucePowell., 2004, REAL TIME UML ADV UM
   Gaudreau D, 1996, 1996 IEEE REAL-TIME TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P110, DOI 10.1109/RTTAS.1996.509528
   Gomaa H., 2000, DESIGNING CONCURRENT
   Gomaa H., 1993, SOFTW DES METH CONC
   Gu G., 2003, P 2003 C CTR ADV STU, P66
   Gu Z., 2004, P RTAS WORKSH MOD DR
   IBM Rational, 2013, ROSERT
   Jin Dongxi, 2002, P 3 INT WORKSH SOFTW, P243
   Kim S, 2002, ACM SIGPLAN NOTICES, V37, P223, DOI 10.1145/566225.513866
   Kim S, 2000, SEVENTH INTERNATIONAL CONFERENCE ON REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P7, DOI 10.1109/RTCSA.2000.896365
   Kim S., 2011, HUFSIIERI11TR01 INF
   Kim S, 2006, INFORM SOFTWARE TECH, V48, P820, DOI 10.1016/j.infsof.2005.10.003
   LEHOCZKY JP, 1990, PROCEEDINGS : 11TH REAL-TIME SYSTEMS SYMPOSIUM, P201, DOI 10.1109/REAL.1990.128748
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   Liu J, 2003, IEEE CONTR SYST MAG, V23, P65, DOI 10.1109/MCS.2003.1172830
   Object Management Group, 2007, UN MOD LANG UML 2 0
   Object Management Group, 2005, FORMAL20050102 OMG
   Regehr J, 2002, REAL TIM SYST SYMP P, P315, DOI 10.1109/REAL.2002.1181585
   Saiedian H, 2004, COMPUTER, V37, P56, DOI 10.1109/MC.2004.183
   Saksena M, 1997, REAL TIM SYST SYMP P, P240, DOI 10.1109/REAL.1997.641286
   Saksena M, 2000, REAL TIM SYST SYMP P, P25, DOI 10.1109/REAL.2000.895993
   Saksena M, 2000, EUROMICRO, P101, DOI 10.1109/EMRTS.2000.853997
   Saksena M, 1998, REAL TIM SYST SYMP P, P92, DOI 10.1109/REAL.1998.739734
   SAKSENA M, 2000, P IEEE INT S OBJ OR
   Selic B., 1994, REAL TIME OBJECT ORI
   SHA L, 1990, IEEE T COMPUT, V39, P1175, DOI 10.1109/12.57058
   TINDELL KW, 1994, REAL-TIME SYST, V6, P133, DOI 10.1007/BF01088593
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P1089, DOI 10.1109/32.738341
   Wang SG, 2006, IEEE T SOFTWARE ENG, V32, P254, DOI 10.1109/TSE.2006.39
   Wilhelm R, 2008, ACM T EMBED COMPUT S, V7, DOI 10.1145/1347375.1347389
   Yau SS, 2002, PROCEEDINGS OF THE SEVENTH IEEE INTERNATIONAL WORKSHOP ON OBJECT-ORIENTED REAL-TIME DEPENDABLE SYSTEMS, P45, DOI 10.1109/WORDS.2002.1000035
   Yun Wang, 1999, Proceedings Sixth International Conference on Real-Time Computing Systems and Applications. RTCSA'99 (Cat. No.PR00306), P328, DOI 10.1109/RTCSA.1999.811269
NR 41
TC 5
Z9 5
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2014
VL 40
IS 4
BP 413
EP 426
DI 10.1109/TSE.2013.47
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AH3WD
UT WOS:000336056000006
DA 2024-07-18
ER

PT J
AU Thomas, SW
   Nagappan, M
   Blostein, D
   Hassan, AE
AF Thomas, Stephen W.
   Nagappan, Meiyappan
   Blostein, Dorothea
   Hassan, Ahmed E.
TI The Impact of Classifier Configuration and Classifier Combination on Bug
   Localization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software maintenance; bug localization; information retrieval; VSM; LSI;
   LDA; classifier combination
ID LOCATION
AB Bug localization is the task of determining which source code entities are relevant to a bug report. Manual bug localization is labor intensive since developers must consider thousands of source code entities. Current research builds bug localization classifiers, based on information retrieval models, to locate entities that are textually similar to the bug report. Current research, however, does not consider the effect of classifier configuration, i.e., all the parameter values that specify the behavior of a classifier. As such, the effect of each parameter or which parameter values lead to the best performance is unknown. In this paper, we empirically investigate the effectiveness of a large space of classifier configurations, 3,172 in total. Further, we introduce a framework for combining the results of multiple classifier configurations since classifier combination has shown promise in other domains. Through a detailed case study on over 8,000 bug reports from three large-scale projects, we make two main contributions. First, we show that the parameters of a classifier have a significant impact on its performance. Second, we show that combining multiple classifiers-whether those classifiers are hand-picked or randomly chosen relative to intelligently defined subspaces of classifiers-improves the performance of even the best individual classifiers.
C1 [Thomas, Stephen W.; Nagappan, Meiyappan; Blostein, Dorothea; Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON K7K 2N8, Canada.
C3 Queens University - Canada
RP Thomas, SW (corresponding author), Queens Univ, Sch Comp, Kingston, ON K7K 2N8, Canada.
EM sthomas@cs.queensu.ca; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan, Ahmed/AAB-7241-2019; Ali,
   Ahmed/HOF-4672-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; 
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   Blackberry
FX This work was funded in part by the Natural Sciences and Engineering
   Research Council of Canada (NSERC) and Blackberry. The authors would
   like to thank Nguyen et al. [40] for providing them with an early
   version of their recent work and Nicholas A. Kraft for a helpful
   discussion about his bug localization experience. They would also like
   to thank Thanh H. D. Nguyen and Yasutaka Kamei for their help with data
   collection. Finally, they would like to thank the anonymous reviewers
   for their very constructive feedback on early drafts of this work.
CR Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   [Anonymous], 2011, P ACM SIGSOFT S EURO
   [Anonymous], 1999, WWW 1999
   [Anonymous], 1999, MODERN INFORM RETRIE
   [Anonymous], 2012586 QUEENS U SCH
   [Anonymous], 2011, ECL FDN
   [Anonymous], 2009, TEXT MINING CLASSIFI, DOI [DOI 10.1145/1141844.1143859, DOI 10.1201/9781420059458.CH4]
   [Anonymous], 2008, INTRO INFORM RETRIEV, DOI DOI 10.1017/CBO9780511809071
   Arnold R. S., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P292, DOI 10.1109/ICSM.1993.366933
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bohner S. A., 1996, SOFTWARE CHANGE IMPA
   Box G., 1960, TECHNOMETRICS, V2, P455, DOI [DOI 10.1080/00401706.1960.10489912, 10.1080/00401706.1960.10489912, DOI 10.2307/1266454, 10.2307/1266454]
   Carpineto C, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2071389.2071390
   Chang J., 2009, AISTATS
   Cleary B, 2009, EMPIR SOFTW ENG, V14, P93, DOI 10.1007/s10664-008-9095-3
   Cormack GV, 2009, PROCEEDINGS 32ND ANNUAL INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P758, DOI 10.1145/1571941.1572114
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dit B, 2011, CONF PROC INT SYMP C, P11, DOI 10.1109/ICPC.2011.47
   Enslen E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P71, DOI 10.1109/MSR.2009.5069482
   Fischer M., 2003, P 19 INT C SOFTW MAI
   Glass R., 2003, FACTS FALLACIES SOFT
   Hillberg E., 2012, P CIGRE PAR FRANC, V21, P1
   HO TK, 1994, IEEE T PATTERN ANAL, V16, P66, DOI 10.1109/34.273716
   IBM, 2011, JAZZ
   Keogh E. J., 2004, KDD, P206, DOI [DOI 10.1145/1014052.1014077, 10.1145/1014052.1014077]
   Kittler J, 1998, IEEE T PATTERN ANAL, V20, P226, DOI 10.1109/34.667881
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Kuehl R.O., 2000, Design of experiments: statistical principles of research designand analysis, V2nd
   Lawrie D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P113, DOI 10.1109/ICSM.2011.6080778
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Madani N, 2010, EUR CON SFTWR MTNCE, P68, DOI 10.1109/CSMR.2010.31
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   McCallum A.K., 2002, MALLET MACHINE LEARN
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Misirli AT, 2011, SOFTWARE QUAL J, V19, P515, DOI 10.1007/s11219-010-9128-1
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   MYERS RH, 1989, TECHNOMETRICS, V31, P137, DOI 10.2307/1268813
   Nguyen T. H. D., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P259, DOI 10.1109/WCRE.2010.37
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2007, INT C PROGRAM COMPRE, P37
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Revelle Meghan, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P14, DOI 10.1109/ICPC.2010.10
   Robertson S., 2004, P 13 ACM INT C INF K, P42
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Selby RW, 2005, IEEE T SOFTWARE ENG, V31, P495, DOI 10.1109/TSE.2005.69
   Sliwerski J., 2005, P 2 WORK C MIN SOFTW
   Tukey J. W., 1994, COLLECTED WORKS JW T, V8
   TUKEY J. W., 1991, Statistical Science, V6, P100, DOI [10.1214/ss/1177011945, DOI 10.1214/SS/1177011945]
   Van Erp M., 2000, Proceedings of the 7th International Workshop on Frontiers in Handwriting Recognition, P443
   Wang HJ, 2012, NEUROCOMPUTING, V92, P124, DOI 10.1016/j.neucom.2011.08.040
   Xing Wei, 2006, Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P178
   Zimmermann T., 2007, P ICSE 2007 WORK 3 I, DOI [10.1109/PROMISE.2007.10, DOI 10.1109/PROMISE.2007.10]
NR 59
TC 64
Z9 71
U1 0
U2 22
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2013
VL 39
IS 10
BP 1427
EP 1443
DI 10.1109/TSE.2013.27
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 228FO
UT WOS:000325171400006
DA 2024-07-18
ER

PT J
AU Cinque, M
   Cotroneo, D
   Pecchia, A
AF Cinque, Marcello
   Cotroneo, Domenico
   Pecchia, Antonio
TI Event Logs for the Analysis of Software Failures: A Rule-Based Approach
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Event log; logging mechanism; rule-based logging; error detection;
   software failures
ID FAULTS; TIME
AB Event logs have been widely used over the last three decades to analyze the failure behavior of a variety of systems. Nevertheless, the implementation of the logging mechanism lacks a systematic approach and collected logs are often inaccurate at reporting software failures: This is a threat to the validity of log-based failure analysis. This paper analyzes the limitations of current logging mechanisms and proposes a rule-based approach to make logs effective to analyze software failures. The approach leverages artifacts produced at system design time and puts forth a set of rules to formalize the placement of the logging instructions within the source code. The validity of the approach, with respect to traditional logging mechanisms, is shown by means of around 12,500 software fault injection experiments into real-world systems.
C1 [Cinque, Marcello; Cotroneo, Domenico; Pecchia, Antonio] Univ Naples Federico II, DIS, I-80125 Naples, Italy.
C3 University of Naples Federico II
RP Cinque, M (corresponding author), Univ Naples Federico II, DIS, Via Claudio 21, I-80125 Naples, Italy.
EM macinque@unina.it; cotroneo@unina.it; antonio.pecchia@unina.it
RI Cinque, Marcello/B-6090-2012; CINQUE, Marcello/AAV-6700-2020
OI CINQUE, Marcello/0000-0003-1455-8614
FU EU [230672]; project "EMBEDDED Systems", POR Campania FSE [CUP
   B25B09000100007]
FX This work was supported by the European project CRITICAL Software
   Technology for an Evolutionary Partnership (CRITICAL STEP), Marie Curie
   Industry-Academia Partnerships and Pathways (IAPP) number 230672, in the
   context of the EU Seventh Framework Programme (FP7) and by the project
   "EMBEDDED Systems" CUP B25B09000100007, POR Campania FSE 2007/2013.
CR Alizadeh M, 2010, ACM SIGCOMM COMP COM, V40, P63, DOI 10.1145/1851275.1851192
   [Anonymous], 1992, DIGEST PAPERS FTCS 2
   [Anonymous], 2012, AP LOG4J
   [Anonymous], 2012, SLOCCOUNT
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Barringer H, 2010, J AEROS COMP INF COM, V7, P365, DOI 10.2514/1.49356
   Bauer A., 2006, MODELLIERUNG AUTOMOT
   BUCKLEY MF, 1995, DIG PAP INT SYMP FAU, P414, DOI 10.1109/FTCS.1995.466958
   Buckley MF, 1996, DIG PAP INT SYMP FAU, P294, DOI 10.1109/FTCS.1996.534614
   Cantrill B., 2004, P USENIX ANN TECHN C
   Chen MY, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P595, DOI 10.1109/DSN.2002.1029005
   Cinque M, 2010, I C DEPEND SYS NETWO, P457, DOI 10.1109/DSN.2010.5544279
   Cotroneo D., 2006, P INT C DISTR COMP S
   David F.M., 2007, EXPCS 07, P3
   Duraes JA, 2006, IEEE T SOFTWARE ENG, V32, P849, DOI 10.1109/TSE.2006.113
   Elrad T, 2001, COMMUN ACM, V44, P28
   HECHT H, 1976, COMPUT SURV, V8, P391, DOI 10.1145/356678.356681
   Hiller M., 2000, P INT C DEP SYST NET
   IBM, 2012, COMM EV INFR
   Iyer R. K., 1986, 1986 Proceedings of the Fall Joint Computer Conference (Cat. No.86CH2345-7), P797
   Iyer RK, 2000, LECT NOTES COMPUT SC, V1769, P161
   Kalyanakrishnam M., 1999, Proceedings of the 18th IEEE Symposium on Reliable Distributed Systems, P178, DOI 10.1109/RELDIS.1999.805094
   Liang YL, 2006, I C DEPEND SYS NETWO, P425
   Lim C., 2008, P INT C DEP SYST NET
   Lonvick C., 2001, RFC3164 INT SOC NETW
   Murphy B., 2000, MSRTR200056
   Murray J. D., 1998, WINDOWS NT EVENT LOG
   Natella R, 2013, IEEE T SOFTWARE ENG, V39, P80, DOI 10.1109/TSE.2011.124
   Obermaisser R., 2007, P INT EMB SYST S JUN
   Oliner A. J., P INT C DEP SYST NET, P575
   Oppenheimer D. L., 2003, P USENIX S INT TECHN
   Pecchia A, 2011, I C DEPEND SYS NETWO, P97, DOI 10.1109/DSN.2011.5958210
   Rabkin Ariel., 2010, SLAML'10: Proceedings of the 2010 workshop on Managing systems via log analysis and machine learning techniques, P3
   Rouillard J. P., 2004, P USENIX SYST ADM C
   Sahoo RK, 2003, P ACM SIGKDD INT C K, P426, DOI [10.1145/956750.956799., DOI 10.1145/956750.956799, 10.1145/956750.956799]
   Salfner F., 2004, P IEEE PAR DISTR PRO
   Schroeder B, 2006, I C DEPEND SYS NETWO, P249, DOI 10.1109/DSN.2006.5
   Siewiorek DP, 2004, IEEE T DEPEND SECURE, V1, P109, DOI 10.1109/TDSC.2004.20
   Silva L. M., 2008, P INT S NETW COMP AP
   Simache C., 2001, P INT S SOFTW REL EN
   Simache C., P PAC RIM INT S DEP, P49
   Stallings W., 2008, OPERATING SYSTEMS IN, V6th
   Stearley J, 2008, IEEE ACM INT SYMP, P765, DOI 10.1109/CCGRID.2008.107
   Tamches A., 1999, P 3 S OP SYST DES IM
   Tang D, 1998, IEEE T RELIAB, V47, P443, DOI 10.1109/24.756088
   Thakur A, 1996, IEEE T RELIAB, V45, P561, DOI 10.1109/24.556579
   Vaarandi R., 2002, P WORKSH IP OP MAN
   Viega J, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.895163
   Wang L, 2007, IEEE T RELIAB, V56, P597, DOI 10.1109/TR.2007.909758
   Xu J., 1999, P PAC RIM INT S DEP
   Xu W., 2009, P S OP SYST PRINC
   Yuan D, 2011, ACM SIGPLAN NOTICES, V46, P3, DOI 10.1145/1961296.1950369
NR 52
TC 63
Z9 74
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2013
VL 39
IS 6
BP 806
EP 821
DI 10.1109/TSE.2012.67
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 149RG
UT WOS:000319338200006
DA 2024-07-18
ER

PT J
AU Itkonen, J
   Mäntylä, MV
   Lassenius, C
AF Itkonen, Juha
   Mantyla, Mika V.
   Lassenius, Casper
TI The Role of the Tester's Knowledge in Exploratory Software Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; exploratory testing; validation; test execution; test
   design; human factors; methods for SQA; and V&V
ID INSPECTION; WORK
AB We present a field study on how testers use knowledge while performing exploratory software testing (ET) in industrial settings. We video recorded 12 testing sessions in four industrial organizations, having our subjects think aloud while performing their usual functional testing work. Using applied grounded theory, we analyzed how the subjects performed tests and what type of knowledge they utilized. We discuss how testers recognize failures based on their personal knowledge without detailed test case descriptions. The knowledge is classified under the categories of domain knowledge, system knowledge, and general software engineering knowledge. We found that testers applied their knowledge either as a test oracle to determine whether a result was correct or not, or for test design, to guide them in selecting objects for test and designing tests. Interestingly, a large number of failures, windfall failures, were found outside the actual focus areas of testing as a result of exploratory investigation. We conclude that the way exploratory testers apply their knowledge for test design and failure recognition differs clearly from the test-case-based paradigm and is one of the explanatory factors of the effectiveness of the exploratory testing approach.
C1 [Itkonen, Juha; Mantyla, Mika V.; Lassenius, Casper] Aalto Univ, Dept Comp Sci & Engn, Sch Sci, FI-00076 Aalto, Finland.
C3 Aalto University
RP Itkonen, J (corresponding author), Aalto Univ, Dept Comp Sci & Engn, Sch Sci, POB 15400, FI-00076 Aalto, Finland.
EM juha.itkonen@aalto.fi; mika.mantyla@aalto.fi; casper.lassenius@aalto.fi
RI Mäntylä, Mika V/E-7644-2012; Itkonen, Juha/E-8360-2012; Lassenius,
   Casper/A-4339-2013
OI Mantyla, Mika/0000-0002-2841-5879; Itkonen, Juha/0000-0001-9084-495X;
   Lassenius, Casper/0000-0003-4192-7024
FU Tekes (Finnish Funding Agency for Technology and Innovation); SoSE
   (Graduate School on Software Systems and Engineering)
FX The authors would like to thank the subjects and participating companies
   for providing access to the field settings. This research was partly
   funded by Tekes (Finnish Funding Agency for Technology and Innovation)
   and SoSE (Graduate School on Software Systems and Engineering).
CR [Abran A. IEEE Computer Society IEEE Computer Society], 2004, GUIDE SOFTWARE ENG B
   ADELSON B, 1985, IEEE T SOFTWARE ENG, V11, P1351, DOI 10.1109/TSE.1985.231883
   Andersson C, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P37, DOI 10.1109/ISESE.2002.1166923
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 2004, A practitioner's guide to software test design
   [Anonymous], 1990, 610121990 IEEE, P83
   [Anonymous], 2009, Proceedings of the 2009 Annual Research Conference of the South African Institute of Computer Scientists and Information Technologists
   Bach J., 2004, The Testing Practitioner, V2nd, P253
   Bach Jonathan, 2000, Software Testing and Quality Engineering Magazine, V2, P32
   Baresi Luciano., 2001, Test Oracles
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   Beer A, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P258, DOI 10.1109/SEAA.2008.28
   Berner S, 2005, PROC INT CONF SOFTW, P571
   Bolton M., 2005, BETTER SOFTWARE  JAN
   Bondavalli A., 1990, Proceedings. Second IEEE Workshop on Future Trends of Distributed Computing Systems, P47, DOI 10.1109/FTDCS.1990.138293
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Cotroneo D., 2006, Distributed Computing Systems, P17, DOI DOI 10.1109/ICDCS.2006.37
   Crispin L., 2009, AGILE TESTING PRACTI
   do Nascimento L.H., 2007, Workshop on Domain specific approaches to software test automation: in conjunction with the 6th ESEC/FSE joint meeting, P27
   Engelke C., 2002, MED DEVICE DIAGNOSTI, V24
   Engstrom E., 2010, P 11 INT C PROD FOC
   Fewster M., 1999, Software test automation: effective use of test execution tools
   Folstad A, 2007, INT J HUM-COMPUT INT, V22, P217, DOI 10.1080/10447310709336963
   Freimut B., 2001, 07201E FRAUNH IESE
   Galletta F., 1993, Accounting, Management Information Technology, V3, P79, DOI [10.1016/0959-8022(93)90001-M, DOI 10.1016/0959-8022(93)90001-M]
   Goodenough J. B., 1975, IEEE Transactions on Software Engineering, VSE-1, P156, DOI 10.1109/TSE.1975.6312836
   Hofer A., 2008, P 2008 INT WORKSH SC, P37
   Houdek F, 2002, INT J SOFTW ENG KNOW, V12, P637, DOI 10.1142/S0218194002001128
   HOWDEN WE, 1978, IEEE T SOFTWARE ENG, V4, P293, DOI 10.1109/TSE.1978.231514
   Hughes J, 2003, BEHAV INFORM TECHNOL, V22, P127, DOI 10.1080/0144929031000081341
   Huijuan Wu, 2009, 2009 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM), P456, DOI 10.1109/ESEM.2009.5315995
   Hvannberg E.T., 2003, P INTERACT 2003, P655
   Itkonen J, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P82, DOI 10.1109/ISESE.2005.1541817
   Itkonen Juha, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P61
   Itkonen J., 2005, INT J AGILE MANUFACT, V8, P39
   Itkonen J, 2009, INT SYMP EMP SOFTWAR, P495
   Juristo N., 2003, EMPIRICAL METHODS ST
   Kaner C., 1999, TESTING COMPUTER SOF
   Kaner Cem., 2002, LESSONS LEARNED SOFT
   Kasurinen J., 2010, P 2010 ACM IEEE INT
   Kettunen V., 2010, P 19 INT S SOFTW TES, P231, DOI [10.1145/1831708.1831737, DOI 10.1145/1831708.1831737]
   Kharlamov Mikhail, 2008, IT Professional, V10, P14, DOI 10.1109/MITP.2008.41
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Lyndsay James, 2003, Adventures in Session-Based Testing
   Mäntylä MV, 2012, SOFTWARE QUAL J, V20, P145, DOI 10.1007/s11219-011-9157-4
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   Martin D, 2007, PROC INT CONF SOFTW, P602
   Memon A, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P164, DOI 10.1109/ASE.2003.1240304
   Merkel R., 2010, 2010001 SWINB U TECH
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Ng SP, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P116, DOI 10.1109/ASWEC.2004.1290464
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Pichler Josef, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P494, DOI 10.1109/ICST.2008.52
   Poon PL, 2011, SOFTWARE QUAL J, V19, P141, DOI 10.1007/s11219-010-9109-4
   Prechelt L., 2008, 7 TYPES COOPERATION
   Robilliard PN, 1999, COMMUN ACM, V42, P87, DOI 10.1145/291469.291476
   Rooksby J, 2009, COMPUT SUPP COOP W J, V18, P559, DOI 10.1007/s10606-009-9098-7
   SALINGER S, 2008, HUM TECHNOL, V4, P9, DOI DOI 10.17011/HT/URN.200804151350
   Sandberg J, 2000, ACAD MANAGE J, V43, P9, DOI 10.5465/1556383
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Seaman CB, 1998, IEEE T SOFTWARE ENG, V24, P559, DOI 10.1109/32.708569
   Shoaib L., 2009, P 13 IEEE INT MULT C
   Sonnentag S, 1998, J APPL PSYCHOL, V83, P703, DOI 10.1037/0021-9010.83.5.703
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Tinkham A., 2003, P PAC NW SOFTW QUAL
   Tinkham A., 2003, P SOFTW TEST AN REV, P9
   Tuomikoski J., 2009, P 10 INT C PROD FOC
   TURLEY RT, 1995, J SYST SOFTWARE, V28, P19, DOI 10.1016/0164-1212(94)00078-2
   Våga J, 2002, SOFTWARE QUALITY AND SOFTWARE TESTING IN INTERNET TIMES, P23
   Wallace DoloresR., 2001, International Journal of Reliability Quality and Safety Engineering, V8, P351, DOI DOI 10.1142/S021853930100058X
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   Whittaker J. A., 2009, Exploratory software testing: tips, tricks, tours, and techniques to guide test design
   Whittaker JA, 2000, IEEE SOFTWARE, V17, P70, DOI 10.1109/52.819971
   Whittaker James A., 2003, BREAK SOFTWARE PRACT
   Wood Bill, 2003, Medical Device and Diagnostic Industry, V25, P90
NR 76
TC 60
Z9 65
U1 2
U2 35
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2013
VL 39
IS 5
BP 707
EP 724
DI 10.1109/TSE.2012.55
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 140GL
UT WOS:000318642300007
DA 2024-07-18
ER

PT J
AU Soares, G
   Gheyi, R
   Massoni, T
AF Soares, Gustavo
   Gheyi, Rohit
   Massoni, Tiago
TI Automated Behavioral Testing of Refactoring Engines
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Refactoring; automated testing; program generation
ID SOFTWARE; GENERATION
AB Refactoring is a transformation that preserves the external behavior of a program and improves its internal quality. Usually, compilation errors and behavioral changes are avoided by preconditions determined for each refactoring transformation. However, to formally define these preconditions and transfer them to program checks is a rather complex task. In practice, refactoring engine developers commonly implement refactorings in an ad hoc manner since no guidelines are available for evaluating the correctness of refactoring implementations. As a result, even mainstream refactoring engines contain critical bugs. We present a technique to test Java refactoring engines. It automates test input generation by using a Java program generator that exhaustively generates programs for a given scope of Java declarations. The refactoring under test is applied to each generated program. The technique uses SAFEREFACTOR, a tool for detecting behavioral changes, as an oracle to evaluate the correctness of these transformations. Finally, the technique classifies the failing transformations by the kind of behavioral change or compilation error introduced by them. We have evaluated this technique by testing 29 refactorings in Eclipse JDT, NetBeans, and the JastAdd Refactoring Tools. We analyzed 153,444 transformations, and identified 57 bugs related to compilation errors, and 63 bugs related to behavioral changes.
C1 [Soares, Gustavo; Gheyi, Rohit; Massoni, Tiago] Fed Univ Campina Grande UFCG, Dept Comp & Syst DSC, BR-58429900 Campina Grande, PB, Brazil.
RP Soares, G (corresponding author), Fed Univ Campina Grande UFCG, Dept Comp & Syst DSC, 882 Aprigio Veloso, BR-58429900 Campina Grande, PB, Brazil.
EM gsoares@dsc.ufcg.edu.br; rohit@dsc.ufcg.edu.br; massoni@dsc.ufcg.edu.br
RI Ines, INCT/J-9550-2013; Massoni, Tiago/AAE-9376-2020
OI Massoni, Tiago/0000-0002-9423-7556; Gheyi, Rohit/0000-0002-5562-4449
FU National Institute of Science and Technology for Software Engineering
   (INES); CNPq [573964/2008-4, 477336/2009-4, 304470/2010-4,
   480160/2011-2]
FX The authors are grateful to Paul Strooper, Paulo Borba, Augusto Sampaio,
   Max Schafer, and the anonymous referees for useful suggestions. This
   work was partially supported by the National Institute of Science and
   Technology for Software Engineering (INES), funded by CNPq grants
   573964/2008-4, 477336/2009-4, 304470/2010-4, and 480160/2011-2.
CR [Anonymous], 1998, P 1998 ACM SIGSOFT I, DOI [DOI 10.1145/271771.271803, 10.1145/271771.271803]
   [Anonymous], 2007, P 6 JOINT M EUR SOFT
   Balaban I, 2005, ACM SIGPLAN NOTICES, V40, P265, DOI 10.1145/1103845.1094832
   Baresi L., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P281, DOI 10.1145/1810295.1810353
   BAZZICHI F, 1982, IEEE T SOFTWARE ENG, V8, P343, DOI 10.1109/TSE.1982.235428
   Borba P, 2004, SCI COMPUT PROGRAM, V52, P53, DOI 10.1016/j.scico.2004.03.003
   CELENTANO A, 1980, SOFTWARE PRACT EXPER, V10, P897, DOI 10.1002/spe.4380101104
   Coppit D, 2005, IEEE T SOFTWARE ENG, V31, P328, DOI 10.1109/TSE.2005.52
   Cornelio M., 2004, THESIS FED U PERNAMB
   Dig D, 2005, PROC IEEE INT CONF S, P389
   Eclipse.org, 2011, JDT COR COMP
   Embarcadero Technologies, 2011, JBUILDER
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fuhrer R, 2005, LECT NOTES COMPUT SC, V3586, P71
   Gligoric M., 2010, P 32 ACM IEEE INT C, P225, DOI 10.1145/1806799.1806835
   Goodenough J. B., 1975, SIGPLAN Notices, V10, P493, DOI 10.1145/390016.808473
   Gosling J., 2005, Java Language Specification, Vthird
   HANFORD KV, 1970, IBM SYST J, V9, P242, DOI 10.1147/sj.94.0242
   Hoffman DM, 2011, SOFTWARE PRACT EXPER, V41, P427, DOI 10.1002/spe.1017
   Jackson D., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P730, DOI 10.1109/ICSE.2000.870482
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jagannath V, 2009, LECT NOTES COMPUT SC, V5503, P171
   Jet Brains, 2011, INT ID
   Li HQ, 2008, LECT NOTES COMPUT SC, V5083, P19
   Marinov D, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P22, DOI 10.1109/ASE.2001.989787
   McKeeman William M., 1998, DIGIT TECH J, V10, P100
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mens T, 2002, LECT NOTES COMPUT SC, V2505, P286
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Overbey J. L., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P303, DOI 10.1109/ASE.2011.6100067
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Reichenbach C, 2009, LECT NOTES COMPUT SC, V5653, P394, DOI 10.1007/978-3-642-03013-0_18
   Schäfer M, 2010, ACM SIGPLAN NOTICES, V45, P286, DOI 10.1145/1932682.1869485
   Schäfer M, 2010, LECT NOTES COMPUT SC, V6183, P225, DOI 10.1007/978-3-642-14107-2_11
   Schäfer M, 2008, ACM SIGPLAN NOTICES, V43, P277, DOI 10.1145/1449955.1449787
   Schafer M., 2009, P 23 EUROPEAN C ECOO, P369, DOI [10.1007/978-3-642-03013-0_17, DOI 10.1007/978-3-642-03013-0_17]
   Schafer M., 2011, REFACTORING BUGS
   Schafer Max, 2008, P 3 WORKSH PROGR LAN, P67, DOI [10.1145/1481848.1481859., DOI 10.1145/1481848.1481859]
   Silva L, 2008, SEFM 2008: SIXTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P217, DOI 10.1109/SEFM.2008.29
   Soares G., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P173, DOI 10.1109/ICSM.2011.6080784
   Soares G, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.63
   Steimann F, 2009, LECT NOTES COMPUT SC, V5653, P419, DOI 10.1007/978-3-642-03013-0_19
   Sun Microsystems, 2011, NETBEANS IDE
   Tip F, 2003, ACM SIGPLAN NOTICES, V38, P13, DOI 10.1145/949343.949308
   Tokuda L., 2001, Automated Software Engineering, V8, P89, DOI 10.1023/A:1008715808855
   Wei Jin, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P137, DOI 10.1109/ICST.2010.64
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 48
TC 80
Z9 83
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2013
VL 39
IS 2
BP 147
EP 162
DI 10.1109/TSE.2012.19
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 079ML
UT WOS:000314174500002
DA 2024-07-18
ER

PT J
AU Cassou, D
   Bruneau, J
   Consel, C
   Balland, E
AF Cassou, Damien
   Bruneau, Julien
   Consel, Charles
   Balland, Emilie
TI Toward a Tool-Based Development Methodology for Pervasive Computing
   Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Methodology; domain-specific language; generative programming; pervasive
   computing; toolkit; programming support; simulation
ID FRAMEWORK
AB Despite much progress, developing a pervasive computing application remains a challenge because of a lack of conceptual frameworks and supporting tools. This challenge involves coping with heterogeneous devices, overcoming the intricacies of distributed systems technologies, working out an architecture for the application, encoding it in a program, writing specific code to test the application, and finally deploying it. This paper presents a design language and a tool suite covering the development life-cycle of a pervasive computing application. The design language allows us to define a taxonomy of area-specific building-blocks, abstracting over their heterogeneity. This language also includes a layer to define the architecture of an application, following an architectural pattern commonly used in the pervasive computing domain. Our underlying methodology assigns roles to the stakeholders, providing separation of concerns. Our tool suite includes a compiler that takes design artifacts written in our language as input and generates a programming framework that supports the subsequent development stages, namely, implementation, testing, and deployment. Our methodology has been applied on a wide spectrum of areas. Based on these experiments, we assess our approach through three criteria: expressiveness, usability, and productivity.
C1 [Consel, Charles] Univ Bordeaux, Bordeaux, France.
   [Consel, Charles] Yale Univ, New Haven, CT 06520 USA.
   [Consel, Charles] Univ Rennes, Rennes, France.
   [Bruneau, Julien] Univ Bordeaux 1, Inria Phoenix Res Grp, F-33405 Talence, France.
C3 Universite de Bordeaux; Yale University; Universite de Rennes;
   Universite de Bordeaux
RP Cassou, D (corresponding author), Univ Lille 1, F-59655 Villeneuve Dascq, France.
EM damien.cassou@inria.fr; julien.bruneau@inria.fr;
   charles.consel@inria.fr; emilie.balland@inria.fr
RI 李, 骜扬/A-3955-2013; Pettré, Julien/AAB-2590-2022
CR Aldrich J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P187, DOI 10.1109/ICSE.2002.1007967
   [Anonymous], 2007, IIS
   [Anonymous], P 7 INT C MOB UB SYS
   [Anonymous], P 1 INT C INT INT AD
   [Anonymous], P EUR C OBJ OR TECHN
   [Anonymous], P 14 EUR C FUND APPR
   [Anonymous], WEB SERV ARCH
   [Anonymous], P 25 INT C OBJ OR PR
   [Anonymous], P 1 WORK C DOM SPEC
   [Anonymous], TECHNICAL REPORT
   [Anonymous], P AUSTR C ROB AUT AC
   [Anonymous], 2005, ADDISON WESLEY OBJEC
   [Anonymous], 1976, ICSE 76
   [Anonymous], 1219 STAND SOFTW MAI
   [Anonymous], 2001, SOFTW DEV MAG
   [Anonymous], P 33 INT C SOFTW ENG
   [Anonymous], UML MODE
   [Anonymous], ENTERPRISE ARCHITECT
   [Anonymous], P 9 INT C COMM
   [Anonymous], 2006, P INT C DISTR COMP S, DOI DOI 10.1109/ICDCSW.2006.41
   Belmudez B., 2009, 2009 IEEE International Workshop on Multimedia Signal Processing, P1
   Cassou D., 2010, PROC 8 IEEE INT C PE, P1
   Cassou Damien., 2009, GPCE '09: Proceedings of the 8th International Conference on Generative Programming and Component Engineering, P137
   Chen Guanling., 2002, 4 IEEE WORKSHOP MOBI, P105, DOI DOI 10.1109/MCSA.2002.1017490
   Dey AK, 2001, HUM-COMPUT INTERACT, V16, P97, DOI 10.1207/S15327051HCI16234_02
   Douence R, 2002, LECT NOTES COMPUT SC, V2487, P173
   Downing T., 1998, JAVA RMI REMOTE METH
   Erlikh L., 2000, IT Professional, V2, P17, DOI 10.1109/6294.846201
   Fowler M., 2005, FLUENT INTERFACE
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Henricksen K, 2004, SECOND IEEE ANNUAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P77, DOI 10.1109/PERCOM.2004.1276847
   Jakob H, 2009, INTERNATIONAL CONFERENCE ON PERVASIVE SERVICES (ICPS 2009), P21
   Jouve W., 2009, Pervasive Computing and Communications, P1
   Kabanov Jevgeni., 2008, PPPJ'08: Proceedings of the 6th international symposium on Principles and practice of programming in Java, P189
   Kieburtz RB, 1996, PROC INT CONF SOFTW, P542, DOI 10.1109/ICSE.1996.493448
   Martynova Marina., 2006, Mergers Acquisitions in Europe, P1
   McFadden T, 2005, THIRD IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P300, DOI 10.1109/PERCOM.2005.10
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Medvidovic N, 2007, INFORM SOFTWARE TECH, V49, P12, DOI 10.1016/j.infsof.2006.08.006
   O'Neill E, 2004, FIRST INTERNATIONAL CONFERENCE ON TESTBEDS AND RESEARCH INFRASTRUCTURES FOR THE DEVELOPMENT OF NETWORKS AND COMMUNITIES, PROCEEDINGS, P60
   Ranganathan A, 2005, Third IEEE International Conference on Pervasive Computing and Communications, Proceedings, P7, DOI 10.1109/PERCOM.2005.26
   Ranganathan A., 2002, Proceedings of the 2nd international workshop on Mobile commerce, WMC '02, P10, DOI DOI 10.1145/570705.570708
   Schmidt A, 1999, LECT NOTES COMPUT SC, V1707, P89
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Schooler E., 2002, 3261 RFC
   Serral E, 2010, PERVASIVE MOB COMPUT, V6, P254, DOI 10.1016/j.pmcj.2009.07.006
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   Thomas D, 2004, IEEE SOFTWARE, V21, P15, DOI 10.1109/MS.2004.1293067
   Ubayashi N., 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, V1, P75
   Van Wyk E, 2007, LECT NOTES COMPUT SC, V4609, P575
   Visser W, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ASE.2000.873645
   Zhu AY, 2009, IEEE I C EMBED SOFTW, P482, DOI 10.1109/ICESS.2009.90
NR 52
TC 25
Z9 25
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2012
VL 38
IS 6
BP 1445
EP 1463
DI 10.1109/TSE.2011.107
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 043PI
UT WOS:000311556100012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sen, A
   Ramamurthy, K
   Sinha, AP
AF Sen, Arun
   Ramamurthy, K. (Ram)
   Sinha, Atish P.
TI A Model of Data Warehousing Process Maturity
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Data warehousing process; design-science research; model validation;
   software maturity models
ID SERVICE QUALITY; FUTURE
AB Even though data warehousing (DW) requires huge investments, the data warehouse market is experiencing incredible growth. However, a large number of DW initiatives end up as failures. In this paper, we argue that the maturity of a data warehousing process (DWP) could significantly mitigate such large-scale failures and ensure the delivery of consistent, high quality, "single-version of truth" data in a timely manner. However, unlike software development, the assessment of DWP maturity has not yet been tackled in a systematic way. In light of the critical importance of data as a corporate resource, we believe that the need for a maturity model for DWP could not be greater. In this paper, we describe the design and development of a five-level DWP maturity model (DWP-M) over a period of three years. A unique aspect of this model is that it covers processes in both data warehouse development and operations. Over 20 key DW executives from 13 different corporations were involved in the model development process. The final model was evaluated by a panel of experts; the results strongly validate the functionality, productivity, and usability of the model. We present the initial and final DWP-M model versions, along with illustrations of several key process areas at different levels of maturity.
C1 [Sen, Arun] Texas A&M Univ, Mays Business Sch, Dept Informat & Operat Management, College Stn, TX 77843 USA.
   [Ramamurthy, K. (Ram); Sinha, Atish P.] Univ Wisconsin, Sheldon B Lubar Sch Business, Milwaukee, WI 53201 USA.
C3 Texas A&M University System; Texas A&M University College Station; Mays
   Business School; University of Wisconsin System; University of Wisconsin
   Milwaukee
RP Sen, A (corresponding author), Texas A&M Univ, Mays Business Sch, Dept Informat & Operat Management, College Stn, TX 77843 USA.
EM asen@mays.tamu.edu; ramurthy@uwm.edu; sinha@uwm.edu
CR Adelman S., 2000, DATA ADM NEWSLET OCT
   Agrawal M, 2007, IEEE T SOFTWARE ENG, V33, P145, DOI 10.1109/TSE.2007.29
   [Anonymous], P 9 INT PROD DEV MAN
   Bevan N., 2006, INT STANDARDS HCI
   Beyer M., 2007, GARTNER REPORTS  MAR
   Brooke John., 1996, Usability evaluation in industry, V189, P4, DOI DOI 10.1201/9781498710411
   Chiesa V, 1996, J PROD INNOVAT MANAG, V13, P105, DOI 10.1016/0737-6782(95)00109-3
   Clifford D., 2008, IMPLEMENTING ISO IEC
   Crosby P.B., 1979, QUALITY IS FREE ART
   Dataflux, 2005, ENT DAT MAN MAT MOD
   Eckerson W., 2004, DM REV           NOV
   Eckerson W.W, 2002, TDWI Report
   English L.P., 2004, INFORM QUALITY MANAG
   Friedman T., 2004, GARTNER REPORTS  APR
   Friedman T., 2007, GARTNER REPORTS  MAR
   Golden B., 2005, SUCCEEDING OPEN SOUR
   Gregor S, 2007, J ASSOC INF SYST, V8, P312, DOI 10.17705/1jais.00129
   Gregor S, 2006, MIS QUART, V30, P611
   Herbsleb J, 1997, COMMUN ACM, V40, P30, DOI 10.1145/255656.255692
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Humphrey W S, 1995, A discipline for software engineering
   Humphrey W.S., 1989, CMUSEI89TR2
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   Inmon WilliamH., 2002, BUILDING DATA WAREHO, V4th
   Jiang JJ, 2002, MIS QUART, V26, P145, DOI 10.2307/4132324
   Kettinger WJ, 1995, DECISION SCI, V26, P569, DOI 10.1111/j.1540-5915.1995.tb01441.x
   Kimball R., 1998, The data warehouse lifecycle toolkit: expert methods for designing, developing, and deploying data warehouses
   Krishnan MS, 1999, IEEE T SOFTWARE ENG, V25, P800, DOI 10.1109/32.824401
   Kwak Y., 2000, PROJ MANAG J, V31, P32, DOI [DOI 10.1177/8756972800031001, 10.1177/875697280003100106, DOI 10.1177/875697280003100106]
   LANEY D, 2000, DATA WAREHOUSE DBMS
   Little RG, 2003, IEEE T SOFTWARE ENG, V29, P290, DOI 10.1109/TSE.2003.1191794
   Malheiros Viviane, 2009, Software Process: Improvement and Practice, V14, P65, DOI 10.1002/spip.376
   Marco D., 2002, INFORM MANAGEMEN NOV
   Marco D., 2002, INFORM MANAGEMEN OCT
   Marco D., 2002, INFORM MANAGEMEN AUG
   McGraw KL., 1989, KNOWLEDGE ACQUISITIO
   McGraw KO, 1996, PSYCHOL METHODS, V1, P30, DOI 10.1037/1082-989X.1.1.30
   Moore G., 2002, CROSSING CHASM
   Mullaly M., 2006, PROJ MANAG J, V37, P62
   Mullins C., 1997, DATA ADM NEWSLET DEC
   NASCIO, 2003, ENT ARCH MAT MOD VER
   Niessink F., 1998, Software Process Improvement and Practice, V4, P55, DOI 10.1002/(SICI)1099-1670(199806)4:2<55::AID-SPIP97>3.0.CO;2-T
   Niessink F., 2005, IT SERVICE CAPABILIT
   Office of Government Commerce, 2001, OFF GOVT COMM SERV D
   Office of Government Commerce, 2000, OFF GOVT COMM SERV S
   Orr A., 2008, HARNESSING POWER ITI, P1
   PARASURAMAN A, 1985, J MARKETING, V49, P41, DOI 10.2307/1251430
   Paulk M., 2003, CAPABILITY MATURITY
   Paulk M. C., 1999, P 11 SOFTW ENG PROC
   PAULK MC, 1993, IEEE SOFTWARE, V10, P18, DOI 10.1109/52.219617
   Pitt F.L., 1995, MIS Quarterly, V19, P173
   Poole J., 2002, COMMON WAREHOUSE MET
   Ramamurthy K, 2008, IEEE T SYST MAN CY A, V38, P976, DOI 10.1109/TSMCA.2008.923032
   Russem P., 2006, Taking Data Quality to the Enterprise through Data Governance: The Data Warehouse Institute, P1
   SEI, 2006, CMMI SERV IN DRAFT
   *SEI, 2004, PROC MAT PROF SOFTW
   Sen A, 2005, COMMUN ACM, V48, P79, DOI 10.1145/1047671.1047673
   Sen A, 2007, IEEE T SYST MAN CY C, V37, P17, DOI 10.1109/TSMCC.2006.886966
   Sen A, 2006, IEEE T ENG MANAGE, V53, P440, DOI 10.1109/TEM.2006.877460
   Shim JP, 2002, DECIS SUPPORT SYST, V33, P111, DOI 10.1016/S0167-9236(01)00139-7
   Simon H.A., 1996, The Sciences of the Artificial, V3rd ed
   SonicSoftware.com, 2005, NEW SERV OR ARCH SOA
   Todman C., 2001, Designing A Data Warehouse
   VANBON J, 2005, FDN IT SERVICE MANAG
   Vassiliadis P., 2001, THESIS NATL TU GREEC
   Verheijen T., 2006, FRAMEWORKS IT MANAGE
   Walls JG, 1992, INFORM SYST RES, V3, P36, DOI 10.1287/isre.3.1.36
   Watson H, 2001, INFORM SYST MANAGE, V18, P42, DOI 10.1201/1078/43196.18.3.20010601/31289.6
   Watson R.T., 1998, MIS Q, V21, P209
   Wikipedia, 2010, INF TECHN INFR LIB
   Wikipedia, 2011, DAT WAR
   Winter R., 2006, INTELLIGENT ENTE NOV
   Wixom BH, 2001, MIS QUART, V25, P17, DOI 10.2307/3250957
   Yin RK, 2002, Applied Social Research Methods Series, V34
   [No title captured]
NR 75
TC 29
Z9 36
U1 0
U2 27
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2012
VL 38
IS 2
BP 336
EP 353
DI 10.1109/TSE.2011.2
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 913ZF
UT WOS:000301915200007
DA 2024-07-18
ER

PT J
AU Le Goues, C
   Weimer, W
AF Le Goues, Claire
   Weimer, Westley
TI Measuring Code Quality to Improve Specification Mining
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Specification mining; machine learning; software engineering; code
   metrics; program understanding
ID SOFTWARE; METRICS; VALIDATION; COMPLEXITY; FREQUENCY
AB Formal specifications can help with program testing, optimization, refactoring, documentation, and, most importantly, debugging and repair. However, they are difficult to write manually, and automatic mining techniques suffer from 90-99 percent false positive rates. To address this problem, we propose to augment a temporal-property miner by incorporating code quality metrics. We measure code quality by extracting additional information from the software engineering process and using information from code that is more likely to be correct, as well as code that is less likely to be correct. When used as a preprocessing step for an existing specification miner, our technique identifies which input is most indicative of correct program behavior, which allows off-the-shelf techniques to learn the same number of specifications using only 45 percent of their original input. As a novel inference technique, our approach has few false positives in practice (63 percent when balancing precision and recall, 3 percent when focused on precision), while still finding useful specifications (e.g., those that find many bugs) on over 1.5 million lines of code.
C1 [Le Goues, Claire; Weimer, Westley] Univ Virginia, Sch Engn, Dept Comp Sci, Charlottesville, VA 22904 USA.
C3 University of Virginia
RP Le Goues, C (corresponding author), Univ Virginia, Sch Engn, Dept Comp Sci, 151 Engineers Way,POB 400740, Charlottesville, VA 22904 USA.
EM legoues@cs.virginia.edu; weimer@cs.virginia.edu
OI Le Goues, Claire/0000-0002-3931-060X
CR Albrech A., 1979, PROC JOINT SHAREGUID, P83
   Alur R., 2005, P ACM SIGPLAN SIGACT
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   Ammons G, 2003, ACM SIGPLAN NOTICES, V38, P182, DOI 10.1145/780822.781152
   [Anonymous], 2001, Proceedings of the 18th ACM Symposium on Operating Systems Principles
   [Anonymous], 2003, Modernizing Legacy Systems: Software Technologies, Engineering Processes,and Business Practices
   [Anonymous], 023 NAT I STAND TECH
   [Anonymous], 2007, P 2007 INT S SOFTWAR
   [Anonymous], 1996, Proceedings of the 1996 IEEE Symposium on Security and Privacy, SP '96, DOI DOI 10.1109/SECPRI.1996.502675
   Ball T., 2004, Formal Methods for Components and Objects. Third International Symposium, FMCO 2004. Revised Lectures (Lecture Notes in Computer Science Vol. 3657), P1
   Ball T., 2006, P 1 EUR SYST C APR, P103
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Buse R.P., 2008, Proceedings of the 2008 International Symposium on Software Testing and Analysis, ISSTA '08, P273
   Buse RPL, 2009, PROC INT CONF SOFTW, P144, DOI 10.1109/ICSE.2009.5070516
   Chen H, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE 11TH USENIX SECURITY SYMPOSIUM, P171
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Corbett J. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P762, DOI 10.1109/ICSE.2000.870490
   Das M., 2006, Computer Aided Verification. 18th International Conference. CAV 2006. Proceedings (Lecture Notes in Computer Science Vol. 4144), DOI 10.1007/11817963_1
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   DeLine R, 2001, ACM SIGPLAN NOTICES, V36, P59, DOI 10.1145/381694.378811
   Detlefs D, 2005, J ACM, V52, P365, DOI 10.1145/1066100.1066102
   Di Penta M, 2009, WORK CONF REVERSE EN, P11, DOI 10.1109/WCRE.2009.41
   Engler D., 2000, P C S OP SYST DES IM
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P51, DOI 10.1145/1368088.1368096
   Giventer LawrenceL., 2007, STAT ANAL PUBLIC ADM
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Hamer P. G., 1982, Sixth International Conference on Software Engineering, P197
   Hovemeyer David., 2004, ACM Conference on Object-Oriented Programming Systems, Lan-guages, and Applications, OOPSLA '04, P132
   Kapser C, 2006, WORK CONF REVERSE EN, P19
   KARP RM, 1987, IBM J RES DEV, V31, P249, DOI 10.1147/rd.312.0249
   Kataoka Y, 2001, PROC IEEE INT CONF S, P736, DOI 10.1109/ICSM.2001.972794
   Kohavi R., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1137
   Krinke J, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P170, DOI 10.1109/WCRE.2007.7
   Kupferman O, 2006, LECT NOTES COMPUT SC, V4218, P110
   Le Goues C, 2009, LECT NOTES COMPUT SC, V5505, P292, DOI 10.1007/978-3-642-00768-2_26
   Lerner S, 2005, ACM SIGPLAN NOTICES, V40, P364, DOI 10.1145/1047659.1040335
   Livshits VB, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 14TH USENIX SECURITY SYMPOSIUM, P271
   Lo D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P345, DOI 10.1145/1595696.1595761
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Malayeri D, 2006, LECT NOTES COMPUT SC, V4119, P200
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mei-Huei Tang, 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P242, DOI 10.1109/METRIC.1999.809745
   Nagappan Nachiappan, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P364
   Pfleeger S.L., 2001, SOFTWARE ENG THEORY, V2nd
   Sanchez JC, 2007, AGILE 2007, PROCEEDINGS, P5, DOI 10.1109/AGILE.2007.43
   SHEPPERD M, 1988, SOFTWARE ENG J, V3, P30, DOI 10.1049/sej.1988.0003
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   SUTHERLAND J, 1995, ACM COMPUT SURV, V27, P274, DOI 10.1145/210376.210394
   Vasudevan P, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P289, DOI 10.1109/SERA.2006.25
   Vokác M, 2004, IEEE T SOFTWARE ENG, V30, P904, DOI 10.1109/TSE.2004.99
   Weimer W, 2005, LECT NOTES COMPUT SC, V3440, P461
   Weimer W, 2004, ACM SIGPLAN NOTICES, V39, P419, DOI 10.1145/1035292.1029011
   Weimer W, 2008, IEEE T SOFTWARE ENG, V34, P21, DOI 10.1109/TSE.2007.70744
   Weimer Westley, 2006, Proceedings of the 5th International Conference on Generative Programming and Component Engineering (GPCE'06), P181, DOI DOI 10.1145/1173706.1173734
   WHALEY J, 2002, P ACM SIGSOFT INT S
NR 60
TC 22
Z9 22
U1 1
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2012
VL 38
IS 1
BP 175
EP 190
DI 10.1109/TSE.2011.5
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881HG
UT WOS:000299472600012
DA 2024-07-18
ER

PT J
AU Treude, C
   Storey, MA
AF Treude, Christoph
   Storey, Margaret-Anne
TI Work Item Tagging: Communicating Concerns in Collaborative Software
   Development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tagging; collaboration; software development; task management;
   articulation work; work items
AB In collaborative software development projects, work items are used as a mechanism to coordinate tasks and track shared development work. In this paper, we explore how "tagging," a lightweight social computing mechanism, is used to communicate matters of concern in the management of development tasks. We present the results from two empirical studies over 36 and 12 months, respectively, on how tagging has been adopted and what role it plays in the development processes of several professional development projects with more than 1,000 developers in total. Our research shows that the tagging mechanism was eagerly adopted by the teams, and that it has become a significant part of many informal processes. Different kinds of tags are used by various stakeholders to categorize and organize work items. The tags are used to support finding of tasks, articulation work, and information exchange. Implicit and explicit mechanisms have evolved to manage the tag vocabulary. Our findings indicate that lightweight informal tool support, prevalent in the social computing domain, may play an important role in improving team-based software development practices.
C1 [Treude, Christoph; Storey, Margaret-Anne] Univ Victoria, Dept Comp Sci, STN CSC, Victoria, BC V8W 3P6, Canada.
C3 University of Victoria
RP Treude, C (corresponding author), Univ Victoria, Dept Comp Sci, STN CSC, POB 3055, Victoria, BC V8W 3P6, Canada.
EM ctreude@uvic.ca; mstorey@uvic.ca
RI Treude, Christoph/AAZ-6257-2021
OI Treude, Christoph/0000-0002-6919-2149
FU IBM; NSERC
FX The authors would like to thank the teams that granted them access to
   their repositories and conducted interviews with them. This research is
   supported by a fellowship from IBM and funding from NSERC. The authors
   also appreciate the comments from Lars Grammel, Nancy Songtaweesin,
   Jamie Starke, and the anonymous reviewers that helped improve the paper.
CR Ames M, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P971
   [Anonymous], 2010, P 32 ACM IEEE INT C
   [Anonymous], 2006, Proc. 2006 20th Anniversary Conf. Computer Supported Coop. Work
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Brothers L., 1990, CSCW 90 Los Angeles. Proceedings of the Conference on Computer-Supported Cooperative Work, P169, DOI 10.1145/99332.99353
   Cataldo M, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P71
   Churchill E. F., 1999, GROUP'99. Proceedings of the International ACM SIGGROUP Conference on Supporting Group Work, P40, DOI 10.1145/320297.320302
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   De Souza C., 2005, P 2005 ACM INT C SUP, P197, DOI 10.1145/1099203.1099239
   de Souza Cleidson R. B., 2003, P 2003 INT ACM SIGGR, P105, DOI DOI 10.1145/958160.958177
   Ellis JB, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P577
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   Frost R, 2007, IEEE SOFTWARE, V24, P114, DOI 10.1109/MS.2007.170
   FURNAS GW, 1987, COMMUN ACM, V30, P964, DOI 10.1145/32206.32212
   GERSON EM, 1986, ACM T OFF INF SYST, V4, P257, DOI 10.1145/214427.214431
   Golder SA, 2006, J INF SCI, V32, P198, DOI 10.1177/0165551506062337
   Grinter R. E., 1996, Computer Supported Cooperative Work (CSCW), V5, P447, DOI 10.1007/BF00136714
   GRUDIN J, 1994, COMMUN ACM, V37, P92, DOI 10.1145/175222.175230
   Gutwin C., 2004, Computer Supported Cooperative Work Conference Proceedings, P72, DOI 10.1145/1031607.1031621
   Hammond Tony., 2005, D-Lib Magazine, V11, P1
   Hassan AE, 2004, PROG COMPREHEN, P183, DOI 10.1109/WPC.2004.1311060
   Herbsleb JD, 2001, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.2001.919083
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Heymann P., 2010, Proceedings of the International Conference on Web Search and Data Mining, WSDM '10, P51, DOI DOI 10.1145/1718487.1718495
   Kagdi H, 2007, INT C PROGRAM COMPRE, P145
   Ko AJ, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P127
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Mi P., 1991, Proceedings. First International Conference on the Software Process. Manufacturing Complex Systems (Cat. No.91TH0418-4), P188
   Oberweis A., 1994, P GI FACHG COMM COOR, P423
   Ostrand T. J., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P85, DOI 10.1049/ic:20040482
   Robillard M.P., 2005, Proceedings of the OOPSLA Workshop on Eclipse Technology eXchange, eclipse '05, P65, DOI DOI 10.1145/1117696.1117710
   Robillard MP, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P406, DOI 10.1109/ICSE.2002.1007986
   Robu V, 2009, ACM T WEB, V3, DOI 10.1145/1594173.1594176
   Ronkko K., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P433, DOI 10.1007/s10606-005-9004-x
   Sandusky R.J., 2005, P 2005 INT ACM SIGGR, P187
   Shilad S., 2006, 2006 ACM C COMPUTER, P181, DOI DOI 10.1145/1180875.1180904
   Storey M-A, 2007, 2007 IEEE International Conference on Software Maintenance, P265, DOI 10.1109/ICSM.2007.4362639
   Storey MA, 2009, IEEE T SOFTWARE ENG, V35, P470, DOI 10.1109/TSE.2009.15
   Storey MA, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P251, DOI 10.1145/1368088.1368123
   Treude C., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P231, DOI 10.1145/1810295.1810337
   Treude C, 2009, PROC INT CONF SOFTW, P575, DOI 10.1109/ICSE.2009.5070559
   Treude C, 2009, PROC INT CONF SOFTW, P12, DOI 10.1109/ICSE.2009.5070504
NR 44
TC 34
Z9 46
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2012
VL 38
IS 1
BP 19
EP 34
DI 10.1109/TSE.2010.91
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881HG
UT WOS:000299472600004
DA 2024-07-18
ER

PT J
AU Ying, MS
   Feng, Y
AF Ying, Mingsheng
   Feng, Yuan
TI A Flowchart Language for Quantum Programming
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Quantum programming; flowchart language; while-language; structured
   programming
ID ARCHITECTURE; LOGIC
AB Several high-level quantum programming languages have been proposed in the previous research. In this paper, we define a low-level flowchart language for quantum programming, which can be used in implementation of high-level quantum languages and in design of quantum compilers. The formal semantics of the flowchart language is given, and the notion of correctness for programs written in this language is introduced. A structured quantum programming theorem is presented, which provides a technique of translating quantum flowchart programs into programs written in a high-level language, namely, a quantum extension of the while-language.
C1 [Ying, Mingsheng; Feng, Yuan] Univ Technol Sydney, Fac Engn & Informat Technol, Ctr Quantum Computat & Intelligent Syst, Sydney, NSW 2007, Australia.
   [Ying, Mingsheng; Feng, Yuan] Tsinghua Univ, Dept Comp Sci & Technol, Tsinghua Natl Lab Informat Sci & Technol, State Key Lab Intelligent Technol & Syst, Beijing 100084, Peoples R China.
C3 University of Technology Sydney; Tsinghua University
RP Ying, MS (corresponding author), Univ Technol Sydney, Fac Engn & Informat Technol, Ctr Quantum Computat & Intelligent Syst, Sydney, NSW 2007, Australia.
EM mying@it.uts.edu.au; Yuan.Feng@uts.edu.au
RI Ying, Mingsheng/A-8379-2008; Feng, Yuan/AGN-2907-2022
OI Ying, Mingsheng/0000-0003-4847-702X; Feng, Yuan/0000-0002-3097-3896
FU National Foundation of Natural Sciences of China [60736011]; Australian
   Research Council [DP110103473]
FX The authors are very grateful to the three referees for their useful
   comments and instructive suggestions. This work was partly supported by
   the National Foundation of Natural Sciences of China (Grant No:
   60736011) and the Australian Research Council (Grant No. DP110103473).
CR Abramsky S, 2004, IEEE S LOG, P415, DOI 10.1109/LICS.2004.1319636
   Altenkirch T, 2005, IEEE S LOG, P249
   [Anonymous], VERIFICATION SEQUENT
   Baltag A, 2006, MATH STRUCT COMP SCI, V16, P491, DOI 10.1017/S0960129506005299
   Bettelli S, 2003, EUR PHYS J D, V25, P181, DOI 10.1140/epjd/e2003-00242-2
   Brunet O, 2004, INT J QUANTUM INF, V2, P45, DOI 10.1142/S0219749904000067
   Chadha R, 2006, ELECTRON NOTES THEOR, V158, P19, DOI 10.1016/j.entcs.2006.04.003
   Chuang I., 2000, Quantum Information and Quantum Computation
   COOPER DC, 1967, COMMUN ACM, V10, P463, DOI 10.1145/363534.363539
   D'Hondt E, 2006, MATH STRUCT COMP SCI, V16, P429, DOI 10.1017/S0960129506005251
   Danos V, 2007, J ACM, V54, DOI 10.1145/1219092.1219096
   Feng Y, 2007, THEOR COMPUT SCI, V386, P151, DOI 10.1016/j.tcs.2007.06.011
   Gay SJ, 2006, MATH STRUCT COMP SCI, V16, P581, DOI 10.1017/S0960129506005378
   KNILL EH, 1996, LAUR962724 AL NAT LA
   Knuth D. E., 1974, Computing Surveys, V6, P261, DOI 10.1145/356635.356640
   Loeckx Jacques, 1987, FDN PROGRAM VERIFICA, V2nd
   Mackie I, 2010, SEMANTIC TECHNIQUES
   Nagarajan R, 2007, ELECTRON NOTES THEOR, V170, P101, DOI 10.1016/j.entcs.2006.12.014
   OMER B, 2003, THESIS TU VIENNA
   Panangaden P., 2009, LABELLED MARKOV PROC
   SANDERS JW, 2000, P MATH PROGR CONST, P88
   Selinger P, 2004, MATH STRUCT COMP SCI, V14, P527, DOI 10.1017/S0960129504004256
   Selinger P, 2004, LECT NOTES COMPUT SC, V2998, P1
   Svore KM, 2006, COMPUTER, V39, P74, DOI 10.1109/MC.2006.4
   TAFLIOVICH A, 2006, P 8 INT C MATH PROGR, P433
   Tafliovich A, 2009, ELECTRON NOTES THEOR, V253, P99, DOI 10.1016/j.entcs.2009.10.008
   von Neumann John., 1938, COMPOS MATH, V6, P1
   Ying M., 2001, Topology in Process Calculus: Approximate Correctness and Infinite Evolution of Concurrent Systems
   Ying M., 2010, Semant. Tech. Quantum Comput, V8, P311
   Ying MS, 2010, ACTA INFORM, V47, P221, DOI 10.1007/s00236-010-0117-4
   Ying MS, 2009, ACM T COMPUT LOG, V10, DOI 10.1145/1507244.1507249
   YING MS, 2010, HOARE LOGIC QUANTUM
   Zuliani P, 2005, ACTA INFORM, V41, P435, DOI 10.1007/s00236-005-0165-3
   Zuliani P, 2009, ACTA INFORM, V46, P403, DOI 10.1007/s00236-009-0100-0
NR 34
TC 14
Z9 19
U1 0
U2 35
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2011
VL 37
IS 4
BP 466
EP 485
DI 10.1109/TSE.2010.94
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 801QT
UT WOS:000293456000002
DA 2024-07-18
ER

PT J
AU Harman, M
   Mansouri, A
AF Harman, Mark
   Mansouri, Afshin
TI Search Based Software Engineering: Introduction to the Special Issue of
   the <i>IEEE Transactions on Software Engineering</i>
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
C1 [Harman, Mark] UCL, Dept Comp Sci, CREST, London WC1E 6BT, England.
   [Mansouri, Afshin] Brunel Univ, Brunel Business Sch, Uxbridge UB8 3PH, Middx, England.
C3 University of London; University College London; Brunel University
RP Harman, M (corresponding author), UCL, Dept Comp Sci, CREST, Malet Pl, London WC1E 6BT, England.
EM Mark.Harman@cs.ucl.ac.uk; Afshin.Mansouri@brunel.ac.uk
RI Mansouri, Afshin/B-5806-2013
OI Mansouri, Afshin/0000-0002-1488-7912; Harman, Mark/0000-0002-5864-4488
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Alba E, 2007, INFORM SCIENCES, V177, P2380, DOI 10.1016/j.ins.2006.12.020
   Arcuri A, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P1003
   Bagnall AJ, 2001, INFORM SOFTWARE TECH, V43, P883, DOI 10.1016/S0950-5849(01)00194-X
   CHANG CK, 1994, IEEE SOFTWARE, V11, P4
   COHEN M, 2006, P 8 ANN C GEN EV COM, V2, P1901
   Funes P, 2004, IEEE C EVOL COMPUTAT, P1699, DOI 10.1109/CEC.2004.1331100
   Harman M, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P58, DOI 10.1109/METRIC.2004.1357891
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   HARMAN M, 2010, P 13 INT C FUND APPR
   Harman M., 2009, TR0903 KINGS COLL LO
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Langdon WB, 2008, LECT NOTES COMPUT SC, V4971, P73, DOI 10.1007/978-3-540-78671-9_7
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   O'Keeffe M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P247
   TONELLA P, 2004, P INT S SOFTW TEST A, P119
   TRACEY N, 1998, P INT S SOFTW TEST A, P73
   Wegener J, 1997, SOFTWARE QUAL J, V6, P127, DOI 10.1023/A:1018551716639
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Xanthakis S., 1992, 5 INT C SOFTWARE ENG, P625
   [No title captured]
NR 22
TC 16
Z9 17
U1 0
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2010
VL 36
IS 6
BP 737
EP 741
DI 10.1109/TSE.2010.106
PG 5
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 682SU
UT WOS:000284424100002
DA 2024-07-18
ER

PT J
AU Sama, M
   Elbaum, S
   Raimondi, F
   Rosenblum, DS
   Wang, ZM
AF Sama, Michele
   Elbaum, Sebastian
   Raimondi, Franco
   Rosenblum, David S.
   Wang, Zhimin
TI Context-Aware Adaptive Applications: Fault Patterns and Their Automated
   Identification
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Adaptation; context-awareness; fault detection; mobile computing;
   model-based analysis; model checking; ordered binary decision diagrams;
   symbolic verification; ubiquitous computing
AB Applications running on mobile devices are intensely context-aware and adaptive. Streams of context values continuously drive these applications, making them very powerful but, at the same time, susceptible to undesired configurations. Such configurations are not easily exposed by existing validation techniques, thereby leading to new analysis and testing challenges. In this paper, we address some of these challenges by defining and applying a new model of adaptive behavior called an Adaptation Finite-State Machine (A-FSM) to enable the detection of faults caused by both erroneous adaptation logic and asynchronous updating of context information, with the latter leading to inconsistencies between the external physical context and its internal representation within an application. We identify a number of adaptation fault patterns, each describing a class of faulty behaviors. Finally, we describe three classes of algorithms to detect such faults automatically via analysis of the A-FSM. We evaluate our approach and the trade-offs between the classes of algorithms on a set of synthetically generated Context-Aware Adaptive Applications (CAAAs) and on a simple but realistic application in which a cell phone's configuration profile changes automatically as a result of changes to the user's location, speed, and surrounding environment. Our evaluation describes the faults our algorithms are able to detect and compares the algorithms in terms of their performance and storage requirements.
C1 [Sama, Michele; Rosenblum, David S.] Univ London Univ Coll, Dept Comp Sci, London WC1E 6BT, England.
   [Elbaum, Sebastian; Wang, Zhimin] Univ Nebraska, Dept Comp Sci, Lincoln, NE 68588 USA.
   [Raimondi, Franco] Middlesex Univ, Sch Engn & Informat Sci, London NW4 4BT, England.
C3 University of London; University College London; University of Nebraska
   System; University of Nebraska Lincoln; Middlesex University
RP Sama, M (corresponding author), Univ London Univ Coll, Dept Comp Sci, Gower St, London WC1E 6BT, England.
EM m.sama@cs.ucl.ac.uk; elbaum@cse.unl.edu; f.raimondi@mdx.ac.uk;
   d.rosenblum@cs.ucl.ac.uk; zwang@cse.unl.edu
RI Rosenblum, David S/C-1890-2008
OI Raimondi, Franco/0000-0002-9508-7713
FU US National Science Foundation (NSF) [0347518]; United Kingdom
   Engineering and Physical Sciences Research Council (EPSRC)
   [EP/D077273/1, EP/E006191/1, EP/F013442/1]; Royal Society; European
   Commission [IST-2005-026955]; EPSRC [EP/E006191/1, EP/F013442/1,
   EP/D077273/1] Funding Source: UKRI; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [0347518] Funding Source: National Science Foundation
FX This work was supported in part by the US National Science Foundation
   (NSF) under CAREER Award 0347518, by the United Kingdom Engineering and
   Physical Sciences Research Council (EPSRC) for project UbiVal under
   grants EP/D077273/1, EP/E006191/1, and EP/F013442/1, by the Royal
   Society under a Wolfson Research Merit Award for David Rosenblum, and by
   the European Commission Framework Programme 6 in project PLASTIC
   (IST-2005-026955). This paper is a revised version of an earlier paper
   presented at the ACM SIGSOFT 2008 International Symposium on the
   Foundations of Software Engineering (FSE 2008) [25]. This new paper
   presents a new data structure and algorithms for the symbolic analysis
   of the A-FSM model presented in the FSE 2008 paper. An early version of
   this symbolic support was presented at the International Workshop on
   Automated engineeRing of Autonomous and run-tiMe evolvIng Systems
   (ARAMIS 2008) [22].
CR [Anonymous], WORKSH CONT AW MOBIS
   BARR V, 1997, P NAT C ART INT 9 IN, P411
   Biegel G, 2004, SECOND IEEE ANNUAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P361, DOI 10.1109/PERCOM.2004.1276875
   BRYANT RE, 1992, COMPUT SURV, V24, P293, DOI 10.1145/136035.136043
   Capra L, 2003, IEEE T SOFTWARE ENG, V29, P929, DOI 10.1109/TSE.2003.1237173
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Clarke EM, 1999, MODEL CHECKING, P1
   CUBO J, 2009, P IEEE INT C SERV CO
   FLOCH J, 2006, THEORY ADAPTATION
   Gu T, 2004, VTC2004-SPRING: 2004 IEEE 59TH VEHICULAR TECHNOLOGY CONFERENCE, VOLS 1-5, PROCEEDINGS, P2656
   GUPTA UG, 1998, COMMUN ACM, V5, P179
   Heimdahl MPE, 1996, IEEE T SOFTWARE ENG, V22, P363, DOI 10.1109/32.508311
   Heitmeyer C. L., 1996, ACM Transactions on Software Engineering and Methodology, V5, P231, DOI 10.1145/234426.234431
   *JAVABDD, 2009, VERS 2 0
   *LIFE360, 2009, LIV CONF
   Lu Heng, 2006, P 14 ACM SIGSOFT INT, P242, DOI DOI 10.1145/1181775.1181805
   Michele S., 2008, Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering (SIGSOFT '08/FSE-16). ACM, New York, NY, P261, DOI DOI 10.1145/1453101.1453136
   Ranganathan A, 2003, LECT NOTES COMPUT SC, V2672, P143
   Roman G.-C., 1997, ACM Transactions on Software Engineering and Methodology, V6, P250, DOI 10.1145/258077.258079
   SAMA M, 2008, P 1 INT WORKSH AUT E, P1
   SAMA M, 2010, CAAA VERIFIER
   SAMA M, 2009, CONTEXTNOTIFIER
   SAMA M, 2009, TESTINGEMULATOR
   Sen K., 2005, P 10 EUROPEAN SOFTWA
   Tse T. H., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P458, DOI 10.1109/CMPSAC.2004.1342879
   Wang ZM, 2007, PROC INT CONF SOFTW, P406
   Wassermann G, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276935
   Whittle J, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P79, DOI 10.1109/RE.2009.36
   XU C, 2006, P 28 INT C SOFTW ENG, P292
   2009, TRACK YOUR MOBILE CA
   2009, MOBILE APP NIGHTLIFE
NR 31
TC 66
Z9 80
U1 1
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2010
VL 36
IS 5
BP 644
EP 661
DI 10.1109/TSE.2010.35
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 653YP
UT WOS:000282135000004
DA 2024-07-18
ER

PT J
AU Pelliccione, P
   Inverardi, P
   Muccini, H
AF Pelliccione, Patrizio
   Inverardi, Paola
   Muccini, Henry
TI CHARMY: A Framework for Designing and Verifying Architectural
   Specifications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software architectures; model checking
ID SOFTWARE ARCHITECTURE; SCENARIOS; BEHAVIOR
AB Introduced in the early stages of software development, the CHARMY framework assists the software architect in making and evaluating architectural choices. Rarely, the software architecture of a system can be established once and forever. Most likely poorly defined and understood architectural constraints and requirements force the software architect to accept ambiguities and move forward to the construction of a suboptimal software architecture. CHARMY aims to provide an easy and practical tool for supporting the iterative modeling and evaluation of software architectures. From an UML-based architectural design, an executable prototype is automatically created. CHARMY simulation and model checking features help in understanding the functioning of the system and discovering potential inconsistencies of the design. When a satisfactory and stable software architecture is reached, Java code conforming to structural software architecture constraints is automatically generated through suitable transformations. The overall approach is tool supported.
C1 [Pelliccione, Patrizio; Inverardi, Paola; Muccini, Henry] Univ Aquila, Dipartimento Informat, I-67010 Laquila, Italy.
C3 University of L'Aquila
RP Pelliccione, P (corresponding author), Univ Aquila, Dipartimento Informat, Via Vetoio, I-67010 Laquila, Italy.
EM pellicci@di.univaq.it; inverard@di.univaq.it; muccini@di.univaq.it
RI Pelliccione, Patrizio/Q-5118-2019; Pelliccione, Patrizio/A-4105-2008
OI Pelliccione, Patrizio/0000-0002-5438-2281; Pelliccione,
   Patrizio/0000-0002-5438-2281; Muccini, Henry/0000-0001-6365-6515
CR Allen R., 1997, ACM Transactions on Software Engineering and Methodology, V6, P213, DOI 10.1145/258077.258078
   [Anonymous], ACM SIGSOFT SOFTWARE
   Autili M, 2007, AUTOMAT SOFTW ENG, V14, P293, DOI 10.1007/s10515-007-0012-6
   Baumeister H, 2006, ELECTRON NOTES THEOR, V160, P75, DOI 10.1016/j.entcs.2006.05.015
   BUCHI R, 1960, P INT C LOG METH PHI, P1
   Compare D, 1999, SCI COMPUT PROGRAM, V33, P101, DOI 10.1016/S0167-6423(98)00006-9
   HOARE CAR, 1978, CACM, V21, P8
   Hofmeister C, 2007, J SYST SOFTWARE, V80, P106, DOI 10.1016/j.jss.2006.05.024
   Muccini H, 2004, IEEE T SOFTWARE ENG, V30, P160, DOI 10.1109/TSE.2004.1271170
   Tivoli M, 2008, SCI COMPUT PROGRAM, V71, P181, DOI 10.1016/j.scico.2008.03.001
   Uchitel S, 2004, ACM T SOFTW ENG METH, V13, P37, DOI 10.1145/1005561.1005563
   [No title captured]
   [No title captured]
NR 13
TC 36
Z9 38
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2009
VL 35
IS 3
BP 325
EP 346
DI 10.1109/TSE.2008.104
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 450NL
UT WOS:000266408000002
DA 2024-07-18
ER

PT J
AU Ngo-The, A
   Ruhe, G
AF Ngo-The, An
   Ruhe, Guenther
TI Optimized Resource Allocation for Software Release Planning
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Release planning; resource allocation; software project management;
   incremental software development
ID GENETIC ALGORITHM
AB Release planning for incremental software development assigns features to releases such that technical, resource, risk, and budget constraints are met. A feature can be offered as part of a release only if all of its necessary tasks are done before the given release date. We assume a given pool of human resources with different degrees of productivity to perform different types of tasks. In the context of release planning, the question studied in this paper is how to allocate these resources to the tasks of implementing the features such that the value gained from the released features is maximized. Planning of software releases and allocation of resources cannot be handled in isolation. To address the inherent difficulty of this process, we propose a two-phase optimization approach called OPTIMIZE(RASORP) that Combines the strength of two existing solution methods. Phase 1 applies integer linear programming to a relaxed version of the full problem. Phase 2 uses genetic programming in a reduced search space to generate operational resource allocation plans. The method is evaluated for a series of 600 randomly generated problems with varying problem parameters. The results are compared with a heuristic that locally allocates resources based on a greedy search.
C1 [Ngo-The, An] Expert Decis Inc, Calgary, AB T3G 4X7, Canada.
   [Ruhe, Guenther] Univ Calgary, Software Engn Decis Support Lab, Calgary, AB T2N 1N4, Canada.
C3 University of Calgary
RP Ngo-The, A (corresponding author), Expert Decis Inc, 54 Royal Oak Cove NW, Calgary, AB T3G 4X7, Canada.
EM ngothean@expertdecisions.com; ruhe@ucalgary.ca
FU Alberta Informatics Circle of Research Excellence (iCORE); Alberta
   Ingenuity Fund
FX The authors would like to thank the associate editor and the anonymous
   referees for their valuable comments and suggestions. Continuous
   discussions with their colleagues Vahid Garousi, Jim McElroy, and
   Dietmar Pfahl helped them to reformulate the content to make it more
   readable. Kornelia Streb has provided them with substantial technical
   support in the preparation of the paper. The authors also thank the
   Alberta Informatics Circle of Research Excellence (iCORE) and the
   Alberta Ingenuity Fund for their financial support of this research.
CR Acuña ST, 2006, IEEE SOFTWARE, V23, P94, DOI 10.1109/MS.2006.47
   AMANDEEP A, 2004, P 5 INT C PROD FOC S, P248
   [Anonymous], SOFTWARE ENG COMPUTA
   Blazewicz J, 1996, EUR J OPER RES, V93, P1, DOI 10.1016/0377-2217(95)00362-2
   Carlshamre P, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84
   Chang CK, 2001, ANN SOFTW ENG, V11, P107, DOI 10.1023/A:1012543203763
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   Cormen T.H., 1990, INTRO ALGORITHMS, P329
   CRISSIS M, 2006, CMMI GUIDELINES PROC
   DAVIS L, 1983, P INT C GEN ALG THEI, P136
   DU G, 2006, P 5 ACM IEEE INT S E, P212
   Eshelman L.J., 1991, Proceedings of the Fourth International Conference on Genetic Algorithms, P115
   Fenton N, 2004, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE.2004.1317462
   Garey M. R., 1979, Computers and intractability. A guide to the theory of NP-completeness
   Glover F., 1998, Tabu Search
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Hartmann S, 1998, NAV RES LOG, V45, P733, DOI 10.1002/(SICI)1520-6750(199810)45:7<733::AID-NAV5>3.0.CO;2-C
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   Jain A.S., 1998, A state-of-the-art review ofjob-shop scheduling techniques
   Kapur P, 2008, J SOFTW MAINT EVOL-R, V20, P365, DOI 10.1002/smr.379
   Kellerer H., 2004, Knapsack Problems. Springer Nature Book Archives Millennium, P317
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   LAND AH, 1960, ECONOMETRICA, V28, P497, DOI 10.2307/1910129
   Martello Silvano, 1990, Knapsack Problems: Algorithms and Computer Implementations
   Mattfeld DC, 2004, EUR J OPER RES, V155, P616, DOI 10.1016/S0377-2217(03)00016-X
   Mitchell J.E., 2001, The Encyclopedia of Optimization, VII, P519
   Momoh J., 2006, Software Process Improvement and Practice, V11, P295, DOI 10.1002/spip.273
   MYERS GJ, 1978, COMMUN ACM, V21, P760, DOI 10.1145/359588.359602
   Ngo-The A, 2008, SOFT COMPUT, V12, P95, DOI [10.1007/S00500-007-0219-2, 10.1007/s00500-007-0219-2]
   Padberg F, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P187
   Pawlak M, 1995, 1995 IEEE INTERNATIONAL CONFERENCE ON EVOLUTIONARY COMPUTATION, VOLS 1 AND 2, P435, DOI 10.1109/ICEC.1995.489187
   Pyster AB, 2005, IEEE SOFTWARE, V22, P18, DOI 10.1109/MS.2005.137
   Ruhe G, 2005, IEEE SOFTWARE, V22, P47, DOI 10.1109/MS.2005.164
   Ruhe G., 2004, International Journal of Hybrid Intelligent Systems, V1, P99
   SALIU O, 2005, P 29 IEEE NASA SOFTW
   Stark GE, 1999, J SOFTW MAINT-RES PR, V11, P293, DOI 10.1002/(SICI)1096-908X(199909/10)11:5<293::AID-SMR198>3.0.CO;2-R
   van den Akker M, 2008, INFORM SOFTWARE TECH, V50, P101, DOI 10.1016/j.infsof.2007.10.017
   VANGURP J, 2000, P LAND ARCH C
NR 38
TC 56
Z9 66
U1 8
U2 31
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2009
VL 35
IS 1
BP 109
EP 123
DI 10.1109/TSE.2008.80
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 431UK
UT WOS:000265089400007
DA 2024-07-18
ER

PT J
AU Carver, JC
   Nagappan, N
   Page, A
AF Carver, Jeffrey C.
   Nagappan, Nachiappan
   Page, Alan
TI The Impact of Educational Background on the Effectiveness of
   Requirements Inspections: An Empirical Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Metrics/measurement; requirements/specifications; software quality/SQA
ID SOFTWARE ENGINEERING EXPERIMENTS; STATISTICAL POWER; PROGRAM; DESIGN
AB While the inspection of various software artifacts increases the quality of the end product, the effectiveness of an inspection largely depends on the individual inspectors involved. To address that issue, a large-scale controlled inspection experiment with over 70 professionals was conducted at Microsoft that focused on the relationship between an inspector's background and his effectiveness during a requirements inspection. The results of the study showed that inspectors with university degrees in majors not related to computer science found significantly more defects than those with degrees in computer science majors. We also observed that level of education (Masters, PhD), prior industrial experience, or other job-related experiences did not significantly impact the effectiveness of an inspector. The only other type of experience that had a significant impact on effectiveness was experience in writing requirements, i.e., professionals with prior experience writing requirements found statistically significant more defects than their counterparts.
C1 [Carver, Jeffrey C.] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
   [Nagappan, Nachiappan; Page, Alan] Microsoft Res, Redmond, WA 98052 USA.
C3 University of Alabama System; University of Alabama Tuscaloosa;
   Microsoft
RP Carver, JC (corresponding author), Univ Alabama, Dept Comp Sci, Box 870290, Tuscaloosa, AL 35487 USA.
EM carver@cs.ua.edu; nachin@microsoft.com; alanpa@microsoft.com
RI Carver, Jeffrey/AFP-1987-2022; Carver, Jeffrey/AAM-8202-2020
OI Carver, Jeffrey/0000-0002-7824-9151; Carver, Jeffrey/0000-0002-7824-9151
CR [Anonymous], SOFTWARE INSPECTIONS
   Aurum A, 2002, SOFTW TEST VERIF REL, V12, P133, DOI 10.1002/stvr.243
   Basili V., 1999, IEEE T SOFTWARE ENG, V25
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   Biffl S, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P107, DOI 10.1109/METRIC.2002.1011330
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   Carver J, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P72, DOI 10.1109/ISESE.2003.1237966
   Carver JC, 2006, EMPIR SOFTW ENG, V11, P523, DOI 10.1007/s10664-006-9021-5
   Carver Jeffrey C, 2003, THESIS U MARYLAND
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   FAGAN ME, 1986, IEEE T SOFTWARE ENG, V12, P744, DOI 10.1109/TSE.1986.6312976
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Faul F, 2007, BEHAV RES METHODS, V39, P175, DOI 10.3758/BF03193146
   Hungerford BC, 2004, IEEE T SOFTWARE ENG, V30, P82, DOI 10.1109/TSE.2004.1265814
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Laitenberger O, 2000, J SYST SOFTWARE, V53, P183, DOI 10.1016/S0164-1212(00)00052-2
   Lethbridge TC, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P12, DOI 10.1109/FOSE.2007.13
   MARTIN J, 1990, COMMUN ACM, V33, P225, DOI 10.1145/75577.75587
   McCarthy P, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P100, DOI 10.1109/METRIC.1996.492447
   Miller JH, 2004, ENGL STUD CAN, V30, P11, DOI 10.1353/esc.2004.0054
   Parnas D. L., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P132
   Porter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P41, DOI 10.1145/268411.268421
   Porter AA, 1997, IEEE T SOFTWARE ENG, V23, P129, DOI 10.1109/32.585501
   PORTON R, 1995, CINEASTE, V21, P6
   Sauer C, 2000, IEEE T SOFTWARE ENG, V26, P1, DOI 10.1109/32.825763
   Schneider G. M., 1992, ACM Transactions on Software Engineering and Methodology, V1, P188, DOI 10.1145/128894.128897
   Shull F, 2000, COMPUTER, V33, P73, DOI 10.1109/2.869376
   SHULL F, 2001, P JOINT 8 EUR SOFTW, P288
   SIY HP, 1996, THESIS U MARYLAND
   Thelin T, 2004, EMPIR SOFTW ENG, V9, P77, DOI 10.1023/B:EMSE.0000013515.86806.d4
   Thelin T, 2003, IEEE T SOFTWARE ENG, V29, P687, DOI 10.1109/TSE.2003.1223644
   VOTTA LG, 1993, P 1 ACM SIGSOFT S FD, P107
NR 32
TC 23
Z9 29
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2008
VL 34
IS 6
BP 800
EP 812
DI 10.1109/TSE.2008.49
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 376HR
UT WOS:000261175200006
DA 2024-07-18
ER

PT J
AU Strein, D
   Lincke, R
   Lundberg, J
   Löwe, W
AF Strein, Dennis
   Lincke, Rudiger
   Lundberg, Jonas
   Lowe, Welf
TI An extensible metamodel for program analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE programming environments; program analysis; metamodels
AB Software maintenance tools for program analysis and refactoring rely on a metamodel capturing the relevant properties of programs. However, what is considered relevant may change when the tools are extended with new analyses, refactorings, and new programming languages. This paper proposes a language independent metamodel and an architecture to construct instances thereof, which is extensible for new analyses, refactorings, and new front-ends of programming languages. Due to the loose coupling between analysis, refactoring, and front-end components, new components can be added independently and reuse existing ones. Two maintenance tools implementing the metamodel and the architecture, VIZZANALYZER and X-DEVELOP, serve as proof of concept.
C1 Omnicore Software, D-76137 Karlsruhe, Germany.
   Vaxjo Univ, Software Technol Grp, SE-35195 Vaxjo, Sweden.
C3 Linnaeus University; Vaxjo University
RP Strein, D (corresponding author), Omnicore Software, Werderstr 87, D-76137 Karlsruhe, Germany.
EM strein@omnicore.com; trudiger.lincke@vxu.se; jonasll@msi.vxu.se;
   Welf.Lowe@vxu.se
CR [Anonymous], P 3 INT WORKSH MET S
   [Anonymous], 2005, XML Metadata Interchange Specification Version 2.0.1
   [Anonymous], 2006, Unified Modeling Language Specification
   [Anonymous], OMG UN MOD LANG SPEC
   Bar H., 1999, The FAMOOS Object Oriented Reengineering Handbook
   BARONI AL, 2005, P 7 INT C ENT INF SY
   BARONI AL, 2002, THESIS VRIJE U BRUSS
   BOEHM B, 1981, SOFTWARE ENG ECONOMI
   BOOCH G, 1998, UNIFIED MODELING LAN
   Cordy J. R., 1988, Proceedings 1988 International Conference on Computer Languages (IEEE Cat. No.88CH2647-6), P280, DOI 10.1109/ICCL.1988.13075
   ELWAKIL M, 2005, P C EV ASS SOFTW ENG
   Favre JM, 1997, PROG COMPREHEN, P29, DOI 10.1109/WPC.1997.601260
   FJELDSTAD RK, 1979, P GUIDE 48
   Frankel D.S., 2003, Model Driven Architecture: Applying MDA to Enterprise Computing
   GOULAO M, 2004, P INT WORKSH MOD PRO
   HENNINGER S, 1997, J AUTOMATED SOFTWARE, V4
   HOLT RC, 2000, P 7 WORK C REV ENG W
   Jin D, 2002, PROG COMPREHEN, P65, DOI 10.1109/WPC.2002.1021320
   Klint P, 2005, ACM T SOFTW ENG METH, V14, P331, DOI 10.1145/1072997.1073000
   LAPIERRE B, 2001, SIGSOFT SOFTW ENG NO, V26, P53
   LETHBRIDGE TC, 2004, P INT WORKSH MET SCH, V94, P7
   Löwe W, 2005, INT J SOFTW ENG KNOW, V15, P995, DOI 10.1142/S0218194005002622
   LUDWIG A, 2002, RECODER
   LUDWING A, 2000, P C GEN COMP BAS SOF
   MCQUILLAN JA, 2006, P PHD WORKSH 20 EUR
   MILLER JS, 2004, COMMON LANG INFRASTR
   Muller H. A., 1988, Proceedings of the 10th International Conference on Software Engineering (Cat. No.88CH2554-4), P80, DOI 10.1109/ICSE.1988.93690
   *OBJ MAN GROUP, 2006, OMG UN MOD LANG SPEC
   ReiSSing R., 2001, 5th International ECOOP workshop on quantitative approaches in object-oriented software engineering, P71
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   SELFRIDGE P, 1990, P KNOWL BAS SOFTW EN
   STANDISH TA, 1984, IEEE T SOFTWARE ENG, V10, P494, DOI 10.1109/TSE.1984.5010272
   STREIN D, 2006, P 6 IEEE INT WORKSH
   Thurston AD, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P117
   Tip F, 2000, ACM SIGPLAN NOTICES, V35, P281, DOI 10.1145/354222.353190
   Van den Brand MGJ, 2002, ACM T PROGR LANG SYS, V24, P334, DOI 10.1145/567097.567099
   Watson A.H., 1996, NIST Special Publication
   Wilkie FG, 2002, PROC IEEE INT CONF S, P152, DOI 10.1109/ICSM.2002.1167762
   [No title captured]
   2006, METAOBJECT FACILITY
   [No title captured]
   2007, MOF QVT FINAL ADOPTE
NR 42
TC 12
Z9 12
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2007
VL 33
IS 9
BP 592
EP 607
DI 10.1109/tse.2007.70710
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 202EO
UT WOS:000248885000002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Constant, C
   Jéron, T
   Marchand, H
   Rusu, V
AF Constant, Camille
   Jeron, Thierry
   Marchand, Herve
   Rusu, Vlad
TI Integrating formal verification and conformance testing for reactive
   systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software/program verification; formal methods; testing strategies
ID TEST-GENERATION; MODEL CHECKING
AB In this paper, we describe a methodology integrating verification and conformance testing. A specification of a system an extended input-output automaton, which may be infinite-state - and a set of safety properties ("nothing bad ever happens") and possibility properties ("something good may happen") are assumed. The properties are first tentatively verified on the specification using automatic techniques based on approximated state-space exploration, which are sound, but, as a price to pay for automation, are not complete for the given class of properties. Because of this incompleteness and of state-space explosion, the verification may not succeed in proving or disproving the properties. However, even if verification did not succeed, the testing phase can proceed and provide useful information about the implementation. Test cases are automatically and symbolically generated from the specification and the properties and are executed on a black-box implementation of the system. The test execution may detect violations of conformance between implementation and specification; in addition, it may detect violation/satisfaction of the properties by the implementation and by the specification. In this sense, testing completes verification. The approach is illustrated on simple examples and on a Bounded Retransmission Protocol.
C1 Inst Natl Rech Informat & Automat, F-35042 Rennes, France.
RP Constant, C (corresponding author), Inst Natl Rech Informat & Automat, Campus Univ Beaulieu, F-35042 Rennes, France.
EM camille.constant@irisa.fr; thierry.jeron@irisa.fr;
   herve.marchand@irisa.fr; vlad.rusu@irisa.fr
OI Jeron, Thierry/0000-0002-9922-6186
CR AMMANN P, 2001, P INT C ENG COMPL CO
   BELINFANTE A, 1996, P INT WORKSH TEST CO, P179
   BLOM J, 2004, P WORKSH FORM APPR S
   BLOM J, 2004, P FORM APPR SOFTW TE, P137
   Bozga M, 2000, SCI COMPUT PROGRAM, V36, P27, DOI 10.1016/S0167-6423(99)00017-9
   Brinksma E., 1990, Protocol Test Systems. Proceedings of the IFIP TC 6 Second International Workshop, P349
   Brinksma Ed., 1988, PROTOCOL SPECIFICATI, VVIII, P63
   Clarke D, 2002, LECT NOTES COMPUT SC, V2280, P470
   Clarke EM, 1999, MODEL CHECKING, P1
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   de Vries R. G., 2001, P 1 INT WORKSH FORM, V1, P61
   FERNANDEZ JC, 2003, P FORM ASP SOFTW TES
   Gargantini A, 1999, LECT NOTES COMPUT SC, V1687, P146, DOI 10.1145/318774.318939
   Hamon G, 2004, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P261, DOI 10.1109/SEFM.2004.1347530
   Havelund K, 2002, LECT NOTES COMPUT SC, V2280, P342
   HELMINK L, 1994, P C TYP PROOFS PROGR, P127
   Hong HS, 2002, LECT NOTES COMPUT SC, V2280, P327
   *ISO IEC, 1992, 9646 ISOIEC
   Jard C., 2004, SOFTWARE TOOLS TECHN, V6
   Jeannet B, 2003, FORM METHOD SYST DES, V23, P5, DOI 10.1023/A:1024480913162
   JEANNET B, 2005, P 11 INT C TOOLS ALG
   JERON T, 2006, P 4 IFIP INT C THEOR
   Kupferman O, 2001, FORM METHOD SYST DES, V19, P291, DOI 10.1023/A:1011254632723
   LYNCH N, 1999, CWI Q, V3
   Peled D., 2002, Journal of Automata, Languages and Combinatorics, V7, P225
   Rusu V, 2000, LECT NOTES COMPUT SC, V1945, P338
   RUSU V, 2005, P S FORM METH EUR FM
   RUSU V, 2004, P INT C TEST COMM SY
   SHOSTAK RE, 1979, J ACM, V26, P351, DOI 10.1145/322123.322137
   Tretmans J, 1996, SOFTWARE-CONC TOOL, V17, P103
   Tretmans J, 1999, LECT NOTES COMPUT SC, V1664, P46
   ZINOVIEVA E, 2004, THESIS U RENNES 1
NR 32
TC 24
Z9 31
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2007
VL 33
IS 8
BP 558
EP 574
DI 10.1109/TSE.2007.70707
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 182ZJ
UT WOS:000247542200005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Schmerl, B
   Aldrich, J
   Garlan, D
   Kazman, R
   Yan, H
AF Schmerl, Bradley
   Aldrich, Jonathan
   Garlan, David
   Kazman, Rick
   Yan, Hong
TI Discovering architectures from running systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software architecture discovery; reverse engineering; architecture
   design tools and analyses
AB One of the challenging problems for software developers is guaranteeing that a system as built is consistent with its architectural design. In this paper, we describe a technique that uses runtime observations about an executing system to construct an architectural view of the system. In this technique, we develop mappings that exploit regularities in system implementation and architectural style. These mappings describe how low-level system events can be interpreted as more abstract architectural operations and are formally defined using Colored Petri Nets. In this paper, we describe a system, called DiscoTect, that uses these mappings and we introduce the DiscoSTEP mapping language and its formal definition. Two case studies showing the application of DiscoTect suggest that the tool is practical to apply to legacy systems and can dynamically verify conformance to a preexisting architectural specification.
C1 Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15221 USA.
   Univ Hawaii, Honolulu, HI 96822 USA.
   Carnegie Mellon Univ, Inst Software Engn, Pittsburgh, PA 15221 USA.
C3 Carnegie Mellon University; University of Hawaii System; Software
   Engineering Institute; Carnegie Mellon University
RP Schmerl, B (corresponding author), Carnegie Mellon Univ, Sch Comp Sci, 5000 Forbes Ave, Pittsburgh, PA 15221 USA.
EM schmerl@cs.cmu.edu; aldrich@cs.cmu.edu; garlan@cs.cmu.edu;
   kazman@sei.cmu.edu; yh@cs.cmu.edu
OI Aldrich, Jonathan/0000-0003-0631-5591; Schmerl,
   Bradley/0000-0001-7828-622X
CR ALDRICH J, 2002, P 24 INT C SOFTW ENG
   ALLEN R, 1994, P INT C SOFTW ENG IC
   BAI Q, 2004, P 2 INT C AUT ROB AG
   Balzer RobertM., 1999, P 19 IEEE INT C DIST
   Clements P., 2001, EVALUATING SOFTWARE
   Clements P., 2002, DOCUMENTING SOFTWARE
   DIAS M, 2003, LECT NOTES COMPUTER
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Garlan D, 2002, SCI COMPUT PROGRAM, V44, P23, DOI 10.1016/S0167-6423(02)00031-X
   GARLAN D, 2000, FDN COMPONENT BASED
   GARLAN D, 1994, P ACM SIGSOFT 94 S F
   Garlan David., 2003, ARCHITECTING DEPENDA
   JACKSON D, 1999, P 1999 INT C SOFTW E
   Jensen K., 1994, Decade of Concurrency. Reflections and Perspectives. REX School/Symposium Proceedings, P230
   KAISER G, 2003, P 5 INT ACT MIDDL WO
   KAZMAN R, 2003, COMPUTER STANDARDS I
   KAZMAN R, 1999, J AUTOMATED SOFTWARE, V6
   KICZALES G, 2001, COMM ACM, V4
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   LUCKHAM DC, 1996, P DIMACS PART ORD ME
   MADHAV N, 1996, P REL SOFTW TECHN AD
   MANSOURISAMANI M, 1997, IEE IOP BCS DISTR SY, V4
   Marsan M. A., 1987, Performance Evaluation Review, V15, P175, DOI 10.1145/29904.29924
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   MURPHY GC, 1995, P 1995 ACM SIGSOFT S
   OBRIEN L, 2003, CMUSEI2003TN008 SOFT
   Perry D.E., 1992, ACM SIGSOFT SOFTWARE, V17
   REISS S, 2003, P 25 INT C SOFTW ENG
   Schmerl B., 2004, P 26 INT C SOFTW ENG
   SHAW M, 1995, IEEE T SOFTWARE ENG, V21, P314, DOI 10.1109/32.385970
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   SPINCZYK O, 2002, P 40 INT C TOOLS PAC, V10
   Taylor RN, 1996, IEEE T SOFTWARE ENG, V22, P390, DOI 10.1109/32.508313
   VESTEL S, 1996, METAH PROGRAMMERS MA
   VIEIRA M, 2001, P 10 INT WORKSH COMP
   WALKER RJ, 1998, P ACM SIGPLAN INT C
   WALKER RJ, 2000, P CASCON
   WELLS D, 2001, P 1 WORK C COMPL DYN
   XU J, 1998, P 1 INT WORKSH SOFTW, P70
   YAN H, 2004, P 26 INT C SOFTW ENG
   YAN H, 2004, CMUSEI2004TR016
   ZELLER A, 2000, P SIGCSE SIGCUE PROG
   ZHU D, 2001, P ICCCN 2001 10 INT
   [No title captured]
NR 44
TC 50
Z9 60
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2006
VL 32
IS 7
BP 454
EP 466
DI 10.1109/TSE.2006.66
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 071MF
UT WOS:000239605600002
DA 2024-07-18
ER

PT J
AU Xie, T
   Notkin, D
AF Xie, T
   Notkin, D
TI Checking inside the black box: Regression testing by comparing value
   spectra
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 20th IEEE International Conference on Software Maintenance (ICSM 2004)
CY SEP 11-14, 2004
CL Chicago, IL
SP IEEE Comp Soc
DE program spectra; regression testing; software testing; empirical
   studies; software maintenance
AB Comparing behaviors of program versions has become an important task in software maintenance and regression testing. Black-box program outputs have been used to characterize program behaviors and they are compared over program versions in traditional regression testing. Program spectra have recently been proposed to characterize a program's behavior inside the black box. Comparing program spectra of program versions offers insights into the internal behavioral differences between versions. In this paper, we present a new class of program spectra, value spectra, that enriches the existing program spectra family. We compare the value spectra of a program's old version and new version to detect internal behavioral deviations in the new version. We use a deviation-propagation call tree to present the deviation details. Based on the deviation-propagation call tree, we propose two heuristics to locate deviation roots, which are program locations that trigger the behavioral deviations. We also use path spectra ( previously proposed program spectra) to approximate the program states in value spectra. We then similarly compare path spectra to detect behavioral deviations and locate deviation roots in the new version. We have conducted an experiment on eight C programs to evaluate our spectra-comparison approach. The results show that both value-spectra-comparison and path-spectra-comparison approaches can effectively expose program behavioral differences between program versions even when their program outputs are the same, and our value-spectra-comparison approach reports deviation roots with high accuracy for most programs.
C1 N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
   Univ Washington, Dept Comp Sci & Engn, Seattle, WA 98195 USA.
C3 North Carolina State University; University of Washington; University of
   Washington Seattle
RP N Carolina State Univ, Dept Comp Sci, Box 8206, Raleigh, NC 27695 USA.
EM xie@csc.ncsu.edu; notkin@cs.washington.edu
CR Abramson D, 1996, COMMUN ACM, V39, P69, DOI 10.1145/240455.240475
   Ball T, 1996, PROCEEDINGS OF THE 29TH ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE - MICRO-29, P46, DOI 10.1109/MICRO.1996.566449
   Calder B, 1997, INT SYMP MICROARCH, P259, DOI 10.1109/MICRO.1997.645816
   CHEN YF, 1994, PROC INT CONF SOFTW, P211
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   *GNU, 2002, GNU DIFF
   Graves TL, 2001, ACM T SOFTW ENG METH, V10, P184, DOI 10.1145/367008.367020
   Harrold MJ, 2000, SOFTW TEST VERIF REL, V10, P171, DOI 10.1002/1099-1689(200009)10:3<171::AID-STVR209>3.0.CO;2-J
   HOWDEN WE, 1982, IEEE T SOFTWARE ENG, V8, P371, DOI 10.1109/TSE.1982.235571
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   JARAMILLO C, 2002, P INT WORKSH COMP OP
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Korel B., 1998, Software Engineering Notes, V23, P143, DOI 10.1145/271775.271803
   Leung H. K. N., 1990, Proceedings. Conference on Software Maintenance 1990 (Cat. No.90CH2921-5), P290, DOI 10.1109/ICSM.1990.131377
   MORELL LJ, 1990, IEEE T SOFTWARE ENG, V16, P844, DOI 10.1109/32.57623
   NETHERCOTE N, 2003, P 3 WORKSH RUNT VER
   Reese JD, 1997, PROC INT CONF SOFTW, P250, DOI 10.1145/253228.253281
   Reiss SP, 2001, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2001.919096
   Reps T, 1997, LECT NOTES COMPUT SC, V1301, P432, DOI 10.1145/267896.267925
   Rothermel G, 1998, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.1998.738487
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   THOMPSON MC, 1993, P ACM INT S SOFTW TE, P182
   VOAS JM, 1992, IEEE T SOFTWARE ENG, V18, P717, DOI 10.1109/32.153381
   Vokolos FI, 1998, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.1998.738488
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   WHITE L, 1992, P INT C SOFTW MAINT, P262
   WILDE N, 2003, RECON SOFTWARE RECON
   Xie T, 2004, PROC IEEE INT CONF S, P28
   Xie T, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P196
   ZIMMERMANN T, 2001, DAGST SEM SOFTW VIS
   2005, DAIKON INVARIANT DET
NR 36
TC 33
Z9 39
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2005
VL 31
IS 10
BP 869
EP 883
DI 10.1109/TSE.2005.107
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 980JR
UT WOS:000233015300006
DA 2024-07-18
ER

PT J
AU Weber, S
   Chan, H
   Degenaro, L
   Diament, J
   Fokoue-Nkoutche, A
   Rouvellou, I
AF Weber, S
   Chan, H
   Degenaro, L
   Diament, J
   Fokoue-Nkoutche, A
   Rouvellou, I
TI Fusion: A system for business users to manage program variability
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 8th International Conference on Software Reuse
CY JUL 05-09, 2004
CL Madrid, SPAIN
DE Web site management/development tools; middleware/business logic;
   specialized application languages; domain-specific architectures; human
   factors in software design; user interfaces
AB In order to make software components more flexible and reusable, it is desirable to provide business users with facilities to assemble and control them without their needing programming knowledge. This paper describes a fully functional prototype middleware system where variability is externalized so that core applications need not be altered for anticipated changes. In this system, application behavior modification is fast and easy, making this middleware suitable for frequently changing programs.
C1 IBM Corp, Thomas J Watson Res Ctr, Yorktown Hts, NY 10598 USA.
C3 International Business Machines (IBM)
RP IBM Corp, Thomas J Watson Res Ctr, POB 704, Yorktown Hts, NY 10598 USA.
EM samweber@watson.ibm.com; hychan@us.ibm.com; degenaro@us.ibm.com;
   djudah@us.ibm.com; achille@us.ibm.com; rouvellou@us.ibm.com
CR ABITEBOUL S, 1991, P ACM SIGMOD INT C M, P238
   Burstein M., 2000, Proceedings of the Fourth International Conference on Autonomous Agents, P277, DOI 10.1145/336595.337493
   Friedman-Hill E., 2003, Jess in Action: Java Rule-Based Systems
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gennari JH, 2003, INT J HUM-COMPUT ST, V58, P89, DOI 10.1016/S1071-5819(02)00127-1
   Lin LW, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P121
   Pawson R, 2001, ACM SIGPLAN NOTICES, V36, P61, DOI 10.1145/583960.583967
   Penker M., 2000, Business Modeling With UML: Business Patterns at Work
   Perkins A., 2000, Proceedings. 34th International Conference on Technology of Object-Oriented Languages and Systems - TOOLS 34, P285, DOI 10.1109/TOOLS.2000.868979
   Ross R.G., 1997, BUSINESS RULE BOOK C
   ROSS RG, 2000, P SIGMOD MAN DAT DAL, P515
   Smith M., 2004, OWL web ontology language: guide
   Von Halle B., 2001, Business rules applied: building better systems using the business rules approach
   Wan-Kadir WMN, 2004, J SYST ARCHITECT, V50, P367, DOI 10.1016/j.sysarc.2003.09.006
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 32
TC 0
Z9 0
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2005
VL 31
IS 7
BP 570
EP 587
DI 10.1109/TSE.2005.82
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 951EW
UT WOS:000230912900004
DA 2024-07-18
ER

PT J
AU Snavely, N
   Debray, S
   Andrews, GR
AF Snavely, N
   Debray, S
   Andrews, GR
TI Unpredication, unscheduling, unspeculation: Reverse engineering Itanium
   executables
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 10th Working Conference on Reverse Engineering (WCRE 2003)
CY NOV 13-16, 2003
CL VICTORIA, CANADA
SP Reengn Forum, IEEE Comp Soc, Tech Council Sofware Engn, Univ Victoria, Univ Alberta
DE reverse engineering; EPIC architectures; speculation; predication; code
   optimization
ID DATA FLOW ANALYSIS
AB EPIC (Explicitly Parallel Instruction Computing) architectures, exemplified by the Intel Itanium, support a number of advanced architectural features, such as explicit instruction-level parallelism, instruction predication, and speculative loads from memory. However, compiler optimizations that take advantage of these features can profoundly restructure the program's code, making it potentially difficult to reconstruct the original program logic from an optimized Itanium executable. This paper describes techniques to undo some of the effects of such optimizations and thereby improve the quality of reverse engineering such executables.
C1 Univ Washington, Dept Comp Sci, Seattle, WA 98195 USA.
   Univ Arizona, Dept Comp Sci, Tucson, AZ 85721 USA.
C3 University of Washington; University of Washington Seattle; University
   of Arizona
RP Univ Washington, Dept Comp Sci, Seattle, WA 98195 USA.
EM snavely@cs.washington.edu; debray@cs.arizona.edu; greg@cs.arizona.edu
CR Burford S., 2002, REVERSE ENG LINUX EL
   BYRNE EJ, 1991, SOFTWARE PRACT EXPER, V21, P1349, DOI 10.1002/spe.4380211206
   CIFUENTES C, 1995, SOFTWARE PRACT EXPER, V25, P811, DOI 10.1002/spe.4380250706
   Cifuentes C, 2001, SCI COMPUT PROGRAM, V40, P171, DOI 10.1016/S0167-6423(01)00014-4
   Cifuentes C, 2000, COMPUTER, V33, P60, DOI 10.1109/2.825697
   CIFUENTES C, 2000, P EUR C SOFTW MAINT
   Gillies DM, 1996, PROCEEDINGS OF THE 29TH ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE - MICRO-29, P114, DOI 10.1109/MICRO.1996.566455
   HALL PAV, 1992, SOFTWARE REUSE REVER, P3
   HOLLANDER CR, 1973, THESIS STANFORD U
   Johnson R, 1996, PROCEEDINGS OF THE 29TH ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE - MICRO-29, P100, DOI 10.1109/MICRO.1996.566454
   KAM JB, 1977, ACTA INFORM, V7, P305, DOI 10.1007/BF00290339
   KAM JB, 1976, J ACM, V23, P158, DOI 10.1145/321921.321938
   Kiss A, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P118, DOI 10.1109/SCAM.2003.1238038
   LANO K, 1994, REVERSE ENG SOFTWARE
   LIAO SS, 2002, P ACM SIGPLAN 02 C P
   Proebsting TA, 1997, PROCEEDINGS OF THE THIRD USENIX CONFERENCE ON OBJECT-ORIENTED TECHNOLOGIES AND SYSTEMS (COOTS), P185
   PUGH W, 1992, COMMUN ACM, V35, P102, DOI 10.1145/135226.135233
   Schwarz B, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P45, DOI 10.1109/WCRE.2002.1173063
   Sias JW, 2000, INT SYMP MICROARCH, P112, DOI 10.1109/MICRO.2000.898063
   SNAVELY N, 2002, P WORKSH EXPL PAR IN
   SNAVELY N, 2003, P 2003 IEEE WORK C R
   SNAVELY N, 2003, UNSPECULATION
   Systä T, 2001, SOFTWARE PRACT EXPER, V31, P371, DOI 10.1002/spe.386
NR 23
TC 2
Z9 7
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2005
VL 31
IS 2
BP 99
EP 115
DI 10.1109/TSE.2005.27
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 899ZR
UT WOS:000227185100002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tomer, A
   Goldin, L
   Kuflik, T
   Kimchi, E
   Schach, SR
AF Tomer, A
   Goldin, L
   Kuflik, T
   Kimchi, E
   Schach, SR
TI Evaluating software reuse alternatives: A model and its application to
   an industrial case study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE reuse models; cost estimation; maintenance management; software
   libraries; process metrics; process measurement; planning
AB We propose a model that enables software developers to systematically evaluate and compare all possible alternative reuse scenarios. The model supports the clear identification of the basic operations involved and associates a cost component with each basic operation in a focused and precise way. The model is a practical tool that assists developers to weigh and evaluate different reuse scenarios, based on accumulated organizational data, and then to decide which option to select in a given situation. The model is currently being used at six different companies for cost-benefit analysis of alternative reuse scenarios; we give a case study that illustrates how it has been used in practice.
C1 RAFAEL Ltd, IL-31021 Haifa, Israel.
   Golden Solut, IL-44641 Kefar Sava, Israel.
   Univ Haifa, Dept Management Informat Syst, IL-31905 Haifa, Israel.
   Vanderbilt Univ, Dept Elect Engn & Comp Sci, Nashville, TN 37235 USA.
C3 RAFAEL ADVANCED DEFENSE SYSTEMS; University of Haifa; Vanderbilt
   University
RP RAFAEL Ltd, POB 2250-1P, IL-31021 Haifa, Israel.
EM tomera@rafael.co.il; l_goldin@computer.org;
   tsvikak@mis.hevra.haifa.ac.il; estikim@zahav.net.il;
   srs@vuse.vanderbilt.edu
RI Kuflik, Tsvi/M-5115-2014
OI Kuflik, Tsvi/0000-0003-0096-4240
CR BARNES BH, 1991, IEEE SOFTWARE, V8, P13, DOI 10.1109/52.62928
   Boehm B, 1999, COMPUTER, V32, P111, DOI 10.1109/2.789755
   *CARN MELL U SOFTW, 2004, FRAM SOFTW PROD LIN
   Jacobson I., 1997, Software Reuse: Architecture, Process and Organization for Business Success
   Lim WC, 1996, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE, PROCEEDINGS, P41, DOI 10.1109/ICSR.1996.496112
   MALAN R, 1993, HPL9331
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Poulin J.S., 1997, MEASURING SOFTWARE R
   Prieto-Diaz R., 1991, DOMAIN ANAL SOFTWARE
   Schach SR, 2000, KLUWER INT SER ENG C, V576, P437
   Tomer A., 2002, Systems Engineering, V5, P264, DOI 10.1002/sys.10026
   *USAF MAT COMM EL, 1996, SOFTW TECHN AD REL S, V1
   WILES E, 1999, UWADCS99032 U WAL DE
NR 13
TC 29
Z9 33
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2004
VL 30
IS 9
BP 601
EP 612
DI 10.1109/TSE.2004.50
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 845HM
UT WOS:000223233000004
DA 2024-07-18
ER

PT J
AU Wang, F
   Schmidt, K
   Yu, F
   Huang, GD
   Wang, BY
AF Wang, F
   Schmidt, K
   Yu, F
   Huang, GD
   Wang, BY
TI BDD-based safety-analysis of concurrent software with pointer data
   structures using graph automorphism symmetry reduction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE symbolic model checking; pointers; data structure; address manipulation;
   symmetry reduction; experiments
ID MODEL-CHECKING; VERIFICATION
AB Dynamic data-structures with pointer links, which are heavily used in real-world software, cause extremely difficult verification problems. Currently, there is no practical framework for the efficient verification of such software systems. We investigated symmetry reduction techniques for the verification of software systems with C-like indirect reference chains like x->y->z->w. We formally defined the model of software with pointer data structures and developed symbolic algorithms to manipulate conditions and assignments with indirect reference chains using BDD technology. We relied on two techniques, inactive variable elimination and process-symmetry reduction in the data-structure configuration, to reduce time and memory complexity. We used binary permutation for efficiency, but we also identified the possibility of an anomaly of false image reachability. We implemented the techniques in tool Red 5.0 and compared performance with Murphi and SMC against several benchmarks.
C1 Natl Taiwan Univ, Dept Elect Engn, Taipei 106, Taiwan.
   Humboldt Univ, Inst Informat, D-10099 Berlin, Germany.
   Acad Sinica, Inst Informat Sci, Taipei 115, Taiwan.
C3 National Taiwan University; Humboldt University of Berlin; Academia
   Sinica - Taiwan
RP Natl Taiwan Univ, Dept Elect Engn, Nr 1,Sec 4,Roosevelt Rd, Taipei 106, Taiwan.
EM farn@cc.ee.ntu.edu.tw; kschmidt@informatik.hu-berlin.de;
   yuf@iis.sinica.edu.tw; view@iis.sinica.edu.tw; bywang@iis.sinica.edu.tw
CR ALUR R, 1993, INFORM COMPUT, V104, P2, DOI 10.1006/inco.1993.1024
   BENGTSSON J, 1996, P HYBR CONTR SYST S
   BOZGA M, 1998, P 10 C COMP AID VER
   BROWNE MC, 1986, P 5 ACM S PRINC DIST, P240
   Bryant RE, 1986, IEEE T COMPUT, VC-35, P8
   BURCH JR, 1990, P IEEE S LOG COMP SC
   CLARKE E, 1981, P WORKSH LOG PROGR
   Clarke EM, 1996, FORM METHOD SYST DES, V9, P77, DOI 10.1007/BF00625969
   CLARKE EM, 1995, P 6 INT C CONC THEOR, P395
   Cousot P., 1977, P 4 ANN S PRINC PROG
   Dill D.L., 1996, CAV
   DWYER MB, 2003, ELECT NOTES THEORETI, V89
   EMERSON E, 1995, P 22 ACM S PRINC PRO
   Emerson EA, 1996, FORM METHOD SYST DES, V9, P105, DOI 10.1007/BF00625970
   Emerson EA, 1997, ACM T PROGR LANG SYS, V19, P617, DOI 10.1145/262004.262008
   GODEFROID P, 1990, P COMP AID VER WORKS
   HOLZMANN G, 1992, P 12 INT S PROT SPEC
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   HOLZMANN GJ, 1994, P FORM TECHN NETW DI
   Ip CN, 1996, FORM METHOD SYST DES, V9, P41, DOI 10.1007/BF00625968
   KATZ S, 1992, DISTRIB COMPUT, V6, P107, DOI 10.1007/BF02252682
   Kurshan R. P., 1989, Proceedings of the Eighth Annual ACM Symposium on Principles of Distributed Computing, P239, DOI 10.1145/72981.72998
   MELLORCRUMMEY JM, 1991, ACM T COMPUT SYST, V9, P21, DOI 10.1145/103727.103729
   Schmidt K, 2000, ACTA INFORM, V36, P545, DOI 10.1007/s002360050002
   Silberschatz A., 2003, OPERATING SYSTEM CON, V6th
   Sistla AP, 2000, ACM T SOFTW ENG METH, V9, P133, DOI 10.1145/350887.350891
   SISTLA AP, 1992, J ACM, V30, P675
   SISTLA AP, 1997, P C COMP AID VER
   Wang F, 2002, IEEE T COMPUT, V51, P61, DOI 10.1109/12.980017
   WANG F, 2002, P INT WORKSH REAL TI
   WANG F, 2000, P C TOOLS ALG CONSTR
   Wang Farn, 2001, P INT C FORM TECHN N
NR 32
TC 1
Z9 2
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2004
VL 30
IS 6
BP 403
EP 417
DI 10.1109/TSE.2004.15
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 820IW
UT WOS:000221383400005
DA 2024-07-18
ER

PT J
AU Chatzigeorgiou, A
AF Chatzigeorgiou, A
TI Mathematical assessment of object-oriented design quality
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software metrics; object-oriented design; link analysis
ID METRICS
AB A method of link analysis employed for retrieving information from the Web is extended in order to evaluate one aspect of quality in an object-oriented model. The principal eigenvectors of matrices derived from the adjacency matrix of a modified class diagram are used to identify and quantity heavily loaded portions of an object-oriented design that deviate from the principle of distributed responsibilities.
C1 Univ Macedonia, Dept Informat Informat, Thessaloniki 54006, Greece.
C3 University of Macedonia
RP Chatzigeorgiou, A (corresponding author), Univ Macedonia, Dept Informat Informat, 156 Egnatia St, Thessaloniki 54006, Greece.
RI Chatzigeorgiou, Alexandros/AAL-6077-2021
CR ABREU FBE, 1995, P 9 EUR C OBJ OR PRO
   [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   BANSIYA J, 2002, IEEE T SOFTWARE ENG, V28
   Budd T.A., 2001, INTRO OBJECT ORIENTE, V3rd
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Golub G.H., 1989, MATRIX COMPUTATIONS
   Kirsopp C., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P230, DOI 10.1109/METRIC.1999.809744
   Kleinberg JM, 1999, J ACM, V46, P604, DOI 10.1145/324133.324140
   LEE R, 2001, UML CPLUSPLUS PRACTI
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Meyer CD, 2001, Matrix analysis and applied linear algebra
   MILLER JC, 2001, P 24 INT ACM SIGIR C
   Riel AJ., 1996, Object-Oriented Design Heuristics
NR 16
TC 2
Z9 6
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2003
VL 29
IS 11
BP 1050
EP 1053
DI 10.1109/TSE.2003.1245306
PG 4
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 740KU
UT WOS:000186402200009
DA 2024-07-18
ER

PT J
AU Vitharana, O
   Ramamurthy, K
AF Vitharana, O
   Ramamurthy, K
TI Computer-mediated group support, anonymity, and the software inspection
   process: An empirical investigation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE anonymity controlled experiment design; group support systems; seeded
   errors; software inspection; software quality assurance
ID CODE INSPECTIONS; PROXIMITY; PROGRAM; GDSS
AB In,software inspection, a key principle endorsed by Fagan is openness. However, scholars have recently questioned the efficacy of openness. For example, some argue that ego-involvement and personality conflicts that become more transparent due to openness might impede inspection. Still others point out that familiarity and (preexisting) relationships among inspection team members negatively affect the comprehensiveness in detection of defects. This brings up concerns if the openness as originally envisioned by Fagan may in fact lead to suboptimal outcomes. As the trend towards computer-based inspection continues, we believe that anonymity could play, a positive role in overcoming some of the drawbacks noted in team-based inspection. Drawing upon the literature on software, inspection and group support systems, this research proposes possible influences of group member anonymity on the outcome of computer-mediated software inspection and empirically examines the validity of the posited relationships in a set of controlled laboratory experiments. Two different inspection tasks with varying levels of software code complexity are employed. While both the control groups (i.e., teams without anonymity) and treatment groups (i.e., teams with support for anonymity) consume more or less the same time in performing the inspection tasks, the treatment groups are more effective in identifying the seeded errors in the more complex task.; Treatment groups, also express a more positive attitude toward both code inspection tasks. The findings of the study suggest a nurnber of directions for future research.
C1 Syracuse Univ, Sch Management, Syracuse, NY 13244 USA.
   Univ Wisconsin, Sch Business Adm, Milwaukee, WI 53201 USA.
C3 Syracuse University; University of Wisconsin System; University of
   Wisconsin Milwaukee
RP Vitharana, O (corresponding author), Syracuse Univ, Sch Management, Syracuse, NY 13244 USA.
EM padmal@syr.edu; ramurthy@uwm.edu
CR ACKERMAN AF, 1989, IEEE SOFTWARE, V6, P31, DOI 10.1109/52.28121
   [Anonymous], 1995, The Capability Maturity Model: Guidelines for Improving the Software Process
   [Anonymous], SOFTWARE INSPECTION
   Boehm B, 2001, PROC INT CONF SOFTW, P720
   Brothers L., 1990, P 1990 ACM C COMPUTE, P169
   Campbell D.T., 1966, Experimental and quasi-experimental designs for research
   Cohen J., 1988, STAT POWER ANAL BEHA
   CONNOLLY T, 1990, MANAGE SCI, V36, P689, DOI 10.1287/mnsc.36.6.689
   ER MC, 1995, DECIS SUPPORT SYST, V14, P75, DOI 10.1016/0167-9236(94)00013-I
   FAGAN ME, 1986, IEEE T SOFTWARE ENG, V12, P744, DOI 10.1109/TSE.1986.6312976
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Fjermestad J., 1998, Journal of Management Information Systems, V15, P7
   George JF, 1990, INFORM SYST RES, V1, P394, DOI 10.1287/isre.1.4.394
   GINTELL JW, 1993, P 4 EUR C SOFTW ENG, P344
   Gopal A, 2000, MIS QUART, V24, P509, DOI 10.2307/3250972
   IVES B, 1984, MANAGE SCI, V30, P586, DOI 10.1287/mnsc.30.5.586
   Jessup L.M., 1993, GROUP SUPPORT SYSTEM
   JESSUP LM, 1991, DECISION SCI, V22, P266, DOI 10.1111/j.1540-5915.1991.tb00346.x
   JESSUP LM, 1990, MIS QUART, V14, P313, DOI 10.2307/248893
   JOHNSON PM, 1994, PROC INT CONF SOFTW, P113, DOI 10.1109/ICSE.1994.296771
   Johnson PM, 1998, COMMUN ACM, V41, P49, DOI 10.1145/269012.269020
   KNIGHT JC, 1993, COMMUN ACM, V36, P51, DOI 10.1145/163359.163366
   Laitenberger O, 2000, J SYST SOFTWARE, V50, P5, DOI 10.1016/S0164-1212(99)00073-4
   MACDONALD F, 1995, SEVENTH INTERNATIONAL WORKSHOP ON COMPUTER-AIDED SOFTWARE ENGINEERING, PROCEEDINGS, P340, DOI 10.1109/CASE.1995.465300
   MASHAYEKHI V, 1993, IEEE SOFTWARE, V10, P66, DOI 10.1109/52.232404
   Porter AA, 1997, IEEE T SOFTWARE ENG, V23, P129, DOI 10.1109/32.585501
   Porter AA, 1997, IEEE T SOFTWARE ENG, V23, P329, DOI 10.1109/32.601071
   RAO VS, 1991, MANAGE SCI, V37, P1347, DOI 10.1287/mnsc.37.10.1347
   Sauer C, 2000, IEEE T SOFTWARE ENG, V26, P1, DOI 10.1109/32.825763
   Seaman CB, 1998, IEEE T SOFTWARE ENG, V24, P559, DOI 10.1109/32.708569
   Stein M, 1997, PROC INT CONF SOFTW, P107, DOI 10.1145/253228.253250
   VALACICH JS, 1992, SMALL GR RES, V23, P49, DOI 10.1177/1046496492231004
   van Genuchten M, 2001, IEEE SOFTWARE, V18, P60, DOI 10.1109/52.922727
   VOTTA LG, 1993, P 1 ACM SIGSOFT S FD, P107
   ZIGURS I, 1994, MIS QUART, V18, P277, DOI 10.2307/249619
   2002, CODESTRIKER
   2002, COREVIEW
   2002, REVIEWPRO
NR 38
TC 16
Z9 16
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2003
VL 29
IS 2
BP 167
EP 180
DI 10.1109/TSE.2003.1178054
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 644EB
UT WOS:000180904000006
DA 2024-07-18
ER

PT J
AU Hsu, PY
   Chang, YB
   Chen, YL
AF Hsu, PY
   Chang, YB
   Chen, YL
TI STRPN: A Petri-Net approach for modeling spatial-temporal relations
   between moving multimedia objects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Petri Net; multimedia; spatial-temporal relations; two-phase firing
   conditions; valid firing sequences; relative coordination
ID SYNCHRONIZATION
AB A multimedia presentation model provides designers a tool to formally specify the temporal and spatial relationships of objects. The formality helps designers to communicate with others, to check the integrity of designs, and provides a chance to simulate the designs. Although much research has been devoted to this subject, to the best of our knowledge, no multimedia models are able to describe the spatial-temporal relations of moving objects that may refer to each other for computing displaying addresses. The addresses may be recomputed several times during the objects' lifetimes to reflect their movements. Without a formal model, designers are forced to specify the relationships in an ad hoc manner that causes misunderstanding and hampers integrity check. The check includes if an object gets its addresses in time from another object, if an object is displayed in the right places, etc. The difficulty of designing such a formal model lies in integrating temporal constraints of objects with a real-time address transferring mechanism. In this paper, we present an extended Petri-Net model, which models concurrent relationships of objects with new places, transitions, and firing rules to transfer and transform addresses in real time. Its descriptive power and correctness is demonstrated by five patterns of multimedia presentations and a sample play scripts.
C1 Natl Cent Univ, Dept Business Adm, Chungli 320, Taiwan.
C3 National Central University
RP Hsu, PY (corresponding author), Natl Cent Univ, Dept Business Adm, Chungli 320, Taiwan.
RI Hsu, Ping-Yu/ABB-6953-2021
OI Hsu, Ping-Yu/0000-0002-7153-2579
CR ALLEN JF, 1983, COMMUN ACM, V26, P11
   ANISIMOV NA, 1996, P 1 ANN C EM TECHN A
   Candan KS, 1998, MULTIMEDIA SYST, V6, P232, DOI 10.1007/s005300050091
   DIAZ M, 1993, P INT C MULT MOD NOV
   DRATH R, 1999, VISUAL OBJECT NETPLU
   FRANK AU, 1994, INT J GEOGRAPHIC INF
   Herman I, 1998, MULTIMEDIA SYST, V6, P88, DOI 10.1007/s005300050078
   LINO M, 1994, P IEEE MULT C, P110
   LITTLE TDC, 1990, IEEE J SEL AREA COMM, V8, P413, DOI 10.1109/49.53017
   Papadias D., 1997, INT J GEOGRAPHIC INF, V11
   PerezLuque MJ, 1996, IEEE J SEL AREA COMM, V14, P36, DOI 10.1109/49.481692
   Prabhakaran B., 1993, Proceedings ACM Multimedia 93, P157, DOI 10.1145/166266.166284
   RAMCHANDANI C, 1974, 120 TRI MIT
   Song JW, 1999, MULTIMEDIA SYST, V7, P424, DOI 10.1007/s005300050143
   Vazirgiannis M, 1999, IEEE MULTIMEDIA, V6, P24, DOI 10.1109/93.790609
   VAZIRGIANNIS M, 1997, ACM SPRINGER VERLAG, V6
   VUONG S, 1996, P INT C NETW PROT
   Woo P.T. K., 1994, PARASITIC PROTOZOA, VVIII., P1, DOI DOI 10.1016/B978-0-08-092414-4.50006-5
NR 18
TC 10
Z9 11
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2003
VL 29
IS 1
BP 63
EP 76
DI 10.1109/TSE.2003.1166589
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 633GD
UT WOS:000180273500005
DA 2024-07-18
ER

PT J
AU Cornejo, C
   Regis, GE
   Aguirre, N
   Frias, MF
AF Cornejo, Cesar
   Regis, German E.
   Aguirre, Nazareno
   Frias, Marcelo F.
TI A Study of the Electrum and DynAlloy Dynamic Behavior Notations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Metals; Object oriented modeling; Rivers; Behavioral sciences;
   Syntactics; Analytical models; Software; Formal methods; software
   specification; alloy; automated analysis
ID ALLOY; MONDEX; VERIFICATION; SPECIFICATION; PROOF; PURSE; CHORD
AB Alloy is a formal specification language, which despite featuring a simple syntax and relational semantics, is very expressive and supports efficient automated specification analysis, based on SAT solving. While the language is sufficiently expressive to accommodate both static and dynamic properties of systems within specifications, the latter kind of properties require intricate, ad-hoc, constructions to encode system executions. Thus, extensions to the language have been proposed, that internalize these encodings and provide analysis techniques, specifically tailored to properties of executions. In this paper we study two particular extensions to Alloy that incorporate elements for the specification of properties of executions. These are DynAlloy, whose syntax and semantics are inspired by dynamic logic, and Electrum, based on linear-time temporal logic and inspired by languages such as TLA+. We analyze and compare the syntactic characteristics of the languages, their corresponding expressiveness, and the effectiveness and efficiency of their associated analysis tools. The comparison is based on a set of Alloy specifications that are taken from the literature and demand dynamic behavior analysis, including an Alloy model of the Chord ring-maintenance protocol, that drives our qualitative comparison of the notations.
C1 [Cornejo, Cesar; Regis, German E.; Aguirre, Nazareno] Consejo Nacl Invest Cient & Tecn, UBA, RA-1425 Buenos Aires, Argentina.
   [Regis, German E.] Univ Rio Cuarto, Dept Comp Sci, FCEFQyN, RA-5800 Rio Cuarto, Argentina.
   [Frias, Marcelo F.] Univ Texas El Paso, Dept Comp Sci, El Paso, TX 79968 USA.
C3 Consejo Nacional de Investigaciones Cientificas y Tecnicas (CONICET);
   Universidad Nacional Rio Cuarto; University of Texas System; University
   of Texas El Paso
RP Cornejo, C (corresponding author), Consejo Nacl Invest Cient & Tecn, UBA, RA-1425 Buenos Aires, Argentina.
EM ccornejo@dc.exa.unrc.edu.ar
CR Abbassi A, 2018, IEEE INT WORKSH MODE, P11, DOI 10.1109/MoDRE.2018.00008
   Abrial J.-R., 1995, Lecture Notes in Computer Science, V1165
   ALPERN B, 1985, INFORM PROCESS LETT, V21, P181, DOI 10.1016/0020-0190(85)90056-0
   Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   [Anonymous], 1980, C REC 7 ANN ACM S PR
   [Anonymous], Detailed results and replication package for DynAlloy and electrum evaluation
   [Anonymous], 1999, Concurrency-state models and Java programs
   Baresi L, 2006, LECT NOTES COMPUT SC, V4178, P306
   BOOCH G, 1999, UNIFIED MODELLING LA
   Bowen J. P., 2014, Computer Science and Software Engineering, V3rd, P71
   Brunel J., 2018, P FORMAL METHODS COM, P1
   Brunel J, 2018, IEEE INT CONF AUTOM, P884, DOI 10.1145/3238147.3240475
   Bucchiarone A., 2008, Electron. Commun. EASST, V10, P1
   Cavada R, 2014, LECT NOTES COMPUT SC, V8559, P334, DOI 10.1007/978-3-319-08867-9_22
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Cordeiro L, 2018, LECT NOTES COMPUT SC, V10981, P183, DOI 10.1007/978-3-319-96145-3_10
   Cunha A, 2014, LECT NOTES COMPUT SC, V8477, P303, DOI 10.1007/978-3-662-43652-3_29
   Dennis Greg, 2006, ISSTA, P109, DOI [10.1145/1146238.1146251, DOI 10.1145/1146238.1146251]
   Devillers M, 2000, FORM METHOD SYST DES, V16, P307, DOI 10.1023/A:1008764923992
   Dijkstra EdsgerW., 1990, TEXTS MONOGRAPHS COM
   Farheen S, 2020, SOFTW SYST MODEL, V19, P721, DOI 10.1007/s10270-019-00763-8
   Freitas L, 2008, FORM ASP COMPUT, V20, P117, DOI 10.1007/s00165-007-0059-y
   Frias MF, 2007, ACM T SOFTW ENG METH, V17, DOI 10.1145/1314493.1314497
   Frias MF, 2005, PROC INT CONF SOFTW, P442
   Frias MF, 2005, ACM T SOFTW ENG METH, V14, P478, DOI 10.1145/1101815.1101819
   Frias MF, 2003, LECT NOTES COMPUT SC, V2805, P678
   Galeotti JP, 2013, IEEE T SOFTWARE ENG, V39, P1283, DOI 10.1109/TSE.2013.15
   George C, 2008, FORM ASP COMPUT, V20, P101, DOI 10.1007/s00165-007-0054-3
   Ghezzi C, 2002, Fundamentals of Software Engineering
   Hammad M, 2019, J SYST SOFTWARE, V149, P83, DOI 10.1016/j.jss.2018.11.049
   Haneberg D, 2008, FORM ASP COMPUT, V20, P41, DOI 10.1007/s00165-007-0057-0
   HAREL D, 2000, FOUNDAT COMPUT, P3
   Hinchey M, 2008, COMMUN ACM, V51, P54, DOI 10.1145/1378727.1378742
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Holzmann GJ, 2004, The SPIN model checker: primer and reference manual, V1003
   Huth Michael, 2004, Logic in Computer Science: Modelling and reasoning about systems
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson D., 2001, Software Engineering Notes, V26, P62, DOI 10.1145/503271.503219
   Jackson D., 1999, A comparison of object modelling notations: Alloy, UML and Z
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Khalek S. A., P 26 IEEE ACM INT C
   Kroening D., 2016, Texts in Theoretical Computer Science. An EATCS Series, VSecond
   Lamport L., 2002, SPECIFYING SYSTEMS T
   Laurent Y, 2014, LECT NOTES COMPUT SC, V8484, P347, DOI 10.1007/978-3-319-07881-6_24
   Macedo N, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P373, DOI 10.1145/2950290.2950318
   MANNA Z, 1984, SCI COMPUT PROGRAM, V4, P257, DOI 10.1016/0167-6423(84)90003-0
   Milicevic A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P511, DOI 10.1145/1985793.1985863
   Moscato MM, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2544136
   Near JP, 2010, LECT NOTES COMPUT SC, V5977, P118, DOI 10.1007/978-3-642-11811-1_10
   Peled D. A., 2001, Texts in Computer Science
   Ramananandro T, 2008, FORM ASP COMPUT, V20, P21, DOI 10.1007/s00165-007-0058-z
   Regis G, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P969, DOI 10.1145/3106237.3122826
   Ross JA, 2019, SOFTW SYST MODEL, V18, P739, DOI 10.1007/s10270-017-0592-y
   Schwartz B. L., 1961, Math. Mag., V34, P187
   Serna J, 2023, SOFTW SYST MODEL, V22, P733, DOI 10.1007/s10270-022-01012-1
   Serna J, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P64, DOI 10.1109/REW.2017.70
   Stoica I, 2001, ACM SIGCOMM COMP COM, V31, P149, DOI 10.1145/964723.383071
   Sullivan A., 2017, P 6 WORKSH SOFTW QUA, V1938
   Vakili Amirhossein, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P150, DOI 10.1007/978-3-642-30885-7_11
   Vaziri M, 2000, TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS - TOOLS 34, PROCEEDINGS, P555
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Wallace C, 2003, INFORM SOFTWARE TECH, V45, P1031, DOI 10.1016/S0950-5849(03)00131-9
   WING JM, 1990, COMPUTER, V23, P8, DOI 10.1109/2.58215
   Zave P, 2015, FORM ASP COMPUT, V27, P239, DOI 10.1007/s00165-014-0302-2
   Zave P, 2017, IEEE T SOFTWARE ENG, V43, P1144, DOI 10.1109/TSE.2017.2655056
   Zave P, 2012, ACM SIGCOMM COMP COM, V42, P50, DOI 10.1145/2185376.2185383
NR 66
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2023
VL 49
IS 11
BP 4946
EP 4963
DI 10.1109/TSE.2023.3320625
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA Z3ZN2
UT WOS:001111494200002
DA 2024-07-18
ER

PT J
AU Guerra, M
   Scalabrino, S
   Fasano, F
   Oliveto, R
AF Guerra, Michele
   Scalabrino, Simone
   Fasano, Fausto
   Oliveto, Rocco
TI An Empirical Study on the Effectiveness of Privacy Indicators
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Android permissions; privacy; empirical evaluation
AB The increasing diffusion of mobile devices and their integration with sophisticated hardware and software components has promoted the development of numerous applications in which developers find new ingenious ways to exploit the possibilities offered by the access to resources such as cameras, biometric sensors, and GPS receivers. As a result, we are increasingly used to seeing applications that make extensive use of sensitive resources, potentially dangerous for our privacy. To address this problem, the latest approach to support user awareness in terms of privacy is represented by the Privacy Indicators (PI), a software solution implemented by the operating system to provide a visual stimulus to inform users whenever a dangerous resource is exploited by the app. However, the effectiveness of this approach has not been assessed yet. In this article, we present the result of a study on the effectiveness of using the PI to inform the user every time an app accesses the mobile device camera or microphone. We have chosen these two resources as the PI are currently implemented only for a very limited number of permissions. The controlled experiment involved 122 Android users who were asked to complete a series of tasks on their smartphone through prototypes using the involved resources in an explicit and latent way. Although the PI mechanism is very similar between Android and iOS, we have decided to focus on the former due to its greater diffusion. The results show no significant correlation between the use of PI and the detection of the resource being used by the app, suggesting that the effectiveness of PI in improving sensitive-related resources usage awareness, as currently implemented, is still unsatisfactory. In order to understand if the problem was due to the specific implementation of the PI, we implemented an enhanced version and compared it with the standard one. The results confirmed that an implementation that makes the indicators more visible and that is clearer in highlighting the fact that the app is accessing a resource improves resources usage awareness.
C1 [Guerra, Michele; Scalabrino, Simone; Fasano, Fausto; Oliveto, Rocco] Univ Molise, I-86090 Pesche, IS, Italy.
C3 University of Molise
RP Fasano, F (corresponding author), Univ Molise, I-86090 Pesche, IS, Italy.
EM michele.guerra@unimol.it; simone.scalabrino@unimol.it;
   fausto.fasano@unimol.it; rocco.oliveto@unimol.it
OI Fasano, Fausto/0000-0003-3736-6383; Guerra, Michele/0009-0005-9990-234X;
   Scalabrino, Simone/0000-0003-1764-9685
CR Aguinis H, 2014, ORGAN RES METHODS, V17, P351, DOI 10.1177/1094428114547952
   [Anonymous], 2012, Lecture Notes in Computer Science
   Benisch M, 2011, PERS UBIQUIT COMPUT, V15, P679, DOI 10.1007/s00779-010-0346-0
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Chalmers A., 2005, Visualization Handbook, P807
   Chen HN, 2010, COMMUN STAT-SIMUL C, V39, P860, DOI 10.1080/03610911003650383
   Cohen MA, 2012, TRENDS COGN SCI, V16, P411, DOI 10.1016/j.tics.2012.06.013
   Elbitar Y, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P785
   Felt AP, 2012, P 8 S USABLE PRIVACY, P1, DOI DOI 10.1145/2335356.2335360
   Fisher RA, 1970, STAT METHODS RES WOR, P66, DOI DOI 10.1007/978-1-4612-4380-9_6
   Guerra M., 2023, P 9 INT C INF SYST S, P714, DOI [10. 5220/0011797200003405, DOI 10.5220/0011797200003405]
   Hughes R, 2002, J ADV NURS, V37, P382, DOI 10.1046/j.1365-2648.2002.02100.x
   Mack A, 2003, CURR DIR PSYCHOL SCI, V12, P180, DOI 10.1111/1467-8721.01256
   Benítez-Mejía DGN, 2016, 2016 THIRD INTERNATIONAL CONFERENCE ON DIGITAL INFORMATION PROCESSING, DATA MINING, AND WIRELESS COMMUNICATIONS (DIPDMWC), P164, DOI 10.1109/DIPDMWC.2016.7529383
   Peruma A, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P56, DOI 10.1145/3197231.3197246
   Scoccia GL, 2021, IEEE T SOFTWARE ENG, V47, P2032, DOI 10.1109/TSE.2019.2941936
   Scoccia GL, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P45, DOI 10.1145/3197231.3197236
   Shen BY, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P751
   Wijesekera P, 2017, P IEEE S SECUR PRIV, P1077, DOI 10.1109/SP.2017.51
   Wijesekera P, 2018, IEEE SECUR PRIV, V16, P64, DOI 10.1109/MSP.2018.1331031
   WOEHR DJ, 1991, J ORGAN BEHAV, V12, P387, DOI 10.1002/job.4030120504
NR 21
TC 0
Z9 0
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2023
VL 49
IS 10
BP 4610
EP 4623
DI 10.1109/TSE.2023.3308392
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA Y1NF7
UT WOS:001102997400006
DA 2024-07-18
ER

PT J
AU Elyasaf, A
   Farchi, E
   Margalit, O
   Weiss, G
   Weiss, Y
AF Elyasaf, Achiya
   Farchi, Eitan
   Margalit, Oded
   Weiss, Gera
   Weiss, Yeshayahu
TI Generalized Coverage Criteria for Combinatorial Sequence Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Bayesian risk-Reduction; behavioral programming; combinatorial test
   design; model-based testing; sequence testing; test coverage; test
   generation; test optimization
AB We present a new model-based approach for testing systems that use sequences of actions and assertions as test vectors. Our solution includes a method for quantifying testing quality, a tool for generating high-quality test suites based on the coverage criteria we propose, and a framework for assessing risks. For testing quality, we propose a method that specifies generalized coverage criteria over sequences of actions, which extends previous approaches. Our publicly available tool demonstrates how to extract effective test suites from test plans based on these criteria. We also present a Bayesian approach for measuring the probabilities of bugs or risks, and show how this quantification can help achieve an informed balance between exploitation and exploration in testing. Finally, we provide an empirical evaluation demonstrating the effectiveness of our tool in finding bugs, assessing risks, and achieving coverage.
C1 [Elyasaf, Achiya] Ben Gurion Univ Negev, Software & Informat Syst Engn Dept, IL-84105 Beer Sheva, Israel.
   [Farchi, Eitan] IBM Haifa Res Lab, IL-3498825 Haifa, Israel.
   [Margalit, Oded; Weiss, Gera; Weiss, Yeshayahu] Ben Gurion Univ Negev, Comp Sci Dept, IL-84105 Beer Sheva, Israel.
C3 Ben Gurion University; Ben Gurion University
RP Elyasaf, A (corresponding author), Ben Gurion Univ Negev, Software & Informat Syst Engn Dept, IL-84105 Beer Sheva, Israel.
EM achiya@bgu.ac.il; farchi@il.ibm.com; odedm@post.bgu.ac.il;
   geraw@cs.bgu.ac.il; weissye@post.bgu.ac.il
RI Weiss, Gera/F-1549-2012; Elyasaf, Achiya/I-4129-2016
OI Elyasaf, Achiya/0000-0002-4009-5353; farchi, eitan/0000-0002-3021-1488;
   Weiss, Gera/0000-0002-5832-8768; Margalit, Oded/0000-0002-2026-2601
FU Israeli Science Foundation [2714/19]
FX This work was supported by Israeli Science Foundation under Grant
   2714/19.
CR Adams, 1981, The restaurant at the end of the universe
   Ahmad M. A., 2014, THESIS U YORK
   Bar -Sinai M., 2019, PROC 59 ISR ANN C AE, P1407
   Bar-Sinai M, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS: COMPANION PROCEEDINGS (MODELS-COMPANION '18), P59, DOI 10.1145/3270112.3270126
   BARTLETT KA, 1969, COMMUN ACM, V12, P260, DOI 10.1145/362946.362970
   Bombarda A, 2020, IEEE ICST WORKSHOP, P157, DOI 10.1109/ICSTW50294.2020.00036
   Bron Arkady, 2005, P ACM SIGPLAN S PRIN, P206
   Candea G., 2019, AUTOMATED SOFTWARE T, P505
   Chen T. Y., 2007, P 9 INT C SOFTW ENG, P141
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Chukharev K, 2020, IEEE ACCESS, V8, P207485, DOI 10.1109/ACCESS.2020.3037780
   Duan F, 2019, IEEE ICST WORKSHOP, P241, DOI 10.1109/ICSTW.2019.00059
   Eiben A.E., 2015, NAT COMP SER, P223, DOI 10.1007/978-3-662-44874-8_15
   Elyasaf A, 2018, MODELS WORKSH, P485
   Elyasaf A, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2020.106504
   Elyasaf A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P243, DOI 10.1109/MODELS-C.2019.00039
   Farchi E., 2003, Proceedings International Parallel and Distributed Processing Symposium, DOI 10.1109/IPDPS.2003.1213511
   Forgacs I., 2019, PRACTICAL TEST DESIG
   Greenyer J, 2021, PROC INT C APPL THEO, P168
   Harel D., 2011, 2011 International Conference on Embedded Software (EMSOFT 2011), P279
   Harel D, 2012, COMMUN ACM, V55, P90, DOI 10.1145/2209249.2209270
   Harel D, 2010, LECT NOTES COMPUT SC, V6183, P250, DOI 10.1007/978-3-642-14107-2_12
   Intel fmbt, 2012, US
   Koivisto M, 2004, J MACH LEARN RES, V5, P549
   Kuhn D. R., 2010, NIST SPECIAL PUBLICA, V800, P142
   Kuhn DR, 2015, ADV COMPUT, V99, P1, DOI 10.1016/bs.adcom.2015.05.003
   Li Changwen, 2021, arXiv
   Lubke D., 2019, EMPIRICAL STUDIES DE, P199
   Maximoff JR, 2010, ANN IEEE SYST CONF, P598, DOI 10.1109/SYSTEMS.2010.5482481
   Moodle, MOODL QUIZ FAQ
   Moodle, Moodle-open-source learning platform
   Mozilla, MOZ RHIN RHIN IS OP
   Neapolitan, 2004, LEARNING BAYESIAN NE, V38
   Perera A, 2023, IEEE T SOFTWARE ENG, V49, P131, DOI 10.1109/TSE.2022.3147008
   Poliansky R, 2022, APPL SCI-BASEL, V12, DOI 10.3390/app12031587
   Rocha M, 2021, SOFTWARE QUAL J, V29, P597, DOI 10.1007/s11219-020-09531-0
   Selenium, SEL SUIT TOOLS AUT W
   Sheng YL, 2018, SYMMETRY-BASEL, V10, DOI 10.3390/sym10050146
   Weiss Y, 2021, Arxiv, DOI arXiv:2112.01538
   Wiecher C, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P112, DOI 10.1109/MODELS50736.2021.00020
   Wilhelmstotter F, 2022, JENETICS JAVA GENETI
   Zheng W., 2010, P IEEEACM INT C AUTO, P293, DOI [10.1145/1858996, DOI 10.1145/1858996]
NR 42
TC 2
Z9 2
U1 2
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2023
VL 49
IS 8
BP 4023
EP 4034
DI 10.1109/TSE.2023.3279570
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA P3WA9
UT WOS:001049968200005
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Shi, CC
   Cai, BR
   Zhao, Y
   Gao, LX
   Sood, K
   Xiang, Y
AF Shi, Chaochen
   Cai, Borui
   Zhao, Yao
   Gao, Longxiang
   Sood, Keshav
   Xiang, Yong
TI CoSS: Leveraging Statement Semantics for Code Summarization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Attention mechanism; code summarization; control flow graph; graph
   neural network
ID CONTEXT
AB Automated code summarization tools allow generating descriptions for code snippets in natural language, which benefits software development and maintenance. Recent studies demonstrate that the quality of generated summaries can be improved by using additional code representations beyond token sequences. The majority of contemporary approaches mainly focus on extracting code syntactic and structural information from abstract syntax trees (ASTs). However, from the view of macro-structures, it is challenging to identify and capture semantically meaningful features due to fine-grained syntactic nodes involved in ASTs. To fill this gap, we investigate how to learn more code semantics and control flow features from the perspective of code statements. Accordingly, we propose a novel model entitled CoSS for code summarization. CoSS adopts a Transformer-based encoder and a graph attention network-based encoder to capture token-level and statement-level semantics from code token sequence and control flow graph, respectively. Then, after receiving two-level embeddings from encoders, a joint decoder with a multi-head attention mechanism predicts output sequences verbatim. Performance evaluations on Java, Python, and Solidity datasets validate that CoSS outperforms nine state-of-the-art (SOTA) neural code summarization models in effectiveness and is competitive in execution efficiency. Further, the ablation study reveals the contribution of each model component.
C1 [Shi, Chaochen; Cai, Borui; Zhao, Yao; Sood, Keshav; Xiang, Yong] Deakin Univ, Sch Informat Technol, Geelong, Vic 3220, Australia.
   [Gao, Longxiang] Qilu Univ Technol, Shandong Acad Sci, Jinan 250103, Shandong, Peoples R China.
C3 Deakin University; Qilu University of Technology
RP Xiang, Y (corresponding author), Deakin Univ, Sch Informat Technol, Geelong, Vic 3220, Australia.
EM shi_research@163.com; b.cai@deakin.edu.au; cnr@deakin.edu.au;
   gaolx@sdas.org; keshav.sood@deakin.edu.au; yong.xiang@deakin.edu.au
OI Gao, Longxiang/0000-0002-3026-7537; Zhao, Yao/0000-0002-5870-7370; SOOD,
   Keshav/0000-0002-2127-1438; Xiang, Yong/0000-0003-3545-7863; Shi,
   Chaochen/0000-0002-5543-1655
FU Australian Research Council [DP220100983, LP190100594]; Taishan Scholars
   Program [TSQN202211214]; Australian Research Council [LP190100594]
   Funding Source: Australian Research Council
FX & nbsp;This work was supported in part by the Australian Research
   Council under Grants DP220100983 and LP190100594, and in part by Taishan
   Scholars Program under Grant TSQN202211214. Recommended for acceptance
   by T. Menzies. (Corresponding author: Yong Xiang.)
CR Abid NJ, 2015, PROC IEEE INT CONF S, P561, DOI 10.1109/ICSM.2015.7332514
   Allamanis M, 2018, Arxiv, DOI arXiv:1711.00740
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Alon U., 2018, ARXIV
   [Anonymous], 2010, CASCON First Decade High Impact Papers, DOI [DOI 10.1145/1925805.1925815, 10.1145/1925805.1925815]
   Banerjee S., 2005, P ACL WORKSH INTR EX, P65
   Barone A. V. M., 2017, ARXIV
   Bruschi D, 2006, LECT NOTES COMPUT SC, V4064, P129
   Cesare S., 2010, Proceedings of the Eighth Australasian Symposium on Parallel and Distributed Computing, V107, P61
   Clevert DA, 2016, Arxiv, DOI arXiv:1511.07289
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Feist J, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB 2019), P8, DOI 10.1109/WETSEB.2019.00008
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Forward A., 2002, Proceedings of the 2002 ACM symposium on Document engineering, P26, DOI 10.1145/585058.585065
   Gao SZ, 2022, Arxiv, DOI arXiv:2104.09340
   Grave E, 2016, Arxiv, DOI arXiv:1612.04426
   Gu J, 2021, PROC IEEE INT CONF S, P483, DOI 10.1109/ICSME52107.2021.00049
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Hill E, 2009, PROC INT CONF SOFTW, P232, DOI 10.1109/ICSE.2009.5070524
   Hu X, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P5, DOI 10.1109/ASE51524.2021.9678552
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Hua W, 2021, IEEE T RELIAB, V70, P304, DOI 10.1109/TR.2020.3001918
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   LeClair A, 2020, INT C PROGRAM COMPRE, P184, DOI 10.1145/3387904.3389268
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Lin CY, 2004, ROUGE: A Package for Automatic Evaluation of Summaries, P74, DOI DOI 10.1253/JCJ.34.1213
   Lin TY, 2021, Arxiv, DOI arXiv:2106.04554
   Liu S., 2020, INT C LEARNING REPRE
   McBurney P. W., 2014, P 22 INT C PROGRAM C, P279
   McBurney PW, 2016, IEEE T SOFTWARE ENG, V42, P103, DOI 10.1109/TSE.2015.2465386
   Mikolov T., 2013, PROC 1 INT C LEARN R, P1301
   Kipf TN, 2017, Arxiv, DOI arXiv:1609.02907
   Nazar N, 2016, J COMPUT SCI TECH-CH, V31, P883, DOI 10.1007/s11390-016-1671-1
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Rahman MM, 2015, IEEE INT WORK C SO, P81, DOI 10.1109/SCAM.2015.7335404
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   Rosenfeld R, 2000, P IEEE, V88, P1270, DOI 10.1109/5.880083
   Shi CC, 2021, Arxiv, DOI arXiv:2111.14139
   Shi Ensheng, 2021, arXiv
   Shi L, 2011, LECT NOTES COMPUT SC, V6603, P416, DOI 10.1007/978-3-642-19811-3_29
   Sridhara G, 2011, CONF PROC INT SYMP C, P71, DOI 10.1109/ICPC.2011.28
   Stapleton S, 2020, INT C PROGRAM COMPRE, P2, DOI 10.1145/3387904.3389258
   Sui YL, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428301
   Sui YL, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION (CC 2016), P265, DOI 10.1145/2892208.2892235
   Vassallo Carmine, 2014, Proceedings of the 22nd International Conference on Program Comprehension, P106
   Vaswani A, 2017, ADV NEUR IN, V30
   Vedantam R, 2015, PROC CVPR IEEE, P4566, DOI 10.1109/CVPR.2015.7299087
   Veličkovic P, 2018, Arxiv, DOI arXiv:1710.10903
   Wan Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P13, DOI 10.1109/ASE.2019.00012
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wang S, 2016, IEEE INT CONF AUTOM, P708, DOI 10.1145/2970276.2970341
   Wang WH, 2020, Arxiv, DOI arXiv:2003.03238
   Wang WH, 2022, IEEE T SOFTWARE ENG, V48, P102, DOI 10.1109/TSE.2020.2979701
   Wang X., 2022, arXiv
   Wang YL, 2021, Arxiv, DOI arXiv:2107.01933
   Wei BL, 2020, IEEE INT CONF AUTOM, P349, DOI 10.1145/3324884.3416578
   Williams RJ, 1989, NEURAL COMPUT, V1, P270, DOI 10.1162/neco.1989.1.2.270
   Wong E, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P380, DOI 10.1109/SANER.2015.7081848
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Yang ZL, 2019, ADV NEUR IN, V32
NR 63
TC 1
Z9 1
U1 2
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2023
VL 49
IS 6
BP 3472
EP 3486
DI 10.1109/TSE.2023.3256362
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA J9KW5
UT WOS:001012752300007
DA 2024-07-18
ER

PT J
AU Ellis, M
   Nadi, S
   Dig, D
AF Ellis, Max
   Nadi, Sarah
   Dig, Danny
TI Operation-Based Refactoring-Aware Merging: An Empirical Evaluation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Merging; Codes; Control systems; Software; Semantics; History; Task
   analysis; Conflict resolution; refactoring; software merging; revision
   control systems
ID PRECISION
AB Dealing with merge conflicts in version control systems is a challenging task for software developers. Resolving merge conflicts is a time-consuming and error-prone process, which distracts developers from important tasks. Recent work shows that refactorings are often involved in merge conflicts and that refactoring-related conflicts tend to be larger, making them harder to resolve. In the literature, there are two refactoring-aware merging techniques that claim to automatically resolve refactoring-related conflicts; however, these two techniques have never been empirically compared. In this paper, we present RefMerge, a rejuvenated Java-based design and implementation of the first technique, which is an operation-based refactoring-aware merging algorithm. We compare RefMerge to Git and the state-of-the-art graph-based refactoring-aware merging tool, IntelliMerge, on 2,001 merge scenarios with refactoring-related conflicts from 20 open-source projects. We find that RefMerge resolves or reduces conflicts in 497 (25%) merge scenarios while increasing conflicting LOC in only 214 (11%) scenarios. On the other hand, we find that IntelliMerge resolves or reduces conflicts in 478 (24%) merge scenarios but increases conflicting LOC in 597 (30%) merge scenarios. We additionally conduct a qualitative analysis of the differences between the three merging algorithms and provide insights of the strengths and weaknesses of each tool. We find that while IntelliMerge does well with ordering and formatting conflicts, it struggles with class-level refactorings and scenarios with several refactorings. On the other hand, RefMerge is resilient to the number of refactorings in a merge scenario, but we find that RefMerge introduces conflicts when inverting move-related refactorings.
C1 [Ellis, Max] Univ Alberta, Dept Comp Sci, Edmonton, AB T6G 2R3, Canada.
   [Nadi, Sarah] Tech Univ Darmstadt, Dept Comp Sci, D-64289 Darmstadt, Germany.
   [Dig, Danny] Univ Colorado, Dept Comp Sci, Boulder, CO USA.
C3 University of Alberta; Technical University of Darmstadt; University of
   Colorado System; University of Colorado Boulder
RP Ellis, M (corresponding author), Univ Alberta, Dept Comp Sci, Edmonton, AB T6G 2R3, Canada.
EM mjellis@ualberta.ca; nadi@ualberta.ca
OI Nadi, Sarah/0000-0002-0091-6030
CR Ahmed-Nacer M., 2014, PROC 18 INT C EVAL A
   Alves ELG, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P751, DOI 10.1145/2635868.2661674
   Apel S., 2011, P 19 ACM SIGSOFT S 1, P190, DOI DOI 10.1145/2025113.2025141
   Apel S, 2012, IEEE INT CONF AUTOM, P120, DOI 10.1145/2351676.2351694
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Berliner B., 1990, Proceedings of the Winter 1990 USENIX Conference, P341
   Bird C, 2012, P ACM SIGSOFT 20 INT, P45
   Brindescu C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P322, DOI 10.1145/2568225.2568322
   Brun Y., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), P168, DOI [10.1145/2025113.2025139, DOI 10.1145/2025113.2025139]
   Cavalcanti G, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133883
   Cavalcanti G, 2015, INT SYMP EMP SOFTWAR, P267, DOI 10.1109/ESEM.2015.7321191
   Chaparro O, 2014, PROC IEEE INT CONF S, P456, DOI 10.1109/ICSME.2014.73
   Choi E, 2018, Arxiv, DOI arXiv:1808.02320
   Da Silva L, 2020, PROC IEEE INT CONF S, P174, DOI 10.1109/ICSME46990.2020.00026
   Dewan P, 2007, ECSCW 2007: PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK, P159, DOI 10.1007/978-1-84800-031-5_9
   Dig D., 2006, PROC COMPANION 21 AC, P732, DOI 10.1145/
   Dinella E, 2021, Arxiv, DOI arXiv:2105.07569
   Edwards W. E., 1997, Proceedings of the ACM Symposium on User Interface Software and Technology. 10th Annual Symposium. UIST '97, P139, DOI 10.1145/263407.263533
   Ekman Torbjorn., 2004, Electr. Notes Theor. Comput. Sci, V107, P57, DOI DOI 10.1016/J.ENTCS.2004.02.048
   Estler HC, 2014, INT CONF GLOBAL SOFT, P26, DOI 10.1109/ICGSE.2014.17
   Fan H., 2012, P 27 ANN ACM S APPL, P737, DOI DOI 10.1145/2245276.2245417
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   github, 2019, US
   Github, 2022, About us
   github, 2008, US
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Guimaraes ML, 2012, PROC INT CONF SOFTW, P342, DOI 10.1109/ICSE.2012.6227180
   Hattori L., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P235, DOI 10.1145/1810295.1810339
   JACKSON D, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P243, DOI 10.1109/ICSM.1994.336770
   Kasi BK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P732, DOI 10.1109/ICSE.2013.6606619
   Kim M., 2010, PROC 18 ACM SIGSOFT, P371, DOI [10.1145/1882291.1882353, DOI 10.1145/1882291.1882353]
   Lessenich O, 2017, IEEE INT CONF AUTOM, P543, DOI 10.1109/ASE.2017.8115665
   Lessenich O, 2015, AUTOMAT SOFTW ENG, V22, P367, DOI 10.1007/s10515-014-0151-5
   LIE A, 1989, ACM SIGSOFT, V17, P56, DOI 10.1145/72910.73348
   Lippe E., 1992, SIGSOFT Software Engineering Notes, V17, P78, DOI 10.1145/142882.143753
   Maddila C., 2021, ACM T SOFTW ENG METH, V31, P1
   Mahmoudi M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P151, DOI [10.1109/saner.2019.8668012, 10.1109/SANER.2019.8668012]
   Mahmoudi M, 2018, IEEE WORK CONF MIN S, P220, DOI 10.1145/3196398.3196434
   Mckee S, 2017, PROC IEEE INT CONF S, P467, DOI 10.1109/ICSME.2017.53
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   mercurial-scm, 2005, US
   Nishimura Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P661, DOI 10.1109/SANER.2016.46
   Owhadi-Kareshk M, 2019, INT SYMP EMP SOFTWAR, P363
   Palomba F, 2017, INT C PROGRAM COMPRE, P176, DOI 10.1109/ICPC.2017.38
   Phillips S, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P9
   Rahman M. M, 2014, P 11 WORK C MIN SOFT, P364, DOI DOI 10.1145/2597073.2597121
   Sarma A, 2012, IEEE T SOFTWARE ENG, V38, P889, DOI 10.1109/TSE.2011.64
   Seibt G, 2022, IEEE T SOFTWARE ENG, V48, P4590, DOI 10.1109/TSE.2021.3123143
   Shen B, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360596
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   subversion.apache, 2000, US
   Tsantalis N, 2022, IEEE T SOFTWARE ENG, V48, P930, DOI 10.1109/TSE.2020.3007722
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Zhu FM, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276536
   Zhu FM, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P286, DOI 10.1109/ICSE-Companion.2019.00117
NR 56
TC 0
Z9 0
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2698
EP 2721
DI 10.1109/TSE.2022.3228851
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600073
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Imtiaz, N
   Khanom, A
   Williams, L
AF Imtiaz, Nasif
   Khanom, Aniqa
   Williams, Laurie
TI Open or Sneaky? Fast or Slow? Light or Heavy?: Investigating Security
   Releases of Open Source Packages
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Security; Codes; Delays; Ecosystems; Databases; Semantics; Supply
   chains; Empirical study; open source security; supply chain security
AB Vulnerabilities in open source packages can be a security risk for the downstream client projects. When a new vulnerability is discovered, a package should quickly release a fix in a new version, referred to as a security release in this study. The security release should be well-documented and require minimal migration effort to facilitate fast adoption by the clients. However, to what extent the open source packages follow these recommendations is not known. In this paper, we study (1) the time lag between fix and release; (2) how security fixes are documented in the release notes; (3) code change characteristics (size and semantic versioning) of the release; and (4) the time lag between the release and an advisory publication for security releases over a dataset of 4,377 security advisories across seven package ecosystems. We find that the median security release becomes available within 4 days of the corresponding fix and contains 131 lines of code (LOC) change. However, one-fourth of the releases in our data set still came at least 20 days after the fix was made.Further, we find that 61.5% of the security releases come with a release note that documents the corresponding security fix. Still, Snyk and NVD, two popular databases, take a median of 17 days (from the release) to publish a security advisory, possibly resulting in delayed notifications to the client projects. We also find that security releases may contain breaking change(s) as 13.2% indicated backward incompatibility through semantic versioning, while 6.4% mentioned breaking change(s) in the release notes. Based on our findings, we point out areas for future work, such as private fork for security fixes and standardized practice for announcing security releases.
C1 [Imtiaz, Nasif; Khanom, Aniqa; Williams, Laurie] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27606 USA.
C3 North Carolina State University
RP Imtiaz, N (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27606 USA.
EM simtiaz@ncsu.edu; azkhanom@ncsu.edu; lawilli3@ncsu.edu
OI Williams, Laurie/0000-0003-3300-6540
CR Abebe SL, 2016, EMPIR SOFTW ENG, V21, P1107, DOI 10.1007/s10664-015-9377-5
   access.redhat, 2015, HIDD COSTS EMB
   Agresti A., 2007, ART SCI LEARNING DAT, V88
   Alfadel M, 2021, IEEE WORK CONF MIN S, P254, DOI 10.1109/MSR52588.2021.00037
   Alfadel M, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P446, DOI 10.1109/SANER50967.2021.00048
   [Anonymous], Common Vulnerability Scoring System
   Apache Subversion, ABOUT US
   Bi Tingting, 2022, IEEE Transactions on Software Engineering, V48, P1834, DOI 10.1109/TSE.2020.3038881
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Catabi-Kalman B., 2021, WHY ORG TRUST SNYK W
   Chinthanet B, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09951-x
   Christey S., 2013, BlackHat
   Common vulnerabilities and exposures, 2021, US
   "Common weakness enumeration (CWE), About us
   Cox R, 2019, COMMUN ACM, V62, P36, DOI 10.1145/3347446
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Decan A, 2018, PROC IEEE INT CONF S, P404, DOI 10.1109/ICSME.2018.00050
   Decan A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P2, DOI 10.1109/SANER.2017.7884604
   depositedpapers, About us
   docs.microsoft, INTR NUG
   Edge J., 2017, A new process for cve assignment
   Foo D., 2019, arXiv
   Frei Stefan, 2006, P 2006 SIGCOMM WORKS, P131, DOI 10.1145/1162666.1162671
   Fruhlinger Josh, 2020, Equifax data breach faq: What happened, who was affected, what was the impact?-cso online
   Git, LOC BRANCH ON THE CH
   GitHub, 2022, COLL TEMP PRIV FORK
   github, COMM EX GITHB NOT MY
   github, GO MOD
   Gonzalez-Barahona J. M., 2020, PROC IEEEACM 42 INT, P735
   Hancock Beverly., 2001, An Introduction to Qualitative Research
   Hejderup J, 2015, In dependencies we trust: how vulnerable are dependencies in software modules?
   Imtiaz N., 2021, P 15 ACMIEEE INT S E, P1
   Imtiaz N, 2019, PROC INT SYMP SOFTW, P323, DOI 10.1109/ISSRE.2019.00040
   infosecurity, 2020, OPEN SOURCE SOFTWARE
   keepachangelog, 2021, US
   Khandkar Shahedul Huq, 2009, Open coding
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Lauinger T, 2020, Arxiv, DOI arXiv:1811.00918
   Li F, 2019, PROCEEDINGS OF THE FIFTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY (SOUPS 2019), P273
   Li F, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2201, DOI 10.1145/3133956.3134072
   Maddox S., WRITING SECURITY ADV
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Martius F., WHAT DOES THIS UPDAT
   Massacci F, 2022, IEEE SECUR PRIV, V20, P4, DOI 10.1109/MSEC.2021.3137674
   maven.apache, CLASS COMP
   Moreno L, 2017, IEEE T SOFTWARE ENG, V43, P106, DOI 10.1109/TSE.2016.2591536
   Nakajima A, 2019, PROCEEDINGS OF THE 2019 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIACCS '19), P485, DOI 10.1145/3321705.3329849
   National Vulnerability Database, US
   Nguyen VH, 2016, EMPIR SOFTW ENG, V21, P2268, DOI 10.1007/s10664-015-9408-2
   Pashchenko I, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1513, DOI 10.1145/3372297.3417232
   PLACKETT RL, 1983, INT STAT REV, V51, P59, DOI 10.2307/1402731
   Prana GAA, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09959-3
   Project zero, 2021, US
   pypi, MVN COMP
   pypi, PACKAGING
   Raemaekers S, 2014, IEEE INT WORK C SO, P215, DOI 10.1109/SCAM.2014.30
   Ramsauer Ralf, 2020, CCSW'20: Proceedings of the 2020 SIGSAC Conference on Cloud Computing Security Workshop, P147, DOI 10.1145/3411495.3421360
   Ruohonen J, 2020, COMPUT HUM BEHAV, V103, P161, DOI 10.1016/j.chb.2019.09.028
   Salza P., 2019, 3 PARTY LIB MOBILE A
   search.maven, SON MAV CENTR REP SE
   semver, 2021, Semantic Versioning
   Shahzad M, 2020, IEEE T DEPEND SECURE, V17, P730, DOI 10.1109/TDSC.2019.2893950
   Shahzad M, 2012, PROC INT CONF SOFTW, P771, DOI 10.1109/ICSE.2012.6227141
   Snyk, IS VULN SEV DET
   snyk, 2021, SNYK VULN DB
   snyk, SNYK PATCH FIX VULN
   Sonatype, 2021, 2021 state of the software supply chain
   Speicher R., 2021, US
   Stringer J, 2020, ASIA PAC SOFWR ENG, P228, DOI 10.1109/APSEC51365.2020.00031
   Synopsys, 2021, 2021 open source security and risk analysis report
   Wang Y, 2020, PROC IEEE INT CONF S, P35, DOI 10.1109/ICSME46990.2020.00014
   Weisstein Eric W., 2004, Bonferroni correction
   Wicks D, 2017, QUAL RES ORGAN MANAG, V12, P169, DOI 10.1108/QROM-08-2016-1408
   wikipedia, 2021, CHANG
   Xu ZZ, 2017, PROC INT CONF SOFTW, P462, DOI 10.1109/ICSE.2017.49
   Zerouali A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2157
   Zerouali Ahmed, 2021, arXiv
   Zhou JY, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P705, DOI 10.1109/ASE51524.2021.9678720
   Zhou YQ, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3468854
   Zhou YQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P914, DOI 10.1145/3106237.3117771
   Zimmermann M, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P995
NR 81
TC 2
Z9 2
U1 2
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1540
EP 1560
DI 10.1109/TSE.2022.3181010
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Li, ZQ
   Zhang, HY
   Jing, XY
   Xie, JY
   Guo, M
   Ren, J
AF Li, Zhiqiang
   Zhang, Hongyu
   Jing, Xiao-Yuan
   Xie, Juanying
   Guo, Min
   Ren, Jie
TI DSSDPP: Data Selection and Sampling Based Domain Programming Predictor
   for Cross-Project Defect Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Data models; Prediction algorithms; Measurement; Predictive models;
   Tuning; Transfer learning; Programming; Cross-project defect prediction;
   domain programming predictor; data selection; data sampling; transfer
   learning; software quality assurance
ID STATIC CODE ATTRIBUTES; RESEARCHER BIAS; MACHINE; MODELS
AB Cross-project defect prediction (CPDP) refers to recognizing defective software modules in one project (i.e., target) using historical data collected from other projects (i.e., source), which can help developers find defects and prioritize their testing efforts. Unfortunately, there often exists large distribution difference between the source and target data. Most CPDP methods neglect to select the appropriate source data for a given target at the project level. More importantly, existing CPDP models are parametric methods, which usually require intensive parameter selection and tuning to achieve better prediction performance. This would hinder wide applicability of CPDP in practice. Moreover, most CPDP methods do not address the cross-project class imbalance problem. These limitations lead to suboptimal CPDP results. In this paper, we propose a novel data selection and sampling based domain programming predictor (DSSDPP) for CPDP, which addresses the above limitations. DSSDPP is a non-parametric CPDP method, which can perform knowledge transfer across projects without the need for parameter selection and tuning. By exploiting the structures of source and target data, DSSDPP can learn a discriminative transfer classifier for identifying defects of the target project. Extensive experiments on 22 projects from four datasets indicate that DSSDPP achieves better MCC and AUC results against a range of competing methods both in the single-source and multi-source scenarios. Since DSSDPP is easy, effective, extensible, and efficient, we suggest that future work can use it with the well-chosen source data to conduct CPDP especially for the projects with limited computational budget.
C1 [Li, Zhiqiang; Xie, Juanying; Guo, Min; Ren, Jie] Shaanxi Normal Univ, Sch Comp Sci, Xian 710119, Peoples R China.
   [Li, Zhiqiang; Xie, Juanying; Guo, Min; Ren, Jie] Engn Lab Teaching Informat Technol, Xian 710119, Shaanxi, Peoples R China.
   [Zhang, Hongyu] Univ Newcastle, Sch Elect Engn & Comp, Callaghan, NSW 2308, Australia.
   [Jing, Xiao-Yuan] Zhejiang Sci Tech Univ, Sch Comp Sci & Technol, Hangzhou 310018, Peoples R China.
   [Jing, Xiao-Yuan] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Jiangsu, Peoples R China.
   [Jing, Xiao-Yuan] Wuhan Univ, Sch Comp Sci, Wuhan 430072, Hubei, Peoples R China.
   [Jing, Xiao-Yuan] Guangdong Univ Petrochem Technol, Sch Comp, Maoming 525011, Guangdong, Peoples R China.
C3 Shaanxi Normal University; University of Newcastle; Zhejiang Sci-Tech
   University; Nanjing University; Wuhan University; Guangdong University
   of Petrochemical Technology
RP Li, ZQ (corresponding author), Shaanxi Normal Univ, Sch Comp Sci, Xian 710119, Peoples R China.; Li, ZQ (corresponding author), Engn Lab Teaching Informat Technol, Xian 710119, Shaanxi, Peoples R China.; Jing, XY (corresponding author), Zhejiang Sci Tech Univ, Sch Comp Sci & Technol, Hangzhou 310018, Peoples R China.; Jing, XY (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Jiangsu, Peoples R China.; Jing, XY (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan 430072, Hubei, Peoples R China.; Jing, XY (corresponding author), Guangdong Univ Petrochem Technol, Sch Comp, Maoming 525011, Guangdong, Peoples R China.
EM lizq@snnu.edu.cn; hongyu.zhang@newcastle.edu.au; jingxy_2000@126.com;
   xiejuany@snnu.edu.cn; guomin@snnu.edu.cn; renjie@snnu.edu.cn
RI Li, Zhiqiang/O-6657-2018; YE, Chen/KFR-3858-2024; LI,
   Zhiqiang/HGA-1583-2022; He, Chen/JLM-5059-2023; zhang,
   hongyu/ABC-3702-2021; Sun, Jia/JXM-0311-2024
OI zhang, hongyu/0000-0002-3063-9425; Ren, Jie/0000-0003-3183-7228; Xie,
   Juanying/0000-0001-6540-4397
FU National Natural Science Foundation of China [61902228, 62176069];
   Natural Science Basic Research Program of Shaanxi Province [2020JQ-422];
   Innovation Group of Guangdong Education Department [2020KCXTD014];
   Fundamental Research Funds for the Central Universities [GK202103083,
   GK202105006]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grants 61902228 and 62176069, in part by the
   Natural Science Basic Research Program of Shaanxi Province under Grant
   2020JQ-422, in part by the Innovation Group of Guangdong Education
   Department under Grant 2020KCXTD014, and in part by the Fundamental
   Research Funds for the Central Universities under Grants GK202103083 and
   GK202105006.
CR Bettenburg N, 2015, EMPIR SOFTW ENG, V20, P294, DOI 10.1007/s10664-013-9292-6
   Bin Y, 2017, INT SYMP EMP SOFTWAR, P354, DOI 10.1109/ESEM.2017.49
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen HW, 2021, IEEE T SOFTWARE ENG, V47, P2803, DOI 10.1109/TSE.2020.2968520
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Fan RE, 2008, J MACH LEARN RES, V9, P1871
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gong LN, 2020, IEEE T RELIAB, V69, P40, DOI 10.1109/TR.2019.2895462
   Gong LN, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2172
   Gretton A, 2006, Adv Neural Inf Process Syst, V19
   Hall M. A., 1999, Proceedings of the Twelfth International Florida AI Research Society Conference, P235
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herbold S., 2013, P 9 INT C PREDICTIVE, P1
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Herbold S, 2017, EMPIR SOFTW ENG, V22, P1866, DOI 10.1007/s10664-016-9468-y
   Hosseini S, 2018, INFORM SOFTWARE TECH, V95, P296, DOI 10.1016/j.infsof.2017.06.004
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Jiarpakdee J, 2021, IEEE T SOFTWARE ENG, V47, P320, DOI 10.1109/TSE.2019.2891758
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Jing XY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P414, DOI 10.1145/2568225.2568320
   Jingxiu Yao, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P120, DOI 10.1145/3383219.3383232
   Kawata K., 2015, PROC IEEE 3 INT C AP, P1
   Krishna R, 2019, IEEE T SOFTWARE ENG, V45, P1081, DOI 10.1109/TSE.2018.2821670
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li K, 2020, PROC INT CONF SOFTW, P566, DOI 10.1145/3377811.3380360
   Li K, 2020, IEEE INT CONF AUTOM, P573, DOI 10.1145/3324884.3416617
   Li M, 2012, AUTOMAT SOFTW ENG, V19, P201, DOI 10.1007/s10515-011-0092-1
   Li Y, 2017, IEEE ACCESS, V5, P25646, DOI 10.1109/ACCESS.2017.2771460
   Li Z., 2022, ONLINE APPENDIX DSSD
   Li ZQ, 2021, IEEE T RELIAB, V70, P996, DOI 10.1109/TR.2021.3074660
   Li ZQ, 2019, AUTOMAT SOFTW ENG, V26, P599, DOI 10.1007/s10515-019-00259-1
   Li ZQ, 2019, IEEE T SOFTWARE ENG, V45, P391, DOI 10.1109/TSE.2017.2780222
   Li ZQ, 2018, IET SOFTW, V12, P161, DOI 10.1049/iet-sen.2017.0148
   Li ZQ, 2018, AUTOMAT SOFTW ENG, V25, P201, DOI 10.1007/s10515-017-0220-7
   Limsettho N, 2018, INFORM SOFTWARE TECH, V100, P87, DOI 10.1016/j.infsof.2018.04.001
   Liu C, 2019, INFORM SOFTWARE TECH, V107, P125, DOI 10.1016/j.infsof.2018.11.005
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Ni C, 2022, IEEE T SOFTWARE ENG, V48, P786, DOI 10.1109/TSE.2020.3001739
   Ni C, 2017, J COMPUT SCI TECH-CH, V32, P1090, DOI 10.1007/s11390-017-1785-0
   Qiu S., 2019, INT J PATTERN RECOGN, V33, P1
   Qiu SJ, 2019, IET SOFTW, V13, P393, DOI 10.1049/iet-sen.2018.5131
   Romano J., 2006, ANN M FLORIDA ASS IN
   Ryu D, 2017, SOFTWARE QUAL J, V25, P235, DOI 10.1007/s11219-015-9287-1
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Ryu D, 2015, J COMPUT SCI TECH-CH, V30, P969, DOI 10.1007/s11390-015-1575-5
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Smola A, 2007, LECT NOTES ARTIF INT, V4754, P13
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Sun BC, 2016, AAAI CONF ARTIF INTE, P2058
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, IEEE T SOFTWARE ENG, V42, P1092, DOI 10.1109/TSE.2016.2553030
   Tong HN, 2021, IEEE T SOFTWARE ENG, V47, P1886, DOI 10.1109/TSE.2019.2939303
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Wang J, 2019, IEEE INT CON MULTI, P1210, DOI 10.1109/ICME.2019.00211
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Wang TJ, 2016, AUTOMAT SOFTW ENG, V23, P569, DOI 10.1007/s10515-015-0179-1
   Watanabe S., 2008, P 4 INT WORKSH PRED, P19
   Wilson DR, 1997, J ARTIF INTELL RES, V6, P1, DOI 10.1613/jair.346
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xu Z, 2019, J COMPUT SCI TECH-CH, V34, P1039, DOI 10.1007/s11390-019-1959-z
   Xu Z, 2019, INFORM SOFTWARE TECH, V106, P182, DOI 10.1016/j.infsof.2018.10.004
   Yu X, 2017, P 29 INT C SOFTW ENG, P392, DOI DOI 10.18293/SEKE2017-043
   Zhang F., 2014, P 11 WORK C MIN SOFT, P182, DOI [10.1145/2597073.2597078, DOI 10.1145/2597073.2597078]
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zhang HY, 2008, IEEE T SOFTWARE ENG, V34, P301, DOI 10.1109/TSE.2007.70771
   Zhang Y, 2018, FRONT COMPUT SCI-CHI, V12, P280, DOI 10.1007/s11704-017-6015-y
   Zhimin He, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P45, DOI 10.1109/ESEM.2013.20
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zimmermann Thomas., 2007, PROMISE '07: Proceedings of the Third International Workshop on Predictor Models in Software Engineering, P1
NR 88
TC 3
Z9 3
U1 4
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1941
EP 1963
DI 10.1109/TSE.2022.3204589
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600030
DA 2024-07-18
ER

PT J
AU Salako, K
   Zhao, XY
AF Salako, Kizito
   Zhao, Xingyu
TI The Unnecessity of Assuming Statistically Independent Tests in Bayesian
   Software Reliability Assessments
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Reliability; Software reliability; Bayes methods; Testing; Software;
   Phase frequency detectors; Uncertainty; Conservative Bayesian inference;
   CBI; dependability claims; independent software failures; operational
   testing; software reliability assessment; statistical testing
ID FAILURE; SYSTEMS; MODELS; SENSITIVITY; ROBUSTNESS
AB When assessing a software-based system, the results of Bayesian statistical inference on operational testing data can provide strong support for software reliability claims. For inference, this data (i.e., software successes and failures) is often assumed to arise in an independent, identically distributed (i.i.d.) manner. In this paper we show how conservative Bayesian approaches make this assumption unnecessary, by incorporating one's doubts about the assumption into the assessment. We derive conservative confidence bounds on a system's probability of failure on demand (pfd), when operational testing reveals no failures. The generality and utility of the confidence bounds are illustrated in the assessment of a nuclear power-plant safety-protection system, under varying levels of skepticism about the i.i.d. assumption. The analysis suggests that the i.i.d. assumption can make Bayesian reliability assessments extremely optimistic - such assessments do not explicitly account for how software can be very likely to exhibit no failures during extensive operational testing despite the software's pfd being undesirably large.
C1 [Salako, Kizito] City Univ London, Ctr Software Reliabil, Northampton Sq, London EC1V 0HB, England.
   [Zhao, Xingyu] Univ Liverpool, Dept Comp Sci, Liverpool L69 3BX, England.
C3 City University London; University of Liverpool
RP Zhao, XY (corresponding author), Univ Liverpool, Dept Comp Sci, Liverpool L69 3BX, England.
EM K.O.Salako@city.ac.uk; xingyu.zhao@liverpool.ac.uk
RI ZHAO, Xingyu/JNR-1669-2023
OI Zhao, Xingyu/0000-0002-3474-349X
FU EPSRC [EP/T026995/1] Funding Source: UKRI
CR Aliprantis C.D., 1999, INFINITE DIMENSIONAL, DOI 10.1007/978-3-662-03961-8
   AMMANN PE, 1988, IEEE T COMPUT, V37, P418, DOI 10.1109/12.2185
   [Anonymous], 2022, TR631612022 PD IEC
   [Anonymous], 1985, Metric Spaces. Iteration and Application, DOI 10.1017/9781139171854
   [Anonymous], 2006, 60880 IEC
   [Anonymous], 2016, 1012 IEEE
   Atwood C.L., 2003, Handbook of Parameter Estimation for Probabilistic Risk Assessment
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   BERGER J, 1994, J STAT PLAN INFER, V40, P161, DOI 10.1016/0378-3758(94)90118-X
   Berger J., 1994, TEST, V3, P5, DOI DOI 10.1007/BF02562676
   BERGER JO, 1990, J STAT PLAN INFER, V25, P303, DOI 10.1016/0378-3758(90)90079-A
   BERGMAN B, 1991, J STAT PLAN INFER, V29, P33, DOI 10.1016/0378-3758(92)90119-D
   Bishop P, 2011, IEEE T SOFTWARE ENG, V37, P708, DOI 10.1109/TSE.2010.67
   BISHOP PG, 1993, FTCS-23 - TWENTY-THIRD INTERNATIONAL SYMPOSIUM ON FAULT-TOLERANT COMPUTING : DIGEST OF PAPERS, P98, DOI 10.1109/FTCS.1993.627312
   Bondavalli A., 1995, Proceedings. International Computer Performance and Dependability Symposium (Cat. No.95TH8034), P13, DOI 10.1109/IPDS.1995.395841
   Bondavalli A, 1997, RELIAB ENG SYST SAFE, V57, P189, DOI 10.1016/S0951-8320(97)00040-9
   Bunea C, 2005, RELIAB ENG SYST SAFE, V90, P123, DOI 10.1016/j.ress.2004.10.016
   Chen SP, 1996, IEEE T SOFTWARE ENG, V22, P218, DOI 10.1109/32.489081
   CSENKI A, 1993, IEEE T RELIAB, V42, P34, DOI 10.1109/24.210268
   Dai YS, 2005, IEEE T RELIAB, V54, P100, DOI 10.1109/TR.2004.841709
   DRAPER D, 1995, J R STAT SOC B, V57, P45, DOI 10.1111/j.2517-6161.1995.tb02015.x
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   Fenton NE, 1999, J SYST SOFTWARE, V47, P149, DOI 10.1016/S0164-1212(99)00035-7
   Goseva-Popstojanova K, 2000, IEEE T RELIAB, V49, P37, DOI 10.1109/24.855535
   Huang RB, 2021, IEEE T SOFTWARE ENG, V47, P2052, DOI 10.1109/TSE.2019.2942921
   HUNNS DM, 1992, IEE CONF PUBL, V361, P198
   International Electrotechnical Commission, 2010, 615082010 IEC
   KLOTZ J, 1973, ANN STAT, V1, P373, DOI 10.1214/aos/1176342377
   LAVINE M, 1991, J AM STAT ASSOC, V86, P396, DOI 10.2307/2290583
   LITTLEWOOD B, 1993, COMMUN ACM, V36, P69, DOI 10.1145/163359.163373
   Littlewood B, 1997, IEEE T SOFTWARE ENG, V23, P673, DOI 10.1109/32.637384
   Littlewood B, 2002, SAFETY SCI, V40, P781, DOI 10.1016/S0925-7535(01)00084-4
   Littlewood B, 2007, IEEE T SOFTWARE ENG, V33, P347, DOI 10.1109/TSE.2007.1002
   Littlewood B, 2020, RELIAB ENG SYST SAFE, V197, DOI 10.1016/j.ress.2019.106752
   Littlewood B, 2012, IEEE T SOFTWARE ENG, V38, P1178, DOI 10.1109/TSE.2011.80
   Lyu M., 1996, Handbook of Software Reliability Engineering
   MILLER DR, 1986, IEEE T SOFTWARE ENG, V12, P12, DOI 10.1109/TSE.1986.6312915
   MILLER KW, 1992, IEEE T SOFTWARE ENG, V18, P33, DOI 10.1109/32.120314
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   NuSAC study group on the safety of operational computer sys-tems, 1998, US COMP SAF CRIT APP
   OHagan A., 2006, STATIST PRACT
   PARNAS DL, 1990, COMMUN ACM, V33, P636, DOI 10.1145/78973.78974
   PERICCHI LR, 1994, J STAT PLAN INFER, V40, P279, DOI 10.1016/0378-3758(94)90126-0
   Popov P, 2013, RELIAB ENG SYST SAFE, V117, P98, DOI 10.1016/j.ress.2013.03.017
   Porn K, 1996, RELIAB ENG SYST SAFE, V51, P169, DOI 10.1016/0951-8320(95)00114-X
   PRA Working Group, 1994, NUREG1489
   Rausand M, 2014, RELIABILITY OF SAFETY-CRITICAL SYSTEMS: THEORY AND APPLICATIONS, P1, DOI 10.1002/9781118776353
   Rudin W., 1976, International series in pure and applied mathematics
   Salako K, 2021, I C DEPEND SYS NETWO, P451, DOI 10.1109/DSN48987.2021.00055
   Salako K, 2020, LECT NOTES COMPUT SC, V12289, P96, DOI 10.1007/978-3-030-59854-9_8
   Schilling R.L., 2005, Measures, Integrals and Martingales, DOI [DOI 10.1017/CBO9780511810886, 10.1017/CBO9780511810886]
   Singh H, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P12, DOI 10.1109/ISSRE.2001.989454
   SINGPURWALLA ND, 1994, INT STAT REV, V62, P289, DOI 10.2307/1403763
   Strigini L., 1996, Software Testing, Verification and Reliability, V6, P33, DOI 10.1002/(SICI)1099-1689(199603)6:1<33::AID-STVR109>3.0.CO;2-G
   Strigini Lorenzo, 2013, Computer Safety, Reliability and Security. 32nd International Conference, SAFECOMP 2013. Proceedings: LNCS 8153, P106, DOI 10.1007/978-3-642-40793-2_10
   Strigini L., 1997, PASCONWO6CCN2TN12
   THAYER R, 1978, SOFTWARE RELIABILITY
   The International Regulator Task Force on Safety Critical Software, 2022, LIC SAF CRIT SOFTW N
   TOMEK LA, 1993, IEEE T SOFTWARE ENG, V19, P1071, DOI 10.1109/32.256854
   Wierman T. E., 2001, NUREGCR5500
   Zhao XY, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106393
   Zhao XY, 2019, PROC INT SYMP SOFTW, P13, DOI 10.1109/ISSRE.2019.00012
NR 62
TC 1
Z9 1
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2829
EP 2838
DI 10.1109/TSE.2022.3233802
PG 10
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600080
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Zamprogno, L
   Hall, B
   Holmes, R
   Atlee, JM
AF Zamprogno, Lucas
   Hall, Braxton
   Holmes, Reid
   Atlee, Joanne M.
TI Dynamic Human-in-the-Loop Assertion Generation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Complexity theory; Codes; Semantics; Human in the loop; Testing;
   Runtime; Libraries
AB Test cases use assertions to check program behaviour. While these assertions may not be complex, they are themselves code that must be written correctly in order to determine whether a test case should pass or fail. We claim that most test assertions are relatively repetitive and straight-forward, making their construction well suited to automation and that this automation can reduce developer effort while improving assertion quality. Examining 33,873 assertions from 105 projects revealed that developer-written assertions fall into twelve high-level categories, confirming that the vast majority (>90%) of test assertions are fairly simple in practice. We created AutoAssert, a human-in-the-loop tool to fit naturally into a developer's test-writing workflow by automatically generating assertions for JavaScript and TypeScript test cases. A developer invokes AutoAssert by identifying the variable they want validated; AutoAssert uses dynamic analysis to generate assertions relevant for this variable and its runtime values, injecting the assertions into the test case for the developer to accept, modify, delete. Comparing AutoAssert's assertions to those written by developers, we found that the assertions generated by AutoAssert are the same kind of assertion as was written by developers 84% of the time in a sample of over 1,000 assertions. Additionally we validated the utility of AutoAssert-generated assertions with 17 developers who found the majority of generated assertions to be useful and expressed considerable interest in using such a tool for their own projects.
C1 [Zamprogno, Lucas; Hall, Braxton; Holmes, Reid] Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1Z4, Canada.
   [Atlee, Joanne M.] Univ Waterloo, Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 University of British Columbia; University of Waterloo
RP Holmes, R (corresponding author), Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1Z4, Canada.
EM lucasaz@cs.ubc.ca; braxtonh@cs.ubc.ca; rtholmes@cs.ubc.ca;
   jmatlee@uwaterloo.ca
RI Atlee, Joanne/KCY-7928-2024
CR Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bowring J., 2014, J SOFTW ENG APPL, V7, P94
   Bradley NC, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10187-6
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Delplanque J, 2019, PROC INT CONF SOFTW, P500, DOI 10.1109/ICSE.2019.00062
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Fraser G., 2011, ESECFSE 2011, P416, DOI [10.1145/2025113.2025179, DOI 10.1145/2025113.2025179]
   Jia L, 2021, PROC IEEE INT CONF S, P47, DOI 10.1109/ICSME52107.2021.00011
   Labuschagne A, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P821, DOI 10.1145/3106237.3106288
   Onoma AK, 1998, COMMUN ACM, V41, P81, DOI 10.1145/274946.274960
   Pacheco C, 2005, LECT NOTES COMPUT SC, V3586, P504
   Pacheco Carlos, 2007, COMPANION 22 ACM SIG, P815, DOI DOI 10.1145/1297846.1297902
   Pastore F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P66, DOI 10.1109/ICSE.2015.29
   Song Yoonki., 2007, Proc. ETX at OOPSLA, P26
   Vassallo C, 2019, PROC INT CONF SOFTW, P105, DOI 10.1109/ICSE.2019.00028
   Watson C, 2020, PROC INT CONF SOFTW, P1398, DOI 10.1145/3377811.3380429
   Xie T, 2006, LECT NOTES COMPUT SC, V4067, P380
   Xie T, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P904, DOI 10.1145/2889160.2891056
   Zhang YC, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P214, DOI 10.1145/2786805.2786858
NR 19
TC 1
Z9 1
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2337
EP 2351
DI 10.1109/TSE.2022.3217544
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600052
DA 2024-07-18
ER

PT J
AU Croft, R
   Xie, YZ
   Babar, MA
AF Croft, Roland
   Xie, Yongzheng
   Babar, Muhammad Ali
TI Data Preparation for Software Vulnerability Prediction: A Systematic
   Literature Review
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Data preparation; data quality; software vulnerability prediction;
   systematic literature review
ID CODE ANALYSIS; CHALLENGES
AB Software Vulnerability Prediction (SVP) is a data-driven technique for software quality assurance that has recently gained considerable attention in the Software Engineering research community. However, the difficulties of preparing Software Vulnerability (SV) related data is considered as the main barrier to industrial adoption of SVP approaches. Given the increasing, but dispersed, literature on this topic, it is needed and timely to systematically select, review, and synthesize the relevant peer-reviewed papers reporting the existing SV data preparation techniques and challenges. We have carried out a Systematic Literature Review (SLR) of SVP research in order to develop a systematized body of knowledge of the data preparation challenges, solutions, and the needed research. Our review of the 61 relevant papers has enabled us to develop a taxonomy of data preparation for SVP related challenges. We have analyzed the identified challenges and available solutions using the proposed taxonomy. Our analysis of the state of the art has enabled us identify the opportunities for future research. This review also provides a set of recommendations for researchers and practitioners of SVP approaches.
C1 [Croft, Roland; Xie, Yongzheng; Babar, Muhammad Ali] Univ Adelaide, Ctr Res Engn Software Technol CREST, Sch Comp Sci, Adelaide 5005, Australia.
C3 University of Adelaide
RP Croft, R (corresponding author), Univ Adelaide, Ctr Res Engn Software Technol CREST, Sch Comp Sci, Adelaide 5005, Australia.
EM roland.croft@adelaide.edu.au; yongzheng.xie@adelaide.edu.au;
   ali.babar@adelaide.edu.au
FU Cyber Security Cooperative Research Centre Limited - Australian
   Government's Cooperative Research Centre Programme
FX This work was supported by the Cyber Security Cooperative Research
   Centre Limited whose activities are partially funded by the Australian
   Government's Cooperative Research Centre Programme.
CR Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   [Anonymous], 2020, NVIVO
   [Anonymous], 2002, JIRA
   [Anonymous], 2019, WC2019 APP
   Anwar A, 2020, Arxiv, DOI arXiv:2006.15074
   Barnum S, 2005, IEEE SECUR PRIV, V3, P74, DOI 10.1109/MSP.2005.45
   Bosu MF, 2013, IEEE AUS SOFT ENGR, P97, DOI 10.1109/ASWEC.2013.21
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Coulter R, 2020, INFORM SCIENCES, V524, P46, DOI 10.1016/j.ins.2020.03.036
   Croft R, 2021, Arxiv, DOI arXiv:2107.01921
   Domingos P, 2012, COMMUN ACM, V55, P78, DOI 10.1145/2347736.2347755
   Dowd M., 2006, The Art of Software Security Assessment: Identifying and Preventing Software Vulnerabilities
   Falessi D, 2020, EMPIR SOFTW ENG, V25, P4805, DOI 10.1007/s10664-020-09868-x
   Garousi V., 2017, P 21 INT C EV ASS SO, P170
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Gebru T, 2021, COMMUN ACM, V64, P86, DOI 10.1145/3458723
   Ghaffarian SM, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3092566
   Github, 2008, JFROG GITHUB INT BUI
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hanif H, 2021, J NETW COMPUT APPL, V179, DOI 10.1016/j.jnca.2021.103009
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Hernández-González J, 2016, PATTERN RECOGN LETT, V69, P49, DOI 10.1016/j.patrec.2015.10.008
   Herzig K, 2016, EMPIR SOFTW ENG, V21, P303, DOI 10.1007/s10664-015-9376-6
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jiang Y, 2020, INFORM SOFTWARE TECH, V124, DOI 10.1016/j.infsof.2020.106314
   Jimenez M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P695, DOI 10.1145/3338906.3338941
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kochhar PS, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P563, DOI 10.1109/SANER.2016.112
   Le THM, 2022, Arxiv, DOI [arXiv:2107.08364, 10.48550/ARXIV.2107.08364, DOI 10.48550/ARXIV.2107.08364]
   Le THM, 2020, IEEE WORK CONF MIN S, P350, DOI 10.1145/3379597.3387443
   Leicht N, 2017, IEEE SOFTWARE, V34, P62, DOI 10.1109/MS.2017.37
   Li N, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106287
   Li ZJ, 2019, ICMLC 2019: 2019 11TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND COMPUTING, P30, DOI 10.1145/3318299.3318345
   Lika B, 2014, EXPERT SYST APPL, V41, P2065, DOI 10.1016/j.eswa.2013.09.005
   Lin GJ, 2020, P IEEE, V108, P1825, DOI 10.1109/JPROC.2020.2993293
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Menzies T., 2017, The SEACRAFT Repository of Empirical Software Engineering Data
   Mitchell TM, 1999, COMMUN ACM, V42, P30, DOI 10.1145/319382.319388
   Morrison P., 2015, P 2015 S BOOTCAMP SC
   Mozilla, 1998, BUGZ
   Mushtaq Z, 2017, IEEE ACCESS, V5, P11307, DOI 10.1109/ACCESS.2017.2710421
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   NIST, 2005, SOFTW ASS REF DAT SA
   NIST, 1999, NAT VULN DAT
   OWASP, 2015, OW BENCHM PROJ
   Pipino LL., 2002, Communications of the ACM, V45, P211, DOI [DOI 10.1145/505248.506010, 10.1145/505248.506010]
   Pyle D., 1999, DATA PREPARATION DAT
   Riom T, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09944-w
   Ruojing Zhang, 2019, Business & Information Systems Engineering, V61, P575, DOI 10.1007/s12599-019-00608-0
   Sabir B., 2021, ACM Computing Surveys (CSUR), V54, P1
   Sayyad Shirabad J., 2005, The PROMISE Repository of Software Engineering Databases
   Schardt C, 2007, BMC MED INFORM DECIS, V7, DOI 10.1186/1472-6947-7-16
   Semasaba AOA, 2020, IET SOFTW, V14, P654, DOI 10.1049/iet-sen.2020.0084
   Shahriar H, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187673
   Shin Y, 2013, EMPIR SOFTW ENG, V18, P25, DOI 10.1007/s10664-011-9190-8
   Sidi F., 2012, 2012 International Conference on Information Retrieval & Knowledge Management (CAMP), P300, DOI 10.1109/InfRKM.2012.6204995
   Singh Shashank Kumar, 2020, Soft Computing: Theories and Applications. Proceedings of SoCTA 2019. Advances in Intelligent Systems and Computing (AISC 1154), P649, DOI 10.1007/978-981-15-4032-5_59
   Sobers R., 2021, 134 CYBERSECURITY ST
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Triet Huynh Minh Le, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P371, DOI 10.1109/MSR.2019.00063
   Tsipras D., 2020, INT C MACH LEARN, P9625, DOI DOI 10.5555/3524938.3525830
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   VulnSpy, 2018, SQLI LABS
   Walden J, 2014, PROC INT SYMP SOFTW, P23, DOI 10.1109/ISSRE.2014.32
   Wang R. Y., 1996, Journal of Management Information Systems, V12, P5
   Weinberg Gerald M, 2008, Perfect Software and other illusions about testing
   Wohlin C, 2014, 18 INT C EV ASS SOFT, P1, DOI DOI 10.1145/2601248.2601268
   Zeng P, 2020, IEEE ACCESS, V8, P197158, DOI 10.1109/ACCESS.2020.3034766
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zheng A., 2018, Feature Engineering for Machine Learning
   Zheng YH, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P111, DOI 10.1109/ICSE-SEIP52600.2021.00020
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zimmermann Thomas, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P421, DOI 10.1109/ICST.2010.32
NR 76
TC 12
Z9 13
U1 2
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2023
VL 49
IS 3
BP 1044
EP 1063
DI 10.1109/TSE.2022.3171202
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA A1QF2
UT WOS:000952938700006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kitchenham, B
   Madeyski, L
   Budgen, D
AF Kitchenham, Barbara
   Madeyski, Lech
   Budgen, David
TI SEGRESS: Software Engineering Guidelines for REporting Secondary Studies
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Evidence-based software engineering; reporting guidelines; systematic
   reviews; quality reviews; mapping studies; mixed-methods reviews;
   threats to validity; risk of bias; quality assessment; PRISMA 2020
ID PAPER 6; GRADE; QUALITY; IMPLEMENTATION; VALIDITY; RELIABILITY;
   MOTIVATION; REVIEWS; LESSONS
AB Context: Several tertiary studies have criticized the reporting of software engineering secondary studies. Objective: Our objective is to identify guidelines for reporting software engineering (SE) secondary studies which would address problems observed in the reporting of software engineering systematic reviews (SRs). Method: We review the criticisms of SE secondary studies and identify the major areas of concern. We assess the PRISMA 2020 (Preferred Reporting Items for Systematic Reviews and Meta-Analyses) statement as a possible solution to the need for SR reporting guidelines, based on its status as the reporting guideline recommended by the Cochrane Collaboration whose SR guidelines were a major input to the guidelines developed for SE. We report its advantages and limitations in the context of SE secondary studies. We also assess reporting guidelines for mapping studies and qualitative reviews, and compare their structure and content with that of PRISMA 2020. Results: Previous tertiary studies confirm that reports of secondary studies are of variable quality. However, ad hoc recommendations that amend reporting standards may result in unnecessary duplication of text. We confirm that the PRISMA 2020 statement addresses SE reporting problems, but is mainly oriented to quantitative reviews, mixed-methods reviews and meta-analyses. However, we show that the PRISMA 2020 item definitions can be extended to cover the information needed to report mapping studies and qualitative reviews. Conclusions: In this paper and its Supplementary Material, we present and illustrate an integrated set of guidelines called SEGRESS (Software Engineering Guidelines for REporting Secondary Studies), suitable for quantitative systematic reviews (building upon PRISMA 2020), mapping studies (PRISMA-ScR), and qualitative reviews (ENTREQ and RAMESES), that addresses reporting problems found in current SE SRs.
C1 [Kitchenham, Barbara] Keele Univ, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
   [Madeyski, Lech] Wroclaw Univ Sci & Technol, Dept Appl Informat, PL-50370 Wroclaw, Poland.
   [Budgen, David] Univ Durham, Dept Comp Sci, Durham DH1 3LE, England.
C3 Keele University; Wroclaw University of Science & Technology; Durham
   University
RP Madeyski, L (corresponding author), Wroclaw Univ Sci & Technol, Dept Appl Informat, PL-50370 Wroclaw, Poland.
EM b.a.kitchenham@keele.ac.uk; lech.madeyski@pwr.edu.pl;
   david.budgen@durham.ac.uk
RI ; Madeyski, Lech/D-4986-2012
OI Kitchenham, Barbara/0000-0002-6134-8460; Madeyski,
   Lech/0000-0003-3907-3357
CR ABDELHAMID TK, 1989, COMMUN ACM, V32, P1426, DOI 10.1145/76380.76383
   Ali MS, 2010, INFORM SOFTWARE TECH, V52, P871, DOI 10.1016/j.infsof.2010.05.003
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Arisholm E, 2007, IEEE T SOFTWARE ENG, V33, P65, DOI 10.1109/TSE.2007.17
   Arksey H., 2005, INT J SOC RES METHOD, V8, P19, DOI [10.1080/1364557032000119616, DOI 10.1080/1364557032000119616]
   Atkins D, 2004, BMJ-BRIT MED J, V328, P1490
   Beecham S., 2006, 453 U HERTF
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Beller EM, 2013, PLOS MED, V10, DOI 10.1371/journal.pmed.1001419
   Booth A., 2013, QUALITATIVE HLTH RES, V23, P124
   Booth A., 2012, SYSTEMATIC APPROACHE
   Budgen D, 2011, SOFTWARE PRACT EXPER, V41, P363, DOI 10.1002/spe.1009
   Budgen D, 2022, INFORM SOFTWARE TECH, V145, DOI 10.1016/j.infsof.2022.106840
   Budgen D, 2020, E-INFORMATICA, V14, P7, DOI 10.37190/e-Inf200101
   Budgen D, 2018, INFORM SOFTWARE TECH, V95, P62, DOI 10.1016/j.infsof.2017.10.017
   Cargo M, 2018, J CLIN EPIDEMIOL, V97, P59, DOI 10.1016/j.jclinepi.2017.11.028
   Chapetta WA, 2020, EMPIR SOFTW ENG, V25, P3501, DOI 10.1007/s10664-020-09844-5
   Ciolkowski M, 2009, INT SYMP EMP SOFTWAR, P133, DOI 10.1109/ESEM.2009.5316026
   Colvin CJ, 2018, IMPLEMENT SCI, V13, DOI [10.1186/s13012-017-0690-9, 10.1186/s13012-017-0688-3, 10.1186/s13012-017-0691-8, 10.1186/s13012-017-0693-6]
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Easterbrook S., 2007, SELECTING EMPIRICAL
   Felderer M., 2020, CONT EMPIRICAL METHO
   Flemming K, 2018, J CLIN EPIDEMIOL, V97, P79, DOI 10.1016/j.jclinepi.2017.10.022
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   France EF, 2019, PSYCHO-ONCOLOGY, V28, P447, DOI [10.1002/pon.4915, 10.1186/s12874-018-0600-0]
   Glenton C, 2018, IMPLEMENT SCI, V13, DOI 10.1186/s13012-017-0692-7
   Gorschek T., 2020, contemp. Empir. Methods softw. Engineering, P503, DOI [10.1007/978-3-030-32489-618, DOI 10.1007/978-3-030-32489-618]
   Gray D, 2012, IET SOFTW, V6, P549, DOI 10.1049/iet-sen.2011.0132
   Greenhalgh T, 2011, BMC MED RES METHODOL, V11, DOI 10.1186/1471-2288-11-115
   Guyatt GH, 2008, BRIT MED J, V336, P924, DOI 10.1136/bmj.39489.470347.AD
   Guyatt GH, 2011, J CLIN EPIDEMIOL, V64, P1311, DOI [10.1016/j.jclinepi.2011.06.004, 10.1016/j.jclinepi.2011.03.017]
   Hannay JE, 2009, INFORM SOFTWARE TECH, V51, P1110, DOI 10.1016/j.infsof.2009.02.001
   Harden A, 2018, J CLIN EPIDEMIOL, V97, P70, DOI 10.1016/j.jclinepi.2017.11.029
   Harris JL, 2018, J CLIN EPIDEMIOL, V97, P39, DOI 10.1016/j.jclinepi.2017.10.023
   Higgins J, 2021, Cochrane Handbook for Systematic Reviews of Interventions version 6.3
   Höst M, 2005, PROC INT CONF SOFTW, P470
   Huang X, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1207, DOI 10.1145/3180155.3180235
   Jorgensen M, 2007, INT J FORECASTING, V23, P449, DOI 10.1016/j.ijforecast.2007.05.008
   Jorgensen M, 2016, J SYST SOFTWARE, V116, P133, DOI 10.1016/j.jss.2015.03.065
   Kitchenham B., 2007, EBSE200701 KEEL DURH
   Kitchenham B., 1986, ICL TECH J, V5, P112
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham B., 2016, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B., 2022, SUPPLEMENTARY MAT SE
   Kitchenham B., 2006, PROTOCOL SYSTEMATIC
   Kitchenham B., 2006, P 10 INT C EV ASS SO, P81
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham B, 2023, IEEE T SOFTWARE ENG, V49, P872, DOI 10.1109/TSE.2022.3165938
   Kitchenham B, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P134, DOI 10.1145/3319008.3319009
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Lanubile F., 2000, ISERN0008 U BAR
   Lavis JN, 2009, HEALTH RES POLICY SY, V7, DOI 10.1186/1478-4505-7-S1-S13
   Lehman MM, 2001, ANN SOFTW ENG, V11, P15, DOI 10.1023/A:1012535017876
   Levac D, 2010, IMPLEMENT SCI, V5, DOI 10.1186/1748-5908-5-69
   Lewin S, 2018, IMPLEMENT SCI, V13, DOI 10.1186/s13012-017-0689-2
   Lewin S, 2015, PLOS MED, V12, DOI 10.1371/journal.pmed.1001895
   Liberati A, 2009, PLOS MED, V6, DOI [10.1371/journal.pmed.1000100, 10.7326/0003-4819-151-4-200908180-00136]
   MADEYSKI L, 2007, PROC EUR C SOFTW PRO, P200
   Madeyski L, 2017, J INTELL FUZZY SYST, V32, P1509, DOI 10.3233/JIFS-169146
   Madeyski L, 2010, TEST-DRIVEN DEVELOPMENT, P1, DOI 10.1007/978-3-642-04288-1
   Martinez-Fernandez S., 2015, 2015 ACM/IEEE international symposium on empirical software engineering and measurement, P1, DOI DOI 10.1109/ESEM.2015.7321184
   McGowan J, 2020, J CLIN EPIDEMIOL, V123, P177, DOI 10.1016/j.jclinepi.2020.03.016
   dos Santos PSM, 2017, INT SYMP EMP SOFTWAR, P480, DOI 10.1109/ESEM.2017.68
   Menzies T, 2019, INFORM SOFTWARE TECH, V112, P35, DOI 10.1016/j.infsof.2019.04.005
   Moher D, 2009, ANN INTERN MED, V151, P264, DOI [10.7326/0003-4819-151-4-200908180-00135, 10.1136/bmj.b2700, 10.1371/journal.pmed.1000097, 10.1186/2046-4053-4-1, 10.1136/bmj.i4086, 10.1136/bmj.b2535, 10.1016/j.ijsu.2010.02.007, 10.1016/j.ijsu.2010.07.299]
   Moher D, 2010, PLOS MED, V7, DOI 10.1371/journal.pmed.1000217
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Myrtveit I, 2012, EMPIR SOFTW ENG, V17, P23, DOI 10.1007/s10664-011-9183-7
   Noyes J., 2018, J CLIN EPIDEMIOL, V97, P69
   Noyes J., 2019, Cochrane Handbook for Systematic Reviews of Interventions, DOI [10.1002/9781119536604.ch21, DOI 10.1002/9781119536604.CH21]
   Noyes J, 2018, J CLIN EPIDEMIOL, V97, P35, DOI 10.1016/j.jclinepi.2017.09.025
   Page M. J., 2020, PREPRINT
   Page MJ, 2021, BMJ-BRIT MED J, V372, DOI [10.1136/bmj.n71, 10.1016/j.ijsu.2021.105906, 10.1136/bmj.n160]
   Page MJ, 2020, J CLIN EPIDEMIOL, V118, P60, DOI 10.1016/j.jclinepi.2019.11.010
   Page MJ, 2018, BMJ OPEN, V8, DOI 10.1136/bmjopen-2017-019703
   Rethlefsen ML, 2021, SYST REV-LONDON, V10, DOI 10.1186/s13643-020-01542-z
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   Sharp H, 2009, INFORM SOFTWARE TECH, V51, P219, DOI 10.1016/j.infsof.2008.05.009
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Sobel AEK, 2002, IEEE T SOFTWARE ENG, V28, P308, DOI 10.1109/32.991322
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Tong A, 2012, BMC MED RES METHODOL, V12, DOI 10.1186/1471-2288-12-181
   Tricco AC, 2018, ANN INTERN MED, V169, P467, DOI 10.7326/M18-0850
   Turner M, 2010, INFORM SOFTWARE TECH, V52, P463, DOI 10.1016/j.infsof.2009.11.005
   Wong G, 2013, BMC MED, V11, DOI [10.1186/1741-7015-11-21, 10.1186/1741-7015-11-20]
   Yang LX, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106397
   Yang S, 2015, P 19 INT C EV ASS SO, P14, DOI DOI 10.1145/2745802.2745815
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
NR 94
TC 22
Z9 23
U1 2
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2023
VL 49
IS 3
BP 1273
EP 1298
DI 10.1109/TSE.2022.3174092
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA A1QF2
UT WOS:000952938700016
OA hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Liao, Z
   Song, SW
   Zhu, H
   Luo, XP
   He, ZY
   Jiang, RK
   Chen, T
   Chen, JC
   Zhang, T
   Zhang, XS
AF Liao, Zhou
   Song, Shuwei
   Zhu, Hang
   Luo, Xiapu
   He, Zheyuan
   Jiang, Renkai
   Chen, Ting
   Chen, Jiachi
   Zhang, Tao
   Zhang, Xiaosong
TI Large-Scale Empirical Study of Inline Assembly on 7.6 Million Ethereum
   Smart Contracts
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Ethereum; smart contract; Solidity; inline assembly; Yul
ID CHALLENGES
AB Being the most popular programming language for developing Ethereum smart contracts, Solidity allows using inline assembly to gain fine-grained control. Although many empirical studies on smart contracts have been conducted, to the best of our knowledge, none has examined inline assembly in smart contracts. To fill the gap, in this paper, we conduct the first large-scale empirical study of inline assembly on more than 7.6 million open-source Ethereum smart contracts from three aspects, namely, source code, bytecode, and transactions after designing new approaches to tackle several technical challenges. Through a thorough quantitative and qualitative analysis of the collected data, we obtain many new observations and insights. Moreover, by conducting a questionnaire survey on using inline assembly in smart contracts, we draw new insights from the valuable feedback. This work sheds light on the development of smart contracts as well as the evolution of Solidity and its compilers.
C1 [Liao, Zhou; Song, Shuwei; Zhu, Hang; He, Zheyuan; Jiang, Renkai; Chen, Ting; Zhang, Xiaosong] Univ Elect Sci & Technol China, Inst Cyber Secur, Chengdu 611731, Sichuan, Peoples R China.
   [Luo, Xiapu] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
   [Chen, Jiachi] Monash Univ, Clayton, Vic 3800, Australia.
   [Zhang, Tao] Macau Univ Sci & Technol, Macau 999078, Peoples R China.
C3 University of Electronic Science & Technology of China; Hong Kong
   Polytechnic University; Monash University; Macau University of Science &
   Technology
RP Chen, T (corresponding author), Univ Elect Sci & Technol China, Inst Cyber Secur, Chengdu 611731, Sichuan, Peoples R China.; Luo, XP (corresponding author), Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
EM liaozhou98@qq.com; shuwei@std.uestc.edu.cn; 568991738@qq.com;
   csxluo@comp.polyu.edu.hk; ecjgvmhc@gmail.com; 1377437271@qq.com;
   brokendragon@uestc.edu.cn; chenjiachihk@163.com; tazhang@must.edu.mo;
   johnsonzxs@uestc.edu.cn
RI Chen, Jiachi/HOC-4256-2023; Zhang, Tao/E-5634-2012
OI Zhang, Tao/0000-0002-6272-4069; Song, Shuwei/0000-0003-4368-0950
FU National Natural Science Foundationof China [61872057]; National Key R&D
   Programof China [2018YFB0804100]; Hong Kong RGC Projectsunder
   [PolyU15222320, PolyU15224121]; Scienceand Technology Development Fund
   [0047/2020/A1]; China Postdoctoral Science Foundation [2017M621247];
   Natural Science Foundation of Heilongjiang Province,China [LH2019F008]
FX This work was supported in part by the National Natural Science
   Foundationof China under Grant 61872057, in part by the National Key R&D
   Programof China under Grant 2018YFB0804100, in part by Hong Kong RGC
   Projectsunder Grants PolyU15222320 and PolyU15224121, in part by the
   Scienceand Technology Development Fund of Macau under Grant
   0047/2020/A1, inpart by China Postdoctoral Science Foundation under
   Grant 2017M621247,and in part by the Natural Science Foundation of
   Heilongjiang Province,China under Grant LH2019F008
CR Albert Elvira, 2020, Tools and Algorithms for the Construction and Analysis of Systems. 26th International Conference, TACAS 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12079), P118, DOI 10.1007/978-3-030-45237-7_7
   Albert E, 2021, J SYST SOFTWARE, V176, DOI 10.1016/j.jss.2021.110923
   Aldweesh A, 2018, I C COMP SYST APPLIC
   Altman, 2021, YUL SOURCEMAPS SKIP
   [Anonymous], 2020, API USED COLLECTING
   Ashraf I, 2020, IEEE ACCESS, V8, P99552, DOI 10.1109/ACCESS.2020.2995183
   Bartoletti Massimo, 2017, Financial Cryptography and Data Security. FC 2017 International Workshops WAHC, BITCOIN, VOTING, WTSC, and TA. Revised Selected Papers: LNCS 10323, P494, DOI 10.1007/978-3-319-70278-0_31
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bouraga S, 2020, 2020 2ND CONFERENCE ON BLOCKCHAIN RESEARCH & APPLICATIONS FOR INNOVATIVE NETWORKS AND SERVICES (BRAINS), P49, DOI [10.1109/brains49436.2020.9223288, 10.1109/BRAINS49436.2020.9223288]
   Carl, 2020, 373 DEP EC U ZUR
   Chen JC, 2022, IEEE T SOFTWARE ENG, V48, P327, DOI 10.1109/TSE.2020.2989002
   Chen JC, 2020, IEEE INT CONF AUTOM, P1382, DOI 10.1145/3324884.3418923
   Chen T, 2021, IEEE T EMERG TOP COM, V9, P1433, DOI 10.1109/TETC.2020.2979019
   Chen T, 2020, ACM T INTERNET TECHN, V20, DOI 10.1145/3381036
   Chen T, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1503, DOI 10.1145/3319535.3345664
   Chen T, 2018, IEEE INFOCOM SER, P1484, DOI 10.1109/INFOCOM.2018.8486401
   Chen T, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P81, DOI 10.1145/3183399.3183420
   Chen T, 2017, LECT NOTES COMPUT SC, V10701, P3, DOI 10.1007/978-3-319-72359-4_1
   Chen T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P442, DOI 10.1109/SANER.2017.7884650
   Chen XP, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P470, DOI 10.1109/SANER50967.2021.00050
   Chen Yi-jia, 2020, Journal of Sustainable Development, V13, P1, DOI 10.5539/jsd.v13n1p1
   Cheng T. S., 2019, 2019 Compound Semiconductor Week (CSW), DOI 10.1109/ICIPRM.2019.8819142
   Chriseth, 2016, VERS 0 4 5
   Coblenz, 2020, ARXIV
   Costa group, 2021, TOOL APPL SUP OPT TE
   Day A., 2018, ETHEREUM BIGQUERY PU
   DefiLlama, 2021, TOT VAL LOCK RANK
   Durieux T, 2020, PROC INT CONF SOFTW, P530, DOI 10.1145/3377811.3380364
   Enzyme Finance, 2021, OY AN TOOL SMART CON
   Ethereum, 2020, EIP 2535 DIAM
   Ethereum, 2020, YUL
   Ethereum, 2021, COMP INP OUTP JS DES
   Ethereum, 2015, SOL SMART CONTR PROG
   Ethereum, 2021, EST SOURC COD
   Ethereum, 2015, EIP 20 ERC 20 TOK ST
   Ethereum, 2020, INL ASS
   Ethereum, 2020, OPTIMISER
   Ethereum, 2018, SOL V050 BREAK CHANG
   Ethereum, 2020, SOL DOC
   Ethereum, 2020, ETH HOM DOC
   Ethereun, 2018, REM ETH BROWS BAS CO
   Etherscan, 2021, CONTR 0X0AFFA06764C9
   Etherscan, 2020, CONTR 0X0FBDB0ACEB33
   Etherscan, 2021, CONTR 0XA43EBD8939D8
   Etherscan, 2020, ETH DAIL VER CONTR C
   Etherscan, 2021, CONTR 0XA0B86991C621
   Etherscan, 2021, CONTR 0X3B9A3C062BDB
   Etherscan, 2021, CONTR 0X9BCD203710B2
   Etherscan, 2020, CONTR 0XD01C92937400
   Etherscan, 2021, CONTR 0X84AC94F17622
   Etherscan, 2021, CONTRACT 0X2B9B8B83C
   Etherscan, 2021, CONTR 0X58FA7C39893D
   Etherscan, 2021, CONTRACT 0X1 143B258
   Etherscan, 2021, CONTR 0X0000000000BF
   Etherscan, 2021, CONTR 0X20A7B20B9C21
   Etherscan, 2020, CONTR 0X84F6451FE944
   Etherscan, 2021, CONTR 0X6090A6478496
   Etherscan, 2021, CONTR 0XBC0BB74A13F1
   Etherscan, 2021, CONTR 0X5CF3DA4D117B
   Etherscan, 2021, CONTR 0XE0DCC70880BE
   Etherscan, 2021, CONTR 0X744D70FDBE2B
   Etherscan, 2021, CONTR 0X185479FB2
   Etherscan, 2021, CONTR 0XE367FE584ADE
   Etherscan, 2021, CONTR 0X6710C63432A2
   Etherscan, 2020, ETH BLOCKCH EXPL
   Exchange, 2020, ETH STACK EXCH
   Fangxiao Liu, 2020, 2019 6th International Conference on Dependable Systems and Their Applications (DSA). Proceedings, P329, DOI 10.1109/DSA.2019.00050
   Frank J, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P2757
   Gao, 2021, PROC 28 ASIA PACIFIC
   GasToken, 2019, TOK GAS ETH GAST
   Gensim, 2020, MOD LD LAT DIR ALL
   Gibbons JD., 2020, NONPARAMETRIC STAT I, DOI DOI 10.1201/9781439896129
   Gomes, 2019, CHAINID VERSUS NETWO
   Google, 2020, BIG QUER
   Grech, 2021, MADMAX ETHEREUM STAT
   Hajdu, 2019, ARXIV
   Hegedus P, 2019, TECHNOLOGIES, V7, DOI 10.3390/technologies7010006
   Huang YG, 2020, PROC CVPR IEEE, P5900, DOI 10.1109/CVPR42600.2020.00594
   Hukkinen T, 2019, PROCEEDINGS OF THE 52ND ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P6875
   Jialiang Chang, 2019, Formal Methods and Software Engineering. 21st International Conference on Formal Engineering Methods, ICFEM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11852), P286, DOI 10.1007/978-3-030-32409-4_18
   Jiao J, 2020, P IEEE S SECUR PRIV, P1695, DOI 10.1109/SP40000.2020.00066
   Jiao J, 2020, LECT NOTES COMPUT SC, V12076, P75, DOI 10.1007/978-3-030-45234-6_4
   Jie K. W., 2018, EIP712 IS HERE WHAT
   Kalodner H, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P2721
   Khan MMA, 2022, CONCURR COMP-PRACT E, V34, DOI 10.1002/cpe.6679
   Khan SN, 2021, PEER PEER NETW APPL, V14, P2901, DOI 10.1007/s12083-021-01127-0
   Kim S, 2019, 2019 IEEE 4TH INTERNATIONAL WORKSHOPS ON FOUNDATIONS AND APPLICATIONS OF SELF* SYSTEMS (FAS*W 2019), P188, DOI 10.1109/FAS-W.2019.00052
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Koksal, 2019, BENEFITS APPLYING BL
   Liao Z, 2023, IEEE T SOFTWARE ENG, V49, P777, DOI 10.1109/TSE.2022.3163614
   Liu C., 2019, Blockchain Trustworthy Syst., P505
   Liu C, 2020, J CLOUD COMPUT-ADV S, V9, DOI 10.1186/s13677-020-00176-9
   Loopring, 2017, PROT ZKROLL DEX PAYM
   Ma F., 2019, ARXIV
   Marchesi L, 2020, PROCEEDINGS OF THE 2020 IEEE 3RD INTERNATIONAL WORKSHOP ON BLOCKCHAIN ORIENTED SOFTWARE ENGINEERING (IWBOSE '20), P9, DOI [10.1109/iwbose50093.2020.9050163, 10.1109/IWBOSE50093.2020.9050163]
   Marescotti Matteo, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P450, DOI 10.1007/978-3-030-03427-6_33
   Mars R, 2021, P INT COMP SOFTW APP, P156, DOI 10.1109/COMPSAC51774.2021.00033
   Mohring M., 2018, 22 PAC AS C INF SYST, P146
   Mokdad I., 2020, Decentralised Internet of Things A Blockchain Perspective, P45
   Mudge N., 2020, NEW STORAGE LAYOUT P
   Nguyen TD, 2020, PROC INT CONF SOFTW, P778, DOI 10.1145/3377811.3380334
   Nystedt S., 1999, Software Complexity and Project Performance
   Oliva GA, 2020, EMPIR SOFTW ENG, V25, P1864, DOI 10.1007/s10664-019-09796-5
   Overflow, 2021, INF GAS WARN REM FUN
   Parizi R. M., 2018, ARXIV
   Parizi RM, 2018, LECT NOTES COMPUT SC, V10974, P75, DOI 10.1007/978-3-319-94478-4_6
   Pierro GA, 2022, FUTURE GENER COMP SY, V128, P142, DOI 10.1016/j.future.2021.09.021
   Pierrou G, 2020, IEEE POW ENER SOC GE
   Pinna A, 2019, IEEE ACCESS, V7, P78194, DOI 10.1109/ACCESS.2019.2921936
   Reddit, 2020, REDD FRONT PAG INT
   Rigger M, 2018, ACM SIGPLAN NOTICES, V53, P84, DOI [10.1145/3296975.3186418, 10.1145/3186411.3186418]
   Saraph V., 2019, ARXIV
   Sarwar, 2005, UNIX TXB
   Signer C., 2018, THESIS ETH ZURICH ZU
   So S, 2020, P IEEE S SECUR PRIV, P1678, DOI 10.1109/SP40000.2020.00032
   Soto D, 2020, PROC IEEE INT CONF S, P687, DOI 10.1109/ICSME46990.2020.00073
   Status, 2018, STAT ACC BETT WEB AN
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Viglianisi E, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110647
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1331, DOI 10.1109/TSE.2019.2921343
   Wan ZY, 2017, IEEE WORK CONF MIN S, P413, DOI 10.1109/MSR.2017.59
   Wang D., 2020, ARXIV
   Wang HJ, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P1, DOI 10.1109/ICSE-NIER.2019.00009
   Wang XM, 2020, IEEE T SERV COMPUT, V13, P314, DOI 10.1109/TSC.2019.2949561
   Wang YS, 2018, J BIOMED INFORM, V87, P12, DOI 10.1016/j.jbi.2018.09.008
   Werner S.M., 2020, MATH RES BLOCKCHAIN, V2020, P161, DOI [10.1007/978-3-030-53356-4_10, DOI 10.1007/978-3-030-53356-4_10]
   Wikipedia, 2021, PHI COEFF
   Wikipedia, 2020, MANN WHITN TEST
   Wikipedia contributors, 2021, ZER KNOWL PROOF WIK
   Wikipedia contributors, 2021, CYCL COMPL WIK FREE
   Wood G., 2020, Ethereum: a secure decentralized generalized transaction ledger Berlin version
   Wu KD, 2021, SOFTWARE PRACT EXPER, V51, P2033, DOI 10.1002/spe.2751
   Wustholz V., 2019, ARXIV
   Xingya Wang, 2019, 2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER). Proceedings, P549, DOI 10.1109/SANER.2019.8668020
   Yang R, 2019, 2019 4TH IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (EUROS&PW), P310, DOI 10.1109/EuroSPW.2019.00041
   Zakrzewski J, 2018, LECT NOTES COMPUT SC, V11294, P229, DOI 10.1007/978-3-030-03592-1_13
   Zarir AA, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3431726
   Zhang M, 2020, ASIA PAC SOFWR ENG, P513, DOI 10.1109/APSEC51365.2020.00069
   Zhang P., 2019, ARXIV
   Zheng PL, 2020, IEEE OPEN J COMP SOC, V1, P95, DOI 10.1109/OJCS.2020.2990458
   Zheng PL, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P134, DOI 10.1145/3183519.3183546
   Zheng ZB, 2020, FUTURE GENER COMP SY, V105, P475, DOI 10.1016/j.future.2019.12.019
   Zou WQ, 2021, IEEE T SOFTWARE ENG, V47, P2084, DOI 10.1109/TSE.2019.2942301
NR 143
TC 6
Z9 6
U1 6
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 777
EP 801
DI 10.1109/TSE.2022.3163614
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900017
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Zhang, XH
   Yu, Y
   Gousios, G
   Rastogi, A
AF Zhang, Xunhui
   Yu, Yue
   Gousios, Georgios
   Rastogi, Ayushi
TI Pull Request Decisions Explained: An Empirical Overview
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Pull-based development; pull request decision; distributed software
   development; GitHub
ID SOFTWARE-DEVELOPMENT; IMPACT
AB Context: The pull-based development model is widely used in open source projects, leading to the emergence of trends in distributed software development. One aspect that has garnered significant attention concerning pull request decisions is the identification of explanatory factors. Objective: This study builds on a decade of research on pull request decisions and provides further insights. We empirically investigate how factors influence pull request decisions and the scenarios that change the influence of such factors. Method: We identify factors influencing pull request decisions on GitHub through a systematic literature review and infer them by mining archival data. We collect a total of 3,347,937 pull requests with 95 features from 11,230 diverse projects on GitHub. Using these data, we explore the relations among the factors and build mixed effects logistic regression models to empirically explain pull request decisions. Results: Our study shows that a small number of factors explain pull request decisions, with that concerning whether the integrator is the same as or different from the submitter being the most important factor. We also note that the influence of factors on pull request decisions change with a change in context; e.g., the area hotness of pull request is important only in the early stage of project development, however it becomes unimportant for pull request decisions as projects become mature.
C1 [Zhang, Xunhui; Yu, Yue] Natl Univ Def Technol, Natl Key Lab Parallel Distribut, Changsha 410073, Hunan, Peoples R China.
   [Gousios, Georgios] Delft Univ Technol, NL-2628 CD Delft, Netherlands.
   [Rastogi, Ayushi] Univ Groningen, Fac Sci & Engn, NL-9712 CP Groningen, Netherlands.
C3 National University of Defense Technology - China; Delft University of
   Technology; University of Groningen
RP Yu, Y (corresponding author), Natl Univ Def Technol, Natl Key Lab Parallel Distribut, Changsha 410073, Hunan, Peoples R China.
EM zhangxunhui@nudt.edu.cn; yuyue@nudt.edu.cn; g.gousios@tudelft.nl;
   a.rastogi@rug.nl
RI Zhang, Xunhui/AAW-7324-2021
OI Zhang, Xunhui/0000-0002-4027-9443; Gousios,
   Georgios/0000-0002-8495-7939; Yu, Yue/0000-0002-9865-2212; Rastogi,
   Ayushi/0000-0002-0939-6887
FU National Key R&D Program of China [2020AAA0103504]
FX This work was supported by National Key R&D Program of China under Grant
   2020AAA0103504.
CR Agrawal V, INTERPRETING IMPORTA
   Aliweb, CHOOS BEST ALG MEAS
   [Anonymous], LINKING PULL REQUEST
   [Anonymous], 2009, Research on software analysis for error-free computing center Tech-Memo (ROSAEC MEMO 2009-006)
   [Anonymous], 2010, lme4: Mixed-effects modeling with R
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2012, GERRIT CODE REV GITH
   [Anonymous], MYLYN REV
   [Anonymous], Gerrit Code Review
   [Anonymous], 2013, GERRITFORGE BLOG GIT
   [Anonymous], 2008, Proceedings of the 2008 international working conference on Mining software repositories
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Baysal O., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P447, DOI 10.1109/WCRE.2012.54
   Baysal O, 2016, EMPIR SOFTW ENG, V21, P932, DOI 10.1007/s10664-015-9366-8
   Baysal O, 2013, WORK CONF REVERSE EN, P122, DOI 10.1109/WCRE.2013.6671287
   Bernhart Mario, 2010, Proceedings of the 2010 Agile Conference (AGILE 2010), P44, DOI 10.1109/AGILE.2010.18
   Bosu A, 2013, PROC 11 INT DOCTORAL
   Bosu A, 2014, 2014 ACM IEEE INT S, P1, DOI DOI 10.1145/2652524.2652544
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Calefato F, 2017, INT CONF GLOBAL SOFT, P56, DOI 10.1109/ICGSE.2017.1
   Chou SW, 2011, INFORM SYST J, V21, P195, DOI [10.1111/j.1365-2575.2009.00347.x, 10.1111/J.1365-2575.2009.00347.x]
   Cohen J., 2013, APPL MULTIPLE REGRES, DOI DOI 10.2307/2064799
   Cohen J., 1988, STAT POWER ANAL BEHA
   Corbet J., 2017, 2017 LIN KERN DEV RE
   Dey T, 2020, Arxiv, DOI arXiv:2003.01153
   Drury M, WHAT ARE VARIABLE IM
   Fagan M., 2002, Software Pioneers, P575
   Fan Q, 2017, INT SYMP EMP SOFTWAR, P121, DOI 10.1109/ESEM.2017.19
   Ford D, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P51, DOI 10.1109/ICSE-SEIS.2019.00014
   Frost J, Multicollinearity in regression analysis: Problems, Detection, and Solutions
   Galecki A, 2013, SPRINGER TEXTS STAT, P245, DOI 10.1007/978-1-4614-3900-4_13
   GitHub, APPR PULL REQ REQ RE
   Golzadeh M., 2019, EFFECT DISCUSSIONS P
   Gousios G., 2014, Proceedings of the Conference on Mining Software Repositories (MSR), MSR 2014, P368, DOI 10.1145/2597073.2597122
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Greenwood BN, 2016, MANAGE SCI, V62, P2281, DOI 10.1287/mnsc.2015.2232
   Gren L, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267437
   Gusenbauer M, 2019, SCIENTOMETRICS, V118, P177, DOI 10.1007/s11192-018-2958-5
   Hechtl C., 2020, INFLUENCE DEV CORENE
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Hoc J.-M., 2014, PSYCHOL PROGRAMMING
   Iyer RN, 2021, IEEE T SOFTWARE ENG, V47, P2632, DOI 10.1109/TSE.2019.2960357
   Iyer RN, 2019, IEEE Transactions on Software Engineering
   Jiang J, 2019, IEEE ACCESS, V7, P102751, DOI 10.1109/ACCESS.2019.2928566
   Jiang J, 2017, INFORM SOFTWARE TECH, V84, P48, DOI 10.1016/j.infsof.2016.10.006
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Jones J. S., 2019, LEARN USE ETA COEFFI
   Kar AK, 2020, INT J INFORM MANAGE, V54, DOI 10.1016/j.ijinfomgt.2020.102205
   Khadke N., 2012, PREDICTING ACCEPTANC
   Khalajzadeh H., 2022, ARXIV
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kononenko O, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P124, DOI 10.1145/3183519.3183542
   Kovalenko V, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P29, DOI 10.1145/3195836.3195842
   Langsrud Y, 2003, STAT COMPUT, V13, P163, DOI 10.1023/A:1023260610025
   Lee A, 2017, INT SYMP EMP SOFTWAR, P1, DOI 10.1109/ESEM.2017.7
   Legay D, 2018, Arxiv, DOI arXiv:1812.06269
   Li ZX, 2022, IEEE T SOFTWARE ENG, V48, P2173, DOI 10.1109/TSE.2021.3053403
   Liu ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P176, DOI 10.1109/ASE.2019.00026
   Lu X, 2018, Arxiv, DOI arXiv:1812.04863
   Maass W, 2018, J ASSOC INF SYST, V19, P1253, DOI 10.17705/1jais.00526
   Maddila C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P874, DOI 10.1145/3338906.3340457
   Ortu M, 2019, 2019 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2019), P46, DOI 10.1109/SEmotion.2019.00017
   Overney C, 2020, PROC INT CONF SOFTW, P1209, DOI 10.1145/3377811.3380410
   Padhye R., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P332, DOI 10.1145/2597073.2597113
   Pendharkar PC, 2007, INFORM TECHNOL MANAG, V8, P253, DOI 10.1007/s10799-006-0005-3
   Peng ZH, 2019, CCF T PERVAS COMPUT, V1, P190, DOI 10.1007/s42486-019-00013-2
   Pinto G, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P110, DOI 10.1145/3195836.3195858
   Pooput P, 2018, PROCEEDINGS OF 2018 VII INTERNATIONAL CONFERENCE ON NETWORK, COMMUNICATION AND COMPUTING (ICNCC 2018), P70, DOI 10.1145/3301326.3301380
   Rahman M.M., 2014, P 11 WORKING C MININ, P364, DOI DOI 10.1145/2597073.2597121
   Rastogi A, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240504
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Shull F, 2008, IEEE SOFTWARE, V25, P88, DOI 10.1109/MS.2008.7
   Soares DM, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1541, DOI 10.1145/2695664.2695856
   Soares DM, 2015, 2015 IEEE 14TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P960, DOI 10.1109/ICMLA.2015.41
   StatsTest.com, CRAM 5
   Steinmacher I, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P256, DOI 10.1145/3180155.3180208
   Tao YD, 2014, PROC IEEE INT CONF S, P271, DOI 10.1109/ICSME.2014.49
   Terrell J, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.111
   Tonidandel S, 2011, J BUS PSYCHOL, V26, P1, DOI 10.1007/s10869-010-9204-3
   Trau RNC, 2012, ACAD MANAG LEARN EDU, V11, P314, DOI 10.5465/amle.2012.0070
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Tsay J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P144, DOI 10.1145/2635868.2635882
   van der Veen E, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P357, DOI 10.1109/MSR.2015.40
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Vasilescu B, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P514, DOI 10.1109/MSR.2015.77
   Vasilescu B, 2014, INTERACT COMPUT, V26, P488, DOI 10.1093/iwc/iwt047
   Vogel L., 2020, GERRIT CODE REV TUTO
   Wang Q., 2019, P 11 AS PAC S INT, P1
   Xin Tan, 2019, Proceedings of the ACM on Human-Computer Interaction, V3, DOI 10.1145/3359210
   Yu Y, 2018, IEEE WORK CONF MIN S, P22, DOI 10.1145/3196398.3196455
   Yu Y, 2016, SCI CHINA INFORM SCI, V59, DOI 10.1007/s11432-016-5595-8
   Yue Yu, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P335, DOI 10.1109/APSEC.2014.57
   Zampetti F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P38, DOI [10.1109/SANER.2019.8667996, 10.1109/saner.2019.8667996]
   Zhang TY, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P755, DOI 10.1145/2635868.2661675
   Zhang X, 2022, EUR J SOIL SCI, V73, DOI 10.1111/ejss.13197
   Zhang XH, 2020, IEEE WORK CONF MIN S, P543, DOI 10.1145/3379597.3387489
   Zhang YX, 2021, IEEE T SOFTWARE ENG, V47, P2242, DOI 10.1109/TSE.2019.2946156
   Zhang Z, 2020, TECHNICAL REPORT
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
   Zhewei Hu, 2019, SIGCSE '19: Proceedings of the 50th ACM Technical Symposium on Computer Science Education, P1262, DOI 10.1145/3287324.3293787
   Zhou MH, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2876443
NR 103
TC 7
Z9 8
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 849
EP 871
DI 10.1109/TSE.2022.3165056
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900021
OA Green Published
DA 2024-07-18
ER

PT J
AU Hussain, W
   Shahin, M
   Hoda, R
   Whittle, J
   Perera, H
   Nurwidyantoro, A
   Shams, RA
   Oliver, G
AF Hussain, Waqar
   Shahin, Mojtaba
   Hoda, Rashina
   Whittle, Jon
   Perera, Harsha
   Nurwidyantoro, Arif
   Shams, Rifat Ara
   Oliver, Gillian
TI How Can Human Values be Addressed in Agile Methods? A Case Study on SAFe
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Human values; scaled agile framework (SAFe); agile methods; case study
ID SOFTWARE-DEVELOPMENT; CHALLENGES; CULTURE
AB Agile methods are predominantly focused on delivering business values. But can Agile methods be adapted to effectively address and deliver human values such as social justice, privacy, and sustainability in the software they produce? Human values are what an individual or a society considers important in life. Ignoring these human values in software can pose difficulties or risks for all stakeholders (e.g., user dissatisfaction, reputation damage, financial loss). To answer this question, we selected the Scaled Agile Framework (SAFe), one of the most commonly used Agile methods in the industry, and conducted a qualitative case study to identify possible intervention points within SAFe that are the most natural to address and integrate human values in software. We present five high-level empirically-justified sets of interventions in SAFe: artefacts, roles, ceremonies, practices, and culture. We elaborate how some current Agile artefacts (e.g., user story), roles (e.g., product owner), ceremonies (e.g., stand-up meeting), and practices (e.g., business-facing testing) in SAFe can be modified to support the inclusion of human values in software. Further, our study suggests new and exclusive values-based artefacts (e.g., legislative requirement), ceremonies (e.g., values conversation), roles (e.g., values champion), and cultural practices (e.g., induction and hiring) to be introduced in SAFe for this purpose. Guided by our findings, we argue that existing Agile methods can account for human values in software delivery with some evolutionary adaptations.
C1 [Hussain, Waqar; Whittle, Jon; Perera, Harsha] CSIROs Data61, Clayton, Vic 3168, Australia.
   [Shahin, Mojtaba] MIT Univ, Melbourne, Vic 3000, Australia.
   [Hoda, Rashina; Nurwidyantoro, Arif; Shams, Rifat Ara; Oliver, Gillian] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
C3 Commonwealth Scientific & Industrial Research Organisation (CSIRO);
   Monash University
RP Hussain, W (corresponding author), CSIROs Data61, Clayton, Vic 3168, Australia.
EM Waqar.Hussain@data61.csiro.au; Mojtaba.Shahin@monash.edu;
   Rashina.Hoda@monash.edu; Jon.Whittle@data61.csiro.au;
   Harsha.Perera@data61.csiro.au; Arif.Nurwidyantoro@monash.edu;
   Rifat.Shams@monash.edu; Gillian.Oliver@monash.edu
RI Oliver, Gillian C/A-7845-2010; Nurwidyantoro, Arif/GOP-1594-2022
OI Nurwidyantoro, Arif/0000-0001-8683-3078
CR Abrahamsson P., 2002, Agile Software Development Methods: Review and Analysis
   Alahyari H, 2017, J SYST SOFTWARE, V125, P271, DOI 10.1016/j.jss.2016.12.007
   Aldewereld Huib, 2015, Design for values information and communication technologies in software development, P831
   Anda B., 2002, SEKE 02, P127
   [Anonymous], 2018, SCALED AGILE FRAMEWO
   [Anonymous], 2012, Disciplined agile delivery: A practitioner's guide to agile software delivery in the enterprise
   [Anonymous], 1993, INTERACT 93 CHI 93 C
   Augustine S, 2005, COMMUN ACM, V48, P85, DOI 10.1145/1101779.1101781
   Babb J, 2014, IEEE SOFTWARE, V31, P51, DOI 10.1109/MS.2014.54
   Baumeister RF, 1996, J ADOLESCENCE, V19, P405, DOI 10.1006/jado.1996.0039
   Beck K., 2000, EXTREME PROGRAMMING
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   Bouman T, 2018, FRONT PSYCHOL, V9, DOI 10.3389/fpsyg.2018.00564
   Bradshaw Samantha, 2019, The global disinformation order: 2019 Global inventory of organised social media manipulation
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Brhel M, 2015, INFORM SOFTWARE TECH, V61, P163, DOI 10.1016/j.infsof.2015.01.004
   Brykczynski B., 1999, Software Engineering Notes, V24, P82, DOI 10.1145/308769.308798
   Carter N, 2014, ONCOL NURS FORUM, V41, P545, DOI 10.1188/14.ONF.545-547
   Cervone H. Frank, 2011, OCLC Systems & Services, V27, P18, DOI 10.1108/10650751111106528
   Clay-Williams R, 2015, BMJ QUAL SAF, V24, P428, DOI 10.1136/bmjqs-2015-003957
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Cockburn A., 2004, Crystal clear: A human-powered methodology for small teams: A human-powered methodology for small teams
   CollabNet VersionOne, 2018, 13 ANN STAT AG REP
   Conboy K, 2019, IEEE SOFTWARE, V36, P44, DOI 10.1109/MS.2018.2884865
   Danisman A, 2010, EUR J WORK ORGAN PSY, V19, P200, DOI 10.1080/13594320902850541
   Davis Janet, 2015, HDB ETHICS VALUES TE, P11, DOI [DOI 10.1007/978-94-007-6970-0_3, 10.1007/978-94-007-6970-0_3]
   Detweiler C., 2014, P REFSQ WORKSH, P2
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ebert C, 2017, IEEE SOFTWARE, V34, P98, DOI 10.1109/MS.2017.4121226
   European Parliament and Council of the European Union, 2016, Off. J., V59, P1
   Fagerholm F., 2014, EXAMINING STRUCTURE, P218, DOI [10.1007/978-3-319-06862-6_15, DOI 10.1007/978-3-319-06862-6_15]
   Ferrario MA, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P553, DOI 10.1145/2889160.2889219
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   Fowler M., 2001, Software Development, V9, P28
   Friedman B., 2002, VALUE SENSITIVE DESI, V2-12
   FURNHAM A, 1986, PERS INDIV DIFFER, V7, P385, DOI 10.1016/0191-8869(86)90014-0
   Galhotra S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P498, DOI 10.1145/3106237.3106277
   Gemunden HG., 2007, CREAT INNOV MANAG, V16, P408, DOI [DOI 10.1111/J.1467-8691.2007.00451.X, 10.1111/j.1467-8691.2007.00451.x]
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   GUBA EG, 1981, ECTJ-EDUC COMMUN TEC, V29, P75
   Hoda R, 2018, IEEE SOFTWARE, V35, P58, DOI 10.1109/MS.2018.290111318
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   Hollweck T, 2015, CAN J PROGRAM EVAL, V30, P108, DOI 10.3138/cjpe.30.1.108
   Hove SE, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P201
   Hussain W, 2022, IEEE T SOFTWARE ENG, V48, P1818, DOI 10.1109/TSE.2020.3038802
   Johnson D.G., 1995, COMPUTERS ETHICS SOC
   Kalliamvakou E, 2019, IEEE T SOFTWARE ENG, V45, P87, DOI 10.1109/TSE.2017.2768368
   Kratzer J., 2017, HDB RES LEADERSHIP C, P182
   Kuper A., 2013, The Social Science Encyclopedia
   Larman C., 2005, LESS FRAMEWORK
   Lawrence C., 2012, PROC EUR C INF SYST, P196
   Leffingwell D., 2018, SAFE 4 5 REFERENCE G
   Lencioni PM, 2002, HARVARD BUS REV, V80, P113
   Lichtenthaler U, 2009, J PROD INNOVAT MANAG, V26, P371, DOI 10.1111/j.1540-5885.2009.00666.x
   Malhotra N.K. Birks., 2007, MARKETING RES APPL A, DOI DOI 10.1108/S1548-6435(2007)3
   McHugh O, 2012, IEEE SOFTWARE, V29, P71, DOI 10.1109/MS.2011.118
   Merriam S. B., 2001, Revised and expanded from case study research in education
   Miller KW, 2005, IEEE TECHNOL SOC MAG, V24, P36, DOI 10.1109/MTAS.2005.1563500
   Miller R., 2006, TR200624 N CAR STAT
   Mills A.J., 2009, Encyclopedia of Case Study Research
   Mussbacher Gunter, 2020, 2020 IEEE Tenth International Model-Driven Requirements Engineering (MoDRE), P73, DOI 10.1109/MoDRE51215.2020.00015
   Neate R., 2018, 119BN WIPED FACEBOOK
   Obie HO, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P29, DOI 10.1109/ICSE-SEIS52602.2021.00012
   Paasivaara M, 2018, EMPIR SOFTW ENG, V23, P2550, DOI 10.1007/s10664-017-9555-8
   Palacin V, 2021, INT J HUM-COMPUT ST, V149, DOI 10.1016/j.ijhcs.2021.102605
   Palmer E., 1991, P 6 INT S AVIATION P, P178
   Patton M.Q., 2002, Qualitative research and evaluation methods, P3
   Perera H, 2020, PROC INT CONF SOFTW, P409, DOI 10.1145/3377811.3380393
   Perera H, 2020, INT REQUIR ENG CONF, P192, DOI 10.1109/RE48521.2020.00030
   Philbeck T.E., 2018, Values, ethics and innovation: Rethinking technological development in the fourth industrial revolution
   Ponelis S. R., 2015, International Journal of Doctoral Studies, V10, P535, DOI DOI 10.28945/2339
   Rajkomar A, 2019, NEW ENGL J MED, V380, P1347, DOI 10.1056/NEJMra1814259
   Raso F. A., 2018, 20186 BERKM KLEIN CT
   Rokeach M., 1973, NATURE HUMAN VALUES
   Rubin Kenneth S., 2012, Essential Scrum: A practical guide to the most popular Agile process, V1st
   Schön EM, 2017, COMPUT STAND INTER, V49, P79, DOI 10.1016/j.csi.2016.08.011
   Schunk D.H., 2012, APA educational psychology handbook, P10, DOI [DOI 10.1037/13273-005, https://doi.org/10.1037/13273-005]
   SCHWARTZ SH, 1994, J SOC ISSUES, V50, P19, DOI 10.1111/j.1540-4560.1994.tb01196.x
   Schwartz SH, 2001, J CROSS CULT PSYCHOL, V32, P268, DOI 10.1177/0022022101032003002
   SCHWARTZ SH, 1992, ADV EXP SOC PSYCHOL, V25, P1, DOI 10.1016/s0065-2601(08)60281-6
   SCHWARTZ SH, 1987, J PERS SOC PSYCHOL, V53, P550, DOI 10.1037/0022-3514.53.3.550
   Seawright J, 2008, POLIT RES QUART, V61, P294, DOI 10.1177/1065912907313077
   Shane S., 2018, BUSINESS WAR GOOGLE
   Shneiderman B., 1990, Computers & Society, V20, P1, DOI 10.1145/97351.97360
   Sirur S, 2018, MPS'18: PROCEEDINGS OF THE 2ND INTERNATIONAL WORKSHOP ON MULTIMEDIA PRIVACY AND SECURITY, P88, DOI 10.1145/3267357.3267368
   Smollan RK, 2009, J CHANG MANAG, V9, P435, DOI 10.1080/14697010903360632
   Stol KJ, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2533685
   Sutcliffe A, 2011, REQUIR ENG, V16, P267, DOI 10.1007/s00766-011-0118-z
   Tellis W., 1997, The Qualitative Report, V3, P1, DOI [10.46743/2160-3715/1997.2024, DOI 10.46743/2160-3715/1997.2024]
   Thew S, 2018, REQUIR ENG, V23, P443, DOI 10.1007/s00766-017-0273-y
   Turetken O, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1796
   Usher E.L., 2018, HDB SELF REGULATION, V2nd, P19, DOI [DOI 10.4324/9781315697048-2, 10.4324/9781315697048-2]
   Van den Hoven J., 2015, HDB ETHICS VALUES TE, DOI DOI 10.1007/978-94-007-6970-0
   Van den Hoven Jeroen., 2007, The information society: Innovation, legitimacy, ethics and democracy in honor of Professor Jacques Berleur, P67
   Van der Velden M., 2015, HDB ETHICS VALUES TE, P1
   Whittle J, 2021, IEEE SOFTWARE, V38, P106, DOI 10.1109/MS.2019.2956701
   Whittle J, 2019, IEEE SOFTWARE, V36, P112, DOI 10.1109/MS.2019.2897397
   Williams L, 2003, COMPUTER, V36, P39, DOI 10.1109/MC.2003.1204373
   WINNER L, 1980, DAEDALUS, V109, P121
   Winter E, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267427
NR 102
TC 10
Z9 11
U1 5
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 5158
EP 5175
DI 10.1109/TSE.2022.3140230
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600023
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Lu, Y
   Mao, XJ
   Zhou, MH
   Zhang, Y
   Li, ZD
   Wang, T
   Yin, G
   Wang, HM
AF Lu, Yao
   Mao, Xinjun
   Zhou, Minghui
   Zhang, Yang
   Li, Zude
   Wang, Tao
   Yin, Gang
   Wang, Huaimin
TI Motivation Under Gamification: An Empirical Study of Developers'
   Motivations and Contributions in Stack Overflow
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Motivation; gamification; stack overflow; self-determination theory
ID SELF-DETERMINATION; INTRINSIC MOTIVATION; SOFTWARE DEVELOPERS; REWARDS;
   PARTICIPATION; COMMUNITIES
AB To encourage developers' volunteer contributions, modern programming question and answer (Q & A) sites like Stack Overflow (SO) employ gamified incentive mechanisms such as reputation and badges. Understanding developers' motivations in the presence of gamification and the relationship between their motivations and behavioral outcomes is crucial for community building and designing good incentive mechanisms. Grounded on self-determination theory, we conducted a survey with 938 developers who participate in SO to understand their participation motivations and incentive perceptions. By connecting the survey responses with the SO data, we quantitatively analyzed how the developers' motivations and satisfaction of needs relate to their effort and contribution quality. Our main findings are as follows: (1) despite the presence of gamified incentive mechanisms, developers are mainly motivated by intrinsic motivation to participate in SO; (2) developers who have strong motivations to gain gamification rewards are associated with higher intrinsic and integrated motivations, while developers with more development experiences are less motivated by the gamified incentives; (3) both extrinsic motivations (in terms of career prospects) and intrinsic motivations (regarding self-improvement and helping others) can motivate developers to make high-quantity and high-quality contributions; and (4) high-level satisfaction of needs for competency and autonomy has a positive effect on developers making high-quantity and high-quality contributions and addressing difficult problems. Based on these findings, we discuss implications for developer motivation and gamification in the crowdsourcing context and for the mechanism design of gamified crowdsourced platforms.
C1 [Lu, Yao; Mao, Xinjun; Zhang, Yang; Wang, Tao; Yin, Gang; Wang, Huaimin] Natl Univ Def Technol, Coll Comp, Changsha 410073, Peoples R China.
   [Zhou, Minghui] Peking Univ, Sch Elect Engn & Comp Sci, Beijing, Peoples R China.
   [Li, Zude] Cent South Univ, Sch Informat Sci & Engn, Key Lab High Confidence Software Technol, Changsha, Peoples R China.
C3 National University of Defense Technology - China; Peking University;
   Central South University
RP Lu, Y (corresponding author), Natl Univ Def Technol, Coll Comp, Changsha 410073, Peoples R China.
EM luyao08@nudt.edu.cn; xjmao@nudt.edu.cn; zhmh@pku.edu.cn;
   yangzhang15@nudt.edu.cn; zli@csu.edu.cn; taowang2005@nudt.edu.cn;
   gangyin@nudt.edu.cn; hmwang@nudt.edu.cn
RI MAO, xinjun/GSI-8779-2022
FU National Key R&D Program of China [2018YFB1004202]; National University
   of Defense Technology Research Project [ZK21-13]
FX This work was supported by the National Key R & D Program of China under
   Grant 2018YFB1004202 and the National University of Defense Technology
   Research Project under Grant ZK21-13.
CR Anderson A, 2013, P 22 INT C WORLD WID, DOI DOI 10.1145/2488388.2488398
   [Anonymous], 2014, Proceedings of the 17th ACM conference on Computer supported cooperative work social computing
   Bagozzi RP, 1998, Journal of the academy of marketing science, V16, P76
   Barclay D., 1995, TECHNOL STUDIES, V2, P285
   Bosu A, 2013, IEEE WORK CONF MIN S, P89, DOI 10.1109/MSR.2013.6624013
   Burel G., 2012, AUTOMATIC IDENTIFICA
   CALDER BJ, 1975, J PERS SOC PSYCHOL, V31, P599, DOI 10.1037/h0077100
   Capiluppi A, 2013, IEEE SOFTWARE, V30, P45, DOI 10.1109/MS.2012.169
   Cavusoglu H., 2015, P ACM C COMPUTER SUP, V2015, P171, DOI DOI 10.1145/2685553.2698999
   Chin WW, 1998, QUANT METH SER, P295
   Cohen J, 2003, APPL MULTIPLE REGRES, DOI DOI 10.4324/9780203774441
   Curran PG, 2016, J EXP SOC PSYCHOL, V66, P4, DOI 10.1016/j.jesp.2015.07.006
   de Charms R., 1968, PERSONAL CAUSATION
   Deci E.L., 1978, The hidden costs of reward: New perspectives on the psychology of human motivation, P193
   Deci EL, 2000, PSYCHOL INQ, V11, P227, DOI 10.1207/S15327965PLI1104_01
   DECI EL, 1971, J PERS SOC PSYCHOL, V18, P105, DOI 10.1037/h0030644
   Easley David., 2013, P 14 ACM C ELECT COM, P359, DOI DOI 10.1145/2482540.2482571
   Efron B., 1982, SOC IND APPL MATH, V30, DOI DOI 10.1137/1.9781611970319
   França C, 2020, IEEE T SOFTWARE ENG, V46, P118, DOI 10.1109/TSE.2018.2842201
   FREEDMAN JL, 1992, J PERS SOC PSYCHOL, V62, P357, DOI 10.1037/0022-3514.62.3.357
   Gallus J, 2017, MANAGE SCI, V63, P3999, DOI 10.1287/mnsc.2016.2540
   Grant S, 2013, IEEE WORK CONF MIN S, P65, DOI 10.1109/MSR.2013.6624007
   Hamari J, 2014, P ANN HICSS, P3025, DOI 10.1109/HICSS.2014.377
   Hertel G, 2003, RES POLICY, V32, P1159, DOI 10.1016/S0048-7333(03)00047-7
   Huang JL, 2012, J BUS PSYCHOL, V27, P99, DOI 10.1007/s10869-011-9231-8
   Jin Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P434, DOI 10.1109/MSR.2015.57
   Kanfer R., 1990, IND ORG PSYCHOL VOLU, V1, P75, DOI DOI 10.1111/J.1744-6570.1973.TB0
   Ke WL, 2010, J ASSOC INF SYST, V11, P784
   Ke WL, 2009, INT J ELECTRON COMM, V13, P39, DOI 10.2753/JEC1086-4415130403
   Kraut R., 2002, LEADERSHIP DISTANCE, V54, P187
   Kromrey J.D., 1998, Mult. Linear Regres. Viewp., V25, P70
   Lieberman Z., 2015, PROC ANN RES C S AFR, P1
   Lu Y, 2020, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSME46990.2020.00013
   Lu Y, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1918
   Ma WWY, 2017, PROC INT CONF SOFTW, P381, DOI 10.1109/ICSE.2017.42
   Mair P., 2014, RES REP, P1
   Marder A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P450, DOI 10.1109/MSR.2015.61
   McLeod S., 2007, SIMPLY PSYCHOL, V1, P1
   MILLER KA, 1988, CONTEMP SOCIOL, V17, P253, DOI 10.2307/2070638
   Morschheuser B, 2016, P ANN HICSS, P4375, DOI 10.1109/HICSS.2016.543
   redsquare, 2009, NOOB QUEST SIMPL ANS
   Restivo M, 2014, INFORM COMMUN SOC, V17, P451, DOI 10.1080/1369118X.2014.888459
   Richter M, 2014, WHY I NO LONGER CONT
   Roberts JA, 2006, MANAGE SCI, V52, P984, DOI 10.1287/mnsc.1060.0554
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Ryan RM, 2000, AM PSYCHOL, V55, P68, DOI 10.1037/0003-066X.55.1.68
   Seaborn K, 2015, INT J HUM-COMPUT ST, V74, P14, DOI 10.1016/j.ijhcs.2014.09.006
   SIGELMAN L, 1981, PUBLIC OPIN QUART, V45, P199, DOI 10.1086/268650
   van Kloeten O, 2009, FASTEST GUN W PROBLE
   Vasilescu B, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P188, DOI 10.1109/SocialCom.2013.35
   Wei XH, 2015, P ANN HICSS, P3760, DOI 10.1109/HICSS.2015.452
   Werbach K., 2012, For the win: How game thinking can revolutionize your business
   WHITE RW, 1959, PSYCHOL REV, V66, P297, DOI 10.1037/h0040934
   Wilson EB, 1927, J AM STAT ASSOC, V22, P209, DOI 10.2307/2276774
   Yan Li, 2006, SIGMIS CPR'06. Proceedings of the 2006 ACM SIGMIS CPR Conference. Forty Four Years of Computer Personnel Research: Achievements, Challenges and the Future, P34
   Yao Y, 2013, Arxiv, DOI arXiv:1311.6876
   Zhang Y, 2017, SCI CHINA INFORM SCI, V60, DOI 10.1007/s11432-015-1024-6
   Zhao L, 2016, J MANAGE INFORM SYST, V33, P70, DOI 10.1080/07421222.2016.1172459
   Zhao YX, 2014, INFORM SYST FRONT, V16, P417, DOI 10.1007/s10796-012-9350-4
   Zhao YC, 2014, ONLINE INFORM REV, V38, P896, DOI 10.1108/OIR-08-2014-0188
   Zhou MH, 2015, IEEE T SOFTWARE ENG, V41, P82, DOI 10.1109/TSE.2014.2349496
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
   Zikmund WG., 1994, EXPLORING MARKETING, V5th
NR 63
TC 4
Z9 5
U1 9
U2 26
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 4947
EP 4963
DI 10.1109/TSE.2021.3130088
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600011
OA hybrid
DA 2024-07-18
ER

PT J
AU Sharma, S
   Pendharkar, PC
   Karmeshu
AF Sharma, Shachi
   Pendharkar, Parag C.
   Karmeshu
TI Learning Component Size Distributions for Software Cost Estimation:
   Models Based on Arithmetic and Shifted Geometric Means Rules
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Characterizing moments; COCOMO model; component size distribution;
   exponential distribution; gamma distribution; maximum entropy principle;
   power-law; Shannon entropy; software cost estimation
ID SCALE ECONOMIES; POWER-LAWS; FRAMEWORK
AB Understanding software size distribution is critical to software cost estimation using COCOMO model and design of reliable production function model. This paper proposes and validates a theoretical framework based on the maximization of Shannon entropy to learn component size distribution of software systems when partial information about the moments is given. Specification of appropriate moment constraints either in the form of shifted geometric mean or arithmetic mean or both geometric and arithmetic means are considered. The models are validated using 30 real datasets. The analysis reveals that software systems where component sizes depict power-law behavior are governed by shifted geometric mean whereas those systems in which component size distribution shows exponential behavior are described by arithmetic mean. Another type of software system is also considered where the component size distribution is found to depict gamma distribution. Such systems are characterized by specification of both arithmetic and geometric means. The study underlines that the use of modern object-oriented programming languages adheres to power-law distribution indicating the existence of team synergies leading to substantial containment of software costs when compared to the use of traditional procedural programming languages.
C1 [Sharma, Shachi] South Asian Univ, Dept Comp Sci, New Delhi 110021, India.
   [Pendharkar, Parag C.] Penn State Univ Harrisburg, Sch Business Adm, Middletown, PA 17057 USA.
   [Karmeshu] Shiv Nadar Univ, Dept Comp Sci & Engn, Greater Noida 201314, UP, India.
C3 South Asian University (SAU); Pennsylvania Commonwealth System of Higher
   Education (PCSHE); Pennsylvania State University; Shiv Nadar University
RP Sharma, S (corresponding author), South Asian Univ, Dept Comp Sci, New Delhi 110021, India.
EM shachi@sau.int; pxp19@psu.edu; karmeshu@gmail.com
CR Abdulmajeed Ashraf Abdulmunim, 2021, Journal of Physics: Conference Series, V1897, DOI 10.1088/1742-6596/1897/1/012029
   Aigner D., 1977, Journal of Econometrics, V6, P21, DOI [10.1016/0304-4076(77)90052-5, DOI 10.1016/0304-4076(77)90052-5]
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2004, Nonextensive Entropy: Interdisciplinary Applications
   [Anonymous], 1974, Handbook of Mathematical Functions
   [Anonymous], Apache Commons Codec Software Webite
   [Anonymous], APACHE COMMONS CRYPT
   Anoop Sreekumar R. S., 2015, Proceedings of 2015 Global Conference on Communication Technologies (GCCT), P307, DOI 10.1109/GCCT.2015.7342673
   BANKER RD, 1989, IEEE T SOFTWARE ENG, V15, P1199, DOI 10.1109/TSE.1989.559768
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Bell M., 2008, MICHAEL SERVICE ORIE
   Bertsekas D. P., 1997, Journal of the Operational Research Society, V48, P334, DOI 10.1057/palgrave.jors.2600425
   Bielak J, 2000, IEEE SOFTWARE, V17, P27, DOI 10.1109/52.895165
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Clauset A, 2009, SIAM REV, V51, P661, DOI 10.1137/070710111
   Concas G, 2007, IEEE T SOFTWARE ENG, V33, P687, DOI [10.1109/TSE.2007.1019, 10.1109/TSE.2007.1016]
   Cook W, 2011, LECT NOTES COMPUT SC, V6655, P104, DOI 10.1007/978-3-642-20807-2_9
   Dragulescu A, 2001, PHYSICA A, V299, P213, DOI 10.1016/S0378-4371(01)00298-9
   Elsheimy M., C IMPLEMENTATION BAS
   Fadul J.A., 2009, The International Journal of Learning, V16, P211, DOI [10.18848/1447-9494/cgp/v16i04/46223, DOI 10.18848/1447-9494/CGP/V16I04/46223]
   GOLDBERGER AS, 1968, ECONOMETRICA, V36, P464, DOI 10.2307/1909517
   Guttag J.V., 2016, Introduction to Computation and Programming Using python-With Application to Computational Modelling and Understanding Data
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   HANSON DL, 1976, ANN STAT, V4, P1038, DOI 10.1214/aos/1176343640
   Hatton L, 2009, IEEE T SOFTWARE ENG, V35, P566, DOI 10.1109/TSE.2008.105
   Heathcote A, 2000, PSYCHON B REV, V7, P185, DOI 10.3758/BF03212979
   Hills T., 2007, Foundations for the future in mathematics education, P225
   Ioannou CC, 2018, PLOS ONE, V13, DOI 10.1371/journal.pone.0204462
   Jordan Willy, 2019, 2019 International Seminar on Research of Information Technology and Intelligent Systems (ISRITI), P450, DOI 10.1109/ISRITI48646.2019.9034617
   Karmeshu, 2006, STUD FUZZ SOFT COMP, V206, P162
   Karmeshu, 2006, IEEE COMMUN LETT, V10, P585, DOI 10.1109/LCOMM.2006.060370
   Karmeshu, 2006, IEEE COMMUN LETT, V10, P34, DOI [10.1109/LCOMM.2006.1576561, 10.1109/LCOMM.2006.01018]
   Karmeshu, 2003, ENTROPY MEASURES MAX
   Doan KH, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P774, DOI 10.1109/MODELS-C.2019.00121
   Kitchenham BA, 2002, INFORM SOFTWARE TECH, V44, P13, DOI 10.1016/S0950-5849(01)00204-X
   Li YP, 2019, J INTELL MANUF, V30, P2375, DOI 10.1007/s10845-018-1396-9
   Madirolas G., 2014, COLLECTIVE INTELL
   Malaiya YK, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P62, DOI 10.1109/ISSRE.2000.885861
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   MASSEY FJ, 1951, J AM STAT ASSOC, V46, P68, DOI 10.2307/2280095
   Nan N, 2009, IEEE T SOFTWARE ENG, V35, P624, DOI 10.1109/TSE.2009.18
   Newman MEJ, 2005, CONTEMP PHYS, V46, P323, DOI 10.1080/00107510500052444
   Pai DR, 2015, INFORM TECHNOL MANAG, V16, P235, DOI 10.1007/s10799-015-0234-4
   Pan WF, 2019, COMPLEXITY, V2019, DOI 10.1155/2019/9414162
   Pareto V., 1971, Manuale di Economia Politica
   Pendharkar PC, 2008, INFORM SOFTWARE TECH, V50, P1181, DOI 10.1016/j.infsof.2007.10.019
   Pendharkar PC, 2007, INFORM TECHNOL MANAG, V8, P253, DOI 10.1007/s10799-006-0005-3
   Pendharkar PC, 2015, J COMPUT SCI-NETH, V7, P37, DOI 10.1016/j.jocs.2015.01.001
   Pendharkar PC, 2006, EUR J OPER RES, V172, P1040, DOI 10.1016/j.ejor.2004.10.023
   Peterson J, 2013, P NATL ACAD SCI USA, V110, P20380, DOI 10.1073/pnas.1320578110
   Ping Yu, 2002, Proceedings of the Sixth European Conference on Software Maintenance and Reengineering, P99, DOI 10.1109/CSMR.2002.995794
   Sharma S, 2009, IEEE COMMUN LETT, V13, P971, DOI 10.1109/LCOMM.2009.12.091768
   SIMON HA, 1955, BIOMETRIKA, V42, P425
   Stevanetic S, 2014, INT CONF QUAL SOFTW, P353, DOI 10.1109/QSIC.2014.21
   Trivedi Kishor S, 2008, Probability & statistics with reliability, queuing and computer science applications
   WEKA, ML WEK
   WHITT W, 1983, MANAGE SCI, V29, P395, DOI 10.1287/mnsc.29.4.395
   WITHROW C, 1990, IEEE SOFTWARE, V7, P26, DOI 10.1109/52.43046
NR 58
TC 0
Z9 0
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 5136
EP 5147
DI 10.1109/TSE.2021.3139216
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600021
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Pérez, F
   Font, J
   Arcega, L
   Cetina, C
AF Perez, Francisca
   Font, Jaime
   Arcega, Lorena
   Cetina, Carlos
TI Empowering the Human as the Fitness Function in Search-Based
   Model-Driven Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Software engineering; Analytical models; Task analysis;
   Sociology; Model driven engineering; Maintenance engineering;
   Model-driven engineering; search-based software engineering; automatic
   query reformulations; interactive SBSE
ID FEATURE LOCATION; SOFTWARE; REQUIREMENTS; LANGUAGE; OPTIMIZATION;
   ALGORITHMS; GENERATION; DESIGN; TESTS; GUIDE
AB In Search-Based Software Engineering, more than 100 works have involved the human in the search process to obtain better results. However, the case where the human completely replaces the fitness function remains neglected. There is a good reason for that; no matter how intelligent the human is, humans cannot assess millions of candidate solutions as heuristics do. In this work, we study the influence of using the Human as the Fitness Function (HaFF) on the quality of the results. To do that, we focus on Search-Based Model-Driven Engineering (SBMDE) because inspecting models should require less human effort than inspecting code thanks to the abstraction of models. Therefore, we analyze the impact of HaFF in a real-world industrial case study of feature location in models. Furthermore, we also consider a reformulation operation (replacement) in the evaluation because a recent work reported that this operation significantly reduces the number of iterations required in comparison to the widespread crossover and mutation operations. The combination of HaFF and the reformulation operation (HaFF_R) improves the results of the best baseline by 0.15% in recall and 14.26% in precision. Analyzing the results, we learned how to better leverage HaFF_R, which increased the improvement with regard to the best baseline to 1.15% in recall and 20.05% in precision. HaFF_R significantly improves precision because humans are immune to the main limitations of the baselines: vocabulary mismatch and tacit knowledge. A focus group confirmed the acceptance of HaFF. These results are relevant for SBMDE because feature location is one of the main activities performed during maintenance and evolution. Our results, and what we learned from them, can also motivate and help other researchers to explore the benefits of HaFF. In fact, we provide a guideline that further discusses how to apply HaFF to other software engineering problems.
C1 [Perez, Francisca; Font, Jaime; Arcega, Lorena; Cetina, Carlos] Univ San Jorge, SVIT Res Grp, Zaragoza 50830, Spain.
   [Cetina, Carlos] UCL, London WC1E 6BT, England.
C3 Universidad San Jorge; University of London; University College London
RP Pérez, F (corresponding author), Univ San Jorge, SVIT Res Grp, Zaragoza 50830, Spain.
EM mfperez@usj.es; jfont@usj.es; larcega@usj.es; ccetina@usj.es
RI Pérez, Francisca/KPH-0503-2024; Arcega, Lorena/AAA-8929-2022; Cetina,
   Carlos/P-8682-2017
OI Arcega, Lorena/0000-0002-2464-8894; Perez,
   Francisca/0000-0001-6371-915X; Cetina, Carlos/0000-0001-8542-5515
FU Ministry of Economy and Competitiveness (MINECO); ERDF funds under the
   Project ALPS [RTI2018-096411-B-I00]; Gobierno de Aragon (Spain)
   [S05_20D]
FX This work was supported in part by the Ministry of Economy and
   Competitiveness (MINECO) through the Spanish National RthornDthorni Plan
   and ERDF funds under the Project ALPS under Grant RTI2018-096411-B-I00,
   and in part by the Gobierno de Aragon (Spain) (Research Group S05_20D).
CR Alkhazi B, 2020, AUTOMAT SOFTW ENG, V27, P91, DOI 10.1007/s10515-020-00271-w
   Alkhazi B, 2020, INFORM SOFTWARE TECH, V120, DOI 10.1016/j.infsof.2019.106243
   Amal B, 2014, LECT NOTES COMPUT SC, V8636, P31
   Ampatzoglou A, 2010, INFORM SOFTWARE TECH, V52, P888, DOI 10.1016/j.infsof.2010.05.004
   [Anonymous], ENGLISH PORTER2 STEM
   [Anonymous], MODEL FRAGMENT REFOR
   [Anonymous], APACHE OPENNLP TOOLK
   Araújo AA, 2017, AUTOMAT SOFTW ENG, V24, P623, DOI 10.1007/s10515-016-0200-3
   Arcega L., 2015, PROC INT WORKSHOP MO, P51
   Arcega L, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3472616
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Asadi M, 2016, EMPIR SOFTW ENG, V21, P1706, DOI 10.1007/s10664-014-9353-5
   Ballarín M, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P189, DOI 10.1145/3239372.3239397
   Barros Mrciode Oliveira., 2011, RELATE DIA, V5
   Batot E, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P374, DOI 10.1145/2976767.2976785
   Bindewald CV, 2019, PROCEEDINGS OF THE XXXIII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2019, P387, DOI 10.1145/3350768.3351993
   Binkley D, 2015, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2015.7335396
   Birtolo C, 2009, WOR CONG NAT BIOL, P348
   Blasco D, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110804
   Boussaïd I, 2017, AUTOMAT SOFTW ENG, V24, P233, DOI 10.1007/s10515-017-0215-4
   Brambilla M., 2012, MODEL DRIVEN SOFTWAR, DOI [10.1007/978-3-031-02546-4, DOI 10.1007/978-3-031-02546-4]
   Calinescu R, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P131, DOI 10.1109/ICSA.2017.16
   Carpineto C, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2071389.2071390
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Collins Harry, 2010, Tacit and explicit knowledge
   CONOVER WJ, 1999, PRACTICAL NONPARAMET
   Debreceni C, 2016, LECT NOTES COMPUT SC, V9633, P104, DOI 10.1007/978-3-662-49665-7_7
   DILLON M, 1983, INFORM PROCESS MANAG, V19, P402, DOI 10.1016/0306-4573(83)90062-6
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Falessi D, 2013, IEEE T SOFTWARE ENG, V39, P18, DOI 10.1109/TSE.2011.122
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Fleck M, 2016, J SOFTW-EVOL PROC, V28, P1081, DOI 10.1002/smr.1804
   Font J, 2021, SOFTW SYST MODEL, V20, P1653, DOI 10.1007/s10270-021-00870-5
   Font J, 2018, IEEE T EVOLUT COMPUT, V22, P363, DOI 10.1109/TEVC.2017.2751100
   Font J, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P272, DOI 10.1145/2976767.2976789
   García S, 2010, INFORM SCIENCES, V180, P2044, DOI 10.1016/j.ins.2009.12.010
   Ghannem Adnane, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P96, DOI 10.1007/978-3-642-39742-4_9
   Gibiec M., 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, ASE '10, P245
   Gómez-Abajo P, 2017, COMPUT LANG SYST STR, V49, P152, DOI 10.1016/j.cl.2016.11.001
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hofmann T, 1999, SIGIR'99: PROCEEDINGS OF 22ND INTERNATIONAL CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P50, DOI 10.1145/312624.312649
   Hulth A, 2003, PROCEEDINGS OF THE 2003 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING, P216
   Jakubovski HL, 2019, J SYST SOFTWARE, V151, P194, DOI 10.1016/j.jss.2019.02.028
   Jinshui Wang, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P213, DOI 10.1109/ICSM.2011.6080788
   Kessentini M, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P51, DOI 10.1109/CMSBSE.2013.6604438
   Kessentini W, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P101, DOI 10.1145/3239372.3239375
   Kolchin A., 2018, Problems Program, V2-3, P115
   Kruger Jacob, 2019, Software Engineering for Variability Intensive Systems, P153, DOI 10.1201/9780429022067-7
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   Lapeña R, 2017, ACM SIGPLAN NOTICES, V52, P63, DOI 10.1145/3170492.3136052
   Le Calvar T, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1837, DOI 10.1145/3297280.3297461
   Lim Siew Mooi, 2017, International Journal of Machine Learning and Computing, V7, P9, DOI 10.18178/ijmlc.2017.7.1.611
   Lin Y, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P535, DOI 10.1145/2950290.2950317
   Lu H, 2016, IEEE INT CONF SOFTW, P57, DOI 10.1109/ICST.2016.17
   Marcén AC, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P57, DOI 10.1145/3109729.3109734
   Marculescu B, 2018, J SYST SOFTWARE, V142, P156, DOI 10.1016/j.jss.2018.04.061
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Martinez J, 2017, HUM-COMPUT INT-SPRIN, P81, DOI 10.1007/978-3-319-60947-8_3
   Martinez J, 2018, LECT NOTES COMPUT SC, V10826, P23, DOI 10.1007/978-3-319-90421-4_2
   Rahman MM, 2018, Arxiv, DOI arXiv:1807.04475
   Pérez F, 2022, IEEE T SOFTWARE ENG, V48, P713, DOI 10.1109/TSE.2020.3000520
   Pérez F, 2019, AUTOMAT SOFTW ENG, V26, P161, DOI 10.1007/s10515-019-00251-9
   Pérez F, 2018, INFORM SOFTWARE TECH, V103, P188, DOI 10.1016/j.infsof.2018.06.017
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Procter S, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P117, DOI 10.1109/MODELS.2019.000-9
   Ramírez A, 2019, IEEE T SOFTWARE ENG, V45, P760, DOI 10.1109/TSE.2018.2803055
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Salton G., 1971, SMART RETRIEVAL SYST
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   Seltman H., EXPT DESIGN ANAL
   Silva D. N. A. d., 2020, PROC 15 IBERIAN C IN, P1
   Simons CL, 2014, SWARM INTELL-US, V8, P139, DOI 10.1007/s11721-014-0094-2
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Steinberg D., 2009, EMF ECLIPSE MODELING
   Störrle H, 2014, LECT NOTES COMPUT SC, V8767, P518, DOI 10.1007/978-3-319-11653-2_32
   Takagi H, 2001, P IEEE, V89, P1275, DOI 10.1109/5.949485
   Tonella P, 2013, INFORM SOFTWARE TECH, V55, P173, DOI 10.1016/j.infsof.2012.07.003
   Troiano L, 2016, SPRINGERPLUS, V5, DOI 10.1186/s40064-016-2659-6
   van Rooijen L, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P3, DOI [10.1109/REW.2016.23, 10.1109/REW.2016.015]
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Yue T, 2016, PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2016), P691
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
   Zubcoff J, 2019, INFORM SOFTWARE TECH, V106, P68, DOI 10.1016/j.infsof.2018.09.004
NR 87
TC 4
Z9 4
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4553
EP 4568
DI 10.1109/TSE.2021.3121253
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800018
DA 2024-07-18
ER

PT J
AU Abid, C
   Rzig, D
   Ferreira, T
   Kessentini, M
   Sharma, T
AF Abid, Chaima
   Rzig, Dhia
   Ferreira, Thiago
   Kessentini, Marouane
   Sharma, Tushar
TI X-SBR: On the Use of the History of Refactorings for Explainable
   Search-Based Refactoring and Intelligent Change Operators
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Measurement; Statistics; Sociology; Tools; History; Software systems;
   Software engineering; Refactoring recommendations; search-based software
   engineering; QMOOD metrics; multi-objective search
ID MULTIOBJECTIVE EVOLUTIONARY ALGORITHMS; GENETIC ALGORITHM; MODEL
AB Refactoring is widely adopted nowadays in industry to restructure the code and meet high quality while preserving the external behavior. Many of the existing refactoring tools and research are based on search-based techniques to find relevant recommendations by finding trade-offs between different quality attributes. While these techniques show promising results on open-source and industry projects, they lack explanations of the recommended changes which can impact their trustworthiness when adopted in practice by developers. Furthermore, most of the adopted search-based techniques are based on random population generation and random change operators (e.g., crossover and mutation). However, it is critical to understand which good refactoring patterns may exist when applying change operators to either keep them or exchange with other solutions rather than destroying them with random changes. In this paper, we propose knowledge-informed change operators and an improved seeding mechanism that we integrated in a multi-objective genetic algorithm. We also provide explanations for refactoring solutions. First, we generate association rules using the Apriori algorithm to find relationships between applied refactorings in previous commits, their locations, and their rationale (quality improvements). Then, we use these rules to 1) initialize the population, 2) improve the change operators and seeding mechanisms of the multi-objective search in order to preserve and exchange good patterns in the refactoring solutions, and 3) explain how a sequence of refactorings collaborate in order to improve the quality of the system (e.g., fitness functions). The validation on large open-source systems shows that X-SBR provides refactoring solutions of a better quality than those given by the state-of-the-art techniques in terms of reducing the invalid refactorings, improving the quality, and increasing trustworthiness of the developers in the suggested refactorings via the provided explanations.
C1 [Abid, Chaima; Rzig, Dhia; Ferreira, Thiago; Kessentini, Marouane] Univ Michigan, Dept Comp & Informat Sci, Dearborn, MI 48128 USA.
   [Sharma, Tushar] Siemens Corp Technol, Charlotte, NC 28227 USA.
C3 University of Michigan System; University of Michigan; Siemens AG
RP Kessentini, M (corresponding author), Univ Michigan, Dept Comp & Informat Sci, Dearborn, MI 48128 USA.
EM cabid@umich.edu; dhiarzig@umich.edu; thiagod@umich.edu;
   marouane@umich.edu; tusharsharma@ieee.org
RI Ferreira, Thiago/HNC-1049-2023
OI Sharma, Tushar/0000-0002-0538-052X; Rzig, Dhia
   Elhaq/0000-0002-2757-9257; Ferreira, Thiago/0000-0001-7010-8306
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Agrawal R., P 20 INT C VERY LARG
   Aguirre AH, 2004, INT J NUMER METH ENG, V59, P1989, DOI 10.1002/nme.947
   Aguirre AH, 2004, IEEE C EVOL COMPUTAT, P403, DOI 10.1109/CEC.2004.1330885
   Alizadeh V, 2020, IEEE T SOFTWARE ENG, V46, P932, DOI 10.1109/TSE.2018.2872711
   Alizadeh V, 2018, IEEE INT CONF AUTOM, P464, DOI [10.1145/3238147.3238217, 10.114513238147.3238217]
   Almogahed A., 2021, Turkish Journal of Computer and Mathematics Education (TURCOMAT), V12, P1705, DOI [10.17762/turcomat.v12i3.995, DOI 10.17762/TURCOMAT.V12I3.995]
   [Anonymous], 2014, PROC 22 INT C PROGRA
   [Anonymous], 2020, STUDY APPENDIX
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Ben Hamida S, 2000, IEEE C EVOL COMPUTAT, P1176, DOI 10.1109/CEC.2000.870781
   Cinnéide MO, 2012, INT SYMP EMP SOFTWAR, P49, DOI 10.1145/2372251.2372260
   Coello C.A., 2007, Evolutionary algorithms for solving multi-objective problems, V5
   Coello CAC, 2002, ADV ENG INFORM, V16, P193, DOI 10.1016/S1474-0346(02)00011-3
   Das S., 2007, Proceedings of the 2007 Symposium on Computer Human interaction For the Management of information Technology, P2, DOI DOI 10.1145/1234772.1234790
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deng Y, 2015, MATH PROBL ENG, V2015, DOI 10.1155/2015/212794
   Ferrucci F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P462, DOI 10.1109/ICSE.2013.6606592
   Fleck M, 2017, IEEE T SOFTWARE ENG, V43, P1009, DOI 10.1109/TSE.2017.2654255
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Fraser G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P121, DOI 10.1109/ICST.2012.92
   Hall M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P472, DOI 10.1109/ICSM.2012.6405309
   Hamid N. F. I. A., 2010, Proceedings of 2010 International Symposium on Information Technology (ITSim 2010), P1332, DOI 10.1109/ITSIM.2010.5561639
   Hamid N. F. I. A, 2011, PROC INT C ELECT ENG, P1
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Huang G, 2003, ACM SIGSOFT SOFTW EN, V28
   Kessentini M, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'17), P1303, DOI 10.1145/3071178.3071334
   Kessentini M, 2011, CONF PROC INT SYMP C, P81, DOI 10.1109/ICPC.2011.22
   Lam P., 2011, P CET US COMP INFR W, V15, P35
   Mariani T, 2017, INFORM SOFTWARE TECH, V83, P14, DOI 10.1016/j.infsof.2016.11.009
   McNicholas PD, 2008, COMPUT STAT DATA AN, V52, P4712, DOI 10.1016/j.csda.2008.03.013
   Meunier H, 2000, IEEE C EVOL COMPUTAT, P317, DOI 10.1109/CEC.2000.870312
   Mkaouer MW, 2017, EMPIR SOFTW ENG, V22, P894, DOI 10.1007/s10664-016-9426-8
   Mkaouer MW, 2016, EMPIR SOFTW ENG, V21, P2503, DOI 10.1007/s10664-015-9414-4
   Mkaouer W, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1263, DOI 10.1145/2576768.2598366
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Mohan Michael, 2018, Journal of Software Engineering Research and Development, V6, DOI 10.1186/s40411-018-0046-4
   Murphy-Hill Emerson R, 2007, WRT, P60
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Ouni A, 2017, INFORM SOFTWARE TECH, V83, P55, DOI 10.1016/j.infsof.2016.11.007
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Ouni A, 2015, J SYST SOFTWARE, V105, P18, DOI 10.1016/j.jss.2015.03.040
   Ouni A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P347, DOI 10.1109/ICSM.2012.6405292
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Ponsich A, 2013, IEEE T EVOLUT COMPUT, V17, P321, DOI 10.1109/TEVC.2012.2196800
   Richardson JTE, 2011, EDUC RES REV-NETH, V6, P135, DOI 10.1016/j.edurev.2010.12.001
   Samarthyam G, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P911, DOI 10.1109/ICSE.2013.6606640
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Strüber D, 2017, LECT NOTES COMPUT SC, V10374, P121, DOI 10.1007/978-3-319-61473-1_9
   Suryanarayana G., 2014, Refactoring for Software Design Smells: Managing Technical Debt
   Talbi E-G, 2009, Metaheuristics: from Design to Implementation, DOI DOI 10.1002/9780470496916
   Tan Liang., 2019, SOFTWARE ENG WORKSHO, P100
   Terra R, 2012, EUR CON SFTWR MTNCE, P335, DOI 10.1109/CSMR.2012.40
   Togan V, 2008, COMPUT STRUCT, V86, P1204, DOI 10.1016/j.compstruc.2007.11.006
   Tsantalis N, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P329
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Van Veldhuizen D.A., 1998, MULTIOBJECTIVE EVOLU
   Virani S.S., 2008, Proceedings of the Industrial Engineering Research Conference, P1401
   Wang HZ, 2021, IEEE T SERV COMPUT, V14, P179, DOI 10.1109/TSC.2017.2787152
   Wilcoxon Frank, 1970, SELECTED TABLES MATH, V1, P171, DOI [DOI 10.1002/9780471462422.EOCT, DOI 10.1007/SPRINGERREFERENCE_205698]
   Zhang XY, 2015, IEEE T EVOLUT COMPUT, V19, P761, DOI 10.1109/TEVC.2014.2378512
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
NR 68
TC 2
Z9 2
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 3753
EP 3770
DI 10.1109/TSE.2021.3105037
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800003
DA 2024-07-18
ER

PT J
AU Nguyen, TT
   Ngo, KT
   Nguyen, S
   Vo, HD
AF Trang Thu Nguyen
   Kien-Tuan Ngo
   Son Nguyen
   Hieu Dinh Vo
TI A Variability Fault Localization Approach for Software Product Lines
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Location awareness; Elevators; Software product lines;
   Codes; Testing; Measurement; Fault localization; variability bugs;
   feature interaction; software product line; configurable code
AB Software fault localization is one of the most expensive, tedious, and time-consuming activities in program debugging. This activity becomes even much more challenging in Software Product Line (SPL) systems due to variability of failures. These unexpected behaviors are induced by variability faults which can only be exposed under some combinations of system features. The interaction among these features causes the failures of the system. Although localizing bugs in single-system engineering has been studied in-depth, variability fault localization in SPL systems still remains mostly unexplored. In this article, we present VarCop, a novel and effective variability fault localization approach. For an SPL system failed by variability bugs, VarCop isolates suspicious code statements by analyzing the overall test results of the sampled products and their source code. The isolated suspicious statements are the statements related to the interaction among the features which are necessary for the visibility of the bugs in the system. In VarCop, the suspiciousness of each isolated statement is assessed based on both the overall test results of the products containing the statement as well as the detailed results of the test cases executed by the statement in these products. On a large public dataset of buggy SPL systems, our empirical evaluation shows that VarCop significantly improves two state-of-the-art techniques by 33% and 50% in ranking the incorrect statements in the systems containing a single bug each. In about two-thirds of the cases, VarCop correctly ranks the buggy statements at the top-3 positions in the ranked lists. For the cases containing multiple bugs, VarCop outperforms the state-of-the-art approaches 2 times and 10 times in the proportion of bugs localized at the top-1 positions. Especially, in 22% and 65% of the buggy versions, VarCop correctly ranks at least one bug in a system at the top-1 and top-5 positions.
C1 [Trang Thu Nguyen; Kien-Tuan Ngo; Son Nguyen; Hieu Dinh Vo] Vietnam Natl Univ, Univ Engn & Technol, Fac Informat Technol, Dept Software Engn, Hanoi 100000, Vietnam.
C3 Vietnam National University Hanoi
RP Vo, HD (corresponding author), Vietnam Natl Univ, Univ Engn & Technol, Fac Informat Technol, Dept Software Engn, Hanoi 100000, Vietnam.
EM trang.nguyen@vnu.edu.vn; tuanngokien@vnu.edu.vn; sonnguyen@vnu.edu.vn;
   hieuvd@vnu.edu.vn
RI Ngo, Tuan/KLB-9554-2024
OI Vo, Hieu/0000-0002-9407-1971
FU Vingroup Joint Stock Company; Domestic Master/PhD Scholarship Programme
   of Vingroup Innovation Foundation (VINIF), Vingroup Big Data Institute
   (VINBIGDATA) [VINIF.2020.ThS.04]
FX Kien-Tuan Ngo was funded by Vingroup Joint Stock Company and supported
   by the Domestic Master/PhD Scholarship Programme of Vingroup Innovation
   Foundation (VINIF), Vingroup Big Data Institute (VINBIGDATA), code
   VINIF.2020.ThS.04.
CR Abal I., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, ASE '14, P421
   Abal I, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3149119
   Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   AGRAWAL H, 1991, IEEE SOFTWARE, V8, P21, DOI 10.1109/52.88940
   Al-Hajjaji M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P197, DOI 10.1145/2648511.2648532
   Alves E., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P520, DOI 10.1109/ASE.2011.6100114
   Angerer F, 2015, IEEE INT CONF AUTOM, P385, DOI 10.1109/ASE.2015.58
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   Apel S., 2013, IEEE Transactions on Software Engineering, V39, P63, DOI 10.1109/TSE.2011.120
   Apel S., 2013, Feature-Oriented Software Development: Concepts and Implementation
   Apel S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P482, DOI 10.1109/ICSE.2013.6606594
   Apel S, 2013, COMPUT NETW, V57, P2399, DOI 10.1016/j.comnet.2013.02.025
   Apel Sven., 2013, P 5 INT WORKSHOP FEA, P1, DOI [10.1145/2528265.2528267, DOI 10.1145/2528265.2528267]
   Arrieta A, 2018, INFORM SOFTWARE TECH, V100, P18, DOI 10.1016/j.infsof.2018.03.008
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   Bian L, 1999, PHOTOGRAMM ENG REM S, V65, P73
   Bodden E, 2013, ACM SIGPLAN NOTICES, V48, P355, DOI 10.1145/2499370.2491976
   Calder M, 2006, FORM METHOD SYST DES, V28, P213, DOI 10.1007/s10703-006-0002-5
   Chaleshtari NB, 2020, EMPIR SOFTW ENG, V25, P4282, DOI 10.1007/s10664-020-09845-4
   Collofello J. S., 1987, AFIPS Conference Proceedings. Vol.56: 1987 National Computer Conference, P539
   DeMillo R. A., 1996, SIGSOFT Software Engineering Notes, V21, P121, DOI [10.1145/229000.226310, 10.1145/226295.226310]
   [丁晖 Ding Hui], 2013, [软件学报, Journal of Software], V24, P1484
   FLEISS JL, 1965, PSYCHOMETRIKA, V30, P469, DOI 10.1007/BF02289537
   Garvin BJ, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P90, DOI 10.1109/ISSRE.2011.25
   github, VARIABILITY FAULT LO
   Greiler M, 2012, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2012.6227189
   Harrold MJ, 1998, ACM SIGPLAN NOTICES, V33, P83, DOI 10.1145/277633.277647
   Johansen Martin Fagereng, 2012, P 16 INT SOFTWARE PR, P46, DOI [10.1145/2362536.2362547, DOI 10.1145/2362536.2362547]
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Kästner C, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2211616.2211617
   Keller F, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P114, DOI 10.1109/QRS.2017.22
   Ngo KT, 2021, SPLC '21: PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, DOI 10.1145/3461001.3473058
   KOREL B, 1988, IEEE T SOFTWARE ENG, V14, P1253, DOI 10.1109/32.6169
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Kusumoto S., 2002, Empirical Software Engineering, V7, P49, DOI 10.1023/A:1014823126938
   Li XY, 2020, IEEE INT CONF SOFTW, P28, DOI 10.1109/ICST46399.2020.00014
   Liebig J., 2013, P 2013 9 JOINT M FDN, P81, DOI DOI 10.1145/2491411.2491437
   Lo D., 2014, P 29 ACM IEEE INT C, P127
   Lourenco F., 2004, Binary-Based Similarity Measures for Categorical Data and their Application in Self-Organizing Maps
   Machado I.C., 2012, ACM SIGSOFT SOFTWARE, V37, P1, DOI DOI 10.1145/2382756.2382783
   Machado ID, 2014, INFORM SOFTWARE TECH, V56, P1183, DOI 10.1016/j.infsof.2014.04.002
   Medeiros F, 2016, PROC INT CONF SOFTW, P643, DOI 10.1145/2884781.2884793
   Meinicke J, 2016, IEEE INT CONF AUTOM, P483, DOI 10.1145/2970276.2970322
   Meyer AD, 2004, GENET MOL BIOL, V27, P83, DOI 10.1590/S1415-47572004000100014
   Mordahl A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P50, DOI 10.1145/3338906.3338967
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Nguyen S, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P489, DOI 10.1109/ASE.2019.00053
   OCHIAI AKIRA, 1957, BULL JAPANESE SOC SCI FISH, V22, P526
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Siegmund N, 2012, PROC INT CONF SOFTW, P167, DOI 10.1109/ICSE.2012.6227196
   Smith BH, 2009, EMPIR SOFTW ENG, V14, P341, DOI 10.1007/s10664-008-9083-7
   Soares L. R., 2018, P 12 INT WORKSHOP VA, P59
   Soares LR, 2018, PROCEEDINGS OF THE 17TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES (GPCE'18), P40, DOI 10.1145/3278122.3278127
   Sobreira V, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P130, DOI 10.1109/SANER.2018.8330203
   Souto S, 2017, PROC INT CONF SOFTW, P632, DOI 10.1109/ICSE.2017.64
   Nguyen T, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P655, DOI 10.1145/2950290.2950311
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Tip F, 2001, ACM T SOFTW ENG METH, V10, P5, DOI 10.1145/366378.366379
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Wen M, 2021, IEEE T SOFTWARE ENG, V47, P2348, DOI 10.1109/TSE.2019.2948158
   Wong C.-P., 2018, PROC ACM PROGRAM LAN, V2, P1
   Wong W. Eric, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P42
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
   Yu-Seung Ma, 2006, 28th International Conference on Software Engineering Proceedings, P827
   Zhang M, 2017, P 26 ACM SIGS INT S, P261, DOI DOI 10.1145/3092703.3092731
NR 72
TC 1
Z9 1
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 4100
EP 4118
DI 10.1109/TSE.2021.3113859
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800022
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rezk, C
   Kamei, Y
   McIntosh, S
AF Rezk, Christophe
   Kamei, Yasutaka
   McIntosh, Shane
TI The Ghost Commit Problem When Identifying Fix-Inducing Changes: An
   Empirical Study of Apache Projects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Maintenance engineering; Data mining; Electronic mail; Computer bugs;
   Information filters; Tools; Taxonomy; SZZ; fix-inducing changes;
   defect-fixing changes
AB The SZZ approach for identifying fix-inducing changes traces backwards from a commit that fixes a defect to those commits that are implicated in the fix. This approach is at the heart of studies of characteristics of fix-inducing changes, as well as the popular Just-in-Time (JIT) variant of defect prediction. However, some types of commits are invisible to the SZZ approach. We refer to these invisible commits as "Ghost Commits." In this paper, we set out to define, quantify, characterize, and mitigate ghost commits that impact the SZZ algorithm during its mapping (i.e., linking defect-fixing commits to those commits that are implicated by the fix) and filtering phases (i.e., removing improbable fix-inducing commits from the set of implicated commits). We mine the version control repositories of 14 open source Apache projects for instances of mapping-phase and filtering-phase ghost commits. We find that (1) 5.66-11.72 percent of defect-fixing commits of defect-fixing commits only add lines, and thus, cannot be mapped back to implicated commits; (2) 1.05-4.60 percent of the studied commits only remove lines, and thus, cannot be implicated in future fixes; and (3) that no implicated commits survive the filtering process of 0.35-14.49 percent defect-fixing commits. Qualitative analysis of ghost commits reveals that 46.5 percent of 142 addition-only defect-fixing commits add checks (e.g., null-ness or emptiness checks), while 39.7 percent of 307 removal-only commits clean up (unused) code. Our results suggest that the next generation of SZZ improvements should be language-aware to connect ghost commits to implicated and defect-fixing commits. Based on our observations, we discuss promising directions for mitigation strategies to address each type of ghost commit. Moreover, we implement mitigation strategies for addition-only commits and evaluate those strategies with respect to a baseline approach. The results indicate that our strategies achieve a precision of 0.753, improving the precision of implicated commits by 39.5 percentage points.
C1 [Rezk, Christophe] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ H3A 0G4, Canada.
   [Kamei, Yasutaka] Kyushu Univ, Principles Software Languages Grp POSL, Fukuoka 8190395, Japan.
   [McIntosh, Shane] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 McGill University; Kyushu University; University of Waterloo
RP Rezk, C (corresponding author), McGill Univ, Dept Elect & Comp Engn, Montreal, PQ H3A 0G4, Canada.
EM christophe.rezk@mail.mcgill.ca; kamei@ait.kyushu-u.ac.jp;
   shane.mcintosh@uwaterloo.ca
FU JSPS KAKENHI Japan [JP21H04877, JP18H03222]; JSPS International Joint
   Research Program; SNSF; Grants-in-Aid for Scientific Research [21H04877]
   Funding Source: KAKEN
FX The work of Yasutaka Kamei was supported in part by the JSPS KAKENHI
   Japan under Grants JP21H04877 and JP18H03222, and in part by the JSPS
   International Joint Research Program with SNSF through Project SENSOR).
CR [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering (FSE'11), DOI [10.1145/2025113.2025121, DOI 10.1145/2025113.2025121]
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   Canfora G., 2011, 2011 18th Working Conference on Reverse Engineering, P191, DOI 10.1109/WCRE.2011.31
   Charmaz K., 2014, Introducing Qualitative Methods
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Eyolfson J., 2011, WORKING C MINING SOF, P153, DOI DOI 10.1145/1985441.1985464
   Howell D.C., 2005, ENCY STAT BEHAV SCI, P1193
   Jihun Park, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P40, DOI 10.1109/MSR.2012.6224298
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Miura K., 2016, P 10 ACMIEEE INT S E, P47
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nguyen T. H. D., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P259, DOI 10.1109/WCRE.2010.37
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Rahman F, 2012, EMPIR SOFTW ENG, V17, P503, DOI 10.1007/s10664-011-9195-3
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Rodríguez-Pérez G, 2022, IEEE T SOFTWARE ENG, V48, P1400, DOI 10.1109/TSE.2020.3021380
   Rodríguez-Pérez G, 2020, EMPIR SOFTW ENG, V25, P1294, DOI 10.1007/s10664-019-09781-y
   Rodríguez-Pérez G, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267436
   Sahal E., 2018, P 12 ACM IEEE INT S, P1
   Shihab E., 2012, P ACM SIGSOFT 20 INT, P62, DOI 10
   Shimagaki J, 2016, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSME.2016.83
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Swanson E. B., 1976, 2nd International Conference on Software Engineering, P492
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1838
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Williams C, 2008, P 2008 WORKSHOP DEFE, P32
   Williams C.C., 2008, INT WORKING C MINING, P19
   Yan M, 2019, EMPIR SOFTW ENG, V24, P2171, DOI 10.1007/s10664-019-09688-8
   Yang H., 2014, P INT C SOFTWARE ENG, P620
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Zampetti F, 2018, IEEE WORK CONF MIN S, P526, DOI 10.1145/3196398.3196423
NR 44
TC 5
Z9 5
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3297
EP 3309
DI 10.1109/TSE.2021.3087419
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500005
DA 2024-07-18
ER

PT J
AU Nadri, R
   Rodríguez-Pérez, G
   Nagappan, M
AF Nadri, Reza
   Rodriguez-Perez, Gema
   Nagappan, Meiyappan
TI On the Relationship Between the Developer's Perceptible Race and
   Ethnicity and the Evaluation of Contributions in OSS
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software development management; Cultural differences; Tools; Software
   engineering; Open source software; Psychology; Gender issues;
   Perceptible race and ethnicity diversity; software development; open
   source software
ID DIVERSITY
AB Context: Open Source Software (OSS) projects are typically the result of collective efforts performed by developers with different backgrounds. Although the quality of developers' contributions should be the only factor influencing the evaluation of the contributions to OSS projects, recent studies have shown that diversity issues are correlated with the acceptance or rejection of developers' contributions. Objective: This paper assists this emerging state-of-the-art body on diversity research with the first empirical study that analyzes how developers' perceptible race and ethnicity relates to the evaluation of the contributions in OSS. We also want to create awareness of the racial and ethnic diversity in OSS projects. Methodology: We performed a large-scale quantitative study of OSS projects in GitHub. We extracted the developers' perceptible race and ethnicity from their names in GitHub using the Name-Prism tool and applied regression modeling of contributions (i.e, pull requests) data from GHTorrent and GitHub. Results: We observed that (1) among the developers whose perceptible race and ethnicity was captured by the tool, only 16.56 percent were perceptible as Non-White developers; (2) contributions from perceptible White developers have about 6-10 percent higher odds of being accepted when compared to contributions from perceptible Non-White developers; and (3) submitters with perceptible non-white races and ethnicities are more likely to get their pull requests accepted when the integrator is estimated to be from their same race and ethnicity rather than when the integrator is estimated to be White. Conclusion: Our initial analysis shows a low number of Non-White developers participating in OSS. Furthermore, the results from our regression analysis lead us to believe that there may exist differences between the evaluation of the contributions from different perceptible races and ethnicities. Thus, our findings reinforce the need for further studies on racial and ethnic diversity in software engineering to foster healthier OSS communities.
C1 [Nadri, Reza; Rodriguez-Perez, Gema; Nagappan, Meiyappan] Univ Waterloo, Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Rodríguez-Pérez, G (corresponding author), Univ Waterloo, Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
EM rnadri@uwaterloo.ca; g5rodrig@uwaterloo.ca; mei.nagappan@uwaterloo.ca
RI Rodríguez-Pérez, Gema/AAN-7844-2020
OI Rodríguez-Pérez, Gema/0000-0002-0062-8418; Nagappan,
   Meiyappan/0000-0003-4533-4728
FU NSERC; SSHRC
FX The authorswould like to thank AudrisMockus, ShaneMcIntosh, and everyone
   in the SWAG Lab for their continuous feedback. The authors would also
   like to thank the Associate Editor, Martin Robillard, and anonymous
   reviewers for helping us improve this manuscript. This work was
   supported in part by NSERC and in part by SSHRC.
CR AKAIKE H, 1974, IEEE T AUTOMAT CONTR, VAC19, P716, DOI 10.1109/TAC.1974.1100705
   AlShebli BK, 2018, NAT COMMUN, V9, DOI 10.1038/s41467-018-07634-8
   Avery DR, 2012, PERS PSYCHOL, V65, P167, DOI 10.1111/j.1744-6570.2011.01241.x
   Bates D., 2014, LME4 LINEAR MIXED EF, V1
   Bertrand M, 2004, AM ECON REV, V94, P991, DOI 10.1257/0002828042002561
   Byrne D., 1971, The attraction paradigm
   Calefato F, 2019, INFORM SOFTWARE TECH, V114, P1, DOI 10.1016/j.infsof.2019.05.012
   Casalnuovo C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P817, DOI 10.1145/2786805.2786854
   Catolino G, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P11, DOI 10.1109/ICSE-SEIS.2019.00010
   Cornell Stephen., 2007, Ethnicity and race: making identities in a changing world
   Cosmides L, 2003, TRENDS COGN SCI, V7, P173, DOI 10.1016/S1364-6613(03)00057-3
   *COUNC EC ADV, 1998, CHANG AM IND SOC EC
   Cuevas A, 2004, COMPUT STAT DATA AN, V47, P111, DOI 10.1016/j.csda.2003.10.021
   Daniel H.D., 1993, Guardians of science: Fairness and reliability of peer review trans. by, DOI 10.1002/3527602208
   Duster T, 2009, SCIENCE, V324, P1144, DOI 10.1126/science.1174523
   Earley PC, 2000, ACAD MANAGE J, V43, P26, DOI 10.5465/1556384
   ERNST E, 1991, NATURE, V352, P560, DOI 10.1038/352560b0
   Evans JST, 2003, TRENDS COGN SCI, V7, P454, DOI 10.1016/j.tics.2003.08.012
   Fielding RT, 1999, COMMUN ACM, V42, P42, DOI 10.1145/299157.299167
   Fienberg S. E., 1981, TR270 CARN MELL U
   Finkel Jenny Rose, 2005, ACL, P363
   Galinsky AD, 2015, PERSPECT PSYCHOL SCI, V10, P742, DOI 10.1177/1745691615598513
   Github, OP SOURC SURV
   GitHub, 2020 STAT OCT
   Gousios G., 2014, Proceedings of the Conference on Mining Software Repositories (MSR), MSR 2014, P368, DOI 10.1145/2597073.2597122
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Iyer RN, 2021, IEEE T SOFTWARE ENG, V47, P2632, DOI 10.1109/TSE.2019.2960357
   KING G, 2001, POLIT ANAL, V0009
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nadri R., REPRODUCIBILITY PACK
   Pieterse V., 2006, Proceedings of annual research conference of the South African institute of computer scientists and information technologists on IT research in developing countries, P180
   Pontille David, 2014, Ada: A Journal of Gender, New Media, and Technology, V4, DOI [10.7264/N3542KVW, DOI 10.7264/N3542KVW]
   Qiu HS, 2019, PROC INT CONF SOFTW, P688, DOI 10.1109/ICSE.2019.00078
   Rastogi A, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240504
   Reynolds A., 2017, Harvard Business Review
   Ross JS, 2006, JAMA-J AM MED ASSOC, V295, P1675, DOI 10.1001/jama.295.14.1675
   Scacchi W., 2007, Advances in Computers, V69, P243, DOI [DOI 10.1016/S0065-2458(06)69005-0, 10.1016/S0065-2458(06)69005-0]
   Schmidt DC, 2001, P 1 WORKSH OP SOURC, V1
   SCHWARZ G, 1978, ANN STAT, V6, P461, DOI 10.1214/aos/1176344136
   TAJFEL H, 1982, ANNU REV PSYCHOL, V33, P1, DOI 10.1146/annurev.ps.33.020182.000245
   Terrell J, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.111
   Torvik V. I., 2016, Ethnea-an instance-based ethnicity classifier based on geo-coded author names in a large-scale bibliographic database
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Vasilescu B, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P50, DOI 10.1109/CHASE.2015.14
   Wohlin C., 2012, Experimentation in Software Engineering
   Ye JT, 2017, CIKM'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P1897, DOI 10.1145/3132847.3133008
   Zhou SR, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P350, DOI 10.1145/3338906.3338918
NR 49
TC 6
Z9 6
U1 3
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 2955
EP 2968
DI 10.1109/TSE.2021.3073773
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500015
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Peng, Z
   Chen, TH
   Yang, JQ
AF Peng, Zi
   Chen, Tse-Hsun
   Yang, Jinqiu
TI Revisiting Test Impact Analysis in Continuous Testing From the
   Perspective of Code Dependencies
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Software; Maintenance engineering; Manuals; Computer bugs;
   Automation; Tools; Empirical study; test smells; continuous testing;
   test impact analysis
ID PRIORITIZATION
AB In continuous testing, developers execute automated test cases once or even several times per day to ensure the quality of the integrated code. Although continuous testing helps ensure the quality of the code and reduces maintenance effort, it also significantly increases test execution overhead. In this paper, we empirically evaluate the effectiveness of test impact analysis from the perspective of code dependencies in the continuous testing setting. We first applied test impact analysis to one year of software development history in 11 large-scale open-source systems. We found that even though the number of changed files is small in daily commits (median ranges from 3 to 28 files), around 50 percent or more of the test cases are still impacted and need to be executed. Motivated by our finding, we further studied the code dependencies between source code files and test cases, and among test cases. We found that 1) test cases often focus on testing the integrated behaviour of the systems and 15 percent of the test cases have dependencies with more than 20 source code files; 2) 18 percent of the test cases have dependencies with other test cases, and test case inheritance is the most common cause of test case dependencies; and 3) we documented four dependency-related test smells that we uncovered in our manual study. Our study provides the first step towards studying and understanding the effectiveness of test impact analysis in the continuous testing setting and provides insights on improving test design and execution.
C1 [Peng, Zi; Chen, Tse-Hsun; Yang, Jinqiu] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
C3 Concordia University - Canada
RP Chen, TH (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
EM zi_peng@encs.concordia.ca; peterc@encs.concordia.ca;
   jinqiuy@encs.concordia.ca
CR [Anonymous], 2014, P 2014 INT S SOFTW T
   Bell J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P433, DOI 10.1145/3180155.3180164
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Boslaugh S., 2008, Statistics in a nutshell-a desktop quick reference
   Bouillon P, 2007, LECT NOTES COMPUT SC, V4536, P101
   Chen JJ, 2017, PROC INT CONF SOFTW, P700, DOI 10.1109/ICSE.2017.70
   Chen TH, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P243, DOI 10.1109/ICSE-SEIP.2017.26
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Daka E, 2014, PROC INT SYMP SOFTW, P201, DOI 10.1109/ISSRE.2014.11
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Gambi A, 2018, IEEE INT CONF SOFTW, P1, DOI 10.1109/ICST.2018.00011
   Ghafari M, 2015, IEEE INT WORK C SO, P61, DOI 10.1109/SCAM.2015.7335402
   github, 2019, PARAMETERIZED TESTS
   Gligoric M., 2015, P 2015 INT S SOFTWAR, P211, DOI 10.1145/2771783.2771784
   google, 2020, TEST SMELL FOUND MAN
   Grant S, 2013, SCI COMPUT PROGRAM, V78, P1663, DOI 10.1016/j.scico.2013.03.015
   Grant S, 2012, EUR CON SFTWR MTNCE, P403, DOI 10.1109/CSMR.2012.51
   Hautus E, 2002, PROC 6 IASTED INT C, P1
   Isazadeh A., 2017, Source code modularization: theory and techniques
   Janzen D, 2005, COMPUTER, V38, P43, DOI 10.1109/MC.2005.314
   JavaParser, TOOLS YOUR JAVA CODE
   Jenkins A., APACHE JENKINS CI TE
   Koskela L., 2013, EFFECTIVE UNIT TESTI
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Legunsen O, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P583, DOI 10.1145/295029.2950361
   Lei Y, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P267
   Leitner Andreas, 2007, 22 IEEE ACM INT C AU, P417, DOI 10.1145/1321631.1321698
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Li ZH, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P147, DOI 10.1109/ICSE-Companion.2019.00062
   Luo Q, 2019, IEEE T SOFTWARE ENG, V45, P1054, DOI 10.1109/TSE.2018.2822270
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Lutellier T, 2018, IEEE T SOFTWARE ENG, V44, P159, DOI 10.1109/TSE.2017.2671865
   Marijan D, 2013, PROC IEEE INT CONF S, P540, DOI 10.1109/ICSM.2013.91
   Mei H, 2012, IEEE T SOFTWARE ENG, V38, P1258, DOI 10.1109/TSE.2011.106
   Memon A, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P233, DOI 10.1109/ICSE-SEIP.2017.16
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Microsoft, 2019, TEST IMP AN VIS STUD
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Mu K., 2013, ESEC FSE NEW IDEAS T, P631, DOI DOI 10.1145/2491411.2494580
   Najafi A, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P213, DOI 10.1109/ICSE-SEIP.2019.00031
   Orso A., 2004, Software Engineering Notes, V29, P241, DOI 10.1145/1041685.1029928
   Palomba F, 2019, EMPIR SOFTW ENG, V24, P2907, DOI 10.1007/s10664-019-09683-z
   Palomba F, 2017, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2017.12
   petrikainulainen, 3 REASONS WHY WE SHO
   Pinto LeandroSales., 2012, P ACM SIGSOFT 20 INT, p33:1
   Prechelt L, 2003, J SYST SOFTWARE, V65, P115, DOI 10.1016/S0164-1212(02)00053-5
   Qusef Abdallah, 2010, 2010 IEEE International Conference on Software Maintenance. pp, P1
   Rausch T, 2017, IEEE WORK CONF MIN S, P345, DOI 10.1109/MSR.2017.54
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Saff D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P281, DOI 10.1109/ISSRE.2003.1251050
   Saha RK, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P268, DOI 10.1109/ICSE.2015.47
   Shi A, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P237, DOI 10.1145/2786805.2786878
   Shore J, 2004, IEEE SOFTWARE, V21, P21, DOI 10.1109/MS.2004.1331296
   Sim J, 2005, PHYS THER, V85, P257
   Spadini D, 2019, EMPIR SOFTW ENG, V24, P1461, DOI 10.1007/s10664-018-9663-0
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   Spadini D, 2017, IEEE WORK CONF MIN S, P402, DOI 10.1109/MSR.2017.61
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   Vahabzadeh A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P210, DOI 10.1145/3180155.3180203
   Vahabzadeh A, 2015, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSM.2015.7332456
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491513
   Zhang LM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P192, DOI 10.1109/ICSE.2013.6606565
   Zhang LM, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P170, DOI 10.1109/ISSRE.2011.26
   Zhu YC, 2018, PROC IEEE INT CONF S, P69, DOI 10.1109/ICSME.2018.00016
NR 69
TC 3
Z9 3
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2022
VL 48
IS 6
BP 1979
EP 1993
DI 10.1109/TSE.2020.3045914
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2D5IM
UT WOS:000811580600009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Guizzo, G
   Sarro, F
   Krinke, J
   Vergilio, SR
AF Guizzo, Giovani
   Sarro, Federica
   Krinke, Jens
   Vergilio, Silvia R.
TI Sentinel: A Hyper-Heuristic for the Generation of Mutant Reduction
   Strategies
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Maintenance engineering; Computational efficiency; Open source
   software; Software engineering; Search problems; Mutation testing;
   mutant reduction; software testing; grammatical evolution;
   hyper-heuristic; search based software testing; search based software
   engineering
AB Mutation testing is an effective approach to evaluate and strengthen software test suites, but its adoption is currently limited by the mutants' execution computational cost. Several strategies have been proposed to reduce this cost (a.k.a. mutation cost reduction strategies), however none of them has proven to be effective for all scenarios since they often need an ad-hoc manual selection and configuration depending on the software under test (SUT). In this paper, we propose a novel multi-objective evolutionary hyper-heuristic approach, dubbed Sentinel, to automate the generation of optimal cost reduction strategies for every new SUT. We evaluate Sentinel by carrying out a thorough empirical study involving 40 releases of 10 open-source real-world software systems and both baseline and state-of-the-art strategies as a benchmark. We execute a total of 4,800 experiments, and evaluate their results with both quality indicators and statistical significance tests, following the most recent best practice in the literature. The results show that strategies generated by Sentinel outperform the baseline strategies in 95 percent of the cases always with large effect sizes. They also obtain statistically significantly better results than state-of-the-art strategies in 88 percent of the cases, with large effect sizes for 95 percent of them. Also, our study reveals that the mutation strategies generated by Sentinel for a given software version can be used without any loss in quality for subsequently developed versions in 95 percent of the cases. These results show that Sentinel is able to automatically generate mutation strategies that reduce mutation testing cost without affecting its testing effectiveness (i.e., mutation score), thus taking off from the tester's shoulders the burden of manually selecting and configuring strategies for each SUT.
C1 [Guizzo, Giovani; Sarro, Federica; Krinke, Jens] UCL, Gower St, London WC1E 6EA, England.
   [Vergilio, Silvia R.] Univ Fed Parana, BR-82590300 Curitiba, Parana, Brazil.
C3 University of London; University College London; Universidade Federal do
   Parana
RP Sarro, F (corresponding author), UCL, Gower St, London WC1E 6EA, England.
EM g.guizzo@ucl.ac.uk; f.sarro@ucl.ac.uk; j.krinke@ucl.ac.uk;
   silvia@inf.ufpr.br
OI Sarro, Federica/0000-0002-9146-442X
FU Microsoft Azure Research Award [MS-AZR-0036P]; CAPES; CNPq
   [307762/2015-7, 305968/2018]; ERC [741278]
FX This work was supported by the Microsoft Azure Research Award
   (MS-AZR-0036P), the Brazilian funding agencies CAPES and CNPq (grants
   307762/2015-7 and 305968/2018), and the ERC advanced fellowship grant
   no. 741278 (EPIC).
CR Alshahwan N, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P1, DOI 10.1145/3293882.3338991
   Ammann P, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P21, DOI 10.1109/ICST.2014.13
   Barbosa EF, 2001, SOFTW TEST VERIF REL, V11, P113, DOI 10.1002/stvr.226
   Bashir M., 2012, 2012 11th International Conference on Environment and Electrical Engineering, P989, DOI 10.1109/EEEIC.2012.6221521
   Bowes David., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, P330, DOI DOI 10.1145/2931037.2931039
   Burke EK, 2010, INT SER OPER RES MAN, V146, P449, DOI 10.1007/978-1-4419-1665-5_15
   Calero C.Piattini., 2015, Green in Software Engineering, DOI 10.1007/978-3-319-08581-4
   Changbin Ji, 2009, Proceedings 21st International Conference on Software Engineering & Knowledge Engineering (SEKE 2009), P422
   Chen LC, 2018, IEEE INT CONF SOFTW, P58, DOI 10.1109/ICST.2018.00016
   Coello C. A. C., 2007, EVOLUTIONARY ALGORIT, DOI DOI 10.1007/978-0-387-36797-2
   Coles H., 2016, P 25 INT S SOFTWARE, P449
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Delamaro ME, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P203, DOI 10.1109/ICST.2014.33
   Delamaro ME, 2001, KLUW INT S ADV DATA, V24, P91
   Derezinska A, 2017, FED CONF COMPUT SCI, P1315, DOI 10.15439/2017F375
   Derezinska A, 2016, ADV INTELL SYST, V470, P97, DOI 10.1007/978-3-319-39639-2_9
   Di Geronimo L., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P785, DOI 10.1109/ICST.2012.177
   Eiben AE, 2011, SWARM EVOL COMPUT, V1, P19, DOI 10.1016/j.swevo.2011.02.001
   Eiben A.E., 2015, NAT COMP SER, P223, DOI 10.1007/978-3-662-44874-8_15
   Ferreira TN, 2017, IEEE COMPUT INTELL M, V12, P34, DOI 10.1109/MCI.2017.2670461
   Ferrucci F., 2013, SOFTWARE TESTING CLO, P113, DOI DOI 10.4018/978-1-4666-2536-5.CH006
   Ferrucci F, 2018, EVOL COMPUT, V26, P535, DOI [10.1162/EVCO_a_00213, 10.1162/evco_a_00213]
   Ferrucci F, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1664, DOI 10.1145/2695664.2696060
   Ferrucci F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P462, DOI 10.1109/ICSE.2013.6606592
   Gligoric Milos., 2013, Proceedings of the 2013 International Symposium on Software Testing and Analysis. ISSTA 2013, P224, DOI DOI 10.1145/2483760.2483773
   Gopinath R, 2016, PROC INT CONF SOFTW, P511, DOI 10.1145/2884781.2884787
   Gopinath R, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P216, DOI 10.1109/ISSRE.2015.7381815
   Guizzo G., 2020, SENTINEL HOME
   Guizzo G., P ACM JOINT EUR SOFT
   Guizzo G., 2020, SENTINEL GITHUB
   Guizzo G, 2017, LECT NOTES COMPUT SC, V10452, P168, DOI 10.1007/978-3-319-66299-2_15
   Guizzo G, 2015, 2015 BRAZILIAN CONFERENCE ON INTELLIGENT SYSTEMS (BRACIS 2015), P1, DOI 10.1109/BRACIS.2015.11
   Guizzo G, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1343, DOI 10.1145/2739480.2754725
   Guizzo G, 2017, APPL SOFT COMPUT, V56, P331, DOI 10.1016/j.asoc.2017.03.012
   Harman Mark, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P80, DOI 10.1109/ICSTW.2010.13
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   HOWDEN WE, 1982, IEEE T SOFTWARE ENG, V8, P371, DOI 10.1109/TSE.1982.235571
   Hussain S., 2008, THESIS DEPT COMPUT S
   Jakubovski HL, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P114, DOI 10.1145/3131151.3131152
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jia Y, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P540, DOI 10.1109/ICSE.2015.71
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Kumari AC, 2016, J SYST SOFTWARE, V117, P384, DOI 10.1016/j.jss.2016.04.007
   Laurent T, 2017, IEEE INT CONF SOFTW, P430, DOI 10.1109/ICST.2017.47
   Lima JAP, 2016, I BRAZILIAN SYMPOSIUM ON SYSTEMATIC AND AUTOMATED SOFTWARE TESTING (SAST 2016), DOI 10.1145/2993288.2993292
   Mariani T, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1069, DOI 10.1145/2908812.2908816
   Mathur A. P., 1994, Software Testing, Verification and Reliability, V4, P9, DOI 10.1002/stvr.4370040104
   MATHUR AP, 1991, COMPSAC 91 - THE FIFTEENTH ANNUAL INTERNATIONAL COMPUTER SOFTWARE & APPLICATIONS CONFERENCE, PROCEEDINGS, P604
   Mresa E. S., 1999, Software Testing, Verification and Reliability, V9, P205, DOI 10.1002/(SICI)1099-1689(199912)9:4<205::AID-STVR186>3.0.CO;2-X
   Namin AS, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P351, DOI 10.1145/1368088.1368136
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   Papadakis Mike, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P90, DOI 10.1109/ICSTW.2010.50
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Petrovic G, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P163, DOI 10.1145/3183519.3183521
   Pizzoleto AV, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.100
   Lima JAP, 2017, II BRAZILIAN SYMPOSIUM ON SYSTEMATIC AND AUTOMATED SOFTWARE TESTING (SAST 2017), DOI 10.1145/3128473.3128479
   Ryan C., 1998, Genetic Programming. First European Workshop, EuroGP'98. Proceedings, P83, DOI 10.1007/BFb0055930
   Sahinoglu M., 1990, TR79P SERC PURD U
   Salza P, 2016, PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'16 COMPANION), P1315
   Salza P, 2016, PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'16 COMPANION), P121, DOI 10.1145/2908961.2909024
   Sarro F., P GEN EV COMP C
   Sarro F, 2017, IEEE T SOFTWARE ENG, V43, P898, DOI 10.1109/TSE.2017.2650914
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Silva RA, 2017, INFORM SOFTWARE TECH, V81, P19, DOI 10.1016/j.infsof.2016.01.017
   Strickler A, 2016, APPL SOFT COMPUT, V49, P1232, DOI 10.1016/j.asoc.2016.07.059
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vincenzi A.M.R., 1999, 13 BRAZ S SOFTW ENG, P373
   Whigham PA, 2017, GENET PROGRAM EVOL M, V18, P353, DOI 10.1007/s10710-017-9288-x
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wong W. E., 1995, SOFTWARE QUALITY PRO, P258
   Yuanyuan Zhang, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P301, DOI 10.1007/978-3-319-22183-0_27
   Zhang J, 2014, PROC INT SYMP SOFTW, P277, DOI 10.1109/ISSRE.2014.27
   Zhang Jie, 2016, P 25 INT S SOFTWARE, P342, DOI [10.1145/2931037, DOI 10.1145/2931037]
   Zhang LM, 2013, IEEE INT CONF AUTOM, P92, DOI 10.1109/ASE.2013.6693070
   Zheng H, 2010, 2ND IEEE INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER CONTROL (ICACC 2010), VOL. 2, P431, DOI 10.1109/ICACC.2010.5486640
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
NR 80
TC 8
Z9 9
U1 1
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2022
VL 48
IS 3
BP 803
EP 818
DI 10.1109/TSE.2020.3002496
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZU6ZO
UT WOS:000769989900005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wen, M
   Chen, JJ
   Tian, YQ
   Wu, RX
   Hao, D
   Han, S
   Cheung, SC
AF Wen, Ming
   Chen, Junjie
   Tian, Yongqiang
   Wu, Rongxin
   Hao, Dan
   Han, Shi
   Cheung, Shing-Chi
TI Historical Spectrum Based Fault Localization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; History; Debugging; Industries; Software; Benchmark
   testing; Maintenance engineering; Fault localization; version histories;
   bug-inducing commits
ID BUGS
AB Spectrum-based fault localization (SBFL) techniques are widely studied and have been evaluated to be effective in locating faults. Recent studies also showed that developers from industry value automated SBFL techniques. However, their effectiveness is still limited by two main reasons. First, the test coverage information leveraged to construct the spectrum does not reflect the root cause directly. Second, SBFL suffers from the tie issue so that the buggy code entities can not be well differentiated from non-buggy ones. To address these challenges, we propose to leverage the information of version histories in fault localization based on the following two intuitions. First, version histories record how bugs are introduced to software projects and this information reflects the root cause of bugs directly. Second, the evolution histories of code can help differentiate those suspicious code entities ranked in tie by SBFL. Our intuitions are also inspired by the observations on debugging practices from large open source projects and industry. Based on the intuitions, we propose a novel technique HSFL (historical spectrum based fault localization). Specifically, HSFL identifies bug-inducing commits from the version history in the first step. It then constructs historical spectrum (denoted as Histrum) based on bug-inducing commits, which is another dimension of spectrum orthogonal to the coverage based spectrum used in SBFL. HSFL finally ranks the suspicious code elements based on our proposed Histrum and the conventional spectrum. HSFL outperforms the state-of-the-art SBFL techniques significantly on the Defects4J benchmark. Specifically, it locates and ranks the buggy statement at Top-1 for 77.8 percent more bugs as compared with SBFL, and 33.9 percent more bugs at Top-5. Besides, for the metrics MAP and MRR, HSFL achieves an average improvement of 28.3 and 40.8 percent over all bugs, respectively. Moreover, HSFL can also outperform other six families of fault localization techniques, and our proposed Histrum model can be integrated with different families of techniques and boost their performance.
C1 [Wen, Ming] Huazhong Univ Sci & Technol, Natl Engn Res Ctr Big Data Technol & Syst, Cluster & Grid Comp Lab, Serv Comp Technol & Syst Lab,Sch Cyber Sci & Engn, Wuhan 430074, Peoples R China.
   [Tian, Yongqiang; Cheung, Shing-Chi] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Kowloon, Clear Water Bay, Hong Kong, Peoples R China.
   [Chen, Junjie] Tianjin Univ, Coll Intelligence & Comp, Tianjin 300072, Peoples R China.
   [Wu, Rongxin] Xiamen Univ, Dept Cyber Space Secur, Xiamen 361005, Peoples R China.
   [Hao, Dan] Peking Univ, EECS, Key Lab High Confidence Software Technol, Beijing 100871, Peoples R China.
   [Hao, Dan] Peking Univ, EECS, Inst Software, Beijing 100871, Peoples R China.
   [Han, Shi] Microsoft Res Asia, Beijing 100080, Peoples R China.
C3 Huazhong University of Science & Technology; Hong Kong University of
   Science & Technology; Tianjin University; Xiamen University; Peking
   University; Peking University; Microsoft Research Asia; Microsoft
RP Wu, RX (corresponding author), Xiamen Univ, Dept Cyber Space Secur, Xiamen 361005, Peoples R China.
EM mwenaa@hust.edu.cn; junjiechen@tju.edu.cn; ytianas@cse.ust.hk;
   wurongxin@xmu.edu.cn; haodan@pku.edu.cn; shihan@microsoft.com;
   scc@cse.ust.hk
RI Tian, Yongqiang/GWC-3226-2022; li, jing/KHY-5337-2024; Chen,
   Junjie/ABE-8685-2020; Liu, Chenyu/KBQ-8899-2024; wu,
   rongxin/F-3999-2016; Wen, Ming/AEJ-8029-2022; Hao, Dan/A-8600-2015;
   Cheung, Shing Chi/U-5882-2018
OI Tian, Yongqiang/0000-0003-1644-2965; Chen, Junjie/0000-0003-4509-2271;
   Hao, Dan/0000-0001-8295-303X; Cheung, Shing Chi/0000-0002-3508-7172; Wu,
   Rongxin/0000-0002-4648-3795; Han, Shi/0000-0002-0360-6089
FU Hong Kong RGC/GRF Grant [16202917]; MSRA Collaborative Research Fund;
   Hong Kong PhD Fellowship Scheme; National Natural Science Foundation of
   China [61902329]
FX We thank anonymous reviewers for their constructive comments. This work
   is supported by the Hong Kong RGC/GRF Grant 16202917, the MSRA
   Collaborative Research Fund, the Hong Kong PhD Fellowship Scheme and the
   National Natural Science Foundation of China under Grant No. 61902329.
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   AGRAWAL H, 1993, SOFTWARE PRACT EXPER, V23, P589, DOI 10.1002/spe.4380230603
   Alves E., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P520, DOI 10.1109/ASE.2011.6100114
   [Anonymous], 2012, SIGSOFT
   [Anonymous], 2013, P 2013 INT S SOFTW T
   [Anonymous], 2018, SOLR 2606
   [Anonymous], 2018, SOLR 2606
   [Anonymous], 2013, P 2013 INT S SOFTW T, DOI DOI 10.1145/2483760.2483767
   [Anonymous], 2018, GCC 79286
   [Anonymous], 2005, P 6 INT S AUTOMATED
   Artzi S., 2010, ISSTA, P49, DOI DOI 10.1145/1831708.1831715
   Ayewah N., 2010, Proceedings of the 19th international symposium on Software testing and analysis, P241
   B_ohme M., 2014, INT S SOFTWARE TESTI, P105
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Böhme M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P117, DOI 10.1145/3106237.3106255
   Breu S, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P301
   Briand LC, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P137, DOI 10.1109/ISSRE.2007.31
   Britton T, 2013, Reversible Debugging Software "Quantify the Time and Cost Saved Using Reversible Debuggers
   Campos J, 2012, IEEE INT CONF AUTOM, P378, DOI 10.1145/2351676.2351752
   Cardoso N., 2013, PROC 27 AAAI C ARTIF, P152
   Chen JJ, 2017, IEEE INT CONF SOFTW, P418, DOI 10.1109/ICST.2017.45
   Couder C., 2008, FIGHTING REGRESSIONS
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Delahaye M., 2012, Proceedings of the 2012 IEEE Sixth International Conference on Software Security and Reliability (SERE 2012), P197, DOI 10.1109/SERE.2012.32
   Elmishali A, 2016, AAAI CONF ARTIF INTE, P4003
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Gîrba T, 2006, J SOFTW MAINT EVOL-R, V18, P207, DOI 10.1002/smr.325
   Hao D, 2010, AUTOMAT SOFTW ENG, V17, P5, DOI 10.1007/s10515-009-0056-x
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Hong S, 2015, IEEE INT CONF AUTOM, P464, DOI 10.1109/ASE.2015.14
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Kuhn HW, 2005, NAV RES LOG, V52, P7, DOI 10.1002/nav.20053
   Kuo Tzu-Ming., 2014, Proceedings of the 2014 SIAM international conference on data mining, P812
   Le Goues C, 2013, SOFTWARE QUAL J, V21, P421, DOI 10.1007/s11219-013-9208-0
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Le XBD, 2019, PROC INT CONF SOFTW, P524, DOI 10.1109/ICSE.2019.00064
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Li Y, 2016, IEEE INT CONF AUTOM, P495, DOI 10.1145/2970276.2970336
   Lo D., 2014, P 29 ACM IEEE INT C, P127
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Manning C.D., 1999, FDN STAT NATURAL LAN
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Martinez M., 2016, P 25 INT S SOFTWARE, P441, DOI 10.1145/2931037
   Masri W., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P737, DOI 10.1109/ICST.2012.166
   Masri W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559932
   Meneely Andrew, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P65, DOI 10.1109/ESEM.2013.19
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Pan H., 1992, SERCTR116P PURD U W
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Perez A, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1935
   Rahman F, 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, ESEC/FSE '11, P322, DOI DOI 10.1145/2025113
   Ramanathan Murali Krishna, 2013, P 9 JOINT M EUR SOFT, DOI DOI 10.1145/2491411.2501854
   Riboira Andre, 2012, International Journal of Creative Interfaces and Computer Graphics, V3, P42, DOI 10.4018/jcicg.2012070104
   Riboira A., 2011, Proceedings of the 1st Workshop on Developing Tools as Plug-ins, TOPI'11, P60
   Sanderson M, 2010, NAT LANG ENG, V16, P100, DOI 10.1017/S1351324909005129
   Santelices R, 2009, PROC INT CONF SOFTW, P56, DOI 10.1109/ICSE.2009.5070508
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   Servant F., 2012, INT S FDN SOFTWARE E
   Servant F, 2017, PROC INT CONF SOFTW, P746, DOI 10.1109/ICSE.2017.74
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   Voorhees Ellen M., 2001, Trec, V7, P361, DOI DOI 10.1017/S1351324901002789
   Wen M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P326, DOI 10.1145/3338906.3338962
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Wen Ming, 2017, ARXIV170705172
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Wong W. E., 2009, UTDCS45
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   WONG WE, 1995, PROC INT CONF SOFTW, P41, DOI 10.1145/225014.225018
   Wu RX, 2018, EMPIR SOFTW ENG, V23, P2866, DOI 10.1007/s10664-017-9567-4
   Xia X, 2016, PROC IEEE INT CONF S, P268, DOI 10.1109/ICSME.2016.67
   Xiangyu Zhang, 2006, 28th International Conference on Software Engineering Proceedings, P272, DOI 10.1145/1134285.1134324
   Xiaoyuan Xie, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P224, DOI 10.1007/978-3-642-39742-4_17
   Xu XF, 2011, INT J SOFTW ENG KNOW, V21, P803, DOI 10.1142/S0218194011005505
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   Xuan JF, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P52, DOI 10.1145/2635868.2635906
   Yoo S, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491513
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
   Zhang M, 2017, P 26 ACM SIGS INT S, P261, DOI DOI 10.1145/3092703.3092731
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 96
TC 33
Z9 36
U1 2
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2021
VL 47
IS 11
BP 2348
EP 2368
DI 10.1109/TSE.2019.2948158
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WW2QE
UT WOS:000717767100003
DA 2024-07-18
ER

PT J
AU Ragkhitwetsagul, C
   Krinke, J
   Paixao, M
   Bianco, G
   Oliveto, R
AF Ragkhitwetsagul, Chaiyong
   Krinke, Jens
   Paixao, Matheus
   Bianco, Giuseppe
   Oliveto, Rocco
TI Toxic Code Snippets on Stack Overflow
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cloning; Licenses; Software; Programming; Computer bugs; Security;
   Tutorials; Code clone detection; stack overflow; outdated code; software
   licensing
ID HARMFUL; CLONES
AB Online code clones are code fragments that are copied from software projects or online sources to Stack Overflow as examples. Due to an absence of a checking mechanism after the code has been copied to Stack Overflow, they can become toxic code snippets, e.g., they suffer from being outdated or violating the original software license. We present a study of online code clones on Stack Overflow and their toxicity by incorporating two developer surveys and a large-scale code clone detection. A survey of 201 high-reputation Stack Overflow answerers (33 percent response rate) showed that 131 participants (65 percent) have ever been notified of outdated code and 26 of them (20 percent) rarely or never fix the code. 138 answerers (69 percent) never check for licensing conflicts between their copied code snippets and Stack Overflow's CC BY-SA 3.0. A survey of 87 Stack Overflow visitors shows that they experienced several issues from Stack Overflow answers: mismatched solutions, outdated solutions, incorrect solutions, and buggy code. 85 percent of them are not aware of CC BY-SA 3.0 license enforced by Stack Overflow, and 66 percent never check for license conflicts when reusing code snippets. Our clone detection found online clone pairs between 72,365 Java code snippets on Stack Overflow and 111 open source projects in the curated Qualitas corpus. We analysed 2,289 non-trivial online clone candidates. Our investigation revealed strong evidence that 153 clones have been copied from a Qualitas project to Stack Overflow. We found 100 of them (66 percent) to be outdated, of which 10 were buggy and harmful for reuse. Furthermore, we found 214 code snippets that could potentially violate the license of their original software and appear 7,112 times in 2,427 GitHub projects.
C1 [Ragkhitwetsagul, Chaiyong] Mahidol Univ, Fac Informat & Commun Technol, Comp Sci, Salaya 73170, Nakhon Pathom, Thailand.
   [Krinke, Jens] UCL, Comp Sci, London WC1E 6BT, England.
   [Paixao, Matheus] Univ Estadual Ceara, Comp Sci, BR-60740000 Fortaleza, Ceara, Brazil.
   [Bianco, Giuseppe] Univ Molise, Comp Sci, I-86100 Campobasso, Italy.
   [Oliveto, Rocco] Univ Molise, Dept Biosci & Terr, I-86090 Pesche, Italy.
C3 Mahidol University; University of London; University College London;
   Universidade Estadual do Ceara; University of Molise; University of
   Molise
RP Ragkhitwetsagul, C (corresponding author), Mahidol Univ, Fac Informat & Commun Technol, Comp Sci, Salaya 73170, Nakhon Pathom, Thailand.
EM cragkhit@gmail.com; j.krinke@ucl.ac.uk; matheus.paixao@uece.br;
   giuseppe@corsi.it; rocco.oliveto@unimol.it
RI Ragkhitwetsagul, Chaiyong/JOZ-6943-2023; Ragkhitwetsagul,
   Chaiyong/GSN-1156-2022; Ragkhitwetsagul, Chaiyong/W-2835-2019; Blasi,
   Giuseppe/HHS-5404-2022; Krinke, Jens/E-9011-2011
OI Ragkhitwetsagul, Chaiyong/0000-0002-6502-1107; Paixao,
   Matheus/0000-0002-1775-7259; Krinke, Jens/0000-0003-1009-2861
CR Abdalkareem R, 2017, INFORM SOFTWARE TECH, V88, P148, DOI 10.1016/j.infsof.2017.04.005
   Acar Y, 2016, P IEEE S SECUR PRIV, P289, DOI 10.1109/SP.2016.25
   An L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P283, DOI 10.1109/SANER.2017.7884629
   [Anonymous], 2010, P JOINT ERCIM WORKSH
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Beckman NE, 2011, LECT NOTES COMPUT SC, V6813, P2, DOI 10.1007/978-3-642-22655-7_2
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Bosu A, 2013, IEEE WORK CONF MIN S, P89, DOI 10.1109/MSR.2013.6624013
   Burrows S, 2007, SOFTWARE PRACT EXPER, V37, P151, DOI 10.1002/spe.750
   Cheung WT, 2016, EMPIR SOFTW ENG, V21, P517, DOI 10.1007/s10664-015-9368-6
   Choetkiertikul M, 2015, 2015 24TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC 2015), P155, DOI 10.1109/ASWEC.2015.28
   Cordy J. R, 2008, P IEEE 19 INT C PROG, P3
   Davies J, 2013, EMPIR SOFTW ENG, V18, P1195, DOI 10.1007/s10664-012-9199-7
   Di Penta Massimiliano, 2010, P 32 ACMIEEE INT C S, P145, DOI [10.1145/1806799.1806824, DOI 10.1145/1806799.1806824]
   Diamantopoulos T, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P454, DOI 10.1109/MSR.2015.62
   Diehl Stephan, 2018, EMPIR SOFTW ENG
   Duric Z, 2013, COMPUT J, V56, P70, DOI 10.1093/comjnl/bxs018
   Fischer F, 2017, P IEEE S SECUR PRIV, P121, DOI 10.1109/SP.2017.31
   Funaro Marco, 2010, Proceedings of the 4th International Workshop on Software Clones, P79
   German DM, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P81, DOI 10.1109/MSR.2009.5069483
   German Daniel M., 2010, P 25 IEEE ACM INT C, P437, DOI [10.1145/1858996.1859088, DOI 10.1145/1858996.1859088]
   Göde N, 2011, EUR CON SFTWR MTNCE, P65, DOI 10.1109/CSMR.2011.11
   Göde N, 2009, EUR CON SFTWR MTNCE, P219, DOI 10.1109/CSMR.2009.20
   Harder Jan, 2013, Journal of Software: Evolution and Process, V25, P1063, DOI 10.1002/smr.1551
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser C, 2003, ELISA 03, P67
   Kapser C, 2006, WORK CONF REVERSE EN, P19
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Keivanloo I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P664, DOI 10.1145/2568225.2568292
   Kim K, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P946, DOI 10.1145/3180155.3180187
   Kitchenham B., 2002, SOFTWARE ENG NOTES, V27, P18
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Koschke R, 2006, WORK CONF REVERSE EN, P253
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Krinke Jens, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P98, DOI 10.1109/MSR.2010.5463290
   Krinke J., 2010, SER IWSC 10, P41
   Krinke J., 2011, P 5 INT WORKSHOP SOF, P28
   Krinke J, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P57, DOI 10.1109/SCAM.2008.14
   Krinke J, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P170, DOI 10.1109/WCRE.2007.7
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Mondal M, 2011, CONF PROC INT SYMP C, P242, DOI 10.1109/ICPC.2011.14
   Movshovitz-Attias Dana, 2013, 2013 IEEE/ACM International Conference on Advances in Social Networks Analysis and Mining (ASONAM), P886
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Omar C, 2012, PROC INT CONF SOFTW, P859, DOI 10.1109/ICSE.2012.6227133
   Park JW, 2014, KNOWL INF SYST, V41, P727, DOI 10.1007/s10115-013-0677-z
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   Ponzanelli L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1295, DOI 10.1109/ICSE.2013.6606701
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Prechelt L, 2002, J UNIVERS COMPUT SCI, V8, P1016
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   Ragkhitwetsagul C, 2017, UCL COMPUTER SCI RES
   Ragkhitwetsagul C, 2018, EMPIR SOFTW ENG, V23, P2464, DOI 10.1007/s10664-017-9564-7
   Ragkhitwetsagul C, 2018, INT WORKS SOFTW CLON, P44, DOI 10.1109/IWSC.2018.8327318
   Ragkhitwetsagul C, 2016, IEEE INT WORK C SO, P117, DOI 10.1109/SCAM.2016.13
   Ragkhitwetsagul C, 2016, LECT NOTES COMPUT SC, V9962, P250, DOI 10.1007/978-3-319-47106-8_20
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Roy CK, 2008, WORK CONF REVERSE EN, P81, DOI 10.1109/WCRE.2008.54
   Saini V, 2016, PROC IEEE INT CONF S, P257, DOI 10.1109/ICSME.2016.94
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Schleimer Saul, 2003, P 2003 ACM SIGMOD IN, P76, DOI [10.1145/872757.872770, DOI 10.1145/872757.872770]
   Smith R., 2009, P INT WORKSH SOFTW
   Sprigman CJ, 2015, COMMUN ACM, V58, P27, DOI 10.1145/2742691
   Stolee KT, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2581377
   Subramanian S, 2013, IEEE WORK CONF MIN S, P85, DOI 10.1109/MSR.2013.6624012
   Svajlenko J, 2014, PROC IEEE INT CONF S, P321, DOI 10.1109/ICSME.2014.54
   Taube-Schock C, 2011, LECT NOTES COMPUT SC, V6813, P204, DOI 10.1007/978-3-642-22655-7_10
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Vasilescu B., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P313, DOI 10.1109/ICSM.2011.6080798
   Wang SW, 2014, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSME.2014.51
   Wang Shaowei, 2013, SAC '13 Proceedings of the 28th Annual ACM Symposium on Applied Computing, P1019
   Wang Tiantian, 2013, P 2013 9 JOINT M FDN, P455
   Xia Pei., 2014, Information and Media Technologies, V9, P155, DOI [10.11185/imt.9.155, DOI 10.11185/IMT.9.155]
   Yang D, 2017, IEEE WORK CONF MIN S, P280, DOI 10.1109/MSR.2017.13
   Yang D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P391, DOI [10.1109/MSR.2016.047, 10.1145/2901739.2901767]
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
NR 78
TC 51
Z9 54
U1 2
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2021
VL 47
IS 3
BP 560
EP 581
DI 10.1109/TSE.2019.2900307
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA RA1TM
UT WOS:000631200300006
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Niu, XT
   Nie, CH
   Leung, H
   Lei, Y
   Wang, XY
   Xu, JX
   Wang, Y
AF Niu, Xintao
   Nie, Changhai
   Leung, Hareton
   Lei, Yu
   Wang, Xiaoyin
   Xu, Jiaxi
   Wang, Yan
TI An Interleaving Approach to Combinatorial Testing and Failure-Inducing
   Interaction Identification
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Software systems; Computer science; Fault diagnosis; Open
   source software; Indexes; Software testing; combinatorial testing;
   covering array; failure-inducing interactions
ID COVERING ARRAYS; TEST SUITES; GENERATION; COVERAGE; SYSTEM
AB Combinatorial testing (CT) seeks to detect potential faults caused by various interactions of factors that can influence the software systems. When applying CT, it is a common practice to first generate a set of test cases to cover each possible interaction and then to identify the failure-inducing interaction after a failure is detected. Although this conventional procedure is simple and forthright, we conjecture that it is not the ideal choice in practice. This is because 1) testers desire to identify the root cause of failures before all the needed test cases are generated and executed 2) the early identified failure-inducing interactions can guide the remaining test case generation so that many unnecessary and invalid test cases can be avoided. For these reasons, we propose a novel CT framework that allows both generation and identification process to interact with each other. As a result, both generation and identification stages will be done more effectively and efficiently. We conducted a series of empirical studies on several open-source software, the results of which show that our framework can identify the failure-inducing interactions more quickly than traditional approaches while requiring fewer test cases.
C1 [Niu, Xintao; Nie, Changhai] Nanjing Univ, State Key & Aboratory Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.
   [Leung, Hareton] Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
   [Lei, Yu] Univ Texas Arlington, Dept Comp Sci & Engn, Arlington, TX 76019 USA.
   [Wang, Xiaoyin] Univ Texas San Antonio, Dept Comp Sci, San Antonio, TX 78249 USA.
   [Xu, Jiaxi; Wang, Yan] Nanjing Xiaozhuang Univ, Sch Informat Engn, Nanjing 210017, Jiangsu, Peoples R China.
C3 Nanjing University; Hong Kong Polytechnic University; University of
   Texas System; University of Texas Arlington; University of Texas System;
   University of Texas at San Antonio (UTSA); Nanjing Xiaozhuang University
RP Nie, CH (corresponding author), Nanjing Univ, State Key & Aboratory Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.
EM niuxintao@gmail.com; changhainie@nju.edu.cn; hareton.leung@polyu.edu.hk;
   ylei@cse.uta.edu; Xiaoyin.Wang@utsa.edu; xujiaxi@njc.edu.cn;
   wangyan@njc.edu.cn
RI Wang, Xiaoyin/ABA-9508-2020; Lei, Yu/IAN-0544-2023; Nie,
   Changhai/IWM-7504-2023
OI Wang, Xiaoyin/0000-0002-9079-5534
FU National Key Research and Development Plan [2018YFB1003800]; US National
   Science Foundation [CNS-1748109]; US Department of Homeland Security
   [DHS-14-ST-062-001]; US National Institute of Standards and Technologies
   Award [70NANB15H199]
FX We would like to thank anonymous referees for their suggestions and
   comments on this paper. This work was supported by the National Key
   Research and Development Plan (No. 2018YFB1003800), US National Science
   Foundation Award CNS-1748109, US Department of Homeland Security
   (DHS-14-ST-062-001), and US National Institute of Standards and
   Technologies Award (70NANB15H199).
CR [Anonymous], 2010, Journal on Satisfiability, Boolean Modeling and Computation, DOI DOI 10.3233/SAT190075
   [Anonymous], 2012, International Symposium on Software Testing and Analysis, ISSTA 2012, Minneapolis, MN, USA, July 15-20, 2012, DOI DOI 10.1145/2338965.2336790
   Berkelaar M., 2004, SOFTWARE
   Borazjany M. N., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P591, DOI 10.1109/ICST.2012.146
   Bryce RC, 2005, PROC INT CONF SOFTW, P146
   Bryce RC, 2007, SOFTW TEST VERIF REL, V17, P159, DOI 10.1002/stvr.365
   Bryce RC, 2006, INFORM SOFTWARE TECH, V48, P960, DOI 10.1016/j.infsof.2006.03.004
   Bryce RC, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1082
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen M.B., 2007, P 2007 INT S SOFTW T, P129
   Cohen M. B., 2006, Software Engineering Notes, V31, P1, DOI [DOI 10.1145/1218776.1218785, 10.1145/1218776.1218785]
   Cohen MB, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P394, DOI 10.1109/ISSRE.2003.1251061
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Cohen MB, 2008, DISCRETE MATH, V308, P2709, DOI 10.1016/j.disc.2006.06.036
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Cohen MB, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P121, DOI 10.1109/TAIC.PART.2007.17
   Colbourn CJ, 2008, J COMB OPTIM, V15, P17, DOI 10.1007/s10878-007-9082-4
   Debroy Vidroha, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P165, DOI 10.1109/ISSRE.2009.14
   Dumlu Emine., 2011, P 2011 INT S SOFTWAR, P243
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Fouché S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P177
   Garn B, 2014, IEEE ICST WORKSHOP, P58, DOI 10.1109/ICSTW.2014.7
   Ghandehari L. S. G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P370, DOI 10.1109/ICST.2012.117
   Ghandehari LS, 2013, PROC INT SYMP SOFTW, P168, DOI 10.1109/ISSRE.2013.6698916
   Ghazi SA, 2003, IEEE C EVOL COMPUTAT, P1420
   Grindal M., 2006, HANDLING CONSTRAINTS
   Hartman A, 2005, GRAPH THEORY, COMBINATORICS AND ALGORITHMS: INTERDISCIPLINARY APPLICATIONS, P237
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Jin DP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P215, DOI 10.1145/2591062.2591191
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Kobayashi N., 2002, THESIS
   Kolinko K., 2014, HTTP CONNECTOR
   Kuhn D.R., 2002, Proceedings of 27th Annual NASA Goddard Software Engineering Workshop, 2002, P91, DOI DOI 10.1109/SEW.2002.1199454
   Kuhn D. R., 2010, NIST SPECIAL PUBLICA, V800, P142
   Kuhn DR, 2006, 30TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P153
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Li J, 2012, INT CONF QUAL SOFTW, P102, DOI 10.1109/QSIC.2012.28
   Liblit B, 2003, ACM SIGPLAN NOTICES, V38, P141, DOI 10.1145/780822.781148
   Liu C., 2005, P EUR SOFTW ENG C HE, V30, P286
   Lopez-Herrejon R. E., 2015, 8 IEEE INT C SOFTW T, P1, DOI DOI 10.1109/ICSTW.2015.7107435
   Lopez-Herrejon RE, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1255, DOI 10.1145/2576768.2598305
   Martínez C, 2008, LECT NOTES COMPUT SC, V4957, P504, DOI 10.1007/978-3-540-78773-0_44
   Martinez C, 2009, SIAM J DISCRETE MATH, V23, P1776, DOI 10.1137/080730706
   Misherghi G., 2006, 28th International Conference on Software Engineering Proceedings, P142, DOI 10.1145/1134285.1134307
   Nie CH, 2015, INFORM SOFTWARE TECH, V62, P198, DOI 10.1016/j.infsof.2015.02.008
   Nie CH, 2013, INT CONF QUAL SOFTW, P284, DOI 10.1109/QSIC.2013.22
   Nie CH, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000801
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Niu X, 2013, IEEE ICST WORKSHOP, P271, DOI 10.1109/ICSTW.2013.38
   Nurmela KJ, 2004, DISCRETE APPL MATH, V138, P143, DOI 10.1016/S0166-218X(03)00291-9
   Perrouin Gilles, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P459, DOI 10.1109/ICST.2010.43
   Qu X., 2008, P 2008 INT S SOFTW T, P75
   Schroeder PJ, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P49
   Shakya K., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P620, DOI 10.1109/ICST.2012.149
   Shi L, 2005, LECT NOTES COMPUT SC, V3516, P1088
   Shiba T., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P72, DOI 10.1109/CMPSAC.2004.1342808
   Song C, 2012, PROC INT CONF SOFTW, P903, DOI 10.1109/ICSE.2012.6227129
   Tung YW, 2000, AEROSP CONF PROC, P431, DOI 10.1109/AERO.2000.879426
   Williams A. W., 2002, Testing of Communicating Systems XIV. Application to Internet Technologies and Services. IFIP TC6/WG6.1 Fourteenth International Conference on Testing of Communicating Systems (TestCom 2002), P283
   Williams AW, 2000, INT FED INFO PROC, V48, P59
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wu HY, 2015, IEEE T EVOLUT COMPUT, V19, P575, DOI 10.1109/TEVC.2014.2362532
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Yilmaz C, 2014, IEEE T SOFTWARE ENG, V40, P43, DOI 10.1109/TSE.2013.53
   Yoo S, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491513
   Yu L., 2015, P INT C WIR COMM SIG, P1
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
   Zhang J., 2012, P INT C THEOR APPL S, P186
   Zhang Z., 2011, P ACM 20 INT S SOFTW, P331
   Ziyuan Wang, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P495, DOI 10.1109/QSIC.2010.36
NR 73
TC 13
Z9 14
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2020
VL 46
IS 6
BP 584
EP 615
DI 10.1109/TSE.2018.2865772
PG 32
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA MC6BB
UT WOS:000543368800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Moran, K
   Bernal-Cárdenas, C
   Curcio, M
   Bonett, R
   Poshyvanyk, D
AF Moran, Kevin
   Bernal-Cardenas, Carlos
   Curcio, Michael
   Bonett, Richard
   Poshyvanyk, Denys
TI Machine Learning-Based Prototyping of Graphical User Interfaces for
   Mobile Apps
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Graphical user interfaces; Software; Task analysis; Prototypes;
   Metadata; Androids; Humanoid robots; GUI; CNN; mobile; prototyping;
   machine-learning; mining software repositories
AB It is common practice for developers of user-facing software to transform a mock-up of a graphical user interface (GUI) into code. This process takes place both at an application's inception and in an evolutionary context as GUI changes keep pace with evolving features. Unfortunately, this practice is challenging and time-consuming. In this paper, we present an approach that automates this process by enabling accurate prototyping of GUIs via three tasks: detection, classification, and assembly. First, logical components of a GUI are detected from a mock-up artifact using either computer vision techniques or mock-up metadata. Then, software repository mining, automated dynamic analysis, and deep convolutional neural networks are utilized to accurately classify GUI-components into domain-specific types (e.g., toggle-button). Finally, a data-driven, K-nearest-neighbors algorithm generates a suitable hierarchical GUI structure from which a prototype application can be automatically assembled. We implemented this approach for Android in a system called ReDraw. Our evaluation illustrates that ReDraw achieves an average GUI-component classification accuracy of 91 percent and assembles prototype applications that closely mirror target mock-ups in terms of visual affinity while exhibiting reasonable code structure. Interviews with industrial practitioners illustrate ReDraw's potential to improve real development workflows.
C1 [Moran, Kevin; Bernal-Cardenas, Carlos; Curcio, Michael; Bonett, Richard; Poshyvanyk, Denys] Coll William & Mary, Dept Comp Sci, Williamsburg, VA 23185 USA.
C3 William & Mary
RP Moran, K (corresponding author), Coll William & Mary, Dept Comp Sci, Williamsburg, VA 23185 USA.
EM kpmoran@cs.wm.edu; cebernal@cs.wm.edu; mjcurcio@cs.wm.edu;
   rfbonett@cs.wm.edu; denys@cs.wm.edu
OI Bernal-Cardenas, Carlos/0000-0002-6209-5346; Poshyvanyk,
   Denys/0000-0002-5626-7586
FU NSF [CCF-1525902]
FX We would like to thank Ben Powell, Jacob Harless, Ndukwe Iko, and Wesely
   Hatin from William & Mary for their assistance on the component of our
   approach that generates GUI code. Wewould also like to thank
   StevenWalker and William Hollingsworth for their assistance in
   re-implementing the REMAUI approach. Finally, we would like to thank
   Martin White and Nathan Owen for their invaluable guidance at the outset
   of this project and the anonymous reviewers for their insightful
   comments which greatly improved this paper. This work is supported in
   part by the NSF CCF-1525902 grant. Any opinions, findings, and
   conclusions expressed herein are the authors and do not necessarily
   reflect those of the sponsors. This work was performed using high
   performance computing facilities at the College of William and Mary
   which were provided by contributions from the National Science
   Foundation, the Commonwealth of Virginia Equipment Trust Fund and the
   Office of Naval Research.
CR Amalfitano D, 2012, IEEE INT CONF AUTOM, P258, DOI 10.1145/2351676.2351717
   Anandan S, 2012, MATER SCI FORUM, V712, P1, DOI 10.4028/www.scientific.net/MSF.712.1
   [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], INTUITIVE EXPLANATIO
   [Anonymous], REDRAW ONLINE APPEND
   [Anonymous], 2017, CoRR
   [Anonymous], P 40 INT C SOFTW ENG
   [Anonymous], EVALUATING DIRECT MA
   Azim T, 2013, ACM SIGPLAN NOTICES, V48, P641, DOI [10.1145/2509136.2509549, 10.1145/2544173.2509549]
   Baudry B., 2015, PROC IEEE 8 INT C SO, P1
   Bay H, 2008, COMPUT VIS IMAGE UND, V110, P346, DOI 10.1016/j.cviu.2007.09.014
   Caetano Anabela, 2002, SSS 02, P9
   Chang T.-H., 2011, P 24 ANN ACM S USER, P245
   Choi W, 2013, ACM SIGPLAN NOTICES, V48, P623, DOI [10.1145/2544173.2509552, 10.1145/2509136.2509552]
   Choudhary S. R., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P171, DOI 10.1109/ICST.2012.97
   Choudhary S.R., 2014, P 2014 INT S SOFTWAR, P417
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Choudhry S, 2010, PHARMACOGENET GENOM, V20, P351, DOI 10.1097/FPC.0b013e328337f992
   Conover W. J., 1998, PRACTICAL NONPARAMET, V3rd
   Coyette A, 2007, LECT NOTES COMPUT SC, V4662, P150
   Csurka G., 2004, Workshop on Statistical Learning in Computer Vision, ECCV, P59
   Deka B, 2017, UIST'17: PROCEEDINGS OF THE 30TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P845, DOI 10.1145/3126594.3126651
   Dixon M, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P969
   Dixon M, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1525
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Girshick R, 2014, PROC CVPR IEEE, P580, DOI 10.1109/CVPR.2014.81
   Grechanik M, 2009, IEEE ICST WORKSHOP, P243, DOI 10.1109/ICSTW.2009.31
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Gui JP, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P100, DOI 10.1109/ICSE.2015.32
   Hao S, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P204, DOI 10.1145/2594368.2594390
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hinze A, 2010, EICS 2010: PROCEEDINGS OF THE 2010 ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS, P273
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Landay JA, 2001, COMPUTER, V34, P56, DOI 10.1109/2.910894
   LANDAY JA, 1995, P SIGCHI C HUM FACT, P43
   Lasecki WS, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P1925, DOI 10.1145/2702123.2702565
   Lecoanet P., 2004, UIST, P267
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Linares-Vásquez M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P111, DOI 10.1109/MSR.2015.18
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Mahmood R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P599, DOI 10.1145/2635868.2635896
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Meng XJ, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P2221, DOI 10.1145/2556288.2557349
   Moran K, 2017, PROC IEEE ACM INT C, P15, DOI 10.1109/ICSE-C.2017.16
   Moran K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P673, DOI 10.1145/2786805.2786857
   Moran K, 2016, IEEE INT CONF SOFTW, P33, DOI 10.1109/ICST.2016.34
   Myers B., 1994, Interactions, V1, P73, DOI 10.1145/174800.174808
   Myers B, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P177, DOI 10.1109/VLHCC.2008.4639081
   Nguyen BN, 2014, AUTOMAT SOFTW ENG, V21, P65, DOI 10.1007/s10515-013-0128-9
   Ren SQ, 2017, IEEE T PATTERN ANAL, V39, P1137, DOI 10.1109/TPAMI.2016.2577031
   Ruiz IJM, 2014, IEEE SOFTWARE, V31, P86, DOI 10.1109/MS.2014.79
   Russakovsky O, 2015, INT J COMPUT VISION, V115, P211, DOI 10.1007/s11263-015-0816-y
   Samir H, 2007, MEDIA CONVERGENCE: MOVING TO THE NEXT GENERATION, P157
   Sasnauskas R., 2014, P 2014 JOINT INT WOR, P1, DOI [10.1145/2632168.2632169, DOI 10.1145/2632168.2632169]
   Seifert J., 2011, Proceedings of the 13th International Conference on Human Computer Interaction with Mobile Devices and Services, P109
   SHAHZADI Erum., 2011, Conference Proceedings of the 8th International Conference on Recent Advances in Statistics held in Lahore-Pakistan, P255
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Thome J., 2014, P 7 INT WORKSH SEARC, P5, DOI DOI 10.1145/2593833.2593835
   Nguyen TA, 2015, IEEE INT CONF AUTOM, P248, DOI 10.1109/ASE.2015.32
   Tucker A.B., 2004, COMPUTER SCI HDB, VSecond
   Wang Zhongyuan, 2015, CoRR
   Yang W, 2013, LECT NOTES COMPUT SC, V7793, P250, DOI 10.1007/978-3-642-37057-1_19
   Ye Hui, 2013, 11 INT C ADV MOB COM, P68
   Zaeem RN, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P183, DOI 10.1109/ICST.2014.31
NR 64
TC 70
Z9 79
U1 3
U2 31
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2020
VL 46
IS 2
BP 196
EP 221
DI 10.1109/TSE.2018.2844788
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA KU7YW
UT WOS:000519930000004
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Tantithamthavorn, C
   McIntosh, S
   Hassan, AE
   Matsumoto, K
AF Tantithamthavorn, Chakkrit
   McIntosh, Shane
   Hassan, Ahmed E.
   Matsumoto, Kenichi
TI The Impact of Automated Parameter Optimization on Defect Prediction
   Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software defect prediction; search-based software engineering;
   experimental design; classification techniques; parameter optimization;
   grid search; random search; genetic algorithm; differential evolution
ID STATIC CODE ATTRIBUTES; RESEARCHER BIAS; RANDOM SEARCH; SOFTWARE;
   CLASSIFICATION; REGRESSION; QUALITY; PERFORMANCE; FRAMEWORK; NUMBER
AB Defect prediction models-classifiers that identify defect-prone software modules-have configurable parameters that control their characteristics (e. g., the number of trees in a random forest). Recent studies show that these classifiers underperform when default settings are used. In this paper, we study the impact of automated parameter optimization on defect prediction models. Through a case study of 18 datasets, we find that automated parameter optimization: (1) improves AUC performance by up to 40 percentage points; (2) yields classifiers that are at least as stable as those trained using default settings; (3) substantially shifts the importance ranking of variables, with as few as 28 percent of the top-ranked variables in optimized classifiers also being top-ranked in non-optimized classifiers; (4) yields optimized settings for 17 of the 20 most sensitive parameters that transfer among datasets without a statistically significant drop in performance; and (5) adds less than 30 minutes of additional computation to 12 of the 26 studied classification techniques. While widely-used classification techniques like random forest and support vector machines are not optimization-sensitive, traditionally overlooked techniques like C5.0 and neural networks can actually outperform widely-used techniques after optimization is applied. This highlights the importance of exploring the parameter space when using parametersensitive classification techniques.
C1 [Tantithamthavorn, Chakkrit] Univ Adelaide, Sch Comp Sci, Adelaide, SA 5005, Australia.
   [McIntosh, Shane] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ H3A 0G4, Canada.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
   [Matsumoto, Kenichi] Nara Inst Sci & Technol, Grad Sch Informat Sci, Takayamacho 8916, Ikoma, Japan.
C3 University of Adelaide; McGill University; Queens University - Canada;
   Nara Institute of Science & Technology
RP Tantithamthavorn, C (corresponding author), Univ Adelaide, Sch Comp Sci, Adelaide, SA 5005, Australia.
EM chakkrit.tantithamthavorn@adelaide.edu.au; shane.mcintosh@mcgill.ca;
   ahmed@cs.queensu.ca; matumoto@is.naist.jp
RI KHALIFA, AHMED khalifa/HKF-2246-2023; MATSUMOTO, KENICHI/AAD-9090-2019;
   Ali, Ahmed/HOF-4672-2023; Hassan, Ahmed/AAB-7241-2019
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; MATSUMOTO,
   KENICHI/0000-0002-7418-9323; Tantithamthavorn,
   Chakkrit/0000-0002-5516-9984
FU JSPS Program for Advancing Strategic International Networks [16J03360];
   Natural Sciences and Engineering Research Council of Canada (NSERC);
   Grants-in-Aid for Scientific Research [16J03360] Funding Source: KAKEN
FX This study would not have been possible without the data shared in the
   Tera-PROMISE repository [95] (curated by Tim Menzies, Mitch Rees-Jones,
   Rahul Krishna and Carter Pape), as well as the data shared by Shepperd
   et al. [123], Zimmermann et al. [154], Kim et al. [71], [148], and
   D'Ambros et al. [22], [23], as well as High Performance Computing
   systems that are provided by the Compute Canada 7 and the Centre for
   Advanced Computing at Queen's University. 8 This work was supported by
   the JSPS Program for Advancing Strategic International Networks to
   Accelerate the Circulation of Talented Researchers: Interdisciplinary
   Global Networks for Accelerating Theory and Practice in Software
   Ecosystems, the Grant-in-Aid for JSPS Fellows (No. 16J03360), and the
   Natural Sciences and Engineering Research Council of Canada (NSERC).
CR ALTMAN DG, 1994, J NATL CANCER I, V86, P829, DOI 10.1093/jnci/86.11.829
   [Anonymous], 2005, P INT S EMP SOFTW EN
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering-ESEC/FSE 2013, page
   [Anonymous], 2018, ARXIV180110271
   [Anonymous], 2015, MATLAB VERS 8 5 0 R2
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], 2012, P ACM SIGSOFT 20 INT
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   BARD JF, 1983, OPER RES, V31, P670, DOI 10.1287/opre.31.4.670
   BARD JF, 1983, OMEGA-INT J MANAGE S, V11, P457, DOI 10.1016/0305-0483(83)90038-5
   Bean J. C., 1994, ORSA Journal on Computing, V6, P154, DOI 10.1287/ijoc.6.2.154
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Bettenburg N, 2013, EMPIR SOFTW ENG, V18, P375, DOI 10.1007/s10664-012-9205-0
   Bibi S, 2006, I C COMP SYST APPLIC, P330, DOI 10.1109/AICCSA.2006.205110
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bland JM, 1996, BRIT MED J, V312, P1079
   Braga-Neto UM, 2004, BIOINFORMATICS, V20, P374, DOI 10.1093/bioinformatics/btg419
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L., 1996, 460 U CALIF STAT DEP
   Brier G. W., 1950, MON WEATHER REV, V78, P1, DOI 10.1175/1520-0493(1950)078andlt;0001:VOFEITandgt;2.0.CO;2
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Cohen J., 1988, STAT POWER ANAL BEHA
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Davis JE, 2006, DEAF WAY II READER: PERSPECTIVES FROM THE SECOND INTERNATIONAL CONFERENCE ON DEAF CULTURE, P233
   den Boer S, 2005, CRIT CARE, V9, pR458, DOI 10.1186/cc3765
   Di Martino Sergio, 2011, Product-Focused Software Process Improvement. Proceedings 12th International Conference, PROFES 2011, P247, DOI 10.1007/978-3-642-21843-9_20
   EFRON B, 1983, J AM STAT ASSOC, V78, P316, DOI 10.2307/2288636
   Efron B., 1993, INTRO BOOTSTRAP, DOI 10.1007/978-1-4899-4541-9
   Fernández-Delgado M, 2014, J MACH LEARN RES, V15, P3133
   Fisher RA, 1936, ANN EUGENIC, V7, P179, DOI 10.1111/j.1469-1809.1936.tb02137.x
   FRIEDMAN JH, 1991, ANN STAT, V19, P1, DOI 10.1214/aos/1176347963
   Fu W., 2016, CoRR
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   Ghotra B, 2017, IEEE WORK CONF MIN S, P146, DOI 10.1109/MSR.2017.18
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Goldber D. E., 1988, Machine Learning, V3, P95, DOI 10.1023/A:1022602019183
   Gunes Koru A., 2005, P 2005 WORKSHOP PRED, P1
   Guo L, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P417
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2012, INT SYMP EMP SOFTWAR, P1, DOI 10.1145/2372251.2372253
   Harrell Jr F. E., 2002, REGRESSION MODEL STR
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Hegerty B., 2009, P 8 MEX INT C ART IN, V9, P13
   Herbold S, 2017, EMPIR SOFTW ENG, V22, P1866, DOI 10.1007/s10664-016-9468-y
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   HOLTE RC, 1993, MACH LEARN, V11, P63, DOI 10.1023/A:1022631118932
   HOOKE R, 1961, J ACM, V8, P212, DOI 10.1145/321062.321069
   Hu QP, 2007, RELIAB ENG SYST SAFE, V92, P332, DOI 10.1016/j.ress.2006.04.007
   Huang J, 2005, IEEE T KNOWL DATA EN, V17, P299, DOI 10.1109/TKDE.2005.50
   Jelihovschi E., 2014, SCOTTKNOTT CLUSTERIN
   Jia Y, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P540, DOI 10.1109/ICSE.2015.71
   Jiang J, 2008, ARCHIT DESIGN, P16
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Jiao JT, 2015, IEEE T INFORM THEORY, V61, P5357, DOI 10.1109/TIT.2015.2462848
   Jiarpakdee J, 2016, IEEE INT SYMP SOFTW, P51, DOI 10.1109/ISSREW.2016.30
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Katz A, 2015, BILINGUAL FIGURATIVE LANGUAGE PROCESSING, P3
   Kazdin AE, 1999, J CONSULT CLIN PSYCH, V67, P332, DOI 10.1037/0022-006X.67.3.332
   Khoshgoftaar TM, 2004, EMPIR SOFTW ENG, V9, P229, DOI 10.1023/B:EMSE.0000027781.18360.9b
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Kotsiantis SB, 2007, INFORM-J COMPUT INFO, V31, P249
   Kuhn M, 2008, J STAT SOFTW, V28, P1, DOI 10.18637/jss.v028.i05
   Kuncheva LI, 1998, IEEE T SYST MAN CY C, V28, P160, DOI 10.1109/5326.661099
   Laradji IH, 2015, INFORM SOFTWARE TECH, V58, P388, DOI 10.1016/j.infsof.2014.07.005
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lim A., 2014, BIGRF BIG RANDOM FOR
   Liu J, 2008, 2008 FOURTH INTERNATIONAL CONFERENCE ON INTELLIGENT INFORMATION HIDING AND MULTIMEDIA SIGNAL PROCESSING, PROCEEDINGS, P283, DOI 10.1109/IIH-MSP.2008.91
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   MAHFOUD SW, 1995, PARALLEL COMPUT, V21, P1, DOI 10.1016/0167-8191(94)00071-H
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Mende T, 2009, EUR CON SFTWR MTNCE, P247, DOI 10.1109/CSMR.2009.55
   Mende Thilo., 2010, P 6 INT C PREDICTIVE, P5
   Menzies T., 2015, The promise repository of empirical software engineering data
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2012, EMPIR SOFTW ENG, V17, P1, DOI 10.1007/s10664-011-9193-5
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Morales R, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P171, DOI 10.1109/SANER.2015.7081827
   Mullen K., 2016, DEOPTIM GLOBAL OPTIM
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Nemenyi P. B., 1963, doctoral dissertation
   Nguyen T. H. D., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P259, DOI 10.1109/WCRE.2010.37
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Peduzzi P, 1996, J CLIN EPIDEMIOL, V49, P1373, DOI 10.1016/S0895-4356(96)00236-3
   Peters F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P801, DOI 10.1109/ICSE.2015.92
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Peters F, 2012, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.2012.6227194
   Petric Jean., 2016, Proceedings of the 20th International Conference on Evaluation and Assessment in Software Engineering, page, P13
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   PRICE WL, 1977, COMPUT J, V20, P367, DOI 10.1093/comjnl/20.4.367
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Rajbahadur GK, 2017, IEEE WORK CONF MIN S, P135, DOI 10.1109/MSR.2017.4
   Rufibach K, 2010, J CLIN EPIDEMIOL, V63, P938, DOI 10.1016/j.jclinepi.2009.11.009
   Sarle WS, 1990, SAS STAT USERS GUIDE
   Sarro F., 2012, Proceedings of the 27th Annual ACM Symposium on Applied Computing, SAC '12, P1215, DOI DOI 10.1145/2245276.2231967
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shihab E., 2012, P ACM SIGSOFT 20 INT, P1
   Shihab E., 2011, Proceedings of the ACM SIGSOFT symposium and the European Conference on Foundations of Software Engineering, P300
   Singh Y., 2009, Journal of Theoretical and Applied Information Technology, V5, P36
   Song LM, 2013, SCI WORLD J, DOI 10.1155/2013/917506
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Steyerberg E., 2009, CLIN PREDICTION MODE, V19
   Steyerberg EW, 2010, EPIDEMIOLOGY, V21, P128, DOI 10.1097/EDE.0b013e3181c30fb2
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C., 2017, Scottknottesd: The Scott-Knott Effect Size Difference (esd) Test
   Tantithamthavorn C., 2018, P INT C SOFW ENG SOF
   Tantithamthavorn C., 2018, ARXIV180110269
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P867, DOI 10.1145/2889160.2889256
   Tantithamthavorn C, 2016, IEEE T SOFTWARE ENG, V42, P1092, DOI 10.1109/TSE.2016.2553030
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Tenenhaus M, 2005, COMPUT STAT DATA AN, V48, P159, DOI 10.1016/j.csda.2004.03.005
   Thomas SW, 2013, IEEE T SOFTWARE ENG, V39, P1427, DOI 10.1109/TSE.2013.27
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Tosun A, 2009, INT SYMP EMP SOFTWAR, P478
   Tosun A, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P318
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Weyuker EJ, 2008, EMPIR SOFTW ENG, V13, P539, DOI 10.1007/s10664-008-9082-8
   Xu Z, 2016, PROC INT SYMP SOFTW, P309, DOI 10.1109/ISSRE.2016.13
   Yan Ma, 2007, 2007 3rd International Workshop on Predictor Models in Software Engineering, P1
   Zhang F., 2014, P 11 WORK C MIN SOFT, P182, DOI [10.1145/2597073.2597078, DOI 10.1145/2597073.2597078]
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zhang HY, 2007, IEEE T SOFTWARE ENG, V33, P635, DOI 10.1109/TSE.2007.70706
   Zhou Z-H., 2009, Encyclopedia of Biometrics, P270, DOI [DOI 10.1007/978-0-387-73003-5_293, 10.1007/978-0-387-73003-5293, DOI 10.1007/978-0-387-73003-5293]
NR 147
TC 223
Z9 240
U1 3
U2 33
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2019
VL 45
IS 7
BP 683
EP 711
DI 10.1109/TSE.2018.2794977
PG 29
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA IK7MZ
UT WOS:000476775600003
OA Green Submitted
HC Y
HP N
DA 2024-07-18
ER

PT J
AU Beller, M
   Gousios, G
   Panichella, A
   Proksch, S
   Amann, S
   Zaidman, A
AF Beller, Moritz
   Gousios, Georgios
   Panichella, Annibale
   Proksch, Sebastian
   Amann, Sven
   Zaidman, Andy
TI Developer Testing in the IDE: Patterns, Beliefs, and Behavior
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Developer testing; unit tests; testing effort; field study; test-driven
   development (TDD); JUnit; TestRoots WatchDog; KaVE FeedBag plus
ID TEST-DRIVEN DEVELOPMENT; SOFTWARE; QUALITY
AB Software testing is one of the key activities to achieve software quality in practice. Despite its importance, however, we have a remarkable lack of knowledge on how developers test in real-world projects. In this paper, we report on a large-scale field study with 2,443 software engineers whose development activities we closely monitored over 2.5 years in four integrated development environments (IDEs). Our findings, which largely generalized across the studied IDEs and programming languages Java and C#, question several commonly shared assumptions and beliefs about developer testing: half of the developers in our study do not test; developers rarely run their tests in the IDE; most programming sessions end without any test execution; only once they start testing, do they do it extensively; a quarter of test cases is responsible for three quarters of all test failures; 12 percent of tests show flaky behavior; Test-Driven Development (TDD) is not widely practiced; and software developers only spend a quarter of their time engineering tests, whereas they think they test half of their time. We summarize these practices of loosely guiding one's development efforts with the help of testing in an initial summary on Test-Guided Development (TGD), a behavior we argue to be closer to the development reality of most developers than TDD.
C1 [Beller, Moritz; Gousios, Georgios; Zaidman, Andy] Delft Univ Technol, Software Engn Res Grp, NL-2628 CD Delft, Netherlands.
   [Panichella, Annibale] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust Veri, L-4365 Esch Sur Alzette, Luxembourg.
   [Proksch, Sebastian; Amann, Sven] Tech Univ Darmstadt, D-64289 Darmstadt, Germany.
C3 Delft University of Technology; University of Luxembourg; Technical
   University of Darmstadt
RP Beller, M (corresponding author), Delft Univ Technol, Software Engn Res Grp, NL-2628 CD Delft, Netherlands.
EM m.m.beller@tudelft.nl; g.gousios@tudelft.nl; annibale.panichella@uni.lu;
   proksch@st.informatik.tu-darmstadt.de;
   amann@st.informatik.tu-darmstadt.de; e.zaidman@tudelft.nl
RI Panichella, Annibale/AAJ-8443-2020; Zaidman, Andy/O-6542-2014
OI Beller, Moritz/0000-0003-4852-0526; Proksch,
   Sebastian/0000-0003-1856-9361; Gousios, Georgios/0000-0002-8495-7939;
   Zaidman, Andy/0000-0003-2413-3935; Panichella,
   Annibale/0000-0002-7395-3588
FU Dutch Science Foundation (NWO) [016.133.324]; German Federal Ministry of
   Education and Research (BMBF) [01IS12054]; DFG [CRC 1119 CROSSING]
FX We owe our biggest gratitude to the hundreds of WATCHDOG users.
   Moreover, we thank Maryi Arciniegas-Mendez, Alan Richardson, Nepomuk
   Seiler, Shane McIntosh, Michaela Greiler, Diana Kupfer, Lars Vogel, Anja
   Reuter, Marcel Bruch, Ian Bull, Katrin Kehrbusch, Maaike Belien, and the
   anonymous reviewers. We thank Andreas Bauer for help with the WATCHDOG
   transformer. This work was funded by the Dutch Science Foundation (NWO),
   project TestRoots (016.133.324) and the German Federal Ministry of
   Education and Research (BMBF) within the Software Campus project Eko,
   grant no. 01IS12054, and by the DFG as part of CRC 1119 CROSSING.
CR ADAIR JG, 1984, J APPL PSYCHOL, V69, P334, DOI 10.1037/0021-9010.69.2.334
   Amann S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P124, DOI 10.1109/SANER.2016.39
   Anderson J., 2014, P 11 WORK C MIN SOFT, P142
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2017, PEERJ PREPRINTS
   [Anonymous], INTERNET SOC SPORT S
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   [Anonymous], 2014, P ACM INT JOINT C PE
   Athanasiou D, 2014, IEEE T SOFTWARE ENG, V40, P1100, DOI 10.1109/TSE.2014.2342227
   Begel A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P12, DOI 10.1145/2568225.2568233
   Bell J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P770, DOI 10.1145/2786805.2786823
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Beller M, 2017, IEEE WORK CONF MIN S, P447, DOI 10.1109/MSR.2017.24
   Beller M, 2016, 2016 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING RESEARCH AND INDUSTRIAL PRACTICE (SER&IP), P53, DOI 10.1145/2897022.2897027
   Beller M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P179, DOI 10.1145/2786805.2786843
   Beller M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P559, DOI 10.1109/ICSE.2015.193
   Bertolino A., 2004, SIGSOFT SOFTW ENG NO, V29, P1, DOI DOI 10.1145/1022494.1022540
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   BOOKSTEIN A, 1990, J AM SOC INFORM SCI, V41, P368, DOI 10.1002/(SICI)1097-4571(199007)41:5<368::AID-ASI8>3.0.CO;2-C
   Brooks Fred, 1975, The Mythical Man-Month
   Canfora G., 2006, P 2006 ACMIEEE INT S, P364
   Ciupa I., 2004, THESIS
   Connolly T, 1997, MANAGE SCI, V43, P1029, DOI 10.1287/mnsc.43.7.1029
   Derby Esther., 2006, AGILE RETROSPECTIVES
   Devore J., 1999, APPL STAT ENG SCI
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Feldt R, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P343, DOI 10.1109/ICST.2014.47
   G. Inc. and the Open Handset Alliance, DOWNL ANDR STUD SDK
   Glass RL, 2006, IEEE SOFTWARE, V23, P55, DOI 10.1109/MS.2006.113
   Gligoric Milos, 2014, Proceedings of the 29th ACM/IEEE international conference on Automated software engineering, P361, DOI 10.1145/2642937.2643019
   Greiler M, 2012, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2012.6227189
   Halkjelsvik T, 2012, PSYCHOL BULL, V138, P238, DOI 10.1037/a0025996
   Hansson D. H., TEST INDUCED DESIGN
   Hansson D. H., TDD IS DEAD LONG LIV
   Hatton L, 2007, COMPUTER, V40, P64, DOI 10.1109/MC.2007.58
   Hattori L., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P235, DOI 10.1145/1810295.1810339
   Herzig K, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P483, DOI 10.1109/ICSE.2015.66
   Hindle A., 2016, ANAL TEST DRIVEN DEV, DOI [10.7287/peerj.preprints.1920v2, DOI 10.7287/PEERJ.PREPRINTS.1920V2]
   Hopcroft John E., 2007, INTRO AUTOMATA THEOR, V3rd
   Hurdugaci V, 2012, EUR CON SFTWR MTNCE, P11, DOI 10.1109/CSMR.2012.12
   Inozemtseva Laura Michelle McLean, 2017, THESIS
   Janzen D, 2005, COMPUTER, V38, P43, DOI 10.1109/MC.2005.314
   Janzen DS, 2008, IEEE SOFTWARE, V25, P77, DOI 10.1109/MS.2008.34
   Johnson PM, 2013, IEEE SOFTWARE, V30, P57, DOI 10.1109/MS.2013.69
   Johnson PM, 2003, PROC INT CONF SOFTW, P641, DOI 10.1109/ICSE.2003.1201249
   Jorgensen M., 2004, "8th Internation Conference on Empirical Assessment in Software Engineering (EASE 2004)" Workshop - 26th International Conference on Software Engineering, P29, DOI 10.1049/ic:20040396
   Kochhar PS, 2013, INT CONF QUAL SOFTW, P103, DOI 10.1109/QSIC.2013.57
   Kollanus S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P403, DOI 10.1109/QUATIC.2010.73
   Kou HB, 2010, AUTOMAT SOFTW ENG, V17, P57, DOI 10.1007/s10515-009-0058-8
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Mäntylä MV, 2012, SOFTWARE QUAL J, V20, P145, DOI 10.1007/s11219-011-9157-4
   Marinescu P., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, ISSTA 2014, P93
   Marsavina C, 2014, IEEE INT WORK C SO, P195, DOI 10.1109/SCAM.2014.28
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Minelli R, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P147, DOI 10.1109/VISSOFT.2014.31
   Mishali O, 2008, LECT NOTES BUS INF P, V9, P63
   Muller M. M., 2003, P 5 INT WORKSH EC DR
   Munir H., 2014, Proc. 18th Int. Conf. Eval. Assess. Softw. Eng. - EASE, V14, P1
   Munson JC, 1998, PROC IEEE INT CONF S, P24, DOI 10.1109/ICSM.1998.738486
   Muntean P., 2014, P INT WORKSH INN SOF, P84
   Nagappan N, 2008, EMPIR SOFTW ENG, V13, P289, DOI 10.1007/s10664-008-9062-z
   Negara S, 2013, LECT NOTES COMPUT SC, V7920, P552, DOI 10.1007/978-3-642-39038-8_23
   Oram A.Wilson., 2010, Making Software: What Really Works, and Why We Believe It
   Palomba F, 2017, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2017.12
   Patterson A., 2003, SIGCSE Bulletin, V35, P11, DOI 10.1145/961290.961518
   Pham R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P30, DOI 10.1145/2635868.2635925
   Pinto L.S., 2012, P ACM SIGSOFT 20 INT, P1
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Pressman R. S., 2005, SOFTWARE ENG PRACTIT
   Proksch S, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P250, DOI 10.1109/SANER.2017.7884626
   Rafique Y, 2013, IEEE T SOFTWARE ENG, V39, P835, DOI 10.1109/TSE.2012.28
   Robbes R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P847, DOI 10.1145/1368088.1368219
   Romano S., 2016, P INT C EV ASS SOFTW
   Romano S, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915996
   Romano S, 2017, INFORM SOFTWARE TECH, V89, P64, DOI 10.1016/j.infsof.2017.03.010
   Rooksby J, 2009, COMPUT SUPP COOP W J, V18, P559, DOI 10.1007/s10606-009-9098-7
   Rothermel G, 2003, IEEE SOFTWARE, V20, P74, DOI 10.1109/MS.2003.1231157
   Roy MM, 2008, J EXP PSYCHOL-APPL, V14, P266, DOI 10.1037/1076-898X.14.3.266
   Roy MM, 2005, PSYCHOL BULL, V131, P738, DOI 10.1037/0033-2909.131.5.738
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Runeson P, 2006, IEEE SOFTWARE, V23, P22, DOI 10.1109/MS.2006.91
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Vassallo C, 2017, PROC IEEE INT CONF S, P183, DOI 10.1109/ICSME.2017.67
   Wang YH, 2004, LECT NOTES COMPUT SC, V3134, P32
   Wilkerson JW, 2012, IEEE T SOFTWARE ENG, V38, P547, DOI 10.1109/TSE.2011.46
   Williams L, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P34, DOI 10.1109/ISSRE.2003.1251029
   Zaidman Andy, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P220, DOI 10.1109/ICST.2008.47
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
NR 93
TC 55
Z9 57
U1 4
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2019
VL 45
IS 3
BP 261
EP 284
DI 10.1109/TSE.2017.2776152
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA HU4ME
UT WOS:000465248300003
OA Green Published
DA 2024-07-18
ER

PT J
AU Benni, KE
   Keung, J
   Phannachitta, P
   Monden, A
   Mensah, S
AF Benni, Kwabena Ebo
   Keung, Jacky
   Phannachitta, Passakorn
   Monden, Akito
   Mensah, Solomon
TI MAHAKIL: Diversity Based Oversampling Approach to Alleviate the Class
   Imbalance Issue in Software Defect Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software defect prediction; class imbalance learning; synthetic sample
   generation; data sampling methods; classification problems
ID STATIC CODE ATTRIBUTES; FAULT PREDICTION; CLASSIFICATION; REDUCTION;
   MODELS; FISH
AB Highly imbalanced data typically make accurate predictions difficult. Unfortunately, software defect datasets tend to have fewer defective modules than non-defective modules. Synthetic oversampling approaches address this concern by creating new minority defective modules to balance the class distribution before a model is trained. Notwithstanding the successes achieved by these approaches, they mostly result in over-generalization (high rates of false alarms) and generate near-duplicated data instances (less diverse data). In this study, we introduce MAHAKIL, a novel and efficient synthetic oversampling approach for software defect datasets that is based on the chromosomal theory of inheritance. Exploiting this theory, MAHAKIL interprets two distinct sub-classes as parents and generates a new instance that inherits different traits from each parent and contributes to the diversity within the data distribution. We extensively compare MAHAKIL with SMOTE, Borderline-SMOTE, ADASYN, Random Oversampling and the No sampling approach using 20 releases of defect datasets from the PROMISE repository and five prediction models. Our experiments indicate that MAHAKIL improves the prediction performance for all the models and achieves better and more significant pf values than the other oversampling approaches, based on Brunner's statistical significance test and Cliff's effect sizes. Therefore, MAHAKIL is strongly recommended as an efficient alternative for defect prediction models built on highly imbalanced datasets.
C1 [Benni, Kwabena Ebo; Keung, Jacky; Mensah, Solomon] City Univ Hong Kong, Dept Comp Sci, Kowloon Tong, Hong Kong, Peoples R China.
   [Phannachitta, Passakorn] Chiang Mai Univ, Coll Arts Media & Technol, Chiang Mai 50200, Thailand.
   [Monden, Akito] Okayama Univ, Grad Sch Nat Sci & Technol, Okayama 7000082, Japan.
C3 City University of Hong Kong; Chiang Mai University; Okayama University
RP Benni, KE (corresponding author), City Univ Hong Kong, Dept Comp Sci, Kowloon Tong, Hong Kong, Peoples R China.
EM kebennin2-c@my.cityu.edu.hk; Jacky.Keung@cityu.edu.hk;
   passakorn.p@cmu.ac.th; monden@okayama-u.ac.jp;
   smensah2-c@my.cityu.edu.hk
RI Keung, Jacky/ABA-7089-2020; Keung, Jacky/X-4693-2019
OI Keung, Jacky/0000-0002-3803-9600; Bennin, Kwabena/0000-0001-9140-9271;
   Monden, Akito/0000-0003-4295-207X
FU General Research Fund of the Research Grants Council of Hong Kong
   [11208017, 11214116]; research funds of City University of Hong Kong
   [7004683, 7004474]; JSPS KAKENHI [17K00102]; Grants-in-Aid for
   Scientific Research [17K00102] Funding Source: KAKEN
FX This work is supported in part by the General Research Fund of the
   Research Grants Council of Hong Kong (No. 11208017 and 11214116), the
   research funds of City University of Hong Kong (No. 7004683 and 7004474)
   and JSPS KAKENHI 17K00102.
CR Abu Shanab A, 2012, 2012 IEEE 13TH INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI), P415, DOI 10.1109/IRI.2012.6303039
   Aida T, 1921, GENETICS, V6, P554
   [Anonymous], 2010, P 6 INT C PRED MOD S
   [Anonymous], 1993, MORGAN KAUFMANN SERI
   [Anonymous], J MAIZE SCI
   [Anonymous], P 11 INT S EMP SOFTW
   [Anonymous], 2021, CARET CLASSIFICATION
   [Anonymous], 2017, Data mining with R: Learning with case studies
   [Anonymous], 2012, R: A Language and Environment for Statistical Computing
   [Anonymous], P 16 IEEE INT S SOFT
   [Anonymous], AUTOMAT SOFTW ENG
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Barua S, 2014, IEEE T KNOWL DATA EN, V26, P405, DOI 10.1109/TKDE.2012.232
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bennin KE, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P214, DOI 10.1109/QRS.2016.33
   Bennin KE, 2016, P INT COMP SOFTW APP, P154, DOI 10.1109/COMPSAC.2016.144
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L., 2001, Mach. Learn., V45, P5
   BRIAND LC, 1993, IEEE T SOFTWARE ENG, V19, P1028, DOI 10.1109/32.256851
   Brunner E, 2002, J STAT PLAN INFER, V108, P37, DOI 10.1016/S0378-3758(02)00269-0
   BUCKLAND M, 1994, J AM SOC INFORM SCI, V45, P12, DOI 10.1002/(SICI)1097-4571(199401)45:1<12::AID-ASI2>3.0.CO;2-L
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chawla NV, 2003, LECT NOTES ARTIF INT, V2838, P107, DOI 10.1007/978-3-540-39804-2_12
   COVER TM, 1967, IEEE T INFORM THEORY, V13, P21, DOI 10.1109/TIT.1967.1053964
   Domingos Pedro, 1999, P 5 ACM SIGKDD INT C, P155, DOI DOI 10.1145/312129.312220
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   García V, 2012, KNOWL-BASED SYST, V25, P13, DOI 10.1016/j.knosys.2011.06.013
   GJEDREM T, 1983, AQUACULTURE, V33, P51, DOI 10.1016/0044-8486(83)90386-1
   Gray David, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P96, DOI 10.1049/ic.2011.0012
   Haibo He, 2009, IEEE Transactions on Knowledge and Data Engineering, V21, P1263, DOI 10.1109/TKDE.2008.239
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Han H, 2005, LECT NOTES COMPUT SC, V3644, P878, DOI 10.1007/11538059_91
   Hang XS, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P345
   He HB, 2008, IEEE IJCNN, P1322, DOI 10.1109/IJCNN.2008.4633969
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Japkowicz N., 2002, Intelligent Data Analysis, V6, P429
   Joshi MV, 2001, 2001 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P257, DOI 10.1109/ICDM.2001.989527
   Jost L, 2006, OIKOS, V113, P363, DOI 10.1111/j.2006.0030-1299.14714.x
   Jureczko M., 2010, Model Methods Syst Dependability Oficyna Wydawnicza Politech Wroclawskiej, P69
   Kamei Yasutaka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P196
   Khoshgoftaar T. M., 1995, Annals of Software Engineering, V1, P141, DOI 10.1007/BF02249049
   Khoshgoftaar TM, 2004, EMPIR SOFTW ENG, V9, P229, DOI 10.1023/B:EMSE.0000027781.18360.9b
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Kitchenham Barbara., 2015, Proceedings of the 19th International Conference on Evaluation and Assessment in Software Engineering, P1
   Kocaguneli E, 2013, IEEE T SOFTWARE ENG, V39, P1040, DOI 10.1109/TSE.2012.88
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Kraemer HC, 2006, BIOL PSYCHIAT, V59, P990, DOI 10.1016/j.biopsych.2005.09.014
   Kubat M., 1997, ADDRESSING CURSE IMB, V97, P179
   Laradji IH, 2015, INFORM SOFTWARE TECH, V58, P388, DOI 10.1016/j.infsof.2014.07.005
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Liu Alexander, 2007, Proceedings of the International Conference on Data Mining. DMIN 2007, P66
   Liu ZJ, 2004, AQUACULTURE, V238, P1, DOI 10.1016/j.aquaculture.2004.05.027
   MA Y, 2006, ADV MACHINE LEARNING, P237
   Mahalanobis P. C., 1936, P NATL I SCI INDIA, V2, P49
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Monden A, 2013, IEEE T SOFTWARE ENG, V39, P1345, DOI 10.1109/TSE.2013.21
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Pai GJ, 2007, IEEE T SOFTWARE ENG, V33, P675, DOI [10.1109/TSE.2007.70722, 10.1109/TSE.2007.70722.]
   Pazzani M.J., 1994, INT C MACHINE LEARNI, P217
   Pelayo L, 2007, NAFIPS 2007 - 2007 ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY, P69, DOI 10.1109/NAFIPS.2007.383813
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Provost F., 2000, P AAAI 2000 WORKSH I, V68, P1, DOI DOI 10.1109/SOCPAR.2011
   Shirabad J.S., 2005, The PROMISE Repository of Software Engineering Databases
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Song QB, 2006, IEEE T SOFTWARE ENG, V32, P69, DOI 10.1109/TSE.2006.1599417
   Sun YM, 2007, PATTERN RECOGN, V40, P3358, DOI 10.1016/j.patcog.2007.04.009
   Sun ZB, 2012, IEEE T SYST MAN CY C, V42, P1806, DOI 10.1109/TSMCC.2012.2226152
   Sutton WS, 1903, BIOL BULL-US, V4, P231, DOI 10.2307/1535741
   Tang W, 2004, PROC INT C TOOLS ART, P373
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Vandecruys O, 2008, J SYST SOFTWARE, V81, P823, DOI 10.1016/j.jss.2007.07.034
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Weiss GM., 2001, EFFECT CLASS DISTRIB
   Wohlin C., 2012, Experimentation in Software Engineering
   Wong GY, 2013, IEEE IND ELEC, P2354, DOI 10.1109/IECON.2013.6699499
   Xi Tan, 2011, 2011 18th Working Conference on Reverse Engineering, P244, DOI 10.1109/WCRE.2011.37
   Yoon K, 2007, NEURAL COMPUT APPL, V16, P295, DOI 10.1007/s00521-007-0089-7
NR 80
TC 186
Z9 201
U1 0
U2 77
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2018
VL 44
IS 6
BP 534
EP 550
DI 10.1109/TSE.2017.2731766
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GJ4FE
UT WOS:000435335100002
DA 2024-07-18
ER

PT J
AU Alves, ELG
   Song, M
   Massoni, T
   Machado, PDL
   Kim, M
AF Alves, Everton L. G.
   Song, Myoungkyu
   Massoni, Tiago
   Machado, Patricia D. L.
   Kim, Miryung
TI Refactoring Inspection Support for Manual Refactoring Edits
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Refactoring; refactoring anomalies; code inspection
ID IDENTIFICATION
AB Refactoring is commonly performed manually, supported by regression testing, which serves as a safety net to provide confidence on the edits performed. However, inadequate test suites may prevent developers from initiating or performing refactorings. We propose REFDISTILLER, a static analysis approach to support the inspection of manual refactorings. It combines two techniques. First, it applies predefined templates to identify potential missed edits during manual refactoring. Second, it leverages an automated refactoring engine to identify extra edits that might be incorrect. REFDISTILLER also helps determine the root cause of detected anomalies. In our evaluation, REFDISTILLER identifies 97 percent of seeded anomalies, of which 24 percent are not detected by generated test suites. Compared to running existing regression test suites, it detects 22 times more anomalies, with 94 percent precision on average. In a study with 15 professional developers, the participants inspected problematic refactorings with REFDISTILLER versus testing only. With REFDISTILLER, participants located 90 percent of the seeded anomalies, while they located only 13 percent with testing. The results show REFDISTILLER can help check the correctness of manual refactorings.
C1 [Alves, Everton L. G.] Univ Fed Campina Grande, Dept Comp Sci, BR-58109900 Campina Grande, Brazil.
   [Song, Myoungkyu] Univ Nebraska Omaha, Dept Comp Sci, Omaha, NE 68182 USA.
   [Massoni, Tiago] Univ Fed Campina Grande, Dept Comp Sci, BR-58429900 Campina Grande, PB, Brazil.
   [Machado, Patricia D. L.] Univ Fed Campina Grande, Syst & Comp Dept, BR-58109900 Campina Grande, Brazil.
   [Kim, Miryung] Univ Calif Los Angeles, Dept Comp Sci, Los Angeles, CA 90095 USA.
C3 Universidade Federal de Campina Grande; University of Nebraska System;
   University of Nebraska Omaha; Universidade Federal de Campina Grande;
   Universidade Federal de Campina Grande; University of California System;
   University of California Los Angeles
RP Alves, ELG (corresponding author), Univ Fed Campina Grande, Dept Comp Sci, BR-58109900 Campina Grande, Brazil.
EM everton@copin.ufcg.edu.br; mksong1117@gmail.com;
   massoni@computacao.ufcg.edu.br; patricia@computacao.ufcg.edu.br;
   miryung@cs.ucla.edu
RI Massoni, Tiago/AAE-9376-2020; Machado, Patricia/B-5346-2009
OI Massoni, Tiago/0000-0002-9423-7556; Machado,
   Patricia/0000-0002-0661-0067
FU National Science Foundation [CCF-1527923, CCF-1460325, CNS-1239498];
   Google Faculty Award; National Institute of Science and Technology for
   Software Engineering - CNPq/Brasil [573964/2008-4]; Direct For Computer
   & Info Scie & Enginr; Division of Computing and Communication
   Foundations [1460325] Funding Source: National Science Foundation
FX This work was supported in part by the National Science Foundation under
   grants CCF-1527923, CCF-1460325, CNS-1239498, a Google Faculty Award,
   and by the National Institute of Science and Technology for Software
   Engineering, funded by CNPq/Brasil, grant 573964/2008-4.
CR Ackerman A. F., 1984, Software Validation, Inspection - Testing - Verification - Alternatives. Proceedings of the Symposium, P13
   ACKERMAN AF, 1989, IEEE SOFTWARE, V6, P31, DOI 10.1109/52.28121
   Alves E., 2014, P INT S FDN SOFTW EN
   Alves E. L., 2016, ADDITIONAL ARTIFACTS
   Alves ELG, 2017, J SYST SOFTWARE, V123, P223, DOI 10.1016/j.jss.2016.02.001
   Alves ELG, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1534, DOI 10.1145/2695664.2695811
   Alves ELG, 2016, SOFTW TEST VERIF REL, V26, P402, DOI 10.1002/stvr.1603
   [Anonymous], 2007, P 6 JOINT M EUR SOFT
   [Anonymous], 2010, Proceedings of the International Conference on Software Maintenance (ICSM)
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   Cornélio M, 2010, SCI COMPUT PROGRAM, V75, P106, DOI 10.1016/j.scico.2009.10.001
   Dig D, 2005, PROC IEEE INT CONF S, P389
   Do H, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P60
   Do HS, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P113
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fokaefs M, 2012, J SYST SOFTWARE, V85, P2241, DOI 10.1016/j.jss.2012.04.013
   Foster SR, 2012, PROC INT CONF SOFTW, P222, DOI 10.1109/ICSE.2012.6227191
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Ge J. W. X., 2014, REFACTORING AWARE CO
   Ge X, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1095, DOI 10.1145/2568225.2568280
   Ge X, 2012, PROC INT CONF SOFTW, P211, DOI 10.1109/ICSE.2012.6227192
   Ge Xi, 2014, P 7 INT WORKSHOP COO, P99, DOI 10.1145/2593702
   GLIGORIC M, 2013, PROC EUR CONF OBJ, V7920, P629
   Gligoric M., 2010, P 32 ACM IEEE INT C, P225, DOI 10.1145/1806799.1806835
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1
   Kim M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/1985793.1985815
   Mens T, 2005, J SOFTW MAINT EVOL-R, V17, P247, DOI 10.1002/smr.316
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mongiovi M, 2014, SCI COMPUT PROGRAM, V93, P39, DOI 10.1016/j.scico.2013.11.001
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Murphy-Hill E., 2008, ICSE '08, P421
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Negara S, 2013, LECT NOTES COMPUT SC, V7920, P552, DOI 10.1007/978-3-642-39038-8_23
   Negara S, 2012, LECT NOTES COMPUT SC, V7313, P79, DOI 10.1007/978-3-642-31057-7_5
   Opdyke WF., 1990, P SOOPPA 90 S OBJECT
   Overbey J. L., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P303, DOI 10.1109/ASE.2011.6100067
   Overbey J.L., 2010, ACM SIGPLAN Fortran Forum, V29, P11
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Rachatasumrit N, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P357, DOI 10.1109/ICSM.2012.6405293
   Schäfer M, 2010, ACM SIGPLAN NOTICES, V45, P286, DOI 10.1145/1932682.1869485
   Soares G., 2011, Proceedings of the 2011 25th Brazilian Symposium on Software Engineering (SBES 2011), P164, DOI 10.1109/SBES.2011.21
   Soares G, 2013, IEEE T SOFTWARE ENG, V39, P147, DOI 10.1109/TSE.2012.19
   Soares G, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.63
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Vakilian M., 2011, Proceedings of the 3rd ACM SIGPLAN workshop on Evaluation and usability of programming languages and tools, P31
   Vakilian M, 2012, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2012.6227190
   Weissgerber Peter., 2006, Proceedings of the 2006 International Workshop on Mining Software Repositories, MSR '06, P112
   Zhang LM, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P170, DOI 10.1109/ISSRE.2011.26
NR 49
TC 10
Z9 11
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2018
VL 44
IS 4
BP 365
EP 383
DI 10.1109/TSE.2017.2679742
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GF4CH
UT WOS:000431906800003
OA hybrid
DA 2024-07-18
ER

PT J
AU Yusop, NSM
   Grundy, J
   Vasa, R
AF Yusop, Nor Shahida Mohamad
   Grundy, John
   Vasa, Rajesh
TI Reporting Usability Defects: A Systematic Literature Review
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Systematic review; test management; user interface; usability testing;
   usability defect reporting
ID PRIORITIZATION
AB Usability defects can be found either by formal usability evaluation methods or indirectly during system testing or usage. No matter how they are discovered, these defects must be tracked and reported. However, empirical studies indicate that usability defects are often not clearly and fully described. This study aims to identify the state of the art in reporting of usability defects in the software engineering and usability engineering literature. We conducted a systematic literature review of usability defect reporting drawing from both the usability and software engineering literature from January 2000 until March 2016. As a result, a total of 57 studies were identified, in which we classified the studies into three categories: reporting usability defect information, analysing usability defect data and key challenges. Out of these, 20 were software engineering studies and 37 were usability studies. The results of this systematic literature review show that usability defect reporting processes suffer from a number of limitations, including: mixed data, inconsistency of terms and values of usability defect data, and insufficient attributes to classify usability defects. We make a number of recommendations to improve usability defect reporting and management in software engineering.
C1 [Yusop, Nor Shahida Mohamad] Univ Teknol MARA, Fac Comp & Math Sci, Shah Alam, Malaysia.
   [Yusop, Nor Shahida Mohamad] Swinburne Univ Technol, Fac Sci Engn & Technol, POB 218, Hawthorn, Vic 3122, Australia.
   [Grundy, John; Vasa, Rajesh] Deakin Univ, Fac Sci Engn & Built Environm, AUD 23880, Geelong, Vic, Australia.
C3 Universiti Teknologi MARA; Swinburne University of Technology; Deakin
   University
RP Yusop, NSM (corresponding author), Univ Teknol MARA, Fac Comp & Math Sci, Shah Alam, Malaysia.; Yusop, NSM (corresponding author), Swinburne Univ Technol, Fac Sci Engn & Technol, POB 218, Hawthorn, Vic 3122, Australia.
EM nor_shahida@tmsk.uitm.edu.my; j.grundy@deakin.edu.au;
   rajesh.vasa@deakin.edu.au
RI Grundy, John/AAF-1716-2019; MOHAMAD YUSOP, NOR SHAHIDA/KQT-8730-2024;
   Vasa, Rajesh/GOK-1135-2022
OI Grundy, John/0000-0003-4928-7076; Vasa, Rajesh/0000-0003-4805-1467
FU Ministry of Higher Education Malaysia; Universiti Teknologi MARA (UiTM);
   ARC Discovery projects scheme; Deakin Software Technology Innovation
   Lab; Data61
FX Support for the first author from the Ministry of Higher Education
   Malaysia, Universiti Teknologi MARA (UiTM), and partial support from the
   ARC Discovery projects scheme, the Deakin Software Technology Innovation
   Lab, and Data61 for all authors, is gratefully acknowledged.
CR Achimugu P, 2014, INFORM SOFTWARE TECH, V56, P568, DOI 10.1016/j.infsof.2014.02.001
   Alsumait Asmaa, 2010, Journal of Software, V5, P654, DOI 10.4304/jsw.5.6.654-661
   Anbalagan Prasanth, 2009, 2009 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM), P481, DOI 10.1109/ESEM.2009.5315985
   Andre T.S., 2000, P HUM FACT ERG SOC A, V44, P573
   Andre TS, 2003, HUM FACTORS, V45, P455, DOI 10.1518/hfes.45.3.455.27255
   [Anonymous], 2008, P 5 NORD C HUM COMP, DOI DOI 10.1145/1463160.1463228
   [Anonymous], 2004, 2004 C HUM FACT COMP
   Au FioraT. W., 2008, P 9 C AUSTRALASIAN U, V76, P55
   Aziz M, 2005, Proceedings of the IEEE SoutheastCon 2004, P468, DOI 10.1109/SECON.2005.1423289
   Baker S, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P579, DOI 10.1109/ASWEC.2008.40
   Blair S., 2004, CISC VIS NETW IND GL
   Bligård LO, 2013, ADV HUM-COMPUT INTER, V2013, DOI 10.1155/2013/931698
   Botella F., 2013, P 2013 CHIL C HUM CO, P72, DOI DOI 10.1145/2535597.2535601
   Breu S, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P301
   Bruun A, 2014, BEHAV INFORM TECHNOL, V33, P1148, DOI 10.1080/0144929X.2014.883552
   Capra M. G., 2007, P HUM FACT ERG SOC 5, P474
   Capra MG, 2006, THESIS
   Cavalcanti Y. C., 2013, SOFTW EVOL PROCESS, V26, P1
   Cavalcanti YC, 2013, SOFTWARE QUAL J, V21, P39, DOI 10.1007/s11219-011-9164-5
   Çetin G, 2007, LECT NOTES COMPUT SC, V4564, P32
   Chilana PK, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2243
   Chilana Parmit K., 2012, P SIGCHI C HUM FACT, P1549, DOI [10.1145/2207676.2208620, DOI 10.1145/2207676.2208620]
   Despalatovic L., 2013, INT J COMPUT INF TEC, V2, P958
   Fernandez A, 2011, INFORM SOFTWARE TECH, V53, P789, DOI 10.1016/j.infsof.2011.02.007
   Folstad Asbjorn, 2012, Proceedings of the IADIS International Conference on e-society 2012, P257
   González MP, 2008, INFORM SOFTWARE TECH, V50, P547, DOI 10.1016/j.infsof.2007.06.001
   Gorlenko L., 2006, CHI'06 Extended Abstracts on Human Factors in Computing Systems, P803
   Gutwin C, 2000, IEEE 9TH INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P98, DOI 10.1109/ENABL.2000.883711
   Ham DH, 2014, COGN TECHNOL WORK, V16, P373, DOI 10.1007/s10111-013-0267-6
   Hartson HR, 2001, INT J HUM-COMPUT INT, V13, P373, DOI 10.1207/S15327590IJHC1304_03
   Harty J, 2011, COMMUN ACM, V54, P44, DOI 10.1145/1897816.1897836
   Hassenzahl M, 2000, BEHAV INFORM TECHNOL, V19, P29, DOI 10.1080/014492900118777
   Herraiz I., 2008, Proceedings of the 2008 International Working Conference on Mining Software Repositories. MSR'08, P145
   Hertzum M, 2003, INT J HUM-COMPUT INT, V15, P183, DOI 10.1207/S15327590IJHC1501_14
   Hoegh RT, 2008, BEHAV INFORM TECHNOL, V27, P301, DOI 10.1080/01449290701766325
   Hoegh RT, 2006, INT J HUM-COMPUT INT, V21, P173, DOI 10.1207/s15327590ijhc2102_4
   Hornbaek K., 2006, P HUMAN FACTORS ERGO, V50, P2523
   Hornbaek K, 2008, HUM-COMPUT INTERACT, V23, P251, DOI 10.1080/07370020802278205
   Hornbæk K, 2006, INT J HUM-COMPUT ST, V64, P79, DOI 10.1016/j.ijhcs.2005.06.002
   Howarth J, 2009, INT J HUM-COMPUT ST, V67, P533, DOI 10.1016/j.ijhcs.2009.02.003
   Hvannberg ET, 2007, INTERACT COMPUT, V19, P225, DOI 10.1016/j.intcom.2006.10.001
   ISO/ IEC, 2000, FDIS912612000 ISOIEC
   Itkonen Juha, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P61
   Ivory MY, 2001, ACM COMPUT SURV, V33, P470, DOI 10.1145/503112.503114
   Jacobsen N., 1998, CHI 98 Conference Summary on Human Factors in Computing Systems (CHI '98), P255
   Keenan S. L., 1999, Empirical Software Engineering, V4, P71, DOI 10.1023/A:1009855231530
   Khajouei R, 2011, J BIOMED INFORM, V44, P948, DOI 10.1016/j.jbi.2011.07.002
   Kitchenham B., 2007, EBSE200701 UK KEEL U
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kitchenham BA, 2010, EMPIR SOFTW ENG, V15, P618, DOI 10.1007/s10664-010-9134-8
   Ko AJ, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P1
   Koutsabasis P, 2007, LECT NOTES COMPUT SC, V4550, P569
   Laukkanen EI, 2011, INT SYMP EMP SOFTWAR, P197, DOI 10.1109/ESEM.2011.28
   Lavery D, 1997, BEHAV INFORM TECHNOL, V16, P246, DOI 10.1080/014492997119824
   Lotufo R., 2012, 20120901 GSDLABTR
   Lotufo R. V., 2013, NEXT GENERATION BUG
   Manka JS, 2003, PROCEEDINGS OF THE TWENTY-NINTH ANNUAL CONFERENCE ON EXPLOSIVES AND BLASTING TECHNIQUE, VOL 1, P169
   Maplesden D, 2015, IEEE T SOFTWARE ENG, V41, P691, DOI 10.1109/TSE.2015.2396514
   Matejka J., Proceedings of UIST. Santa Barbara, California, USA: ACM, P175, DOI DOI 10.1145/2047196.2047218
   Mclnerney P., 2001, P HUM FACT COMP SYST, P497
   Nichols D. M., 2006, Software Process Improvement and Practice, V11, P149, DOI 10.1002/spip.256
   Nichols D. M., 2006, OPEN SOURCE SOFTW BU, P167
   Nistor A, 2013, IEEE WORK CONF MIN S, P237, DOI 10.1109/MSR.2013.6624035
   Norgaard Mie, 2008, Proceedings of the 7th ACM Conference on Designing Interactive Systems. DIS 2008, P212
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petrie H., 2012, P SIGCHI C HUMAN FAC, P2107, DOI DOI 10.1145/2207676.2208363
   Pinelle D, 2009, GROUP 2009 PROCEEDINGS, P169
   Raza Arif, 2010, Advances in Software Engineering, DOI 10.1155/2010/517532
   Raza A., 2011, IET SOFTW, V6
   Raza A, 2013, 2013 EIGHTH INTERNATIONAL CONFERENCE ON DIGITAL INFORMATION MANAGEMENT (ICDIM), P391, DOI 10.1109/ICDIM.2013.6694005
   Redish J.G., 2002, CHI '02 extended abstracts on Human factors in computing systems, P885
   Salleh N, 2011, IEEE T SOFTWARE ENG, V37, P509, DOI 10.1109/TSE.2010.59
   Sauro J., 2005, P C HUMAN FACTORS CO, P401, DOI [10.1145/1054972.1055028, DOI 10.1145/1054972.1055028]
   Seffah A, 2006, SOFTWARE QUAL J, V14, P159, DOI 10.1007/s11219-006-7600-8
   Simoes F. P., 2013, THESIS
   Strate JD, 2013, IEEE T RELIAB, V62, P444, DOI 10.1109/TR.2013.2259204
   Sureka A, 2012, LECT NOTES COMPUT SC, V7304, P288, DOI 10.1007/978-3-642-30561-0_20
   Terry M., 2010, P 28 INT C HUM FACT, P1
   Twidale M. B., 2005, P 38 ANN HAW INT C S, P1
   Walia GS, 2009, INFORM SOFTWARE TECH, V51, P1087, DOI 10.1016/j.infsof.2009.01.004
   Wilson C. E., 2001, Interactions, V8, P15, DOI 10.1145/369825.369828
   Yehuda H., 2007, CHI 07 HUM FACT COMP, V2, P1899
   Zaman S., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P199, DOI 10.1109/MSR.2012.6224281
   Zaman S., 2011, Proceedings of the 8th working conference on mining software repositories, P93, DOI [10.1145/1985441.1985457, DOI 10.1145/1985441.1985457]
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
   Zimmermann T, 2009, PROC INT CONF SOFTW, P247, DOI 10.1109/ICSE-COMPANION.2009.5070993
NR 87
TC 25
Z9 26
U1 2
U2 32
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2017
VL 43
IS 9
BP 848
EP 867
DI 10.1109/TSE.2016.2638427
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA FH6TE
UT WOS:000411309800003
DA 2024-07-18
ER

PT J
AU Hebig, R
   Khelladi, DE
   Bendraou, R
AF Hebig, Regina
   Khelladi, Djamel Eddine
   Bendraou, Reda
TI Approaches to Co-Evolution of Metamodels and Models: A Survey
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Survey; software engineering; metamodels; models; design notations and
   documentation
ID MIGRATION
AB Modeling languages, just as all software artifacts, evolve. This poses the risk that legacy models of a company get lost, when they become incompatible with the new language version. To address this risk, a multitude of approaches for metamodel-model co-evolution were proposed in the last 10 years. However, the high number of solutions makes it difficult for practitioners to choose an appropriate approach. In this paper, we present a survey on 31 approaches to support metamodel-model co-evolution. We introduce a taxonomy of solution techniques and classify the existing approaches. To support researchers, we discuss the state of the art, in order to better identify open issues. Furthermore, we use the results to provide a decision support for practitioners, who aim to adopt solutions from research.
C1 [Hebig, Regina] Chalmers Univ Technol, Comp Sci & Engn Goteborg, SE-41296 Gothenburg, Sweden.
   [Hebig, Regina] Univ Gothenburg, S-40530 Gothenburg, Vastra Gotaland, Sweden.
   [Khelladi, Djamel Eddine; Bendraou, Reda] UPMC Univ Paris 06, Sorbonne Univ, UMR 7606, LIP6, F-75005 Paris, France.
C3 Chalmers University of Technology; University of Gothenburg; Sorbonne
   Universite
RP Hebig, R (corresponding author), Chalmers Univ Technol, Comp Sci & Engn Goteborg, SE-41296 Gothenburg, Sweden.; Hebig, R (corresponding author), Univ Gothenburg, S-40530 Gothenburg, Vastra Gotaland, Sweden.
EM regina.hebig@lip6.fr; djamel.e.khelladi@gmail.com;
   reda.bendraou@gmail.com
RI ; Hebig, Regina/B-5284-2015
OI Bendraou, Reda/0000-0003-3259-6286; Hebig, Regina/0000-0002-1459-2081
CR Alanen M., 2003, Difference and union of models
   Anguel A. A. Fouzia, 2015, P S COMPL SYST INT C, P645
   Anguel F, 2014, INT CONF COMP SCI, P142, DOI 10.1109/CSIT.2014.6805992
   Anguel F, 2013, 2013 11TH INTERNATIONAL SYMPOSIUM ON PROGRAMMING AND SYSTEMS (ISPS), P163, DOI 10.1109/ISPS.2013.6581482
   [Anonymous], 2014, EVOLVING SOFTWARE SY
   Balasubramanian D., 2009, P 9 OOPSLA WORKSH DO, V2, P311
   Becker S., 2007, P 1 WORKSH MDD SOA I, P35
   Behrens H., 2008, XTEXT USER GUIDE
   Blanc X, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P511, DOI 10.1145/1368088.1368158
   Burger Erik, 2010, GESELLSCHAFT INFORMA, P285
   Cicchetti A., 2008, P 2 WORKSH MOD DRIV, P1
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Cicchetti A, 2009, LECT NOTES COMPUT SC, V5563, P35, DOI 10.1007/978-3-642-02408-5_4
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   de Geest G, 2008, WORK CONF REVERSE EN, P197, DOI 10.1109/WCRE.2008.50
   Del Fabro MD, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P963, DOI 10.1145/1244002.1244215
   Demuth A, 2016, J SYST SOFTWARE, V111, P281, DOI 10.1016/j.jss.2015.03.003
   Demuth R. E., 2013, P ME MODELS, P14
   Di Rocco J., 2012, P 6 INT WORKSH MOD E, P15
   Di Ruscio Davide, 2012, Graph Transformations. Proceedings 6th International Conference, ICGT 2012, P20, DOI 10.1007/978-3-642-33654-6_2
   Di Ruscio D., 2011, P 2 INT WORKSH MOD C, P30
   Fernandez H. A. F., 2013, VINCULOS, V10, P96
   Florez H., 2012, P 6 INT WORKSH MOD E, P27
   Gamma Erich., 1994, DESIGN PATTERNS
   Garces K., 2008, RR6723 INRIA
   Garcés K, 2014, SOFTW SYST MODEL, V13, P789, DOI 10.1007/s10270-012-0297-1
   Garcés K, 2009, LECT NOTES COMPUT SC, V5562, P34, DOI 10.1007/978-3-642-02674-4_4
   Garcia Jokin., 2013, Software Language Engineering, Lecture Notes in Computer Science, P144
   Gómez P, 2014, J OBJECT TECHNOL, V13, DOI 10.5381/jot.2014.13.3.a2
   Gruschko B., 2007, P INT WORKSH MOD DRI, P20
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Hebig R, 2015, ASIA PAC SOFWR ENG, P135, DOI 10.1109/APSEC.2015.40
   HERRMANNSDOERFE.M, 2010, P 1 INT WORKSH MOD C, P76, DOI DOI 10.1145/1826147.1826161
   Herrmannsdoerfer M., 2008, P 1 INT WORKSH MOD C, P1
   Herrmannsdoerfer M., 2010, P INT WORKSH MOD EV, P33
   Herrmannsdoerfer M, 2009, LECT NOTES COMPUT SC, V5653, P52, DOI 10.1007/978-3-642-03013-0_4
   Herrmannsdoerfer M, 2011, LECT NOTES COMPUT SC, V6563, P286, DOI 10.1007/978-3-642-19440-5_18
   Herrmannsdoerfer M, 2010, LECT NOTES COMPUT SC, V6002, P205
   Herrmannsdoerfer M, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P49, DOI 10.1109/CVSM.2009.5071722
   Herrmannsdoerfer M, 2008, LECT NOTES COMPUT SC, V5301, P645, DOI 10.1007/978-3-540-87875-9_45
   Hssler J., 2005, MODELS HUMAN REASONI, P129
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Iovino L, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.3.a3
   Kelly S., 2008, Domain-Specific Modeling
   Kessentini W, 2016, LECT NOTES COMPUT SC, V9764, P138, DOI 10.1007/978-3-319-42061-5_9
   Kessentini Wael, 2015, P ACM STUD RES COMP
   Khelladi DE, 2015, LECT NOTES COMPUT SC, V9097, P263, DOI 10.1007/978-3-319-19069-3_17
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Koegel M, 2010, IEEE INT ENTERP DIST, P163, DOI 10.1109/EDOC.2010.15
   Krause Christian, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P76, DOI 10.1007/978-3-642-38883-5_10
   Kusel A, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P116, DOI 10.1109/MODELS.2015.7338242
   Langer P, 2013, J SYST SOFTWARE, V86, P551, DOI 10.1016/j.jss.2012.09.037
   Levendovszky T, 2014, SOFTW SYST MODEL, V13, P807, DOI 10.1007/s10270-012-0313-5
   Liebel G, 2014, LECT NOTES COMPUT SC, V8767, P166, DOI 10.1007/978-3-319-11653-2_11
   Lifschitz V., 2008, AAAI, V3, P1594
   LouisMRose Richard F, 2009, PROC JOINT MODSE MCC, P6
   Mantz Florian, 2012, Applications of Graph Transformations with Industrial Relevance. 4th International Symposium, AGTIVE 2011. Revised Selected and Invited Papers, P3, DOI 10.1007/978-3-642-34176-2_3
   Mantz F., 2012, GCM 2012 SEPT, P47
   Mantz F., 2013, ELECT COMMUN EASST, V58, P48
   Mantz F., 2013, P INT WORKSH PRINC S, P1
   Meyers B., 2012, ELECT COMMUN EASST, V42, P19
   Muller K., 2014, P INT WORKSH COMP VE, P19
   Narayanan A, 2009, LECT NOTES COMPUT SC, V5795, P706, DOI 10.1007/978-3-642-04425-0_57
   Paige RF, 2007, ACM T SOFTW ENG METH, V16, pB1, DOI 10.1145/1243987.1243989
   Paige RF, 2016, J SYST SOFTWARE, V111, P272, DOI 10.1016/j.jss.2015.08.047
   Reder Alexander, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P202, DOI 10.1007/978-3-642-33666-9_14
   Rose LM, 2014, SOFTW SYST MODEL, V13, P735, DOI 10.1007/s10270-012-0296-2
   Rose LM, 2014, SOFTW SYST MODEL, V13, P323, DOI 10.1007/s10270-012-0245-0
   Rose LM, 2010, LECT NOTES COMPUT SC, V6394, P61
   Rose LM, 2010, LECT NOTES COMPUT SC, V6142, P184, DOI 10.1007/978-3-642-13688-7_13
   Rose LM, 2009, IEEE INT CONF AUTOM, P545, DOI 10.1109/ASE.2009.57
   Schonenberger J., 2014, P 10 AS PAC C CONC M
   Sprinkle J, 2004, J VISUAL LANG COMPUT, V15, P291, DOI 10.1016/j.jvlc.2004.01.006
   Taentzer Gabriele, 2012, Graph Transformations. Proceedings 6th International Conference, ICGT 2012, P326, DOI 10.1007/978-3-642-33654-6_22
   Taentzer G, 2013, LECT NOTES COMPUT SC, V8107, P254, DOI 10.1007/978-3-642-41533-3_16
   Tolvanen J.-P., 2009, P 24 ACM SIGPLAN C C, P819, DOI 10.1145/1639950.1640031
   van den Brand M, 2011, LECT NOTES COMPUT SC, V6705, P36, DOI 10.1007/978-3-642-21952-8_5
   Vermolen Sander D., 2012, Software Language Engineering. 4th International Conference, SLE 2011. Revised Selected Papers, P201, DOI 10.1007/978-3-642-28830-2_11
   Vermolen S, 2008, LECT NOTES COMPUT SC, V5301, P630, DOI 10.1007/978-3-540-87875-9_44
   Wachsmuth G, 2007, LECT NOTES COMPUT SC, V4609, P600
   Wagelaar Dennis, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P192, DOI 10.1007/978-3-642-30476-7_13
   Williams J.R., 2012, 6th International Workshop on Models and Evolution, Proceedings of the ACM/IEEE 15th International Conference on Model Driven Engineering Languages and Systems, Innsbruck Austria, 15 October 2012, P39
   Wimmer M., 2010, P 2 INT WORKSH MOD T, V711, P65
   Wittern H, 2013, IEEE INT ENTERP, P209, DOI 10.1109/EDOCW.2013.30
NR 84
TC 49
Z9 50
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2017
VL 43
IS 5
BP 396
EP 414
DI 10.1109/TSE.2016.2610424
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EU9BO
UT WOS:000401332400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, L
   Chattopadhyay, A
   Wang, C
AF Zhang, Lu
   Chattopadhyay, Arijit
   Wang, Chao
TI Round-Up: Runtime Verification of Quasi Linearizability for Concurrent
   Data Structures
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Runtime verification; linearizability; serializability; atomicity;
   relaxed consistency; systematic concurrency testing; partial order
   reduction
AB We propose a new method for runtime checking of a relaxed consistency property called quasi linearizability for concurrent data structures. Quasi linearizability generalizes the standard notion of linearizability by introducing nondeterminism into the parallel computations quantitatively and then exploiting such nondeterminism to improve the runtime performance. However, ensuring the quantitative aspects of this correctness condition in the low-level code of the concurrent data structure implementation is a difficult task. Our runtime verification method is the first fully automated method for checking quasi linearizability in the C/C++ code of concurrent data structures. It guarantees that all the reported quasi linearizability violations manifested by the concurrent executions are real violations. We have implemented our method in a software tool based on the LLVM compiler and a systematic concurrency testing tool called Inspect. Our experimental evaluation shows that the new method is effective in detecting quasi linearizability violations in the source code implementations of concurrent data structures.
C1 [Zhang, Lu; Chattopadhyay, Arijit; Wang, Chao] Virginia Polytech Inst & State Univ, Bradley Dept Elect & Comp Engn, Virginia Tech, Blacksburg, VA 24061 USA.
C3 Virginia Polytechnic Institute & State University
RP Zhang, L (corresponding author), Virginia Polytech Inst & State Univ, Bradley Dept Elect & Comp Engn, Virginia Tech, Blacksburg, VA 24061 USA.
EM zhanglu@vt.edu; arijitvt@vt.edu; chaowang@vt.edu
CR Adhikari Kiran, 2013, Model Checking Software. 20th International Symposium, SPIN 2013. Proceedings, P24, DOI 10.1007/978-3-642-39176-7_3
   Adhikari K, 2016, INT J SOFTW TOOLS TE, V18, P393, DOI 10.1007/s10009-015-0373-2
   Adve V, 2003, 36TH INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE, PROCEEDINGS, P205
   Afek Y, 2010, LECT NOTES COMPUT SC, V6490, P395, DOI 10.1007/978-3-642-17653-1_29
   [Anonymous], LCNS
   ASPNES J, 1994, J ACM, V41, P1020, DOI 10.1145/185675.185815
   Burckhardt S, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P330, DOI 10.1145/1806596.1806634
   Cerny P, 2010, LECT NOTES COMPUT SC, V6174, P465, DOI 10.1007/978-3-642-14295-6_41
   Chen F, 2007, LECT NOTES COMPUT SC, V4590, P240
   Farzan A, 2008, LECT NOTES COMPUT SC, V5123, P52
   Farzan A, 2006, LECT NOTES COMPUT SC, V4144, P315, DOI 10.1007/11817963_30
   Flanagan C, 2003, ACM SIGPLAN NOTICES, V38, P338, DOI 10.1145/780822.781169
   Flanagan C., 2004, ACM SIGPLAN SIGACT S, P265
   Flanagan C, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P293, DOI 10.1145/1375581.1375618
   Haas Andreas, 2013, P ACM INT C COMPUTIN, DOI [10.1145/2482767, DOI 10.1145/2482767]
   Henzinger TA, 2013, ACM SIGPLAN NOTICES, V48, P317, DOI 10.1145/2480359.2429109
   Herlihy M., 2008, ART MULTIPROCESSOR P
   HERLIHY MP, 1990, ACM T PROGR LANG SYS, V12, P463, DOI 10.1145/78969.78972
   Huang J., 2011, ISSTA, P144, DOI [10.1145/2001420.2001438, DOI 10.1145/2001420.2001438]
   Huang JW, 2013, PLOS ONE, V8, DOI 10.1371/journal.pone.0054976
   Kahlon Vineet, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P227, DOI 10.1007/978-3-642-31424-7_20
   Kahlon V, 2010, LECT NOTES COMPUT SC, V6174, P434, DOI 10.1007/978-3-642-14295-6_39
   Kirsch Christoph M., 2012, Algorithms and Architectures for Parallel Processing. Proceedings of the 12th International Conference, ICA3PP 2012, P273, DOI 10.1007/978-3-642-33078-0_20
   Kirsch CM, 2012, DES AUT CON, P913
   LAMPORT L, 1979, IEEE T COMPUT, V28, P690, DOI 10.1109/TC.1979.1675439
   Liu Y, 2009, LECT NOTES COMPUT SC, V5850, P321
   Lu S, 2006, ACM SIGPLAN NOTICES, V41, P37, DOI 10.1145/1168918.1168864
   Payer H., 2011, Proceedings of the 30th annual ACM SIGACT-SIGOPS symposium on Principles of distributed computing, PODC '11, P331
   Said M, 2011, LECT NOTES COMPUT SC, V6617, P313, DOI 10.1007/978-3-642-20398-5_23
   Salzburg U., 2013, SCAL HIGH PERFORMANC
   Sinha A., 2011, 2011 9th IEEE/ACM International Conference on Formal Methods and Models for Codesign (MEMOCODE 2011), P99, DOI 10.1109/MEMCOD.2011.5970516
   Sinha N, 2010, PROCEEDINGS OF THE ASME TURBO EXPO 2010, VOL 1, P47
   Sinha N, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P423, DOI 10.1145/1926385.1926433
   Vafeiadis V., 2006, Proceedings of the 2006 ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming PPoPP'06, P129, DOI 10.1145/1122971.1122992
   Vafeiadis V, 2009, LECT NOTES COMPUT SC, V5403, P335, DOI 10.1007/978-3-540-93900-9_27
   Vechev M, 2009, LECT NOTES COMPUT SC, V5578, P261, DOI 10.1007/978-3-642-02652-2_21
   Vogels W, 2009, COMMUN ACM, V52, P40, DOI 10.1145/1435417.1435432
   Wang C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P221, DOI 10.1145/1985793.1985824
   Wang C, 2009, LECT NOTES COMPUT SC, V5850, P256, DOI 10.1007/978-3-642-05089-3_17
   Wang C, 2010, LECT NOTES COMPUT SC, V6015, P328, DOI 10.1007/978-3-642-12002-2_27
   Wang Chao, 2011, P INT C RUNT VER SEP, P4
   Wang LQ, 2006, IEEE T SOFTWARE ENG, V32, P93, DOI 10.1109/TSE.2006.1599419
   Xu M, 2005, ACM SIGPLAN NOTICES, V40, P1, DOI 10.1145/1064978.1065013
   Yang Y., 2008, UUCS08004 UUCS08004
   Yang Y, 2008, LECT NOTES COMPUT SC, V5156, P288, DOI 10.1007/978-3-540-85114-1_20
   Yang Y, 2009, LECT NOTES COMPUT SC, V5578, P279, DOI 10.1007/978-3-642-02652-2_22
   Zhang L, 2013, IEEE INT CONF AUTOM, P4, DOI 10.1109/ASE.2013.6693061
   Zhu H, 2015, LECT NOTES COMPUT SC, V9207, P3, DOI 10.1007/978-3-319-21668-3_1
NR 48
TC 4
Z9 4
U1 3
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2015
VL 41
IS 12
BP 1202
EP 1216
DI 10.1109/TSE.2015.2467371
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CY5TP
UT WOS:000366470700004
DA 2024-07-18
ER

PT J
AU Barr, ET
   Harman, M
   McMinn, P
   Shahbaz, M
   Yoo, S
AF Barr, Earl T.
   Harman, Mark
   McMinn, Phil
   Shahbaz, Muzammil
   Yoo, Shin
TI The Oracle Problem in Software Testing: A Survey
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Test oracle; automatic testing; testing formalism
ID AUTOMATED TEST ORACLES; PRACTICAL APPROACH; TEST SUITES; BLACK-BOX;
   SYSTEM; VERIFICATION; GENERATION; FAILURE; PRIORITIZATION; SPECIFICATION
AB Testing involves examining the behaviour of a system in order to discover potential faults. Given an input for a system, the challenge of distinguishing the corresponding desired, correct behaviour from potentially incorrect behavior is called the "test oracle problem". Test oracle automation is important to remove a current bottleneck that inhibits greater overall test automation. Without test oracle automation, the human has to determine whether observed behaviour is correct. The literature on test oracles has introduced techniques for oracle automation, including modelling, specifications, contract-driven development and metamorphic testing. When none of these is completely adequate, the final source of test oracle information remains the human, who may be aware of informal specifications, expectations, norms and domain specific information that provide informal oracle guidance. All forms of test oracles, even the humble human, involve challenges of reducing cost and increasing benefit. This paper provides a comprehensive survey of current approaches to the test oracle problem and an analysis of trends in this important area of software testing research and practice.
C1 [Barr, Earl T.; Harman, Mark; Yoo, Shin] UCL, Dept Comp Sci, London WC2R 2LS, England.
   [McMinn, Phil; Shahbaz, Muzammil] Univ Sheffield, Dept Comp Sci, Sheffield S1 4DP, S Yorkshire, England.
C3 University of London; University College London; University of Sheffield
RP Barr, ET (corresponding author), UCL, Dept Comp Sci, Gower St, London WC2R 2LS, England.
EM e.barr@ucl.ac.uk; m.harman@ucl.ac.uk; p.mcminn@sheffield.ac.uk;
   muzammil.shahbaz@gmail.com; shin.yoo@ucl.ac.uk
RI Yoo, Shin/E-3247-2015; /AAZ-7265-2020
OI Yoo, Shin/0000-0002-0836-6993; Harman, Mark/0000-0002-5864-4488; Barr,
   Earl Theodore/0000-0003-0771-7891
FU EPSRC [EP/I010386/1, EP/I010165/1] Funding Source: UKRI
CR Afshan S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P352, DOI 10.1109/ICST.2013.11
   Afshari M., 2012, Proceedings of the ACM International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software, Onward! 2012, P11
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Aichernig BK, 1999, LECT NOTES COMPUT SC, V1698, P250
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Alshahwan Nadia, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P298, DOI 10.1109/ICST.2008.56
   ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   [Anonymous], 1993, Program Verification: Fundamental Issues in Computer Science, DOI [10.1090/psapm/019/0235771, DOI 10.1090/PSAPM/019/0235771]
   [Anonymous], 1995, P 12 INT C TEST COMP
   [Anonymous], 2000, Proceedings of the Conference on the Future of Software Engineering, DOI [10.1145/336512.336546, DOI 10.1145/336512.336546]
   [Anonymous], 1989, CWI Q.
   [Anonymous], 2010, P ACM SIGSOFT INT S
   [Anonymous], 1949, C HIGH SPEED AUT CAL
   [Anonymous], LECT NOTES COMPUTER
   Araujo W, 2011, INT SYMP EMP SOFTWAR, P10, DOI 10.1109/ESEM.2011.9
   Araujo W, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P786, DOI 10.1145/1985793.1985903
   Artzi Shay, 2006, P 1 WORKSH MOD BAS T, P2006
   Astesiano E, 2002, THEOR COMPUT SCI, V286, P153, DOI 10.1016/S0304-3975(01)00368-1
   AUSTIN TM, 1994, SIGPLAN NOTICES, V29, P290, DOI 10.1145/773473.178446
   AVIZIENIS A, 1985, IEEE T SOFTWARE ENG, V11, P1491, DOI 10.1109/TSE.1985.231893
   Avizienis A., 1977, P 1 IEEE INT COMPUTE, P149
   Baader Franz, 1998, TERM REWRITING ALL
   BABICH AF, 1979, IEEE T SOFTWARE ENG, V5, P558, DOI 10.1109/TSE.1979.230192
   Baresi L., 2001, CISTR0102
   Bekrar Sofia, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P427, DOI 10.1109/ICST.2011.48
   BERNOT G, 1991, SOFTWARE ENG J, V6, P387, DOI 10.1049/sej.1991.0040
   Bernot G., 1991, P TAPSOFT 91 BRIGHT, P99
   Bertolino A, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/1595696.1595719
   Beyer D, 2005, LECT NOTES COMPUT SC, V3442, P2, DOI 10.1007/978-3-540-31984-9_2
   Binder R.V., 2000, AW OBJ TECHNOL S
   Blikle A., 1975, P 3 S MATH FDN COMP, P333
   Blum C, 2003, ACM COMPUT SURV, V35, P268, DOI 10.1145/937503.937505
   Bo Yu, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P190, DOI 10.1109/ICST.2008.39
   Bochmann G. V., 1989, P CAN C EL COMP ENG, P814
   BOCHMANN GV, 1978, COMPUT NETWORKS ISDN, V2, P361, DOI 10.1016/0376-5075(78)90015-6
   Börger E, 1999, LECT NOTES COMPUT SC, V1641, P1
   Borger E., 2000, ABSTRACT STATE MACHI, P167
   Böttger K, 2003, LECT NOTES ARTIF INT, V2543, P115
   Bouquet F., 2007, Proceedings of the 3rd International Workshop on Advances in Modelbased Testing, P95
   Bozkurt M., 2011, Proceedings of the 2011 IEEE 6th International Symposium on Service Oriented System Engineering (SOSE 2011), P13, DOI 10.1109/SOSE.2011.6139088
   Briand LC, 2003, SOFTWARE PRACT EXPER, V33, P637, DOI 10.1002/spe.520
   Cadar C, 2008, ACM T INFORM SYST SE, V12, DOI 10.1145/1455518.1455522
   Callahan J., 1996, P SPIN WORKSH, V353
   Chan F., 1998, P IASTED INT C SOFTW, P191
   Chan W. K., 2009, SOFTWARE APPL CONCEP, P2894
   Chan WK, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P470
   CHEN F, 2005, MSRTR2005146
   Chen HY, 2001, ACM T SOFTW ENG METH, V10, P56, DOI 10.1145/366378.366380
   Chen T., 2004, ISFST 2004 ISFST 2004, P310
   Chen TY, 2004, ELEVENTH ANNUAL INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE, PROCEEDINGS, P94
   Cheon Y, 2002, LECT NOTES COMPUT SC, V2374, P231
   Cheon Y, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P410
   Clarke L. A., 1976, IEEE Transactions on Software Engineering, VSE-2, P215, DOI 10.1109/TSE.1976.233817
   Clements PC, 2006, SPLC 2006: 10th International Software Product Line Conference, Proceedings, P207
   Clermont M., 2005, First Workshop on End User Software Engineering (WEUSE I), V30, P1
   Coppit D, 2005, 29TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P305, DOI 10.1109/SEW.2005.33
   Davis M. D., 1981, P ACM 81 C, P254, DOI DOI 10.1145/800175.809889
   Dillon L. K., 2000, SIGSOFT SOFTW ENG NO, V25, P45
   Elkind E, 2006, LECT NOTES COMPUT SC, V4229, P420
   Ellsberger J., 1997, SDL FORMAL PBJECT OR
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Eyre-Todd R. A., 1993, ACM Letters on Programming Languages and Systems, V2, P127, DOI 10.1145/176454.176504
   Feldt R., 1998, IEE Proceedings-Software, V145, P228, DOI 10.1049/ip-sen:19982444
   Feng X, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P134, DOI 10.1109/TAIC.PART.2007.19
   Feng X, 2011, IEEE T SOFTWARE ENG, V37, P616, DOI 10.1109/TSE.2011.78
   Ferrer J., 2011, SOFTW PRAC EXP, V42, P1331
   Fitzgerald J, 2009, MODELLING SYSTEMS: PRACTICAL TOOLS AND TECHNIQUES IN SOFTWARE DEVELOPMENT, 2ND EDITION, P1, DOI 10.1017/CBO9780511626975
   Flanagan C., 2001, FME 2001: Formal Methods for Increasing Software Productivity. International Symposium on Formal Methods Europe. Proceedings (Lecture Notes in Computer Science Vol.2021), P500
   Fraser Gordon, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P80, DOI 10.1109/ICST.2011.53
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Frounchi K, 2011, INFORM SOFTWARE TECH, V53, P1337, DOI 10.1016/j.infsof.2011.06.009
   GANNON J, 1981, ACM T PROGR LANG SYS, V3, P211, DOI 10.1145/357139.357140
   Gargantini A, 2001, J UNIVERS COMPUT SCI, V7, P1050
   Garland S. J., 1993, Functional programming, concurrency, simulation and automated reasoning. International lecture series 1991-1992, P329
   Gaudel M.-C., 1998, Formal Aspects of Computing, V10, P436, DOI 10.1007/s001650050026
   Gaudel M.-C., 2001, Reliable Software Technologies - Ada-Europea 2001. 6th Ada-Europe International Conference on Reliable Software Technologies. Proceedings (Lecture Notes in Computer Science Vol.2043), P35
   Gay Gregory, 2014, P 29 ACM IEEE INT C, P527, DOI DOI 10.1145/2642937.2642989
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Groce A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P521
   Groce A, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P243, DOI 10.1109/ICST.2014.37
   Groz R, 2008, LECT NOTES COMPUT SC, V5047, P216, DOI 10.1007/978-3-540-68524-1_16
   Gu Z., 2010, ICSE 10, V1, P55, DOI DOI 10.1145/1806799.1806812
   Guderlei R, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P404
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Harman Mark, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P182, DOI 10.1109/ICSTW.2010.31
   Harman M., 2009, TR0903 KINGS COLL LO
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Harrold MJ, 2000, SOFTW TEST VERIF REL, V10, P171, DOI 10.1002/1099-1689(200009)10:3<171::AID-STVR209>3.0.CO;2-J
   Heine DL, 2003, ACM SIGPLAN NOTICES, V38, P168, DOI 10.1145/780822.781150
   Henkel J, 2003, LECT NOTES COMPUT SC, V2743, P431
   HENNIE FC, 1968, FINITE STATE MODELS
   Heule MJH, 2013, EMPIR SOFTW ENG, V18, P825, DOI 10.1007/s10664-012-9222-z
   Hierons RM, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459354
   Hierons RM, 2009, ACM T SOFTW ENG METH, V18, DOI 10.1145/1538942.1538944
   Hierons RM, 2012, IEEE T SOFTWARE ENG, V38, P629, DOI 10.1109/TSE.2011.45
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   HOLCOMBE M, 1988, SOFTWARE ENG J, V3, P69, DOI 10.1049/sej.1988.0009
   Holcombe M., 1999, SOFTW TESTING VERIFI, V9, P76
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Hong Z, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P91, DOI 10.1109/QSIC.2003.1319090
   HOWDEN WE, 1986, IEEE T SOFTWARE ENG, V12, P997, DOI 10.1109/TSE.1986.6313016
   HOWDEN WE, 1978, IEEE T SOFTWARE ENG, V4, P293, DOI 10.1109/TSE.1978.231514
   Hughes M., 1996, Proceedings of the 1996 International Symposium on Software Testing and Analysis (ISSTA), P53, DOI [10.1145/226295.226301, 10.1145/229000.226301]
   Huo Yan Chen, 1998, ACM Transactions on Software Engineering and Methodology, V7, P250, DOI 10.1145/287000.287004
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   JARD C, 1983, J SYST SOFTWARE, V3, P315, DOI 10.1016/0164-1212(83)90018-3
   Jeffrey D, 2006, P INT COMP SOFTW APP, P411
   Jin Y, 2010, SCI COMPUT PROGRAM, V75, P980, DOI 10.1016/j.scico.2009.12.009
   Kearns M. J., 1994, An Introduction to Computational Learning Theory
   KELLER RM, 1976, COMMUN ACM, V19, P371, DOI 10.1145/360248.360251
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Lakhotia K, 2010, J SYST SOFTWARE, V83, P2379, DOI 10.1016/j.jss.2010.07.026
   Lano K., 1996, SPECIFICATION B INTR
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   LeGall P, 1996, LECT NOTES COMPUT SC, V1130, P342
   Leitner Andreas, 2007, 22 IEEE ACM INT C AU, P417, DOI 10.1145/1321631.1321698
   Li KQ, 2006, TAIC PART - TESTING: ACADEMIC & INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P59
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Loyola P., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P193
   LUCKHAM DC, 1985, IEEE SOFTWARE, V2, P9, DOI 10.1109/MS.1985.230345
   Machado PDL, 1999, LECT NOTES COMPUT SC, V1548, P502
   Maker P., 1998, GNU NAN IMPR SUPP AS
   Malik H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1012, DOI 10.1109/ICSE.2013.6606651
   Mariani L, 2011, IEEE T SOFTWARE ENG, V37, P486, DOI 10.1109/TSE.2010.93
   Marre B, 1995, LECT NOTES COMPUT SC, V915, P799
   Mathur A. P., 1991, Proceedings of the Fifteenth Annual International Computer Software and Applications Conference (Cat. No.91CH3023-9), P604, DOI 10.1109/CMPSAC.1991.170248
   Mayer J, 2004, P 1 INT WORKSH SOFTW, P179
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   McMinn P., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P141, DOI 10.1109/ICST.2012.94
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   McMinn P., 2009, PROC 11 ANN C GENET, P1689, DOI [10.1145/1569901.1570127, DOI 10.1145/1569901.1570127]
   MCMINN P., 2010, Proceedings of the First International Workshop on Software Test Output Validation, P1
   Memon A, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P186, DOI 10.1109/ASE.2004.1342736
   Memon A. M., 2000, Software Engineering Notes, V25, P30, DOI 10.1145/357474.355050
   Memon AM, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1416563.1416564
   Merten Maik, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P79, DOI 10.1007/978-3-642-34026-0_7
   MEYER B, 1988, J SYST SOFTWARE, V8, P199, DOI 10.1016/0164-1212(88)90022-2
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   Mouchawrab S, 2011, IEEE T SOFTWARE ENG, V37, P161, DOI 10.1109/TSE.2010.32
   Murphy C, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P189
   Murphy C, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P436, DOI 10.1109/ICST.2009.19
   Pacheco C., 2005, P 19 EUR C OBJ PROGR, P734
   Parnas DL, 2011, FUTURE OF SOFTWARE ENGINEERING, P125, DOI 10.1007/978-3-642-15187-3_8
   Parnas DL, 2009, KNOWL-BASED SYST, V22, P132, DOI 10.1016/j.knosys.2008.11.001
   PARNAS DL, 1995, SCI COMPUT PROGRAM, V25, P41, DOI 10.1016/0167-6423(95)96871-J
   PARNAS DL, 1994, IEEE T SOFTWARE ENG, V20, P948, DOI 10.1109/32.368133
   Pastore F, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P342, DOI 10.1109/ICST.2013.13
   Peled D., 2002, Journal of Automata, Languages and Combinatorics, V7, P225
   Peters DK, 2002, IEEE T SOFTWARE ENG, V28, P146, DOI 10.1109/32.988496
   Peters DK, 1998, IEEE T SOFTWARE ENG, V24, P161, DOI 10.1109/32.667877
   Pezzè M, 2014, ADV COMPUT, V95, P1, DOI 10.1016/B978-0-12-800160-8.00001-2
   Polikarpova N, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P93
   Prowell SJ, 2003, IEEE T SOFTWARE ENG, V29, P417, DOI 10.1109/TSE.2003.1199071
   Ratcliff S, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1907
   Ricca F, 2006, IEEE MULTIMEDIA, V13, P44, DOI 10.1109/MMUL.2006.26
   Roong-Ko Doong, 1994, ACM Transactions on Software Engineering and Methodology, V3, P101, DOI 10.1145/192218.192221
   ROSENBLUM DS, 1995, IEEE T SOFTWARE ENG, V21, P19, DOI 10.1109/32.341844
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   Schuler D., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P90, DOI 10.1109/ICST.2011.32
   Schwitter R, 2002, 13TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P228
   Segura S, 2011, INFORM SOFTWARE TECH, V53, P245, DOI 10.1016/j.infsof.2010.11.002
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Shahamiri SR, 2012, AUTOMAT SOFTW ENG, V19, P303, DOI 10.1007/s10515-011-0094-z
   Shahamiri SR, 2011, INFORM SOFTWARE TECH, V53, P774, DOI 10.1016/j.infsof.2011.02.006
   Shahamiri SR, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P140, DOI 10.1109/ICSEA.2009.29
   Shahbaz M., 2012, REVERSE ENG TEST BLA
   Shahbaz M, 2015, SCI COMPUT PROGRAM, V97, P405, DOI 10.1016/j.scico.2014.04.008
   Shin Yoo, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P192, DOI 10.1109/ICSTW.2010.26
   Shrestha Kavir, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P110, DOI 10.1109/ICST.2011.50
   Shu GQ, 2008, LECT NOTES COMPUT SC, V5048, P299
   Simons AJH, 2007, AUTOMAT SOFTW ENG, V14, P369, DOI 10.1007/s10515-007-0015-3
   Singh R, 2010, LECT NOTES COMPUT SC, V6174, P527, DOI 10.1007/978-3-642-14295-6_45
   SPIVEY JM, 1992, NOTATION REFERENCE M
   Staats M., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P311, DOI 10.1109/ISSRE.2012.13
   Staats M., 2012, P 2012 INT S SOFTW T, P188, DOI [DOI 10.1145/2338965.2336776, 10.1145/2338965.2336776]
   Staats M, 2012, PROC INT CONF SOFTW, P870, DOI 10.1109/ICSE.2012.6227132
   Staats M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P391, DOI 10.1145/1985793.1985847
   TAKANEN A, 2008, ARTECH HSE INF SECUR, P1
   Taylor Ramsay, 2012, Testing Software and Systems. 24th IFIP WG 6.1 International Conference (ICTSS 2012). Proceedings, P184, DOI 10.1007/978-3-642-34691-0_14
   Tiwari Ashish., 2002, Formal semantics and analysis methods for Simulink Stateflow models
   Tretmans J, 1996, SOFTWARE-CONC TOOL, V17, P103
   Utting M., 2007, PRACTICAL MODEL BASE
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   VANLAMSWEERDE A, 1979, ACTA INFORM, V12, P1, DOI 10.1007/BF00264015
   VOAS JM, 1992, IEEE T SOFTWARE ENG, V18, P717, DOI 10.1109/32.153381
   von Bochmann G., 1994, SIGSOFT Software Engineering Notes, P109
   Walkinshaw Neil, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P248, DOI 10.1109/ASE.2008.35
   Walkinshaw N., 2007, CS0716 U SHEFF DEP C
   Walkinshaw N, 2010, LECT NOTES COMPUT SC, V6435, P126, DOI 10.1007/978-3-642-16573-3_10
   Walkinshaw N, 2009, LECT NOTES COMPUT SC, V5850, P305, DOI 10.1007/978-3-642-05089-3_20
   Wang Y., 1993, Conditional Term Rewriting Systems. Third International Workshop, CTRS-92 Proceedings, P343
   WANG YB, 1993, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.1993.346059
   Wei Y, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P191, DOI 10.1145/1985793.1985820
   Weyuker EJ, 2000, IEEE T SOFTWARE ENG, V26, P1147, DOI 10.1109/32.888628
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   WEYUKER EJ, 1983, ACM T PROGR LANG SYS, V5, P641, DOI 10.1145/69575.357231
   WING JM, 1990, COMPUTER, V23, P8, DOI 10.1109/2.58215
   Wujie Zheng, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P408, DOI 10.1109/ASE.2011.6100085
   Xie Q, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189752
   Xie T, 2005, IEEE T SOFTWARE ENG, V31, P869, DOI 10.1109/TSE.2005.107
   Xie T, 2006, LECT NOTES COMPUT SC, V4067, P380
   Xie Y., 2005, Proceedings of the 10th European Software Engineering Conference Held Jointly with 13th ACM SIGSOFT International Symposium on Foundations of Software Engineering, P115, DOI [10.1145/1081706.1081728, DOI 10.1145/1081706.1081728]
   Yi Wei, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P440, DOI 10.1109/ASE.2011.6100094
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zhang Sai., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, P353, DOI 10.1145/2001420.2001463
   Zhou ZQ, 2012, SOFTW TEST VERIF REL, V22, P221, DOI 10.1002/stvr.437
   Zorn B., 1988, Proceedings of the Summer 1988 USENIX Conference, P223
NR 210
TC 531
Z9 591
U1 5
U2 30
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2015
VL 41
IS 5
BP 507
EP 525
DI 10.1109/TSE.2014.2372785
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CI1BN
UT WOS:000354475400005
OA Green Published, hybrid
HC Y
HP N
DA 2024-07-18
ER

PT J
AU Palomba, F
   Bavota, G
   Di Penta, M
   Oliveto, R
   Poshyvanyk, D
   De Lucia, A
AF Palomba, Fabio
   Bavota, Gabriele
   Di Penta, Massimiliano
   Oliveto, Rocco
   Poshyvanyk, Denys
   De Lucia, Andrea
TI Mining Version Histories for Detecting Code Smells
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Code smells; mining software repositories; empirical studies
ID BAD SMELLS; IMPACT; ANTIPATTERNS; PROBABILITY; SYSTEM
AB Code smells are symptoms of poor design and implementation choices that may hinder code comprehension, and possibly increase change-and fault-proneness. While most of the detection techniques just rely on structural information, many code smells are intrinsically characterized by how code elements change over time. In this paper, we propose Historical Information for Smell deTection (HIST), an approach exploiting change history information to detect instances of five different code smells, namely Divergent Change, Shotgun Surgery, Parallel Inheritance, Blob, and Feature Envy. We evaluate HIST in two empirical studies. The first, conducted on 20 open source projects, aimed at assessing the accuracy of HIST in detecting instances of the code smells mentioned above. The results indicate that the precision of HIST ranges between 72 and 86 percent, and its recall ranges between 58 and 100 percent. Also, results of the first study indicate that HIST is able to identify code smells that cannot be identified by competitive approaches solely based on code analysis of a single system's snapshot. Then, we conducted a second study aimed at investigating to what extent the code smells detected by HIST (and by competitive code analysis techniques) reflect developers' perception of poor design and implementation choices. We involved 12 developers of four open source projects that recognized more than 75 percent of the code smell instances identified by HIST as actual design/implementation problems.
C1 [Palomba, Fabio; De Lucia, Andrea] Univ Salerno, Fisciano, SA, Italy.
   [Bavota, Gabriele] Free Univ Bozen, Bolzano, Italy.
   [Di Penta, Massimiliano] Univ Sannio, Benevento, Italy.
   [Oliveto, Rocco] Univ Molise, Pesche, IS, Italy.
   [Poshyvanyk, Denys] Coll William & Mary, Williamsburg, VA USA.
C3 University of Salerno; Free University of Bozen-Bolzano; University of
   Sannio; University of Molise; William & Mary
RP Palomba, F (corresponding author), Univ Salerno, Fisciano, SA, Italy.
EM fpalomba@unisa.it; gabriele.bavota@unibz.it; dipenta@unisannio.it;
   rocco.oliveto@unimol.it; denys@cs.wm.edu; adelucia@unisa.it
RI Di Penta, Massimiliano/AAF-9656-2021; De Lucia, Andrea/AAG-6781-2020
OI Di Penta, Massimiliano/0000-0002-0340-9747; BAVOTA,
   Gabriele/0000-0002-2216-3148; Palomba, Fabio/0000-0001-9337-5116; De
   Lucia, Andrea/0000-0002-4238-1425; Poshyvanyk, Denys/0000-0002-5626-7586
FU EU [FP7-ICT-2011-8, 317743];  [CCF-1253837];  [CCF-1218129]; Direct For
   Computer & Info Scie & Enginr; Division of Computing and Communication
   Foundations [1253837] Funding Source: National Science Foundation;
   Division of Computing and Communication Foundations; Direct For Computer
   & Info Scie & Enginr [1218129] Funding Source: National Science
   Foundation
FX The authors would like to thank Dario Di Nucci, Michele Tufano, and
   Filomena Carnevale for their help in defining the oracle used in the
   HIST evaluation. They would also like to thank all the open-source
   developers who responded to our survey. Gabriele Bavota and Massimiliano
   Di Penta were partially funded by the EU FP7-ICT-2011-8 project Markos,
   contract no. 317743. Gabriele Bavota is the corresponding author of this
   paper. Denys Poshyvanyk was partially supported by the CCF-1253837 and
   CCF-1218129 grants. Any opinions, findings, and conclusions expressed
   herein are the authors' and do not necessarily reflect those of the
   sponsors. This paper is an extension of "Detecting Bad Smells in Source
   Code Using Change History Information" that appeared in the Proceedings
   of the 28th IEEE/ACM International Conference on Automated Software
   Engineering (ASE 2013), Palo Alto, California, pp. 268-278, 2013 [39].
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Adams B., 2010, P 32 ACMIEEE INT C S, P305
   Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   [Anonymous], 2007, P INT WORKSH PRINC S
   Arcoverde R., 2011, WORKSH REF TOOLS, P33
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Baruch Y, 1999, HUM RELAT, V52, P421, DOI 10.1023/A:1016905407491
   Bavota G, 2014, EMPIR SOFTW ENG, V19, P1617, DOI 10.1007/s10664-013-9256-x
   Boussaa Mohamed, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P50, DOI 10.1007/978-3-642-39742-4_6
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Canfora G, 2006, PROC IEEE INT CONF S, P213
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   Collard ML, 2003, PROG COMPREHEN, P134
   Fokaefs M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1037, DOI 10.1145/1985793.1985989
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Gethers M, 2012, PROC INT CONF SOFTW, P430, DOI 10.1109/ICSE.2012.6227172
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Kagdi H., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P119, DOI 10.1109/WCRE.2010.21
   Kagdi H, 2013, EMPIR SOFTW ENG, V18, P933, DOI 10.1007/s10664-012-9233-9
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kessentini M., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, P113
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Ligu E, 2013, PROC IEEE INT CONF S, P392, DOI 10.1109/ICSM.2013.55
   Lozano Angelo., 2007, Ninth International Workshop on Principles of software evolution, P31
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Mayrand J, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P244, DOI 10.1109/ICSM.1996.565012
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Mulder F., 2010, P JOINT ERCIM WORKSH, P23, DOI DOI 10.1145/1862372.1862381
   Munro MatthewJames., 2005, Software Metrics, P15, DOI 10.1109/metrics.2005.38
   Oliveto R, 2010, EUR CON SFTWR MTNCE, P248, DOI 10.1109/CSMR.2010.47
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Ouni A, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1461
   Palomba F., 2014, HIST REPLICATION
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Peters R, 2012, EUR CON SFTWR MTNCE, P411, DOI 10.1109/CSMR.2012.79
   Rao A., 2005, 3 INT C COMP APPL YA
   Rao AA, 2008, LECT NOTES ENG COMP, P1001
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   Travassos GH, 1999, ACM SIGPLAN NOTICES, V34, P47, DOI 10.1145/320385.320389
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   van Emden E., 2002, P 9 WORK C REV ENG O
   Webster BruceF., 1995, PITFALLS OBJECT ORIE
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 55
TC 170
Z9 188
U1 0
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2015
VL 41
IS 5
BP 462
EP 489
DI 10.1109/TSE.2014.2372760
PG 28
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CI1BN
UT WOS:000354475400003
OA Green Published, Bronze
DA 2024-07-18
ER

PT J
AU Dias-Neto, AC
   Travassos, GH
AF Dias-Neto, Arilo Claudio
   Travassos, Guilherme Horta
TI Supporting the Combined Selection of Model-Based Testing Techniques
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; model-based testing; software technology selection;
   recommendation system; experimental software engineering
AB The technical literature on model-based testing (MBT) offers us several techniques with different characteristics and goals. Contemporary software projects usually need to make use of different software testing techniques. However, a lack of empirical information regarding their scalability and effectiveness is observed. It makes their application difficult in real projects, increasing the technical difficulties to combine two or more MBT techniques for the same software project. In addition, current software testing selection approaches offer limited support for the combined selection of techniques. Therefore, this paper describes the conception and evaluation of an approach aimed at supporting the combined selection of MBT techniques for software projects. It consists of an evidence-based body of knowledge with 219 MBT techniques and their corresponding characteristics and a selection process that provides indicators on the level of adequacy (impact indicator) amongst MBT techniques and software projects characteristics. Results from the data analysis indicate it contributes to improve the effectiveness and efficiency of the selection process when compared to another selection approach available in the technical literature. Aiming at facilitating its use, a computerized infrastructure, evaluated into an industrial context and evolved to implement all the facilities needed to support such selection approach, is presented.
C1 [Dias-Neto, Arilo Claudio] Univ Fed Amazonas, Inst Comp, Manaus, Amazonas, Brazil.
   [Travassos, Guilherme Horta] Univ Fed Rio de Janeiro, COPPE, Syst Engn & Comp Sci Programme, BR-21945 Rio De Janeiro, Brazil.
C3 Universidade Federal de Amazonas; Universidade Federal do Rio de Janeiro
RP Dias-Neto, AC (corresponding author), Univ Fed Amazonas, Inst Comp, Manaus, Amazonas, Brazil.
EM arilo@icomp.ufam.edu.br; ght@cos.ufrj.br
RI Travassos, Guilherme H/G-2842-2012
FU CNPq [475459/2007-5, 304795/2010-0]; CAPES; FAPERJ; FAPEAM; SCR/USA
FX The authors would like to thank CNPq (Grants 475459/2007-5 and
   304795/2010-0), CAPES, FAPERJ, FAPEAM, and SCR/USA for their financial
   support, as well as Sira Vegas, Natalia Juristo, and Vic Basili for
   sharing the lab package and Characterization Schema explanations with
   us. Lucas Paes and Priscila Pecchio contributed to tool implementation.
CR Abdurazik A, 2000, LECT NOTES COMPUT SC, V1939, P383
   Alagar VS, 2000, TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS - TOOLS 34, PROCEEDINGS, P25, DOI 10.1109/TOOLS.2000.868956
   Aranda GN, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ICGSE.2006.261236
   BASILI VR, 1991, SOFTWARE ENG J, V6, P303, DOI 10.1049/sej.1991.0032
   Birk A, 1997, AUTOMATED SOFTWARE ENGINEERING, 12TH IEEE INTERNATIONAL CONFERENCE, PROCEEDINGS, P291, DOI 10.1109/ASE.1997.632850
   Briand L. C., 2000, P 4 INT C UN MOD LAN, V2185, P194
   Chang J., 1996, P ACM SIGSOFT INT S, P21
   Chen TY, 2003, IEEE T SOFTWARE ENG, V29, P577, DOI 10.1109/TSE.2003.1214323
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Chung IS, 1999, INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR PARALLEL AND DISTRIBUTED SYSTEMS, PROCEEDINGS, P72, DOI 10.1109/PDSE.1999.779740
   Dalal S. R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P285, DOI 10.1109/ICSE.1999.841019
   Dias A, 2008, IEEE SOFTWARE, V25, P10
   Dias-Neto Arilo Claudio, 2009, 2009 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM), P269, DOI 10.1109/ESEM.2009.5316007
   Dias-Neto A. C., 2010, P IFIP INT C TEST SO, P85
   Dias-Neto AC, 2010, ADV COMPUT, V80, P45, DOI 10.1016/S0065-2458(10)80002-6
   Dias-Neto AC, 2009, INFORM SOFTWARE TECH, V51, P1487, DOI 10.1016/j.infsof.2009.06.010
   du Bousquet L., 1999, 14th IEEE International Conference on Automated Software Engineering, P208, DOI 10.1109/ASE.1999.802255
   Friedman G., 2002, Software Engineering Notes, V27, P134, DOI 10.1145/566171.566192
   GOWER JC, 1985, LINEAR ALGEBRA APPL, V67, P81, DOI 10.1016/0024-3795(85)90187-9
   Hartman A., 2004, Software Engineering Notes, V29, P129, DOI 10.1145/1013886.1007529
   Jaccard P., 1901, B SOCIT VAUDOISE SCI, V37, P547, DOI [10.5169/seals-266440, DOI 10.5169/SEALS-266440]
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Kim Y. G., 1999, IEE Proceedings-Software, V146, P187, DOI 10.1049/ip-sen:19990602
   Maiden NAM, 1996, SOFTWARE ENG J, V11, P183, DOI 10.1049/sej.1996.0024
   Menzies T, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P15, DOI 10.1109/ISSRE.2002.1173208
   Nebut C, 2006, IEEE T SOFTWARE ENG, V32, P140, DOI 10.1109/TSE.2006.22
   Neto A. C. D., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P174, DOI 10.1109/ICSTW.2011.33
   Neto A.C. Dias, 2010, P 13 C IB SOFTW ENG, VI, P107
   Parissis I, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P191, DOI 10.1109/ISSRE.2003.1251042
   Peters DK, 2002, IEEE T SOFTWARE ENG, V28, P146, DOI 10.1109/32.988496
   Pretschner A, 2005, PROC INT CONF SOFTW, P722
   Ramamoorthy C. V., 1976, IEEE Transactions on Software Engineering, VSE-2, P293, DOI 10.1109/TSE.1976.233835
   Stobie K, 2005, ELECTRON NOTES THEOR, V111, P5, DOI 10.1016/j.entcs.2004.12.004
   Utting M., 2007, PRACTICAL MODEL BASE
   Vegas S, 2005, EMPIR SOFTW ENG, V10, P437, DOI 10.1007/s10664-005-3862-1
   Victor M, 2011, COMM COM INF SC, V204, P453
   Vieira M., 2006, AST, P9, DOI DOI 10.1145/1138929.1138932
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wojcicki Margaret A., 2007, Fifth International Workshop on Software Quality (WoSQ'07: ICSE Workshops 2007), DOI 10.1109/WOSQ.2007.4
NR 39
TC 12
Z9 12
U1 1
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2014
VL 40
IS 10
BP 1025
EP 1041
DI 10.1109/TSE.2014.2312915
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AR9ML
UT WOS:000343899100006
DA 2024-07-18
ER

PT J
AU Liu, H
   Kuo, FC
   Towey, D
   Chen, TY
AF Liu, Huai
   Kuo, Fei-Ching
   Towey, Dave
   Chen, Tsong Yueh
TI How Effectively Does Metamorphic Testing Alleviate the Oracle Problem?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; test oracle; oracle problem; metamorphic testing;
   metamorphic relation
AB In software testing, something which can verify the correctness of test case execution results is called an oracle. The oracle problem occurs when either an oracle does not exist, or exists but is too expensive to be used. Metamorphic testing is a testing approach which uses metamorphic relations, properties of the software under test represented in the form of relations among inputs and outputs of multiple executions, to help verify the correctness of a program. This paper presents new empirical evidence to support this approach, which has been used to alleviate the oracle problem in various applications and to enhance several software analysis and testing techniques. It has been observed that identification of a sufficient number of appropriate metamorphic relations for testing, even by inexperienced testers, was possible with a very small amount of training. Furthermore, the cost-effectiveness of the approach could be enhanced through the use of more diverse metamorphic relations. The empirical studies presented in this paper clearly show that a small number of diverse metamorphic relations, even those identified in an ad hoc manner, had a similar fault-detection capability to a test oracle, and could thus effectively help alleviate the oracle problem.
C1 [Liu, Huai] RMIT Univ, Australia India Ctr Automat Software Engn, Melbourne, Vic 3001, Australia.
   [Kuo, Fei-Ching; Chen, Tsong Yueh] Swinburne Univ Technol, Fac Informat & Commun Technol, Hawthorn, Vic 3122, Australia.
   [Towey, Dave] Univ Nottingham, Div Comp Sci, Ningbo 315100, Zhejiang, Peoples R China.
C3 Royal Melbourne Institute of Technology (RMIT); Swinburne University of
   Technology; University of Nottingham Ningbo China
RP Liu, H (corresponding author), RMIT Univ, Australia India Ctr Automat Software Engn, Melbourne, Vic 3001, Australia.
EM huai.liu@rmit.edu.au; dkuo@swin.edu.au; dave.towey@nottingham.edu.cn;
   tychen@swin.edu.au
RI Liu, Huai/M-4871-2019; Towey, Dave/K-3160-2014
OI Liu, Huai/0000-0003-3125-4399; Towey, Dave/0000-0003-0877-4353; Chen,
   Tsong/0000-0003-3578-0994
FU Australian Research Council
FX We are grateful to Kai-Yuan Cai of Beihang University, Chang-ai Sun of
   University of Science and Technology Beijing, Zhenyu Chen of Nanjing
   University, and Jianjun Zhao of Shanghai Jiao Tong University for their
   help in facilitating the experiments. We are also thankful to the
   students from these universities who participated in the experiments.
   This research project is supported by an Australian Research Council
   Discovery Grant.
CR AMMANN PE, 1988, IEEE T COMPUT, V37, P418, DOI 10.1109/12.2185
   [Anonymous], 2011, SOFTWARE ENG TECHNIQ
   [Anonymous], P 36 IEEE INT C LOC
   AVIZIENIS A, 1985, IEEE T SOFTWARE ENG, V11, P1491, DOI 10.1109/TSE.1985.231893
   Beydeda S, 2006, P INT COMP SOFTW APP, P265
   Chang-ai Sun, 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P283, DOI 10.1109/ICWS.2011.65
   Chen T.Y., 2004, PROC 4 IBERO AM S SO, P569
   Chen T. Y., 1998, HKSUSTCS9801
   Chen TY, 2011, IEEE T SOFTWARE ENG, V37, P109, DOI 10.1109/TSE.2010.23
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Chen TY, 2009, BMC BIOINFORMATICS, V10, DOI 10.1186/1471-2105-10-24
   Chen TY, 2009, LECT NOTES COMPUT SC, V5522, P243, DOI 10.1007/978-3-642-02138-1_19
   CHEN TY, 1994, IEEE T SOFTWARE ENG, V20, P977, DOI 10.1109/32.368132
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Feng X, 2011, IEEE T SOFTWARE ENG, V37, P616, DOI 10.1109/TSE.2011.78
   Forrester JE, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE 4TH UNSENIX WINDOWS SYSTEMS SYMPOSIUM, P59
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Gotlieb A, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P34, DOI 10.1109/CMPSAC.2003.1245319
   Hailpern B, 2002, IBM SYST J, V41, P4, DOI 10.1147/sj.411.0004
   Hemmati H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430540
   Hierons RM, 2012, IEEE T SOFTWARE ENG, V38, P629, DOI 10.1109/TSE.2011.45
   Hu P., 2006, Proc. of the 3rd International Workshop on Software Quality Assurance, P6
   Hu Y.F., 2000, TECHNICAL REPORT
   JFlex, 2009, FAST SCANN GEN JAV
   KNIGHT JC, 1986, IEEE T SOFTWARE ENG, V12, P96, DOI 10.1109/TSE.1986.6312924
   Lau H.T., 2007, JAVA LIB GRAPH ALGOR
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Manolache LI, 2001, SOFTWARE PRACT EXPER, V31, P1211, DOI 10.1002/spe.409
   Mayer J, 2006, P INT COMP SOFTW APP, P475
   Miller B. P., 2007, Operating Systems Review, V41, P78, DOI 10.1145/1228291.1228308
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   Murphy C, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P189
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Press W. H., 2002, Numerical Recipes in C: the Art of Scientific Computing, V2nd ed., DOI DOI 10.1119/1.14981
   Rao PF, 2013, INT CONF QUAL SOFTW, P260, DOI 10.1109/QSIC.2013.18
   ROSENBLUM DS, 1995, IEEE T SOFTWARE ENG, V21, P19, DOI 10.1109/32.341844
   Segura S, 2011, INFORM SOFTWARE TECH, V53, P245, DOI 10.1016/j.infsof.2010.11.002
   Staats M, 2012, PROC INT CONF SOFTW, P870, DOI 10.1109/ICSE.2012.6227132
   Tao Q., 2010, P 17 AS PAC SOFTW EN
   Xie XY, 2013, INFORM SOFTWARE TECH, V55, P866, DOI 10.1016/j.infsof.2012.08.008
   Zhang Zhen-Yu, 2009, Journal of Software, V20, P2637, DOI 10.3724/SP.J.1001.2009.00578
NR 42
TC 135
Z9 142
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2014
VL 40
IS 1
BP 4
EP 22
DI 10.1109/TSE.2013.46
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AF4FB
UT WOS:000334665800002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Kpodjedo, S
   Ricca, F
   Galinier, P
   Antoniol, G
   Guéhéneuc, YG
AF Kpodjedo, Segla
   Ricca, Filippo
   Galinier, Philippe
   Antoniol, Giuliano
   Gueheneuc, Yann-Gael
TI MADMatch: Many-to-Many Approximate Diagram Matching for Design
   Comparison
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Diagram differencing; search-based software engineering; approximate
   graph matching; identifier splitting
ID ATTRIBUTED RELATIONAL GRAPHS; TRACEABILITY; DISTANCE
AB Matching algorithms play a fundamental role in many important but difficult software engineering activities, especially design evolution analysis and model comparison. We present MADMatch, a fast and scalable many-to-many approximate diagram matching approach based on an error-tolerant graph matching (ETGM) formulation. Diagrams are represented as graphs, costs are assigned to possible differences between two given graphs, and the goal is to retrieve the cheapest matching. We address the resulting optimization problem with a tabu search enhanced by the novel use of lexical and structural information. Through several case studies with different types of diagrams and tasks, we show that our generic approach obtains better results than dedicated state-of-the-art algorithms, such as AURA, PLTSDiff, or UMLDiff, on the exact same datasets used to introduce (and evaluate) these algorithms.
C1 [Kpodjedo, Segla; Galinier, Philippe; Antoniol, Giuliano; Gueheneuc, Yann-Gael] Ecole Polytech, DGIGL, Montreal, PQ H3C 3A7, Canada.
   [Ricca, Filippo] Univ Genoa, I-16126 Genoa, Italy.
C3 Universite de Montreal; Polytechnique Montreal; University of Genoa
RP Kpodjedo, S (corresponding author), Ecole Polytech, DGIGL, 2900 Edouard Montpetit, Montreal, PQ H3C 3A7, Canada.
EM segla.kpodjedo@polymtl.ca
RI Guéhéneuc, Yann-Gaël/K-9371-2019; Ricca, Filippo/ABB-3276-2020
CR [Anonymous], P IEEE ACM INT S EMP
   [Anonymous], THESIS ECOLE POLYTEC
   Antoniol G, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P31, DOI 10.1109/IWPSE.2004.1334766
   Antoniol G, 2001, SOFTWARE PRACT EXPER, V31, P331, DOI 10.1002/spe.374
   Binkley D, 2009, INT C PROGRAM COMPRE, P158, DOI 10.1109/ICPC.2009.5090039
   Bogdanov K, 2009, WORK CONF REVERSE EN, P177, DOI 10.1109/WCRE.2009.17
   Bunke H, 1997, PATTERN RECOGN LETT, V18, P689, DOI 10.1016/S0167-8655(97)00060-3
   Bunke H., 1998, Advances in Pattern Recognition. Joint IAPR International Workshops SSPR'98 and SPR'98. Proceedings, P1, DOI 10.1007/BFb0033223
   Cormen T.H., 1990, Introduction to Algorithms
   Dagenais B, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P481, DOI 10.1145/1368088.1368154
   De Lucia A, 2011, IEEE T SOFTWARE ENG, V37, P205, DOI 10.1109/TSE.2010.89
   Glover F., 1990, ORSA Journal on Computing, V2, P4, DOI [10.1287/ijoc.1.3.190, 10.1287/ijoc.2.1.4]
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Kim M, 2007, PROC INT CONF SOFTW, P333
   Kimelman D, 2010, IEEE T SOFTWARE ENG, V36, P248, DOI 10.1109/TSE.2009.56
   Kpodjedo S, 2014, DISCRETE APPL MATH, V164, P161, DOI 10.1016/j.dam.2012.01.019
   Kpodjedo S, 2013, J SOFTW-EVOL PROC, V25, P139, DOI 10.1002/smr.519
   Kuhn HW, 2005, NAV RES LOG, V52, P7, DOI 10.1002/nav.20053
   Mandelin D., 2006, 28th International Conference on Software Engineering Proceedings, P222, DOI 10.1145/1134285.1134317
   Nejati S, 2007, PROC INT CONF SOFTW, P54
   Park WJ, 2011, INFORM SOFTWARE TECH, V53, P230, DOI 10.1016/j.infsof.2010.11.001
   Robinson WN, 2004, IEEE SOFTWARE, V21, P60, DOI 10.1109/MS.2004.1331304
   SANFELIU A, 1983, IEEE T SYST MAN CYB, V13, P353, DOI 10.1109/TSMC.1983.6313175
   Schäfer T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P471, DOI 10.1145/1368088.1368153
   TSAI WH, 1979, IEEE T SYST MAN CYB, V9, P757, DOI 10.1109/TSMC.1979.4310127
   Tu Q, 2002, PROG COMPREHEN, P127, DOI 10.1109/WPC.2002.1021334
   Wu Wei, 2010, P 32 ACMIEEE INT C S, P325, DOI DOI 10.1145/1806799.1806848
   XING Z, 2010, P IEEE ACM INT C AUT, P135, DOI DOI 10.1145/1858996.1859020
   Xing ZC, 2005, IEEE T SOFTWARE ENG, V31, P850, DOI 10.1109/TSE.2005.106
   Xing ZC, 2007, IEEE T SOFTWARE ENG, V33, P818, DOI 10.1109/TSE.2007.70747
NR 31
TC 17
Z9 21
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2013
VL 39
IS 8
BP 1090
EP 1111
DI 10.1109/TSE.2013.9
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 191BU
UT WOS:000322388400004
DA 2024-07-18
ER

PT J
AU Búrdalo, L
   Terrasa, A
   Espinosa, A
   García-Fornes, A
AF Burdalo, Luis
   Terrasa, Andres
   Espinosa, Agustin
   Garcia-Fornes, Ana
TI Analyzing the Effect of Gain Time on Soft-Task Scheduling Policies in
   Real-Time Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Real-time systems; RT-Linux; scheduling policies
ID PRIORITY
AB In hard real-time systems, gain time is defined as the difference between the Worst Case Execution Time (WCET) of a hard task and its actual processor consumption at runtime. This paper presents the results of an empirical study about how the presence of a significant amount of gain time in a hard real-time system questions the advantages of using the most representative scheduling algorithms or policies for aperiodic or soft tasks in fixed-priority preemptive systems. The work presented here refines and complements many other studies in this research area in which such policies have been introduced and compared. This work has been performed by using the authors' testing framework for soft scheduling policies, which produces actual, synthetic, randomly generated applications, executes them in an instrumented Real-Time Operating System (RTOS), and finally processes this information to obtain several statistical outcomes. The results show that, in general, the presence of a significant amount of gain time reduces the performance benefit of the scheduling policies under study when compared to serving the soft tasks in background, which is considered the theoretical worst case. In some cases, this performance benefit is so small that the use of a specific scheduling policy for soft tasks is questionable.
C1 [Burdalo, Luis; Terrasa, Andres; Espinosa, Agustin; Garcia-Fornes, Ana] Univ Politecn Valencia, GTI IA, Valencia 46022, Spain.
   [Burdalo, Luis; Terrasa, Andres; Espinosa, Agustin; Garcia-Fornes, Ana] Univ Politecn Valencia, Dept Sistemas Informat & Computac, Valencia 46022, Spain.
C3 Universitat Politecnica de Valencia; Universitat Politecnica de Valencia
RP Búrdalo, L (corresponding author), Univ Politecn Valencia, GTI IA, Camino Vera S-N, Valencia 46022, Spain.
EM lburdalo@dsic.upv.es; aterrasa@dsic.upv.es; aespinos@dsic.upv.es;
   agarcia@dsic.upv.es
RI Garcia-Fornes, Ana/C-8260-2014; Espinosa, Agustín/ABG-2376-2020
OI Garcia-Fornes, Ana/0000-0003-4482-8793; Espinosa,
   Agustín/0000-0001-8070-3344; Terrasa, Andres/0000-0003-1991-1691
FU  [PROMETEO/2008/051];  [CSD2007-022];  [TIN2008-04446]
FX This work is partially funded by research projects PROMETEO/2008/051,
   CSD2007-022, and TIN2008-04446.
CR [Anonymous], 2010, P 2010 ACM S APPL CO
   Audsley N. C., 1994, Proceedings 11th IEEE Workshop on Real-Time Operating Systems and Software. RTOSS '94 (Cat. No.94TH0639-5), P23, DOI 10.1109/RTOSS.1994.292567
   Ban'us J.M., 2002, Proceedings of the International Conference on Parallel and Distributed Processing Techniques and Applications - Volume 2, PDPTA'02, P809
   Banus J.M., 2003, P INT PAR DISTR PROC
   Bernat G., 1999, Proceedings 20th IEEE Real-Time Systems Symposium (Cat. No.99CB37054), P68, DOI 10.1109/REAL.1999.818829
   Bini E, 2005, REAL-TIME SYST, V30, P129, DOI 10.1007/s11241-005-0507-9
   Burdalo L.A., 2007, P WORKSH OP SYST PLA, P10
   Burdalo L.A., 2006, P WORKSH OP SYST PLA, P42
   Calandrino JM, 2007, RTAS 2007: 13TH REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P101
   Davis R, 1995, IEEE REAL TIME, P100, DOI 10.1109/REAL.1995.495200
   Davis R., 1994, YCS230 U YORK
   Davis R. I., 1995, THESIS U YORK
   DAVIS RI, 1993, REAL-TIME SYSTEMS SYMPOSIUM: PROCEEDINGS, P222, DOI 10.1109/REAL.1993.393496
   Garcia-Fornes A., 1997, NOVATICA         SEP, P22
   Gaujal B, 2003, REAL-TIME SYST, V25, P39, DOI 10.1023/A:1022972819457
   GHAZALIE TM, 1995, REAL-TIME SYST, V9, P31, DOI 10.1007/BF01094172
   Goossens J., 1999, P 5 INT C INF SYST A
   *IEEE, 2004, 100312004 IEEE
   Lehoczky J. P., 1987, Proceedings of the Real-Time Systems Symposium (Cat. No.87CH2475-2), P261
   LEHOCZKY JP, 1992, REAL-TIME SYSTEMS SYMPOSIUM : PROCEEDINGS, P110, DOI 10.1109/REAL.1992.242671
   Petters S.M, 2007, TECHNICAL REPORT
   RAMOSTHUEL S, 1993, REAL-TIME SYSTEMS SYMPOSIUM: PROCEEDINGS, P160, DOI 10.1109/REAL.1993.393504
   Sprunt B., 1989, Real-Time Systems, V1, P27, DOI 10.1007/BF02341920
   Sprunt B., 1988, Proceedings. Real-Time Systems Symposium (IEEE Cat. No.88CH2618-7), P251, DOI 10.1109/REAL.1988.51120
   Stanovich Mark, 2010, Proceedings of the 16th IEEE Real-Time and Embedded Technology and Applications Symposium (RTAS 2010), P35, DOI 10.1109/RTAS.2010.34
   STROSNIDER JK, 1995, IEEE T COMPUT, V44, P73, DOI 10.1109/12.368008
   Terrasa A, 2008, SOFTWARE PRACT EXPER, V38, P447, DOI 10.1002/spe.833
   THUEL SR, 1994, REAL TIM SYST SYMP P, P22, DOI 10.1109/REAL.1994.342733
   Tia TS, 1996, REAL-TIME SYST, V10, P23, DOI 10.1007/BF00357882
   Wilhelm R, 2008, ACM T EMBED COMPUT S, V7, DOI 10.1145/1347375.1347389
   Yodaiken V., 1999, P 5 LIN EXP MAR
NR 31
TC 1
Z9 1
U1 0
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2012
VL 38
IS 6
BP 1305
EP 1318
DI 10.1109/TSE.2011.95
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 043PI
UT WOS:000311556100004
OA Green Published
DA 2024-07-18
ER

PT J
AU Heydarnoori, A
   Czarnecki, K
   Binder, W
   Bartolomei, TT
AF Heydarnoori, Abbas
   Czarnecki, Krzysztof
   Binder, Walter
   Bartolomei, Thiago Tonelli
TI Two Studies of Framework-Usage Templates Extracted from Dynamic Traces
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Object-oriented application frameworks; framework comprehension;
   framework documentation; concept-implementation templates; application
   programming interface (API); dynamic analysis; concept location; feature
   identification
ID INFERENCE; FEATURES; SUPPORT
AB Object-oriented frameworks are widely used to develop new applications. They provide reusable concepts that are instantiated in application code through potentially complex implementation steps such as subclassing, implementing interfaces, and calling framework operations. Unfortunately, many modern frameworks are difficult to use because of their large and complex APIs and frequently incomplete user documentation. To cope with these problems, developers often use existing framework applications as a guide. However, locating concept implementations in those sample applications is typically challenging due to code tangling and scattering. To address this challenge, we introduce the notion of concept-implementation templates, which summarize the necessary concept-implementation steps and identify them in the sample application code, and a technique, named FUDA, to automatically extract such templates from dynamic traces of sample applications. This paper further presents the results of two experiments conducted to evaluate the quality and usefulness of FUDA templates. The experimental evaluation of FUDA with 14 concepts in five widely used frameworks suggests that the technique is effective in producing templates with relatively few false positives and false negatives for realistic concepts by using two sample applications. Moreover, we observed in a user study with 28 programmers that the use of templates reduced the concept-implementation time compared to when documentation was used.
C1 [Heydarnoori, Abbas] Sharif Univ Technol, Dept Comp Engn, Tehran, Iran.
   [Czarnecki, Krzysztof; Bartolomei, Thiago Tonelli] Univ Waterloo, Dept Elect & Comp Engn, Waterloo, ON N2L 3G1, Canada.
   [Binder, Walter] Univ Lugano, Fac Informat, CH-6904 Lugano, Switzerland.
C3 Sharif University of Technology; University of Waterloo; Universita
   della Svizzera Italiana
RP Heydarnoori, A (corresponding author), Sharif Univ Technol, Dept Comp Engn, Azadi Ave, Tehran, Iran.
EM heydarnoori@sharif.edu; kczarnec@gsd.uwaterloo.ca; walter.binder@usi.ch;
   ttonelli@gsd.uwaterloo.ca
RI Heydarnoori, Abbas/ABB-2493-2020
OI Heydarnoori, Abbas/0000-0001-9785-2880; Binder,
   Walter/0000-0002-2477-2182
CR AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   Alur R, 2005, ACM SIGPLAN NOTICES, V40, P98, DOI 10.1145/1047659.1040314
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   [Anonymous], 2012, JAVA 2D FORUM
   [Anonymous], 2012, GEF COMMUNITY FORUM
   [Anonymous], 2010, P 32 ACMIEEE INT C S
   [Anonymous], 2012, ECL PLATF COMM FOR
   [Anonymous], 2005, P 10 EUROPEAN SOFTWA, DOI [10.1145/1095430.1081713, DOI 10.1145/1095430.1081713]
   [Anonymous], 2007, 6th joint meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), DOI DOI 10.1145/1287624.1287632
   [Anonymous], 2007, P 22 IEEE ACM INT C
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   [Anonymous], 2012, JAVA SWING FORUM
   Antkiewicz M, 2009, IEEE T SOFTWARE ENG, V35, P795, DOI 10.1109/TSE.2009.30
   Antoniol G, 2006, IEEE T SOFTWARE ENG, V32, P627, DOI 10.1109/TSE.2006.88
   Asadi F, 2010, EUR CON SFTWR MTNCE, P31, DOI 10.1109/CSMR.2010.17
   Bruch Marcel, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P141, DOI 10.1109/MSR.2010.5463347
   Bruch Marcel., 2006, P 4 OOPSLA WORKSHOP, P55, DOI [10.1145/1188835.1188847, DOI 10.1145/1188835.1188847]
   Coelho W., 2006, AOSD '06: Proceedings of the 5th international conference on Aspect-oriented software development, P158
   Dagenais B., 2008, FSE, P203
   Dagenais B, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P481, DOI 10.1145/1368088.1368154
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Eisenberg AD, 2005, PROC IEEE INT CONF S, P337
   Fairbanks G, 2006, ACM SIGPLAN NOTICES, V41, P75, DOI 10.1145/1167515.1167480
   Froehlich G, 1997, PROC INT CONF SOFTW, P491, DOI 10.1145/253228.253432
   Gabel M., 2008, SIGSOFT FSE, P339, DOI DOI 10.1145/1453101.1453150
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gamma Erich., 2003, CONTRIBUTING ECLIPSE
   Ganter B, 1999, Formal concept analysis: Mathematical foundations
   Griswold WG, 2001, PROC INT CONF SOFTW, P265, DOI 10.1109/ICSE.2001.919100
   Hakala M, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P171, DOI 10.1109/WICSA.2001.948426
   Henkel J, 2005, PROC INT CONF SOFTW, P274
   Heydarnoori A., 2009, THESIS U WATERLOO CA
   Heydarnoori A, 2009, LECT NOTES COMPUT SC, V5653, P344, DOI 10.1007/978-3-642-03013-0_16
   Hoffmann R, 2007, UIST 2007: PROCEEDINGS OF THE 20TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P13
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   Hou D., 2004, Proceedings of the 2004 Conference of the Centre for Advanced Studies on Collaborative Research, P96
   Janzen D., 2003, Proceedings of the 2nd Annual Conference on Aspect-Oriented Software Development (AOSD), P178, DOI 10.1145/643603.643622
   Johnson R., 1998, PATTERNS HDB TECHNIQ, P375
   JOHNSON RE, 1992, SIGPLAN NOTICES, V27, P63
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Kim M, 2007, PROC INT CONF SOFTW, P333
   KRASNER GE, 1988, J OBJECT-ORIENT PROG, V1, P41
   Liu Dapeng, 2007, P 22 IEEEACM INT C A, P234, DOI 10.1145/1321631.1321667
   Mandelin D, 2005, ACM SIGPLAN NOTICES, V40, P48, DOI 10.1145/1064978.1065018
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   PREE W, 1995, SOFTWARE-CONC TOOL, V16, P136
   Ramanathan MK, 2007, PROC INT CONF SOFTW, P240
   Robillard MP, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189751
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Sahavechaphan N, 2006, ACM SIGPLAN NOTICES, V41, P413, DOI 10.1145/1167515.1167508
   Salah M., 2005, THESIS DREXEL U
   Sankaranarayanan S, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P131, DOI 10.1145/1368088.1368107
   Schäfer T, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P239, DOI 10.1109/WCRE.2007.16
   Schäfer T, 2006, IEEE T SOFTWARE ENG, V32, P753, DOI 10.1109/TSE.2006.94
   Schäfer T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P471, DOI 10.1145/1368088.1368153
   Shepherd David, 2007, P 6 INT C ASP OR SOF, P212
   Supporting Material FUDA, 2011, FUDA SUPP MAT
   Thummalapenta Suresh, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P327, DOI 10.1109/ASE.2008.43
   Vasudevan P, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P289, DOI 10.1109/SERA.2006.25
   Viljamaa J., 2003, Software Engineering Notes, V28, P217, DOI 10.1145/949952.940101
   VILLAZON A., 2008, P 6 INT S PRINCIPLES, P159
   WILDE N, 1995, J SOFTW MAINT-RES PR, V7, P49, DOI 10.1002/smr.4360070105
   Wu Wei, 2010, P 32 ACMIEEE INT C S, P325, DOI DOI 10.1145/1806799.1806848
   Xie Tao, 2006, Proc. MSR, P54
   Xing ZC, 2007, IEEE T SOFTWARE ENG, V33, P818, DOI 10.1109/TSE.2007.70747
   Zhao W, 2006, ACM T SOFTW ENG METH, V15, P195, DOI 10.1145/1131421.1131424
NR 68
TC 9
Z9 9
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2012
VL 38
IS 6
BP 1464
EP 1487
DI 10.1109/TSE.2011.77
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 043PI
UT WOS:000311556100013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Nejati, S
   Sabetzadeh, M
   Chechik, M
   Easterbrook, S
   Zave, P
AF Nejati, Shiva
   Sabetzadeh, Mehrdad
   Chechik, Marsha
   Easterbrook, Steve
   Zave, Pamela
TI Matching and Merging of Variant Feature Specifications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Model management; match; merge; hierarchical state machines;
   statecharts; behavior preservation; variability modeling;
   parameterization
ID REQUIREMENTS; FRAMEWORK; LANGUAGE; MODELS
AB Model Management addresses the problem of managing an evolving collection of models by capturing the relationships between models and providing well-defined operators to manipulate them. In this paper, we describe two such operators for manipulating feature specifications described using hierarchical state machine models: Match, for finding correspondences between models, and Merge, for combining models with respect to known or hypothesized correspondences between them. Our Match operator is heuristic, making use of both static and behavioral properties of the models to improve the accuracy of matching. Our Merge operator preserves the hierarchical structure of the input models, and handles differences in behavior through parameterization. This enables us to automatically construct merges that preserve the semantics of hierarchical state machines. We report on tool support for our Match and Merge operators, and illustrate and evaluate our work by applying these operators to a set of telecommunication features built by AT&T.
C1 [Nejati, Shiva; Sabetzadeh, Mehrdad] Univ Luxembourg, SnT Ctr, L-2721 Luxembourg, Luxembourg.
   [Chechik, Marsha; Easterbrook, Steve] Univ Toronto, Dept Comp Sci, Toronto, ON M5S 3G4, Canada.
   [Zave, Pamela] AT&T Labs Res, Florham Pk, NJ 07932 USA.
C3 University of Luxembourg; University of Toronto; AT&T
RP Nejati, S (corresponding author), Univ Luxembourg, SnT Ctr, 4 Rue Alphonse Weicker, L-2721 Luxembourg, Luxembourg.
EM shiva.nejati@uni.lu; mehrdad.sabetzadeh@uni.lu; chechik@cs.toronto.edu;
   sme@cs.toronto.edu; pamela@research.att.com
RI Nejati, Shiva/KBT-7650-2024
OI Easterbrook, Steve/0000-0002-3261-6446; Sabetzadeh,
   Mehrdad/0000-0002-4711-8319; Nejati, Shiva/0000-0002-0281-8231
FU Natural Sciences and Engineering Research Council of Canada; IBM;
   Research Council of Norway
FX The authors are grateful to Thomas Smith and Gregory Bond for their help
   with their analysis of telecom features and the ECharts language. They
   thank the TSE reviewers and members of the Model Management Research
   Group at the University of Toronto for their insightful comments.
   Financial support was provided by the Natural Sciences and Engineering
   Research Council of Canada, IBM, and the Research Council of Norway
   under the ModelFusion project.
CR Alanen M, 2003, LECT NOTES COMPUT SC, V2863, P2
   Alspaugh TA, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P142, DOI 10.1109/ISRE.1999.777994
   Alur A., 1999, Automata, Languages and Programming. 26th International Colloquium, ICALP'99. Proceedings (Lecture Notes in Computer Science Vol.1644), P169
   [Anonymous], 2010, RES DEV PERSISTENT G
   Bayer J, 1999, LECT NOTES COMPUT SC, V1687, P446, DOI 10.1145/318774.319262
   Bernstein PA, 2004, SIGMOD REC, V33, P38, DOI 10.1145/1041410.1041417
   Bernstein PhilipA., 2003, CIDR, P209
   Bogdanov K, 2009, WORK CONF REVERSE EN, P177, DOI 10.1109/WCRE.2009.17
   Bond G, 2002, ECHARTS BALANCING DE
   Bond G, 2008, INTRO ECHARTS CONCIS
   Bond GW, 2005, LECT NOTES COMPUT SC, V3489, P298
   Boronat A, 2007, ELECTRON NOTES THEOR, V166, P5, DOI 10.1016/j.entcs.2006.06.013
   Brunet G., 2006, P WORKSH GLOB INT MO
   Chechik M., 2011, INNOVATIONS IN PRESS
   Clarke EM, 1999, MODEL CHECKING, P1
   Classen A, 2009, PROC INT CONF SOFTW, P227, DOI 10.1109/ICSE-COMPANION.2009.5070988
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   Dams D, 1997, ACM T PROGR LANG SYS, V19, P253, DOI 10.1145/244795.244800
   de Alfaro L, 2004, LECT NOTES COMPUT SC, V3142, P97
   Easterbrook S, 2001, PROC INT CONF SOFTW, P411, DOI 10.1109/ICSE.2001.919114
   Fabro M.D.D., 2005, P JOURN BAS DONN ADV
   Faulk SR, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P48
   Fischbein D., 2010, ACM T SOFTW IN PRESS, P2010
   Gomaa H., 2004, Designing Software Product Lines with UML: From Use Cases to PatternBased Software Architectures
   Halmans Gunter., 2003, SOFTWARE SYSTEM MODE, V2, P15
   Harel D., 1998, MODELING REACTIVE SY
   Harrison W, 2006, LECT NOTES COMPUT SC, V4089, P194
   Hay J. D., 2000, Software Engineering Notes, V25, P110, DOI 10.1145/357474.355061
   Hayes JH, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P138
   HEITMEYER C, 1995, COMPASS '95 - PROCEEDINGS OF THE TENTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P109, DOI 10.1109/CMPASS.1995.521891
   HORWITZ S, 1989, ACM T PROGR LANG SYS, V11, P345, DOI 10.1145/65979.65980
   HUSSAIN A., 2004, P 1 INT S LEV APPL F, P235
   Huth M, 2001, LECT NOTES COMPUT SC, V2028, P155
   Huth M., 2001, ELECT NOTES THEORETI, V45, P1
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson M, 1998, IEEE T SOFTWARE ENG, V24, P831, DOI 10.1109/32.729683
   KELTER U, 2008, P 2008 INT WORKSH CO, P1, DOI DOI 10.1145/1370152.1370154
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4199, P215
   Larsen K.G., 1995, LECT NOTES COMPUT SC, V1019, P17, DOI DOI 10.1007/3-540-60630-0_2
   Larsen U, 1988, Eur J Popul, V3, P203, DOI 10.1109/LICS.1988.5119
   Letkeman K., 2006, TECHNICAL REPORT
   LIANG HZ, 2008, P 11 INT C MOD DRIV, V5301, P204
   Lohmann N, 2008, LECT NOTES COMPUT SC, V5240, P132, DOI 10.1007/978-3-540-85758-7_12
   MAIDEN NA, 1992, COMMUN ACM, V35, P55, DOI 10.1145/129852.129857
   Mandelin D., 2006, 28th International Conference on Software Engineering Proceedings, P222, DOI 10.1145/1134285.1134317
   Manning C.D., 1999, FDN STAT NATURAL LAN
   McGill M., 1983, Introduction to Modern Information Retrieval
   Mehra A., 2005, ASE, P204, DOI DOI 10.1145/1101908.1101940
   Melnik Sergey., 2004, GENERIC MODEL MANAGE
   Milner R., 1989, Communication and concurrency
   Moreira A, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P285, DOI 10.1109/RE.2005.46
   NEJATI S, 2008, THESIS U TORONTO
   Nejati S., 2008, P ICSE WORKSH MOD SO
   Nejati S., 2008, INT S FDN SW ENG, P285
   Nejati S, 2007, PROC INT CONF SOFTW, P54
   Nicola R.D., 1990, P 8 INT C CONC THEOR, P152
   Niu JW, 2003, IEEE T SOFTWARE ENG, V29, P866, DOI 10.1109/TSE.2003.1237169
   NUSEIBEH B, 1994, IEEE T SOFTWARE ENG, V20, P760, DOI 10.1109/32.328995
   Patwardhan S., 2006, P EACL 2006 WORKSHOP, P1
   Pedersen T, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P1024
   Quante J, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P219, DOI 10.1109/WCRE.2007.24
   Rahm E, 2001, VLDB J, V10, P334, DOI 10.1007/s007780100057
   Rubin J., 2011, QUALITY BEHAV PRESER
   Rubin J., 2010, P WORKSH MOD DRIV AP, V10
   RYAN K., 1993, IEEE INT S REQUIREME, P112
   Sabetzadeh M, 2008, THESIS U TORONTO
   Sabetzadeh M, 2007, INT REQUIR ENG CONF, P221, DOI 10.1109/RE.2007.18
   Sabetzadeh M, 2006, REQUIR ENG, V11, P174, DOI 10.1007/s00766-006-0032-y
   Sabetzadeh M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P815, DOI 10.1145/1368088.1368208
   Salay R., 2007, P OOPSLA WORKSH ECL, P55
   Salay R., 2010, THESIS U TORONTO
   Sokolsky O, 2006, LECT NOTES COMPUT SC, V3920, P426
   Spanoudakis G, 1997, ANN SOFTW ENG, V3, P433, DOI 10.1023/A:1018998207415
   Tan P. N., 2005, Introduction to Data Mining
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   Uchitel S., 2004, Software Engineering Notes, V29, P43, DOI 10.1145/1041685.1029904
   Van Breugel F., 2008, P WORKSH APPR BEH EQ
   Whittle J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P314, DOI 10.1109/ICSE.2000.870422
   Whittle J, 2007, LECT NOTES COMPUT SC, V4735, P514
   Xing ZC, 2007, AUTOMAT SOFTW ENG, V14, P215, DOI 10.1007/s10515-007-0007-3
   Zave P., 2010, SOFTWARE REQUIREMENT
   Zisman Andrea, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P158, DOI 10.1109/ASE.2008.26
   Zito A, 2006, LECT NOTES COMPUT SC, V4199, P185
NR 83
TC 25
Z9 26
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2012
VL 38
IS 6
BP 1355
EP 1375
DI 10.1109/TSE.2011.112
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 043PI
UT WOS:000311556100007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Parmer, G
   West, R
AF Parmer, Gabriel
   West, Richard
TI Mutable Protection Domains: Adapting System Fault Isolation for
   Reliability and Efficiency
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Component-based; operating systems; reliability; fault isolation;
   performance
AB As software systems are becoming increasingly complex, the likelihood of faults and unexpected behaviors will naturally increase. Today, mobile devices to large-scale servers feature many millions of lines of code. Compile-time checks and offline verification methods are unlikely to capture all system states and control flow interactions of a running system. For this reason, many researchers have developed methods to contain faults at runtime by using software and hardware-based techniques to define protection domains. However, these approaches tend to impose isolation boundaries on software components that are static, and thus remain intact while the system is running. An unfortunate consequence of statically structured protection domains is that they may impose undue overhead on the communication between separate components. This paper proposes a new runtime technique that trades communication cost for fault isolation. We describe Mutable Protection Domains (MPDs) in the context of our COMPOSITE operating system. MPD dynamically adapts hardware isolation between interacting software components, depending on observed communication "hot-paths," with the purpose of maximizing fault isolation where possible. In this sense, MPD naturally tends toward a system of maximal component isolation, while collapsing protection domains where costs are prohibitive. By increasing isolation for low-cost interacting components, MPD limits the scope of impact of future unexpected faults. We demonstrate the utility of MPD using a webserver, and identify different hot-paths for different workloads that dictate adaptations to system structure. Experiments show up to 40 percent improvement in throughput compared to a statically organized system, while maintaining high-fault isolation.
C1 [Parmer, Gabriel] George Washington Univ, Dept Comp Sci, Washington, DC 20052 USA.
   [West, Richard] Boston Univ, Dept Comp Sci, Boston, MA 02215 USA.
C3 George Washington University; Boston University
RP Parmer, G (corresponding author), George Washington Univ, Dept Comp Sci, 801 22nd St NW,Suite 703, Washington, DC 20052 USA.
EM gparmer@gwu.edu; richwest@cs.bu.edu
FU Division Of Computer and Network Systems; Direct For Computer & Info
   Scie & Enginr [1117025] Funding Source: National Science Foundation
CR [Anonymous], P 6 C S OP SYST DES
   [Anonymous], 1984, Capability-Based Computer Systems
   [Anonymous], 2012, NIST STUD EC IMP IN
   [Anonymous], 2002, P USENIX ANN TECHN C
   BACK GV, 1999, P 7 WORKSH HOT TOP O
   BANGA G, 1999, P USENIX ANN TECHN C
   BERSHAD BN, 1990, ACM T COMPUT SYST, V8, P37, DOI [10.1145/77648.77650, 10.1145/74851.74861]
   Cadar C., 2008, Proc. USENIX OSDI
   Candea G., 2004, P 6 C S OP SYST DES
   Cantrill B., 2004, P USENIX ANN TECHN C
   Chapin J., 1995, SIGOPS OPERAT SYST R, V29, P12
   Chase J.S., 1992, ACM SIGOPS OPERATING, V26, P80
   Chou Andy, 2001, P 18 ACM S OP SYST P
   David F.M., 2008, P 8 USENIX C OP SYST
   DRAGOVIC B, 2003, P 19 ACM S OP SYST P
   ENGLER DR, 1995, P 15 ACM S OP SYST P
   FAHNDRICH M., 2006, P 1 ACM SIGOPS EUROS
   FASSINO JP, 2002, P US ANN TECHN C
   Ford B., 1994, P WINT USENIX TECHN
   Franke Hubertus, 2002, P OTTAWA LINUX S, V85, P479
   Gabber E., 2002, P US ANN TECHN C
   JOUBERT P, 2001, P USENIX ANN TECHN C
   Lenharth A., 2009, P 14 INT C ARCH SUPP
   Lepreau J., 1993, P 3 C USENIX MACH 3
   Liedtke J., 1993, P 14 ACM S OP SYST P
   Liedtke Jochen., 1995, On micro-kernel construction, V29
   Ousterhout J., 1990, P SUMM USENIX C
   Parmer G., 2007, P IEEE 13 REAL TIM E
   Parmer G., 2008, P REAL TIM SYST S
   Parmer G., 2007, P IEEE 28 REAL TIM S
   SELTZER M, 1996, P 2 USENIX S OP SYST
   Stoer M, 1997, J ACM, V44, P585, DOI 10.1145/263867.263872
   Swift Michael M., 2004, P 6 C S OP SYST DES
   Swift Michael M., 2003, P 19 ACM S OP SYST P
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   Witchel E., 2002, P 10 INT C ARCH SUPP
NR 36
TC 2
Z9 5
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2012
VL 38
IS 4
BP 875
EP 888
DI 10.1109/TSE.2011.61
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 983LE
UT WOS:000307120000009
DA 2024-07-18
ER

PT J
AU Raja, U
   Tretter, MJ
AF Raja, Uzma
   Tretter, Marietta J.
TI Defining and Evaluating a Measure of Open Source Project Survivability
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Evaluation framework; external validity; open source software; project
   evaluation; software measurement; software survivability
ID OPEN SOURCE SOFTWARE; OBJECT-ORIENTED METRICS; EMPIRICAL VALIDATION;
   COMPLEXITY; EVOLUTION; SUITE
AB In this paper, we define and validate a new multidimensional measure of Open Source Software (OSS) project survivability, called Project Viability. Project viability has three dimensions: vigor, resilience, and organization. We define each of these dimensions and formulate an index called the Viability Index (VI) to combine all three dimensions. Archival data of projects hosted at SourceForge. net are used for the empirical validation of the measure. An Analysis Sample (n = 136) is used to assign weights to each dimension of project viability and to determine a suitable cut-off point for VI. Cross-validation of the measure is performed on a hold-out Validation Sample (n = 96). We demonstrate that project viability is a robust and valid measure of OSS project survivability that can be used to predict the failure or survival of an OSS project accurately. It is a tangible measure that can be used by organizations to compare various OSS projects and to make informed decisions regarding investment in the OSS domain.
C1 [Raja, Uzma] Univ Alabama, Dept Informat Syst Stat & Management Sci, Tuscaloosa, AL 35487 USA.
   [Tretter, Marietta J.] Texas A&M Univ, Dept Informat & Operat Management, College Stn, TX 77840 USA.
C3 University of Alabama System; University of Alabama Tuscaloosa; Texas
   A&M University System; Texas A&M University College Station
RP Raja, U (corresponding author), Univ Alabama, Dept Informat Syst Stat & Management Sci, Box 870226,300 Campus Dr, Tuscaloosa, AL 35487 USA.
EM uraja@cba.ua.edu; mtretter@mays.tamu.edu
CR ABEL PS, 1994, AM STAT, V48, P18, DOI 10.2307/2685079
   ALLISON PD, 1978, AM SOCIOL REV, V43, P865, DOI 10.2307/2094626
   Alshayeb M, 2005, J SYST SOFTWARE, V74, P269, DOI 10.1016/j.jss.2004.02.002
   Alshayeb M, 2003, IEEE T SOFTWARE ENG, V29, P1043, DOI 10.1109/TSE.2003.1245305
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], P 20 ACM S OP SYST P
   [Anonymous], P INT C INF SYST
   Baccarini D., 1999, PROJ MANAG J, V30, P25, DOI DOI 10.1177/875697289903000405
   Basili V, 1996, PROC INT CONF SOFTW, P464, DOI 10.1109/ICSE.1996.493441
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BOEHM B, 1975, HIGH COST SOFTWARE
   BOEHM BW, 1987, COMPUTER, V20, P43, DOI 10.1109/MC.1987.1663694
   Briand L., 1996, Empirical Software Engineering, V1, P61, DOI 10.1007/BF00125812
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P722, DOI 10.1109/32.815329
   Cearley D.W., 2005, GARTNERS POSITIONS F
   CHENGALURSMITH S, 2003, P 24 INT C INF SYST
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHURCHER NI, 1995, IEEE T SOFTWARE ENG, V21, P263, DOI 10.1109/32.372153
   Constanza Robert, 1999, Aquatic Ecology, V33, P105
   Crowston K, 2006, COMPUTER, V39, P89, DOI 10.1109/MC.2006.152
   Crowston K., 2002, IEE Proceedings-Software, V149, P3, DOI 10.1049/ip-sen:20020197
   Crowston K, 2007, INFORM SOFTWARE TECH, V49, P564, DOI 10.1016/j.infsof.2007.02.004
   DELONG ER, 1988, BIOMETRICS, V44, P837, DOI 10.2307/2531595
   Fenton NE., 1991, Software Metrics: A Rigorous Approach
   Ferenc R, 2004, PROC IEEE INT CONF S, P60, DOI 10.1109/ICSM.2004.1357790
   German D. M., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P17, DOI 10.1049/ic:20040469
   Godfrey M., 2001, P 4 INT WORKSH PRINC
   Grewal R, 2006, MANAGE SCI, V52, P1043, DOI 10.1287/mnsc.1060.0550
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hadden G.D., 2000, P WORKSH PAR DISTR P
   Healy K., 2003, The Ecology of Open-Source Software Development
   HOSMER D. W., 2000, APPL LOGISTIC REGRES, V2
   Jones WD, 1999, PROCEEDINGS OF THE THIRD EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P148, DOI 10.1109/CSMR.1999.756692
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Koch S, 2002, INFORM SYST J, V12, P27, DOI 10.1046/j.1365-2575.2002.00110.x
   Koch S, 2007, J SOFTW MAINT EVOL-R, V19, P361, DOI 10.1002/smr.348
   Koru AG, 2007, J SYST SOFTWARE, V80, P63, DOI 10.1016/j.jss.2006.05.017
   Kozlov Denis, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P186
   Krishnamurthy S., 2005, First Monday, DOI [10.5210/fm.v0i0.1477., DOI 10.5210/FM.V0I0.1477]
   Lakhani KR, 2003, RES POLICY, V32, P923, DOI 10.1016/S0048-7333(02)00095-1
   Laplante Phillip, 2007, IT Professional, V9, P28, DOI 10.1109/MITP.2007.72
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Linberg KR, 1999, J SYST SOFTWARE, V49, P177, DOI 10.1016/S0164-1212(99)00094-1
   Madey G., 2002, P 2 WORKSH OP SOURC
   MELTON AC, 1990, SOFTWARE ENG J, V5, P246, DOI 10.1049/sej.1990.0027
   Menard S., 2002, APPL LOGISTIC REGRES
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Nikora AP, 2005, J SOFTW MAINT EVOL-R, V17, P65, DOI 10.1002/smr.303
   Paulson JW, 2004, IEEE T SOFTWARE ENG, V30, P246, DOI 10.1109/TSE.2004.1274044
   Pierce John R., 1980, An Introduction to Catastrophe Theory, V2nd
   Pinto J.K., 1988, PROJ MANAG J, V19, P67
   Polancic G, 2004, ITI 2004: PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY INTERFACES, P673
   Pressman Roger., 2004, SOFTWARE ENG PRACTIT
   Raja U.S., 2006, P SAS USER GROUP INT
   Schisterman EF, 2005, EPIDEMIOLOGY, V16, P73, DOI 10.1097/01.ede.0000147512.81966.ba
   Schneidewind N., 1992, IEEE T SOFTWARE ENG, V17, P253
   Shatnawi R., 2006, Proceedings of the 2006 International Conference on Software Engineering Research and Practice and Conference on Programming Languages and Compilers SERP'06, P422
   Stewart KJ, 2006, INFORM SYST RES, V17, P126, DOI 10.1287/isre.1060.0082
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Thai J., 2001, P 8 AS PAC SOFTW ENG
   Trochim W.M.K., 1999, RES METHODS KNOWLEDG, V2
   Ulanowicz R.E., 1986, Growth and Development: Ecosystems Phenomenology
   Ven K, 2008, IEEE SOFTWARE, V25, P54, DOI 10.1109/MS.2008.73
   VIXIE P, 1999, OPEN SOURCES VOICES
   von Krogh G, 2006, MANAGE SCI, V52, P975, DOI 10.1287/mnsc.1060.0560
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   Yu L., 2005, P INT S EMP SOFTW EN, P404
   [No title captured]
NR 69
TC 27
Z9 29
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2012
VL 38
IS 1
BP 163
EP 174
DI 10.1109/TSE.2011.39
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881HG
UT WOS:000299472600011
DA 2024-07-18
ER

PT J
AU Tribastone, M
   Gilmore, S
   Hillston, J
AF Tribastone, Mirco
   Gilmore, Stephen
   Hillston, Jane
TI Scalable Differential Analysis of Process Algebra Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Modeling and prediction; ordinary differential equations; Markov
   processes
ID PEPA MODELS; APPROXIMATION
AB The exact performance analysis of large-scale software systems with discrete-state approaches is difficult because of the well-known problem of state-space explosion. This paper considers this problem with regard to the stochastic process algebra PEPA, presenting a deterministic approximation to the underlying Markov chain model based on ordinary differential equations. The accuracy of the approximation is assessed by means of a substantial case study of a distributed multithreaded application.
C1 [Tribastone, Mirco; Gilmore, Stephen; Hillston, Jane] Univ Edinburgh, Lab Fdn Comp Sci, Sch Informat, Edinburgh EH8 9AB, Midlothian, Scotland.
C3 University of Edinburgh
RP Tribastone, M (corresponding author), Univ Edinburgh, Lab Fdn Comp Sci, Sch Informat, 10 Crichton St, Edinburgh EH8 9AB, Midlothian, Scotland.
EM mtribast@inf.ed.ac.uk; stg@inf.ed.ac.uk; jeh@inf.ed.ac.uk
OI Tribastone, Mirco/0000-0002-6018-5989
FU EU [IST-2005-016004]; EPSRC ARF [EP/c543696/01]
FX This work has been partially supported by the EU-funded project
   SENSORIA, IST-2005-016004. Jane Hillston is supported by EPSRC ARF
   EP/c543696/01.
CR [Anonymous], 1996, THESIS U CALIFORNIA
   Bakhshi R, 2009, INT CONF QUANT EVAL, P247, DOI 10.1109/QEST.2009.38
   Benaim M, 2008, PERFORM EVALUATION, V65, P823, DOI 10.1016/j.peva.2008.03.005
   Benkirane S, 2009, ELECTRON NOTES THEOR, V229, P59, DOI 10.1016/j.entcs.2009.02.005
   Bortolussi L, 2007, ELECTRON NOTES THEOR, V190, P27, DOI 10.1016/j.entcs.2007.07.003
   Bradley JT, 2008, J COMPUT SYST SCI, V74, P1013, DOI 10.1016/j.jcss.2007.07.005
   BUCHHOLZ P, 1994, J APPL PROBAB, V31, P59, DOI 10.2307/3215235
   Calder M., 2005, P COMP METH SYST BIO
   Calder M, 2006, LECT NOTES COMPUT SC, V4230, P1
   Cardelli L, 2008, THEOR COMPUT SCI, V391, P190, DOI 10.1016/j.tcs.2007.11.012
   Chaintreau A, 2009, PERF E R SI, V37, P109
   Darling RWR, 2008, PROBAB SURV, V5, P37, DOI 10.1214/07-PS121
   Ding J., 2008, P 7 WORKSH PROC ALG
   Geisweiller N, 2008, THEOR COMPUT SCI, V404, P97, DOI 10.1016/j.tcs.2008.04.012
   GILLESPIE DT, 1977, J PHYS CHEM-US, V81, P2340, DOI 10.1021/j100540a008
   Gilmore S, 2001, IEEE T SOFTWARE ENG, V27, P449, DOI 10.1109/32.922715
   Hayden RA, 2010, PERFORM EVALUATION, V67, P260, DOI 10.1016/j.peva.2009.08.010
   Hillston J, 2005, INT CONF QUANT EVAL, P33
   Hillston J., 1996, A Compositional Approach to Performance Modelling
   HILLSTON J, 1994, P 2 INT WORKSH PROC, P51
   KURTZ TG, 1970, J APPL PROBAB, V7, P49, DOI 10.2307/3212147
   Kwiatkowska M, 2007, LECT NOTES COMPUT SC, V4486, P220
   REIBMAN A, 1988, COMPUT OPER RES, V15, P19, DOI 10.1016/0305-0548(88)90026-3
   Stewart W.J., 1994, Introduction to the Numerical Solution of Markov Chains
   Tribastone Mirco, 2009, Performance Evaluation Review, V36, P28, DOI 10.1145/1530873.1530880
   Tribastone M., 2010, P 1 JOINT WOSPSIPEW, P183
NR 26
TC 65
Z9 66
U1 1
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2012
VL 38
IS 1
BP 205
EP 219
DI 10.1109/TSE.2010.82
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881HG
UT WOS:000299472600014
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Krogmann, K
   Kuperberg, M
   Reussner, R
AF Krogmann, Klaus
   Kuperberg, Michael
   Reussner, Ralf
TI Using Genetic Search for Reverse Engineering of Parametric Behavior
   Models for Performance Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Genetic search; genetic programming; reverse engineering; performance
   prediction; bytecode benchmarking
AB In component-based software engineering, existing components are often reused in new applications. Correspondingly, the response time of an entire component-based application can be predicted from the execution durations of individual component services. These execution durations depend on the runtime behavior of a component which itself is influenced by three factors: the execution platform, the usage profile, and the component wiring. To cover all relevant combinations of these influencing factors, conventional prediction of response times requires repeated deployment and measurements of component services for all such combinations, incurring a substantial effort. This paper presents a novel comprehensive approach for reverse engineering and performance prediction of components. In it, genetic programming is utilized for reconstructing a behavior model from monitoring data, runtime bytecode counts, and static bytecode analysis. The resulting behavior model is parameterized over all three performance-influencing factors, which are specified separately. This results in significantly fewer measurements: The behavior model is reconstructed only once per component service, and one application-independent bytecode benchmark run is sufficient to characterize an execution platform. To predict the execution durations for a concrete platform, our approach combines the behavior model with platform-specific benchmarking results. We validate our approach by predicting the performance of a file sharing application.
C1 [Krogmann, Klaus; Kuperberg, Michael; Reussner, Ralf] Karlsruhe Inst Technol, Inst Program Struct & Data Org, D-76131 Karlsruhe, Germany.
C3 Helmholtz Association; Karlsruhe Institute of Technology
RP Krogmann, K (corresponding author), Karlsruhe Inst Technol, Inst Program Struct & Data Org, Fasanengarten 5, D-76131 Karlsruhe, Germany.
EM krogmann@kit.edu; kuperberg@kit.edu; reussner@kit.edu
RI Kuperberg, Michael/AAK-9326-2021
OI Kuperberg, Michael/0000-0002-7445-0106; Reussner,
   Ralf/0000-0002-9308-6290
CR Albert E, 2007, ELECTRON NOTES THEOR, V190, P67, DOI 10.1016/j.entcs.2007.02.061
   [Anonymous], 1993, GENETIC PROGRAMMING
   Becker S., 2006, P WORKSH COMP OR PRO
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   BERTOLINO A, 2004, P CBSE 2004, P233
   BINDER W, 2006, P 5 INT C GEN PROGR, P171
   Binder W, 2006, ELECTRON NOTES THEOR, V153, P57, DOI 10.1016/j.entcs.2005.10.032
   BONDAREV E, 2005, P 31 EUROMICRO C SOF
   Briand LC, 2006, IEEE T SOFTWARE ENG, V32, P642, DOI 10.1109/TSE.2006.96
   BRUNETON E, 2002, ASM CODE MANIPULATIO
   Cadar C., 2008, KLEE: Unassisted and Automatic Generation of High-Coverage Tests for Complex Systems Programs
   Courtois M., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P105, DOI 10.1145/350391.350416
   Cristianini N., 2000, INTRO SUPPORT VECTOR
   DONNELL J, 2004, JAVA PERFORMANCE PRO
   DOVAL D, 1999, P SOFTW TECHN ENG PR, P73
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   FRIEDMAN JH, 1991, ANN STAT, V19, P1, DOI 10.1214/aos/1176347963
   GOLUB GH, 1979, TECHNOMETRICS, V21, P215, DOI 10.1080/00401706.1979.10489751
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   HERDER C, 2000, SFSUCSTR0002
   Hrischuk CE, 1999, IEEE T SOFTWARE ENG, V25, P122, DOI 10.1109/32.748921
   HU EYS, 2003, P OTM WORKSH MOV MEA, P411
   Israr T, 2007, J SYST SOFTWARE, V80, P474, DOI 10.1016/j.jss.2006.07.019
   KAPPLER T, 2008, P SOFTW ENG FEB, P140
   Krogmann K, 2008, LECT NOTES COMPUT SC, V5153, P297
   KUPERBERG M, 2007, P WORKSH COMP OR PRO
   Kuperberg M., 2008, P 3 INT WORKSH BYT S
   Kuperberg M, 2008, LECT NOTES COMPUT SC, V5282, P48, DOI 10.1007/978-3-540-87891-9_4
   LAMBERT J, 2008, P WORKSH QUANT ASP P
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Meffert K., 2008, Jgap-java genetic algorithms and genetic programming package
   Meyerhöfer M, 2005, ELECTRON NOTES THEOR, V114, P25, DOI 10.1016/j.entcs.2004.02.066
   Mitchell B., 2002, P 14 INT C SOFTWARE, V27, P431
   Smith C.U., 1990, Performance engineering of software systems, VSeventh
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   Woodside Murray., 2005, P 5 INT WORKSHOP SOF, P1, DOI DOI 10.1145/1071021.1071022
   ZHANG X, 2000, P ACM 2000 C JAV GRA, P62
   Zheng T, 2008, IEEE T SOFTWARE ENG, V34, P391, DOI 10.1109/TSE.2008.30
NR 38
TC 30
Z9 31
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2010
VL 36
IS 6
BP 865
EP 877
DI 10.1109/TSE.2010.69
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 682SU
UT WOS:000284424100010
DA 2024-07-18
ER

PT J
AU Aljazzar, H
   Leue, S
AF Aljazzar, Husain
   Leue, Stefan
TI Directed Explicit State-Space Search in the Generation of
   Counterexamples for Stochastic Model Checking
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Directed explicit state-space search; heuristic search; counterexamples;
   stochastic model checking
ID TRANSIENT SOLUTIONS; COMPLEXITY
AB Current stochastic model checkers do not make counterexamples for property violations readily available. In this paper, we apply directed explicit state-space search to discrete and continuous-time Markov chains in order to compute counterexamples for the violation of PCTL or CSL properties. Directed explicit state-space search algorithms explore the state space on-the-fly, which makes our method very efficient and highly scalable. They can also be guided using heuristics which usually improve the performance of the method. Counterexamples provided by our method have two important properties. First, they include those traces which contribute the greatest amount of probability to the property violation. Hence, they show the most probable offending execution scenarios of the system. Second, the obtained counterexamples tend to be small. Hence, they can be effectively analyzed by a human user. Both properties make the counterexamples obtained by our method very useful for debugging purposes. We implemented our method based on the stochastic model checker PRISM and applied it to a number of case studies in order to illustrate its applicability.
C1 [Aljazzar, Husain; Leue, Stefan] Univ Konstanz, Dept Comp & Informat Sci, D-78457 Constance, Germany.
C3 University of Konstanz
RP Aljazzar, H (corresponding author), Univ Konstanz, Dept Comp & Informat Sci, Univ Str 10,POB D67, D-78457 Constance, Germany.
EM husain.aljazzar@uni-konstanz.de; Stefan.Leue@uni-konstanz.de
FU DFG
FX This work was carried out in the course of the DFG-funded research
   project DiRePro. The authors wish to thank Holger Hermanns for inspiring
   discussions that led to the precursory work as documented in the paper
   [24].
CR Aljazzar H, 2005, LECT NOTES COMPUT SC, V3829, P177
   ALJAZZAR H, 2008, P 5 INT C QUANT EV S
   Aljazzar H, 2006, LECT NOTES COMPUT SC, V4202, P33
   ANDRES ME, 2008, ACM COMPUTING RES RE
   [Anonymous], 1980, Principles of Artificial Intelligence
   [Anonymous], 1994, Communications in Reliability, Maintainability and Serviceability
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   [Anonymous], 2001, MODEL CHECKING
   Aziz A, 1995, LECT NOTES COMPUT SC, V939, P155
   Aziz A, 1996, LNCS, P269, DOI [DOI 10.1007/3-540-61474-5_75, 10.1007/3-540-61474-5_75, DOI 10.1007/3-540-61474-5]
   Aziz Adnan, 2000, ACM Trans. Comput. Logic, V1, P162, DOI DOI 10.1145/343369.343402
   Baier C, 2003, IEEE T SOFTWARE ENG, V29, P524, DOI 10.1109/TSE.2003.1205180
   Benini L, 1999, IEEE T COMPUT AID D, V18, P813, DOI 10.1109/43.766730
   Bianco A., 1995, Foundations of Software Technology and Theoretical Computer Science. 15th Conference. Proceedings, P499
   Clarke E, 2002, IEEE S LOG, P19, DOI 10.1109/LICS.2002.1029814
   Clarke. E. M., 1982, LOGICS OF PROGRAMS, P52, DOI [10 . 1007 / BFb0025774, DOI 10.1007/BFB0025774]
   Courcoubetis C., 1988, 29th Annual Symposium on Foundations of Computer Science (IEEE Cat. No.88CH2652-6), P338, DOI 10.1109/SFCS.1988.21950
   COURCOUBETIS C, 1995, J ASSOC COMPUT MACH, V42, P857, DOI 10.1145/210332.210339
   COURCOUBETIS C, 1990, P 17 INT COLL AUT LA, P336
   DREYFUS SE, 1968, P OP RES SOC AM I MA, V16, P166
   Edelkamp S., 2004, International Journal on Software Tools for Technology Transfer, V5, P247, DOI 10.1007/s10009-002-0104-3
   Eppstein D, 1998, SIAM J COMPUT, V28, P652, DOI 10.1137/S0097539795290477
   Fecher H, 2008, INT CONF QUANT EVAL, P169, DOI 10.1109/QEST.2008.10
   GRASSMANN WK, 1978, COMPUT OPER RES, V5, P161, DOI 10.1016/0305-0548(78)90010-2
   GRASSMANN WK, 1977, COMPUT OPER RES, V4, P47, DOI 10.1016/0305-0548(77)90007-7
   Groce A, 2003, LECT NOTES COMPUT SC, V2648, P121
   Groce A., 2006, International Journal on Software Tools for Technology Transfer, V8, P229, DOI 10.1007/s10009-005-0202-0
   GROSS D, 1984, OPER RES, V32, P343, DOI 10.1287/opre.32.2.343
   HAN T, 2007, P 5 INT S AUT TECHN, P331
   Han T, 2009, IEEE T SOFTWARE ENG, V35, P241, DOI 10.1109/TSE.2009.5
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Haverkort BR, 2000, SYM REL DIST SYST, P228, DOI 10.1109/RELDI.2000.885410
   HEATH J, 2006, PROBABILISTIC MODEL, P32
   Heath J, 2008, THEOR COMPUT SCI, V391, P239, DOI 10.1016/j.tcs.2007.11.013
   Hérault T, 2006, INT CONF QUANT EVAL, P129
   Hermanns H, 2000, LECT NOTES COMPUT SC, V1785, P347
   Hermanns H, 2008, LECT NOTES COMPUT SC, V5123, P162
   Hinton A, 2006, LECT NOTES COMPUT SC, V3920, P441
   Jiménez VM, 1999, LECT NOTES COMPUT SC, V1668, P15
   Katoen JP, 2005, INT CONF QUANT EVAL, P243, DOI 10.1109/QEST.2005.2
   Korf RE, 1998, FIFTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-98) AND TENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICAL INTELLIGENCE (IAAI-98) - PROCEEDINGS, P305
   Korf RE, 2001, ARTIF INTELL, V129, P199, DOI 10.1016/S0004-3702(01)00094-7
   KUPFERSCHMID S, 2007, P 13 INT C TOOLS ALG, P679
   MARTELLI A, 1977, ARTIF INTELL, V8, P1, DOI 10.1016/0004-3702(77)90002-9
   PEARL J, 1986, HEURISTICS INTELLIGE
   Stewart W.J., 1994, Introduction to the Numerical Solution of Markov Chains
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Vardi M.Y., 1985, FOCS'85, P327
   Younes HLS, 2005, LECT NOTES COMPUT SC, V3576, P429
NR 49
TC 29
Z9 30
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2010
VL 36
IS 1
BP 37
EP 60
DI 10.1109/TSE.2009.57
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 548TI
UT WOS:000273988900005
DA 2024-07-18
ER

PT J
AU Ricca, F
   Di Penta, M
   Torchiano, M
   Tonella, P
   Ceccato, M
AF Ricca, Filippo
   Di Penta, Massimiliano
   Torchiano, Marco
   Tonella, Paolo
   Ceccato, Mariano
TI How Developers' Experience and Ability Influence Web Application
   Comprehension Tasks Supported by UML Stereotypes: A Series of Four
   Experiments
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Documentation; maintenance; and enhancement; software engineering;
   software/software engineering
ID EMPIRICAL-ASSESSMENT; MODELS
AB In recent years, several design notations have been proposed to model domain-specific applications or reference architectures. In particular, Conallen has proposed the UML Web Application Extension (WAE): a UML extension to model Web applications. The aim of our empirical investigation is to test whether the usage of the Conallen notation supports comprehension and maintenance activities with significant benefits, and whether such benefits depend on developers ability and experience. This paper reports and discusses the results of a series of four experiments performed in different locations and with subjects possessing different experience-namely, undergraduate students, graduate students, and research associates-and different ability levels. The experiments aim at comparing performances of subjects in comprehension tasks where they have the source code complemented either by standard UML diagrams or by diagrams stereotyped using the Conallen notation. Results indicate that, although, in general, it is not possible to observe any significant benefit associated with the usage of stereotyped diagrams, the availability of stereotypes reduces the gap between subjects with low skill or experience and highly skilled or experienced subjects. Results suggest that organizations employing developers with low experience can achieve a significant performance improvement by adopting stereotyped UML diagrams for Web applications.
C1 [Ricca, Filippo] Univ Genoa, DISI, I-16146 Genoa, Italy.
   [Di Penta, Massimiliano] Univ Sannio, Dept Engn, I-82100 Benevento, Italy.
   [Torchiano, Marco] Politecn Torino, I-10129 Turin, Italy.
   [Tonella, Paolo; Ceccato, Mariano] Fdn Bruno Kessler, I-38123 Trento, Italy.
C3 University of Genoa; University of Sannio; Polytechnic University of
   Turin; Fondazione Bruno Kessler
RP Ricca, F (corresponding author), Univ Genoa, DISI, Via Dodecaneso 35, I-16146 Genoa, Italy.
EM filippo.ricca@disi.unige.it; dipenta@unisannio.it;
   marco.torchiano@polito.it; tonella@fbk.eu; ceccato@fbk.eu
RI Ceccato, Mariano/T-7139-2019; Ricca, Filippo/ABB-3276-2020; Di Penta,
   Massimiliano/AAF-9656-2021; Tonella, Paolo/C-1702-2015
OI Ceccato, Mariano/0000-0001-7325-0316; Tonella,
   Paolo/0000-0003-3088-0339; Di Penta, Massimiliano/0000-0002-0340-9747;
   Torchiano, Marco/0000-0001-5328-368X
CR Agresti A., 2007, INTRO CATEGORICAL DA, V2nd ed
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], 2000, HDB PARAMETRIC NONPA
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   Bratthall L, 2002, IEEE T SOFTWARE ENG, V28, P1181, DOI 10.1109/TSE.2002.1158290
   BRUGALI D, 2005, SOFTWARE DEV CASE ST
   CANFORA G, 2005, P 2005 ACM S APPL CO, P1478
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Ceri S., 2003, Designing data-intensive Web applications
   Conallen J, 1999, COMMUN ACM, V42, P63, DOI 10.1145/317665.317677
   Conallen J., 2002, BUILDING WEB APPL UM
   Cross J. H.  II, 1996, Proceedings TRI-Ada '96, P143, DOI 10.1145/240678.240711
   Cruz-Lemus J., 2005, P INT C MOD DRIV ENG
   De Troyer OMF, 1998, COMPUT NETWORKS ISDN, V30, P85, DOI 10.1016/S0169-7552(98)00042-7
   Di Lucca GA, 2004, J SOFTW MAINT EVOL-R, V16, P71, DOI 10.1002/smr.281
   FIRESMITH D, 1998, OPEN MODELING LANGUA
   Frakes WB., 1992, Information retrieval: Data structures and algorithms
   Hendrix D, 2002, IEEE T SOFTWARE ENG, V28, P463, DOI 10.1109/TSE.2002.1000450
   Hennicker R, 2000, LECT NOTES COMPUT SC, V1939, P410
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kuzniarz L, 2004, PROG COMPREHEN, P14, DOI 10.1109/WPC.2004.1311043
   Lawrance J, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P53, DOI 10.1109/VLHCC.2005.44
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Otero M. C., 2002, Empirical Software Engineering, V7, P27, DOI 10.1023/A:1014819010099
   PURCHASE HC, 2001, P AUSTR S INF VIS SY, P113
   RICCA F, 2009, DEV EXPERIENCE ABILI
   Ricca F, 2007, PROC INT CONF SOFTW, P375
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Staron M, 2006, J SYST SOFTWARE, V79, P727, DOI 10.1016/j.jss.2005.09.014
   Tilley S., 2003, Proceedings of the 21st Annual International Conference on Documentation, P184
   Torchiano M, 2004, PROG COMPREHEN, P226, DOI 10.1109/WPC.2004.1311064
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 32
TC 60
Z9 63
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2010
VL 36
IS 1
BP 96
EP 118
DI 10.1109/TSE.2009.69
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 548TI
UT WOS:000273988900008
DA 2024-07-18
ER

PT J
AU D'Ambros, M
   Lanza, M
   Lungu, M
AF D'Ambros, Marco
   Lanza, Michele
   Lungu, Mircea
TI Visualizing Co-Change Information with the Evolution Radar
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software evolution; software visualization; logical coupling
AB Software evolution analysis provides a valuable source of information that can be used both to understand a system's design and predict its future development. While for many program comprehension purposes, it is sufficient to model a single version of a system, there are types of information that can only be recovered when the history of a system is taken into account. Logical coupling, the implicit dependency between software artifacts that have been changed together, is an example of such information. Previous research has dealt with low-level couplings between files, leading to an explosion of the data to be analyzed, or has abstracted the logical couplings to the level of modules, leading to a loss of detailed information. In this paper, we present a visualization-based approach that integrates logical coupling information at different levels of abstraction. This facilitates an in-depth analysis of the logical couplings, and at the same time, leads to a characterization of a system's modules in terms of their logical coupling. The presented approach supports the retrospective analysis of a software system and maintenance activities such as restructuring and redocumentation. We illustrate retrospective analysis on two large open-source software systems.
C1 [D'Ambros, Marco; Lanza, Michele; Lungu, Mircea] Univ Lugano, Fac Informat, CH-6904 Lugano, Switzerland.
C3 Universita della Svizzera Italiana
RP D'Ambros, M (corresponding author), Univ Lugano, Fac Informat, Via G Buffi 13, CH-6904 Lugano, Switzerland.
EM marco.dambros@usi.ch; michele.lanza@usi.ch; mircea.lungu@usi.ch
RI Lanza, Michele/JNQ-9470-2023
OI Lanza, Michele/0000-0003-4391-0197
FU Swiss National Science foundation [118063]
FX The authors gratefully acknowledge the financial support of the Swiss
   National Science foundation for the project "DiCoSA-Distributed
   Collaborative Software Analysis" (SNF Project No. 118063). They thank
   Richard Wettel for his availability in experimenting their tool and
   writing an experience report. They also thank Damien Pollet for his
   feedback on drafts of this paper.
CR [Anonymous], P INT C SOFTW TEST V
   Ball T, 1996, COMPUTER, V29, P33, DOI 10.1109/2.488299
   BALL T, 1997, P ICSE WORKSH PROC M
   Beyer D, 2006, WORK CONF REVERSE EN, P199
   Bouktif S, 2006, WORK CONF REVERSE EN, P221
   Breu S, 2006, IEEE INT CONF AUTOM, P221
   Burch Michael., 2005, P 2005 ACM S SOFTWAR, P37
   Card S K., 1999, READINGS INFORM VISU
   Chuah MC, 1998, IEEE COMPUT GRAPH, V18, P24, DOI 10.1109/38.689658
   Collberg C., 2003, Proceedings of the 2003 ACM symposium on Software visualization-SoftVis '03, P77
   D'Ambros M, 2006, WORK CONF REVERSE EN, P189
   D'Ambros Marco., 2006, MINING SOFTWARE REPO, P26, DOI DOI 10.1145/1137983.1137992
   Estublier J, 2005, ACM T SOFTW ENG METH, V14, P383, DOI 10.1145/1101815.1101817
   Gall H, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Gîrba T, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P2, DOI 10.1109/CSMR.2005.15
   Girba T, 2004, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2004.1357788
   JAZAYERI M, 1999, P ICSM 99 INT C SOFT, P99
   Lanza M., 2001, Proceedings of the 4th International Workshop on Principles of Software Evolution, P37
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   Martin R.C., 2000, Design Principles and Design Patterns
   Mens T., 2001, P 4 INT WORKSHOP PRI, P83, DOI [DOI 10.1145/602461.602476, 10.1145/602461.602476]
   Pinzger Martin., 2005, SOFTVIS 05, P67
   Ratzinger J., 2005, Proceedings of the 2nd International Workshop on Mining Software Repositories (MSR'05), P1, DOI DOI 10.1145/1083142.1083155
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Roberts KC, 1997, MICROCIRCULATION-LON, V4, P253, DOI 10.3109/10739689709146788
   Rochkind M. J., 1975, IEEE Transactions on Software Engineering, VSE-1, P364, DOI 10.1109/TSE.1975.6312866
   Stasko J, 2000, IEEE SYMPOSIUM ON INFORMATION VISUALIZATION 2000, P57, DOI 10.1109/INFVIS.2000.885091
   Stasko J.T., 1998, SOFTWARE VISUALIZATI
   Taylor CMB, 2002, VISSOFT 2002: FIRST INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P43, DOI 10.1109/VISSOF.2002.1019793
   Telea A, 2008, COMPUT GRAPH FORUM, V27, P831, DOI 10.1111/j.1467-8659.2008.01214.x
   TICHY WF, 1985, SOFTWARE PRACT EXPER, V15, P637, DOI 10.1002/spe.4380150703
   Van Rysselberghe F, 2004, PROC IEEE INT CONF S, P328, DOI 10.1109/ICSM.2004.1357818
   Voinea L., 2006, MSR 06 P 2006 INT WO, P33
   Wu JW, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P80
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
   Zimmermann T., 2004, Proc. of the 1st Int'lWorkshop onMining Software Repositories (MSR), P2, DOI [DOI 10.1049/IC:20040466, 10.1049/ic:20040466]
   TEAM DEV VISUALWORKS
NR 38
TC 47
Z9 50
U1 1
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2009
VL 35
IS 5
BP 720
EP 735
DI 10.1109/TSE.2009.17
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 498PM
UT WOS:000270154300009
DA 2024-07-18
ER

PT J
AU Kemerer, CF
   Paulk, MC
AF Kemerer, Chris F.
   Paulk, Mark C.
TI The Impact of Design and Code Reviews on Software Quality: An Empirical
   Study Based on PSP Data
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 23rd IEEE International Conference on Software Maintenance
CY OCT 02-05, 2007
CL Paris, FRANCE
SP IEEE, IEEE Comp Soc, IEEE France Sect, TCSE, IEEE Comp Soc, Tech Council Software Engn, Reeng Forum, Univ Waterloo, Univ Studi Sannio
DE Code reviews; design reviews; inspections; software process; software
   quality; defects; software measurement; mixed models; personal software
   process (PSP)
ID INSPECTIONS; DENSITY
AB This research investigates the effect of review rate on defect removal effectiveness and the quality of software products, while controlling for a number of potential confounding factors. Two data sets of 371 and 246 programs, respectively, from a Personal Software Process (PSP) approach were analyzed using both regression and mixed models. Review activities in the PSP process are those steps performed by the developer in a traditional inspection process. The results show that the PSP review rate is a significant factor affecting defect removal effectiveness, even after accounting for developer ability and other significant process variables. The recommended review rate of 200 LOC/hour or less was found to be an effective rate for individual reviews, identifying nearly two-thirds of the defects in design reviews and more than half of the defects in code reviews.
C1 [Kemerer, Chris F.] Univ Pittsburgh, Katz Grad Sch Business, Pittsburgh, PA 15260 USA.
   [Paulk, Mark C.] Carnegie Mellon Univ, IT Serv Qualificat Ctr, Pittsburgh, PA 15213 USA.
C3 Pennsylvania Commonwealth System of Higher Education (PCSHE); University
   of Pittsburgh; Carnegie Mellon University
RP Kemerer, CF (corresponding author), Univ Pittsburgh, Katz Grad Sch Business, 278A Mervis Hall, Pittsburgh, PA 15260 USA.
EM ckemerer@katz.pitt.edu; mcp@cs.cmu.edu
CR ACKERMAN AF, 1989, IEEE SOFTWARE, V6, P31, DOI 10.1109/52.28121
   AKIYAMA F, 1971, INFORMATION PROCESSI, V71, P353
   [Anonymous], 1995, The Capability Maturity Model: Guidelines for Improving the Software Process
   [Anonymous], 2008, 1028 IEEE
   BANKER RD, 1991, MANAGE SCI, V37, P1, DOI 10.1287/mnsc.37.1.1
   Belsley D. A., 2005, Regression Diagnostics: Identifying Influential Data and Sources of Collinearity
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   BOURGEOIS KV, 1996, CROSSTALK J DEFENSE, V9, P17
   Breyfogle FW., 1999, IMPLEMENTING 6 SIGMA, V2nd
   BROCKLEHURST S, 1996, HDB SOFTWARE RELIABI, P119
   BUCK FO, 1981, TR21802 IBM SYST COM
   CHRISTOPOULOS C, 1988, INT J NUMER MODEL EL, V1, P7
   CRISCIONE M, 2001, P 2001 APPL SOFTW ME, P269
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   CURTIS B, 1988, WORKING COMPUTERS TH, P279
   Deming W. E., 1986, OUT CRISIS
   Duncan T.E., 1999, An introduction to latent variable growth curve modeling: Concepts, issues, and applications
   EICK SG, 1992, P 14 INT C SOFTW ENG
   FAGAN ME, 1986, IEEE T SOFTWARE ENG, V12, P744, DOI 10.1109/TSE.1986.6312976
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Ferguson P, 1997, COMPUTER, V30, P24, DOI 10.1109/2.589907
   Gilb Tom, 1993, Software inspections
   GILL GK, 1991, IEEE T SOFTWARE ENG, V17, P1284, DOI 10.1109/32.106988
   Glass RL, 1999, COMMUN ACM, V42, P17, DOI 10.1145/299157.299161
   HAYES W, 1997, CMUSEI97TR001
   Humphrey W S, 1995, A discipline for software engineering
   Humphrey W.S., 1999, INTRO TEAM SOFTWARE
   Johnson PM, 1998, IEEE SOFTWARE, V15, P85, DOI 10.1109/52.730851
   Khattree R., 1999, Applied multivariate statistics with SAS software /, V2nd
   LAND LPK, 2002, THESIS U NEW S WALES
   Littell RC., 1996, SAS SYSTEM MIXED MOD
   Lyu M., 1996, Handbook of Software Reliability Engineering
   MCCANN RT, 2001, CROSSTALK J DEFENSE, V14, P9
   Neter J., 1996, APPL LINEAR STAT MOD
   PARNAS DL, 1987, J SYST SOFTWARE, V7, P259, DOI 10.1016/0164-1212(87)90025-2
   PAULK M, 1995, SOFTWARE PROCESS, V1, P3
   PAULK MC, 2005, THESIS U PITTSBURGH
   Perpich JM, 1997, PROC INT CONF SOFTW, P14, DOI 10.1145/253228.253234
   Perry DE, 2002, IEEE T SOFTWARE ENG, V28, P695, DOI 10.1109/TSE.2002.1019483
   Porter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P41, DOI 10.1145/268411.268421
   Porter AA, 1997, IEEE T SOFTWARE ENG, V23, P129, DOI 10.1109/32.585501
   Porter AA, 1997, IEEE T SOFTWARE ENG, V23, P329, DOI 10.1109/32.601071
   Porter AA, 1997, IEEE SOFTWARE, V14, P99, DOI 10.1109/52.636690
   Portincasa P, 1997, GUT, V41, P138, DOI 10.1136/gut.41.2.138
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P465, DOI 10.1109/32.922716
   Radice R., 2002, HIGH QUALITY LOW COS
   Rawlings J. O., 1998, APPL REGRESSION ANAL
   Takahashi M., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P330
   WELLER EF, 1993, IEEE SOFTWARE, V10, P38, DOI 10.1109/52.232397
   Wesslen A., 2000, Empirical Software Engineering, V5, P93, DOI 10.1023/A:1009811222725
   WITHROW C, 1990, IEEE SOFTWARE, V7, P26, DOI 10.1109/52.43046
   Wohlin C, 2004, EMPIR SOFTW ENG, V9, P211, DOI 10.1023/B:EMSE.0000027780.08194.b0
   Wohlin C, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P49, DOI 10.1109/ISSRE.1998.730773
   Wohlin C, 1998, PROC INT CONF SOFTW, P400, DOI 10.1109/ICSE.1998.671393
NR 55
TC 72
Z9 83
U1 0
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2009
VL 35
IS 4
BP 534
EP 550
DI 10.1109/TSE.2009.27
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 474TB
UT WOS:000268305800008
DA 2024-07-18
ER

PT J
AU Jorgensen, M
   Gruschke, TM
AF Jorgensen, Magne
   Gruschke, Tanja M.
TI The Impact of Lessons-Learned Sessions on Effort Estimation and
   Uncertainty Assessments
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cost estimation; process implementation and change; review and
   evaluation; software psychology
ID EXPERT JUDGMENT; SOFTWARE; PERFORMANCE; POSTMORTEM; FEEDBACK; HINDSIGHT;
   FAILURE; WORK; BIAS
AB Inaccurate estimates of software development effort is a frequently reported cause of IT-project failures. We report results from a study that investigated the effect of introducing lessons-learned sessions on estimation accuracy and the assessment of uncertainty. Twenty software professionals were randomly allocated to a Learning group or a Control group and instructed to estimate and complete the same five development tasks. Those in the Learning group but not those in the Control group were instructed to spend at least 30 minutes on identifying, analyzing, and summarizing their effort estimation and uncertainty assessment experience after completing each task. We found that the estimation accuracy and the realism of the uncertainty assessment were not better in the Learning group than in the Control group. A follow-up study with 83 software professionals was completed to better understand this lack of improvement from lessons-learned sessions. The follow-up study found that receiving feedback about other software professionals' estimation performance led to more realistic uncertainty assessments than receiving the same feedback of one's own estimates. Lessons-learned sessions, not only in estimation contexts, have to be carefully designed to avoid wasting resources on learning processes that stimulate rather than reduce learning biases.
C1 [Jorgensen, Magne] Simula Res Lab, N-2010 Strommen, Norway.
   [Jorgensen, Magne] Univ Oslo, N-2010 Strommen, Norway.
   [Gruschke, Tanja M.] KnowIT Objectnet, N-0251 Oslo, Norway.
C3 University of Oslo
RP Jorgensen, M (corresponding author), Simula Res Lab, Statsrad Ihlensv 14A, N-2010 Strommen, Norway.
EM magnej@simula.no; tanjagru@gmail.com
RI Jorgensen, Magne/H-4402-2016
CR Abrahamsson P, 2002, LECT NOTES COMPUT SC, V2349, P175
   BALZER WK, 1989, PSYCHOL BULL, V106, P410, DOI 10.1037/0033-2909.106.3.410
   Basili1 Victor R, 1994, Encyclopedia of Software Eng., V1, P469, DOI DOI 10.1002/0471028959.SOF110
   BENSON PG, 1992, INT J FORECASTING, V8, P559, DOI 10.1016/0169-2070(92)90066-I
   Birk A, 2002, IEEE SOFTWARE, V19, P43, DOI 10.1109/MS.2002.1003452
   BOLGER F, 1994, DECIS SUPPORT SYST, V11, P1, DOI 10.1016/0167-9236(94)90061-2
   BREHMER B, 1980, ACTA PSYCHOL, V45, P223, DOI 10.1016/0001-6918(80)90034-7
   Camerer C. F., 1991, GEN THEORY EXPERTISE
   Cannon MD, 2005, LONG RANGE PLANN, V38, P299, DOI 10.1016/j.lrp.2005.04.005
   Collier B, 1996, IEEE SOFTWARE, V13, P65, DOI 10.1109/52.526833
   *COMPTIA, 2007, SURV POOR COMM CAUS
   CUSOMANO MA, 1995, MICROSOFT SECRETS WO
   Dingsoyr T, 2005, INFORM SOFTWARE TECH, V47, P293, DOI 10.1016/j.infsof.2004.08.008
   Engelkamp S, 2000, LECT NOTES COMPUT SC, V1840, P204
   FISCHHOFF B, 1975, J EXP PSYCHOL HUMAN, V1, P288, DOI 10.1037/0096-1523.1.3.288
   Hammond K.R., 1996, Human judgement and social policy : Irreducible uncertainty, inevitable error, unavoidable injustice
   Houdek F, 1998, PROC INT CONF SOFTW, P443, DOI 10.1109/ICSE.1998.671602
   Humphrey W.S., 1996, INTRO PERSONAL SOFTW
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P993, DOI 10.1109/TSE.2004.103
   Jorgensen M, 2004, LECT NOTES COMPUT SC, V3009, P174
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P209, DOI 10.1109/TSE.2004.1274041
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P79, DOI 10.1016/S0164-1212(02)00160-7
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   JORGENSEN M, 1998, P EUR SOFTW PROC IMP
   JORGENSEN M, 2007, P 1 INT WORKSH SOFTW, P15
   Jorgensen M, 2007, INT J FORECASTING, V23, P449, DOI 10.1016/j.ijforecast.2007.05.008
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Jorgensen Magne, 2000, P EUR SOFTW PROC IMP
   Lyytinen K, 1999, INFORM SYST J, V9, P85, DOI 10.1046/j.1365-2575.1999.00051.x
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   Ohlsson MC, 1998, INFORM SOFTWARE TECH, V40, P831, DOI 10.1016/S0950-5849(98)00097-4
   Pan G, 2007, J AM SOC INF SCI TEC, V58, P2255, DOI 10.1002/asi.20693
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P465, DOI 10.1109/32.922716
   SANBONMATSU DM, 1993, J PERS SOC PSYCHOL, V65, P892, DOI 10.1037/0022-3514.65.5.892
   Schindler M., 2003, International Journal of Project Management, V21, P219, DOI 10.1016/S0263-7863(02)00096-0
   SCHMITT N, 1976, ORGAN BEHAV HUM PERF, V16, P388, DOI 10.1016/0030-5073(76)90023-4
   SHANTEAU J, 1992, ORGAN BEHAV HUM DEC, V53, P252, DOI 10.1016/0749-5978(92)90064-E
   STAHLBERG D, 1995, ORGAN BEHAV HUM DEC, V63, P46, DOI 10.1006/obhd.1995.1060
   Stone ER, 2000, ORGAN BEHAV HUM DEC, V83, P282, DOI 10.1006/obhd.2000.2910
   URBAN MS, 1990, J SOC PSYCHOL, V130, P417, DOI 10.1080/00224545.1990.9924601
   Wastell DG, 1999, MIS QUART, V23, P581, DOI 10.2307/249490
NR 41
TC 47
Z9 50
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2009
VL 35
IS 3
BP 368
EP 383
DI 10.1109/TSE.2009.2
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 450NL
UT WOS:000266408000004
DA 2024-07-18
ER

PT J
AU Hearty, P
   Fenton, N
   Marquez, D
   Neil, M
AF Hearty, Peter
   Fenton, Norman
   Marquez, David
   Neil, Martin
TI Predicting Project Velocity in XP Using a Learning Dynamic Bayesian
   Network Model
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Bayesian nets; causal models; extreme programming; risk assessment
AB Bayesian networks, which can combine sparse data, prior assumptions, and expert judgment into a single causal model, have already been used to build software effort prediction models. We present such a model of an Extreme Programming environment and show how it can learn from project data in order to make quantitative effort predictions and risk assessments without requiring any additional metrics collection program. The model's predictions are validated against a real-world industrial project, with which they are in good agreement.
C1 [Hearty, Peter; Fenton, Norman; Marquez, David; Neil, Martin] Queen Mary Univ London Comp Sci, London E1 4NS, England.
C3 University of London; Queen Mary University London
RP Hearty, P (corresponding author), Queen Mary Univ London Comp Sci, Mile End Rd, London E1 4NS, England.
EM hearty@dcs.qmul.ac.uk; fenton@dcs.qmul.ac.uk; marquezed@dcs.qmul.ac.uk;
   martin@dcs.qmul.ac.uk
RI Fenton, Norman/L-5861-2019
OI Fenton, Norman/0000-0003-2924-0510; Neil, Martin/0000-0002-4922-0843
FU EPSRC [EP/C005406/1]; Agena
FX This research was funded through the eXdecide Project (EPSRC Grant
   EP/C005406/1), with an additional student CASE Award supplied by Agena.
   The authors would like to thank the anonymous reviewers for their many
   constructive comments on this paper.
CR ABDELHAMID TK, 1989, IEEE T SOFTWARE ENG, V15, P109, DOI 10.1109/32.21738
   Abrahamsson P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P73
   *AGENARISK, 2008, AGENARISK US MAN
   AHMED A, 2003, P 7 INT MULT TOP C, P387
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], 2004, XP Ser
   [Anonymous], P 26 INT C SOFTW ENG
   Beck K., 2000, EXTREME PROGRAMMING
   Bibi S., 2004, P 10 INT SOFTW METR
   Brooks Frederick., 1995, Mythical ManMonth, The: Essays on Software Engineering, Vanniversary
   CAU A, 2005, P 6 INT C EXTR PROGR
   COCKBURN A, 2000, P EXTR PROGR FLEX PR
   Cohn M., 2005, Agile Estimating and Planning
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fenton NE, 2007, IEEE T KNOWL DATA EN, V19, P1420, DOI 10.1109/TKDE.2007.1068
   GEORGE B, 2003, P 2003 ACM S APPL CO, P1135, DOI DOI 10.1145/952532.952753
   Jeffries R., 2001, EXTREME PROGRAMMING
   Jensen F. V., 2007, Bayesian networks and decision graphs
   Jorgensen M, 2003, INFORM SOFTWARE TECH, V45, P123, DOI 10.1016/S0950-5849(02)00188-X
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   KORKALA M, 2006, P AGILE C
   KUPPUSWANTI S, 2003, P 4 INT C EXTR PROGR
   LAURITZEN SL, 1988, J ROY STAT SOC B MET, V50, P157
   LEPAR V, 1998, P 14 C UNC ART INT, V14
   LITTLE T, 2006, IEEE SOFTWARE    MAY
   MISIC V, 2002, P WORKSH EMP EV AG P
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   Murphy Kevin Patrick, 2002, Dynamic bayesian networks: representation, inference and learning
   NEIL M, 2005, P 10 EUR SEPG C
   NEIL M, 2003, SOFTWARE ENG COMPUTA, pCH6
   Nosek JT, 1998, COMMUN ACM, V41, P105, DOI 10.1145/272287.272333
   Padberg F., 2003, P 9 INT SOFTW METR S
   Ross SA, 1996, FUNDAMENTALS CORPORA
   Stamelos I, 2003, INFORM SOFTWARE TECH, V45, P51, DOI 10.1016/S0950-5849(02)00163-5
   WANG H, 2006, P 6 INT C QUAL SOFTW
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
   WILLIAMS L, 2002, P ICSE INT WORKSH EC
   WILLIAMS L, 2004, P AG DEV C
   Wooff DA, 2002, IEEE T SOFTWARE ENG, V28, P510, DOI 10.1109/TSE.2002.1000453
NR 39
TC 43
Z9 48
U1 2
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2009
VL 35
IS 1
BP 124
EP 137
DI 10.1109/TSE.2008.76
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 431UK
UT WOS:000265089400008
DA 2024-07-18
ER

PT J
AU Van Rompaey, B
   Du Bois, B
   Demeyer, S
   Rieger, M
AF Van Rompaey, Bart
   Du Bois, Bart
   Demeyer, Serge
   Rieger, Matthias
TI On the detection of test smells: A metrics-based approach for general
   fixture and eager test
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 22nd IEEE International Conference on Software Maintenance
CY SEP 24-27, 2006
CL Philadelphia, PA
SP IEEE
DE test design; quality assurance; maintainability
ID TEST-DRIVEN DEVELOPMENT; BAD SMELLS; QUALITY
AB As a fine-grained defect detection technique, unit testing introduces a strong dependency on the structure of the code. Accordingly, test coevolution forms an additional burden on the software developer which can be tempered by writing tests in a manner that makes them easier to change. Fortunately, we are able to concretely express what a good test is by exploiting the specific principles underlying unit testing. Analogous to the concept of code smells, violations of these principles are termed test smells. In this paper, we clarify the structural deficiencies encapsulated in test smells by formalizing core test concepts and their characteristics. To support the detection of two such test smells, General Fixture and Eager Test, we propose a set of metrics defined in terms of unit test concepts. We compare their detection effectiveness using manual inspection and through a comparison with human reviewing. Although the latter is the traditional means for test quality assurance, our results indicate it is not a reliable means for test smell detection. This work thus stresses the need for a more reliable detection mechanism and provides an initial contribution through the validation of test smell metrics.
C1 Univ Antwerp, Dept Math & Comp Sci, BE-2020 Antwerp, Belgium.
C3 University of Antwerp
RP Van Rompaey, B (corresponding author), Univ Antwerp, Dept Math & Comp Sci, Middelheimlaan 1, BE-2020 Antwerp, Belgium.
EM bart.vanrompaey2@ua.ac.be; bart.dubois@ua.ac.be; serge.demeyer@ua.ac.be;
   matthias.rieger@uc.ac.be
RI Demeyer, Serge/JMQ-7341-2023
OI Demeyer, Serge/0000-0002-4463-2945
CR Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Beck G., 1994, Inside Psychology, V2, P16
   Beck K, 1998, JAVA REP, V3, P37
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Beck Kent L., 2003, Test Driven Development By Example
   Belli F, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P245, DOI 10.1109/ISSRE.1997.630871
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Coolican H., 2009, RES METHODS STAT PSY
   Crewson PE, 2005, AM J ROENTGENOL, V184, P1391, DOI 10.2214/ajr.184.5.01841391
   Crispin I, 2006, IEEE SOFTWARE, V23, P70, DOI 10.1109/MS.2006.157
   Demeyer S., 2002, Object-Oriented Reengineering Patterns
   Dustin E., 2003, EFFECTIVE SOFTWARE T
   Feathers M., 2005, WORKING EFFECTIVELY
   FEWSTER M, SOFTWARE TEST AUTOMA, P99
   Fioravanti F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P121, DOI 10.1109/CSMR.2001.914976
   GAELLI M, 2005, P 13 INT SMALLT C
   Hamill Paul, 2004, Unit Test Frameworks: Tools for High-quality Software Development
   Harrold MaryJean., 2000, ICSE 00 P C FUTURE S, P61
   Hunt Andy., 2004, PRAGMATIC UNIT TESTI
   JOHNSON RE, 1988, J OBJECT-ORIENT PROG, V1, P22
   Lakos J., 1996, LARGE SCALE C SOFTWA
   LANDIS J, 1972, J BIOMETRICS, V3, P159
   LANGR J, 2002, AGILE JAVA CRAFTING
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   MACKINNON T, 2000, P 1 INT C EXTR PROGR
   Mäntylä M, 2003, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSM.2003.1235447
   Mäntylä MV, 2004, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSM.2004.1357825
   Marinescu R, 2004, P 20 IEEE INT C SOFT
   Maximilien EM, 2003, PROC INT CONF SOFTW, P564, DOI 10.1109/ICSE.2003.1201238
   Meszaros G, 2007, UNIT TEST PATTERNS R
   MESZAROS G, 2003, P 3 XP 2 AG U C, P73
   MURPHY PA, 1994, J NURSE-MIDWIFERY, V39, P47, DOI 10.1016/0091-2182(94)90044-2
   Palmer S.R., 2002, PRACTICAL GUIDE FEAT
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   PATTON R, 2005, SOFTWARE TESTING, pCH15
   PELGRIM M, 2004, DIVE PYTHON
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Runeson P, 2006, IEEE SOFTWARE, V23, P22, DOI 10.1109/MS.2006.91
   Salehie M, 2006, INT C PROGRAM COMPRE, P159, DOI 10.1109/ICPC.2006.6
   Sangwan R. S., 2006, IT Professional, V8, P25, DOI 10.1109/MITP.2006.122
   Systa T., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P199, DOI 10.1109/CSMR.2000.827328
   Van Deursen Arie, 2001, INT C EXTR PROGR FLE, P92
NR 42
TC 78
Z9 82
U1 0
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2007
VL 33
IS 12
BP 800
EP 817
DI 10.1109/TSE.2007.70745
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 223RG
UT WOS:000250389400002
DA 2024-07-18
ER

PT J
AU Agrawal, M
   Chari, K
AF Agrawal, Manish
   Chari, Kaushal
TI Software effort, quality, and cycle time: A study of CMM level 5
   projects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE cost estimation; time estimation; software quality; productivity
ID PROCESS IMPROVEMENT; COST ESTIMATION; FUNCTION POINTS; MODEL;
   PRODUCTIVITY; MATURITY; PERFORMANCE; VALIDATION; COMPLEXITY; PREDICTION
AB The Capability Maturity Model (CMM) has become a popular methodology for improving software development processes with the goal of developing high-quality software within budget and planned cycle time. Prior research literature, while not exclusively focusing on CMM level 5 projects, has identified a host of factors as determinants of software development effort, quality, and cycle time. In this study, we focus exclusively on CMM level 5 projects from multiple organizations to study the impacts of highly mature processes on effort, quality, and cycle time. Using a linear regression model based on data collected from 37 CMM level 5 projects of four organizations, we find that high levels of process maturity, as indicated by CMM level 5 rating, reduce the effects of most factors that were previously believed to impact software development effort, quality, and cycle time. The only factor found to be significant in determining effort, cycle time, and quality was software size. On the average, the developed models predicted effort and cycle time around 12 percent and defects to about 49 percent of the actuals, across organizations. Overall, the results in this paper indicate that some of the biggest rewards from high levels of process maturity come from the reduction in variance of software development outcomes that were caused by factors other than software size.
C1 Univ S Florida, Coll Business Adm, Dept Informat Syst & Decis Sci, Tampa, FL 33620 USA.
C3 State University System of Florida; University of South Florida
RP Agrawal, M (corresponding author), Univ S Florida, Coll Business Adm, Dept Informat Syst & Decis Sci, 4202 E Fowler Ave,CIS 1040, Tampa, FL 33620 USA.
EM magrawal@coba.usf.edu; kchari@coba.usf.edu
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 1995, MYTHICAL MAN MONTH
   [Anonymous], P INT C INF SYST
   Austin RD, 2001, INFORM SYST RES, V12, P195, DOI 10.1287/isre.12.2.195.9699
   Baik J, 2002, IEEE T SOFTWARE ENG, V28, P1009, DOI 10.1109/TSE.2002.1049401
   Banker RD, 2000, INFORM SYST RES, V11, P219, DOI 10.1287/isre.11.3.219.12209
   BANKER RD, 1989, IEEE T SOFTWARE ENG, V15, P1199, DOI 10.1109/TSE.1989.559768
   BANKER RD, 1991, MANAGE SCI, V37, P1, DOI 10.1287/mnsc.37.1.1
   Banker RD, 1998, MANAGE SCI, V44, P433, DOI 10.1287/mnsc.44.4.433
   BASILI VR, 1995, ADV COMPUT, V41, P65, DOI DOI 10.1016/S0065-2458(08)60231-4
   BEHRENS CA, 1983, IEEE T SOFTWARE ENG, V9, P648, DOI 10.1109/TSE.1983.235429
   Benner MJ, 2002, ADMIN SCI QUART, V47, P676, DOI 10.2307/3094913
   Boehm BW., 1981, Software Engineering Economics
   CHARI K, 2005, P INFORMS C INF SYST
   Clark BK, 2000, IEEE SOFTWARE, V17, P65, DOI 10.1109/52.895170
   *COMP ASS, 2006, CA EST
   COMPTON BT, 1990, J SYST SOFTWARE, V12, P199, DOI 10.1016/0164-1212(90)90040-S
   Diaz M, 1997, IEEE SOFTWARE, V14, P75, DOI 10.1109/52.605934
   FOX C, 1997, COMMUN ACM, V40, P25
   *GA SEER TECHN, 2006, SEER SEM
   GAFFNEY JE, 1984, IEEE T SOFTWARE ENG, V10, P459, DOI 10.1109/TSE.1984.5010260
   GOLDENSON D., 2003, DEMONSTRATING IMPACT
   Harter DE, 2003, MANAGE SCI, V49, P784, DOI 10.1287/mnsc.49.6.784.16023
   Harter DE, 2000, MANAGE SCI, V46, P451, DOI 10.1287/mnsc.46.4.451.12056
   HARTER DE, 1998, P AM C INF SYST
   HUMPHREY WS, 1988, IEEE SOFTWARE, V5, P73, DOI 10.1109/52.2014
   IEEE, 1998, 8301998 IEEE
   *INT FUNCT POINT U, 2006, FUNCT POINT COUNT PR
   *INT STAND ORG, 1991, 91261 ISOIEC
   Jalote P., 2000, CMM PRACTICE PROCESS
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Krishnan MS, 1999, IEEE T SOFTWARE ENG, V25, P800, DOI 10.1109/32.824401
   Krishnan MS, 2000, MANAGE SCI, V46, P745, DOI 10.1287/mnsc.46.6.745.11941
   Li G, 1998, MANAGE SCI, V44, P1517, DOI 10.1287/mnsc.44.11.1517
   MATSON JE, 1994, IEEE T SOFTWARE ENG, V20, P275, DOI 10.1109/32.277575
   Maxwell K, 1999, MANAGE SCI, V45, P787, DOI 10.1287/mnsc.45.6.787
   MOHANTY SN, 1981, SOFTWARE PRACT EXPER, V11, P103, DOI 10.1002/spe.4380110202
   MUKHOPADHYAY T, 1992, MIS QUART, V16, P155, DOI 10.2307/249573
   MUKHOPADHYAY T, 1992, IEEE T SOFTWARE ENG, V18, P915, DOI 10.1109/32.163607
   NAN N, 2003, P INT C INF SYST
   NELSON RR, 1991, MIS QUART, V15, P503, DOI 10.2307/249454
   PAULK MC, 1995, IEEE SOFTWARE, V12, P74, DOI 10.1109/52.363163
   PAULK MC, 1993, IEEE SOFTWARE, V10, P18, DOI 10.1109/52.219617
   Pendharkar PC, 2005, IEEE T SOFTWARE ENG, V31, P615, DOI 10.1109/TSE.2005.75
   Prahalad CK, 1999, HARVARD BUS REV, V77, P109
   *PRICE SYST, 2006, TRUE S PRIC S SOFTW
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   Pyzdek T., 2003, 6 SIGMA HDB COMPLETE
   RAMASUBBU N, 2004, P AC MAN M
   Rubin H. A., 1983, P SOFTFAIR C SOFTW D
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   *SOFTW ENG I, 2006, LIST PUBL SCAMPI APP
   Swanson EB, 2000, MIS QUART, V24, P277, DOI 10.2307/3250939
   VANGENUCHTEN M, 1991, IEEE T SOFTWARE ENG, V17, P582, DOI 10.1109/32.87283
   Vicinanza SS, 1991, INFORM SYST RES, V2, P243, DOI 10.1287/isre.2.4.243
   WOHLWEND H, 1994, IEEE T SOFTWARE ENG, V20, P833, DOI 10.1109/32.368125
NR 57
TC 111
Z9 124
U1 2
U2 22
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2007
VL 33
IS 3
BP 145
EP 156
DI 10.1109/TSE.2007.29
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 130GN
UT WOS:000243788000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Barak, D
   Harel, D
   Marelly, R
AF Barak, Dan
   Harel, David
   Marelly, Rami
TI InterPlay: Horizontal scale-up and transition to design in
   scenario-based programming
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE modeling methodologies; scenario-based programming; InterPlay;
   play-engine; LSCs; intraobject; interobject; transition to design
ID SYSTEMS; STATECHARTS
AB We describe InterPlay, a simulation engine coordinator that supports cooperation and interaction of multiple simulation and execution tools, thus helping to scale up the design and development cycle of reactive systems. InterPlay involves a number of related ideas. In the first, we concentrate on the interobject design approach involving live sequence charts (LSCs) and its support tool, the Play-Engine, enabling multiple Play-Engines to run in cooperation. This makes possible the distributed design of large-scale systems by different teams, as well as the refinement of parts of a system using different Play-Engines. The second idea concerns combining the interobject approach with the more conventional intraobject approach, involving, for example, statecharts and Rhapsody. InterPlay makes it possible to run the Play-Engine in cooperation with Rhapsody, and is very useful when some system objects have clear and distinct internal behavior, or in an iterative development process where the design is implementation- oriented and the ultimate goal is to end up with an intraobject implementation. Finally, we have expanded the Play-Engine's ability to delegate some of the system's functionality to complex GUIs. This enables beneficial interaction with "smart" GUIs that have built-in behavior of their own, and which are more naturally implemented in code.
C1 Weizmann Inst Sci, IL-76100 Rehovot, Israel.
C3 Weizmann Institute of Science
RP Barak, D (corresponding author), Weizmann Inst Sci, IL-76100 Rehovot, Israel.
EM dan.barak@weizmann.ac.il; david.harel@weizmann.ac.il;
   rami.marelly@weizmann.ac.il
CR Barak D, 2004, LECT NOTES COMPUT SC, V3098, P66, DOI 10.1007/978-3-540-27755-2_2
   BENVENISTE A, 1991, P IEEE, V79, P1270, DOI 10.1109/5.97297
   BROWN N, 2005, DISTRIBUTED COMPONEN
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   Efroni S, 2005, COMPUTER, V38, P38, DOI 10.1109/MC.2005.31
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Harel D, 1997, COMPUTER, V30, P31, DOI 10.1109/2.596624
   Harel D., 2003, COME LETS PLAY SCENA, DOI 10.1007/978-3-642-19029-2
   HAREL D, 2002, P 10 IEEE ACM INT S
   HAREL D, 2003, P 1 INT S FORM METH, P136
   HAREL D, UNPUB GENERIC MULTIP
   MANN Z, 1982, TEMPORAL LOGIC REACT
   *MICR, 2006, NET ARCH RES
   *OMG, 1992, COMM OBJ REQ BROK AR
   SADOT A, UNPUB VERIFIED BIOL
   *SOAP, 2000, W3C SOAP
   Wollrath A., 1996, USENIX COMPUTING SYS, V9
   1992, ORACLE7 SERVER CONCE
NR 18
TC 6
Z9 6
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2006
VL 32
IS 7
BP 467
EP 485
DI 10.1109/TSE.2006.67
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 071MF
UT WOS:000239605600003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zheng, J
   Williams, L
   Nagappan, N
   Snipes, W
   Hudepohl, JP
   Vouk, MA
AF Zheng, J
   Williams, L
   Nagappan, N
   Snipes, W
   Hudepohl, JP
   Vouk, MA
TI On the value of static analysis for fault detection in software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE code inspections; walkthroughs
ID QUALITY; CLASSIFICATION
AB No single software fault-detection technique is capable of addressing all fault-detection concerns. Similarly to software reviews and testing, static analysis tools ( or automated static analysis) can be used to remove defects prior to release of a software product. To determine to what extent automated static analysis can help in the economic production of a high-quality product, we have analyzed static analysis faults and test and customer-reported failures for three large-scale industrial software systems developed at Nortel Networks. The data indicate that automated static analysis is an affordable means of software fault detection. Using the Orthogonal Defect Classification scheme, we found that automated static analysis is effective at identifying Assignment and Checking faults, allowing the later software production phases to focus on more complex, functional, and algorithmic faults. A majority of the defects found by automated static analysis appear to be produced by a few key types of programmer errors and some of these types have the potential to cause security vulnerabilities. Statistical analysis results indicate the number of automated static analysis faults can be effective for identifying problem modules. Our results indicate static analysis tools are complementary to other fault-detection techniques for the economic production of a high-quality software product.
C1 N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
   Microsoft Corp, Res, Redmond, WA 98052 USA.
   Software Dependabil Design, Nortel Networks, Res Triangle Pk, NC 27709 USA.
C3 North Carolina State University; Microsoft
RP N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM jzheng4@ncsu.edu; lawilli3@ncsu.edu; nachin@microsoft.com;
   wbsnipes@nortelnetworks.com; hudepohl@nortelnetworks.com; vouk@ncsu.edu
OI Snipes, Will/0000-0001-5862-1289
CR ACKERMAN AF, 1989, IEEE SOFTWARE, V6, P31, DOI 10.1109/52.28121
   [Anonymous], 1990, Software testing techniques {
   BASILI VR, 1996, EMPIRICAL SOFTWARE E, V1
   Basili1 Victor R, 1994, Encyclopedia of software engineering, V1994, P528
   Boehm BW., 1981, Software Engineering Economics
   Chess B, 2004, IEEE SECUR PRIV, V2, P76, DOI 10.1109/MSP.2004.111
   Chess BV, 2002, P IEEE S SECUR PRIV, P160, DOI 10.1109/SECPRI.2002.1004369
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   DIFFERDING C, 1996, 28196 FRAUNH I EMP S
   El Emam K, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P322, DOI 10.1109/ISSRE.1998.730897
   Fenton N.E., 1997, SOFTWARE METRICS
   Hochman R, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/ISSRE.1997.630844
   Hochman R, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P152, DOI 10.1109/ISSRE.1996.558759
   Hovemeyer David., 2004, ACM Conference on Object-Oriented Programming Systems, Lan-guages, and Applications, OOPSLA '04, P132
   Humphrey W S, 1995, A discipline for software engineering
   IEEE, 1990, 610121990 IEEE
   *IEEE STAND, 1993, 10441993 IEEE
   Jones C, 1996, COMPUTER, V29, P94, DOI 10.1109/2.488361
   Jones C., 2000, Software Assessments, Benchmarks, and Best Practices
   Kelly D., 2001, P IBM CTR ADV STUD C, P7
   Khoshgoftaar T. M., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P72, DOI 10.1109/ICSM.1993.366954
   Khoshgoftaar T. M., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P116, DOI 10.1109/ISSRE.1999.809316
   KHOSHGOFTAAR TM, 1990, PROCEEDINGS : THE FOURTEENTH ANNUAL INTERNATIONAL COMPUTER SOFTWARE & APPLICATIONS CONFERENCE, P408, DOI 10.1109/CMPSAC.1990.139396
   Khoshgoftaar TM, 1997, IEEE T NEURAL NETWOR, V8, P902, DOI 10.1109/72.595888
   Khoshgoftaar TM, 1999, INT J SOFTW ENG KNOW, V9, P217, DOI 10.1142/S0218194099000140
   Khoshgoftaar TM, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P24, DOI 10.1109/ISSRE.1995.497640
   Kikuchi N, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P195, DOI 10.1109/APSEC.2001.991477
   Larus JB, 2004, IEEE SOFTWARE, V21, P92, DOI 10.1109/MS.2004.1293079
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   MUNSON JC, 1990, INFORM SOFTWARE TECH, V32, P106, DOI 10.1016/0950-5849(90)90109-5
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nagappan N, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P429, DOI 10.1109/ISSRE.2004.30
   OSTERWEIL L, 1984, P S SOFTW VAL
   Porter AA, 1997, IEEE T SOFTWARE ENG, V23, P129, DOI 10.1109/32.585501
   *REAS INC, 2003, AUT SOFTW INSP NEW A
   RUS I, 2003, P 28 ANN NASA GODD S, P11
   Rutar N, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P245, DOI 10.1109/ISSRE.2004.1
   Schneider G. M., 1992, ACM Transactions on Software Engineering and Methodology, V1, P188, DOI 10.1145/128894.128897
   Travassos G. H., 1999, SIGPLAN Notices, V34, P47, DOI 10.1145/320385.320389
   Young M., 1989, Proceedings. 11th International Conference on Software Engineering (Cat. No.89CH2718-5), P53, DOI 10.1145/74587.74593
NR 40
TC 148
Z9 162
U1 4
U2 19
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2006
VL 32
IS 4
BP 240
EP 253
DI 10.1109/TSE.2006.38
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 036HG
UT WOS:000237061600002
DA 2024-07-18
ER

PT J
AU Fu, X
   Bultan, T
   Su, JW
AF Fu, X
   Bultan, T
   Su, JW
TI Synchronizability of conversations among Web services
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE web services; asynchronous communication; conversations; model checking;
   verification; synchronizability; realizability
AB We present a framework for analyzing interactions among Web services that communicate with asynchronous messages. We model the interactions among the peers participating in a composite Web service as conversations, the global sequences of messages exchanged among the peers. This naturally leads to the following model checking problem: Given an LTL property and a composite Web service, do the conversations generated by the composite Web service satisfy the property? We show that asynchronous messaging leads to state space explosion for bounded message queues and undecidability of the model checking problem for unbounded message queues. We propose a technique called synchronizability analysis to tackle this problem. If a composite Web service is synchronizable, its conversation set remains the same when asynchronous communication is replaced with synchronous communication. We give a set of sufficient conditions that guarantee synchronizability and that can be checked statically. Based on our synchronizability results, we show that a large class of composite Web services with unbounded message queues can be verified completely using a finite state model checker such as SPIN. We also show that synchronizability analysis can be used to check the realizability of top-down conversation specifications and we contrast the conversation model with the Message Sequence Charts. We integrated synchronizability analysis to a tool we developed for analyzing composite Web services.
C1 Georgia SW State Univ, Sch Comp & Informat Sci, Americus, GA 31709 USA.
   Univ Calif Santa Barbara, Dept Comp Sci, Santa Barbara, CA 93106 USA.
C3 University of California System; University of California Santa Barbara
RP Georgia SW State Univ, Sch Comp & Informat Sci, 800 Wheatley St, Americus, GA 31709 USA.
EM xfu@canes.gsw.edu; bultan@cs.ucsb.edu; su@cs.ucsb.edu
OI Fu, Xiang/0000-0002-6608-1654
CR Abadi Martin, 1989, P 16 INT C AUT LANG, P1
   ALFARO L, 2001, P 9 ANN S FDN SOFTW, P109
   Alonso G., 2002, Web Services Concepts, Architectures and Applications Series: Data-Centric Systems and Applications
   Alur R., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P304, DOI 10.1109/ICSE.2000.870421
   Alur R, 2001, LECT NOTES COMPUT SC, V2076, P797
   [Anonymous], THESIS U CALIFORNIA
   [Anonymous], 1999, Communicating and Mobile Systems: The Calculus
   [Anonymous], 1974, PROC IFIP C 74
   [Anonymous], 1989, C RECORD 16 ANN ACM, DOI DOI 10.1145/75277.75293
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   BOSWORTH A, 2002, XML WEB SERVICES APR, V3
   BRAND D, 1983, J ACM, V30, P323, DOI 10.1145/322374.322380
   Bultan T., 2003, P 12 INT WORLD WIDE, P403
   CHIODO M, 1993, P INT WORKSH HARD SO
   Clarke EM, 1999, MODEL CHECKING, P1
   Ferris C, 2003, COMMUN ACM, V46, P31, DOI 10.1145/777313.777335
   Foster H, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P152, DOI 10.1109/ASE.2003.1240303
   Fu X, 2004, THEOR COMPUT SCI, V328, P19, DOI 10.1016/j.tcs.2004.07.004
   Fu X, 2004, IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P96, DOI 10.1109/ICWS.2004.1314728
   Fu X, 2004, LECT NOTES COMPUT SC, V3114, P510
   FU X, 2004, P ISSTA 2004, P252
   Fu X., 2004, P 13 INT C WORLD WID, P621
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   *ITU T, Z120 ITUT
   KLEIJNEN S, 2003, ACM QUEUE, V1, P39
   Lynch Nancy A., 1987, PODC, P137
   Miller G, 2003, COMMUN ACM, V46, P64, DOI 10.1145/777313.777343
   Newcomer E., 2004, UNDERSTANDING WEB SE
   PENG W, 1994, P 1994 INT C NETW PR, P126
   Pnueli A., 1989, P 16 INT C AUT LANG, P652
   RAJAMANI SK, 2001, P 8 STAT AN S JUL, P375
   Uchitel S, 2004, ACM T SOFTW ENG METH, V13, P37, DOI 10.1145/1005561.1005563
   *UN DESCR, 2002, DISC INT UDDI PROT
   Williams J, 2003, COMMUN ACM, V46, P58, DOI 10.1145/777313.777342
   *WORLD WID WEB CON, 1998, EXT MARK LANG XML
NR 35
TC 68
Z9 82
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2005
VL 31
IS 12
BP 1042
EP 1055
DI 10.1109/TSE.2005.141
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 995RU
UT WOS:000234122300005
DA 2024-07-18
ER

PT J
AU Bellavista, P
   Corradi, A
   Montanari, R
   Stefanelli, C
AF Bellavista, P
   Corradi, A
   Montanari, R
   Stefanelli, C
TI Context-aware middleware for resource management in the wireless
   Internet
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE C.2.8.e mobile computing/support services; J.8.I Internet
   applications/middleware; J.9.a mobile applications/location-dependent;
   and sensitive; C.2.8.d mobile computing/mobile environments
ID MOBILE; FRAMEWORK; SYSTEMS; WEB
AB The provisioning of Web services over the wireless Internet introduces novel challenging issues for service design and implementation: from user/terminal mobility during service execution, to wide heterogeneity of portable access devices and unpredictable modifications in accessible resources. In this scenario, there are frequent provision-time changes in the context, defined as the logical set of accessible resources depending on client location, access terminal capabilities, and system/service management policies. The development of context-dependent services requires novel middlewares with full context visibility. We propose a middleware for context-aware resource management, called CARMEN, capable of supporting the automatic reconfiguration of wireless Internet services in response to context changes without any intervention on the service logic. CARMEN determines the context on the basis of metadata, which include declarative management policies and profiles for user preferences, terminal capabilities, and resource characteristics. In addition, CARMEN exploits the mobile agent technology to implement mobile middleware components that follow the provision-time movement of clients to support locally their customized service access. The proposed middleware shows how metadata and mobile agents can favor component reusability and automatic service reconfiguration, by reducing the development/deployment complexity.
C1 Univ Bologna, Dept Elect Comp Sci & Syst, I-40136 Bologna, Italy.
   Univ Ferrara, Dept Engn, I-44100 Ferrara, Italy.
C3 University of Bologna; University of Ferrara
RP Univ Bologna, Dept Elect Comp Sci & Syst, I-40136 Bologna, Italy.
EM pbellavista@deis.unibo.it; acorradi@deis.unibo.it;
   rmontanari@deis.unibo.it; cstefanelli@ing.unife.it
RI Bellavista, paolo/H-7256-2014; Corradi, Antonio/L-7480-2015
OI Bellavista, paolo/0000-0003-0992-7948; montanari,
   rebecca/0000-0002-3687-0361; Corradi, Antonio/0000-0002-5107-1023
CR ABOWD GD, 2002, IEEE WIRELESS COMM, V9
   Agarwal S, 2002, IEEE NETWORK, V16, P22, DOI 10.1109/MNET.2002.1020232
   Arnold K., 1999, JINI SPECIFICATION
   Avancha S, 2002, COMPUTER, V35, P96, DOI 10.1109/MC.2002.1009177
   Banerjee S, 2002, COMPUTER, V35, P46, DOI 10.1109/MC.2002.1039517
   Barr E, 2001, INT CON DISTR COMP S, P303, DOI 10.1109/ICDSC.2001.918960
   Bellavista P, 2002, COMPUT J, V45, P595, DOI 10.1093/comjnl/45.6.595
   Bellavista P, 2003, MICROPROCESS MICROSY, V27, P73, DOI 10.1016/S0141-9331(02)00099-6
   Bellavista P., 2002, IEEE Pervasive Computing, V1, P81, DOI 10.1109/MPRV.2002.1037726
   Bellavista P, 2001, COMPUTER, V34, P73, DOI 10.1109/2.910896
   BELLAVISTA P, 2003, P 4 INT C MOB DAT MA
   Bos L, 2001, IEEE NETWORK, V15, P36, DOI 10.1109/65.898820
   Bulterman DCA, 2003, IEEE MULTIMEDIA, V9, P74
   CHAWLA S, 1997, IEEE INTERNET COMPUT, V1, P58
   *CISC SYST, 2003, CISC AIR 350 SER
   Curbera F, 2002, IEEE INTERNET COMPUT, V6, P86, DOI 10.1109/4236.991449
   Davies N., 2002, IEEE Pervasive Computing, V1, P26, DOI 10.1109/MPRV.2002.993142
   Decker S, 2000, IEEE INTERNET COMPUT, V4, P68, DOI 10.1109/4236.895018
   Eliassen F., 1999, Proceedings 7th IEEE Workshop on Future Trends of Distributed Computing Systems, P60, DOI 10.1109/FTDCS.1999.818785
   *ER, 2003, BLUET APPL TRAIN TOO
   Fuggetta A, 1998, IEEE T SOFTWARE ENG, V24, P342, DOI 10.1109/32.685258
   Holder O., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P163, DOI 10.1109/ICSE.1999.841006
   HUBER H, 1996, IEEE SOFTWARE, V13, P37
   *IETF SVRLOC WORK, 2003, SERV LOC PROT SLP
   *IKV TECHN AG, 2003, EN MOB
   *IMP COLL, 2003, POND
   KARMOUCH A, 1998, IEEE COMM MAGAZI JUL, V36
   KOVACS E, 1998, P MOB AG INT WORKSH
   Lauvset KJ, 2002, NINTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P253, DOI 10.1109/ECBS.2002.999847
   LEDOUX T, 2000, P INT WORKSH REFL MI
   Lipperts S, 1999, COMPUT NETW, V31, P2053, DOI 10.1016/S1389-1286(99)00079-1
   LITIU R, 2000, P INT MIDDL S PRINC
   Macker JP, 2001, IEEE COMMUN MAG, V39, P148, DOI 10.1109/35.925683
   Mascolo C, 2002, LECT NOTES COMPUT SC, V2497, P20
   MOFFETT JD, 1993, IEEE J SEL AREA COMM, V11, P1404, DOI 10.1109/49.257932
   Montanari R, 2001, MICROPROCESS MICROSY, V25, P93, DOI 10.1016/S0141-9331(01)00102-8
   Morisio M, 2002, IEEE T SOFTWARE ENG, V28, P876, DOI 10.1109/TSE.2002.1033227
   MOURA JA, 2002, P IEEE INT C COMM IC
   ORTIZ CE, 2001, MOBILE INFORMATION D
   Poulin J.S., 1997, MEASURING SOFTWARE R
   Roman Gruia-Catalin., 2000, P 22 INT C SOFTWARE, P241
   Snell James., 2001, PROGRAMMING WEB SERV
   Stallings W., 2001, WIRELESS COMMUNICATI
   Tanter É, 2001, SCCC 2001: XXI INTERNATIONAL CONFERENCE OF THE CHILEAN COMPUTER SCIENCE SOCIETY, PROCEEDINGS, P264, DOI 10.1109/SCCC.2001.972656
   *TEL AB, 2003, BLUET LOC INF POINT
   *W3 CONS, 2003, COMP CAP PREF PROF
   Wollrath A, 1997, IEEE MICRO, V17, P44, DOI 10.1109/40.591654
   YOSHIMURA T, 2002, P IEEE INT C COMM IC
   YOSHIMURA T, 2002, P 11 INT WORLD WID W
NR 49
TC 90
Z9 99
U1 0
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2003
VL 29
IS 12
BP 1086
EP 1099
DI 10.1109/TSE.2003.1265523
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 751PJ
UT WOS:000187075900004
DA 2024-07-18
ER

PT J
AU Foss, T
   Stensrud, E
   Kitchenham, B
   Myrtveit, I
AF Foss, T
   Stensrud, E
   Kitchenham, B
   Myrtveit, I
TI A simulation study of the model evaluation criterion MMRE
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE mean magnitude of relative error; software metrics; simulation;
   regression analysis; prediction models; software cost estimation;
   software engineering; empirical software engineering; prediction
   accuracy
ID SOFTWARE COST ESTIMATION; REGRESSION; PREDICTION; ACCURACY
AB The Mean Magnitude of Relative Error, MMRE, is probably the most widely used evaluation criterion for-assessing the performance of competing software prediction models. One purpose of MMRE is to assist us to select the best model. In this paper, we have performed a simulation study demonstrating that MMRE does not always select the best model. Our findings cast some doubt on the conclusions of any study of competing software prediction models that used MMRE as a basis of model comparison. We therefore recommend not using MMRE to evaluate and compare prediction models. At present, we do not have any universal replacement for MMRE Meanwhile, we therefore recommend using a combination of theoretical justification of the models that are proposed together with other metrics proposed in this paper.
C1 Norwegian Sch Management B1, N-1301 Sandvika, Norway.
   Myrtveit Strensrud ANS, N-0752 Oslo, Norway.
   Univ Keele, Dept Comp Sci, Keele ST5 5BG, Staffs, England.
C3 BI Norwegian Business School; Keele University
RP Norwegian Sch Management B1, Elais Smith Vei 15,Box 580, N-1301 Sandvika, Norway.
EM tron.foss@bi.nb; erik.stensrud@ieee.org; barbara@cs.keele.ac.uk;
   ingunn.myrtveit@bi.nb
RI Kitchenham, Barbara/AAL-4311-2020
OI Kitchenham, Barbara/0000-0002-6134-8460
CR Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 1989, THESIS U QUEBEC MONT
   [Anonymous], 1998, Forecasting methods and applications
   [Anonymous], P 7 INT SOFTW METR S
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P303, DOI 10.1109/ICSE.1999.841021
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   BRIAND LC, 1992, IEEE T SOFTWARE ENG, V18, P931, DOI 10.1109/32.177363
   Briand LC, 1998, PROC INT CONF SOFTW, P390, DOI 10.1109/ICSE.1998.671392
   BRIAND LC, 1993, IEEE T SOFTWARE ENG, V19, P1028, DOI 10.1109/32.256851
   Briand LC, 2000, IEEE T RELIAB, V49, P60, DOI 10.1109/24.855537
   Briand LC, 1999, P 21 INT C SOFTW ENG, DOI DOI 10.1145/302405.302647
   BRIAND LC, IN PRESS ENCY SOFTWA
   BRIAND LC, 1998, P 9 EUR SOFTW CONTR, P4
   CHALMERS AF, 1982, WHAT THIS THING CALL
   CUELENAERE AME, 1987, INFORM SOFTWARE TECH, V29, P558, DOI 10.1016/0950-5849(87)90089-9
   Dolado JJ, 2001, INFORM SOFTWARE TECH, V43, P61, DOI 10.1016/S0950-5849(00)00137-3
   El Emam K, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P235, DOI 10.1109/METRIC.1998.731250
   FERENS DV, 1996, AM PROGRAMMER    JUL, P28
   Finnie GR, 1997, J SYST SOFTWARE, V39, P281, DOI 10.1016/S0164-1212(97)00055-1
   FOSS T, 2001, P ESCOM, P157
   FOSS T, 2001, P 12 EUR SOFTW CONTR, P9
   Gray A. R., 1999, Empirical Software Engineering, V4, P297, DOI 10.1023/A:1009849100780
   Gujarati D.N., 1995, Basic Econometric, VThird
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   JEFFERY R, 1999, P EUR C OPT SOFTW DE, P37
   JENSON RL, 1991, J SYST SOFTWARE, V15, P107, DOI 10.1016/0164-1212(91)90048-B
   JORGENSEN M, 1995, IEEE T SOFTWARE ENG, V21, P674, DOI 10.1109/32.403791
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Kitchenham B., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P11, DOI 10.1109/METRIC.1993.263805
   Kitchenham B, 1998, IEEE T SOFTWARE ENG, V24, P278, DOI 10.1109/32.677185
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kotz S., 1982, ENCY STAT SCI
   Koutsoyiannis A., 1977, THEORY ECONOMETRICS, VSecond
   MARTIN R, 1988, ACM SIGSOFT SOFTWARE, V13, P49
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   MUKHOPADHYAY T, 1992, MIS QUART, V16, P155, DOI 10.2307/249573
   Myrtveit I., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P269, DOI 10.1109/METRIC.1999.809748
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   Nesi P, 1998, J SYST SOFTWARE, V42, P89, DOI 10.1016/S0164-1212(97)10021-8
   Pickard L., 2001, IEE Proceedings-Software, V148, P165, DOI 10.1049/ip-sen:20010621
   Rosenberg J, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P137, DOI 10.1109/METRIC.1997.637174
   Samson B, 1997, INFORM SOFTWARE TECH, V39, P55, DOI 10.1016/0950-5849(96)01124-X
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   Stensrud E, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P205, DOI 10.1109/METRIC.1998.731247
   STENSRUD E, 2002, EMPIRICAL SOFTWARE E
   Strike K, 2001, IEEE T SOFTWARE ENG, V27, P890, DOI 10.1109/32.962560
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
NR 49
TC 271
Z9 282
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2003
VL 29
IS 11
BP 985
EP 995
DI 10.1109/TSE.2003.1245300
PG 11
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 740KU
UT WOS:000186402200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Niu, JW
   Atlee, JM
   Day, NA
AF Niu, JW
   Atlee, JM
   Day, NA
TI Template semantics for model-based notations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT Conference on the Foundations of Software Engineering
CY NOV, 2002
CL CHARLESTON, SC
SP ACM SIGSOFT
DE model-based specification notations; semantics; composition;
   concurrency; automated generation of analysis tools
ID TOOL
AB We propose a template-based approach to structuring the semantics of model-based specification, notations. The. basic computation, model is-a nonconcurrent, hierarchical state-transition machine (HTS), whose execution semantics are parameterized. Semantics that are common among notations (e.g., the concept of an enabled transition) are captured in the template, and a notation's distinct semantics (e.g., which states can enable transitions) are specified as parameters. The template semantics of composition operators define how multiple HTSs execute concurrently and how they communicate and synchronize with each other by exchanging events and data. The definitions of these operators use the template parameters; to preserve notation-specific behavior in composition. Our template is sufficient to capture the semantics of basic transition systems, CSP, CCS, basic LOTOS, a subset of SDL88, and a variety of statecharts notations. We believe that a description of a notation's semantics using our template can be used as input to a tool that automatically generates formal analysis tools.
C1 Univ Waterloo, Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Univ Waterloo, Sch Comp Sci, 200 Univ Ave W, Waterloo, ON N2L 3G1, Canada.
EM jniu@uwaterloo.ca; jmatlee@uwaterloo.ca; nday@uwaterloo.ca
RI Atlee, Joanne/KCY-7928-2024
CR Alexander P, 2001, COMPUTER, V34, P64, DOI 10.1109/2.963446
   [Anonymous], 1991, The Temporal Logic of Reactive and Concurrent Systems
   ATLEE JM, 1993, IEEE T SOFTWARE ENG, V19, P24, DOI 10.1109/32.210305
   Avrunin GS, 1997, PROC INT CONF SOFTW, P228, DOI 10.1145/253228.253275
   Bensalem S., 2000, LFM 2000: Fifth NASA Langley Formal Methods Workshop (NASA/CP-2000-210100), P187
   BERRY G, 1992, SCI COMPUT PROGRAM, V19, P87, DOI 10.1016/0167-6423(92)90005-V
   BLAIR L, 1999, P 3 INT C FORM METH, P401
   Bozga M, 1999, SDL'99: THE NEXT MILLENNIUM, P423, DOI 10.1016/B978-044450228-5/50028-X
   Bultan T., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P335, DOI 10.1109/ICSE.2000.870424
   Chang YH, 1998, RESOUR CONSERV RECY, V24, P7, DOI 10.1016/S0921-3449(98)00036-6
   CHOU P, 1998, P INT WORKSH HARDW S
   Cleaveland R, 2002, SCI COMPUT PROGRAM, V42, P39, DOI 10.1016/S0167-6423(01)00033-8
   CLEAVELAND R, 1993, ACM T PROGR LANG SYS, V15, P36, DOI 10.1145/151646.151648
   DAY NA, 1999, P 12 INT C THEOR PRO
   Degano P, 2001, ACM COMPUT SURV, V33, P135, DOI 10.1145/384192.384194
   Dillon LK, 2003, IEEE T SOFTWARE ENG, V29, P133, DOI 10.1109/TSE.2003.1178052
   Harel D., 1987, Proceedings of the Symposium on Logic in Computer Science (Cat. No.87CH2464-6), P54
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   Heitmeyer C. L., 1996, ACM Transactions on Software Engineering and Methodology, V5, P231, DOI 10.1145/234426.234431
   Hoare CAR., 1985, Communicating Sequential Processes
   *INT EL UN, 1999, Z100 INT EL UN
   *INT ORG STAND, 1988, ISO8807
   LEVESON NG, 1994, IEEE T SOFTWARE ENG, V20, P684, DOI 10.1109/32.317428
   MAGGIOLOSCHETTI.A, 1996, P INT C CONC THEOR
   McMillan K. L., 1993, Symbolic model checking
   MIKK E, 1997, P AS COMP SCI C
   Milner R., 1989, Communication and concurrency
   NIU J, 2002, P INT S FDN SOFTW EN, P149
   Niu JW, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P188
   *OBJ MAN GROUP, 2001, UN MOD LANG UML VERS
   OWRE S, 1995, CSL9512 SRI INT
   PETERSON JL, 1977, COMPUT SURV, V9, P223, DOI 10.1145/356698.356702
   Pezze M, 1997, PROC INT CONF SOFTW, P239, DOI 10.1145/253228.253278
   PNUELI A, 1991, P S THEOR ASP COMP S
   VONDERBEECK M, 1994, FORMAL TECHNIQUES RE
   Zave P., 1993, ACM Transactions on Software Engineering and Methodology, V2, P379, DOI 10.1145/158431.158438
NR 36
TC 28
Z9 34
U1 1
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2003
VL 29
IS 10
BP 866
EP 882
DI 10.1109/TSE.2003.1237169
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 729CF
UT WOS:000185753100002
DA 2024-07-18
ER

PT J
AU Anderson, P
   Reps, T
   Teitelbaum, T
AF Anderson, P
   Reps, T
   Teitelbaum, T
TI Design and implementation of a fine-grained software inspection tool
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software inspection; dependence graphs; program understanding; slicing;
   chopping; software model checking
ID PROGRAM; GRAPH
AB Although software inspection has led to improvements in software quality, many software systems continue to be deployed with unacceptable numbers of errors, even when software inspection is part of the development process. The difficulty of manually verifying that the software under inspection conforms to the rules is partly to blame. We describe the design and implementation of a tool designed to help alleviate this problem. The tool provides mechanisms for fine-grained inspection of software by exposing the results of sophisticated whole-program static analysis to the inspector. The tool computes many static-semantic representations of the program, including an accurate call graph and dependence graph. Whole-program pointer analysis is used to make sure that the representation is precise with respect to aliases induced by pointer usage. Views on the dependence graph and related representations are supported. Queries on the dependence graph allow an inspector to answer detailed questions about the semantics of the program. Facilities for openness and extensibility permit the tool to be integrated with many software-development processes. The main challenge of the approach is to provide facilities to navigate and manage the enormous complexity of the dependence graph.
C1 GammaTech Inc, Ithaca, NY 14850 USA.
   Univ Wisconsin, GammaTech Inc, Madison, WI 53706 USA.
   Univ Wisconsin, Dept Comp Sci, Madison, WI 53706 USA.
   Cornell Univ, Dept Comp Sci, Ithaca, NY 14850 USA.
C3 University of Wisconsin System; University of Wisconsin Madison;
   University of Wisconsin System; University of Wisconsin Madison; Cornell
   University
RP GammaTech Inc, 317 N Aurora St, Ithaca, NY 14850 USA.
EM paul@grammatech.com; reps@cs.wisc.edu; tt@grammatech.com
CR [Anonymous], 1994, Program Analysis and Specialization for the C Programming Language
   [Anonymous], 2000, LNCS, DOI [10.1007/10722167_20, DOI 10.1007/1072216720]
   BALL T, 2001, P SPIN WORKSH, P113
   Bates S., 1993, Conference Record of the Twentieth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P384, DOI 10.1145/158511.158694
   BISHOP P, 2002, P SAFECOMP 2002 SEPT
   BURKE M, 1986, P SIGPLAN 86 S COMPI, P162
   Clarke EM, 1999, MODEL CHECKING, P1
   CLARKE EM, 1999, P C CORR HARDW DES V
   COOPER K, 1988, P SIGPLAN 88 C PROGR, P57
   CORDY JR, 1991, COMPUT LANG, V16, P97, DOI 10.1016/0096-0551(91)90019-6
   DENNING DE, 1977, COMMUN ACM, V20, P504, DOI 10.1145/359636.359712
   DRAKE J, 1991, TR9130 U MINN
   DUNSMORE A, 1998, EFOCS3398 COMP SCI D
   Engler D, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE FOURTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P1
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Finnigan PJ, 1997, IBM SYST J, V36, P564, DOI 10.1147/sj.364.0564
   HALLEM S, 2002, PLDI, P00069, DOI DOI 10.1145/512529.512539
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Horwitz S., 1992, International Conference on Software Engineering, P392, DOI 10.1145/143062.143156
   HORWITZ S, 1995, P 3 ACM SIGSOFT S FD, P104
   Jackson Daniel., 1994, P 2 ACM SIGSOFT S FD
   KANG MH, 1997, NETWORK PUMP TECHICA
   LANDI W, 1998, DCSTR336 RUTG U
   Lyle J., 1987, Proceedings of the ICCEA, ICCEA'87, P877
   MACDONALD F, 1998, THESIS U STRATHCLYDE
   MACDONALD F, 1995, P 7 INT WORKSH COMP
   MILLETT L, 1998, P SPIN WORKSH
   *MKS, 2001, MKS HOM PAG
   *NADA, 1993, NASASTD220293
   *RED HAT SOFTW, 2001, SOURC NAV IDE
   Reps T, 1998, INFORM SOFTWARE TECH, V40, P701, DOI 10.1016/S0950-5849(98)00093-7
   REPS T, 1995, P 3 ACM SIGSOFT S FD
   *SCI TOOLW INC, 2001, UNDERSTAND
   *SEM DES INC, 2001, DMS TOOLK
   SEMBUGAMOORTHY V, 1990, PROCEEDINGS : THE FOURTEENTH ANNUAL INTERNATIONAL COMPUTER SOFTWARE & APPLICATIONS CONFERENCE, P146, DOI 10.1109/CMPSAC.1990.139343
   Sinha S., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P432, DOI 10.1109/ICSE.1999.841033
   *UPSPR SOFTW, 2001, COD ROV BROWS C CPLU
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   WILDE N, 1991, J SYST SOFTWARE, V14, P97, DOI 10.1016/0164-1212(91)90094-M
   YANNAKAKIS M, 1990, PROCEEDINGS OF THE NINTH ACM SIGACT-SIGMOD-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P230, DOI 10.1145/298514.298576
NR 41
TC 41
Z9 50
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2003
VL 29
IS 8
BP 721
EP 733
DI 10.1109/TSE.2003.1223646
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 708KQ
UT WOS:000184566400005
DA 2024-07-18
ER

PT J
AU Graetsch, UM
   Khalajzadeh, H
   Shahin, M
   Hoda, R
   Grundy, J
AF Graetsch, Ulrike M.
   Khalajzadeh, Hourieh
   Shahin, Mojtaba
   Hoda, Rashina
   Grundy, John
TI Dealing With Data Challenges When Delivering Data-Intensive Software
   Solutions
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Data challenges; data-intensive solutions; multi-disciplinary teams;
   socio-technical grounded theory method
ID GROUNDED THEORY; BOUNDARY OBJECTS; DATA GOVERNANCE; KNOWLEDGE;
   PERSONALITY; EDUCATION; QUALITY; PROJECT
AB The predicted increase in demand for data-intensive solution development is driving the need for software, data, and domain experts to effectively collaborate in multi-disciplinary data-intensive software teams (MDSTs). We conducted a socio-technical grounded theory study through interviews with 24 practitioners in MDSTs to better understand the challenges these teams face when delivering data-intensive software solutions. The interviews provided perspectives across different types of roles including domain, data and software experts, and covered different organisational levels from team members, team managers to executive leaders. We found that the key concern for these teams is dealing with data-related challenges. In this article, we present a theory of dealing with data challenges that explains the challenges faced by MDSTs including gaining access to data, aligning data, understanding data, and resolving data quality issues; the context in and condition under which these challenges occur, the causes that lead to the challenges, and the related consequences such as having to conduct remediation activities, inability to achieve expected outcomes and lack of trust in the delivered solutions. We also identified contingencies or strategies applied to address the challenges including high-level strategic approaches such as implementing data governance, implementing new tools and techniques such as data quality visualisation and monitoring tools, as well as building stronger teams by focusing on people dynamics, communication skill development and cross-skilling. Our findings have direct implications for practitioners and researchers to better understand the landscape of data challenges and how to deal with them.
C1 [Graetsch, Ulrike M.; Hoda, Rashina; Grundy, John] Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
   [Khalajzadeh, Hourieh] Deakin Univ, Geelong, Vic 3220, Australia.
   [Shahin, Mojtaba] RMIT Univ, Sch Comp Technol, Melbourne, Vic 3000, Australia.
C3 Monash University; Deakin University; Royal Melbourne Institute of
   Technology (RMIT)
RP Graetsch, UM (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
EM ulrike.graetsch@monash.edu; hkhalajzadeh@deakin.edu.au;
   mojtaba.shahin@rmit.edu.au; rashina@gmail.com; john.grundy@monash.edu
RI Khalajzadeh, Hourieh/AAR-6188-2020; Grundy, John/AAF-1716-2019
OI Khalajzadeh, Hourieh/0000-0001-9958-0102; Grundy,
   John/0000-0003-4928-7076; Hoda, Rashina/0000-0001-5147-8096; Graetsch,
   Ulrike Maria/0000-0002-6414-2572
FU ARC Laureate Fellowship [FL190100035]
FX This work was supported by the ARC Laureate Fellowship FL190100035.
CR Abraham R, 2019, INT J INFORM MANAGE, V49, P424, DOI 10.1016/j.ijinfomgt.2019.07.008
   Aho T, 2020, LECT NOTES COMPUT SC, V12562, P153, DOI 10.1007/978-3-030-64148-1_10
   Altendeitering M., 2022, BUS INFORM SYST ENG+, P4
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   Ardagna D, 2018, FUTURE GENER COMP SY, V89, P548, DOI 10.1016/j.future.2018.07.014
   Askarinejadamiri Z, 2016, 2016 SECOND INTERNATIONAL CONFERENCE ON WEB RESEARCH (ICWR), P183, DOI 10.1109/ICWR.2016.7498465
   Batini C, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1541880.1541883
   Bonesso S, 2022, INT J MANPOWER, V43, P19, DOI 10.1108/IJM-07-2020-0342
   Carlile PR, 2002, ORGAN SCI, V13, P442, DOI 10.1287/orsc.13.4.442.2953
   Chapman P, 2000, CRISP-DM 1.0: Step-by-Step Data Mining Guide
   Charmaz K., 2014, CONSTRUCTING GROUNDE
   Choi BCK, 2006, CLIN INVEST MED, V29, P351
   Cichy C, 2019, IEEE ACCESS, V7, P24634, DOI 10.1109/ACCESS.2019.2899751
   Corbin J., 2015, BASICS QUALITATIVE R
   Côrte-Real N, 2020, INFORM MANAGE-AMSTER, V57, DOI 10.1016/j.im.2019.01.003
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   Duncan A.D., 2021, 100 DATA ANAL PREDIC
   Dutra ACS, 2015, LECT NOTES BUS INF P, V241, P345, DOI 10.1007/978-3-319-29133-8_17
   Ehrlinger Lisa, 2018, 2018 Thirteenth International Conference on Digital Information Management (ICDIM), P148, DOI 10.1109/ICDIM.2018.8846984
   Ehrlinger L, 2022, FRONT BIG DATA, V5, DOI 10.3389/fdata.2022.850611
   Fægri TE, 2010, INFORM SOFTWARE TECH, V52, P1118, DOI 10.1016/j.infsof.2010.06.002
   Figalist I, 2020, EUROMICRO CONF PROC, P5, DOI 10.1109/SEAA51224.2020.00013
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Graetsch M., 2023, Mdsts challenges basic stage data collection and analysis-interview questions, DOI [10.5281/10.5281/zenodo.7641870, DOI 10.5281/10.5281/ZENODO.7641870]
   Gröger C, 2021, COMMUN ACM, V64, P98, DOI 10.1145/3448247
   Grundy J., 2021, Evaluation of Novel Approaches to Software Engineering, P444, DOI [10.1007/978-3-030-70006-5_18, DOI 10.1007/978-3-030-70006-5_18]
   Gudivada V., 2017, International Journal on Advances in Software, V10, P1
   Gupta N, 2021, Arxiv, DOI arXiv:2108.05935
   Harris H., 2013, ANAL ANAL INTROSPECT
   Hayes B., 2018, Bus. Broadway
   Hidellaarachchi D, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3546943
   Hoda R, 2022, IEEE T SOFTWARE ENG, V48, P3808, DOI 10.1109/TSE.2021.3106280
   Hoda R, 2011, INFORM SOFTWARE TECH, V53, P521, DOI 10.1016/j.infsof.2010.10.009
   Hutchison AJ, 2010, INT J SOC RES METHOD, V13, P283, DOI 10.1080/13645570902996301
   Jain A, 2020, KDD '20: PROCEEDINGS OF THE 26TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P3561, DOI 10.1145/3394486.3406477
   Jovanovic M, 2017, J SYST SOFTWARE, V133, P174, DOI 10.1016/j.jss.2017.07.008
   Juddoo S, 2015, 2015 INTERNATIONAL CONFERENCE ON COMPUTING, COMMUNICATION AND SECURITY (ICCCS)
   Kandel S, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3363
   Kanij T, 2014, INFORM SOFTWARE TECH, V56, P495, DOI 10.1016/j.infsof.2013.11.002
   Kanij T, 2013, CONF SOFTW ENG EDUC, P239, DOI 10.1109/CSEET.2013.6595255
   Khalajzadeh H., 2021, P INT C EV NOV APPR, P106
   Khalajzadeh H, 2020, PROC INT CONF SOFTW, P256, DOI 10.1145/3377812.3390811
   Kim M, 2018, IEEE T SOFTWARE ENG, V44, P1024, DOI 10.1109/TSE.2017.2754374
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Koltay T, 2016, IFLA J-INT FED LIBR, V42, P303, DOI 10.1177/0340035216672238
   Little R. J., 2019, Statistical Analysis with Missing Data, DOI DOI 10.1002/9781119482260
   Martinez I, 2021, BIG DATA RES, V24, DOI 10.1016/j.bdr.2020.100183
   Martínez-Plumed F, 2021, IEEE T KNOWL DATA EN, V33, P3048, DOI 10.1109/TKDE.2019.2962680
   Masood Z, 2020, EMPIR SOFTW ENG, V25, P4962, DOI 10.1007/s10664-020-09876-x
   Merino J, 2016, FUTURE GENER COMP SY, V63, P123, DOI 10.1016/j.future.2015.11.024
   Mikalef P, 2020, INFORM MANAGE-AMSTER, V57, DOI 10.1016/j.im.2020.103361
   Miller S., 2014, Journal of Organization Design, V3, P26, DOI DOI 10.7146/JOD.9823
   Muller M, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300356
   Nahar N, 2022, PROC INT CONF SOFTW, P413, DOI 10.1145/3510003.3510209
   Ozkaya I, 2020, IEEE SOFTWARE, V37, P3, DOI 10.1109/MS.2019.2946668
   Pareto L, 2010, LECT NOTES COMPUT SC, V6395, P406
   Park S, 2021, IUI '21 - 26TH INTERNATIONAL CONFERENCE ON INTELLIGENT USER INTERFACES, P585, DOI 10.1145/3397481.3450637
   Piatesky G., 2014, CRISP -DM, still the top methodology for analytics, data mining, or data science projects
   Piorkowski David, 2021, Proceedings of the ACM on Human-Computer Interaction, V5, DOI 10.1145/3449205
   Raj A, 2020, EUROMICRO CONF PROC, P13, DOI 10.1109/SEAA51224.2020.00014
   Ratcheva V, 2009, INT J PROJ MANAG, V27, P206, DOI 10.1016/j.ijproman.2008.02.008
   Rattenbury Tye, 2017, Principles of Data Wrangling: Practical Techniques for Data Preparation
   Salleh N, 2014, EMPIR SOFTW ENG, V19, P714, DOI 10.1007/s10664-012-9238-4
   Saltz J., 2018, P 24 AM C INF SYST D
   Sambasivan N., 2021, P CHI C HUM FACT COM, DOI [10.1145, 10.1145/3411764.3445518]
   Scannapieco M., 2005, DATENBANK SPEKTRUM, V14, P6
   Soliman J., 2004, P INT C QUAL RES IT, P24
   Strong DM, 1997, COMMUN ACM, V40, P103, DOI 10.1145/253769.253804
   STRUTZEL E, 1968, NURS RES, V17, P364
   Taleb I, 2018, IEEE INT CONGR BIG, P166, DOI 10.1109/BigDataCongress.2018.00029
   TDSP, Team data science process
   Upadhyay P, 2020, INT J INFORM MANAGE, V52, DOI 10.1016/j.ijinfomgt.2020.102100
   Wahshi J. J. A., 2022, P ECIS 2022 RES PAP
   Wang R. Y., 1996, Journal of Management Information Systems, V12, P5
   Wohlrab R, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2166
   Yaoli Mao, 2019, Proceedings of the ACM on Human-Computer Interaction, V3, DOI 10.1145/3361118
   Zhang Amy X., 2020, Proceedings of the ACM on Human-Computer Interaction, V4, DOI 10.1145/3392826
NR 77
TC 2
Z9 2
U1 2
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2023
VL 49
IS 9
BP 4349
EP 4370
DI 10.1109/TSE.2023.3291003
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA S4DL9
UT WOS:001070689400004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mancini, T
   Melatti, I
   Tronci, E
AF Mancini, Toni
   Melatti, Igor
   Tronci, Enrico
TI Optimizing Highly-Parallel Simulation-Based Verification of
   Cyber-Physical Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE System-level verification; simulation; cyber-physical systems; systems
   engineering
ID MODEL; DESIGN
AB Cyber-Physical Systems (CPSs), comprising both software and physical components, arise in many industry-relevant domains and are often mission- or safety-critical. System-Level Verification (SLV) of CPSs aims at certifying that given (e.g., safety or liveness) specifications are met, or at estimating the value of some Key Performance Indicators, when the system runs in its operational environment, that is in presence of inputs and/or of additional, uncontrolled disturbances. To enable SLV of complex systems from the early design phases, the currently most adopted approach envisions the simulation of a system model under the (time bounded) operational scenarios deemed of interest. Unfortunately, simulation-based SLV can be computationally prohibitive (years of sequential simulation), since system model simulation is computationally intensive and the set of scenarios of interest can be extremely large. In this article, we present a technique that, given a collection of scenarios of interest (extracted from databases or from symbolic structures), computes parallel shortest simulation campaigns, which drive a possibly large number of system model simulators running in parallel in a HPC infrastructure through all (and only) those scenarios in the user-defined (possibly random) order, by wisely avoiding multiple simulations of repeated trajectories, thus minimising completion time. Our experiments on SLV of Modelica/FMU and Simulink models with up to almost 200 million scenarios show that our optimisation yields speedups as high as 8 x. This, together with the enabled massive parallelisation, makes practically viable (a few weeks in a HPC infrastructure) verification tasks (both statistical and exhaustive) which would otherwise take inconceivably long time.
C1 [Mancini, Toni; Tronci, Enrico] Sapienza Univ Rome, Comp Sci Dept, I-00198 Rome, Italy.
   [Melatti, Igor] Univ Aquila, Dept Informat Engn Comp Sci & Math, I-67100 Laquila, Italy.
C3 Sapienza University Rome; University of L'Aquila
RP Mancini, T (corresponding author), Sapienza Univ Rome, Comp Sci Dept, I-00198 Rome, Italy.
EM tmancini@di.uniroma1.it; igor.melatti@univaq.it; tronci@di.uniroma1.it
OI TRONCI, Enrico/0000-0002-0377-3119; Mancini, Toni/0000-0003-3355-2170
FU NRRP Mission 4, Comp. 2, Inv. 1.5, NextGenEU, MUR, Rome Technopole [CUP
   B83C22002820006]
FX This work was supported in part by NRRP Mission 4, Comp. 2, Inv. 1.5,
   NextGenEU, MUR CUP B83C22002820006, Rome Technopole.
CR Abbas H, 2013, ACM T EMBED COMPUT S, V12, DOI 10.1145/2465787.2465797
   Adimoolam A, 2017, LECT NOTES COMPUT SC, V10426, P483, DOI 10.1007/978-3-319-63387-9_24
   Agha G, 2018, ACM T MODEL COMPUT S, V28, DOI 10.1145/3158668
   AlTurki Musab, 2011, Algebra and Coalgebra in Computer Science. Proceedings 4th International Conference, CALCO 2011, P386, DOI 10.1007/978-3-642-22944-2_28
   Annpureddy Y. S. R., 2011, P TACAS LECT NOTES C, V6605
   Bak S., 2017, Proc. CAV in Lecture Notes in Computer Science, V10426
   Basu A, 2010, LECT NOTES COMPUT SC, V6117, P32, DOI 10.1007/978-3-642-13464-7_4
   Bogdoll J, 2011, LECT NOTES COMPUT SC, V6722, P59, DOI 10.1007/978-3-642-21461-5_4
   Boström P, 2016, SOFTW SYST MODEL, V15, P1141, DOI 10.1007/s10270-015-0477-x
   Boyer Benoit, 2013, Quantitative Evaluation of Systems. 10th International Conference, QEST 2013. Proceedings: LNCS 8054, P160, DOI 10.1007/978-3-642-40196-1_12
   Clarke E, 2010, FORM METHOD SYST DES, V36, P97, DOI 10.1007/s10703-009-0076-y
   Clarke EM, 2011, LECT NOTES COMPUT SC, V6996, P1, DOI 10.1007/978-3-642-24372-1_1
   Deshmukh J, 2015, LECT NOTES COMPUT SC, V9364, P500, DOI 10.1007/978-3-319-24953-7_35
   Donzé A, 2010, LECT NOTES COMPUT SC, V6174, P167, DOI 10.1007/978-3-642-14295-6_17
   Dreossi T, 2015, LECT NOTES COMPUT SC, V9058, P127, DOI 10.1007/978-3-319-17524-9_10
   Fainekos GE, 2009, THEOR COMPUT SCI, V410, P4262, DOI 10.1016/j.tcs.2009.06.021
   Fan CC, 2017, LECT NOTES COMPUT SC, V10426, P441, DOI 10.1007/978-3-319-63387-9_22
   Gonschorek T., 2017, P MEMOCODE, P15
   Grosu R, 2005, LECT NOTES COMPUT SC, V3440, P271
   Grosu R., 2004, P ISOLA, P165
   Hayes B, 2017, IEEE T SMART GRID, V8, P1284, DOI 10.1109/TSG.2016.2596790
   Hoxha B, 2018, INT J SOFTW TOOLS TE, V20, P79, DOI 10.1007/s10009-017-0447-4
   Jegourel Cyrille, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P576, DOI 10.1007/978-3-642-39799-8_38
   Jegourel C, 2012, LECT NOTES COMPUT SC, V7214, P498, DOI 10.1007/978-3-642-28756-5_37
   Kim Y, 2013, IEEE SOFTWARE, V30, P35, DOI 10.1109/MS.2013.24
   Maler O, 2004, LECT NOTES COMPUT SC, V3253, P152, DOI 10.1007/978-3-540-30206-3_12
   Mancini T., 2013, International Conference on Computer Aided Verification (CAV), V8044, P296, DOI DOI 10.1007/978-3-642-39799-8_21
   Mancini T, 2022, IEEE T SOFTWARE ENG, V48, P4002, DOI 10.1109/TSE.2021.3109842
   Mancini T, 2021, J LOG ALGEBR METHODS, V120, DOI 10.1016/j.jlamp.2021.100640
   Mancini T, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON COMMUNICATIONS, CONTROL, AND COMPUTING TECHNOLOGIES FOR SMART GRIDS (SMARTGRIDCOMM)
   Mancini T, 2017, INFORM PROCESS LETT, V122, P8, DOI 10.1016/j.ipl.2017.02.001
   Mancini T, 2016, FUND INFORM, V149, P101, DOI 10.3233/FI-2016-1444
   Mancini T, 2016, MICROPROCESS MICROSY, V41, P12, DOI 10.1016/j.micpro.2015.10.010
   Mancini T, 2015, ELECTRON P THEOR COM, P86, DOI 10.4204/EPTCS.193.7
   Mancini T, 2015, 2015 EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN (DSD), P478, DOI 10.1109/DSD.2015.35
   Mancini T, 2015, LECT N BIOINFORMAT, V9044, P542, DOI 10.1007/978-3-319-16480-9_52
   Mancini T, 2014, INT CONF SMART GRID, P794, DOI 10.1109/SmartGridComm.2014.7007745
   Mancini T, 2014, 2014 17TH EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN (DSD), P236, DOI 10.1109/DSD.2014.91
   Mari F, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559934
   Meenakshi B, 2006, LECT NOTES COMPUT SC, V4260, P606
   Miskov-Zivanov N., 2013, P ACM BCB, P728
   Rajhans A, 2021, LECT NOTES COMPUT SC, V12974, P288, DOI 10.1007/978-3-030-88494-9_17
   Sankaranarayanan Sriram, 2017, ACM SIGBED Review, V14, P24, DOI 10.1145/3076125.3076128
   Sinisi S, 2020, BIOINFORMATICS, V36, P5465, DOI 10.1093/bioinformatics/btaa1026
   Sinisi S, 2021, SIMUL MODEL PRACT TH, V109, DOI 10.1016/j.simpat.2021.102277
   So WC, 1996, IEEE T POWER ELECTR, V11, P24, DOI 10.1109/63.484413
   Sontag E. D, 1998, Mathematical Control Theory: Deterministic Finite Dimensional Systems, V6
   Tripakis S., 2005, ACM T EMBED COMPUT S, V4, P779, DOI DOI 10.1145/1113830.1113834
   Tronci E, 2014, 2014 FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD), P207
   Tuncali CE, 2019, IEEE INT C INTELL TR, P661, DOI 10.1109/ITSC.2019.8917375
   Whalen M, 2008, LECT NOTES COMPUT SC, V4916, P68
   Younes H. L. S., 2006, International Journal on Software Tools for Technology Transfer, V8, P216, DOI 10.1007/s10009-005-0187-8
   Younes H. L. S., 2002, Proc. CAV in Lecture Notes in Computer Science, V2404
   Youngjoo Kim, 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P51, DOI 10.1109/ISSRE.2012.35
   Zuliani P, 2013, FORM METHOD SYST DES, V43, P338, DOI 10.1007/s10703-013-0195-3
NR 55
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2023
VL 49
IS 9
BP 4443
EP 4455
DI 10.1109/TSE.2023.3298432
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA S4DL9
UT WOS:001070689400009
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Nassif, M
   Robillard, MP
AF Nassif, Mathieu
   Robillard, Martin P.
TI Identifying Concepts in Software Projects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Index Terms-Concepts identification; semantic analysis; software
   documentation; Wikipedia mining
ID COMMUNITY SEARCH; LARGE-SCALE; EXTRACTION; AGREEMENT; LINKING
AB When working on a project, software developers must be familiar with computing concepts, standards, and technologies related to the project. We present a novel approach, called Scode, to automatically identify those concepts using the project's documentation. Scode combines entity linking and network analysis techniques specialized for the software development domain. In addition to concepts explicitly mentioned in the documentation, Scode can retrieve implicit concepts related to the project's domain. Concepts identified by Scode have a recognized meaning that is consistent across projects. We compared Scode to different baselines and found that it is more effective at mapping projects to a consistent concept space.
C1 [Nassif, Mathieu; Robillard, Martin P.] McGill Univ, Sch Comp Sci, Montreal, PQ H3A 0G4, Canada.
C3 McGill University
RP Nassif, M (corresponding author), McGill Univ, Sch Comp Sci, Montreal, PQ H3A 0G4, Canada.
EM mnassif@cs.mcgill.ca; robillard@acm.org
FU Natural Sciences and Engineering Research Council of Canada; Fonds de
   recherche du Quebec - Nature et technologies
FX & nbsp;This work was supported by the Natural Sciences and Engineering
   Research Council of Canada and the Fonds de recherche du Quebec - Nature
   et technologies.& nbsp;
CR Abebe S. L., 2011, 2011 18th Working Conference on Reverse Engineering, P77, DOI 10.1109/WCRE.2011.19
   Abebe Surafel Lemma, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P156, DOI 10.1109/ICPC.2010.29
   Abebe SL, 2015, SCI COMPUT PROGRAM, V98, P680, DOI 10.1016/j.scico.2014.09.012
   Akbas E, 2017, PROC VLDB ENDOW, V10, P1298, DOI 10.14778/3137628.3137640
   Andrew M., 2002, MALLET MACHINE LEARN
   [Anonymous], 2017, Standard ISO/IEC/IEEE 24765:2017(E)
   Arora C, 2017, IEEE T SOFTWARE ENG, V43, P918, DOI 10.1109/TSE.2016.2635134
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   BIGGERSTAFF TJ, 1993, PROC INT CONF SOFTW, P482, DOI 10.1109/ICSE.1993.346017
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   CARVALHO DS, 2014, CEUR WORKSHOP P, V1272, P177
   Chang  J., 2009, ADV NEURAL INFORM PR, P288, DOI DOI 10.5555/2984093.2984126
   Chen CY, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962588
   Chen CY, 2019, EMPIR SOFTW ENG, V24, P1155, DOI 10.1007/s10664-018-9657-y
   Cleland-Huang J., 2014, FOSE P FUTURE SOFTWA, P55
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cornolti Marco., 2013, Proceedings of the 22nd international conference on World Wide Web, P249, DOI [10.1145/2488388.2488411, DOI 10.1145/2488388.2488411]
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Ezzini S, 2021, PROC INT CONF SOFTW, P1485, DOI 10.1109/ICSE43902.2021.00133
   F-Droid Limited and Contributors, 2022, F DROID
   Falleri J.-R, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P4, DOI 10.1109/ICPC.2010.12
   Fang YX, 2020, VLDB J, V29, P353, DOI 10.1007/s00778-019-00556-x
   Ferrari A, 2019, AUTOMAT SOFTW ENG, V26, P559, DOI 10.1007/s10515-019-00261-7
   Gabrilovich E, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1606
   Hu JF, 2017, IEEE T KNOWL DATA EN, V29, P2455, DOI 10.1109/TKDE.2017.2730873
   Huang X, 2015, PROC VLDB ENDOW, V9, P276
   Ji Heng, 2011, ACL, P1148
   Kelly MB, 2011, IEEE INT WORK C SO, P135, DOI 10.1109/SCAM.2011.23
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Lehmann J, 2015, SEMANT WEB, V6, P167, DOI 10.3233/SW-140134
   Liang C, 2017, AAAI CONF ARTIF INTE, P4786
   Liu MW, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P120, DOI 10.1145/3338906.3338971
   Liu Y, 2020, IEEE INT CONF AUTOM, P834, DOI 10.1145/3324884.3416628
   Lizorkin D., 2009, PROC 18 INT C WORLD, P1221
   Ma SY, 2021, IEEE T SOFTWARE ENG, V47, P2296, DOI 10.1109/TSE.2019.2946830
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Meij E, 2012, P 5 ACM INT C WEB SE, P563, DOI DOI 10.1145/2124295.2124364
   Moro A., 2014, Trans. Assoc. Computat. Ling., V2, P231, DOI [10.1162/tacl_a_00179, DOI 10.1162/TACL_A_00179]
   Nassif M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09918-4
   Navigli R, 2012, ARTIF INTELL, V193, P217, DOI 10.1016/j.artint.2012.07.001
   Pan LM, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1447, DOI 10.18653/v1/P17-1133
   Petrenko M, 2008, INT C PROGRAM COMPRE, P13, DOI 10.1109/ICPC.2008.14
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Poshyvanyk D, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377660
   Rahman MM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P621, DOI 10.1145/3236024.3236065
   Ratiu D, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P203
   Rigby PC, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P832, DOI 10.1109/ICSE.2013.6606629
   Robillard MP, 2020, SIGCSE 2020: PROCEEDINGS OF THE 51ST ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P72, DOI 10.1145/3328778.3366832
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   Shen W, 2015, IEEE T KNOWL DATA EN, V27, P443, DOI 10.1109/TKDE.2014.2327028
   SOKAL ROBERT R., 1958, UNIV KANSAS SCI BULL, V38, P1409
   Sozio M., 2010, P ACM SIGKDD INT C K, P939
   Szymanski J, 2019, AI COMMUN, V32, P235, DOI 10.3233/AIC-190581
   Nguyen TD, 2017, PROC INT CONF SOFTW, P438, DOI 10.1109/ICSE.2017.47
   Usbeck R, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P1133, DOI 10.1145/2736277.2741626
   Vrandecic D, 2014, COMMUN ACM, V57, P78, DOI 10.1145/2629489
   Wang C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P97, DOI 10.1145/3338906.3338963
   Wang L, 2017, PROC IEEE ACM INT C, P189, DOI 10.1109/ICSE-C.2017.102
   Yang JQ, 2014, EMPIR SOFTW ENG, V19, P1856, DOI 10.1007/s10664-013-9264-x
   Ye DH, 2018, EMPIR SOFTW ENG, V23, P3129, DOI 10.1007/s10664-018-9608-7
   Ye DH, 2016, PROC IEEE INT CONF S, P389, DOI 10.1109/ICSME.2016.11
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Zhao XJ, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P56, DOI 10.1109/SANER.2017.7884609
   Zhou C, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P944, DOI 10.1145/3236024.3275428
   Zou J, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P446, DOI 10.1109/MSR.2015.60
NR 69
TC 1
Z9 1
U1 3
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2023
VL 49
IS 7
BP 3660
EP 3674
DI 10.1109/TSE.2023.3265855
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA M9RA6
UT WOS:001033501500001
DA 2024-07-18
ER

PT J
AU Chen, YJ
   Gao, CY
   Ren, XX
   Peng, Y
   Xia, X
   Lyu, MR
AF Chen, Yujia
   Gao, Cuiyun
   Ren, Xiaoxue
   Peng, Yun
   Xia, Xin
   Lyu, Michael R. R.
TI API Usage Recommendation Via Multi-View Heterogeneous Graph
   Representation Learning
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Java; Source coding; Benchmark testing; Software; Representation
   learning; Programming; API recommendation; graph representation
   learning; multi-view heterogeneous graphs
AB Developers often need to decide which APIs to use for the functions being implemented. With the ever-growing number of APIs and libraries, it becomes increasingly difficult for developers to find appropriate APIs, indicating the necessity of automatic API usage recommendation. Previous studies adopt statistical models or collaborative filtering methods to mine the implicit API usage patterns for recommendation. However, they rely on the occurrence frequencies of APIs for mining usage patterns, thus prone to fail for the low-frequency APIs. Besides, prior studies generally regard the API call interaction graph as homogeneous graph, ignoring the rich information (e.g., edge types) in the structure graph. In this work, we propose a novel method named MEGA for improving the recommendation accuracy especially for the low-frequency APIs. Specifically, besides call interaction graph, MEGA considers another two new heterogeneous graphs: global API co-occurrence graph enriched with the API frequency information and hierarchical structure graph enriched with the project component information. With the three multi-view heterogeneous graphs, MEGA can capture the API usage patterns more accurately. Experiments on three Java benchmark datasets demonstrate that MEGA significantly outperforms the baseline models by at least 19% with respect to the Success Rate@1 metric. Especially, for the low-frequency APIs, MEGA also increases the baselines by at least 55% regarding the Success Rate@1 score.
C1 [Chen, Yujia; Gao, Cuiyun] Harbin Inst Technol, Shenzhen 518055, Guangdong, Peoples R China.
   [Ren, Xiaoxue; Peng, Yun; Lyu, Michael R. R.] Chinese Univ Hong Kong, Hong Kong, Peoples R China.
   [Xia, Xin] Software Engn Applicat Technol Lab, Huawei 518129, Peoples R China.
C3 Harbin Institute of Technology; Chinese University of Hong Kong
RP Gao, CY (corresponding author), Harbin Inst Technol, Shenzhen 518055, Guangdong, Peoples R China.
EM yujiachen@stu.hit.edu.cn; gcyydxf@gmail.com; xiaoxueren@cse.cuhk.edu.hk;
   ypeng@cse.cuhk.edu.hk; xin.xia@acm.org; lyu@cse.cuhk.edu.hk
RI Peng, Yun/IZQ-0970-2023
OI Peng, Yun/0000-0003-1936-5598; Xia, Xin/0000-0002-6302-3256; chen,
   yujia/0000-0003-2901-0643
FU National Key R&D Program of China [2022YFB3103900]; National Natural
   Science Foundation of China [62002084]; Natural Science Foundation of
   Guangdong Province [2023A1515011959]; Shenzhen Basic Research
   [JCYJ20220531095214031]; Guangdong Provincial Key Laboratory of Novel
   Security Intelligence Technologies [2022B1212010005]; Major Key Project
   of PCL [PCL2022A03, PCL2021A02, PCL2021A09]
FX This work was supported in part by the National Key R & D Program of
   China under Grant 2022YFB3103900, in part by the National Natural
   Science Foundation of China under Grant 62002084, in part by the Natural
   Science Foundation of Guangdong Province under Grant 2023A1515011959,in
   part by Shenzhen Basic Research under Grant JCYJ20220531095214031, in
   part by Guangdong Provincial Key Laboratory of Novel Security
   Intelligence Technologies under Grant 2022B1212010005, and in part by
   the Major Key Project of PCL under Grants PCL2022A03, PCL2021A02, and
   PCL2021A09
CR Acharya Mithun, 2007, P 6 JOINT M EUROPEAN, P25, DOI [DOI 10.1145/1287624.1287630, 10.1145/1287624.1287630]
   Agarap AF, 2018, arXiv, DOI 10.48550/arXiv.1803.08375
   Ahmed S. E., 2006, TECHNOMETRICS, V48, P573
   Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   Nguyen AT, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P858, DOI 10.1109/ICSE.2015.336
   Nguyen AT, 2012, PROC INT CONF SOFTW, P1407, DOI 10.1109/ICSE.2012.6227236
   Buse RPL, 2012, PROC INT CONF SOFTW, P782, DOI 10.1109/ICSE.2012.6227140
   Cosmo RD, 2017, P 14 INT C DIG PRES
   Daqing Hou, 2011, 2011 18th Working Conference on Reverse Engineering, P131, DOI 10.1109/WCRE.2011.24
   Fowkes J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P254, DOI 10.1145/2950290.2950319
   Glorot X., 2010, INT C ARTIFICIAL INT, P249
   Gu XD, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P602, DOI 10.1109/ASE.2019.00061
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Gvero I., 2013, SIGSOFTSoftw. Eng. Notes, V38, DOI [10.1145/2464526.2464552, DOI 10.1145/2464526.2464552]
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Kingma D. P., 2014, arXiv
   Konstan J., 2001, P 10 INT C WORLD WID, P285
   Ling CY, 2019, J COMPUT SCI TECH-CH, V34, P993, DOI 10.1007/s11390-019-1956-2
   Ling CY, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P36, DOI 10.1109/SANER50967.2021.00013
   Liu XY, 2018, IEEE INT CONF AUTOM, P282, DOI 10.1145/3238147.3238216
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Nguyen PT, 2019, PROC INT CONF SOFTW, P1050, DOI 10.1109/ICSE.2019.00109
   Nguyen T. T., P 7 JOINT M EUR SOFT
   Oracle, 2022, JDK 18 DOC
   Peng Y, 2023, INT J PAVEMENT ENG, V24, DOI 10.1080/10298436.2022.2068546
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   Sven Amann, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P265, DOI 10.1109/MSR.2019.00053
   Thung F, 2013, IEEE INT CONF AUTOM, P290, DOI 10.1109/ASE.2013.6693088
   Wang J, 2013, IEEE WORK CONF MIN S, P319, DOI 10.1109/MSR.2013.6624045
   Wang Z, 2020, PROCEEDINGS OF THE 43RD INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '20), P219, DOI 10.1145/3397271.3401141
   Wang ZY, 2020, PROCEEDINGS OF THE 43RD INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '20), P169, DOI 10.1145/3397271.3401142
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Yu ZX, 2021, IEEE T SOFTWARE ENG, V47, P969, DOI 10.1109/TSE.2019.2910516
   Zhang F., P 27 ACM INT C INF K
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
   Zhou Y., 2021, P 29 ACM JOINT EUR S
NR 37
TC 4
Z9 4
U1 1
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2023
VL 49
IS 5
BP 3289
EP 3304
DI 10.1109/TSE.2023.3252259
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA G8MH8
UT WOS:000991628700014
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, WW
   Guo, SJ
   Zhang, HY
   Sui, YL
   Xue, YX
   Xu, Y
AF Zhang, Weiwei
   Guo, Shengjian
   Zhang, Hongyu
   Sui, Yulei
   Xue, Yinxing
   Xu, Yun
TI Challenging Machine Learning-Based Clone Detectors via
   Semantic-Preserving Code Transformations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cloning; Codes; Detectors; Semantics; Source coding; Robustness;
   Training; Clone detection; code transformaiton; semantic clone; machinae
   learning
ID NEURAL-NETWORKS; SEARCH; GAME; GO
AB Software clone detection identifies similar or identical code snippets. It has been an active research topic that attracts extensive attention over the last two decades. In recent years, machine learning (ML) based detectors, especially deep learning-based ones, have demonstrated impressive capability on clone detection. It seems that this longstanding problem has already been tamed owing to the advances in ML techniques. In this work, we would like to challenge the robustness of the recent ML-based clone detectors through code semantic-preserving transformations. We first utilize fifteen simple code transformation operators combined with commonly-used heuristics (i.e., Random Search, Genetic Algorithm, and Markov Chain Monte Carlo) to perform equivalent program transformation. Furthermore, we propose a deep reinforcement learning-based sequence generation (DRLSG) strategy to effectively guide the search process of generating clones that could escape from the detection. We then evaluate the ML-based detectors with the pairs of original and generated clones. We realize our method in a framework named CloneGen (stands for Clone Generator). CloneGen In evaluation, we challenge the three state-of-the-art ML-based detectors and four traditional detectors with the code clones after semantic-preserving transformations via the aid of CloneGen. Surprisingly, our experiments show that, despite the notable successes achieved by existing clone detectors, the ML models inside these detectors still cannot distinguish numerous clones produced by the code transformations in CloneGen. In addition, adversarial training of ML-based clone detectors using clones generated by CloneGen can improve their robustness and accuracy. Meanwhile, compared with the commonly-used heuristics, the DRLSG strategy has shown the best effectiveness in generating code clones to decrease the detection accuracy of the ML-based detectors. Our investigation reveals an explicable but always ignored robustness issue of the latest ML-based detectors. Therefore, we call for more attention to the robustness of these new ML-based detectors.
C1 [Zhang, Weiwei; Xue, Yinxing] Univ Sci & Technol China, Hefei 230052, Anhui, Peoples R China.
   [Xu, Yun] Univ Sci & Technol China, Dept Comp Sci, Hefei 230052, Anhui, Peoples R China.
   [Guo, Shengjian] Baidu Secur, Beijing 100085, Peoples R China.
   [Zhang, Hongyu] Univ Newcastle, Callaghan, NSW 2308, Australia.
   [Zhang, Hongyu] Chongqing Univ, Chongqing 400044, Peoples R China.
   [Sui, Yulei] Univ New South Wales, Sch Comp Sci & Engn, Sydney, NSW 2052, Australia.
C3 Chinese Academy of Sciences; University of Science & Technology of
   China, CAS; Chinese Academy of Sciences; University of Science &
   Technology of China, CAS; University of Newcastle; Chongqing University;
   University of New South Wales Sydney
RP Xue, YX (corresponding author), Univ Sci & Technol China, Hefei 230052, Anhui, Peoples R China.
EM wwzh@mail.ustc.edu.cn; sjguo@baidu.com; hyzhang@cqu.edu.cn;
   yulei.sui@uts.edu.au; yxxue@ustc.edu.cn; xuyun@ustc.edu.cn
RI Sui, Yulei/AAL-5915-2020
OI Sui, Yulei/0000-0002-9510-6574
FU National Natural Science Foundation of China [61972373]; Basic Research
   Program of Jiangsu Province [BK20201192]; CAS Pioneer Hundred Talents
   Program of China
FX This work was supported in part by the National Natural Science
   Foundation of China under Grant 61972373, in part by the Basic Research
   Program of Jiangsu Province under Grant BK20201192. The work of Yinxing
   Xue was supported in part by CAS Pioneer Hundred Talents Program of
   China
CR Aiken A., 2004, MOSS SYSTEM DETECTIN
   [Anonymous], 2000, CS200012 U VIRG
   Back T., 1996, EVOLUTIONARY ALGORIT
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Burd E, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P36, DOI 10.1109/SCAM.2002.1134103
   Chunrong Fang, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P516, DOI 10.1145/3395363.3397362
   Danicic S., 2007, LAVA SYSTEM MUTATION
   Devore-McDonald B, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428206
   Farmahinifarahani F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P84, DOI [10.1109/saner.2019.8668015, 10.1109/SANER.2019.8668015]
   Florea AC, 2019, INT J COMPUT COMMUN, V14, P154, DOI 10.15837/ijccc.2019.2.3514
   Fukushima K, 2008, IEICE T FUND ELECTR, VE91A, P316, DOI 10.1093/ietfec/e91-a.1.316
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hua W, 2021, IEEE T RELIAB, V70, P304, DOI 10.1109/TR.2020.3001918
   Islam JF, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P68, DOI 10.1109/SANER.2016.78
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Kim S, 2017, P IEEE S SECUR PRIV, P595, DOI 10.1109/SP.2017.62
   Kovacheva A., 2013, P ADV INF TECHN 6 IN, P104
   Lague B, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P314, DOI 10.1109/ICSM.1997.624264
   Laszlo T, 2009, ANN U SCI BUDAPESTIN, V30, P3
   Lee S., 2005, SDD: high performance code clone detection system for large scale source code, P140
   Levine S, 2016, J MACH LEARN RES, V17
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Liu Chao, 2006, Proc. 12th ACMSIGKDD Int'l Con. on Knowledge Discovery and Data Mining (KDD 06), P872, DOI DOI 10.1145/1150402.1150522
   Liu H, 2017, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2017.28
   Manning C.D., 1999, FDN STAT NATURAL LAN
   McMinn P, 2019, IEEE T SOFTWARE ENG, V45, P427, DOI 10.1109/TSE.2017.2786286
   Mnih V, 2015, NATURE, V518, P529, DOI 10.1038/nature14236
   Mockus Audris, 2007, International Workshop on Emerging Trends in FLOSS Research and Development, P7, DOI [10.1109/FLOSS.2007.10, DOI 10.1109/FLOSS.2007.10]
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Navarro G, 2001, ACM COMPUT SURV, V33, P31, DOI 10.1145/375360.375365
   Ng AY, 1999, MACHINE LEARNING, PROCEEDINGS, P278
   Pawlowski Andre, 2016, Detection of Intrusions and Malware, and Vulnerability Assessment. 13th International Conference, DIMVA 2016. Proceedings: LNCS 9721, P165, DOI 10.1007/978-3-319-40667-1_9
   Petrovic G, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P163, DOI 10.1145/3183519.3183521
   Picheta D, 2020, Arxiv, DOI arXiv:2003.03449
   Puri Ruchir, 2021, arXiv
   Ragkhitwetsagul C, 2019, EMPIR SOFTW ENG, V24, P2236, DOI 10.1007/s10664-019-09697-7
   Ragkhitwetsagul C, 2018, EMPIR SOFTW ENG, V23, P2464, DOI 10.1007/s10664-017-9564-7
   Raychev V, 2015, ACM SIGPLAN NOTICES, V50, P111, DOI [10.1145/2775051.2677009, 10.1145/2676726.2677009]
   Ren XL, 2021, PROCEEDINGS OF THE 42ND ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '21), P142, DOI 10.1145/3453483.3454035
   Richey M, 2010, AM MATH MON, V117, P383, DOI 10.4169/000298910X485923
   Rocke DM, 2000, J Am Stat Assoc, V95, P347, DOI 10.2307/2669583
   Roy CK, 2009, IEEE ICST WORKSHOP, P157, DOI 10.1109/ICSTW.2009.18
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Schleimer Saul, 2003, P 2003 ACM SIGMOD IN, P76, DOI [10.1145/872757.872770, DOI 10.1145/872757.872770]
   Schulman J, 2017, Arxiv, DOI arXiv:1707.06347
   Schulze S, 2013, INT WORKS SOFTW CLON, P62, DOI 10.1109/IWSC.2013.6613045
   Sheneamer A, 2016, 2016 15TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2016), P1024, DOI [10.1109/ICMLA.2016.156, 10.1109/ICMLA.2016.0185]
   Shi XJ, 2015, ADV NEUR IN, V28
   Silver D, 2017, NATURE, V550, P354, DOI 10.1038/nature24270
   Silver D, 2016, NATURE, V529, P484, DOI 10.1038/nature16961
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Svajlenko J, 2021, IEEE T SOFTWARE ENG, V47, P1060, DOI 10.1109/TSE.2019.2912962
   Svajlenko J, 2015, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2015.7332459
   Svajlenko J, 2014, PROC IEEE INT CONF S, P321, DOI 10.1109/ICSME.2014.54
   Svajlenko J, 2014, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSME.2014.77
   Szepesvari C., 2010, Synthesis lectures on artificial intelligence and machine learning, V4, P1
   Tiarks R, 2009, IEEE INT WORK C SO, P67, DOI 10.1109/SCAM.2009.16
   Tufano M, 2018, IEEE WORK CONF MIN S, P542, DOI 10.1145/3196398.3196431
   Van Rysselberghe F, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P336, DOI 10.1109/ASE.2004.1342759
   Walker A, 2019, APPL COMPUT REV, V19, P28, DOI [10.1145/3338840.3355654, 10.1145/3381307.3381310]
   Wang M, 2017, ASIA PAC SOFWR ENG, P100, DOI 10.1109/APSEC.2017.16
   Wang P, 2016, 1ST IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY, P128, DOI 10.1109/EuroSP.2016.21
   Wang PC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1066, DOI 10.1145/3180155.3180179
   Wang WH, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3409331
   Wang XR, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P280
   Wei HH, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2840
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Wu YM, 2020, IEEE INT CONF AUTOM, P821, DOI 10.1145/3324884.3416562
   Xu H, 2017, Arxiv, DOI arXiv:1710.01139
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Yu H, 2019, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2019.00021
   Zhang HZ, 2020, AAAI CONF ARTIF INTE, V34, P1169
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhang J, 2019, IEEE T SOFTWARE ENG, V45, P898, DOI 10.1109/TSE.2018.2809496
   Zhang YY, 2019, AAAI CONF ARTIF INTE, P5813
   Zhao G, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/3236024.3236068
   Zhu XX, 2016, INT J COMPUT VISION, V119, P76, DOI 10.1007/s11263-015-0812-2
   Zou Y, 2020, IEEE INT CONF AUTOM, P931, DOI 10.1145/3324884.3416541
NR 86
TC 3
Z9 3
U1 5
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2023
VL 49
IS 5
BP 3052
EP 3070
DI 10.1109/TSE.2023.3240118
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA G8MH8
UT WOS:000991628700002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chen, Z
   Zhang, Q
   Wu, J
   Yan, JQ
   Xue, JL
AF Chen, Zhe
   Zhang, Qi
   Wu, Jun
   Yan, Junqi
   Xue, Jingling
TI A Source-Level Instrumentation Framework for the Dynamic Analysis of
   Memory Safety
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Optimization; Instruments; Codes; Benchmark testing; Heuristic
   algorithms; Monitoring; Aerodynamics; Software quality; software
   testing; dynamic analysis; bug finding; memory errors; code
   instrumentation
AB Low-level control makes C unsafe, resulting in memory errors that can lead to data corruption, security vulnerabilities or program crashes. Dynamic analysis tools, which have been widely used for detecting memory errors at runtime, usually perform instrumentation at the IR or binary level. However, these non-source-level instrumentation frameworks and tools suffer from two inherent drawbacks: optimization sensitivity and platform dependence. Due to optimization sensitivity, the user of these tools must trade either performance for effectiveness by compiling the program at -O0 or effectiveness for performance by compiling the program at a higher optimization level, say, -O3. In this paper, we propose a new source-level instrumentation framework to overcome these two drawbacks, and implement it in a new dynamic analysis tool, called Movec, that adopts a pointer-based monitoring algorithm. We have evaluated Movec comprehensively by using the NIST's SARD benchmark suite (1152 programs), a set of 126 microbenchmarks (with ground truth), a set of 20 MiBench benchmarks and 5 pure-C SPEC CPU 2017 benchmarks. In terms of effectiveness, Movec outperforms three state-of-the-art dynamic analysis tools, AddressSanitizer, SoftBoundCETS and Valgrind, for all the standard optimization levels (from -O0 to -O3). In terms of performance, Movec outperforms SoftBoundCETS and Valgrind, and is slower than AddressSanitizer but consumes less memory.
C1 [Chen, Zhe; Zhang, Qi; Wu, Jun; Yan, Junqi] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 211106, Jiangsu, Peoples R China.
   [Xue, Jingling] UNSW, Sch Comp Sci & Engn, Sydney, NSW 2052, Australia.
C3 Nanjing University of Aeronautics & Astronautics; University of New
   South Wales Sydney
RP Chen, Z (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 211106, Jiangsu, Peoples R China.
EM zhechen@nuaa.edu.cn; zhangqi0720@126.com; wujun2418@163.com;
   yanjunqi0829@163.com; jingling@cse.unsw.edu.au
OI Chen, Zhe/0000-0002-4707-2402
FU National Natural Science Foundation of China [62172217, U1533130]; Civil
   Aviation Administration of China [U1533130]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grant 62172217, and in part by the Joint
   Research Funds of National Natural Science Foundation of China and Civil
   Aviation Administration of China under Grant U1533130.
CR Akritidis P., 2009, P 18 C USENIX SEC S, V10, P51
   Chen Z, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P296, DOI 10.1145/3460319.3464807
   Chen Z, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P341, DOI 10.1145/3293882.3330581
   Chen Z, 2018, PROC IEEE ACM INT C, P189, DOI 10.1145/3183440.3195090
   Chen Z, 2015, SOFTWARE PRACT EXPER, V45, P989, DOI 10.1002/spe.2242
   Chen Zhe, 2021, Movec-MSBench: A Memory Safety Benchmark Suite, Version 2.0.1
   Chen Zhe, 2021, The MiBench and SPEC Benchmark Suites
   Dhurjati D., 2006, 28th International Conference on Software Engineering Proceedings, P162, DOI 10.1145/1134285.1134309
   Dudina IA, 2017, PROGRAM COMPUT SOFT+, V43, P277, DOI 10.1134/S0361768817050024
   Guthaus MR, 2001, WWC-4: IEEE INTERNATIONAL WORKSHOP ON WORKLOAD CHARACTERIZATION, P3, DOI 10.1109/WWC.2001.990739
   HASABNIS N., 2012, P 10 INT S CODE GENE, P135
   HASTINGS R, 1991, PROCEEDINGS OF THE WINTER 1992 USENIX CONFERENCE, P125
   Intel, 2016, INTEL MEMORY PROTECT
   Jones Richard WM, 1997, AADEBUG, V97, P13
   Le Wei, 2008, PROC 16 ACM SIGSOFT, P272
   Li Lian., 2010, Proceedings of the eighteenth ACM SIGSOFT international symposium on Foundations of software engineering, FSE'10, P317, DOI [10.1145/1882291.1882338, DOI 10.1145/1882291.1882338]
   Liu TP, 2016, PROC INT CONF SOFTW, P911, DOI 10.1145/2884781.2884784
   Loginov A., 2001, Fundamental Approaches to Software Engineering. 4th International Conference, FASE 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2029), P217
   Nagarakatte S., 2014, P ANN IEEE ACM INT S, P175
   NAGARAKATTE S., 2015, SUMMIT ADV PROGRAMMI, P190
   Nagarakatte S, 2012, CONF PROC INT SYMP C, P189, DOI 10.1109/ISCA.2012.6237017
   Nagarakatte S, 2010, ACM SIGPLAN NOTICES, V45, P31
   Nagarakatte S, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P245, DOI 10.1145/1542476.1542504
   Necula GC, 2005, ACM T PROGR LANG SYS, V27, P477, DOI 10.1145/1065887.1065892
   Necula GC, 2002, ACM SIGPLAN NOTICES, V37, P128, DOI 10.1145/565816.503286
   Nethercote N, 2007, ACM SIGPLAN NOTICES, V42, P89, DOI 10.1145/1273442.1250746
   Nethercote N, 2007, VEE'07: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON VIRTUAL EXECUTION ENVIRONMENTS, P65
   Oleksenko O, 2018, P ACM MEAS ANAL COMP, V2, DOI 10.1145/3224423
   Oracle, 2021, SPARC ADI
   Patil H, 1997, SOFTWARE PRACT EXPER, V27, P87, DOI 10.1002/(SICI)1097-024X(199701)27:1<87::AID-SPE78>3.0.CO;2-P
   Programming Languages-C, 1999, 98991999 ISOIEC
   Rosu G, 2009, LECT NOTES COMPUT SC, V5779, P132, DOI 10.1007/978-3-642-04694-0_10
   Ruwase Olatunji, 2004, NDSS, P159
   Serebryany Konstantin, 2012, USENIX, P309
   Serebryany Kostya, 2019, USENIX Magazine, V44, P12
   Serebryany Kostya, 2018, arXiv, DOI [10.48550/ARXIV.1802.09517, DOI 10.48550/ARXIV.1802.09517]
   Seward J, 2005, USENIX Association Proceedings of the General Track: 2005 UNENIX Annual Technical Conference, P17
   Simpson MS, 2013, SOFTWARE PRACT EXPER, V43, P93, DOI 10.1002/spe.2105
   Simpson MS, 2010, IEEE INT WORK C SO, P199, DOI 10.1109/SCAM.2010.15
   Suan Hsi Yong, 2003, Software Engineering Notes, V28, P307, DOI 10.1145/949952.940113
   Sui YL, 2020, IEEE T SOFTWARE ENG, V46, P812, DOI 10.1109/TSE.2018.2869336
   Sui YL, 2014, IEEE T SOFTWARE ENG, V40, P107, DOI 10.1109/TSE.2014.2302311
   Sui Yulei, 2012, P INT S SOFTW TEST A, P254, DOI [DOI 10.1145/2338965.2336784, DOI 10.1145/04000800.2336784]
   The Clang Team, 2021, HARDWARE ASSISTED AD
   Vorobyov K, 2017, ACM SIGPLAN NOTICES, V52, P47, DOI 10.1145/3156685.3092269
   Vorobyov K, 2017, LECT NOTES COMPUT SC, V10548, P294, DOI 10.1007/978-3-319-67531-2_18
   Wei Xu, 2004, Software Engineering Notes, V29, P117, DOI 10.1145/1041685.1029913
   Xu GQ, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491511
   Ye D, 2014, PROC INT SYMP SOFTW, P88, DOI 10.1109/ISSRE.2014.20
   Zeng Q, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P367
   Zhao JZ, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P427
NR 51
TC 2
Z9 2
U1 2
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2107
EP 2127
DI 10.1109/TSE.2022.3210580
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600039
DA 2024-07-18
ER

PT J
AU Ge, XT
   Yu, SC
   Fang, CR
   Zhu, Q
   Zhao, ZH
AF Ge, Xiuting
   Yu, Shengcheng
   Fang, Chunrong
   Zhu, Qi
   Zhao, Zhihong
TI Leveraging Android Automated Testing to Assist Crowdsourced Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Crowdsourced testing; dynamic analysis; static analysis; test
   recommendation; test assistance
ID EXPLORATION
AB Crowdsourced testing is an emerging trend in mobile application testing. The openness of crowdsourced testing provides a promising way to conduct large-scale and user-oriented testing scenarios on various mobile devices, while it also brings a problem, i.e., crowdworkers with different levels of testing experience severely threaten the quality of crowdsourced testing. Currently, many approaches have been proposed and studied to improve crowdsourced testing. However, these approaches do not fundamentally improve the ability of crowdworkers. In essence, the low-quality crowdsourced testing is caused by crowdworkers who are unfamiliar with the App Under Test (AUT) and do not know which part of the AUT should be tested. To address this problem, we propose a testing assistance approach, which leverages Android automated testing (i.e., dynamic and static analysis) to improve crowdsourced testing. Our approach constructs an Annotated Window Transition Graph (AWTG) model for the AUT by merging dynamic and static analysis results. Based on the AWTG model, our approach implements a testing assistance pipeline that provides the test task extraction, test task recommendation, and test task guidance to assist crowdworkers in testing the AUT. We experimentally evaluate our approach on real-world AUTs. The quantitative results demonstrate that our approach can effectively and efficiently assist crowdsourced testing. Besides, the qualitative results from a user study confirm the usefulness of our approach.
C1 [Ge, Xiuting; Yu, Shengcheng; Fang, Chunrong; Zhu, Qi; Zhao, Zhihong] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
C3 Nanjing University
RP Fang, CR (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
EM dg20320002@smail.nju.edu.cn; yusc@smail.nju.edu.cn;
   fangchunrong@nju.edu.cn; 1506411201@qq.com; zhaozhih@nju.edu.cn
RI Fang, Chunrong/GPW-9872-2022
OI Fang, Chunrong/0000-0002-9930-7111; Yu, Shengcheng/0000-0003-4640-8637
FU National Natural Science Foundation of China [62141215, 62272220,
   61802171]; Science, Technology and Innovation Commission of Shenzhen
   Municipality [CJGJZD20200617103001003]
FX This work was supported in part by the National Natural Science
   Foundationof China under Grants 62141215, 62272220, and 61802171, and in
   part bythe Science, Technology and Innovation Commission of Shenzhen
   Municipality under Grant CJGJZD20200617103001003.
CR Almeida M, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P45, DOI 10.1145/3178876.3186035
   Amalfitano D, 2019, INFORM SOFTWARE TECH, V105, P95, DOI 10.1016/j.infsof.2018.08.007
   Amalfitano D, 2015, IEEE SOFTWARE, V32, P53, DOI 10.1109/MS.2014.55
   [Anonymous], 2022, Smartphone market share from March 2014 to December 2015, by camera resolution
   [Anonymous], 2021, BUG DEFINITION
   [Anonymous], 2022, F-droid
   [Anonymous], 2022, ANDROID MONKEY
   [Anonymous], 2021, BAIDU CROWD TEST
   Azim T, 2013, ACM SIGPLAN NOTICES, V48, P641, DOI [10.1145/2509136.2509549, 10.1145/2544173.2509549]
   Bozkurt M., 2011, Proceedings of the 2011 IEEE 6th International Symposium on Service Oriented System Engineering (SOSE 2011), P13, DOI 10.1109/SOSE.2011.6139088
   Chao Guo, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P545, DOI 10.1145/3395363.3404363
   Chen Y, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376835
   Chen ZY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P272, DOI 10.1145/2591062.2591153
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Cui Qiang, 2017, PROC 29 INT C SOFTW, V17, P1
   Dias Neto A. C., 2007, P ACM INT WORKSH EMP, P31
   Dolstra E, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P332, DOI 10.1109/ICST.2013.44
   Fan LL, 2018, IEEE INT CONF AUTOM, P486, DOI 10.1145/3238147.3238170
   Fan LL, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P408, DOI 10.1145/3180155.3180222
   Feng Y, 2016, IEEE INT CONF AUTOM, P202, DOI 10.1145/2970276.2970367
   Feng Y, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P225, DOI 10.1145/2786805.2786862
   Gardlo B, 2014, IEEE ICC, P1070, DOI 10.1109/ICC.2014.6883463
   GATOR, 2022, US
   Github, 2022, About us
   Gómez M, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P88, DOI [10.1109/MobileSoft.2016.033, 10.1145/2897073.2897088]
   Guo WN, 2020, PROC IEEE INT CONF S, P557, DOI 10.1109/ICSME46990.2020.00059
   Hao R, 2019, PROC INT CONF SOFTW, P900, DOI 10.1109/ICSE.2019.00096
   Hosseini M, 2014, INT CONF RES CHAL
   Hossfeld T, 2014, IEEE T MULTIMEDIA, V16, P541, DOI 10.1109/TMM.2013.2291663
   Khan A.I., 2016, P 2016 7 IEEE ANN IN, P1
   Komarov S., 2013, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, P207, DOI DOI 10.1145/2470654.2470684
   Kong PF, 2019, IEEE T RELIAB, V68, P45, DOI 10.1109/TR.2018.2865733
   Konstan J., 2001, P 10 INT C WORLD WID, P285
   Lease M., 2011, ACM SIGIR FORUM, V45, P66
   Li HY, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P390, DOI 10.1145/3293882.3339000
   Liu D, 2022, IEEE T SOFTWARE ENG, V48, P1290, DOI 10.1109/TSE.2020.3017514
   Liu Z, 2022, PROCEEDINGS OF THE 2022 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI' 22), DOI 10.1145/3491102.3501903
   Lord F. M., 2017, SCALING, P402
   Mao K, 2017, IEEE INT CONF AUTOM, P16, DOI 10.1109/ASE.2017.8115614
   Mao K, 2017, J SYST SOFTWARE, V126, P57, DOI 10.1016/j.jss.2016.09.015
   MERTON RK, 1968, SCIENCE, V159, P56, DOI 10.1126/science.159.3810.56
   Mirzaei N, 2016, PROC INT CONF SOFTW, P559, DOI 10.1145/2884781.2884853
   MoocTest, 2021, US
   Pazzani M. J., 2007, The Adaptive Web. Methods and Strategies of Web Personalization, P325
   Reeves B. N., 2007, P IEEE INT C ADV LEA, P887
   Romano J., 2006, ANN M FLORIDA ASS IN
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Singer Y, 2013, WWW, P1157
   Su T, 2022, IEEE T SOFTWARE ENG, V48, P1115, DOI 10.1109/TSE.2020.3013438
   Su T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P245, DOI 10.1145/3106237.3106298
   Swearngin A., 2019, PROC ACM C HUM FACTO, P1
   Testin, 2021, US
   utas, 2021, US
   VOAS JM, 1992, IEEE T SOFTWARE ENG, V18, P717, DOI 10.1109/32.153381
   Wang H, 2018, 2018 IEEE 3RD INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND BIG DATA ANALYSIS (ICCCBDA), P78, DOI 10.1109/ICCCBDA.2018.8386490
   Wang JJ, 2021, IEEE T SOFTWARE ENG, V47, P1259, DOI 10.1109/TSE.2019.2918520
   Wang LL, 2019, INT SYMP EMP SOFTWAR, P128
   Wang PF, 2019, INT CON DISTR COMP S, P1971, DOI 10.1109/ICDCS.2019.00195
   Wang WY, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P165, DOI 10.1145/3460319.3464828
   Wang XM, 2020, IEEE T VEH TECHNOL, V69, P5570, DOI 10.1109/TVT.2020.2982243
   Wang Y., 2016, P 5 SIGPLAN INT WORK, P18
   Wu L, 2023, IEEE T KNOWL DATA EN, V35, P4425, DOI 10.1109/TKDE.2022.3145690
   Xie M, 2017, PROC INT SYMP SOFTW, P316, DOI 10.1109/ISSRE.2017.25
   Yan JW, 2020, PROC INT CONF SOFTW, P457, DOI 10.1145/3377811.3380347
   Yang SQ, 2018, AUTOMAT SOFTW ENG, V25, P833, DOI 10.1007/s10515-018-0237-6
   Yang SQ, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P89, DOI 10.1109/ICSE.2015.31
   Yu SC, 2021, PROC INT CONF SOFTW, P946, DOI 10.1109/ICSE43902.2021.00090
   Yu SC, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1066, DOI 10.1109/ASE.2019.00103
   Yuan X, 2011, IEEE T SOFTWARE ENG, V37, P559, DOI 10.1109/TSE.2010.50
   Zahid A, 2020, INT ARAB J INF TECHN, V17, P281, DOI 10.34028/iajit/17/3/1
   Zhang T, 2017, 2017 11TH IEEE SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE), P75, DOI 10.1109/SOSE.2017.28
   Zhang Xiao-Fang, 2018, Journal of Software, V29, P69, DOI 10.13328/j.cnki.jos.005377
   Zhang YR, 2018, IEEE T MOBILE COMPUT, V17, P604, DOI 10.1109/TMC.2017.2732982
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 74
TC 0
Z9 0
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2318
EP 2336
DI 10.1109/TSE.2022.3216879
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600051
DA 2024-07-18
ER

PT J
AU Gong, LA
   Zhang, HX
   Zhang, JX
   Wei, MQ
   Huang, ZQ
AF Gong, Lina
   Zhang, Haoxiang
   Zhang, Jingxuan
   Wei, Mingqiang
   Huang, Zhiqiu
TI A Comprehensive Investigation of the Impact of Class Overlap on Software
   Defect Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Class overlap; data quality; k-nearest neighbourhood; local analysis;
   software defect prediction; software metrics
ID FALSE DISCOVERY RATE; CLASSIFICATION; CLASSIFIERS; MACHINE; ERROR
AB Software Defect Prediction (SDP) is one of the most vital and cost-efficient operations to ensure the software quality. However, there exists the phenomenon of class overlap in the SDP datasets (i.e., defective and non-defective modules are similar in terms of values of metrics), which hinders the performance as well as the use of SDP models. Even though efforts have been made to investigate the impact of removing overlapping technique on the performance of SDP, many open issues are still challenging yet unknown. Therefore, we conduct an empirical study to comprehensively investigate the impact of class overlap on SDP. Specifically, we first propose an overlapping instances identification approach by analyzing the class distribution in the local neighborhood of a given instance. We then investigate the impact of class overlap and two common overlapping instance handling techniques on the performance and the interpretation of seven representative SDP models. Through an extensive case study on 230 diversity datasets, we observe that: i) 70.0% of SDP datasets contain overlapping instances; ii) different levels of class overlap have different impacts on the performance of SDP models; iii) class overlap affects the rank of the important feature list of SDP models, particularly the feature lists at the top 2 and top 3 ranks; IV) Class overlap handling techniques could statistically significantly improve the performance of SDP models trained on datasets with over 12.5% overlap ratios. We suggest that future work should apply our KNN method to identify the overlap ratios of datasets before building SDP models.
C1 [Gong, Lina; Zhang, Jingxuan; Wei, Mingqiang; Huang, Zhiqiu] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 210095, Jiangsu, Peoples R China.
   [Zhang, Haoxiang] Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
C3 Nanjing University of Aeronautics & Astronautics; Queens University -
   Canada
RP Gong, LA (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 210095, Jiangsu, Peoples R China.
EM gonglina@nuaa.edu.cn; haoxiang.zhang@acm.org; jxzhang@nuaa.edu.cn;
   mingqiang.wei@gmail.com; zqhuang@nuaa.edu.cn
RI Chen, Jin/KBQ-0163-2024; zheng, Li/JVN-7465-2024
OI Chen, Jin/0009-0005-5844-635X; Gong, Lina/0000-0002-5272-6706
FU National Natural Science Foundation of China [62202223]; Natural Science
   Foundation of Jiangsu Province, China [BK20220881]
FX This work was support in part by the National Natural Science Foundation
   of China under Grant 62202223, and in part by the Natural Science
   Foundation of Jiangsu Province, China under Grant BK20220881.
CR Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   Altmann A, 2010, BIOINFORMATICS, V26, P1340, DOI 10.1093/bioinformatics/btq134
   [Anonymous], 2009, PROC ACM INT C PREDI
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Benjamini Y, 2001, ANN STAT, V29, P1165
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Benni KE, 2018, IEEE T SOFTWARE ENG, V44, P534, DOI 10.1109/TSE.2017.2731766
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen L, 2018, SOFTWARE QUAL J, V26, P97, DOI 10.1007/s11219-016-9342-6
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Das B, 2013, INT CONF DAT MIN WOR, P266, DOI 10.1109/ICDMW.2013.18
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Denil M, 2010, LECT NOTES ARTIF INT, V6085, P220
   EFRON B, 1983, J AM STAT ASSOC, V78, P316, DOI 10.2307/2288636
   García V, 2007, LECT NOTES COMPUT SC, V4756, P397
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Goldstein A, 2015, J COMPUT GRAPH STAT, V24, P44, DOI 10.1080/10618600.2014.907095
   Gong L., 2019, P IEEE ACM 34 INT C, P1
   Gray D, 2009, COMM COM INF SC, V43, P223
   Gupta S, 2018, KNOWL ENG REV, V33, DOI 10.1017/S0269888918000115
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Hu LY, 2016, SPRINGERPLUS, V5, DOI 10.1186/s40064-016-2941-7
   Jiarpakdee J, 2022, IEEE T SOFTWARE ENG, V48, P166, DOI 10.1109/TSE.2020.2982385
   Jiarpakdee J, 2021, IEEE T SOFTWARE ENG, V47, P320, DOI 10.1109/TSE.2019.2891758
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Langdon WB, 2016, INFORM SOFTWARE TECH, V73, P16, DOI 10.1016/j.infsof.2016.01.003
   Laradji IH, 2015, INFORM SOFTWARE TECH, V58, P388, DOI 10.1016/j.infsof.2014.07.005
   Lee HK, 2018, EXPERT SYST APPL, V98, P72, DOI 10.1016/j.eswa.2018.01.008
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Liu CX, 2012, LECT NOTES COMPUT SC, V7583, P391, DOI 10.1007/978-3-642-33863-2_39
   Madeyski L, 2015, SOFTWARE QUAL J, V23, P393, DOI 10.1007/s11219-014-9241-7
   McFee B., 2011, P IEEE ACM INT C INT, P1
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T., 2015, The promise repository of empirical software engineering data
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Migut MA, 2015, DATA MIN KNOWL DISC, V29, P273, DOI 10.1007/s10618-013-0342-x
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Napierala K, 2016, J INTELL INF SYST, V46, P563, DOI 10.1007/s10844-015-0368-1
   Nguyen T.N. D., 2010, Proceedings of the International Conference on Software Maintenance, P1, DOI DOI 10.1109/ICSM.2010.5609560
   Ni C, 2022, IEEE T SOFTWARE ENG, V48, P786, DOI 10.1109/TSE.2020.3001739
   Papakroni V., 2013, THESIS W VIRGINIA U
   Prati RC, 2004, LECT NOTES COMPUT SC, V2972, P312
   Rajbahadur GK, 2021, IEEE T SOFTWARE ENG, V48, P2245, DOI 10.1109/TSE.2021.3056941
   Rajbahadur GK, 2017, IEEE WORK CONF MIN S, P135, DOI 10.1109/MSR.2017.4
   Ribeiro M. T., 2016, PROC IEEE ACM INT C, P1
   Rufibach K, 2010, J CLIN EPIDEMIOL, V63, P938, DOI 10.1016/j.jclinepi.2009.11.009
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Tang W, 2004, PROC INT C TOOLS ART, P373
   Tantithamthavorn C., SCOTTKNOTTESD SCOTT
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P867, DOI 10.1145/2889160.2889256
   Tóth Z, 2016, LECT NOTES COMPUT SC, V9789, P625, DOI 10.1007/978-3-319-42089-9_44
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Vuttipittayamongkol P., 2021, KNOWL-BASED SYST, V212, P1
   Xiong HT, 2010, ADV INTEL SYS RES, V14, P491
   Xu Z, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110862
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Yu L, 2004, J MACH LEARN RES, V5, P1205
   Yu Z, 2021, IEEE T SOFTWARE ENG, V47, P2401, DOI 10.1109/TSE.2019.2949275
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 81
TC 10
Z9 10
U1 4
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2440
EP 2458
DI 10.1109/TSE.2022.3220740
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600059
DA 2024-07-18
ER

PT J
AU Greiler, M
   Storey, MA
   Noda, A
AF Greiler, Michaela
   Storey, Margaret-Anne
   Noda, Abi
TI An Actionable Framework for Understanding and Improving Developer
   Experience
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Productivity; Interviews; Software engineering; Codes; Task analysis;
   Shape; Industries; Developer experience; grounded theory; development
   practices; satisfaction; productivity
ID SOFTWARE; MOTIVATION
AB Developer experience is an important concern for software organizations as enhancing developer experience improves productivity, satisfaction, engagement and retention. We set out to understand what affects developer experience through semi-structured interviews with 21 developers from industry, which we transcribed and iteratively coded. Our findings elucidate factors that affect developer experience and characteristics that influence their respective importance to individual developers. We also identify strategies employed by individuals and teams to improve developer experience and the barriers that stand in their way. Lastly, we describe the coping mechanisms of developers when developer experience cannot be sufficiently improved. Our findings result in the DX Framework, an actionable conceptual framework for understanding and improving developer experience. The DX Framework provides a go-to reference for organizations that want to enable more productive and effective work environments for their developers.
C1 [Greiler, Michaela] Univ Zurich, CH-8006 Zurich, Switzerland.
   [Greiler, Michaela; Noda, Abi] DX, Salt Lake City, UT 84115 USA.
   [Storey, Margaret-Anne] Univ Victoria, Victoria, BC V8P 5C2, Canada.
C3 University of Zurich; University of Victoria
RP Greiler, M (corresponding author), Univ Zurich, CH-8006 Zurich, Switzerland.
EM greiler@ifi.uzh.ch; mstorey@uvic.ca; abinoda@getdx.com
FU DX, Salt Lake City, UT, USA; NSERC [RGPIN-2020-06843]
FX This work was supported in part by DX, Salt Lake City, UT, USA, and in
   part by NSERC under Discovery Grant RGPIN-2020-06843.
CR [Anonymous], REAL WORLD RES RESOU
   [Anonymous], 2008, Journal of Information Technology Management
   [Anonymous], 2014, The collected works of Mihalyi Csikszentmihalyi, DOI DOI 10.1007/978-94-017-9088-8_15
   [Anonymous], 2004, Motivation, emotion and cognition: Integrative perspective on intellectual functioning and development
   [Anonymous], 1992, COMPUT SUPP COOP W J, DOI DOI 10.1007/BF00752449
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Bellet C. S., 2023, SSRN Electron. J, V2023, P734, DOI DOI 10.2139/SSRN.3470734
   Besker T, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110586
   Fagerholm Fabian, 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P73, DOI 10.1109/ICSSP.2012.6225984
   Farias V, 2019, IEEE SOFTWARE, V36, P42, DOI 10.1109/MS.2018.2874325
   Forsgren Nicole, 2021, ACM Queue, V19, P20, DOI 10.1145/3454122.3454124
   Franca A. C. C., 2012, 2012 26th Brazilian Symposium on Software Engineering (SBES), P61, DOI 10.1109/SBES.2012.28
   Graziotin D., 2017, P 21 INT C EVALUATIO, P324, DOI [DOI 10.1145/3084226.3084242, 10.1145/3084226.3084242]
   Graziotin D, 2013, LECT NOTES COMPUT SC, V7983, P50, DOI 10.1007/978-3-642-39259-7_7
   Guest G, 2006, FIELD METHOD, V18, P59, DOI 10.1177/1525822X05279903
   HILGARD ER, 1980, J HIST BEHAV SCI, V16, P107, DOI 10.1002/1520-6696(198004)16:2<107::AID-JHBS2300160202>3.0.CO;2-Y
   Lenberg P, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P79, DOI 10.1145/3195836.3195847
   Liang J, 2012, ACAD MANAGE J, V55, P71, DOI 10.5465/amj.2010.0176
   MacKinnon DP, 2011, RES SOCIAL WORK PRAC, V21, P675, DOI 10.1177/1049731511414148
   Matthews G., 2004, MOTIVATION EMOTION C, P143
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   Maylett T., 2017, The Employee Experience: How to Attract Talent, Retain Top Performers, and Drive Results
   Miller C, 2021, PROC INT CONF SOFTW, P624, DOI 10.1109/ICSE43902.2021.00064
   Murphy-Hill E, 2021, IEEE T SOFTWARE ENG, V47, P582, DOI 10.1109/TSE.2019.2900308
   Rozin P, 2001, PERS SOC PSYCHOL REV, V5, P296, DOI 10.1207/S15327957PSPR0504_2
   Schneider K, 2018, J SYST SOFTWARE, V143, P59, DOI 10.1016/j.jss.2018.05.001
   Scott J., 2006, Social theory: Central issues in sociology
   Sharp H, 2009, INFORM SOFTWARE TECH, V51, P219, DOI 10.1016/j.infsof.2008.05.009
   Srivastava S., 2020, DEV VELOCITY SOFTW E
   Steglich C, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2019), P99, DOI 10.1109/CHASE.2019.00032
   Storey MA, 2021, IEEE T SOFTWARE ENG, V47, P2125, DOI 10.1109/TSE.2019.2944354
   Varpio L, 2020, ACAD MED, V95, P989, DOI 10.1097/ACM.0000000000003075
   Wagner S., 2018, A systematic review of productivity factors in software development
   Wright T A, 2000, J Occup Health Psychol, V5, P84, DOI 10.1037/1076-8998.5.1.84
NR 35
TC 3
Z9 3
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1411
EP 1425
DI 10.1109/TSE.2022.3175660
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Catano, N
AF Catano, Nestor
TI Program Synthesis for Cyber-Resilience
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Security; Resilience; Heart rate variability; Software; Java;
   Safety; Code synthesis; Event-B; formal methods; resilience; security;
   testing; verification
ID MODELS
AB Architectural tactics enable stakeholders to achieve cyber-resilience requirements. They permit systems to react, resist, detect, and recover from cyber incidents. This paper presents an approach to generate source code for architectural tactics typically used in safety and mission-critical systems. Our approach extensively relies on the use of the EVENT-B formal method and the EVENTB2JAVA code generation plugin of the Rodin platform. It leverages the modeling of architectural tactics in the EVENT-B formal language and uses a set of EVENTB2JAVA transformation rules to generate certified code implementations for the said tactics. Since resilience requirements are statements about a system over time, and because of the fact that the EVENT-B language does not provide (native) support for the writing of temporal specifications, we have implemented a novel Linear Temporal Logic (LTL) extension for EVENT-B. We support several architectural tactics for availability, performance, and security. The generated code is certified in the following sense: discharging proof obligations in Rodin - the platform we use for writing the EVENT-B models - attests to the soundness of the architectural tactics modelled in EVENT-B, and the soundness of the translation encoded by the EVENTB2JAVA tool attests to the code correctness. Finally, we demonstrate the usability of our resilience validation approach with the aid of an Autonomous Vehicle System. It further helped us increase our confidence in the soundness of our Event-B LTL extension.
C1 [Catano, Nestor] Rochester Inst Technol, Dept Comp & Informat Syst, Rochester, NY 14623 USA.
C3 Rochester Institute of Technology
RP Catano, N (corresponding author), Rochester Inst Technol, Dept Comp & Informat Syst, Rochester, NY 14623 USA.
EM nestor.catano@berkeley.edu
CR Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   Abrial JR, 2007, FUND INFORM, V77, P1
   Alkhammash E, 2015, SCI COMPUT PROGRAM, V111, P318, DOI 10.1016/j.scico.2015.06.002
   Bass Len, 2012, SEI S SOFTW
   Battistoni G, 2017, NATO 1 153 WORKSHOP, V302, P23
   Black S, 2009, COMPUTER, V42, P37, DOI 10.1109/MC.2009.284
   Bodeau D., 2017, CYBER RESILIENCY DES
   Cataño N, 2016, LAT-AM SYMP DEP COMP, P25, DOI 10.1109/LADC.2016.15
   Cataño N, 2016, LECT NOTES COMPUT SC, V9690, P166, DOI 10.1007/978-3-319-40648-0_13
   Catano Nestor, 2012, P ACM S APPL COMPUTI, P1271
   de Roever W. P., 1998, DATA REFINEMENT MODE, V46
   Gordon M. J., 1989, CURRENT TRENDS HARDW, P387, DOI [DOI 10.1007/978-1-4612-3658-0_10, DOI 10.1007/978-1-4612-3658-010]
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Kott A, 2018, Arxiv, DOI arXiv:1804.07651
   Lysenko S., 2021, P 2 INT WORKSH INT I, P353
   OWASP TOP 10, 2021, BROK ACC CONTR
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Rayside D., 2009, OOPSLA, P999
   Rivera V, 2017, INT J SOFTW TOOLS TE, V19, P31, DOI 10.1007/s10009-015-0381-2
   Rouland Q, 2019, IEEE INT C ENG COMP, P236, DOI 10.1109/ICECCS.2019.00033
   Santos J. C. S., 2020, P INT C SOFTW ENG, P250
   Santos JCS, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P220, DOI 10.1109/ICSAW.2017.25
   Schneider S, 2014, LECT NOTES COMPUT SC, V8739, P221, DOI 10.1007/978-3-319-10181-1_14
   Trentelman K., 2002, Algebraic Methodology and Software Technology. 9th International Conference, AMAST 2002. Proceedings (Lecture Notes in Computer Science Vol.2422), P334
   WenXuan Wang, 2020, 2020 6th International Symposium on System and Software Reliability (ISSSR), P12, DOI 10.1109/ISSSR51244.2020.00011
   Zhu CY, 2019, 2019 13TH INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE 2019), P1, DOI [10.1109/TASE.2019.00008, 10.1109/TASE.2019.00-26]
NR 27
TC 0
Z9 0
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2023
VL 49
IS 3
BP 962
EP 972
DI 10.1109/TSE.2022.3168672
PG 11
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA A1QF2
UT WOS:000952938700002
DA 2024-07-18
ER

PT J
AU Chen, S
   Fan, LL
   Chen, CY
   Liu, Y
AF Chen, Sen
   Fan, Lingling
   Chen, Chunyang
   Liu, Yang
TI Automatically Distilling Storyboard With Rich Features for Android Apps
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Android apps; app review; competitive analysis; reverse engineering;
   storyboard
AB Before developing a new mobile app, the development team usually endeavors painstaking efforts to review many existing apps with similar purposes. The review process is crucial in the sense that it reduces market risks and provides inspirations for app development. However, manual exploration of hundreds of existing apps by different roles (e.g., product manager, UI/UX designer, developer, and tester) can be ineffective. For example, it is difficult to completely explore all the functionalities of the app from different aspects including design, implementation, and testing in a short period of time. However, existing reverse engineering tools only provide basic features such as AndroidManifest.xml and Java source files for users. Following the conception of storyboard in movie production, we propose a system, named StoryDistiller, to automatically generate the storyboards for Android apps with rich features through reverse engineering, and assist different roles to review and analyze apps effectively and efficiently. Specifically, we (1) propose a hybrid method to extract a relatively complete Activity transition graph (ATG), that is, it first extracts the ATG of Android apps through static analysis method first, and further leverages dynamic component exploration to augment ATG; (2) extract the required inter-component communication (ICC) data of each target Activity by leveraging static data-flow analysis and renders UI pages dynamically by using app instrumentation together with the extracted required ICC data; (3) obtain rich features including comprehensive ATG with rendered UI pages, semantic activity names, corresponding logic and layout code, etc. (4) implement the storyboard visualization as a web service with the rendered UI pages and the corresponding rich features. Our experiments unveil that StoryDistiller is effective and indeed useful to assist app exploration and review. We also conduct a comprehensive comparison study to demonstrate better performance over IC3, Gator, Stoat, and StoryDroid.
C1 [Chen, Sen] Tianjin Univ, Coll Intelligence & Comp, Tianjin 300072, Peoples R China.
   [Fan, Lingling] Nankai Univ, Coll Cyber Sci, Tianjin 300071, Peoples R China.
   [Chen, Chunyang] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Liu, Yang] Zhejiang Sci Tech Univ, Hangzhou 314423, Peoples R China.
   [Liu, Yang] Nanyang Technol Univ, Sch Comp Sci & Engn, Singapore 639798, Singapore.
C3 Tianjin University; Nankai University; Monash University; Zhejiang
   Sci-Tech University; Nanyang Technological University
RP Fan, LL (corresponding author), Nankai Univ, Coll Cyber Sci, Tianjin 300071, Peoples R China.
EM senchen@tju.edu.cn; linglingfan@nankai.edu.cn; chunyang.chen@monash.edu;
   yangliu@ntu.edu.sg
RI zhang, xiang/JJD-7003-2023; Liu, Yang/D-2306-2013; zhang,
   yueqi/JXM-4287-2024; Liu, Yilin/JWP-9153-2024; liu, xinyi/KFB-4466-2024;
   Yu, Yue/JWP-9103-2024
OI Liu, Yang/0000-0001-7300-9215; Liu, Yilin/0000-0002-7581-3933; Chen,
   Chunyang/0000-0003-2011-9618
FU National Natural Science Foundation of China [62102284, 62102197]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grants 62102284 and 62102197.
CR A. U. Automator, 2020, TRAIN TEST UI AUT
   alphasoftware, 2017, U DEFINED COMPONENT
   [Anonymous], 2011, Proceedings of the 13th international conference on Human computer interaction with mobile devices and services, DOI [10.1145/2037373.2037383, DOI 10.1145/2037373.2037383]
   [Anonymous], 2020, Wikipedia
   apptology, 2018, 4 STEPS DEV YOUR APP
   Arbon J. J., 2014, APP QUALITY SECRETS
   Arnatovi YL, 2018, IEEE ACCESS, V6, P12382, DOI 10.1109/ACCESS.2018.2808340
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Azim T, 2013, ACM SIGPLAN NOTICES, V48, P641, DOI [10.1145/2509136.2509549, 10.1145/2544173.2509549]
   Behrang F, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P236, DOI 10.1145/3197231.3197244
   Beltramelli T, 2018, PROCEEDINGS OF THE ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS (EICS'18), DOI 10.1145/3220134.3220135
   Bernal-Cárdenas C, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P71, DOI 10.1109/ICSE-Companion.2019.00041
   c.geo, 2020, CGEO GEOC
   Chen CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P665, DOI 10.1145/3180155.3180222
   Chen S, 2020, Arxiv, DOI arXiv:1805.05236
   Chen S, 2021, IEEE T DEPEND SECURE, V18, P2551, DOI 10.1109/TDSC.2019.2956035
   Chen S, 2020, PROC INT CONF SOFTW, P1310, DOI 10.1145/3377811.3380417
   Chen S, 2019, PROC INT CONF SOFTW, P596, DOI 10.1109/ICSE.2019.00070
   Chen S, 2019, 2019 IEEE 1ST INTERNATIONAL WORKSHOP ON ARTIFICIAL INTELLIGENCE FOR MOBILE (AI4MOBILE '19), P13, DOI [10.1109/AI4Mobile.2019.8672718, 10.1109/ai4mobile.2019.8672718]
   Chen S, 2019, 2019 IEEE 1ST INTERNATIONAL WORKSHOP ON ARTIFICIAL INTELLIGENCE FOR MOBILE (AI4MOBILE '19), P21, DOI [10.1109/AI4Mobile.2019.8672691, 10.1109/ai4mobile.2019.8672691]
   Chen S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P797, DOI 10.1145/3236024.3275523
   Chen S, 2016, MOBICOM'16: PROCEEDINGS OF THE 22ND ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING, P415, DOI 10.1145/2973750.2985246
   Chen S, 2018, COMPUT SECUR, V73, P326, DOI 10.1016/j.cose.2017.11.007
   Chen S, 2016, ASIA CCS'16: PROCEEDINGS OF THE 11TH ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P377, DOI 10.1145/2897845.2897860
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Chunyang Chen, 2019, Proceedings of the ACM on Human-Computer Interaction, V3, DOI 10.1145/3359282
   Component stack, 2020, COMPONENT STACK
   D3.js, 2018, DAT DRIV DOC
   DashO, 2019, PROD DASH OV
   developer.android, 2018, GOOGLE MONKEY TESTIN
   developer.android, 2018, ANDROID FRAGMENT
   developer.android, 2018, ANDROID DOCUMENTATIO
   Dong Z, 2020, PROC INT CONF SOFTW, P481, DOI 10.1145/3377811.3380402
   F-droid market, 2018, PACK
   Fan LL, 2018, IEEE INT CONF AUTOM, P486, DOI 10.1145/3238147.3238170
   Fan LL, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P408, DOI 10.1145/3180155.3180222
   Fan LL, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1748, DOI 10.1145/2976749.2989055
   FBReader, 2020, FAV BOOK READ
   Finch Christopher., 1995, The Art of Walt Disney: from Mickey Mouse to the Magic Kingdoms
   Fox R., 2017, THESIS U BALTIMORE B
   Gator, 2020, GATOR PROGRAM ANAL T
   github, 2018, REVERSE ENG ANDROID
   github, 2018, TOOLS WORK ANDROIDDE
   github, 2018, DEX JAVA DECOMPILER
   github, 2014, CRAWL DOWNLOAD APPS
   github, 2018, TOOL REVERSE ENG AND
   google, 2018, OVERVIEW STORYDROID
   google, 2020, OVERVIEW STORYDISTIL
   growthbug, 2015, COMPETITOR ANAL LAUN
   Guo LA, 2017, BUS PROCESS MANAG J, V23, P735, DOI 10.1108/BPMJ-05-2015-0065
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Liu YP, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P396, DOI 10.1145/2950290.2950297
   medium, 2018, GETTING BETTER DESIG
   Moran K, 2018, Arxiv, DOI arXiv:1802.02312
   Moran K, 2018, Arxiv, DOI arXiv:1802.04732
   ninoishere, 2018, ANDROID PACKER TEHCH
   Octeau D, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P77, DOI 10.1109/ICSE.2015.30
   Octeau Damien, 2013, P 22 USENIX C SEC SE, P543
   Proguard, 2019, PROD PROG
   Reiss SP, 2018, AUTOMAT SOFTW ENG, V25, P157, DOI 10.1007/s10515-017-0216-3
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   savvyapps, 2018, MUCH DOES APP COST
   Soot, 2018, SOOT JAVA OPTIMIZATI
   stackexchange, 2013, ANAL APK UNDERSTAND
   Statistica, 2020, NUMB APPS AV LEAD AP
   statisticssolutions, 2018, MANN WHITNEY U TEST
   Su T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P245, DOI 10.1145/3106237.3106298
   Tang CB, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P183, DOI 10.1109/ICSE-SEIP.2019.00028
   techcrunch, 2018, MOBILE INTERNET USE
   thebhwgroup, 2018, MOBILE APP DEV PROCE
   Nguyen TA, 2015, IEEE INT CONF AUTOM, P248, DOI 10.1109/ASE.2015.32
   tutorialspoint, 2018, JAVA INNER CLASS
   United Nations, 2018, About us
   Vespucci, 2018, STOR APPS DET
   w3schools, 2020, JAVA METHOD OVERLOAD
   Wei LL, 2019, PROC INT CONF SOFTW, P878, DOI 10.1109/ICSE.2019.00094
   Wei LL, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P672, DOI 10.1145/3106237.3106294
   Winer B., 1962, Statistical principles in experimental design, DOI DOI 10.1037/11774-000
   Yan JW, 2020, PROC INT CONF SOFTW, P457, DOI 10.1145/3377811.3380347
   Zeng X, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P987, DOI 10.1145/2950290.2983958
NR 80
TC 3
Z9 3
U1 3
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 667
EP 683
DI 10.1109/TSE.2022.3159548
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Liu, SR
   Guo, ZQ
   Li, YH
   Wang, CQ
   Chen, L
   Sun, ZB
   Zhou, YM
   Xu, BW
AF Liu, Shiran
   Guo, Zhaoqiang
   Li, Yanhui
   Wang, Chuanqi
   Chen, Lin
   Sun, Zhongbin
   Zhou, Yuming
   Xu, Baowen
TI Inconsistent Defect Labels: Essence, Causes, and Influence
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Inconsistent label; multi-version; cross-version; defect prediction;
   label quality
ID SELECTION; QUALITY; PREDICTION; FRAMEWORK; PROJECTS; DATABASE; SMOTE
AB The label quality of defect data sets has a direct influence on the reliability of defect prediction models. In this paper, we conduct a systematic study of inconsistent defect labels in multi-version-project defect data sets, i.e., many instances having the same source code but different labels over multiple versions of a software project. First, we report the phenomena of inconsistent labels by real examples and analyze their essence in the context of defect prediction. Then, we uncover the causes that lead to the occurrence of inconsistent labels for the representative label collection approaches. Finally, we investigate the actual influence of inconsistent labels on defect prediction models. We find that inconsistent labels in general exist in six multi-version-project defect data sets (either widely used or the most up-to-date in the literature) collected by diverse label collection approaches. In particular, inconsistent labels in a training data set significantly reduce the prediction performance of a model, while inconsistent labels in a test data set can lead to a considerable evaluation bias on the real performance. Therefore, we recommend that: on the one hand, researchers leverage our findings to make targeted methodological improvements on existing defect label collection approaches to reduce the generation of inconsistent labels; on the other hand, practitioners detect and exclude inconsistent labels in defect data sets to avoid their potential negative influence on defect prediction.
C1 [Liu, Shiran; Guo, Zhaoqiang; Li, Yanhui; Wang, Chuanqi; Chen, Lin; Zhou, Yuming; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.
   [Sun, Zhongbin] China Univ Min & Technol, Minist Educ, Mine Digitizat Engn Res Ctr, Xuzhou, Jiangsu, Peoples R China.
C3 Nanjing University; China University of Mining & Technology
RP Li, YH (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.
EM shiranliu@smail.nju.edu.cn; gzq@smail.nju.edu.cn; yanhuili@nju.edu.cn;
   dz1533030@smail.nju.edu.cn; lchen@nju.edu.cn; zhongbin@cumt.edu.cn;
   zhouyuming@nju.edu.cn; bwxu@nju.edu.cn
RI Xu, Baowen/IXW-4882-2023; Guo, Zhaoqiang/HKN-8554-2023
OI Xu, Baowen/0000-0001-7743-1296; Li, Yanhui/0000-0003-2282-7175; Liu,
   Shiran/0000-0003-3627-0881
FU National Natural Science Foundation of China [62172205, 62172202,
   61872177, 61702405]
FX This work was supported by the National Natural Science Foundation of
   China under Grants 62172205, 62172202, 61872177, and 61702405.
CR Ahluwalia A, 2019, IEEE WORK CONF MIN S, P63, DOI 10.1109/MSR.2019.00019
   Alpaydin E., 2010, Introduction to Machine Learning, VSecond , (p, P3
   Amasaki S, 2020, EMPIR SOFTW ENG, V25, P1573, DOI 10.1007/s10664-019-09777-8
   Amasaki S, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P32, DOI 10.1145/3273934.3273938
   Anderson B., 1998, Proceedings Fourth International Conference on Knowledge Discovery and Data Mining, P134
   [Anonymous], 2007, P 2014 WORKSH ECL TE, DOI 10.1145/1328279.1328284
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Olvera-López JA, 2010, ARTIF INTELL REV, V34, P133, DOI 10.1007/s10462-010-9165-y
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bissyandé TF, 2013, EUR CON SFTWR MTNCE, P89, DOI 10.1109/CSMR.2013.19
   Borg M, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P7, DOI 10.1145/3340482.3342742
   Bowes David., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, P330, DOI DOI 10.1145/2931037.2931039
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Broomhead D. S., 1988, Complex Systems, V2, P321
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   Caruana R., 2006, P ACM INT C P SERIES, P161, DOI [10.1145/1143844.1143865, DOI 10.1145/1143844.1143865]
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen T, 2014, PROCEEDINGS OF THE FIFTH INTERNATIONAL SYMPOSIUM ON TEST AUTOMATION & INSTRUMENTATION, VOLS 1 AND 2, P82
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   COX DR, 1958, BIOMETRIKA, V45, P562, DOI 10.2307/2333203
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Davies S, 2014, J SOFTW-EVOL PROC, V26, P107, DOI 10.1002/smr.1619
   Devine T, 2016, AUTOMAT SOFTW ENG, V23, P253, DOI 10.1007/s10515-014-0160-4
   Domingos P, 1997, MACH LEARN, V29, P103, DOI 10.1023/A:1007413511361
   Fan YR, 2021, IEEE T SOFTWARE ENG, V47, P1559, DOI 10.1109/TSE.2019.2929761
   Fernández A, 2018, J ARTIF INTELL RES, V61, P863, DOI 10.1613/jair.1.11192
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Fritz CO, 2012, J EXP PSYCHOL GEN, V141, P2, DOI 10.1037/a0024338
   García S, 2016, KNOWL-BASED SYST, V98, P1, DOI 10.1016/j.knosys.2015.12.006
   German DM, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P184, DOI 10.1109/SCAM.2008.33
   Ghaleb TA, 2021, IEEE T SOFTWARE ENG, V47, P1998, DOI 10.1109/TSE.2019.2941880
   Gray David, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P96, DOI 10.1049/ic.2011.0012
   Hall M. A., 1999, Proceedings of the Twelfth International Florida AI Research Society Conference, P235
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Herbold S, 2021, Arxiv, DOI arXiv:1911.08938
   Herbold S, 2019, IEEE T SOFTWARE ENG, V45, P632, DOI 10.1109/TSE.2018.2790413
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Herzig K, 2013, PROC INT SYMP SOFTW, P118, DOI 10.1109/ISSRE.2013.6698911
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Nguyen HA, 2013, PROC INT SYMP SOFTW, P138, DOI 10.1109/ISSRE.2013.6698913
   Hollander M., 2014, Nonparametric Statistical Methods, Solutions Manual, Vthird
   Hosseini S, 2018, INFORM SOFTWARE TECH, V95, P296, DOI 10.1016/j.infsof.2017.06.004
   IEEE Standard Classification for Software Anomalies, 2009, 10442009 IEEE
   IEEE Standard Glossary of Software Engineering Terminology, 1983, 729198 IEEE
   Jimenez M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P695, DOI 10.1145/3338906.3338941
   Jingxiu Yao, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P120, DOI 10.1145/3383219.3383232
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Jureczko M., 2010, Model Methods Syst Dependability Oficyna Wydawnicza Politech Wroclawskiej, P69
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Khoshgoftaar TM, 2009, SOFTWARE QUAL J, V17, P25, DOI 10.1007/s11219-008-9058-3
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Liebchen Gernot, 2016, P 12 INT C PRED MOD, P7
   Liu Y., 2018, THESIS DEPT COMPUT S
   Mausa G, 2015, 2015 8TH INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P463, DOI 10.1109/MIPRO.2015.7160316
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Mills C, 2018, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSME.2018.00046
   Nguyen A. T., 2012, P ACM SIGSOFT 20 INT, P63
   Nguyen T. H. D., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P259, DOI 10.1109/WCRE.2010.37
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Rajbahadur GK, 2021, IEEE T SOFTWARE ENG, V47, P1414, DOI 10.1109/TSE.2019.2924371
   Rausch T, 2017, IEEE WORK CONF MIN S, P345, DOI 10.1109/MSR.2017.54
   Rodríguez-Pérez G, 2022, IEEE T SOFTWARE ENG, V48, P1400, DOI 10.1109/TSE.2020.3021380
   Rodríguez-Pérez G, 2020, EMPIR SOFTW ENG, V25, P1294, DOI 10.1007/s10664-019-09781-y
   Rodríguez-Pérez G, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267436
   Servant F., 2012, INT S FDN SOFTWARE E
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shippey T, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962620
   Shrikanth NC, 2021, PROC INT CONF SOFTW, P448, DOI 10.1109/ICSE43902.2021.00050
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Sun ZB, 2018, Arxiv, DOI arXiv:1805.10787
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Tóth Z, 2016, LECT NOTES COMPUT SC, V9789, P625, DOI 10.1007/978-3-319-42089-9_44
   Wen M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P326, DOI 10.1145/3338906.3338962
   Williams C, 2008, P 2008 WORKSHOP DEFE, P32
   Williams C.C., 2008, INT WORKING C MINING, P19
   Xu Z, 2018, INT C PROGRAM COMPRE, P132, DOI 10.1145/3196321.3196331
   Xu Z, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P209, DOI 10.1109/SANER.2018.8330210
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Zimmermann T, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P227, DOI 10.1109/ISSRE.2007.19
NR 91
TC 3
Z9 3
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 586
EP 610
DI 10.1109/TSE.2022.3156787
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900007
DA 2024-07-18
ER

PT J
AU Lu, CJ
   Shi, YZ
   Zhang, HH
   Zhang, M
   Wang, TX
   Yue, T
   Ali, S
AF Lu, Chengjie
   Shi, Yize
   Zhang, Huihui
   Zhang, Man
   Wang, Tiexin
   Yue, Tao
   Ali, Shaukat
TI Learning Configurations of Operating Environment of Autonomous Vehicles
   to Maximize their Collisions
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Autonomous vehicle testing; reinforcement learning; environment
   configuration
ID ALGORITHM
AB Autonomous vehicles must operate safely in their dynamic and continuously-changing environment. However, the operating environment of an autonomous vehicle is complicated and full of various types of uncertainties. Additionally, the operating environment has many configurations, including static and dynamic obstacles with which an autonomous vehicle must avoid collisions. Though various approaches targeting environment configuration for autonomous vehicles have shown promising results, their effectiveness in dealing with a continuous-changing environment is limited. Thus, it is essential to learn realistic environment configurations of continuously-changing environment, under which an autonomous vehicle should be tested regarding its ability to avoid collisions. Featured with agents dynamically interacting with the environment, Reinforcement Learning (RL) has shown great potential in dealing with complicated problems requiring adapting to the environment. To this end, we present an RL-based environment configuration learning approach, i.e., DeepCollision, which intelligently learns environment configurations that lead an autonomous vehicle to crash. DeepCollision employs Deep Q-Learning as the RL solution, and selects collision probability as the safety measure, to construct the reward function. We trained four DeepCollision models and conducted an experiment to compare them with two baselines, i.e., random and greedy. Results show that DeepCollision demonstrated significantly better effectiveness in generating collisions compared with the baselines. We also provide recommendations on configuring DeepCollision with the most suitable time interval based on different road structures.
C1 [Lu, Chengjie; Shi, Yize; Wang, Tiexin] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 210016, Peoples R China.
   [Zhang, Huihui] Qilu Univ Technol, Shandong Acad Sci, Sch Comp Sci & Technol, Jinan, Peoples R China.
   [Zhang, Huihui] Weifang Univ, Weifang 261061, Peoples R China.
   [Zhang, Man] Kristiania Univ Coll, N-999026 Oslo, Norway.
   [Yue, Tao] Nanjing Univ Aeronaut & Astronaut, Nanjing 210016, Peoples R China.
   [Yue, Tao; Ali, Shaukat] Simula Res Lab, N-999026 Oslo, Norway.
C3 Nanjing University of Aeronautics & Astronautics; Qilu University of
   Technology; Weifang University; Nanjing University of Aeronautics &
   Astronautics
RP Yue, T (corresponding author), Nanjing Univ Aeronaut & Astronaut, Nanjing 210016, Peoples R China.; Yue, T (corresponding author), Simula Res Lab, N-999026 Oslo, Norway.
EM chengjielu@nuaa.edu.cn; yizeshi@nuaa.edu.cn; huihui@wfu.edu.cn;
   man.zhang@kristiania.no; tiexin.wang@nuaa.edu.cn; taoyue@ieee.org;
   shaukat@simula.no
RI Zhang, Man/AGR-7496-2022; yue, tao/H-6783-2013
OI Zhang, Man/0000-0003-1204-9322; Yue, Tao/0000-0003-3262-5577; Ali,
   Shaukat/0000-0002-9979-3519; wang, tiexin/0000-0002-5432-3812; Lu,
   Chengjie/0000-0002-5818-7547
CR Abedin SF, 2021, IEEE T INTELL TRANSP, V22, P5994, DOI 10.1109/TITS.2020.3039617
   Akiba T, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2623, DOI 10.1145/3292500.3330701
   Althoff M, 2018, IEEE INT VEH SYM, P1326, DOI 10.1109/IVS.2018.8500374
   [Anonymous], 2017, ELECT IMAG, DOI [DOI 10.2352/ISSN.2470-1173.2017.19.AVM-023, 10.2352/ISSN.2470-1173.2017.19.AVM-023]
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bella F, 2011, PROCD SOC BEHV, V20, DOI 10.1016/j.sbspro.2011.08.075
   Ben Abdessalem R, 2018, IEEE INT CONF AUTOM, P143, DOI 10.1145/3238147.3238192
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Ben Abdessalem R, 2016, IEEE INT CONF AUTOM, P63, DOI 10.1145/2970276.2970311
   Buehler O., 2005, 6 MET INT C VIENN AU
   Bühler O, 2008, COMPUT OPER RES, V35, P3144, DOI 10.1016/j.cor.2007.01.015
   Buhler O., 2004, SAE TECHN PAPERS, P115
   Stadie BC, 2015, Arxiv, DOI arXiv:1507.00814
   Calò A, 2020, IEEE INT CONF SOFTW, P375, DOI 10.1109/ICST46399.2020.00045
   Chakravarty I.M., 1967, Handbook of methods of applied statistics
   Chen JY, 2018, IEEE INT VEH SYM, P1651, DOI 10.1109/IVS.2018.8500605
   Chen JY, 2019, IEEE INT C INTELL TR, P2765, DOI 10.1109/ITSC.2019.8917306
   Chen L, 2022, IEEE T INTELL TRANSP, V23, P2966, DOI 10.1109/TITS.2020.3025671
   Chen T, 2019, TRANSPORT RES D-TR E, V66, P49, DOI 10.1016/j.trd.2018.04.017
   Cheng S, 2020, IEEE T INTELL TRANSP, V21, P2376, DOI 10.1109/TITS.2019.2918176
   Corso A, 2019, IEEE INT C INTELL TR, P163, DOI 10.1109/ITSC.2019.8917242
   Czarnecki K., 2018, WATERLOO INTELL SYST
   Czarnecki Krzysztof., 2018, Operational Design Domain for Automated Driving Systems - Taxonomy of Basic Terms
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Doi A., 1994, JSAE Rev, V15, P335, DOI DOI 10.1016/0389-4304(94)90216-X
   Fan HY, 2018, Arxiv, DOI arXiv:1807.08048
   Fielding R. T., 2000, THESIS DONALD BREN S
   Fransen M, 1994, Aust J Physiother, V40, P191, DOI 10.1016/S0004-9514(14)60578-X
   Fuller R, 2005, ACCIDENT ANAL PREV, V37, P461, DOI 10.1016/j.aap.2004.11.003
   github, 2020, GITH
   Hao K, 2018, ETHICS
   Harel-Canada F, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P851, DOI 10.1145/3368089.3409754
   Hauer F, 2019, LECT NOTES COMPUT SC, V11698, P69, DOI 10.1007/978-3-030-26601-1_5
   Hetzel B., 1988, The Complete Guide to Software Testing, V2nd
   Hu Q, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1158, DOI 10.1109/ASE.2019.00126
   Iida Y, 2002, P 13 MIN EURO C HAND, P10
   Ishibuchi H, 2006, IEEE C EVOL COMPUTAT, P1128
   Jin YC, 2011, SWARM EVOL COMPUT, V1, P61, DOI 10.1016/j.swevo.2011.05.001
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Kochenderfer M. J., 2022, Algorithms for Decision Making
   Lee R, 2015, IEEEAAIA DIGIT AVION
   Leurent E., 2018, HAL OPEN SCI
   Liu C., 2020, NAT CTR STATIST ANAL
   Liu WB, 2017, NEUROCOMPUTING, V234, P11, DOI 10.1016/j.neucom.2016.12.038
   Lu CJ, 2021, LECT NOTES COMPUT SC, V12914, P41, DOI 10.1007/978-3-030-88106-1_4
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Manjunath K., 2013, INT J ENG TECHNOL, V5, P1368
   Miff SC, 2005, J REHABIL RES DEV, V42, P175, DOI 10.1682/JRRD.2004.03.0038
   Mnih V, 2015, NATURE, V518, P529, DOI 10.1038/nature14236
   Mukadam M., 2017, NIPS WORKSH MACH LEA
   Ngoduy D, 2013, COMMUN NONLINEAR SCI, V18, P2699, DOI 10.1016/j.cnsns.2013.02.018
   Paszke A, 2019, ADV NEUR IN, V32
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Peng Z, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1240, DOI 10.1145/3368089.3417063
   Phanitej AS, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON ROBOTICS AND BIOMIMETICS (IEEE ROBIO 2017), P1818, DOI 10.1109/ROBIO.2017.8324682
   Qu DY, 2014, MATH PROBL ENG, V2014, DOI 10.1155/2014/604023
   Kiran BR, 2021, Arxiv, DOI arXiv:2002.00444
   Ro JW, 2021, IEEE T INTELL TRANSP, V22, P1742, DOI 10.1109/TITS.2020.2975015
   Rong GD, 2020, Arxiv, DOI arXiv:2005.03778
   SAE, 2014, SAE STANDARD J, V3016, P1, DOI DOI 10.4271/J3016_201401
   Shafaei S, 2018, LECT NOTES COMPUT SC, V11094, P458, DOI 10.1007/978-3-319-99229-7_39
   Shalev-Shwartz S, 2018, Arxiv, DOI arXiv:1708.06374
   Shi YZ, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P101, DOI 10.1109/MODELS50736.2021.00019
   Sillmann J, 2017, WEATHER CLIM EXTREME, V18, P65, DOI 10.1016/j.wace.2017.10.003
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Ulbrich S, 2015, IEEE INT C INTELL TR, P982, DOI 10.1109/ITSC.2015.164
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vegamoor V, 2022, IEEE T INTELL TRANSP, V23, P8834, DOI 10.1109/TITS.2021.3086809
   WATKINS CJCH, 1992, MACH LEARN, V8, P279, DOI 10.1007/BF00992698
   Wilcoxon Frank., 1963, CRITICAL VALUES PROB
   Xie DF, 2019, IEEE T INTELL TRANSP, V20, P2060, DOI 10.1109/TITS.2018.2857465
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Xu SB, 2020, IEEE T INTELL VEHICL, V5, P324, DOI 10.1109/TIV.2019.2955908
   Zhang M, 2016, LECT NOTES COMPUT SC, V9764, P247, DOI 10.1007/978-3-319-42061-5_16
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang RM, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON ROBOTICS AND BIOMIMETICS (ROBIO), P1688, DOI 10.1109/ROBIO.2018.8665334
   Zhang X., 2021, arXiv
   Zhang ZY, 2022, P I MECH ENG D-J AUT, V236, P268, DOI 10.1177/09544070211024048
   Zhou HS, 2020, PROC INT CONF SOFTW, P347, DOI 10.1145/3377811.3380422
   Zhou M., 2021, GITH
   Zhou W, 2020, IEEE T INTELL TRANSP, V21, P1951, DOI 10.1109/TITS.2019.2909066
   Zhu MX, 2020, TRANSPORT RES C-EMER, V117, DOI 10.1016/j.trc.2020.102662
NR 83
TC 6
Z9 6
U1 2
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 384
EP 402
DI 10.1109/TSE.2022.3150788
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA L1HD8
UT WOS:001020827200020
DA 2024-07-18
ER

PT J
AU Benton, S
   Li, X
   Lou, YL
   Zhang, LM
AF Benton, Samuel
   Li, Xia
   Lou, Yiling
   Zhang, Lingming
TI Evaluating and Improving Unified Debugging
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Automated program repair; fault localization; unified debugging
ID FAULTS
AB Automated debugging techniques, including fault localization and program repair, have been studied for over a decade. However, the only existing connection between fault localization and program repair is that fault localization computes the potential buggy elements for program repair to patch. Recently, a pioneering work, ProFL, explored the idea of unified debugging to unify fault localization and program repair in the other direction for the first time to boost both areas. More specifically, ProFL utilizes the patch execution results from one state-of-the-art repair system, PraPR, to help improve state-of-the-art fault localization. In this way, ProFL not only improves fault localization for manual repair, but also extends the application scope of automated repair to all possible bugs (not only the small ratio of bugs that repair systems can automatically fix). However, ProFL only considers one program repair system (i.e., PraPR), and it is not clear how other existing program repair systems based on different designs contribute to unified debugging. In this work, we perform an extensive study of the unified debugging approach on 16 state-of-the-art program repair systems for the first time. Our initial experimental results on the widely studied Defects4J benchmark suite reveal various practical guidelines for unified debugging, such as (1) nearly all 16 studied repair systems positively contribute to unified debugging despite their varying repair capabilities, (2) repair systems targeting multi-edit patches can bring extraneous noise into unified debugging, (3) repair systems with more executed/plausible patches tend to perform better for unified debugging, (4) unified debugging effectiveness does not rely on the availability of correct patches from automated repair, and (5) we propose a new unified debugging technique, UniDebug++, which localizes over 20% more bugs within Top-1 than state-of-the-art unified debugging technique ProFL (evaluated against four Defects4J subjects). Furthermore, we conduct more comprehensive studies to extend the above experiments to make the following additional contributions: we (6) further perform an extensive study on 76.3% additional buggy versions from Defects4J (for Closure and Mockito) and confirm that UniDebug++ again outperforms ProFL by localizing 185 (out of 395 in total) bugs within Top-1, 14% more than ProFL, (7) investigate the impact of 33 SBFL formulae on unified debugging and observe that UniDebug++ consistently improves upon all formulae, e.g., 61% and 53% average improvement on MFR / MAR, (8) demonstrate that UniDebug++ can substantially boost state-of-the-art learning-based method-level fault localization techniques, (9) extend unified debugging to the statement level for first time and observe that UniDebug++ localizes 78 (out of 395 in total) bugs within Top-1 (22% more bugs than ProFL) and outperforms state-of-the-art learning-based fault localization techniques by 30%, and finally (10) propose a new technique, UniDebug+(star), based on detailed patch statistics, to improve upon UniDebug++, e.g., further localizing up to 9% more bugs within Top-1 than UniDebug++.
C1 [Benton, Samuel] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75080 USA.
   [Li, Xia] Kennesaw State Univ, Dept Software Engn & Game Design, Kennesaw, GA 30144 USA.
   [Lou, Yiling] Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
   [Zhang, Lingming] Univ Illinois, Dept Comp Sci, Champaign, IL 61820 USA.
C3 University of Texas System; University of Texas Dallas; University
   System of Georgia; Kennesaw State University; Purdue University System;
   Purdue University; University of Illinois System; University of Illinois
   Urbana-Champaign
RP Lou, YL (corresponding author), Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
EM Samuel.Benton1@utdallas.edu; xli37@kennesaw.edu; lou47@purdue.edu;
   lingming@illinois.edu
OI Benton, Samuel/0000-0003-0592-802X
FU National Science Foundation [CCF-2131943, CCF-2141474]
FX This work was supported in part by National Science Foundation under
   Grants CCF-2131943 and CCF-2141474.
CR Abreu R., 2008, P 2008 INT WORKSHOP, P64
   Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Agrawal H, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P143, DOI 10.1109/ISSRE.1995.497652
   [Anonymous], 2020, TRICENTIS REPORTS
   [Anonymous], 2018, PIT MUT TEST SYST
   Benton S, 2020, IEEE INT CONF AUTOM, P907, DOI 10.1145/3324884.3416566
   Budd T. A, 1980, THESIS NEW HAVEN
   C. Boulder, 2013, U CAMBR STUD FAIL AD
   Chen LC, 2021, PROC INT CONF SOFTW, P1123, DOI 10.1109/ICSE43902.2021.00104
   Durieux T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P302, DOI 10.1145/3338906.3338911
   Durieux T, 2016, 2016 IEEE/ACM 11TH INTERNATIONAL WORKSHOP IN AUTOMATION OF SOFTWARE TEST (AST), P85, DOI [10.1145/2896921.2896931, 10.1109/AST.2016.021]
   Ghanbari A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P19, DOI 10.1145/3293882.3330559
   Gouveia C., 2013, 1st Working Conference on Software Visualization, VISSOFT, P1, DOI DOI 10.1109/VISSOFT.2013.6650539
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jiang JJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P255, DOI 10.1109/ASE.2019.00033
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Li X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P169, DOI 10.1145/3293882.3330574
   Li X, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133916
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Lingming Zhang, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P23, DOI 10.1109/ICSM.2011.6080769
   Liu K, 2020, PROC INT CONF SOFTW, P615, DOI 10.1145/3377811.3380338
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Liu K, 2019, IEEE INT CONF SOFTW, P102, DOI 10.1109/ICST.2019.00020
   Liu K, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P456, DOI 10.1109/saner.2019.8667970
   Long F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/3106237.3106253
   Long F, 2016, PROC INT CONF SOFTW, P702, DOI 10.1145/2884781.2884872
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Lou YL, 2019, Arxiv, DOI arXiv:1910.01270
   Lou YL, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P43, DOI 10.1145/3293882.3330578
   Martinez M., 2016, P 25 INT S SOFTWARE, P441, DOI 10.1145/2931037
   Martinez M, 2018, LECT NOTES COMPUT SC, V11036, P65, DOI 10.1007/978-3-319-99241-9_3
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Musco V, 2017, SOFTWARE QUAL J, V25, P921, DOI 10.1007/s11219-016-9332-8
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pearson K., 1895, P R SOC LOND, V58, P240, DOI 10.1098/rspl.1895.0041
   Pei Y, 2014, IEEE T SOFTWARE ENG, V40, P427, DOI 10.1109/TSE.2014.2312918
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Saha RK, 2017, IEEE INT CONF AUTOM, P648, DOI 10.1109/ASE.2017.8115675
   Saha S, 2019, PROC INT CONF SOFTW, P13, DOI 10.1109/ICSE.2019.00020
   Santelices R, 2009, PROC INT CONF SOFTW, P56, DOI 10.1109/ICSE.2009.5070508
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   U. Software,, 2016, INCR SOFTW DEV PROD
   van Tonder R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/3180155.3180250
   Wang SW, 2020, IEEE INT CONF AUTOM, P968, DOI 10.1145/3324884.3416590
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wen M, 2021, IEEE T SOFTWARE ENG, V47, P2348, DOI 10.1109/TSE.2019.2948158
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wu MY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P760, DOI 10.1109/ASE.2019.00075
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   Yiling Lou, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P75, DOI 10.1145/3395363.3397351
   Yuan Y, 2020, IEEE T SOFTWARE ENG, V46, P1040, DOI 10.1109/TSE.2018.2874648
   Zhang LM, 2013, ACM SIGPLAN NOTICES, V48, P765, DOI [10.1145/2544173.2509551, 10.1145/2509136.2509551]
   Zhang Liu-ze, 2010, Instrument Techniques and Sensor, P1
   Zhang M, 2017, P 26 ACM SIGS INT S, P261, DOI DOI 10.1145/3092703.3092731
   Zhang MS, 2021, IEEE T SOFTWARE ENG, V47, P1089, DOI 10.1109/TSE.2019.2911283
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zoeteweij P, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P213
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 77
TC 3
Z9 3
U1 2
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4692
EP 4716
DI 10.1109/TSE.2021.3125203
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800025
DA 2024-07-18
ER

PT J
AU Ahmed, T
   Devanbu, P
   Sawant, AA
AF Ahmed, Toufique
   Devanbu, Premkumar
   Sawant, Anand Ashok
TI Learning to Find Usages of Library Functions in Optimized Binaries
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Libraries; Tools; Optimization; Databases; Reverse engineering;
   Training; Malware; Reverse engineering; software modeling; deep learning
AB Much software, whether beneficent or malevolent, is distributed only as binaries, sans source code. Absent source code, understanding binaries' behavior can be quite challenging, especially when compiled under higher levels of compiler optimization. These optimizations can transform comprehensible, "natural" source constructions into something entirely unrecognizable. Reverse engineering binaries, especially those suspected of being malevolent or guilty of intellectual property theft, are important and time-consuming tasks. There is a great deal of interest in tools to "decompile" binaries back into more natural source code to aid reverse engineering. Decompilation involves several desirable steps, including recreating source-language constructions, variable names, and perhaps even comments. One central step in creating binaries is optimizing function calls, using steps such as inlining. Recovering these (possibly inlined) function calls from optimized binaries is an essential task that most state-of-the-art decompiler tools try to do but do not perform very well. In this paper, we evaluate a supervised learning approach to the problem of recovering optimized function calls. We leverage open-source software and develop an automated labeling scheme to generate a reasonably large dataset of binaries labeled with actual function usages. We augment this large but limited labeled dataset with a pre-training step, which learns the decompiled code statistics from a much larger unlabeled dataset. Thus augmented, our learned labeling model can be combined with an existing decompilation tool, Ghidra, to achieve substantially improved performance in function call recovery, especially at higher levels of optimization.
C1 [Ahmed, Toufique; Devanbu, Premkumar; Sawant, Anand Ashok] Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
C3 University of California System; University of California Davis
RP Ahmed, T (corresponding author), Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
EM tfahmed@ucdavis.edu; ptdevanbu@ucdavis.edu; asawant@ucdavis.edu
OI Ahmed, Toufique/0000-0002-4427-1350; Sawant, Anand/0000-0002-5816-8020
FU NSF CISE (SHF LARGE) [1414172]; Sandia National Laboratories; Dean's
   Distinguished Graduate Fellowship, UC Davis
FX This work was supported in part by NSF CISE (SHF LARGE) under Grant
   1414172, and in part by Sandia National Laboratories. The work of
   Toufique Ahmed was supported by a Dean's Distinguished Graduate
   Fellowship, UC Davis. This article was much improved as a result of
   reviewers' comments, forwhich the authors are thankful.
CR [Anonymous], 2008, UTDCS0508
   [Anonymous], 2020, TRAVIS BUILD UTILITY
   [Anonymous], 2020, DOCKER CONTAINERS CR
   [Anonymous], 2020, HUGGINGFACE TRANSFOR
   [Anonymous], 2020, BUGSWARMGITHUBORY RE
   [Anonymous], 2020, TRAVIS DOCKERHUB REP
   Bao T, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P845
   Bayer U., 2006, THESIS TU VIENNA VIE
   BE H. B., 2020, HEXRAYS IDA PRO
   BE H. B., 2020, HEXRAYS IDA PROINLIN
   BE H. B., FLIRT SIGNATURES
   Blinded, 2020, REPLICATION PACKAGE, DOI [10.5281/zenodo.4007527, DOI 10.5281/ZENODO.4007527]
   Casalnuovo C, 2019, EMPIR SOFTW ENG, V24, P1823, DOI 10.1007/s10664-018-9669-7
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   Collard ML, 2011, IEEE INT WORK C SO, P173, DOI 10.1109/SCAM.2011.19
   David Y, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428293
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Docker, 2020, DOCK JOB MATR CONF
   Eisenbarth T, 2001, PROC IEEE INT CONF S, P602, DOI 10.1109/ICSM.2001.972777
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   He JX, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P1667, DOI 10.1145/3243734.3243866
   Hunt G, 1999, PROCEEDINGS OF THE 3RD USENIX WINDOWS NT SYMPOSIUM, P135
   Islam R, 2013, J NETW COMPUT APPL, V36, P646, DOI 10.1016/j.jnca.2012.10.004
   Kanade A, 2020, PR MACH LEARN RES, V119
   Katz O, 2019, Arxiv, DOI arXiv:1905.08325
   Lacomis J, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P640, DOI 10.1109/ASE.2019.00064
   Liu YH, 2019, Arxiv, DOI arXiv:1907.11692
   NSA, 2020, GHIDRA
   Pei KX, 2020, Arxiv, DOI arXiv:2010.00770
   Qiu J, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P261, DOI 10.1109/SANER.2015.7081836
   Qiu J, 2016, IEEE T SOFTWARE ENG, V42, P187, DOI 10.1109/TSE.2015.2470241
   Ronghua Tian, 2010, 2010 5th International Conference on Malicious and Unwanted Software (MALWARE 2010), P23, DOI 10.1109/MALWARE.2010.5665796
   Schultz MG, 2001, P IEEE S SECUR PRIV, P38, DOI 10.1109/SECPRI.2001.924286
   Shin ECR, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P611
   Shirani Paria, 2017, Detection of Intrusions and Malware, and Vulnerability Assessment. 14th International Conference, DIMVA 2017. Proceedings: LNCS 10327, P301, DOI 10.1007/978-3-319-60876-1_14
   Song D, 2008, LECT NOTES COMPUT SC, V5352, P1, DOI 10.1007/978-3-540-89862-7_1
   Tomassi DA, 2019, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2019.00048
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang S, 2017, PROC IEEE INT CONF S, P388, DOI 10.1109/ICSME.2017.59
   Wang TY, 2006, IEEE C EVOL COMPUTAT, P3221
   Willems C, 2007, IEEE SECUR PRIV, V5, P32, DOI 10.1109/MSP.2007.45
   Ye YF, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3073559
   Ye YF, 2010, J INTELL INF SYST, V35, P1, DOI 10.1007/s10844-009-0086-7
   Ye YF, 2010, IEEE T SYST MAN CY C, V40, P298, DOI 10.1109/TSMCC.2009.2037978
   Ye YF, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1385
   Ye YF, 2007, KDD-2007 PROCEEDINGS OF THE THIRTEENTH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1043
NR 46
TC 3
Z9 3
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 3862
EP 3876
DI 10.1109/TSE.2021.3106572
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Petrovic, G
   Ivankovic, M
   Fraser, G
   Just, R
AF Petrovic, Goran
   Ivankovic, Marko
   Fraser, Gordon
   Just, Rene
TI Practical Mutation Testing at Scale: A view from Google
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Internet; Tools; Scalability; Python; Productivity;
   Probabilistic logic; Mutation testing; code coverage; test efficacy
ID CLONE DETECTION; CODE
AB Mutation analysis assesses a test suite's adequacy by measuring its ability to detect small artificial faults, systematically seeded into the tested program. Mutation analysis is considered one of the strongest test-adequacy criteria. Mutation testing builds on top of mutation analysis and is a testing technique that uses mutants as test goals to create or improve a test suite. Mutation testing has long been considered intractable because the sheer number of mutants that can be created represents an insurmountable problem-both in terms of human and computational effort. This has hindered the adoption of mutation testing as an industry standard. For example, Google has a codebase of two billion lines of code and more than 150,000,000 tests are executed on a daily basis. The traditional approach to mutation testing does not scale to such an environment; even existing solutions to speed up mutation analysis are insufficient to make it computationally feasible at such a scale. To address these challenges, this paper presents a scalable approach to mutation testing based on the following main ideas: (1) mutation testing is done incrementally, mutating only changed code during code review, rather than the entire code base; (2) mutants are filtered, removing mutants that are likely to be irrelevant to developers, and limiting the number of mutants per line and per code review process; (3) mutants are selected based on the historical performance of mutation operators, further eliminating irrelevant mutants and improving mutant quality. This paper empirically validates the proposed approach by analyzing its effectiveness in a code-review-based setting, used by more than 24,000 developers on more than 1,000 projects. The results show that the proposed approach produces orders of magnitude fewer mutants and that context-based mutant filtering and selection improve mutant quality and actionability. Overall, the proposed approach represents a mutation testing framework that seamlessly integrates into the software development workflow and is applicable to industrial settings of any size.
C1 [Petrovic, Goran; Ivankovic, Marko] Google LLC, CH-8002 Zurich, Switzerland.
   [Fraser, Gordon] Univ Passau, D-94032 Passau, Germany.
   [Just, Rene] Univ Washington, Seattle, WA 98105 USA.
C3 University of Passau; University of Washington; University of Washington
   Seattle
RP Petrovic, G (corresponding author), Google LLC, CH-8002 Zurich, Switzerland.
EM goranpetrovic@google.com; markoi@google.com;
   gordcm.frasen@uni-passau.de; rjust@cs.washington.edu
RI Ivankovic, Marko/KRR-0506-2024
OI Ivankovic, Marko/0000-0002-8548-6008; Just, Rene/0000-0002-5982-275X;
   Petrovic, Goran/0000-0002-8056-7431
CR Ammann P, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P21, DOI 10.1109/ICST.2014.13
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   [Anonymous], GOOGLE STYLE GUIDES
   [Anonymous], 2015, BAZEL BUILD SYSTEM
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Broder AZ, 2000, J COMPUT SYST SCI, V60, P630, DOI 10.1006/jcss.1999.1690
   Chen YQT, 2020, IEEE INT CONF AUTOM, P237, DOI 10.1145/3324884.3416667
   Coles H., REAL WORLD MUTATION
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Evans WS, 2009, SOFTWARE QUAL J, V17, P309, DOI 10.1007/s11219-009-9074-y
   Fernandes L, 2017, PROCEEDINGS OF THE 16TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES (GPCE'17), P187, DOI 10.1145/3136040.3136053
   G. Inc, 2006, GRPC HIGH PERF OP SO
   Ivankovic M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P955, DOI 10.1145/3338906.3340459
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Just R., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P11, DOI 10.1109/ISSRE.2012.31
   Just R., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P612, DOI 10.1109/ASE.2011.6100138
   Just R., 2014, P 2014 INT S SOFTW T, P433
   Just R, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P284, DOI 10.1145/3092703.3092732
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Just R, 2015, SOFTW TEST VERIF REL, V25, P490, DOI 10.1002/stvr.1561
   McMinn P, 2019, IEEE T SOFTWARE ENG, V45, P427, DOI 10.1109/TSE.2017.2786286
   Micco John, 2017, The State of Continuous Integration Testing @Google
   Muchnick S., 1997, ADV COMPILER DESIGN
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt A. J., 1996, ISSETR96100 GEORG MA
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   Petrovic G, 2021, PROC INT CONF SOFTW, P910, DOI 10.1109/ICSE43902.2021.00087
   Petrovic G, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P163, DOI 10.1145/3183519.3183521
   Petrovic G, 2018, IEEE ICST WORKSHOP, P47, DOI 10.1109/ICSTW.2018.00027
   Potvin R, 2016, COMMUN ACM, V59, P78, DOI 10.1145/2854146
   Roy J. R., 2007, QUEENS SCH COMPUTING, V541, P64
   Sadowski C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P598, DOI 10.1109/ICSE.2015.76
   Schuler D., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P90, DOI 10.1109/ICST.2011.32
   Schuler David, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P45, DOI 10.1109/ICST.2010.30
   Tatikonda S, 2010, PROC INT CONF DATA, P429, DOI 10.1109/ICDE.2010.5447882
   Visser W, 2016, IEEE INT CONF AUTOM, P39, DOI 10.1145/2970276.2970345
   Wahler V, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P128
   WUU Y, 1991, SOFTWARE PRACT EXPER, V21, P739, DOI 10.1002/spe.4380210706
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Zhang Jie, 2016, P 25 INT S SOFTWARE, P342, DOI [10.1145/2931037, DOI 10.1145/2931037]
NR 42
TC 19
Z9 19
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 3900
EP 3912
DI 10.1109/TSE.2021.3107634
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800010
OA hybrid
DA 2024-07-18
ER

PT J
AU Blouin, A
   Jézéquel, JM
AF Blouin, Arnaud
   Jezequel, Jean-Marc
TI Interacto: A Modern User Interaction Processing Model
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Mice; Software systems; Object oriented modeling; Encoding; Standards;
   Software engineering; Process control; User interface; user interaction;
   UI event processing; separation of concerns; undo; redo
ID SYSTEMS
AB Since most software systems provide their users with interactive features, building user interfaces (UI) is one of the core software engineering tasks. It consists in designing, implementing and testing ever more sophisticated and versatile ways for users to interact with software systems, and safely connecting these interactions with commands querying or modifying their state. However, most UI frameworks still rely on a low level model, the bare bone UI event processing model. This model was suitable for the rather simple UIs of the early 80's (menus, buttons, keyboards, mouse clicks), but now exhibits major software engineering flaws for modern, highly interactive UIs. These flaws include lack of separation of concerns, weak modularity and thus low reusability of code for advanced interactions, as well as low testability. To mitigate these flaws, we propose Interacto as a high level user interaction processing model. By reifying the concept of user interaction, Interacto makes it easy to design, implement and test modular and reusable advanced user interactions, and to connect them to commands with built-in undo/redo support. To demonstrate its applicability and generality, we briefly present two open source implementations of Interacto for Java/JavaFX and TypeScript/Angular. We evaluate Interacto interest (1) on a real world case study, where it has been used since 2013, and with (2) a controlled experiment with 44 master students, comparing it with traditionnal UI frameworks.
C1 [Blouin, Arnaud; Jezequel, Jean-Marc] Univ Rennes, INSA Rennes, INRIA, CNRS,IRISA, F-35000 Rennes, France.
C3 Universite de Rennes; Centre National de la Recherche Scientifique
   (CNRS); Institut National des Sciences Appliquees de Rennes; Inria
RP Blouin, A (corresponding author), Univ Rennes, INSA Rennes, INRIA, CNRS,IRISA, F-35000 Rennes, France.
EM Arnaud.Blouin@irisa.fr; Jean-Marc.jezequel@irisa.fr
RI Jezequel, Jean-Marc/AAF-3854-2019
OI Jezequel, Jean-Marc/0000-0002-0582-9745; Blouin,
   Arnaud/0000-0002-5974-9601
CR Abrahao S, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P229, DOI 10.1109/MODELS.2017.5
   Apaolaza Aitor, 2017, Proceedings of the ACM on Human-Computer Interaction, V1, DOI 10.1145/3095806
   Appeat C, 2008, SOFTWARE PRACT EXPER, V38, P1149, DOI 10.1002/spe.867
   Appert Caroline, 2012, P SIGCH C HUM FACT C, P1957, DOI [10.1145/2207676.2208339, DOI 10.1145/2207676.2208339]
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Bainomugisha E, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2501654.2501666
   Banerjee I, 2013, INFORM SOFTWARE TECH, V55, P1679, DOI 10.1016/j.infsof.2013.03.004
   Baudisch P., 2003, Proceedings of INTERACT, P57
   Beaudouin-Lafon M., 2004, Proceedings of the working conference on Advanced visual interfaces, P15, DOI DOI 10.1145/989863.989865
   Beaudoux O., 2012, EICS, P169
   Bierman G, 2014, LECT NOTES COMPUT SC, V8586, P257
   Blouin A, 2018, INFORM SOFTWARE TECH, V102, P49, DOI 10.1016/j.infsof.2018.05.005
   Blouin A, 2015, INFORM SOFTWARE TECH, V62, P124, DOI 10.1016/j.infsof.2015.02.007
   Blouin A, 2010, EICS 2010: PROCEEDINGS OF THE 2010 ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS, P115
   Blouin Arnaud., 2011, Proceedings of the 3rd ACM SIGCHI symposium on Engineering interactive computing systems, EICS '11, P85, DOI DOI 10.1145/1996461.1996500
   Brambilla M., 2014, Interaction Flow Modeling Language: Model-Driven UI Engineering of Web and Mobile Apps with IFML
   Chlipala A, 2015, ACM SIGPLAN NOTICES, V50, P153, DOI [10.1145/2775051.2677004, 10.1145/2676726.2677004]
   Courtney A., 2001, P HASK WORKSH, P41
   Czaplicki E, 2013, ACM SIGPLAN NOTICES, V48, P411, DOI 10.1145/2499370.2462161
   Foust G, 2015, GPCE'15: PROCEEDINGS OF THE 2015 ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES, P121, DOI [10.1145/2814204.2814207, 10.1145/2936314.2814207]
   Fowler M., 2010, Domain-specific languages
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   Google, 2019, US
   GREEN M, 1986, ACM T GRAPHIC, V5, P244, DOI 10.1145/24054.24057
   Hemel Z, 2011, ACM SIGPLAN NOTICES, V46, P695, DOI 10.1145/2076021.2048121
   Johnson RE, 1997, COMMUN ACM, V40, P39, DOI 10.1145/262793.262799
   KRASNER GE, 1988, J OBJECT-ORIENT PROG, V1, P41
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Lelli V, 2015, IEEE ICST WORKSHOP
   Limbourg Q, 2005, LECT NOTES COMPUT SC, V3425, P200
   Luckham D, 2008, LECT NOTES COMPUT SC, V5321, P3, DOI 10.1007/978-3-540-88808-6_2
   Maglie Andrea, 2016, REACTIVE JAVA PROGRA, P1
   Maier Ingo., 2012, Deprecating the observer pattern with Scala
   Meijer Erik, 2010, ACM SIGPLAN COMM US
   Meyerovich LA, 2009, OOPSLA 2009, CONFERENCE PROCEEDINGS, P1
   Mijailovic Z, 2013, IEEE SOFTWARE, V30, P76, DOI 10.1109/MS.2013.45
   Milicevic A., 2013, P ACM INT S NEW ID N, P17
   Myers B. A., 1991, UIST Fourth Annual Symposium on User Interface Software and Technology. Proceedings of the ACM Symposium on User Interface Software and Technology, P211, DOI 10.1145/120782.120805
   Myers B. A., 1996, Human Factors in Computing Systems. Common Ground. CHI 96 Conference Proceedings, P260, DOI 10.1145/238386.238526
   MYERS BA, 1990, ACM T INFORM SYST, V8, P289, DOI 10.1145/98188.98204
   Navarre D, 2009, ACM T COMPUT-HUM INT, V16, DOI 10.1145/1614390.1614393
   Oney S, 2012, UIST'12: PROCEEDINGS OF THE 25TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P229
   Oney Stephen, 2014, P 27 ANN ACM S US IN, P263
   Origin, 2018, About us
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Paterno F, 1997, HUMAN-COMPUTER INTERACTION - INTERACT '97, P362
   Pawlak R, 2016, SOFTWARE PRACT EXPER, V46, P1155, DOI 10.1002/spe.2346
   Potel M., 1996, MVP MODEL VIEW PRESE, P20
   Prakash A., 1994, ACM Transactions on Computer-Human Interaction (TOCHI), V1, P295
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Salvaneschi G, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P564, DOI 10.1145/2635868.2635895
   Salvaneschi G, 2014, LECT NOTES COMPUT SC, V8400, P227, DOI 10.1007/978-3-642-55099-7_7
   Sheskin D.J., 2003, HDB PARAMETRIC NONPA, DOI [DOI 10.4324/9780203489536, 10.4324/9780203489536]
   Smith J., 2009, US
   Sousa V, 2019, PROCEEDINGS OF THE 12TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '19), P42, DOI 10.1145/3357766.3359539
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Yoon Y, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P223, DOI 10.1109/ICSE.2015.43
NR 58
TC 0
Z9 0
U1 2
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3206
EP 3226
DI 10.1109/TSE.2021.3083321
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Girardi, D
   Lanubile, F
   Novielli, N
   Serebrenik, A
AF Girardi, Daniela
   Lanubile, Filippo
   Novielli, Nicole
   Serebrenik, Alexander
TI Emotions and Perceived Productivity of Software Developers at the
   Workplace
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Productivity; Employment; Task analysis; Biosensors;
   Biometrics (access control); Electroencephalography; Emotion awareness;
   emotion detection; biometric sensors; empirical software engineering;
   human factors
ID REFLECTION
AB Emotions are known to impact cognitive skills, thus influencing job performance. This is also true for software development, which requires creativity and problem-solving abilities. In this paper, we report the results of a field study involving professional developers from five different companies. We provide empirical evidence that a link exists between emotions and perceived productivity at the workplace. Furthermore, we present a taxonomy of triggers for developers' positive and negative emotions, based on the qualitative analysis of participants' self-reported answers collected through daily experience sampling. Finally, we experiment with a minimal set of non-invasive biometric sensors that we use as input for emotion detection. We found that positive emotional valence, neutral arousal, and high dominance are prevalent. We also found a positive correlation between emotional valence and perceived productivity, with a stronger correlation in the afternoon. Both social and individual breaks emerge as useful for restoring a positive mood. Furthermore, we found that a minimum set of non-invasive biometric sensors can be used as a predictor for emotions, provided that training is performed on an individual basis. While promising, our classifier performance is not yet robust enough for practical usage. Further data collection is required to strengthen the classifier, by also implementing individual fine-tuning of emotion models.
C1 [Girardi, Daniela; Lanubile, Filippo; Novielli, Nicole] Univ Bari, I-70121 Bari, Italy.
   [Serebrenik, Alexander] Eindhoven Univ Technol, NL-5612 AZ Eindhoven, Netherlands.
C3 Universita degli Studi di Bari Aldo Moro; Eindhoven University of
   Technology
RP Novielli, N (corresponding author), Univ Bari, I-70121 Bari, Italy.
EM daniela.girardi@uniba.it; filippo.lanubile@uniba.it;
   nicole.novielli@uniba.it; a.serebrenik@tue.nl
RI Novielli, Nicole/Y-9583-2019; Lanubile, Filippo/AAF-9132-2020
OI Novielli, Nicole/0000-0003-1160-2608; Lanubile,
   Filippo/0000-0003-3373-7589; Serebrenik, Alexander/0000-0002-1418-0095
FU Italian Ministry of University and Research [H94I19000280001]
FX We would like to thank Apuliasoft for participating in the pilot study.
   We are grateful to Greefa, as well as other companies that preferred not
   to disclose their identity, for participating in the field study. We
   thank Giuseppe Antonio Nanna and Arcangelo Saracino for their support in
   developing the pop-up application. This work was supported in part by
   the Italian Ministry of University and Research under Grant PRIN 2017
   "EMPATHY: EMpowering People in deAling with Internet of Things
   ecosYstems" (Project H94I19000280001).
CR Amabile TM, 2005, ADMIN SCI QUART, V50, P367, DOI 10.2189/asqu.2005.50.3.367
   Andriyani Y, 2017, LECT NOTES BUS INF P, V283, P3, DOI 10.1007/978-3-319-57633-6_1
   Baltes S., 2021, ARXIV
   Beller M, 2021, IEEE SOFTWARE, V38, P24, DOI 10.1109/MS.2020.3048200
   Bradley M., 2000, SER AFFECTIVE SCI, P242, DOI 10.1093/oso/9780195118889.003.0011
   BRADLEY MM, 1994, J BEHAV THER EXP PSY, V25, P49, DOI 10.1016/0005-7916(94)90063-9
   BURLESON W, 2004, WORKSH SOC EM INT LE
   Calefato F, 2018, PROCEEDINGS 2018 ACM/IEEE 13TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING ICGSE 2018, P92, DOI 10.1145/3196369.3196372
   Canento F, 2011, IEEE SENSOR, P647
   Carniglia E, 2012, J EYE MOVEMENT RES, V5
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Ford D, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P115, DOI 10.1109/CHASE.2015.19
   Foster C., 2012, New Zealand Journal of Physiotherapy, V40, P17
   Fountaine A, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2017), P28, DOI 10.1109/SEmotion.2017.12
   Fowler M., 2001, Software Development, V9, P28
   Fucci D, 2019, INT C PROGRAM COMPRE, P311, DOI 10.1109/ICPC.2019.00050
   Girardi D, 2020, PROC INT CONF SOFTW, P666, DOI 10.1145/3377811.3380374
   Girardi D, 2019, 2019 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2019), P13, DOI 10.1109/SEmotion.2019.00010
   Girardi D, 2017, INT CONF AFFECT, P125, DOI 10.1109/ACII.2017.8273589
   Graziotin D., 2017, P 21 INT C EVALUATIO, P324, DOI [DOI 10.1145/3084226.3084242, 10.1145/3084226.3084242]
   Graziotin D, 2018, J SYST SOFTWARE, V140, P32, DOI 10.1016/j.jss.2018.02.041
   Graziotin D, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P25, DOI 10.1145/2804381.2804386
   Graziotin D, 2015, J SOFTW-EVOL PROC, V27, P467, DOI 10.1002/smr.1673
   Graziotin D, 2014, IEEE SOFTWARE, V31, P24, DOI 10.1109/MS.2014.94
   Graziotin D, 2014, PEERJ, V2, DOI 10.7717/peerj.289
   Graziotin D, 2013, LECT NOTES COMPUT SC, V7983, P50, DOI 10.1007/978-3-642-39259-7_7
   Greco A, 2016, IEEE T BIO-MED ENG, V63, P797, DOI 10.1109/TBME.2015.2474131
   Grillon C, 2015, EMOTION, V15, P383, DOI 10.1037/emo0000058
   Gueorguieva R, 2004, ARCH GEN PSYCHIAT, V61, P310, DOI 10.1001/archpsyc.61.3.310
   Healey J, 1998, INT CONF ACOUST SPEE, P3749, DOI 10.1109/ICASSP.1998.679699
   Jaques N, 2015, INT CONF AFFECT, P222, DOI 10.1109/ACII.2015.7344575
   Jordan PJ, 2006, LINKING EMOTIONAL INTELLIGENCE AND PERFORMANCE AT WORK: CURRENT RESEARCH EVIDENCE WITH INDIVIDUALS AND GROUPS, P145
   Kaur H, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376219
   Koelstra S, 2012, IEEE T AFFECT COMPUT, V3, P18, DOI 10.1109/T-AFFC.2011.15
   Kramer AF, 1991, Multiple Task Performance, DOI DOI 10.1201/9781003069447-14/PHYSIOLOGICAL-METRICS-MENTAL-WORKLOAD-REVIEW-RECENT-PROGRESS-ARTHUR-KRAMER
   Kuhn M., 2009, THE CARET PACKAGE
   Kuutila M, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106257
   Lambie JA, 2002, PSYCHOL REV, V109, P219, DOI 10.1037//0033-295X.109.2.219
   Larson R., 2014, New directions for methodology of social & behavioral science, P21, DOI [DOI 10.1007/978-94-017-9088-8_2, 10.1007/978-94-017-9088-82, DOI 10.1007/978-94-017-9088-82]
   Mäntylä M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P247, DOI [10.1109/MSR.2016.033, 10.1145/2901739.2901752]
   Mäntylä MV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P83, DOI 10.1145/2568225.2568245
   Marcos E, 2021, IEEE SOFTWARE, V38, P85, DOI 10.1109/MS.2020.3007658
   MARTIN PY, 1986, J APPL BEHAV SCI, V22, P141, DOI 10.1177/002188638602200207
   Meyer Andre N., 2017, Proceedings of the ACM on Human-Computer Interaction, V1, DOI 10.1145/3134714
   Meyer AN, 2021, IEEE T SOFTWARE ENG, V47, P863, DOI 10.1109/TSE.2019.2904957
   Miller C., 2021, ARXIV
   Müller SC, 2016, PROC INT CONF SOFTW, P452, DOI 10.1145/2884781.2884803
   Muldner K, 2009, LECT NOTES COMPUT SC, V5535, P138, DOI 10.1007/978-3-642-02247-0_15
   Müller SC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P688, DOI 10.1109/ICSE.2015.334
   Murgia A., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P262
   Nogueira PA, 2013, 2013 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON INTELLIGENT AGENT TECHNOLOGY (IAT 2013), P253, DOI 10.1109/WI-IAT.2013.117
   Novielli N, 2019, IEEE SOFTWARE, V36, P6, DOI 10.1109/MS.2019.2924013
   Ralph P, 2020, EMPIR SOFTW ENG, V25, P4927, DOI 10.1007/s10664-020-09875-y
   Raschka S., 2018, ARXIV
   Repetto C, 2013, PERS UBIQUIT COMPUT, V17, P253, DOI 10.1007/s00779-011-0467-0
   Reuderink Boris, 2013, International Journal of Autonomous and Adaptive Communications Systems, V6, P45, DOI 10.1504/IJAACS.2013.050691
   RUSSELL JA, 1980, J PERS SOC PSYCHOL, V39, P1161, DOI 10.1037/h0077714
   RUSSELL JA, 1991, PSYCHOL BULL, V110, P426, DOI 10.1037/0033-2909.110.3.426
   Sarkar S, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2017), P32, DOI 10.1109/SEmotion.2017.2
   Soleymani M, 2016, IEEE T AFFECT COMPUT, V7, P17, DOI 10.1109/TAFFC.2015.2436926
   Stegge H., 2007, Handbook of emotion regulation, P269
   Stone AA, 2006, EMOTION, V6, P139, DOI 10.1037/1528-3542.6.1.139
   Storey MA, 2021, IEEE T SOFTWARE ENG, V47, P2125, DOI 10.1109/TSE.2019.2944354
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Vrzakova H, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110434
   Wrobel MR, 2013, C HUM SYST INTERACT, P518, DOI 10.1109/HSI.2013.6577875
   Zimmermann T, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P137
   Züger M, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174165
NR 68
TC 22
Z9 22
U1 3
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3326
EP 3341
DI 10.1109/TSE.2021.3087906
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Nassif, M
   Hernandez, A
   Sridharan, A
   Robillard, MP
AF Nassif, Mathieu
   Hernandez, Alexa
   Sridharan, Ashvitha
   Robillard, Martin P.
TI Generating Unit Tests for Documentation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Documentation; Testing; Skeleton; Java; Software; Redundancy; Libraries;
   Code documentation; testing; testing tools; test generation;
   maintainability; specification management
ID TRACEABILITY LINKS; CODE; AGREEMENT
AB Software projects capture redundant information in various kinds of artifacts, as specifications from the source code are also tested and documented. Such redundancy provides an opportunity to reduce development effort by supporting the joint generation of different types of artifacts. We introduce a tool-supported technique, called DScribe, that allows developers to combine unit test and documentation templates, and to invoke these templates to generate documentation and unit tests. DScribe supports the detection and replacement of outdated documentation, and the use of templates can encourage extensive test suites with a consistent style. Our evaluation of 835 specifications revealed that 85 percent were not tested or correctly documented, and DScribe could be used to automatically generate 97 percent of the tests and documentation. An additional study revealed that tests generated by DScribe are more focused and readable than those written by human testers or generated by state-of-the-art automated techniques.
C1 [Nassif, Mathieu; Hernandez, Alexa; Sridharan, Ashvitha; Robillard, Martin P.] McGill Univ, Sch Comp Sci, Montreal, PQ H3A 0E9, Canada.
C3 McGill University
RP Nassif, M (corresponding author), McGill Univ, Sch Comp Sci, Montreal, PQ H3A 0E9, Canada.
EM mnassif@cs.mcgill.ca; alexa.hernandez@mail.mcgill.ca;
   ashvitha.sridharan@mail.mcgill.ca; martin@cs.mcgill.ca
RI Nassif, Mathieu/GXF-5254-2022
OI Hernandez, Alexa/0000-0002-3066-2000; Sridharan,
   Ashvitha/0000-0002-2202-8085
FU Natural Sciences and Engineering Research Council of Canada
FX We are grateful to the external annotators for helping with the
   comparison study. This work was supported by the Natural Sciences and
   Engineering Research Council of Canada.
CR Abid NJ, 2015, PROC IEEE INT CONF S, P561, DOI 10.1109/ICSM.2015.7332514
   Acharya Mithun, 2007, P 6 JOINT M EUROPEAN, P25, DOI [DOI 10.1145/1287624.1287630, 10.1145/1287624.1287630]
   Aghajani E, 2019, PROC INT CONF SOFTW, P1199, DOI 10.1109/ICSE.2019.00122
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P472, DOI 10.1145/2635868.2635901
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   [Anonymous], 2017, WHAT IS JBEHAVE
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Barbosa EA, 2016, IEEE T SOFTWARE ENG, V42, P559, DOI 10.1109/TSE.2015.2506164
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Beck Kent L., 2003, Test Driven Development By Example
   Ben Charrada Eya, 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P61, DOI 10.1109/RE.2012.6345840
   Buse RPL, 2012, PROC INT CONF SOFTW, P782, DOI 10.1109/ICSE.2012.6227140
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Dagenais B, 2014, IEEE T SOFTWARE ENG, V40, P1126, DOI 10.1109/TSE.2014.2347969
   Daka E, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P107, DOI 10.1145/2786805.2786838
   Dong J, 2009, INT J SOFTW ENG KNOW, V19, P823, DOI 10.1142/S021819400900443X
   Ernst M. D., 1999, P INT C SOFTW ENG, P1
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Forward A., 2002, Proceedings of the 2002 ACM symposium on Document engineering, P26, DOI 10.1145/585058.585065
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Gaston D, 2020, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSME46990.2020.00019
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Gosling James, 2020, The Java Language Specification (Java SE, V14
   Huberman A.M., 2013, Qualitative data analysis: A methods sourcebook, V3rd
   Kajko-Mattsson M, 2005, EMPIR SOFTW ENG, V10, P31, DOI 10.1023/B:LIDA.0000048322.42751.ca
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lassila Ora, 1998, W3C Recommendation
   Le Goues C, 2009, LECT NOTES COMPUT SC, V5505, P292, DOI 10.1007/978-3-642-00768-2_26
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Lin Tan, 2007, Operating Systems Review, V41, P145, DOI 10.1145/1323293.1294276
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Martin Robert C, 2009, Clean Code: a Handbook of Agile Software Craftsmanship
   McBurney P. W., 2014, P 22 INT C PROGRAM C, P279
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Nistor A, 2012, PROC INT CONF SOFTW, P727, DOI 10.1109/ICSE.2012.6227145
   Nybom K, 2018, EUROMICRO CONF PROC, P462, DOI 10.1109/SEAA.2018.00081
   Offutt J, 1999, LECT NOTES COMPUT SC, V1723, P416
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Pandel A., 2010, 2010 International Conference on Computer and Communication Technology (ICCCT 2010), P545, DOI 10.1109/ICCCT.2010.5640471
   Panichella S, 2016, PROC INT CONF SOFTW, P547, DOI 10.1145/2884781.2884847
   Ratol IK, 2017, IEEE INT CONF AUTOM, P112, DOI 10.1109/ASE.2017.8115624
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Shoham S, 2008, IEEE T SOFTWARE ENG, V34, P651, DOI 10.1109/TSE.2008.63
   Soeken M, 2012, LECT NOTES COMPUT SC, V7304, P269, DOI 10.1007/978-3-642-30561-0_19
   Sridhara G., 2010, P IEEE ACM INT C AUT, P43, DOI DOI 10.1145/1858996.1859006
   Sridhara G, 2011, CONF PROC INT SYMP C, P71, DOI 10.1109/ICPC.2011.28
   Sulir M., 2017, PROC S LANG APPL TEC
   Taneja Kunal, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P407, DOI 10.1109/ASE.2008.60
   Thummalapenta S, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P193, DOI 10.1145/1595696.1595725
   Van Rompaey B, 2009, EUR CON SFTWR MTNCE, P209, DOI 10.1109/CSMR.2009.39
   Zhang BW, 2016, IEEE INT CONF AUTOM, P625, DOI 10.1145/2970276.2970342
   Zhou Y, 2017, PROC INT CONF SOFTW, P27, DOI 10.1109/ICSE.2017.11
NR 57
TC 6
Z9 6
U1 2
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3268
EP 3279
DI 10.1109/TSE.2021.3087087
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chen, AR
   Chen, TH
   Wang, SW
AF Chen, An Ran
   Chen, Tse-Hsun
   Wang, Shaowei
TI Pathidea: Improving Information Retrieval-Based Bug Localization by
   Re-Constructing Execution Paths Using Logs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Location awareness; Debugging; Static analysis;
   Information retrieval; History; Tools; Bug localization; log; bug
   report; information retrieval
AB To assist developers with debugging and analyzing bug reports, researchers have proposed information retrieval-based bug localization (IRBL) approaches. IRBL approaches leverage the textual information in bug reports as queries to generate a ranked list of potential buggy files that may need further investigation. Although IRBL approaches have shown promising results, most prior research only leverages the textual information that is "visible" in bug reports, such as bug description or title. However, in addition to the textual description of the bug, developers also often attach logs in bug reports. Logs provide important information that can be used to re-construct the system execution paths when an issue happens and assist developers with debugging. In this paper, we propose an IRBL approach, Pathidea, which leverages logs in bug reports to re-construct execution paths and helps improve the results of bug localization. Pathidea uses static analysis to create a file-level call graph, and re-constructs the call paths from the reported logs. We evaluate Pathidea on eight open source systems, with a total of 1,273 bug reports that contain logs. We find that Pathidea achieves a high recall (up to 51.9 percent for Top@5). On average, Pathidea achieves an improvement that varies from 8 to 21 and 5 to 21 percent over BRTracer in terms of Mean Average Precision (MAP) and Mean Reciprocal Rank (MRR) across studied systems, respectively. Moreover, we find that the re-constructed execution paths can also complement other IRBL approaches by providing a 10 and 8 percent improvement in terms of MAP and MRR, respectively. Finally, we conduct a parameter sensitivity analysis and provide recommendations on setting the parameter values when applying Pathidea.
C1 [Chen, An Ran; Chen, Tse-Hsun] Concordia Univ, Software PErformance Anal & Reliabil SPEAR Lab, Montreal, PQ H3G 1M8, Canada.
   [Wang, Shaowei] Univ Manitoba, Dept Comp Sci, Winnipeg, MB R3T 2N2, Canada.
C3 Concordia University - Canada; University of Manitoba
RP Chen, AR (corresponding author), Concordia Univ, Software PErformance Anal & Reliabil SPEAR Lab, Montreal, PQ H3G 1M8, Canada.
EM anr_chen@encs.concordia.ca; peterc@encs.concordia.ca;
   shaowei@cs.umanitoba.ca
OI Chen, An Ran/0000-0003-3137-7540; Chen, Tse-Hsun/0000-0003-4027-0905
CR Ajisaka A, CONTRIBUTE APACHE HA
   Lam AN, 2017, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2017.24
   An Ran C., 2019, THESIS CONCORDIA U M
   [Anonymous], 2009, Introduction to the Practice of Statistics
   Apache, 2020, AAP JIRA
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bhagwan R, 2018, PROCEEDINGS OF THE 13TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P493
   Chen AR, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09893-w
   Chen AR, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P126, DOI 10.1109/ICSE-Companion.2019.00055
   Chen BY, 2018, IEEE INT CONF AUTOM, P305, DOI 10.1145/3238147.3238214
   Chen BY, 2017, EMPIR SOFTW ENG, V22, P330, DOI 10.1007/s10664-016-9429-5
   Chen T, 2014, PROCEEDINGS OF THE FIFTH INTERNATIONAL SYMPOSIUM ON TEST AUTOMATION & INSTRUMENTATION, VOLS 1 AND 2, P82
   Chen TH, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P243, DOI 10.1109/ICSE-SEIP.2017.26
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   Dao T, 2017, INT C PROGRAM COMPRE, P241, DOI 10.1109/ICPC.2017.29
   Davies S, 2013, 2013 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P126, DOI 10.1109/ISSREW.2013.6688891
   docs.python.org, AST ABSTRACT SYNTAX
   github.com, LIB PARSE WORK C AST
   javascript, US
   Jira, 2020, JIR REST APIS
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   LaToza Thomas D., 2010, P 32 ACM IEEE INT C, P185, DOI DOI 10.1145/1806799.1806829
   Lee J, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P61, DOI 10.1145/3213846.3213856
   Li ZH, 2019, PROC INT CONF SOFTW, P152, DOI 10.1109/ICSE.2019.00032
   Liu B, 2016, SOFTW TEST VERIF REL, V26, P431, DOI 10.1002/stvr.1605
   Loyola P, 2018, CIKM'18: PROCEEDINGS OF THE 27TH ACM INTERNATIONAL CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P657, DOI 10.1145/3269206.3271811
   NLTK, NLTK CORP
   Oracle, JAV LANG KEYW
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Sisman B., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P50, DOI 10.1109/MSR.2012.6224299
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Wang SW, 2016, J SOFTW-EVOL PROC, V28, P921, DOI 10.1002/smr.1801
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Youm KC, 2017, INFORM SOFTWARE TECH, V82, P177, DOI 10.1016/j.infsof.2016.11.002
   Yuan D, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P143
   Zakari A, 2020, INFORM SOFTWARE TECH, V124, DOI 10.1016/j.infsof.2020.106312
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 42
TC 14
Z9 14
U1 2
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 2905
EP 2919
DI 10.1109/TSE.2021.3071473
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500012
DA 2024-07-18
ER

PT J
AU Ye, H
   Gu, J
   Martinez, M
   Durieux, T
   Monperrus, M
AF Ye, He
   Gu, Jian
   Martinez, Matias
   Durieux, Thomas
   Monperrus, Martin
TI Automated Classification of Overfitting Patches With Statically
   Extracted Code Features
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Feature extraction; Maintenance engineering; Training; Tools;
   Syntactics; Software; Predictive models; Automatic program repair; patch
   assessment; overfitting patch; code features
ID GENERATION
AB Automatic program repair (APR) aims to reduce the cost of manually fixing software defects. However, APR suffers from generating a multitude of overfitting patches, those patches that fail to correctly repair the defect beyond making the tests pass. This paper presents a novel overfitting patch detection system called ODS to assess the correctness of APR patches. ODS first statically compares a patched program and a buggy program in order to extract code features at the abstract syntax tree (AST) level, for the single programming language Java. Then, ODS uses supervised learning with the captured code features and patch correctness labels to automatically learn a probabilistic model. The learned ODS model can then finally be applied to classify new and unseen program repair patches. We conduct a large-scale experiment to evaluate the effectiveness of ODS on patch correctness classification based on 10,302 patches from Defects4J, Bugs.jar and Bears benchmarks. The empirical evaluation shows that ODS is able to correctly classify 71.9 percent of program repair patches from 26 projects, which improves the state-of-the-art. ODS is applicable in practice and can be employed as a post-processing procedure to classify the patches generated by different APR systems.
C1 [Ye, He; Gu, Jian; Durieux, Thomas] KTH Royal Inst Technol, S-11428 Stockholm, Sweden.
   [Monperrus, Martin] KTH Royal Inst Technol, Software Technol, S-11428 Stockholm, Sweden.
   [Martinez, Matias] Univ Polytech Hauts de France, F-59300 Famars, France.
C3 Royal Institute of Technology; Royal Institute of Technology
RP Ye, H (corresponding author), KTH Royal Inst Technol, S-11428 Stockholm, Sweden.
EM heye@durieux.me; jiagu@durieux.me; matias.martinez@uphf.fr;
   thomas@durieux.me; martin.monperrus@csc.kth.se
RI Durieux, Thomas/AAM-9269-2020; Ye, He/GNP-2906-2022; Martinez,
   Matias/ABA-8871-2021; Monperrus, Martin/I-3640-2012
OI Durieux, Thomas/0000-0002-1996-6134; Martinez,
   Matias/0000-0002-2945-866X; Monperrus, Martin/0000-0003-3505-3383
FU Wallenberg Artificial Intelligence, Autonomous Systems and Software
   Program (WASP) - Knut and Alice Wallenberg Foundation; Swedish
   Foundation for Strategic Research (SSF)
FX This work was partially supported by the Wallenberg Artificial
   Intelligence, Autonomous Systems and Software Program (WASP) funded by
   Knut and Alice Wallenberg Foundation, by the Swedish Foundation for
   Strategic Research (SSF). Some experiments were performed on resources
   provided by the Swedish National Infrastructure for Computing.
CR Blum AL, 1997, ARTIF INTELL, V97, P245, DOI 10.1016/S0004-3702(97)00063-5
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Debroy Vidroha, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P65, DOI 10.1109/ICST.2010.66
   Devlin J., 2018, BERT PRE TRAINING DE
   Ding S, 2009, 2009 SECOND INTERNATIONAL SYMPOSIUM ON KNOWLEDGE ACQUISITION AND MODELING: KAM 2009, VOL 1, P19, DOI 10.1109/KAM.2009.137
   Draper N. R., 1998, APPL REGRESSION ANAL, V326
   Durieux T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P302, DOI 10.1145/3338906.3338911
   Durieux T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P349, DOI 10.1109/SANER.2017.7884635
   Durieux T, 2016, 2016 IEEE/ACM 11TH INTERNATIONAL WORKSHOP IN AUTOMATION OF SOFTWARE TEST (AST), P85, DOI [10.1145/2896921.2896931, 10.1109/AST.2016.021]
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   Gao X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P8, DOI 10.1145/3293882.3330558
   Ghanbari A, 2020, Arxiv, DOI arXiv:1912.00117
   Ghanbari A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P19, DOI 10.1145/3293882.3330559
   GitHub Experiment, 2020, ODSS REP CONT MOD DA
   Dam HK, 2021, IEEE T SOFTWARE ENG, V47, P67, DOI 10.1109/TSE.2018.2881961
   Johnson B, 2020, PROC INT CONF SOFTW, P87, DOI 10.1145/3377811.3380377
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kim Y, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3345628
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   Le XBD, 2019, PROC INT CONF SOFTW, P524, DOI 10.1109/ICSE.2019.00064
   Le XBD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P163, DOI 10.1145/3180155.3182536
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Lutellier Thibaud, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P101, DOI 10.1145/3395363.3397369
   Madeiral F., 2018, P 6 WORKSH SOFTW VIS
   Madeiral F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P468, DOI [10.1109/saner.2019.8667991, 10.1109/SANER.2019.8667991]
   Martinez M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P79, DOI 10.1109/ICSE-Companion.2019.00043
   Martinez M, 2018, LECT NOTES COMPUT SC, V11036, P65, DOI 10.1007/978-3-319-99241-9_3
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Mechtaev S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P129, DOI 10.1145/3180155.3180247
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Motwani M, 2018, EMPIR SOFTW ENG, V23, P2901, DOI [10.1007/s10664-017-9550-0, 10.1145/3180155.3182533]
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Ping Lu, 2010, Proceedings 2010 Second WRI Global Congress on Intelligent Systems (GCIS 2010), P302, DOI 10.1109/GCIS.2010.57
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Quinlan J.R., 1993, C4.5 : programs for machine learning
   Saha RK, 2018, IEEE WORK CONF MIN S, P10, DOI 10.1145/3196398.3196473
   Sakkas G, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P16, DOI 10.1145/3385412.3386005
   Seidel EL, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3138818
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Shippey T, 2019, INFORM SOFTWARE TECH, V106, P142, DOI 10.1016/j.infsof.2018.10.001
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Sobreira V, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P130, DOI 10.1109/SANER.2018.8330203
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tan SH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/2950290.2950295
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Tian HY, 2020, IEEE INT CONF AUTOM, P981, DOI 10.1145/3324884.3416532
   Tukey J.W., 1977, EXPLORATORY DATA ANA, V2
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Wang SW, 2020, IEEE INT CONF AUTOM, P968, DOI 10.1145/3324884.3416590
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Xin Q, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P226, DOI 10.1145/3092703.3092718
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Xiong YF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P789, DOI 10.1145/3180155.3180182
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   Yang B, 2020, PROCEEDINGS OF THE 2020 IEEE 2ND INTERNATIONAL WORKSHOP ON INTELLIGENT BUG FIXING (IBF '20), P1, DOI [10.1109/ibf50092.2020.9034821, 10.1109/IBF50092.2020.9034821]
   Yang JQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P831, DOI 10.1145/3106237.3106274
   Ye H, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09920-w
   Ye H, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110825
   Yu Z., 2019, ARXIV
   Yu ZX, 2019, EMPIR SOFTW ENG, V24, P33, DOI 10.1007/s10664-018-9619-4
   Yuan Y, 2020, IEEE T SOFTWARE ENG, V46, P1040, DOI 10.1109/TSE.2018.2874648
   Zhai J, 2020, PROC INT CONF SOFTW, P1359, DOI 10.1145/3377811.3380427
NR 72
TC 30
Z9 30
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 2920
EP 2938
DI 10.1109/TSE.2021.3071750
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ritschel, N
   Kovalenko, V
   Holmes, R
   Garcia, R
   Shepherd, DC
AF Ritschel, Nico
   Kovalenko, Vladimir
   Holmes, Reid
   Garcia, Ronald
   Shepherd, David C.
TI Comparing Block-Based Programming Models for Two-Armed Robots
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Robot kinematics; Programming profession; Visualization; Task analysis;
   Manipulators; Programming environments; user interfaces; robot
   programming; parallel programming; block-based programming
AB Modern industrial robots can work alongside human workers and coordinate with other robots. This means they can perform complex tasks, but doing so requires complex programming. Therefore, robots are typically programmed by experts, but there are not enough to meet the growing demand for robots. To reduce the need for experts, researchers have tried to make robot programming accessible to factory workers without programming experience. However, none of that previous work supports coordinating multiple robot arms that work on the same task. In this paper we present four block-based programming language designs that enable end-users to program two-armed robots. We analyze the benefits and trade-offs of each design on expressiveness and user cognition, and evaluate the designs based on a survey of 273 professional participants of whom 110 had no previous programming experience. We further present an interactive experiment based on a prototype implementation of the design we deem best. This experiment confirmed that novices can successfully use our prototype to complete realistic robotics tasks. This work contributes to making coordinated programming of robots accessible to end-users. It further explores how visual programming elements can make traditionally challenging programming tasks more beginner-friendly.
C1 [Ritschel, Nico; Holmes, Reid; Garcia, Ronald] Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1Z4, Canada.
   [Kovalenko, Vladimir] JetBrains NV, JetBrains Res, NL-1017 ZM Amsterdam, Netherlands.
   [Shepherd, David C.] Virginia Commonwealth Univ, Coll Engn, Richmond, VA 23284 USA.
C3 University of British Columbia; Virginia Commonwealth University
RP Ritschel, N (corresponding author), Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1Z4, Canada.
EM ritschel@cs.ubc.ca; v.v.kovalenko@tudelft.nl; rtholmes@cs.ubc.ca;
   rxg@cs.ubc.ca; shepherdd@vcu.edu
OI Kovalenko, Vladimir/0000-0001-5880-7323; Shepherd, David
   C./0000-0003-2017-7842; Ritschel, Nico/0000-0001-5600-2978
FU ABB Inc.
FX The authors would like to thank ABB Inc. for generously providing
   funding and hardware.
CR [Anonymous], 2013, Blockly: A visual programming editor
   Argall BD, 2009, ROBOT AUTON SYST, V57, P469, DOI 10.1016/j.robot.2008.10.024
   Bau D, 2017, COMMUN ACM, V60, P72, DOI 10.1145/3015455
   Benedetelli Daniele, 2013, Lego Mindstorms EV3 Laboratory: Build, Program, and Experiment with Five Wicked Cool Robots
   Biggs G., 2003, Proceedings of the Australasian conference on robotics and automation, P27, DOI DOI 10.1109/ROBOT.2001.932554
   Bischoff R, 2002, IEEE ROMAN 2002, PROCEEDINGS, P482, DOI 10.1109/ROMAN.2002.1045668
   Brooke John., 1996, Usability evaluation in industry, V189, P4, DOI DOI 10.1201/9781498710411
   BROWNE JC, 1995, IEEE PARALL DISTRIB, V3, P75, DOI 10.1109/88.384586
   Burnett M.M., 1999, WILEY ENCY ELECT ELE, P275, DOI DOI 10.1002/047134608X.W1707
   Colgate J. E., 1996, Proceedings of the ASME Dynamic Systems and Control Division, P433
   Cooper S., 2000, NE C J COMPUTING SMA, P107
   Duin S.V., 2010, P ISR 2010 41 INT S, P1
   Feng A, 2015, 2015 IEEE BLOCKS AND BEYOND WORKSHOP (BLOCKS AND BEYOND), P71, DOI 10.1109/BLOCKS.2015.7369006
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Grover S, 2017, PROCEEDINGS OF THE 2017 ACM SIGCSE TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION (SIGCSE'17), P267, DOI 10.1145/3017680.3017723
   Hinds PJ, 2004, HUM-COMPUT INTERACT, V19, P151, DOI 10.1207/s15327051hci1901&2_7
   Holwerda R, 2018, 2018 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P217, DOI 10.1109/VLHCC.2018.8506483
   Kock S., 2011, Assembly and Manufacturing (ISAM), 2011 IEEE International Symposium on, P1, DOI 10.1109/ISAM.2011.5942358
   Krüger J, 2009, CIRP ANN-MANUF TECHN, V58, P628, DOI 10.1016/j.cirp.2009.09.009
   Lewis JR, 2009, LECT NOTES COMPUT SC, V5619, P94, DOI 10.1007/978-3-642-02806-9_12
   Maloney J., 2010, ACM T COMPUT EDUC, V10, P16, DOI DOI 10.1145/1868358.1868363
   Maloney J. H., 1995, Eighth Annual Symposium on User Interface Software and Technology. UIST '95. Proceedings of the ACM Symposium on User Interface Software and Technology, P21, DOI 10.1145/215585.215636
   Corral JMR, 2019, IEEE ACCESS, V7, P17535, DOI 10.1109/ACCESS.2019.2895913
   Myers B. A., 1990, Journal of Visual Languages and Computing, V1, P97, DOI 10.1016/S1045-926X(05)80036-9
   Price T., 2015, P 11 ANN INT C INT C, P91, DOI [DOI 10.1145/2787622.2787712, 10.1145/2787622.2787712]
   Tanimoto S. L., 1990, Journal of Visual Languages and Computing, V1, P127, DOI 10.1016/S1045-926X(05)80012-6
   Universal Robots, 2013, POLYSCOPE MAN, V1
   Weintrop D, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173940
   Weintrop D, 2019, COMMUN ACM, V62, P22, DOI 10.1145/3341221
   Wiedenbeck S, 1999, BEHAV INFORM TECHNOL, V18, P68, DOI 10.1080/014492999119129
NR 30
TC 8
Z9 8
U1 1
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2022
VL 48
IS 5
BP 1630
EP 1643
DI 10.1109/TSE.2020.3027255
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 1I8CJ
UT WOS:000797454000011
DA 2024-07-18
ER

PT J
AU Lu, J
   Li, F
   Liu, C
   Li, L
   Feng, XB
   Xue, JL
AF Lu, Jie
   Li, Feng
   Liu, Chen
   Li, Lian
   Feng, Xiaobing
   Xue, Jingling
TI CloudRaid: Detecting Distributed Concurrency Bugs via Log Mining and
   Enhancement
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Concurrent computing; Cloud computing; Task analysis;
   Runtime; Message systems; Tools; Distributed systems; concurrency bugs;
   bug detection; cloud computing
AB Cloud systems suffer from distributed concurrency bugs, which often lead to data loss and service outage. This paper presents CloudRaid, a new automatical tool for finding distributed concurrency bugs efficiently and effectively. Distributed concurrency bugs are notoriously difficult to find as they are triggered by untimely interaction among nodes, i.e., unexpected message orderings. To detect concurrency bugs in cloud systems efficiently and effectively, CloudRaid analyzes and tests automatically only the message orderings that are likely to expose errors. Specifically, CloudRaid mines the logs from previous executions to uncover the message orderings that are feasible but inadequately tested. In addition, we also propose a log enhancing technique to introduce new logs automatically in the system being tested. These extra logs added improve further the effectiveness of CloudRaid without introducing any noticeable performance overhead. Our log-based approach makes it well-suited for live systems. We have applied CloudRaid to analyze six representative distributed systems: Hadoop2/Yarn, HBase, HDFS, Cassandra, Zookeeper, and Flink. CloudRaid has succeeded in testing 60 different versions of these six systems (10 versions per system) in 35 hours, uncovering 31 concurrency bugs, including nine new bugs that have never been reported before. For these nine new bugs detected, which have all been confirmed by their original developers, three are critical and have already been fixed.
C1 [Lu, Jie; Liu, Chen; Li, Lian; Feng, Xiaobing] Chinese Acad Sci China, Univ Chinese Acad Sci, State Key Lab Comp Architecture, Inst Comp Technol, Beijing 100049, Peoples R China.
   [Li, Feng] Chinese Acad Sci China, Inst Informat Engn, Key Lab Network Assessment Technol, Beijing Key Lab Network Secur & Protect Technol, Beijing 100049, Peoples R China.
   [Xue, Jingling] Univ New South Wales, Sydney, NSW 2052, Australia.
C3 Chinese Academy of Sciences; University of Chinese Academy of Sciences,
   CAS; Chinese Academy of Sciences; University of New South Wales Sydney
RP Li, L (corresponding author), Chinese Acad Sci China, Univ Chinese Acad Sci, State Key Lab Comp Architecture, Inst Comp Technol, Beijing 100049, Peoples R China.; Li, F (corresponding author), Chinese Acad Sci China, Inst Informat Engn, Key Lab Network Assessment Technol, Beijing Key Lab Network Secur & Protect Technol, Beijing 100049, Peoples R China.
EM lujie@ict.ac.cn; lifeng@iie.ac.cn; liuchen17z@ict.ac.cn;
   lianli@lct.ac.cn; fxb@ict.ac.in; j.xue@unsw.edu.au
OI LU, JIE/0000-0002-4162-0404
FU National Key R&D Program of China [2016YFB1000201]; National Natural
   Science Foundation of China [61802368, 61521092, 61432016, 61432018,
   61332009, 61702485, 61872043]; CCF-Tencent Open Research Fund;
   Australian Research Council [DP170103956, DP180104069]
FX This work was supported by National Key R&D Program of China (No.
   2016YFB1000201), the National Natural Science Foundation of China
   (61802368, 61521092, 61432016, 61432018, 61332009, 61702485, 61872043),
   the CCF-Tencent Open Research Fund, and Australian Research Council
   Grants (DP170103956 and DP180104069).
CR [Anonymous], 2013, P 4 ANN S CLOUD COMP
   [Anonymous], 2018, Google protocol buffer
   BESCHASTNIKH I., 2011, P 19 ACM SIGSOFT S 1, P267, DOI DOI 10.1145/2025113.2025151
   Beschastnikh I., 2012, ACM SIGOPS OPERATING, V45, P39
   Carbone P., 2015, IEEE DATA ENG B, V36, P28, DOI DOI 10.1109/IC2EW.2016.56
   Chow Michael, 2014, P 11 S OP SYST DES I, P217
   Dean J, 2008, COMMUN ACM, V51, P107, DOI 10.1145/1327452.1327492
   Ding Rui, 2015, P 2015 USENIX TECHN, P139
   Dinu Florin., 2012, P 21 INT S HIGH PERF, P187
   Du M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1285, DOI 10.1145/3133956.3134015
   Fiala D, 2012, INT CONF HIGH PERFOR
   Flanagan C, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P121, DOI 10.1145/1542476.1542490
   Fu QA, 2009, IEEE DATA MINING, P149, DOI 10.1109/ICDM.2009.60
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gao Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P539, DOI 10.1145/3236024.3236030
   George L., 2011, HBASE DEFINITIVE GUI
   Gunawi H., 2011, P NSDI 11 8 USENIX S, P239
   Gunawi H. S., 2014, P ACM S CLOUD COMP S, P1
   Gunawi Haryadi S., 2010, P 6 INT C HOT TOP SY, P1
   Guo HY, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P265
   Guo Zhenyu., 2013, 14 WORKSH HOT TOP OP, P8
   Hadoop Team, 2018, HDFS ARCHITECTURE GU
   Hadoop Team, 2018, FAULT INJ FRAM 2018
   Hsiao CH, 2014, ACM SIGPLAN NOTICES, V49, P326, DOI [10.1145/2666356.2594330, 10.1145/2594291.2594330]
   Hunt Patrick, 2010, P 2010 USENIX ANN TE, P11, DOI DOI 10.5555/1855840.1855851
   Jian-Guang Lou, 2010, Operating Systems Review, V44, P91, DOI 10.1145/1740390.1740411
   Joshi P., 2013, SER TRIOS
   Joshi P, 2011, ACM SIGPLAN NOTICES, V46, P171, DOI 10.1145/2076021.2048082
   Kasikci B, 2012, ASPLOS XVII: SEVENTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P185
   Kc K, 2011, SYM REL DIST SYST, P11, DOI 10.1109/SRDS.2011.11
   Killian C., 2007, Proceedings of the 4th USENIX conference on Networked systems design and implementation, NSDI'07, (Berkeley, CA, USA), P18, DOI 10.5555/1973430.1973448
   Lakshman Avinash, 2010, Operating Systems Review, V44, P35, DOI 10.1145/1773912.1773922
   Leesatapornwongsa T, 2016, ACM SIGPLAN NOTICES, V51, P517, DOI 10.1145/2954679.2872374
   Leesatapornwongsa Tanakorn, 2014, P 11 USENIX S OPERAT, P399
   Li H, 2017, EMPIR SOFTW ENG, V22, P1684, DOI 10.1007/s10664-016-9456-2
   Li L, 2013, PROCEEDINGS OF THE ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT (ISMM '13), P85
   Li L, 2011, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON COMPUTER SCIENCE IN SPORT (IACSS2011), P343
   Liu HP, 2017, TWENTY-SECOND INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXII), P677, DOI 10.1145/3037697.3037735
   Lou J. G., 2010, P 16 ACM SIGKDD INT, P613, DOI [10.1145/1835804.1835883, DOI 10.1145/1835804.1835883]
   Lu J, 2019, PROCEEDINGS OF THE TWENTY-SEVENTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '19), P114, DOI 10.1145/3341301.3359645
   Lu J, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P3, DOI 10.1145/3236024.3236071
   Lu S, 2006, ACM SIGPLAN NOTICES, V41, P37, DOI 10.1145/1168918.1168864
   Lucia B, 2010, CONF PROC INT SYMP C, P222, DOI 10.1145/1816038.1815988
   Nagaraj K, 2012, P 9 USENIX C NETW SY, P353
   Savage S, 1997, ACM T COMPUT SYST, V15, P391, DOI 10.1145/269005.266641
   Simsa J., 2010, Proceedings of the 5th International Conference on Systems Software Verification, SSV'10, P3
   Sui YL, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P460, DOI 10.1145/2950290.2950296
   Tan J., 2008, WASL, V8, P6, DOI DOI 10.1109/UPEC.2008.4651594
   Tan JQ, 2010, INT CON DISTR COMP S, DOI 10.1109/ICDCS.2010.63
   Tan T, 2017, ACM SIGPLAN NOTICES, V52, P278, DOI [10.1145/3140587.3062360, 10.1145/3062341.3062360]
   Vavilapalli V.K., P 4 ANN S CLOUD COMP
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Yang JL, 2009, 2009 INTERNATIONAL FORUM ON COMPUTER SCIENCE-TECHNOLOGY AND APPLICATIONS, VOL 2, PROCEEDINGS, P213, DOI 10.1109/IFCSTA.2009.173
   Yu X, 2016, ACM SIGPLAN NOTICES, V51, P489, DOI 10.1145/2954679.2872407
   Yuan D., 2012, P 2012 USENIX S OP S, P293
   Yuan D, 2012, ACM T COMPUT SYST, V30, DOI 10.1145/2110356.2110360
   Yuan Ding, 2014, 11 USENIX S OPERATIN, P249
   Zhao X., 2014, 11 USENIX S OP SYST, P629
   Zhao X, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P565, DOI 10.1145/3132747.3132778
   Zhao X, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P603
   Zhou Q, 2018, INT SYM CODE GENER, P228, DOI 10.1145/3168813
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
NR 62
TC 1
Z9 1
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2022
VL 48
IS 2
BP 662
EP 677
DI 10.1109/TSE.2020.2999364
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZB4EB
UT WOS:000756796100017
DA 2024-07-18
ER

PT J
AU Wang, Y
   Gao, FJ
   Wang, LZ
   Yu, TT
   Zhao, JH
   Li, XD
AF Wang, Yu
   Gao, Fengjuan
   Wang, Linzhang
   Yu, Tingting
   Zhao, Jianhua
   Li, Xuandong
TI Automatic Detection, Validation, and Repair of Race Conditions in
   Interrupt-Driven Embedded Software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Embedded software; interrupts; race condition; software testing; repair
   suggestion
AB Interrupt-driven programs are widely deployed in safety-critical embedded systems to perform hardware and resource dependent data operation tasks. The frequent use of interrupts in these systems can cause race conditions to occur due to interactions between application tasks and interrupt handlers (or two interrupt handlers). Numerous program analysis and testing techniques have been proposed to detect races in multithreaded programs. Little work, however, has addressed race condition problems related to hardware interrupts. In this paper, we present SDRacer, an automated framework that can detect, validate and repair race conditions in interrupt-driven embedded software. It uses a combination of static analysis and symbolic execution to generate input data for exercising the potential races. It then employs virtual platforms to dynamically validate these races by forcing the interrupts to occur at the potential racing points. Finally, it provides repair candidates to eliminate the detected races. We evaluate SDRacer on nine real-world embedded programs written in C language. The results show that SDRacer can precisely detect and successfully fix race conditions.
C1 [Wang, Yu; Gao, Fengjuan; Wang, Linzhang; Zhao, Jianhua; Li, Xuandong] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
   [Yu, Tingting] Univ Kentucky, Lexington, KY 40506 USA.
C3 Nanjing University; University of Kentucky
RP Wang, LZ (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
EM yuwang_cs@smail.nju.edu.cn; fjgao@smail.nju.edu.cn; lzwang@nju.edu.cn;
   tyu@cs.uky.edu; zhaojh@nju.edu.cn; lxd@nju.edu.cn
RI yu, tingting/HGA-4783-2022; Gao, Fengjuan/AAJ-9728-2020
OI Wang, Linzhang/0000-0003-4794-1652
FU National Key R&D Program of China [2017YFA0700604]; National Natural
   Science Foundation of China [61632015]
FX This work was supported by the National Key R&D Program of China (No.
   2017YFA0700604), and the National Natural Science Foundation of China
   (No.61632015).
CR Andersen L. O., 1994, Technical Report
   [Anonymous], 2020, USING CLANG TOOLS LL
   [Anonymous], 2020, KLEE UCLIBC
   [Anonymous], 2020, KLEE LLVM EXECUTION
   [Anonymous], 2020, LESSON 1 SPIN LOCKS
   [Anonymous], 2020, STP CONSTRAINT SOLVE
   [Anonymous], 2020, LINUX GENERIC IRQ HA
   Aspinall D, 2007, LECT NOTES COMPUT SC, V4732, P22
   Bielik P, 2015, ACM SIGPLAN NOTICES, V50, P332, DOI [10.1145/2814270.2814303, 10.1145/2858965.2814303]
   Bond MD, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P255, DOI 10.1145/1806596.1806626
   Burckhardt S, 2010, ACM SIGPLAN NOTICES, V45, P167, DOI 10.1145/1735971.1736040
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cai Y, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P303, DOI 10.1145/3106237.3106239
   CALLAHAN D, 1990, SIGPLAN NOTICES, V25, P21, DOI 10.1145/99164.99167
   Coons KE, 2010, PPOPP 2010: PROCEEDINGS OF THE 2010 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING, P15, DOI 10.1145/1693453.1693458
   Corbet Jonathan, 2005, Linux device drivers, VThird
   Duesterwald Evelyn, 1991, P S TEST ANAL VER TA, P36
   Effinger-Dean L, 2012, ACM SIGPLAN NOTICES, V47, P467, DOI 10.1145/2398857.2384650
   Engblom J., 2012, SYSTEMATICALLY EXPOS
   Farzan A., 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, P37
   Flanagan C, 2003, ACM SIGPLAN NOTICES, V38, P338, DOI 10.1145/780822.781169
   GANGULY J, 1999, ISIS99007 U NOTR DAM
   Guo SJ, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P854, DOI 10.1145/2786805.2786841
   Higashi M, 2010, P 5 WORKSH AUT SOFTW, P79
   Hong S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P61, DOI 10.1109/ICST.2014.17
   Hong S, 2015, SOFTW TEST VERIF REL, V25, P334, DOI 10.1002/stvr.1539
   Hsiao CH, 2014, ACM SIGPLAN NOTICES, V49, P326, DOI [10.1145/2666356.2594330, 10.1145/2594291.2594330]
   Hu Y., 2016, P 25 INT S SOFTW TES, P377, DOI DOI 10.1145/2931037.2931069
   Huo W., 2011, J COMPUT RES DEV, V12
   Jackson I., 2020, IRQ HANDLING RACE SP
   Jin G., 2012, 10 USENIX S OP SYST, P221
   Jin GL, 2011, ACM SIGPLAN NOTICES, V46, P389, DOI 10.1145/1993316.1993544
   Joshi S, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P19
   Kahlon V, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P13, DOI 10.1145/1595696.1595701
   Kelk D, 2013, LECT NOTES COMPUT SC, V8063, P73, DOI 10.1007/978-3-642-39955-8_7
   Khoshnood Sepideh, 2015, P 2015 INT S SOFTW E, P165
   Ma KK, 2011, LECT NOTES COMPUT SC, V6887, P95, DOI 10.1007/978-3-642-23702-7_11
   Kotker J., 2011, 2011 Formal Methods in Computer-Aided Design (FMCAD), P81
   Kuznetsov V, 2012, ACM SIGPLAN NOTICES, V47, P193, DOI 10.1145/2345156.2254088
   Lai Z, 2008, P 16 ACM SIGSOFT INT, P94
   Liu HP, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P715, DOI 10.1145/2950290.2950309
   Liu P, 2012, PROC INT CONF SOFTW, P299, DOI 10.1109/ICSE.2012.6227184
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Maiya P, 2014, ACM SIGPLAN NOTICES, V49, P316, DOI [10.1145/2666356.2594311, 10.1145/2594291.2594311]
   Manson J, 2005, ACM SIGPLAN NOTICES, V40, P378, DOI 10.1145/1047659.1040336
   Marinescu PD, 2012, PROC INT CONF SOFTW, P716, DOI 10.1109/ICSE.2012.6227146
   Marino D, 2009, ACM SIGPLAN NOTICES, V44, P134, DOI 10.1145/1543135.1542491
   Musuvathi M., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, P267
   Naik M, 2009, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2009.5070538
   Netzer R. H. B., 1992, ACM Letters on Programming Languages and Systems, V1, P74, DOI 10.1145/130616.130623
   Nistor A, 2012, PROC INT CONF SOFTW, P727, DOI 10.1109/ICSE.2012.6227145
   O'Callahan R, 2003, ACM SIGPLAN NOTICES, V38, P166
   Osterman L., 2005, LARRY GETS TAKEN TAS
   Pozniansky E, 2003, ACM SIGPLAN NOTICES, V38, P178, DOI 10.1145/966049.781529
   Pradel M, 2012, ACM SIGPLAN NOTICES, V47, P521, DOI 10.1145/2345156.2254126
   Pratikakis P, 2006, ACM SIGPLAN NOTICES, V41, P320, DOI 10.1145/1133981.1134019
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Raman R, 2012, ACM SIGPLAN NOTICES, V47, P531, DOI [10.1145/2345156.2254127, 10.1145/2345156.1993502]
   Raychev V, 2013, ACM SIGPLAN NOTICES, V48, P151, DOI [10.1145/2544173.2509538, 10.1145/2509136.2509538]
   Regehr J, 2005, P 5 ACM INT C EMB SO, P290
   Regehr J, 2007, ELECTRON NOTES THEOR, V174, P139, DOI 10.1016/j.entcs.2007.04.002
   Rui Chen, 2011, 2011 5th International Conference on Secure Software Integration & Reliability Improvement Companion, P47, DOI 10.1109/SSIRI-C.2011.18
   Samak M, 2016, ACM SIGPLAN NOTICES, V51, P430, DOI 10.1145/3022671.2984040
   Samak M, 2015, ACM SIGPLAN NOTICES, V50, P175, DOI [10.1145/2737924.2737998, 10.1145/2813885.2737998]
   Savage S, 1997, ACM T COMPUT SYST, V15, P391, DOI 10.1145/269005.266641
   Sen K., 2007, P 22 IEEE ACM INT C, P323, DOI [DOI 10.1145/1321631.1321679, 10.1145/1321631.1321679]
   Sen K, 2006, LECT NOTES COMPUT SC, V4144, P419
   Sen K, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P11, DOI 10.1145/1375581.1375584
   Shi JJ, 2018, CHINESE J ELECTRON, V27, P556, DOI 10.1049/cje.2018.03.015
   SSE Instructions, 2014, SSE INSTRUCTIONS WHI
   Surendran R, 2014, ACM SIGPLAN NOTICES, V49, P15, DOI [10.1145/2666356.2594335, 10.1145/2594291.2594335]
   Visser W, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ASE.2000.873645
   Vojdani V, 2016, IEEE INT CONF AUTOM, P391, DOI 10.1145/2970276.2970337
   von Praun C, 2003, ACM SIGPLAN NOTICES, V38, P115, DOI 10.1145/780822.781145
   von Praun C, 2011, RACE DETECTION TECHN, P1697
   Wang Y, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P113, DOI 10.1145/3092703.3092724
   Wang Yu, 2015, P 7 AS PAC S INT INT, P199, DOI [10.1145/2875913.2875943, DOI 10.1145/2875913.2875943]
   Whaley J, 2004, ACM SIGPLAN NOTICES, V39, P131, DOI 10.1145/996893.996859
   Williams A, 2005, LECT NOTES COMPUT SC, V3586, P602
   Yu JJ, 2012, PROCEEDINGS OF THE ASME TURBO EXPO 2012, VOL 7, PTS A AND B, P485, DOI 10.1145/2398857.2384651
   Yu TT, 2016, PROC INT CONF SOFTW, P583, DOI 10.1145/2884781.2884866
   Yu TT, 2012, ACM SIGPLAN NOTICES, V47, P51, DOI 10.1145/2365864.2151034
   Yu Y., 2005, P 20 ACM S OP SYST P, P221
NR 83
TC 4
Z9 5
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2022
VL 48
IS 1
BP 346
EP 363
DI 10.1109/TSE.2020.2989171
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YG0HJ
UT WOS:000742179000020
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhou, JY
   Wang, SW
   Bezemer, CP
   Zou, Y
   Hassan, AE
AF Zhou, Jiayuan
   Wang, Shaowei
   Bezemer, Cor-Paul
   Zou, Ying
   Hassan, Ahmed E.
TI Studying the Association Between Bountysource Bounties and the
   Issue-Addressing Likelihood of GitHub Issue Reports
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Security; Open source software; Task analysis; Timing; Computer bugs;
   Software evolution; open source software; Bountysource; bounties; GitHub
ID PREDICTION; SOFTWARE; BUGS
AB Due to the voluntary nature of open source software, it can be hard to find a developer to work on a particular task. For example, some issue reports may be too cumbersome and unexciting for someone to volunteer to do them, yet these issue reports may be of high priority to the success of a project. To provide an incentive for implementing such issue reports, one can propose a monetary reward, i.e., a bounty, to the developer who completes that particular task. In this paper, we study bounties in open source projects on GitHub to better understand how bounties can be leveraged to evolve such projects in terms of addressing issue reports. We investigated 5,445 bounties for GitHub projects. These bounties were proposed through the Bountysource platform with a total bounty value of $406,425. We find that 1) in general, the timing of proposing bounties is the most important factor that is associated with the likelihood of an issue being addressed. More specifically, issue reports are more likely to be addressed if they are for projects in which bounties are used more frequently and if they are proposed earlier. 2) The bounty value of an issue report is the most important factor that is associated with the issue-addressing likelihood in the projects in which no bounties were used before. 3) There is a risk of wasting money for backers who invest money on long-standing issue reports.
C1 [Zhou, Jiayuan; Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
   [Wang, Shaowei] Mississippi State Univ, Dept Comp Sci & Engn, Starkville, MS 39762 USA.
   [Bezemer, Cor-Paul] Univ Alberta, Analyt Software Games & Repository Data ASGAARD L, Edmonton, AB T6G 2R3, Canada.
   [Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON K7L 3N6, Canada.
C3 Queens University - Canada; Mississippi State University; University of
   Alberta; Queens University - Canada
RP Wang, SW (corresponding author), Mississippi State Univ, Dept Comp Sci & Engn, Starkville, MS 39762 USA.
EM jzhou@cs.queensu.ca; wang@cse.msstate.edu; bezemer@ualberta.ca;
   ying.zou@queensu.ca; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Zou, Ying/KLC-9380-2024
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Bezemer,
   Cor-Paul/0000-0002-0474-5718
CR [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   [Anonymous], 2002, Stat. Methods Inter-Rater Reliab. Assess. Ser.
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Arya D, 2019, PROC INT CONF SOFTW, P454, DOI 10.1109/ICSE.2019.00058
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Cochran W.G., 1977, Sampling techniques, V3rd ed.
   Dormann CF, 2013, ECOGRAPHY, V36, P27, DOI 10.1111/j.1600-0587.2012.07348.x
   EFRON B, 1986, J AM STAT ASSOC, V81, P461, DOI 10.2307/2289236
   FARRAR DE, 1967, REV ECON STAT, V49, P92, DOI 10.2307/1937887
   Finifter M., 2013, 22 USENIX SECURITY S, P273
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Harrell F.E., 2006, REGRESSION MODELING
   Hata H, 2017, INT SYMP EMP SOFTWAR, P223, DOI 10.1109/ESEM.2017.34
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   Jarczyk O, 2018, INFORM SOFTWARE TECH, V100, P32, DOI 10.1016/j.infsof.2018.03.010
   Kabinna S, 2018, EMPIR SOFTW ENG, V23, P290, DOI 10.1007/s10664-017-9518-0
   Kanda T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P577, DOI 10.1109/SANER.2017.7884685
   Krishnamurthy S, 2006, EC OPEN SOURCE SOFTW, P165
   Maillart T, 2017, J CYBERSECURITY, V3, P81, DOI 10.1093/cybsec/tyx008
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Ortu M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P303, DOI 10.1109/MSR.2015.35
   Palomba F, 2019, IEEE T SOFTWARE ENG, V45, P194, DOI 10.1109/TSE.2017.2770122
   Rajbahadur GK, 2017, IEEE WORK CONF MIN S, P135, DOI 10.1109/MSR.2017.4
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Sarle WS, 1990, SAS STAT USERS GUIDE, P134
   Shaowei Wang, 2011, 2011 18th Working Conference on Reverse Engineering, P92, DOI 10.1109/WCRE.2011.72
   Soto M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P512, DOI [10.1145/2901739.2903495, 10.1109/MSR.2016.067]
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P1552, DOI 10.1007/s10664-017-9558-5
   Wang SW, 2016, J SOFTW-EVOL PROC, V28, P921, DOI 10.1002/smr.1801
   Wang SW, 2014, PROC IEEE INT CONF S, P171, DOI 10.1109/ICSME.2014.39
   Zhao M., 2014, Proceedings of the 2014 ACM workshop on security information workers, P51, DOI [DOI 10.1145/2663887.2663906, 10.1145/2663887.2663906]
   Zhao MY, 2017, J INFORM POLICY, V7, P372, DOI 10.5325/jinfopoli.7.2017.0372
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
   Zhou J., 2018, SUPPLEMENTARY MAT OU
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zhou JY, 2020, EMPIR SOFTW ENG, V25, P139, DOI 10.1007/s10664-019-09744-3
NR 36
TC 9
Z9 9
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2021
VL 47
IS 12
BP 2919
EP 2933
DI 10.1109/TSE.2020.2974469
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XM6HB
UT WOS:000728924600017
DA 2024-07-18
ER

PT J
AU Fan, YR
   Xia, X
   da Costa, DA
   Lo, D
   Hassan, AE
   Li, SP
AF Fan, Yuanrui
   Xia, Xin
   da Costa, Daniel Alencar
   Lo, David
   Hassan, Ahmed E.
   Li, Shanping
TI The Impact of Mislabeled Changes by SZZ on Just-in-Time Defect
   Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Predictive models; Data models; Computer bugs; Measurement; Inspection;
   Analytical models; Testing; Just-in-time defect prediction; SZZ; noisy
   data; mining software repositories
ID FRAMEWORK
AB Just-in-Time (JIT) defect prediction-a technique which aims to predict bugs at change level-has been paid more attention. JIT defect prediction leverages the SZZ approach to identify bug-introducing changes. Recently, researchers found that the performance of SZZ (including its variants) is impacted by a large amount of noise. SZZ may considerably mislabel changes that are used to train a JIT defect prediction model, and thus impact the prediction accuracy. In this paper, we investigate the impact of the mislabeled changes by different SZZ variants on the performance and interpretation of JIT defect prediction models. We analyze four SZZ variants (i.e., B-SZZ, AG-SZZ, MA-SZZ, and RA-SZZ) that are proposed by prior studies. We build the prediction models using the labeled data by these four SZZ variants. Among the four SZZ variants, RA-SZZ is least likely to generate mislabeled changes, and we construct the testing set by using RA-SZZ. All of the four prediction models are then evaluated on the same testing set. We choose the prediction model built on the labeled data by RA-SZZ as the baseline model, and we compare the performance and metric importance of the models trained using the labeled data by the other three SZZ variants with the baseline model. Through a large-scale empirical study on a total of 126,526 changes from ten Apache open source projects, we find that in terms of various performance measures (AUC, F1-score, G-mean and Recall@20%), the mislabeled changes by B-SZZ and MA-SZZ are not likely to cause a considerable performance reduction, while the mislabeled changes by AG-SZZ cause a statistically significant performance reduction with an average difference of 1-5 percent. When considering developers' inspection effort (measured by LOC) in practice, the changes mislabeled B-SZZ and AG-SZZ lead to 9-10 and 1-15 percent more wasted inspection effort, respectively. And the mislabeled changes by B-SZZ lead to significantly more wasted effort. The mislabeled changes by MA-SZZ do not cause considerably more wasted effort. We also find that the top-most important metric for identifying bug-introducing changes (i.e., number of files modified in a change) is robust to the mislabeling noise generated by SZZ. But the second- and third-most important metrics are more likely to be impacted by the mislabeling noise, unless random forest is used as the underlying classifier.
C1 [Fan, Yuanrui; Li, Shanping] Zhejiang Univ, Coll Comp Sci & Technol, Ningbo Res Inst, Hangzhou 310027, Peoples R China.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Melbourne, Vic 3000, Australia.
   [da Costa, Daniel Alencar] Univ Otago, Informat Sci Dept, Dunedin 9016, New Zealand.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
C3 Zhejiang University; Monash University; University of Otago; Singapore
   Management University; Queens University - Canada
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic 3000, Australia.
EM yrfan@zju.edu.cn; xin.xia@monash.edu; danielcalencar@otago.ac.nz;
   davidlo@smu.edu.sg; ahmed@queensu.ca; shan@zju.edu.cn
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Xia, Xin/AAD-6217-2022; Lo,
   David/A-2493-2012
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Xia,
   Xin/0000-0002-6302-3256; Lo, David/0000-0002-4367-7201; Fan,
   Yuanrui/0000-0001-5234-0152
FU National Key Research and Development Program of China [2018Y
   FB1003904]; NSFC Program [61602403]
FX This research was partially supported by the National Key Research and
   Development Program of China (2018Y FB1003904) and NSFC Program (No.
   61602403).
CR Abdi H, 2007, ENCY MEASUREMENT STA, P103, DOI DOI 10.4135/9781412952644
   [Anonymous], ACTIVEMQ AMQ 1381
   [Anonymous], 1994, INTRO BOOTSTRAP
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bissyandé TF, 2013, EUR CON SFTWR MTNCE, P89, DOI 10.1109/CSMR.2013.19
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L., 2001, Mach. Learn., V45, P5
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   Canfora G, 2015, SOFTW TEST VERIF REL, V25, P426, DOI 10.1002/stvr.1570
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Catal C, 2011, EXPERT SYST APPL, V38, P4626, DOI 10.1016/j.eswa.2010.10.024
   Cliff N., 2014, ORDINAL METHODS BEHA
   da Costa D. A, 2019, MA SZZ IMPLEMENTATIO
   da Costa D. A, 2019, REFACTORING AWARE SZ
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Davies S, 2014, J SOFTW-EVOL PROC, V26, P107, DOI 10.1002/smr.1619
   Domingos P, 1997, MACH LEARN, V29, P103, DOI 10.1023/A:1007413511361
   Fan YR, 2020, IEEE T SOFTWARE ENG, V46, P495, DOI 10.1109/TSE.2018.2864217
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hamill M, 2009, IEEE T SOFTWARE ENG, V35, P484, DOI 10.1109/TSE.2009.3
   Harrell F.E., 2001, Regression modeling strategies: with applications to linear models, logistic regression, and survival analysis
   Harrell Jr F. E., 2019, **DATA OBJECT**
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Herzig K, 2016, EMPIR SOFTW ENG, V21, P303, DOI 10.1007/s10664-015-9376-6
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hosmer Jr D.W., 2013, Applied Logistic Regression, V398
   Huang J, 2005, IEEE T KNOWL DATA EN, V17, P299, DOI 10.1109/TKDE.2005.50
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kochhar PS, 2014, IEEE INT C ENG COMP, P126, DOI 10.1109/ICECCS.2014.25
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Kubat M., 1997, ADDRESSING CURSE IMB, V97, P179
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   Majka M., 2019, R PACKAGE VERSION 09
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Matsumoto S, 2010, P 6 INT C PREDICTIVE, P1, DOI DOI 10.1145/1868328.1868356
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Meyer D, 2017, VCD VISUALIZING CATE, V1, P4
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   PLACKETT RL, 1983, INT STAT REV, V51, P59, DOI 10.2307/1402731
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Rajbahadur GK, 2017, IEEE WORK CONF MIN S, P135, DOI 10.1109/MSR.2017.4
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Shihab E., 2010, Proceedings of the ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, P1
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Silva D, 2017, IEEE WORK CONF MIN S, P269, DOI 10.1109/MSR.2017.14
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Soares G, 2013, IEEE T SOFTWARE ENG, V39, P147, DOI 10.1109/TSE.2012.19
   Soares G, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.63
   Song Q., 2018, IEEE T SOFTWARE ENG, DOI [10.1109/ TSE. 2018.2836442, DOI 10.1109/TSE.2018.2836442]
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Wang SW, 2013, EUR CON SFTWR MTNCE, P5, DOI 10.1109/CSMR.2013.11
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Williams C, 2008, P 2008 WORKSHOP DEFE, P32
   Williams C.C., 2008, INT WORKING C MINING, P19
   Xia X, 2017, EMPIR SOFTW ENG, V22, P3149, DOI 10.1007/s10664-017-9514-4
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Zar J. H., 2005, ENCY BIOSTATIST, V7, DOI [10.1002/0470011815.b2a15150, 10.1093/biostatistics/kxi036, DOI 10.1093/BIOSTATISTICS/KXI036]
   Zimmermann T., 2006, P 2006 INT WORKSHOP, P72, DOI DOI 10.1145/1137983.1138001
NR 85
TC 53
Z9 57
U1 1
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2021
VL 47
IS 8
BP 1559
EP 1586
DI 10.1109/TSE.2019.2929761
PG 28
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA TZ7YH
UT WOS:000684687400003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Butler, S
   Gamalielsson, J
   Lundell, B
   Brax, C
   Sjoberg, J
   Mattsson, A
   Gustavsson, T
   Feist, J
   Lönroth, E
AF Butler, Simon
   Gamalielsson, Jonas
   Lundell, Bjorn
   Brax, Christoffer
   Sjoberg, Johan
   Mattsson, Anders
   Gustavsson, Tomas
   Feist, Jonas
   Lonroth, Erik
TI On Company Contributions to Community Open Source Software Projects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Companies; Software; Technological innovation; Collaboration;
   Interviews; Licenses; Open source software; company contribution; work
   practices
ID GOVERNANCE; FIRMS
AB The majority of contributions to community open source software (OSS) projects are made by practitioners acting on behalf of companies and other organisations. Previous research has addressed the motivations of both individuals and companies to engage with OSS projects. However, limited research has been undertaken that examines and explains the practical mechanisms or work practices used by companies and their developers to pursue their commercial and technical objectives when engaging with OSS projects. This research investigates the variety of work practices used in public communication channels by company contributors to engage with and contribute to eight community OSS projects. Through interviews with contributors to the eight projects we draw on their experiences and insights to explore the motivations to use particular methods of contribution. We find that companies utilise work practices for contributing to community projects which are congruent with the circumstances and their capabilities that support their short- and long-term needs. We also find that companies contribute to community OSS projects in ways that may not always be apparent from public sources, such as employing core project developers, making donations, and joining project steering committees in order to advance strategic interests. The factors influencing contributor work practices can be complex and are often dynamic arising from considerations such as company and project structure, as well as technical concerns and commercial strategies. The business context in which software created by the OSS project is deployed is also found to influence contributor work practices.
C1 [Butler, Simon; Gamalielsson, Jonas; Lundell, Bjorn] Univ Skovde, S-54128 Skovde, Sweden.
   [Brax, Christoffer] Combitech AB, SE-58015 Linkoping, Sweden.
   [Sjoberg, Johan] Findwise AB, S-41140 Gothenburg, Sweden.
   [Mattsson, Anders] Husqvarna AB, SE-56182 Huskvarna, Sweden.
   [Gustavsson, Tomas] PrimeKey Solut AB, S-17173 Stockholm, Sweden.
   [Feist, Jonas] RedBridge AB, S-11120 Stockholm, Sweden.
   [Lonroth, Erik] Scania IT AB, S-15132 Sodertalje, Sweden.
C3 University of Skovde; Combitech
RP Butler, S (corresponding author), Univ Skovde, S-54128 Skovde, Sweden.
EM simon.butler@his.se; jonas.gamalielsson@his.se; bjorn.lundell@his.se;
   christoffer.brax@combitech.se; johan.sjoberg@findwise.com;
   anders.mattsson@husqvarnagroup.com; tomas.gustavsson@primekey.com;
   jonas.feist@redbridge.se; erik.lonroth@scania.com
RI Butler, Simon/AAC-2125-2020
OI Sjoberg, Johan/0000-0003-4563-3808; Butler, Simon/0000-0002-6215-3753;
   Brax, Christoffer/0000-0002-2161-164X; Lonroth, Erik/0000-0002-2206-9979
FU Swedish Knowledge Foundation (KK-stiftelsen)
FX The authors are very grateful for the input of contributors to the OSS
   projects investigated who were interviewed for this research. This
   research has been financially supported by the Swedish Knowledge
   Foundation (KK-stiftelsen) and participating partner organisations in
   the LIM-IT project. The authors are grateful for the stimulating
   collaboration and support from colleagues and partner organisations.
CR Agerfalk P., 2005, P 1 INT C OPEN SOURC, P82
   Ågerfalk PJ, 2008, MIS QUART, V32, P385
   Alves C, 2017, ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 3, P215, DOI 10.5220/0006269402150226
   Andersen-Gott M, 2012, INT J INFORM MANAGE, V32, P106, DOI 10.1016/j.ijinfomgt.2011.10.003
   [Anonymous], 2002, P INT WORKSH PRINC S
   Apache CloudStack, 2017, CLOUDSTACK S HIST
   Apache Software Foundation, 2018, COD COND
   Apache Software Foundation, 2004, CONTR LIC AGR
   Apache Software Foundation, 2002, BYL AP SOFTW FDN
   ASF, 2018, AP SOFTW FDN SPONS P
   ASF, 2018, IND CONTR LIC AGR AG
   ASF, 2018, SOFTW GRANT CORP CON
   Australian Charities and Not For Profits Commission, 2017, LEG BOUNC CASTL REG
   Bonaccorsi A., 2006, Knowledge Technology & Policy, V18, P40, DOI 10.1007/s12130-006-1003-9
   Bonaccorsi A., 2007, Proceedings of the First International Workshop on Emerging Trends in FLOSS Research and Development, P13, DOI DOI 10.1109/FLOSS.2007.3
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Butler S, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P201, DOI 10.1145/3183519.3183531
   Canonical Ltd, 2017, UB COD COND V2 0
   Contiki OS, 2018, CONTIKI OPEN SOURCE
   Crowston K, 2008, J DATABASE MANAGE, V19, P1, DOI 10.4018/jdm.2008040101
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   Dahlander L, 2006, RES POLICY, V35, P1243, DOI 10.1016/j.respol.2006.09.011
   Dahlander L, 2008, LONG RANGE PLANN, V41, P629, DOI 10.1016/j.lrp.2008.09.003
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   Eclipse Foundation, 2017, ECL CORP SPONS
   Eclipse Foundation, 2015, COMM COD COND
   Eclipse Foundation, 2011, COMM COD COND
   Eclipse Foundation, 2016, ECL CONTR AGR
   Eclipse Foundation, 2018, ECL MEMB
   Eclipse IoT Working Group, 2018, OP SOURC IOT
   Eclipse Leshan, 2018, LESH
   Faudou R., 2018, MDT PAPYRUS PROPOSAL
   Fitzgerald B., 2017, SCALING SOFTWARE BUS
   Fitzgerald B, 2006, MIS QUART, V30, P587
   Fogel K, 2016, DISSECTING MYTH OPEN
   Fogel K., 2017, PRODUCING OPEN SOURC, V2nd
   Gamalielsson J, 2014, J SYST SOFTWARE, V89, P128, DOI 10.1016/j.jss.2013.11.1077
   Gamalielsson J, 2011, IFIP ADV INF COMM TE, V365, P348
   Gamalielsson Jonas, 2017, P 13 INT S OP COLL, P1
   German DM, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P523, DOI 10.1145/3180155.3180217
   Germonprez Matt, 2013, Interactions, V20, P54, DOI 10.1145/2527191
   Germonprez M., 2014, INT J INFORM SYSTEMS, V1, P125, DOI DOI 10.1504/IJISAM.2014.062290
   Gerring John., 2017, CASE STUDY RES PRINC, V2nd, DOI DOI 10.2277/0521676568
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Hauge O, 2009, INT FED INFO PROC, V299, P70
   Lakhani KR, 2003, RES POLICY, V32, P923, DOI 10.1016/S0048-7333(02)00095-1
   Lerner J, 2002, J IND ECON, V50, P197, DOI 10.1111/1467-6451.00174
   Levy M, 2015, P AM C INF SYST, P4778
   Lin B, 2017, INT CONF GLOBAL SOFT, P66, DOI 10.1109/ICGSE.2017.11
   Linåker J, 2018, J SYST SOFTWARE, V135, P17, DOI 10.1016/j.jss.2017.09.032
   Lings B., 2005, INFORM TECHNOLOGY PE, V18, P196
   Lundell B., 2013, MANAGING OPEN INNOVA, P3
   Lundell B., 2017, Open source systems: Towards robust practices, V496, P80
   Lundell B, 2010, INFORM SYST J, V20, P519, DOI 10.1111/j.1365-2575.2010.00348.x
   Mäenpää H, 2018, J INTERNET SERV APPL, V9, DOI 10.1186/s13174-018-0088-1
   MariaDB Foundation, 2018, MARIADB
   MariaDB Foundation, 2017, MARIADB CONTR AGR
   MariaDB Foundation, 2018, GOVERNANCE
   MariaDB Foundation, 2018, SPONS
   Markus ML, 2007, J MANAG GOV, V11, P151, DOI 10.1007/s10997-007-9021-x
   Mendez C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1004, DOI 10.1145/3180155.3180241
   Milinkovich Mike., 2017, OPEN COLLABORATION E
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Morgan L, 2014, J STRATEGIC INF SYST, V23, P226, DOI 10.1016/j.jsis.2014.07.001
   Munir H, 2018, EMPIR SOFTW ENG, V23, P186, DOI 10.1007/s10664-017-9511-7
   Open Stack Foundation, 2018, OP STACK FDN
   OpenStack Foundation, 2018, OPENSTACK FDN COMM C
   OpenStack Foundation, 2018, BYL OPENSTACK FDN
   OpenStack Foundation, 2018, OPENSTACK FDN COD CO
   OpenStack Foundation, 2018, JOIN OPENSTACK FDN
   OpenStack Foundation, 2018, OPEN SOURCE SOFTWARE
   Papyrus Industry Consortium, 2017, PAP IC
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Pearce-Moses Richard., 2005, A Glossary of Archival and Records Terminology
   Pinto G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P112, DOI 10.1109/SANER.2016.68
   PolarSys, 2018, OPEN SOURCE SOLUTION
   Poo-Caamaño G, 2015, IFIP ADV INF COMM TE, V451, P157, DOI 10.1007/978-3-319-17837-0_15
   Riehle D, 2016, IEEE T SOFTWARE ENG, V42, P1162, DOI 10.1109/TSE.2016.2554553
   Riehle D, 2015, COMPUTER, V48, P51, DOI 10.1109/MC.2015.132
   Riehle D, 2014, P ANN HICSS, P3286, DOI 10.1109/HICSS.2014.407
   Riehle D, 2011, COMPUTER, V44, P93, DOI 10.1109/MC.2011.206
   Riehle D, 2010, COMPUTER, V43, P86, DOI 10.1109/MC.2010.24
   Schaarschmidt M, 2015, INFORM ORGAN-UK, V25, P99, DOI 10.1016/j.infoandorg.2015.03.001
   Shaikh M, 2017, INFORM ORGAN-UK, V27, P116, DOI 10.1016/j.infoandorg.2017.04.001
   Singh V, 2012, PROCEEDINGS OF THE 17TH ACM INTERNATIONAL CONFERENCE ON SUPPORTING GROUP WORK, P65
   Stol KJ, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2533685
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   The Legion of the Bouncy Castle Inc, 2018, DON SUPP BOUNC CASTL
   United States Federal Government, TITL 26 INT REV COD
   van der Hinden F, 2009, IEEE SOFTWARE, V26, P77, DOI 10.1109/MS.2009.88
   van Wesel P, 2017, PROC IEEE INT CONF S, P544, DOI 10.1109/ICSME.2017.25
   Wei KN, 2017, INFORM MANAGE-AMSTER, V54, P573, DOI 10.1016/j.im.2016.11.006
   Zhang Yu-Xia, 2017, Journal of Software, V28, P1343, DOI 10.13328/j.cnki.jos.005227
   Zhang YX, 2018, PROC IEEE ACM INT C, P440, DOI 10.1145/3183440.3195047
   Zhou MH, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2876443
   Zhou MH, 2015, IEEE T SOFTWARE ENG, V41, P82, DOI 10.1109/TSE.2014.2349496
NR 98
TC 14
Z9 14
U1 2
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL 1
PY 2021
VL 47
IS 7
BP 1381
EP 1401
DI 10.1109/TSE.2019.2919305
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA TJ6XV
UT WOS:000673623000005
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Mohanani, R
   Turhan, B
   Ralph, P
AF Mohanani, Rahul
   Turhan, Burak
   Ralph, Paul
TI Requirements Framing Affects Design Creativity
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Creativity; Software; Task analysis; Requirements engineering; Random
   access memory; Ferroelectric films; Nonvolatile memory; Cognitive bias;
   creativity; design; experiment; originality; practicality; requirements;
   prioritization
ID SOFTWARE; SPECIFICITY; HEURISTICS; KNOWLEDGE; FRAMEWORK; BIASES
AB Design creativity, the originality and practicality of a solution concept, is critical for the success of many software projects. However, little research has investigated the relationship between the way desiderata are presented and design creativity. This study therefore investigates the impact of presenting desiderata as ideas, requirements or prioritized requirements on design creativity. Two between-subjects randomized controlled experiments were conducted with 42 and 34 participants. Participants were asked to create design concepts from a list of desiderata. Participants who received desiderata framed as requirements or prioritized requirements created designs that are, on average, less original but more practical than the designs created by participants who received desiderata framed as ideas. This suggests that more formal, structured presentations of desiderata are less appropriate where more innovative solutions are desired. The results also show that design performance is highly susceptible to minor changes in the vernacular used to communicate desiderata.
C1 [Mohanani, Rahul] IIIT Delhi, Dept CSE&HCD, Delhi 110020, India.
   [Mohanani, Rahul; Turhan, Burak] Univ Oulu, M3S Grp, FI-90014 Oulu, Finland.
   [Turhan, Burak] Monash Univ, Fac IT, Clayton, Vic 3800, Australia.
   [Ralph, Paul] Univ Auckland, Dept Comp Sci, Auckland 1010, New Zealand.
C3 Indraprastha Institute of Information Technology Delhi; University of
   Oulu; Monash University; University of Auckland
RP Mohanani, R (corresponding author), IIIT Delhi, Dept CSE&HCD, Delhi 110020, India.
EM rahul.mohanani@iiitd.ac.in; burak.turhan@monash.edu; paul@paulralph.name
RI Turhan, Burak/G-7400-2011; Ralph, D. Paul/H-4322-2019; Mohanani,
   Rahul/AAG-9762-2019
OI Turhan, Burak/0000-0003-1511-2163; Ralph, D. Paul/0000-0002-7411-0857;
   Mohanani, Rahul/0000-0001-7018-8836
CR Achimugu P, 2014, INFORM SOFTWARE TECH, V56, P568, DOI 10.1016/j.infsof.2014.02.001
   Adams K., 2005, The sources of innovation and creativity: National center on education and the economy (NCEE) research summary and final report
   Amabile T. M., 1996, CREATIVITY CONTEXT
   AMABILE TM, 1988, RES ORGAN BEHAV, V10, P123
   AMABILE TM, 1983, J PERS SOC PSYCHOL, V45, P357, DOI 10.1037/0022-3514.45.2.357
   [Anonymous], 1993, PSYCHOL JUDGMENT DEC
   Atilola O, 2016, DESIGN STUD, V42, P110, DOI 10.1016/j.destud.2015.10.005
   Baer J, 2005, ROEPER REV, V27, P158, DOI 10.1080/02783190509554310
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   BOHM P, 1992, J ECON PSYCHOL, V13, P355, DOI 10.1016/0167-4870(92)90039-A
   Booklets A, 1966, THINKING CREATIVELY
   Browne GJ, 2002, INFORM MANAGE-AMSTER, V39, P625, DOI 10.1016/S0378-7206(02)00014-9
   Butler AB, 2003, CREATIVITY RES J, V15, P235, DOI 10.1207/S15326934CRJ152&3_13
   Calikli G., 2010, Proceedings of the 6th International Conference on Predictive Models in Software Engineering, P10
   Checkland P.B., 2006, Learning for action: a short definitive account of soft systems methodology and its use for practitioner, teachers, and students
   Chotisarn N, 2013, INT CONF INFO SCI, P951, DOI 10.1109/ICIST.2013.6747696
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Christensen BT, 2016, DESIGN STUD, V45, P116, DOI 10.1016/j.destud.2015.12.005
   Christiaans HHCM, 2002, CREATIVITY RES J, V14, P41, DOI 10.1207/S15326934CRJ1401_4
   Chrysikou EG, 2005, J EXP PSYCHOL LEARN, V31, P1134, DOI 10.1037/0278-7393.31.5.1134
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   Crawford B., 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P20, DOI 10.1109/CHASE.2012.6223015
   Cross N, 2004, DESIGN STUD, V25, P427, DOI 10.1016/j.destud.2004.06.002
   CROSS N., 1992, RES DESIGN THINKING
   Dabbagh M, 2016, SOFT COMPUT, V20, P4497, DOI 10.1007/s00500-015-1760-z
   Daneva M, 2013, J SYST SOFTWARE, V86, P1333, DOI 10.1016/j.jss.2012.12.046
   Dexter S., 2013, Mind and Society, V12, P113
   Diedrich J, 2015, PSYCHOL AESTHET CREA, V9, P35, DOI 10.1037/a0038688
   Femmer H, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON REQUIREMENTS ENGINEERING AND TESTING (RET), P13, DOI 10.1109/RET.2015.11
   Finke RA, 1996, CONSCIOUS COGN, V5, P381, DOI 10.1006/ccog.1996.0024
   Guilford J, 1965, TEACHING GIFTED STUD, V21
   GUINDON R, 1990, INT J MAN MACH STUD, V33, P279, DOI 10.1016/S0020-7373(05)80120-8
   Hastie R., 2010, Rational Choice in an Uncertain World: the Psychology of Judgment and Decision Making, V2nd ed
   Horowitz R., 1999, Creative problem solving in engineering design
   IEEE, 1998, IEEE, P1, DOI [10.1109/IEEESTD.1998.88286, DOI 10.1109/IEEESTD.1998.88286]
   Jansson D., 1991, DESIGN STUDIES, V12, P3, DOI [DOI 10.1016/0142-694X(91)90003-F, 10.1016/0142-694X(91)90003-F]
   Jirotka M., 1994, Requirements Engineering: Social and Technical Issues
   Jorgensen M, 2012, IEEE T SOFTWARE ENG, V38, P677, DOI 10.1109/TSE.2011.40
   Karlsson J, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P110, DOI 10.1109/ICRE.1996.491435
   Kim J, 2014, HUM-COMPUT INTERACT, V29, P516, DOI 10.1080/07370024.2014.896706
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Law J Hassard J., 1999, Actor network theory and after
   Lichtenstein S, 2006, CONSTRUCTION OF PREFERENCE, P1, DOI 10.2277/ 0521542200
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Madni A. M., 2017, TRADEOFF DECISIONS S, P373, DOI DOI 10.1007/978-3-319-43712-5_4
   Maiden N, 2004, IEEE SOFTWARE, V21, P68, DOI 10.1109/MS.2004.1331305
   Maiden Neil, 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P57, DOI 10.1109/RE.2010.16
   Maiden N, 2001, IEEE SOFTWARE, V18, P10, DOI 10.1109/52.951486
   Mair Carolyn., 2011, P 2 INT WORKSHOP EME, P81
   Mayer R. E., 1999, Handbook of creativity, P449, DOI DOI 10.1017/CBO9780511807916.024
   Mohan K, 2008, COMMUN ACM, V51, P110, DOI 10.1145/1378727.1389970
   Mohanani R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P895, DOI 10.1145/2568225.2568235
   Moss J, 2007, J EXP PSYCHOL LEARN, V33, P876, DOI 10.1037/0278-7393.33.5.876
   Mueller JS, 2012, PSYCHOL SCI, V23, P13, DOI 10.1177/0956797611421018
   Mumford MD, 2003, CREATIVITY RES J, V15, P107, DOI 10.1207/S15326934CRJ152&3_01
   Nelson H., 2003, DESIGN WAY INTENTION
   Nguyen L, 2009, INFORM SOFTWARE TECH, V51, P655, DOI 10.1016/j.infsof.2008.09.002
   Nolan AJ, 2011, INT REQUIR ENG CONF, P259, DOI 10.1109/RE.2011.6051622
   Nordstokke DW, 2010, PSICOLOGICA, V31, P401
   Palmiero M., 2015, COGNITION EXPERIENCE, P189
   Palmiero M, 2015, FRONT PSYCHOL, V6, DOI 10.3389/fpsyg.2015.01870
   Parsons J, 2004, IEEE T SOFTWARE ENG, V30, P873, DOI 10.1109/TSE.2004.94
   Perkins D.N., 2009, The mind's best work
   Perttula M, 2007, J ENG DESIGN, V18, P93, DOI 10.1080/09544820600679679
   Plucker J.A., 2019, The Cambridge handbook of creativity, V2nd ed., P44
   Purcell A.T., 1996, DESIGN STUD, V17, P363, DOI [10.1016/S0142-694X(96)00023-3, DOI 10.1016/S0142-694X(96)00023-3, https://doi.org/10.1016/S0142-694X(96)00023-3]
   Ralph P, 2018, SCI COMPUT PROGRAM, V156, P68, DOI 10.1016/j.scico.2018.01.002
   Ralph P, 2015, 2015 IEEE/ACM 5TH INTERNATIONAL WORKSHOP ON THE TWIN PEAKS OF REQUIREMENTS AND ARCHITECTURE (TWINPEAKS), P20, DOI 10.1109/TwinPeaks.2015.12
   Ralph P, 2016, INFORM SOFTWARE TECH, V70, P232, DOI 10.1016/j.infsof.2015.06.010
   Ralph P, 2013, REQUIR ENG, V18, P293, DOI 10.1007/s00766-012-0161-4
   Ralph P, 2011, LECT NOTES BUS INF P, V93, P92
   Roskos-Ewoldsen B, 2008, J CREATIVE BEHAV, V42, P33, DOI 10.1002/j.2162-6057.2008.tb01079.x
   RUNCO MA, 1993, PERS INDIV DIFFER, V15, P537, DOI 10.1016/0191-8869(93)90337-3
   Runco MA, 2012, CREATIVITY RES J, V24, P92, DOI 10.1080/10400419.2012.650092
   Saha SK, 2012, 2012 INTERNATIONAL CONFERENCE ON INFORMATICS, ELECTRONICS & VISION (ICIEV), P34, DOI 10.1109/ICIEV.2012.6317443
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Shah J. J., 2003, Design Studies, V24, P111, DOI 10.1016/S0142-694X(02)00034-0
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Simon H.A., 1996, The Sciences of the Artificial, V3rd ed
   Sosa M, 2009, ICED 09 - THE 17TH INTERNATIONAL CONFERENCE ON ENGINEERING DESIGN, VOL 3: DESIGN ORGANIZATION AND MANAGEMENT, P343
   STACY W, 1995, COMMUN ACM, V38, P57, DOI 10.1145/203241.203256
   Stanovich K. E., 2009, WHAT INTELLIGENCE TE
   TORRANCE EP, 1972, J CREATIVE BEHAV, V6, P236, DOI 10.1002/j.2162-6057.1972.tb00936.x
   Turega M., 2006, P 10 EUR C SOFTW MAI
   TVERSKY A, 1981, SCIENCE, V211, P453, DOI 10.1126/science.7455683
   TVERSKY A, 1974, SCIENCE, V185, P1124, DOI 10.1126/science.185.4157.1124
   Vollmeyer R, 2002, EXP PSYCHOL, V49, P98, DOI 10.1027//1618-3169.49.2.98
   Wirth J, 2009, COMPUT HUM BEHAV, V25, P299, DOI 10.1016/j.chb.2008.12.004
   Xu S., 2005, P EMP SOFTW ENG NOOS
   Youmans RJ, 2014, AI EDAM, V28, P129, DOI 10.1017/S0890060414000043
   Zahner D, 2010, AI EDAM, V24, P231, DOI 10.1017/S0890060410000077
   Zhang LX, 2011, 2011 INTERNATIONAL CONFERENCE ON AEROSPACE ENGINEERING AND INFORMATION TECHNOLOGY (AEIT 2011), P129, DOI 10.1109/CCIENG.2011.6007974
NR 93
TC 14
Z9 14
U1 2
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2021
VL 47
IS 5
BP 936
EP 947
DI 10.1109/TSE.2019.2909033
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA SC1RN
UT WOS:000650457700005
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Romano, S
   Vendome, C
   Scanniello, G
   Poshyvanyk, D
AF Romano, Simone
   Vendome, Christopher
   Scanniello, Giuseppe
   Poshyvanyk, Denys
TI A Multi-Study Investigation into Dead Code
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software systems; Maintenance engineering; Software engineering;
   Interviews; Tools; Open source software; Dead code; unreachable code;
   unused code; bad smell; empirical investigation; multi-study
AB Dead code is a bad smell and it appears to be widespread in open-source and commercial software systems. Surprisingly, dead code has received very little empirical attention from the software engineering research community. In this paper, we present a multi-study investigation with an overarching goal to study, from the perspective of researchers and developers, when and why developers introduce dead code, how they perceive and cope with it, and whether dead code is harmful. To this end, we conducted semi-structured interviews with software professionals and four experiments at the University of Basilicata and the College of William Mary. The results suggest that it is worth studying dead code not only in the maintenance and evolution phases, where our results suggest that dead code is harmful, but also in the design and implementation phases. Our results motivate future work to develop techniques for detecting and removing dead code and suggest that developers should avoid this smell.
C1 [Romano, Simone] Univ Basilicata, BASELab Res Grp, I-85100 Potenza, PZ, Italy.
   [Scanniello, Giuseppe] Univ Basilicata, Dept Math & Comp Sci, I-85100 Potenza, PZ, Italy.
   [Scanniello, Giuseppe] Univ Basilicata, Lab Software Engn, BASELab, I-85100 Potenza, PZ, Italy.
   [Vendome, Christopher] Coll William & Mary, Williamsburg, VA 23185 USA.
   [Poshyvanyk, Denys] Coll William & Mary, Comp Sci, Williamsburg, VA 23185 USA.
C3 University of Basilicata; University of Basilicata; University of
   Basilicata; William & Mary; William & Mary
RP Scanniello, G (corresponding author), Univ Basilicata, Dept Math & Comp Sci, I-85100 Potenza, PZ, Italy.; Scanniello, G (corresponding author), Univ Basilicata, Lab Software Engn, BASELab, I-85100 Potenza, PZ, Italy.
EM simone.romano@unibas.it; cvendome@cs.wm.edu;
   giuseppe.scanniello@unibas.it; denys@cs.wm.edu
RI Romano, Simone/JVZ-6529-2024; Romano, Simone/ABD-6504-2020
OI Romano, Simone/0000-0003-4880-3622; Scanniello,
   Giuseppe/0000-0003-0024-7508; Poshyvanyk, Denys/0000-0002-5626-7586
FU NSF [CCF-1253837]
FX The authors would like to thank all the software professionals and
   students from both continents who participated in our multi-study
   investigation. Vendome and Poshyvanyk have been supported in part by the
   NSF CCF-1253837. Any opinions, findings, and conclusions expressed
   herein are the authors and do not necessarily reflect those of the
   sponsors.
CR Abran A., 2001, Guide to the software engineering body of knowledge: trial version
   Anderson MJ, 2001, AUSTRAL ECOL, V26, P32, DOI 10.1046/j.1442-9993.2001.01070.x
   [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], 1983, INTRO MODERN INFORM
   [Anonymous], 2005, ISOIEC 25000 SYSTEMS
   Basili V., 1994, The Goal Question Metric Approach, P528
   Boomsma H, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P511, DOI 10.1109/ICSM.2012.6405314
   Braun V, 2021, QUAL RES PSYCHOL, V18, P328, DOI 10.1080/14780887.2020.1769238
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Canfora G, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P326, DOI 10.1109/FOSE.2007.15
   Carver JC, 2014, EMPIR SOFTW ENG, V19, P267, DOI 10.1007/s10664-013-9290-8
   Cassell C., 2004, Essential Guide to Qualitative Methods in Organizational Research, DOI DOI 10.4135/9781446280119.N21
   Chen KR, 2000, PROG COMPREHEN, P241, DOI 10.1109/WPC.2000.852498
   Ciolkowski M, 2004, EUROMICRO CONF PROC, P354, DOI 10.1109/EURMIC.2004.1333390
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Debray SK, 2000, ACM T PROGR LANG SYS, V22, P378, DOI 10.1145/349214.349233
   Eder S, 2012, PROC INT CONF SOFTW, P1102, DOI 10.1109/ICSE.2012.6227109
   Fard AM, 2013, IEEE INT WORK C SO, P116, DOI 10.1109/SCAM.2013.6648192
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   Good P, 2000, Permutation Tests: A Practical Guide to Resampling Methods for Testing Hypotheses, VSecond
   Guest G, 2006, FIELD METHOD, V18, P59, DOI 10.1177/1525822X05279903
   Hannay JE, 2008, IEEE T SOFTWARE ENG, V34, P242, DOI 10.1109/TSE.2008.13
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Mäntylä M, 2003, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSM.2003.1235447
   Marchetto Alessandro, 2009, International Journal on Software Tools for Technology Transfer, V11, P427, DOI 10.1007/s10009-009-0123-4
   Martin R. C., 2008, Clean Code: A Handbook of Agile Software Craftsmanship
   Murphy-Hill E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1, DOI 10.1145/2568225.2568226
   Ricca F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P361, DOI 10.1145/1368088.1368138
   Ricca F, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2629457
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Romano S., 2016, PROC IEEE INT C PROG, P1
   Romano S., 2016, P 31 ANN ACM S APPL, P1538, DOI DOI 10.1145/2851613.2851968
   Romano S, 2015, PROC IEEE INT CONF S, P339, DOI 10.1109/ICSM.2015.7332484
   Scanniello Giuseppe, 2014, 2014 40th EUROMICRO Conference on Software Engineering and Advanced Applications. Proceedings, P392, DOI 10.1109/SEAA.2014.67
   Scanniello G., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P524, DOI 10.1109/ICSM.2011.6080823
   Scanniello G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2491912
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Stake Robert E., 1995, The Art of Case Study Research
   Thurmond VA, 2001, J NURS SCHOLARSHIP, V33, P253, DOI 10.1111/j.1547-5069.2001.00253.x
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1838
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Vegas S, 2016, IEEE T SOFTWARE ENG, V42, P120, DOI 10.1109/TSE.2015.2467378
   Vitiello G, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P139, DOI 10.1109/REW.2017.67
   Wake W.C., 2003, Refactoring Workbook, V1st
   Wohlin C., 2012, Experimentation in Software Engineering
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
NR 51
TC 18
Z9 20
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2020
VL 46
IS 1
BP 71
EP 99
DI 10.1109/TSE.2018.2842781
PG 29
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA KE2MI
UT WOS:000508392800005
DA 2024-07-18
ER

PT J
AU Harrison, MD
   Masci, P
   Campos, JC
AF Harrison, Michael D.
   Masci, Paolo
   Campos, Jose C.
TI Verification Templates for the Analysis of User Interface Software
   Design
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Human-computer interaction; model-based development; formal
   specifications; formal verification; prototype verification system (PVS)
ID MODEL CHECKING; REAL-TIME; PVS
AB The paper describes templates for model-based analysis of usability and safety aspects of user interface software design. The templates crystallize general usability principles commonly addressed in user-centred safety requirements, such as the ability to undo user actions, the visibility of operational modes, and the predictability of user interface behavior. These requirements have standard forms across different application domains, and can be instantiated as properties of specific devices. The modeling and analysis process is carried out using the Prototype Verification System (PVS), and is further facilitated by structuring the specification of the device using a format that is designed to be generic across interactive systems. A concrete case study based on a commercial infusion pump is used to illustrate the approach. A detailed presentation of the automated verification process using PVS shows how failed proof attempts provide precise information about problematic user interface software features.
C1 [Harrison, Michael D.] Newcastle Univ, Sch Comp, Newcastle Upon Tyne NE1 7RU, Tyne & Wear, England.
   [Masci, Paolo; Campos, Jose C.] HASLab INESC TEC, P-4710057 Braga, Portugal.
   [Masci, Paolo; Campos, Jose C.] Univ Minho, P-4710057 Braga, Portugal.
C3 Newcastle University - UK; INESC TEC; Universidade do Minho;
   Universidade do Minho
RP Harrison, MD (corresponding author), Newcastle Univ, Sch Comp, Newcastle Upon Tyne NE1 7RU, Tyne & Wear, England.
EM michael.harrison@ncl.ac.uk; paolo.masci@inesctec.pt;
   jose.campos@di.uminho.pt
RI Masci, Paolo/H-9632-2019; Campos, José Creissac/B-2506-2008; Harrison,
   Michael/GYD-8608-2022
OI Masci, Paolo/0000-0002-0667-7763; Campos, José
   Creissac/0000-0001-9163-580X; Harrison, Michael/0000-0002-5567-9650
FU EPSRC [EP/G059063/1]; North Portugal Regional Operational Programme
   (NORTE 2020), under the PORTUGAL 2020 Partnership Agreement
   [NORTE-01-0145-FEDER-000016]; European Regional Development Fund (ERDF);
   EPSRC [EP/G059063/1] Funding Source: UKRI
FX This work has been funded by the EPSRC research grant EP/G059063/1: CHI+
   MED (Computer-Human Interaction for Medical Devices). We are grateful to
   Harold Thimbleby's team at Swansea University, part of the CHI+ MED
   project, and especially Patrick Oladimeji who developed the infusion
   pump simulation that helped us develop the models. We also thank the
   anonymous reviewers for valuable feedback. Jose C. Campos and Paolo
   Masci were funded by project NORTE-01-0145-FEDER-000016, financed by the
   North Portugal Regional Operational Programme (NORTE 2020), under the
   PORTUGAL 2020 Partnership Agreement, and through the European Regional
   Development Fund (ERDF).
CR AAMI, 2007, 623662007 AAMI ANSI
   AAMI, 2015, P AAMI FDA INF DEV S
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   [Anonymous], AAMI FDA INF DEV SUM
   [Anonymous], 1992, TEMPORAL LOGIC REACT, DOI DOI 10.1007/978-1-4612-0931-7
   Archer M, 2000, ANN MATH ARTIF INTEL, V29, P139, DOI 10.1023/A:1018913028597
   Arney D., 2009, MSCIS0831 U PENNS
   ATLEE JM, 1993, IEEE T SOFTWARE ENG, V19, P24, DOI 10.1109/32.210305
   Berstel J, 2005, ACM T SOFTW ENG METH, V14, P124, DOI 10.1145/1061254.1061256
   Bolton ML, 2010, INNOV SYST SOFTW ENG, V6, P219, DOI 10.1007/s11334-010-0129-9
   Bowen Judy, 2017, Proceedings of the ACM on Human-Computer Interaction, V1, DOI 10.1145/3095807
   Bowen J., 2013, P 5 ACM SIGCHI S ENG, P91, DOI DOI 10.1145/2494603.2480314
   Bowen J, 2015, 2015 24TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC 2015), P223, DOI 10.1109/ASWEC.2015.30
   Bowen Judy, 2012, P 4 ACM SIGCHI S ENG, P121, DOI [10.1145/2305484.2305505, DOI 10.1145/2305484.2305505]
   Braberman V, 2005, IEEE T SOFTWARE ENG, V31, P1028, DOI 10.1109/TSE.2005.131
   BSI, 2008, 623042006 BSI CENELE
   Campos JC, 2008, LECT NOTES COMPUT SC, V5136, P72, DOI 10.1007/978-3-540-70569-7_6
   Campos JC, 2009, EICS'09: PROCEEDINGS OF THE ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS, P35
   Cardinal Health Inc, 2006, TECH REP
   Cimatti A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P359
   Corbett J. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P439, DOI 10.1109/ICSE.2000.870434
   Degani A., 2003, TAMING HAL DESIGNING
   Dix A.J., 1998, HUMAN COMPUTER INTER, V2nd
   Drusinsky D, 2008, IEEE SYST J, V2, P513, DOI 10.1109/JSYST.2008.2009190
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Fayollas C, 2017, ELECTRON P THEOR COM, P1, DOI 10.4204/EPTCS.240.1
   Food and Drug Administration (FDA), 2015, CLASS 2 DEV REC ACCU
   Gelman GE, 2013, IEEE SYS MAN CYBERN, P900, DOI 10.1109/SMC.2013.158
   Harrison MD, 2017, LECT NOTES COMPUT SC, V10487, P137, DOI 10.1007/978-3-319-68034-7_8
   Harrison MD, 2017, HUM-COMPUT INT-SPRIN, P379, DOI 10.1007/978-3-319-51838-1_14
   Harrison MD, 2017, IEEE T HUM-MACH SYST, V47, P834, DOI 10.1109/THMS.2017.2717910
   Harrison MD, 2015, INNOV SYST SOFTW ENG, V11, P95, DOI 10.1007/s11334-013-0201-3
   Hatcliff J., 2011, P HCMDSS, V2011, P23
   Heitmeyer C, 1998, LECT NOTES COMPUT SC, V1427, P526, DOI 10.1007/BFb0028775
   Holzmann GJ, 2003, LECT NOTES COMPUT SC, V2805, P40
   James JT, 2013, J PATIENT SAF, V9, P122, DOI 10.1097/PTS.0b013e3182948a69
   King A, 2009, PROC INT CONF SOFTW, P141, DOI 10.1109/ICSE-COMPANION.2009.5070972
   Larson Brian, 2012, 2012 4th International Workshop on Software Engineering in Health Care (SEHC 2012), P26, DOI 10.1109/SEHC.2012.6227013
   Lelli V., 2015, 2015 IEEE Eighth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P1, DOI DOI 10.1109/ICSTW.2015.7107403
   Li T, 2014, IEEE T PARALL DISTR, V25, P642, DOI 10.1109/TPDS.2013.50
   Loer K., 2006, Automated Software Engineering, V13, P469, DOI 10.1007/s10515-006-7999-y
   Masci Paolo, 2013, Computer Safety, Reliability and Security. 32nd International Conference, SAFECOMP 2013. Proceedings: LNCS 8153, P228, DOI 10.1007/978-3-642-40793-2_21
   Masci P., 2013, ACM SIGCHI Symposium on Engineering Interactive Computing Systems, EICS'13, London, United Kingdom - June 24 - 27, 2013, P81, DOI [DOI 10.1145/2494603, DOI 10.1145/2494603.2480302]
   Masci P., 2015, 3 WORKSH VER ASS SAN
   Masci P, 2014, LECT NOTES COMPUT SC, V8411, P200
   Masci P, 2017, LECT NOTES COMPUT SC, V9062, P214, DOI 10.1007/978-3-319-63194-3_14
   Masci P, 2015, LECT NOTES COMPUT SC, V9206, P470, DOI 10.1007/978-3-319-21690-4_30
   Mauro G, 2017, ELECTRON P THEOR COM, P53, DOI 10.4204/EPTCS.240.4
   Mori G, 2002, IEEE T SOFTWARE ENG, V28, P797, DOI 10.1109/TSE.2002.1027801
   Newcombe C, 2015, COMMUN ACM, V58, P66, DOI 10.1145/2699417
   Nielsen J., 1990, SIGCHI Bulletin, P249
   Nielsen J., 1994, USABILITY INSPECTION
   OWRE S, 1992, LECT NOTES ARTIF INT, V607, P748
   Rushby J, 2002, RELIAB ENG SYST SAFE, V75, P167, DOI 10.1016/S0951-8320(01)00092-8
   RYAN M, 1991, LECT NOTES COMPUT SC, V526, P569
   Shankar N., 1999, PVS SYSTEM GUIDE PVS
   Singh NK, 2017, LECT NOTES COMPUT SC, V10563, P167, DOI 10.1007/978-3-319-66854-3_13
   Tan F, 2015, IEEE T PARALL DISTR, V26, P2630, DOI 10.1109/TPDS.2014.2358224
   Thimbleby H, 2015, IEEE T SOFTWARE ENG, V41, P711, DOI 10.1109/TSE.2014.2383396
   US Food and Drug Administration, 2010, TECH REP
   van der Merwe H, 2012, SIGSOFT SOFTW ENG NO, V37, P1, DOI DOI 10.1145/2382756.2382797
   Zhang Yi, 2010, J Diabetes Sci Technol, V4, P263
NR 62
TC 6
Z9 6
U1 1
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2019
VL 45
IS 8
BP 802
EP 822
DI 10.1109/TSE.2018.2804939
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA IT1QZ
UT WOS:000482622600004
OA Green Published
DA 2024-07-18
ER

PT J
AU Ralph, P
AF Ralph, Paul
TI Toward Methodological Guidelines for Process Theories and Taxonomies in
   Software Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Research methodology; process theory; taxonomy; theory for analysis;
   theory for understanding; model; framework; guidelines; case study;
   grounded theory; questionnaire; experiment; action research
ID PROCESS IMPROVEMENT; DECISION-MAKING; DESIGN; VALIDATION; ONTOLOGY;
   SCIENCE; ROLES; MODEL; ART
AB Software engineering is increasingly concerned with theory because the foundational knowledge comprising theories provides a crucial counterpoint to the practical knowledge expressed through methods and techniques. Fortunately, much guidance is available for generating and evaluating theories for explaining why things happen (variance theories). Unfortunately, little guidance is available concerning theories for explaining how things happen (process theories), or theories for analyzing and understanding situations (taxonomies). This paper therefore attempts to clarify the nature and functions of process theories and taxonomies in software engineering research, and to synthesize methodological guidelines for their generation and evaluation. It further advances the key insight that most process theories are taxonomies with additional propositions, which helps inform their evaluation. The proposed methodological guidance has many benefits: it provides a concise summary of existing guidance from reference disciplines, it adapts techniques from reference disciplines to the software engineering context, and it promotes approaches that better facilitate scientific consensus.
C1 [Ralph, Paul] Univ Auckland, Dept Comp Sci, 28 Princes St, Auckland 1010, New Zealand.
C3 University of Auckland
RP Ralph, P (corresponding author), Univ Auckland, Dept Comp Sci, 28 Princes St, Auckland 1010, New Zealand.
EM paul@paulralph.name
RI Ralph, D. Paul/H-4322-2019
OI Ralph, D. Paul/0000-0002-7411-0857
CR Alexander C., 1964, Notes on the Synthesis of Form
   Allison I, 2007, INFORM SOFTWARE TECH, V49, P668, DOI 10.1016/j.infsof.2007.02.003
   Allweyer T., 2011, FORMAL20110103 OMG
   [Anonymous], ACM SIGSOFT SOFTW EN
   [Anonymous], 1988, Qualitative research methods, DOI DOI 10.4135/9781412985000
   [Anonymous], 2012, COMMUNICATION YB 36
   [Anonymous], 2004, The rational unified process: an introduction
   [Anonymous], 1982, Debiasing, DOI DOI 10.1017/CBO9780511809477
   [Anonymous], 2017, OED Online
   [Anonymous], 2005, Extreme programming explained: Embrace change
   [Anonymous], ENCY BRITANNICA
   Arnott D, 2006, INFORM SYST J, V16, P55, DOI 10.1111/j.1365-2575.2006.00208.x
   Baker M.J., 2003, MARKETING REV, V3, P343
   BANSLER JP, 1993, ACM T INFORM SYST, V11, P165, DOI 10.1145/130226.148055
   Bayona-Ore S., 2012, SOFTW QUAL J, V22, P21
   Bhaskar R., 1975, REALIST THEORY SCI, DOI DOI 10.4324/9780203090732
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   Bogner A, 2009, RES METHODS SER, P1, DOI 10.1057/9780230244276
   Bollinger T, 1997, COMPUTER, V30, P128, DOI 10.1109/2.625346
   Boudreau MC, 2001, MIS QUART, V25, P1, DOI 10.2307/3250956
   Brooks F.P., 2010, Design of Design: Essays from a Computer Scientist
   CAMPANARIO JM, 1995, SCI COMMUN, V16, P304, DOI 10.1177/1075547095016003004
   CAMPBELL DT, 1959, PSYCHOL BULL, V56, P81, DOI 10.1037/h0046016
   Campbell DT., 1963, EXPT QUASIEXPERIMENT
   Charmaz K., 2006, CONSTRUCTING GROUNDE, DOI DOI 10.7748/NR.13.4.84.S4
   Checkland P, 1998, SYST PRACT ACT RES, V11, P9, DOI 10.1023/A:1022908820784
   Clarke P, 2016, COMM COM INF SC, V609, P351, DOI 10.1007/978-3-319-38980-6_25
   Coleman G, 2007, INFORM SOFTWARE TECH, V49, P654, DOI 10.1016/j.infsof.2007.02.011
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Condori-Fernandez N, 2009, INT SYMP EMP SOFTWAR, P503
   Cross N., 2001, Design Studies, V22, P425, DOI [10.1016/S0142-694X(01)00009-6, DOI 10.1016/S0142-694X(01)00009-6]
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   CURTIS B, 1992, COMMUN ACM, V35, P75, DOI 10.1145/130994.130998
   Curtis S, 2000, SOC SCI MED, V50, P1001, DOI 10.1016/S0277-9536(99)00350-0
   Dorst K., 1995, DESIGN STUD, V16, P139, DOI [10.1016/0142-694X(94)00005-X, DOI 10.1016/0142-694X(94)00005-X]
   DORST K., 1995, DESIGN STUD, V16, P261, DOI DOI 10.1016/0142-694X(94)00012-3
   Dubé L, 2003, MIS QUART, V27, P597
   DYER JS, 1992, MANAGE SCI, V38, P645, DOI 10.1287/mnsc.38.5.645
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Ericsson K. A., 1993, PROTOCOL ANAL VERBAL
   Ericsson KA., 1998, Mind, Culture, and Activity, V5, P178, DOI [DOI 10.1207/S15327884MCA0503_3, 10.1207/s15327884mca0503_3]
   Fenn J., 2008, Mastering the hype cycle: how to choose the right innovation at the right time
   Ferneley EH, 2006, EUR J INFORM SYST, V15, P345, DOI 10.1057/palgrave.ejis.3000629
   Finfgeld-Connett D., 2015, QUALITATIVE HLTH RES, V26, P291
   Fonteyn ME., 1993, Qualitative Health Research, V3, P430, DOI [DOI 10.1177/104973239300300403, 10.1177/104973239300300403]
   Forsberg K., 1992, Eng. Manag. J., V4, P36
   Gero J. S., 1998, Design Studies, V19, P21, DOI 10.1016/S0142-694X(97)00015-X
   Gero JS, 2007, AI EDAM, V21, P379, DOI 10.1017/S0890060407000340
   Gero JS, 2004, DESIGN STUD, V25, P373, DOI 10.1016/j.destud.2003.10.010
   GERO JS, 1990, AI MAG, V11, P26
   Glaser BarneyG., 1992, Basics of Grounded Theory Analysis: Emergence vs. Forcing, P1
   Gray EM, 1998, SOFTWARE QUAL J, V7, P21, DOI 10.1023/A:1008840808887
   Gregor S, 2006, MIS QUART, V30, P611
   Grudin J., 2013, BIAS
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Hernes T, 2007, SCAND J MANAG, V23, P251, DOI 10.1016/j.scaman.2007.06.002
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   Hoffman B, 2012, LEARN INSTR, V22, P133, DOI 10.1016/j.learninstruc.2011.09.001
   Hunicke R., 2004, Proc. AAAI Wksp. Challenges in Game AI, V4, P1722
   Hunt SD, 2008, ORGAN STUD, V29, P1469, DOI 10.1177/0170840608099521
   Jin Y, 2005, SOFT COMPUT, V9, P3, DOI 10.1007/S00500-003-0328-5
   Johnson P., 2012, IEEE Software, V29, P94, DOI 10.1109/MS.2012.127
   Jost J.T., 2011, ENCY PEACE PSYCHOL
   Jost JT, 2004, POLIT PSYCHOL, V25, P881, DOI 10.1111/j.1467-9221.2004.00402.x
   Kampenes VB, 2009, INFORM SOFTWARE TECH, V51, P71, DOI 10.1016/j.infsof.2008.04.006
   Kim Jaegwon., 1999, The Cambridge Dictionary of Philosophy, V2d, P125
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Koriat A, 2000, ANNU REV PSYCHOL, V51, P481, DOI 10.1146/annurev.psych.51.1.481
   Kuhn T. S., 1962, STRUCTURE SCI REVOLU
   Kvale S., 2016, Qualitative Inquiry, V1, P19
   Langley A, 1999, ACAD MANAGE REV, V24, P691, DOI 10.2307/259349
   Langley A, 2013, ACAD MANAGE J, V56, P1, DOI 10.5465/amj.2013.4001
   Lee AS, 2003, INFORM SYST RES, V14, P221, DOI 10.1287/isre.14.3.221.16560
   Lehman M.M., 2001, IWPSE 01 P 4 INT WOR, P70
   Lewis MW, 2000, ACAD MANAGE REV, V25, P760, DOI 10.2307/259204
   Lincoln Y. S., 1985, NATURALISTIC INQUIRY
   Maglyas A, 2013, J SYST SOFTWARE, V86, P3071, DOI 10.1016/j.jss.2013.07.045
   Maher M., 1995, 2 IFIP WG5 2 WORKSH, P1
   Mathiassen L, 2002, INFORM SYST J, V12, P81, DOI 10.1046/j.1365-2575.2002.00122.x
   McKay J., 2001, Information Technology & People, V14, P46, DOI 10.1108/09593840110384771
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Monge PR, 1990, ORGAN SCI, V1, P406, DOI 10.1287/orsc.1.4.406
   Nash Walter., 1993, Jargon: Its Uses and Abuses
   NISBETT RE, 1977, PSYCHOL REV, V84, P231, DOI 10.1037/0033-295X.84.3.231
   Palvia P., 1990, Information Resources Management Journal, V3, P23
   Parsons J, 2004, IEEE T SOFTWARE ENG, V30, P873, DOI 10.1109/TSE.2004.94
   Parsons J, 2008, MIS QUART, V32, P839
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   PLATT JR, 1964, SCIENCE, V146, P347, DOI 10.1126/science.146.3642.347
   Pohl RF, 2004, COGNITIVE ILLUSIONS: A HANDBOOK ON FALLACIES AND BIASES IN THINKING, JUDGEMENT AND MEMORY, P1
   Poole M.S., 2010, Handbook of Decision Making, P543
   Poole M.S., 2004, HDB ORG CHANGE INNOV
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Popper K., 2005, The logic of scientific discovery
   Quine Willard Van Orman, 1953, The Philosophical Review, P20, DOI DOI 10.2307/2181906
   Quine WillardVan Orman., 1990, PURSUIT TRUTH
   Ralph P., 2015, The Computer Games Journal, V4, P81
   Ralph P., 2016, P INT C EV ASS SOFTW
   Ralph P., 2011, P 6 MED C INF SYST
   Ralph P., 2010, THESIS, P117
   Ralph P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P24, DOI 10.1145/2568225.2568261
   Ralph P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P528, DOI 10.1145/2591062.2591110
   Ralph P, 2016, INFORM SOFTWARE TECH, V70, P232, DOI 10.1016/j.infsof.2015.06.010
   Ralph P, 2015, SCI COMPUT PROGRAM, V101, P21, DOI 10.1016/j.scico.2014.11.007
   Ralph P, 2013, REQUIR ENG, V18, P293, DOI 10.1007/s00766-012-0161-4
   Ralph P, 2011, LECT NOTES BUS INF P, V93, P92
   Ralph P, 2010, LECT NOTES COMPUT SC, V6105, P139, DOI 10.1007/978-3-642-13335-0_10
   Rolfe G, 2006, J ADV NURS, V53, P304, DOI 10.1111/j.1365-2648.2006.03727.x
   Rosch E., 1978, COGNITION CATEGORIZA, P27, DOI DOI 10.1016/B978-1-4832-1446-7.50028-5
   Royce W.W., 1970, P IEEE WESCON IEEE, P1
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Scacchi W., 2006, Software Process Improvement and Practice, V11, P95, DOI 10.1002/spip.255
   Schell J., 2008, The Art of Game Design: A Book of Lenses
   Schon D. A., 1983, The reflective practitioner: How professionals think in action
   Schwaber K., 2021, SCRUM GUIDE
   Sedano T, 2017, PROC INT CONF SOFTW, P130, DOI 10.1109/ICSE.2017.20
   Sharp H, 2000, IEEE SOFTWARE, V17, P40, DOI 10.1109/52.819967
   Shermer Michael., 2002, WHY PEOPLE BELIEVE W
   Sim SK, 2003, RES ENG DES, V14, P200, DOI 10.1007/s00163-003-0037-1
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Sober E., 1999, Proceedings and Addresses of the American Philosophical Association, V73, P47, DOI DOI 10.2307/3131087
   STACY W, 1995, COMMUN ACM, V38, P57, DOI 10.1145/203241.203256
   Steinert M., 2010, Technology Management for Global Economic Growth (PICMET), 2010 Proceedings of PICMET, V10, P1
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Stol KJ, 2013, 2013 2ND SEMAT WORKSHOP ON A GENERAL THEORY OF SOFTWARE ENGINEERING (GTSE), P5, DOI 10.1109/GTSE.2013.6613863
   STRAUB DW, 1989, MIS QUART, V13, P147, DOI 10.2307/248922
   Stray Viktoria Gulliksen, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P95, DOI 10.1109/ESEM.2013.30
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Trochim W.M., 2001, Research Methods Knowledge Base, V2
   Truex D., 2000, Accounting, Management and Information Technologies, V10, P53, DOI 10.1016/S0959-8022(99)00009-0
   VANDEVEN AH, 1995, ACAD MANAGE REV, V20, P510, DOI 10.2307/258786
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   Vermaas PE, 2007, DESIGN STUD, V28, P133, DOI 10.1016/j.destud.2006.11.001
   Weber R., 1997, Ontological foundations of information systems: Coopers Lybrand and the Accounting Association of Australia and New
   Webster J, 2002, MIS QUART, V26, pXIII
   Weller A.C., 2001, Editorial peer review : Its strengths and weaknesses
   Wohlin C., 2012, Experimentation in Software Engineering
   WOLFE RA, 1994, J MANAGE STUD, V31, P405, DOI 10.1111/j.1467-6486.1994.tb00624.x
   Wufka M, 2015, 2015 AGILE CONFERENCE, P60, DOI 10.1109/Agile.2015.10
   Yin R. K., 2017, CASE STUDY RES DESIG
   Yin R.K., 2003, CASE STUDY RES DESIG
   Zalta E.N., 2008, STANFORD ENCY PHILOS
   Zannier C, 2007, INFORM SOFTWARE TECH, V49, P637, DOI 10.1016/j.infsof.2007.02.010
NR 146
TC 36
Z9 37
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2019
VL 45
IS 7
BP 712
EP 735
DI 10.1109/TSE.2018.2796554
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA IK7MZ
UT WOS:000476775600004
DA 2024-07-18
ER

PT J
AU Franzago, M
   Di Ruscio, D
   Malavolta, I
   Muccini, H
AF Franzago, Mirco
   Di Ruscio, Davide
   Malavolta, Ivano
   Muccini, Henry
TI Collaborative Model-Driven Software Engineering: A Classification
   Framework and a Research Map
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Collaborative MDSE; CoMDSE; C-MDSE; model-driven engineering;
   collaborative software engineering; CoSE; systematic mapping study
ID DESIGN; ENVIRONMENT; SUPPORT; REVIEWS; SUCCESS; SYSTEMS; TOOLS
AB Context: Collaborative Model-Driven Software Engineering (MDSE) consists of methods and techniques where multiple stakeholders manage, collaborate, and are aware of each others' work on shared models. Objective: Collaborative MDSE is attracting research efforts from different areas, resulting in a variegated scientific body of knowledge. This study aims at identifying, classifying, and understanding existing collaborative MDSE approaches. Method: We designed and conducted a systematic mapping study. Starting from over 3,000 potentially relevant studies, we applied a rigorous selection procedure resulting in 106 selected papers, further clustered into 48 primary studies along a time span of 19 years. We rigorously defined and applied a classification framework and extracted key information from each selected study for subsequent analysis. Results: Our analysis revealed the following main fidings: (i) there is a growing scientific interest on collaborative MDSE in the last years; (ii) multi-view modeling, validation support, reuse, and branching are more rarely covered with respect to other aspects about collaborative MDSE; (iii) different primary studies focus differently on individual dimensions of collaborative MDSE (i.e., model management, collaboration, and communication); (iv) most approaches are language-specific, with a prominence of UML-based approaches; (v) few approaches support the interplay between synchronous and asynchronous collaboration. Conclusion: This study gives a solid foundation for classifying existing and future approaches for collaborative MDSE. Researchers and practitioners can use our results for identifying existing research/technical gaps to attack, better scoping their own contributions, or understanding existing ones.
C1 [Franzago, Mirco; Di Ruscio, Davide; Muccini, Henry] Univ Laquila, Dept Informat Engn Comp Sci & Math DISIM, Laquila, Italy.
   [Malavolta, Ivano] Vrije Univ Amsterdam, Dept Comp Sci, NL-1081 HV Amsterdam, Netherlands.
C3 University of L'Aquila; Vrije Universiteit Amsterdam
RP Franzago, M (corresponding author), Univ Laquila, Dept Informat Engn Comp Sci & Math DISIM, Laquila, Italy.
EM mirco.franzago@univaq.it; davide.diruscio@univaq.it; i.malavolta@vu.nl;
   henry.muccini@univaq.it
RI Di Ruscio, Davide/AAG-4674-2020; Malavolta, Ivano/E-9018-2017
OI Di Ruscio, Davide/0000-0002-5077-6793; Franzago,
   Mirco/0000-0003-4338-7746; Malavolta, Ivano/0000-0001-5773-8346;
   Muccini, Henry/0000-0001-6365-6515
CR [Anonymous], 2009, 2009 42 HAW INT C SY
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   [Anonymous], INT J ADV LIFE SCI
   [Anonymous], 2011, SYSTEMS SOFTWARE ENG
   [Anonymous], 2009, OBJECT ORIENTED SOFT
   Baghaei N, 2007, INT J COMP-SUPP COLL, V2, P159, DOI 10.1007/s11412-007-9018-0
   Baloian N., 2011, Proceedings of the 2011 15th International Conference on Computer Supported Cooperative Work in Design (CSCWD), P473, DOI 10.1109/CSCWD.2011.5960115
   Bang JY, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P155, DOI 10.1109/WICSA.2015.15
   Basciani F., 2014, 2 INT WORKSH MOD DRI, V1242, P66
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Bicacro E, 2012, 2012 9TH IEEE INTERNATIONAL SYMPOSIUM ON BIOMEDICAL IMAGING (ISBI), P134, DOI 10.1109/ISBI.2012.6235502
   Boulila N, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P422, DOI 10.1109/ASE.2004.1342781
   Brambilla M, 2014, SCI COMPUT PROGRAM, V89, P71, DOI 10.1016/j.scico.2013.03.010
   Brosch P, 2009, ECSCW 2009: PROCEEDINGS OF THE 11TH EUROPEAN CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P207, DOI 10.1007/978-1-84882-854-4_12
   Bruegge B., 2008, DISTRIBUTED SOFTWARE, P12
   Bruegge B., 2007, P 3 IEEE INT C GLOB, V2008, P12
   Bruegge B, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P139, DOI 10.1109/ICGSE.2006.261227
   Bruneliere H., 2010, P MOD DES AN SERV CL
   Büttner F, 2014, SCI COMPUT PROGRAM, V89, P162, DOI 10.1016/j.scico.2013.03.009
   Cai Hong-ming, 2015, Journal of Shanghai Jiaotong University (Science), V20, P86, DOI 10.1007/s12204-015-1593-z
   Canovas Izquierdo Javier Luis, 2012, 2012 Proceedings of 4th International Workshop Modeling in Software Engineering (MiSE 2012), P29, DOI 10.1109/MISE.2012.6226011
   Carrascal-Manzanares Carlos, 2015, INT C MODEL DRIVEN E, V1563, P19
   Cataldo M, 2009, INT CONF GLOBAL SOFT, P83, DOI 10.1109/ICGSE.2009.16
   Chen L., 2010, P 14 INT C EV ASS SO, P135
   Cicchetti A., 2012, ELECT COMMUN EASST, V50
   Cicchetti A, 2009, IEEE ENABL TECHNOL, P149, DOI 10.1109/WETICE.2009.48
   Cook C., 2006, P 29 AUSTR COMP SCI, P267
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Davies J, 2014, SCI COMPUT PROGRAM, V89, P88, DOI 10.1016/j.scico.2013.02.002
   Davies J, 2014, SCI COMPUT PROGRAM, V89, P126, DOI 10.1016/j.scico.2013.02.010
   De Lucia A, 2007, J VISUAL LANG COMPUT, V18, P492, DOI 10.1016/j.jvlc.2007.08.005
   De Lucia A, 2009, EUR CON SFTWR MTNCE, P89, DOI 10.1109/CSMR.2009.35
   Denning PJ, 2013, COMMUN ACM, V56, P29, DOI 10.1145/2535915
   Di Francescomarino C, 2011, J SOFTW MAINT EVOL-R, V23, P261, DOI 10.1002/smr.525
   Di Rocco J, 2016, LECT NOTES COMPUT SC, V9765, P70, DOI 10.1007/978-3-319-42064-6_5
   Di Rocco J, 2015, IEEE SOFTWARE, V32, P28, DOI 10.1109/MS.2015.61
   Di Ruscio D, 2017, PROC IEEE ACM INT C, P219, DOI 10.1109/ICSE-C.2017.143
   Di Ruscio D, 2014, SCI COMPUT PROGRAM, V89, P69, DOI 10.1016/j.scico.2013.12.006
   Dirix M., 2013, JOINT P TOOLS DEM PO, P14
   Dubois E, 2014, SCI COMPUT PROGRAM, V89, P199, DOI 10.1016/j.scico.2013.03.007
   Dullemond K, 2014, IEEE SOFTWARE, V31, P47, DOI 10.1109/MS.2014.105
   Duque R, 2008, J UNIVERS COMPUT SCI, V14, P1463
   Elaasar Maged, 2013, Modelling Foundations and Applications. 9th European Conference, ECMFA 2013. Proceedings. LNCS 7949, P165, DOI 10.1007/978-3-642-39013-5_12
   Erol Selim, 2013, 2013 IEEE 15th Conference on Business Informatics (CBI), P382, DOI 10.1109/CBI.2013.62
   Farwick M, 2010, LECT NOTES COMPUT SC, V6189, P278, DOI 10.1007/978-3-642-13911-6_19
   Forster S., 2012, LNI, VP- 206, P81
   Franzago M., TR00142016 DISIM U A
   Franzago M, 2014, PROCEEDINGS OF THE 1ST INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2014), P58, DOI 10.1145/2593902.2593917
   Gallardo J, 2012, J NETW COMPUT APPL, V35, P1086, DOI 10.1016/j.jnca.2011.12.009
   Genaro Motti V, 2013, P 31 ACM INT C DES C, P55
   Graham T. C. N., 1999, STEP '99. Proceedings Ninth International Workshop Software Technology and Engineering Practice, P22, DOI 10.1109/STEP.1999.798404
   Grunbacher P., 2004, ERCIM NEWS SPECIAL T, P12
   Gutwin C., 2002, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V11, P411, DOI 10.1023/A:1021271517844
   Hansen KM, 2004, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P595
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   Jae young Bang, 2010, 2010 32nd International Conference on Software Engineering (ICSE), P243, DOI 10.1145/1810295.1810341
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Kelly S, 1996, LECT NOTES COMPUT SC, V1080, P1
   Kitchenham B. A., 2007, VER23 EBSE
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kolovos D S., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering. BigMDE'13, V2, P1
   Koshima AA, 2015, SCI COMPUT PROGRAM, V113, P3, DOI 10.1016/j.scico.2015.07.004
   Krusche S., 2014, INT WORKSH COMP VERS, V34, P1
   Kuhrmann M, 2017, EMPIR SOFTW ENG, V22, P2852, DOI 10.1007/s10664-016-9492-y
   Kulkarni V, 2010, LECT NOTES COMPUT SC, V6395, P331
   Lajmi A, 2014, P DEM TRACK ACM IEEE, V1255, P25
   Lanubile F, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.39
   Lili S., 2005, P INF COMM TECHN SEM
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Maroti M., 2014, MPM@ MoDELS, V1237, P41
   Maróti M, 2014, PROCEDIA COMPUT SCI, V29, P2432, DOI 10.1016/j.procs.2014.05.227
   Maroti Miklos., 2014, Proceedingsofthe8thWorkshop on Multi-Paradigm Modeling co-located with the 17th International Conference on Model Driven Engineering Languages and Systems, MPM@MODELS 2014, Valencia, Spain, September 30, 2014, P41
   Michaux J., 2011, P 2011 ACM S APPL CO, P1470, DOI DOI 10.1145/1982185.1982500
   Mistrik I, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P1
   Mistrík I, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P389, DOI 10.1007/978-3-642-10294-3_19
   Mougenot A, 2009, LECT NOTES COMPUT SC, V5523, P16, DOI 10.1007/978-3-642-02164-0_2
   Murta L, 2007, SCI COMPUT PROGRAM, V65, P249, DOI 10.1016/j.scico.2006.05.011
   Nadas A, 2014, SCI COMPUT PROGRAM, V89, P105, DOI 10.1016/j.scico.2013.05.004
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Paige RF, 2007, ACM T SOFTW ENG METH, V16, pB1, DOI 10.1145/1243987.1243989
   Penichet VMR, 2008, LECT NOTES COMPUT SC, V5103, P389, DOI 10.1007/978-3-540-69389-5_45
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pichiliani M. C., 2006, P INT C COLL COMP NE, P1
   Portillo-Rodríguez J, 2012, INFORM SOFTWARE TECH, V54, P663, DOI 10.1016/j.infsof.2012.02.006
   Rekha VS, 2014, LECT NOTES COMPUT SC, V8627, P17, DOI 10.1007/978-3-319-09970-5_2
   Renger Michiel, 2008, International Journal of Simulation & Process Modelling, V4, P248, DOI 10.1504/IJSPM.2008.023686
   Rittgen Peter, 2009, 2009 42 HAWAII INT C, P1, DOI [10.1109/HICSS.2009.112, DOI 10.1109/HICSS.2009.112]
   Rocha R. G. C., 2011, CLEI ELECT J, V14
   Cuadrado JS, 2014, SCI COMPUT PROGRAM, V89, P176, DOI 10.1016/j.scico.2013.04.007
   Schuler D., 1993, Participatory Design: Principles and Practices
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   SOTTET js, 2014, P 2014 ACM SIGCHI S, P189
   Spencer D., 2009, CARD SORTING DESIGNI
   Sriplakich P, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P674
   Syriani E., 2013, JOINT P MODELS 13 DE, P21
   Tamburri DA, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2522968.2522971
   Thum C, 2009, LECT NOTES COMPUT SC, V5795, P137
   Tofan Dan, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P192, DOI 10.1007/978-3-642-39031-9_17
   Vredenburg K., 2002, Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2002, P471, DOI 10.1145/503376.503460
   Whitehead J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P214, DOI 10.1109/FOSE.2007.4
   Whitehead J, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P1, DOI 10.1007/978-3-642-10294-3_1
   Whittle J, 2013, LECT NOTES COMPUT SC, V8107, P1, DOI 10.1007/978-3-642-41533-3_1
   Wieland K, 2013, COMPUT SUPP COOP W J, V22, P181, DOI 10.1007/s10606-012-9172-4
   Wohlin C., 2012, Experimentation in Software Engineering
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Wüest D, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P685, DOI 10.1109/ICSE.2015.223
   Xu DM, 2009, P INT COMP SOFTW APP, P367, DOI 10.1109/COMPSAC.2009.56
   Zhang H, 2013, INFORM SOFTWARE TECH, V55, P1341, DOI 10.1016/j.infsof.2012.09.008
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhu NP, 2007, J SYST SOFTWARE, V80, P1390, DOI 10.1016/j.jss.2006.10.028
NR 112
TC 60
Z9 64
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2018
VL 44
IS 12
BP 1146
EP 1175
DI 10.1109/TSE.2017.2755039
PG 30
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HD6AP
UT WOS:000452614100002
DA 2024-07-18
ER

PT J
AU Wang, Z
   Wu, CG
   Yuan, X
   Wang, ZJ
   Li, JJ
   Yew, PC
   Huang, J
   Feng, XB
   Lan, YY
   Chen, YJ
   Lai, YM
   Guan, Y
AF Wang, Zhe
   Wu, Chenggang
   Yuan, Xiang
   Wang, Zhenjiang
   Li, Jianjun
   Yew, Pen-Chung
   Huang, Jeff
   Feng, Xiaobing
   Lan, Yanyan
   Chen, Yunji
   Lai, Yuanming
   Guan, Yong
TI Using Local Clocks to Reproduce Concurrency Bugs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Concurrency; bug reproducing; local clock
ID DETERMINISTIC REPLAY; PROGRAMS
AB Multi-threaded programs play an increasingly important role in current multi-core environments. Exposing concurrency bugs and debugging such multi-threaded programs are quite challenging due to their inherent non-determinism. In order to mitigate such non-determinism, many approaches such as record-and-replay have been proposed. However, those approaches often suffer significant performance degradation because they require a large amount of recorded information and/or long analysis and replay time. In this paper, we propose an efficient and effective approach, ReCBuLC (reproducing concurrency bugs using local clocks), to take advantage of the hardware clocks available on modern processors. The key idea is to reduce the recording overhead and the time to analyze events' global order by recording timestamps in each thread. These timestamps are used to determine the global order of shared accesses. To avoid the large overhead in accessing system-wide global clock, we opt to use local per-core clocks that incur much less access overhead. We then propose techniques to resolve skews among local clocks and obtain an accurate global event order. By using per-core clocks, state-of-the-art bug reproducing systems such as PRES and CLAP can reduce their recording overheads by up to 85 percent, and the analysis time up to 84.66%similar to 99.99%, respectively.
C1 [Wang, Zhe] Chinese Acad Sci, State Key Lab Comp Architecture, Architecture Inst Comp Technol, Beijing 100190, Peoples R China.
   [Wang, Zhe] Univ Chinese Acad Sci, Beijing 100190, Peoples R China.
   [Wu, Chenggang; Feng, Xiaobing; Lan, Yanyan; Chen, Yunji; Lai, Yuanming] Chinese Acad Sci, State Key Lab Comp Architecture, Inst Comp Technol, Beijing 100190, Peoples R China.
   [Yew, Pen-Chung] Univ Minnesota Twin Cities, Dept Comp Sci & Engn, Minneapolis, MN 55455 USA.
   [Huang, Jeff] Texas A&M Univ, Dept Comp Sci & Engn, College Stn, TX 77843 USA.
   [Guan, Yong] Capital Normal Univ, Coll Informat Engn, Beijing 100190, Peoples R China.
   [Yuan, Xiang; Wang, Zhenjiang] Huawei Technol, Beijing 100190, Peoples R China.
   [Li, Jianjun] Horizon Robot Inc, Beijing 100190, Peoples R China.
C3 Chinese Academy of Sciences; Chinese Academy of Sciences; University of
   Chinese Academy of Sciences, CAS; Chinese Academy of Sciences; Institute
   of Computing Technology, CAS; University of Minnesota System; University
   of Minnesota Twin Cities; Texas A&M University System; Texas A&M
   University College Station; Capital Normal University; Huawei
   Technologies
RP Wu, CG (corresponding author), Chinese Acad Sci, State Key Lab Comp Architecture, Inst Comp Technol, Beijing 100190, Peoples R China.
EM wangzhe12@ict.ac.cn; wucg@ict.ac.cn; yuanxiang4@huawei.com;
   zj.wang@huawei.com; jianjun.li@hobot.cc; yew@cs.umn.edu;
   jeff@cse.tamu.edu; fxb@ict.ac.cn; lanyanyan@ict.ac.cn; cyj@ict.ac.cn;
   laiyuanming@ict.ac.cn; guanyong@mail.cnu.edu.cn
RI Li, Jing/GYU-5036-2022; Li, Jin/GYQ-5363-2022; LI, Jing/HNB-5575-2023;
   LI, JIAN/JAX-3092-2023; LI, JIAN/GRY-2197-2022; li, jian/GSE-0245-2022
OI Chen, Yunji/0000-0003-3925-5185; Yew, Pen-Chung/0000-0001-9653-8777
FU National High Technology Research and Development Program of China
   [2012AA010901]; National Natural Science Foundation of China (NSFC)
   [61303051, 61303052, 61332009, 60925009, 61100011]; Innovation Research
   Group of NSFC [61221062]
FX We would like to thank the anonymous reviewers whose suggestions have
   improved the presentation of our work. This research is supported by the
   National High Technology Research and Development Program of China under
   grant 2012AA010901, the National Natural Science Foundation of China
   (NSFC) under grants 61303051, 61303052, 61332009, 60925009, and
   61100011, the Innovation Research Group of NSFC under grant 61221062.
   Xiang Yuan, Zhenjiang Wang, and Jianjun Li did this work when they were
   in the State Key Laboratory of Computer Architecture, Institute of
   Computing Technology, Chinese Academy of Sciences.
CR Altekar G, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P193
   [Anonymous], 2012, DYNAMIC BINARY INSTR
   Chen YJ, 2010, CONF PROC INT SYMP C, P187, DOI 10.1145/1816038.1815985
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dunlap G. W., 2008, P 4 ACM SIGPLAN SIGO, P121, DOI DOI 10.1145/1346256.1346273
   Goodman J. R., 2009, MESIF 2 HOP CACHE CO
   Gray J., 1986, Proceedings Fifth Symposium on Reliability in Distributed Software and Database Systems (Cat. No.86CH2260-8), P3
   Hower DR, 2008, CONF PROC INT SYMP C, P265, DOI 10.1109/ISCA.2008.26
   Huang J, 2013, ACM SIGPLAN NOTICES, V48, P141, DOI 10.1145/2499370.2462167
   Huang Jeff., 2010, Proceedings of the Eighteenth ACM SIGSOFT International Symposium on Foundations of Software Engineering, FSE '10, P207, DOI DOI 10.1145/1882291.1882323
   Jiang YY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P457, DOI 10.11455/2568225.2568236
   Jin GL, 2010, ACM SIGPLAN NOTICES, V45, P241, DOI 10.1145/1932682.1869481
   Laadan O, 2010, PERF E R SI, V38, P155, DOI 10.1145/1811099.1811057
   LEBLANC TJ, 1987, IEEE T COMPUT, V36, P471, DOI 10.1109/TC.1987.1676929
   Lee D, 2012, ACM SIGPLAN NOTICES, V47, P463, DOI 10.1145/2345156.2254119
   Lee D, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P77
   Leveson N., 1993, IEEE COMPUTER SOC, V26, P7
   Liu P, 2015, ACM SIGPLAN NOTICES, V50, P55, DOI [10.1145/2813885.2738001, 10.1145/2737924.2738001]
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Machado N., 2012, 2012 42 ANN IEEE IFI, P1
   Mashtizadeh AJ, 2017, ACM SIGPLAN NOTICES, V52, P693, DOI 10.1145/3093336.3037751
   Montesinos P, 2008, CONF PROC INT SYMP C, P289, DOI 10.1109/ISCA.2008.36
   Narayanasamy S., 2006, Performance Evaluation Review, V34, P216, DOI 10.1145/1140103.1140303
   Park S, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P177
   SecurityFocus, 2004, SOFTW BUG CONTR BLAC
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Veeraraghavan K., 2012, P 13 INT C ARCH SUPP
   Weeratunge D, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P155
   WOO SC, 1995, ACM COMP AR, P24, DOI 10.1109/ISCA.1995.524546
   Xu M, 2003, CONF PROC INT SYMP C, P122, DOI 10.1109/ISCA.2003.1206994
NR 30
TC 1
Z9 1
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2018
VL 44
IS 11
BP 1112
EP 1128
DI 10.1109/TSE.2017.2752158
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HA1IB
UT WOS:000449964600006
DA 2024-07-18
ER

PT J
AU Shin, D
   Yoo, S
   Bae, DH
AF Shin, Donghwan
   Yoo, Shin
   Bae, Doo-Hwan
TI A Theoretical and Empirical Study of Diversity-Aware Mutation Adequacy
   Criterion
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Mutation testing; test adequacy criteria; diversity
ID TESTS; FAULTS
AB Diversity has been widely studied in software testing as a guidance towards effective sampling of test inputs in the vast space of possible program behaviors. However, diversity has received relatively little attention in mutation testing. The traditional mutation adequacy criterion is a one-dimensional measure of the total number of killed mutants. We propose a novel, diversity-aware mutation adequacy criterion called distinguishing mutation adequacy criterion, which is fully satisfied when each of the considered mutants can be identified by the set of tests that kill it, thereby encouraging inclusion of more diverse range of tests. This paper presents the formal definition of the distinguishing mutation adequacy and its score. Subsequently, an empirical study investigates the relationship among distinguishing mutation score, fault detection capability, and test suite size. The results show that the distinguishing mutation adequacy criterion detects 1.33 times more unseen faults than the traditional mutation adequacy criterion, at the cost of a 1.56 times increase in test suite size, for adequate test suites that fully satisfies the criteria. The results show a better picture for inadequate test suites; on average, 8.63 times more unseen faults are detected at the cost of a 3.14 times increase in test suite size.
C1 [Shin, Donghwan; Yoo, Shin; Bae, Doo-Hwan] Korea Adv Inst Sci & Technol, Sch Comp, Daejeon 34141, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Shin, D (corresponding author), Korea Adv Inst Sci & Technol, Sch Comp, Daejeon 34141, South Korea.
EM donghwan@se.kaist.ac.kr; shin.yoo@kaist.ac.kr; bae@se.kaist.ac.kr
RI Shin, Donghwan/N-2361-2019; Yoo, Shin/E-3247-2015; Bae,
   Doo-Hwan/C-1538-2011
OI Shin, Donghwan/0000-0002-0840-6449; Yoo, Shin/0000-0002-0836-6993; 
FU Institute for Information & communications Technology Promotion (IITP) -
   Korea government (MSIP) [R0126-17-1101]
FX This research was supported by Institute for Information &
   communications Technology Promotion (IITP) grant funded by the Korea
   government (MSIP) (No. R0126-17-1101, (SW Star Lab) Software R&D for
   Model-based Analysis and Verification of Higher-order Large Complex
   System). The authors would like to thank the anonymous reviewers for
   their valuable comments and suggestions to improve the quality of the
   paper.
CR Alshahwan N., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P181
   Ammann P, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P21, DOI 10.1109/ICST.2014.13
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   [Anonymous], 2011, P 8 EUR SOFTW ENG C, DOI DOI 10.1145/2025113.2025144
   [Anonymous], 1980, THESIS
   [Anonymous], 1980, Order No. 8025191
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   Budd T.A., 1980, POPL '80: Proceedings of the 7th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, (New York, NY, USA), P220
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Feldt R, 2016, IEEE INT CONF SOFTW, P223, DOI 10.1109/ICST.2016.33
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P774, DOI 10.1109/32.238581
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P783, DOI 10.1007/s10664-013-9299-z
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Gargantini A, 1999, LECT NOTES COMPUT SC, V1687, P146, DOI 10.1145/318774.318939
   Harder M, 2003, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2003.1201188
   Hussain S., 2008, THESIS
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Just R., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P11, DOI 10.1109/ISSRE.2012.31
   Just R., 2014, INT S SOFTWARE TESTI, P315, DOI [DOI 10.1145/2610384.2610388, 10.1145/2610384.2610388]
   Just R., 2014, P 2014 INT S SOFTW T, P433
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Just R, 2015, SOFTW TEST VERIF REL, V25, P490, DOI 10.1002/stvr.1561
   Kaminski G, 2013, J SYST SOFTWARE, V86, P2002, DOI 10.1016/j.jss.2012.08.024
   Kintis M, 2015, INFORM SOFTWARE TECH, V68, P1, DOI 10.1016/j.infsof.2015.07.009
   Kintis M, 2010, ASIA PAC SOFWR ENG, P300, DOI 10.1109/APSEC.2010.42
   Kurtz B, 2014, IEEE ICST WORKSHOP, P176, DOI 10.1109/ICSTW.2014.20
   Leon D., 2005, P IEEE 16 INT S SOFT, P310
   Li N, 2009, IEEE ICST WORKSHOP, P220, DOI 10.1109/ICSTW.2009.30
   Ma YS, 2016, J SYST SOFTWARE, V115, P18, DOI 10.1016/j.jss.2016.01.007
   Madeyski L, 2014, IEEE T SOFTWARE ENG, V40, P23, DOI 10.1109/TSE.2013.44
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   MORELL LJ, 1990, IEEE T SOFTWARE ENG, V16, P844, DOI 10.1109/32.57623
   Namin AS, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P351, DOI 10.1145/1368088.1368136
   Offutt A. J., 1992, ACM Transactions on Software Engineering and Methodology, V1, P5, DOI 10.1145/125489.125473
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Patrick M, 2017, INFORM SOFTWARE TECH, V81, P36, DOI 10.1016/j.infsof.2016.04.009
   Mateo PR, 2013, SOFTW TEST VERIF REL, V23, P315, DOI 10.1002/stvr.1471
   Mateo PR, 2013, IEEE T SOFTWARE ENG, V39, P570, DOI 10.1109/TSE.2012.39
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Shin D, 2016, IEEE ICST WORKSHOP, P122, DOI 10.1109/ICSTW.2016.37
   Shin D, 2016, IEEE INT CONF SOFTW, P299, DOI 10.1109/ICST.2016.22
   Shin D, 2016, SOFTW SYST MODEL, V15, P631, DOI 10.1007/s10270-014-0428-y
   Smite D, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/ICGSE.2008.22
   Tokumoto S, 2016, IEEE INT CONF SOFTW, P320, DOI 10.1109/ICST.2016.18
   Woodward M. R., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P152, DOI 10.1109/WST.1988.5370
   Yoo S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P201
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
   Zhu H, 1996, IEEE T SOFTWARE ENG, V22, P248, DOI 10.1109/32.491648
NR 58
TC 21
Z9 22
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2018
VL 44
IS 10
BP 914
EP 931
DI 10.1109/TSE.2017.2732347
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GX5PZ
UT WOS:000447803400001
DA 2024-07-18
ER

PT J
AU Wang, YC
   He, Q
   Ye, DY
   Yang, Y
AF Wang, Yanchun
   He, Qiang
   Ye, Dayong
   Yang, Yun
TI Formulating Criticality-Based Cost-Effective Fault Tolerance Strategies
   for Multi-Tenant Service-Based Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cloud computing; criticality; fault tolerance; multi-tenancy;
   redundancy; service-based system
ID COMPONENTS; REDUNDANCY
AB The proliferation of cloud computing has fueled the rapid growth of multi-tenant service-based systems (SBSs), which serve multiple tenants simultaneously by composing existing services in the form of business processes. In a distributed and volatile operating environment, runtime anomalies may occur to the component services of an SBS and cause end-to-end quality violations. Engineering multi-tenant SBSs that can quickly handle runtime anomalies cost effectively has become a significant challenge. Different approaches have been proposed to formulate fault tolerance strategies for engineering SBSs. However, none of the existing approaches has sufficiently considered the service criticality based on multi-tenancy where multiple tenants share the same SBS instance with different multi-dimensional quality preferences. In this paper, we propose Criticality-based Fault Tolerance for Multi-Tenant SBSs (CFT4MTS), a novel approach that formulates cost-effective fault tolerance strategies for multi-tenant SBSs by providing redundancy for the critical component services. First, the criticality of each component service is evaluated based on its multi-dimensional quality and multiple tenants sharing the component service with differentiated quality preferences. Then, the fault tolerance problem is modelled as an Integer Programming problem to identify the optimal fault tolerance strategy. The experimental results show that, compared with three existing representative approaches, CFT4MTS can alleviate degradation in the quality of multi-tenant SBSs in a much more effective and efficient way.
C1 [Wang, Yanchun; He, Qiang] Wuhan Univ, State Key Lab Software Engn, Wuhan 430072, Hubei, Peoples R China.
   [Wang, Yanchun; He, Qiang; Ye, Dayong; Yang, Yun] Swinburne Univ Technol, Sch Software & Elect Engn, Melbourne, Vic 3122, Australia.
C3 Wuhan University; Swinburne University of Technology
RP Wang, YC (corresponding author), Wuhan Univ, State Key Lab Software Engn, Wuhan 430072, Hubei, Peoples R China.; Wang, YC (corresponding author), Swinburne Univ Technol, Sch Software & Elect Engn, Melbourne, Vic 3122, Australia.
EM yanchunwang@swin.edu.au; qhe@swin.edu.au; dye@swin.edu.au;
   yyang@swin.edu.au
RI Wang, Yijun/GXW-1763-2022; wang, yi/GVT-8516-2022; wang,
   yi/KBB-3614-2024; Wang, yanru/JAX-5241-2023; Wang, Yixuan/GZK-6559-2022;
   wang, yiran/IAP-0414-2023; Wang, Yiru/JMB-2281-2023; wang,
   yixuan/GXW-2866-2022; Wang, Yin/HCI-9352-2022; Wu, Yiping/JJF-6185-2023
OI Wu, Yiping/0009-0000-6223-5786; Ye, Dayong/0000-0002-7561-0992
FU Australian Research Council Discovery Project [DP150101775]
FX This work is partly supported by Australian Research Council Discovery
   Project DP150101775. Qiang He is the corresponding author.
CR Al-Masri E., 2007, P 16 INT C WORLD WID, P1257, DOI DOI 10.1145/1242572.1242795
   [Anonymous], 2010, P 19 INT C WORLD WID, DOI DOI 10.1145/1772690.1772693
   [Anonymous], 1973, MULTIPLE CRITERIA DE
   Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   AVIZIENIS A, 1985, IEEE T SOFTWARE ENG, V11, P1491, DOI 10.1109/TSE.1985.231893
   Baresi L, 2011, IEEE T SOFTWARE ENG, V37, P247, DOI 10.1109/TSE.2010.37
   Barr Jeff., 2011, Building fault-tolerant applications on aws
   Bertsekas D. P., 1999, Nonlinear Program, V2nd
   Birman K, 2004, PROC INT CONF SOFTW, P17, DOI 10.1109/ICSE.2004.1317410
   Boggs P.T., 1995, ACTA NUMER, V4, P1, DOI 10.1017/s0962492900002518
   Bonatti P.A., 2005, Proc. 14th Int'l Conf. World Wide Web (WWW'05), P530
   Boyd S., 2004, CONVEX OPTIMIZATION
   Calinescu R, 2012, COMMUN ACM, V55, P69, DOI 10.1145/2330667.2330686
   Calinescu R, 2011, IEEE T SOFTWARE ENG, V37, P387, DOI 10.1109/TSE.2010.92
   Cardellini V, 2012, IEEE T SOFTWARE ENG, V38, P1138, DOI 10.1109/TSE.2011.68
   Cugola G., 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P440, DOI 10.1109/ICWS.2012.104
   ECKHARDT DE, 1991, IEEE T SOFTWARE ENG, V17, P692, DOI 10.1109/32.83905
   Freixas J, 2008, IEEE T RELIAB, V57, P163, DOI 10.1109/TR.2008.916888
   Gorbenko A, 2009, LECT NOTES COMPUT SC, V5454, P324
   Harman M, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2537853
   He Q., 2012, 2012 IEEE 5 INT C CL, P566
   He Q, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P237, DOI 10.1109/CLOUD.2015.40
   He Q, 2014, IEEE T SOFTWARE ENG, V40, P461, DOI 10.1109/TSE.2013.48
   He Q, 2014, IEEE T SOFTWARE ENG, V40, P192, DOI 10.1109/TSE.2013.2297911
   Meng FC, 1996, IEEE T RELIAB, V45, P59, DOI 10.1109/24.488917
   Moreno GA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P1, DOI 10.1145/2786805.2786853
   Nallur V, 2013, IEEE T SOFTWARE ENG, V39, P591, DOI 10.1109/TSE.2012.53
   Peng H, 2012, IEEE T RELIAB, V61, P4, DOI 10.1109/TR.2011.2182256
   Poggi N., 2011, Proceedings of the 2011 IEEE 10th International Symposium on Network Computing and Applications (NCA 2011), P179, DOI 10.1109/NCA.2011.31
   ProgrammableWeb, 2014, GROWTH WEB APIS 2005
   Qiang He, 2012, 2012 IEEE International Conference on Services Computing (SCC), P178, DOI 10.1109/SCC.2012.39
   Randell B., 1975, SIGPLAN Notices, V10, P437, DOI 10.1145/390016.808467
   Rimal Bhaskar Prasad, 2009, Proceedings of the 2009 Fifth International Joint Conference on INC, IMS and IDC, P44, DOI 10.1109/NCM.2009.218
   Risse T., 2009, P 18 INT C WORLD WID, P881, DOI DOI 10.1145/1526709.1526828
   Rodrigues G.N., 2005, Proceedings of Workshop on Architecting Dependable Systems, P1
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Saltelli A, 2008, GLOBAL SENSITIVITY A, DOI DOI 10.1002/9780470725184.CH6
   SHIMEALL TJ, 1991, IEEE T SOFTWARE ENG, V17, P173, DOI 10.1109/32.67598
   Wang YC, 2015, 2015 IEEE 12TH INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC 2015), P178, DOI 10.1109/SCC.2015.33
   Wenbing Zhao, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P67, DOI 10.1109/CLOUD.2010.26
   Yu T, 2007, ACM T WEB, V1, DOI 10.1145/1232722.1232728
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   Zheng ZB, 2015, IEEE T COMPUT, V64, P219, DOI 10.1109/TC.2013.189
   Zheng ZB, 2012, IEEE T SERV COMPUT, V5, P540, DOI 10.1109/TSC.2011.42
   Zibin Zheng, 2008, 2008 IEEE International Conference on Web Services (ICWS), P145, DOI 10.1109/ICWS.2008.42
NR 46
TC 32
Z9 34
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2018
VL 44
IS 3
BP 291
EP 307
DI 10.1109/TSE.2017.2681667
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FZ6AL
UT WOS:000427678400004
DA 2024-07-18
ER

PT J
AU Wang, XY
   Sun, J
   Wang, T
   Qin, SC
AF Wang, Xinyu
   Sun, Jun
   Wang, Ting
   Qin, Shengchao
TI Language Inclusion Checking of Timed Automata with Non-Zenoness
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Timed automata; language inclusion; non-Zenoness
AB Given a timed automaton P modeling an implementation and a timed automaton S as a specification, the problem of language inclusion checking is to decide whether the language of P is a subset of that of S. It is known to be undecidable. The problem gets more complicated if non-Zenoness is taken into consideration. A run is Zeno if it permits infinitely many actions within finite time. Otherwise it is non-Zeno. Zeno runs might present in both P and S. It is necessary to check whether a run is Zeno or not so as to avoid presenting Zeno runs as counterexamples of language inclusion checking. In this work, we propose a zone-based semi-algorithm for language inclusion checking with non-Zenoness. It is further improved with simulation reduction based on LU-simulation. Though our approach is not guaranteed to terminate, we show that it does in many cases through empirical study. Our approach has been incorporated into the PAT model checker, and applied to multiple systems to show its usefulness.
C1 [Wang, Xinyu] Zhejiang Univ, Coll Comp Sci, Hangzhou 310027, Zhejiang, Peoples R China.
   [Wang, Ting] Zhejiang Univ Technol, Coll Comp Sci, Hangzhou, Zhejiang, Peoples R China.
   [Sun, Jun; Qin, Shengchao] Shenzhen Univ, Shenzhen 518060, Peoples R China.
   [Sun, Jun] Singapore Univ Technol & Design, ISTD, Singapore, Singapore.
   [Qin, Shengchao] Teesside Univ, Sch Comp, Middlesbrough TS1 3BX, Cleveland, England.
C3 Zhejiang University; Zhejiang University of Technology; Shenzhen
   University; Singapore University of Technology & Design; University of
   Teesside
RP Wang, XY (corresponding author), Zhejiang Univ, Coll Comp Sci, Hangzhou 310027, Zhejiang, Peoples R China.
EM wangxinyu@zju.edu.cn; sunjun@sutd.edu.sg; wangting@zjut.edu.cn;
   S.Qin@tees.ac.uk
RI Qin, Shengchao/F-4823-2012
OI Qin, Shengchao/0000-0003-3028-8191; Sun, Jun/0000-0002-3545-1392
FU National Natural Science Foundation of China [61602412, 61572426,
   U1509214, 61373033]; Singapore University of Technology and Design
   [T2MOE1303]
FX This work was supported by National Natural Science Foundation of China
   (61602412, 61572426, U1509214, 61373033), and the research project from
   Singapore University of Technology and Design (T2MOE1303). Ting Wang is
   the corresponding author.
CR Abdulla PA, 2007, LECT NOTES COMPUT SC, V4767, P98
   Abdulla PA, 2010, LECT NOTES COMPUT SC, V6015, P158, DOI 10.1007/978-3-642-12002-2_14
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Alur R, 1999, THEOR COMPUT SCI, V211, P253, DOI 10.1016/S0304-3975(97)00173-4
   Baier C, 2009, LECT NOTES COMPUT SC, V5556, P43, DOI 10.1007/978-3-642-02930-1_4
   Behrmann G., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P341
   Behrmann G., 2004, INT J SOFTW TOOLS TE, V8, P204
   Bengtsson J, 2004, LECT NOTES COMPUT SC, V3098, P87, DOI 10.1007/978-3-540-27755-2_3
   Bertrand N, 2011, LECT NOTES COMPUT SC, V6604, P245, DOI 10.1007/978-3-642-19805-2_17
   BEYER D, 2003, PROC 15 INT CONF, V2725, P122
   Bouyer P, 2004, FORM METHOD SYST DES, V24, P281, DOI 10.1023/B:FORM.0000026093.21513.31
   Bowman H, 2006, FORM ASP COMPUT, V18, P459, DOI 10.1007/s00165-006-0010-7
   Bozga M, 1998, LECT NOTES COMPUT SC, V1427, P546, DOI 10.1007/BFb0028779
   Cattani S, 2005, FORM ASP COMPUT, V17, P138, DOI 10.1007/s00165-005-0064-y
   Chatterjee K, 2011, HSCC 11: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P221
   De Wulf M, 2006, LECT NOTES COMPUT SC, V4144, P17, DOI 10.1007/11817963_5
   DILL DL, 1991, P INT C COMP AID VER, P255
   Dwyer M. B., 1998, Proceedings of FMSP'98. Second Workshop on Formal Methods in Software Practice, P7, DOI 10.1145/298595.298598
   Gómez R, 2007, LECT NOTES COMPUT SC, V4763, P195
   Gruhn V, 2006, ELECTRON NOTES THEOR, V153, P117, DOI 10.1016/j.entcs.2005.10.035
   Henzinger T. A., 1992, P 19 INT C AUT LANG, P545
   HENZINGER TA, 1994, INFORM COMPUT, V111, P193, DOI 10.1006/inco.1994.1045
   Herbreteau F, 2012, FORM METHOD SYST DES, V40, P122, DOI 10.1007/s10703-011-0133-1
   Herbreteau F, 2010, LECT NOTES COMPUT SC, V6252, P218
   Krichen M, 2009, FORM METHOD SYST DES, V34, P238, DOI 10.1007/s10703-009-0065-1
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Ouaknine J, 2004, IEEE S LOG, P54, DOI 10.1109/LICS.2004.1319600
   Ouaknine J, 2006, LECT NOTES COMPUT SC, V3920, P411
   Raskin J.-F., 1999, Journal of Automata, Languages and Combinatorics, V4, P247
   Rokicki T. G., 1993, THESIS
   Roscoe AW, 2005, FORM ASP COMPUT, V17, P93, DOI 10.1007/s00165-005-0065-x
   SUMAN PV, 2008, PROC 6 INT CONF, V5215, P78
   Sun J, 2009, LECT NOTES COMPUT SC, V5643, P709, DOI 10.1007/978-3-642-02658-4_59
   Tabakov D, 2005, LECT NOTES ARTIF INT, V3835, P396, DOI 10.1007/11591191_28
   Tripakis S, 2005, FORM METHOD SYST DES, V26, P267, DOI 10.1007/s10703-005-1632-8
   Tripakis S., 1999, Formal Methods for Real-Time and Probabilistic Systems. 5th International AMAST Workshop, ARTS'99. Proceedings, P299
   Wang F., 2002, FORTE 2001 IIFIP, V69, P235, DOI [10.1007/0-306-47003-915, DOI 10.1007/0-306-47003-915]
   Wang Ting, 2014, NOTES COMPUT SCI, V8413, P310, DOI 10.1007/978-3-642-54862-8_21
   Yi W., 1994, PROC 7 INT C FORMAL, P223, DOI [10.1007/978-0-387-34878-018, DOI 10.1007/978-0-387-34878-018]
NR 39
TC 0
Z9 0
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2017
VL 43
IS 11
BP 995
EP 1008
DI 10.1109/TSE.2017.2653778
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FM5XS
UT WOS:000415117000001
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Li, LB
   Harman, M
   Wu, F
   Zhang, YY
AF Li, Lingbo
   Harman, Mark
   Wu, Fan
   Zhang, Yuanyuan
TI The Value of Exact Analysis in Requirements Selection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; exact multi-objective optimisation; simulation
   optimisation; next release problem
ID SENSITIVITY-ANALYSIS; ROBUST OPTIMIZATION; COST; DESIGN
AB Uncertainty is characterised by incomplete understanding. It is inevitable in the early phase of requirements engineering, and can lead to unsound requirement decisions. Inappropriate requirement choices may result in products that fail to satisfy stakeholders' needs, and might cause loss of revenue. To overcome uncertainty, requirements engineering decision support needs uncertainty management. In this research, we develop a decision support framework METRO for the Next Release Problem (NRP) to manage algorithmic uncertainty and requirements uncertainty. An exact NRP solver (NSGDP) lies at the heart of METRO. NSGDP's exactness eliminates interference caused by approximate existing NRP solvers. We apply NSGDP to three NRP instances, derived from a real world NRP instance, RALIC, and compare with NSGA-II, a widely-used approximate (inexact) technique. We find the randomness of NSGA-II results in decision makers missing up to 99.95 percent of the optimal solutions and obtaining up to 36.48 percent inexact requirement selection decisions. The chance of getting an inexact decision using existing approximate approaches is negatively correlated with the implementation cost of a requirement (Spearman rho up to -0: 72). Compared to the inexact existing approach, NSGDP saves 15.21 percent lost revenue, on average, for the RALIC dataset.
C1 [Li, Lingbo; Harman, Mark; Wu, Fan; Zhang, Yuanyuan] UCL, Dept Comp Sci, CREST, Gower St, London WC1E 6BT, England.
C3 University of London; University College London
RP Li, LB (corresponding author), UCL, Dept Comp Sci, CREST, Gower St, London WC1E 6BT, England.
EM lingbo.li@cs.ucl.ac.uk; m.harman@cs.ucl.ac.uk; fan.wu@cs.ucl.ac.uk;
   yuanyuan.zhang@cs.ucl.ac.uk
RI Wu, Fan/J-9583-2019; WU, FAN/GRX-1654-2022
OI Wu, Fan/0000-0003-3615-1217; 
FU China Scholarship Council (CSC); UK EPSRC project [EP/J017515]; EPSRC
   [EP/J017515/1] Funding Source: UKRI
FX The authors greatly thank Francisco Palomo-Lozano for his helpful
   suggestion. The work reported herein was supported by the China
   Scholarship Council (CSC) and the UK EPSRC project EP/J017515 (DAASE).
   The authors are also grateful to Kathy Harman for additional proof
   reading.
CR Abran A., 2001, Guide to the software engineering body of knowledge: trial version
   Al-Emran Ahmed, 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P157, DOI 10.1109/RE.2010.28
   Al-Emran A, 2010, INFORM SOFTWARE TECH, V52, P446, DOI 10.1016/j.infsof.2009.11.003
   Alexander Ian., 2009, DISCOVERING REQUIREM
   [Anonymous], 2010, 12 ANN C GEN EV COMP
   [Anonymous], PHYS TODAY
   Atamtürk A, 2000, EUR J OPER RES, V121, P40, DOI 10.1016/S0377-2217(99)00015-6
   Bagnall AJ, 2001, INFORM SOFTWARE TECH, V43, P883, DOI 10.1016/S0950-5849(01)00194-X
   Ben-Tal A, 2002, MATH PROGRAM, V92, P453, DOI 10.1007/s101070100286
   Beyer HG, 2007, COMPUT METHOD APPL M, V196, P3190, DOI 10.1016/j.cma.2007.03.003
   Bloch M., 2012, HARVARD BUSINESS REV
   Boehm BW., 1981, Software Engineering Economics
   Brunsch T, 2012, STOC'12: PROCEEDINGS OF THE 2012 ACM SYMPOSIUM ON THEORY OF COMPUTING, P407
   Carlshamre P, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84
   DeMarco T., 2013, Waltzing with bears: Managing risk on software projects
   Felli JC, 1998, MED DECIS MAKING, V18, P95, DOI 10.1177/0272989X9801800117
   Finkelstein A, 2008, INT REQUIR ENG CONF, P115, DOI 10.1109/RE.2008.61
   Flyvbjerg B, 2011, HARVARD BUS REV, V89, P23, DOI 10.2139/ssrn.2229735
   Fogelström ND, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P217, DOI 10.1109/SEAA.2009.66
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M., 2009, Proceedings of Genetic and Evolutionary Computation Conference, P1681
   Harman M, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2537853
   Heaven W, 2011, INT REQUIR ENG CONF, P79, DOI 10.1109/RE.2011.6051653
   Helton JC, 2006, RELIAB ENG SYST SAFE, V91, P1175, DOI 10.1016/j.ress.2005.11.017
   HOFFMAN KL, 1993, MANAGE SCI, V39, P657, DOI 10.1287/mnsc.39.6.657
   Humphrey W S, 1995, A discipline for software engineering
   Jansen K, 1997, INFORM COMPUT, V132, P85, DOI 10.1006/inco.1996.2616
   Jorgensen M, 2006, INFORM SOFTWARE TECH, V48, P297, DOI 10.1016/j.infsof.2005.07.002
   Jung HW, 1998, IEEE SOFTWARE, V15, P74, DOI 10.1109/52.687950
   Karlsson J, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P110, DOI 10.1109/ICRE.1996.491435
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Kazancioglu E., 2003, P ASME INT DES ENG T, P97
   Kumar A, 2006, J MECH DESIGN, V128, P864, DOI 10.1115/1.2202886
   Letier E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P883, DOI 10.1145/2568225.2568239
   Li LB, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1247, DOI 10.1145/2576768.2598334
   Li M, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P771
   Lim SL, 2012, IEEE T SOFTWARE ENG, V38, P707, DOI 10.1109/TSE.2011.36
   Lynch J., 1994, STANDISH GROUP REPOR
   NEMHAUSER GL, 1969, MANAGE SCI, V15, P494, DOI 10.1287/mnsc.15.9.494
   O'Hagan A., 2006, UNCERTAIN JUDGEMENTS, DOI DOI 10.1002/0470033312
   Paixao M, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1469
   Papadrakakis M, 2005, ENG STRUCT, V27, P1408, DOI 10.1016/j.engstruct.2005.04.002
   Pferschy Ulrich, 2009, J. Graph Algorithms Appl., V13, P233
   PRATT JW, 1964, ECONOMETRICA, V32, P122, DOI 10.2307/1913738
   Robinson WN, 2003, ACM COMPUT SURV, V35, P132, DOI 10.1145/857076.857079
   Royce W.E., 1998, AW OBJ TECHNOL S
   Saaty T.L., 1980, ANAL HIERARCHY PROCE
   Saltelli A, 2000, STAT SCI, V15, P377, DOI 10.1214/ss/1009213004
   Schmidt R, 2001, J MANAGE INFORM SYST, V17, P5, DOI 10.1080/07421222.2001.11045662
   SOYSTER AL, 1973, OPER RES, V21, P1154, DOI 10.1287/opre.21.5.1154
   Thompson A, 2000, LECT NOTES COMPUT SC, V1801, P218
   Veerapen N, 2015, INFORM SOFTWARE TECH, V65, P1, DOI 10.1016/j.infsof.2015.03.008
   Zhang ., 2014, RN, V14
   Zhang H, 2008, ASIA PAC SOFWR ENG, P59, DOI 10.1109/APSEC.2008.50
   Zhang YY, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1129
   Zhang Y, 2008, LECT NOTES COMPUT SC, V5025, P88, DOI 10.1007/978-3-540-69062-7_8
   Zhang YY, 2013, INFORM SOFTWARE TECH, V55, P126, DOI 10.1016/j.infsof.2012.03.007
   Zhang YY, 2011, INFORM SOFTWARE TECH, V53, P761, DOI 10.1016/j.infsof.2011.02.001
   Zi Z, 2011, IET SYST BIOL, V5, P336, DOI 10.1049/iet-syb.2011.0015
   Ziv H., 1996, UNCERTAINTY PRINCIPL
NR 61
TC 16
Z9 16
U1 1
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2017
VL 43
IS 6
BP 580
EP 596
DI 10.1109/TSE.2016.2615100
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EX8XS
UT WOS:000403534100004
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Tuya, J
   de la Riva, C
   Suárez-Cabal, MJ
   Blanco, R
AF Tuya, Javier
   de la Riva, Claudio
   Jose Suarez-Cabal, Maria
   Blanco, Raquel
TI Coverage-Aware Test Database Reduction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Test database reduction; test coverage of code; test design; testing
   tools
ID REGRESSION TEST SELECTION; GENERATING TEST DATA; MUTATION; MINIMIZATION;
   PROVENANCE; PROGRAMS; MODEL
AB Functional testing of applications that process the information stored in databases often requires a careful design of the test database. The larger the test database, the more difficult it is to develop and maintain tests as well as to load and reset the test data. This paper presents an approach to reduce a database with respect to a set of SQL queries and a coverage criterion. The reduction procedures search the rows in the initial database that contribute to the coverage in order to find a representative subset that satisfies the same coverage as the initial database. The approach is automated and efficiently executed against large databases and complex queries. The evaluation is carried out over two real life applications and a well-known database benchmark. The results show a very large degree of reduction as well as scalability in relation to the size of the initial database and the time needed to perform the reduction.
C1 [Tuya, Javier; de la Riva, Claudio; Jose Suarez-Cabal, Maria; Blanco, Raquel] Univ Oviedo, Dept Informat, Campus Univ Gijon, Gijon 33204, Spain.
C3 University of Oviedo
RP Tuya, J (corresponding author), Univ Oviedo, Dept Informat, Campus Univ Gijon, Gijon 33204, Spain.
EM tuya@uniovi.es; claudio@uniovi.es; cabal@uniovi.es; rblanco@uniovi.es
RI Tuya, Javier/L-6850-2014; /E-9752-2016; Riva Alvarez, Claudio de
   la/L-5014-2014; Suarez-Cabal, Maria Jose/E-8453-2016
OI Tuya, Javier/0000-0002-1091-934X; /0000-0003-2855-0760; Riva Alvarez,
   Claudio de la/0000-0001-5592-9683; Suarez-Cabal, Maria
   Jose/0000-0001-8262-2871
FU Spanish Ministry of Economy and Competitiveness [TIN2010-20057-C03-01,
   TIN2013-46928-C3-1-R]; Principality of Asturias (Spain) [GRUPIN14-007];
   ERDF funds
FX This work was supported in part by projects TIN2010-20057-C03-01 and
   TIN2013-46928-C3-1-R, funded by the Spanish Ministry of Economy and
   Competitiveness, and GRUPIN14-007, funded by the Principality of
   Asturias (Spain) and ERDF funds.
CR Ammann Paul, 2008, Introduction to software testing, V1st
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2013, 2911912013 ISOIECIEE
   [Anonymous], 1990, The relational model for database management: version 2
   [Anonymous], 1999, 9075 ISOIEC
   [Anonymous], 2005, INPROCEEDINGS 20 IEE
   [Anonymous], 2007, P INT C DAT ENG, DOI DOI 10.1109/ICDE.2007.367896
   Appelt Dennis, 2014, P 2014 INT S SOFTWAR, P259
   Arcuri A, 2013, SOFTW TEST VERIF REL, V23, P119, DOI 10.1002/stvr.457
   Baresel A., 2000, THESIS
   Binnig C., 2008, P 1 INT WORKSH TEST
   Bisht P, 2010, ACM T INFORM SYST SE, V13, DOI 10.1145/1698750.1698754
   Bruno N., 2009, P 2 INT WORKSH TEST
   Buneman P, 2001, LECT NOTES COMPUT SC, V1973, P316
   Chan WK, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P187
   Chays D, 2004, SOFTW TEST VERIF REL, V14, P17, DOI 10.1002/stvr.286
   Chays D., 2000, Software Engineering Notes, V25, P147, DOI 10.1145/347636.348954
   Chays D., 2008, P 1 INT WORKSH TEST
   Chilenski J.J., 2001, INVESTIGATION 3 FORM
   Chixiang Zhou, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P61, DOI 10.1109/ICST.2012.86
   Clark S. R., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P213, DOI 10.1109/ASE.2011.6100056
   CODD EF, 1970, COMMUN ACM, V13, P377, DOI 10.1145/357980.358007
   Cui Y., 2000, Proceedings of 16th International Conference on Data Engineering (Cat. No.00CB37073), P367, DOI 10.1109/ICDE.2000.839437
   Cui Y., 2002, THESIS
   Cui YW, 2003, VLDB J, V12, P41, DOI 10.1007/s00778-002-0083-8
   Daou B., 2011, P ACM S APPL COMP, P285
   de la Riva C., 2010, AST, P67
   Deng YT, 2005, PROC INT CONF SOFTW, P78, DOI 10.1145/1062455.1062486
   Emmi M., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P151
   Engström E, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P22
   Ganski RichardA., 1987, P 1987 ACM SIGMOD IN, P23
   Glavic Boris, 2013, In Search of Elegance in the Theory and Practice of Computation. Essays Dedicated to Peter Buneman: LNCS 8000, P291, DOI 10.1007/978-3-642-41660-6_16
   Glavic B, 2012, LECT NOTES COMPUT SC, P72
   Glavic B., 2010, THESIS U ZURICH ZURI
   Glavic B, 2009, PROC INT CONF DATA, P174, DOI 10.1109/ICDE.2009.15
   Glavic Boris., 2009, P 12 INT C EXTENDING, P982, DOI DOI 10.1145/1516360.1516472
   Glavic Boris., 2007, Proceedings of the 12th GI Conference on Datenbanksysteme in Buisness, Technologie und Web (BTW), P227, DOI 10.5167/uzh-24450
   Haftmann F., 2005, Conference on Innovative Data Systems Research (CIDR), P95
   Haftmann F, 2007, VLDB J, V16, P145, DOI 10.1007/s00778-006-0028-8
   Halfond WGJ, 2006, IEEE INT CONF AUTOM, P69
   Haraty RA, 2004, AD TO DA RE, V3, P141
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Heinis T., 2008, Proceedings of the 2008 ACM SIGMOD international conference on Management of data, P1007
   Ikeda R., 2009, 918 STANF U
   Suárez-Cabal MJ, 2009, J UNIVERS COMPUT SCI, V15, P584
   Just R., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P11, DOI 10.1109/ISSRE.2012.31
   Just R., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P612, DOI 10.1109/ASE.2011.6100138
   Just R., 2014, INT S SOFTWARE TESTI, P315, DOI [DOI 10.1145/2610384.2610388, 10.1145/2610384.2610388]
   Just R., 2014, P 2014 INT S SOFTW T, P433
   Just Ren., 2011, Proceedings of the 6th International Workshop on Automation of Software Test. AST'11, P50, DOI [DOI 10.1145/1982595.1982606, 10.1145/1982595.1982606]
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kai Pan, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P73, DOI 10.1109/ASE.2011.6100152
   Kaminski G, 2008, SOFTW TEST VERIF REL, V18, P149, DOI 10.1002/stvr.386
   Kaminski G, 2011, INFORM SOFTWARE TECH, V53, P1137, DOI 10.1016/j.infsof.2011.03.009
   Kapfhammer Gregory M., 2008, 1st India Software Engineering Conference. ISEC 2008, P77
   Kapfhammer G. M., 2003, Software Engineering Notes, V28, P98, DOI 10.1145/949952.940086
   Kapfhammer G. M., 2013, P IEEE 5 INT C SOFTW, P964
   Kapfhammer GM, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P31, DOI 10.1109/ICST.2013.47
   Khalek Shadi Abdul, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P238, DOI 10.1109/ASE.2008.34
   KIM W, 1982, ACM T DATABASE SYST, V7, P443, DOI 10.1145/319732.319745
   Leitao Plinio S.  Jr., 2008, 2008 The Third International Conference on Software Engineering Advances (ICSEA), P230, DOI 10.1109/ICSEA.2008.57
   Li C., 2010, DBTest, P01
   Loureiro A. C. B., 2013, P IEEE C EV COMP, P20
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   McMinn P, 2006, EVOL COMPUT, V14, P41
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   McMinn P., 2015, ANAL EFFECTIVENESS D
   Moniruzzaman A.B.M., 2013, International Journal of Database Theory and Application, V6, P1
   Morton K., 2011, P 4 INT WORKSH TEST
   Pan K, 2015, AUTOMAT SOFTW ENG, V22, P439, DOI 10.1007/s10515-014-0158-y
   Pan K, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2491529
   Rogstad E., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P362, DOI 10.1109/ICSM.2011.6080803
   Rogstad E, 2013, INFORM SOFTWARE TECH, V55, P1781, DOI 10.1016/j.infsof.2013.04.004
   Rothermel G, 1998, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.1998.738487
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   *RTCA INC, 1992, DO178B RTCA INC
   Shah S, 2011, PROC INT CONF DATA, P1175, DOI 10.1109/ICDE.2011.5767876
   Shahriar H, 2008, INT CONF QUAL SOFTW, P77, DOI 10.1109/QSIC.2008.33
   Sharma V., 2013, INT J INNOVATIVE TEC, V3, P212
   Simmhan YL, 2005, SIGMOD REC, V34, P31, DOI 10.1145/1084805.1084812
   Suarez-Cabal M. J., 2004, Software Engineering Notes, V29, P253, DOI 10.1145/1041685.1029929
   Tracey N, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P285, DOI 10.1109/ASE.1998.732680
   TSAI WT, 1990, IEEE T SOFTWARE ENG, V16, P316, DOI 10.1109/32.48939
   Tuya J., 2006, P 2 WORKSH MUT AN MU, P1, DOI DOI 10.1109/MUTATION.2006.13
   Tuya J., 2009, P 2 INT WORKSH TEST
   Tuya J, 2007, INFORM SOFTWARE TECH, V49, P398, DOI 10.1016/j.infsof.2006.06.009
   Tuya J, 2010, SOFTW TEST VERIF REL, V20, P237, DOI 10.1002/stvr.424
   Vemasani P, 2014, IEEE ICST WORKSHOP, P216, DOI 10.1109/ICSTW.2014.23
   Willmor D, 2005, PROC IEEE INT CONF S, P421
   Willmor D., 2006, 28th International Conference on Software Engineering Proceedings, P102, DOI 10.1145/1134285.1134301
   Willmor D., 2003, P 3 UK SOFTW TEST RE, P123
   Willmor D, 2006, TAIC PART - TESTING: ACADEMIC & INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P115, DOI 10.1109/TAIC-PART.2006.28
   Wong WE, 1998, SOFTWARE PRACT EXPER, V28, P347, DOI 10.1002/(SICI)1097-024X(19980410)28:4<347::AID-SPE145>3.0.CO;2-L
   Wong WE, 1999, J SYST SOFTWARE, V48, P79, DOI 10.1016/S0164-1212(99)00048-5
   Wright CJ, 2014, INT CONF QUAL SOFTW, P57, DOI 10.1109/QSIC.2014.26
   Wright CJ, 2013, IEEE ICST WORKSHOP, P63, DOI 10.1109/ICSTW.2013.15
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhang B, 2001, P INT COMP SOFTW APP, P161, DOI 10.1109/CMPSAC.2001.960612
   Zhou C., 2011, ICST, P259, DOI DOI 10.1109/ICST.2011.63
   Zhou CX, 2011, SOFTW TEST VERIF REL, V21, P241, DOI 10.1002/stvr.462
   Zhou CX, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P396, DOI 10.1109/ICST.2009.43
NR 103
TC 10
Z9 10
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2016
VL 42
IS 10
BP 941
EP 959
DI 10.1109/TSE.2016.2519032
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EA5KP
UT WOS:000386659500003
OA Green Published
DA 2024-07-18
ER

PT J
AU Wong, WE
   Gao, RZ
   Li, YH
   Abreu, R
   Wotawa, F
AF Wong, W. Eric
   Gao, Ruizhi
   Li, Yihao
   Abreu, Rui
   Wotawa, Franz
TI A Survey on Software Fault Localization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software fault localization; program debugging; software testing;
   execution trace; suspicious code; survey
ID PROGRAM BEHAVIOR; SPECTRUM; MODEL; CODE; EFFICIENT; MUTATION; SLICES;
   INFORMATION; CORRECTNESS; DIAGNOSIS
AB Software fault localization, the act of identifying the locations of faults in a program, is widely recognized to be one of the most tedious, time consuming, and expensive - yet equally critical - activities in program debugging. Due to the increasing scale and complexity of software today, manually locating faults when failures occur is rapidly becoming infeasible, and consequently, there is a strong demand for techniques that can guide software developers to the locations of faults in a program with minimal human intervention. This demand in turn has fueled the proposal and development of a broad spectrum of fault localization techniques, each of which aims to streamline the fault localization process and make it more effective by attacking the problem in a unique way. In this article, we catalog and provide a comprehensive overview of such techniques and discuss key issues and concerns that are pertinent to software fault localization as a whole.
C1 [Wong, W. Eric] Wuhan Univ, State Key Lab Software Engn, Wuhan, Peoples R China.
   [Wong, W. Eric; Gao, Ruizhi; Li, Yihao] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.
   [Abreu, Rui] Univ Porto, Dept Informat Engn, Rua Campo Alegre 823, P-4100 Oporto, Portugal.
   [Abreu, Rui] PARC, Palo Alto, CA USA.
   [Wotawa, Franz] Graz Univ Technol, Inst Software Technol, A-8010 Graz, Austria.
C3 Wuhan University; University of Texas System; University of Texas
   Dallas; Universidade do Porto; Graz University of Technology
RP Wong, WE (corresponding author), Wuhan Univ, State Key Lab Software Engn, Wuhan, Peoples R China.; Wong, WE (corresponding author), Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.
EM ewong@utdallas.edu; gxr116020@utdallas.edu; yxl107221@utdallas.edu;
   rui@computer.org; wotawa@ist.tugraz.at
RI Abreu, Rui/K-7048-2019; Jolugbo, Olajide/D-3216-2017; li,
   yihao/AAS-2033-2020
OI Abreu, Rui/0000-0003-3734-3157; Jolugbo, Olajide/0000-0001-6512-4117;
   li, yihao/0000-0001-9874-0338; Wotawa, Franz/0000-0002-0462-2283
CR Abraham R, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P165, DOI 10.1109/VLHCC.2004.29
   Abraham R, 2007, J VISUAL LANG COMPUT, V18, P71, DOI 10.1016/j.jvlc.2006.06.001
   Abraham R, 2007, PROC INT CONF SOFTW, P251
   Abramson D., 1995, 8 INT C HIGH PERF CO
   Abreu R., 2010, 6 INT C PRED MOD SOF
   Abreu R, 2009, P 2009 ACM S APPL CO, P409, DOI DOI 10.1145/1529282.1529374
   Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Abreu R, 2015, SOFTWARE QUAL J, V23, P297, DOI 10.1007/s11219-014-9236-4
   Abreu R, 2009, INT CONF QUAL SOFTW, P367, DOI 10.1109/QSIC.2009.55
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Abreu R, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P712
   Afshan S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P352, DOI 10.1109/ICST.2013.11
   AGRAWAL H, 1993, SOFTWARE PRACT EXPER, V23, P589, DOI 10.1002/spe.4380230603
   Agrawal H, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P143, DOI 10.1109/ISSRE.1995.497652
   Agrawal H, 1998, COMPUTER, V31, P64, DOI 10.1109/2.689678
   AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   AGRAWAL H, 1991, IEEE SOFTWARE, V8, P21, DOI 10.1109/52.88940
   Agrawal H., 1991, THESIS
   Ahmad Y, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P174
   Al-Khanjari ZA, 2005, SOFTWARE QUAL J, V13, P129, DOI 10.1007/s11219-005-6214-x
   Ali S, 2009, IEEE INT CONF AUTOM, P76, DOI 10.1109/ASE.2009.89
   Alipour MohammadAmin., 2012, Proceedings of the Ninth International Workshop on Dynamic Analysis, WODA 2012, page, P7
   Alves E., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P520, DOI 10.1109/ASE.2011.6100114
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   Andrews M, 2003, IEEE SOFTWARE, V20, P84, DOI 10.1109/MS.2003.1241371
   [Anonymous], THESIS
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), DOI DOI 10.1145/2025113.2025136
   [Anonymous], 1998, XSUDS US MAN
   [Anonymous], ICSE 12
   [Anonymous], THESIS
   [Anonymous], P 8 S ABSTR REF APPR
   [Anonymous], 2013, P 2013 INT S SOFTW T
   [Anonymous], 2013, THESIS
   [Anonymous], 1982, THESIS
   [Anonymous], 2005, P 20 IEEEACM INT C A
   [Anonymous], 2010, ISSTA
   [Anonymous], 2007, THESIS
   [Anonymous], 2010, 9 JOINT C KNOWL BAS
   [Anonymous], 2013, P 2013 INT S SOFTW T, DOI DOI 10.1145/2483760.2483767
   [Anonymous], 2009, C SPAN ASS ART INT
   [Anonymous], 2012, DISSERTATION, DOI DOI 10.7666/D.Y2195989
   [Anonymous], 2015, ECLIPSE TEST PERFORM
   [Anonymous], P 2013 INT S SOFTW T
   [Anonymous], 2014, THESIS
   [Anonymous], 2011, P SOFTW ENG KNOWL EN
   [Anonymous], 2005, ASE, DOI [10.1145/1101908.1101966, DOI 10.1145/1101908.1101966]
   [Anonymous], 2012, International Symposium on Software Testing and Analysis, ISSTA 2012, Minneapolis, MN, USA, July 15-20, 2012, DOI DOI 10.1145/2338965.2336790
   [Anonymous], 2015, GNU GPROF
   [Anonymous], 2008, THESIS
   [Anonymous], JPL
   [Anonymous], 2006, Why programs fail-a guide to systematic debugging
   [Anonymous], 2005, THESIS
   [Anonymous], 2005, P 6 INT S AUTOMATED
   [Anonymous], 2003, SOFTVIS 03, DOI DOI 10.1145/774833.774851
   [Anonymous], 2006, DECISION LINE
   [Anonymous], 2012, THESIS
   [Anonymous], 2009, 10 LATIN AM TEST WOR
   [Anonymous], 2015, GNU GDB
   [Anonymous], THESIS
   [Anonymous], 2008, ISSTA
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Artho C, 2003, SOFTW TEST VERIF REL, V13, P207, DOI 10.1002/stvr.281
   Artzi S., 2010, ISSTA, P49, DOI DOI 10.1145/1831708.1831715
   Artzi S, 2010, IEEE T SOFTWARE ENG, V36, P474, DOI 10.1109/TSE.2010.31
   Artzi Shay., 2010, P 32 ACMIEEE INT C S, P265
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Baah G. K., 2012, THESIS
   Baah GK, 2010, IEEE T SOFTWARE ENG, V36, P528, DOI 10.1109/TSE.2009.87
   Badame S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P399, DOI 10.1109/ICSM.2012.6405299
   Ball T, 2003, ACM SIGPLAN NOTICES, V38, P97, DOI 10.1145/640128.604140
   Ball T., 1994, ACM T PROGRAM LANGUA, V16
   Bandyopadhyay A., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P479, DOI 10.1109/ICST.2012.130
   Bandyopadhyay A., 2011, Proceedings of the 2011 IEEE 13th International Symposium on High-Assurance Systems Engineering (HASE 2011), P317, DOI 10.1109/HASE.2011.52
   Bandyopadhyay A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P660, DOI 10.1109/ASE.2011.6100150
   Bandyopadhyay A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P420, DOI 10.1109/ASE.2011.6100088
   Bandyopadhyay A., 2013, THESIS
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   Beszédes A, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P105, DOI 10.1109/CSMR.2001.914974
   Binkley D, 2004, ADV COMPUT, V62, P105, DOI 10.1016/S0065-2458(03)62003-6
   Bo Jiang, 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P21, DOI 10.1109/QSIC.2011.37
   Bo Jiang, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P377, DOI 10.1109/QSIC.2010.64
   BOURDONCLE F, 1993, SIGPLAN NOTICES, V28, P46, DOI 10.1145/173262.155095
   Bregar A., 2004, Complexity metrics for spreadsheet models, P85
   Briand LC, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P137, DOI 10.1109/ISSRE.2007.31
   Brun Y, 2004, PROC INT CONF SOFTW, P480, DOI 10.1109/ICSE.2004.1317470
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   Burckhardt S, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P12, DOI 10.1145/1250734.1250737
   Burger Martin., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, ISSTA '11, P221, DOI DOI 10.1145/2001420.2001447
   Cai KY, 2005, P INT COMP SOFTW APP, P113
   Campos J, 2013, IEEE INT CONF AUTOM, P257, DOI 10.1109/ASE.2013.6693085
   Cardoso N., 2013, PROC 27 AAAI C ARTIF, P152
   Cellier P, 2008, LECT NOTES ARTIF INT, V4933, P273, DOI 10.1007/978-3-540-78137-0_20
   Chaki S., 2004, INT S FDN SOFTW ENG
   Chen C, 2015, THESIS
   Chen K, 2007, P INT COMP SOFTW APP, P23
   Chen TY, 2011, IEEE T SOFTWARE ENG, V37, P109, DOI 10.1109/TSE.2010.23
   Cheng Gong, 2012, Proceedings of the 2012 IEEE 36th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW), P470, DOI 10.1109/COMPSACW.2012.89
   Cheng H, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P141
   Chesley O. C., 2007, THESIS
   Chilimbi TM, 2004, ACM SIGPLAN NOTICES, V39, P156, DOI 10.1145/1037187.1024412
   Chilimbi TM, 2009, PROC INT CONF SOFTW, P34, DOI 10.1109/ICSE.2009.5070506
   Choi S.-S., 2010, Systemics, Cybernetics and Informatic, V8, P43
   Christ U, 2013, LECT NOTES COMPUT SC, V7737, P189
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   COLLOFELLO JS, 1987, P 1987 NAT COMP C CH, P539
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   COUTANT DS, 1988, SIGPLAN NOTICES, V23, P125, DOI 10.1145/960116.54003
   Csallner C, 2005, PROC INT CONF SOFTW, P422
   Cunha Jacome, 2010, Proceedings 2010 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2010), P93, DOI 10.1109/VLHCC.2010.22
   Dallmeier V, 2005, LECT NOTES COMPUT SC, V3586, P528
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   de Kleer J, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P733
   de Souza HA, 2013, IEEE INT CONF AUTOM, P628, DOI 10.1109/ASE.2013.6693124
   Dean BC, 2009, IEEE INT CONF AUTOM, P640, DOI 10.1109/ASE.2009.54
   Debroy V., 2011, Proceedings of the 2011 IEEE 35th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW 2011). Volume II: Workshops, P506, DOI 10.1109/COMPSACW.2011.92
   Debroy V., 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P13, DOI 10.1109/QSIC.2010.80
   Debroy Vidroha, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P165, DOI 10.1109/ISSRE.2009.14
   Debroy V., 2011, THESIS
   Debroy V, 2014, J SYST SOFTWARE, V90, P45, DOI 10.1016/j.jss.2013.10.042
   Debroy V, 2013, SOFTWARE PRACT EXPER, V43, P989, DOI 10.1002/spe.1146
   Debroy Vidroha, 2011, P 2011 ACM S APPL CO, P1457, DOI [10.1145/1982185.1982498, DOI 10.1145/1982185.1982498]
   DEKLEER J, 1987, ARTIF INTELL, V32, P97, DOI 10.1016/0004-3702(87)90063-4
   DeMillo R. A., 1996, SIGSOFT Software Engineering Notes, V21, P121, DOI [10.1145/229000.226310, 10.1145/226295.226310]
   DeMillo R. A., 1977, P IEEE ANN COMP SOFT, P515
   DeMott J. D., 2012, THESIS
   Díaz E, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P310, DOI 10.1109/ASE.2003.1240327
   Dickinson W, 2001, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2001.919107
   DiGiuseppe N., 2011, P 20 INT S SOFTW TES, P210, DOI DOI 10.1145/2001420.2001446
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Edwards J. C., 2003, US Patent, Patent No. [6,539,501, 6539501]
   Engler D., 2003, Operating Systems Review, V37, P237, DOI 10.1145/1165389.945468
   Ermis Evren, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P187, DOI 10.1007/978-3-642-32759-9_17
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Farzan A, 2006, LECT NOTES COMPUT SC, V4144, P315, DOI 10.1007/11817963_30
   Farzan A, 2009, LECT NOTES COMPUT SC, V5643, P248, DOI 10.1007/978-3-642-02658-4_21
   Fausett L., 1994, FUNDAMENTALS NEURAL
   Flanagan C, 2005, IEEE T SOFTWARE ENG, V31, P275, DOI 10.1109/TSE.2005.47
   Flanagan C, 2004, ACM SIGPLAN NOTICES, V39, P256, DOI 10.1145/982962.964023
   Flanagan C, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P244, DOI 10.1145/1806596.1806625
   Flanagan C, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P293, DOI 10.1145/1375581.1375618
   Friedrich G, 1999, ARTIF INTELL, V111, P3, DOI 10.1016/S0004-3702(99)00034-X
   Fry Z. P., 2011, THESIS
   Gao YC, 2013, INT CONF QUAL SOFTW, P288, DOI 10.1109/QSIC.2013.23
   Gong C, 2012, ASIA PAC SOFWR ENG, P729, DOI 10.1109/APSEC.2012.22
   Gong L, 2012, IEEE INT CONF AUTOM, P30, DOI 10.1145/2351676.2351682
   Gong L, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P67, DOI 10.1109/ICSM.2012.6405255
   Gonzalez-Sanchez A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P83, DOI 10.1109/ASE.2011.6100153
   Gonzalez-Sanchez Alberto, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P42, DOI 10.1109/QSIC.2010.28
   Gonzalez-Sanchez A., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, P1398, DOI DOI 10.1145/1982185.1982489
   Gopinath D, 2012, IEEE INT CONF AUTOM, P40, DOI 10.1145/2351676.2351683
   Gouveia C., 2013, 1st Working Conference on Software Visualization, VISSOFT, P1, DOI DOI 10.1109/VISSOFT.2013.6650539
   Gregory W. B., 1994, THESIS
   Griesmayer A., 2007, THESIS
   Griesmayer A, 2010, SOFTW TEST VERIF REL, V20, P149, DOI 10.1002/stvr.421
   Griesmayer A, 2007, ELECTRON NOTES THEOR, V174, P95, DOI 10.1016/j.entcs.2006.12.032
   Groce A, 2004, LECT NOTES COMPUT SC, V3114, P453
   Groce A, 2003, LECT NOTES COMPUT SC, V2648, P121
   Groce A., 2006, International Journal on Software Tools for Technology Transfer, V8, P229, DOI 10.1007/s10009-005-0202-0
   Grottke M., 2005, P 16 INT S SOFTW REL, P419
   Guo L, 2006, LECT NOTES COMPUT SC, V3923, P80
   Gupta N., 2005, Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering, New York, NY, USA: Association for Computing Machinery, ASE'05, P263, DOI 10.1145/1101908.1101948
   Gyimóthy T, 1999, LECT NOTES COMPUT SC, V1687, P303, DOI 10.1145/318774.319248
   Hamill M, 2009, IEEE T SOFTWARE ENG, V35, P484, DOI 10.1109/TSE.2009.3
   Hammer C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P231, DOI 10.1145/1368088.1368120
   Hao D, 2005, PROC IEEE INT CONF S, P683
   Hao D, 2009, PROC INT CONF SOFTW, P583, DOI 10.1109/ICSE.2009.5070561
   Harman Mark, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P182, DOI 10.1109/ICSTW.2010.31
   Harrold MJ, 2000, SOFTW TEST VERIF REL, V10, P171, DOI 10.1002/1099-1689(200009)10:3<171::AID-STVR209>3.0.CO;2-J
   Hays M., 2014, THESIS
   He H., 2004, THESIS
   He HF, 2004, LECT NOTES COMPUT SC, V2984, P267
   Hecht-Nielsen R., 1989, IJCNN: International Joint Conference on Neural Networks (Cat. No.89CH2765-6), P593, DOI 10.1109/IJCNN.1989.118638
   HENNESSY J, 1982, ACM T PROGR LANG SYS, V4, P323, DOI 10.1145/357172.357173
   Hermans F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P292, DOI 10.1109/ICSE.2013.6606575
   Hermans F, 2012, PROC INT CONF SOFTW, P441, DOI 10.1109/ICSE.2012.6227171
   Hermans F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P451, DOI 10.1145/1985793.1985855
   Hierons RM, 2006, ACM T SOFTW ENG METH, V15, P227, DOI 10.1145/1151695.1151696
   Hierons RM, 2009, ACM T SOFTW ENG METH, V18, DOI 10.1145/1538942.1538944
   Hierons RM, 2012, IEEE T SOFTWARE ENG, V38, P629, DOI 10.1109/TSE.2011.45
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Hodnigg K., 2008, Proceedings of EuSpRIG 2008 Conference, P79
   HOFER B., 2013, THESIS
   Hofer B, 2012, FRONT ARTIF INTEL AP, V242, P420, DOI 10.3233/978-1-61499-098-7-420
   Hofer B, 2013, LECT NOTES COMPUT SC, V7793, P68, DOI 10.1007/978-3-642-37057-1_6
   Hovemeyer D, 2005, THESIS
   Hu P., 2006, THESIS
   Hu PF, 2008, INT CONF QUAL SOFTW, P385, DOI 10.1109/QSIC.2008.44
   Hua Jie Lee, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P218, DOI 10.1109/COMPSAC.2010.26
   Ing-Xiang Chen, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P136, DOI 10.1109/COMPSAC.2008.162
   Janssen T, 2009, SINTER 09, P23
   Jeffrey DB, 2009, THESIS
   Jeffrey D, 2009, PROC IEEE INT CONF S, P221, DOI 10.1109/ICSM.2009.5306303
   Jeffrey D, 2009, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2009.5090029
   Jian Xu, 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P11, DOI 10.1109/QSIC.2011.32
   Jiang B, 2013, INFORM SOFTWARE TECH, V55, P897, DOI 10.1016/j.infsof.2012.10.001
   Jiang B, 2012, INFORM SOFTWARE TECH, V54, P739, DOI 10.1016/j.infsof.2012.01.006
   Jiang B, 2009, P INT COMP SOFTW APP, P99, DOI 10.1109/COMPSAC.2009.23
   Jin Wei., 2013, P 2013 INT S SOFTWAR, P213, DOI DOI 10.1145/2483760.2483763
   Jones J A., 2007, Debugging in parallel, P16
   Jones J.A., 2001, Proceedings of ICSE 2001 Workshop on Software Visualization, Toronto, Ontario, Canada, P71
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Jose Manu, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P504, DOI 10.1007/978-3-642-22110-1_40
   Jose M, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P437
   Ju XL, 2014, J SYST SOFTWARE, V90, P3, DOI 10.1016/j.jss.2013.11.1109
   Kaleeswaran S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P266, DOI 10.1145/2568225.2568258
   Kidd N, 2009, LECT NOTES COMPUT SC, V5403, P198, DOI 10.1007/978-3-540-93900-9_18
   Kim J, 2014, 2014 INTERNATIONAL CONFERENCE ON INFORMATION NETWORKING (ICOIN 2014), P346, DOI 10.1109/ICOIN.2014.6799702
   Kiss A, 2005, SOFTWARE QUAL J, V13, P227, DOI 10.1007/s11219-005-1751-x
   Ko AJ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P301, DOI 10.1145/1368088.1368130
   Köb D, 2004, FRONT ARTIF INTEL AP, V110, P833
   Koca Feyzullah, 2013, Testing Software and Systems. 25th IFIP WG 6.1 International Conference, ICTSS 2013. Proceedings: LNCS 8254, P239, DOI 10.1007/978-3-642-41707-8_16
   Kompella R. R., 2007, THESIS
   Konighofer R., 2011, 2011 Formal Methods in Computer-Aided Design (FMCAD), P91
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Korel B., 1994, SIGSOFT Software Engineering Notes, P66
   Korel B., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P13, DOI 10.1109/WST.1988.5350
   KOREL B, 1988, IEEE T SOFTWARE ENG, V14, P1253, DOI 10.1109/32.6169
   Krinke J, 2004, SOFTWARE QUAL J, V12, P339, DOI 10.1023/B:SQJO.0000039792.93414.a5
   Kusumoto S., 2002, Empirical Software Engineering, V7, P49, DOI 10.1023/A:1014823126938
   Lazaar N., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P320, DOI 10.1109/ICSTW.2011.20
   Le Tien-Duy B., 2013, 2013 IEEE International Conference on Software Maintenance (ICSM), P380, DOI 10.1109/ICSM.2013.52
   Le Tien-Duy B, 2013, PROC IEEE INT CONF S, P310, DOI 10.1109/ICSM.2013.42
   Lee CC, 1999, IEEE T SYST MAN CY B, V29, P674, DOI 10.1109/3477.809023
   Lee H., 2011, The Influence of Sociotropic Judgment on Public Perceptions of Trade Liberalization: Distributional Judgment and Institutional Factors'
   Lee HJ, 2009, 2009 2ND IEEE INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND INFORMATION TECHNOLOGY, VOL 4, P501, DOI 10.1109/ICCSIT.2009.5234512
   Lei Y, 2012, P INT COMP SOFTW APP, P1, DOI 10.1109/COMPSAC.2012.9
   Lei Zhao, 2011, Journal of Software, V6, P1977, DOI 10.4304/jsw.6.10.1977-1984
   Lewis David, 1974, The Journal of Philosophy, V70, P556, DOI DOI 10.2307/2025310
   Lewis DK., 1973, Counterfactuals
   Li F., 2013, P INT S COD GEN OPT, P23
   Li Y, 2012, PROCEEDINGS OF 2012 IEEE INTERNATIONAL CONFERENCE ON CONDITION MONITORING AND DIAGNOSIS (IEEE CMD 2012), P357, DOI 10.1109/CMD.2012.6416453
   Lian L, 1997, INFORM SOFTWARE TECH, V39, P271, DOI 10.1016/S0950-5849(96)01149-4
   Liang DL, 2002, ACM T SOFTW ENG METH, V11, P347, DOI 10.1145/567793.567796
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liqiang Wang, 2006, Proceedings of the 2006 ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming PPoPP'06, P137, DOI 10.1145/1122971.1122993
   Liu C., 2014, P SIAM INT C DAT MIN, P286
   Liu C, 2007, PROC IEEE INT CONF S, P455, DOI 10.1109/ICSM.2007.4362658
   Liu C, 2006, IEEE T SOFTWARE ENG, V32, P831, DOI 10.1109/TSE.2006.105
   Liu C, 2008, IEEE T SOFTWARE ENG, V34, P826, DOI 10.1109/TSE.2008.66
   Liu CJ, 2006, PME CONFERENCE PROCE, P286
   Liu Y, 2015, THESIS
   Lu S., 2008, EXPT STUDY DISTRIBUT
   Lucia, 2014, J SOFTW-EVOL PROC, V26, P172, DOI 10.1002/smr.1616
   Lucia, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P74, DOI 10.1109/MSR.2012.6224302
   Lucia D. Lo, 2014, P IEEE INT C AUT SOF, P127
   Lucia L., 2014, THESIS
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Lyle J. R., 1987, Second International Conference on Computers and Applications (Cat. No.87CH2433-1), P877
   Machado P., 2013, Proceedings of the 2013 International Workshop on Software Development Lifecycle for Mobile, DeMobile'13, P9
   Mao XG, 2014, J SYST SOFTWARE, V89, P51, DOI 10.1016/j.jss.2013.08.031
   Maruyama K, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P116, DOI 10.1109/QSIC.2003.1319093
   Masri W., 2010, P INT C SOFTW TEST V, P369
   Masri W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559932
   Mateis C, 2000, FR ART INT, V54, P171
   Mateis C., 2002, P IEEE INT C TOOLS A, P62
   Mayer W, 2002, LECT NOTES ARTIF INT, V2557, P107
   Mayer W, 2002, FRONT ARTIF INTEL AP, V77, P417
   Mayer Wolfgang, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P128, DOI 10.1109/ASE.2008.23
   Mayer W., 2003, Proceedings of the 2003 International Workshop on Automated and Analysis-Driven Debugging, AADEBUG'03, P55
   Mayer W., 2004, P INT WORKSH PRINC D, P87
   Mayer W, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P471
   Mayer W, 2007, ELECTRON NOTES THEOR, V174, P61, DOI 10.1016/j.entcs.2006.12.030
   Mayer Wolfgang., 2008, PROC 19 INT WORKSH P, P127
   Mayer Wolfgang., 2003, PROC. DX03 WORKSHOP, P119
   McMaster Scott, 2007, 2007 IEEE International Conference on Software Maintenance, P335, DOI 10.1109/ICSM.2007.4362646
   MCMINN P., 2010, Proceedings of the First International Workshop on Software Test Output Validation, P1
   Miao Y., 2012, INT C SOFTW ENG KNOW
   Modi V., 2013, P 11 ACM SIGPLAN SIG, P33
   Mohapatra D. P., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P60
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   Moon S., 2014, THESIS
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   Musuvathi M., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, P267
   Naik M, 2006, ACM SIGPLAN NOTICES, V41, P308, DOI 10.1145/1133981.1134018
   Naish L., 2012, P AUSTR SOFTW ENG C, P96
   Naish L, 2013, IEEE AUS SOFT ENGR, P51, DOI 10.1109/ASWEC.2013.16
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Naish L, 2010, ASIA PAC SOFWR ENG, P375, DOI 10.1109/APSEC.2010.50
   Naish L, 2009, ASIA PAC SOFWR ENG, P168, DOI 10.1109/APSEC.2009.32
   Nessa S, 2009, P INT C WIR ALG SYST, P548
   Nica M., 2010, THESIS
   Nica M, 2013, SOFTWARE PRACT EXPER, V43, P1121, DOI 10.1002/spe.1142
   Nie CH, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000801
   Niu X, 2013, IEEE ICST WORKSHOP, P271, DOI 10.1109/ICSTW.2013.38
   Pai GJ, 2007, IEEE T SOFTWARE ENG, V33, P675, DOI [10.1109/TSE.2007.70722, 10.1109/TSE.2007.70722.]
   Pan H., 1993, THESIS
   PAN H, 1992, SERCTR116P PURD U
   Panko R. R., 2000, P 33 ANN HAW INT C S, P1
   Panko R.R., 2008, CoRR
   Panko RR, 1999, J MANAGE INFORM SYST, V16, P159, DOI 10.1080/07421222.1999.11518250
   Park S, 2009, ACM SIGPLAN NOTICES, V44, P25, DOI 10.1145/1508284.1508249
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pastore F., 2010, THESIS
   Pastore F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1335
   Pearl Judea, 2000, MODELS REASONING INF, V19, DOI DOI 10.1017/CBO9780511803161
   Peischl B, 2006, IEEE DES TEST COMPUT, V23, P8, DOI 10.1109/MDT.2006.5
   Peischl B., 2004, THESIS
   Perez A, 2014, J SYST SOFTWARE, V90, P18, DOI 10.1016/j.jss.2013.12.036
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   Pytlik Brock., 2003, Proceedings of AADEBUG'03, P273
   Qi D., 2013, THESIS
   Qian J, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P748
   Rao PF, 2013, INT CONF QUAL SOFTW, P260, DOI 10.1109/QSIC.2013.18
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Reinhart CM, 2010, AM ECON REV, V100, P573, DOI 10.1257/aer.100.2.573
   REITER R, 1987, ARTIF INTELL, V32, P57, DOI 10.1016/0004-3702(87)90062-2
   Renieris E., 2005, THESIS
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Reps T, 1997, LECT NOTES COMPUT SC, V1301, P432, DOI 10.1145/267896.267925
   Riaz N., 2008, THESIS
   Rohr M., 2015, THESIS
   Rosenblum D. S., 1992, International Conference on Software Engineering, P92, DOI 10.1145/143062.143098
   ROSENBLUM DS, 1995, IEEE T SOFTWARE ENG, V21, P19, DOI 10.1109/32.341844
   Rothermel G, 1998, PROC INT CONF SOFTW, P198, DOI 10.1109/ICSE.1998.671118
   Roychowdhry S., 2013, THESIS
   Runciman C., 1993, J FUNCTIONAL PROGRAM, V3, P217
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Sahoo S. K., 2013, THESIS
   Sahoo SK, 2013, ACM SIGPLAN NOTICES, V48, P139, DOI 10.1145/2499368.2451131
   Sanchez A., 2011, THESIS
   Santelices R., 2012, THESIS
   Santelices R, 2009, PROC INT CONF SOFTW, P56, DOI 10.1109/ICSE.2009.5070508
   Savage S, 1997, ACM T COMPUT SYST, V15, P391, DOI 10.1145/269005.266641
   Sen K., 2003, Software Engineering Notes, V28, P337, DOI 10.1145/949952.940116
   Servant F, 2012, PROC INT CONF SOFTW, P36, DOI 10.1109/ICSE.2012.6227208
   Shacham O., 2005, PPoPP, P107
   Shu G. T., 2014, THESIS
   Shu G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P408, DOI 10.1109/ICST.2013.57
   Silva J, 2011, ADV ENG SOFTW, V42, P976, DOI 10.1016/j.advengsoft.2011.05.024
   Sorrentino Francesco, 2010, P 18 ACM SIGSOFT INT, P37, DOI DOI 10.1145/1882291.1882300
   Steimann F., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P121, DOI 10.1109/ISSRE.2012.28
   Steimann F, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P366, DOI 10.1109/ICST.2009.24
   Sterling C.D., 2005, Proceedings of the Sixth International Symposium on Automated Analysis-Driven Debugging, P23, DOI [10.1145/1085130.1085134, DOI 10.1145/1085130.1085134]
   Stridharan M., 2007, P SIGPLAN C PROGR LA, P112
   Stumptner M, 1998, AI COMMUN, V11, P35
   Stumptner M., 1999, P INT JOINT C ART IN, P440
   Sumner W. N., 2013, THESIS
   Sumner W. N., 2010, PROC INT S FDN SOFTW, P217
   Sumner WN, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P272, DOI 10.1109/ICSE.2013.6606573
   Sumner WN, 2009, P INT C FUND APPR SO, P335
   TAHA AB, 1989, PROCEEDINGS : THE THIRTEENTH ANNUAL INTERNATIONAL COMPUTER SOFTWARE & APPLICATIONS CONFERENCE, P527, DOI 10.1109/CMPSAC.1989.65142
   Tallam S., 2007, THESIS
   Tip F, 2001, ACM T SOFTW ENG METH, V10, P5, DOI 10.1145/366378.366379
   Torlak E, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P341, DOI 10.1145/1806596.1806635
   Vayani R., 2007, THESIS
   VESSEY I, 1985, INT J MAN MACH STUD, V23, P459, DOI 10.1016/S0020-7373(85)80054-7
   Vidács L, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P204, DOI 10.1109/CSMR-WCRE.2014.6747172
   Wang SF, 2011, ADV MATER RES-SWITZ, V219-220, P556, DOI 10.4028/www.scientific.net/AMR.219-220.556
   Wang T. T., 2007, THESIS
   Wang WW, 2014, ACM SIGPLAN NOTICES, V49, P375, DOI [10.1145/2692916.2555276, 10.1145/2555243.2555276]
   Wang X.Q., 2010, THESIS
   Wang XM, 2009, PROC INT CONF SOFTW, P45, DOI 10.1109/ICSE.2009.5070507
   Wasserman P.D., 1993, Advanced Methods in Neural Computing
   Weeratunge D., 2010, P 19 INT S SOFTW TES, P253
   Weiglhofer M, 2009, IEEE INT CONF AUTOM, P630, DOI 10.1109/ASE.2009.78
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Weiser Mark D., 1979, P 5 INT C SOFTW ENG, P439
   Wen WZ, 2012, PROC INT CONF SOFTW, P1511, DOI 10.1109/ICSE.2012.6227049
   Willett P, 2003, BIOCHEM SOC T, V31, P603, DOI 10.1042/BST0310603
   Wong W. E., 2012, Proceedings of the 2012 IEEE Sixth International Conference on Software Security and Reliability (SERE 2012), P21, DOI 10.1109/SERE.2012.12
   Wong W. Eric, 2010, Proceedings 2010 Fourth IEEE International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2010), P14, DOI 10.1109/SSIRI.2010.38
   Wong WE, 2006, J SYST SOFTWARE, V79, P891, DOI 10.1016/j.jss.2005.06.045
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Wong WE, 2012, IEEE T SYST MAN CY C, V42, P378, DOI 10.1109/TSMCC.2011.2118751
   Wong WE, 2012, IEEE T RELIAB, V61, P149, DOI 10.1109/TR.2011.2172031
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
   Wong WE, 2009, INT J SOFTW ENG KNOW, V19, P573, DOI 10.1142/S021819400900426X
   Wong WE, 2005, 12TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P576, DOI 10.1109/APSEC.2005.39
   Wong WE, 2005, J SYST SOFTWARE, V76, P15, DOI 10.1016/j.jss.2004.06.026
   Wotawa F, 2002, LECT NOTES ARTIF INT, V2358, P746
   Wotawa Franz, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P161, DOI 10.1109/QSIC.2010.51
   Wotawa F, 2002, ARTIF INTELL, V135, P125, DOI 10.1016/S0004-3702(01)00161-8
   Wotawa F, 2001, APPL INTELL, V16, P71, DOI 10.1023/A:1012821511498
   Wotawa F, 2012, J LOGIC ALGEBR PROGR, V81, P390, DOI 10.1016/j.jlap.2012.03.002
   Wright CS, 2011, LECT NOTES COMPUT SC, V6694, P198, DOI 10.1007/978-3-642-21323-6_25
   Wu J, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P274
   Xiang Xie, 2012, Security and Cryptography for Networks. Proceedings of the 8th International Conference (SCN 2012), P1, DOI 10.1007/978-3-642-32928-9_1
   Xiangyu Zhang, 2006, 28th International Conference on Software Engineering Proceedings, P272, DOI 10.1145/1134285.1134324
   Xiaoyuan Xie, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P224, DOI 10.1007/978-3-642-39742-4_17
   Xiaoyuan Xie, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P385, DOI 10.1109/QSIC.2010.45
   Xiaozhen Xue, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P113, DOI 10.1109/ESEM.2013.22
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Xie XY, 2013, INFORM SOFTWARE TECH, V55, P866, DOI 10.1016/j.infsof.2012.08.008
   Xin B, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P238, DOI 10.1145/1375581.1375611
   Xu J. Qian, 2005, ACM SIGSOFT Software Engineering Notes, V30, P1, DOI [10.1145/1050849.1050865.36Y, DOI 10.1145/1050849.1050865]
   Xu J, 2013, INFORM SOFTWARE TECH, V55, P880, DOI 10.1016/j.infsof.2012.08.006
   Xu MH, 2005, PHYS REV E, V71, DOI 10.1103/PhysRevE.71.016706
   Xu XF, 2011, INT J SOFTW ENG KNOW, V21, P803, DOI 10.1142/S0218194011005505
   YanWang Harish Patil, 2014, P ANN IEEE ACM INT S, DOI [10.1145/2544137.2544152, DOI 10.1145/2581122.2544152]
   Yilmaz C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P81, DOI 10.1145/1368088.1368100
   Yoo S., 2014, RN1414 UN COLL LOND
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zhang S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P424, DOI 10.1145/2591062.2591099
   Zhang X. G., 2012, THESIS
   Zhang XG, 2004, PROC INT CONF SOFTW, P502, DOI 10.1109/ICSE.2004.1317472
   Zhang XY, 2007, EMPIR SOFTW ENG, V12, P143, DOI 10.1007/s10664-006-9007-3
   Zhang XY, 2007, SOFTWARE PRACT EXPER, V37, P935, DOI 10.1002/spe.795
   Zhang XY, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P415, DOI 10.1145/1250734.1250782
   Zhang Z., 2009, THESIS
   Zhang ZG, 2003, PROC INT CONF SOFTW, P319
   Zhang ZY, 2012, COMPUTER, V45, P64, DOI 10.1109/MC.2012.185
   Zhang ZY, 2011, P INT COMP SOFTW APP, P58, DOI [10.1109/COMPSAC.2011.16, 10.1109/IMCCC.2011.24]
   Zhang ZY, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P43, DOI 10.1145/1595696.1595705
   Zhang ZY, 2011, J SYST SOFTWARE, V84, P885, DOI 10.1016/j.jss.2010.12.048
   Zhang ZY, 2010, J SYST SOFTWARE, V83, P174, DOI 10.1016/j.jss.2009.09.041
   Zhang ZY, 2009, INFORM SOFTWARE TECH, V51, P1573, DOI 10.1016/j.infsof.2009.06.013
   Zhao L, 2010, LECT NOTES COMPUT SC, V6377, P158, DOI 10.1007/978-3-642-16167-4_21
   Zheng A. X., 2006, P 23 INT C MACH LEAR, P26
   Zheng J, 2006, IEEE T SOFTWARE ENG, V32, P240, DOI 10.1109/TSE.2006.38
   Zheng Wei, 2013, 2013 IEEE Seventh International Conference on Software Security and Reliability Companion (SERE-C), P125, DOI 10.1109/SERE-C.2013.18
   Zhenyu Zhang, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P128, DOI 10.1109/COMPSAC.2008.207
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zimmermann T, 2002, LECT NOTES COMPUT SC, V2269, P191
   Zunwen You, 2012, 2012 International Conference on Machine Learning and Cybernetics (ICMLC 2012), P899, DOI 10.1109/ICMLC.2012.6359473
   [No title captured]
   [No title captured]
NR 422
TC 585
Z9 644
U1 14
U2 116
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2016
VL 42
IS 8
BP 707
EP 740
DI 10.1109/TSE.2016.2521368
PG 34
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DT4UE
UT WOS:000381475800001
OA Green Submitted
HC Y
HP N
DA 2024-07-18
ER

PT J
AU Bagheri, H
   Sadeghi, A
   Garcia, J
   Malek, S
AF Bagheri, Hamid
   Sadeghi, Alireza
   Garcia, Joshua
   Malek, Sam
TI COVERT: Compositional Analysis of Android Inter-App Permission Leakage
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Formal verification; static analysis; Android; Inter-App vulnerabilities
ID ALLOY
AB Android is the most popular platform for mobile devices. It facilitates sharing of data and services among applications using a rich inter-app communication system. While access to resources can be controlled by the Android permission system, enforcing permissions is not sufficient to prevent security violations, as permissions may be mismanaged, intentionally or unintentionally. Android's enforcement of the permissions is at the level of individual apps, allowing multiple malicious apps to collude and combine their permissions or to trick vulnerable apps to perform actions on their behalf that are beyond their individual privileges. In this paper, we present COVERT, a tool for compositional analysis of Android inter-app vulnerabilities. COVERT's analysis is modular to enable incremental analysis of applications as they are installed, updated, and removed. It statically analyzes the reverse engineered source code of each individual app, and extracts relevant security specifications in a format suitable for formal verification. Given a collection of specifications extracted in this way, a formal analysis engine (e.g., model checker) is then used to verify whether it is safe for a combination of applications-holding certain permissions and potentially interacting with each other-to be installed together. Our experience with using COVERT to examine over 500 real-world apps corroborates its ability to find inter-app vulnerabilities in bundles of some of the most popular apps on the market.
C1 [Bagheri, Hamid; Sadeghi, Alireza; Garcia, Joshua; Malek, Sam] George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
   [Bagheri, Hamid] MIT, Comp Sci & Artificial Intelligence Lab, Cambridge, MA 02139 USA.
C3 George Mason University; Massachusetts Institute of Technology (MIT)
RP Bagheri, H (corresponding author), George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
EM hbagheri@mit.edu; asadeghi@gmu.edu; jgarci40@gmu.edu; smalek@gmu.edu
RI Bagheri, Hamid Reza/GQR-0486-2022; Garcia, Joshua/AAO-4575-2021
OI Garcia, Joshua/0000-0002-1696-8783; /0000-0001-6686-466X
FU US Defense Advanced Research Projects Agency [D11AP00282]; US National
   Security Agency [H98230-14-C-0140]; US Department of Homeland Security
   [HSHQDC-14-C-B0040]; US National Science Foundation [CCF-1252644];
   Direct For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [1550206] Funding Source: National Science
   Foundation
FX This work was supported in part by awards D11AP00282 from the US Defense
   Advanced Research Projects Agency, H98230-14-C-0140 from the US National
   Security Agency, HSHQDC-14-C-B0040 from the US Department of Homeland
   Security, and CCF-1252644 from the US National Science Foundation. Hamid
   Bagheri is the corresponding author.
CR [Anonymous], 2015, PROTECTING YOUR PRIV
   [Anonymous], 2009, Ph. D. Dissertation
   [Anonymous], 2014, GOOGLE PLAY MARKET
   [Anonymous], 2014, ANDROID API REFERENC
   [Anonymous], 2015, GMUCSTR20155
   [Anonymous], 2012, NDSS
   [Anonymous], 2014, ANDROID DEV GUIDE
   [Anonymous], 2012, P 19 ANN S NETW DIST
   [Anonymous], 2012, P 27 ANN ACM S APPL
   [Anonymous], 2006, COMPILERS PRINCIPLES
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Au Kathy Wain Yee, 2012, P 2012 ACM C COMP CO, P217
   Bagheri H., 2012, P 24 INT C SOFT ENG, P688
   Bagheri H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P106, DOI 10.1145/2568225.2568291
   Bagheri H, 2010, LECT NOTES COMPUT SC, V6395, P376
   Bagheri Hamid, 2010, ASE 2010, P159, DOI [10.1145/1858996.1859026, DOI 10.1145/1858996.1859026]
   Barrera D, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P73, DOI 10.1145/1866307.1866317
   Bartkowiak A, 2012, FED CONF COMPUT SCI, P27
   Bugiel S., 2012, NDSS S SAN DIEG CA U
   Chaudhuri Avik., 2009, Proceedings of the ACM SIGPLAN Fourth Workshop on Programming Languages and Analysis for Security, PLAS '09, P1, DOI [DOI 10.1145/1554339.1554341, 10.1145/1667209.1667211]
   Chen C., P ACM SIGSOFT 1 ALL, P38
   Chin E., 2011, P 9 INT C MOB SYST A, P239, DOI DOI 10.1145/1999995.2000018
   Davi L, 2011, LECT NOTES COMPUT SC, V6531, P346
   Dietz M., 2011, P 20 USENIX SEUR S
   Enck W, 2011, P 20 USENIX C SEC SE, P2
   Enck W., 2011, P 9 USENIX C OP SYST
   Enck W, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P235
   Felt AP, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P627
   Felt Adrienne Porter, 2011, USENIX SEC S
   Fragkaki E., 2012, P ESORICS
   Fuchs Adam P., 2009, Technical Report CS-TR-4991
   Garcia Joshua., 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, ESEC/FSE 2013, P367, DOI DOI 10.1145/2491411.2491462
   Gibler C., 2012, P 5 INT C TRUST TRUS, V7344, P291, DOI DOI 10.1007/978-3-642-30921-2
   Grace  M., 2012, P 10 INT C MOB SYST, P281, DOI DOI 10.1145/2307636.2307663
   Holavanalli S, 2013, IEEE INT CONF AUTOM, P652, DOI 10.1109/ASE.2013.6693128
   Hornyack P, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P639
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson D., 2000, Software Engineering Notes, V25, P14, DOI 10.1145/347636.383378
   Khalek Shadi Abdul, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P238, DOI 10.1109/ASE.2008.34
   Khurshid S, 2002, ACM SIGPLAN NOTICES, V37, P231, DOI 10.1145/583854.582441
   Kim JS, 2010, J SYST SOFTWARE, V83, P1216, DOI 10.1016/j.jss.2010.01.049
   KLIEBER W., 2014, Proceedings of the 3rd ACM SIGPLAN International Workshop on the State of the Art in Java Program Analysis, P1
   Lu Long, 2012, P 2012 ACM C COMP CO, P229, DOI DOI 10.1145/2382196.2382223
   Martin M, 2005, ACM SIGPLAN NOTICES, V40, P365, DOI 10.1145/1103845.1094840
   Near JP, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P31, DOI 10.1145/1985793.1985799
   Octeau D., 2013, USENIX SECURITY
   Ongtang M, 2009, 25TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, P340, DOI 10.1109/ACSAC.2009.39
   Pandita Rahul, 2013, USENIX SECURITY 13, P527
   Ramananandro T, 2008, FORM ASP COMPUT, V20, P21, DOI 10.1007/s00165-007-0058-z
   Shabtai A, 2010, IEEE SECUR PRIV, V8, P35, DOI 10.1109/MSP.2010.2
   Tripp O, 2013, LECT NOTES COMPUT SC, V7793, P210, DOI 10.1007/978-3-642-37057-1_15
   Vallee-Rai R., 1999, Proceedings of the 1999 Conference of the Centre for Advanced Studies on Collaborative Research, CASCON'99, page, P13
   Vidas T., 2011, P WEB 2 0 SEC PRIV W
   Woodcock J, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592436
   Zave P, 2015, FORM ASP COMPUT, V27, P239, DOI 10.1007/s00165-014-0302-2
   Zhou Yajin., 2013, Proceedings of the 20th Annual Network Distributed System Security Symposium, NDSS'13, Reston, VA, USA
NR 56
TC 84
Z9 100
U1 3
U2 40
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2015
VL 41
IS 9
BP 866
EP 886
DI 10.1109/TSE.2015.2419611
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CR9TT
UT WOS:000361700500002
DA 2024-07-18
ER

PT J
AU Treude, C
   Robillard, MP
   Dagenais, B
AF Treude, Christoph
   Robillard, Martin P.
   Dagenais, Barthelemy
TI Extracting Development Tasks to Navigate Software Documentation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software documentation; development tasks; navigation; auto-complete;
   natural language processing
ID SOURCE CODE; CONTEXT
AB Knowledge management plays a central role in many software development organizations. While much of the important technical knowledge can be captured in documentation, there often exists a gap between the information needs of software developers and the documentation structure. To help developers navigate documentation, we developed a technique for automatically extracting tasks from software documentation by conceptualizing tasks as specific programming actions that have been described in the documentation. More than 70 percent of the tasks we extracted from the documentation of two projects were judged meaningful by at least one of two developers. We present TaskNavigator, a user interface for search queries that suggests tasks extracted with our technique in an auto-complete list along with concepts, code elements, and section headers. We conducted a field study in which six professional developers used TaskNavigator for two weeks as part of their ongoing work. We found search results identified through extracted tasks to be more helpful to developers than those found through concepts, code elements, and section headers. The results indicate that task descriptions can be effectively extracted from software documentation, and that they help bridge the gap between documentation structure and the information needs of software developers.
C1 [Treude, Christoph] Univ Fed Rio Grande do Norte, Dept Informat & Matemat Aplicada, BR-59072970 Natal, RN, Brazil.
   [Robillard, Martin P.] McGill Univ, Sch Comp Sci, Montreal, PQ, Canada.
   [Dagenais, Barthelemy] Resulto, Montreal, PQ, Canada.
C3 Universidade Federal do Rio Grande do Norte; McGill University
RP Treude, C (corresponding author), Univ Fed Rio Grande do Norte, Dept Informat & Matemat Aplicada, BR-59072970 Natal, RN, Brazil.
EM ctreude@dimap.ufrn.br; martin@cs.mcgill.ca; bart@resulto.ca
RI Treude, Christoph/AAZ-6257-2021
OI Treude, Christoph/0000-0002-6919-2149
FU NSERC
FX The authors would like to thank the study participants and Martin
   Paquette, formerly at Technologies Xprima.com and now at Resulto, for
   his valuable support. This project was supported by NSERC. Christoph
   Treude is the corresponding author of the article.
CR Abebe Surafel Lemma, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P156, DOI 10.1109/ICPC.2010.29
   [Anonymous], 2008, COLING WORKSH CROSS
   [Anonymous], 2007, P 22 IEEE ACM INT C
   Antoniol G, 2005, PROC IEEE INT CONF S, P357
   Bacchelli A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P476, DOI 10.1109/ASE.2011.6100103
   Bacchelli A, 2012, PROC INT CONF SOFTW, P375, DOI 10.1109/ICSE.2012.6227177
   Bajracharya S., 2006, COMP 21 ACM SIGPLAN, P681, DOI DOI 10.1145/1176617.1176671
   Barouni-Ebrahimi M, 2007, PROCEEDINGS OF THE IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE, P317, DOI 10.1109/WI.2007.78
   Bettenburg N, 2011, CONF PROC INT SYMP C, P185, DOI 10.1109/ICPC.2011.36
   Bhatia S, 2011, PROCEEDINGS OF THE 34TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR'11), P795
   Bhogal J, 2007, INFORM PROCESS MANAG, V43, P866, DOI 10.1016/j.ipm.2006.09.003
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Cleary B, 2009, EMPIR SOFTW ENG, V14, P93, DOI 10.1007/s10664-008-9095-3
   Csomai A., 2008, Proceedings of ACL, P932
   Csomai A., 2007, FLAIRS Conference, P211
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   Dagenais B., 2010, P 18 INT S FDN SOFTW, P127
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Falleri J.-R, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P4, DOI 10.1109/ICPC.2010.12
   Gay G, 2009, PROC IEEE INT CONF S, P351, DOI 10.1109/ICSM.2009.5306315
   Gimpel Kevin, 2011, P ACL, V2, P42
   Gupta S, 2013, CONF PROC INT SYMP C, P3, DOI 10.1109/ICPC.2013.6613828
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Henss S, 2012, PROC INT CONF SOFTW, P793, DOI 10.1109/ICSE.2012.6227139
   Hill E, 2009, PROC INT CONF SOFTW, P232, DOI 10.1109/ICSE.2009.5070524
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   Howard MJ, 2013, IEEE WORK CONF MIN S, P377, DOI 10.1109/MSR.2013.6624052
   Jinqiu Yang, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P161, DOI 10.1109/MSR.2012.6224276
   Justeson, 1995, NAT LANG ENG, V1, P9, DOI [DOI 10.1017/S1351324900000048, 10.1017/S1351324900000048]
   Kalia A., 2013, HPL20134
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   Manning C.D., 1999, FDN STAT NATURAL LAN
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Mika P, 2009, LECT NOTES COMPUT SC, V5823, P441, DOI 10.1007/978-3-642-04930-9_28
   MIZOGUCHI R, 1995, TOWARDS VERY LARGE KNOWLEDGE BASES, P46
   Movshovitz-Attias Dana, 2013, ACL
   Murphy GC, 2005, LECT NOTES COMPUT SC, V3586, P33
   Panichella Sebastiano, 2012, 2012 IEEE 20th International Conference on Program Comprehension, P63
   Pearson K, 1900, PHILOS MAG, V50, P157, DOI 10.1080/14786440009463897
   Petrenko M, 2008, INT C PROGRAM COMPRE, P13, DOI 10.1109/ICPC.2008.14
   Poshyvanyk D, 2007, INT C PROGRAM COMPRE, P37
   Poshyvanyk D, 2006, INT C PROGRAM COMPRE, P137, DOI 10.1109/ICPC.2006.17
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Robillard MP, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/13487689.13487691
   Scerri S, 2010, LREC 2010 - SEVENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION, P3324
   Shepherd D, 2012, P ACM SIGSOFT 20 INT
   Shepherd David, 2007, P 6 INT C ASP OR SOF, P212
   Sisman B, 2013, IEEE WORK CONF MIN S, P309, DOI 10.1109/MSR.2013.6624044
   Sridhara G, 2008, INT C PROGRAM COMPRE, P123, DOI 10.1109/ICPC.2008.18
   Thimthong T., 2012, 2012 IEEE Symposium on Humanities, Science and Engineering Research (SHUSER), P1165, DOI 10.1109/SHUSER.2012.6268796
   Thummalapenta S., 2011, RI11014 IBM RES DIV
   Tian Y, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P44, DOI 10.1109/CSMR-WCRE.2014.6747213
   Treude C., 2011, Proceedings of the 19th Symposium and the 13th European Conference on Foundations of Software Engineering, ESEC/FSE '11, P91
   Treude C, 2012, IEEE T SOFTWARE ENG, V38, P19, DOI 10.1109/TSE.2010.91
   Tyler S.K., 2010, P 3 ACM INT C WEB SE, P191, DOI DOI 10.1145/1718487.1718512
   WILDE N, 1995, J SOFTW MAINT-RES PR, V7, P49, DOI 10.1002/smr.4360070105
   Zhong H, 2009, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2009.94
NR 59
TC 53
Z9 62
U1 1
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2015
VL 41
IS 6
BP 565
EP 581
DI 10.1109/TSE.2014.2387172
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CK3ZL
UT WOS:000356155700003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Burgueño, L
   Troya, J
   Wimmer, M
   Vallecillo, A
AF Burgueno, Loli
   Troya, Javier
   Wimmer, Manuel
   Vallecillo, Antonio
TI Static Fault Localization in Model Transformations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Model transformation; transformation testing; model alignment
ID VERIFICATION
AB As the complexity of model transformations grows, there is an increasing need to count on methods, mechanisms, and tools for checking their correctness, i.e., the alignment between specifications and implementations. In this paper we present a light-weight and static approach for locating the faulty rules in model transformations, based on matching functions that automatically establish these alignments using the metamodel footprints, i.e., the metamodel elements used. The approach is implemented for the combination of Tracts and ATL, both residing in the Eclipse Modeling Framework, and is supported by the corresponding toolkit. An evaluation discussing the accuracy and the limitations of the approach is also provided. Furthermore, we identify the kinds of transformations which are most suitable for validation with the proposed approach and use mutation techniques to evaluate its effectiveness.
C1 [Burgueno, Loli; Vallecillo, Antonio] Univ Malaga, Dept Lenguajes & Ciencias Comp, E-29071 Malaga, Spain.
   [Troya, Javier; Wimmer, Manuel] Vienna Univ Technol, Business Informat Grp, A-1040 Vienna, Austria.
C3 Universidad de Malaga; Technische Universitat Wien
RP Burgueño, L (corresponding author), Univ Malaga, Dept Lenguajes & Ciencias Comp, Bulevar Louis Pasteur 35, E-29071 Malaga, Spain.
EM loli@lcc.uma.es; troya@big.tuwien.ac.at; wimmer@big.tuwien.ac.at;
   av@lcc.uma.es
RI Vallecillo, Antonio/B-1884-2014; Burgueño, Lola/L-3817-2014; Troya,
   Javier/B-6951-2017
OI Vallecillo, Antonio/0000-0002-8139-9986; Burgueño,
   Lola/0000-0002-7779-8810; Troya, Javier/0000-0002-1314-9694
FU Spanish Project [TIN2011-23795]; Austrian Research Promotion Agency
   (FFG) [832160]; EC under ICT Policy Support Programme [317859]
FX This work has been supported by Spanish Project TIN2011-23795, by
   Austrian Research Promotion Agency (FFG) under grant 832160 and by the
   EC under ICT Policy Support Programme (grant no. 317859). Loli Burgueno
   is the corresponding author.
CR Anastasakis K., 2007, ModeVVa'07, P47
   [Anonymous], 1990, 61012 IEEE
   [Anonymous], 2012, J OBJECT TECHNOL
   [Anonymous], 2012, SYNTHESIS LECT SOFTW
   Aranega V, 2009, ICSOFT 2009: PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 1, P66
   Baresi L, 2007, LECT NOTES COMPUT SC, V4661, P183
   Baudry B., 2006, P IMDD MDT
   Baudry B, 2010, COMMUN ACM, V53, P139, DOI 10.1145/1743546.1743583
   Bergmayr Alexander, 2014, P 29 ACM IEEE INT C, P647, DOI DOI 10.1145/2642937.2642946
   Brottier E, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P85
   Burgueno L., 2014, FAULT LOCALIZATION M
   Burgueno L., 2012, P AMT, P27
   Burgy L, 2006, IEEE ICC, P1795
   Cabot J., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1196, DOI 10.1145/1141277.1141562
   Cabot J, 2010, J SYST SOFTWARE, V83, P283, DOI 10.1016/j.jss.2009.08.012
   Cariou E., 2009, ELECT COMMUN EASST, V24, P65
   Cariou Eric., 2004, Workshop of OCL and Model Driven Engineering, V12, P69
   Ciancone A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P97, DOI 10.1109/QUATIC.2010.15
   Clavel M., 2007, All About Maude, A High-Performance Logical Framework, volume 4350 of Lecture Notes in Computer Science, V4350
   Ehrig H, 2005, LECT NOTES COMPUT SC, V3442, P49, DOI 10.1007/978-3-540-31984-9_5
   Ehrig K, 2009, SOFTW SYST MODEL, V8, P479, DOI 10.1007/s10270-008-0095-y
   Galvao I, 2007, IEEE INT ENTERP DIST, P313, DOI 10.1109/EDOC.2007.42
   García-Domínguez A, 2011, LECT NOTES COMPUT SC, V6981, P395, DOI 10.1007/978-3-642-24485-8_29
   Giner P, 2009, LECT NOTES COMPUT SC, V5795, P748, DOI 10.1007/978-3-642-04425-0_61
   Gogolla M., 2005, Software Systems Modeling, V4, P386
   Gogolla M, 2011, LECT NOTES COMPUT SC, V6698, P221, DOI 10.1007/978-3-642-21470-7_16
   Gonzalez Carlos A., 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P449, DOI 10.1007/978-3-642-33666-9_29
   Guerra Esther, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P40, DOI 10.1007/978-3-642-30476-7_3
   Guerra E, 2013, SOFTW SYST MODEL, V12, P555, DOI 10.1007/s10270-011-0211-2
   Guerra E, 2013, AUTOMAT SOFTW ENG, V20, P5, DOI 10.1007/s10515-012-0102-y
   Hibberd M, 2007, LECT NOTES COMPUT SC, V4735, P589
   Jeanneret C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P601, DOI 10.1145/1985793.1985875
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kessentini M, 2011, AUTOMAT SOFTW ENG, V18, P199, DOI 10.1007/s10515-010-0079-3
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kurtev I, 2008, LECT NOTES COMPUT SC, V5063, P199, DOI 10.1007/978-3-540-69927-9_14
   Kuster J. M., 2006, Models in Software Engineering. Workshops and Symposia at MoDELS 2006. Reports and Revised Selected Papers (Lecture Notes in Computer Science Vol.4364), P193
   Kuster J.M., 2006, Software and Systems Modeling, V5, P233, DOI [10.1007/s10270-006-0018-8, DOI 10.1007/S10270-006-0018-8]
   Latry F., 2006, ECOOP WORKSH DOM SPE
   LEE AS, 1989, MIS QUART, V13, P33, DOI 10.2307/248698
   Lennox J., 2004, CALL PROCESSING LANG
   Lin YH, 2005, MODEL-DRIVEN SOFTWARE DEVELOPMENT, P219, DOI 10.1007/3-540-28554-7_10
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Mottu J-M, 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P291, DOI 10.1109/ISSRE.2012.7
   Mottu JM, 2006, LECT NOTES COMPUT SC, V4066, P376
   OMG, 2011, MET FAC MOF 2 0 QUER
   Pinheiro FAC, 1996, IEEE SOFTWARE, V13, P52, DOI 10.1109/52.506462
   RAMESH B, 1992, IEEE T SOFTWARE ENG, V18, P498, DOI 10.1109/32.142872
   Richters M, 2002, LECT NOTES COMPUT SC, V2263, P42
   Rivera JE, 2009, S VIS LANG HUM CEN C, P51, DOI 10.1109/VLHCC.2009.5295300
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sánchez Cuadrado J, 2006, LECT NOTES COMPUT SC, V4066, P158
   Cuadrado JS, 2014, PROC INT SYMP SOFTW, P34, DOI 10.1109/ISSRE.2014.10
   SEDLMEYER RL, 1983, J SYST SOFTWARE, V3, P301, DOI 10.1016/0164-1212(83)90016-X
   Sen Sagar, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P24, DOI 10.1007/978-3-642-30476-7_2
   Sen S, 2009, LECT NOTES COMPUT SC, V5563, P148, DOI 10.1007/978-3-642-02408-5_11
   Tisi M, 2009, LECT NOTES COMPUT SC, V5562, P18, DOI 10.1007/978-3-642-02674-4_3
   Troya J., 2014, MUTATIONS ATL TRANSF
   Troya J., 2014, FOOTPRINTS EXTRACTIO
   Ujhelyi Zoltan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P1, DOI 10.1109/ICST.2012.80
   Vallecillo Antonio, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P399, DOI 10.1007/978-3-642-30982-3_11
   Varró D, 2004, LECT NOTES COMPUT SC, V3273, P290
   Wimmer M, 2013, LECT NOTES COMPUT SC, V8107, P203, DOI 10.1007/978-3-642-41533-3_13
   Wimmer M, 2009, IEEE INT CONF AUTOM, P3, DOI 10.1109/ASE.2009.99
   Zheng J, 2006, IEEE T SOFTWARE ENG, V32, P240, DOI 10.1109/TSE.2006.38
NR 67
TC 48
Z9 51
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2015
VL 41
IS 5
BP 490
EP 506
DI 10.1109/TSE.2014.2375201
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CI1BN
UT WOS:000354475400004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hierons, RM
AF Hierons, Robert M.
TI Generating Complete Controllable Test Suites for Distributed Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering/software/program verification; software
   engineering/testing and debugging; systems and software; distributed
   testing; test suite generation; checking experiment
ID SYNCHRONIZABLE TEST SEQUENCES; IMPLEMENTATION RELATIONS; CHECKING
   SEQUENCES; SYSTEMS; CHANNELS
AB A test suite is m-complete for finite state machine (FSM) M if it distinguishes betweenM and all faulty FSMs with m states or fewer. While there are several algorithms that generate m-complete test suites, they cannot be directly used in distributed testing since there can be additional controllability and observability problems. Indeed, previous results show that there is no general method for generating an m-complete test suite for distributed testing and so the focus has been on conditions under which this is possible. This paper takes a different approach, which is to generate what we call c(m)-complete test suites: controllable test suites that distinguish an FSM N with no more than m states fromM if this is possible in controllable testing. Thus, under the hypothesis that the system under test has no more than m states, a c(m)-complete test suite achieves as much as is possible given the restriction that testing should be controllable. We show how the problem of generating a c(m)-complete test suite can be mapped to the problem of generating an m-complete test suite for a partial FSM. Thus, standard test suite generation methods can be adapted for use in distributed testing.
C1 Brunel Univ, Dept Comp, Uxbridge UB8 3PH, Middx, England.
C3 Brunel University
RP Hierons, RM (corresponding author), Brunel Univ, Dept Comp, Uxbridge UB8 3PH, Middx, England.
EM rob.hierons@brunel.ac.uk
OI Hierons, Robert/0000-0002-4771-1446
CR Alur R, 2005, THEOR COMPUT SCI, V331, P97, DOI 10.1016/j.tcs.2004.09.034
   Alur R., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P304, DOI 10.1109/ICSE.2000.870421
   [Anonymous], PROTOCOL TEST SYSTEM
   [Anonymous], 1971, Theory of Machines and Computations, DOI DOI 10.1016/B978-0-12-417750-5.50022-1
   [Anonymous], 1964, 5 ANN S SWITCH CIRC, DOI DOI 10.1109/SWCT.1964.8
   Bochmann GV, 2008, LECT NOTES COMPUT SC, V5047, P169, DOI 10.1007/978-3-540-68524-1_13
   BOYD S, 1991, INFORM PROCESS LETT, V40, P131, DOI 10.1016/0020-0190(91)90166-F
   Brinksma E, 1998, TESTING OF COMMUNICATING SYSTEMS, P67
   Brinksma Ed., 1988, PROTOCOL SPECIFICATI, VVIII, P63
   CHEN WH, 1995, IEEE ACM T NETWORK, V3, P152, DOI 10.1109/90.374116
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   de Almeida EC, 2010, LECT NOTES COMPUT SC, V6435, P174, DOI 10.1007/978-3-642-16573-3_13
   Dssouli R., 1986, 6 WG6 1 INT C PROT S, P217
   Dssouli R, 1985, 5 WG6 1 INT C PROT S, P483
   Duale AY, 2004, IEEE T COMPUT, V53, P614, DOI 10.1109/TC.2004.1275300
   EVTUSHENKO NV, 1991, AVTOM VYCHISL TEKH+, P81
   Gang Luo, 1993, IFIP Transactions C (Communication Systems), VC-19, P139
   Gaston Christophe, 2013, Testing Software and Systems. 25th IFIP WG 6.1 International Conference, ICTSS 2013. Proceedings: LNCS 8254, P82, DOI 10.1007/978-3-642-41707-8_6
   Gill A., 1962, Introduction to the Theory of Finite-State Machines
   Grieskamp W, 2011, SOFTW TEST VERIF REL, V21, P55, DOI 10.1002/stvr.427
   Haar S, 2007, LECT NOTES COMPUT SC, V4581, P171
   Hierons RM, 2008, DISTRIB COMPUT, V21, P223, DOI 10.1007/s00446-008-0062-4
   Hierons RM, 2008, COMPUT J, V51, P497, DOI 10.1093/comjnl/bxm096
   Hierons RM, 2009, COMPUT NETW, V53, P680, DOI 10.1016/j.comnet.2008.11.003
   Hierons RM, 2004, IEEE T COMPUT, V53, P1330, DOI 10.1109/TC.2004.85
   Hierons RM, 2003, INFORM SOFTWARE TECH, V45, P793, DOI 10.1016/S0950-5849(03)00060-0
   Hierons RM, 2001, INFORM SOFTWARE TECH, V43, P551, DOI 10.1016/S0950-5849(01)00169-0
   Hierons RM, 2013, IEEE T COMPUT, V62, P1673, DOI 10.1109/TC.2012.252
   Hierons RM, 2012, DISTRIB COMPUT, V25, P35, DOI 10.1007/s00446-011-0149-1
   Hierons RM, 2010, SIAM J COMPUT, V39, P3480, DOI 10.1137/090771296
   Hierons RM, 2010, THEOR COMPUT SCI, V411, P566, DOI 10.1016/j.tcs.2009.09.039
   ISO/IEC, 1995, INF TECHN OP SYST 1
   Jourdan GV, 2006, LECT NOTES COMPUT SC, V4229, P451
   Karp R, 1972, COMPLEXITY COMPUTER, V40, P85, DOI 10.1007/978-3-540-68279-08
   Khoumsi A, 2002, IEEE T SOFTWARE ENG, V28, P1085, DOI 10.1109/TSE.2002.1049406
   Moore E.F., 1956, AUTOMATA STUDIES
   PETRENKO A, 1994, IFIP TRANS C, V19, P363
   Petrenko A, 2005, IEEE T COMPUT, V54, P1154, DOI 10.1109/TC.2005.152
   Petrenko A., 1996, Testing of Communicating Systems. IFIP TC6 9th International Workshop on Testing of Communicating Systems, P125
   Ponce de Leon Hernan, 2013, Testing Software and Systems. 25th IFIP WG 6.1 International Conference, ICTSS 2013. Proceedings: LNCS 8254, P98, DOI 10.1007/978-3-642-41707-8_7
   Pretschner A, 2005, PROC INT CONF SOFTW, P392
   Rafiq O, 2003, J SUPERCOMPUT, V24, P203, DOI 10.1023/A:1021759127956
   SARIKAYA B, 1984, IEEE T COMMUN, V32, P389, DOI 10.1109/TCOM.1984.1096074
   Tai KC, 1998, COMPUT NETWORKS ISDN, V30, P1111, DOI 10.1016/S0169-7552(98)00013-0
   Tretmans J, 1996, COMPUT NETWORKS ISDN, V29, P49, DOI 10.1016/S0169-7552(96)00017-7
   Tretmans Jan, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P1, DOI 10.1007/978-3-540-78917-8_1
   Vasilevskii M.P., 1973, CYBERNETICS, V4, P653
   Wu WJ, 1998, COMPUT COMMUN, V21, P1177, DOI 10.1016/S0140-3664(98)00178-9
   Young YC, 1998, 1998 IEEE WORKSHOP ON APPLICATION-SPECIFIC SOFTWARE ENGINEERING AND TECHNOLOGY (ASSET 98) - PROCEEDINGS, P80, DOI 10.1109/ASSET.1998.688238
NR 49
TC 8
Z9 8
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2015
VL 41
IS 3
BP 279
EP 293
DI 10.1109/TSE.2014.2364035
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CD9ZG
UT WOS:000351460000004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Murphy-Hill, E
   Zimmermann, T
   Bird, C
   Nagappan, N
AF Murphy-Hill, Emerson
   Zimmermann, Thomas
   Bird, Christian
   Nagappan, Nachiappan
TI The Design Space of Bug Fixes and How Developers Navigate It
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Design concepts; human factors in software design; maintainability
ID SOFTWARE; FAULTS
AB When software engineers fix bugs, they may have several options as to how to fix those bugs. Which fix they choose has many implications, both for practitioners and researchers: What is the risk of introducing other bugs during the fix? Is the bug fix in the same code that caused the bug? Is the change fixing the cause or just covering a symptom? In this paper, we investigate alternative fixes to bugs and present an empirical study of how engineers make design choices about how to fix bugs. We start with a motivating case study of the Pex4Fun environment. Then, based on qualitative interviews with 40 engineers working on a variety of products, data from six bug triage meetings, and a survey filled out by 326 Microsoft engineers and 37 developers from other companies, we found a number of factors, many of them non-technical, that influence how bugs are fixed, such as how close to release the software is. We also discuss implications for research and practice, including how to make bug prediction and localization more accurate.
C1 [Murphy-Hill, Emerson] N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27603 USA.
   [Zimmermann, Thomas] Microsoft Res, RiSE Grp, Redmond, WA 98052 USA.
   [Bird, Christian; Nagappan, Nachiappan] Microsoft Res, Empir Software Engn Grp, Redmond, WA 98052 USA.
C3 North Carolina State University; Microsoft; Microsoft
RP Murphy-Hill, E (corresponding author), N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27603 USA.
EM emerson@csc.ncsu.edu; tzimmer@microsoft.com; cbird@microsoft.com;
   nachin@microsoft.com
CR [Anonymous], 2003, Diffusion of Innovations
   [Anonymous], 2007, GUIDE ADV EMPIRICAL
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering (FSE'11), DOI [10.1145/2025113.2025121, DOI 10.1145/2025113.2025121]
   [Anonymous], P ACM IEEE 30 INT C
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Breu S, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P301
   Endres A., 1975, SIGPLAN Notices, V10, P327, DOI 10.1145/390016.808455
   Ferneley EH, 2006, EUR J INFORM SYST, V15, P345, DOI 10.1057/palgrave.ejis.3000629
   FISCHHOFF B, 1975, ORGAN BEHAV HUM PERF, V13, P1, DOI 10.1016/0030-5073(75)90002-1
   Fritz T., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P175
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Joorabchi ME, 2014, P 11 WORK C MIN SOFT, P62, DOI [10.1145/2597073.2597098, DOI 10.1145/2597073.2597098]
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kitchenham B., 2007, GUIDE ADV EMPIRICAL
   Ko A., 2011, iConference, P106
   Leszak M., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P428, DOI 10.1109/ICSE.2000.870433
   Lucia, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P74, DOI 10.1109/MSR.2012.6224302
   MICROSOFT, 2013, SEC DEV LIF
   MICROSOFT, 2012, CHANG EX INT
   Murphy-Hill E., 2013, MSRTR201322
   Murphy-Hill E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P332, DOI 10.1109/ICSE.2013.6606579
   Murphy-Hill E, 2009, PROC INT CONF SOFTW, P287, DOI 10.1109/ICSE.2009.5070529
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Soares G, 2013, IEEE T SOFTWARE ENG, V39, P147, DOI 10.1109/TSE.2012.19
   Spinellis D, 2009, ELECTRON NOTES THEOR, V233, P5, DOI 10.1016/j.entcs.2009.02.058
   STAW BM, 1976, ORGAN BEHAV HUM PERF, V16, P27, DOI 10.1016/0030-5073(76)90005-2
   Tillmann N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1117, DOI 10.1109/ICSE.2013.6606662
   Vakilian M, 2012, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2012.6227190
   Zeller A., 2003, P 5 INT WORKSH AUT A, P327
   Zhongxian Gu, 2011, 2010 32nd International Conference on Software Engineering (ICSE), P55, DOI 10.1145/1806799.1806812
NR 36
TC 42
Z9 46
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2015
VL 41
IS 1
BP 65
EP 81
DI 10.1109/TSE.2014.2357438
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AY8EZ
UT WOS:000347788400005
DA 2024-07-18
ER

PT J
AU Scandariato, R
   Walden, J
   Hovsepyan, A
   Joosen, W
AF Scandariato, Riccardo
   Walden, James
   Hovsepyan, Aram
   Joosen, Wouter
TI Predicting Vulnerable Software Components via Text Mining
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Vulnerabilities; prediction model; machine learning
ID STATIC-ANALYSIS; INDICATORS
AB This paper presents an approach based on machine learning to predict which components of a software application contain security vulnerabilities. The approach is based on text mining the source code of the components. Namely, each component is characterized as a series of terms contained in its source code, with the associated frequencies. These features are used to forecast whether each component is likely to contain vulnerabilities. In an exploratory validation with 20 Android applications, we discovered that a dependable prediction model can be built. Such model could be useful to prioritize the validation activities, e. g., to identify the components needing special scrutiny.
C1 [Scandariato, Riccardo; Hovsepyan, Aram; Joosen, Wouter] Katholieke Univ Leuven, IBBT DistriNet, B-3001 Louvain, Belgium.
   [Walden, James] No Kentucky Univ, Dept Comp Sci, Highland Hts, KY 41099 USA.
C3 KU Leuven; Northern Kentucky University
RP Scandariato, R (corresponding author), Katholieke Univ Leuven, IBBT DistriNet, B-3001 Louvain, Belgium.
EM riccardo.scandariato@cs.kuleuven.be; waldenj1@nku.edu;
   aram.hovsepyan@cs.kuleuven.be; wouter.joosen@cs.kuleuven.be
FU EU FP7 project NESSoS; Interuniversity Attraction Poles Programme
   Belgian State, Belgian Science Policy; Research Fund KU Leuven
FX This research was partially funded by the EU FP7 project NESSoS, the
   Interuniversity Attraction Poles Programme Belgian State, Belgian
   Science Policy, and by the Research Fund KU Leuven.
CR [Anonymous], 2010, P 19 INT S SOFTW TES, DOI [10.1145/1831708.1831723, DOI 10.1145/1831708.1831723]
   [Anonymous], 1995, P 14 INT JOINT C ART
   Austin A, 2011, INT SYMP EMP SOFTWAR, P97, DOI 10.1109/ESEM.2011.18
   Aversano L., 2007, IWPSE 07 9 INT WORKS, P19
   Boehm BW., 1981, Software Engineering Economics
   Bosu A., 2013, P INT C SOFTW SEC RE, P229
   Bozorgi M., 2010, Proceedings of of 16th International Conference of on Knowledge discovery and data mining, P105
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Chowdhury I, 2011, J SYST ARCHITECT, V57, P294, DOI 10.1016/j.sysarc.2010.06.003
   Domingos P, 2012, COMMUN ACM, V55, P78, DOI 10.1145/2347736.2347755
   Edwards Nigel, 2012, P 2012 ACM C COMP CO, P183, DOI DOI 10.1145/2382196.2382218
   Gegick Michael, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P11, DOI 10.1109/MSR.2010.5463340
   Gegick M, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P181, DOI 10.1109/ICST.2009.36
   Gegick M, 2009, LECT NOTES COMPUT SC, V5429, P135
   Gegick Michael., 2008, QOP 08, P31, DOI DOI 10.1145/1456362.1456370
   Hata H, 2010, EMPIR SOFTW ENG, V15, P147, DOI 10.1007/s10664-009-9117-9
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Martin B., 2013, P BLACKHAT US
   Massacci F., 2010, P 6 INT WORKSHOP SEC, P1, DOI [10.1145/1853919.1853925, DOI 10.1145/1853919.1853925]
   Microsoft, 2014, MICR SEC DEV LIF SDL
   Mizuno O., 2007, P 4 INT WORKSH MIN S, P4
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Nguyen V. H., 2010, P INT WORKSH SEC MEA, P3
   Scandariato R., 2014, EXPT MAT
   Shin Y., 2008, WORKSHOP QUALITY PRO, P47
   Shin Y, 2013, EMPIR SOFTW ENG, V18, P25, DOI 10.1007/s10664-011-9190-8
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Shin Y, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P315
   Slaughter SA, 1998, COMMUN ACM, V41, P67, DOI 10.1145/280324.280335
   Smith B., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P220, DOI 10.1109/ICST.2011.15
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   W3Techs, 2014, US CONT MAN SYST WEB
   Walden J, 2012, IEEE SECUR PRIV, V10, P32, DOI 10.1109/MSP.2012.1
   Wallace D., 1989, NIST SPECIAL PUBLICA, V500-165
   Wolpert DH, 1996, NEURAL COMPUT, V8, P1341, DOI 10.1162/neco.1996.8.7.1341
   Yamaguchi F., 2011, P 5 USENIX C OFFENSI, P13
   Zeller Andreas, 2011, P 7 INT C PRED MOD S, P1
   Zheng J, 2006, IEEE T SOFTWARE ENG, V32, P240, DOI 10.1109/TSE.2006.38
   Zimmermann Thomas, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P421, DOI 10.1109/ICST.2010.32
NR 40
TC 200
Z9 246
U1 0
U2 34
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2014
VL 40
IS 10
BP 993
EP 1006
DI 10.1109/TSE.2014.2340398
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AR9ML
UT WOS:000343899100004
OA Green Published
DA 2024-07-18
ER

PT J
AU Rodríguez, I
   Llana, L
   Rabanal, P
AF Rodriguez, Ismael
   Llana, Luis
   Rabanal, Pablo
TI A General Testability Theory: Classes, Properties, Complexity, and
   Testing Reductions
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Formal testing techniques; general testing frameworks
ID IMPLEMENTATION RELATIONS; SYSTEMS; HYPOTHESES; CRITERIA
AB In this paper we develop a general framework to reason about testing. The difficulty of testing is assessed in terms of the amount of tests that must be applied to determine whether the system is correct or not. Based on this criterion, five testability classes are presented and related. We also explore conditions that enable and disable finite testability, and their relation to testing hypotheses is studied. We measure how far incomplete test suites are from being complete, which allows us to compare and select better incomplete test suites. The complexity of finding that measure, as well as the complexity of finding minimum complete test suites, is identified. Furthermore, we address the reduction of testing problems to each other, that is, we study how the problem of finding test suites to test systems of some kind can be reduced to the problem of finding test suites for another kind of systems. This enables to export testing methods. In order to illustrate how general notions are applied to specific cases, many typical examples from the formal testing techniques domain are presented.
C1 [Rodriguez, Ismael; Llana, Luis; Rabanal, Pablo] Univ Complutense Madrid, Dept Sistemas Informat & Comp, E-28040 Madrid, Spain.
C3 Complutense University of Madrid
RP Rodríguez, I (corresponding author), Univ Complutense Madrid, Dept Sistemas Informat & Comp, E-28040 Madrid, Spain.
EM isrodrig@sip.ucm.es; llana@sip.ucm.es; prabanal@fdi.ucm.es
RI Rodriguez, Ismael/C-7812-2019; Rodriguez, Ismael/H-4657-2015
OI Rabanal, Pablo/0000-0002-5386-6866; Rodriguez,
   Ismael/0000-0002-7748-7780; LLANA DIAZ, LUIS
   FERNANDO/0000-0003-1962-1504
FU [TIN2009-14312-C02-01];  [TIN2012-39391-C04-04];  [TIN2012-36812-C02-01]
FX The authors thank Fernando Rubio, Alberto de la Encina, Carlos Molinero,
   and Manuel Nunez for their suggestions, Diego Rodriguez for his support,
   and the anonymous reviewers of this paper as well as those of CONCUR'09
   for their interesting comments. This work is a revised and extended
   version of CONCUR'09 paper [28]. It was supported by projects
   TIN2009-14312-C02-01, TIN2012-39391-C04-04, and TIN2012-36812-C02-01.
CR Angluin D., 1992, Proceedings of the Twenty-Fourth Annual ACM Symposium on the Theory of Computing, P351, DOI 10.1145/129712.129746
   BERNOT G, 1991, SOFTWARE ENG J, V6, P387, DOI 10.1049/sej.1991.0040
   Berrada I, 2006, LECT NOTES COMPUT SC, V3964, P289
   Bondy J. A., 1976, GRAPH THEORY APPL, V290
   Brinksma Ed., 2001, MODELING VERIFICATIO, V2067, P187
   Cheon Y, 2002, LECT NOTES COMPUT SC, V2374, P231
   Cherniavsky J., 1998, P 2 WORKSH SOFTW TES, P38
   CHERNIAVSKY JC, 1987, IEEE T SOFTWARE ENG, V13, P777, DOI 10.1109/TSE.1987.233489
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   DAVIS M, 1988, COMPUT J, V31, P17, DOI 10.1093/comjnl/31.1.17
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Do H, 2006, EMPIR SOFTW ENG, V11, P33, DOI 10.1007/s10664-006-5965-8
   Dorofeeva R, 2010, INFORM SOFTWARE TECH, V52, P1286, DOI 10.1016/j.infsof.2010.07.001
   Gaston C, 2006, LECT NOTES COMPUT SC, V3964, P1
   Gaudel MC, 1995, LECT NOTES COMPUT SC, V915, P82
   GOLD EM, 1967, INFORM CONTROL, V10, P447, DOI 10.1016/S0019-9958(67)91165-5
   Hennessy M., 1988, An algebraic theory of processes
   Hierons RM, 2002, ACM T SOFTW ENG METH, V11, P427, DOI 10.1145/606612.606615
   Hierons RM, 2009, ACM T SOFTW ENG METH, V18, DOI 10.1145/1538942.1538944
   Hopcroft J. E., 1973, SIAM Journal on Computing, V2, P225, DOI 10.1137/0202019
   HOWDEN WE, 1982, IEEE T SOFTWARE ENG, V8, P371, DOI 10.1109/TSE.1982.235571
   Krichen M, 2004, LECT NOTES COMPUT SC, V2989, P109
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   López N, 2006, THEOR COMPUT SCI, V353, P228, DOI 10.1016/j.tcs.2005.10.047
   Meinke K, 2006, LECT NOTES COMPUT SC, V4060, P578, DOI 10.1007/11780274_30
   Merayo MG, 2008, IEEE T COMPUT, V57, P835, DOI 10.1109/TC.2008.15
   Petrenko A., 2001, Modeling and verification of parallel processes, P196
   Rodríguez I, 2008, J LOGIC ALGEBR PROGR, V74, P57, DOI 10.1016/j.jlap.2007.03.002
   Rodríguez I, 2009, LECT NOTES COMPUT SC, V5710, P572, DOI 10.1007/978-3-642-04081-8_38
   Romanik K, 1996, INFORM COMPUT, V128, P87, DOI 10.1006/inco.1996.0065
   Springintveld J, 2001, THEOR COMPUT SCI, V254, P225, DOI 10.1016/S0304-3975(99)00134-6
   Stoelinga M, 2003, LECT NOTES COMPUT SC, V2719, P464
   Tretmans J, 1996, COMPUT NETWORKS ISDN, V29, P49, DOI 10.1016/S0169-7552(96)00017-7
   Tretmans J, 1999, LECT NOTES COMPUT SC, V1664, P46
   Zhu H, 2002, INFORM SOFTWARE TECH, V44, P473, DOI 10.1016/S0950-5849(02)00048-4
NR 35
TC 15
Z9 16
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2014
VL 40
IS 9
BP 862
EP 894
DI 10.1109/TSE.2014.2331690
PG 33
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AR9MI
UT WOS:000343898600002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Collingbourne, P
   Cadar, C
   Kelly, PHJ
AF Collingbourne, Peter
   Cadar, Cristian
   Kelly, Paul H. J.
TI Symbolic Crosschecking of Data-Parallel Floating-Point Code
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Data-parallel code; floating point; symbolic execution; SIMD; OpenCL;
   KLEE-CL
ID EXECUTION
AB We present a symbolic execution-based technique for cross-checking programs accelerated using SIMD or OpenCL against an unaccelerated version, as well as a technique for detecting data races in OpenCL programs. Our techniques are implemented in KLEE-CL, a tool based on the symbolic execution engine KLEE that supports symbolic reasoning on the equivalence between expressions involving both integer and floating-point operations. While the current generation of constraint solvers provide effective support for integer arithmetic, the situation is different for floating-point arithmetic, due to the complexity inherent in such computations. The key insight behind our approach is that floating-point values are only reliably equal if they are essentially built by the same operations. This allows us to use an algorithm based on symbolic expression matching augmented with canonicalisation rules to determine path equivalence. Under symbolic execution, we have to verify equivalence along every feasible control-flow path. We reduce the branching factor of this process by aggressively merging conditionals, if-converting branches into select operations via an aggressive phi-node folding transformation. To support the Intel Streaming SIMD Extension (SSE) instruction set, we lower SSE instructions to equivalent generic vector operations, which in turn are interpreted in terms of primitive integer and floating-point operations. To support OpenCL programs, we symbolically model the OpenCL environment using an OpenCL runtime library targeted to symbolic execution. We detect data races by keeping track of all memory accesses using a memory log, and reporting a race whenever we detect that two accesses conflict. By representing the memory log symbolically, we are also able to detect races associated with symbolically-indexed accesses of memory objects. We used KLEE-CL to prove the bounded equivalence between scalar and data-parallel versions of floating-point programs and find a number of issues in a variety of open source projects that use SSE and OpenCL, including mismatches between implementations, memory errors, race conditions and a compiler bug.
C1 [Collingbourne, Peter] Google Inc, Mountain View, CA 94043 USA.
   [Cadar, Cristian; Kelly, Paul H. J.] Univ London Imperial Coll Sci Technol & Med, Dept Comp, London SW7 2AZ, England.
C3 Google Incorporated; Imperial College London
RP Collingbourne, P (corresponding author), Google Inc, Mountain View, CA 94043 USA.
EM peter@pcc.me.uk; c.cadar@imperial.ac.uk; p.kelly@imperial.ac.uk
FU UK EPSRC [EP/I012036/1, EP/I006761/1]; EPSRC [EP/I012036/1,
   EP/I006761/1, EP/I00677X/1] Funding Source: UKRI
FX The authors would like to thank Alastair Donaldson, Dan Liew, Hristina
   Palikareva, the TSE editor Wolfram Schulte and the anonymous reviewers
   for their valuable feedback on their research and the paper. This work
   has been supported in part by the UK EPSRC through grants EP/I012036/1
   and EP/I006761/1. This paper is partly based on a paper published in the
   Proceedings of the European Conference on Computer Systems (EuroSys
   2011) [16] and on a paper published in the Proceedings of the Haifa
   Verification Conference (HVC 2011) [15].
CR Aharoni M., 2003, P 8 IEEE INT HIGH LE
   Aiken A., 1998, Conference Record of POPL '98: 25th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P342, DOI 10.1145/268946.268974
   [Anonymous], P 15 ACM S PRINC PRO
   [Anonymous], P C PROGR LANG DES I
   [Anonymous], 2010, NVIDIA CUDA Programming Guide
   [Anonymous], 1999, 98991999 ISOIEC
   [Anonymous], 2012, LANGUAGE FAMILY FRON
   [Anonymous], 2010, INT 64 IA 32 ARCH A
   [Anonymous], 2010, OPENCL SPEC VERS 1 1
   [Anonymous], 1959, LMSD285875
   [Anonymous], P 34 ACM S PRINC PRO
   [Anonymous], 2008, 7542008 IEEE, P1, DOI DOI 10.1109/IEEESTD.2008.4610935
   [Anonymous], P 6 C COMP SYST EURO
   [Anonymous], P 19 INT C COMP AID
   [Anonymous], 2010, INT 64 IA 32 ARCH B
   [Anonymous], 2004, P INT S COD GEN OPT
   Betts A., 2012, P 27 ANN C OBJ OR PR
   Boldo S., 2007, P 18 IEEE S COMP AR
   Boonstoppel P., 2008, P INT C TOOLS ALG CO
   Botella B, 2006, SOFTW TEST VERIF REL, V16, P97, DOI 10.1002/stvr.333
   Bradski G., 2008, LEARNING OPENCV
   Cadar C., 2008, KLEE: Unassisted and Automatic Generation of High-Coverage Tests for Complex Systems Programs
   Chuang W., 2003, P INT S COD GEN OPT
   Clarke E., 2003, P 8 AS S PAC DES AUT
   Collingbourne P., 2011, P 6 C COMP SYST EURO
   Collingbourne Peter, 2011, P HAIF VER C HVC 11
   Coumans E., 2012, BULLET CONTINUOUS CO
   Currie D, 2006, INT J PARALLEL PROG, V34, P61, DOI 10.1007/s10766-005-0004-8
   Eichenberger A. E., 2004, P C PROGR LANG DES I
   FLANAGAN C, 2009, P C PROGR LANG DES I
   Giles M. B., 2011, Performance Evaluation Review, V38, P9, DOI 10.1145/1964218.1964221
   Grewe Dominik, 2011, P 20 INT C COMP CONS
   Harrison J, 2007, J UNIVERS COMPUT SCI, V13, P629
   Holzbaur C., 1995, TECHNICAL REPORT
   IMPACT Research Group UIUC, 2012, PARB BENCHM SUIT
   Intel and Willow Garage, 2012, OPENCV 2 1 0 OP SOUR
   King J.C., 1975, P INT C REL SOFTW IC
   Kroening D., 2012, CBMC SUBVERSION REPO
   Larsen Samuel, 2000, P ACM SIGPLAN C PROG
   Li G., 2012, P 17 ACM S PRINC PRA
   Li G., 2010, P ACM S FDN SOFTW EN
   Majumdar R., 2009, P 21 INT C COMP AID
   MICHEL C., 2002, 7 INT S ARTIFICIAL I
   Naishlos D., 2003, P INT C COMP ARCH SY
   Necula G.C., 2000, P ACM SIGPLAN C PROG
   OCallahan R., 2003, P 9 ACM S PRINC PRAC
   SAVAGE S, 1997, P 16 ACM S OP SYST P
   Siegel S.F., 2006, P INT S SOFTW TEST A
   Smith E.W., 2008, P 2 FORM METH COMP A
   Talla D, 2000, PR IEEE COMP DESIGN, P163, DOI 10.1109/ICCD.2000.878283
   Tripakis Stavros, 2010, P 2 USENIX WORKSH HO
   Weimer Westley, 2008, WORKSH SOFTW TOOLS M
   Zheng M., 2011, P 16 ACM S PRINC PRA
   [No title captured]
NR 54
TC 12
Z9 12
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2014
VL 40
IS 7
BP 710
EP 737
DI 10.1109/TSE.2013.2297120
PG 28
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AM9HF
UT WOS:000340191000005
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Kim, M
   Zimmermann, T
   Nagappan, N
AF Kim, Miryung
   Zimmermann, Thomas
   Nagappan, Nachiappan
TI An Empirical Study of RefactoringChallenges and Benefits at Microsoft
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Refactoring; empirical study; software evolution; component
   dependencies; defects; churn
AB It is widely believed that refactoring improves software quality and developer productivity. However, few empirical studies quantitatively assess refactoring benefits or investigate developers' perception towards these benefits. This paper presents a field study of refactoring benefits and challenges at Microsoft through three complementary study methods: a survey, semi-structured interviews with professional software engineers, and quantitative analysis of version history data. Our survey finds that the refactoring definition in practice is not confined to a rigorous definition of semantics-preserving code transformations and that developers perceive that refactoring involves substantial cost and risks. We also report on interviews with a designated refactoring team that has led a multiyear, centralized effort on refactoring Windows. The quantitative analysis of Windows 7 version history finds the top 5 percent of preferentially refactored modules experience higher reduction in the number of inter-module dependencies and several complexity measures but increase size more than the bottom 95 percent. This indicates that measuring the impact of refactoring requires multidimensional assessment.
C1 [Kim, Miryung] Univ Texas Austin, Dept Elect & Comp Engn, Austin, TX 78712 USA.
   [Zimmermann, Thomas; Nagappan, Nachiappan] Microsoft Res Redmond, Res Software Engn RiSE Grp, Redmond, WA USA.
C3 University of Texas System; University of Texas Austin; Microsoft
RP Kim, M (corresponding author), Univ Texas Austin, Dept Elect & Comp Engn, Austin, TX 78712 USA.
FU National Science Foundation [CCF-1149391, CCF-1117902, CCF-1043810];
   Microsoft SEIF award
FX The authors thank Galen Hunt, Tom Ball, Chris Bird, Mike Barnett, Rob
   DeLine, and Andy Begel for their insightful comments. Thanks to the
   Microsoft Windows refactoring team for their help in understanding the
   data. Thanks to many managers and developers who volunteered their time
   to participate in our research. Miryung Kim performed a part of this
   work, while working at Microsoft Research. This work was in part
   supported by National Science Foundation under the Grants CCF-1149391,
   CCF-1117902, and CCF-1043810, and by Microsoft SEIF award.
CR [Anonymous], 2005, MSRTR200594
   [Anonymous], 1975, MYTHICAL MAN MONTH E
   [Anonymous], 2007, P 6 JOINT M EUR SOFT
   [Anonymous], 2010, Proceedings of the International Conference on Software Maintenance (ICSM)
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Bailey S., 2003, P 3 INT WORKSH REPL, P1
   Baldwin C.Y., 1999, Design Rules: The Power of Modularity
   Beck K., 2000, EXTREME PROGRAMMING
   BELADY LA, 1976, IBM SYST J, V15, P225, DOI 10.1147/sj.153.0225
   Bird Christian, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P109, DOI 10.1109/ISSRE.2009.17
   Bird C., 2012, P ACM SIGSOFT 20 INT, P1, DOI [10.1145/2393596.2393648, DOI 10.1145/2393596.2393648]
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Brun Y., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), P168, DOI [10.1145/2025113.2025139, DOI 10.1145/2025113.2025139]
   Carriere J., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P149, DOI 10.1145/1810295.1810317
   CONWAY ME, 1968, DATAMATION, V14, P28
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Dalgaard P, 2008, STAT COMPUT SER, P1, DOI 10.1007/978-0-387-79054-1_1
   Dig D, 2005, PROC IEEE INT CONF S, P389
   Dig D, 2006, LECT NOTES COMPUT SC, V4067, P404
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Fowler M., 2000, Refactoring: Improving the Design of Existing Code
   Friedman J., 2001, ELEMENTS STAT LEARNI, V1, DOI DOI 10.1007/978-0-387-84858-7
   Gorg Carsten., 2005, MSR 05, P1, DOI DOI 10.1145/1083142.1083148
   Griswold W. G, 1991, THESIS U WASHINGTON
   Guéhéneuc YG, 2001, TOOLS, V39, P296, DOI 10.1109/TOOLS.2001.941682
   Herbsleb JD, 1999, IEEE SOFTWARE, V16, P63, DOI 10.1109/52.795103
   Izurieta Clemente, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P449
   Johnson R., 2011, MICR FAC SUMM 2011 J
   Kataoka Y, 2002, PROC IEEE INT CONF S, P576, DOI 10.1109/ICSM.2002.1167822
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kim M., 2011, ICSE 11, P151, DOI DOI 10.1145/1985793.1985815
   Kim M., 2012, MSRTR20124
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1, DOI DOI 10.1145/2393596.2393655
   Kolb R, 2006, J SOFTW MAINT EVOL-R, V18, P109, DOI 10.1002/smr.329
   MacCormack A, 2006, MANAGE SCI, V52, P1015, DOI 10.1287/mnsc.1060.0552
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Moser R, 2006, LECT NOTES COMPUT SC, V4039, P287
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Murphy-Chutorian E., 2008, Proc. Computer Vision and Pattern Recognition Workshop, P1
   Murphy-Hill E, 2009, PROC INT CONF SOFTW, P287, DOI 10.1109/ICSE.2009.5070529
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Opdyke W., 1999, REFACTORING REUSE RE
   Ratzinger J., 2008, Proceedings of the 2008 international working conference on Mining software repositories, P35, DOI [10.1145/1370750.1370759, DOI 10.1145/1370750.1370759]
   Roberts D., 1997, Theory and Practice of Object Systems, V3, P253, DOI 10.1002/(SICI)1096-9942(1997)3:4<253::AID-TAPO3>3.0.CO;2-T
   Sullivan K.J., 1999, REAL OPTIONS BUSINES
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   Vakilian M, 2012, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2012.6227190
   Walker R. J., 2012, P ACM SIGSOFT 20 INT
   Weissgerber P, 2006, IEEE INT CONF AUTOM, P231
   Weissgerber Peter., 2006, Proceedings of the 2006 International Workshop on Mining Software Repositories, MSR '06, P112
   Wong S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P411, DOI 10.1145/1985793.1985850
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
   Yuepu Guo, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P528, DOI 10.1109/ICSM.2011.6080824
   Yuepu Guo, 2010, 2010 32nd International Conference on Software Engineering (ICSE), P167, DOI 10.1145/1810295.1810321
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 58
TC 120
Z9 124
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2014
VL 40
IS 7
BP 633
EP 649
DI 10.1109/TSE.2014.2318734
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AM9HF
UT WOS:000340191000001
DA 2024-07-18
ER

PT J
AU Esfahani, N
   Elkhodary, A
   Malek, S
AF Esfahani, Naeem
   Elkhodary, Ahmed
   Malek, Sam
TI A Learning-Based Framework for Engineering Feature-Oriented
   Self-Adaptive Software Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Self-adaptive software; autonomic computing; feature-orientation;
   machine learning
ID MODELS; ADAPTATION; MIDDLEWARE; RUNTIME
AB Self-adaptive software systems are capable of adjusting their behavior at runtime to achieve certain functional or quality-of-service goals. Often a representation that reflects the internal structure of the managed system is used to reason about its characteristics and make the appropriate adaptation decisions. However, runtime conditions can radically change the internal structure in ways that were not accounted for during their design. As a result, unanticipated changes at runtime that violate the assumptions made about the internal structure of the system could degrade the accuracy of the adaptation decisions. We present an approach for engineering self-adaptive software systems that brings about two innovations: 1) a feature-oriented approach for representing engineers' knowledge of adaptation choices that are deemed practical, and 2) an online learning-based approach for assessing and reasoning about adaptation decisions that does not require an explicit representation of the internal structure of the managed software system. Engineers' knowledge, represented in feature-models, adds structure to learning, which in turn makes online learning feasible. We present an empirical evaluation of the framework using a real-world self-adaptive software system. Results demonstrate the framework's ability to accurately learn the changing dynamics of the system while achieving efficient analysis and adaptation.
C1 [Esfahani, Naeem; Elkhodary, Ahmed; Malek, Sam] George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
C3 George Mason University
RP Esfahani, N (corresponding author), George Mason Univ, Dept Comp Sci, 4400 Univ Dr,MS 4A5, Fairfax, VA 22030 USA.
EM nesfaha2@gmu.edu; aelkhoda@gmu.edu; smalek@gmu.edu
FU US Army Research Office [W911NF-09-1-0273]; US Defense Advanced Research
   Projects Agency [D11AP00282]; US National Science Foundation
   [CCF-1252644, CCF-1217503]; Division of Computing and Communication
   Foundations; Direct For Computer & Info Scie & Enginr [1217503, 1252644]
   Funding Source: National Science Foundation
FX This work was supported in part by awards W911NF-09-1-0273 from the US
   Army Research Office, D11AP00282 from the US Defense Advanced Research
   Projects Agency, and CCF-1252644 and CCF-1217503 from the US National
   Science Foundation. The authors would like to thank the anonymous
   reviewers for their constructive feedback, which led to the improvement
   of the paper.
CR Alpaydin E, 2004, INTRO MACHINE LEARNI
   [Anonymous], 2010, P 7 INT C AUT COMP I, DOI DOI 10.1145/1809049.1809084
   [Anonymous], 2009, GME
   [Anonymous], 2010, WEKA
   [Anonymous], 1998, INTEGER PROGRAMMING
   [Anonymous], 2011, QVT FINAL SPECIFICAT
   [Anonymous], 2010, P 18 ACM SIGSOFT INT
   Ardagna D, 2008, LECT NOTES COMPUT SC, V5281, P1, DOI 10.1007/978-3-540-87879-7_1
   Bennani MN, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P62, DOI 10.1109/ICAC.2004.1301348
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Cetina C, 2009, COMPUTER, V42, P37, DOI 10.1109/MC.2009.309
   Chatfield C, 2003, ANAL TIME SERIES INT
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Cheng SW, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P276
   Cooray D., 2010, P IEEE ACM INT C AUT, P83
   Dashofy EM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P266, DOI 10.1109/ICSE.2002.1007974
   de Lemos R., 2011, SOFTWARE ENG SELF AD
   deGrandis P, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P107
   Edwards G, 2007, LECT NOTES COMPUT SC, V4422, P125
   Esfahani N, 2012, INFORM SOFTWARE TECH, V54, P786, DOI 10.1016/j.infsof.2012.02.001
   Esfahani Naeem, 2011, SIGSOFT FSE 11 19 AC, P234, DOI DOI 10.1145/2025113.2025147
   Fleurey F, 2009, LECT NOTES COMPUT SC, V5795, P606, DOI 10.1007/978-3-642-04425-0_47
   FRIEDMAN JH, 1991, ANN STAT, V19, P1, DOI 10.1214/aos/1176347963
   Gambi A., 2010, P INT WORKSH PRINC E, P71
   Giese H, 2006, LECT NOTES COMPUT SC, V4199, P543
   Gomaa H., 2004, Designing Software Product Lines with UML: From Use Cases to PatternBased Software Architectures
   Gross D., 1985, Wiley series in probability and mathematical statistics, V2nd
   Gunestas M., 2009, P IEEE INT C SYST SY, P1
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Inverardi Paola, 2010, P JOINT ERCIM WORKSH, P93
   Kantardzic M., 2002, DATA MINING CONCEPTS
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kim D, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P76, DOI 10.1109/SEAMS.2009.5069076
   Kolter JZ, 2007, J MACH LEARN RES, V8, P2755
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Lee J, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P131
   Magee Jeff., 2006, CONCURRENCY STATE MO
   Malek S, 2005, IEEE T SOFTWARE ENG, V31, P256, DOI 10.1109/TSE.2005.29
   Malek S., 2007, A User-Centric Approach For Improving A Distributed Software Systems Deployment Architecture
   Malek S., 2004, P WORKSH ARCH DEP SY, P1730
   Malek S, 2012, IEEE T SOFTWARE ENG, V38, P73, DOI 10.1109/TSE.2011.3
   Malek S, 2010, J SYST SOFTWARE, V83, P972, DOI 10.1016/j.jss.2009.11.003
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Menasce D.A., 2010, WOSP SIPEW 10, P27
   Morin B, 2009, PROC INT CONF SOFTW, P122, DOI 10.1109/ICSE.2009.5070514
   Morin B, 2008, LECT NOTES COMPUT SC, V5301, P782, DOI 10.1007/978-3-540-87875-9_54
   Onn S., 2009, ENCY OPTIMIZATION, V1, P513
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Oreizy P, 1998, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.1998.671114
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   RABINER LR, 1989, P IEEE, V77, P257, DOI 10.1109/5.18626
   Rieck K, 2007, J COMPUT VIROL HACKI, V2, P243, DOI 10.1007/s11416-006-0030-0
   Russell S., 2009, Artificial intelligence
   RYUTOV T, 2005, P 10 ACM S ACC CONTR, P139
   Sabhnani M, 2003, MLMTA'03: INTERNATIONAL CONFERENCE ON MACHINE LEARNING; MODELS, TECHNOLOGIES AND APPLICATIONS, P209
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Solomatine D.P., 2002, Proc. 5th International Conference on Hydroinformatics, P1
   Sousa JP, 2008, ICSOFT 2008: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL SE/GSDCA/MUSE, P36
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   Tesauro G, 2007, IEEE INTERNET COMPUT, V11, P22, DOI 10.1109/MIC.2007.21
   Wang Y, 1997, P 9 EUR C MACH LEARN
   Whittle J, 2009, LECT NOTES COMPUT SC, V5560, P191, DOI 10.1007/978-3-642-03764-1_6
   Widmer G, 1996, MACH LEARN, V23, P69, DOI 10.1023/A:1018046501280
   Zhao D., 2011, P IEEE S AD DYN PROG, P318
NR 65
TC 66
Z9 73
U1 0
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2013
VL 39
IS 11
BP 1467
EP 1493
DI 10.1109/TSE.2013.37
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 245YN
UT WOS:000326501200002
DA 2024-07-18
ER

PT J
AU Reder, A
   Egyed, A
AF Reder, Alexander
   Egyed, Alexander
TI Determining the Cause of a Design Model Inconsistency
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Design tools and techniques; programming environments/construction
   tools; validation
ID MANAGEMENT
AB When a software engineer finds an inconsistency in a model, then the first question is why? What caused it? Obviously, there must be an error. But where could it be? Or is the design rule erroneous and if yes then which part? The cause of an inconsistency identifies the part of the model or design rule where the error must be. We believe that the visualization of an inconsistency ought to visualize the cause. Understanding the cause is of vital importance before a repair can even be formulated. Indeed, any automation (e. g., code generation, refactoring) has to be considered with caution if it involves model elements that cause inconsistencies. This paper analyzes the basic structure of inconsistent design rules as well as their behavior during validation and presents an algorithm for computing its cause. The approach is fully automated, tool supported, and was evaluated on 14,111 inconsistencies across 29 design models. We found that our approach computes correct causes for inconsistencies, these causes are nearly always a subset of the model elements investigated by the design rules' validation (a naive cause computation approximation), and the computation is very fast (99.8 percent of the causes are computable in <100 ms).
C1 [Egyed, Alexander] Johannes Kepler Univ Linz, Linz, Austria.
C3 Johannes Kepler University Linz
RP Reder, A (corresponding author), Johannes Kepler Univ Linz, Inst Syst Engn & Automat, Linz, Austria.
EM alexander.reder@jku.at
RI Egyed, Alexander/E-2632-2017
OI Egyed, Alexander/0000-0003-3128-5427
FU Austrian Science Fund (FWF) [P 25289-N15]
FX This research was funded by the Austrian Science Fund (FWF): P
   25289-N15.
CR Blanc X, 2009, LECT NOTES COMPUT SC, V5565, P32, DOI 10.1007/978-3-642-02144-2_8
   Cabot J, 2006, LECT NOTES COMPUT SC, V4001, P81, DOI 10.1007/11767138_7
   Chang Xu, 2006, 28th International Conference on Software Engineering Proceedings, P292
   Czarnecki K., 2006, GPCE, P211
   Dam H. K., 2010, P 26 IEEE INT C SOFT, P1
   Dam Khanh Hoa, 2008, P 7 INT JOINT C AUTO, V1, P217
   Demuth Andreas, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P248, DOI 10.1007/978-3-642-30476-7_17
   Deng X, 2007, LECT NOTES COMPUT SC, V4519, P326
   Egyed Alexander, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P1, DOI 10.1007/978-3-642-21732-6_1
   Egyed Alexander, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P99, DOI 10.1109/ASE.2008.20
   Egyed A., 2006, 28th International Conference on Software Engineering Proceedings, P381, DOI 10.1145/1134285.1134339
   Egyed A, 2007, PROC INT CONF SOFTW, P292
   Evans A., 1998, UML 98, V1618, P336
   Finkelstein A., 1993, Software Engineering - ESEC '93. 4th European Software Engineering Conference Proceedings, P84
   Groher I, 2010, LECT NOTES COMPUT SC, V6013, P203, DOI 10.1007/978-3-642-12029-9_15
   Grundy J, 1998, IEEE T SOFTWARE ENG, V24, P960, DOI 10.1109/32.730545
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Kalyanpur A, 2005, J WEB SEMANT, V3, P268, DOI 10.1016/j.websem.2005.09.005
   Kowalski R., 1974, 75 DCL U ED DEP ART, V75
   Liffiton MH, 2008, J AUTOM REASONING, V40, P1, DOI 10.1007/s10817-007-9084-z
   Nentwich C, 2003, PROC INT CONF SOFTW, P455, DOI 10.1109/ICSE.2003.1201223
   Nentwich C., 2002, ACM T INTERNET TECHN, V2, P151, DOI [10.1145/514183.514186, DOI 10.1145/514183.514186]
   Nohrer A., 2012, VAMOS, P83
   OMG, 2012, OCL 2 3 1 SPEC
   OMG, 2012, UML 2 1 SPEC
   OSTERWEIL LJ, 2006, P 28 INT C SOFTW ENG
   Reder Alexander, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P202, DOI 10.1007/978-3-642-33666-9_14
   Reder A, 2012, IEEE INT CONF AUTOM, P220, DOI 10.1145/2351676.2351707
   Robbins J.E., 2011, ARGOUML V0 32 1
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
   Vierhauser M., 2010, P 4 INT WORKSH VAR M, P171
   Winkelmann J, 2008, ELECTRON NOTES THEOR, V211, P159, DOI 10.1016/j.entcs.2008.04.038
   Xiong YF, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P315, DOI 10.1145/1595696.1595757
NR 33
TC 19
Z9 21
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2013
VL 39
IS 11
BP 1531
EP 1548
DI 10.1109/TSE.2013.30
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 245YN
UT WOS:000326501200005
DA 2024-07-18
ER

PT J
AU Sampath, S
   Bryce, R
   Memon, AM
AF Sampath, Sreedevi
   Bryce, Renee
   Memon, Atif M.
TI A Uniform Representation of Hybrid Criteria for Regression Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Test case prioritization; test criteria; hybrid test criteria; web
   testing; GUI testing
ID TEST-CASE PRIORITIZATION; TEST-SUITE REDUCTION; COVERAGE
AB Regression testing tasks of test case prioritization, test suite reduction/minimization, and regression test selection are typically centered around criteria that are based on code coverage, test execution costs, and code modifications. Researchers have developed and evaluated new individual criteria; others have combined existing criteria in different ways to form what we-and some others-call hybrid criteria. In this paper, we formalize the notion of combining multiple criteria into a hybrid. Our goal is to create a uniform representation of such combinations so that they can be described unambiguously and shared among researchers. We envision that such sharing will allow researchers to implement, study, extend, and evaluate the hybrids using a common set of techniques and tools. We precisely formulate three hybrid combinations, Rank, Merge, and Choice, and demonstrate their usefulness in two ways. First, we recast, in terms of our formulations, others' previously reported work on hybrid criteria. Second, we use our previous results on test case prioritization to create and evaluate new hybrid criteria. Our findings suggest that hybrid criteria of others can be described using our Merge and Rank formulations, and that the hybrid criteria we developed most often outperformed their constituent individual criteria.
C1 [Sampath, Sreedevi] Univ Maryland Baltimore Cty, Dept Informat Syst, Baltimore, MD 21250 USA.
   [Bryce, Renee] Univ N Texas, Dept Comp Sci & Engn, Denton, TX 76203 USA.
   [Memon, Atif M.] Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
C3 University System of Maryland; University of Maryland Baltimore County;
   University of North Texas System; University of North Texas Denton;
   University System of Maryland; University of Maryland College Park
RP Sampath, S (corresponding author), Univ Maryland Baltimore Cty, Dept Informat Syst, 1000 Hilltop Circle, Baltimore, MD 21250 USA.
EM sampath@umbc.edu; Renee.Bryce@unt.edu; atif@cs.umd.edu
FU US National Science Foundation [CNS-1205501]; US National Institute of
   Standards and Technology [70NANB10H048]; Division Of Computer and
   Network Systems; Direct For Computer & Info Scie & Enginr [1205501]
   Funding Source: National Science Foundation
FX The authors thank the reviewers, who provided valuable input that helped
   to shape this paper. They appreciate partial support for this work that
   came from the US National Science Foundation Award CNS-1205501 and the
   US National Institute of Standards and Technology Award 70NANB10H048.
CR Alspaugh S, 2007, P 1 ACM INT WORKSH E, P13, DOI 10.1145/1353673.1353676
   [Anonymous], INT S SOFTW TEST AN
   Black J, 2004, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2004.1317433
   Bryce RC, 2011, IEEE T SOFTWARE ENG, V37, P48, DOI 10.1109/TSE.2010.12
   Carlson Ryan, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P382, DOI 10.1109/ICSM.2011.6080805
   Chen TY, 1996, INFORM PROCESS LETT, V60, P135, DOI 10.1016/S0020-0190(96)00135-4
   Chen TY, 1998, INFORM SOFTWARE TECH, V40, P347, DOI 10.1016/S0950-5849(98)00050-0
   Cui Donghua, 2011, 2011 International Conference on Consumer Electronics, Communications and Networks (CECNet), P4552, DOI 10.1109/CECNET.2011.5768284
   De Lucia A., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P145, DOI 10.1109/IWAST.2012.6228983
   de Souza LS, 2011, PROC INT C TOOLS ART, P245, DOI 10.1109/ICTAI.2011.45
   Do H., 2008, Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering (SIGSOFT '08/FSE-16), P71
   Do H, 2010, IEEE T SOFTWARE ENG, V36, P593, DOI 10.1109/TSE.2010.58
   Elbaum S, 2004, SOFTWARE QUAL J, V12, P185, DOI 10.1023/B:SQJO.0000034708.84524.22
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   Elbaum S, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P169, DOI 10.1109/METRIC.2001.915525
   Fazlalizadeh Y, 2009, 2009 2ND IEEE INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND INFORMATION TECHNOLOGY, VOL 1, P190, DOI 10.1109/ICCSIT.2009.5234968
   Haraty R.A., 2001, Proceedings of the 2001 ACM Symposium on Applied Computing, P285
   Harman M., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P111, DOI 10.1109/ICSTW.2011.60
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Heimdahl MPE, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P176, DOI 10.1109/ASE.2004.1342735
   Hla KHS, 2008, 8TH IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY WORKSHOPS: CIT WORKSHOPS 2008, PROCEEDINGS, P527, DOI 10.1109/CIT.2008.Workshops.104
   Hou SS, 2008, PROC IEEE INT CONF S, P257, DOI 10.1109/ICSM.2008.4658074
   Hsu HY, 2009, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2009.5070541
   Islam MM, 2012, EUR CON SFTWR MTNCE, P21, DOI 10.1109/CSMR.2012.13
   Jeffrey D, 2005, PROC IEEE INT CONF S, P549
   Jeffrey D, 2007, IEEE T SOFTWARE ENG, V33, P108, DOI 10.1109/TSE.2007.18
   Jeffrey D, 2006, P INT COMP SOFTW APP, P411
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Kavitha R., 2010, 2010 International Conference on Communication Control and Computing Technologies, P826, DOI 10.1109/ICCCCT.2010.5670728
   Kim JM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P119, DOI 10.1109/ICSE.2002.1007961
   Kim S., 2010, P ACM IEEE INT S EMP, P5
   Koochakzadeh N, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P220, DOI 10.1109/ICST.2009.8
   Krishnan R., 2008, 2007 Military Communications Conference (MILCOM 2007), P1, DOI [10.1109/ICCCN.2008.ECP.71, DOI 10.1109/ICCCN.2008.ECP.71]
   Liang Z, 2009, WISM: 2009 INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS AND MINING, PROCEEDINGS, P19, DOI 10.1109/WISM.2009.12
   Lili Pan, 2005, Proceedings. 11th Pacific Rim International Symposium on Dependable Computing
   Lin JW, 2009, INFORM SOFTWARE TECH, V51, P679, DOI 10.1016/j.infsof.2008.11.004
   Liu WL, 2007, INT C COMP AID DES C, P252
   Ma XY, 2005, IEEE SYS MAN CYBERN, P133
   Malz C., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P149, DOI 10.1109/ICSTW.2011.81
   Masri Wes, 2009, P INT WORKSH DYN AN, P29, DOI [10.1145/2134243.2134250, DOI 10.1145/2134243.2134250]
   McMaster S, 2008, IEEE T SOFTWARE ENG, V34, P99, DOI 10.1109/TSE.2007.70756
   Mirarab Siavash, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P278, DOI 10.1109/ICST.2008.57
   Mirarab S, 2012, IEEE T SOFTWARE ENG, V38, P936, DOI 10.1109/TSE.2011.56
   Nachiyappan S., 2010, Proceedings of the 2010 International Conference on Communication and Computational Intelligence (INCOCCI), P503
   Ott R.L., 2015, INTRO STAT METHODS D
   Prabhu J., 2010, Proceedings Second International Conference on Computer Research and Development (ICCRD 2010), P373, DOI 10.1109/ICCRD.2010.77
   Qing Gu, 2010, 2010 International Symposium on Parallel and Distributed Processing with Applications (ISPA 2010), P419, DOI 10.1109/ISPA.2010.62
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   Sampath S, 2007, IEEE T SOFTWARE ENG, V33, P643, DOI 10.1109/TSE.2007.70723
   Sampath S, 2012, INFORM SOFTWARE TECH, V54, P724, DOI 10.1016/j.infsof.2012.01.007
   Sampath Sreedevi., 2006, P 2006 WORKSHOP TEST, P23
   Singh Y., 2010, ACM SIGSOFT Software Engineering Notes, V35, P1, DOI [DOI 10.1145/1668862.1668869, 10.1145/1811226.1811238]
   Smith A.M., 2009, P 2009 ACM S APPL CO, p[461, 467], DOI DOI 10.1145/1529282.1529382
   Sprenkle S, 2005, PROC IEEE INT CONF S, P587
   Sprenkle Sara., 2005, AUTOMAT SOFTW ENG, P253, DOI DOI 10.1145/1101908.1101947
   Stochel Marek G., 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P847, DOI 10.1109/COMPSAC.2008.96
   Tonella P, 2006, PROC IEEE INT CONF S, P123
   Utting M., 2007, PRACTICAL MODEL BASE
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   WONG WE, 1995, PROC INT CONF SOFTW, P41, DOI 10.1145/225014.225018
   Xu, 2012, P 27 ANN ACM S APPL, P1191
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Yoo S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P201
   Yoo S, 2010, J SYST SOFTWARE, V83, P689, DOI 10.1016/j.jss.2009.11.706
   Yu-Chi Huang, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P413, DOI 10.1109/COMPSAC.2010.66
   Zhang L, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P213
   Zhang X., 2010, Proceedings of the 2010 ACM Symposium on Applied Computing, SAC'10, (New York, NY, USA), P2229, DOI DOI 10.1145/1774088.1774556
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 72
TC 28
Z9 34
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2013
VL 39
IS 10
BP 1326
EP 1344
DI 10.1109/TSE.2013.16
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 228FO
UT WOS:000325171400001
DA 2024-07-18
ER

PT J
AU Sibay, GE
   Braberman, V
   Uchitel, S
   Kramer, J
AF Sibay, German Emir
   Braberman, Victor
   Uchitel, Sebastian
   Kramer, Jeff
TI Synthesizing Modal Transition Systems from Triggered Scenarios
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Scenarios; MTS; synthesis; partial behavior models
ID BEHAVIOR MODELS; SEQUENCE
AB Synthesis of operational behavior models from scenario-based specifications has been extensively studied. The focus has been mainly on either existential or universal interpretations. One noteworthy exception is Live Sequence Charts (LSCs), which provides expressive constructs for conditional universal scenarios and some limited support for nonconditional existential scenarios. In this paper, we propose a scenario-based language that supports both existential and universal interpretations for conditional scenarios. Existing model synthesis techniques use traditional two-valued behavior models, such as Labeled Transition Systems. These are not sufficiently expressive to accommodate specification languages with both existential and universal scenarios. We therefore shift the target of synthesis to Modal Transition Systems (MTS), an extension of labeled Transition Systems that can distinguish between required, unknown, and proscribed behavior to capture the semantics of existential and universal scenarios. Modal Transition Systems support elaboration of behavior models through refinement, which complements an incremental elicitation process suitable for specifying behavior with scenario-based notations. The synthesis algorithm that we define constructs a Modal Transition System that uses refinement to characterize all the Labeled Transition Systems models that satisfy a mixed, conditional existential and universal scenario-based specification. We show how this combination of scenario language, synthesis, and Modal Transition Systems supports behavior model elaboration.
C1 [Sibay, German Emir; Kramer, Jeff] Univ London Imperial Coll Sci Technol & Med, Dept Comp, London SW7 2B7, England.
   [Braberman, Victor; Uchitel, Sebastian] Univ Buenos Aires, FCEN, Dept Comp, Buenos Aires, DF, Argentina.
   [Uchitel, Sebastian] Univ London Imperial Coll Sci Technol & Med, Dept Comp, London SW7 2AZ, England.
C3 Imperial College London; University of Buenos Aires; Imperial College
   London
RP Sibay, GE (corresponding author), Univ London Imperial Coll Sci Technol & Med, Dept Comp, Room 504,180 Queens Gate,Huxley Bldg, London SW7 2B7, England.
EM gsibay@doc.ic.ac.uk; vbraber@dc.uba.ar; suchitel@dc.uba.ar;
   j.kramer@imperial.ac.uk
OI Uchitel, Sebastian/0000-0001-9352-1478
FU ERC StG PBM-FIMBSE; CONICET [PIP112-200801-00955KA4]; UBACYT [W0813];
   PICT [1774]; PICT PAE [2272, 2278]; MEALS [295261]
FX The work reported herein was partially supported by ERC StG PBM-FIMBSE,
   CONICET PIP112-200801-00955KA4, UBACYT W0813, PICT 1774, PICT PAE 2272,
   PICT PAE 2278, and MEALS 295261. Finally, the authors would like to
   thank the anonymous reviewers for their careful and insightful reviews
   that greatly improved the quality of this paper.
CR Aceto L, 2008, BULL EUR ASSOC THEOR, P94
   Alrajeh D, 2009, PROC INT CONF SOFTW, P265, DOI 10.1109/ICSE.2009.5070527
   Alur R, 2003, IEEE T SOFTWARE ENG, V29, P623, DOI 10.1109/TSE.2003.1214326
   [Anonymous], ETX
   [Anonymous], 2008, P 16 ACM SIGSOFT INT
   [Anonymous], 1999, Concurrency-state models and Java programs
   Beer I, 1997, LECT NOTES COMPUT SC, V1254, P279
   Bontemps Y, 2005, IEEE T SOFTWARE ENG, V31, P999, DOI 10.1109/TSE.2005.137
   Bontemps Y, 2004, FUND INFORM, V62, P139
   Brunet G., ACM T SOFTWARE ENG M
   Bruns G., 2000, CONCUR 2000 - Concurrency Theory. 11th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1877), P168
   Clarke EM, 1999, MODEL CHECKING, P1
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   Damm W., 1999, P 3 INT C FORM METH, V139
   Fischbein D., 2012, MODAL TRANSITION SYS
   Giannakopoulou D., 2003, PROC 9 EUR SOFTW ENG, P257
   Harel D., 2002, International Journal of Foundations of Computer Science, V13, P5, DOI 10.1142/S0129054102000935
   Harel D., 2003, COME LETS PLAY SCENA, DOI 10.1007/978-3-642-19029-2
   Huth M, 2001, LECT NOTES COMPUT SC, V2028, P155
   ITU, 2000, REC Z 120 MESS SEQ C
   KELLER RM, 1976, COMMUN ACM, V19, P371, DOI 10.1145/360248.360251
   Krka I., 2009, P 7 JOINT M EUR SOFT
   Kruger I., 2000, THESIS TU MUNICH
   Kugler H, 2007, LECT NOTES COMPUT SC, V4422, P306
   Larsen K. G., 1995, Proceedings of the Workshop on Tools and Algorithms for the Construction and Analysis of Systems, P13
   Larsen K. G., 1996, Formal Systems Specification. The RPC-Memory Specification Case Study, P405, DOI 10.1007/BFb0024437
   Larsen K. G., 1990, Proceedings. Fifth Annual IEEE Symposium on Logic in Computer Science (90CH2897-7), P108, DOI 10.1109/LICS.1990.113738
   Larsen U, 1988, Eur J Popul, V3, P203, DOI 10.1109/LICS.1988.5119
   Magee J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P499, DOI 10.1109/ICSE.2000.870440
   Mauw S, 1997, SDL '97 - TIME FOR TESTING, P291, DOI 10.1016/B978-044482816-3/50020-4
   Milner R., 1989, Communication and concurrency
   Pilone D., 2005, UML 2 O NUTSHELL
   Sengupta B, 2006, IEEE T SOFTWARE ENG, V32, P587, DOI 10.1109/TSE.2006.82
   Sibay G, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P41, DOI 10.1145/1368088.1368095
   Uchitel S, 2004, ACM T SOFTW ENG METH, V13, P37, DOI 10.1145/1005561.1005563
   Uchitel S., 2004, Software Engineering Notes, V29, P43, DOI 10.1145/1041685.1029904
   Uchitel S, 2009, IEEE T SOFTWARE ENG, V35, P384, DOI 10.1109/TSE.2008.107
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   Zachos K, 2005, IEEE SOFTWARE, V22, P89, DOI 10.1109/MS.2005.134
   Ziadi T, 2004, PROC INT CONF SOFTW, P242, DOI 10.1109/ICSE.2004.1317446
NR 40
TC 12
Z9 12
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2013
VL 39
IS 7
BP 975
EP 1001
DI 10.1109/TSE.2012.62
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 174AO
UT WOS:000321125200006
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Ikeda, S
   Jibiki, M
   Kuno, Y
AF Ikeda, Satoshi
   Jibiki, Masahiro
   Kuno, Yasushi
TI Coverage Estimation in Model Checking with Bitstate Hashing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Coverage estimation; model checking; bitstate hashing
AB Explicit-state model checking which is conducted by state space search has difficulty in exploring satisfactory state space because of its memory requirements. Though bitstate hashing achieves memory efficiency, it cannot guarantee complete verification. Thus, it is desirable to provide a reliability indicator such as a coverage estimate. However, the existing approaches for coverage estimation are not very accurate when a verification run covers a small portion of state space. This mainly stems from the lack of information that reflects characteristics of models. Therefore, we propose coverage estimation methods using a growth curve that approximates an increase in reached states by enlarging a bloom filter. Our approaches improve estimation accuracy by leveraging the statistics from multiple verification runs. Coverage is estimated by fitting the growth curve to these statistics. Experimental results confirm the validity of the proposed growth curve and the applicability of our approaches to practical models. In fact, for practical models, our approaches outperformed the conventional ones when the actual coverage is relatively low.
C1 [Ikeda, Satoshi] NEC Corp Ltd, Cloud Syst Res Labs, Nakahara Ku, Kawasaki, Kanagawa 2118666, Japan.
   [Jibiki, Masahiro] Natl Inst Informat & Commun Technol, Koganei, Tokyo 1848795, Japan.
   [Kuno, Yasushi] Univ Tsukuba, Fac Business Sci, Bunkyo Ku, Tokyo 1120012, Japan.
C3 NEC Corporation; National Institute of Information & Communications
   Technology (NICT) - Japan; University of Tsukuba
RP Ikeda, S (corresponding author), NEC Corp Ltd, Cloud Syst Res Labs, Nakahara Ku, 1753 Shimonumabe, Kawasaki, Kanagawa 2118666, Japan.
EM s-ikeda@fd.jp.nec.com; jibiki@nict.go.jp; kuno@gssm.otsuka.tsukuba.ac.jp
CR [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   BLOOM BH, 1970, COMMUN ACM, V13, P422, DOI 10.1145/362686.362692
   Clarke EM, 1999, MODEL CHECKING, P1
   DILL DL, 1992, 1992 IEEE INTERNATIONAL CONFERENCE ON COMPUTER DESIGN : VLSI IN COMPUTERS & PROCESSORS, P522, DOI 10.1109/ICCD.1992.276232
   Dillinger PC, 2004, LECT NOTES COMPUT SC, V3312, P367
   Dwyer MB, 2007, PROC INT CONF SOFTW, P3
   Eckerle J., 1998, NEW METHODS SEQUENTI
   FLAJOLET P, 1995, J COMPUT APPL MATH, V58, P103, DOI 10.1016/0377-0427(93)E0258-N
   Grosu R, 2005, LECT NOTES COMPUT SC, V3440, P271
   Holzmann GJ, 2011, IEEE T SOFTWARE ENG, V37, P845, DOI 10.1109/TSE.2010.110
   Holzmann GJ, 1998, FORM METHOD SYST DES, V13, P289, DOI 10.1023/A:1008696026254
   Menzies T, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P15, DOI 10.1109/ISSRE.2002.1173208
   OWEN D, 2003, SOFTWARE ENG KNOWLED, P158
   Pelánek R, 2004, LECT NOTES COMPUT SC, V2989, P5
   PELANEK R, 2005, P FORM METH IND CRIT, P98
   Stern U., 1996, Formal Description Techniques IX. Theory, Application and Tools. IFIP TC6/6.1 International Conference on Formal Description Techniques IX/Protocol Specification, Testing and Verification XVI, P333
   Tronci E, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P317, DOI 10.1109/APSEC.2001.991495
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Wolper P., 1993, Computer Aided Verification. 5th International Conference, CAV '93 Proceedings, P59
NR 19
TC 1
Z9 2
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2013
VL 39
IS 4
BP 477
EP 486
DI 10.1109/TSE.2012.44
PG 10
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 112UH
UT WOS:000316618800003
DA 2024-07-18
ER

PT J
AU Cataldo, M
   Herbsleb, JD
AF Cataldo, Marcelo
   Herbsleb, James D.
TI Coordination Breakdowns and Their Impact on Development Productivity and
   Software Failures
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Metrics/measurement; productivity; organizational management and
   coordination; quality analysis and evaluation
ID DEVELOPMENT-PROJECTS; DESIGN; SYSTEMS; ORGANIZATIONS; PERFORMANCE;
   UNCERTAINTY; INNOVATION; QUALITY
AB The success of software development projects depends on carefully coordinating the effort of many individuals across the multiple stages of the development process. In software engineering, modularization is the traditional technique intended to reduce the interdependencies among modules that constitute a system. Reducing technical dependencies, the theory argues, results in a reduction of work dependencies between teams developing interdependent modules. Although that research stream has been quite influential, it considers a static view of the problem of coordination in engineering activities. Building on a dynamic view of coordination, we studied the relationship between socio-technical congruence and software quality and development productivity. In order to investigate the generality of our findings, our analyses were performed on two large-scale projects from two companies with distinct characteristics in terms of product and process maturity. Our results revealed that the gaps between coordination requirements and the actual coordination activities carried out by the developers significantly increased software failures. Our analyses also showed that higher levels of congruence are associated with improved development productivity. Finally, our results showed the congruence between dependencies and coordinative actions is critical both in mature development settings as well as in novel and dynamic development contexts.
C1 [Cataldo, Marcelo] Robert Bosch LLC, Res & Technol Ctr, Pittsburgh, PA 15203 USA.
   [Herbsleb, James D.] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
C3 Bosch; Carnegie Mellon University
RP Cataldo, M (corresponding author), Robert Bosch LLC, Res & Technol Ctr, 2835 East Carson St,210, Pittsburgh, PA 15203 USA.
EM marcelo.cataldo@us.bosch.com; jdh@cs.cmu.edu
OI Herbsleb, James/0000-0002-7159-7524
CR Allen R., 1997, ACM Transactions on Software Engineering and Methodology, V6, P213, DOI 10.1145/258077.258078
   Allen T. J., 1977, Managing the flow of technology: technology transfer and the dissemination of technical information within RD organizations
   [Anonymous], 2003, APPL MULTIPLE REGRES
   [Anonymous], P 1 INT WORKSH SOC C
   [Anonymous], 2000, DESIGN RULES
   [Anonymous], P 7 JOINT M EUR SOFT
   [Anonymous], 1962, P AM PHILOS SOC
   [Anonymous], MYTHICAL MAN MONTH E
   [Anonymous], 1981, HUMAN FACTORS SOFTWA
   [Anonymous], 2007, P SIGCHI C HUM FACT
   [Anonymous], 2008, P 30 INT C SOFTW ENG
   Argote L., 2012, ORG LEARNING CREATIN, DOI 10.1111/j.1552-6909.1999.tb01970.x
   Begel A., 2010, P ACM IEEE 32 INT C, V1
   Boehm B.W., 2004, Balancing Agility and Discipline: A Guide for the Perplexed
   Boh WF, 2007, MANAGE SCI, V53, P1315, DOI 10.1287/mnsc.1060.0687
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Browning TR, 2001, IEEE T ENG MANAGE, V48, P292, DOI 10.1109/17.946528
   Browning TR, 2007, PROD OPER MANAG, V16, P217, DOI 10.1111/j.1937-5956.2007.tb00177.x
   Burton R.M., 1998, STRATEGIC ORG DIAGNO
   CARLEY KM, 2001, P 6 INT COMM CONTR R
   CATALDO M, 2007, P INT C GLOB SOFTW E
   Cataldo M., 2006, P 20 ANN C COMP SUPP
   Cataldo M., 2008, P ACM IEEE 2 INT S E
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   CONWAY ME, 1968, DATAMATION, V14, P28
   Costa J.M., 2011, P INT C COMP HUM INT
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   DAFT RL, 1986, MANAGE SCI, V32, P554, DOI 10.1287/mnsc.32.5.554
   Damian D, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P57, DOI 10.1007/978-3-642-10294-3_3
   Ebert C, 2009, COMPUTER, V42, P42, DOI 10.1109/MC.2009.118
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   EPPINGER SD, 1994, RES ENG DES, V6, P1, DOI 10.1007/BF01588087
   Espinosa JA, 2007, ORGAN SCI, V18, P613, DOI 10.1287/orsc.1070.0297
   Faraj S, 2006, MANAGE SCI, V52, P1155, DOI 10.1287/mnsc.1060.0526
   FUGGETTA A, 2000, P C FUT SOFTW ENG
   Galbraith J.R., 1973, Designing complex organizations
   Garud R., 2003, Managing in the Modular Age: Architectures, Networks, and Organizations
   Gittell JH, 2002, MANAGE SCI, V48, P1408, DOI 10.1287/mnsc.48.11.1408.268
   Gokpinar B, 2010, MANAGE SCI, V56, P468, DOI 10.1287/mnsc.1090.1117
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   GRINTER RE, 1999, P INT ACM SIGGROUP C
   Harter DE, 2000, MANAGE SCI, V46, P451, DOI 10.1287/mnsc.46.4.451.12056
   HENDERSON RM, 1990, ADMIN SCI QUART, V35, P9, DOI 10.2307/2393549
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   HERBSLEB JD, 2006, P INT C INF SYST
   Hoegl M, 2004, ORGAN SCI, V15, P38, DOI 10.1287/orsc.1030.0053
   Karolak D.W., 1998, Global Software Development: Managing Virtual Teams and Environments
   KICZALES G, 2005, P 27 INT C SOFTW ENG
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Kwan I., 2009, P 2 INT WORKSH SOC C
   MacCormack A, 2003, J PROD INNOVAT MANAG, V20, P217, DOI 10.1111/1540-5885.2003004
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   March J.G., 1958, ORGANIZATIONS
   Nagappan Nachiappan, 2007, P 1 INT S EMP SOFTW
   Northrop L., 2006, ULTRALARGE SCALE SYS
   Olson GM, 2000, HUM-COMPUT INTERACT, V15, P139, DOI 10.1207/S15327051HCI1523_4
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   Roseman M., 1996, P ACM C COMP SUPP CO
   SARMA A, 2003, P 25 INT C SOFTW ENG
   SARMA A, 2009, P 31 INT C SOFTW ENG
   Schroeder L.D., 1986, UNDERSTANDING REGRES
   Scott W.Richard., 1998, ORG RATIONAL NATURAL, V4th
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Sosa ME, 2008, RES ENG DES, V19, P47, DOI 10.1007/s00163-007-0039-5
   Sosa ME, 2004, MANAGE SCI, V50, P1674, DOI 10.1287/mnsc.1040.0289
   Souza C.R.B.D., 2008, P 30 INT C SOFTW ENG
   Souza C.R.B.D., 2004, P 12 ACM SIGSOFT INT
   Staudenmayer N., 1997, Managing Multiple interdependencies in Large Scale Software Development Projects
   SULLIVAN K, 2001, P 8 EUR SOFTW ENG C
   Thompson J.D., 2011, Organizations in action: Social science bases of administrative theory
   Trainer E., 2005, P OOPSLA WORKSH ECL
   Ulrich K., 2007, PRODUCT DESIGN DEV, V4th
   VONHIPPEL E, 1990, RES POLICY, V19, P407, DOI 10.1016/0048-7333(90)90049-C
   Wagstrom P., 2010, P AC MAN ANN M
   Watts Duncan J., 2000, Small worlds: The dynamics of networks between order and randomness
   Xiang P.F., 2008, P INT WORKSH REC SYS
NR 78
TC 96
Z9 108
U1 0
U2 28
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2013
VL 39
IS 3
BP 343
EP 360
DI 10.1109/TSE.2012.32
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 098CA
UT WOS:000315520700004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU McMillan, C
   Grechanik, M
   Poshyvanyk, D
   Fu, C
   Xie, Q
AF McMillan, Collin
   Grechanik, Mark
   Poshyvanyk, Denys
   Fu, Chen
   Xie, Qing
TI Exemplar: A Source Code Search Engine for Finding Highly Relevant
   Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Source code search engines; information retrieval; concept location;
   open source software; mining software repositories; software reuse
ID STRUCTURAL CONTEXT; SOFTWARE; RANKING
AB A fundamental problem of finding software applications that are highly relevant to development tasks is the mismatch between the high-level intent reflected in the descriptions of these tasks and low-level implementation details of applications. To reduce this mismatch we created an approach called EXEcutable exaMPLes ARchive (Exemplar) for finding highly relevant software projects from large archives of applications. After a programmer enters a natural-language query that contains high-level concepts (e. g., MIME, datasets), Exemplar retrieves applications that implement these concepts. Exemplar ranks applications in three ways. First, we consider the descriptions of applications. Second, we examine the Application Programming Interface (API) calls used by applications. Third, we analyze the dataflow among those API calls. We performed two case studies (with professional and student developers) to evaluate how these three rankings contribute to the quality of the search results from Exemplar. The results of our studies show that the combined ranking of application descriptions and API documents yields the most-relevant search results. We released Exemplar and our case study data to the public.
C1 [McMillan, Collin; Poshyvanyk, Denys] Coll William & Mary, Dept Comp Sci, Williamsburg, VA 23185 USA.
   [Grechanik, Mark; Fu, Chen; Xie, Qing] Accenture Technol Labs, Chicago, IL 60601 USA.
C3 William & Mary; Accenture
RP McMillan, C (corresponding author), Coll William & Mary, Dept Comp Sci, Williamsburg, VA 23185 USA.
EM cmc@cs.wm.edu; mark.grechanik@accenture.com; denys@cs.wm.edu;
   chen.fu@accenture.com; qing.xie@accenture.com
RI Grechanik, Mark/IZD-6018-2023
OI Grechanik, Mark/0000-0002-8364-595X; Poshyvanyk,
   Denys/0000-0002-5626-7586
FU US National Science Foundation (NSF) [CCF-0916139, CCF-0916260];
   Accenture Technology Labs; Division of Computing and Communication
   Foundations; Direct For Computer & Info Scie & Enginr [0916260, 0916139]
   Funding Source: National Science Foundation
FX The authors thank the anonymous TSE and ICSE 2010 reviewers for their
   comments and suggestions that helped them to greatly improve the quality
   of this submission. They are grateful to Dr. Kishore Swaminathan, the
   Chief Scientist and Director of Research for his invaluable support.
   They also thank Malcom Gethers from William & Mary (W&M) for assisting
   in computation of the statistical tests, Bogdan Dit from W&M for helpful
   suggestions in editing this paper, and Himanshu Sharma from the
   University of Illinois Chicago for his work on the updated interface for
   Exemplar. This work is supported by US National Science Foundation (NSF)
   CCF-0916139, CCF-0916260, and Accenture Technology Labs. Any opinions,
   findings and conclusions expressed herein are the authors' and do not
   necessarily reflect those of the sponsors.
CR Al-Maskari Azzah, 2007, 30th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P773, DOI 10.1145/1277741.1277902
   [Anonymous], 2005, Proc. of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE'05)
   [Anonymous], 2010, P 32 ACMIEEE INT C S
   Anquetil N., 1998, Conference of the Centre for Advanced Studies on Collaborative Research, P4
   Bajracharya S.K., 2010, P 18 ACM SIGSOFT INT, P157, DOI 10.1145/1882291.1882316
   BAJRACHARYA SUSHIL., 2009, Journal of Empirical Software Engineering
   Bajracharya Sushil, 2010, P 2010 ICSE WORKSH S, P5
   BIGGERSTAFF TJ, 1994, COMMUN ACM, V37, P72, DOI 10.1145/175290.175300
   Brandt J, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P513
   Chatterjee S, 2009, LECT NOTES COMPUT SC, V5503, P385
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   Dekel U, 2009, PROC INT CONF SOFTW, P320, DOI 10.1109/ICSE.2009.5070532
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   FURNAS GW, 1987, COMMUN ACM, V30, P964, DOI 10.1145/32206.32212
   Gabel M, 2010, P ACM SIGSOFT S FDN, P147, DOI DOI 10.1145/1882291.1882315
   Granka L. A., 2004, Proceedings of Sheffield SIGIR 2004. The Twenty-Seventh Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P478, DOI 10.1145/1008992.1009079
   Grechanik M., 2007, PROC 4 IEEE INT WORK, P12, DOI DOI 10.1109/MSR.2007.9
   Henninger S, 1996, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1996.493423
   Hill R, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P228, DOI 10.1109/ASE.2004.1342740
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   Holmes R, 2006, IEEE T SOFTWARE ENG, V32, P952, DOI 10.1109/TSE.2006.117
   Holmes Reid, 2005, P 10 EUR SOFTW ENG C, V30, P237, DOI DOI 10.1145/1095430.1081744
   HOWISON J, 2004, P WORKSH MIN SOFTW R
   Inoue K, 2005, IEEE T SOFTWARE ENG, V31, P213, DOI 10.1109/TSE.2005.38
   Inoue K, 2003, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2003.1201184
   Jolliffe I.T., 1986, Principal component analysis, DOI DOI 10.1016/0169-7439(87)80084-9
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Lemos O.A. L., 2009, P 2009 ACM S APPL CO, P476, DOI DOI 10.1145/1529282.1529384
   Linstead E, 2009, DATA MIN KNOWL DISC, V18, P300, DOI 10.1007/s10618-008-0118-x
   LITTLE G, 2007, P 22 IEEE ACM INT C, P84
   Mandelin D, 2005, ACM SIGPLAN NOTICES, V40, P48, DOI 10.1145/1064978.1065018
   Muchnick S., 1997, ADV COMPILER DESIGN
   Murphy G.C., 1995, Proceedings of the 3rd ACM SIGSOFT symposium on Foundations of software engineering, P18
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2009, PROC INT CONF SOFTW, P283, DOI 10.1109/ICSE-COMPANION.2009.5071002
   Reiss SP, 2009, PROC INT CONF SOFTW, P243, DOI 10.1109/ICSE.2009.5070525
   Robillard MP, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/13487689.13487691
   Sahavechaphan N, 2006, ACM SIGPLAN NOTICES, V41, P413, DOI 10.1145/1167515.1167508
   Salton G., 1989, Automatic Text Processing: The Transformation, Analysis, and Retrieval of Information by Computer
   Saul Z.M., 2007, P ACM SIGSOFT S FDN, P15
   Sim S.E., 2009, ACM T SOFTWARE ENG M
   Sirkin R., 2005, STAT SOCIAL SCI
   Smucker MD, 2007, P 16 ACM C C INF KNO, P623, DOI [DOI 10.1145/1321440.1321528, 10.1145/1321440.1321528U, DOI 10.1145/1321440.1321528U]
   Stylos J, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P195
   Tansalarak N, 2005, LECT NOTES COMPUT SC, V3489, P171
   Thummalapenta S., 2008, P 23 IEEE ACM INT C, P327
   Thummalapenta Suresh, 2007, Proceedings of the Twenty-second IEEE/ACM International Conference on Automated Software Engineering, ASE '07, P204
   Witten I.H., 1999, Managing Gigabytes: Compressing and Indexing Documents and Images
   Ye Y., 2005, Automated Software Engineering, V12, P199, DOI 10.1007/s10515-005-6206-x
   Ye YW, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P513, DOI 10.1109/ICSE.2002.1007995
   Yokomori R, 2009, PROC IEEE INT CONF S, P189, DOI 10.1109/ICSM.2009.5306323
NR 52
TC 99
Z9 120
U1 0
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2012
VL 38
IS 5
BP 1069
EP 1087
DI 10.1109/TSE.2011.84
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 009BA
UT WOS:000308999100006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lienhard, A
   Girba, T
   Nierstrasz, O
AF Lienhard, Adrian
   Girba, Tudor
   Nierstrasz, Oscar
TI Specifying Dynamic Analyses by Extending Language Semantics
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Dynamic analysis; formal definitions and theory; tracing; debugging
AB Dynamic analysis is increasingly attracting attention for debugging, profiling, and program comprehension. Ten to twenty years ago, many dynamic analyses investigated only simple method execution traces. Today, in contrast, many sophisticated dynamic analyses exist, for instance, for detecting memory leaks, analyzing ownership properties, measuring garbage collector performance, or supporting debugging tasks. These analyses depend on complex program instrumentations and analysis models, making it challenging to understand, compare, and reproduce the proposed approaches. While formal specifications and proofs are common in the field of static analysis, most dynamic analyses are specified using informal, textual descriptions. In this paper, we propose a formal framework using operational semantics that allows researchers to precisely specify their dynamic analysis. Our goal is to provide an accessible and reusable basis on which researchers who may not be familiar with rigorous specifications of dynamic analyses can build. By extending the provided semantics, one can concisely specify how runtime events are captured and how this data is transformed to populate the analysis model. Furthermore, our approach provides the foundations to reason about properties of a dynamic analysis.
C1 [Lienhard, Adrian; Girba, Tudor; Nierstrasz, Oscar] Univ Bern, Inst Informat, Software Composit Grp, CH-3012 Bern, Switzerland.
C3 University of Bern
RP Lienhard, A (corresponding author), Univ Bern, Inst Informat, Software Composit Grp, Neubruckckstr 10, CH-3012 Bern, Switzerland.
EM lienhard@iam.unibe.ch; tudor@tudorgirba.com; oscar.nierstrasz@acm.org
OI Nierstrasz, Oscar/0000-0002-9975-9791
FU Swiss National Science Foundation [200020-121594, 200020-131827]; Swiss
   National Science Foundation (SNF) [200020_131827, 200020_121594] Funding
   Source: Swiss National Science Foundation (SNF)
FX The authors gratefully acknowledge the financial support of the Swiss
   National Science Foundation for the projects "Bringing Models Closer to
   Code" (No. 200020-121594, October 2008-September 2010) and
   "Synchronizing Models and Code" (No. 200020-131827, October
   2010-September 2012).
CR Allan C, 2005, ACM SIGPLAN NOTICES, V40, P345, DOI 10.1145/1103845.1094839
   Belblidia N, 2007, J OBJECT TECHNOL, V6, P71, DOI 10.5381/jot.2007.6.3.a2
   Cameron N.R., 2007, P 22 ANN ACM SIGPLAN, P441, DOI DOI 10.1145/1297027.1297060
   Cantrill BM, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK 2004 USENIX ANNUAL TECHNICAL CONFERENCE, P15
   Clarke D, 2002, ACM SIGPLAN NOTICES, V37, P292, DOI 10.1145/583854.582447
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Craig I.D., 2005, Virtual Machines
   De Pauw W., 1994, Object-Oriented Programming. 8th European Conference, ECOOP '94. Proceedings, P163, DOI 10.1007/BFb0052182
   Drossopoulou S, 2008, LECT NOTES COMPUT SC, V5142, P412, DOI 10.1007/978-3-540-70592-5_18
   Flanagan C, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P244, DOI 10.1145/1806596.1806625
   Flanagan C, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P121, DOI 10.1145/1542476.1542490
   Flanagan C, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P293, DOI 10.1145/1375581.1375618
   Klose K, 2009, LECT NOTES BUS INF P, V33, P289
   Lienhard A, 2009, COMPUT LANG SYST STR, V35, P63, DOI 10.1016/j.cl.2008.05.006
   Lienhard A, 2008, LECT NOTES COMPUT SC, V5142, P592, DOI 10.1007/978-3-540-70592-5_25
   Pheng S, 2006, INT C PROGRAM COMPRE, P191, DOI 10.1109/ICPC.2006.20
   Plotkin G. D., 1981, A structural approach to operational semantics
   Pothier G., 2007, P 22 ACM SIGPLAN C O, P535
   Pothier G, 2009, IEEE SOFTWARE, V26, P78, DOI 10.1109/MS.2009.169
   Quante J, 2008, J SYST SOFTWARE, V81, P481, DOI 10.1016/j.jss.2007.06.005
   Quante J, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P79
   Rayside D., 2007, INT C AUTOMATED SOFT, P194
   Walker D, 2003, ACM SIGPLAN NOTICES, V38, P127, DOI 10.1145/944746.944718
   Wand M, 2004, ACM T PROGR LANG SYS, V26, P890, DOI 10.1145/1018203.1018208
   WRIGHT AK, 1994, INFORM COMPUT, V115, P38, DOI 10.1006/inco.1994.1093
NR 25
TC 0
Z9 0
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2012
VL 38
IS 3
BP 694
EP 706
DI 10.1109/TSE.2011.38
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 947FP
UT WOS:000304414400013
DA 2024-07-18
ER

PT J
AU Kocaguneli, E
   Menzies, T
   Bener, AB
   Keung, JW
AF Kocaguneli, Ekrem
   Menzies, Tim
   Bener, Ayse Basar
   Keung, Jacky W.
TI Exploiting the Essential Assumptions of Analogy-Based Effort Estimation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software cost estimation; analogy; k-NN
ID SOFTWARE EFFORT ESTIMATION; COST ESTIMATION; EMPIRICAL VALIDATION;
   SELECTION; MODEL
AB Background: There are too many design options for software effort estimators. How can we best explore them all? Aim: We seek aspects on general principles of effort estimation that can guide the design of effort estimators. Method: We identified the essential assumption of analogy-based effort estimation, i.e., the immediate neighbors of a project offer stable conclusions about that project. We test that assumption by generating a binary tree of clusters of effort data and comparing the variance of supertrees versus smaller subtrees. Results: For 10 data sets (from Coc81, Nasa93, Desharnais, Albrecht, ISBSG, and data from Turkish companies), we found: 1) The estimation variance of cluster subtrees is usually larger than that of cluster supertrees; 2) if analogy is restricted to the cluster trees with lower variance, then effort estimates have a significantly lower error (measured using MRE, AR, and Pred(25) with a Wilcoxon test, 95 percent confidence, compared to nearest neighbor methods that use neighborhoods of a fixed size). Conclusion: Estimation by analogy can be significantly improved by a dynamic selection of nearest neighbors, using only the project data from regions with small variance.
C1 [Kocaguneli, Ekrem; Menzies, Tim] W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
   [Bener, Ayse Basar] Ryerson Univ, Ted Rogers Sch Informat Technol Management, Toronto, ON M5G 2C, Canada.
   [Keung, Jacky W.] Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
C3 West Virginia University; Toronto Metropolitan University; Hong Kong
   Polytechnic University
RP Kocaguneli, E (corresponding author), W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
EM ekocagun@mix.wvu.edu; tim@menzies.us; ayse.bener@ryerson.ca;
   jacky.keung@comp.polyu.edu.hk
RI Menzies, Tim/X-7680-2019; Keung, Jacky/X-4693-2019; Keung,
   Jacky/ABA-7089-2020; Basar, Ayse/ABF-9265-2020
OI Menzies, Tim/0000-0002-5040-3196; Keung, Jacky/0000-0002-3803-9600;
   Basar, Ayse/0000-0003-4934-8326
FU Direct For Computer & Info Scie & Enginr [1017330] Funding Source:
   National Science Foundation; Direct For Computer & Info Scie & Enginr;
   Division of Computing and Communication Foundations [1017263] Funding
   Source: National Science Foundation; Division of Computing and
   Communication Foundations [1017330] Funding Source: National Science
   Foundation
CR Alpaydin E, 2004, INTRO MACHINE LEARNI
   Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], P 5 INT S EMP SOFTW
   [Anonymous], THESIS W VIRGINIA U
   Auer M, 2006, IEEE T SOFTWARE ENG, V32, P83, DOI 10.1109/TSE.2006.1599418
   Bakir A, 2010, SOFTWARE QUAL J, V18, P57, DOI 10.1007/s11219-009-9081-z
   Beeferman D., 2000, Proceedings. KDD-2000. Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P407, DOI 10.1145/347090.347176
   Boehm B, 2000, ANN SOFTW ENG, V10, P177, DOI 10.1023/A:1018991717352
   Boehm BW., 1981, Software Engineering Economics
   Boetticher GD, 2003, IEEE INTELL SYST, V18, P48, DOI 10.1109/MIS.2003.1200728
   Briand LC, 1999, P 21 INT C SOFTW ENG, DOI DOI 10.1145/302405.302647
   CHANG CL, 1974, IEEE T COMPUT, VC 23, P1179, DOI 10.1109/T-C.1974.223827
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   Eisen MB, 1998, P NATL ACAD SCI USA, V95, P14863, DOI 10.1073/pnas.95.25.14863
   FAYYAD UM, 1993, IJCAI-93, VOLS 1 AND 2, P1022
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Frank E., 2003, Proceedings of the Conference on Uncertainty in Artificial Intelligence, P249
   Gama J., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P662, DOI 10.1145/1141277.1141429
   GOWER JC, 1986, J CLASSIF, V3, P5, DOI 10.1007/BF01896809
   Guha S., 1998, SIGMOD Record, V27, P73, DOI 10.1145/276305.276312
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Ho Y.-C., 1969, APPL OPTIMAL CONTROL
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Jorgensen M, 2009, IEEE T SOFTWARE ENG, V35, P368, DOI 10.1109/TSE.2009.2
   Kadoda G., 2000, UK CBR Workshop, P1
   Kasten EP, 2007, IEEE T KNOWL DATA EN, V19, P485, DOI 10.1109/TKDE.2007.1000
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Keung J, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P229
   Keung J, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P294
   Keung JW, 2008, IEEE T SOFTWARE ENG, V34, P471, DOI 10.1109/TSE.2008.34
   Kirsopp C., 2002, IEE Proceedings-Software, V149, P123, DOI 10.1049/ip-sen:20020695
   Kirsopp C., 2003, P INT C KNOWL BAS SY
   Kitchenham B, 2009, P 5 INT C PRED MOD S, P1, DOI DOI 10.1145/1540438.1540444
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kleijnen JPC, 1997, J STAT COMPUT SIM, V57, P111, DOI 10.1080/00949659708811805
   Li J., 2007, P 3 INT WORKSH PRED, P6
   Li JZ, 2008, EMPIR SOFTW ENG, V13, P63, DOI 10.1007/s10664-007-9054-4
   Li JZ, 2007, EMPIR SOFTW ENG, V12, P65, DOI 10.1007/s10664-006-7552-4
   Li YF, 2009, EMPIR SOFTW ENG, V14, P603, DOI 10.1007/s10664-008-9104-6
   Li YF, 2009, J SYST SOFTWARE, V82, P241, DOI 10.1016/j.jss.2008.06.001
   Lipowezky U, 1998, PATTERN RECOGN LETT, V19, P907, DOI 10.1016/S0167-8655(98)00075-0
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   Menzies T., 1996, P PAC KNOWL ACQ WORK
   Menzies T, 2006, IEEE T SOFTWARE ENG, V32, P883, DOI 10.1109/TSE.2006.114
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P409, DOI 10.1007/s10515-010-0070-z
   Milic D., 2004, P EUR C
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Nuseibeh B., 1996, Proceedings of the 8th International Workshop on Software Specification and Design, P164, DOI 10.1109/IWSSD.1996.501161
   Park H, 2008, EXPERT SYST APPL, V35, P929, DOI 10.1016/j.eswa.2007.08.001
   Quinlan J. R., 1996, Algorithmic Learning Theory. 7th International Workshop, ALT '96. Proceedings, P143
   Quinlan J.R., 1992, P AI 92, P343, DOI DOI 10.1142/9789814536271
   Quinlan Ross., 1992, C4.5: Programs for Machine Learning
   Robson C., 2002, Real World Research, V2nd
   Rumelhart D., 1986, PARALLEL DISTRIBUTED, P318
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Shepperd M., 1996, P INT C SOFTW ENG
   Shepperd M., 2007, PERSONNEL COMMUNICAT
   Shepperd M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P304, DOI 10.1109/FOSE.2007.23
   Spareref.com, 2002, NAS SHUT DOWN CHECK
   Steinbach M., 2010, P KDD WORKSH TEXT MI
   Tan P. N., 2005, Introduction to Data Mining
   VENKATACHALAM AR, 1993, IEEE IJCNN, P987
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
   Wang Y, 2009, IEEE T SYST MAN CY C, V39, P647, DOI 10.1109/TSMCC.2009.2020690
   Wittig G, 1997, INFORM SOFTWARE TECH, V39, P469, DOI 10.1016/S0950-5849(97)00004-9
   Yang Y, 2002, PKAW
NR 69
TC 109
Z9 119
U1 1
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2012
VL 38
IS 2
BP 425
EP 438
DI 10.1109/TSE.2011.27
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 913ZF
UT WOS:000301915200011
DA 2024-07-18
ER

PT J
AU Chen, HB
   Yu, J
   Hang, CQ
   Zang, BY
   Yew, PC
AF Chen, Haibo
   Yu, Jie
   Hang, Chengqun
   Zang, Binyu
   Yew, Pen-Chung
TI Dynamic Software Updating Using a Relaxed Consistency Model
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Maintainability; reliability; runtime environments
ID PROGRAM
AB Software is inevitably subject to changes. There are patches and upgrades that close vulnerabilities, fix bugs, and evolve software with new features. Unfortunately, most traditional dynamic software updating approaches suffer some level of limitations; few of them can update multithreaded applications when involving data structure changes, while some of them lose binary compatibility or incur nonnegligible performance overhead. This paper presents POLUS, a software maintenance tool capable of iteratively evolving running unmodified multithreaded software into newer versions, yet with very low performance overhead. The main idea in POLUS is a relaxed consistency model that permits the concurrent activity of the old and new code. POLUS borrows the idea of cache-coherence protocol in computer architecture and uses a "bidirectional write-through" synchronization protocol to ensure system consistency. To demonstrate the applicability of POLUS, we report our experience in using POLUS to dynamically update three prevalent server applications: vsftpd, sshd, and Apache HTTP server. Performance measurements show that POLUS incurs negligible runtime overhead on the three applications-a less than 1 percent performance degradation ( but 5 percent for one case). The time to apply an update is also minimal.
C1 [Chen, Haibo; Zang, Binyu] Fudan Univ, Parallel Proc Inst, Shanghai 201203, Peoples R China.
   [Yu, Jie] Univ Michigan, ACAL Lab, CSE Dept, Ann Arbor, MI 48109 USA.
   [Hang, Chengqun] Microsoft China Ltd, Shanghai 200030, Peoples R China.
   [Yew, Pen-Chung] Univ Minnesota Twin Cities, Dept Comp Sci & Engn, Minneapolis, MN 55455 USA.
C3 Fudan University; University of Michigan System; University of Michigan;
   University of Minnesota System; University of Minnesota Twin Cities
RP Chen, HB (corresponding author), Fudan Univ, Parallel Proc Inst, Room 301,Software Bldg,825 Zhangheng Rd, Shanghai 201203, Peoples R China.
EM hbchen@fudan.edu.cn; jieyu@umich.edu; chhang@microsoft.com;
   byzang@fudan.edu.cn; yew@cs.umn.edu
OI Yew, Pen-Chung/0000-0001-9653-8777
FU China National 973 Plan [2005CB321905]; Shanghai Leading Academic
   Discipline Project [B114];  [MOE-INTEL-09-04]; Division Of Computer and
   Network Systems; Direct For Computer & Info Scie & Enginr [0834599]
   Funding Source: National Science Foundation
FX This work was funded in parts by China National 973 Plan under grant
   numbered 2005CB321905, Shanghai Leading Academic Discipline Project
   (Project Number: B114), and a research grant from Intel numbered
   MOE-INTEL-09-04. The source code of POLUS and evolutionary tests are
   available with sourceforge (http://sourceforge.net/projects/polus/). The
   patch generator is distributed under the BSD License, others are based
   on GNU General Public License. A preliminary and abridged version of
   this paper was presented at the 29th International Conference on
   Software Engineering (ICSE '07).
CR Altekar G, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 14TH USENIX SECURITY SYMPOSIUM, P287
   [Anonymous], US TECHN C AN CA US
   [Anonymous], 2002, UCBCSD021175
   ARNOLD J, 2009, P EUROSYS
   Barber MR, 1997, PROCEEDINGS OF THE ELEVENTH SYSTEMS ADMINISTRATION CONFERENCE (LISA XI), P89
   Baumann A, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK: 2005 UNENIX ANNUAL TECHNICAL CONFERENCE, P279
   BAUMANN A, 2007, P USENIX ANN TECHN C
   BOYAPATI C, 2003, P ACM C OBJ OR PROGR, P403
   Buck B, 2000, INT J HIGH PERFORM C, V14, P317, DOI 10.1177/109434200001400404
   CHEN H, 2006, P 2 INT C VIRT EX EN, P35
   Chen HB, 2007, PROC INT CONF SOFTW, P271
   COOK RP, 1980, IEEE T SOFTWARE ENG, V6, P563, DOI 10.1109/TSE.1980.234505
   Demsky B, 2006, IEEE T SOFTWARE ENG, V32, P931, DOI 10.1109/TSE.2006.122
   DUGGAN D, 2001, P 6 ACM SIGPLAN INT, P62, DOI DOI 10.1145/507635.507645
   FABRY RS, 1976, P 2 INT C SOFTW ENG, P470
   FRIEDER O, 1991, J SYST SOFTWARE, V14, P111, DOI 10.1016/0164-1212(91)90096-O
   GILMORE S, 1997, ECSLFCS97378 U ED LA
   GREGERSEN AR, 2008, P CSMR 08, P23
   Gupta D, 1996, IEEE T SOFTWARE ENG, V22, P120, DOI 10.1109/32.485222
   GUPTA D, 1994, THESIS INDIAN I TECH
   Hicks M, 2005, ACM T PROGR LANG SYS, V27, P1049, DOI 10.1145/381694.378798
   Hjalmtysson G, 1998, PROCEEDINGS OF THE USENIX 1998 ANNUAL TECHNICAL CONFERENCE, P65
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   LEE I, 1983, THESIS U WISCONSIN
   LOWELL DE, 2004, ACM SIGOPS OPERATING, V38, P211
   Malabarba S, 2000, LECT NOTES COMPUT SC, V1850, P337
   *MICR CORP, 2007, WIND UPD AUT UPD
   NEAMTIU I, 2009, P ACM SIGPLAN C PROG
   NEAMTIU I, 2005, ACM SIGSOFT SOFTWARE, V30, P1
   Neamtiu I, 2006, ACM SIGPLAN NOTICES, V41, P72, DOI 10.1145/1133981.1133991
   Neamtiu I, 2008, POPL'08: PROCEEDINGS OF THE 35TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P37, DOI 10.1145/1328438.1328447
   Necula GC, 2002, LECT NOTES COMPUT SC, V2304, P213
   Oreizy P, 1998, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.1998.671114
   ORSO A, 2002, P IEEE INT C SOFTW M
   PESCOVITZ D, 2000, WIRED, V8, P341
   Segal M. E., 1989, Journal of Software Maintenance: Research and Practice, V1, P59, DOI 10.1002/smr.4360010106
   SEGAL ME, 1993, IEEE SOFTWARE, V10, P53, DOI 10.1109/52.199735
   Soules CAN, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK, P141
   Stanek J, 2006, PROC IEEE INT CONF S, P93
   Stoyle G, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1255450.1255455
   SUBRAMANIAN S, 2009, P ACM SIGPLAN C PROG
   Vandewoude Y, 2007, IEEE T SOFTWARE ENG, V33, P856, DOI 10.1109/TSE.2007.70733
NR 42
TC 25
Z9 32
U1 0
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2011
VL 37
IS 5
BP 679
EP 694
DI 10.1109/TSE.2010.79
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 823YC
UT WOS:000295162900005
DA 2024-07-18
ER

PT J
AU Kim, D
   Wang, XM
   Kim, SH
   Zeller, A
   Cheung, SC
   Park, S
AF Kim, Dongsun
   Wang, Xinming
   Kim, Sunghun
   Zeller, Andreas
   Cheung, S. C.
   Park, Sooyong
TI Which Crashes Should I Fix First?: Predicting Top Crashes at an Early
   Stage to Prioritize Debugging Efforts
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Top crash; machine learning; crash reports; social network analysis;
   data mining
ID SOFTWARE; RELIABILITY
AB Many popular software systems automatically report failures back to the vendors, allowing developers to focus on the most pressing problems. However, it takes a certain period of time to assess which failures occur most frequently. In an empirical investigation of the Firefox and Thunderbird crash report databases, we found that only 10 to 20 crashes account for the large majority of crash reports; predicting these "top crashes" thus could dramatically increase software quality. By training a machine learner on the features of top crashes of past releases, we can effectively predict the top crashes well before a new release. This allows for quick resolution of the most important crashes, leading to improved user experience and better allocation of maintenance efforts.
C1 [Kim, Dongsun; Park, Sooyong] Sogang Univ, Dept Comp Sci & Engn, Seoul 121742, South Korea.
   [Wang, Xinming; Kim, Sunghun; Cheung, S. C.] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Kowloon, Hong Kong, Peoples R China.
   [Zeller, Andreas] Univ Saarland, Dept Comp Sci, D-66123 Saarbrucken, Germany.
C3 Sogang University; Hong Kong University of Science & Technology;
   Saarland University
RP Kim, D (corresponding author), Sogang Univ, Dept Comp Sci & Engn, Seoul 121742, South Korea.
EM darkrsw@sogang.ac.kr; rubin@cse.ust.hk; hunkim@cse.ust.hk;
   zeller@acm.org; scc@cse.ust.hk; sypark@sogang.ac.kr
RI Wang, Xinming/A-7388-2014; Liu, Jingyi/JWP-6326-2024; Liu,
   Chenyu/KBQ-8899-2024; Kim, Dongsun/B-4856-2015; Cheung, Shing
   Chi/U-5882-2018
OI Wang, Xinming/0000-0002-1982-0928; Kim, Dongsun/0000-0003-0272-6860;
   Zeller, Andreas/0000-0003-4719-8803; Cheung, Shing
   Chi/0000-0002-3508-7172
FU Ministry of Knowledge Economy (MKE), Korea, under the Information
   Technology Research Center (ITRC) [NIPA-2010-C1090-1031-0008]; MKE,
   Korea; Research Grant Council of Hong Kong [612108]
FX This research was supported in part by The Ministry of Knowledge Economy
   (MKE), Korea, under the Information Technology Research Center (ITRC)
   support program supervised by the National IT Industry Promotion Agency
   (NIPA) (NIPA-2010-C1090-1031-0008), in part by the Intelligent Robotics
   Development Program, one of the Frontier R&D Programs (also funded by
   MKE, Korea), and in part by the Research Grant Council of Hong Kong
   (Project No. 612108). The authors would like to thank Christopher Van
   Der Westhuizen for his helpful ideas on earlier revisions of this paper,
   and the associate editor and the anonymous reviewers for insightful
   comments on earlier drafts.
CR ADAMS EN, 1984, IBM J RES DEV, V28, P2, DOI 10.1147/rd.281.0002
   Alpaydin E, 2004, INTRO MACHINE LEARNI
   [Anonymous], 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08
   Avritzer A, 1996, IEEE SOFTWARE, V13, P76, DOI 10.1109/52.536461
   BALL T, 1993, SIGPLAN NOTICES, V28, P300, DOI 10.1145/173262.155119
   Bayes T., 1763, Philosophical transactions of the Royal Society of London, V53, P370, DOI DOI 10.1098/RSTL.1763.0053
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Buse RPL, 2009, PROC INT CONF SOFTW, P144, DOI 10.1109/ICSE.2009.5070516
   Calder B, 1997, ACM T PROGR LANG SYS, V19, P188, DOI 10.1145/239912.239923
   Cho J, 1998, COMPUT NETWORKS ISDN, V30, P161, DOI 10.1016/S0169-7552(98)00108-1
   Demsky Brian., 2003, Proceedings of the 2003 ACM SIGPLAN Conference on Object-Oriented Programming Systems, Languages and Applications, OOPSLA 2003, October 26-30, 2003, Anaheim, CA, P78, DOI DOI 10.1145/949305.949314
   Ekanayake J, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P51, DOI 10.1109/MSR.2009.5069480
   Fenton N., 2000, INT C SOFTWARE ENG, P357, DOI DOI 10.1145/336512.336588
   FISHER JA, 1992, P 5 INT C ARCH SUPP, P85
   Godefroid P., 2008, P NETWORK DISTRIBUTE
   Goseva-Popstojanova K, 2007, P INT COMP SOFTW APP, P423
   GUPTA R, 2002, PROFILE GUIDED COMPI, P143
   Hamill M, 2009, IEEE T SOFTWARE ENG, V35, P484, DOI 10.1109/TSE.2009.3
   HANNEMAN R. A., 2005, Introduction to social network methods
   HOPFIELD JJ, 1982, P NATL ACAD SCI-BIOL, V79, P2554, DOI 10.1073/pnas.79.8.2554
   Jones JA, 2005, P 20 IEEE ACM INT C, P273
   JONES JA, 2007, P INT S SOFTW TEST A, P16, DOI DOI 10.1145/1273463.1273468
   Just S., 2008, P 16 ACM SIGSOFT INT, P308
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   KULLBACK S, 1951, ANN MATH STAT, V22, P79, DOI 10.1214/aoms/1177729694
   KULLBACK S, 1987, AM STAT, V41, P340
   Kullback S., 1959, STAT INFORM THEORY
   Liblit Ben., 2002, Building a Better Backtrace: Techniques for Postmortem Program Analysis
   Little R. J. A., 2002, STAT ANAL MISSING DA, DOI DOI 10.1002/9781119013563
   Liu C, 2006, P 14 ACM SIGSOFT INT, P46
   LOPEZ L, 2004, P 1 INT WORKSH MIN S
   Manevich R., 2004, Software Engineering Notes, V29, P63, DOI 10.1145/1041685.1029907
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Michail A, 2005, PROC INT CONF SOFTW, P107
   Michie D., 1994, MACHINE LEARNING NEU
   Miller A., 2002, SUBSET SELECTION REG
   Montgomery D.C., 2001, Engineering Statistics, V2nd
   MUNSON JC, 1999, P 32 ANN HAWAII INT, V8, P8004
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   Rumelhart D.E., 2013, Learning internal representations by error propagation, P399, DOI [10.1016/b978-1-4832-1446-7.50035-2, 10.1016/B978-1-4832-1446-7.50035-2]
   SHIVAJI S, 2009, P 24 IEEE ACM INT C
   WOODWARD MR, 1979, IEEE T SOFTWARE ENG, V5, P45, DOI 10.1109/TSE.1979.226497
   Zeller Andreas., 2002, Proceedings of the 10th ACM SIGSOFT Symposium on Foundations of Software Engineering, SIGSOFT '02/FSE-10, P1, DOI DOI 10.1145/587051.587053
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
   2009, CRASH REPORTER MAC O
   2009, MOZILLA CRASH REPORT
   2006, CONNECTING CUSTOMERS
   2009, UNDERSTAND C
   2009, MICROSOFT ONLINE CRA
   2006, CHALLENGE EXTERMINAT
NR 52
TC 47
Z9 54
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2011
VL 37
IS 3
BP 430
EP 447
DI 10.1109/TSE.2011.20
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 768KZ
UT WOS:000290934800009
DA 2024-07-18
ER

PT J
AU Bryce, RC
   Sampath, S
   Memon, AM
AF Bryce, Renee C.
   Sampath, Sreedevi
   Memon, Atif M.
TI Developing a Single Model and Test Prioritization Strategies for
   Event-Driven Software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Combinatorial interaction testing; covering arrays; event-driven
   software (EDS); t-way interaction coverage; test suite prioritization;
   user-session testing; Web application testing; GUI testing
AB Event-Driven Software (EDS) can change state based on incoming events; common examples are GUI and Web applications. These EDSs pose a challenge to testing because there are a large number of possible event sequences that users can invoke through a user interface. While valuable contributions have been made for testing these two subclasses of EDS, such efforts have been disjoint. This work provides the first single model that is generic enough to study GUI and Web applications together. In this paper, we use the model to define generic prioritization criteria that are applicable to both GUI and Web applications. Our ultimate goal is to evolve the model and use it to develop a unified theory of how all EDS should be tested. An empirical study reveals that the GUI and Web-based applications, when recast using the new model, show similar behavior. For example, a criterion that gives priority to all pairs of event interactions did well for GUI and Web applications; another criterion that gives priority to the smallest number of parameter value settings did poorly for both. These results reinforce our belief that these two subclasses of applications should be modeled and studied together.
C1 [Bryce, Renee C.] Utah State Univ, Dept Comp Sci, Logan, UT 84322 USA.
   [Sampath, Sreedevi] Univ Maryland Baltimore Cty, Dept Informat Syst, Baltimore, MD 21250 USA.
   [Memon, Atif M.] Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
C3 Utah System of Higher Education; Utah State University; University
   System of Maryland; University of Maryland Baltimore County; University
   System of Maryland; University of Maryland College Park
RP Bryce, RC (corresponding author), Utah State Univ, Dept Comp Sci, Old Main 414,4205 Old Main Hill, Logan, UT 84322 USA.
EM Renee.Bryce@usu.edu; sampath@umbc.edu; atif@cs.umd.edu
FU US National Science Foundation (NSF) [CCF-0447864, CNS-0855055]; US
   Office of Naval Research [N00014-05-1-0421]
FX The authors thank the anonymous reviewers whose comments and suggestions
   helped to extend the second research question, reshape its results, and
   improve the flow of the text. This work was partially supported by the
   US National Science Foundation (NSF) under NSF grants CCF-0447864 and
   CNS-0855055, and US Office of Naval Research grant N00014-05-1-0421.
CR ALSHAHWAN N, 2008, P INT C SOFTW TEST V, P298
   Andrews A, 2005, SOFTWARE SYSTEMS MOD, V4, P326, DOI DOI 10.1007/S10270-004-0077-7
   [Anonymous], COMM ACM
   Artzi Shay., 2008, P 2008 INT S SOFTWAR, P261, DOI [10.1145/1390630.1390662, DOI 10.1145/1390630.1390662]
   BINKLEY D, 1992, P IEEE C SOFTW MAINT, P41
   Brooks P, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P11, DOI 10.1109/ICST.2009.11
   Bryce R.C., 2007, WORKSHOP DOMAIN SPEC, P1
   Colbourn C.J., 2004, Le Matematiche, VLIX, P125
   Di Lucca GA, 2002, PROC IEEE INT CONF S, P310, DOI 10.1109/ICSM.2002.1167787
   Elbaum S, 2005, IEEE T SOFTWARE ENG, V31, P187, DOI 10.1109/TSE.2005.36
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Grindal M, 2005, SOFTW TEST VERIF REL, V15, P167, DOI 10.1002/stvr.319
   Halfond WilliamG. J., 2007, P THE 6 JOINT M EURO, P145
   Jeffrey D, 2006, P INT COMP SOFTW APP, P411
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Kung DC, 2000, FIRST ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P111, DOI 10.1109/APAQ.2000.883784
   LEE JAN, 1990, J SYST SOFTWARE, V13, P177, DOI 10.1016/0164-1212(90)90093-2
   Memon AM, 2005, IEEE T SOFTWARE ENG, V31, P884, DOI 10.1109/TSE.2005.117
   OFFUTT J, 1995, P 12 INT C TEST COMP, P111
   Ricca F, 2001, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2001.919078
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   SAMPATH S, 2008, P 1 INT C SOFTW TEST, P141
   Sampath S, 2007, IEEE T SOFTWARE ENG, V33, P643, DOI 10.1109/TSE.2007.70723
   SPRENKLE S, 2007, P 18 INT S SOFTW REL, P253
   Wang WH, 2008, IEEE HI ASS SYS ENGR, P209, DOI 10.1109/HASE.2008.53
   White LJ, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P350, DOI 10.1109/ICSM.1996.565038
   2009, WEB SITE TEST TOOLS
NR 28
TC 68
Z9 82
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2011
VL 37
IS 1
BP 48
EP 64
DI 10.1109/TSE.2010.12
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 712OS
UT WOS:000286676700004
DA 2024-07-18
ER

PT J
AU Chittimalli, PK
   Harrold, MJ
AF Chittimalli, Pavan Kumar
   Harrold, Mary Jean
TI Recomputing Coverage Information to Assist Regression Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 23rd IEEE International Conference on Software Maintenance
CY OCT 02-05, 2007
CL Paris, FRANCE
SP IEEE, IEEE Comp Soc, IEEE France Sect, TCSE, IEEE Comp Soc, Tech Council Software Engn, Reeng Forum, Univ Waterloo, Univ Studi Sannio
DE Regression testing; regression test selection; testing; maintenance
AB This paper presents a technique that leverages an existing regression test selection algorithm to compute accurate, updated coverage data on a version of the software, Pi+1, without rerunning any test cases that do not execute the changes from the previous version of the software, P-i to Pi+1. The technique also reduces the cost of running those test cases that are selected by the regression test selection algorithm by performing a selective instrumentation that reduces the number of probes required to monitor the coverage data. Users of our technique can avoid the expense of rerunning the entire test suite on Pi+1 or the inaccuracy produced by previous approaches that estimate coverage data for Pi+1 or that reuse outdated coverage data from P-i. This paper also presents a tool, RECOVER, that implements our technique, along with a set of empirical studies on a set of subjects that includes several industrial programs, versions, and test cases. The studies show the inaccuracies that can exist when an application-regression test selection-uses estimated or outdated coverage data. The studies also show that the overhead incurred by selective instrumentation used in our technique is negligible and overall our technique provides savings over earlier techniques.
C1 [Chittimalli, Pavan Kumar] Tata Res Dev & Design Ctr, Pune 411013, Maharashtra, India.
   [Harrold, Mary Jean] Georgia Inst Technol, Coll Comp, Atlanta, GA 30332 USA.
C3 University System of Georgia; Georgia Institute of Technology
RP Chittimalli, PK (corresponding author), Tata Res Dev & Design Ctr, 54 Hadapsar Ind Estate, Pune 411013, Maharashtra, India.
EM harrold@cc.gatech.edu
CR [Anonymous], 1990, Software testing techniques {
   Apiwattanapong T, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P2, DOI 10.1109/ASE.2004.1342719
   BALL T, 1998, P 25 ACM SIGPLAN SIG, P134
   CHAWLA A, 2004, P ISSTA WORKSH EMP R
   CHEN YF, 1994, PROC INT CONF SOFTW, P211
   CHITTIMALLI PK, 2004, P THEOR COMP SCI TEC
   Elbaum S, 2001, PROC IEEE INT CONF S, P170, DOI 10.1109/ICSM.2001.972727
   HARROLD MJ, 2001, P ACM C OBJ OR PROGR, P312
   KANER C, 1997, P QUAL WEEK C MAY
   Leung H. K. N., 1989, Proceedings: Conference on Software Maintenance (Cat. No.89CH2744-1), P60, DOI 10.1109/ICSM.1989.65194
   ORSO A, 2004, P 12 ACM SIGSOFT S F, P241
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Srivastava A., 2002, Software Engineering Notes, V27, P97, DOI 10.1145/566171.566187
   VOKOLOS FI, 1997, P 3 INT C REL QUAL S, P3
   Wang Z., 2000, J. Instr. Level Parallelism, V2, P1
NR 16
TC 31
Z9 35
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2009
VL 35
IS 4
BP 452
EP 469
DI 10.1109/TSE.2009.4
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 474TB
UT WOS:000268305800003
DA 2024-07-18
ER

PT J
AU Böde, E
   Herbstritt, M
   Hermanns, H
   Johr, S
   Peikenkamp, T
   Pulungan, R
   Rakow, J
   Wimmer, R
   Becker, B
AF Boede, Eckard
   Herbstritt, Marc
   Hermanns, Holger
   Johr, Sven
   Peikenkamp, Thomas
   Pulungan, Reza
   Rakow, Jan
   Wimmer, Ralf
   Becker, Bernd
TI Compositional Dependability Evaluation for STATEMATE
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Real-time and embedded systems; fault tolerance; modeling techniques;
   reliability; availability; serviceability; model checking; design
   notations and documentation; state diagrams
ID TIME
AB Software and system dependability is getting ever more important in embedded system design. Current industrial practice of model-based analysis is supported by state-transition diagrammatic notations such as Statecharts. State-of-the-art modeling tools like STATEMATE support safety and failure-effect analysis at design time, but restricted to qualitative properties. This paper reports on a (plug-in) extension of STATEMATE enabling the evaluation of quantitative dependability properties at design time. The extension is compositional in the way the model is augmented with probabilistic timing information. This fact is exploited in the construction of the underlying mathematical model, a uniform continuous-time Markov decision process, on which we are able to check requirements of the form: "The probability to hit a safety-critical system configuration within a mission time of 3 hours is at most 0.01." We give a detailed explanation of the construction and evaluation steps making this possible, and report on a nontrivial case study of a highspeed train signaling system where the tool has been applied successfully.
C1 [Boede, Eckard; Peikenkamp, Thomas] Inst Informat Technol, OFFIS, D-26121 Oldenburg, Germany.
   [Herbstritt, Marc; Wimmer, Ralf] Univ Freiburg, Fac Engn, D-79110 Freiburg, Germany.
   [Hermanns, Holger; Johr, Sven; Pulungan, Reza] Univ Saarland, Dept Comp Sci, D-66123 Saarbrucken, Germany.
   [Rakow, Jan] Carl von Ossietzky Univ Oldenburg, Dept Comp Sci, D-26121 Oldenburg, Germany.
C3 University of Freiburg; Saarland University; Carl von Ossietzky
   Universitat Oldenburg
RP Böde, E (corresponding author), Inst Informat Technol, OFFIS, D-26121 Oldenburg, Germany.
EM eckard.boede@offis.de; marc@herbstritt.info; hermanns@cs.uni-sb.de;
   sven.johr@twt-gmbh.de; thomas.peikenkamp@offis.de;
   pulungan@cs.uni-sb.de; jan.rakow@informatik.uni-oldenburg.de;
   wimmer.@informatik.uni-freiburg.de; becker@informatik.uni-freiburg.de
RI Pulungan, Reza/L-2098-2019
OI Pulungan, Reza/0000-0002-5019-1357; Bode, Eckard/0000-0001-8240-409X;
   Becker, Bernd/0000-0003-4031-3258; Wimmer, Ralf/0000-0003-4973-7479;
   Hermanns, Holger/0000-0002-2766-9615
FU German Research Council (DFG
FX The authors would like to thank Samuel Wischmeyer (Carl von Ossietzky
   University, Oldenburg) and Hubert Garavel (INRIA Rhones-Alpes) for their
   valuable support during the preparation of this paper. The comments
   received during the reviewing process were a great help in improving the
   paper. This work is supported by the German Research Council (DFG) as
   part of the Transregional Collaborative Research Center "Automatic
   Verification and Analysis of Complex Systems" (SFB/TR 14 AVACS). See
   www.avacs.org for more information.
CR ABATE J, 1993, AEU-ARCH ELEKTRON UB, V47, P311
   [Anonymous], 1998, BINARY DECISION DIAG, DOI DOI 10.1007/978-1-4757-2892-7
   Asmussen S, 1996, SCAND J STAT, V23, P419
   Baier C, 2005, THEOR COMPUT SCI, V345, P2, DOI 10.1016/j.tcs.2005.07.022
   Baier C, 2003, IEEE T SOFTWARE ENG, V29, P524, DOI 10.1109/TSE.2003.1205180
   *BCG MIN, 2008, PROJ WEBS
   BLOM S, 2003, ENTCS, V89, P99
   Böde E, 2006, INT CONF QUANT EVAL, P167
   BOUALI A, 1992, P 4 INT WORK COMP AI, P96
   BRAYTON RK, 1996, P 8 INT C COMP AID V
   BURCH JR, 1990, P 27 ACM IEEE DES AU, P46
   Clarke EM, 1999, MODEL CHECKING, P1
   DAMM W, 1998, REV LECT INT S COMP, P186
   DERISAVI S, 2007, P 13 INT C TOOLS ALG, P139
   Hansson H.A., 1994, Time and Probability in Formal Design of Distributed Systems
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   Harel D., 1998, MODELING REACTIVE SY
   HERBSTRITT M, 2006, 14 SFBTR AVACS
   Hermanns H, 2000, SCI COMPUT PROGRAM, V36, P97, DOI 10.1016/S0167-6423(99)00019-2
   HERMANNS H, 2008, P 14 GI ITG C MEAS M, P125
   Hermanns H., 2002, INTERACTIVE MARKOV C
   Hermanns H, 2007, I C DEPEND SYS NETWO, P718, DOI 10.1109/DSN.2007.96
   Hillston J., 1996, A Compositional Approach to Performance Modelling
   Hinton A, 2006, LECT NOTES COMPUT SC, V3920, P441
   Horváth A, 2002, LECT NOTES COMPUT SC, V2324, P82
   JOHNSON MA, 1988, 8820 PURD U PURD SCH
   JOHR S, 2007, THESIS SAARLAND U
   Kartson D., 1994, Modelling with generalized stochastic Petri nets
   Katoen JP, 2005, INT CONF QUANT EVAL, P243, DOI 10.1109/QEST.2005.2
   Khayari RE, 2003, PERFORM EVALUATION, V52, P175, DOI 10.1016/S0166-5316(02)00179-7
   MATSUNAGA Y, 1993, ACM IEEE D, P260
   Mitchell K, 1996, SIMUL SERIES, V28, P201
   Neuts MF., 1981, Matrix-Geometric Solutions in Stochastic Models
   PULUNGAN R, 2006, 14 SFBTR AVACS
   *SOC AUT ENG AER R, 1996, ARP4761 SOC AUT ENG
   Thümmler A, 2005, I C DEPEND SYS NETWO, P712, DOI 10.1109/DSN.2005.11
   VanGlabbeek RJ, 1996, J ACM, V43, P555, DOI 10.1145/233551.233556
   WIMMER R, 2007, P 17 ACM GREAT LAK S, P405
   WIMMER R, 2006, P IEEE WORK DES DIAG, P7
   WIMMER R, 2006, P 4 INT S AUT TECHN, P477
   Wolovick N, 2006, LECT NOTES COMPUT SC, V4202, P352
   [No title captured]
   2002, SYSTEM REQUIREMENTS, pCH2
NR 43
TC 26
Z9 27
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2009
VL 35
IS 2
BP 274
EP 292
DI 10.1109/TSE.2008.102
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 424FT
UT WOS:000264551600010
DA 2024-07-18
ER

PT J
AU Carnevali, L
   Grassi, L
   Vicario, E
AF Carnevali, Laura
   Grassi, Leonardo
   Vicario, Enrico
TI State-Density Functions over DBM Domains in the Analysis of
   Non-Markovian Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Correctness verification; performance and dependability; quantitative
   evaluation; stochastic Time Petri nets; dense-time state-space analysis;
   Difference Bounds Matrix; Markov Renewal Theory; approximate state-space
   representation; density function approximation; Bernstein polynomials
ID STOCHASTIC PETRI NETS
AB Quantitative evaluation of models with generally distributed transitions requires the analysis of non-Markovian processes that may be not isomorphic to their underlying untimed models and may include any number of concurrent nonexponential timers. The analysis of stochastic Time Petri Nets (sTPNs) copes with the problem by covering the state space with stochastic classes, which extend the theory of Difference Bounds Matrix (DBM) with a state probability density function. As a core step, the analysis process requires symbolic manipulation of density functions supported over DBM domains. We characterize and engineer the critical steps of this derivation. We first show that the state-density function accepts a continuous piecewise representation over a partition in DBM-shaped subdomains. We then develop a closed-form symbolic calculus of state-density functions under the assumption that transitions in the sTPN model have expolynomial distributions over possibly bounded intervals. The calculus shows that within each subdomain, the state-density function is a multivariate expolynomial function, and it makes explicit the way in which this form evolves and grows in complexity as the state accumulates memory through subsequent transitions. This enables an efficient implementation of the analysis process and provides the formal basis that supports the introduction of an imprecise analysis based on the approximation of state-density functions through Bernstein Polynomials. The approximation attacks practical and theoretical limits in the applicability of stochastic state classes and devises a new approach to the analysis of non-Markovian models, relying on approximations in the state space rather than in the structure of the model.
C1 [Carnevali, Laura; Grassi, Leonardo; Vicario, Enrico] Univ Florence, Dipartimento Sistemi & Informat, I-50139 Florence, Italy.
C3 University of Florence
RP Carnevali, L (corresponding author), Univ Florence, Dipartimento Sistemi & Informat, 3 Via S Marta, I-50139 Florence, Italy.
EM carnevali@dsi.unifi.it; grassi@dsi.unifi.it; vicario@dsi.unifi.it
RI vicario, enrico/ABG-4344-2020
OI vicario, enrico/0000-0002-4983-4386
FU SW Initiative of the Finmeccanica Group
FX This work was partially supported by the SW Initiative of the
   Finmeccanica Group under research line "Design and Verification Methods
   for Concurrent Real Time SW."
CR AJMONE MM, 1984, ACM T COMPUTER SYSTE
   ALUR R, 1990, P 5 S LOG COMP SCI J
   ALUR R, 1990, P 17 INT C AUT LANG
   [Anonymous], IFIP 9 WORLD COMP C
   [Anonymous], 2013, American Mathematical Soc.
   [Anonymous], 1989, P 3 INT WORKSH PETR
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   BEHRMANN G, 1999, P 11 INT C COMP AID
   BERTHOMIEU B, 1991, IEEE T SOFTWARE ENG, V17, P259, DOI 10.1109/32.75415
   Berthomieu B., 2004, INT J PRODUCTION RES, V42
   BOBBIO A, 1994, STOCH MODELS, V10, P661
   Bucci G, 2004, IEEE T SOFTWARE ENG, V30, P97, DOI 10.1109/TSE.2004.1265815
   BUCCI G, 2004, P 1 INT C QUANT EV S
   BUCCI G, 2005, P 2 INT C QUANT EV S
   CARNEVALI L, IEEE T SOFT IN PRESS
   CASSEZ F, 2000, IMPRESSIVE POWER STO
   CHOI H, 1994, PERFORM EVALUATION, V20, P337, DOI 10.1016/0166-5316(94)90021-3
   CIARDO G, 1994, IEEE T SOFTWARE ENG, V20, P506, DOI 10.1109/32.297939
   DAWS C, 1995, P HYBRID SYSTEMS 3
   Dill D., 1989, P WORKSH COMP AID VE
   Feldmann A, 1998, PERFORM EVALUATION, V31, P245, DOI 10.1016/S0166-5316(97)00003-5
   Gardey G, 2005, LECT NOTES COMPUT SC, V3576, P418
   German R., 1999, Proceedings 8th International Workshop on Petri Nets and Performance Models (Cat. No.PR00331), P64, DOI 10.1109/PNPM.1999.796537
   GERMAN R, 1995, P 3 INT WORKSH MOD A
   Lindemann C, 1999, PERFORM EVALUATION, V36-7, P35, DOI 10.1016/S0166-5316(99)00020-6
   Lindemann C, 1996, PERFORM EVALUATION, V27-8, P565, DOI 10.1016/0166-5316(96)00021-1
   Manolache S, 2002, IEEE/ACM INTERNATIONAL CONFERENCE ON CAD-02, DIGEST OF TECHNICAL PAPERS, P699, DOI 10.1109/ICCAD.2002.1167608
   MERLIN PM, 1976, IEEE T COMM, V24
   MOLLOY MK, 1985, IEEE T SOFTWARE ENG, V11, P417, DOI 10.1109/TSE.1985.232230
   Neuts MF., 1981, Matrix-Geometric Solutions in Stochastic Models
   PENCZEK W, 2004, P 25 INT C APPL THEO
   SASSOLI L, 2006, P 4 INT C QUANT EV S
   SASSOLI L, 2007, P 5 INT C QUANT EV S
   Sauer T., 1991, Computer-Aided Geometric Design, V8, P465, DOI 10.1016/0167-8396(91)90031-6
   Telek M, 1998, IEEE INTERNATIONAL COMPUTER PERFORMANCE AND DEPENDABILITY SYMPOSIUM -PROCEEDINGS, P44, DOI 10.1109/IPDS.1998.707708
   Teruel E, 2003, IEEE T SOFTWARE ENG, V29, P962, DOI 10.1109/TSE.2003.1245298
   Vicario E, 2001, IEEE T SOFTWARE ENG, V27, P728, DOI 10.1109/32.940727
   *WOLFRAMRESEARCH, 2009, MATH 5 2
   Zimmermann A, 2000, LECT NOTES COMPUT SC, V1786, P188
NR 39
TC 23
Z9 23
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2009
VL 35
IS 2
BP 178
EP 194
DI 10.1109/TSE.2008.101
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 424FT
UT WOS:000264551600004
DA 2024-07-18
ER

PT J
AU Capra, E
   Francalanci, C
   Merlo, F
AF Capra, Eugenio
   Francalanci, Chiara
   Merlo, Francesco
TI An Empirical Study on the Relationship among Software Design Quality,
   Development Effort, and Governance in Open Source Projects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Organizational management and coordination; qualitative process
   analysis; software complexity measures; software cost estimation;
   software quality concepts; structural equation modeling
ID OBJECT-ORIENTED SOFTWARE; METRICS SUITE; CYCLE TIME; MAINTENANCE;
   VALIDATION; COMPLEXITY; MODEL; COST
AB The relationship among software design quality, development effort, and governance practices is a traditional research problem. However, the extent to which consolidated results on this relationship remain valid for open source ( OS) projects is still an open research problem. An emerging body of literature contrasts the view of OS as an alternative to proprietary software and explains that there exists a continuum between closed and OS projects. This paper takes this perspective and hypothesizes that, as projects approach the OS end of the continuum, governance becomes less formal. In turn, a less formal governance is hypothesized to require a higher quality code as a means to facilitate coordination among developers by making the structure of code explicit and observable and, at the same time, facilitate quality by removing the pressure of deadlines from contributors. However, a less formal governance is also hypothesized to increase development effort due to a more cumbersome coordination overhead. The verification of research hypotheses is based on empirical data from a sample of 75 major OS projects. Empirical evidence supports our hypotheses and suggests that software design quality, mainly measured as coupling and inheritance, per se does not increase development effort, but represents an important managerial variable to implement the more open governance approach that characterizes OS projects, which, in turn, increases development effort.
C1 [Capra, Eugenio; Francalanci, Chiara; Merlo, Francesco] Politecn Milan, Dept Elect & Informat, I-20133 Milan, Italy.
C3 Polytechnic University of Milan
RP Capra, E (corresponding author), Politecn Milan, Dept Elect & Informat, Via Ponzio 34-5, I-20133 Milan, Italy.
EM capra@elet.polimi.it; francala@elet.polimi.it; merlo@elet.polimi.it
CR Agrawal M, 2007, IEEE T SOFTWARE ENG, V33, P145, DOI 10.1109/TSE.2007.29
   Ahn Y, 2003, J SOFTW MAINT EVOL-R, V15, P71, DOI 10.1002/smr.269
   [Anonymous], BUSINESS HORIZONS
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], 2003, The art of UNIX programming
   [Anonymous], 2003, CMMI guidlines for process integration and product improvement
   Arbuckle JL., 2003, AMOS 5 0 UPDATE AMOS
   Bagozzi RP, 1998, Journal of the academy of marketing science, V16, P76
   Banker RD, 1998, MANAGE SCI, V44, P433, DOI 10.1287/mnsc.44.4.433
   Basili V, 1996, PROC INT CONF SOFTW, P464, DOI 10.1109/ICSE.1996.493441
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BASILI VR, 1981, IEEE T SOFTWARE ENG, V7, P299, DOI 10.1109/TSE.1981.230841
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   BENTLER PM, 1990, PSYCHOL BULL, V107, P238, DOI 10.1037/0033-2909.88.3.588
   BERGUS J, 2005, 5 TYPES OPEN SOURCE
   Bhattacherjee A, 2001, MIS QUART, V25, P351, DOI 10.2307/3250921
   BIANCHI A, 2001, P 7 INT SOFTW METR S, P210
   Binkley AB, 1998, PROC INT CONF SOFTW, P452, DOI 10.1109/ICSE.1998.671604
   BOEHM B, 2002, BALANCING AGILITY DI
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   Boehm BW., 1981, Software Engineering Economics
   Boulanger A, 2005, IBM SYST J, V44, P239, DOI 10.1147/sj.442.0239
   Briand L., 1996, Empirical Software Engineering, V1, P61, DOI 10.1007/BF00125812
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Brito e Abreu F., 1995, P ECOOP WORKSH METR
   CAPRA E, 2008, P INT C OP SOURC SYS
   CAPRA E, 2007, P 1 INT WORKSH EM TR
   CAPRA E, 2007, P INT C SOFTW MAINT, P395
   Capra E., 2008, THESIS POLITECNICO M
   Carmines E. G., 1981, Social measurement: Current issues, P65
   Chan TZ, 1996, IEEE T SOFTWARE ENG, V22, P580, DOI 10.1109/32.536958
   Chapin N, 2001, J SOFTW MAINT EVOL-R, V13, P3, DOI 10.1002/smr.220
   CHEN JY, 1993, INFORM SOFTWARE TECH, V35, P232, DOI 10.1016/0950-5849(93)90071-A
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   Darcy DP, 2005, IEEE T SOFTWARE ENG, V31, P982, DOI 10.1109/TSE.2005.130
   EKANAYAKE J, 2007, P INT WORKSH PRINC S, P11
   Emerson T. J., 1984, Proceedings of the 7th International Conference on Software Engineering (cat. no. 84CH2011-5), P294
   Fielding RT, 1999, COMMUN ACM, V42, P42, DOI 10.1145/299157.299167
   Fitzgerald B, 2004, COMPUTER, V37, P92, DOI 10.1109/MC.2004.38
   Fitzgerald B, 2006, MIS QUART, V30, P587
   Fogel K., 2006, Producing open source software
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   Fowler Martin., 2001, Refactoring: Improving the Design of Existing Code
   Ghezzi C, 2002, Fundamentals of Software Engineering
   Goldman R., 2005, INNOVATION HAPPENS E
   GOMES PJ, 2004, COSTS COORDINATING D
   Goth G, 2005, IEEE SOFTWARE, V22, P98, DOI 10.1109/MS.2005.157
   Graves TL, 2001, TECHNOMETRICS, V43, P168, DOI 10.1198/004017001750386288
   GRIFFITHS M, 2006, AGILE J          OCT
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hair J.F., 1995, MULTIVARIATE DATA AN
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Harrison R, 1998, IEEE T SOFTWARE ENG, V24, P491, DOI 10.1109/32.689404
   Harter DE, 2000, MANAGE SCI, V46, P451, DOI 10.1287/mnsc.46.4.451.12056
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   Herbsleb JD, 1996, PROC INT CONF SOFTW, P323, DOI 10.1109/ICSE.1996.493427
   Hitz M, 1996, IEEE T SOFTWARE ENG, V22, P267, DOI 10.1109/32.491650
   Hitz M., 1995, PROC INT S APPL CORP
   HOWISON J, 2005, 1 MONDAY ONLINE  FEB, V10
   HOWISON J, 2004, P INT WORKSH MIN SOF, P7
   Hu LT, 1999, STRUCT EQU MODELING, V6, P1, DOI 10.1080/10705519909540118
   Ishikawa K., 1989, INTRO QUALITY CONTRO
   *ISO IEC, 2003, 91262003 TR ISOIEC
   *ISO IEC, 2005, 200002005 TR ISOIEC
   Jurison J., 1999, COMMUN AIS, V2, P2, DOI DOI 10.17705/1CAIS.00217
   Kaplan D., 2000, Advanced Quantitative Techniques in the Social Sciences Series, V10
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Kersten M, 2005, P 2005 INT C ASP OR, P159, DOI DOI 10.1145/1052898.1052912
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Kirsch LJ, 1996, ORGAN SCI, V7, P1, DOI 10.1287/orsc.7.1.1
   Kline R.B., 1988, PRINCIPLES PRACTICE
   Knab P., 2006, P 2006 INT WORKSHOP, P119
   Koch S, 2004, LECT NOTES COMPUT SC, V3092, P85
   KOMURO M, 2006, P 28 INT C SOFTW ENG, P577
   Kvale S., 1996, INTERVIEW VIEWS INTR
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Li W., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P52, DOI 10.1109/METRIC.1993.263801
   LIENTZ B, 1981, SOFTWARE MAINTENANCE
   Lincke R, 2007, COMPENDIUM SOFTWARE
   MACCORMACK A, 2006, MANAGEMENT SCI   JUL, P1015
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mens T., 2001, P 4 INT WORKSHOP PRI, P83, DOI [DOI 10.1145/602461.602476, 10.1145/602461.602476]
   Michlmayr M., 2004, P USENIX ANN TECHN C, P39
   MONGA M, 2004, P WORKSH OP SOURC SO, P71
   Nagappan N., 2006, P 28 INT C SOFTW ENG, P452, DOI DOI 10.1145/1134285.1134349
   Oviedo E.I., 1980, Proc. IEEE COMPSAC, Chicago, P146
   Park R., 1992, Tech. Rep. CMU/SEI-92-TR-020
   Ramil JF, 2003, PROC IEEE INT CONF S, P289, DOI 10.1109/ICSM.2003.1235433
   Renz PS, 2007, CONTRIB ECON, P1
   Riehle D, 2007, COMPUTER, V40, P25, DOI 10.1109/MC.2007.147
   Robbes Romain., 2007, MSR 07, P15
   ROSENBERG LH, 1998, APPL INTERPRETING OB
   Sharble R. C., 1993, SIGSOFT Software Engineering Notes, V18, P60, DOI 10.1145/159420.155839
   Slaughter SA, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P197, DOI 10.1109/ICSM.1996.565007
   Slaughter SA, 1998, COMMUN ACM, V41, P67, DOI 10.1145/280324.280335
   SLAUGHTER SA, 2006, P INT C OP SOURC SYS, P297
   Sonnenfeld J, 2004, ACAD MANAGE EXEC, V18, P108, DOI 10.5465/AME.2004.12689497
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   SYMONS CR, 1988, IEEE T SOFTWARE ENG, V14, P2, DOI 10.1109/32.4618
   Tan Y, 2005, IEEE T SOFTWARE ENG, V31, P238, DOI 10.1109/TSE.2005.30
   Tervonen I, 1998, INFORM SOFTWARE TECH, V39, P995, DOI 10.1016/S0950-5849(97)00060-8
   TILLE A, 2007, CUSTOM DEBIAN DISTRI
   TROY D, 1993, MCGRAWHILL INT SERIE, P214
   TUCKER LR, 1973, PSYCHOMETRIKA, V38, P1, DOI 10.1007/bf02291170
   VANGENUCHTEN M, 1991, IEEE T SOFTWARE ENG, V17, P582, DOI 10.1109/32.87283
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zhou YM, 2006, IEEE T SOFTWARE ENG, V32, P771, DOI 10.1109/TSE.2006.102
   ZIMMERMANN T, 2007, P WORKSH PRED MOD SO
NR 110
TC 58
Z9 69
U1 1
U2 24
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2008
VL 34
IS 6
BP 765
EP 782
DI 10.1109/TSE.2008.68
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 376HR
UT WOS:000261175200004
DA 2024-07-18
ER

PT J
AU Rutherford, MJ
   Carzaniga, A
   Wolf, AL
AF Rutherford, Matthew J.
   Carzaniga, Antonio
   Wolf, Alexander L.
TI Evaluating test suites and adequacy criteria using simulation-based
   models of distributed systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 14th ACM SIGSOFT International Symposium on Foundations of Software
   Engineering
CY NOV, 2006
CL Portland, OR
SP ACM SIGSOFT
DE distributed systems; discrete-event simulation; test adequacy criteria;
   fault-based analysis
ID ERROR-DETECTION CAPABILITY; GENERATING TEST DATA; FAULT CLASSES;
   SPECIFICATION; MUTATION; PROTOCOL
AB Test adequacy criteria provide the engineer with guidance on how to populate test suites. While adequacy criteria have long been a focus of research, existing testing methods do not address many of the fundamental characteristics of distributed systems, such as distribution topology, communication failure, and timing. Furthermore, they do not provide the engineer with a means to evaluate the relative effectiveness of different criteria nor the relative effectiveness of adequate test suites satisfying a given criterion. This paper makes three contributions to the development and use of test adequacy criteria for distributed systems: 1) a testing method based on discrete-event simulations, 2) a fault-based analysis technique for evaluating test suites and adequacy criteria, and 3) a series of case studies that validate the method and technique. The testing method uses a discrete-event simulation as an operational specification of a system in which the behavioral effects of distribution are explicitly represented. Adequacy criteria and test cases are then defined in terms of this simulation-based specification. The fault-based analysis involves mutation of the simulation-based specification to provide a foil against which test suites and the criteria that formed them can be evaluated. Three distributed systems were used to validate the method and technique, including the Domain Name System (DNS).
C1 [Rutherford, Matthew J.] Univ Denver, Dept Comp Sci, Denver, CO 80208 USA.
   [Carzaniga, Antonio] Univ Lugano, Fac Informat, CH-6904 Lugano, Switzerland.
   [Wolf, Alexander L.] Univ London Imperial Coll Sci Technol & Med, Dept Comp, London SW7 2AZ, England.
C3 University of Denver; Universita della Svizzera Italiana; Imperial
   College London
RP Rutherford, MJ (corresponding author), Univ Denver, Dept Comp Sci, 2260 S Gaylord St, Denver, CO 80208 USA.
EM mjr@cs.du.edu; antonio.carzaniga@unisi.ch; a.wolf@imperial.ac.uk
CR Allman M., 1999, Computer Communication Review, V29, P59, DOI 10.1145/505696.505703
   Ammann P. E., 2001, INT J RELIABILITY QU, V8, P275, DOI DOI 10.1142/S0218539301000530
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], P 3 INT WORKSH SOFTW
   BOCHMANN GV, 1994, P INT S SOFTW TEST A, P109
   Briand LC, 2004, PROC INT CONF SOFTW, P86, DOI 10.1109/ICSE.2004.1317431
   Carver RH, 1998, IEEE T SOFTWARE ENG, V24, P471, DOI 10.1109/32.689403
   CHANG J, 1999, P 7 EUR SOFTW ENG C, P285
   Clarke I, 2002, IEEE INTERNET COMPUT, V6, P40, DOI 10.1109/4236.978368
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Denaro G., 2004, em Proceedings of the fourth international workshop on Software and performance - WOSP'04, P94, DOI DOI 10.1145/974044.974059
   Devore J.L., 2000, Probability and Statistics for Engineering and the Sciences, V5th
   Dowling E. J., 1989, Proceedings. TRI-Ada '89, P517, DOI 10.1145/74261.74300
   DURAN JW, 1981, P 5 INT C SOFTW ENG, P179
   Fabbri S. C. P. F., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P210, DOI 10.1109/ISSRE.1999.809326
   Frankl P., 1991, 4 S TESTING ANAL VER, P154
   Frankl PG, 1997, J SYST SOFTWARE, V38, P235, DOI 10.1016/S0164-1212(96)00154-9
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P774, DOI 10.1109/32.238581
   FRANKL PG, 1993, PROC INT CONF SOFTW, P415, DOI 10.1109/ICSE.1993.346024
   FRANKL PG, 1988, IEEE T SOFTWARE ENG, V14, P1483, DOI 10.1109/32.6194
   FRANKL PG, 1998, P 6 ACM SIGSOFT INT, P153
   FRANKLIN JF, 1993, ECOL APPL, V3, P202, DOI 10.2307/1941820
   Ghosh S, 2002, IEEE INT C ENG COMP, P7, DOI 10.1109/ICECCS.2002.1181493
   Ghosh S, 2001, SIXTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, P106, DOI 10.1109/HASE.2001.966812
   Ghosh S, 2001, SOFTW TEST VERIF REL, V11, P227, DOI 10.1002/stvr.239
   Ghosh S., 1999, P 1 INT ICSE WORKSH
   Grundy J., 2005, Automated Software Engineering, V12, P5, DOI 10.1023/B:AUSE.0000049207.62380.74
   HAMLET D, 1990, IEEE T SOFTWARE ENG, V16, P1402, DOI 10.1109/32.62448
   Harder M, 2003, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2003.1201188
   Hierons RM, 2002, ACM T SOFTW ENG METH, V11, P427, DOI 10.1145/606612.606615
   HUBBARD A, 1995, P C CTR ADV STUD COL, P32
   Hughes D, 2004, FOURTH INTERNATIONAL CONFERENCE ON PEER-TO-PEER COMPUTING, PROCEEDINGS, P262, DOI 10.1109/PTP.2004.1334956
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jin ZY, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P308, DOI 10.1109/ISSRE.2001.989484
   Krishnamurthy P, 2001, PROC INT CONF SOFTW, P201
   Kuhn DR, 1999, ACM T SOFTW ENG METH, V8, P411, DOI 10.1145/322993.322996
   Kurose J.F., 2004, COMPUTER NETWORKING, V3rd
   Lai R, 2002, J SYST SOFTWARE, V62, P21, DOI 10.1016/S0164-1212(01)00132-7
   Liu CJ, 1997, INT CON DISTR COMP S, P12, DOI 10.1109/ICDCS.1997.597804
   Long B, 2001, DOA'01: 3RD INTERNATIONAL SYMPOSIUM ON DISTRIBUTED OBJECTS & APPLICATIONS, PROCEEDINGS, P20, DOI 10.1109/DOA.2001.954068
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Marainen Johannes., 1996, Norrbotten, P62
   Muccini H, 2004, IEEE T SOFTWARE ENG, V30, P160, DOI 10.1109/TSE.2004.1271170
   NTAFOS S, 1998, P INT S SOFTW TEST A, P42
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt AJ, 1999, J SYST SOFTWARE, V49, P49, DOI 10.1016/S0164-1212(99)00066-7
   Offutt J, 2003, SOFTW TEST VERIF REL, V13, P25, DOI 10.1002/stvr.264
   Osterweil L, 1996, ACM COMPUT SURV, V28, P738, DOI 10.1145/242223.242288
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   RICHARDSON D, 1996, P 2 INT SOFTW ARCH W, P68
   RICHARDSON DJ, 1989, ACM SIGSOFT, V14, P86, DOI 10.1145/75309.75319
   RICHARDSON DJ, 1993, IEEE T SOFTWARE ENG, V19, P533, DOI 10.1109/32.232020
   SOUZA SDR, 1999, SOFTWARE QUALITY CON, V8, P285
   Stoica I, 2003, IEEE ACM T NETWORK, V11, P17, DOI 10.1109/TNET.2002.808407
   Tsuchiya T, 2002, ACM T SOFTW ENG METH, V11, P58, DOI 10.1145/504087.504089
   WANG Y, 2005, ASE, P164, DOI DOI 10.1145/1101908.1101934
   WEYUKER E, 1994, IEEE T SOFTWARE ENG, V20, P353, DOI 10.1109/32.286420
   WEYUKER EJ, 1991, IEEE T SOFTWARE ENG, V17, P703, DOI 10.1109/32.83906
   Williams AW, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P246, DOI 10.1109/ISSRE.1996.558835
   Williams AW, 2001, ACS/IEEE INTERNATIONAL CONFERENCE ON COMPUTER SYSTEMS AND APPLICATIONS, PROCEEDINGS, P304, DOI 10.1109/AICCSA.2001.934001
NR 61
TC 16
Z9 18
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2008
VL 34
IS 4
BP 452
EP 470
DI 10.1109/TSE.2008.33
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 330JI
UT WOS:000257936500003
DA 2024-07-18
ER

PT J
AU Zachariadis, S
   Mascolo, C
   Emmerich, W
AF Zachariadis, Stefanos
   Mascolo, Cecilia
   Emmerich, Wolfgang
TI The SATIN component system - A metamodel for engineering adaptable
   mobile systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE distributed objects; components; containers; mobile systems; middleware;
   pervasive computing; mobile code
AB Mobile computing devices, such as personal digital assistants and mobile phones, are becoming increasingly popular, smaller, and more capable. We argue that mobile systems should be able to adapt to changing requirements and execution environments. Adaptation requires the ability to reconfigure the deployed code base on a mobile device. Such reconfiguration is considerably simplified if mobile applications are component-oriented rather than monolithic blocks of code. We present the SATIN (System Adaptation Targeting Integrated Networks) component metamodel, a lightweight local component metamodel that offers the flexible use of logical mobility primitives to reconfigure the software system by dynamically transferring code. The metamodel is implemented in the SATIN middleware system, a component-based mobile computing middleware that uses the mobility primitives defined in the metamodel to reconfigure both itself and applications that it hosts. We demonstrate the suitability of SATIN in terms of lightweightedness, flexibility, and reusability for the creation of adaptable mobile systems by using it to implement, port, and evaluate a number of existing and new applications, including an active network platform developed for satellite communication at the European Space Agency. These applications exhibit different aspects of adaptation and demonstrate the flexibility of the approach and the advantages gained.
C1 UCL, Dept Comp Sci, London WC1E 6BT, England.
C3 University of London; University College London
RP Zachariadis, S (corresponding author), UCL, Dept Comp Sci, Gower St, London WC1E 6BT, England.
EM s.zachariadis@cs.ucl.ac.uk; c.mascolo@cs.ucl.ac.uk;
   w.emmerich@cs.ucl.ac.uk
OI Mascolo, Cecilia/0000-0001-9614-4380
CR [Anonymous], 2004, P 1 IEEE WORKSH EMB
   [Anonymous], OSGI FRAM
   [Anonymous], 2003, UN MOD LANG VERS 1 5
   Arnold K., 1999, JINI SPECIFICATION
   Beckwith RM, 2004, MENT RETARD, V42, P67, DOI 10.1352/0047-6765(2004)42<67:WTREPS>2.0.CO;2
   Capra L, 2005, INTERNATIONAL CONFERENCE ON PERVASIVE SERVICES 2005, PROCEEDINGS, P453, DOI 10.1109/PERSER.2005.1506566
   CAPRA L, 2004, P 12 INT S FDN SOFTW, P107
   Cervantes H, 2004, PROC INT CONF SOFTW, P614, DOI 10.1109/ICSE.2004.1317483
   Cervantes H., 2002, Software infrastructures for component-based applications on consumer devices
   CHINNICI R, 2003, WORLD WID WEB CONS M
   Clarke M., 2001, P IFIPACM INT C DIST, P160
   Cugola G, 2002, 22ND INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOP, PROCEEDINGS, P359, DOI 10.1109/ICDCSW.2002.1030795
   Emmerich W., 2000, ENG DISTRIBUTED OBJE
   *EUR SPAC AG, 2005, PROGR ACT NETW NEXT
   Fuggetta A, 1998, IEEE T SOFTWARE ENG, V24, P342, DOI 10.1109/32.685258
   Grace P, 2003, 23RD INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOPS, P382
   GRIMES R, 1997, DCOM PROGRAMMING
   GRIMM R, 2000, P 9 ACM SIGOPS EUR W, P177
   Hall R. S., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P174, DOI 10.1109/ICSE.1999.841007
   IJAHA M, 2004, THESIS U COLL LONDON
   Kort T., 2004, SONYS EXIT PDA MARKE
   LITIU R, 2000, P 2000 ACM C COMP SU, P107
   Mascolo C., 2004, MIDDLEWARE COMM, P261
   Mikic-Rakic M, 2002, LECT NOTES COMPUT SC, V2370, P31
   MONSONHAEFEL R, 1999, ENTERPRISE JAVABEANS
   MURDOCK I, 1994, LINUX J, V6
   Murphy CK, 2001, MED DECIS MAKING, V21, P368, DOI 10.1177/0272989X0102100503
   Necula G.C., 1997, 24 ANN S PRINCIPLES, P106
   *OBJ MAN GROUP, 2000, MET OBJ FAC MOF SPEC
   *OBJ MAN GROUP, 1997, CORBA COMP MOD
   *OBJ MAN GROUP, 2004, CORBA COMP MOD DEPL
   Pardo-Castellote G, 2003, 23RD INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOPS, P200
   PICCO GP, 1998, P 2 INT WORKSH MOB A
   Power J., 1990, P 1990 ACM ANN C COO, P379
   ROMAN M, 2004, P 5 ACM IFIP USENIX, P372
   ROMAN M, 2001, IEEE DISTRIBUTED JUL
   *RUNES, 2004, RUNES PROJ REC UB NE
   *SATIN OP SOURC PR, 2005, SATIN COMP MOD
   Satyanarayanan M, 1996, IEEE PERS COMMUN, V3, P26, DOI 10.1109/98.486973
   SCHMIDT DC, 2006, COMPONENT INTEGRATED
   *SEC EXP IN, 2003, SEINIT PROJ
   Smith B.C., 1982, Ph.D. thesis
   SOLEY RM, 1992, OBJECT MANAGEMENT AR
   Szyperski C., 2002, COMPONENT SOFTWARE, V2nd
   Tennenhouse DL, 1997, IEEE COMMUN MAG, V35, P80, DOI 10.1109/35.568214
   Waldo J, 1999, COMMUN ACM, V42, P76, DOI 10.1145/306549.306582
   Weinsberg Y, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P374, DOI 10.1109/ICSE.2002.1007983
   Wheeler D.A., 2004, SLOCCOUNT
   *XIPH ORG FDN, 1998, OGG VORB PROJ
   ZACHARIADIS S, 2005, THESIS U LONDON
   ZACHARIADIS S, 2004, P COOPIS DOA ODBASE, P1303
   ZELKOWITZ MV, 1997, P C EMP ASS EV SOFTW
   2004, PALMSOURCE DEV PROGR
   1998, UPNP FOR
NR 54
TC 15
Z9 20
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2006
VL 32
IS 11
BP 910
EP 927
DI 10.1109/TSE.2006.115
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 101EE
UT WOS:000241720900005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Andrews, JH
   Briand, LC
   Labiche, Y
   Namin, AS
AF Andrews, James H.
   Briand, Lionel C.
   Labiche, Yvan
   Namin, Akbar Siami
TI Using mutation analysis for assessing and comparing testing coverage
   criteria
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE testing and debugging; testing strategies; test coverage of code;
   experimental design
ID TOOL
AB The empirical assessment of test techniques plays an important role in software testing research. One common practice is to seed faults in subject software, either manually or by using a program that generates all possible mutants based on a set of mutation operators. The latter allows the systematic, repeatable seeding of large numbers of faults, thus facilitating the statistical analysis of fault detection effectiveness of test suites; however, we do not know whether empirical results obtained this way lead to valid, representative conclusions. Focusing on four common control and data flow criteria ( Block, Decision, C-Use, and P-Use), this paper investigates this important issue based on a middle size industrial program with a comprehensive pool of test cases and known faults. Based on the data available thus far, the results are very consistent across the investigated criteria as they show that the use of mutation operators is yielding trustworthy results: Generated mutants can be used to predict the detection effectiveness of real faults. Applying such a mutation analysis, we then investigate the relative cost and effectiveness of the above-mentioned criteria by revisiting fundamental questions regarding the relationships between fault detection, test suite size, and control/data flow coverage. Although such questions have been partially investigated in previous studies, we can use a large number of mutants, which helps decrease the impact of random variation in our analysis and allows us to use a different analysis approach. Our results are then compared with published studies, plausible reasons for the differences are provided, and the research leads us to suggest a way to tune the mutation analysis process to possible differences in fault detection probabilities in a specific environment.
C1 Univ Western Ontario, Dept Comp Sci, London, ON N6A 5B7, Canada.
   Fornebu, Dept Software Engn, Simula Res Lab, N-1325 Lysaker, Norway.
   Carleton Univ, Software Qual Engn Lab, Ottawa, ON K1S 5B6, Canada.
C3 Western University (University of Western Ontario); Carleton University
RP Andrews, JH (corresponding author), Univ Western Ontario, Dept Comp Sci, London, ON N6A 5B7, Canada.
EM andrews@csd.uwo.ca; briand@simula.no; labiche@sce.carleton.ca;
   asiamina@csd.uwo.ca
OI Labiche, Yvan/0000-0001-8880-4836
CR Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   Andrews JH, 2003, IEEE T SOFTWARE ENG, V29, P634, DOI 10.1109/TSE.2003.1214327
   [Anonymous], 1990, Software testing techniques {
   Briand LC, 2004, PROC INT CONF SOFTW, P86, DOI 10.1109/ICSE.2004.1317431
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   Campbell D.T., 1990, EXPT QUASIEXPERIMENT
   Cheng RS, 2002, MAR BIOTECHNOL, V4, P218, DOI 10.1007/s10126-002-0014-0
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Eubank RL., 1988, Spline Smoothing and Nonparametric Regression
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Frankl P., 1991, 4 S TESTING ANAL VER, P154
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P774, DOI 10.1109/32.238581
   FRANKL PG, 1998, P 6 ACM SIGSOFT INT, P153
   Hamlet Dick., 2001, The Engineering of Software
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Harder M, 2003, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2003.1201188
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Kim SW, 2001, SOFTW TEST VERIF REL, V11, P207, DOI 10.1002/stvr.238
   Kirk RE, 1996, EDUC PSYCHOL MEAS, V56, P746, DOI 10.1177/0013164496056005002
   LYU MR, 1994, IEEE T RELIAB, V43, P527, DOI 10.1109/24.370230
   Memon A, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P164, DOI 10.1109/ASE.2003.1240304
   Offut A. J., 1997, Software Testing, Verification and Reliability, V7, P165, DOI 10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   OFFUTT AJ, 1992, ACM T SOFTW ENG METH, V1, P3
   Offutt J., 2000, Proc. Mutat. 2000 Mutat. Test. Twent. Twenty First Centuries, P45
   Pasquini A, 1996, IEEE T RELIAB, V45, P531, DOI 10.1109/24.556576
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   RYAN T, 1996, MODERN REGRESSION ME
   THEVENODFOSSE P, 1991, P 21 INT S FAULT TOL, P410, DOI DOI 10.1109/FTCS.1991.146694
   VOKOLOS VI, 1998, P IEEE INT C SOFTW M, P44
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   WONG WE, 1997, TR173P SERC
NR 33
TC 284
Z9 328
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2006
VL 32
IS 8
BP 608
EP 624
DI 10.1109/TSE.2006.83
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 081XU
UT WOS:000240351700007
DA 2024-07-18
ER

PT J
AU Lei, S
   Smith, MR
AF Lei, S
   Smith, MR
TI Evaluation of several nonparametric bootstrap methods to estimate
   confidence intervals for software metrics
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Efron bootstrap; software metrics; confidence intervals; correction of
   possible biases in Efron bootstrap estimates
ID RELIABILITY; MODEL
AB Sample statistics and model parameters can be used to infer the properties, or characteristics, of the underlying population in typical data-analytic situations. Confidence intervals can provide an estimate of the range within which the true value of the statistic lies. A narrow confidence interval implies low variability of the statistic, justifying a strong conclusion made from the analysis. Many statistics used in software metrics analysis do not come with theoretical formulas to allow such accuracy assessment. The Efron bootstrap statistical analysis appears to address this weakness. In this paper, we present an empirical. analysis of the reliability of several Efron nonparametric bootstrap methods in assessing the accuracy of sample statistics in the context of software metrics. A brief review on the basic concept of various methods available for the estimation of statistical errors is provided, with the stated advantages of the Efron bootstrap discussed. Validations of several different bootstrap algorithms are performed across basic software metrics in both simulated and industrial software engineering contexts. It was found that the 90 percent confidence intervals for mean, median, and Spearman correlation coefficients were accurately predicted. The 90 percent confidence intervals for the variance and Pearson correlation coefficients were typically underestimated (60-70 percent confidence interval), and those for skewness and kurtosis overestimated (98-100 percent confidence interval). It was found that the Bias-corrected and accelerated bootstrap approach gave the most consistent confidence intervals, but its accuracy depended on the metric examined. A method for correcting the under-/ overestimation of bootstrap confidence intervals for small data sets is suggested, but the success of the approach was found to be inconsistent across the tested metrics.
C1 Gen Dynam Canada, Calgary, AB T2E 8P2, Canada.
   Univ Calgary, Dept Elect & Comp Engn, Calgary, AB T2N 1N4, Canada.
C3 University of Calgary
RP Lei, S (corresponding author), Gen Dynam Canada, 1020 68th Ave,NE, Calgary, AB T2E 8P2, Canada.
CR Barber JA, 2000, STAT MED, V19, P3219, DOI 10.1002/1097-0258(20001215)19:23<3219::AID-SIM623>3.0.CO;2-P
   BRIAND LC, 1999, ISERN9916
   Carpenter J, 2000, STAT MED, V19, P1141, DOI 10.1002/(SICI)1097-0258(20000515)19:9<1141::AID-SIM479>3.0.CO;2-F
   CHENG R, 1995, P WINT SIM C
   Cho K, 1997, IEEE T PATTERN ANAL, V19, P1185, DOI 10.1109/34.632979
   Efron B., 1993, INTRO BOOTSTRAP, VVolume 914, DOI DOI 10.1007/978-1-4899-4541-9
   Efron B., 1992, 6 QUESTIONS RAISED B
   Efron B., 1986, Statist. Sci, V1, P54
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   HARNETT DL, 1970, INTRO STAT METHODS, P186
   Hinkley D. V., 1997, Bootstrap methods and their applications
   LEI S, 2001, THESIS U CALGARY CAN
   LEI S, 2002, P IEEE CAN C COMP EN
   LITTLEWOOD B, 1979, IEEE T RELIAB, V28, P241, DOI 10.1109/TR.1979.5220576
   Llorca J, 2000, STAT MED, V19, P1089, DOI 10.1002/(SICI)1097-0258(20000430)19:8<1089::AID-SIM411>3.0.CO;2-0
   MARKUS MT, 1990, P BOOTSTR REL TECHN
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P465, DOI 10.1109/32.922716
   Shao J., 2012, JACKKNIFE BOOTSTRAP
   SUCCI G, 1998, P WORLD MULT SYST CY
   Walpole Ronald., 1985, PROBABILITY STAT ENG, P259
   WEBGAIN I, 2000, WEBGAIN QUALITY ANAL
   ZOUBIR A, 1993, ADV SIGNAL PROCESSIN, V20, P216
   ZOUBIR A, 1988, IEEE SIGNAL PROCESSI, P56
NR 24
TC 31
Z9 34
U1 0
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2003
VL 29
IS 11
BP 996
EP 1004
DI 10.1109/TSE.2003.1245301
PG 9
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 740KU
UT WOS:000186402200004
DA 2024-07-18
ER

PT J
AU Menzies, T
   Di Stefano, JS
AF Menzies, T
   Di Stefano, JS
TI More success and failure factors in software reuse
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE reuse; machine learning
AB Numerous discrepancies exist between expert opinion and empirical data reported in Morisio et al.'s recent TSE article. The differences related to what factors encouraged successful reuse in software organizations. This note describes how those differences were detected and comments on their methodological implications.
C1 W Virginia Univ, Dept Comp Sci, Morgantown, WV 26506 USA.
C3 West Virginia University
RP Menzies, T (corresponding author), W Virginia Univ, Dept Comp Sci, POB 6109, Morgantown, WV 26506 USA.
RI Menzies, Tim/X-7680-2019
OI Menzies, Tim/0000-0002-5040-3196
CR ABTS C, 1998, COCOMO 2 MODEL DEFIN
   Agrawal R., 1993, P 1993 ACM SIGMOD C
   [Anonymous], 1992, C4 5 PROGRAMS MACHIN
   Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   Frank E., 1999, Data Mining: Practical Machine Learning Tools and Techniques with Java Implementations
   LUTZ R, 2003, IN PRESS J SYSTEMS S
   LUTZ R, 2003, UNPUB EMPIRICAL ANAL
   MENZIES T, 2002, ANN SOFTWARE ENG
   Menzies T., 2002, P 27 NASA SEL WORKSH
   Morisio M, 2002, IEEE T SOFTWARE ENG, V28, P340, DOI 10.1109/TSE.2002.995420
NR 10
TC 11
Z9 15
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2003
VL 29
IS 5
BP 474
EP 477
DI 10.1109/TSE.2003.1199076
PG 4
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 675HM
UT WOS:000182688000008
DA 2024-07-18
ER

PT J
AU Bandi, RK
   Vaishnavi, VK
   Turk, DE
AF Bandi, RK
   Vaishnavi, VK
   Turk, DE
TI Predicting maintenance performance using object-oriented design
   complexity metrics
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE object-oriented metrics; software maintenance; metrics validation;
   predicting software maintenance time
ID SOFTWARE; SYSTEMS; QUALITY; VALIDATION; MODELS; SUITE
AB The Object-Oriented (OO) paradigm has become increasingly popular in recent years. Researchers agree that, although maintenance may turn out to be easier for OO systems, it is unlikely that the maintenance burden will completely disappear. One approach to controlling software maintenance costs is the utilization of software metrics during the development phase, to help identify. potential problem areas. Many new metrics have been proposed for OO systems, but only a few of them have been validated. The purpose of this research is to empirically explore the validation of three existing OO design complexity metrics and, specifically, to assess their ability to predict maintenance time. This research reports the results of validating three metrics, Interaction Level (IL), Interface Size (IS), and Operation Argument Complexity (OAC). A controlled experiment was conducted to investigate the effect of design complexity (as measured by the above metrics) on maintenance time. Each of the three metrics by itself was found to be useful in the experiment in predicting maintenance performance.
C1 Indian Inst Management, Quantitat Methods & Informat Syst Dept, Bangalore 560076, Karnataka, India.
   Georgia State Univ, Dept Comp Informat Syst, Atlanta, GA 30302 USA.
   Colorado State Univ, Comp Informat Syst Dept, Ft Collins, CO 80523 USA.
C3 Indian Institute of Management (IIM System); Indian Institute of
   Management Bangalore; University System of Georgia; Georgia State
   University; Colorado State University
RP Bandi, RK (corresponding author), Indian Inst Management, Quantitat Methods & Informat Syst Dept, Bannerghatta Rd, Bangalore 560076, Karnataka, India.
EM rbandi@iimb.ernet.in; vvaishna@gsu.edu; dan.turk@business.colostate.edu
CR ABBOTT D, 1993, THESIS CLEMSON U
   ABBOTT DH, 1994, 94105 TR CLEM U COMP
   ABREU BF, 1995, P 3 INT SOFTW METR S
   ABREU FBE, 1994, J SYST SOFTWARE, V26, P87, DOI 10.1016/0164-1212(94)90099-X
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], 1977, TREATISE BASIC PHILO
   Antoniol G, 2000, ANN SOFTW ENG, V9, P35, DOI 10.1023/A:1018916522804
   BANDI RK, 1998, THESIS GEORGIA STATE
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Binkley AB, 1996, INFORM PROCESS LETT, V58, P271, DOI 10.1016/0020-0190(96)00059-2
   BOOCH G, 1986, IEEE T SOFTWARE ENG, V12, P211, DOI 10.1109/TSE.1986.6312937
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P722, DOI 10.1109/32.815329
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   CHEN JY, 1993, INFORM SOFTWARE TECH, V35, P232, DOI 10.1016/0950-5849(93)90071-A
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHIDAMBER SR, 1991, P OOPSLA 91, P197
   CHURCHER NI, 1995, IEEE T SOFTWARE ENG, V21, P263, DOI 10.1109/32.372153
   COLEMAN D, 1995, J SYST SOFTWARE, V29, P3, DOI 10.1016/0164-1212(94)00125-7
   CURTIS B, 1979, IEEE T SOFTWARE ENG, V5, P96, DOI 10.1109/TSE.1979.234165
   DECHAMPEAUX D, 1997, OBJECT ORIENTED DEV
   Etzkorn L, 1999, J OBJECT-ORIENT PROG, V12, P35
   Fiutem R, 1998, PROC IEEE INT CONF S, P94, DOI 10.1109/ICSM.1998.738497
   GIBSON VR, 1989, COMMUN ACM, V32, P347, DOI 10.1145/62065.62073
   Harrison R, 1998, IEEE T SOFTWARE ENG, V24, P491, DOI 10.1109/32.689404
   Henderson-Sellers B., 1996, Software Engineering Notes, V21, P89, DOI 10.1145/235969.235994
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   HENRY S, 1990, IEEE SOFTWARE    MAR, P36
   Hitz M, 1996, IEEE T SOFTWARE ENG, V22, P267, DOI 10.1109/32.491650
   KOLEWE R, 1993, SOFTWARE DEV     OCT, P53
   LEITNZ BP, 1980, SOFTWARE MAINTENCE M
   LI W, 1995, J OBJECT-ORIENT PROG, V8, P48
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Mancl D., 1990, Proceedings. Conference on Software Maintenance 1990 (Cat. No.90CH2921-5), P63, DOI 10.1109/ICSM.1990.131325
   NETER J, 1990, ANAL VARIANCE EXPT D
   Pearse T, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P295, DOI 10.1109/ICSM.1995.526551
   RISING LS, 1992, THESIS ARIZONA STATE
   ROMBACH HD, 1990, IEEE SOFTWARE, V7, P17, DOI 10.1109/52.50770
   ROMBACH HD, 1987, IEEE T SOFTWARE ENG, V13, P344, DOI 10.1109/TSE.1987.233165
   SNEE RD, 1977, TECHNOMETRICS, V19, P415, DOI 10.2307/1267881
   SNEED HM, 1999, P 7 INT WORKSH PROGR
   SNEED HM, 1999, P EUR SOFTW CONTR ME
   STONE M, 1974, J R STAT SOC B, V36, P111, DOI 10.1111/j.2517-6161.1974.tb00994.x
   TAYLOR DA, 1993, OBJECT MAGAZINE  MAR, P22
   TEGARDEN DP, 1995, DECIS SUPPORT SYST, V13, P241, DOI 10.1016/0167-9236(93)E0045-F
   Venables W.N., 1999, Modern Applied Statistics with S-Plus (Statistics and Computing), V3rd
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   WILDE N, 1992, IEEE T SOFTWARE ENG, V18, P1038, DOI 10.1109/TSE.1992.1263033
NR 49
TC 97
Z9 103
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2003
VL 29
IS 1
BP 77
EP 87
DI 10.1109/TSE.2003.1166590
PG 11
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 633GD
UT WOS:000180273500006
DA 2024-07-18
ER

PT J
AU Foundjem, A
   Eghan, EE
   Adams, B
AF Foundjem, Armstrong
   Eghan, Ellis E.
   Adams, Bram
TI A Grounded Theory of Cross-Community SECOs: Feedback Diversity Versus
   Synchronization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Grounded theory; software ecosystem; cross-community; feedback
   diversity; sustainability; influence maximization
ID SOFTWARE; ECOSYSTEMS; ALGORITHMS; EVOLUTION
AB Despite their proliferation, growing sustainable software ecosystems (SECOs) remains a substantial challenge. One approach to mitigate this challenge is by collecting and integrating feedback from distributors (distros) and end-users of the SECO releases into future SECO releases, tools, or policies. This paper performs a socio-technical analysis of cross-community collaboration in the OpenStack SECO, which consists of the upstream OpenStack project and 21 distribution (distro) communities. First, we followed Masood et al.'s adaptation of Strauss-Corbinian grounded theory methodology for socio-technical contexts on data from an open-ended unstructured interview, a survey, focus groups, and 384 mailing list threads to investigate how SECOs manage to sustain cross-community collaboration. Our theory has 15 constructs divided into four categories: diverse feedback types and mechanisms (2), characteristics of feedback (2), challenges (7), and the benefits (4) of cross-community collaboration. We then empirically study the salient aspects of the theory, i.e., diversity and synchronization, among 21 OpenStack distros. We empirically mined feedback that distros contribute to upstream, i.e., 140,261 mailing list threads, 142,914 bugs reported, 65,179 bugs resolved, and 4,349 new features. Then, we use influence maximization social network analysis to model the synchronization of feedback in the OpenStack SECO. Our results suggest that distros contribute substantially towards the sustainability of the SECO in the form of 25.6% of new features, 30.7% of emails, 44.3% of bug reports, and 30.7% of bug fixes. Finally, we found evidence of distros playing different roles in a SECO, with nine distros contributing all four types of feedback in equal proportions, while 12 distros specialize in one type of feedback. Distros that are influential in propagating a given type of feedback to the SECO community are not necessarily specialized in that feedback type.
C1 [Foundjem, Armstrong; Adams, Bram] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
   [Eghan, Ellis E.] Univ Cape Coast, 4P48 59H, Cape Coast, Cent Region, Ghana.
C3 Queens University - Canada; University of Cape Coast
RP Foundjem, A (corresponding author), Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
EM a.foundjem@queensu.ca; ellis.eghan@ucc.edu.gh; bram.adams@queensu.ca
RI Foundjem, Armstrong/JGE-5293-2023
OI Adams, Bram/0000-0001-7213-4006
CR Abdullai L., 2022, P INT C SOFTW BUS, P182, DOI 10.1007/978-3-031-20706-813
   Abou Khalil Z, 2019, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2019.00010
   Abramson SF, 2022, AM J POLIT SCI, V66, P1008, DOI 10.1111/ajps.12714
   Adams B, 2016, EMPIR SOFTW ENG, V21, P960, DOI 10.1007/s10664-015-9371-y
   Ai J, 2020, IEEE ACCESS, V8, P151242, DOI 10.1109/ACCESS.2020.3017701
   Avelino G., 2019, PROC ACMIEEE ESEM, P1
   Banerjee S, 2019, EXPERT SYST APPL, V125, P1, DOI 10.1016/j.eswa.2019.01.070
   Bihari A, 2015, 2015 1ST INTERNATIONAL CONFERENCE ON FUTURISTIC TRENDS ON COMPUTATIONAL ANALYSIS AND KNOWLEDGE MANAGEMENT (ABLAZE), P510, DOI 10.1109/ABLAZE.2015.7154915
   Bird Christian, 2006, INT C SOFTWARE ENG P, P137, DOI DOI 10.1145/1137983.1138016
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Boisselle V, 2015, IEEE INT WORK C SO, P131, DOI 10.1109/SCAM.2015.7335409
   Bosch Jan, 2009, 2009 13 INT SOFTW PR, V9, P111, DOI DOI 10.1145/1753235.1753251
   Brooks FrederickP., 1978, The Mythical Man-Month: Essays on Softw, V1st
   Burström T, 2022, IEEE T ENG MANAGE, DOI 10.1109/TEM.2022.3216633
   Canfora G, 2014, EMPIR SOFTW ENG, V19, P1, DOI 10.1007/s10664-012-9214-z
   Chen ZF, 2022, INFORM SOFTWARE TECH, V145, DOI 10.1016/j.infsof.2022.106849
   Cheung M, 2017, ACM T MULTIM COMPUT, V13, DOI 10.1145/2978771
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Corbin J., 2023, Techniques and Procedures for Developing Grounded Theory, V3rd
   Ding H, 2017, ASIA PAC SOFWR ENG, P318, DOI 10.1109/APSEC.2017.38
   Foundjem A., A grounded theory of open sourcecrosscommunities feedback mechanisms, DOI [10.5281/zenodo.8102482, DOI 10.5281/ZENODO.8102482]
   Foundjem A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10167-w
   Foundjem A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09929-1
   Foundjem Armstrong., 2020, Cross-Distribution Feedback in Software Ecosystems, page, P723
   German Daniel., 2003, In Proceedings of the 3rd Workshop on Open Source Software Engineering, P63
   German DM, 2016, EMPIR SOFTW ENG, V21, P260, DOI 10.1007/s10664-014-9356-2
   Ghosh S, 2018, INT PARALL DISTRIB P, P885, DOI 10.1109/IPDPS.2018.00098
   Glaser B, 1967, Discovery of grounded theory strategies for qualitative research, DOI [10.4324/9780203793206, DOI 10.4324/9780203793206]
   Glaser BG, 2007, HIST SOC RES, P47
   Goeminne M, 2013, SCI COMPUT PROGRAM, V78, P971, DOI 10.1016/j.scico.2011.11.004
   Goldenberg D, 2018, IEEE T COMPUT SOC SY, V5, P621, DOI 10.1109/TCSS.2018.2852742
   Gralha C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P823, DOI 10.1145/3180155.3180158
   Guo J, 2020, ACM Trans. Knowl. Discov. Data, V14, P1
   Hagberg A. A., 2008, EXPLORING NETWORK ST, P11, DOI DOI 10.1016/J.JELECTROCARD.2010.09.003
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Herbold S, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110802
   Hinterreiter D, 2018, IEEE INT C EMERG, P107, DOI 10.1109/ETFA.2018.8502557
   Hoda R, 2022, IEEE T SOFTWARE ENG, V48, P3808, DOI 10.1109/TSE.2021.3106280
   Hoda R, 2021, PROC IEEE ACM INT C, P326, DOI 10.1109/ICSE-Companion52605.2021.00139
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   Imtiaz S., 2023, J. Softw., DOI [10.22541/au.167826966.63644398/v1, DOI 10.22541/AU.167826966.63644398/V1]
   Jansen S, 2009, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE-COMPANION.2009.5070978
   Johnson D, 2020, 2020 4TH INTERNATIONAL WORKSHOP ON CROWD-BASED REQUIREMENTS ENGINEERING (CROWDRE 2020), P1, DOI 10.1109/CrowdRE51214.2020.00007
   Joshua JV, 2013, INT J ADV COMPUT SC, V4, P242
   Jungseul Ok, 2014, ACM SIGMETRICS Performance Evaluation Review, V42, P301, DOI 10.1145/2591971.2591991
   Kapoor K, 2021, J BUS RES, V128, P94, DOI 10.1016/j.jbusres.2021.01.060
   Kempe David, 2003, P 9 ACM SIGKDD INT C, P137, DOI DOI 10.1145/956750.956769
   Krishna RJ, 2018, PROCEEDINGS OF THE 2018 SECOND INTERNATIONAL CONFERENCE ON INVENTIVE COMMUNICATION AND COMPUTATIONAL TECHNOLOGIES (ICICCT), P669, DOI 10.1109/ICICCT.2018.8473246
   Lakens D, 2022, COLLABRA-PSYCHOL, V8, DOI 10.1525/collabra.33267
   Lettner Daniela., 2014, Proceedings of the 2014 International Conference on Software and System Process, page, P40, DOI DOI 10.1145/2600821.2600826
   Liu B, 2018, IEEE T CIRCUITS-II, V65, P346, DOI 10.1109/TCSII.2017.2705482
   Ma WWY, 2020, PROC INT CONF SOFTW, P100, DOI 10.1145/3377811.3380442
   Ma WWY, 2017, PROC INT CONF SOFTW, P381, DOI 10.1109/ICSE.2017.42
   Malcher P., 2022, arXiv
   Manikas K, 2013, J SYST SOFTWARE, V86, P1294, DOI 10.1016/j.jss.2012.12.026
   Maskin E., 2001, SCH SOC SCI, V11, P1
   Masood Z, 2022, IEEE T SOFTWARE ENG, V48, P1579, DOI 10.1109/TSE.2020.3025317
   Mens T, 2017, Arxiv, DOI arXiv:1711.04532
   Mens T, 2016, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2016.19
   Mistrík I, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P389, DOI 10.1007/978-3-642-10294-3_19
   Morrison-Smith S, 2020, SN APPL SCI, V2, DOI 10.1007/s42452-020-2801-5
   Mueller D, 2019, IEEE SOFTWARE, V36, P23, DOI 10.1109/MS.2019.2936177
   Newman MEJ, 2005, CONTEMP PHYS, V46, P323, DOI 10.1080/00107510500052444
   Nobrega S, 2021, INT J QUAL METH, V20, DOI 10.1177/16094069211019896
   Oliveira J, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P296, DOI 10.1109/SEAA53835.2021.00045
   Palomba F, 2021, IEEE T SOFTWARE ENG, V47, P108, DOI 10.1109/TSE.2018.2883603
   Rigby P. C., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories (MSR '07), P23, DOI [10.1109/MSR.2007.35, DOI 10.1109/MSR.2007.35]
   Rodríguez P, 2022, IEEE T SOFTWARE ENG, V48, P466, DOI 10.1109/TSE.2020.2989666
   Rothe Jorg, 2015, Economics and computation, V4
   Sariyuce Ahmet Erdem, 2013, 2013 IEEE International Conference on Big Data, P487, DOI 10.1109/BigData.2013.6691611
   Sarker S., 2001, Data Base for Advances in Information Systems, V32, P38
   Schueller W, 2022, SCI DATA, V9, DOI 10.1038/s41597-022-01819-z
   Sedano T, 2017, PROC INT CONF SOFTW, P130, DOI 10.1109/ICSE.2017.20
   Shastri Y, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09899-4
   Shastri Y, 2021, J SYST SOFTWARE, V173, DOI 10.1016/j.jss.2020.110871
   Sheng K, 2018, C IND ELECT APPL, P2797, DOI 10.1109/ICIEA.2018.8398185
   Shull F, 2008, GUIDE ADV EMPIRICAL
   Silakov D., 2014, P 10 CENTR E EUR SOF
   Sousa L, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P921, DOI 10.1145/3180155.3180239
   Steinmacher I, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P256, DOI 10.1145/3180155.3180208
   Stoycheff E, 2020, INFORM COMMUN SOC, V23, P474, DOI 10.1080/1369118X.2018.1518472
   Strauss A., 1990, BASICS QUALITATIVE R
   Suleman Muhammad, 2020, 2020 International Symposium on Computer Engineering and Intelligent Communications (ISCEIC), P14, DOI 10.1109/ISCEIC51027.2020.00011
   Teixeira J., 2014, PROC 18 EASE, P1
   Teixeira JA, 2019, J INTERNET SERV APPL, V10, DOI 10.1186/s13174-019-0105-z
   Tizard J, 2019, INT REQUIR ENG CONF, P428, DOI 10.1109/RE.2019.00057
   Virtanen P, 2020, NAT METHODS, V17, P261, DOI 10.1038/s41592-019-0686-2
   Wiese IS, 2016, PROC IEEE INT CONF S, P345, DOI 10.1109/ICSME.2016.13
   Yin LK, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1056, DOI 10.1145/3468264.3468563
   Zhang JL, 2017, ADV INTEL SYS RES, V132, P300
   Zhang Yuxia, 2022, ESEC/FSE 2022: Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P1048, DOI 10.1145/3540250.3549117
   Zhang YX, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3510849
   Zhang YX, 2022, COMPUTER, V55, P78, DOI 10.1109/MC.2021.3133052
   Zhang YX, 2020, PROC INT CONF SOFTW, P1196, DOI 10.1145/3377811.3380376
   Zhang YX, 2018, PROC IEEE ACM INT C, P440, DOI 10.1145/3183440.3195047
NR 95
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2023
VL 49
IS 10
BP 4731
EP 4750
DI 10.1109/TSE.2023.3313875
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA Y1NF7
UT WOS:001102997400012
DA 2024-07-18
ER

PT J
AU Guo, SK
   Lin, HR
   Zhao, JR
   Li, H
   Chen, R
   Li, XC
   Jiang, H
AF Guo, Shikai
   Lin, Haorui
   Zhao, Jiaoru
   Li, Hui
   Chen, Rong
   Li, Xiaochen
   Jiang, He
TI An Easy Data Augmentation Approach for Application Reviews Event
   Inference
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Application reviews event inference; data augmentation; Confident
   Learning
AB Application review event inference aims to assess the effectiveness of application problems in response to user actions, which enables application developers to promptly discover and address potential issues in various applications, thereby improving their development and maintenance efficiency. Despite the development of event inference models for app reviews, which extract them as user action and app problem events and establish a relationship model between events and inference labels, the accuracy of these models is constrained due to limitations in labeling and characterizing noise and the lack of robustness and generalization. To address this challenge, we propose a model called Easy Data Augmentation for Application Reviews Event Inference (short for EDA-AREI), which comprises a denoising component, data augmentation component, and event inference prediction component. Specifically, the denoising component identifies labels and characterizes noisy data to enhance dataset quality, the data augmentation component replaces non-stop words with synonyms to increase textual diversity, and the event inference and prediction component reconstructs the classifier using denoised and augmented data. Experimental results on six datasets of one-star app reviews in the Apple App Store demonstrate that the EDA-AREI method achieves an Accuracy of 71.19%, 79.14%, 69.05%, 69.02%, 68.24% and 68.48%, respectively, representing an improvement of 0.83%-2.09% compared to state-of-the-art models. Regarding the F1-score, EDA-AREI achieves values of 71.30%, 69.93%, and 68.76% on the threshold_0.5, k-means_2, and random datasets, respectively, outperforming state-of-the-art models by 1.89%-4.02%. Furthermore, EDA-AREI achieves AUC values of 75.66% and 73.37% on the threshold_0.5 and k-means_2 datasets, respectively. As a result, EDA-AREI demonstrates substantial improvements in Accuracy, as well as enhanced F1-score and AUC across most datasets, thereby enhancing the model's accuracy and robustness in identifying related action-problem pairs.
C1 [Guo, Shikai; Lin, Haorui; Zhao, Jiaoru; Li, Hui; Chen, Rong] Dalian Maritime Univ, Sch Informat Sci & Technol, Dalian 116026, Peoples R China.
   [Guo, Shikai] Dalian Key Lab Artificial Intelligence, Dalian 116024, Peoples R China.
   [Li, Xiaochen; Jiang, He] Dalian Univ Technol, Sch Software, Dalian 116024, Peoples R China.
   [Li, Xiaochen; Jiang, He] Key Lab Ubiquitous Network & Serv Software Liaonin, Dalian 116024, Peoples R China.
C3 Dalian Maritime University; Dalian University of Technology
RP Li, H (corresponding author), Dalian Maritime Univ, Sch Informat Sci & Technol, Dalian 116026, Peoples R China.
EM shikai.guo@dlmu.edu.cn; lhr_dlmu@163.com; zjr@dlmu.edu.cn;
   li_hui@dlmu.edu.cn; rchen@dlmu.edu.cn; xiaochen.li@dlut.edu.cn;
   jianghe@dlut.edu.cn
RI Liu, Donghua/KEJ-1974-2024; Chen, Liang/JXX-7887-2024; Wang,
   Jinlong/KHC-3829-2024; Wang, Yunwen/KBR-2884-2024; LI,
   LIXIN/KFS-0074-2024; Zhang, Xiaoyu/JXR-6386-2024; Yu, Yan/KCL-1047-2024
OI Liu, Donghua/0000-0002-5830-9540; Wang, Yunwen/0009-0008-3083-7799; Yu,
   Yan/0000-0003-2233-344X
FU National Natural Science Foundation of China [62032004, 61902050];
   Xinghai Scholar Awards of DUT; Dalian Excellent Young Project
   [2022RY35]; Fundamental Research Funds for the Central Universities
   [DUT22RC(3)028, DUT22ZD101]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grants 62032004 and 61902050, in part by
   Xinghai Scholar Awards of DUT, in part by the Dalian Excellent Young
   Project under Grant 2022RY35, and in part by the Fundamental Research
   Funds for the Central Universities under Grants DUT22RC(3)028 and
   DUT22ZD101.
CR [Anonymous], SwiftKey feedback forums." Bugzilla.
   Bacchelli A, 2012, PROC INT CONF SOFTW, P375, DOI 10.1109/ICSE.2012.6227177
   Beamer B, 2009, LECT NOTES COMPUT SC, V5449, P430, DOI 10.1007/978-3-642-00382-0_35
   Bugzilla, About us
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Cer D, 2018, Arxiv, DOI [arXiv:1803.11175, DOI 10.48550/ARXIV.1803.11175]
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Coulombe C, 2018, Arxiv, DOI arXiv:1812.04718
   Dang YN, 2012, PROC INT CONF SOFTW, P1084, DOI 10.1109/ICSE.2012.6227111
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Guo HY, 2019, Arxiv, DOI arXiv:1905.08941
   Guo H, 2020, PROC INT CONF SOFTW, P628, DOI 10.1145/3377811.3380924
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Han B, 2018, ADV NEUR IN, V31, DOI 10.5555/3327757.3327944
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hu ZC, 2017, 18TH ANNUAL MEETING OF THE SPECIAL INTEREST GROUP ON DISCOURSE AND DIALOGUE (SIGDIAL 2017), P342
   Hu Zhichao, 2017, P EV STOR NEWS WORKS, P52
   Huang JC, 2019, IEEE I CONF COMP VIS, P3325, DOI 10.1109/ICCV.2019.00342
   Jiao XQ, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P4163
   Kumar V, 2021, Arxiv, DOI arXiv:2003.02245
   Kurtanovic Z, 2017, INT REQUIR ENG CONF, P61, DOI 10.1109/RE.2017.86
   Luque F.M., 2019, P IB LANG EV FOR COL, P561
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Mani I., 2006, PROC 21 INT C COMPUT
   McGill Michael, 1984, Introduction to Modern Information Retrieval
   Mirroshandel SA, 2012, J ARTIF INTELL RES, V45, P125, DOI 10.1613/jair.3693
   Mostafazadeh Nasrin, 2016, P 2016 C N AM CHAPT, P839, DOI [DOI 10.18653/V1/N16-1098, 10.18653/v1/N16-1098]
   Mueller J, 2016, AAAI CONF ARTIF INTE, P2786
   Ning Qiang., 2018, Long Papers), V1, P841
   Northcutt CG, 2021, J ARTIF INTELL RES, V70, P1373
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Patrini G, 2017, PROC CVPR IEEE, P2233, DOI 10.1109/CVPR.2017.240
   Russell S., 2016, Artificial intelligence a modern approach
   Shu Jun, 2019, ADV NEURAL INFORM PR, P1917
   spaceangels, About us
   Srinivasan Siddarth., 2018, P 2018 C N AM CHAPTE, V2, P92
   Toneva M., 2019, INT C LEARN REPR
   Wang W. Y., 2015, P 2015 C EMP METH NA, P2557, DOI DOI 10.18653/V1/D15-1306
   Wang YS, 2019, IEEE I CONF COMP VIS, P322, DOI 10.1109/ICCV.2019.00041
   Wei J, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P6382
   Xie Q., 2020, ADV NEURAL INFORM PR, V33, P6256, DOI DOI 10.48550/ARXIV.1904.12848
   Xie Z., 2017, P 5 INT C LEARN REPR
   Zellers R, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P93
   Zhang X, 2015, ADV NEUR IN, V28
NR 45
TC 0
Z9 0
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2023
VL 49
IS 10
BP 4751
EP 4772
DI 10.1109/TSE.2023.3313989
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA Y1NF7
UT WOS:001102997400013
DA 2024-07-18
ER

PT J
AU Zolfagharian, A
   Abdellatif, M
   Briand, LC
   Bagherzadeh, M
   Ramesh, S
AF Zolfagharian, Amirhossein
   Abdellatif, Manel
   Briand, Lionel C.
   Bagherzadeh, Mojtaba
   Ramesh, S.
TI A Search-Based Testing Approach for Deep Reinforcement Learning Agents
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Genetic algorithm; machine learning; reinforcement learning; state
   abstraction; testing
ID GENETIC ALGORITHM
AB Deep Reinforcement Learning (DRL) algorithms have been increasingly employed during the last decade to solve various decision-making problems such as autonomous driving, trading decisions, and robotics. However, these algorithms have faced great challenges when deployed in safety-critical environments since they often exhibit erroneous behaviors that can lead to potentially critical errors. One of the ways to assess the safety of DRL agents is to test them to detect possible faults leading to critical failures during their execution. This raises the question of how we can efficiently test DRL policies to ensure their correctness and adherence to safety requirements. Most existing works on testing DRL agents use adversarial attacks that perturb states or actions of the agent. However, such attacks often lead to unrealistic states of the environment. Furthermore, their main goal is to test the robustness of DRL agents rather than testing the compliance of the agents' policies with respect to requirements. Due to the huge state space of DRL environments, the high cost of test execution, and the black-box nature of DRL algorithms, exhaustive testing of DRL agents is impossible. In this paper, we propose a Search-based Testing Approach of Reinforcement Learning Agents (STARLA) to test the policy of a DRL agent by effectively searching for failing executions of the agent within a limited testing budget. We rely on machine learning models and a dedicated genetic algorithm to narrow the search toward faulty episodes (i.e., sequences of states and actions produced by the DRL agent). We apply STARLA on Deep-Q-Learning agents trained on two different RL problems widely used as benchmarks and show that STARLA significantly outperforms Random Testing by detecting more faults related to the agent's policy. We also investigate how to extract rules that characterize faulty episodes of the DRL agent using our search results. Such rules can be used to understand the conditions under which the agent fails and thus assess the risks of deploying it.
C1 [Zolfagharian, Amirhossein; Briand, Lionel C.] Univ Ottawa, Sch Elect Engn & Comp Sci EECS, Ottawa, ON K1N 6N5, Canada.
   [Abdellatif, Manel] Ecole Technol Super, Software & Informat Technol Engn Dept, Montreal, PQ H3C 1K3, Canada.
   [Abdellatif, Manel; Bagherzadeh, Mojtaba] Univ Ottawa, Sch EECS, Ottawa, ON K1N 6N5, Canada.
   [Briand, Lionel C.] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, L-4365 Esch Sur Alzette, Luxembourg.
   [Bagherzadeh, Mojtaba] Cisco, Ottawa, ON K1N 6N5, Canada.
   Gen Motors, Dept Res & Dev, Warren, MI 48092 USA.
C3 University of Ottawa; University of Quebec; Ecole de Technologie
   Superieure - Canada; University of Ottawa; University of Luxembourg;
   Cisco Systems Inc; General Motors
RP Zolfagharian, A (corresponding author), Univ Ottawa, Sch Elect Engn & Comp Sci EECS, Ottawa, ON K1N 6N5, Canada.
EM A.zlf@uottawa.ca; Manel.abdellatif@etsmtl.ca; Lbriand@uottawa.ca;
   Mbagherz@cisco.com; Ramesh.s@gm.com
RI Abdellatif, manel/JFS-0902-2023
OI Abdellatif, Manel/0000-0002-8647-1676; S, Ramesh/0000-0002-8501-7447;
   Zolfagharian, Amirhossein/0000-0002-2411-7938; Briand,
   Lionel/0000-0002-1393-1010
FU General Motors; Natural Sciences and Engineering Research Council of
   Canada (NSERC)
FX This work was supported by a research Grant from General Motors as well
   as the Canada Research Chair and Discovery Grant programs of the Natural
   Sciences and Engineering Research Council of Canada (NSERC).
CR Abel D, 2018, PR MACH LEARN RES, V80
   Aghababaeyan Z, 2023, IEEE T SOFTWARE ENG, V49, P3182, DOI 10.1109/TSE.2023.3243522
   Aguilar-Ibáñez C, 2014, NONLINEAR DYNAM, V78, P2769, DOI 10.1007/s11071-014-1624-6
   Akrour R, 2018, IEEE INT C INT ROBOT, P534, DOI 10.1109/IROS.2018.8594201
   Albunian Nasser, 2020, Search-Based Software Engineering. 12th International Symposium, SSBSE 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12420), P153, DOI 10.1007/978-3-030-59762-7_11
   Amuso VJ, 2007, 2007 INTERNATIONAL WAVEFORM DIVERSITY & DESIGN CONFERENCE, P407, DOI 10.1109/WDDC.2007.4339452
   [Anonymous], 2010, CCECE 2010
   Behzadan V, 2019, Arxiv, DOI arXiv:1906.01121
   Behzadan V, 2019, Arxiv, DOI arXiv:1906.01126
   Behzadan V, 2018, Arxiv, DOI arXiv:1806.02190
   Behzadan V, 2017, Arxiv, DOI arXiv:1712.09344
   Bellemare MG, 2013, J ARTIF INTELL RES, V47, P253, DOI 10.1613/jair.3912
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Byun T, 2021, PROC INT SYMP SOFTW, P309, DOI 10.1109/ISSRE52982.2021.00041
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Chaffre T, 2020, Arxiv, DOI arXiv:2004.14684
   Chen KJ, 2020, Arxiv, DOI arXiv:2006.05032
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Dulac-Arnold G, 2019, Arxiv, DOI [arXiv:1904.12901, DOI 10.1007/S10994-021-05961-4, 10.48550/arXiv.1904.12901]
   Dulac-Arnold G, 2021, MACH LEARN, V110, P2419, DOI 10.1007/s10994-021-05961-4
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   Ghamizi S, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1089, DOI 10.1145/3368089.3409739
   Gym library, 2020, US
   Han Y, 2018, Arxiv, DOI arXiv:1808.05770
   Hill A., 2018, Stable baselines
   HOLLAND JH, 1992, SCI AM, V267, P66, DOI 10.1038/scientificamerican0792-66
   Huang SY, 2017, Arxiv, DOI arXiv:1702.02284
   Ilahi Inaam, 2022, IEEE Transactions on Artificial Intelligence, V3, P90, DOI 10.1109/TAI.2021.3111139
   Jiang N., 2018, Notes on state abstractions
   Kober J, 2013, INT J ROBOT RES, V32, P1238, DOI 10.1177/0278364913495721
   Kos Jernej, 2017, ARXIV170506452
   Kulesza A, 2013, Arxiv, DOI arXiv:1207.6083
   Lee XY, 2021, ICCPS, P87
   Lei C., 2021, DEEP LEARNING PRACTI, P217
   Li Lihong, 2006, P INT S ARTIF INTELL
   Tan KL, 2020, Arxiv, DOI arXiv:2007.07176
   Lin JY, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110767
   Lin Y.C., 2019, Tactics of adversarial attack on deep reinforcement learning agents
   Lin YC, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3756
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Marco Alonso, 2017, 2017 IEEE International Conference on Robotics and Automation (ICRA), P1557, DOI 10.1109/ICRA.2017.7989186
   Marot A., 2020, CISC VIS NETW IND GL
   McKight P. E., 2010, The Corsini Encyclopedia of Psychology, DOI 10.1002/9780470479216.corpsy0524
   Miller BL, 1996, EVOL COMPUT, V4, P113, DOI 10.1162/evco.1996.4.2.113
   Mnih V, 2013, Arxiv, DOI [arXiv:1312.5602, 10.48550/arxiv.1312.5602]
   Mnih V, 2016, PR MACH LEARN RES, V48
   Moosavi-Dezfooli SM, 2017, Arxiv, DOI arXiv:1610.08401
   Morrison RW, 2002, LECT NOTES COMPUT SC, V2310, P31
   Murata T, 1995, 1995 IEEE INTERNATIONAL CONFERENCE ON EVOLUTIONARY COMPUTATION, VOLS 1 AND 2, P289, DOI 10.1109/ICEC.1995.489161
   Nagendra S, 2017, 2017 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P26, DOI 10.1109/ICACCI.2017.8125811
   Nikanjam A, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-021-00313-x
   Omnes L, 2021, 2021 IEEE MADRID POW, P1
   Openai, 2018, US
   Pan A., 2021, arXiv
   Panichella A., 2015, PROC IEEE 8 INT C SO, P1
   Pattanaik A, 2018, PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS AND MULTIAGENT SYSTEMS (AAMAS' 18), P2040
   Pei KX, 2019, COMMUN ACM, V62, P137, DOI 10.1145/3361566
   Puterman ML., 2014, MARKOV DECISION PROC, DOI DOI 10.1002/9780470316887
   Rakhsha A, 2021, Arxiv, DOI arXiv:2102.08492
   Schulman J, 2015, PR MACH LEARN RES, V37, P1889
   Sewak M., 2019, DEEP REINFORCEMENT L, DOI [10.1007/978-981-13-8285-7, DOI 10.1007/978-981-13-8285-7]
   Sun YC, 2019, Arxiv, DOI arXiv:1803.04792
   Sun YC, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P111, DOI 10.1109/ICSE-Companion.2019.00051
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Swazinna P, 2022, Arxiv, DOI arXiv:2201.05433
   Tan KL, 2020, P AMER CONTR CONF, P3959, DOI [10.23919/acc45564.2020.9147846, 10.23919/ACC45564.2020.9147846]
   Tanabe R, 2017, IEEE ACCESS, V5, P19597, DOI 10.1109/ACCESS.2017.2751071
   Tappler M., 2022, P 31 INT JOINT C ART, P503, DOI [10.24963/ijcai, DOI 10.24963/IJCAI.2022/72]
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Trujillo M., 2020, P IEEE ACM 42 INT C, P215
   Ul Haq F, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P91, DOI 10.1145/3460319.3464802
   van Hasselt H, 2016, AAAI CONF ARTIF INTE, P2094
   Vinitsky E, 2020, Arxiv, DOI arXiv:2008.01825
   Wang DS, 2018, SOFT COMPUT, V22, P387, DOI 10.1007/s00500-016-2474-6
   Wang ZY, 2016, PR MACH LEARN RES, V48
   WHITLEY D, 1994, STAT COMPUT, V4, P65, DOI 10.1007/BF00175354
   Wiering M, 2012, ADAPT LEARN OPTIM, V12, P1, DOI 10.1007/978-3-642-27645-3
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Zhang H., 2020, ADV NEURAL INFORM PR, V33, P21024
   Zhang Xuezhou, 2020, P INT C MACH LEARN
NR 83
TC 3
Z9 3
U1 5
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2023
VL 49
IS 7
BP 3715
EP 3735
DI 10.1109/TSE.2023.3269804
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA M9RA6
UT WOS:001033501500004
OA hybrid, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Rahman, A
   Parnin, C
AF Rahman, Akond
   Parnin, Chris
TI Detecting and Characterizing Propagation of Security Weaknesses in
   Puppet-Based Infrastructure Management
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Configuration as code; devops; devsecops; empirical study;
   infrastructure as code; puppet; static analysis
ID AGREEMENT
AB Despite being beneficial for managing computing infrastructure automatically, Puppet manifests are susceptible to security weaknesses, e.g., hard-coded secrets and use of weak cryptography algorithms. Adequate mitigation of security weaknesses in Puppet manifests is thus necessary to secure computing infrastructure that are managed with Puppet manifests. A characterization of how security weaknesses propagate and affect Puppet-based infrastructure management, can inform practitioners on the relevance of the detected security weaknesses, as well as help them take necessary actions for mitigation. We conduct an empirical study with 17,629 Puppet manifests with Taint Tracker for Puppet Manifests (TaintPup). We observe 2.4 times more precision, and 1.8 times more F-measure for TaintPup, compared to that of a state-of-the-art security static analysis tool. From our empirical study, we observe security weaknesses to propagate into 4,457 resources, i.e, Puppet-specific code elements used to manage infrastructure. A single instance of a security weakness can propagate into as many as 35 distinct resources. We observe security weaknesses to propagate into 7 categories of resources, which include resources used to manage continuous integration servers and network controllers. According to our survey with 24 practitioners, propagation of security weaknesses into data storage-related resources is rated to have the most severe impact for Puppet-based infrastructure management.
C1 [Rahman, Akond] Auburn Univ, Comp Sci & Software Engn, Auburn, AL 36849 USA.
   [Parnin, Chris] Microsoft Corp, Microsoft Res, Redmond, WA 98052 USA.
C3 Auburn University System; Auburn University; Microsoft
RP Rahman, A (corresponding author), Auburn Univ, Comp Sci & Software Engn, Auburn, AL 36849 USA.
EM akond@auburn.edu; chrisparnin@microsoft.com
OI Rahman, Akond/0000-0002-5056-757X
FU U.S. National Science Foundation (NSF) [2247141, 2310179]; U.S. National
   Security Agency (NSA) [H98230-21-1-0175]
FX & nbsp;This work was supported in part by the U.S. National Science
   Foundation (NSF) under Grants 2247141 and 2310179, and in part by the
   U.S. National Security Agency (NSA) under Grant H98230-21-1-0175.& nbsp;
CR Agrawal A, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P245, DOI 10.1145/3183519.3183549
   Aho Alfred V., 1986, Addison Wesley, V7, P9
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Ayewah N, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P1, DOI 10.1145/1251535.1251536
   Barik T, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P633, DOI 10.1145/3236024.3236040
   Bhuiyan FA, 2020, 2020 35TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2020), P27, DOI 10.1145/3417113.3422154
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Cardellini V, 1999, IEEE INTERNET COMPUT, V3, P28, DOI 10.1109/4236.769420
   Chen ZP, 2021, PROC INT CONF SOFTW, P674, DOI 10.1109/ICSE43902.2021.00068
   Chiari M, 2022, 2022 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2022), P218, DOI 10.1109/ICSA-C54293.2022.00049
   Chin Erika, 2009, Proceedings of the 2009 ACM workshop on Secure Web Services, SWS '09, P3, DOI DOI 10.1145/1655121.1655125
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Conti Juan Jose, 2012, Information Security Technology for Applications.15th Nordic Conference on Secure IT Systems, NordSec 2010. Revised Selected Papers, P210, DOI 10.1007/978-3-642-27937-9_15
   Dimastrogiovanni C, 2016, LAT-AM SYMP DEP COMP, P119, DOI 10.1109/LADC.2016.25
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Fripp C., 2021, DATA BREACH ALERT IN
   Fripp C., 2021, BILLION PHARM RECORD
   Gibler C., 2012, P 5 INT C TRUST TRUS, V7344, P291, DOI DOI 10.1007/978-3-642-30921-2
   Gitlab, 2019, REST GITL API DOCS
   Gordon MI, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23089
   HAPROXY, 2022, REL HIGH PERF TCP HT
   Heckelmann S., 2013, P 28 EUR PHOT SOL EN, P1, DOI DOI 10.1145/2499393.2499399
   Heckman S, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P161, DOI 10.1109/ICST.2009.45
   Hickey Gary, 1996, Nurse Res, V4, P81
   Hoffa Felipe, 2016, Github on bigquery: Analyze all the open source code.
   Hortlund A., 2021, THESIS KARLSTAD U KA
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   jenkins, 2022, Jenkins
   Jiang YJ, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P45, DOI 10.1109/MSR.2015.12
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Krishna R, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P306, DOI 10.1145/3183519.3183548
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   leapcode, 2018, LEAPC LEAP PLATF
   Li Z, 2022, P IEEE S SECUR PRIV, P2397, DOI [10.1109/SP46214.2022.00022, 10.1109/SP46214.2022.9833803]
   Mahmud SY, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P1517
   Marshall MN, 1996, FAM PRACT, V13, P522, DOI 10.1093/fampra/13.6.522
   Martin Andrew, 2021, HACKING KUBERNETES T
   Menn J., 2021, CODECOV HACKERS BREA
   Miller M, 2019, Hardcoded and Embedded Credentials are an IT Security Hazard-Here's What You Need to Know
   MITRE, 2022, CWE 327 US BROK RISK
   Mozilla, 2021, MOZ MERC REP IND
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   ONOS, 2020, ABOUT US
   Openstack, 2020, OPENSTACK GIT REP BR
   P. Labs, 2021, PUPPET DOCUMENTATION
   Palinkas LA, 2015, ADM POLICY MENT HLTH, V42, P533, DOI 10.1007/s10488-013-0528-y
   Pauck F, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P331, DOI 10.1145/3236024.3236029
   Peng Shuanghe, 2019, Wuhan University Journal of Natural Sciences, V24, P141, DOI 10.1007/s11859-019-1379-5
   Puppet, 2018, PUPP TECH REP
   Puppet, 2021, ABOUT KPN
   Rahman A., 2021, VERIFIABILITY PACKA
   Rahman A., 2022, ACM Trans. Softw. Eng. Methodol.
   Rahman A, 2021, 2021 IEEE SECURE DEVELOPMENT CONFERENCE (SECDEV 2021), P56, DOI 10.1109/SecDev51306.2021.00024
   Rahman A, 2021, IEEE SECUR PRIV, V19, P33, DOI 10.1109/MSEC.2021.3065190
   Rahman A, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3408897
   Rahman A, 2020, PROC INT CONF SOFTW, P752, DOI 10.1145/3377811.3380409
   Rahman A, 2020, EMPIR SOFTW ENG, V25, P3430, DOI 10.1007/s10664-020-09841-8
   Rahman A, 2019, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2019.00033
   Rahman A, 2019, INFORM SOFTWARE TECH, V112, P148, DOI 10.1016/j.infsof.2019.04.013
   Sadowski C, 2018, COMMUN ACM, V61, P58, DOI 10.1145/3188720
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Satter R., 2021, US INVESTIGATORS PRO
   Scarfone K, 2009, INT SYMP EMP SOFTWAR, P517
   Schwarz Julian, 2021, HARDCODED EMBEDDED C
   Sharma A., 2021, SECURING CI CD PIPEL
   Sharma T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P189, DOI [10.1109/MSR.2016.028, 10.1145/2901739.2901761]
   Shull F., 2008, Guide to Advanced Empirical Software Engineering, DOI DOI 10.1007/978-1-84800-044-5
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Smith J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P248, DOI 10.1145/2786805.2786812
   Sweeney A, 2013, HEALTH EXPECT, V16, pE89, DOI 10.1111/j.1369-7625.2012.00810.x
   Tan P. N., 2005, Introduction to Data Mining
   Team Nautilus, 2021, ATTACKS WILD CONTAIN
   The MITRE Corporation, 2021, CWE COMM WEAKN EN
   Townsend K., 2021, ATTACKS CONTAINER IN
   van der Bent E, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P164, DOI 10.1109/SANER.2018.8330206
   Wei He, 2021, IOP Conference Series: Materials Science and Engineering, V1043, DOI 10.1088/1757-899X/1043/3/032008
   Wikimedia, 2021, WIK COD REV
   Xia MY, 2015, P IEEE S SECUR PRIV, P899, DOI 10.1109/SP.2015.60
NR 79
TC 2
Z9 2
U1 5
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2023
VL 49
IS 6
BP 3536
EP 3553
DI 10.1109/TSE.2023.3265962
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA J9KW5
UT WOS:001012752300011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Jiang, SY
   Shen, JC
   Wu, SN
   Cai, Y
   Yu, Y
   Zhou, YF
AF Jiang, Shuyao
   Shen, Jiacheng
   Wu, Shengnan
   Cai, Yu
   Yu, Yue
   Zhou, Yangfan
TI Towards Usable Neural Comment Generation via Code-Comment Linkage
   Interpretation: Method and Empirical Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Usability; Software; Deep learning; Task analysis; Natural
   languages; Recurrent neural networks; Code comment; neural comment
   generation; software usability
AB Code comment is important to facilitate code comprehension for developers. Recent studies suggest to generate comments automatically with deep learning, in particular, based on neural machine translation models. However, such a promising Neural Comment Generation (NCG) technique suffers from unsatisfactory performance, as well as poor usability, i.e., developers cannot easily understand and modify the auto-generated comments. This paper suggests that a proper interpretation of how the comments are generated can significantly improve the usability of NCG approaches. We propose a novel model-independent framework, namely CCLink, to interpret the auto-generated comments. CCLink generates a set of code mutants and obtains their corresponding comments. Based on these data, several contribution mining algorithms are designed to infer the key elements in code that contributes to the generation of the key phrases in the comments. The links between code and its auto-generated comment can thus be constructed. This in turn allows CCLink to visualize the links as the comment interpretations to developers. It greatly facilitates manual verification and correction of the comments. We examine the performance of CCLink with different contribution mining algorithms, NCG approaches, and real-world datasets. We also conduct an empirical study on 32 experienced Java programmers to evaluate the effectiveness of CCLink. The results show that CCLink is promising in making NCG more usable with a proper interpretation of the auto-generated comments.
C1 [Jiang, Shuyao; Shen, Jiacheng; Wu, Shengnan; Cai, Yu; Zhou, Yangfan] Fudan Univ, Sch Comp Sci, Shanghai 200437, Peoples R China.
   [Yu, Yue] Natl Univ Def Technol, Natl Lab Parallel & Distributed Proc, Changsha 410073, Peoples R China.
C3 Fudan University; National University of Defense Technology - China
RP Zhou, YF (corresponding author), Fudan Univ, Sch Comp Sci, Shanghai 200437, Peoples R China.
EM syjiang19@fudan.edu.cn; jcshen16@fudan.edu.cn; snwu19@fudan.edu.cn;
   caiy19@fudan.edu.cn; yuyue@nudt.edu.cn; zyf@fudan.edu.cn
RI Zhou, Yangfan/HMV-8677-2023
OI Jiang, Shuyao/0000-0002-2797-875X; Yu, Yue/0000-0002-9865-2212; Shen,
   Jiacheng/0009-0000-2855-2403
FU National Key R&D Program of China [2020AAA0103504]; Natural Science
   Foundation of Shanghai [22ZR1407900]
FX This work was supported in part by the National Key R&D Program of China
   under Grant 2020AAA0103504, and in part by the Natural Science
   Foundation of Shanghai under Grant 22ZR1407900
CR Agrawal R., P 20 INT C VERY LARG
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Allamanis M, 2016, PR MACH LEARN RES, V48
   Alon U., 2019, PROC 7 INT C LEARN R
   [Anonymous], 2005, QUEUE
   [Anonymous], 2006, Proceedings of the 18th conference on Innovative applications of artificial intelligence-Volume 2, IAAI'06
   Bach S, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0130140
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Benesty J., 2009, NOISE REDUCTION SPEE, P1, DOI [10.1007/978-3-642-00296-0_5, DOI 10.1007/978-3-642-00296-05]
   BIERNACKI P, 1981, SOCIOL METHOD RES, V10, P141, DOI 10.1177/004912418101000205
   Carroll J. M., 1985, PROC ADV HUMAN COMPU, V1, P1
   Cerny T, 2017, APPL COMPUT REV, V17, P29, DOI [10.1145/3129676.3129682, 10.1145/3183628.3183631]
   Chiang D, 2007, COMPUT LINGUIST, V33, P201, DOI 10.1162/coli.2007.33.2.201
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Endert A, 2012, PROCEEDINGS OF THE INTERNATIONAL WORKING CONFERENCE ON ADVANCED VISUAL INTERFACES, P555, DOI 10.1145/2254556.2254660
   Galley M, 2004, HLT-NAACL 2004: HUMAN LANGUAGE TECHNOLOGY CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE MAIN CONFERENCE, P273
   GOODWIN NC, 1987, COMMUN ACM, V30, P229, DOI 10.1145/214748.214758
   GOULD JD, 1985, COMMUN ACM, V28, P300, DOI 10.1145/3166.3170
   Guidotti R, 2018, Arxiv, DOI arXiv:1805.10820
   Guidotti R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3236009
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Hallam P., 2006, WHAT DO PROGRAMMERS
   Han JW, 2007, DATA MIN KNOWL DISC, V15, P55, DOI 10.1007/s10618-006-0059-1
   Hill E, 2009, PROC INT CONF SOFTW, P232, DOI 10.1109/ICSE.2009.5070524
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Jiang SY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1280, DOI 10.1109/ASE.2019.00162
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   Jin X., 2020, PROC INT C LEARN REP, P15
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Kaufmann E., 2013, C LEARN THEOR, P228
   Kirner T.G., 1996, ADV COMPUT, V42, P1, DOI DOI 10.1016/S0065-2458(08)60483-0
   Kulesza T., 2015, P 20 INT C INTELLIGE, P126, DOI DOI 10.1145/2678025.2701399
   Kunkel J, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300717
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Lin B, 2016, PROCEEDINGS OF THE 19TH ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING COMPANION, P333, DOI 10.1145/2818052.2869117
   Liu ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P176, DOI 10.1109/ASE.2019.00026
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Louis A, 2018, Arxiv, DOI arXiv:1806.04616
   Loyola P, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 2, P287, DOI 10.18653/v1/P17-2045
   Maalej Walid, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P191, DOI 10.1109/MSR.2010.5463344
   Mehlenbacher B., 1993, P 11 ANN INT C SYST, P209
   Montavon G, 2017, PATTERN RECOGN, V65, P211, DOI 10.1016/j.patcog.2016.11.008
   Murdoch W. J., 2018, PROC INT C LEARN REP, P15
   Myers BA, 2016, COMPUTER, V49, P44, DOI 10.1109/MC.2016.200
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Pennington J., 2014, P C EMP METH NAT LAN, P1532, DOI DOI 10.3115/V1/D14-1162
   Rader E, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173677
   Ribeiro MT, 2018, AAAI CONF ARTIF INTE, P1527
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   Rose S., 2010, TEXT MINING APPL THE, V1, P10, DOI DOI 10.1002/9780470689646.CH1
   Roy Q, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300750
   Selvaraju RR, 2017, IEEE I CONF COMP VIS, P618, DOI 10.1109/ICCV.2017.74
   Shin Hwei Tan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P260, DOI 10.1109/ICST.2012.106
   Shrikumar A, 2017, PR MACH LEARN RES, V70
   Siddiqi S., 2015, International Journal of Computer Applications, V109, P18, DOI [https://doi.org/10.5120/19161-0607, DOI 10.5120/19161-0607, 10.5120/19161-0607]
   Strumbelj E, 2010, J MACH LEARN RES, V11, P1
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Turner R, 2016, IEEE INT WORKS MACH
   Walenstein A., 2003, ICSE Workshop on SE-HCI, P92
   Wang X., 2021, P CHI C HUM FACT COM, P1
   Wu YH, 2016, Arxiv, DOI [arXiv:1609.08144, DOI 10.48550/ARXIV.1609.08144]
   Xu K, 2015, PR MACH LEARN RES, V37, P2048
   Yin PC, 2018, IEEE WORK CONF MIN S, P476, DOI 10.1145/3196398.3196408
   Zhang B, 2019, Arxiv, DOI arXiv:1704.08430
   Zhou B, 2016, PROC CVPR IEEE, P2921, DOI 10.1109/CVPR.2016.319
NR 70
TC 0
Z9 0
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2239
EP 2254
DI 10.1109/TSE.2022.3214859
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600046
DA 2024-07-18
ER

PT J
AU von der Mosel, J
   Trautsch, A
   Herbold, S
AF von der Mosel, Julian
   Trautsch, Alexander
   Herbold, Steffen
TI On the Validity of Pre-Trained Transformers for Natural Language
   Processing in the Software Engineering Domain
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Transformers; Task analysis; Context modeling; Bit error rate; Data
   models; Software engineering; Adaptation models; Natural language
   processing; software engineering; transformers
ID SENTIMENT ANALYSIS
AB Transformers are the current state-of-the-art of natural language processing in many domains and are using traction within software engineering research as well. Such models are pre-trained on large amounts of data, usually from the general domain. However, we only have a limited understanding regarding the validity of transformers within the software engineering domain, i.e., how good such models are at understanding words and sentences within a software engineering context and how this improves the state-of-the-art. Within this article, we shed light on this complex, but crucial issue. We compare BERT transformer models trained with software engineering data with transformers based on general domain data in multiple dimensions: their vocabulary, their ability to understand which words are missing, and their performance in classification tasks. Our results show that for tasks that require understanding of the software engineering context, pre-training with software engineering data is valuable, while general domain models are sufficient for general language understanding, also within the software engineering domain.
C1 [von der Mosel, Julian; Trautsch, Alexander] Univ Gottingen, Inst Comp Sci, D-30332 Gottingen, GA, Germany.
   [Herbold, Steffen] Tech Univ Clausthal, Inst Software & Syst Engn, D-38678 Clausthal Zellerfeld, Germany.
C3 University of Gottingen; TU Clausthal
RP Herbold, S (corresponding author), Tech Univ Clausthal, Inst Software & Syst Engn, D-38678 Clausthal Zellerfeld, Germany.
EM julian.vondermosel@stud.uni-goettingen.de;
   alexander.trautsch@cs.uni-goettingen.de; steffen.herbold@tu-clausthal.de
OI Trautsch, Alexander/0000-0001-5236-7953; Herbold,
   Steffen/0000-0001-9765-2803
CR Ahmed T, 2017, IEEE INT CONF AUTOM, P106, DOI 10.1109/ASE.2017.8115623
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   [Anonymous], 2021, Ethnologue
   [Anonymous], 2021, ETHNOLOGUE ENTRY ENG, V24th
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Araci D, 2019, Arxiv, DOI arXiv:1908.10063
   Beltagy I, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P3615
   Benavoli A, 2017, J MACH LEARN RES, V18
   Bender EM, 2021, PROCEEDINGS OF THE 2021 ACM CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, FACCT 2021, P610, DOI 10.1145/3442188.3445922
   Biswas E, 2020, PROC IEEE INT CONF S, P162, DOI 10.1109/ICSME46990.2020.00025
   BLYTH CR, 1972, J AM STAT ASSOC, V67, P364, DOI 10.2307/2284382
   Brown T., 2020, P ADV NEUR INF PROC, V33, P1877
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Clark K., 2020, PROC INT C LEARN REP, P1
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Efstathiou V, 2018, IEEE WORK CONF MIN S, P38, DOI 10.1145/3196398.3196448
   Eisenstein Jacob, 2019, INTRO NATURAL LANGUA
   Facebook AI Research, FASTT LIB EFF TEXT C
   Fedus W., 2021, J Mach Learn Res, V23, P1
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Ferrari A, 2019, AUTOMAT SOFTW ENG, V26, P559, DOI 10.1007/s10515-019-00261-7
   Ghosh S, 2016, CIKM'16: PROCEEDINGS OF THE 2016 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P1129, DOI 10.1145/2983323.298336
   Google Cloud, 2011, BIGQUERY GOOGL CLOUD
   Grigorik I, 2012, GITHUB ARCH
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hellendoorn VJ, 2022, COMMUN ACM, V65, P31, DOI 10.1145/3501261
   Herbold S, 2020, EMPIR SOFTW ENG, V27
   Herbold S, 2020, EMPIR SOFTW ENG, V25, P5333, DOI 10.1007/s10664-020-09885-w
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hsieh Cho-Jui, 2020, INT C LEARNING REPRE
   Huang KX, 2020, Arxiv, DOI [arXiv:1904.05342, DOI 10.48550/ARXIV.1904.05342]
   Icha P., 2020, Tech. rep.
   Internet Archive, 2010, ABOUT US
   Islam MR, 2018, J SYST SOFTWARE, V145, P125, DOI 10.1016/j.jss.2018.08.030
   Kiritchenko S, 2018, P 7 JOINT C LEX COMP, P43, DOI [10.18653/v1/S18-2005, DOI 10.18653/V1/S18-2005]
   Lan Z., 2019, ARXIV190911942, DOI DOI 10.48550/ARXIV.1909.11942
   Lee J, 2020, BIOINFORMATICS, V36, P1234, DOI 10.1093/bioinformatics/btz682
   Lewis M., 2020, P 58 ANN M ASS COMP, P7871, DOI 10.18653/v1/2020.acl-main.703
   Lin B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P94, DOI 10.1145/3180155.3180195
   Liu YH, 2019, Arxiv, DOI arXiv:1907.11692
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Micikevicius P., 2018, 6 INT C LEARN REPR
   Mikolov T., 2013, PROC 1 INT C LEARN R, P1301
   Nagel S., 2016, CC NEWS
   Novielli N, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09960-w
   Novielli N, 2020, IEEE WORK CONF MIN S, P158, DOI 10.1145/3379597.3387446
   Novielli N, 2018, IEEE WORK CONF MIN S, P364, DOI 10.1145/3196398.3196403
   Ortu M, 2015, Proceedings of the 11th International Conference on Predictive Models and Data Analytics in Software Engineering, PROMISE'15, P1, DOI DOI 10.1145/2810146.2810147
   Peters M, 2018, STUD LATEINAMERIKA, V32, P1, DOI 10.5771/9783845286846
   Pyysalo S, 2013, P 5 INT S LANG BIOL
   Radford A., 2019, LANGUAGE MODELS ARE
   Rajpurkar P., 2016, ARXIV
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Stack Exchange, 2016, STACK OV PUBL DAT
   Stack Exchange, 2014, STACK EXCH DAT DUMP
   Strubell E, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P3645
   Tabassum Jeniya, 2020, P 58 ANN M ASS COMP, P4913, DOI [DOI 10.18653/V1/2020.ACLMAIN.443, 10.18653/v1/2020.aclmain.443]
   Theeten Bart, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P18, DOI 10.1109/MSR.2019.00014
   Thelwall M, 2010, J AM SOC INF SCI TEC, V61, P2544, DOI 10.1002/asi.21416
   Trautsch A, 2022, Arxiv, DOI arXiv:2109.03544
   Tunstall L., 2021, NATURAL LANGUAGE PRO
   Uddin G, 2021, IEEE T SOFTWARE ENG, V47, P522, DOI 10.1109/TSE.2019.2900245
   Vaswani A., 2017, Proceedings of the 31st International Conference on Neural Information Processing Systems, P5998
   Vig J, 2019, PROCEEDINGS OF THE 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, (ACL 2019), P37
   Wang A., 2019, PROC INT C LEARN REP
   Wang AP, 2019, PHARM DEV TECHNOL, V24, P1229, DOI 10.1080/10837450.2019.1651857
   Xu BW, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI [10.1145/3239235.3240503, 10.1109/PESGM.2018.8586232]
   Yang Zhilin., 2019, Generalized autoregressive pretraining for language understanding
   Zaheer M., 2020, ADV NEURAL INFORM PR, P17283, DOI DOI 10.5555/3495724.3497174
   Zhang T, 2020, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSME46990.2020.00017
NR 71
TC 18
Z9 19
U1 7
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1487
EP 1507
DI 10.1109/TSE.2022.3178469
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhou, X
   Wang, PF
   Liu, CYF
   Yue, T
   Liu, YY
   Song, CX
   Lu, K
   Yin, QD
   Han, X
AF Zhou, Xu
   Wang, Pengfei
   Liu, Chenyifan
   Yue, Tai
   Liu, Yingying
   Song, Congxi
   Lu, Kai
   Yin, Qidi
   Han, Xu
TI UltraFuzz: Towards Resource-Saving in Distributed Fuzzing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Fuzzing; Task analysis; Synchronization; Dynamic scheduling; Testing;
   Schedules; Processor scheduling; parallel fuzzing; distributed fuzzing;
   resource saving in fuzzing; super-linear acceleration
AB Recent research has sought to improve fuzzing performance via parallel computing. However, researchers focus on improving efficiency while ignoring the increasing cost of testing resources. Parallel fuzzing in the distributed environment amplifies the resource-wasting problem caused by the random nature of fuzzing. In the parallel mode, owing to the lack of an appropriate task dispatching scheme and timely fuzzing status synchronization among different fuzzing instances, task conflicts and workload imbalance occur, making the resource-wasting problem severe. In this paper, we design UltraFuzz, a fuzzer for resource-saving in distributed fuzzing. Based on centralized dynamic scheduling, UltraFuzz can dispatch tasks and schedule power globally and reasonably to avoid resource-wasting. Besides, UltraFuzz can elastically allocate computing power for fuzzing and seed evaluation, thereby avoiding the potential bottleneck of seed evaluation that blocks the fuzzing process. UltraFuzz was evaluated using real-world programs, and the results show that with the same testing resource, UltraFuzz outperforms state-of-the-art tools, such as AFL, AFL-P, PAFL, and EnFuzz. Most importantly, the experiment reveals certain results that seem counter-intuitive, namely that parallel fuzzing can achieve "super-linear acceleration" when compared with single-core fuzzing. We conduct additional experiments to reveal the deep reasons behind this phenomenon and dig deep into the inherent advantages of parallel fuzzing over serial fuzzing, including the global optimization of seed energy scheduling and the escape of local optimal seed. Additionally, 24 real-world vulnerabilities were discovered using UltraFuzz.
C1 [Zhou, Xu; Wang, Pengfei; Liu, Chenyifan; Yue, Tai; Liu, Yingying; Song, Congxi; Lu, Kai; Yin, Qidi; Han, Xu] Natl Univ Def Technol, Changsha 410073, Peoples R China.
C3 National University of Defense Technology - China
RP Wang, PF (corresponding author), Natl Univ Def Technol, Changsha 410073, Peoples R China.
EM zhouxu@nudt.edu.cn; pfwang@nudt.edu.cn; 2060909445@qq.com;
   yuetai17@nudt.edu.cn; 15273112081@163.com; congxi1994@sohu.com;
   kailu@nudt.edu.cn; yinqidi@nudt.edu.cn; 1670176167@qq.com
RI Wang, Xiaojun/JUU-9683-2023; lu, kai/KBB-4008-2024; li,
   song/JVO-5938-2024; yang, zhuo/JPK-3133-2023; Wang,
   Pengfei/ITU-4530-2023; Zhou, Xu/IUP-4987-2023; li,
   jincheng/GQP-6856-2022; li, xinke/JTU-3633-2023; FENG, X/JPL-4188-2023;
   zhao, lin/JPK-8436-2023
OI Zhou, Xu/0000-0002-0075-5003; Song, Congxi/0000-0002-7672-0915; Yue,
   Tai/0000-0002-7276-8735
FU National University of Defense Technology Research Project [ZK20-17,
   ZK20-09]; National Natural Science Foundation China [62272472, 61902412,
   61902416]; HUNAN Province Natural Science Foundation [2021JJ40692,
   2019JJ50729]
FX This work was supported in part by the National University of Defense
   Technology Research Project under Grants ZK20-17 and ZK20-09, in part by
   the National Natural Science Foundation China under Grants 62272472,
   61902412, and 61902416, and in part by the HUNAN Province Natural
   Science Foundation under Grants 2021JJ40692 and, 2019JJ50729.
CR [Anonymous], 2016, FIDGETYAFL
   B_ohme M., 2016, AFLFAST NEW
   Blair W, 2020, Arxiv, DOI arXiv:2002.03416
   Bogaard M., 2015, DISFUZZ AFL
   Böhme M, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P713, DOI 10.1145/3368089.3409729
   Böhme M, 2019, IEEE T SOFTWARE ENG, V45, P489, DOI 10.1109/TSE.2017.2785841
   Böhme M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2329, DOI 10.1145/3133956.3134020
   Chen HX, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2095, DOI 10.1145/3243734.3243849
   Chen P, 2018, P IEEE S SECUR PRIV, P711, DOI 10.1109/SP.2018.00046
   Chen YH, 2019, PROCEEDINGS OF THE 2019 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIACCS '19), P633, DOI 10.1145/3321705.3329828
   Chen YL, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1967
   Google, 2015, American fuzzy lop
   Güler E, 2020, ANN COMPUT SECURITY, P360, DOI 10.1145/3427228.3427266
   Manes VJM, 2019, Arxiv, DOI arXiv:1812.00140
   Jain V, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P505, DOI 10.1145/3274694.3274746
   Jeong DR, 2019, P IEEE S SECUR PRIV, P754, DOI 10.1109/SP.2019.00017
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Kim K, 2020, 27TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2020), DOI 10.14722/ndss.2020.24018
   Klees G, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2123, DOI 10.1145/3243734.3243804
   Lemieux C, 2018, IEEE INT CONF AUTOM, P475, DOI 10.1145/3238147.3238176
   Li Y, 2018, ICAIP 2018: 2018 THE 2ND INTERNATIONAL CONFERENCE ON ADVANCES IN IMAGE PROCESSING, P194, DOI 10.1145/3239576.3239615
   Li YW, 2019, Arxiv, DOI arXiv:1901.01142
   Liang HL, 2019, INT C PROGRAM COMPRE, P249, DOI 10.1109/ICPC.2019.00044
   Liang HL, 2018, IEEE T RELIAB, V67, P1199, DOI 10.1109/TR.2018.2834476
   Liang J, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P809, DOI 10.1145/3236024.3275525
   Libafl, 2021, About us
   Lyu CY, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1949
   Nguyen MD, 2020, Arxiv, DOI arXiv:2002.10751
   Nilizadeh S, 2019, PROC INT CONF SOFTW, P176, DOI 10.1109/ICSE.2019.00034
   Noller Y, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P257, DOI 10.1145/3460319.3464817
   Noller Y, 2020, PROC INT CONF SOFTW, P1273, DOI 10.1145/3377811.3380363
   Petsios T, 2017, P IEEE S SECUR PRIV, P615, DOI 10.1109/SP.2017.27
   Rawat S, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23404
   Richo Butts, 2015, ROV
   Schumilo S, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P167
   Song CX, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9235100
   Song DY, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23176
   Stephens N, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23368
   Vinesh N, 2020, ADV INTELL SYST, V1045, P667, DOI 10.1007/978-981-15-0029-9_53
   Wang PF, 2023, Arxiv, DOI arXiv:2005.11907
   Wang WG, 2016, 2016 10TH INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE), P49, DOI 10.1109/TASE.2016.15
   Wang Z., 2020, arXiv
   Wustholz V, 2019, Arxiv, DOI arXiv:1905.07147
   Xie Y., 2010, THESIS U LISBOA LISB
   Xu M, 2020, P IEEE S SECUR PRIV, P1643, DOI 10.1109/SP40000.2020.00078
   Xu W, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2313, DOI 10.1145/3133956.3134046
   Ye JX, 2019, IEEE ACCESS, V7, P42557, DOI 10.1109/ACCESS.2019.2905744
   You W, 2019, P IEEE S SECUR PRIV, P769, DOI 10.1109/SP.2019.00057
   You W, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2139, DOI 10.1145/3133956.3134085
   Yu B, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P2525, DOI 10.1145/3319535.3363247
   Yue T, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P2307
   Yue T, 2019, IEEE ACCESS, V7, P117029, DOI 10.1109/ACCESS.2019.2936235
   Yun I, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P745
   Zhang G., 2022, PROC NETW DISTRIB SY
   Zhang G, 2018, IEEE ACCESS, V6, P37302, DOI 10.1109/ACCESS.2018.2851237
   Zheng YW, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1099
NR 56
TC 2
Z9 2
U1 2
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2394
EP 2412
DI 10.1109/TSE.2022.3219520
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600056
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Madampe, K
   Hoda, R
   Grundy, J
AF Madampe, Kashumi
   Hoda, Rashina
   Grundy, John
TI The Emotional Roller Coaster of Responding to Requirements Changes in
   Software Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Emotional responses; Codes; Productivity; Cognition; Software
   engineering; Couplings; Affects; changes; emotions; human aspects;
   job-related affective well-being scale; mixed-methods; requirements;
   socio-technical grounded theory; software engineering; software teams;
   well-being; workplace awareness
AB Background: A preliminary study we conducted showed that software practitioners respond to requirements changes (RCs) with different emotions, and that their emotions vary at stages of the RC handling life cycle, such as receiving, developing, and delivering RCs. Furthermore, such developer emotions have direct linkages to cognition, productivity, and decision making. Therefore, it is important to gain a comprehensive understanding the role of emotions in a critical scenarios like handling RCs. Objective: We wanted to study how practitioners emotionally respond to RCs. Method: We conducted a world-wide survey with the participation of 201 software practitioners. In our survey, we used the Job-related Affective Well-being Scale (JAWS) and open-ended questions to capture participants' emotions when handling RCs in their work and query about the different circumstances when they feel these emotions. We used a combined approach of statistical analysis, JAWS, and Socio-Technical Grounded Theory (STGT) for Data Analysis to analyse our survey data. Findings: We identified (1) emotional responses to RCs, i.e., the most common emotions felt by practitioners when handling RCs; (2) different stimuli - such as the RC, the practitioner, team, manager, customer - that trigger these emotions through their own different characteristics; (3) emotion dynamics, i.e., the changes in emotions during the RC handling life cycle; (4) RC stages where particular emotions are triggered; and (5) time related aspects that regulate the emotion dynamics. Conclusion: Practitioners are not pleased with receiving RCs all the time. Last minute RCs introduced closer to a deadline especially violate emotional well-being of practitioners. We present some practical recommendations for practitioners to follow, including a dual-purpose emotion-centric decision guide to help decide when to introduce or accept an RC, and some future key research directions.
C1 [Madampe, Kashumi; Hoda, Rashina; Grundy, John] Monash Univ, Fac Informat Technol, HumaniSE Lab, Dept Software Syst & Cybersecur, Clayton, Vic 3800, Australia.
C3 Monash University
RP Madampe, K (corresponding author), Monash Univ, Fac Informat Technol, HumaniSE Lab, Dept Software Syst & Cybersecur, Clayton, Vic 3800, Australia.
EM kashumi.madampe@monash.edu; rashina@gmail.com; john.grundy@monash.edu
RI Madampe, Kashumi/AAY-9008-2021; Grundy, John/AAF-1716-2019
OI Madampe, Kashumi/0000-0003-1363-8786; Grundy, John/0000-0003-4928-7076;
   Hoda, Rashina/0000-0001-5147-8096
FU ARC Laureate Fellowship [FL190100035]; Monash Faculty of IT scholarship
FX The work of John Grundy was supported by ARC Laureate Fellowship under
   Grant FL190100035. This work was supported by a Monash Faculty of IT
   scholarship.
CR Albuquerque D, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1421, DOI 10.1145/3341105.3374095
   [Anonymous], 2020, 14 STATE AGILE REPOR
   Asghar AR, 2017, 2017 INTERNATIONAL CONFERENCE ON COMMUNICATION TECHNOLOGIES (COMTECH), P50, DOI 10.1109/COMTECH.2017.8065749
   Bakalova Z., 2011, LECT NOTES COMPUT SC, V6606
   Baruah N, 2015, PROCEDIA COMPUT SCI, V62, P81, DOI 10.1016/j.procs.2015.08.414
   Basinska BA, 2014, INT J OCCUP MED ENV, V27, P993, DOI 10.2478/s13382-014-0329-x
   Bjarnason E., 2011, AREW 11 P 1 WORKSH A, V3, P1, DOI [10.1145/2068783.2068786, DOI 10.1145/2068783.2068786]
   Bregman P., P IEEE VIRT REAL ANN
   Colomo-Palacios R, 2019, 2019 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2019), P23, DOI 10.1109/SEmotion.2019.00012
   Colomo-Palacios R, 2011, J UNIVERS COMPUT SCI, V17, P1281
   Colomo-Palacios R, 2010, COMM COM INF SC, V112, P1
   Crawford Broderick., 2014, INT C HUMAN COMPUTER, P307
   Cummaudo A, 2021, 2021 IEEE/ACM SIXTH INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING SEMOTION 2021, P13, DOI 10.1109/SEmotion52567.2021.00011
   Curumsing M. K., 2017, EMOTION ORIENTED REQ
   Neto FGD, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P315, DOI 10.1109/REW.2017.33
   Diener E, 2010, SOC INDIC RES, V97, P143, DOI 10.1007/s11205-009-9493-y
   El-Migid M.-A. A., 2021, INT J ELEC POWER
   Fisher C. D., 1997, TECH REP
   Fountaine A, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2017), P28, DOI 10.1109/SEmotion.2017.12
   Fowler M., 2001, Software Development, V9, P28
   Girardi D, 2022, IEEE T SOFTWARE ENG, V48, P3326, DOI 10.1109/TSE.2021.3087906
   Graziotin D, 2015, J SOFTW-EVOL PROC, V27, P467, DOI 10.1002/smr.1673
   Graziotin D, 2014, IEEE SOFTWARE, V31, P24, DOI 10.1109/MS.2014.94
   Graziotin D, 2014, PEERJ, V2, DOI 10.7717/peerj.289
   Hoda R, 2022, IEEE T SOFTWARE ENG, V48, P3808, DOI 10.1109/TSE.2021.3106280
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Käpyaho M, 2015, INT REQUIR ENG CONF, P334, DOI 10.1109/RE.2015.7320450
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Kolakowska A, 2013, C HUM SYST INTERACT, P532, DOI 10.1109/HSI.2013.6577877
   Kuutila M., 2018, P 12 ACM IEEE INT S, P1
   Liu Jun, 2010, Proceedings of the 2010 Second World Congress on Software Engineering (WCSE 2010), P207, DOI 10.1109/WCSE.2010.105
   Madampe K, 2022, IEEE T SOFTWARE ENG, V48, P3737, DOI 10.1109/TSE.2021.3104732
   Madampe K, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P37, DOI 10.1145/3377816.3381722
   McGee S, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P51, DOI 10.1109/ICSEA.2009.17
   Morrissy L, 2013, ISSUES MENT HEALTH N, V34, P158, DOI 10.3109/01612840.2012.740767
   Müller SC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P688, DOI 10.1109/ICSE.2015.334
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   Ralph P, 2020, EMPIR SOFTW ENG, V25, P4927, DOI 10.1007/s10664-020-09875-y
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Scherer K.R., 1987, GENEVA STUDIES EMOTI, V1, P1
   Shastri Y, 2021, J SYST SOFTWARE, V173, DOI 10.1016/j.jss.2020.110871
   SlashData Ltd, 2019, TECH REP
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Unal Z.M., 2014, International Journal of Academic Research in Accounting, Finance and Management Sciences, V4, P201
   University of York NHS Centre for Reviews and Dissemination, 2009, Systematic Reviews: CRD's Guidance for Undertaking Reviews in Health Care
   Van Katwyk P T, 2000, J Occup Health Psychol, V5, P219
   Van Katwyk P. T., JAWS IS COPYRIGHT 19
   VandenBos G.R.E., 2015, APA dictionary of psychology, V2nd, DOI DOI 10.1037/14646-000
   Wagner S., 2018, CLEI ELECT J, V21, DOI [10.19153/cleiej.21.1.6, DOI 10.19153/CLEIEJ.21.1.6]
   WATSON D, 1988, J PERS SOC PSYCHOL, V54, P1063, DOI 10.1037/0022-3514.54.6.1063
   Wrobel MR, 2016, ACSIS-ANN COMPUT SCI, V8, P1545, DOI 10.15439/2016F212
   Wrobel MR, 2013, C HUM SYST INTERACT, P518, DOI 10.1109/HSI.2013.6577875
NR 54
TC 6
Z9 7
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2023
VL 49
IS 3
BP 1171
EP 1187
DI 10.1109/TSE.2022.3172925
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA A1QF2
UT WOS:000952938700012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhao, YT
   Xiao, L
   Bondi, AB
   Chen, BH
   Liu, Y
AF Zhao, Yutong
   Xiao, Lu
   Bondi, Andre B.
   Chen, Bihuan
   Liu, Yang
TI A Large-Scale Empirical Study of Real-Life Performance Issues in Open
   Source Projects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Design patterns; software design structure; software performance;
   testing code
ID SOFTWARE-DEVELOPMENT
AB Software performance is a critical quality attribute that determines the success of a software system. However, practitioners lack comprehensive and holistic understanding of how real-life performance issues are caused and resolved in practice from the technical, engineering, and economic perspectives. This paper presents a large-scale empirical study of 570 real-life performance issues from 13 open source projects from various problem domains, and implemented in three popular programming languages, Java (192 issues), C/C++ (162 issues), and Python (216 issues). From the technical perspective, we summarize eight general types of performance issues with corresponding root causes and resolutions that apply for all three languages. We also identify available tools for detecting and resolving different types of issues from the literature. In addition, we found that 27% of the 570 issues are resolved by design-level optimization-coordinated revision of a group of related source files and their design structure. We reveal four typical design-level optimization patterns, including classic design patterns, change propagation, optimization clone, and parallel optimization that practitioners should be aware of in resolving performance issues. From the engineering perspective, this study analyzes how test code changes in performance optimization. We found that only 15% of the 570 performance issues involve revision of test code. In most cases, the revised test cases focus on the functional logic of the performance optimization, rather than directly evaluate the performance improvement. This finding points to the potential lack of engineering standard for formally verifying performance optimization in regression testing. Finally, from the economic perspective, we analyze the "Return On Investment " of performance optimization. We found that design-level optimization usually requires more investment, but not always yields to higher performance improvement. However, developers tend to use design-level optimization when they concern about other quality attributes, such as maintainability and readability.
C1 [Zhao, Yutong; Xiao, Lu; Bondi, Andre B.] Stevens Inst Technol, Sch Syst & Enterprises, Hoboken, NJ 07030 USA.
   [Chen, Bihuan] Fudan Univ, Sch Comp Sci, Shanghai 200437, Peoples R China.
   [Liu, Yang] Nanyang Technol Univ, Sch Comp Engn, Singapore 639798, Singapore.
C3 Stevens Institute of Technology; Fudan University; Nanyang Technological
   University
RP Xiao, L (corresponding author), Stevens Inst Technol, Sch Syst & Enterprises, Hoboken, NJ 07030 USA.
EM yzhao102@stevens.edu; lxiao6@stevens.edu; abondi@stevens.edu;
   bhchen@fudan.edu.cn; yangliu@ntu.edu.sg
RI xiao, lu/KRO-9302-2024; Liu, Yang/D-2306-2013
OI Liu, Yang/0000-0001-7300-9215; Zhao, Yutong/0000-0002-9307-5532; Bondi,
   Andre/0000-0003-0709-2078
FU U.S. National Science Foundation (NSF) [CNS-1823074, CCF-1909763,
   CCF-2044888]
FX This work was supported in part by the U.S. National Science Foundation
   (NSF) under Grants CNS-1823074, CCF-1909763, and CCF-2044888.
CR Albert E, 2010, PEPM '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION, P25, DOI 10.1145/1706356.1706363
   Anda B., 2001, P 4 INT C UNIFIED MO, P487
   Andres L. S., 2017, J ENG GAS TURB POWER, V139
   [Anonymous], Tiobe index
   [Anonymous], MIRROR APACHE PDFBOX
   Arcelli D, 2013, ELECTRON P THEOR COM, P33, DOI 10.4204/EPTCS.108.3
   Arcelli D, 2015, QOSA'15 PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGSOFT CONFERENCE ON QUALITY OF SOFTWARE ARCHITECTURES, P11, DOI 10.1145/2737182.2737187
   Baldwin C. Y., 2000, Design Rules: The Power of Modularity, V1
   Balsamo, 2005, P 5 INT WORKSHOP SOF, P37
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Balsamo S., 2004, Software Engineering Notes, V29, P115, DOI 10.1145/974043.974062
   Bass L., 2003, SOFTW ARCHITECTURE P
   Becker Steffen, 2008, THESIS U OLDENBURG O
   Blank J, 2020, IEEE ACCESS, V8, P89497, DOI 10.1109/ACCESS.2020.2990567
   Bondi A.B., 2015, Foundations of software and system performance engineering: process, performance modeling, requirements, testing, scalability, and practice
   Bondi A.B., 2012, Proceedings of the 3rd ACM/SPEC International Conference on Performance Engineering, P1
   Brosig F., 2012, Proceedings of the 15th ACM SIGSOFT symposium on Component Based Software Engineering, P3
   Brosig F, 2015, IEEE T SOFTWARE ENG, V41, P157, DOI 10.1109/TSE.2014.2362755
   Brünink M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P39, DOI 10.1145/2950290.2950314
   Chen BH, 2016, PROC INT CONF SOFTW, P49, DOI 10.1145/2884781.2884794
   Chen TH, 2016, IEEE T SOFTWARE ENG, V42, P1148, DOI 10.1109/TSE.2016.2553039
   Chen ZF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P811, DOI 10.1145/3180155.3180229
   Coppa E, 2012, ACM SIGPLAN NOTICES, V47, P89, DOI 10.1145/2345156.2254076
   Costa D, 2018, INT SYM CODE GENER, P16, DOI 10.1145/3168825
   Dawes JH, 2020, LECT NOTES COMPUT SC, V12399, P67, DOI 10.1007/978-3-030-60508-7_4
   Della Toffola L, 2015, ACM SIGPLAN NOTICES, V50, P607, DOI [10.1145/2858965.2814290, 10.1145/2814270.2814290]
   Dhok M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P895, DOI 10.1145/2950290.2950360
   Di Marco A, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P37, DOI 10.1109/WICSA.2004.1310688
   Diemer J., 2012, PROC WATERS
   Eismann S, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P71, DOI 10.1109/ICSA.2019.00016
   Eramo R., 2012, Proceedings of the 8th international ACM SIGSOFT conference on Quality of Software Architectures, P55
   Gil J, 2012, LECT NOTES COMPUT SC, V7313, P356, DOI 10.1007/978-3-642-31057-7_17
   github, about us
   Gocht A., 2021, Tools for High Performance Computing 2018/2019, P261
   Goldsmith Simon F., 2007, P 6 JOINT M EUR SOFT, P395, DOI 10.1145/1287624.1287681
   Groenda H., 2012, Proceedings of the 8th international ACM SIGSOFT conference on Quality of Software Architectures, P111
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   Halili E. H., 2008, APACHE JMETER PRACTI
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Issues Apache, US
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Jalali SS, 2011, UKSIM EURO SYMP COMP, P451, DOI 10.1109/EMS.2011.77
   Javed O, 2020, IEEE INT CONF AUTOM, P1344, DOI 10.1145/3324884.3415288
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Ramos RTJ, 2012, BIOINFORMATION, V8, P996, DOI 10.6026/97320630008996
   Jung C, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P86
   Kawrykow D, 2009, IEEE INT CONF AUTOM, P111, DOI 10.1109/ASE.2009.62
   Kawrykow D, 2009, PROC INT CONF SOFTW, P183, DOI 10.1109/ICSE-COMPANION.2009.5070977
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kumar K., 2017, International Journal on Recent and Innovation Trends in Computing and Communication, V5, P307
   Lee Gregory L., 2007, 2007 IEEE International Symposium on Workload Characterization, p101, 105, DOI 10.1109/IISWC.2007.4362185
   Lemieux C, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P254, DOI 10.1145/3213846.3213874
   Li BX, 2016, 2016 4TH INTL CONF ON APPLIED COMPUTING AND INFORMATION TECHNOLOGY/3RD INTL CONF ON COMPUTATIONAL SCIENCE/INTELLIGENCE AND APPLIED INFORMATICS/1ST INTL CONF ON BIG DATA, CLOUD COMPUTING, DATA SCIENCE & ENGINEERING (ACIT-CSII-BCD), P7, DOI [10.1109/ACIT-CSII-BCD.2016.015, 10.1109/ACIT-CSII-BCD.2016.14]
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Liu LX, 2009, INT SYM CODE GENER, P265, DOI 10.1109/CGO.2009.36
   Liu TP, 2014, ACM SIGPLAN NOTICES, V49, P3, DOI [10.1145/2555243.2555244, 10.1145/2692916.2555244]
   Liu TP, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P3
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Luo Q, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P593, DOI 10.1145/2889160.2889164
   Mani N., 2011, Proceedings of the 2nd ACM/SPEC International Conference on Performance engineering, P499, DOI 10.1145/1958746.1958822
   Manotas I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P503, DOI 10.11455/2568225.2568297
   Markey P., 2013, PROC C 12 INFORMAT T
   Martens A, 2011, EMPIR SOFTW ENG, V16, P587, DOI 10.1007/s10664-010-9142-8
   McKnight P.E., 2010, Mann-Whitney U Test, The Corsini Encyclopedia of Psychology
   Mustafa KM, 2009, INT C COMP ELEC ENG, P229, DOI 10.1109/ICCEE.2009.9
   Nguyen Khanh, 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, ESEC/FSE 2013, page, P268
   Nistor A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P902, DOI 10.1109/ICSE.2015.100
   Nistor A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P562, DOI 10.1109/ICSE.2013.6606602
   Nistor A, 2013, IEEE WORK CONF MIN S, P237, DOI 10.1109/MSR.2013.6624035
   Noorshams Q., 2014, Proceedings of the 17th international ACM Sigsoft symposium on Component-based software engineering, P45
   Oh JJ, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P201, DOI 10.1145/1985793.1985822
   Olivo O, 2015, ACM SIGPLAN NOTICES, V50, P369, DOI [10.1145/2813885.2737966, 10.1145/273924.2737966]
   Patel M.C., 2012, Int. J. Eng. Res. Dev, V3, P58
   Pradel Michael, 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P13, DOI DOI 10.1145/2610384.2610393
   Prasad Srikrishna, 2013, 2013 IEEE Innovative Smart Grid TechnologiesAsia (ISGT Asia 2013), DOI 10.1109/ISGT-Asia.2013.6698774
   Projects Apache, US
   Roth P.C., 2003, SC, P21
   Sambasivan R. R., 2011, P 8 USENIX C NETW SY, P1
   Selakovic M, 2016, PROC INT CONF SOFTW, P61, DOI 10.1145/2884781.2884829
   Shacham O, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P408, DOI 10.1145/1542476.1542522
   Sharma VibhuSaujanya., 2005, Proceedings of the 5th international workshop on Software and performance, WOSP '05, P217
   Shen Du, 2015, P 2015 INT S SOFTW T, P270
   Siqueira AS., 2016, J OPEN RES STW, V4, pe12, DOI 10.5334/jors.81
   Smith C. U., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P127, DOI 10.1145/350391.350420
   Smith C.U., 2005, P 5 INT WORKSHOP SOF, P87
   Smith CU, 2007, LECT NOTES COMPUT SC, V4486, P395
   Smith Connie U., 2003, Software Performance Engineering, P343
   Smith ConnieU., 2002, Performance Solutions: a practical guide to creating responsive, scalable software, V1
   Sobel W., 2008, P CCA
   Song LH, 2017, PROC INT CONF SOFTW, P370, DOI 10.1109/ICSE.2017.41
   Srivastava N., 2021, J BIOMOL STRUCT DYN, V2, P1
   Staron Miroslaw, 2011, Product-Focused Software Process Improvement. Proceedings 12th International Conference, PROFES 2011, P3, DOI 10.1007/978-3-642-21843-9_3
   Stein JS, 2016, IEEE PHOT SPEC CONF, P3425, DOI 10.1109/PVSC.2016.7750303
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Su PF, 2019, PROC INT CONF SOFTW, P982, DOI 10.1109/ICSE.2019.00103
   Sullivan K. J., 2001, Software Engineering Notes, V26, P99, DOI 10.1145/503271.503224
   Treibig J., 2010, 2010 39th International Conference on Parallel Processing Workshops (ICPPW), P207, DOI 10.1109/ICPPW.2010.38
   Trubiani C., 2011, Proceedings of the 2nd ACM/SPEC International Conference on Performance engineering, P19
   ul Alam MM, 2017, PROCEEDINGS OF THE TWELFTH EUROPEAN CONFERENCE ON COMPUTER SYSTEMS (EUROSYS 2017), P298, DOI 10.1145/3064176.3064186
   Urkovic J., 2011, INT J ELECTRON COMM, V6, P3
   Walter J, 2017, ICPE'17: COMPANION OF THE 2017 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING, P165, DOI 10.1145/3053600.3053634
   Wang X, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P179, DOI 10.1109/ICSA47634.2020.00025
   Wen SS, 2017, TWENTY-SECOND INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXII), P47, DOI 10.1145/3037697.3037729
   White M, 2015, INT C PROGRAM COMPRE, P48, DOI 10.1109/ICPC.2015.14
   Wohlin C, 2014, 18 INT C EV ASS SOFT, P1, DOI DOI 10.1145/2601248.2601268
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
   Wu X, 2015, QOSA'15 PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGSOFT CONFERENCE ON QUALITY OF SOFTWARE ARCHITECTURES, P93, DOI 10.1145/2737182.2737197
   Xiao JC, 2008, PROC IEEE INT CONF S, P17, DOI 10.1109/ICSM.2008.4658050
   Xiao L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P967, DOI 10.1145/2568225.2568241
   Xu GQ, 2013, LECT NOTES COMPUT SC, V7920, P1, DOI 10.1007/978-3-642-39038-8_1
   Xu GQ, 2012, LECT NOTES COMPUT SC, V7313, P738, DOI 10.1007/978-3-642-31057-7_32
   Xu GQ, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P160, DOI 10.1145/1806596.1806616
   Xu GQ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P151, DOI 10.1145/1368088.1368110
   Xu Zhang, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P72, DOI 10.1109/COMPSAC.2010.68
   Yu T., 2016, P 25 INT S SOFTW TES, P389
   Zaman S., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P199, DOI 10.1109/MSR.2012.6224281
   Zhao YT, 2020, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'20), P181, DOI 10.1145/3358960.3379130
   Zhao YT, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P202, DOI 10.1109/ICSA47634.2020.00027
NR 119
TC 1
Z9 1
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 924
EP 946
DI 10.1109/TSE.2022.3167628
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900025
DA 2024-07-18
ER

PT J
AU Wang, Y
   Wang, YB
   Wang, SA
   Liu, YP
   Xu, C
   Cheung, SC
   Yu, H
   Zhu, ZL
AF Wang, Ying
   Wang, Yibo
   Wang, Sinan
   Liu, Yepang
   Xu, Chang
   Cheung, Shing-Chi
   Yu, Hai
   Zhu, Zhiliang
TI Runtime Permission Issues in Android Apps: Taxonomy, Practices, and Ways
   Forward
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Runtime; Interviews; Open source software; Taxonomy; Task analysis;
   Systematics; Software development management; Runtime permission;
   Android apps; empirical study
AB Android introduces a new permission model that allows apps to request permissions at runtime rather than at the installation time since 6.0 (Marshmallow, API level 23). While this runtime permission model provides users with greater flexibility in controlling an app & rsquo;s access to sensitive data and system features, it brings new challenges to app development. First, as users may grant or revoke permissions at any time while they are using an app, developers need to ensure that the app properly checks and requests required permissions before invoking any permission-protected APIs. Second, Android & rsquo;s permission mechanism keeps evolving and getting customized by device manufacturers. Developers are expected to comprehensively test their apps on different Android versions and device models to make sure permissions are properly requested in all situations. Unfortunately, these requirements are often impractical for developers. In practice, many Android apps suffer from various runtime permission issues (ARP issues). While existing studies have explored ARP issues, the understanding of such issues is still preliminary. To better characterize ARP issues, we performed an empirical study using 135 Stack Overflow posts that discuss ARP issues and 199 real ARP issues archived in popular open-source Android projects on GitHub. Via analyzing the data, we observed 11 types of ARP issues that commonly occur in Android apps. For each type of issues, we systematically studied: (1) how they can be manifested, (2) how pervasive and serious they are in real-world apps, and (3) how they can be fixed. We also analyzed the evolution trend of different types of issues from 2015 to 2020 to understand their impact on the Android ecosystem. Furthermore, we conducted a field survey and in-depth interviews among the practitioners from open-source community and industry, to gain insights from practitioners & rsquo; practices and learn their requirements of tools that can help combat ARP issues. Finally, to understand the strengths and weaknesses of the existing tools that can detect ARP issues, we built ARPBENCH, an open benchmark consisting of 94 real ARP issues, and evaluated the performance of three available tools. The experimental results indicate that the existing tools have very limited supports for detecting our observed issue types and report a large number of false alarms. We further analyzed the tools & rsquo; limitations and summarized the challenges of designing an effective ARP issue detection technique. We hope that our findings can shed light on future research and provide useful guidance to practitioners.
C1 [Wang, Ying; Wang, Yibo; Yu, Hai; Zhu, Zhiliang] Northeasthern Univ, Software Coll, Shenyang 110819, Liaoning, Peoples R China.
   [Wang, Ying] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Hong Kong, Peoples R China.
   [Wang, Ying; Xu, Chang] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Jiangsu, Peoples R China.
   [Wang, Sinan; Liu, Yepang] Southern Univ Sci & Technol, Res Inst Trustworthy Autonomous Syst, Dept Comp Sci & Engn, Guangdong Prov Key Lab Brain inspired Intelligent, Shenzhen 518055, Guangdong, Peoples R China.
   [Xu, Chang] Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210093, Jiangsu, Peoples R China.
   [Cheung, Shing-Chi] Hong Kong Univ Sci & Technol, Hong Kong, Peoples R China.
   [Cheung, Shing-Chi] Guangzhou HKUST Fok Ying Tung Res Inst, Hong Kong, Peoples R China.
C3 Hong Kong University of Science & Technology; Nanjing University;
   Southern University of Science & Technology; Nanjing University; Hong
   Kong University of Science & Technology
RP Liu, YP (corresponding author), Southern Univ Sci & Technol, Res Inst Trustworthy Autonomous Syst, Dept Comp Sci & Engn, Guangdong Prov Key Lab Brain inspired Intelligent, Shenzhen 518055, Guangdong, Peoples R China.
EM wangying@swc.neu.edu.cn; wangc_neu@163.com; wangsn@mail.sustech.edu.cn;
   liuyp1@sustech.edu.cn; changxu@nju.edu.cn; scc@cse.ust.hk;
   yuhai@mail.neu.edu.cn; zzl@mail.neu.edu.cn
RI Liu, Chenyu/KBQ-8899-2024; li, jing/KHY-5337-2024; YU, Hai/E-6831-2018;
   Liu, Yepang/G-6183-2018; Cheung, Shing Chi/U-5882-2018
OI YU, Hai/0000-0002-8024-1781; Liu, Yepang/0000-0001-8147-8126; Xu,
   Chang/0000-0002-6299-4704; Cheung, Shing Chi/0000-0002-3508-7172
FU National Natural Science Foundation of China [61932021, 62141210,
   61902056, 61802164, 61977014]; Hong Kong RGC/GRF [16211919]; MSRA Grant;
   ITF Grant [MHP/055/19, PiH/255/21]; Guandong Basic and Applied Basic
   Research Fundation [2021A1515011562]; Guangdong Provincial Key
   Laboratory [2020B121201001]; Shenyang Young and Middle-aged Talent
   Support Program [ZX20200272]; Open Fund of State Key Laboratory for
   Novel Software Technology, Nanjing University [KFKT2021B01]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grant 61932021, 62141210, 61902056, 61802164,
   and 61977014,in part by The Hong Kong RGC/GRF under Grant 16211919, MSRA
   Grant, ITF Grant (MHP/055/19, PiH/255/21), in part by Guandong Basic and
   Applied Basic Research Fundation under Grant 2021A1515011562, in part by
   Guangdong Provincial Key Laboratory under Grant 2020B121201001, in part
   by Shenyang Young and Middle-aged Talent Support Program under Grant
   ZX20200272,and in part by the Open Fund of State Key Laboratory for
   Novel Software Technology, Nanjing University KFKT2021B01.
CR Aafer Y, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P1151, DOI 10.1145/3243734.3243842
   Agarwal Yuvraj, 2013, P 11 ANN INT C MOB S, P97, DOI DOI 10.1145/2462456.2464460
   Alepis E, 2017, LECT NOTES COMPUT SC, V10662, P53, DOI 10.1007/978-3-319-71501-8_4
   Andriotis P, 2016, IEEE INT WORKS INFOR, DOI 10.14324/000.ds.1520825
   [Anonymous], 2021, ISS 125 PROJ QRCODER
   [Anonymous], 2021, SO POST 30719047
   [Anonymous], 2021, SO POST 34959331
   [Anonymous], 2021, ISS 373 PROJ HOCKEYS
   [Anonymous], 2021, SO POST 35989288
   [Anonymous], 2021, ANDR SDK SOURC COD
   [Anonymous], 2021, HOCKEYSDK ANDR
   [Anonymous], 2021, SO POST 35248269
   [Anonymous], 2021, POST 58428763
   [Anonymous], 2021, ANDR OFF DOC
   [Anonymous], 2021, ISS 723 PROJ MAPSF
   [Anonymous], 2021, SO POST 39655365
   [Anonymous], 2021, ISS 10 PROJ ASS
   [Anonymous], 2021, SO GUID 1 ASK QUES S
   [Anonymous], 2021, ISS 2 PROJ BARC READ
   [Anonymous], 2021, PR 401 PROJ HOCKEYSD
   [Anonymous], 2021, SO POST 47787577
   [Anonymous], 2021, SPEC MERG MAN FIL
   [Anonymous], 2021, ISS 269 PROJ REACT N
   [Anonymous], 2021, SO POST 20740632
   [Anonymous], 2021, ISS 168 PROJ APPT AN
   [Anonymous], 2021, ISS 261 PROJ NEM
   [Anonymous], 2021, ISSUE 72 PROJECT SEC
   [Anonymous], 2021, SO POST 39603098
   [Anonymous], 2021, SO POST 36693127
   [Anonymous], 2021, SO GUID 2 DUPL QUEST
   [Anonymous], 2021, ISS 356 PROJ HOCKEYS
   [Anonymous], 2021, ISS 58 PROJ BUGL AND
   [Anonymous], 2021, SO POST 44374646
   [Anonymous], 2021, ISS 228 PROJ OPENRED
   [Anonymous], 2021, ISS 766 PROJ KATZ
   [Anonymous], 2021, US REV ARP ISS THERM
   [Anonymous], 2021, ISS 76 PROJ QRCODERE
   [Anonymous], 2021, ISS 920 PROJ ANDR BE
   [Anonymous], 2021, ABOUT US
   [Anonymous], 2021, SO POST 54615936
   [Anonymous], 2021, SO POST 59418504
   [Anonymous], 2021, POST 52781910
   [Anonymous], 2021, ISS 737 PROJ NAT NAV
   [Anonymous], 2021, LINT
   [Anonymous], 2021, TOP DEV MAN ANDR MAR
   [Anonymous], 2021, ISS 229 PROJ DEXT
   [Anonymous], 2021, ISS 2110 PROJ K9MAIL
   [Anonymous], 2021, SO POST 43467522
   [Anonymous], 2021, ISS 88 PROJ SEC PROJ
   [Anonymous], 2021, ISS 90 PROJ STARDR
   [Anonymous], 2021, ISS 650 PROJ COMM AP
   [Anonymous], 2021, ISS 982 PROJ LAWNCH
   [Anonymous], 2021, ISS 382 PROJ HOCKEYS
   [Anonymous], 2021, ANDR PERM US NOT
   [Anonymous], 2021, SO POST 42762308
   [Anonymous], 2021, ISS 1 PROJ SWATI4STA
   [Anonymous], 2021, ISS 1343 PROJ OWNCL
   [Anonymous], 2021, SO POST 58059097
   [Anonymous], 2021, GOOGLE PLAY
   [Anonymous], 2021, POST 34150083
   Au Kathy Wain Yee, 2012, P 2012 ACM C COMP CO, P217
   Backes M, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P1101
   Bagheri H, 2018, FORM ASP COMPUT, V30, P525, DOI 10.1007/s00165-017-0445-z
   Bagheri H, 2015, IEEE T SOFTWARE ENG, V41, P866, DOI 10.1109/TSE.2015.2419611
   Bagheri H, 2015, LECT NOTES COMPUT SC, V9109, P73, DOI 10.1007/978-3-319-19249-9_6
   Bao LF, 2017, SCI CHINA INFORM SCI, V60, DOI 10.1007/s11432-016-9072-3
   Bao LF, 2016, 2016 INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, TESTING AND EVOLUTION (SATE 2016), P36, DOI 10.1109/SATE.2016.13
   Barrera D, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P73, DOI 10.1145/1866307.1866317
   Bartel A, 2014, IEEE T SOFTWARE ENG, V40, P617, DOI 10.1109/TSE.2014.2322867
   Bartel A, 2012, IEEE INT CONF AUTOM, P274, DOI 10.1145/2351676.2351722
   Bogdanas D, 2017, Arxiv, DOI arXiv:1706.05042
   Bugiel Sven, 2013, 22 USENIX SEC S, P131
   Calciati P, 2017, IEEE WORK CONF MIN S, P37, DOI 10.1109/MSR.2017.64
   Chen QY, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3434280
   Creswell J. W., 2016, Qualitative Inquiry & Research Design Choosing Among Five Aproaches, DOI DOI 10.1089/TMJ.2009.0067
   Dawoud A, 2021, 28TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2021), DOI 10.14722/ndss.2021.23106
   Dilhara M, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P67, DOI 10.1145/3197231.3197255
   Duijn M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P410, DOI 10.1109/MSR.2015.51
   F-Droid, 2021, about us
   Fang ZR, 2016, ASIA CCS'16: PROCEEDINGS OF THE 11TH ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P747, DOI 10.1145/2897845.2897914
   Fang ZR, 2014, COMPUT SECUR, V43, P205, DOI 10.1016/j.cose.2014.02.007
   Felt AP, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P627
   Felt Adrienne Porter, 2012, P 7 USENIX C HOT TOP, P7
   Feng YL, 2019, IEEE ACCESS, V7, P57829, DOI 10.1109/ACCESS.2019.2912210
   Fragkaki Elli, 2012, Computer Security - ESORICS 2012. Proceedings 17th European Symposium on Research in Computer Security, P1, DOI 10.1007/978-3-642-33167-1_1
   github, 2021, about us
   Hassan S, 2020, IEEE T SOFTWARE ENG, V46, P773, DOI 10.1109/TSE.2018.2869395
   Hassan S, 2018, EMPIR SOFTW ENG, V23, P1275, DOI 10.1007/s10664-017-9538-9
   Heuser S, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P1005
   Li L, 2014, Arxiv, DOI arXiv:1404.7431
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Libraries.io, 2021, US
   Linares-Vasquez M, 2014, P 22 INT C PROGR C, P83
   Liu B, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P201, DOI 10.1145/2566486.2568035
   Liu XQ, 2018, 2018 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P137, DOI 10.1109/VLHCC.2018.8506574
   Liu YP, 2019, EMPIR SOFTW ENG, V24, P3435, DOI 10.1007/s10664-019-09715-8
   Liu ZX, 2019, AUTOMAT SOFTW ENG, V26, P241, DOI 10.1007/s10515-019-00254-6
   Nauman M., 2010, P 5 ACM S INF COMP C, V10, P328, DOI [10.1145/1755688.1755732, DOI 10.1145/1755688.1755732]
   Nguyen HH, 2017, INT C PROGRAM COMPRE, P324, DOI 10.1109/ICPC.2017.14
   Olejnik K, 2017, P IEEE S SECUR PRIV, P1058, DOI 10.1109/SP.2017.25
   Shen BY, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P751
   Wei LL, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P672, DOI 10.1145/3106237.3106294
   Wei XT, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P31
   Wijesekera P, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P499
   Wu TY, 2016, IEEE T SOFTWARE ENG, V42, P1054, DOI 10.1109/TSE.2016.2547385
   [许畅 Xu Chang], 2020, [中国科学. 信息科学, Scientia Sinica Informationis], V50, P1595
   Zhauniarovich Y, 2016, LECT NOTES COMPUT SC, V9854, P346, DOI 10.1007/978-3-319-45719-2_16
   Zhou JY, 2020, EMPIR SOFTW ENG, V25, P139, DOI 10.1007/s10664-019-09744-3
   Zhou YJ, 2011, LECT NOTES COMPUT SC, V6740, P93, DOI 10.1007/978-3-642-21599-5_7
NR 109
TC 3
Z9 3
U1 4
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 185
EP 210
DI 10.1109/TSE.2022.3148258
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA L1HD8
UT WOS:001020827200010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tsoukalas, D
   Mittas, N
   Chatzigeorgiou, A
   Kehagias, D
   Ampatzoglou, A
   Amanatidis, T
   Angelis, L
AF Tsoukalas, Dimitrios
   Mittas, Nikolaos
   Chatzigeorgiou, Alexander
   Kehagias, Dionysios
   Ampatzoglou, Apostolos
   Amanatidis, Theodoros
   Angelis, Lefteris
TI Machine Learning for Technical Debt Identification
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Machine learning; metrics; measurement; quality analysis and evaluation;
   software maintenance
AB Technical Debt (TD) is a successful metaphor in conveying the consequences of software inefficiencies and their elimination to both technical and non-technical stakeholders, primarily due to its monetary nature. The identification and quantification of TD rely heavily on the use of a small handful of sophisticated tools that check for violations of certain predefined rules, usually through static analysis. Different tools result in divergent TD estimates calling into question the reliability of findings derived by a single tool. To alleviate this issue we use 18 metrics pertaining to source code, repository activity, issue tracking, refactorings, duplication and commenting rates of each class as features for statistical and Machine Learning models, so as to classify them as High-TD or not. As a benchmark we exploit 18,857 classes obtained from 25 Java projects, whose high levels of TD has been confirmed by three leading tools. The findings indicate that it is feasible to identify TD issues with sufficient accuracy and reasonable effort: a subset of superior classifiers achieved an F$_2$2-measure score of approximately 0.79 with an associated Module Inspection ratio of approximately 0.10. Based on the results a tool prototype for automatically assessing the TD of Java projects has been implemented.
C1 [Tsoukalas, Dimitrios; Chatzigeorgiou, Alexander; Ampatzoglou, Apostolos; Amanatidis, Theodoros] Univ Macedonia, Dept Appl Informat, Thessaloniki 54636, Greece.
   [Mittas, Nikolaos] Int Hellen Univ, Dept Chem, Thessaloniki 57001, Greece.
   [Kehagias, Dionysios] Ctr Res & Technol Hellas, Informat Technol Inst, Thessaloniki 57001, Greece.
   [Angelis, Lefteris] Aristotle Univ Thessaloniki, Comp Sci Dept, Thessaloniki 54636, Greece.
C3 University of Macedonia; International Hellenic University; Centre for
   Research & Technology Hellas; Aristotle University of Thessaloniki
RP Tsoukalas, D (corresponding author), Univ Macedonia, Dept Appl Informat, Thessaloniki 54636, Greece.
EM tsoukj@iti.gr; nmittas@chem.ihu.gr; achat@uom.edu.gr; diok@iti.gr;
   a.ampatzoglou@uom.edu.gr; tamanatidis@uom.edu.gr; lef@csd.auth.gr
RI Chatzigeorgiou, Alexandros/AAL-6077-2021; Kehagias,
   Dionysios/H-9091-2016
OI Tsoukalas, Dimitrios/0000-0001-9986-0796; Kehagias,
   Dionysios/0000-0002-6912-3493
FU European Union [801015]; SmartCLIDE Project [871177]
FX This work was supported by the European Union's Horizon 2020 Research
   andInnovation Programme through EXA2PRO project under Grant AgreementNo.
   801015 and SmartCLIDE Project under Grant Agreement No. 871177.
CR Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Amanatidis T, 2020, EMPIR SOFTW ENG, V25, P4161, DOI 10.1007/s10664-020-09869-w
   Aniche M., 2015, Tech. Rep.
   Aniche M, 2022, IEEE T SOFTWARE ENG, V48, P1432, DOI 10.1109/TSE.2020.3021736
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Avgeriou P, 2016, Dagstuhl reports, V6, DOI DOI 10.4230/DAGREP.6.4.110
   Avgeriou P, 2021, IEEE SOFTWARE, V38, P61, DOI 10.1109/MS.2020.3024958
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Baldassari B., 2013, PROC INT C SOFTW SYS
   Besker T, 2019, J SYST SOFTWARE, V156, P41, DOI 10.1016/j.jss.2019.06.004
   Branco P, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2907070
   Breunig MM, 2000, SIGMOD REC, V29, P93, DOI 10.1145/335191.335388
   Campbell G., 2013, SONARQUBE IN ACTION
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chug A, 2016, INT J INNOV COMPUT I, V12, P615
   Codabux Zadia, 2020, P 14 ACM IEEE INT S, P1, DOI 10.1145/3382494.3422172
   Cruz D, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT, TECHDEBT, P31, DOI 10.1145/3387906.3388618
   Curtis B, 2012, IEEE SOFTWARE, V29, P34, DOI 10.1109/MS.2012.156
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Davis Jesse, 2006, P 23 INT C MACH LEAR, P233, DOI [DOI 10.1145/1143844.1143874, 10.1145/1143844.1143874]
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Digkas G, 2022, IEEE T SOFTWARE ENG, V48, P1705, DOI 10.1109/TSE.2020.3032557
   Elish MO, 2009, EUR CON SFTWR MTNCE, P69, DOI 10.1109/CSMR.2009.57
   Feurer M, 2015, ADV NEUR IN, V28
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   He H, 2013, IMBALANCED LEARNING: FOUNDATIONS, ALGORITHMS, AND APPLICATIONS, P1, DOI 10.1002/9781118646106
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Helmi RAA, 2020, 2020 16TH IEEE INTERNATIONAL COLLOQUIUM ON SIGNAL PROCESSING & ITS APPLICATIONS (CSPA 2020), P1, DOI [10.1109/CSPA48992.2020.9068678, 10.1109/cspa48992.2020.9068678]
   Kuhn M, 2013, Applied predictive modeling, P600, DOI [10.1007/978-1-4614-6849-3, 10.1007/978-1-4614-6849-3_3]
   Lenarduzzi V, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P2, DOI 10.1145/3345629.3345630
   Lenarduzzi V, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P501, DOI [10.1109/SANER48275.2020.9054821, 10.1109/saner48275.2020.9054821]
   Lujan Savanna, 2020, MaLTeSQuE 2020: Proceedings of the 4th ACM SIGSOFT International Workshop on Machine-Learning Techniques for Software-Quality Evaluation, P1, DOI 10.1145/3416505.3423559
   Malhotra R, 2018, INT CONF RELI INFO, P175, DOI 10.1109/ICRITO.2018.8748749
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   McFadden D., 1974, Frontiers in econometrics, DOI DOI 10.1108/EB028592
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Pecorelli F, 2020, IEEE WORK CONF MIN S, P220, DOI 10.1145/3379597.3387457
   Pritam N, 2019, IEEE ACCESS, V7, P37414, DOI 10.1109/ACCESS.2019.2905133
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Smith MR, 2011, 2011 INTERNATIONAL JOINT CONFERENCE ON NEURAL NETWORKS (IJCNN), P2690, DOI 10.1109/IJCNN.2011.6033571
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Suryanarayana G., 2014, Refactoring for Software Design Smells: Managing Technical Debt
   Tsantalis N, 2022, IEEE T SOFTWARE ENG, V48, P930, DOI 10.1109/TSE.2020.3007722
   Walden J, 2014, PROC INT SYMP SOFTW, P23, DOI 10.1109/ISSRE.2014.32
   Zhou Yuming, 2008, Wuhan University Journal of Natural Sciences, V13, P14, DOI 10.1007/s11859-008-0104-6
NR 47
TC 7
Z9 7
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 4892
EP 4906
DI 10.1109/TSE.2021.3129355
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600008
OA hybrid
DA 2024-07-18
ER

PT J
AU Kitchenham, B
   Madeyski, L
   Scanniello, G
   Gravino, C
AF Kitchenham, Barbara
   Madeyski, Lech
   Scanniello, Giuseppe
   Gravino, Carmine
TI The Importance of the Correlation in Crossover Experiments
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical software engineering; experiments; crossover experiments;
   crossover design; repeated measures correlation
ID COMPREHENSION
AB Context In empirical software engineering, crossover designs are popular for experiments comparing software engineering techniques that must be undertaken by human participants. However, their value depends on the correlation (r) between the outcome measures on the same participants. Software engineering theory emphasizes the importance of individual skill differences, so we would expect the values of r to be relatively high. However, few researchers have reported the values of r. Goal: To investigate the values of r found in software engineering experiments. Method: We undertook simulation studies to investigate the theoretical and empirical properties of r. Then we investigated the values of r observed in 35 software engineering crossover experiments. Results: The level of r obtained by analysing our 35 crossover experiments was small. Estimates based on means, medians, and random effect analysis disagreed but were all between 0.2 and 0.3. As expected, our analyses found large variability among the individual r estimates for small sample sizes, but no indication that r estimates were larger for the experiments with larger sample sizes that exhibited smaller variability. Conclusions: Low observed r values cast doubts on the validity of crossover designs for software engineering experiments. However, if the cause of low r values relates to training limitations or toy tasks, this affects all Software Engineering (SE) experiments involving human participants. For all human-intensive SE experiments, we recommend more intensive training and then tracking the improvement of participants as they practice using specific techniques, before formally testing the effectiveness of the techniques.
C1 [Kitchenham, Barbara] Keele Univ, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
   [Madeyski, Lech] Wroclaw Univ Sci & Technol, Dept Appl Informat, PL-50370 Wroclaw, Poland.
   [Scanniello, Giuseppe] Univ Basilicata, Dept Math Comp Sci & Econ, I-85100 Potenza, Italy.
   [Gravino, Carmine] Univ Salerno, Dept Comp Sci, Fisciano, Italy.
C3 Keele University; Wroclaw University of Science & Technology; University
   of Basilicata; University of Salerno
RP Madeyski, L (corresponding author), Wroclaw Univ Sci & Technol, Dept Appl Informat, PL-50370 Wroclaw, Poland.
EM b.a.kitchenham@keele.ac.uk; Lech.Madeyski@pwr.edu.pl;
   giuseppe.scanniello@unibas.it; gravino@unisa.it
RI Madeyski, Lech/D-4986-2012
OI Madeyski, Lech/0000-0003-3907-3357; Kitchenham,
   Barbara/0000-0002-6134-8460; Gravino, Carmine/0000-0002-4394-9035;
   Scanniello, Giuseppe/0000-0003-0024-7508
CR Abrahao S, 2013, IEEE T SOFTWARE ENG, V39, P327, DOI 10.1109/TSE.2012.27
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Dunlap WP, 1996, PSYCHOL METHODS, V1, P170, DOI 10.1037/1082-989X.1.2.170
   Fernandez A, 2013, J SYST SOFTWARE, V86, P161, DOI 10.1016/j.jss.2012.07.043
   Gravino C, 2015, J VISUAL LANG COMPUT, V28, P23, DOI 10.1016/j.jvlc.2014.12.004
   Kitchenham B., 2020, IMPORTANCE CORRELATI, DOI [10.5281/zenodo.4475865, DOI 10.5281/ZENODO.4475865]
   Kitchenham B, 2020, EMPIR SOFTW ENG, V25, P353, DOI 10.1007/s10664-019-09747-0
   Kitchenham B, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P134, DOI 10.1145/3319008.3319009
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Laitenberger O, 2001, IEEE T SOFTWARE ENG, V27, P387, DOI 10.1109/32.922713
   Madeyski L., 2020, **DATA OBJECT**
   Madeyski L, 2018, EMPIR SOFTW ENG, V23, P1982, DOI 10.1007/s10664-017-9574-5
   Madeyski L, 2017, J INTELL FUZZY SYST, V32, P1509, DOI 10.3233/JIFS-169146
   Madeyski L, 2010, TEST-DRIVEN DEVELOPMENT, P1, DOI 10.1007/978-3-642-04288-1
   Reggio G, 2015, SOFTW SYST MODEL, V14, P1481, DOI 10.1007/s10270-013-0386-9
   Ricca F, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2629457
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Romano S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240496
   Rosenthal R., 1997, PEOPLE STUDYING PEOP
   Santos A, 2020, IEEE T SOFTWARE ENG, V46, P566, DOI 10.1109/TSE.2018.2864633
   Scanniello G., 2014, PROC 18 INT C EVAL A, P1
   Scanniello G, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3104029
   Scanniello G, 2015, EMPIR SOFTW ENG, V20, P1666, DOI 10.1007/s10664-014-9327-7
   Scanniello G, 2014, J VISUAL LANG COMPUT, V25, P494, DOI 10.1016/j.jvlc.2014.03.002
   Scanniello G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2491912
   Senn S., 2002, CROSS OVER TRIALS CL, V156, P512, DOI DOI 10.1002/0470854596
   Torchiano M, 2017, J VISUAL LANG COMPUT, V41, P10, DOI 10.1016/j.jvlc.2017.06.002
   Vegas S, 2016, IEEE T SOFTWARE ENG, V42, P120, DOI 10.1109/TSE.2015.2467378
NR 29
TC 2
Z9 2
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 2802
EP 2813
DI 10.1109/TSE.2021.3070480
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500007
OA hybrid
DA 2024-07-18
ER

PT J
AU Nagaria, B
   Hall, T
AF Nagaria, Bhaveet
   Hall, Tracy
TI How Software Developers Mitigate Their Errors When Developing Code
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Task analysis; Encoding; Psychology; Interviews; Software
   engineering; Footwear; Human error; human factors; software development
ID SITUATION AWARENESS; INFORMATION; INTERRUPTION; PERFORMANCE; ACCURACY;
   SYSTEMS
AB Code remains largely hand-made by humans and, as such, writing code is prone to error. Many previous studies have focused on the technical reasons for these errors and provided developers with increasingly sophisticated tools. Few studies have looked in detail at why code errors have been made from a human perspective. We use Human Error Theory to frame our exploratory study and use semi-structured interviews to uncover a preliminary understanding of the errors developers make while coding. We look particularly at the Skill-based (SB) errors reported by 27 professional software developers. We found that the complexity of the development environment is one of the most frequently reported reasons for errors. Maintaining concentration and focus on a particular task also underpins many developer errors. We found that developers struggle with effective mitigation strategies for their errors, reporting strategies largely based on improving their own willpower to concentrate better on coding tasks. We discuss how using Reason's Swiss Cheese model may help reduce errors during software development. This model ensures that layers of tool, process and management mitigation are in place to prevent developer errors from causing system failures.
C1 [Nagaria, Bhaveet] Brunel Univ London, Dept Comp Sci, Uxbridge UB8 3PH, Middx, England.
   [Hall, Tracy] Univ Lancaster, Sch Comp & Commun, Lancaster LA1 4YW, England.
C3 Brunel University; Lancaster University
RP Nagaria, B (corresponding author), Brunel Univ London, Dept Comp Sci, Uxbridge UB8 3PH, Middx, England.
EM bhaveet.nagaria@brunel.ac.uk; tracy.hall@lancaster.ac.uk
FU UK's Engineering and Physical Sciences Research Council [EP/S005730/1];
   EPSRC [EP/S005730/1] Funding Source: UKRI
FX The authors would like to thank all the study participants. This study
   has has been approved by Brunel University Ethics Committee reference
   12218-LR-Jul/2018-13605-1. The study was partly funded by the UK's
   Engineering and Physical Sciences Research Council (EP/S005730/1).
CR Abimanyi-Ochom J, 2019, BMC MED INFORM DECIS, V19, DOI 10.1186/s12911-019-0901-1
   Ami A. S., 2014, PROC INT C INFORM EL, P1
   [Anonymous], 2010, PROC ACM IEEE INT S, DOI DOI 10.1145/1852786.1852789
   Anu V., 2016, Proc. 28th Int. Conf. Softw. Eng. Knowl. Eng. SEKE 2016, P531
   Anu V, 2017, PROCEEDINGS OF THE 2017 ACM SIGCSE TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION (SIGCSE'17), P39, DOI 10.1145/3017680.3017782
   Anu V, 2016, PROC INT SYMP SOFTW, P65, DOI 10.1109/ISSRE.2016.41
   Bailey BP, 2006, COMPUT HUM BEHAV, V22, P685, DOI 10.1016/j.chb.2005.12.009
   Beso A, 2005, PHARM WORLD SCI, V27, P182, DOI 10.1007/s11096-004-2270-8
   Beynon-Davies P, 1999, INTERACT COMPUT, V11, P699, DOI 10.1016/S0953-5438(98)00050-2
   Boyd J., 2018, A Discourse on Winning and Losing
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Brennan PA, 2016, BRIT J ORAL MAX SURG, V54, P3, DOI 10.1016/j.bjoms.2015.09.023
   Brumby DP, 2013, J EXP PSYCHOL-APPL, V19, P95, DOI 10.1037/a0032696
   Brykczynski B., 1999, Software Engineering Notes, V24, P82, DOI 10.1145/308769.308798
   Cai HP, 2016, IEEE T RELIAB, V65, P1114, DOI 10.1109/TR.2015.2481000
   Cai HP, 2015, J SYST SOFTWARE, V103, P248, DOI 10.1016/j.jss.2015.02.018
   Carthey J, 2013, J PUBLIC HEALTH RES, V2, P144, DOI 10.4081/jphr.2013.e25
   Clay-Williams R, 2015, BMJ QUAL SAF, V24, P428, DOI 10.1136/bmjqs-2015-003957
   Dekker S, 2005, 10 QUESTIONS HUMAN E
   Ebert F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P49, DOI [10.1109/SANER.2019.8668024, 10.1109/saner.2019.8668024]
   Ely JW, 2011, ACAD MED, V86, P307, DOI 10.1097/ACM.0b013e31820824cd
   Endsley M. R., 1988, Proceedings of the IEEE 1988 National Aerospace and Electronics Conference: NAECON 1988 (Cat. No.88CH2596-5), P789, DOI 10.1109/NAECON.1988.195097
   ERICSSON KA, 1980, PSYCHOL REV, V87, P215, DOI 10.1037/0033-295X.87.3.215
   Fitts PM., 1947, TSEAA-694.12
   Fritz T, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P7, DOI 10.1145/2635868.2635905
   Gonçales L, 2019, INT C PROGRAM COMPRE, P42, DOI 10.1109/ICPC.2019.00018
   Graziotin D., 2017, UNHAPPINESS SOFTWARE
   Hakala JL, 2012, J NUCL MED TECHNOL, V4, P183, DOI 10.2967/jnmt.111.097105
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   Hu W., 2016, 10 ACM IEEE INT S EM
   Hu W., 2017, PROC REFSQ WORKSHOPS
   Hu WH, 2018, EMPIR SOFTW ENG, V23, P3768, DOI 10.1007/s10664-018-9623-8
   Hu WH, 2017, LECT NOTES COMPUT SC, V10153, P61, DOI 10.1007/978-3-319-54045-0_5
   Huang AFQ, 2012, PROCEEDINGS 18TH ISSAT INTERNATIONAL CONFERENCE ON RELIABILITY & QUALITY IN DESIGN, P44
   Huang F., 2011, PROC 23 PSYCHOL PROG
   Huang FQ, 2017, CHINESE J AERONAUT, V30, P1054, DOI 10.1016/j.cja.2017.03.005
   Huang FQ, 2016, 9TH IEEE/ACM INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2016), P108, DOI [10.1145/2897586.2897608, 10.1109/CHASE.2016.030]
   Huang FQ, 2014, SCI COMPUT PROGRAM, V89, P350, DOI 10.1016/j.scico.2014.03.004
   Ioannou G, 2019, IEEE ACCESS, V7, P39305, DOI 10.1109/ACCESS.2019.2897923
   Jiang SY, 2017, EMPIR SOFTW ENG, V22, P631, DOI 10.1007/s10664-016-9441-9
   Kevic K, 2017, J SYST SOFTWARE, V128, P252, DOI 10.1016/j.jss.2016.03.030
   Kini SO, 2018, IEEE INT WORK C SO, P72, DOI 10.1109/SCAM.2018.00016
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   LEAPE LL, 1994, JAMA-J AM MED ASSOC, V272, P1851, DOI 10.1001/jama.272.23.1851
   Li SYW, 2008, J EXP PSYCHOL-APPL, V14, P314, DOI 10.1037/a0014397
   Meyer A.N., 2019, Rethinking Productivity in Software Engineering, P137, DOI DOI 10.1007/978-1-4842-4221-6_12
   Ortu M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P303, DOI 10.1109/MSR.2015.35
   Peitek N, 2020, IEEE T SOFTWARE ENG, V46, P442, DOI 10.1109/TSE.2018.2863303
   Petersen L., 2019, SAE INT J CONNECTED, V2
   Pirzadeh L., 2010, THESIS CHALMERS U TE, P368
   Procida D, 2017, FIGHTING CONTROLS MA
   Ribeiro GDR, 2016, REV ESC ENFERM USP, V50, P419
   RASMUSSEN J, 1983, IEEE T SYST MAN CYB, V13, P257, DOI 10.1109/TSMC.1983.6313160
   Reason J, 2000, BMJ-BRIT MED J, V320, P768, DOI 10.1136/bmj.320.7237.768
   Reason J., 1991, HUMAN ERROR
   Reason J.T., 2008, The human contribution: Unsafe acts, accidents, and heroic recoveries
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Sarkar S, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2017), P32, DOI 10.1109/SEmotion.2017.2
   Siegmund J, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P13, DOI 10.1109/SANER.2016.35
   Smith J, 2019, IEEE T SOFTWARE ENG, V45, P877, DOI 10.1109/TSE.2018.2810116
   Sugden C, 2012, SEMIN THORAC CARDIOV, V24, P166, DOI 10.1053/j.semtcvs.2012.06.005
   Sutherland A, 2009, PROC INT CONF SOFTW, P259, DOI 10.1109/ICSE-COMPANION.2009.5070996
   Sykes ER, 2011, INT J INFORM MANAGE, V31, P385, DOI 10.1016/j.ijinfomgt.2010.10.010
   Tomayko J.E., 2002, J COMPUTER SCI ED, V12, P213, DOI DOI 10.1076/CSED.12.3.213.8614
   Walia GS, 2009, INFORM SOFTWARE TECH, V51, P1087, DOI 10.1016/j.infsof.2009.01.004
   Wickens CD, 2002, CURR DIR PSYCHOL SCI, V11, P128, DOI 10.1111/1467-8721.00184
   Williams L, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P34, DOI 10.1109/ISSRE.2003.1251029
   Wright MC, 2004, QUAL SAF HEALTH CARE, V13, pI65, DOI 10.1136/qshc.2004.009951
   Züger M, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P61, DOI 10.1145/3025453.3025662
NR 69
TC 11
Z9 11
U1 5
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2022
VL 48
IS 6
BP 1853
EP 1867
DI 10.1109/TSE.2020.3040554
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2D5IM
UT WOS:000811580600002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Papis, B
   Grochowski, K
   Subzda, K
   Sijko, K
AF Papis, Bartosz
   Grochowski, Konrad
   Subzda, Kamil
   Sijko, Kamil
TI Experimental Evaluation of Test-Driven Development With Interns Working
   on a Real Industrial Project
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Companies; Testing; Writing; Programming; Market research;
   Empirical software engineering; iterative test last development; Test
   driven development
ID QUALITY; RULES
AB Context: There is still little evidence on differences between Test-Driven Development and Test-Last Development, especially for real-world projects, so their impact on code/test quality is an ongoing research trend. An empirical comparison is presented, with 19 participants working on an industrial project developed for an energy market software company, implementing real-world requirements for one of the company's customers. Objective: Examine the impact of TDD and TLD on quality of the code and the tests. The aim is to evaluate if there is a significant difference in external code quality and test quality between these techniques. Method: The experiment is based on a randomized within-subjects block design, with participants working for three months on the same requirements using different techniques, changed from week to week, within three different competence blocks: Intermediate, Novice and Mixed. The resulting code was verified for process conformance. The participants developed only business logic and were separated from infrastructural concerns. A separate group of code repositories was used to work without unit tests, to verify that the requirements were not too easy for the participants. Also, it was analysed if there is any difference between the code created by shared efforts of developers with different competences and the code created by participants isolated in the competence blocks. The resulting implementations had LOC order of magnitude of 10k. Results: Statistically significant advantage of TDD in terms of external code quality (1.8 fewer bugs) and test quality (5 percentage points higher) than TLD. Additionally, TDD narrows the gap in code coverage between developers from different competence blocks. At the same time, TDD proved to have a considerable entry barrier and was hard to follow strictly, especially by Novices. Still, no significant difference w.r.t. code coverage has been observed between the Intermediate and the Novice developers - as opposed to TLD, which was easier to follow. Lastly, isolating the Intermediate developers from the Novices had significant impact on the code quality. Conclusion:TDD is a recommended technique for software projects with a long horizon or when it is critical to minimize the number of bugs and achieve high code coverage.
C1 [Papis, Bartosz] Google Inc, PL-00113 Warsaw, Poland.
   [Grochowski, Konrad] Warsaw Univ Technol, PL-00661 Warsaw, Poland.
   [Subzda, Kamil] Nexwell Engn Wroclaw, PL-54440 Wroclaw, Poland.
   [Sijko, Kamil] Transit Technol SA, Warsaw, Poland.
C3 Google Incorporated; Warsaw University of Technology
RP Grochowski, K (corresponding author), Warsaw Univ Technol, PL-00661 Warsaw, Poland.
EM bartoszkp@gmail.com; Konrad.Grochowski@pw.edu.pl;
   kamil.subzda@gmail.com; kamil@sijko.pl
OI Grochowski, Konrad/0000-0003-3289-4806; Papis,
   Bartosz/0000-0001-6290-9349; Subzda, Kamil/0000-0003-1323-0588
FU Transition Technologies S.A.
FX This work was funded within the GasLux product group, by Transition
   Technologies S.A. Thanks are due to Dr Katarzyna Bartkiewicz and Dr
   Piotr Gawkowski for the article review and valuable comments.
CR Baayen RH, 2008, J MEM LANG, V59, P390, DOI 10.1016/j.jml.2007.12.005
   Beck Kent L., 2003, Test Driven Development By Example
   Becker K, 2015, INFORM SOFTWARE TECH, V57, P494, DOI 10.1016/j.infsof.2014.06.003
   Bhat T., 2006, Proceedings of the 2006 ACM/IEEE International Symposium on Empirical Software Engineering (ISESE '06), P356, DOI [DOI 10.1145/1159733.1159787, 10.1145/1159733.1159787]
   Bissi W, 2016, INFORM SOFTWARE TECH, V74, P45, DOI 10.1016/j.infsof.2016.02.004
   Canfora G, 2006, LECT NOTES COMPUT SC, V4034, P383
   Cohn Mike., 2010, SUCCEEDING AGILE SOF
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Evans E., 2003, Domain-Driven Design
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Fucci D., 2014, Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, P10
   Fucci D, 2017, IEEE T SOFTWARE ENG, V43, P597, DOI 10.1109/TSE.2016.2616877
   George B, 2004, INFORM SOFTWARE TECH, V46, P337, DOI 10.1016/j.infsof.2003.09.011
   George B., 2003, Proc. of the ACM SAC 2003. SAC 03, P1135, DOI [DOI 10.1145/952532.952753, 10.1145/952532.952753$, DOI 10.1145/952532.952753$]
   Gibbons RD, 2010, ANNU REV CLIN PSYCHO, V6, P79, DOI 10.1146/annurev.clinpsy.032408.153550
   Hoewe J., 2017, MANIPULATION CHECK, P1
   Janzen DS, 2008, IEEE SOFTWARE, V25, P77, DOI 10.1109/MS.2008.34
   Janzen DS, 2006, CONF SOFTW ENG EDUC, P141, DOI 10.1109/CSEET.2006.25
   Johnson PM, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P136
   Ko AJ, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922658
   Kou HB, 2010, AUTOMAT SOFTW ENG, V17, P57, DOI 10.1007/s10515-009-0058-8
   Lui KM, 2004, LECT NOTES COMPUT SC, V3092, P219
   Madeyski L, 2010, TEST-DRIVEN DEVELOPMENT, P1, DOI 10.1007/978-3-642-04288-1
   MCGRAW KO, 1992, PSYCHOL BULL, V111, P361, DOI 10.1037/0033-2909.111.2.361
   Miller R. G. J., 2012, SIMULTANEOUS STAT IN
   Mitchell M., 2012, RES DESIGN EXPLAINED, V8th
   Muller M. M., 2002, IEE Proceedings-Software, V149, P131, DOI 10.1049/ip-sen:20020540
   Müller MM, 2001, PROC INT CONF SOFTW, P537, DOI 10.1109/ICSE.2001.919128
   Munir H., 2014, PROC ACM INT C PROC, P110
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   Nagappan N, 2008, EMPIR SOFTW ENG, V13, P289, DOI 10.1007/s10664-008-9062-z
   Pancur M, 2011, INFORM SOFTWARE TECH, V53, P557, DOI 10.1016/j.infsof.2011.02.002
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Sawilowsky SS, 2009, J MOD APPL STAT METH, V8, P597, DOI 10.22237/jmasm/1257035100
   Shull F, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.152
   Tosun A., 2016, EMPIR SOFTW ENG, V22, P1
   Turhan B., 2010, EFFECTIVE IS TEST DR, P207
   Turnu I, 2006, J SYST ARCHITECT, V52, P610, DOI 10.1016/j.sysarc.2006.06.005
   Wang YH, 2004, LECT NOTES COMPUT SC, V3134, P32
   Williams L, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P34, DOI 10.1109/ISSRE.2003.1251029
   Williams TW, 2001, P REL MAINT S, P420, DOI 10.1109/RAMS.2001.902502
   Wohlin C., 2012, Experimentation in Software Engineering
NR 42
TC 0
Z9 0
U1 2
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2022
VL 48
IS 5
BP 1644
EP 1664
DI 10.1109/TSE.2020.3027522
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 1I8CJ
UT WOS:000797454000012
OA hybrid
DA 2024-07-18
ER

PT J
AU Aniche, M
   Maziero, E
   Durelli, R
   Durelli, VHS
AF Aniche, Mauricio
   Maziero, Erick
   Durelli, Rafael
   Durelli, Vinicius H. S.
TI The Effectiveness of Supervised Machine Learning Algorithms in
   Predicting Software Refactoring
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Biological system modeling; Measurement; Tools; Software; Predictive
   models; Context modeling; Prediction algorithms; Software engineering;
   software refactoring; machine learning for software engineering
ID STATIC ANALYSIS; CODE; SMELLS
AB Refactoring is the process of changing the internal structure of software to improve its quality without modifying its external behavior. Empirical studies have repeatedly shown that refactoring has a positive impact on the understandability and maintainability of software systems. However, before carrying out refactoring activities, developers need to identify refactoring opportunities. Currently, refactoring opportunity identification heavily relies on developers' expertise and intuition. In this paper, we investigate the effectiveness of machine learning algorithms in predicting software refactorings. More specifically, we train six different machine learning algorithms (i.e., Logistic Regression, Naive Bayes, Support Vector Machine, Decision Trees, Random Forest, and Neural Network) with a dataset comprising over two million refactorings from 11,149 real-world projects from the Apache, F-Droid, and GitHub ecosystems. The resulting models predict 20 different refactorings at class, method, and variable-levels with an accuracy often higher than 90 percent. Our results show that (i) Random Forests are the best models for predicting software refactoring, (ii) process and ownership metrics seem to play a crucial role in the creation of better models, and (iii) models generalize well in different contexts.
C1 [Aniche, Mauricio] Delft Univ Technol, NL-2628 CD Delft, Netherlands.
   [Maziero, Erick; Durelli, Rafael] Univ Fed Lavras, BR-37200900 Lavras, MG, Brazil.
   [Durelli, Vinicius H. S.] Fed Univ Sao del Rei, BR-36307352 Sao Joao Del Rei, MG, Brazil.
C3 Delft University of Technology; Universidade Federal de Lavras
RP Aniche, M (corresponding author), Delft Univ Technol, NL-2628 CD Delft, Netherlands.
EM m.f.aniche@tudelft.nl; erick.maziero@ufla.br; rafael.durelli@ufla.br;
   durelli@ufsj.edu.br
CR Al Dallal J, 2015, INFORM SOFTWARE TECH, V58, P231, DOI 10.1016/j.infsof.2014.08.002
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   AlOmar E. A., 2019, P 13 ACM IEEE INT S, P300
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Alshayeb M, 2009, INFORM SOFTWARE TECH, V51, P1319, DOI 10.1016/j.infsof.2009.04.002
   Aniche M., APPENDIX EFFECTIVENE
   Aniche M, 2018, EMPIR SOFTW ENG, V23, P2121, DOI 10.1007/s10664-017-9540-2
   Aniche M, 2016, PROC IEEE INT CONF S, P234, DOI 10.1109/ICSME.2016.12
   Aniche M, 2016, IEEE INT WORK C SO, P41, DOI 10.1109/SCAM.2016.19
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Baqais AAB, 2020, SOFTWARE QUAL J, V28, P459, DOI 10.1007/s11219-019-09477-y
   Bavota G., 2014, Recommendation Systems in Software Engineering, P387
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Bavota G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P56, DOI 10.1109/ICSM.2012.6405253
   Beller M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P470, DOI 10.1109/SANER.2016.105
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bishop Christopher M, 2006, PATTERN RECOGN, V128, P1
   Breiman L., 2001, Mach. Learn., V45, P5
   Bucilua C., 2006, P 12 ACM SIGKDD INT, P535, DOI DOI 10.1145/1150402.1150464
   Carvalho SG, 2019, EMPIR SOFTW ENG, V24, P3546, DOI 10.1007/s10664-019-09768-9
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Devlin J., 2018, ARXIV 181004805CSCL
   Fernandes E, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915984
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Goldberg Y., 2014, ARXIV
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Habchi S, 2018, IEEE INT CONF AUTOM, P6, DOI 10.1145/3238147.3238197
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Higo Y, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110571
   Hindle A, 2016, COMMUN ACM, V59, P122, DOI 10.1145/2902362
   Ioffe S, 2015, P INT C MACH LEARN, V2015, P1
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Kataoka Y, 2002, PROC IEEE INT CONF S, P576, DOI 10.1109/ICSM.2002.1167822
   Kaur S, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.110394
   Kerievsky J, 2004, REFACTORING PATTERNS, P464
   Kim B, 2018, PR MACH LEARN RES, V80
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1
   Kondo M, 2019, EMPIR SOFTW ENG, V24, P1925, DOI 10.1007/s10664-018-9679-5
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Kumar R, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P48, DOI 10.1109/BotSE.2019.00020
   Lanza M, 2007, Object-oriented Metrics in Practice: Using Software Metrics To Characterize, Evaluate, and Improve the Design of Object-oriented Systems
   Lehman M. M., 1996, Software Process Technology. 5th European Workshop, EWSPT '96 Proceedings, P108, DOI 10.1007/BFb0017737
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   Leitch R, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P309, DOI 10.1109/METRIC.2003.1232477
   Liu Kui, 2019, P 41 INT C SOFTW ENG, P1
   Madeyski L, 2015, SOFTWARE QUAL J, V23, P393, DOI 10.1007/s11219-014-9241-7
   Mariani T, 2017, INFORM SOFTWARE TECH, V83, P14, DOI 10.1016/j.infsof.2016.11.009
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mikolov T., 2013, INT C LEARN REPR SCO, DOI 10.48550/ARXIV.1301.3781
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Mohan Michael, 2018, Journal of Software Engineering Research and Development, V6, DOI 10.1186/s40411-018-0046-4
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Pedregosa F, 2011, J. Mach. Learn. Res., V12, P2825
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rapp M., 2019, P 56 ACM IEEE DES AU, P1
   Rasool G, 2015, J SOFTW-EVOL PROC, V27, P867, DOI 10.1002/smr.1737
   Sadowski C, 2018, COMMUN ACM, V61, P58, DOI 10.1145/3188720
   Sadowski C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P598, DOI 10.1109/ICSE.2015.76
   Santos JAM, 2018, J SYST SOFTWARE, V144, P450, DOI 10.1016/j.jss.2018.07.035
   Scalabrino S, 2017, IEEE INT CONF AUTOM, P417, DOI 10.1109/ASE.2017.8115654
   Shatnawi R., 2011, Internat. J. Software Eng. Applicat., P127
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Singh PD, 2017, PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, DATA SCIENCE AND ENGINEERING (CONFLUENCE 2017), P775, DOI 10.1109/CONFLUENCE.2017.7943255
   Singh S, 2018, AIN SHAMS ENG J, V9, P2129, DOI 10.1016/j.asej.2017.03.002
   Sutskever I, 2014, ADV NEUR IN, V27
   Tómasdóttir KF, 2020, IEEE T SOFTWARE ENG, V46, P863, DOI 10.1109/TSE.2018.2871058
   Tómasdóttir KF, 2017, IEEE INT CONF AUTOM, P578, DOI 10.1109/ASE.2017.8115668
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Wong E, 2013, IEEE INT CONF AUTOM, P562, DOI 10.1109/ASE.2013.6693113
   Zhang H., 2004, AA, V1, P3
   Zhang JMI, 2003, P ICML 2003 WORKSH L
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
NR 83
TC 24
Z9 24
U1 2
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2022
VL 48
IS 4
BP 1432
EP 1450
DI 10.1109/TSE.2020.3021736
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 0N4HC
UT WOS:000782799700019
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, MS
   Li, YX
   Li, X
   Chen, LC
   Zhang, YQ
   Zhang, LM
   Khurshid, S
AF Zhang, Mengshi
   Li, Yaoxian
   Li, Xia
   Chen, Lingchao
   Zhang, Yuqun
   Zhang, Lingming
   Khurshid, Sarfraz
TI An Empirical Study of Boosting Spectrum-Based Fault Localization via
   PageRank
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; automated debugging; spectrum-based fault
   localization; SBFL; PageRank analysis
ID MUTATION; SALSA
AB Manual debugging is notoriously tedious and time-consuming. Therefore, various automated fault localization techniques have been proposed to help with manual debugging. Among the existing fault localization techniques, spectrum-based fault localization (SBFL) is one of the most widely studied techniques due to being lightweight. The focus of the existing SBFL techniques is to consider how to differentiate programentities (i.e., one dimension in program spectra); indeed, this focus is aligned with the ultimate goal of finding the faulty lines of code. Our key insight is to enhance the existing SBFL techniques by additionally considering how to differentiate tests (i.e., the other dimension in programspectra), which, to the best of our knowledge, has not been studied in prior work. We present our basic approach, PRFL, a lightweight technique that boosts SBFL by differentiating tests using PageRank algorithm. Specifically, given the original program spectrum information, PRFL uses PageRank to recompute the spectrum by considering the contributions of different tests. Next, traditional SBFL techniques are applied on the recomputed spectrum to achieve more effective fault localization. On top of PRFL, we explore PRFL+ and PRFLMA, two variants which extend PRFL by optimizing its components and integrating Method-level Aggregation technique, respectively. Though being simple and lightweight, PRFL has been demonstrated to outperform state-of-the-art SBFL techniques significantly (e.g., ranking 39.2% / 82.3% more real/artificial faults at Top-1 compared with the most effective traditional SBFL technique) with low overhead (e.g., around 6 minutes average extra overhead on real faults) on 395 real faults from 6 Defects4J projects and 96925 artificial (i.e., mutation) faults from 240 GitHub projects. To further validate PRFL's effectiveness, we compare PRFL with multiple recent proposed fault localization techniques (e.g., Multric, Metallaxis and MBFL-hybrid-avg), and the experimental results show that PRFL outperforms them as well. Furthermore, we study the performance of PRFLMA, and the experimental results present it can locate 137 real faults (73.4%/ 24.5% more compared with the most effective SBFL/PRFL technique) and 35058 artificial faults (159.6% / 28.1% more than SBFL/PRFL technique) at Top-1. At last, we study the generalizability of PRFL on another benchmark, Bugs.jar, and the result shows PRFL can help locate around 30 percent more faults at Top 1.
C1 [Zhang, Mengshi; Khurshid, Sarfraz] Univ Texas Austin, Dept Elect & Comp Engn, Austin, TX 78712 USA.
   [Li, Yaoxian; Zhang, Yuqun] Southern Univ Sci & Technol, Dept Comp Sci & Engn, Shenzhen Shi 518055, Guangdong Sheng, Peoples R China.
   [Li, Xia; Chen, Lingchao; Zhang, Lingming] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75080 USA.
C3 University of Texas System; University of Texas Austin; Southern
   University of Science & Technology; University of Texas System;
   University of Texas Dallas
RP Zhang, YQ (corresponding author), Southern Univ Sci & Technol, Dept Comp Sci & Engn, Shenzhen Shi 518055, Guangdong Sheng, Peoples R China.
EM zhangyq@sustech.edu.cn; liyx@sustech.edu.cn; xia.li3@utdallas.edu;
   lxc170330@utdallas.edu; mengshi.zhang@utexas.edu;
   lingming.zhang@utdallas.edu; khurshid@utexas.edu
RI Zhang, Mengshi/HKN-1629-2023; li, yao/IYJ-1364-2023; Liu,
   Xiangyan/JTV-4868-2023
OI Zhang, Yuqun/0000-0002-1499-5729
FU Ministry of Science and Technology of China [2017YFC0804002]; Shenzhen
   Peacock Plan [KQTD2016112514355531]; Science and Technology Innovation
   Committee Foundation of Shenzhen [JCYJ20170817110848086,
   ZDSYS201703031748284]; US National Science Foundation [CCF-1566589,
   CCF-1763906, CCF-1704790, CCF-1718903]; Amazon; Futurewei; Samsung
FX This work was supported by the Ministry of Science and Technology of
   China (Grant No. 2017YFC0804002), Shenzhen Peacock Plan (Grant
   No.KQTD2016112514355531), Science and Technology Innovation Committee
   Foundation of Shenzhen (Grant No.ZDSYS201703031748284 and No.
   JCYJ20170817110848086), US National Science Foundation grants
   (CCF-1566589, CCF-1763906, CCF-1704790 and CCF-1718903), Amazon,
   Futurewei, and Samsung.
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Alipour MohammadAmin., 2012, Proceedings of the Ninth International Workshop on Dynamic Analysis, WODA 2012, page, P7
   Alves E., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P520, DOI 10.1109/ASE.2011.6100114
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2002, RTI PROJECT
   [Anonymous], 2018, Asm java bytecode manipulation and analysis framework
   [Anonymous], 2018, Github a web-based version control repository and internet hosting service
   [Anonymous], 2018, Maven failsafe plugin
   [Anonymous], ARXIV10035455
   [Anonymous], 2013, P 2013 INT S SOFTW T, DOI DOI 10.1145/2483760.2483767
   [Anonymous], 2018, Pit mutation testing system
   [Anonymous], 2018, Maven surefire plugin
   [Anonymous], 2018, Java programming language agents
   [Anonymous], 2005, P 6 INT S AUTOMATED
   [Anonymous], 2018, Numpy package for scientific computing with python
   [Anonymous], 2018, MAVEN CENTRAL REPOSI
   [Anonymous], 2008, ISSTA
   Bhattacharya P, 2012, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2012.6227173
   Borodin A., 2005, ACM Transactions on Internet Technology, V5, P231, DOI 10.1145/1052934.1052942
   Campos J, 2013, IEEE INT CONF AUTOM, P257, DOI 10.1109/ASE.2013.6693085
   Chekam T. T., ARXIV160705512
   Dallmeier V., 2005, P 6 INT S AUT AN DRI, P99, DOI [10.1145/1085130.1085143, DOI 10.1145/1085130.1085143]
   Dao T, 2017, INT C PROGRAM COMPRE, P241, DOI 10.1109/ICPC.2017.29
   Dean J, 1995, LECT NOTES COMPUT SC, V952, P77, DOI 10.1007/3-540-49538-x_5
   DeMarco F, 2014, P 6 INT WORKSHOP CON, P30, DOI 10.1145/2593735.2593740
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Farahat A, 2006, SIAM J SCI COMPUT, V27, P1181, DOI 10.1137/S1064827502412875
   Feng Min., 2010, P 9 ACM SIGPLAN SIGS, P81, DOI [10.1145/1806672.1806688, DOI 10.1145/1806672.1806688]
   Gleich DF, 2015, SIAM REV, V57, P321, DOI 10.1137/140976649
   Gonzalez-Sanchez A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P83, DOI 10.1109/ASE.2011.6100153
   Grove D, 2001, ACM T PROGR LANG SYS, V23, P685, DOI 10.1145/506315.506316
   Gupta N., 2005, Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering, New York, NY, USA: Association for Computing Machinery, ASE'05, P263, DOI 10.1145/1101908.1101948
   Hofer B, 2012, FRONT ARTIF INTEL AP, V242, P420, DOI 10.3233/978-1-61499-098-7-420
   Hong S, 2015, IEEE INT CONF AUTOM, P464, DOI 10.1109/ASE.2015.14
   Hsu Henry., 2007, Wiley encyclopedia of clinical trials, P1
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kleinberg JM, 1999, J ACM, V46, P604, DOI 10.1145/324133.324140
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Laghari G, 2016, IEEE INT CONF AUTOM, P274, DOI 10.1145/2970276.2970308
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Tien-Duy B., 2015, 2015 IEEE 31st International Conference on Software Maintenance and Evolution (ICSME). Proceedings, P501, DOI 10.1109/ICSM.2015.7332502
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Lempel R, 2000, COMPUT NETW, V33, P387, DOI 10.1016/S1389-1286(00)00034-7
   Li X, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133916
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Lucia, 2014, J SOFTW-EVOL PROC, V26, P172, DOI 10.1002/smr.1616
   Mao XG, 2014, J SYST SOFTWARE, V89, P51, DOI 10.1016/j.jss.2013.08.031
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Mirshokraie S, 2015, IEEE T SOFTWARE ENG, V41, P429, DOI 10.1109/TSE.2014.2371458
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Murphy G. C., 1998, ACM Transactions on Software Engineering and Methodology, V7, P158, DOI 10.1145/279310.279314
   Myunghwan Kim, 2013, Performance Evaluation Review, V41, P93
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Nath A, 2016, AAAI CONF ARTIF INTE, P1294
   Ocariza F. S.  Jr., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P31, DOI 10.1109/ICST.2012.83
   Page L., 1999, PAGERANK CITATION RA
   Papadakis M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P691, DOI 10.1109/ICST.2012.159
   Papadakis M., 2014, Proceedings of the 29th Annual ACM Symposium on Applied Computing, P1293
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Papadakis M, 2013, IEEE INT WORK C SO, P94, DOI 10.1109/SCAM.2013.6648189
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Perez Alexandre, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering: Companion (ICSE-Companion). Proceedings, P372, DOI 10.1145/3183440.3195015
   Perez A, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1935
   Perez A, 2017, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2017.66
   Perez A, 2017, IEEE INT CONF SOFTW, P12, DOI 10.1109/ICST.2017.9
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   ROSNER B, 1982, APPL STAT-J ROY ST C, V31, P9, DOI 10.2307/2347069
   Roychowdhury Shounak., 2011, INT WORKSHOP MACHINE, P11, DOI DOI 10.1145/2070821.2070823
   Saha RK, 2018, IEEE WORK CONF MIN S, P10, DOI 10.1145/3196398.3196473
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Shin Yoo, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P244, DOI 10.1007/978-3-642-33119-0_18
   Sinha S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P153
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Xiangyu Zhang, 2006, 28th International Conference on Software Engineering Proceedings, P272, DOI 10.1145/1134285.1134324
   Xiaoyuan Xie, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P224, DOI 10.1007/978-3-642-39742-4_17
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   Xuan JF, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P52, DOI 10.1145/2635868.2635906
   Yu Kai., 2011, SAC, P1404
   Zhang LM, 2013, ACM SIGPLAN NOTICES, V48, P765, DOI [10.1145/2544173.2509551, 10.1145/2509136.2509551]
   Zhang MX, 2017, LECT NOTES COMPUT SC, V10538, P261, DOI [10.1007/978-3-319-68155-9_20, 10.1145/3092703.3092731]
   Zhang X., SOFTW PRACTICE EXPER, V37, P935
   Zhang XY, 2007, EMPIR SOFTW ENG, V12, P143, DOI 10.1007/s10664-006-9007-3
NR 91
TC 43
Z9 44
U1 3
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2021
VL 47
IS 6
BP 1089
EP 1113
DI 10.1109/TSE.2019.2911283
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SQ8XU
UT WOS:000660633800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Meyer, AN
   Barr, ET
   Bird, C
   Zimmermann, T
AF Meyer, Andre N.
   Barr, Earl T.
   Bird, Christian
   Zimmermann, Thomas
TI Today Was a Good Day: The Daily Life of Software Developers
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Productivity; Task analysis; Encoding; Tools; Collaboration;
   Birds; Software developer workdays; productivity; job satisfaction; good
   workdays; typical workdays; quantified workplace
ID STEREOTYPE THREAT; INFORMATION; EMOTIONS; SEEKING; PEOPLE; MEMORY; TIME
AB What is a good workday for a software developer? What is a typical workday? We seek to answer these two questions to learn how to make good days typical. Concretely, answering these questions will help to optimize development processes and select tools that increase job satisfaction and productivity. Our work adds to a large body of research on how software developers spend their time. We report the results from 5,971 responses of professional developers at Microsoft, who reflected about what made their workdays good and typical, and self-reported about how they spent their time on various activities at work. We developed conceptual frameworks to help define and characterize developer workdays from two new perspectives: good and typical. Our analysis confirms some findings in previous work, including the fact that developers actually spend little time on development and developers' aversion for meetings and interruptions. It also discovered new findings, such as that only 1.7 percent of survey responses mentioned emails as a reason for a bad workday, and that meetings and interruptions are only unproductive during development phases; during phases of planning, specification and release, they are common and constructive. One key finding is the importance of agency, developers' control over their workday and whether it goes as planned or is disrupted by external factors. We present actionable recommendations for researchers and managers to prioritize process and tool improvements that make good workdays typical. For instance, in light of our finding on the importance of agency, we recommend that, where possible, managers empower developers to choose their tools and tasks.
C1 [Meyer, Andre N.] Univ Zurich, Dept Informat, CH-8006 Zurich, Switzerland.
   [Barr, Earl T.] UCL, London WC1E 6BT, England.
   [Bird, Christian] Microsoft Res, Empir Software Engn Grp, Redmond, WA 98052 USA.
   [Zimmermann, Thomas] Microsoft Res, Redmond, WA 98052 USA.
C3 University of Zurich; University of London; University College London;
   Microsoft; Microsoft
RP Meyer, AN (corresponding author), Univ Zurich, Dept Informat, CH-8006 Zurich, Switzerland.
EM ameyer@ifi.uzh.ch; e.barr@ucl.ac.uk; christian.bird@microsoft.com;
   tzimmer@microsoft.com
RI Zimmermann, Thomas/C-4377-2019
OI Zimmermann, Thomas/0000-0003-4905-1469; Barr, Earl
   Theodore/0000-0003-0771-7891
FU EPSRC [EP/J017515/1] Funding Source: UKRI
CR Agarwal R, 2000, MIS QUART, V24, P665, DOI 10.2307/3250951
   Althoff T, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P113, DOI 10.1145/3038912.3052637
   Amabile T.Kramer., 2011, The progress principle: Using small wins to ignite joy, engagement, and creativity at work
   Amann S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P124, DOI 10.1109/SANER.2016.39
   [Anonymous], 2000, PSYCHOL SURVEY RESPO
   [Anonymous], 1987, CLUSTERING MEANS MED
   [Anonymous], 2015, PRACTICE SOCIAL RES
   [Anonymous], 2010, CASCON First Decade High Impact Papers, DOI [DOI 10.1145/1925805.1925815, 10.1145/1925805.1925815]
   [Anonymous], 2007, HAW INT C SYST SCI
   Astromskis S, 2017, J SYST SOFTWARE, V132, P85, DOI 10.1016/j.jss.2017.06.072
   Babar MA, 2008, EMPIR SOFTW ENG, V13, P39, DOI 10.1007/s10664-007-9052-6
   Baek-Kyoo Joo, 2010, Leadership & Organization Development Journal, V31, P482, DOI 10.1108/01437731011069999
   Bailey BP, 2001, HUMAN-COMPUTER INTERACTION - INTERACT'01, P593
   Balog K., 2006, Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P43, DOI 10.1145/1148170.1148181
   Barker C., 2003, CULTURAL STUDIES THE
   Barley SR, 2011, ORGAN SCI, V22, P887, DOI 10.1287/orsc.1100.0573
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Beller M, 2019, IEEE T SOFTWARE ENG, V45, P261, DOI 10.1109/TSE.2017.2776152
   BELLEZZA FS, 1981, J PSYCHOL, V107, P209, DOI 10.1080/00223980.1981.9915225
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Biehl JT, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1313
   BLAIR E, 1987, J CONSUM RES, V14, P280, DOI 10.1086/209112
   Bradburn N. M., 2010, P NORC BUREAU LABOR
   BRADBURN NM, 1987, SCIENCE, V236, P157, DOI 10.1126/science.3563494
   Brooks Frederick P., 1995, The mythical man-month
   Burnett M, 2016, INTERACT COMPUT, V28, P760, DOI 10.1093/iwc/iwv046
   Charmaz K., 2014, Introducing Qualitative Methods
   Claes M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P705, DOI 10.1145/3180155.3180193
   Czerwinski Mary, 2004, P SIGCHI C HUM FACT, P175, DOI [10.1145/985692.985715, DOI 10.1145/985692.985715]
   Dabbish L., 2006, P 2006 20 ANN C COMP, P431, DOI [DOI 10.1145/1180875.1180941, 10.1145/1180875.1180941]
   Danaer K, 2008, J APPL SOC PSYCHOL, V38, P1639, DOI 10.1111/j.1559-1816.2008.00362.x
   Daniel W.W., 2018, BIOSTATISTICS FDN AN
   Dodd NG, 1996, J ORGAN BEHAV, V17, P329, DOI 10.1002/(SICI)1099-1379(199607)17:4<329::AID-JOB754>3.0.CO;2-B
   Donohue B, 2019, 3 DAY NO M SCHEDULE
   Fisher CD, 2000, J ORGAN BEHAV, V21, P185, DOI 10.1002/(SICI)1099-1379(200003)21:2<185::AID-JOB34>3.0.CO;2-M
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   Fredrickson B.L., 1998, J DIVISION 1 AM PSYC, P300, DOI [https://doi.org/10.1037/1089-2680.2.3.300, DOI 10.1037/1089-2680.2.3.300]
   Fredrickson BL, 2008, J PERS SOC PSYCHOL, V95, P1045, DOI 10.1037/a0013262
   Fritz T., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P175
   Goler L., 2019, LETS NOT KILL PERFOR
   Gonçalves MK, 2011, J UNIVERS COMPUT SCI, V17, P1913
   Gonzalez Victor M, 2004, P SIGCHI C HUMAN FAC, P113, DOI [10.1145/985692.985707, DOI 10.1145/985692.985707]
   Goodman E., 2013, IEEE Transactions on Professional Communication, V56, P260, DOI DOI 10.1109/TPC.2013.2274110
   Graziotin D., 2017, P 21 INT C EVALUATIO, P324, DOI [DOI 10.1145/3084226.3084242, 10.1145/3084226.3084242]
   Graziotin D, 2015, J SOFTW-EVOL PROC, V27, P467, DOI 10.1002/smr.1673
   Graziotin D, 2014, IEEE SOFTWARE, V31, P24, DOI 10.1109/MS.2014.94
   Graziotin D, 2014, PEERJ, V2, DOI 10.7717/peerj.289
   Guest G, 2006, FIELD METHOD, V18, P59, DOI 10.1177/1525822X05279903
   Hofstede G., 1998, Masculinity and femininity: The taboo dimension of national cultures, V3
   HUDSON RL, 1972, PSYCHON SCI, V29, P71, DOI 10.3758/BF03336571
   Jakobsen MR, 2009, LECT NOTES COMPUT SC, V5727, P791, DOI 10.1007/978-3-642-03658-3_83
   KAHN BE, 1993, J CONSUM RES, V20, P257, DOI 10.1086/209347
   Kandolin I, 2001, J Hum Ergol (Tokyo), V30, P35
   Khan IA, 2011, COGN TECHNOL WORK, V13, P245, DOI 10.1007/s10111-010-0164-1
   Kim Y.-H., 2019, P CHI C HUM FACT COM
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Lange PG, 2008, ANN ANTHROPL PRACT, V30, P128, DOI 10.1111/j.1556-4797.2008.00024.x
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   LeBoeuf RA, 2009, J EXP PSYCHOL LEARN, V35, P81, DOI 10.1037/a0013665
   Lott Y, 2016, EUR SOCIOL REV, V32, P752, DOI 10.1093/esr/jcw032
   Marcus B, 2005, J PERS, V73, P959, DOI 10.1111/j.1467-6494.2005.00335.x
   Mark G, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173666
   Mark G, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P1717, DOI 10.1145/2858036.2858262
   Mark G, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P1739, DOI 10.1145/2858036.2858202
   Mark G, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P3025, DOI 10.1145/2556288.2557204
   Mark G, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P107
   Mazmanian M, 2013, ACAD MANAGE J, V56, P1225, DOI 10.5465/amj.2010.0787
   MELAMED S, 1995, J APPL PSYCHOL, V80, P29, DOI 10.1037/0021-9010.80.1.29
   MENON G, 1994, AUTOBIOGRAPHICAL MEMORY AND THE VALIDITY OF RETROSPECTIVE REPORTS, P161
   Meyer AN, 2017, INT SYMP EMP SOFTWAR, P105, DOI 10.1109/ESEM.2017.17
   Meyer AN, 2017, IEEE T SOFTWARE ENG, V43, P1178, DOI 10.1109/TSE.2017.2656886
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Minelli R, 2015, INT C PROGRAM COMPRE, P25, DOI 10.1109/ICPC.2015.12
   Mockus A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P503, DOI 10.1109/ICSE.2002.1007994
   Müller SC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P688, DOI 10.1109/ICSE.2015.334
   Murgia A., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P262
   NETER J, 1964, J AM STAT ASSOC, V59, P18, DOI 10.2307/2282857
   Origo F, 2008, INT J MANPOWER, V29, P539, DOI 10.1108/01437720810904211
   Ouweneel E, 2012, HUM RELAT, V65, P1129, DOI 10.1177/0018726711429382
   Parnin C, 2011, SOFTWARE QUAL J, V19, P5, DOI 10.1007/s11219-010-9104-9
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   Petrou P, 2012, J ORGAN BEHAV, V33, P1120, DOI 10.1002/job.1783
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   Robillard MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2009.161
   Rogelberg SG, 2003, J APPL PSYCHOL, V88, P1104, DOI 10.1037/0021-9010.88.6.1104
   Rozman M, 2017, BUS SYST RES J, V8, P14, DOI 10.1515/bsrj-2017-0013
   Ruostela J, 2015, KNOWL MAN RES PRACT, V13, P382, DOI 10.1057/kmrp.2013.57
   Sappelli M, 2016, INFORM SCIENCES, V358, P1, DOI 10.1016/j.ins.2016.03.002
   Sarma A, 2003, PROC INT CONF SOFTW, P444, DOI 10.1109/ICSE.2003.1201222
   Schwarz N, 2001, AM J EVAL, V22, P127, DOI 10.1177/109821400102200202
   Sheldon KM, 1996, PERS SOC PSYCHOL B, V22, P1270, DOI 10.1177/01461672962212007
   Soto CJ, 2017, J PERS SOC PSYCHOL, V113, P117, DOI 10.1037/pspp0000096
   Spencer D., 2009, CARD SORTING DESIGNI
   STEELE CM, 1995, J PERS SOC PSYCHOL, V69, P797, DOI 10.1037/0022-3514.69.5.797
   Stinson LL, 1999, MON LABOR REV, V122, P12
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Stricker LJ, 2004, J APPL SOC PSYCHOL, V34, P665, DOI 10.1111/j.1559-1816.2004.tb02564.x
   SUDMAN S, 1973, J AM STAT ASSOC, V68, P805, DOI 10.2307/2284504
   Tang J.C., 2011, Proceedings of the ACM 2011 conference on Computer supported cooperative work, P235, DOI [10.1145/1958824.1958860, DOI 10.1145/1958824.1958860]
   Tims M, 2012, J VOCAT BEHAV, V80, P173, DOI 10.1016/j.jvb.2011.05.009
   TULVING E, 1966, J VERB LEARN VERB BE, V5, P381, DOI 10.1016/S0022-5371(66)80048-8
   Tuten TL, 2001, SOC BEHAV PERSONAL, V29, P391, DOI 10.2224/sbp.2001.29.4.391
   van Solingen R, 1998, IEEE SOFTWARE, V15, P97, DOI 10.1109/52.714843
   Voordt T.J.V.D., 2004, J CORP REAL ESTATE, V6, P133, DOI DOI 10.1108/14630010410812306
   Whiteside SP, 2001, PERS INDIV DIFFER, V30, P669, DOI 10.1016/S0191-8869(00)00064-7
   Whittaker S., 1999, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V8, P175, DOI 10.1023/A:1008603001894
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Züger M, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P61, DOI 10.1145/3025453.3025662
NR 110
TC 44
Z9 47
U1 1
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2021
VL 47
IS 5
BP 863
EP 880
DI 10.1109/TSE.2019.2904957
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA SC1RN
UT WOS:000650457700001
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Paixao, M
   Krinke, J
   Han, DY
   Ragkhitwetsagul, C
   Harman, M
AF Paixao, Matheus
   Krinke, Jens
   Han, DongGyun
   Ragkhitwetsagul, Chaiyong
   Harman, Mark
TI The Impact of Code Review on Architectural Changes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Computer architecture; Couplings; Software systems; Measurement;
   Software architecture; Agriculture; Java; Software architecture; code
   reviews; empirical software engineering
ID SOFTWARE; DEPENDENCIES; OPTIMIZATION; METRICS
AB Although considered one of the most important decisions in the software development lifecycle, empirical evidence on how developers perform and perceive architectural changes remains scarce. Architectural decisions have far-reaching consequences yet, we know relatively little about the level of developers' awareness of their changes' impact on the software's architecture. We also know little about whether architecture-related discussions between developers lead to better architectural changes. To provide a better understanding of these questions, we use the code review data from 7 open source systems to investigate developers' intent and awareness when performing changes alongside the evolution of the changes during the reviewing process. We extracted the code base of 18,400 reviews and 51,889 revisions. 4,171 of the reviews have changes in their computed architectural metrics, and 731 present significant changes to the architecture. We manually inspected all reviews that caused significant changes and found that developers are discussing the impact of their changes on the architectural structure in only 31% of the cases, suggesting a lack of awareness. Moreover, we noticed that in 73% of the cases in which developers provided architectural feedback during code review, the comments were addressed, where the final merged revision tended to exhibit higher architectural improvement than reviews in which the system's structure is not discussed.
C1 [Paixao, Matheus] Univ Estadual Ceara, Comp Sci Dept, BR-60741000 Fortaleza, Ceara, Brazil.
   [Krinke, Jens; Han, DongGyun; Harman, Mark] UCL, Ctr Res Search Testing & Evolut CREST, London WC1E 6BT, England.
   [Ragkhitwetsagul, Chaiyong] Mahidol Univ, Fac Informat & Commun Technol, Salaya 73170, Nakhon Pathom, Thailand.
   [Harman, Mark] Facebook London, London W1T 1FB, England.
C3 Universidade Estadual do Ceara; University of London; University College
   London; Mahidol University; Facebook Inc
RP Paixao, M (corresponding author), Univ Estadual Ceara, Comp Sci Dept, BR-60741000 Fortaleza, Ceara, Brazil.
EM matheus.paixao@uece.br; j.krinke@ucl.ac.uk; d.han.14@ucl.ac.uk;
   cragkhit@gmail.com; mark.harman@ucl.ac.uk
RI Ragkhitwetsagul, Chaiyong/JOZ-6943-2023; Ragkhitwetsagul,
   Chaiyong/GSN-1156-2022; Krinke, Jens/E-9011-2011
OI Han, DongGyun/0000-0002-8599-2197; Krinke, Jens/0000-0003-1009-2861;
   Paixao, Matheus/0000-0002-1775-7259
CR Ajienka N, 2018, EMPIR SOFTW ENG, V23, P1791, DOI 10.1007/s10664-017-9569-2
   [Anonymous], 2018, ECLIPSE PROJECTS
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2018, SCITOOLS
   [Anonymous], 2018, COUCHBASE PROJECTS
   Barros MD, 2015, INFORM SOFTWARE TECH, V57, P684, DOI 10.1016/j.infsof.2014.07.015
   Bavota G, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P692, DOI 10.1109/ICSE.2013.6606615
   Beck F., 2011, P 19 ACM SIGSOFT S 1, P354
   Beck F, 2013, EMPIR SOFTW ENG, V18, P970, DOI 10.1007/s10664-012-9225-9
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Briand LC, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P43, DOI 10.1109/METRIC.1997.637164
   Candela I, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2928268
   Cedrim D, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P465, DOI 10.1145/3106237.3106259
   Cinnéide MO, 2012, INT SYMP EMP SOFTWAR, P49, DOI 10.1145/2372251.2372260
   Cohen J., 1988, STAT POWER ANAL BEHA
   Counsell S, 2005, FIFTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P161, DOI 10.1109/SCAM.2005.19
   de Silva L, 2012, J SYST SOFTWARE, V85, P132, DOI 10.1016/j.jss.2011.07.036
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Garcia J., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P552, DOI 10.1109/ASE.2011.6100123
   Garcia J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P901, DOI 10.1109/ICSE.2013.6606639
   Hall M, 2014, PROC IEEE INT CONF S, P466, DOI 10.1109/ICSME.2014.75
   Hall M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P472, DOI 10.1109/ICSM.2012.6405309
   Hitz M., 1995, International Symposium on Applied Corporate Computing, P25
   Kendall M. G., 1948, Rank correlation methods.
   Kouroshfar E, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P246, DOI 10.1109/MSR.2015.30
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Lanza M, 2007, Object-oriented Metrics in Practice: Using Software Metrics To Characterize, Evaluate, and Improve the Design of Object-oriented Systems
   Le DM, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P235, DOI 10.1109/MSR.2015.29
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Lutellier T, 2018, IEEE T SOFTWARE ENG, V44, P159, DOI 10.1109/TSE.2017.2671865
   Mancoridis S, 1998, PROG COMPREHEN, P45, DOI 10.1109/WPC.1998.693283
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Mitchell BS, 2001, PROC IEEE INT CONF S, P744, DOI 10.1109/ICSM.2001.972795
   Mo R, 2016, PROC INT CONF SOFTW, P499, DOI 10.1145/2884781.2884825
   Morales R, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P171, DOI 10.1109/SANER.2015.7081827
   Paixao M, 2018, IEEE WORK CONF MIN S, P46, DOI 10.1145/3196398.3196466
   Paixao M, 2018, IEEE T EVOLUT COMPUT, V22, P394, DOI 10.1109/TEVC.2017.2691281
   Paixao M, 2017, IEEE INT CONF AUTOM, P95, DOI 10.1109/ASE.2017.8115622
   Palomba F, 2018, INFORM SOFTWARE TECH, V99, P1, DOI 10.1016/j.infsof.2018.02.004
   Pearce S., 2006, GERRIT CODE REV GIT
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Ragkhitwetsagul C., 2019, **DATA OBJECT**, DOI [10.5281/zenodo.2640820, DOI 10.5281/ZENODO.2640820]
   Rozanski N., 2011, Software Systems Architecture: Working with Stakeholders Using Viewpoints and Perspectives
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schwanke R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P891, DOI 10.1109/ICSE.2013.6606638
   Shahbazian A, 2018, IEEE WORK CONF MIN S, P215, DOI 10.1145/3196398.3196440
   Simons Chris, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P47, DOI 10.1007/978-3-319-22183-0_4
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tukey J.W., 1977, EXPLORATORY DATA ANA, V2
   Tzerpos V., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P187, DOI 10.1109/WCRE.1999.806959
   Tzerpos V, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P258
   Wen Z, 2004, PROG COMPREHEN, P194, DOI 10.1109/WPC.2004.1311061
   Williams BJ, 2010, INFORM SOFTWARE TECH, V52, P31, DOI 10.1016/j.infsof.2009.07.002
   Xiao L, 2016, PROC INT CONF SOFTW, P488, DOI 10.1145/2884781.2884822
   Yu ZF, 2001, PROG COMPREHEN, P293, DOI 10.1109/WPC.2001.921739
   Zhou YM, 2007, J SYST SOFTWARE, V80, P1349, DOI 10.1016/j.jss.2006.10.049
NR 59
TC 10
Z9 10
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2021
VL 47
IS 5
BP 1041
EP 1059
DI 10.1109/TSE.2019.2912113
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SC1RN
UT WOS:000650457700011
OA Green Published
DA 2024-07-18
ER

PT J
AU Svajlenko, J
   Roy, CK
AF Svajlenko, Jeffrey
   Roy, Chanchal K.
TI The Mutation and Injection Framework: Evaluating Clone Detection Tools
   with Mutation Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cloning; Tools; Benchmark testing; Software systems; Detectors;
   Atmospheric measurements; Particle measurements; Clone; clone detection;
   benchmark; mutation analysis; mutation operators; recall
ID CODE; SIMILARITY
AB An abundant number of clone detection tools have been proposed in the literature due to the many applications and benefits of clone detection. However, there has been difficulty in the performance evaluation and comparison of these clone detectors. This is due to a lack of reliable benchmarks, and the manual efforts required to validate a large number of candidate clones. In particular, there has been a lack of a synthetic benchmark that can precisely and comprehensively measure clone-detection recall. In this paper, we present a mutation-analysis based benchmarking framework that can be used not only to evaluate the recall of clone detection tools for different types of clones but also for specific kinds of clone edits and without any manual efforts. The framework uses an editing taxonomy of clone synthesis for generating thousands of artificial clones, injects into code bases and automatically evaluates the subject clone detection tools following the mutation analysis approach. Additionally, the framework has features where custom clone pairs could also be used in the framework for evaluating the subject tools. This gives the opportunity of evaluating specialized tools for specialized contexts such as evaluating a tool's capability for the detection of complex Type-4 clones or real world clones without writing complex mutation operators for them. We demonstrate this framework by evaluating the performance of ten modern clone detection tools across two clone granularities (function and block) and three programming languages (Java, C and C#). Furthermore, we provide a variant of the framework that can be used to evaluate specialized tools such as for large gaped clone detection. Our experiments demonstrate confidence in the accuracy of our Mutation and Injection Framework when comparing against the expected results of the corresponding tools, and widely used real-world benchmarks such as Bellon's benchmark and BigCloneBench. We provide features so that most clone detection tools that report clones in the form of clone pairs (either in filename/line numbers or filename/tokens) could be evaluated using the framework.
C1 [Svajlenko, Jeffrey; Roy, Chanchal K.] Univ Saskatchewan, Dept Comp Sci, Saskatoon, SK S7N 5A3, Canada.
C3 University of Saskatchewan
RP Svajlenko, J (corresponding author), Univ Saskatchewan, Dept Comp Sci, Saskatoon, SK S7N 5A3, Canada.
EM jeff.svajlenko@usask.ca; chanchal.royj@usask.ca
OI Svajlenko, Jeffrey/0000-0001-9738-7421
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX This research is supported by the Natural Sciences and Engineering
   Research Council of Canada (NSERC).
CR [Anonymous], 2008, PROC CAN C COMP SCI
   Aversano L, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P81
   Baker BS, 2007, IEEE T SOFTWARE ENG, V33, P608, DOI 10.1109/TSE.2007.70720
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Burd E, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P36, DOI 10.1109/SCAM.2002.1134103
   Calefato F., 2004, Journal of Web Engineering, V3, P3
   Charpentier A., 2015, P 19 INT C EVALUATIO, P1, DOI DOI 10.1145/2745802.2745821
   Charpentier A, 2017, EMPIR SOFTW ENG, V22, P235, DOI 10.1007/s10664-015-9419-z
   Cordy J.R., 2007, TXL PROGRAMMING LANG
   Falke R, 2008, EMPIR SOFTW ENG, V13, P601, DOI 10.1007/s10664-008-9073-9
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P321, DOI 10.1145/1368088.1368132
   Göde N, 2009, EUR CON SFTWR MTNCE, P219, DOI 10.1109/CSMR.2009.20
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Kodhai E., 2014, J. Softw. Eng. Res. Develop., V2, P12, DOI DOI 10.1186/S40411-014-0012-8
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Kontogiannis K, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P44, DOI 10.1109/WCRE.1997.624575
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Krutz Daniel E, 2014, P 11 WORK C MIN SOFT, P388, DOI 10.1145/2597073.2597127
   Lavoie Thierry., 2011, P 5 INT WORKSHOP SOF, P34
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Murakami H., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P412
   Ragkhitwetsagul C, 2018, EMPIR SOFTW ENG, V23, P2464, DOI 10.1007/s10664-017-9564-7
   Ragkhitwetsagul C, 2016, IEEE INT WORK C SO, P117, DOI 10.1109/SCAM.2016.13
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   Roy CK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P18, DOI 10.1109/CSMR-WCRE.2014.6747168
   Roy CK, 2009, IEEE ICST WORKSHOP, P157, DOI 10.1109/ICSTW.2009.18
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Roy J. R., 2007, QUEENS SCH COMPUTING, V541, P64
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Schulze S, 2013, INT WORKS SOFTW CLON, P62, DOI 10.1109/IWSC.2013.6613045
   Stephan M, 2019, SOFTW TEST VERIF REL, V29, DOI 10.1002/stvr.1669
   Svajlenko J., 2018, MUTATION INJECTION F
   Svajlenko J, 2016, PROC IEEE INT CONF S, P596, DOI 10.1109/ICSME.2016.62
   Svajlenko J, 2015, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2015.7332459
   Svajlenko J, 2014, PROC IEEE INT CONF S, P321, DOI 10.1109/ICSME.2014.54
   Svajlenko J, 2014, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSME.2014.77
   Svajlenko J, 2013, INT WORKS SOFTW CLON, P8, DOI 10.1109/IWSC.2013.6613033
   Van Rysselberghe F, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P336, DOI 10.1109/ASE.2004.1342759
   Wagner S, 2016, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.49
   Walenstein A, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P285, DOI 10.1109/WCRE.2003.1287259
   Wang PC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1066, DOI 10.1145/3180155.3180179
   Wang Tiantian, 2013, P 2013 9 JOINT M FDN, P455
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   Yuki Yusuke, 2016, 24 IEEE INT C PROGRA, P1
NR 47
TC 14
Z9 14
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2021
VL 47
IS 5
BP 1060
EP 1087
DI 10.1109/TSE.2019.2912962
PG 28
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SC1RN
UT WOS:000650457700012
DA 2024-07-18
ER

PT J
AU Wang, Y
   Wu, RX
   Wang, C
   Wen, M
   Liu, YP
   Cheung, SC
   Yu, H
   Xu, C
   Zhu, ZL
AF Wang, Ying
   Wu, Rongxin
   Wang, Chao
   Wen, Ming
   Liu, Yepang
   Cheung, Shing-Chi
   Yu, Hai
   Xu, Chang
   Zhu, Zhiliang
TI Will Dependency Conflicts Affect My Program's Semantics?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Third-party libraries; test generation; empirical study
ID JAVA
AB Java projects are often built on top of various third-party libraries. If multiple versions of a library exist on the classpath, JVM will only load one version and shadow the others, which we refer to as dependency conflicts. This would give rise to semantic conflict (SC) issues, if the library APIs referenced by a project have identical method signatures but inconsistent semantics across the loaded and shadowed versions of libraries. SC issues are difficult for developers to diagnose in practice, since understanding them typically requires domain knowledge. Although adapting the existing test generation technique for dependency conflict issues, RIDDLE, to detect SC issues is feasible, its effectiveness is greatly compromised. This is mainly because RIDDLE randomly generates test inputs, while the SC issues typically require specific arguments in the tests to be exposed. To address that, we conducted an empirical study of 316 real SC issues to understand the characteristics of such specific arguments in the test cases that can capture the SC issues. Inspired by our empirical findings, we propose an automated testing technique SENSOR, which synthesizes test cases using ingredients from the project under test to trigger inconsistent behaviors of the APIs with the same signatures in conflicting library versions. Our evaluation results show that SENSOR is effective and useful: it achieved a Precision of 0.898 and a Recall of 0.725 on open-source projects and a Precision of 0.821 on industrial projects; it detected 306 semantic conflict issues in 50 projects, 70.4 percent of which had been confirmed as real bugs, and 84.2 percent of the confirmed issues have been fixed quickly.
C1 [Wang, Ying; Wang, Chao; Yu, Hai; Zhu, Zhiliang] Northeasthern Univ, Software Coll, Shenyang 110819, Peoples R China.
   [Wu, Rongxin] Xiamen Univ, Dept Cyber Space Secur, Xiamen 361005, Peoples R China.
   [Wen, Ming] Huazhong Univ Sci & Technol, Sch Cyber Sci & Engn, Wuhan 430074, Peoples R China.
   [Liu, Yepang] Southern Univ Sci & Technol, Dept Comp Sci & Engn, Shenzhen 518055, Peoples R China.
   [Liu, Yepang] Southern Univ Sci & Technol, Guangdong Prov Key Lab Brain Inspired Intelligent, Shenzhen 518055, Peoples R China.
   [Cheung, Shing-Chi] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Hong Kong, Peoples R China.
   [Xu, Chang] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
   [Xu, Chang] Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210023, Peoples R China.
C3 Xiamen University; Huazhong University of Science & Technology; Southern
   University of Science & Technology; Southern University of Science &
   Technology; Hong Kong University of Science & Technology; Nanjing
   University; Nanjing University
RP Yu, H (corresponding author), Northeasthern Univ, Software Coll, Shenyang 110819, Peoples R China.
EM wangying@swc.neu.edu.cn; wurongxin@xmu.edu.cn; wangc_neu@163.com;
   mwenaa@hust.edu.cn; liuyp1@sustech.edu.cn; scc@cse.ust.hk;
   yuhai@mail.neu.edu.cn; changxu@nju.edu.cn; zzl@mail.neu.edu.cn
RI wu, rongxin/F-3999-2016; YU, Hai/E-6831-2018; li, jing/KHY-5337-2024;
   Wen, Ming/AEJ-8029-2022; Liu, Chenyu/KBQ-8899-2024; Liu,
   Yepang/G-6183-2018; Cheung, Shing Chi/U-5882-2018
OI YU, Hai/0000-0002-8024-1781; Liu, Yepang/0000-0001-8147-8126; Xu,
   Chang/0000-0002-6299-4704; Cheung, Shing Chi/0000-0002-3508-7172; Wu,
   Rongxin/0000-0002-4648-3795
FU National Natural Science Foundation of China [61932021, 61902056,
   61977014, 61902329, 62002125, 61802164]; Shenyang Young and Middle-aged
   Talent Support Scheme [ZX20200272]; Fundamental Research Funds for the
   Central Universities [N2017011]; Hong Kong RGC/GRF [16207120]; MSRA
   grant; Guangdong Provincial Key Laboratory [2020B121201001]; Xiamen
   Youth Innovation Foundation [3502Z20206036]
FX The authors express thanks to the anonymous reviewers for their
   constructive comments. Part of the work was conducted during the first
   author's internship at HKUST in 2018 and 2019. The work was supported by
   the National Natural Science Foundation of China under Grants 61932021,
   61902056, 61977014, 61902329, 62002125, 61802164, Shenyang Young and
   Middle-aged Talent Support Scheme under Grant ZX20200272, Fundamental
   Research Funds for the Central Universities under Grant N2017011, Hong
   Kong RGC/GRF grant 16207120, MSRA grant, Guangdong Provincial Key
   Laboratory under Grant 2020B121201001 and Xiamen Youth Innovation
   Foundation under Grant 3502Z20206036.
CR Alshahwan N., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P3, DOI 10.1109/ASE.2011.6100082
   Alshraideh M, 2006, SOFTW TEST VERIF REL, V16, P175, DOI 10.1002/stvr.354
   [Anonymous], 2020, OPTIONS SOOT FRAMEWO
   [Anonymous], 2020, JDBC
   [Anonymous], 2020, ISSUE 1730 PROJECT S
   [Anonymous], 2020, ISSUE 288 PROJECT ON
   [Anonymous], 2014, P ACM IEEE INT C AUT, DOI DOI 10.1145/2642937.2642986
   [Anonymous], 2020, ISSUE 214 PROJECT OP
   [Anonymous], 2020, REST ASSURED
   [Anonymous], 2020, JAVA DESIGN PATTERNS
   [Anonymous], 2020, EXPERIENCED DEV PROJ
   [Anonymous], 2020, ISSUE 2056 PROJECT A
   [Anonymous], 2020, ISSUE 11 PROJECT MIA
   [Anonymous], 2020, ISSUE 1897 PROJECT A
   [Anonymous], 2020, ISSUE 9 PROJECT NETT
   [Anonymous], 2020, ISSUE 297 PROJECT RE
   [Anonymous], 2020, PR ISSUE 214 PROJECT
   [Anonymous], 2007, P 6 JOINT M EUR SOFT
   [Anonymous], 2020, ISSUE 809 MOTAN
   [Anonymous], 2020, ISSUE 1143 PROJECT R
   [Anonymous], 2020, HMILY
   [Anonymous], 2020, MAVEN SHADE PLUGIN
   [Anonymous], 2020, Assessment report
   Artho C., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P141, DOI 10.1109/MSR.2012.6224274
   Artzi S, 2008, LECT NOTES COMPUT SC, V5142, P542, DOI 10.1007/978-3-540-70592-5_23
   Artzi S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P571, DOI 10.1145/1985793.1985871
   Bao LF, 2018, EMPIR SOFTW ENG, V23, P1313, DOI 10.1007/s10664-017-9547-8
   Bodden E, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P241, DOI 10.1145/1985793.1985827
   Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   Chapman P, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P263
   Chen LC, 2020, PROC INT CONF SOFTW, P112, DOI 10.1145/3377811.3380436
   Chen YT, 2016, ACM SIGPLAN NOTICES, V51, P85, DOI [10.1145/2980983.2908095, 10.1145/2908080.2908095]
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Chiang WF, 2014, ACM SIGPLAN NOTICES, V49, P43, DOI [10.1145/2692916.2555265, 10.1145/2555243.2555265]
   Chowdhury SA, 2017, LECT NOTES COMPUT SC, V10107, P46, DOI 10.1007/978-3-319-51738-4_4
   Dallmeier V., 2010, P 19 INT S SOFTWARE, P85, DOI [DOI 10.1145/1831708.1831719, 10.1145/1831708.1831719]
   Della Toffola L, 2017, IEEE INT CONF AUTOM, P44, DOI 10.1109/ASE.2017.8115617
   Dietrich Jens, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P349, DOI 10.1109/MSR.2019.00061
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fraser G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P121, DOI 10.1109/ICST.2012.92
   Fraser G., 2011, ESECFSE 2011, P416, DOI [10.1145/2025113.2025179, DOI 10.1145/2025113.2025179]
   Fraser G, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P33, DOI [10.1109/SBST.2016.014, 10.1145/2897010.2897020]
   Ghorbani N, 2019, PROC INT CONF SOFTW, P560, DOI 10.1109/ICSE.2019.00067
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Groce A, 2007, PROC INT CONF SOFTW, P621
   Grove D, 1997, ACM SIGPLAN NOTICES, V32, P108, DOI 10.1145/263700.264352
   Hendren Laurie, 2011, P CETUS US COMP INF
   Hericko M, 2003, ACM SIGPLAN NOTICES, V38, P44, DOI 10.1145/944579.944589
   Jezek K, 2015, INFORM SOFTWARE TECH, V65, P129, DOI 10.1016/j.infsof.2015.02.014
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Korel B, 1996, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.1996.493403
   Lämmel R, 2006, LECT NOTES COMPUT SC, V3964, P19
   Liang S, 1998, ACM SIGPLAN NOTICES, V33, P36, DOI 10.1145/286942.286945
   Lin Y, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P164, DOI 10.1145/2568225.2568298
   Macho C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P106, DOI 10.1109/SANER.2018.8330201
   McMinn P., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P141, DOI 10.1109/ICST.2012.94
   Mostafa S, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P215, DOI 10.1145/3092703.3092721
   Neusoft, 2020, US
   Osgi, 2020, US
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Patra J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P741, DOI 10.1145/3180155.3180184
   Pawlak R, 2016, SOFTWARE PRACT EXPER, V46, P1155, DOI 10.1002/spe.2346
   Petsios T, 2017, P IEEE S SECUR PRIV, P615, DOI 10.1109/SP.2017.27
   Pradel M, 2012, ACM SIGPLAN NOTICES, V47, P521, DOI 10.1145/2345156.2254126
   Ray B, 2013, IEEE INT CONF AUTOM, P367, DOI 10.1109/ASE.2013.6693095
   Rojas JM, 2016, SOFTW TEST VERIF REL, V26, P366, DOI 10.1002/stvr.1601
   Sakti A, 2015, IEEE T SOFTWARE ENG, V41, P294, DOI 10.1109/TSE.2014.2363479
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Soto-Valero Cesar, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P333, DOI 10.1109/MSR.2019.00059
   Teyton C, 2014, J SOFTW-EVOL PROC, V26, P1030, DOI 10.1002/smr.1660
   Thummalapenta S, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P189
   Travis CI, 2020, US
   Wang JY, 2019, PROC INT CONF SOFTW, P1245, DOI 10.1109/ICSE.2019.00126
   Wang Y, 2020, PROC INT CONF SOFTW, P125, DOI 10.1145/3377811.3380426
   Wang Y, 2019, PROC INT CONF SOFTW, P572, DOI 10.1109/ICSE.2019.00068
   Wang Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P319, DOI 10.1145/3236024.3236056
   Xiao X., 2011, P INT S SOFTW TEST A, P188
   Xie T., 2007, Proceedings of the Second International Workshop on Automation of Software Test, AST '07, P5
   Xu WF, 2013, P INT COMP SOFTW APP, P27, DOI 10.1109/COMPSAC.2013.8
   Yang XJ, 2011, ACM SIGPLAN NOTICES, V46, P283, DOI 10.1145/1993316.1993532
   Zhang J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P883, DOI 10.1145/2950290.2950313
   Zhang TY, 2017, PROC INT CONF SOFTW, P665, DOI 10.1109/ICSE.2017.67
   Zhong H, 2013, LECT NOTES COMPUT SC, V7793, P130, DOI 10.1007/978-3-642-37057-1_10
NR 84
TC 10
Z9 11
U1 1
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 8
PY 2021
VL 48
IS 7
BP 2295
EP 2316
DI 10.1109/TSE.2021.3057767
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5ZJ
UT WOS:000825974500002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Xiang, Y
   Huang, H
   Li, MQ
   Li, SZ
   Yang, XW
AF Xiang, Yi
   Huang, Han
   Li, Miqing
   Li, Sizhe
   Yang, Xiaowei
TI Looking For Novelty in Search-Based Software Product Line Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software product line testing; product sampling; novelty search;
   similarity-based testing; t-wise coverage; correlation analysis
AB Testing software product lines (SPLs) is difficult due to a huge number of possible products to be tested. Recently, there has been a growing interest in similarity-based testing of SPLs, where similarity is used as a surrogate metric for the t-wise coverage. In this context, one of the primary goals is to sample, by optimizing similarity metrics using search-based algorithms, a small subset of test cases (i.e., products) as dissimilar as possible, thus potentially making more t-wise combinations covered. Prior work has shown, by means of empirical studies, the great potential of current similarity-based testing approaches. However, the rationale of this testing technique deserves a more rigorous exploration. To this end, we perform correlation analyses to investigate how similarity metrics are correlated with the t-wise coverage. We find that similarity metrics generally have significantly positive correlations with the t-wise coverage. This well explains why similarity-based testing works, as the improvement on similarity metrics will potentially increase the t-wise coverage. Moreover, we explore, for the first time, the use of the novelty search (NS) algorithm for similarity-based SPL testing. The algorithm rewards "novel" individuals, i.e., those being different from individuals discovered previously, and this well matches the goal of similarity-based SPL testing. We find that the novelty score used in NS has (much) stronger positive correlations with the t-wise coverage than previous approaches relying on a genetic algorithm (GA) with a similarity-based fitness function. Experimental results on 31 software product lines validate the superiority of NS over GA, as well as other state-of-the-art approaches, concerning both t-wise coverage and fault detection capacity. Finally, we investigate whether it is useful to combine two satisfiability solvers when generating new individuals in NS, and how the performance of NS is affected by its key parameters. In summary, looking for novelty provides a promising way of sampling diverse test cases for SPLs.
C1 [Xiang, Yi; Huang, Han; Li, Sizhe; Yang, Xiaowei] South China Univ Technol, Sch Software Engn, Guangzhou 510006, Peoples R China.
   [Li, Miqing] Univ Birmingham, Sch Comp Sci, Ctr Excellence Res Computat Intelligence & Applic, Birmingham B15 2TT, W Midlands, England.
C3 South China University of Technology; University of Birmingham
RP Huang, H; Yang, XW (corresponding author), South China Univ Technol, Sch Software Engn, Guangzhou 510006, Peoples R China.
EM xiangyi@scut.edu.cn; hhan@scut.edu.cn; m.li.8@cs.bham.ac.uk;
   chickl@qq.com; xwyang@scut.edu.cn
RI Xiang, Yi/KRO-9761-2024; Zhang, Can/JUU-9511-2023; Li,
   Miqing/P-4153-2015
OI Xiang, Yi/0000-0003-2118-4825; Li, Miqing/0000-0002-8607-9607
FU National Natural Science Foundation of China [61906069, 61773410,
   61876207]; Guangdong Basic and Applied Basic Research Foundation
   [2019A1515011411, 2019A1515011700]; Science and Technology Program of
   Guangzhou [202002030355, 201802010007]; China Postdoctoral Science
   Foundation [2019M662912]; Guangdong Province Key Area RD Program
   [2018B010109003]; Fundamental Research Funds for the Central
   Universities [2019MS088, 2020ZYGXZR014]
FX The authors would like to thank the anonymous reviewers for providing
   valuable comments to improve this paper. This work was supported by the
   National Natural Science Foundation of China under Grants 61906069,
   61773410, 61876207, Guangdong Basic and Applied Basic Research
   Foundation (2019A1515011411, 2019A1515011700), Science and Technology
   Program of Guangzhou (202002030355, 201802010007), Project Funded by
   China Postdoctoral Science Foundation (2019M662912), Guangdong Province
   Key Area R&D Program (2018B010109003), Fundamental Research Funds for
   the Central Universities (2019MS088, 2020ZYGXZR014).
CR Al-Hajjaji Mustafa, 2017, 2017 IEEE/ACM 2nd International Workshop on Variability and Complexity in Software Design (VACE). Proceedings, P34, DOI 10.1109/VACE.2017.8
   Al-Hajjaji M, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P226, DOI 10.1145/3233027.3233044
   Al-Hajjaji M, 2019, SOFTW SYST MODEL, V18, P499, DOI 10.1007/s10270-016-0569-2
   Al-Hajjaji M, 2017, ACM SIGPLAN NOTICES, V52, P144, DOI [10.1145/2993236.2993253, 10.1145/3093335.2993253]
   Al-Hajjaji M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P197, DOI 10.1145/2648511.2648532
   [Anonymous], 2010, J SATISFIABIL BOOLEA, DOI DOI 10.3233/SAT190075
   [Anonymous], 2012, P WORKSH MOD SYST SO
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P1088, DOI 10.1109/TSE.2011.85
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bagheri Ebrahim, 2012, P 2012 C CTR ADV STU, P87
   Balint A., 2012, CHOOSING PROBABILITY, P16
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger Thorsten, 2013, 7 INT WORKSH VAR MOD, DOI DOI 10.1145/2430502.2430513
   Borazjany M. N., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P591, DOI 10.1109/ICST.2012.146
   Boussaa M, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P40, DOI 10.1109/SBST.2015.17
   Cai SW, 2015, COMPUT J, V58, P2864, DOI 10.1093/comjnl/bxu135
   Cartaxo EG, 2011, SOFTW TEST VERIF REL, V21, P75, DOI 10.1002/stvr.413
   Chvatal V., 1979, Mathematics of Operations Research, V4, P233, DOI 10.1287/moor.4.3.233
   Cohen M.B., 2007, P 2007 INT S SOFTW T, P129
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   DAVIS M, 1962, COMMUN ACM, V5, P394, DOI 10.1145/368273.368557
   Devroey X, 2015, P 9 INT WORKSH VAR M, P59, DOI [10.1145/2701319.2701325, DOI 10.1145/2701319.2701325]
   Devroey X, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P89, DOI 10.1145/2866614.2866627
   Doncieux S, 2020, GECCO'20: PROCEEDINGS OF THE 2020 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P85, DOI 10.1145/3377930.3389840
   Doncieux S, 2019, PROCEEDINGS OF THE 2019 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'19), P99, DOI 10.1145/3321707.3321752
   Ensan Faezeh, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P613, DOI 10.1007/978-3-642-31095-9_40
   Ferreira F, 2019, PROCEEDINGS OF THE 13TH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '19), DOI 10.1145/3302333.3302344
   Fischer S, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P15, DOI [10.1145/2897010.2897011, 10.1109/SBST.2016.011]
   Friedman M, 1937, J AM STAT ASSOC, V32, P675, DOI 10.2307/2279372
   García S, 2009, J HEURISTICS, V15, P617, DOI 10.1007/s10732-008-9080-4
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Gomes J, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P943, DOI 10.1145/2739480.2754736
   Grindal M, 2005, SOFTW TEST VERIF REL, V15, P167, DOI 10.1002/stvr.319
   Hemmati Hadi, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P141, DOI 10.1109/ISSRE.2010.9
   Hemmati H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430540
   Henard C, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P126
   Henard C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P517, DOI 10.1109/ICSE.2015.69
   Henard C, 2014, LECT NOTES COMPUT SC, V8636, P92
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Henard C, 2013, IEEE ICST WORKSHOP, P188, DOI 10.1109/ICSTW.2013.30
   Hervieu A, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P120, DOI 10.1109/ISSRE.2011.31
   Hierons RM, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3361146
   Johansen MF, 2011, LECT NOTES COMPUT SC, V6981, P638, DOI 10.1007/978-3-642-24485-8_47
   Johansen Martin Fagereng, 2012, P 16 INT SOFTWARE PR, P46, DOI [10.1145/2362536.2362547, DOI 10.1145/2362536.2362547]
   Kaltenecker C, 2019, PROC INT CONF SOFTW, P1084, DOI 10.1109/ICSE.2019.00112
   Knauber P, 2002, LECT NOTES COMPUT SC, V2290, P155
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Kuhn Rick, 2008, IT Professional, V10, P19, DOI 10.1109/MITP.2008.54
   Lachmann R, 2016, PROCEEDINGS OF THE 7TH INTERNATIONAL WORKSHOP ON FEATURE-ORIENTED SOFTWARE DEVELOPMENT (FOSD'16), P1, DOI 10.1145/3001867.3001868
   Lee J, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106272
   Lee Jihyun, 2012, P 16 INT SOFTW PROD, P31
   Lehman J., 2008, ALIFE, P329
   Lehman J, 2011, EVOL COMPUT, V19, P189, DOI 10.1162/EVCO_a_00025
   Lity S., 2017, P 11 INT WORKSH VAR, P60, DOI DOI 10.1145/3023956.3023961
   Lopez-Herrejon R. E., 2015, 8 IEEE INT C SOFTW T, P1, DOI DOI 10.1109/ICSTW.2015.7107435
   Lopez-Herrejon RE, 2016, STUD COMPUT INTELL, V617, P59, DOI 10.1007/978-3-319-25964-2_4
   Lopez-Lopez Victor R., 2018, P GEN EV COMP C COMP, P1598, DOI DOI 10.1145/3205651.3208237
   Marijan Dusica., 2013, Proceedings of the 17th International Software Product Line Conference. SPLC'13, P227, DOI DOI 10.1145/2491627.2491646
   Medeiros F, 2016, PROC INT CONF SOFTW, P643, DOI 10.1145/2884781.2884793
   Mende T, 2009, J SOFTW MAINT EVOL-R, V21, P143, DOI 10.1002/smr.402
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Mondal D, 2015, IEEE ICST WORKSHOP
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Oh J., 2020, TR2001 U TEX AUST
   Oh Jeho, 2019, P 23 INT SYSTEMS SOF, VA, DOI DOI 10.1145/3336294.3342359
   Oster S, 2010, LECT NOTES COMPUT SC, V6287, P196, DOI 10.1007/978-3-642-15579-6_14
   Panichella A, 2018, INFORM SOFTWARE TECH, V104, P236, DOI 10.1016/j.infsof.2018.08.009
   Perrouin Gilles, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P459, DOI 10.1109/ICST.2010.43
   Petke Justyna, 2013, P ESEC FSE 2013, DOI [DOI 10.1145/2491411.2491436, 10.1145/2491411.2491436]
   Pett T, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P78, DOI 10.1145/3336294.3336322
   Reisner E., 2010, P ACM IEEE INT C SOF, V1, P445, DOI DOI 10.1145/1806799.1806864
   Romero-Sanchez J., 2019, 2019 IEEE 39th Central America and Panama Convention (CONCAPAN XXXIX), 20-22 November, Guatemala City, Guatemala, P1, DOI [10.1109/CONCAPANXXXIX47272.2019.8976988, DOI 10.1109/CONCAPANXXXIX47272.2019.8976988]
   Sánchez AB, 2017, SOFTW SYST MODEL, V16, P173, DOI 10.1007/s10270-015-0459-z
   Sánchez AB, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P41, DOI 10.1109/ICST.2014.15
   SELMAN B, 1992, AAAI-92 PROCEEDINGS : TENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, P440
   SELMAN B, 1994, PROCEEDINGS OF THE TWELFTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P337
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   Tenev V, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P22, DOI 10.1145/3109729.3109753
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Varshosaz M, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P1, DOI 10.1145/3233027.3233035
   Xiang Y, 2020, EMPIR SOFTW ENG, V25, P591, DOI 10.1007/s10664-019-09761-2
   Xiang Y, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3176644
   Yamamoto T, 2005, LECT NOTES COMPUT SC, V3547, P530
NR 88
TC 4
Z9 4
U1 2
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 8
PY 2021
VL 48
IS 7
BP 2317
EP 2338
DI 10.1109/TSE.2021.3057853
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5ZJ
UT WOS:000825974500003
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Zou, DM
   Liang, JJ
   Xiong, YF
   Ernst, MD
   Zhang, L
AF Zou, Daming
   Liang, Jingjing
   Xiong, Yingfei
   Ernst, Michael D.
   Zhang, Lu
TI An Empirical Study of Fault Localization Families and Their Combinations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Switches; Debugging; Software; Fault diagnosis; Task analysis; Computer
   bugs; History; Fault localization; learning to rank; program debugging;
   software testing; empirical study
ID RANKING; METRICS
AB The performance of fault localization techniques is critical to their adoption in practice. This paper reports on an empirical study of a wide range of fault localization techniques on real-world faults. Different from previous studies, this paper (1) considers a wide range of techniques from different families, (2) combines different techniques, and (3) considers the execution time of different techniques. Our results reveal that a combined technique significantly outperforms any individual technique (200 percent increase in faults localized in Top 1), suggesting that combination may be a desirable way to apply fault localization techniques and that future techniques should also be evaluated in the combined setting. Our implementation is publicly available for evaluating and combining fault localization techniques.
C1 [Zou, Daming; Liang, Jingjing; Xiong, Yingfei; Zhang, Lu] Peking Univ, Sch Elect Engn & Comp Sci, Inst Software, Beijing 100871, Peoples R China.
   [Zou, Daming; Liang, Jingjing; Xiong, Yingfei; Zhang, Lu] Minist Educ, Key Lab High Confidence Software Technol, Beijing, Peoples R China.
   [Ernst, Michael D.] Univ Washington, Dept Comp Sci & Engn, Seattle, WA 98195 USA.
C3 Peking University; University of Washington; University of Washington
   Seattle
RP Xiong, YF (corresponding author), Peking Univ, Sch Elect Engn & Comp Sci, Inst Software, Beijing 100871, Peoples R China.; Xiong, YF (corresponding author), Minist Educ, Key Lab High Confidence Software Technol, Beijing, Peoples R China.
EM zoudm@pku.edu.cn; jingjingliang@pku.edu.cn; xiongyf@pku.edu.cn;
   mernst@cs.washington.edu; zhanglucs@pku.edu.cn
FU National Key Research and Development Program of China [2017YFB1001803];
   National Natural Science Foundation of China [61529201, 61672045]; Air
   Force Research Laboratory; DARPA of the U.S.A. [FA8750-12-2-0107,
   FA8750-15-C-0010, FA8750-16-2-0032]
FX This material is based on research sponsored by the National Key
   Research and Development Program of China No. 2017YFB1001803, the
   National Natural Science Foundation of China under Grants Nos. 61529201,
   61672045, and the Air Force Research Laboratory and DARPA of the U.S.A.
   under agreement numbers FA8750-12-2-0107, FA8750-15-C-0010, and
   FA8750-16-2-0032. The U.S. Government is authorized to reproduce and
   distribute reprints for Governmental purposes notwithstanding any
   copyright notation thereon.
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Agrawal H, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P143, DOI 10.1109/ISSRE.1995.497652
   Agrawal H., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P348, DOI 10.1109/ICSM.1993.366927
   [Anonymous], 2011, P ACM SIGSOFT S EURO
   [Anonymous], 2013, P 2013 INT S SOFTW T, DOI DOI 10.1145/2483760.2483767
   [Anonymous], 2008, Modern information retrieval: the concepts and technology behind search
   Burges C., 2005, ICML, P89
   Chang CC, 2011, ACM T INTEL SYST TEC, V2, DOI 10.1145/1961189.1961199
   Chen MY, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P595, DOI 10.1109/DSN.2002.1029005
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   Cousins L., 1986, P IEEE NAT COMP C
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Gyimóthy T, 1999, LECT NOTES COMPUT SC, V1687, P303, DOI 10.1145/318774.319248
   Hammacher C., 2008, THESIS SAARLAND U SA
   Hao D, 2005, PROC IEEE INT CONF S, P683
   Hao D., 2005, P 20 IEEE ACM INT C, P291
   Hao D, 2006, ASPEC 2006: 13TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P277
   Harrold MJ, 1998, ACM SIGPLAN NOTICES, V33, P83, DOI 10.1145/277633.277647
   Harrold MJ, 2000, SOFTW TEST VERIF REL, V10, P171, DOI 10.1002/1099-1689(200009)10:3<171::AID-STVR209>3.0.CO;2-J
   Hu ZD, 2014, IEEE INT SYMP POWER
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jacobellis J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1319, DOI 10.1109/ICSE.2013.6606707
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Kuo T.-M., 2014, P 2014 SIAM INT C DA, P812, DOI [10.1137/1.9781611973440.93, DOI 10.1137/1.9781611973440.93]
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Le TDB, 2013, PROC IEEE INT CONF S, P380, DOI 10.1109/ICSM.2013.52
   Le TDB, 2015, EMPIR SOFTW ENG, V20, P1237, DOI 10.1007/s10664-014-9349-1
   Li H, 2011, IEICE T INF SYST, VE94D, P1854, DOI 10.1587/transinf.E94.D.1854
   Li X, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133916
   Ma L, 2015, IEEE INT CONF AUTOM, P842, DOI 10.1109/ASE.2015.102
   Meng N, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P329
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   RODGERS JL, 1988, AM STAT, V42, P59, DOI 10.2307/2685263
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   Shin Yoo, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P244, DOI 10.1007/978-3-642-33119-0_18
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   Spafford E. H., 1992, HEURISTIC AUTOMATIC
   Tie-Yan Liu, 2009, Foundations and Trends in Information Retrieval, V3, P225, DOI 10.1561/1500000016
   Wang B, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P295, DOI 10.1145/3092703.3092714
   Wang T, 2004, PROC INT CONF SOFTW, P512, DOI 10.1109/ICSE.2004.1317473
   Wang T, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1330017.1330021
   Wang XY, 2017, SCI CHINA INFORM SCI, V60, DOI 10.1007/s11432-016-9057-8
   Wang Y, 2017, SCI CHINA INFORM SCI, V60, DOI 10.1007/s11432-017-9112-2
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Wong W. Eric, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P42
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Wong WE, 2012, IEEE T RELIAB, V61, P149, DOI 10.1109/TR.2011.2172031
   Xia X, 2016, PROC IEEE INT CONF S, P268, DOI 10.1109/ICSME.2016.67
   Xiangyu Zhang, 2006, 28th International Conference on Software Engineering Proceedings, P272, DOI 10.1145/1134285.1134324
   Xiaoyuan Xie, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P224, DOI 10.1007/978-3-642-39742-4_17
   Xie T, 2014, J COMPUT SCI TECH-CH, V29, P713, DOI 10.1007/s11390-014-1461-6
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Xiong YF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P789, DOI 10.1145/3180155.3180182
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xu J. Qian, 2005, ACM SIGSOFT Software Engineering Notes, V30, P1, DOI [10.1145/1050849.1050865.36Y, DOI 10.1145/1050849.1050865]
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   Zhang J, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-014-5241-2
   Zhang Jie, 2016, P 25 INT S SOFTWARE, P342, DOI [10.1145/2931037, DOI 10.1145/2931037]
   Zhang XY, 2007, EMPIR SOFTW ENG, V12, P143, DOI 10.1007/s10664-006-9007-3
   Zhang ZG, 2003, PROC INT CONF SOFTW, P319
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 79
TC 154
Z9 173
U1 3
U2 71
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2021
VL 47
IS 2
BP 332
EP 347
DI 10.1109/TSE.2019.2892102
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QG7HE
UT WOS:000617753400007
OA Green Submitted
HC Y
HP N
DA 2024-07-18
ER

PT J
AU Dam, HK
   Tran, T
   Pham, T
   Ng, SW
   Grundy, J
   Ghose, A
AF Hoa Khanh Dam
   Truyen Tran
   Trang Pham
   Ng, Shien Wee
   Grundy, John
   Ghose, Aditya
TI Automatic Feature Learning for Predicting Vulnerable Software Components
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software vulnerability prediction; mining software engineering
   repositories; empirical software engineering
ID CODE CHURN; COMPLEXITY; METRICS
AB Code flaws or vulnerabilities are prevalent in software systems and can potentially cause a variety of problems including deadlock, hacking, information loss and system failure. A variety of approaches have been developed to try and detect the most likely locations of such code vulnerabilities in large code bases. Most of them rely on manually designing code features (e.g., complexity metrics or frequencies of code tokens) that represent the characteristics of the potentially problematic code to locate. However, all suffer from challenges in sufficiently capturing both semantic and syntactic representation of source code, an important capability for building accurate prediction models. In this paper, we describe a new approach, built upon the powerful deep learning Long Short Term Memory model, to automatically learn both semantic and syntactic features of code. Our evaluation on 18 Android applications and the Firefox application demonstrates that the prediction power obtained from our learned features is better than what is achieved by state of the art vulnerability prediction models, for both within-project prediction and cross-project prediction.
C1 [Hoa Khanh Dam; Ng, Shien Wee; Ghose, Aditya] Univ Wollongong, Sch Comp & Informat Technol, Fac Engn & Informat Sci, Wollongong, NSW 2522, Australia.
   [Truyen Tran; Trang Pham] Deakin Univ, Sch Informat Technol, Waurn Ponds, Vic 3216, Australia.
   [Grundy, John] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
C3 University of Wollongong; Deakin University; Monash University
RP Dam, HK (corresponding author), Univ Wollongong, Sch Comp & Informat Technol, Fac Engn & Informat Sci, Wollongong, NSW 2522, Australia.
EM hoa@uow.edu.au; truyen.tran@deakin.edu.au; phtra@deakin.edu.au;
   swn881@uow.edu.au; john.grundy@monash.edu.au; aditya@uow.edu.au
RI Pham, Trang Ngoc/KRP-7874-2024; Grundy, John/I-6681-2012; Dam, Hoa
   Khanh/C-6058-2014
OI Tran, Truyen/0000-0001-6531-8907; Grundy, John/0000-0003-4928-7076; Dam,
   Hoa Khanh/0000-0003-4246-0526
FU Samsung
FX The authors gratefully acknowledge support from Samsung through its 2016
   Global Research Outreach Program. We would also thank Yonghee Shin for
   sharingwith us the Firefox vulnerability dataset.
CR Nguyen AT, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P858, DOI 10.1109/ICSE.2015.336
   [Anonymous], 2001, GRADIENT FLOW RECURR, DOI DOI 10.1109/9780470544037.CH14
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Austin A, 2011, INT SYMP EMP SOFTWAR, P97, DOI 10.1109/ESEM.2011.18
   Baroni M, 2014, PROCEEDINGS OF THE 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P238
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Ceccato M, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962611
   Chowdhury I, 2011, J SYST ARCHITECT, V57, P294, DOI 10.1016/j.sysarc.2010.06.003
   Cun Y. L., 1990, ADV NEURAL INFORM PR, V2, P396
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Dam H. K., 2016, FSE 2016, P1
   Gers FA, 2000, NEURAL COMPUT, V12, P2451, DOI 10.1162/089976600300015015
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Giles CL, 2001, MACH LEARN, V44, P161, DOI 10.1023/A:1010884214864
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Gutmann MU, 2012, J MACH LEARN RES, V13, P307
   Hackett R., 2015, FORTUNUE APR
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hinton GE, 2006, SCIENCE, V313, P504, DOI 10.1126/science.1127647
   Dam HK, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P944, DOI 10.1145/2950290.2983985
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Huo X., 2016, IJCAI, P1606
   Jimenez M, 2016, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2016.15
   Keras, KERAS 20202021
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Lowe D. G., 1999, Proceedings of the Seventh IEEE International Conference on Computer Vision, P1150, DOI 10.1109/ICCV.1999.790410
   Massacci F, 2014, IEEE T SOFTWARE ENG, V40, P1147, DOI 10.1109/TSE.2014.2354037
   McAfee C. for Strategic and I. Studies, 2014, NET LOSSES ESTIMATIN
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Mohindra D, SEI CERT ORACLE COD
   Morrison P., 2015, P 2015 S BOOTCAMP SC
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Scandariato R., 2014, ANDROID STUDY DATASE
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Shin Y, 2013, EMPIR SOFTW ENG, V18, P25, DOI 10.1007/s10664-011-9190-8
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Shin Y, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P315
   Stuckman J, 2017, IEEE T RELIAB, V66, P17, DOI 10.1109/TR.2016.2630503
   Sultana KZ, 2017, IEEE INT CONF AUTOM, P1022, DOI 10.1109/ASE.2017.8115724
   Tu ZP, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P269, DOI 10.1145/2635868.2635875
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Ventures C, 2017, CYBERSECURITY MARKET
   Walden J, 2014, PROC INT SYMP SOFTW, P23, DOI 10.1109/ISSRE.2014.32
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   Williams C., 2014, REGISTER
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zimmermann Thomas, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P421, DOI 10.1109/ICST.2010.32
NR 59
TC 87
Z9 95
U1 2
U2 28
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2021
VL 47
IS 1
BP 67
EP 85
DI 10.1109/TSE.2018.2881961
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA PR6XN
UT WOS:000607376900003
DA 2024-07-18
ER

PT J
AU Nahabedian, L
   Braberman, V
   Dippolito, N
   Honiden, S
   Kramer, J
   Tei, K
   Uchitel, S
AF Nahabedian, Leandro
   Braberman, Victor
   Dippolito, Nicolas
   Honiden, Shinichi
   Kramer, Jeff
   Tei, Kenji
   Uchitel, Sebastian
TI Dynamic Update of Discrete Event Controllers
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tools; Runtime; Paints; Control systems; Business; Safety; Controller
   synthesis; dynamic update; adaptive systems
ID RECONFIGURATION; SYSTEMS; VISION; SAFE
AB Discrete event controllers are at the heart of many software systems that require continuous operation. Changing these controllers at runtime to cope with changes in its execution environment or system requirements change is a challenging open problem. In this paper we address the problem of dynamic update of controllers in reactive systems. We present a general approach to specifying correctness criteria for dynamic update and a technique for automatically computing a controller that handles the transition from the old to the new specification, assuring that the system will reach a state in which such a transition can correctly occur and in which the underlying system architecture can reconfigure. Our solution uses discrete event controller synthesis to automatically build a controller that guarantees both progress towards update and safe update.
C1 [Nahabedian, Leandro; Braberman, Victor; Dippolito, Nicolas; Uchitel, Sebastian] Univ Buenos Aires, FCEyN, ICC, CONICET, B1053, Buenos Aires, DF, Argentina.
   [Honiden, Shinichi; Tei, Kenji] Natl Inst Informat, Tokyo 1000003, Japan.
   [Kramer, Jeff; Uchitel, Sebastian] Imperial Coll, Dept Comp, London SW7 2AZ, England.
C3 Consejo Nacional de Investigaciones Cientificas y Tecnicas (CONICET);
   University of Buenos Aires; Research Organization of Information &
   Systems (ROIS); National Institute of Informatics (NII) - Japan;
   Imperial College London
RP Nahabedian, L (corresponding author), Univ Buenos Aires, FCEyN, ICC, CONICET, B1053, Buenos Aires, DF, Argentina.
EM lnahabedian@dc.uba.ar; vbraber@dc.uba.ar; ndippolito@dc.uba.ar;
   honiden@nii.ac.jp; j.kramer@imperial.ac.uk; tei@nii.ac.jp;
   suchitel@dc.uba.ar
RI Tei, Kenji/HJI-6556-2023
OI Kramer, Jeffrey/0000-0002-6308-127X; Braberman,
   Victor/0000-0001-5946-3550; Tei, Kenji/0000-0003-1106-1709
FU ANPCYT; UBACYT; CONICET; EPSRC [EP/E025188/1] Funding Source: UKRI
FX This work was partially supported by ANPCYT, UBACYT, and CONICET.
CR Alvares F, 2017, J SYST SOFTWARE, V130, P94, DOI 10.1016/j.jss.2017.01.030
   An SW, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P173, DOI 10.1109/QRS.2015.33
   Anderson ML, 2009, EUR J PSYCHOL, V5, P1
   [Anonymous], 2017, MTSA SYNTHESIS TOOL
   [Anonymous], 2006, INT S SOFTW ENG AD S
   [Anonymous], 2004, Workflow Management: Models, Methods, and Systems
   Arshad N, 2007, SOFTWARE QUAL J, V15, P265, DOI 10.1007/s11219-007-9019-2
   Ballabriga C., 2005, SIGSOFT SOFTW ENG NO, V30, P80, DOI DOI 10.1145/1095430.1081720
   Banno Filippo, 2010, 2010 IEEE Symposium on Computers and Communications (ISCC), P471, DOI 10.1109/ISCC.2010.5546542
   Baresi L, 2017, IEEE T SOFTWARE ENG, V43, P340, DOI 10.1109/TSE.2016.2592913
   Baresi Luciano., 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research. FoSER'10, P17, DOI [10.1145/1882362.1882367, DOI 10.1145/1882362.1882367]
   Bergen A, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P120, DOI 10.1109/SEAMS.2015.20
   Bloem R, 2009, LECT NOTES COMPUT SC, V5643, P140, DOI 10.1007/978-3-642-02658-4_14
   Braberman Victor A., 2015, P 1 INT WORKSH CONTR, P9, DOI [10.1145/2804337.2804339, DOI 10.1145/2804337.2804339]
   Chen HB, 2007, PROC INT CONF SOFTW, P271
   Chen HB, 2011, IEEE T SOFTWARE ENG, V37, P679, DOI 10.1109/TSE.2010.79
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Ciolek D, 2017, IEEE T SOFTWARE ENG, V43, P19, DOI 10.1109/TSE.2016.2564959
   D'Ippolito Nicolas, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P475, DOI 10.1109/ASE.2008.78
   D'Ippolito N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P688, DOI 10.1145/2568225.2568264
   D'Ippolito N, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430543
   de Alfaro L., 2001, Software Engineering Notes, V26, P109, DOI 10.1145/503271.503226
   Ellis C., 1995, Conference on Organizational Computing Systems, P10, DOI 10.1145/224019.224021
   Filieri A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P283, DOI 10.1109/ASE.2011.6100064
   Filieri A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P299, DOI 10.1145/2568225.2568272
   Filieri A, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P71, DOI 10.1109/SEAMS.2015.12
   Garcia HE, 1996, INT J CONTROL, V63, P767, DOI 10.1080/00207179608921868
   Ghezzi C., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P145, DOI 10.1109/SEAMS.2012.6224401
   Giannakopoulou D., 2003, Software Engineering Notes, V28, P257, DOI 10.1145/949952.940106
   Greenyer Joel, 2013, P 2013 9 JOINT M FDN, P433
   Gupta D, 1996, IEEE T SOFTWARE ENG, V22, P120, DOI 10.1109/32.485222
   Gupta D., 1994, THESIS
   Hayden CM, 2012, LECT NOTES COMPUT SC, V7152, P278, DOI 10.1007/978-3-642-27705-4_22
   Hosek P, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P612, DOI 10.1109/ICSE.2013.6606607
   KELLER RM, 1976, COMMUN ACM, V19, P371, DOI 10.1145/360248.360251
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kontitsis M, 2004, IEEE INT CONF ROBOT, P77, DOI 10.1109/ROBOT.2004.1307132
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   Kress-Gazit H, 2008, IEEE INT CON AUTO SC, P766, DOI 10.1109/COASE.2008.4626549
   La Manna VP, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P63, DOI 10.1109/SEAMS.2013.6595493
   Lewerentz C., 1995, FORMAL DEV REACTIVE, V891
   Magee Jeff., 2006, CONCURRENCY STATE MO
   Maggio M, 2013, IEEE T CONTR SYST T, V21, P239, DOI 10.1109/TCST.2011.2177499
   Makris Kristis., 2007, Proceedings of the 2nd ACM SIGOPS/EuroSys European Conference on Computer Systems 2007, P327
   Microsoft, 2017, WIND WORKFL FDN DYN
   Nahabedian L, 2016, PROCEEDINGS OF 2016 IEEE/ACM 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P96, DOI [10.1109/SEAMS.2016.019, 10.1145/2897053.2897056]
   Neamtiu I, 2006, ACM SIGPLAN NOTICES, V41, P72, DOI 10.1145/1133981.1133991
   Neamtiu I, 2009, ACM SIGPLAN NOTICES, V44, P13, DOI 10.1145/1543135.1542479
   Nooruldeen A, 2015, IEEE T AUTOMAT CONTR, V60, P1630, DOI 10.1109/TAC.2014.2358811
   Orso A, 2002, PROC IEEE INT CONF S, P649, DOI 10.1109/ICSM.2002.1167829
   Paderborn, 2014, NEW RAIL TECHNOLOGY
   Pelliccione P, 2008, J SYST SOFTWARE, V81, P2237, DOI 10.1016/j.jss.2008.05.030
   Piterman N, 2006, LECT NOTES COMPUT SC, V3855, P364
   PNUELI A, 1989, CONFERENCE RECORD OF THE SIXTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P179, DOI 10.1145/75277.75293
   RAMADGE PJG, 1989, P IEEE, V77, P81, DOI 10.1109/5.21072
   Sampath R, 2008, IEEE T AUTOM SCI ENG, V5, P84, DOI 10.1109/TASE.2007.911688
   Sandwith T, 2010, ARGUMENTS FOR PROTECTED AREAS: MULTIPLE BENEFITS FOR CONSERVATION AND USE, P225
   Seifzadeh H, 2013, J SOFTW-EVOL PROC, V25, P535, DOI 10.1002/smr.1556
   Shevtsov S, 2018, IEEE T SOFTWARE ENG, V44, P784, DOI 10.1109/TSE.2017.2704579
   Stoyle G, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1255450.1255455
   Subramanian S, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P1, DOI 10.1145/1542476.1542478
   Sykes D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P63, DOI 10.1109/ICSE.2013.6606552
   Sykes Daniel., 2010, Proceedings of the 2010 ACM Symposium on Applied Computing, SAC '10, P431, DOI DOI 10.1145/1774088.1774180
   Sykes K, 2008, ETHNOGRAPHIES OF MORAL REASONING: LIVING PARADOXES OF A GLOBAL AGE, P1, DOI 10.1057/9780230617957
   Tajalli H., 2010, P IEEE ACM INT C AUT, P467, DOI DOI 10.1145/1858996.1859092
   van der Aalst WMP, 2000, COMPUT SYST SCI ENG, V15, P267
   van Lamsweerde A, 2000, IEEE T SOFTWARE ENG, V26, P978, DOI 10.1109/32.879820
   Vandewoude Y, 2007, IEEE T SOFTWARE ENG, V33, P856, DOI 10.1109/TSE.2007.70733
   Vromant Pieter., 2011, Proceedings of the 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems. SEAMS 2011, P202, DOI DOI 10.1145/1988008.1988037
   Zhang Ji., 2005, WADS 05, P1, DOI DOI 10.1145/1083217.1083220
   Zhang Ji, 2006, P 28 INT C SOFTW ENG, P371
NR 71
TC 13
Z9 14
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2020
VL 46
IS 11
BP 1220
EP 1240
DI 10.1109/TSE.2018.2876843
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OR6QY
UT WOS:000589594600001
DA 2024-07-18
ER

PT J
AU Zhou, ZQ
   Sun, LQ
   Chen, TY
   Towey, D
AF Zhou, Zhi Quan
   Sun, Liqun
   Chen, Tsong Yueh
   Towey, Dave
TI Metamorphic Relations for Enhancing System Understanding and Use
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; Information technology; Electronic mail; Software
   systems; Software maintenance; Metamorphic exploration; symmetry;
   metamorphic testing; metamorphic relation; metamorphic relation pattern;
   metamorphic relation input pattern; change direction; oracle problem;
   user experience; user countermeasure; software validation
ID AUTOMATED TEST ORACLES; SOFTWARE; SYMMETRY; PRICE; MODEL
AB Modern information technology paradigms, such as online services and off-the-shelf products, often involve a wide variety of users with different or even conflicting objectives. Every software output may satisfy some users, but may also fail to satisfy others. Furthermore, users often do not know the internal working mechanisms of the systems. This situation is quite different from bespoke software, where developers and users typically know each other. This paper proposes an approach to help users to better understand the software that they use, and thereby more easily achieve their objectives-even when they do not fully understand how the system is implemented. Our approach borrows the concept of metamorphic relations from the field of metamorphic testing (MT), using it in an innovative way that extends beyond MT. We also propose a "symmetry" metamorphic relation pattern and a "change direction" metamorphic relation input pattern that can be used to derive multiple concrete metamorphic relations. Empirical studies reveal previously unknown failures in some of the most popular applications in the world, and show how our approach can help users to better understand and better use the systems. The empirical results provide strong evidence of the simplicity, applicability, and effectiveness of our methodology.
C1 [Zhou, Zhi Quan; Sun, Liqun] Univ Wollongong, Sch Comp & Informat Technol, Inst Cybersecur & Cryptol, Wollongong, NSW 2522, Australia.
   [Chen, Tsong Yueh] Swinburne Univ Technol, Dept Comp Sci & Software Engn, Hawthorn, Vic 3122, Australia.
   [Towey, Dave] Univ Nottingham Ningbo China, Sch Comp Sci, Ningbo 315100, Zhejiang, Peoples R China.
C3 University of Wollongong; Swinburne University of Technology; University
   of Nottingham Ningbo China
RP Zhou, ZQ (corresponding author), Univ Wollongong, Sch Comp & Informat Technol, Inst Cybersecur & Cryptol, Wollongong, NSW 2522, Australia.
EM zhiquan@uow.edu.au; ls168@uowmail.edu.au; tychen@swin.edu.au;
   Dave.Towey@nottingham.edu.cn
RI Towey, Dave/K-3160-2014
OI Towey, Dave/0000-0003-0877-4353; Chen, Tsong/0000-0003-3578-0994; Zhou,
   Zhi Quan/0000-0003-1769-9367
FU Australian Research Council [LP160101691]; Suzhou Insight Cloud
   Information Technology Co., Ltd.; Artificial Intelligence and
   Optimisation Research Group of the University of Nottingham Ningbo
   China; International Doctoral Innovation Centre; Ningbo Education
   Bureau; Ningbo Science and Technology Bureau; University of Nottingham;
   Australian Research Council [LP160101691] Funding Source: Australian
   Research Council
FX This research was supported in part by a linkage grant of the Australian
   Research Council (Project ID: LP160101691). We would like to thank
   Suzhou Insight Cloud Information Technology Co., Ltd. for supporting
   this research. Dave Towey acknowledges the financial support from the
   Artificial Intelligence and Optimisation Research Group of the
   University of Nottingham Ningbo China, the International Doctoral
   Innovation Centre, the Ningbo Education Bureau, the Ningbo Science and
   Technology Bureau, and the University of Nottingham. We wish to thank
   Darryl Jarman and Zhenyu Wang of Adobe Systems for providing feedback on
   the use of metamorphic relations in software processes. We are grateful
   to the anonymous reviewers for their valuable comments on this work. All
   correspondence should be addressed to Dr. Zhi Quan Zhou at the address
   shown on the first page of this paper.
CR Alexa, 2017, ISOIEC250102011
   AMMANN PE, 1988, IEEE T COMPUT, V37, P418, DOI 10.1109/12.2185
   ANDERSON PW, 1972, SCIENCE, V177, P393, DOI 10.1126/science.177.4047.393
   Andrews A, 2002, PROC IEEE INT CONF S, P359, DOI 10.1109/ICSM.2002.1167792
   [Anonymous], 2017, BRICKS TO CLICKS WHY
   [Anonymous], 2017, SEO 2018 LEARN SEARC
   Arfken G. B., 2012, MATHEMATICAL METHODS
   Banados M., 2016, INT J MODERN PHYDS D, V25
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   BECK K, 2002, EXTREME PROGRAMMING, DOI DOI 10.1093/COMJNL/BXM043
   Brown J, 2018, PROCEEDINGS OF THE 51ST ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES (HICSS), P5687
   Cao YX, 2013, INT CONF QUAL SOFTW, P153, DOI 10.1109/QSIC.2013.43
   Carzaniga A, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2755970
   Chen T. Y., 1998, HKUSTCS9801 HONG U S
   Chen T.Y., 2004, PROC 4 IBERO AM S SO, P569
   Chen T. Y., 1927, ACM COMPUT SURV, V51
   Chen TY, 2016, COMPUTER, V49, P48, DOI 10.1109/MC.2016.176
   Chen TY, 2003, INFORM SOFTWARE TECH, V45, P1, DOI 10.1016/S0950-5849(02)00129-5
   Clarke A., 2017, MODERN COURSE IN U P
   Collins AT, 2012, TRANSPORTATION, V39, P55, DOI 10.1007/s11116-011-9327-z
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Das S., 2016, J APPL FUNDAM SCI, V2, P69
   Degeratu AM, 2000, INT J RES MARK, V17, P55, DOI 10.1016/S0167-8116(00)00005-7
   Deloitte, 2017, DELOITTE GLOBAL POWE
   Deutsch D., 2011, CLOUD VID INT VID CO
   Donaldson AF, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133917
   Donaldson AF, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET), P44, DOI [10.1109/MET.2016.016, 10.1145/2896971.2896978]
   Dwarakanath A, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P118, DOI 10.1145/3213846.3213858
   Gesenhues A., 2017, BEGINNING OF INFINIT
   Ghezzi C., 2002, FUNDAMENTS OF SOFTWA
   Google, 2017, SEARCH OF SCHRODINGE
   Gotlieb A, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P365, DOI 10.1109/ISSRE.2003.1251058
   Gross D. J., 1996, P NATL ACAD SCI UA, V93, P14
   Guédria W, 2015, ENTERP INF SYST-UK, V9, P1, DOI 10.1080/17517575.2013.805246
   Han F., 2017, ISOIECIEEE247652010E
   Hargittai M., 2009, SYMMETRY THROUGH THE
   Hong Zhu, 2015, 2015 Second International Conference on Trustworthy Systems and their Applications (TSA). Proceedings, P8, DOI 10.1109/TSA.2015.13
   Ip CN, 1996, FORM METHOD SYST DES, V9, P41, DOI 10.1007/BF00625968
   ISO/IEC, 2011, GUARDINA
   Jarman DC, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2017), P21, DOI 10.1109/MET.2017.1
   Kabos P., 1994, Magnetostatic Waves and Their Applications
   Kanewala U., 2016, P IEEE, Vvii
   Kanewala U, 2016, SOFTW TEST VERIF REL, V26, P245, DOI 10.1002/stvr.1594
   Kiraç MF, 2018, J SYST SOFTWARE, V136, P266, DOI 10.1016/j.jss.2017.06.023
   Korel B, 1999, PROG COMPREHEN, P92, DOI 10.1109/WPC.1999.777748
   Kshemkalyani Ajay D., 2011, Distributed computing: principles, algorithms, and systems
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Li F.-F., 2017, SHORT HISTORY OF THE
   Li Fei-Fei., 2017, Announcing google cloud video intelligence api, and more cloud machine learning updates
   Lindvall M, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2017), P35, DOI 10.1109/MET.2017.6
   Lindvall M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P129, DOI 10.1109/ICSE.2015.348
   Liu H, 2014, IEEE T SOFTWARE ENG, V40, P4, DOI 10.1109/TSE.2013.46
   Mao K, 2017, J SYST SOFTWARE, V126, P57, DOI 10.1016/j.jss.2016.09.015
   Melnik G., 2006, P AGILE C
   Mouha N, 2018, IEEE T RELIAB, V67, P870, DOI 10.1109/TR.2018.2847247
   Oliveira RAP, 2014, ADV COMPUT, V95, P113, DOI 10.1016/B978-0-12-800160-8.00003-6
   Pastore F, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P342, DOI 10.1109/ICST.2013.13
   Perrett DI, 1999, EVOL HUM BEHAV, V20, P295, DOI 10.1016/S1090-5138(99)00014-8
   Pezzè M, 2014, ADV COMPUT, V95, P1, DOI 10.1016/B978-0-12-800160-8.00001-2
   Quora Inc, 2012, SEARCH ENGINE LAND
   Regehr K, 2014, ANTIGONISH REV, P20
   Rodeghero P, 2017, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.2017.13
   Sailer S., 2016, GREAT MOMENTS IN GOO
   Segura S., 2015, P IEEE ACM 10 INT WO, DOI 10.1109/TSE.2017.2764464
   SEGURA S, 2018, PRESENTATION SLIDES, DOI DOI 10.1109/TIFS.2008.2004286
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Shan LJ, 2009, COMPUT J, V52, P571, DOI 10.1093/comjnl/bxm043
   Stewart I., 2013, SYMMETRY A VERY SHOR
   Stoichita V. I., 1997, SOFTWARE TESTING AND
   Su FH, 2015, 10TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST AST 2015, P55, DOI 10.1109/AST.2015.19
   Suk K, 2012, J MARKETING RES, V49, P708, DOI 10.1509/jmr.11.0309
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Towey D, 2016, PROCEEDINGS OF 2016 IEEE INTERNATIONAL CONFERENCE ON TEACHING, ASSESSMENT, AND LEARNING FOR ENGINEERING (TALE), P218, DOI 10.1109/TALE.2016.7851797
   Towey D, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON TEACHING, ASSESSMENT, AND LEARNING FOR ENGINEERING (TALE), P161, DOI 10.1109/TALE.2015.7386036
   Troya J, 2018, J SYST SOFTWARE, V136, P188, DOI 10.1016/j.jss.2017.05.043
   Tzu Lao., 1997, Tao Te Ching
   Vinberg E. B., 2003, COURSE IN ALGEBRA
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P216, DOI [10.1145/2666356.2594334, 10.1145/2594291.2594334]
   Wong J. C., 2017, AM SCI
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Yaglom I. M., 1990, FELIX KLEIN AND SOPH
   Zee A., 2016, FEARFUL SYMMETRY THE
   Zhang XZ, 2008, IEEE T INF FOREN SEC, V3, P684, DOI 10.1109/TIFS.2008.2004286
   Zhou Z. Q., 2004, SOFTW TESTING VERFIC, V22, P221
   Zhou Z. Q., 2007, TR200706 THE UNIV HO
   Zhou ZQ, 2016, IEEE T SOFTWARE ENG, V42, P264, DOI 10.1109/TSE.2015.2478001
NR 87
TC 67
Z9 71
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2020
VL 46
IS 10
BP 1120
EP 1154
DI 10.1109/TSE.2018.2876433
PG 35
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OA7HI
UT WOS:000577950900005
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Rao, M
   Bacon, DF
   Parkes, DC
   Seltzer, MI
AF Rao, Malvika
   Bacon, David F.
   Parkes, David C.
   Seltzer, Margo I.
TI Incentivizing Deep Fixes in Software Economies
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Task analysis; Ecosystems; Open source software; Testing;
   Software engineering; Market design; mean field equilibrium; software
   engineering; payment mechanisms
ID DYNAMIC-GAMES; MARKET; COLLABORATION; EQUILIBRIA; ALLOCATION
AB An important question in a software economy is how to incentivize deep rather than shallow fixes. A deep fix corrects the root cause of a bug instead of suppressing the symptoms. This paper initiates the study of the problem of incentive design for open workflows in fixing code. We model the dynamics of the software ecosystem and introduce subsumption mechanisms. These mechanisms only make use of externally observable information in determining payments and promote competition between workers. We use a mean field equilibrium methodology to evaluate the performance of these mechanisms, demonstrating in simulation that subsumption mechanisms perform robustly across various environment configurations and satisfy important criteria for market design.
C1 [Rao, Malvika; Parkes, David C.; Seltzer, Margo I.] Harvard Univ, John A Paulson Sch Engn & Appl Sci, Cambridge, MA 02138 USA.
   [Bacon, David F.] Google, Mountain View, CA 94043 USA.
C3 Harvard University; Google Incorporated
RP Rao, M (corresponding author), Harvard Univ, John A Paulson Sch Engn & Appl Sci, Cambridge, MA 02138 USA.
EM malvika@eecs.harvard.edu; dfb@google.com; parkes@eecs.harvard.edu;
   margo@eecs.harvard.edu
CR Acemoglu D, 2013, GAME ECON BEHAV, V81, P27, DOI 10.1016/j.geb.2013.03.009
   Adlakha S, 2015, J ECON THEORY, V156, P269, DOI 10.1016/j.jet.2013.07.002
   Adlakha S, 2010, IEEE DECIS CONTR P, P6633, DOI 10.1109/CDC.2010.5717416
   Anderson R, 2001, 17TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P358, DOI 10.1109/ACSAC.2001.991552
   Anderson R., 2008, Security Economics and the Internal Market
   Anderson R, 2006, SCIENCE, V314, P610, DOI 10.1126/science.1130992
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], WORKSH FUT SOFTW ENG
   [Anonymous], [No title captured]
   [Anonymous], 2016, ROADS BRIDGES UNSEEN
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2015, THESIS
   [Anonymous], 2000, POWER MODULARITY
   [Anonymous], [No title captured]
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Arnosti Nick., 2014, Proceedings of the fifteenth ACM conference on Economics and computation, P451
   Athey S, 2014, J ECON MANAGE STRAT, V23, P294, DOI 10.1111/jems.12053
   Bacon D.F., 2012, Proceedings of the 11th International Conference on Autonomous Agents and Multiagent Systems (AAMAS), P695
   Bacon D. F., 2010, P FSE SDP WORKSH FUT, P7
   Benkler Y, 2002, YALE LAW J, V112, P369, DOI 10.2307/1562247
   Chawla Shuchi., 2012, SODA, P856
   DiPalantino D, 2009, 10TH ACM CONFERENCE ON ELECTRONIC COMMERCE - EC 2009, P119
   Hosseini H, 2012, EUR CON SFTWR MTNCE, P149, DOI 10.1109/CSMR.2012.25
   Howison J, 2014, MIS QUART, V38, P29, DOI 10.25300/MISQ/2014/38.1.02
   Huang MY, 2006, COMMUN INF SYST, V6, P221
   Huang MY, 2012, IEEE T AUTOMAT CONTR, V57, P1736, DOI 10.1109/TAC.2012.2183439
   Iyer K, 2014, MANAGE SCI, V60, P2949, DOI 10.1287/mnsc.2014.2018
   Johnson JP, 2002, J ECON MANAGE STRAT, V11, P637, DOI 10.1162/105864002320757280
   Johnson JP, 2006, INF ECON POLICY, V18, P477, DOI 10.1016/j.infoecopol.2006.07.001
   Kannan K, 2005, MANAGE SCI, V51, P726, DOI 10.1287/mnsc.1040.0357
   Kearns M, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P1324, DOI 10.1023/A:1017932429737
   Lakhani K.R., 2007, Innovations: Technology, Governance, Globalization, V2, P97, DOI DOI 10.1162/ITGG.2007.2.3.97
   Lasry JM, 2007, JAP J MATH, V2, P229, DOI 10.1007/s11537-007-0657-8
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Lerner J, 2006, AM ECON REV, V96, P114, DOI 10.1257/000282806777211874
   Liblit B, 2003, ACM SIGPLAN NOTICES, V38, P141, DOI 10.1145/780822.781148
   MacCormack A, 2006, MANAGE SCI, V52, P1015, DOI 10.1287/mnsc.1060.0552
   Maillart T, 2017, J CYBERSECURITY, V3, P81, DOI 10.1093/cybsec/tyx008
   Mao K, 2017, J SYST SOFTWARE, V126, P57, DOI 10.1016/j.jss.2016.09.015
   Moldovanu B, 2006, J ECON THEORY, V126, P70, DOI 10.1016/j.jet.2004.10.004
   Moldovanu B, 2001, AM ECON REV, V91, P542, DOI 10.1257/aer.91.3.542
   *NIST, 2002, 023 NIST
   Roberts JA, 2006, MANAGE SCI, V52, P984, DOI 10.1287/mnsc.1060.0554
   Schechter S, 2002, LECT NOTES COMPUT SC, V2437, P73
   Schechter SE, 2005, IEEE SECUR PRIV, V3, P40, DOI 10.1109/MSP.2005.30
   TULLOCK G, 1967, WESTERN ECON J, V5, P224
   Weimer W, 2010, COMMUN ACM, V53, P109, DOI 10.1145/1735223.1735249
   Weintraub GY, 2011, J ECON THEORY, V146, P1965, DOI 10.1016/j.jet.2011.05.007
   Weintraub GY, 2008, ECONOMETRICA, V76, P1375, DOI 10.3982/ECTA6158
   Wright CS, 2011, LECT NOTES COMPUT SC, V6694, P198, DOI 10.1007/978-3-642-21323-6_25
NR 56
TC 4
Z9 4
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2020
VL 46
IS 1
BP 51
EP 70
DI 10.1109/TSE.2018.2842188
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA KE2MI
UT WOS:000508392800004
DA 2024-07-18
ER

PT J
AU Ramírez, A
   Romero, JR
   Simons, CL
AF Ramirez, Aurora
   Raul Romero, Jose
   Simons, Christopher L.
TI A Systematic Review of Interaction in Search-Based Software Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Search-based software engineering; interaction; systematic literature
   review; optimization
ID ANT COLONY OPTIMIZATION; EVOLUTIONARY ALGORITHMS; AUTOMATION BIAS;
   CHALLENGES; DESIGN; MISUSE
AB Search-Based Software Engineering (SBSE) has been successfully applied to automate a wide range of software development activities. Nevertheless, in those software engineering problems where human evaluation and preference are crucial, such insights have proved difficult to characterize in search, and solutions might not look natural when that is the expectation. In an attempt to address this, an increasing number of researchers have reported the incorporation of the 'human-in-the-loop' during search and interactive SBSE has attracted significant attention recently. However, reported results are fragmented over different development phases, and a great variety of novel interactive approaches and algorithmic techniques have emerged. To better integrate these results, we have performed a systematic literature review of interactive SBSE. From a total of 669 papers, 26 primary studies were identified. To enable their analysis, we formulated a classification scheme focused on four crucial aspects of interactive search, i.e., the problem formulation, search technique, interactive approach, and the empirical framework. Our intention is that the classification scheme affords a methodological approach for interactive SBSE. Lastly, as well as providing a detailed cross analysis, we identify and discuss some open issues and potential future trends for the research community.
C1 [Ramirez, Aurora; Raul Romero, Jose] Univ Cordoba, Dept Comp Sci & Numer Anal, E-14071 Cordoba, Spain.
   [Simons, Christopher L.] Univ West England, Dept Comp Sci & Creat Technol, Bristol BS16 1QY, Avon, England.
C3 Universidad de Cordoba; University of West England
RP Romero, JR (corresponding author), Univ Cordoba, Dept Comp Sci & Numer Anal, E-14071 Cordoba, Spain.
EM aramirez@uco.es; jrromero@uco.es; chris.simons@uwe.ac.uk
RI Ramírez, Aurora/A-3635-2019; Romero, Jose Raul/I-5658-2015
OI Ramírez, Aurora/0000-0002-1916-6559; Romero, Jose
   Raul/0000-0002-4550-6385; Simons, Christopher/0000-0003-3142-4992
FU Spanish Ministry of Economy and Competitiveness [TIN2017-83445-P,
   TIN2015-71841-REDT]; Spanish Ministry of Education under the FPU program
   [FPU13/01466]; FEDER funds
FX This work is supported in part by the Spanish Ministry of Economy and
   Competitiveness, projects TIN2017-83445-P and TIN2015-71841-REDT, the
   Spanish Ministry of Education under the FPUprogram(FPU13/01466), and
   FEDER funds.
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   Alexander C., 1977, PATTERN LANGUAGE TOW
   Amal B, 2014, LECT NOTES COMPUT SC, V8636, P31
   [Anonymous], 2011, INT ACM SIGS S COMP
   [Anonymous], P 18 INT SOFTW PROD
   [Anonymous], 2014, P 2014 ANN C GEN EV
   [Anonymous], 2015, P GECCO COMP
   [Anonymous], 2014, Software engineering: a practitioner's approach
   Araújo AA, 2017, AUTOMAT SOFTW ENG, V24, P623, DOI 10.1007/s10515-016-0200-3
   Araújo AA, 2014, LECT NOTES COMPUT SC, V8636, P228
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Axelsson Stefan, 2009, Proceedings 21st International Conference on Software Engineering & Knowledge Engineering (SEKE 2009), P412
   Bahner JE, 2008, INT J HUM-COMPUT ST, V66, P688, DOI 10.1016/j.ijhcs.2008.06.001
   Bavota Gabriele, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P75, DOI 10.1007/978-3-642-33119-0_7
   Binkley D, 2015, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2015.7335396
   Birtolo C, 2009, WOR CONG NAT BIOL, P348
   Blum C, 2003, ACM COMPUT SURV, V35, P268, DOI 10.1145/937503.937505
   Boussaïd I, 2013, INFORM SCIENCES, V237, P82, DOI 10.1016/j.ins.2013.02.041
   Branke J., 2008, LCNS, V5252
   Bryant A., 2007, The sage handbook of grounded theory
   Bush BJ, 2011, IEEE T EVOLUT COMPUT, V15, P424, DOI 10.1109/TEVC.2010.2096539
   Byrne J, 2013, GENET PROGRAM EVOL M, V14, P287, DOI 10.1007/s10710-013-9189-6
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Dantas Altino, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P341, DOI 10.1007/978-3-319-22183-0_32
   Dawkins Richard, 1986, e blind watchmaker
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Eiben A. E., 2015, INTRO EVOLUTIONARY C
   Ferreira TD, 2016, APPL SOFT COMPUT, V49, P1283, DOI 10.1016/j.asoc.2016.06.027
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   Ghannem Adnane, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P96, DOI 10.1007/978-3-642-39742-4_9
   Guindon R., 1990, Human-Computer Interaction, V5, P305, DOI 10.1207/s15327051hci0502&3_6
   Harman M., 2012, 2012 Proceedings of the First International Workshop on Realizing Artificial Intelligence Synergies in Software Engineering (RAISE 2012), P1, DOI 10.1109/RAISE.2012.6227961
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M., 2014, P 6 INT S SEARCH BAS, DOI [10.1007/978-3-319-09940-8, DOI 10.1007/978-3-319-09940-8]
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   HART S G, 1988, P139
   Hierons RM, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2897760
   Jackson M, 2008, AUTOMAT SOFTW ENG, V15, P275, DOI 10.1007/s10515-008-0034-8
   Jones G, 2016, DEVELOPING EXPRESSION IN BRASS PERFORMANCE AND TEACHING, P8
   Kitchenham B., 2016, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B., 2007, 2007001 EBSE
   Klein G, 2004, IEEE INTELL SYST, V19, P91, DOI 10.1109/MIS.2004.74
   Kosorukoff A, 2002, IEEE SYS MAN CYBERN, P3464
   Le Goues C, 2013, SOFTWARE QUAL J, V21, P421, DOI 10.1007/s11219-013-9208-0
   Li B, 2015, COMPUT VIS IMAGE UND, V131, P1, DOI 10.1016/j.cviu.2014.10.006
   Lin Y, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P535, DOI 10.1145/2950290.2950317
   Lyell David, 2016, J AM MED INFORM ASSN, V24
   Marculescu Bogdan, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P273, DOI 10.1007/978-3-642-33119-0_21
   Marculescu B, 2016, INFORM SOFTWARE TECH, V78, P66, DOI 10.1016/j.infsof.2016.05.009
   Marculescu B, 2015, APPL SOFT COMPUT, V29, P26, DOI 10.1016/j.asoc.2014.12.025
   Marculescu B, 2013, 2013 12TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2013), VOL 2, P102, DOI 10.1109/ICMLA.2013.113
   Marculescu B, 2013, ASIA PAC SOFWR ENG, P87, DOI 10.1109/APSEC.2013.120
   Mariani T, 2017, INFORM SOFTWARE TECH, V83, P14, DOI 10.1016/j.infsof.2016.11.009
   Meignan D, 2015, ACM T INTERACT INTEL, V5, DOI 10.1145/2808234
   Mkaouer M. W., 2014, P 29 ACM IEEE INT C, P331, DOI [DOI 10.1145/2642937.2642965, 10.1145/2642937.2642965. u r l, DOI 10.1145/2642937.2642965.URL]
   Mkaouer MW, 2016, EMPIR SOFTW ENG, V21, P2503, DOI 10.1007/s10664-015-9414-4
   Mkaouer MW, 2016, LECT NOTES COMPUT SC, V9962, P281, DOI 10.1007/978-3-319-47106-8_24
   Monmarche N., 1999, IEEE SMC'99 Conference Proceedings. 1999 IEEE International Conference on Systems, Man, and Cybernetics (Cat. No.99CH37028), P640, DOI 10.1109/ICSMC.1999.823287
   Monmarche N., 1999, P AE 1999, P99
   Myers MD, 1997, MIS QUART, V21, P241, DOI 10.2307/249422
   Neumann G., 2014, P COMPANION PUBLICAT P COMP PUBL ANN C GE, P1427
   Palma F., 2011, P 19 ACM SIGSOFT S 1, P48, DOI DOI 10.1145/2025113.2025124
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Parasuraman R, 1997, HUM FACTORS, V39, P230, DOI 10.1518/001872097778543886
   Parmee IC, 2001, LECT NOTES COMPUT SC, V1993, P52
   Piotrowski AP, 2017, INFORM SCIENCES, V384, P34, DOI 10.1016/j.ins.2016.12.028
   Pitangueira Antonio Mauricio, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P188, DOI 10.1007/978-3-642-39742-4_15
   Pitangueira AM, 2015, J SYST SOFTWARE, V103, P267, DOI 10.1016/j.jss.2014.09.038
   Quiroz JC, 2007, IEEE C EVOL COMPUTAT, P1366, DOI 10.1109/CEC.2007.4424630
   Räihä O, 2010, COMPUT SCI REV, V4, P203, DOI 10.1016/j.cosrev.2010.06.001
   Ramírez A, 2016, EMPIR SOFTW ENG, V21, P2546, DOI 10.1007/s10664-015-9399-z
   Ramirez Aurora, 2015, P COMPANION PUBLICAT, P1085, DOI DOI 10.1145/2739482.2768461
   Russell S., 2009, ARTIF INTELL, P64
   Salleh N, 2011, IEEE T SOFTWARE ENG, V37, P509, DOI 10.1109/TSE.2010.59
   Santhanam GR, 2016, J SYST SOFTWARE, V111, P149, DOI 10.1016/j.jss.2015.09.001
   Sayyad AS, 2013, INT WORK REAL ARTIF, P21, DOI 10.1109/RAISE.2013.6615200
   Shackelford M, 2001, IEEE C EVOL COMPUTAT, P1131, DOI 10.1109/CEC.2001.934318
   Shackelford M.R.N., 2007, P 9 ANN C COMP GEN E, P2933, DOI [10.1145/1274000.1274100, DOI 10.1145/1274000.1274100]
   Simons Chris, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P47, DOI 10.1007/978-3-319-22183-0_4
   Simons CL, 2013, SOFT COMPUT, V17, P2147, DOI 10.1007/s00500-013-1039-1
   Simons C.L., 2008, P 10 ANN C GEN EV CO, P1785
   Simons CL, 2014, SWARM INTELL-US, V8, P139, DOI 10.1007/s11721-014-0094-2
   Simons CL, 2012, IEEE T SYST MAN CY C, V42, P1797, DOI 10.1109/TSMCC.2012.2225103
   Simons CL, 2010, IEEE T SOFTWARE ENG, V36, P798, DOI 10.1109/TSE.2010.34
   Simons CL, 2009, IEEE SYS MAN CYBERN, P2503, DOI 10.1109/ICSMC.2009.5346344
   Simons CL, 2008, IEEE C EVOL COMPUTAT, P869, DOI 10.1109/CEC.2008.4630898
   Sims K., 1994, Computer Graphics Proceedings. Annual Conference Series 1994. SIGGRAPH 94 Conference Proceedings, P15, DOI 10.1145/192161.192167
   Skitka LJ, 1999, INT J HUM-COMPUT ST, V51, P991, DOI 10.1006/ijhc.1999.0252
   Strauss A., 1990, BASICS QUALITATIVE R
   Takagi H, 2001, P IEEE, V89, P1275, DOI 10.1109/5.949485
   Tonella P., 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P57, DOI 10.1109/SSBSE.2010.17
   Tonella P, 2013, INFORM SOFTWARE TECH, V55, P173, DOI 10.1016/j.infsof.2012.07.003
   Troiano L., 2009, P LEARN INT OPTIMIZA, P14
   Troiano L, 2016, SPRINGERPLUS, V5, DOI 10.1186/s40064-016-2659-6
   Vathsavayi S, 2013, P EST ACAD SCI, V62, P16, DOI 10.3176/proc.2013.1.03
   Wang JS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P762, DOI 10.1109/ICSE.2013.6606622
   Ware M, 2001, INT J HUM-COMPUT ST, V55, P281, DOI 10.1006/ijhc.2001.0499
   Zhang D, 2003, SOFTWARE QUAL J, V11, P87, DOI 10.1023/A:1023760326768
   Zhou AM, 2011, SWARM EVOL COMPUT, V1, P32, DOI 10.1016/j.swevo.2011.03.001
NR 100
TC 28
Z9 29
U1 1
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2019
VL 45
IS 8
BP 760
EP 781
DI 10.1109/TSE.2018.2803055
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA IT1QZ
UT WOS:000482622600002
DA 2024-07-18
ER

PT J
AU Cai, YF
   Xiao, L
   Kazman, R
   Mo, R
   Feng, Q
AF Cai, Yuanfang
   Xiao, Lu
   Kazman, Rick
   Mo, Ran
   Feng, Qiong
TI Design Rule Spaces: A New Model for Representing and Analyzing Software
   Architecture
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software architecture; reverse-engineering; defect prediction; technical
   debt; code smells; bug localization
ID DEFECT-PREDICTION; TECHNICAL DEBT; FRAMEWORK; METRICS; FAULTS; CODE
AB In this paper, we propose an architecture model called Design Rule Space (DRSpace). We model the architecture of a software system as multiple overlapping DRSpaces, reflecting the fact that any complex software system must contain multiple aspects, features, patterns, etc. We show that this model provides new ways to analyze software quality. In particular, we introduce an Architecture Root detection algorithm that captures DRSpaces containing large numbers of a project's bug-prone files, which are called Architecture Roots (ArchRoots). After investigating ArchRoots calculated from 15 open source projects, the following observations become clear: from 35 to 91 percent of a project's most bug-prone files can be captured by just 5 ArchRoots, meaning that bug-prone files are likely to be architecturally connected. Furthermore, these ArchRoots tend to live in the system for significant periods of time, serving as the major source of bug-proneness and high maintainability costs. Moreover, each ArchRoot reveals multiple architectural flaws that propagate bugs among files and this will incur high maintenance costs over time. The implication of our study is that the quality, in terms of bug-proneness, of a large, complex software project cannot be fundamentally improved without first fixing its architectural flaws.
C1 [Cai, Yuanfang; Mo, Ran; Feng, Qiong] Drexel Univ, Dept Comp Sci, Philadelphia, PA 19104 USA.
   [Xiao, Lu] Stevens Inst Technol, Sch Syst & Enterprises, Hoboken, NJ 07030 USA.
   [Kazman, Rick] Univ Hawaii, Dept Informat Technol Management, Honolulu, HI 96822 USA.
C3 Drexel University; Stevens Institute of Technology; University of Hawaii
   System
RP Xiao, L (corresponding author), Stevens Inst Technol, Sch Syst & Enterprises, Hoboken, NJ 07030 USA.
EM yfcai@cs.drexel.edu; lxiao6@stevens.edu; kazman@hawaii.edu;
   rm859@drexel.edu; qf28@drexel.edu
RI xiao, lu/KRO-9302-2024
OI Kazman, Rick/0000-0003-0392-2783
FU Direct For Computer & Info Scie & Enginr [1514561] Funding Source:
   National Science Foundation; Division of Computing and Communication
   Foundations [1514561] Funding Source: National Science Foundation
CR Acher M., 2011, REVERSE ENG ARCHITEC, P220, DOI [10.1007/978-3-642-23798-0_25, DOI 10.1007/978-3-642-23798-0_25]
   Aldrich J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P187, DOI 10.1109/ICSE.2002.1007967
   ALLEN R, 1994, SIGPLAN NOTICES, V29, P35, DOI 10.1145/185087.185101
   Alshara Z, 2016, LECT NOTES COMPUT SC, V9839, P309, DOI 10.1007/978-3-319-48992-6_23
   Alves Nicolli S. R., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P1, DOI 10.1109/MTD.2014.9
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Baldwin C. Y., 2000, Design Rules: The Power of Modularity, V1
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bass Len, 2012, SEI S SOFTW
   Bavota G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559935
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Boussaidi G. E., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P345, DOI 10.1109/WCRE.2012.44
   Brown M, 2010, SMART SCIENCE FOR EXPLORATION AND MINING, VOL 1 AND 2, P47
   Bruch Marcel., 2006, P 4 OOPSLA WORKSHOP, P55, DOI [10.1145/1188835.1188847, DOI 10.1145/1188835.1188847]
   Cai Yuanfang, 2013, P 9 INT ACM SIGSOFT, P133
   Challagulla VUB, 2005, WORDS 2005: 10TH IEEE INTERNATIONAL WORKSHOP ON OBJECT-ORIENTED REAL-TIME DEPENDABLE, PROCEEDINGS, P263, DOI 10.1109/WORDS.2005.32
   Chowdhury G. G., 2010, Introduction to modern information retrieval
   Clements P. C., 1996, Proceedings of the 8th International Workshop on Software Specification and Design, P16, DOI 10.1109/IWSSD.1996.501143
   Corazza A, 2011, EUR CON SFTWR MTNCE, P35, DOI 10.1109/CSMR.2011.8
   Cunningham W., 1993, OOPS MESSENGER, V4, P29, DOI DOI 10.1145/157710.157715
   Curtis B., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P49, DOI 10.1109/MTD.2012.6226000
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Edwards S.H., 1994, SIGSOFT Software Engineering Notes, V19, P29
   Erdemir U, 2011, ASIA PAC SOFWR ENG, P315, DOI 10.1109/APSC.2011.33
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Falessi D., 2014, ACM SIGSOFT Software Engineering Notes, V39, P31, DOI [DOI 10.1145/2579281.2579311, 10.1145/2579281.2579311]
   Feng Q, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P221, DOI 10.1109/WICSA.2016.41
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Gao KH, 2011, SOFTWARE PRACT EXPER, V41, P579, DOI 10.1002/spe.1043
   Garcia J., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P292, DOI 10.1109/WICSA-ECSA.212.48
   Garcia J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P901, DOI 10.1109/ICSE.2013.6606639
   Garcia J, 2013, IEEE INT CONF AUTOM, P486, DOI 10.1109/ASE.2013.6693106
   Garlan D., 2003, Formal Modeling and Analysis of Software Architecture: Compo- nents, Connectors, and Events
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Guo Y., 2011, 2 WORKSH MAN TECHN D, P31, DOI [10.1145/1985362.1985370, DOI 10.1145/1985362.1985370]
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Huynh S., 2008, DUCS0804
   Huynh S., 2008, P STUD RES FOR 16 AC
   JAHANIAN F, 1994, IEEE T SOFTWARE ENG, V20, P933, DOI 10.1109/32.368134
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kazman R., 1999, Automated Software Engineering, V6, P107, DOI 10.1023/A:1008781513258
   Kazman R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P54, DOI 10.1109/ICSE.1999.840995
   Kazman R., 1994, P ICSE, V16, P81
   Kazman R, 2016, IEEE T SOFTWARE ENG, V42, P222, DOI 10.1109/TSE.2015.2465387
   Kazman R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P179, DOI 10.1109/ICSE.2015.146
   Kebir S., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P181, DOI 10.1109/WICSA-ECSA.212.26
   Kebir S., 2012, P ACM 5 INT C COMP S, P1, DOI [10.1145/2347583.2347584, DOI 10.1145/2347583.2347584]
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kobayashi K, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P462, DOI 10.1109/ICSM.2012.6405308
   Koru AG, 2005, IEEE SOFTWARE, V22, P23, DOI 10.1109/MS.2005.149
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Leszak M., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P428, DOI 10.1109/ICSE.2000.870433
   Letouzey JL, 2012, IEEE SOFTWARE, V29, P44, DOI 10.1109/MS.2012.129
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Lim E, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.130
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   Lu Xiao, 2017, 2017 IEEE/ACM 1st International Workshop on Establishing the Community-Wide Infrastructure for Architecture-Based Software Engineering (ECASE). Proceedings, P14, DOI 10.1109/ECASE.2017.2
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Mancoridis S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P50, DOI 10.1109/ICSM.1999.792498
   Maranzano JF, 2005, IEEE SOFTWARE, V22, P34, DOI 10.1109/MS.2005.28
   Marinescu R, 2012, IBM J RES DEV, V56, DOI 10.1147/JRD.2012.2204512
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Misra J., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P113, DOI 10.1109/WCRE.2012.21
   Mo R, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P51, DOI 10.1109/WICSA.2015.12
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Musco Vincenzo, 2016, 2016 IEEE/ACM 5th International Workshop on Realizing Artificial Intelligence Synergies in Software Engineering (RAISE). Proceedings, P8, DOI 10.1109/RAISE.2016.010
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Naseem R, 2011, EUR CON SFTWR MTNCE, P45, DOI 10.1109/CSMR.2011.9
   Newton P., 1992, Conference Proceedings. 1992 International Conference on Supercomputing, P167, DOI 10.1145/143369.143405
   Nord R. L., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P91, DOI 10.1109/WICSA-ECSA.212.17
   Nugroho A, 2011, P 2 WORKSH MAN TECHN, P1
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   PALSBERG J, 1995, ACM T PROGR LANG SYS, V17, P264, DOI 10.1145/201059.201066
   Peters L., 2014, TECHNICAL DEBT ULTIM, P8, DOI [10.1109/MTD.2014.7, DOI 10.1109/MTD.2014.7]
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Ratzinger J., 2008, Proceedings of the 2008 international working conference on Mining software repositories, P35, DOI [10.1145/1370750.1370759, DOI 10.1145/1370750.1370759]
   Schwanke R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P891, DOI 10.1109/ICSE.2013.6606638
   Seaman C., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P45, DOI 10.1109/MTD.2012.6225999
   Seaman C., 2015, SIGSOFT Softw. Eng. Notes, V40, P32, DOI DOI 10.1145/2735399.2735419
   Seaman C, 2011, ADV COMPUT, V82, P25, DOI 10.1016/B978-0-12-385512-1.00002-5
   Shatnawi A., 2016, J SYST SOFTW
   Shatnawi A, 2017, IEEE WORK CONF MIN S, P64, DOI 10.1109/MSR.2017.6
   SHAW M, 1995, IEEE T SOFTWARE ENG, V21, P314, DOI 10.1109/32.385970
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   Shull F., 2013, PERSPECTIVES FUTURE, P179, DOI DOI 10.1007/978-3-642-37395-4_12
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tekinerdogan B., 2011, DEFINING ARCHITECTUR, P26, DOI [10.1007/978-3-642-23798-0_3, DOI 10.1007/978-3-642-23798-0_3]
   Terry A., 1994, SIGSOFT Software Engineering Notes, V19, P68, DOI 10.1145/190679.190686
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   Tizzei LP, 2012, EUROMICRO CONF PROC, P85, DOI 10.1109/SEAA.2012.64
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Tzerpos V, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P258
   von Detten M, 2014, SOFTW SYST MODEL, V13, P1239, DOI 10.1007/s10270-013-0341-9
   Wang J, 2013, IEEE WORK CONF MIN S, P319, DOI 10.1109/MSR.2013.6624045
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Weinreich R., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P81, DOI 10.1109/WICSA-ECSA.212.16
   Wong S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P411, DOI 10.1145/1985793.1985850
   Wong S, 2009, IEEE INT CONF AUTOM, P197, DOI 10.1109/ASE.2009.53
   Xiao L, 2016, PROC INT CONF SOFTW, P488, DOI 10.1145/2884781.2884822
   Yuepu Guo, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P528, DOI 10.1109/ICSM.2011.6080824
   Zazworka N., 2013, Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering, DOI DOI 10.1145/2460999.2461005.ASSOCIATIONFORCOMPUTINGMACHINERY
   Zazworka N, 2014, SOFTWARE QUAL J, V22, P403, DOI 10.1007/s11219-013-9200-8
   Zhang F, 2017, IEEE T SOFTWARE ENG, V43, P476, DOI 10.1109/TSE.2016.2599161
NR 118
TC 17
Z9 18
U1 0
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2019
VL 45
IS 7
BP 657
EP 682
DI 10.1109/TSE.2018.2797899
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA IK7MZ
UT WOS:000476775600002
DA 2024-07-18
ER

PT J
AU Gao, RZ
   Wong, WE
AF Gao, Ruizhi
   Wong, W. Eric
TI MSeer-An Advanced Technique for Locating Multiple Bugs in Parallel
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software fault localization; parallel debugging; multiple bugs;
   clustering; distance metrics
ID FAULT LOCALIZATION; MUTATION
AB In practice, a program may contain multiple bugs. The simultaneous presence of these bugs may deteriorate the effectiveness of existing fault-localization techniques to locate program bugs. While it is acceptable to use all failed and successful tests to identify suspicious code for programs with exactly one bug, it is not appropriate to use the same approach for programs with multiple bugs because the due-to relationship between failed tests and underlying bugs cannot be easily identified. One solution is to generate fault-focused clusters by grouping failed tests caused by the same bug into the same clusters. We propose MSeer-an advanced fault localization technique for locating multiple bugs in parallel. Our major contributions include the use of (1) a revised Kendall tau distance to measure the distance between two failed tests, (2) an innovative approach to simultaneously estimate the number of clusters and assign initial medoids to these clusters, and (3) an improved K-medoids clustering algorithm to better identify the due-to relationship between failed tests and their corresponding bugs. Case studies on 840 multiple-bug versions of seven programs suggest that MSeer performs better in terms of effectiveness and efficiency than two other techniques for locating multiple bugs in parallel.
C1 [Gao, Ruizhi] Univ Texas Dallas, Richardson, TX 75080 USA.
   [Wong, W. Eric] Univ Texas Dallas, Adv Res Ctr Software Testing & Qual Assurance Com, Richardson, TX 75080 USA.
C3 University of Texas System; University of Texas Dallas; University of
   Texas System; University of Texas Dallas
RP Wong, WE (corresponding author), Univ Texas Dallas, Adv Res Ctr Software Testing & Qual Assurance Com, Richardson, TX 75080 USA.
EM gxr116020@utdallas.edu; ewong@utdallas.edu
CR Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), DOI DOI 10.1145/2025113.2025136
   [Anonymous], 2002, ADV NEURAL INF PROCE
   [Anonymous], 2010, ISSTA
   [Anonymous], 1974, Statistical Papers, DOI DOI 10.1007/BF02922904
   [Anonymous], 1963, Sankhya: The Indian Journal of Statistics, Series A
   [Anonymous], 1998, XSUDS US MAN
   Cardoso N., 2013, PROC 27 AAAI C ARTIF, P152
   Chen GX, 2002, STAT SINICA, V12, P241
   Chiu S. L., 1994, J INTELL FUZZY SYST, V2, P267, DOI [10.3233/IFS-1994-2306, DOI 10.3233/IFS-1994-2306]
   de Kleer J, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P733
   Debroy Vidroha, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P165, DOI 10.1109/ISSRE.2009.14
   Debroy V, 2013, SOFTWARE PRACT EXPER, V43, P989, DOI 10.1002/spe.1146
   Dickinson W, 2001, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2001.919107
   DiGiuseppe N., 2011, P 20 INT S SOFTW TES, P210, DOI DOI 10.1145/2001420.2001446
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Ester M., 1996, KDD 96, P226, DOI DOI 10.5555/3001460.3001507
   Gore R, 2012, PROC INT CONF SOFTW, P463, DOI 10.1109/ICSE.2012.6227169
   Hartigan J. A., 1979, Applied Statistics, V28, P100, DOI 10.2307/2346830
   Högerle W, 2014, PROC INT SYMP SOFTW, P133, DOI 10.1109/ISSRE.2014.29
   Hou J, 2016, IEEE T IMAGE PROCESS, V25, DOI 10.1109/TIP.2016.2559803
   Huang YQ, 2013, 2013 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P138, DOI 10.1109/ISSREW.2013.6688893
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   JONES JA, 2007, P INT S SOFTW TEST A, P16, DOI DOI 10.1145/1273463.1273468
   Kaufman L., 1990, Finding Groups in Data: An Introduction to Cluster Analysis
   Kaur M., 2013, International Journal of Advanced Research in Computer Science and Software Engineering, V3, P1454
   Kendall M. G., 1948, Rank correlation methods.
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Lamraoui S-M., 2016, J Inf Process, V24, P88
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Li XL, 2018, EMPIR SOFTW ENG, V23, P1, DOI 10.1007/s10664-016-9494-9
   Lin K. Y., 2011, J IMAGE GRAPHICS, V9, P155
   Liu C, 2006, IEEE T SOFTWARE ENG, V32, P831, DOI 10.1109/TSE.2006.105
   Liu C, 2008, IEEE T SOFTWARE ENG, V34, P826, DOI 10.1109/TSE.2008.66
   Lo D., 2014, P 29 ACM IEEE INT C, P127
   MacQueen J., 1967, P 5 BERK S MATH STAT, P281
   Mardia KV, 1979, MULTIVARIATE ANAL
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Ott R.L., 1993, An introduction to statistical methods and data analysis, V4th
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pearson S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1115, DOI 10.1145/2950290.2983967
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   Riesen K, 2009, IEEE T SYST MAN CY B, V39, P1472, DOI 10.1109/TSMCB.2009.2019264
   Sengupta D., 2010, P INT S BIOC FEB
   Sheng WG, 2006, J HEURISTICS, V12, P447, DOI 10.1007/s10732-006-7284-z
   Steimann F., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P121, DOI 10.1109/ISSRE.2012.28
   Steinley D, 2003, PSYCHOL METHODS, V8, P294, DOI 10.1037/1082-989X.8.3.294
   Sun SF, 2016, IEEE INT CONF SOFTW, P124, DOI 10.1109/ICST.2016.31
   Teevan Jaime, 2007, 30th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P757, DOI 10.1145/1277741.1277894
   VESSEY I, 1985, INT J MAN MACH STUD, V23, P459, DOI 10.1016/S0020-7373(85)80054-7
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Wong WE, 2012, IEEE T SYST MAN CY C, V42, P378, DOI 10.1109/TSMCC.2011.2118751
   Wong WE, 2012, IEEE T RELIAB, V61, P149, DOI 10.1109/TR.2011.2172031
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
   WONG WE, 1995, J SYST SOFTWARE, V31, P185, DOI 10.1016/0164-1212(94)00098-0
   WONG WE, 1995, SOFTWARE QUAL J, V4, P69, DOI 10.1007/BF00404650
   Xia X, 2016, PROC IEEE INT CONF S, P268, DOI 10.1109/ICSME.2016.67
   Xie XY, 2016, PROC INT CONF SOFTW, P808, DOI 10.1145/2884781.2884834
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Xu XF, 2011, INT J SOFTW ENG KNOW, V21, P803, DOI 10.1142/S0218194011005505
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   YAGER RR, 1994, IEEE T SYST MAN CYB, V24, P1279, DOI 10.1109/21.299710
   Yu ZX, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P924, DOI 10.1109/ICSE.2015.102
   Yule G. U., 1976, INTRO THEORY STAT
NR 69
TC 45
Z9 46
U1 1
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2019
VL 45
IS 3
BP 301
EP 318
DI 10.1109/TSE.2017.2776912
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HU4ME
UT WOS:000465248300005
DA 2024-07-18
ER

PT J
AU Luo, H
   Liu, X
   Chen, X
   Long, T
   Jiang, RH
AF Luo, Hang
   Liu, Xue
   Chen, Xi
   Long, Ting
   Jiang, Ronghua
TI Software Reliability Analysis Using Weakest Preconditions in Linear
   Assignment Programs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Weakest precondition; path extension; innermost connection; condition
   leap; node; cell-structure
ID INVARIANT FUNCTIONS
AB Weakest preconditions derived from triple axiomatic semantics have been widely used to prove the correctness of programs. They can also be applied to evaluate the reliability of software. However, deducing a weakest precondition, as well as determining its propagation path, encounters challenges such as unknown constraint conditions, symbol computation and means of representation. To address these challenges, in this paper, we utilize the disjunctive normal form of if-else branch structure to capture reasonable propagation paths of the weakest precondition. Meanwhile, by removing the sequential dependencies, we demonstrate how to get the weakest precondition of loop-structure by leveraging program function. Moreover, we extensively explore three modeling characteristics (i.e., path extension, innermost connection and condition leap) for deducing the weakest precondition of structured programs. Finally, taking the definition of program node and storage structure of weakest precondition as bases, we design a serial of modeling algorithms. Based on symbol computation and recursive call technology with Depth-First Search (DFS), our algorithms can not only be used to deduce the weakest precondition, but also to capture the propagate path of the weakest precondition. Experiments illustrate the efficacy and effectiveness of our proposed models and designed deductive algorithms.
C1 [Luo, Hang] Sichuan Univ, Sch Mfg Sci & Engn, Dept Measurement & Control Engn, Chengdu 610065, Peoples R China.
   [Liu, Xue; Chen, Xi] McGill Univ, Sch Comp Sci, Montreal, PQ H3A0E9, Canada.
   [Long, Ting] Chengdu Univ Informat Technol, Dept Control Engn, Shuangliu 610225, Peoples R China.
   [Jiang, Ronghua] Sichuan Univ, Sch Elect Engn & Informat, Chengdu 610065, Peoples R China.
C3 Sichuan University; McGill University; Chengdu University of Information
   Technology; Sichuan University
RP Luo, H (corresponding author), Sichuan Univ, Sch Mfg Sci & Engn, Dept Measurement & Control Engn, Chengdu 610065, Peoples R China.
EM luohang2002@163.com; xueliu@cs.mcgill.ca; xi.chen11@mail.mcgill.ca;
   leamonlong@hotmail.com; jiangrongh@scu.edu.cn
FU Research Foundation of Young Teachers in Sichuan University of P.R.
   China [2011SCU11120]
FX The authors wish to thank the associate editors and all anonymous
   referees whose comments and suggestions will greatly help the
   improvement of the presentation and the quality of this paper. This work
   was supported by a grant from Research Foundation of Young Teachers in
   Sichuan University of P.R. China (2011SCU11120).
CR [Anonymous], 1993, Program Verification: Fundamental Issues in Computer Science, DOI [10.1090/psapm/019/0235771, DOI 10.1090/PSAPM/019/0235771]
   [Anonymous], 1990, Predicate Calculus and Program Semantics
   [Anonymous], JPL
   Astefanoaei L, 2013, SCI COMPUT PROGRAM, V78, P1278, DOI 10.1016/j.scico.2012.05.009
   Barnett M., 2006, ACM SIGSOFT SOFTW EN, V31, P82
   Bradley AR, 2005, LECT NOTES COMPUT SC, V3576, P491
   Braude EJ, 2014, SCI COMPUT PROGRAM, V89, P223, DOI 10.1016/j.scico.2014.01.010
   Chandra S, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P363, DOI 10.1145/1542476.1542517
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   DIJKSTRA EW, 1975, COMMUN ACM, V18, P453, DOI [10.1145/360933.360975, 10.1145/390016.808417]
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   Flanagan C, 2001, ACM SIGPLAN NOTICES, V36, P193, DOI 10.1145/373243.360220
   Futschek G., 1989, PROGRAMMENTWICKLUNG
   Gulwani S, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P281, DOI 10.1145/1375581.1375616
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Liblit B., 2002, 021203 UCBCSD
   Manevich R., 2004, Software Engineering Notes, V29, P63, DOI 10.1145/1041685.1029907
   MeCarthy J., 1963, BASIS MATH THEORY CO, P33
   MILI A, 1985, ACTA INFORM, V22, P47, DOI 10.1007/BF00290145
   MILI A, 1983, ACTA INFORM, V20, P315, DOI 10.1007/BF00264277
   Mili A, 2009, SCI COMPUT PROGRAM, V74, P989, DOI 10.1016/j.scico.2009.09.009
   Mraihi Olfa, 2011, Theoretical Aspects of Computing - ICTAC 2011. Proceedings 8th International Colloquium, P173, DOI 10.1007/978-3-642-23283-1_13
   Mraihi O, 2013, SCI COMPUT PROGRAM, V78, P1212, DOI 10.1016/j.scico.2012.05.006
   Rustan K, 2005, INFORM PROCESS LETT, V93, P281, DOI 10.1016/j.ipl.2004.10.015
   STROM RE, 1993, IEEE T SOFTWARE ENG, V19, P478, DOI 10.1109/32.232013
   WANG J, 2006, P ISOLA 2006 PAPH CY, P355
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Yang XJ, 2010, COMPUT J, V53, P37, DOI 10.1093/comjnl/bxn075
   Ye D, 2014, PROC INT SYMP SOFTW, P88, DOI 10.1109/ISSRE.2014.20
   Yi XD, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P109
NR 30
TC 1
Z9 1
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2016
VL 42
IS 9
BP 866
EP 885
DI 10.1109/TSE.2016.2521379
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DX8UU
UT WOS:000384666100004
DA 2024-07-18
ER

PT J
AU Zhou, ZQ
   Xiang, SW
   Chen, TY
AF Zhou, Zhi Quan
   Xiang, Shaowen
   Chen, Tsong Yueh
TI Metamorphic Testing for Software Quality Assessment: A Study of Search
   Engines
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software quality; verification; validation; quality assessment; oracle
   problem; lack of system specification; metamorphic testing;
   user-oriented testing; search engine
AB Metamorphic testing is a testing technique that can be used to verify the functional correctness of software in the absence of an ideal oracle. This paper extends metamorphic testing into a user-oriented approach to software verification, validation, and quality assessment, and conducts large scale empirical studies with four major web search engines: Google, Bing, Chinese Bing, and Baidu. These search engines are very difficult to test and assess using conventional approaches owing to the lack of an objective and generally recognized oracle. The results are useful for both search engine developers and users, and demonstrate that our approach can effectively alleviate the oracle problem and challenges surrounding a lack of specifications when verifying, validating, and evaluating large and complex software systems.
C1 [Zhou, Zhi Quan; Xiang, Shaowen] Univ Wollongong, Sch Comp & Informat Technol, Wollongong, NSW 2522, Australia.
   [Chen, Tsong Yueh] Swinburne Univ Technol, Dept Comp Sci & Software Engn, Hawthorn, Vic 3122, Australia.
C3 University of Wollongong; Swinburne University of Technology
RP Zhou, ZQ; Xiang, SW (corresponding author), Univ Wollongong, Sch Comp & Informat Technol, Wollongong, NSW 2522, Australia.; Chen, TY (corresponding author), Swinburne Univ Technol, Dept Comp Sci & Software Engn, Hawthorn, Vic 3122, Australia.
EM zhiquan@uow.edu.au; sx934@uowmail.edu.au; tychen@swin.edu.au
OI Zhou, Zhi Quan/0000-0003-1769-9367; Chen, Tsong/0000-0003-3578-0994
FU Microsoft Research; Australian Research Council [LP100200208];
   Australian Research Council [LP100200208] Funding Source: Australian
   Research Council
FX The authors are grateful to Microsoft Research for supporting a pilot
   study of this work under an academic research collaboration scheme. They
   wish to thank Baidu Inc. and Google Inc. for discussions on their work.
   They would also like to thank Dave Towey, Antony Tang, and Lei Wang for
   their comments. This research was supported in part by a linkage grant
   of the Australian Research Council (Project ID: LP100200208).
CR Alasiry A., 2012, WISE, P483
   [Anonymous], 2011, P25010 IEEE
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P258, DOI 10.1109/TSE.2011.121
   Cao YX, 2013, INT CONF QUAL SOFTW, P153, DOI 10.1109/QSIC.2013.43
   Carmel D., 2010, Estimating the query difficulty for information retrieval
   Carsten P., 2014, REUTERS
   Chen T. Y., 2002, Software Engineering Notes, V27, P191, DOI 10.1145/566171.566202
   Chen T.Y., 2004, PROC 4 IBERO AM S SO, P569
   Chen T.Y., 1998, Metamorphic testing: a new approach for generating next test cases
   Chen TY, 2012, INT CONF QUAL SOFTW, P285, DOI 10.1109/QSIC.2012.21
   Chen TY, 2011, IEEE T SOFTWARE ENG, V37, P109, DOI 10.1109/TSE.2010.23
   Chen TY, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363107
   Chen TY, 2009, BMC BIOINFORMATICS, V10, DOI 10.1186/1471-2105-10-24
   Chen TY, 2003, INFORM SOFTWARE TECH, V45, P1, DOI 10.1016/S0950-5849(02)00129-5
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cohen J., 1992, Current Directions in Psychological Science, V1, P98, DOI [DOI 10.1111/1467-8721.EP10768783, 10.1111/1467-8721.ep10768783]
   Denyer Simon., 2014, Washington Post
   Field A., 2013, DISCOVERING STAT USI
   Freund Y, 2004, J MACH LEARN RES, V4, P933, DOI 10.1162/1532443041827916
   Ghezzi C, 2002, Fundamentals of Software Engineering
   Guo JF, 2009, PROCEEDINGS 32ND ANNUAL INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P267, DOI 10.1145/1571941.1571989
   Hierons RM, 2012, IEEE T SOFTWARE ENG, V38, P629, DOI 10.1109/TSE.2011.45
   IEEE Standards Association, 2011, 1502622011 ISOIEC IE
   Ieong Samuel, 2012, WSDM 2012, P413, DOI 10.1145/2124295.2124345
   Imielinski T, 2009, 2009 IEEE THIRD INTERNATIONAL CONFERENCE ON SEMANTIC COMPUTING (ICSC 2009), P184, DOI 10.1109/ICSC.2009.31
   ISO/IEC, 2011, ISO/IEC 25010:2011 Systems and software engineering-Systems and Software Quality Requirements and Evaluation (SQuaRE)-System and Software Quality models
   Ko AJ, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922658
   Kristof Nicholas, 2009, NY TIMES
   Kuo Fei-Ching, 2005, P WORKSH END US SOFT, P21
   Levine TR, 2002, HUM COMMUN RES, V28, P612, DOI 10.1093/hcr/28.4.612
   Lindvall M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P129, DOI 10.1109/ICSE.2015.348
   Liu H, 2014, IEEE T SOFTWARE ENG, V40, P4, DOI 10.1109/TSE.2013.46
   Lo D, 2011, IEEE T KNOWL DATA EN, V23, P282, DOI 10.1109/TKDE.2010.24
   Morasca S, 2010, IFIP ADV INF COMM TE, V319, P200
   Murphy C, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P189
   NetMarketshare, 2015, MARK SHAR REP DESKT
   Núñez A, 2015, ANN TELECOMMUN, V70, P127, DOI 10.1007/s12243-014-0442-7
   Pezze M., 2008, Software Testing and Analysis: Process, Principles and Techniques
   Qader M. A., 2013, P 16 INT C COMP INF, P426
   Quora, 2012, WILL ES DOM HURT MY
   Regehr J., 2014, FINDING COMPILER BUG
   Rossi G., 2008, Web Engineering. Modelling and Implementing Web Applications
   Segura S, 2015, SOFTW TEST VERIF REL, V25, P138, DOI 10.1002/stvr.1566
   Smarr J. R., 2003, THESIS STANFORD U ST
   Soboroff I., 2006, Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P276, DOI 10.1145/1148170.1148220
   Sohn A., 2009, COMMITTED COMPREHENS
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P216, DOI [10.1145/2666356.2594334, 10.1145/2594291.2594334]
   Wagner S., 2013, SOFTWARE PRODUCT QUA
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Xie XY, 2013, INFORM SOFTWARE TECH, V55, P866, DOI 10.1016/j.infsof.2012.08.008
   Zhang Jie, 2014, P 29 ACM IEEE INT C, P701, DOI DOI 10.1145/2642937.2642994
   Zhou Z. Q., 2007, TR200706 U HONG KONG
   Zhou ZQ, 2012, SOFTW TEST VERIF REL, V22, P221, DOI 10.1002/stvr.437
NR 53
TC 100
Z9 107
U1 2
U2 23
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2016
VL 42
IS 3
BP 264
EP 284
DI 10.1109/TSE.2015.2478001
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DH5MS
UT WOS:000372834200005
DA 2024-07-18
ER

PT J
AU Filieri, A
   Tamburrelli, G
   Ghezzi, C
AF Filieri, Antonio
   Tamburrelli, Giordano
   Ghezzi, Carlo
TI Supporting Self-Adaptation via Quantitative Verification and Sensitivity
   Analysis at Run Time
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Self-adaptive systems; software evolution; non-functional requirements;
   discrete-time Markov models; rewards; software reliability; costs;
   probabilistic model checking; models at runtime
ID RELIABILITY; COMPLEXITY; REDUCTION; MODELS
AB Modern software-intensive systems often interact with an environment whose behavior changes over time, often unpredictably. The occurrence of changes may jeopardize their ability to meet the desired requirements. It is therefore desirable to design software in a way that it can self-adapt to the occurrence of changes with limited, or even without, human intervention. Self-adaptation can be achieved by bringing software models and model checking to run time, to support perpetual automatic reasoning about changes. Once a change is detected, the system itself can predict if requirements violations may occur and enable appropriate counter-actions. However, existing mainstream model checking techniques and tools were not conceived for run-time usage; hence they hardly meet the constraints imposed by on-the-fly analysis in terms of execution time and memory usage. This paper addresses this issue and focuses on perpetual satisfaction of non-functional requirements, such as reliability or energy consumption. Its main contribution is the description of a mathematical framework for run-time efficient probabilistic model checking. Our approach statically generates a set of verification conditions that can be efficiently evaluated at run time as soon as changes occur. The proposed approach also supports sensitivity analysis, which enables reasoning about the effects of changes and can drive effective adaptation strategies.
C1 [Filieri, Antonio] Univ Stuttgart, Reliable Software Syst Grp, Inst Software Technol, D-70174 Stuttgart, Germany.
   [Tamburrelli, Giordano] Vrije Univ Amsterdam, Amsterdam, Netherlands.
   [Ghezzi, Carlo] Politecn Milan, Dipartimento Elettr Informaz & Bioingn, I-20133 Milan, Italy.
C3 University of Stuttgart; Vrije Universiteit Amsterdam; Polytechnic
   University of Milan
RP Filieri, A (corresponding author), Univ Stuttgart, Reliable Software Syst Grp, Inst Software Technol, D-70174 Stuttgart, Germany.; Tamburrelli, G (corresponding author), Vrije Univ Amsterdam, Amsterdam, Netherlands.; Ghezzi, C (corresponding author), Politecn Milan, Dipartimento Elettr Informaz & Bioingn, I-20133 Milan, Italy.
EM antonio.filieri@informatik.uni-stuttgart.de; g.tamburrelli@vu.nl;
   carlo.ghezzi@polimi.it
OI Filieri, Antonio/0000-0001-9646-646X
FU European Commission, Programme IDEAS-ERC [227977-SMScom,
   302648-Run-More]
FX This research has been funded by the European Commission, Programme
   IDEAS-ERC, Project 227977-SMScom and Programme FP7-PEOPLE-2011-IEF,
   Project 302648-Run-More. Antonio Filieri is the corresponding author.
CR ALTHOEN SC, 1987, AM MATH MON, V94, P130, DOI 10.2307/2322413
   Andova S., 2004, Formal Modeling and Analysis of Timed Systems. First International Workshop, FORMATS 2003. Revised Papers. (Lecture Notes in Comput. Sci. Vol.2791), P88
   André É, 2009, ELECTRON PROC THEOR, P44, DOI 10.4204/EPTCS.10.4
   [Anonymous], 2002, Ph.D. Thesis
   [Anonymous], 1993, Prentice Hall international series in computer science
   [Anonymous], 2003, PATTERNS SKELETONS P
   [Anonymous], 1996, J HOPKINS STUDIES MA
   [Anonymous], 1992, Mathematical Analysis
   [Anonymous], 2011, LONDON
   [Anonymous], 1999, SOFTWARE RELIABILITY
   Aziz A, 1995, LECT NOTES COMPUT SC, V939, P155
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Baier C, 2006, ELECTRON NOTES THEOR, V153, P97, DOI 10.1016/j.entcs.2005.10.034
   Bianculli D, 2014, LECT NOTES COMPUT SC, V8802, P41, DOI 10.1007/978-3-662-45234-9_4
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   BOJANCZYK A, 1984, SIAM J NUMER ANAL, V21, P591, DOI 10.1137/0721041
   Calinescu R, 2012, COMMUN ACM, V55, P69, DOI 10.1145/2330667.2330686
   Calinescu R, 2011, IEEE T SOFTWARE ENG, V37, P387, DOI 10.1109/TSE.2010.92
   Calinescu R, 2009, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.2009.5070512
   Chen TL, 2013, 2013 INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE), P85, DOI 10.1109/TASE.2013.20
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   CHEUNG RC, 1980, IEEE T SOFTWARE ENG, V6, P118, DOI 10.1109/TSE.1980.234477
   Ciesinski F, 2008, INT CONF QUANT EVAL, P45, DOI 10.1109/QEST.2008.45
   Conway CL, 2005, LECT NOTES COMPUT SC, V3576, P449
   Cortellessa V, 2007, LECT NOTES COMPUT SC, V4608, P140
   COURCOUBETIS C, 1995, J ASSOC COMPUT MACH, V42, P857, DOI 10.1145/210332.210339
   Davis T., 2006, FUNDAMENTALS ALGORIT
   Daws C, 2005, LECT NOTES COMPUT SC, V3407, P280
   de Lemos R., 2013, Lecture Notes in Computer Science, V7475, P1, DOI DOI 10.1007/978-3-642-35813-5_1
   Epifani I, 2009, PROC INT CONF SOFTW, P111, DOI 10.1109/ICSE.2009.5070513
   Ferrari F., 2011, Proceedings 2011 10th International Conference on Information Processing in Sensor Networks (IPSN 2010), P73
   Ferrari F., 2012, P 10 ACM C EMB NETW, DOI DOI 10.1145/2426656.2426658
   Filieri A., 2012, 2012 Proceedings of First International Workshop on Formal Methods in Software Engineering: Rigorous and Agile Approaches (FormSERA 2012), P2, DOI 10.1109/FormSERA.2012.6229785
   Filieri A., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P43, DOI 10.1109/SEAMS.2012.6224390
   Filieri A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P283, DOI 10.1109/ASE.2011.6100064
   Filieri A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P299, DOI 10.1145/2568225.2568272
   Filieri A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P200, DOI 10.1109/ICSE.2015.41
   Filieri A, 2012, FORM ASP COMPUT, V24, P163, DOI 10.1007/s00165-011-0207-2
   Filieri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P341, DOI 10.1145/1985793.1985840
   Filieri A, 2010, LECT NOTES COMPUT SC, V6092, P1, DOI 10.1007/978-3-642-13238-4_1
   Forejt V., 2013, LNCS, V7687, P314, DOI [10.1007/978-3-642-35632-2_30, DOI 10.1007/978-3-642-35632-2_30]
   Ghezzi C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P277, DOI 10.1145/2568225.2568234
   Ghezzi C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P33, DOI 10.1109/ICSE.2013.6606549
   Ghezzi C, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P69, DOI 10.1109/RE.2009.34
   Ghezzi C, 2009, LECT NOTES COMPUT SC, V5581, P70, DOI 10.1007/978-3-642-02351-4_5
   Gokhale SS, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P64, DOI 10.1109/ISSRE.2002.1173214
   Goseva-Popstojanova K, 2001, PERFORM EVALUATION, V45, P179, DOI 10.1016/S0166-5316(01)00034-7
   Goseva-Popstojanova K, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P43, DOI 10.1109/ISSRE.2005.25
   Grunske L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P31, DOI 10.1145/1368088.1368094
   Hahn Ernst Moritz, 2011, International Journal on Software Tools for Technology Transfer, V13, P3, DOI 10.1007/s10009-010-0146-x
   Hahn EM, 2011, LECT NOTES COMPUT SC, V6617, P146, DOI 10.1007/978-3-642-20398-5_12
   Hahn EM, 2010, LECT NOTES COMPUT SC, V6174, P660, DOI 10.1007/978-3-642-14295-6_56
   Hahn EM, 2009, LECT NOTES COMPUT SC, V5578, P88
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Henzinger TA, 2003, LECT NOTES COMPUT SC, V2772, P332
   Hinton A, 2006, LECT NOTES COMPUT SC, V3920, P441
   Hopcroft John E., 2007, INTRO AUTOMATA THEOR, V3rd
   Howard R. A., 2012, Dynamic Probabilistic Systems: Markov Models, V1
   Immonen A, 2008, SOFTW SYST MODEL, V7, P49, DOI 10.1007/s10270-006-0040-x
   Jansen DN, 2008, LECT NOTES COMPUT SC, V4899, P69
   Katoen JP, 2007, LECT NOTES COMPUT SC, V4424, P87
   Katoen JP, 2005, INT CONF QUANT EVAL, P243, DOI 10.1109/QEST.2005.2
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Koziolek Heiko, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P279, DOI 10.1109/ISSRE.2010.15
   Krishnamurthi S, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1217295.1217296
   Kulkarni V.G.., 2011, Introduction to Modeling and Analysis of Stochastic Systems
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Kwiatkowska M, 2007, LECT NOTES COMPUT SC, V4486, P220
   Kwiatkowska M, 2006, LECT NOTES COMPUT SC, V4144, P234, DOI 10.1007/11817963_23
   Kwiatkowska M, 2011, I C DEPEND SYS NETWO, P359, DOI 10.1109/DSN.2011.5958249
   Lauterburg S, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P291, DOI 10.1145/1368088.1368128
   Lyu M.R., 1996, Handbook of Software Reliability Engineering, P71
   Meedeniya Indika, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P229, DOI 10.1109/ISSRE.2010.19
   Quarteroni A, 2007, NUMERICAL MATH, V37
   Ross S. M., 1996, Stochastic processes, V2nd
   Saad Y, 2003, ITERATIVE METHODS SP, DOI DOI 10.1137/1.9780898718003
   Sokolsky O. V., 1994, Computer Aided Verification. 6th International Conference, CAV '94. Proceedings, P351
   Su GX, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P311, DOI 10.1145/2568225.2568256
   Tang CM, 2004, WIRELESS SENSOR NETWORKS, P207
   Taylor H.M., 1994, INTRO STOCHASTIC MOD
   Wang WL, 2006, J SYST SOFTWARE, V79, P132, DOI 10.1016/j.jss.2005.09.004
   Yang GW, 2009, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSM.2009.5306334
   Zimmerling M, 2013, I S MOD ANAL SIM COM, P546, DOI 10.1109/MASCOTS.2013.76
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 91
TC 72
Z9 76
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2016
VL 42
IS 1
BP 75
EP 99
DI 10.1109/TSE.2015.2421318
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DD5UC
UT WOS:000369989000005
DA 2024-07-18
ER

PT J
AU Wnuk, K
   Gorschek, T
   Callele, D
   Karlsson, EA
   Ahlin, E
   Regnell, B
AF Wnuk, Krzysztof
   Gorschek, Tony
   Callele, David
   Karlsson, Even-Andre
   Ahlin, Eskil
   Regnell, Bjoern
TI Supporting Scope Tracking and Visualization for Very Large-Scale
   Requirements Engineering-Utilizing FSC+, Decision Patterns, and Atomic
   Decision Visualizations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements/specifications; initiation and scope definition; management
ID MANAGEMENT; ANALYTICS; ART
AB Deciding the optimal project scope that fulfills the needs of the most important stakeholders is challenging due to a plethora of aspects that may impact decisions. Large companies that operate in rapidly changing environments experience frequently changing customer needs which force decision makers to continuously adjust the scope of their projects. Change intensity is further fueled by fierce market competition and hard time-to-market deadlines. Staying in control of the changes in thousands of features becomes a major issue as information overload hinders decision makers from rapidly extracting relevant information. This paper presents a visual technique, called Feature Survival Charts+ (FSC+), designed to give a quick and effective overview of the requirements scoping process for Very Large-Scale Requirements Engineering (VLSRE). FSC+ were applied at a large company with thousands of features in the database and supported the transition from plan-driven to a more dynamic and change-tolerant release scope management process. FSC+ provides multiple views, filtering, zooming, state-change intensity views, and support for variable time spans. Moreover, this paper introduces five decision archetypes deduced from the dataset and subsequently analyzed and the atomic decision visualization that shows the frequency of various decisions in the process. The capabilities and usefulness of FSC+, decision patterns (state changes that features undergo) and atomic decision visualizations are evaluated through interviews with practitioners who found utility in all techniques and indicated that their inherent flexibility was necessary to meet the varying needs of the stakeholders.
C1 [Wnuk, Krzysztof; Gorschek, Tony] Blekinge Inst Technol, Dept Software Engn, SERL, SE-37179 Karlskrona, Sweden.
   [Wnuk, Krzysztof] Lund Univ, MAPCI Mobile & Pervas Comp Inst, S-22100 Lund, Sweden.
   [Callele, David] Univ Saskatchewan, Dept Comp Sci, Saskatoon, SK S7N 0W0, Canada.
   [Ahlin, Eskil] Sony Mobile Commun, Lund, Sweden.
   [Regnell, Bjoern] Lund Univ, Dept Comp Sci, Box 118, S-22100 Lund, Sweden.
C3 Blekinge Institute Technology; Lund University; University of
   Saskatchewan; Sony Corporation; Lund University
RP Wnuk, K; Gorschek, T (corresponding author), Blekinge Inst Technol, Dept Software Engn, SERL, SE-37179 Karlskrona, Sweden.; Wnuk, K (corresponding author), Lund Univ, MAPCI Mobile & Pervas Comp Inst, S-22100 Lund, Sweden.; Callele, D (corresponding author), Univ Saskatchewan, Dept Comp Sci, Saskatoon, SK S7N 0W0, Canada.; Karlsson, EA (corresponding author), Sony Mobile Commun, Lund, Sweden.; Ahlin, E; Regnell, B (corresponding author), Lund Univ, Dept Comp Sci, Box 118, S-22100 Lund, Sweden.
EM krzysztof.wnuk@bth.se; tony.gorschek@bth.se; callele@cs.usask.ca;
   even-andre.karlsson@addalot.se; Ahlin@sonymobile.com;
   bjorn.regnell@cs.lth.se
OI Regnell, Bjorn/0000-0002-9380-6120
FU IKNOWDM project from Knowledge Foundation in Sweden [20150033]; SCALARE
   ITEA2 project
FX This work was funded by the IKNOWDM project (reference number 20150033)
   from the Knowledge Foundation in Sweden and partly by the SCALARE ITEA2
   project.
CR Al-Emran Ahmed, 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P157, DOI 10.1109/RE.2010.28
   An NT, 2005, IEEE INT CONF FUZZY, P442
   [Anonymous], 2005, P 11 INT WORKSH REQ
   [Anonymous], T SOFTW ENG
   [Anonymous], 2004, XP Ser
   [Anonymous], P 16 INT WORK C REQ
   [Anonymous], 1996, CMUSEI96TR010
   [Anonymous], P 9 INT S INT COUNC
   [Anonymous], CMUSEI90TR021 DTIC
   [Anonymous], 2007, QUALITATIVE RES PRAC, DOI DOI 10.4135/9781848608191.D33
   [Anonymous], GUIDE PROJECT MANAGE
   [Anonymous], PRODUCT RELEASE PLAN
   [Anonymous], P 8 INT WORKSH REQ E
   Aurum A, 2003, INFORM SOFTWARE TECH, V45, P945, DOI 10.1016/S0950-5849(03)00096-X
   Austin M., 2006, Systems Engineering, V9, P129, DOI 10.1002/sys.20049
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   BENZUR H, 1981, ACTA PSYCHOL, V47, P89, DOI 10.1016/0001-6918(81)90001-9
   BERENBACH B, 2009, SOFTWARE SYSTEMS REQ
   Bjarnason E, 2012, INFORM SOFTWARE TECH, V54, P1107, DOI 10.1016/j.infsof.2012.04.006
   Boehm B., 2006, Systems Engineering, V9, P1, DOI 10.1002/sys.20044
   Carlshamre P., 2002, Requirements Engineering, V7, P139, DOI 10.1007/s007660200010
   Carlshamre P, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84
   Carter RA, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P94
   Checkland P., 1981, Systems thinking, systems practice, V10th ed
   Cooper R. G., 2011, WINNING NEW PRODUCTS
   Davis AM, 2003, COMPUTER, V36, P42, DOI 10.1109/MC.2003.1185216
   DeMarco T, 2003, IEEE SOFTWARE, V20, P99, DOI 10.1109/MS.2003.1231163
   Du GS, 2006, LECT NOTES COMPUT SC, V4034, P435
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ebert C, 1997, ANN SOFTW ENG, V3, P367, DOI 10.1023/A:1018933820619
   Eick SG, 2002, J COMPUT GRAPH STAT, V11, P22, DOI 10.1198/106186002317375604
   Freeman C., 1997, The economics of industrial innovation
   Fricker S, 2010, IEEE SOFTWARE, V27, P72, DOI 10.1109/MS.2010.44
   GARG PK, 1989, PROCEEDINGS OF THE 28TH IEEE CONFERENCE ON DECISION AND CONTROL, VOLS 1-3, P1314, DOI 10.1109/CDC.1989.70350
   Gorschek T, 2006, REQUIR ENG, V11, P79, DOI 10.1007/s00766-005-0020-7
   Gotel O.C., 2007, REQUIREMENTS ENG VIS, P11, DOI DOI 10.1109/REV.2007.4
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Hall T., 2002, IEE Proceedings-Software, V149, P153, DOI 10.1049/ip-sen:20020694
   Hanakawa N, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P214, DOI 10.1109/ASPEC.2007.36
   Heikkilä V, 2010, EUROMICRO CONF PROC, P289, DOI 10.1109/SEAA.2010.37
   Hogarth R. M., 1975, Utility, probability, and human decision making, P321
   Hood C., 2008, REQUIREMENTS MANAGEM
   Höst M, 2001, J SYST SOFTWARE, V59, P323, DOI 10.1016/S0164-1212(01)00072-3
   Iacovou C. L., 2004, IEEE Engineering Management Review, V32, P97, DOI 10.1109/EMR.2004.25141
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Karlsson L, 2006, LECT NOTES COMPUT SC, V4034, P19
   Kaur P., 2010, 2010 Proceedings of International Conference on Computational Intelligence and Software Engineering (CiSE 2010), DOI 10.1109/CISE.2010.5676859
   Keim D, 2008, LECT NOTES COMPUT SC, V4950, P154, DOI 10.1007/978-3-540-70956-5
   Khurum M, 2013, J SOFTW-EVOL PROC, V25, P711, DOI 10.1002/smr.1560
   Khurum M, 2011, J SOFTW MAINT EVOL-R, V23, P494, DOI 10.1002/smr.536
   Konrad S, 2008, INT REQUIR ENG CONF, P217, DOI 10.1109/RE.2008.31
   Kulk GP, 2008, SCI COMPUT PROGRAM, V72, P136, DOI 10.1016/j.scico.2008.04.003
   Laitinen M, 2000, COMMUN ACM, V43, P105, DOI 10.1145/348941.349012
   Lee Chang-Yang., 2003, EC INNOVATION NEW TE, V12, P385, DOI [DOI 10.1080/1043859022000003418, 10.1080/1043859022000003418]
   Lehtola L., 2006, Software Process Improvement and Practice, V11, P7, DOI 10.1002/spip.249
   Logue K, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P437, DOI 10.1109/ECBS.2008.58
   Maurice S, 2006, VALUE-BASED SOFTWARE ENGINEERING, P247, DOI 10.1007/3-540-29263-2_12
   Mingshu Li, 2006, 28th International Conference on Software Engineering Proceedings, P423
   Ngo-The A, 2005, ICCI 2005: FOURTH IEEE INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS - PROCEEDINGS, P301
   Ngo-The A, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P267
   Ngo-The A, 2004, PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS, P168, DOI 10.1109/COGINF.2004.1327472
   Ngo-The A, 2008, SOFT COMPUT, V12, P95, DOI [10.1007/S00500-007-0219-2, 10.1007/s00500-007-0219-2]
   Northrop L., 2006, ULTRALARGE SCALE SYS
   Oezbek C., 2010, P 3 INT WORKSHOP EME, P5
   Patton M. Q., 2002, QUALITATIVE RES EVAL, V3rd
   Petersen K, 2011, SOFTWARE PRACT EXPER, V41, P975, DOI 10.1002/spe.975
   Petersen K, 2010, J SYST SOFTWARE, V83, P1275, DOI 10.1016/j.jss.2010.02.005
   Pfahl Dietmar, 2007, Software Process: Improvement and Practice, V12, P475, DOI 10.1002/spip.336
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Reddivari S, 2014, REQUIR ENG, V19, P257, DOI 10.1007/s00766-013-0194-3
   Regnell B, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P287, DOI 10.1007/3-540-28244-0_13
   Regnell B, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P254
   Regnell B., 2011, 2011 5th International Workshop on Software Product Management (IWSPM 2011), P47, DOI 10.1109/IWSPM.2011.6046203
   Regnell B, 2008, IEEE SOFTWARE, V25, P42, DOI 10.1109/MS.2008.48
   Regnell B, 2008, LECT NOTES COMPUT SC, V5025, P123, DOI 10.1007/978-3-540-69062-7_11
   Robson C., 2002, Real world research
   Ruhe G, 2005, IEEE SOFTWARE, V22, P47, DOI 10.1109/MS.2005.164
   Ruhe G, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P262, DOI 10.1109/ISESE.2003.1237987
   Ruhe G., 2004, International Journal of Hybrid Intelligent Systems, V1, P99
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saliu M.O., 2007, P 6 JOINT M EUROPEAN, P105, DOI DOI 10.1145/1287624.1287641
   Saliu O, 2005, 29TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P14, DOI 10.1109/SEW.2005.42
   Savolainen J, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P478, DOI 10.1109/ASPEC.2007.67
   Schmid K, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P593, DOI 10.1109/ICSE.2002.1008004
   Schwaber K., 2002, Agile software development with scrum
   Siegmund J, 2014, EMPIR SOFTW ENG, V19, P1299, DOI 10.1007/s10664-013-9286-4
   Smirnov N.V., 1939, B LUNIVERSITE MOSCOU, V2, P3, DOI DOI 10.12691/AJSSM-2-1-2
   Strigini L, 1996, IEEE SOFTWARE, V13, P101, DOI 10.1109/52.476293
   Svahnberg M, 2010, INFORM SOFTWARE TECH, V52, P237, DOI 10.1016/j.infsof.2009.11.006
   Szoke A, 2011, LECT NOTES BUS INF P, V77, P27
   Taylor C. A., 2011, 2011 5th International Workshop on Software Product Management (IWSPM 2011), P3, DOI 10.1109/IWSPM.2011.6046206
   Tufte ER, 1990, Envisioning Information
   van den Akker M, 2008, INFORM SOFTWARE TECH, V50, P101, DOI 10.1016/j.infsof.2007.10.017
   van der Hoek A, 1997, LECT NOTES COMPUT SC, V1301, P159, DOI 10.1145/267896.267909
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Wieringa Roel, 2012, Design Science Research in Information Systems. Advances in Theory and Practice. Proceedings 7th International Conference, DESRIST 2012, P220, DOI 10.1007/978-3-642-29863-9_17
   Wieringa Roel, 2007, 5th International Workshop on Comparative Evaluation in Requirements Engineering (CERE 2007), P36, DOI 10.1109/CERE.2007.4
   Wieringa R, 2014, J SYST SOFTWARE, V95, P19, DOI 10.1016/j.jss.2013.11.1097
   Wnuk K, 2012, LECT NOTES BUS INF P, V114, P255
   Wnuk K, 2013, INFORM SOFTWARE TECH, V55, P921, DOI 10.1016/j.infsof.2012.12.001
   Wnuk K, 2011, LECT NOTES COMPUT SC, V6606, P54, DOI 10.1007/978-3-642-19858-8_6
   Wnuk K, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P89, DOI 10.1109/RE.2009.32
   Wnuk K, 2008, REV: 2008 REQUIREMENTS ENGINEERING VISUALIZATION, P41, DOI 10.1109/REV.2008.6
   Yin R.K., 2011, Qualitative research from start to finish
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
   Ziemer S, 2007, LECT NOTES COMPUT SC, V4764, P106
NR 107
TC 16
Z9 18
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2016
VL 42
IS 1
BP 47
EP 74
DI 10.1109/TSE.2015.2445347
PG 28
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DD5UC
UT WOS:000369989000004
DA 2024-07-18
ER

PT J
AU Zhu, H
   Bayley, I
AF Zhu, Hong
   Bayley, Ian
TI On the Composability of Design Patterns
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Design patterns; pattern composition; composibility; feature
   preservation; semantics preservation; soundness preservation; formal
   methods
ID SUPPORT
AB In real applications, design patterns are almost always to be found composed with each other. It is crucial that these compositions be validated. This paper examines the notion of validity, and develops a formal method for proving or disproving it, in a context where composition is performed with formally defined operators on formally specified patterns. In particular, for validity, we require that pattern compositions preserve the features, semantics and soundness of the composed patterns. The application of the theory is demonstrated by a formal analysis of overlap-based pattern compositions and a case study of a real pattern-oriented software design.
C1 [Zhu, Hong; Bayley, Ian] Oxford Brookes Univ, Oxford OX33 1HX, England.
C3 Oxford Brookes University
RP Zhu, H (corresponding author), Oxford Brookes Univ, Oxford OX33 1HX, England.
EM hzhu@brookes.ac.uk; ibayley@brookes.ac.uk
RI Zhu, Hong/B-3231-2011
OI Zhu, Hong/0000-0001-9393-5005
CR Alur D., 2003, Core J2EE patterns, best practices and design strategies, V2nd
   Ampatzoglou A, 2012, INFORM SOFTWARE TECH, V54, P331, DOI 10.1016/j.infsof.2011.10.006
   [Anonymous], 2005, SECURITY PATTERNS IN
   [Anonymous], 1996, PATTERN ORIENTED SOF
   Bayley I., 2008, TECH REP TR 08 01
   Bayley I, 2011, INT J ADV SOFTWARE, V4, P354
   Bayley I, 2008, INT CONF QUAL SOFTW, P27, DOI 10.1109/QSIC.2008.32
   Bayley I, 2007, SEFM 2007: FIFTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P25, DOI 10.1109/SEFM.2007.43
   Bayley I, 2010, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCES ON PERVASIVE PATTERNS AND APPLICATIONS (PATTERNS 2010), P1
   Bayley I, 2010, J SYST SOFTWARE, V83, P209, DOI 10.1016/j.jss.2009.09.039
   Blewitt Alex, 2005, 20 IEEE ACM INT AUT, P224
   Bottoni Paolo, 2010, Proceedings 2010 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2010), P235, DOI 10.1109/VLHCC.2010.40
   Bottoni P, 2010, INFORM SOFTWARE TECH, V52, P821, DOI 10.1016/j.infsof.2010.03.005
   Buschmann F., 2007, PATTERN ORIENTED SOF, V5
   Buschmann F., 2007, PATTERN ORIENTED SOF, V4
   Cacho N, 2014, J SYST SOFTWARE, V98, P117, DOI 10.1016/j.jss.2014.08.041
   Coad P., 1992, Communications of the ACM, V35, P152, DOI 10.1145/130994.131006
   DiPippo L., 2005, DESIGN PATTERNS FOR
   Dong J., 1999, PROC 4TH INT WORKSHO, P186
   Dong J, 2007, IEEE T SOFTWARE ENG, V33, P433, DOI 10.1109/TSE.2007.1012
   Dong J, 2011, COMPUT J, V54, P164, DOI 10.1093/comjnl/bxp125
   Dong J, 2010, INFORM SOFTWARE TECH, V52, P274, DOI 10.1016/j.infsof.2009.10.001
   Douglass B.P., 2002, REAL TIME DESIGN PAT
   Eden AH, 2013, FORM METHOD SYST DES, V43, P1, DOI 10.1007/s10703-012-0181-1
   Eden A.H., 2011, CODECHARTS ROADMAPS
   Eden A. H., 2001, PROC INT CONF MULTID, P21
   Fowler M., 2003, Patterns of Enterprise Application Architecture. A Martin Fowler signature book
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gasparis E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P945
   Grand M., 2002, Java Enterprise Design Patterns: Patterns in Java
   Grand M., 1999, PATTERNS IN JAVA, V2
   Grand M., 2002, PATTERNS IN JAVA A C, V1
   Hanmer R., 2007, PATTERNS FOR FAULT T
   Hohpe Gregor, 2004, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions
   Hong Zhu, 2010, Proceedings of the 2010 4th IEEE International Symposium on Theoretical Aspects of Software Engineering (TASE 2010), P95, DOI 10.1109/TASE.2010.11
   Hou DQ, 2006, IEEE T SOFTWARE ENG, V32, P404, DOI 10.1109/TSE.2006.60
   Hsueh NL, 2008, J SYST SOFTWARE, V81, P1430, DOI 10.1016/j.jss.2007.11.724
   Huston B, 2001, J SYST SOFTWARE, V58, P261, DOI 10.1016/S0164-1212(01)00043-7
   Jing Dong, 2000, Proceedings Seventh IEEE International Conference and Workshop on the Engineering of Computer Based Systems (ECBS 2000), P279, DOI 10.1109/ECBS.2000.839887
   Jing Dong, 2007, Proceedings of the 2007 International Conference on Software Engineering Research & Practice. SERP 2007, P621
   Khomh F, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P274
   Kim DK, 2008, SOFTWARE QUAL J, V16, P329, DOI 10.1007/s11219-008-9048-5
   Kim DK, 2006, IEEE INT C ENG COMP, P47
   Kim DK, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P1404
   Lano K, 1996, P 1 BCS FACS NO FORM, P11
   Lauder A., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P114, DOI 10.1007/BFb0054089
   Mapelsden D., 2002, PROCEEDING P 40 INT, P3
   McNatt WB, 2001, P INT COMP SOFTW APP, P574, DOI 10.1109/CMPSAC.2001.960670
   Mikkonen T, 1998, PROC INT CONF SOFTW, P115, DOI 10.1109/ICSE.1998.671108
   Mouratidou Maria, 2010, J. theor. appl. electron. commer. res., V5, P25, DOI 10.4067/S0718-18762010000100004
   Nicholson J, 2014, SCI COMPUT PROGRAM, V80, P211, DOI 10.1016/j.scico.2013.05.007
   Niere J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P338, DOI 10.1109/ICSE.2002.1007980
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P1134, DOI 10.1109/32.988711
   Riehle D, 1997, ACM SIGPLAN NOTICES, V32, P218, DOI 10.1145/263700.263739
   Shi N, 2006, IEEE INT CONF AUTOM, P123
   Smith JM, 2011, J VISUAL LANG COMPUT, V22, P355, DOI 10.1016/j.jvlc.2011.03.003
   Steel C., 2005, APPLIED J2EE SECURIT
   Taibi T, 2006, IEE P-SOFTW, V153, P127, DOI 10.1049/ip-sen:20050072
   Taibi T, 2003, INFORM SOFTWARE TECH, V45, P157, DOI 10.1016/S0950-5849(02)000195-7
   Taibi T., 2003, Journal of Object Technology, V2, P127
   Venners B., 2005, HOW TO USE DESIGN PA
   Vlissides J., 1998, C++ REP, P48
   VOELTER M, 2004, REMOTING PATTERNS
   Wendorff P, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P77, DOI 10.1109/CSMR.2001.914971
   Yacoub SherifM., 2001, UML 2001 UNIFIED MOD, P149, DOI DOI 10.1007/3-540-45441-1_12
   Zhu H., 2009, UML 2 SEMANTICS AND
   Zhu H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491517
   Zhu H, 2012, FRONT COMPUT SCI-CHI, V6, P40, DOI 10.1007/s11704-012-2902-4
   Zhu H, 2010, LECT NOTES COMPUT SC, V6447, P630, DOI 10.1007/978-3-642-16901-4_41
   Zhu H, 2009, P INT COMP SOFTW APP, P228, DOI 10.1109/COMPSAC.2009.37
NR 70
TC 12
Z9 13
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2015
VL 41
IS 11
BP 1138
EP 1152
DI 10.1109/TSE.2015.2445341
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CW5EM
UT WOS:000365018200005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Jhi, YC
   Jia, XQ
   Wang, XR
   Zhu, SC
   Liu, P
   Wu, DH
AF Jhi, Yoon-Chan
   Jia, Xiaoqi
   Wang, Xinran
   Zhu, Sencun
   Liu, Peng
   Wu, Dinghao
TI Program Characterization Using Runtime Values and Its Application to
   Software Plagiarism Detection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software plagiarism detection; dynamic code identification
ID CODE
AB Illegal code reuse has become a serious threat to the software community. Identifying similar or identical code fragments becomes much more challenging in code theft cases where plagiarizers can use various automated code transformation or obfuscation techniques to hide stolen code from being detected. Previous works in this field are largely limited in that (i) most of them cannot handle advanced obfuscation techniques, and (ii) the methods based on source code analysis are not practical since the source code of suspicious programs typically cannot be obtained until strong evidences have been collected. Based on the observation that some critical runtime values of a program are hard to be replaced or eliminated by semantics-preserving transformation techniques, we introduce a novel approach to dynamic characterization of executable programs. Leveraging such invariant values, our technique is resilient to various control and data obfuscation techniques. We show how the values can be extracted and refined to expose the critical values and how we can apply this runtime property to help solve problems in software plagiarism detection. We have implemented a prototype with a dynamic taint analyzer atop a generic processor emulator. Our value-based plagiarism detection method (VaPD) uses the longest common subsequence based similarity measuring algorithms to check whether two code fragments belong to the same lineage. We evaluate our proposed method through a set of real-world automated obfuscators. Our experimental results show that the value-based method successfully discriminates 34 plagiarisms obfuscated by SandMark, plagiarisms heavily obfuscated by KlassMaster, programs obfuscated by Thicket, and executables obfuscated by Loco/Diablo.
C1 [Jhi, Yoon-Chan] Samsung SDS R&D Ctr, Seoul, South Korea.
   [Jia, Xiaoqi] Chinese Acad Sci, State Key Lab Informat Secur, Inst Informat Engn, Beijing 100193, Peoples R China.
   [Wang, Xinran] Shape Secur, Mountain View, CA 94040 USA.
   [Zhu, Sencun] Penn State Univ, Dept Comp Sci & Engn, University Pk, PA 16802 USA.
   [Liu, Peng; Wu, Dinghao] Penn State Univ, Coll Informat Sci & Technol, University Pk, PA 16802 USA.
C3 Chinese Academy of Sciences; Institute of Information Engineering, CAS;
   Pennsylvania Commonwealth System of Higher Education (PCSHE);
   Pennsylvania State University; Pennsylvania State University -
   University Park; Pennsylvania Commonwealth System of Higher Education
   (PCSHE); Pennsylvania State University; Pennsylvania State University -
   University Park
RP Jia, XQ (corresponding author), Chinese Acad Sci, State Key Lab Informat Secur, Inst Informat Engn, 89-A Minzhuang Rd, Beijing 100193, Peoples R China.
EM yoonchan.jhi@samsung.com; jiaxiaoqi@iie.ac.cn; xinranwang@gmail.com;
   szhu@cse.psu.edu; pliu@ist.psu.edu; dwu@ist.psu.edu
RI Liu, Peng/A-4255-2013
FU US National Science Foundation (NSF) [CCF-1320605, NSF CNS-1223710, NSF
   CNS-0905131, NSF CNS-0916469]; AFOSR (MURI) [FA9550-07-1-0527]; ARO
   (MURI) [W911NF-09-1-0525, W911NF-13-1-0421]; AFRL [FA8750-08-C-0137];
   National Natural Science Foundation of China (NSFC) [61100228]; National
   High-tech R&D Program of China [2012AA013101]; Strategic Priority
   Research Program of the Chinese Academy of Sciences [XDA06030601,
   XDA06010701]; Division Of Computer and Network Systems; Direct For
   Computer & Info Scie & Enginr [1223710] Funding Source: National Science
   Foundation; Division of Computing and Communication Foundations; Direct
   For Computer & Info Scie & Enginr [1320605] Funding Source: National
   Science Foundation
FX The authors would like to thank Jonas Maebe of University of Ghent for
   his help in compiling and using Loco and Diablo; Semantic Designs, Inc.
   for donating C/C++ obfuscators. This work was supported by the US
   National Science Foundation (NSF) CCF-1320605, NSF CNS-1223710, NSF
   CNS-0905131, NSF CNS-0916469, AFOSR FA9550-07-1-0527 (MURI), ARO
   W911NF-09-1-0525 (MURI), ARO W911NF-13-1-0421 (MURI), and AFRL
   FA8750-08-C-0137. Xiaoqi Jia was supported by National Natural Science
   Foundation of China (NSFC) under Grant No. 61100228, the National
   High-tech R&D Program of China under Grant No. 2012AA013101, and the
   Strategic Priority Research Program of the Chinese Academy of Sciences
   under Grant Nos. XDA06030601 and XDA06010701. Xiaoqi Jia is the
   corresponding author.
CR Alzarooni K., 2012, Malware variant detection
   [Anonymous], 2012, INT C DETECTION INTR
   [Anonymous], INT S FUT SOFTW TECH
   [Anonymous], 2006, P 2006 ACM SIGPLAN S
   [Anonymous], 2005, NDSS
   [Anonymous], 2005, P 2005 ACM S APPL CO, DOI DOI 10.1145/1066677.1066753
   [Anonymous], 2012, P 2 ACM C DATA APPL, DOI DOI 10.1145/2133601.2133640
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Baxter ID, 2004, PROC INT CONF SOFTW, P625, DOI 10.1109/ICSE.2004.1317484
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bellard F, 2005, USENIX Association Proceedings of the FREENIX/Open Source Track, P41
   BERK E, JLEX LEXICAL ANAL GE
   Cavallaro L, 2008, LECT NOTES COMPUT SC, V5137, P143, DOI 10.1007/978-3-540-70542-0_8
   Chow S, 2002, LECT NOTES COMPUT SC, V2696, P1
   Chow S. T., 2005, U.S. Patent, Patent No. [6 842 862, 6842862]
   Collberg C., 2003, IEEE Security & Privacy, V1, P40, DOI 10.1109/MSECP.2003.1219058
   Collberg C., 1998, Conference Record of POPL '98: 25th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P184, DOI 10.1145/268946.268962
   Collberg C., 1997, 148 U AUCKL
   Crussell Jonathan, 2012, Computer Security - ESORICS 2012. Proceedings 17th European Symposium on Research in Computer Security, P37, DOI 10.1007/978-3-642-33167-1_3
   Drape S, 2007, 6TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE, PROCEEDINGS, P1019, DOI 10.1109/ICIS.2007.167
   Egele M, 2007, USENIX ASSOCIATION PROCEEDINGS OF THE 2007 USENIX ANNUAL TECHNICAL CONFERENCE, P233
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P321, DOI 10.1145/1368088.1368132
   Heqing Huang, 2013, Trust and Trustworthy Computing. 6th International Conference, TRUST 2013. Proceedings: LNCS 7904, P169, DOI 10.1007/978-3-642-38908-5_13
   Ji JH, 2007, ITICSE 2007: 12TH ANNUAL CONFERENCE ON INNOVATION & TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P73, DOI 10.1145/1269900.1268807
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jiang Lingxiao, 2007, P THE 6 JOINT M EURO, P55, DOI DOI 10.1145/1287624.1287634
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kanzaki Y, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P170, DOI 10.1109/CMPSAC.2003.1245338
   Kim YC, 2005, LECT NOTES COMPUT SC, V3483, P10
   Knuth D.E., 1998, ART COMPUTER PROGRAM, V3rd
   KONTOGIANNIS K, 1995, 3 WORKSH AI SOFTW EN
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Lim HI, 2009, INFORM SOFTWARE TECH, V51, P1338, DOI 10.1016/j.infsof.2009.04.011
   Linn C., 2003, P 10 ACM C COMP COMM, P290, DOI DOI 10.1145/948109.948149
   Liu Chao, 2006, Proc. 12th ACMSIGKDD Int'l Con. on Knowledge Discovery and Data Mining (KDD 06), P872, DOI DOI 10.1145/1150402.1150522
   Luo LN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P389, DOI 10.1145/2635868.2635900
   Mahmood Yasir, 2008, 2008 5th International Symposium on High Capacity Optical Networks and Enabling Technologies. (HONET 2008), P205, DOI 10.1109/HONET.2008.4810236
   MCCAMANT S., 2006, LARGE SINGLE COMPILA
   Myles G, 2004, LECT NOTES COMPUT SC, V3225, P404
   Potharaju R, 2012, LECT NOTES COMPUT SC, V7159, P106, DOI 10.1007/978-3-642-28166-2_11
   Prechelt L., 2000, UNIVERSAL COMPUT SCI
   Sæbjornsen A, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P117
   Schleimer Saul, 2003, P 2003 ACM SIGMOD IN, P76, DOI [10.1145/872757.872770, DOI 10.1145/872757.872770]
   SCHULER D., 2007, ASE 07, P274, DOI 10.1145/1321631.1321672
   Semantic Designs Inc., THICK
   Tamada H, 2004, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P569
   Tamada Haruaki, 2008, Proceedings of the IASTED International Conference on Software Engineering, as part of the 26th IASTED International Multi-Conference on Applied Informatics, P125
   Tamada H., 2007, NAISTISTR2007011
   Truong N., 2004, AUSTR C COMP ED, V30, P317
   Wang C., 2001, THESIS U VIRGINIA CH
   Wang XR, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P280
   WUU Y, 1991, SOFTWARE PRACT EXPER, V21, P739, DOI 10.1002/spe.4380210706
   Zelix Pty Lt, JAV OBF ZEL KLASSMAS
   Zhang F., 2012, Proceedings of the 2012 International Symposium on Software Testing and Analysis, ACM, P111
   Zhang F., 2014, P 2014 ACM C SEC PRI, P25, DOI DOI 10.1145/2627393.2627395
   Zhang FF, 2014, PROC INT SYMP SOFTW, P66, DOI 10.1109/ISSRE.2014.18
NR 56
TC 25
Z9 34
U1 0
U2 23
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2015
VL 41
IS 9
BP 925
EP 943
DI 10.1109/TSE.2015.2418777
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CR9TT
UT WOS:000361700500005
DA 2024-07-18
ER

PT J
AU Beschastnikh, I
   Brun, Y
   Abrahamson, J
   Ernst, MD
   Krishnamurthy, A
AF Beschastnikh, Ivan
   Brun, Yuriy
   Abrahamson, Jenny
   Ernst, Michael D.
   Krishnamurthy, Arvind
TI Using Declarative Specification to Improve the Understanding,
   Extensibility, and Comparison of Model-Inference Algorithms
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Model inference; API mining; specification mining; process mining;
   declarative specification; inference understanding; inference
   extensibility; inference comparison; InvariMint; kTails; synoptic
AB It is a staple development practice to log system behavior. Numerous powerful model-inference algorithms have been proposed to aid developers in log analysis and system understanding. Unfortunately, existing algorithms are typically declared procedurally, making them difficult to understand, extend, and compare. This paper presents InvariMint, an approach to specify model-inference algorithms declaratively. We applied the InvariMint declarative approach to two model-inference algorithms. The evaluation results illustrate that InvariMint (1) leads to new fundamental insights and better understanding of existing algorithms, (2) simplifies creation of new algorithms, including hybrids that combine or extend existing algorithms, and (3) makes it easy to compare and contrast previously published algorithms. InvariMint's declarative approach can outperform procedural implementations. For example, on a log of 50,000 events, InvariMint's declarative implementation of the kTails algorithm completes in 12 seconds, while a procedural implementation completes in 18 minutes. We also found that InvariMint's declarative version of the Synoptic algorithm can be over 170 times faster than the procedural implementation.
C1 [Beschastnikh, Ivan] Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1Z4, Canada.
   [Brun, Yuriy] Univ Massachusetts, Sch Comp Sci, Amherst, MA 01003 USA.
   [Abrahamson, Jenny] Facebook Inc, Seattle, WA 98101 USA.
   [Ernst, Michael D.; Krishnamurthy, Arvind] Univ Washington, Comp Sci & Engn, Seattle, WA 98195 USA.
C3 University of British Columbia; University of Massachusetts System;
   University of Massachusetts Amherst; Facebook Inc; University of
   Washington; University of Washington Seattle
RP Beschastnikh, I (corresponding author), Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1Z4, Canada.
EM bestchai@cs.ubc.ca; brun@cs.umass.edu; jennya@fb.com;
   mernst@cs.washington.edu; arvind@cs.washington.edu
OI Brun, Yuriy/0000-0003-3027-7986
FU NSERC; Google; Microsoft Research via a SEIF award; DARPA
   [FA8750-12-2-0107]; NSF [CNS-0963754, CCF-1016701]
FX We would like to acknowledge Joseph Devietti, who proposed an early
   version of the InvariMint idea in a conversation. InvariMint is
   supported by NSERC, Google, Microsoft Research via a SEIF award, DARPA
   grant FA8750-12-2-0107, and NSF grants CNS-0963754 and CCF-1016701.
CR Acharya Mithun, 2007, P 6 JOINT M EUROPEAN, P25, DOI [DOI 10.1145/1287624.1287630, 10.1145/1287624.1287630]
   ANGLUIN D, 1980, J COMPUT SYST SCI, V21, P46, DOI 10.1016/0022-0000(80)90041-0
   [Anonymous], 2014, Ph. D. Dissertation
   [Anonymous], 2010, P 26 IEEE INT C SOFT, DOI DOI 10.1109/ICSM.2010.5609576
   [Anonymous], P INT S FDN SOFTW EN
   ANTUNES CM, 2001, P WORKSH TEMP DAT MI
   Bertolino A, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/1595696.1595719
   BESCHASTNIKH I., 2011, P 19 ACM SIGSOFT S 1, P267, DOI DOI 10.1145/2025113.2025151
   Beschastnikh I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P468, DOI 10.1145/2568225.2568246
   Beschastnikh I, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P252, DOI 10.1109/ICSE.2013.6606571
   BIERMANN AW, 1972, IEEE T COMPUT, VC 21, P592, DOI 10.1109/TC.1972.5009015
   Bollig B, 2010, IEEE T SOFTWARE ENG, V36, P390, DOI 10.1109/TSE.2009.89
   Carrasco R. C., 1994, Grammatical Inference and Applications. Second International Colloquium, ICGI-94 Proceedings, P139
   Clarke EdmundM., 2000, Proceedings of the International Conference on Computer Aided Veri cation (CAV), P154, DOI 10.1007/1072216715
   Cook J. E., 1998, ACM Transactions on Software Engineering and Methodology, V7, P215, DOI 10.1145/287000.287001
   Ernst M.D., 2006, Proceedings of WS-MaTe-2006, International Workshop on Web Services-Modeling and Testing, P123
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Gabel M., 2008, SIGSOFT FSE, P339, DOI DOI 10.1145/1453101.1453150
   GOLD EM, 1967, INFORM CONTROL, V10, P447, DOI 10.1016/S0019-9958(67)91165-5
   Hangal S, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P291, DOI 10.1109/ICSE.2002.1007976
   Hatcliff J., 2001, CONCUR 2001 - Concurrency Theory. 12th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2154), P39
   Hopcroft J, 1971, STANCS71190 STANF U
   Krka I, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P178, DOI 10.1145/2635868.2635890
   Kumar S, 2012, PROC INT CONF SOFTW, P914, DOI 10.1109/ICSE.2012.6227128
   Lo D., 2006, SIGSOFT FSE, P265
   Lo D, 2006, WORK CONF REVERSE EN, P51
   Lo D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P345, DOI 10.1145/1595696.1595761
   Lo David., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, ASE '10, P387
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Mariani L., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P241, DOI 10.1109/ISSRE.2012.14
   Mariani L, 2007, IEEE SOFTWARE, V24, P76, DOI 10.1109/MS.2007.138
   Nguyen C.D., 2013, ESEC/SIGSOFT FSE'13, P136
   Ohmann T., 2014, P IEEE ACM INT C AUT, P19, DOI [10.1145/2642937.2642988, DOI 10.1145/2642937.2642988, 10.1145/2642937, DOI 10.1145/2642937]
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Raman A. V., 1997, P WORKSH AUT IND GRA
   Reiss SP, 2001, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2001.919096
   Vasudevan P, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P289, DOI 10.1109/SERA.2006.25
   Walkinshaw Neil, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P248, DOI 10.1109/ASE.2008.35
   Wenchao Li, 2011, 2011 9th IEEE/ACM International Conference on Formal Methods and Models for Codesign (MEMOCODE 2011), P43, DOI 10.1109/MEMCOD.2011.5970509
   Xu W., 2010, P WORKSH MAN SYST LO
   Ziadi T, 2011, 2011 16TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P107, DOI 10.1109/ICECCS.2011.18
NR 41
TC 37
Z9 40
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2015
VL 41
IS 4
BP 408
EP 428
DI 10.1109/TSE.2014.2369047
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CG2PC
UT WOS:000353115800004
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Lee, J
   Hsu, KH
AF Lee, Jonathan
   Hsu, Kuo-Hsun
TI GEA: A Goal-Driven Approach to Discovering Early Aspects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Early aspects; goals; goals interaction; fuzzy logic; use cases; goal
   cluster
ID DOMAIN MODELS; REQUIREMENTS; CONFLICTS
AB Aspect-oriented software development has become an important development and maintenance approach to software engineering across requirements, design and implementation phases. However, discovering early aspects from requirements for a better integration of crosscutting concerns into a target system is still not well addressed in the existing works. In this paper, we propose a Goal-driven Early Aspect approach (called GEA) to discovering early aspects by means of a clustering algorithm in which relationships among goals and use cases are utilized to explore similarity degrees of clustering goals, and total interaction degrees are devised to check the validity of the formation of each cluster. Introducing early aspects not only enhances the goal-driven requirements modeling to manage crosscutting concerns, but also provides modularity insights into the analysis and design of software development. Moreover, relationships among goals represented numerically are more informative to discover early aspects and more easily to be processed computationally than qualitative terms. The proposed approach is illustrated by using two problem domains: a meeting scheduler system and a course enrollment system. An experiment is also conducted to evaluate the benefits of the proposed approach with Mann-Whitney U-test to show that the difference between with GEA and without GEA is statistically significant.
C1 [Lee, Jonathan] Natl Taiwan Univ, Dept Comp Sci & Informat Engn, Taipei 10764, Taiwan.
   [Hsu, Kuo-Hsun] Natl Taichung Univ Educ, Dept Comp Sci, Taichung, Taiwan.
C3 National Taiwan University; National Taichung University of Education
RP Lee, J (corresponding author), Natl Taiwan Univ, Dept Comp Sci & Informat Engn, Taipei 10764, Taiwan.
EM jlee@csie.ntu.edu.tw; glenn@mail.ntcu.edu.tw
FU Ministry of Science and Technology (Taiwan) [NSC 100-2221-E-002-001-MY3]
FX This research was supported by Ministry of Science and Technology
   (Taiwan) under Grants NSC 100-2221-E-002-001-MY3.
CR [Anonymous], 2002, Aosd '02: proceedings of the 1st international conference on aspect-oriented software development
   Araújo J, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P58
   Araujo J., 2002, P WORKSH ASP OR MOD, V7
   Araujo J., 2005, COMP0012005 CARN MEL
   Baniassad E, 2006, IEEE SOFTWARE, V23, P61, DOI 10.1109/MS.2006.8
   Baniassad E., 2004, ASPECT REQUIREMENT E, P15
   Brito IS, 2007, LECT NOTES COMPUT SC, V4620, P144
   Carstoiu D., 2010, IJACT, V2, P42
   Chuan Duan, 2007, 2007 Early Aspects at ICSE: Workshop in Aspect-Oriented Requirements Engineering and Architecture Design, P1
   Constantine LarryL., 1999, SOFTWARE USE
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Feather M. S., 1997, Automated Software Engineering, V4, P419, DOI 10.1023/A:1008680612960
   Hsu K.-H., 2002, THESIS NAT CTR U TAO
   Kienzle J, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P87
   Kit LK, 2006, ACM SIGPLAN NOTICES, V41, P383, DOI 10.1145/1167515.1167506
   Lee J, 2002, INFORM SOFTWARE TECH, V44, P361, DOI 10.1016/S0950-5849(02)00021-6
   Lee J, 2003, INFORM SOFTWARE TECH, V45, P445, DOI 10.1016/S0950-5849(03)00015-6
   Lee J, 2001, INFORM SOFTWARE TECH, V43, P121, DOI 10.1016/S0950-5849(00)00144-0
   Lee J, 1998, IEEE T KNOWL DATA EN, V10, P551, DOI 10.1109/69.706056
   Lee J, 1999, IEEE SOFTWARE, V16, P92, DOI 10.1109/52.776956
   Lee J, 2012, ASIA PAC SOFWR ENG, P97, DOI 10.1109/APSEC.2012.64
   Lee WT, 2010, INT J INTELL SYST, V25, P878, DOI 10.1002/int.20443
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Miller SK, 2001, COMPUTER, V34, P18, DOI 10.1109/2.917532
   Moreira A, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P285, DOI 10.1109/RE.2005.46
   Moreira A, 2005, LECT NOTES COMPUT SC, V3520, P293
   Moreira A., 2002, SEKE 02 P 14 INT C S, V15 - 19, P167
   Mortensen M, 2012, IEEE T SOFTWARE ENG, V38, P118, DOI 10.1109/TSE.2010.109
   MYLOPOULOS J, 1992, IEEE T SOFTWARE ENG, V18, P483, DOI 10.1109/32.142871
   Noda N., 1999, Proceedings Sixth Asia Pacific Software Engineering Conference (ASPEC'99) (Cat. No.PR00509), P230, DOI 10.1109/APSEC.1999.809607
   POHL K, 1994, INFORM SYST, V19, P243, DOI 10.1016/0306-4379(94)90044-2
   Rashid A, 2004, NATION, V278, P4
   Rashid A., 2003, AOSD 2003 P 2 INT C, P11
   Rashid A, 2006, LECT NOTES COMPUT SC, V4199, P155
   Ribeiro RA, 2011, DECIS SUPPORT SYST, V51, P208, DOI 10.1016/j.dss.2010.12.009
   Rolland C, 1998, IEEE T SOFTWARE ENG, V24, P1055, DOI 10.1109/32.738339
   RUMBAUGH J, 1994, J OBJECT-ORIENT PROG, V7, P8
   Sampaio A, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P487, DOI 10.1109/RE.2005.24
   Sampaio Americo., 2005, P 20 IEEEACM INT C A, P352
   Satty T.L., 1980, ANAL HIERARCHY PROCE
   Shomrat M., 2002, P 1 INT C ASP OR SOF, P3
   Sillito J, 2004, LECT NOTES COMPUT SC, V3086, P244
   Sim SE, 2003, PROC INT CONF SOFTW, P74, DOI 10.1109/ICSE.2003.1201189
   Sousa G., 2004, P EARL ASP WORKSH AO, P93
   Steimann F, 2005, LECT NOTES COMPUT SC, V3713, P171, DOI 10.1007/11557432_13
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P908, DOI 10.1109/32.730542
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Viega J, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.895163
   Whittle J, 2004, IEE P-SOFTW, V151, P157, DOI 10.1049/ip-sen:20040921
   Yu YJ, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P38
NR 51
TC 5
Z9 6
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2014
VL 40
IS 6
BP 584
EP 602
DI 10.1109/TSE.2014.2322368
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AJ9KV
UT WOS:000338030200003
DA 2024-07-18
ER

PT J
AU Damas, C
   Lambeau, B
   van Lamsweerde, A
AF Damas, Christophe
   Lambeau, Bernard
   van Lamsweerde, Axel
TI Analyzing Critical Decision-Based Processes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Process modeling; process analysis; model verification; decision errors;
   safety-critical workflows; non-functional requirements; domain-specific
   languages; formal specification
ID MODEL-CHECKING; VERIFICATION; SPECIFICATIONS; INVARIANTS; DERIVATION
AB Decision-based processes are composed of tasks whose application may depend on explicit decisions relying on the state of the process environment. In specific domains such as healthcare, decision-based processes are often complex and critical in terms of timing and resources. The paper presents a variety of tool-supported techniques for analyzing models of such processes. The analyses allow a variety of errors to be detected early and incrementally on partial models, notably: inadequate decisions resulting from inaccurate or outdated information about the environment state; incomplete decisions; non-deterministic task selections; unreachable tasks along process paths; and violations of non-functional process requirements involving time, resources or costs. The proposed techniques are based on different instantiations of the same generic algorithm that propagates decorations iteratively through the process model. This algorithm in particular allows event-based models to be automatically decorated with state-based invariants. A formal language supporting both event-based and state-based specifications is introduced as a process modeling language to enable such analyses. This language mimics the informal flowcharts commonly used by process stakeholders. It extends High-Level Message Sequence Charts with guards on task-related and environment-related variables. The language provides constructs for specifying task compositions, task refinements, decision trees, multi-agent communication scenarios, and time and resource constraints. The proposed techniques are demonstrated on the incremental building and analysis of a complex model of a real protocol for cancer therapy.
C1 [Damas, Christophe; Lambeau, Bernard; van Lamsweerde, Axel] Catholic Univ Louvain, Dept Comp, Icteam Inst, B-1348 Louvain, Brabant Wallon, Belgium.
C3 Universite Catholique Louvain
RP Damas, C (corresponding author), Catholic Univ Louvain, Dept Comp, Icteam Inst, B-1348 Louvain, Brabant Wallon, Belgium.
EM christophe.damas@uclouvain.be; bernard.lambeau@uclouvain.be;
   axel.vanlamsweerde@uclouvain.be
FU Regional Government of Wallonia (GISELE) [616425]; PIPAS [1017087]
FX Warmest thanks are due to our medical colleagues Francois Roucoux, Yves
   Humblet and Pierre Scalliet, and to the medical staff at the
   Chemotherapy and Radiotherapy units of the UCL Saint-Luc University
   Hospital for their time and experience sharing. Thanks also to Baudouin
   Le Charlier for helping us clarify the relationship and difference
   between abstract interpretation and our approach. We are grateful to
   George Avrunin and the reviewers for useful comments and clarification
   questions on earlier versions of this paper. The layered organization of
   our evaluation in Section 9 arose from discussions with Emmanuel Letier.
   The work reported herein was partially supported by the Regional
   Government of Wallonia (GISELE project No. 616425 and PIPAS project No.
   1017087).
CR Alrajeh D, 2012, PROC INT CONF SOFTW, P705, DOI 10.1109/ICSE.2012.6227147
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   [Anonymous], P 28 INT C SOFTW ENG
   [Anonymous], P EUR CAR PATHW C JU
   [Anonymous], 5 ICSE WORKSH SOFTW
   [Anonymous], 2009, IEEE Data Engineering Bulletin
   [Anonymous], 2000, Proceedings of the Conference on the Future of Software Engineering, DOI [10.1145/336512.336546, DOI 10.1145/336512.336546]
   [Anonymous], THESIS U CATHOLIQUE
   [Anonymous], ASGAARDTR200522005 V
   [Anonymous], 1977, Flow Analysis of Computer Programs
   [Anonymous], MEDICATION ERRORS
   [Anonymous], QUALITY HEALTHCARE P
   [Anonymous], BUS PROC MOD NOT V1
   [Anonymous], UML 2 0 SUP SPEC
   [Anonymous], P ACM SIGSOFT S SOFT
   [Anonymous], CROSS QUAL CHASM
   [Anonymous], 2006, Proceedings of the 14th ACM SIGSOFT international symposium on Foundations of software engineering, SIGSOFT '06/FSE-14
   [Anonymous], LINKOPING ELECT ARTI
   [Anonymous], THESIS U CATHOLIQUE
   [Anonymous], MESS SEQ CHARTS
   Bandinelli S., 1994, SOFTWARE PROCESS MOD, P223
   Baresi L, 1997, J MED SYST, V21, P369, DOI 10.1023/A:1022872229481
   Báumler S, 2006, LECT NOTES COMPUT SC, V3925, P219
   Belardinelli F., 2012, Service-Oriented Computing, V7636. Lecture Notes in Computer Science, P17, DOI [DOI 10.1007/978-3-642-34321-6_2, 10.1007/978-3-642-34321-6_2]
   Berard B., 2001, Systems and Software Verification
   Beyer D, 2007, LECT NOTES COMPUT SC, V4590, P504
   Bjorner N, 1997, THEOR COMPUT SCI, V173, P49, DOI 10.1016/S0304-3975(96)00191-0
   Cervesato I, 2000, SEVENTH INTERNATIONAL WORKSHOP ON TEMPORAL REPRESENTATION AND REASONING - TIME 2000, PROCEEDINGS, P47, DOI 10.1109/TIME.2000.856584
   Chen B, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P623, DOI 10.1145/1368088.1368175
   Chen B, 2006, LECT NOTES COMPUT SC, V3966, P150
   Christov S, 2008, LECT NOTES COMPUT SC, V5002, P118
   Cimatti A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P359
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Cousot P, 1996, ACM COMPUT SURV, V28, P324, DOI 10.1145/234528.234740
   Cousot P, 2001, LECT NOTES COMPUT SC, V2000, P138
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Damas C, 2005, IEEE T SOFTWARE ENG, V31, P1056, DOI 10.1109/TSE.2005.138
   Damas C, 2009, PROC INT CONF SOFTW, P441, DOI 10.1109/ICSE.2009.5070543
   De Maria E, 2006, TIME 2006: THIRTEENTH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P87
   Dumas M, 2005, PROCESS-AWARE INFORMATION SYSTEMS: BRIDGING PEOPLE AND SOFTWARE THROUGH PROCESS TECHNOLOGY, P1, DOI 10.1002/0471741442
   Eshuis R, 2006, ACM T SOFTW ENG METH, V15, P1, DOI 10.1145/1125808.1125809
   Finkelstein A., 1994, Software process modelling and technology
   Fox J, 1998, ARTIF INTELL MED, V14, P157, DOI 10.1016/S0933-3657(98)00021-9
   Giannakopoulou D., 2003, Software Engineering Notes, V28, P257, DOI 10.1145/949952.940106
   Gonzalez P., 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P25, DOI 10.1109/ICWS.2012.31
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   Heitmeyer C. L., 1996, ACM Transactions on Software Engineering and Methodology, V5, P231, DOI 10.1145/234426.234431
   Henneman EA, 2007, TRANSFUS MED REV, V21, P49, DOI 10.1016/j.tmrv.2006.08.007
   Hull R, 2011, LECT NOTES COMPUT SC, V6551, P1, DOI 10.1007/978-3-642-19589-1_1
   Jeffords R., 1998, Software Engineering Notes, V23, P56, DOI 10.1145/291252.288218
   Jun GT, 2009, INT J QUAL HEALTH C, V21, P214, DOI 10.1093/intqhc/mzp016
   Kohn KT., 1999, To Err Is Human: Building a Safer Health System
   Kokash N, 2012, FORM ASP COMPUT, V24, P187, DOI 10.1007/s00165-011-0191-6
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Lerner BS, 2010, IEEE T SOFTWARE ENG, V36, P162, DOI 10.1109/TSE.2010.1
   Magee Jeff., 2006, CONCURRENCY STATE MO
   Miksch S., 1997, Proceedings of the 7th Workshop on Knowledge Engineering: Methods Languages (KEML-97), P9
   Milner R., 1989, Communication and concurrency
   Nielson Flemming, 2004, Principles of Program Analysis
   Park DYW, 1998, LECT NOTES COMPUT SC, V1486, P133, DOI 10.1007/BFb0055343
   Peleg M, 2003, J AM MED INFORM ASSN, V10, P52, DOI 10.1197/jamia.M1135
   Queille JP, 2008, LECT NOTES COMPUT SC, V5000, P216
   Rae A, 2005, RELIAB ENG SYST SAFE, V89, P48, DOI 10.1016/j.ress.2004.08.006
   Raunak MS, 2013, IEEE T SOFTWARE ENG, V39, P384, DOI 10.1109/TSE.2012.31
   Rozinat A, 2008, INFORM SYST, V33, P64, DOI 10.1016/j.is.2007.07.001
   Uchitel S, 2003, IEEE T SOFTWARE ENG, V29, P99, DOI 10.1109/TSE.2003.1178048
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   van der Aalst WMP, 1997, LECT NOTES COMPUT SC, V1248, P407
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P1089, DOI 10.1109/32.738341
   van Lamsweerde A, 2000, IEEE T SOFTWARE ENG, V26, P978, DOI 10.1109/32.879820
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P908, DOI 10.1109/32.730542
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   VANLAMSWEERDE A, 1979, ACTA INFORM, V12, P1, DOI 10.1007/BF00264015
   Walkinshaw N, 2013, EMPIR SOFTW ENG, V18, P791, DOI 10.1007/s10664-012-9210-3
   Whittle J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P314, DOI 10.1109/ICSE.2000.870422
   Wise A, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P155, DOI 10.1109/ASE.2000.873660
   Wong PYH, 2011, SCI COMPUT PROGRAM, V76, P942, DOI 10.1016/j.scico.2010.09.007
   Wong PYH, 2011, SCI COMPUT PROGRAM, V76, P633, DOI 10.1016/j.scico.2009.09.010
NR 79
TC 4
Z9 4
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2014
VL 40
IS 4
BP 338
EP 365
DI 10.1109/TSE.2014.2312954
PG 28
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AH3WD
UT WOS:000336056000002
DA 2024-07-18
ER

PT J
AU Stolee, KT
   Elbaum, S
AF Stolee, Kathryn T.
   Elbaum, Sebastian
TI Identification, Impact, and Refactoring of Smells in Pipe-Like Web
   Mashups
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE End-user software engineering; end-user programming; web mashups;
   refactoring; code smells; empirical studies
AB With the emergence of tools to support visual mashup creation, tens of thousands of users have started to access, manipulate, and compose data from web sources. We have observed, however, that mashups created by these users tend to suffer from deficiencies that propagate as mashups are reused, which happens frequently. To address these deficiencies, we would like to bring some of the benefits of software engineering techniques to the end users creating these programs. In this work, we focus on identifying code smells indicative of the deficiencies we observed in web mashups programmed in the popular Yahoo! Pipes environment. Through an empirical study, we explore the impact of those smells on the preferences of 61 users, and observe that a significant majority of users prefer mashups without smells. We then introduce refactorings targeting those smells. These refactorings reduce the complexity of the mashup programs, increase their abstraction, update broken data sources and dated components, and standardize their structures to fit the community development patterns. Our assessment of a sample of over 8,000 mashups shows that smells are present in 81 percent of them and that the proposed refactorings can reduce the number of smelly mashups to 16 percent, illustrating the potential of refactoring to support the thousands of end-users programming mashups. Further, we explore how the smells and refactorings can apply to other end-user programming domains to show the generalizability of our approach.
C1 [Stolee, Kathryn T.] Iowa State Univ, Dept Comp Sci, Ames, IA 50011 USA.
   [Stolee, Kathryn T.] Iowa State Univ, Dept Elect & Comp Engn, Ames, IA 50011 USA.
   [Elbaum, Sebastian] Univ Nebraska, Dept Comp Sci, Lincoln, NE 68588 USA.
C3 Iowa State University; Iowa State University; University of Nebraska
   System; University of Nebraska Lincoln
RP Stolee, KT (corresponding author), Iowa State Univ, Dept Comp Sci, 209 Atanasoff Hall, Ames, IA 50011 USA.
EM kstolee@iastate.edu; elbaum@cse.unl.edu
OI Stolee, Kathryn/0000-0003-0584-7094
FU US National Science Foundation (NSF) Graduate Research Fellowship CFDA
   [47.076]; NSF [0915526]; AFOSR [9550-10-1-0406]; Division of Computing
   and Communication Foundations; Direct For Computer & Info Scie & Enginr
   [0915526] Funding Source: National Science Foundation
FX This work was supported in part by US National Science Foundation (NSF)
   Graduate Research Fellowship CFDA#47.076, NSF Award #0915526, and AFOSR
   Award #9550-10-1-0406. Any opinions, findings, and conclusions or
   recommendations expressed in this material are those of the author(s)
   and do not necessarily reflect the views of the funding agencies. The
   authors would like to thank the EUSES consortium members for their
   feedback on previous versions of this work. A previous version of this
   work appeared in the International Conference on Software Engineering
   [1].
CR [Anonymous], 2010, AM MECH TURK COMM LI
   [Anonymous], 2009, P 4 INT C COMMUNITIE, DOI DOI 10.1145/1556460.1556489
   Badame S., 2012, P INT C SOFTW MAINT
   Balaban I, 2005, ACM SIGPLAN NOTICES, V40, P265, DOI 10.1145/1103845.1094832
   Baresi L, 2002, LECT NOTES COMPUT SC, V2505, P402
   Bozzon A, 2011, LECT NOTES COMPUT SC, V6585, P192
   Burnett M, 2003, PROC INT CONF SOFTW, P93, DOI 10.1109/ICSE.2003.1201191
   Cooper S., 2000, NE C J COMPUTING SMA, P107
   DANIEL F, 2012, INT C COMP WORLD WID, P493
   Dig D, 2009, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE.2009.5070539
   Elmeleegy Hazem, 2008, 2008 IEEE International Conference on Web Services (ICWS), P337, DOI 10.1109/ICWS.2008.128
   Ennals Robert., 2007, Proceedings of the 2007 ACM SIGMOD international conference on Management of data, P1116
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Grammel Lars., 2010, Proceedings of the 1stWorkshop onWeb 2.0 for Software Engineering, P24
   Greenshpan O., 2009, Proc. VLDB Endow, V2, P538
   Griswold W. G., 1993, ACM Transactions on Software Engineering and Methodology, V2, P228, DOI 10.1145/152388.152389
   Hermans F, 2012, PROC INT CONF SOFTW, P441, DOI 10.1109/ICSE.2012.6227171
   Jia Liu, 2006, 28th International Conference on Software Engineering Proceedings, P112
   Kegel H, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P431, DOI 10.1145/1368088.1368147
   Kiezun A, 2007, PROC INT CONF SOFTW, P437
   Kim M., 2012, P 20 ACM SIGSOFT INT
   Koesnandar Andhy., 2008, Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering, SIGSOFT '08/FSE-16, P124
   Kohler C., 2007, P INT WORKSH GRAPH T
   Kuttal Sandeep Kaur, 2011, End-User Development. Proceedings Third International Symposium, IS-EUD 2011, P25, DOI 10.1007/978-3-642-21530-8_4
   Leshed G, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P1719
   Mens T, 2005, J SOFTW MAINT EVOL-R, V17, P247, DOI 10.1002/smr.316
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mens T, 2007, SOFTW SYST MODEL, V6, P269, DOI 10.1007/s10270-006-0044-6
   Muhammad I., 2012, P 2012 ACM ANN C EXT, P1949
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Ouni A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P347, DOI 10.1109/ICSM.2012.6405292
   Riabov A., 2008, Proceeding of the 17th international con- ference on World Wide Web, P775
   Scaffidi C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P1, DOI 10.1145/1368088.1368090
   Simmen David E., 2008, P 2008 ACM SIGMOD IN, P1171, DOI DOI 10.1145/1376616.1376734
   Soi S, 2010, LECT NOTES COMPUT SC, V6385s, P384, DOI 10.1007/978-3-642-16985-4_34
   Stolee K. T., 2010, THESIS U NEBRASKA LI
   Stolee KT, 2011, INT SYMP EMP SOFTWAR, P147, DOI 10.1109/ESEM.2011.23
   Stolee KT, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P81, DOI 10.1145/1985793.1985805
   Stolee KT, 2011, SIGCSE 11: PROCEEDINGS OF THE 42ND ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P99
   Suny? G., 2001, LNCS, P134, DOI DOI 10.1007/3-540-45441-1_11
   Taentzer Gabriele., 2007, AGTIVE, P104
   Vakilian M, 2012, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2012.6227190
   Wong J., 2008, International Conference on Software Engineering, P35, DOI DOI 10.1145/1370847.1370855
   Wong J, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1435
NR 46
TC 17
Z9 22
U1 0
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2013
VL 39
IS 12
BP 1654
EP 1679
DI 10.1109/TSE.2013.42
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 260PO
UT WOS:000327607000003
DA 2024-07-18
ER

PT J
AU Tribastone, M
AF Tribastone, Mirco
TI A Fluid Model for Layered Queueing Networks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Modeling and prediction; Markov processes; PEPA; ordinary differential
   equations; queueing networks; mean value analysis
ID MEAN-VALUE ANALYSIS; TIME
AB Layered queueing networks are a useful tool for the performance modeling and prediction of software systems that exhibit complex characteristics such as multiple tiers of service, fork/join interactions, and asynchronous communication. These features generally result in nonproduct form behavior for which particularly efficient approximations based on mean value analysis (MVA) have been devised. This paper reconsiders the accuracy of such techniques by providing an interpretation of layered queueing networks as fluid models. Mediated by an automatic translation into a stochastic process algebra, PEPA, a network is associated with a set of ordinary differential equations (ODEs) whose size is insensitive to the population levels in the system under consideration. A substantial numerical assessment demonstrates that this approach significantly improves the quality of the approximation for typical performance indices such as utilization, throughput, and response time. Furthermore, backed by established theoretical results of asymptotic convergence, the error trend shows monotonic decrease with larger population sizes-a behavior which is found to be in sharp contrast with that of approximate mean value analysis, which instead tends to increase.
C1 Univ Munich, Dept Informat, D-80538 Munich, Germany.
C3 University of Munich
RP Tribastone, M (corresponding author), Univ Munich, Dept Informat, Oettingenstr 67, D-80538 Munich, Germany.
EM tribastone@pst.ifi.lmu.de
OI Tribastone, Mirco/0000-0002-6018-5989
CR [Anonymous], 2010, v7.10.0 (R2010a)
   Bard Y., 1979, Performance of Computer Systems, P51
   CHANDY KM, 1982, COMMUN ACM, V25, P126, DOI 10.1145/358396.358403
   Darling RWR, 2008, PROBAB SURV, V5, P37, DOI 10.1214/07-PS121
   Franks G, 2009, IEEE T SOFTWARE ENG, V35, P148, DOI 10.1109/TSE.2008.74
   Hairer E., 1996, SOLVING ORDINARY DIF, V2nd
   Harrison PG, 2003, THEOR COMPUT SCI, V290, P1947, DOI 10.1016/S0304-3975(02)00375-4
   Hayden RA, 2012, THEOR COMPUT SCI, V413, P106, DOI 10.1016/j.tcs.2011.07.017
   Hayden RA, 2010, THEOR COMPUT SCI, V411, P2260, DOI 10.1016/j.tcs.2010.02.001
   Herzog U, 2001, PERFORM EVALUATION, V45, P125, DOI 10.1016/S0166-5316(01)00032-3
   Hillston J, 1999, PERFORM EVALUATION, V35, P171, DOI 10.1016/S0166-5316(99)00005-X
   Hillston J, 1995, COMPUT J, V38, P566, DOI 10.1093/comjnl/38.7.566
   HILLSTON J, 1998, P 6 INT WORKSH PROC, P1
   Hillston J., 1996, A Compositional Approach to Performance Modelling
   Jacobson P. A., 1981, Performance Evaluation Review, V10, P165, DOI 10.1145/1010629.805487
   KURTZ TG, 1970, J APPL PROBAB, V7, P49, DOI 10.2307/3212147
   Menasce D. A., 2002, Performance Evaluation Review, V29, P24, DOI 10.1145/512840.512844
   MEYER JF, 1980, IEEE T COMPUT, V29, P720, DOI 10.1109/TC.1980.1675654
   PATTIPATI KR, 1990, J ACM, V37, P643, DOI 10.1145/79147.214074
   Ramesh S, 2000, IEEE T SOFTWARE ENG, V26, P1086, DOI 10.1109/32.881719
   Real- Time and Distributed Systems Group Dept. of Systems and Computer Eng. Univ. of Carleton, 2012, LQNS SOFTW PACK
   REISER M, 1980, J ACM, V27, P313, DOI 10.1145/322186.322195
   ROLIA JA, 1995, IEEE T SOFTWARE ENG, V21, P689, DOI 10.1109/32.403785
   Schweitzer P.J., 1979, Proceedings of International Conference on Stochastic Control and Optimization, P25
   Thomas N., 2010, COMPUTER J
   Tribastone M., 2011, Proceedings of the 2011 IEEE 19th International Symposium on Modelling, Analysis & Simulation of Computer and Telecommunication Systems (MASCOTS 2011), P369, DOI 10.1109/MASCOTS.2011.28
   Tribastone Mirco, 2009, Performance Evaluation Review, V36, P28, DOI 10.1145/1530873.1530880
   Tribastone M., 2010, THESIS U EDINBURGH
   Tribastone M., 2010, P 1 JOINT WOSPSIPEW, P183
   Tribastone M, 2012, IEEE T SOFTWARE ENG, V38, P861, DOI 10.1109/TSE.2011.81
   Tribastone M, 2012, IEEE T SOFTWARE ENG, V38, P205, DOI 10.1109/TSE.2010.82
   WOODSIDE CM, 1989, PERFORM EVALUATION, V9, P143, DOI 10.1016/0166-5316(89)90039-4
   WOODSIDE CM, 1995, IEEE T COMPUT, V44, P20, DOI 10.1109/12.368012
NR 33
TC 28
Z9 32
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2013
VL 39
IS 6
BP 744
EP 756
DI 10.1109/TSE.2012.66
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 149RG
UT WOS:000319338200002
DA 2024-07-18
ER

PT J
AU Kocaguneli, E
   Menzies, T
   Keung, JW
AF Kocaguneli, Ekrem
   Menzies, Tim
   Keung, Jacky W.
TI On the Value of Ensemble Effort Estimation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software cost estimation; ensemble; machine learning; regression trees;
   support vector machines; neural nets; analogy; k-NN
ID COST ESTIMATION; EMPIRICAL VALIDATION; SOFTWARE; PREDICTION; SELECTION;
   MODEL; ALGORITHMS; REGRESSION; SYSTEMS
AB Background: Despite decades of research, there is no consensus on which software effort estimation methods produce the most accurate models. Aim: Prior work has reported that, given M estimation methods, no single method consistently outperforms all others. Perhaps rather than recommending one estimation method as best, it is wiser to generate estimates from ensembles of multiple estimation methods. Method: Nine learners were combined with 10 preprocessing options to generate 9 x 10 90 solo methods. These were applied to 20 datasets and evaluated using seven error measures. This identified the best n (in our case n 13) solo methods that showed stable performance across multiple datasets and error measures. The top 2, 4, 8, and 13 solo methods were then combined to generate 12 multimethods, which were then compared to the solo methods. Results: 1) The top 10 (out of 12) multimethods significantly outperformed all 90 solo methods. 2) The error rates of the multimethods were significantly less than the solo methods. 3) The ranking of the best multimethod was remarkably stable. Conclusion: While there is no best single effort estimation method, there exist best combinations of such effort estimation methods.
C1 [Kocaguneli, Ekrem; Menzies, Tim] W Virginia Univ, Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
   [Keung, Jacky W.] Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
C3 West Virginia University; Hong Kong Polytechnic University
RP Kocaguneli, E (corresponding author), W Virginia Univ, Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
EM ekocagun@mix.wvu.edu; tim@menzies.us; jacky.keung@comp.polyu.edu.hk
RI Menzies, Tim/X-7680-2019; Keung, Jacky/X-4693-2019; Keung,
   Jacky/ABA-7089-2020
OI Menzies, Tim/0000-0002-5040-3196; Keung, Jacky/0000-0002-3803-9600; 
FU US National Science Foundation, CISE [0810879]; Direct For Computer &
   Info Scie & Enginr [0810879] Funding Source: National Science
   Foundation; Division of Computing and Communication Foundations
   [0810879] Funding Source: National Science Foundation; Division of
   Computing and Communication Foundations; Direct For Computer & Info Scie
   & Enginr [1017330] Funding Source: National Science Foundation
FX This research is funded in part by the US National Science Foundation,
   CISE, project # 0810879.
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Ali K., 1995, TECHNICAL REPORT
   Alpaydin E, 2004, INTRO MACHINE LEARNI
   Alpaydin E., 1998, Proceedings of Engineering of Intelligent Systems, V2, P6
   [Anonymous], P JOINT C INT SOC PA
   [Anonymous], 2000, Data Mining: Practical Machine Learning Tools and Techniques with Java Implementations
   Armstrong JS, 2007, INT J FORECASTING, V23, P321, DOI 10.1016/j.ijforecast.2007.03.004
   Armstrong JS, 2001, INT SER OPER RES MAN, V30, P417
   Atkinson K., 1994, PROC FIFTH EUROPEAN
   BAKER DML, 2007, THESIS
   Bakir A., 2009, PROC INTL CONF ARTIF
   Bakir A, 2010, SOFTWARE QUAL J, V18, P57, DOI 10.1007/s11219-009-9081-z
   Bauer E, 1999, MACH LEARN, V36, P105, DOI 10.1023/A:1007515423169
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Boehm B, 2000, ANN SOFTW ENG, V10, P177, DOI 10.1023/A:1018991717352
   Boehm BW., 1981, Software Engineering Economics
   BREIMAN L, 1992, INT STAT REV, V60, P291, DOI 10.2307/1403680
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Briand L, 2002, RESOURCE MODELING IN
   CHANG CL, 1974, IEEE T COMPUT, VC 23, P1179, DOI 10.1109/T-C.1974.223827
   Corazza A, 2010, PROC SIXTH INTL CONF
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Dietterich TG, 2000, LECT NOTES COMPUT SC, V1857, P1, DOI 10.1007/3-540-45014-9_1
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Ghosh J, 2002, LECT NOTES COMPUT SC, V2364, P1
   Günter S, 2004, PATTERN RECOGN LETT, V25, P1323, DOI 10.1016/j.patrec.2004.05.002
   HO TK, 1994, IEEE T PATTERN ANAL, V16, P66, DOI 10.1109/34.273716
   HOGARTH RM, 1992, GENEVA PAP RISK INS, V17, P35, DOI 10.1007/BF00941956
   HOGARTH RM, 1978, ORGAN BEHAV HUM PERF, V21, P40, DOI 10.1016/0030-5073(78)90037-5
   HORNIK K, 1989, NEURAL NETWORKS, V2, P359, DOI 10.1016/0893-6080(89)90020-8
   Jorgensen M, 2005, IEEE SOFTWARE, V22, P57, DOI 10.1109/MS.2005.73
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kadoda G., 2000, UK CBR Workshop, P1
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Keung J., 2011, AUTOMATED SOFTWARE E
   Keung JW, 2008, ASIA PAC SOFWR ENG, P495, DOI 10.1109/APSEC.2008.43
   Khoshgoftaar TM, 2005, INTELL DATA ANAL, V9, P3, DOI 10.3233/IDA-2005-9102
   Khoshgoftaar TM, 2009, SOFTWARE QUAL J, V17, P25, DOI 10.1007/s11219-008-9058-3
   KITCHENHAM B, 1993, PROC INT CONF SOFTW, P477, DOI 10.1109/ICSE.1993.346018
   Kitchenham B, 2009, P 5 INT C PRED MOD S, P1, DOI DOI 10.1145/1540438.1540444
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kittler J, 1998, IEEE T PATTERN ANAL, V20, P226, DOI 10.1109/34.667881
   Kleijnen JPC, 1997, J STAT COMPUT SIM, V57, P111, DOI 10.1080/00949659708811805
   Kocaguneli E., 2009, PROC INTL CONF SOFTW
   Kocaguneli E, 2009, PROC INTL SYMP SOFTW
   Kocaguneli E., 2011, SOFTWARE EFFORT MODE
   Kohavi R., 1995, STUDY CROSS VALIDATI, DOI DOI 10.1067/MOD.2000.109031
   Kultur Y., 2008, SIGSOFT '08/FSE-16: Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering, P330
   Li YF, 2009, J SYST SOFTWARE, V82, P241, DOI 10.1016/j.jss.2008.06.001
   Maxwell K.D, 2002, APPLIED STATISTICS F
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   Mendes E., 2002, PROC INTL SYMP EMPIR
   Menzies T., 2011, PROC INTL WORKSHOP M
   Menzies T, 2006, IEEE T SOFTWARE ENG, V32, P883, DOI 10.1109/TSE.2006.114
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P409, DOI 10.1007/s10515-010-0070-z
   Milic D., 2004, PROC 30TH EUROMICRO
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Nelson A, 2011, SOFTWARE PRACT EXPER, V41, P283, DOI 10.1002/spe.1004
   Oppeneheim A., 1996, Signals and Systems
   Pahariya J. S., 2009, Proceedings of the 2009 World Congress on Nature & Biologically Inspired Computing (NaBIC 2009), P849, DOI 10.1109/NABIC.2009.5393534
   Park H, 2008, EXPERT SYST APPL, V35, P929, DOI 10.1016/j.eswa.2007.08.001
   Pillai K, 1997, IEEE T SOFTWARE ENG, V23, P485, DOI 10.1109/32.624305
   Putnam L.H., 1992, MEASURES EXCELLENCE
   Robson C., 2002, Real World Research, V2nd
   Rowe G, 1999, INT J FORECASTING, V15, P353, DOI 10.1016/S0169-2070(99)00018-7
   Seni G., 2010, ENSEMBLE METHODS IN
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P987, DOI 10.1109/32.965339
   Shepperd M, 1996, PROC INT CONF SOFTW, P170, DOI 10.1109/ICSE.1996.493413
   Tin Kam Ho, 1995, Proceedings of the Third International Conference on Document Analysis and Recognition, P278, DOI 10.1109/ICDAR.1995.598994
   Tosun A., 2009, PROC INTL CONF SOFTW
   Trevor H., 2009, The Elements of Statistical Learning: Data Mining, Inference, and Prediction
   Twala B., 2006, 28th International Conference on Software Engineering Proceedings, P909, DOI 10.1145/1134285.1134449
   VENKATACHALAM AR, 1993, IEEE IJCNN, P987
   Vinaykumar M.C. K., 2010, Handbook of Research on Machine Learning Applications and Trends: Algorithms, Methods, and Techniques, P499
   Yue Jiang, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P197, DOI 10.1109/ISSRE.2008.54
   Zhao HM, 2004, IEEE T KNOWL DATA EN, V16, P727, DOI 10.1109/TKDE.2004.3
NR 82
TC 158
Z9 170
U1 1
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2012
VL 38
IS 6
BP 1403
EP 1416
DI 10.1109/TSE.2011.111
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 043PI
UT WOS:000311556100009
DA 2024-07-18
ER

PT J
AU Sumner, WN
   Zheng, YH
   Weeratunge, D
   Zhang, XY
AF Sumner, William N.
   Zheng, Yunhui
   Weeratunge, Dasarath
   Zhang, Xiangyu
TI Precise Calling Context Encoding
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Calling context; context sensitivity; profiling; path encoding; calling
   context encoding; call graph
AB Calling contexts (CCs) are very important for a wide range of applications such as profiling, debugging, and event logging. Most applications perform expensive stack walking to recover contexts. The resulting contexts are often explicitly represented as a sequence of call sites and hence are bulky. We propose a technique to encode the current calling context of any point during an execution. In particular, an acyclic call path is encoded into one number through only integer additions. Recursive call paths are divided into acyclic subsequences and encoded independently. We leverage stack depth in a safe way to optimize encoding: If a calling context can be safely and uniquely identified by its stack depth, we do not perform encoding. We propose an algorithm to seamlessly fuse encoding and stack depth-based identification. The algorithm is safe because different contexts are guaranteed to have different IDs. It also ensures contexts can be faithfully decoded. Our experiments show that our technique incurs negligible overhead (0-6.4 percent). For most medium-sized programs, it can encode all contexts with just one number. For large programs, we are able to encode most calling contexts to a few numbers. We also present our experience of applying context encoding to debugging crash-based failures.
C1 [Sumner, William N.; Zheng, Yunhui; Weeratunge, Dasarath; Zhang, Xiangyu] Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
C3 Purdue University System; Purdue University
RP Sumner, WN (corresponding author), Purdue Univ, Dept Comp Sci, 305 N Univ St, W Lafayette, IN 47907 USA.
EM wsumner@cs.purdue.edu; zheng16@cs.purdue.edu; dweeratu@cs.purdue.edu;
   xyzhang@cs.purdue.edu
RI Zhang, Xiangyu/H-9255-2013; zheng, yunhui/D-9432-2016
OI Zhang, Xiangyu/0000-0003-0876-6783; Sumner, Nick/0000-0001-8592-033X
FU US National Science Foundation (NSF) [0917007, 0847900, 0845870]; Direct
   For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [0845870, 0917007] Funding Source: National
   Science Foundation
FX The authors thank the ICSE reviewers for their insightful comments. They
   are grateful to Ben Wiedermann for his feedback on early drafts. This
   research is supported, in part, by the US National Science Foundation
   (NSF) under grants 0917007, 0847900, and 0845870. Any opinions,
   findings, conclusions, or recommendations in this paper are those of the
   authors and do not necessarily reflect the views of the NSF.
CR [Anonymous], P 34 ANN ACM SIGPLAN
   [Anonymous], P 5 EUR C COMP SYST
   [Anonymous], P IEEE ACM 32 INT C
   [Anonymous], P 30 INT C SOFTW ENG
   [Anonymous], P 11 INT C COMP CONS
   [Anonymous], P ACM SIGPLAN C PROG
   [Anonymous], P ACM SIGPLAN C PROG
   [Anonymous], P 6 EUR SOFTW ENG C
   [Anonymous], P 16 ACM SIGSOFT INT
   [Anonymous], P 25 INT C SOFTW ENG
   [Anonymous], P IEEE ACM 7 ANN INT
   [Anonymous], P IEEE ACM 32 INT C
   [Anonymous], P IEEE ACM 37 ANN IN
   [Anonymous], P INT S COD GEN OPT
   [Anonymous], P IEEE ACM 29 ANN IN
   [Anonymous], P 31 INT C SOFTW ENG
   [Anonymous], P 8 ACM INT C ASP OR
   [Anonymous], P ACM SIGPLAN C PROG
   [Anonymous], P INT S COD GEN OPT
   [Anonymous], P 24 ACM SIGPLAN C O
   [Anonymous], P IEEE ACM 20 INT C
   [Anonymous], TR0738 U TEX
   [Anonymous], P ACM IEEE 32 INT C
   [Anonymous], 2007, P ACM SIGPLAN C PROG
   [Anonymous], P 14 ACM SIGSOFT INT
   [Anonymous], P 29 INT C SOFTW ENG
   [Anonymous], P ACM SIGPLAN C PROG
   [Anonymous], P 7 INT S MEM MAN
   [Anonymous], P 31 INT C SOFTW ENG
   [Anonymous], P 26 INT C SOFTW ENG
   [Anonymous], P 18 INT S SOFTW TES
   [Anonymous], P 15 INT S SOFTW REL
   [Anonymous], P ACM SIGPLAN C PROG
   [Anonymous], 2005, P 10 EUR SOFTW ENG C
   [Anonymous], 2008, NDSS
   [Anonymous], P 12 INT C ARCH SUPP
   [Anonymous], P 8 INT C COMP CONST
   [Anonymous], P ACM SIGSOFT INT S
   [Anonymous], P ACM SIGPLAN C PROG
   [Anonymous], P IEEE ACM 7 ANN INT
   [Anonymous], P 9 EUR C OBJ OR PRO
   Arnold Matthew., 2002, P 17 ACM SIGPLAN C O
   Bond MichaelD., 2007, P 22 ANN ACM SIGPLAN
   Liblit B., 2005, P ACM SIGPLAN C PROG
   Milanova A, 2005, ACM T SOFTW ENG METH, V14, P1, DOI 10.1145/1044834.1044835
   Cardona PAN, 2015, CUAD ACT, P154
   Shivers O. G., 1991, THESIS CARNEGIE MELL
   Spivey JM, 2004, SOFTWARE PRACT EXPER, V34, P249, DOI 10.1002/spe.562
NR 48
TC 12
Z9 15
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2012
VL 38
IS 5
BP 1160
EP 1177
DI 10.1109/TSE.2011.70
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 009BA
UT WOS:000308999100011
DA 2024-07-18
ER

PT J
AU Lu, S
   Park, S
   Zhou, YY
AF Lu, Shan
   Park, Soyeon
   Zhou, Yuanyuan
TI Finding Atomicity-Violation Bugs through Unserializable Interleaving
   Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing and debugging; debugging aids; diagnostics; testing strategies;
   test coverage of code; concurrent programming; bug characteristics
ID CONCURRENT PROGRAMS; MULTITHREADED PROGRAMS
AB Multicore hardware is making concurrent programs pervasive. Unfortunately, concurrent programs are prone to bugs. Among different types of concurrency bugs, atomicity violations are common and important. How to test the interleaving space and expose atomicity-violation bugs is an open problem. This paper makes three contributions. First, it designs and evaluates a hierarchy of four interleaving coverage criteria using 105 real-world concurrency bugs. This study finds a coverage criterion (Unserializable Interleaving Coverage) that balances the complexity and the capability of exposing atomicity-violation bugs well. Second, it studies stress testing to understand why this common practice cannot effectively expose atomicity-violation bugs from the perspective of unserializable interleaving coverage. Third, it designs CTrigger following the unserializable interleaving coverage criterion. CTrigger uses trace analysis to identify feasible unserializable interleavings, and then exercises low-probability interleavings to expose atomicity-violation bugs. We evaluate CTrigger with real-world atomicity-violation bugs from seven applications. CTrigger efficiently exposes these bugs within 1-235 seconds, two to four orders of magnitude faster than stress testing. Without CTrigger, some of these bugs do not manifest even after seven days of stress testing. Furthermore, once a bug is exposed, CTrigger can reliably reproduce it, usually within 5 seconds, for diagnosis.
C1 [Lu, Shan] Univ Wisconsin, Dept Comp Sci, Madison, WI 53706 USA.
   [Park, Soyeon; Zhou, Yuanyuan] Univ Calif San Diego, Dept Comp Sci & Engn, La Jolla, CA 92093 USA.
C3 University of Wisconsin System; University of Wisconsin Madison;
   University of California System; University of California San Diego
RP Lu, S (corresponding author), Univ Wisconsin, Dept Comp Sci, 1210 W Dayton St, Madison, WI 53706 USA.
EM shanlu@cs.wisc.edu; soyeon@cs.ucsd.edu; yyzhou@cs.ucsd.edu
OI Lu, Shan/0000-0002-0757-4600
FU US National Science Foundation (NSF) [CNS-0720743, CCF-0325603,
   CNS-0615372, CNS-0347854, CCF-1018180]; NetApp Gift grant; Claire Boothe
   Luce faculty; Direct For Computer & Info Scie & Enginr; Division of
   Computing and Communication Foundations [1018180] Funding Source:
   National Science Foundation; Direct For Computer & Info Scie & Enginr;
   Division of Computing and Communication Foundations [1017804] Funding
   Source: National Science Foundation
FX The authors thank the anonymous reviewers whose comments and suggestions
   have greatly improved our paper. This work is supported by US National
   Science Foundation (NSF) grants CNS-0720743, CCF-0325603, CNS-0615372,
   CNS-0347854 (career award), CCF-1018180 grant, a NetApp Gift grant, and
   a Claire Boothe Luce faculty fellowship. An earlier version of this
   paper [32] appeared in the Proceedings of the 14th International
   Conference on Architecture Support for Programming Languages and
   Operating Systems.
CR [Anonymous], P ANN INT S COMP ARC
   [Anonymous], P INT C ARCH SUPP PR
   [Anonymous], 2007, P ACM SIGPLAN C PROG
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], P INT C ARCH SUPP PR
   [Anonymous], 2005, P ACM SIGPLAN C PROG
   ARTHO C, 2003, P 1 INT WORKSH VER V
   Barford P., 1998, P ACM SIGMETRICS JOI
   Bron Arkady, 2005, P ACM SIGPLAN S PRIN
   Chen, 2005, P USENIX ANN TECHN C
   Dunlap G. W., 2008, P ACM SIGPLAN SIGOPS
   Edelstein O, 2002, IBM SYST J, V41, P111, DOI 10.1147/sj.411.0111
   Flanagan C., 2004, P ACM SIGPLAN SIGACT
   Flanagan C., 2008, P ACM SIGPLAN C PROG
   FRANKL PG, 1988, IEEE T SOFTWARE ENG, V14, P1483, DOI 10.1109/32.6194
   Hammer C., 2008, P INT C SOFTW ENG
   Harrold M. J., 1992, P INT C SOFTW MAINT
   Hwang GH, 1995, INT J SOFTW ENG KNOW, V5, P493, DOI 10.1142/S0218194095000241
   Koppol P.V., 1996, P ACM SIGSOFT INT S
   LEBLANC TJ, 1987, IEEE T COMPUT, V36, P471, DOI 10.1109/TC.1987.1676929
   Lei Y, 2005, NINTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH-ASSURANCE SYSTEMS ENGINEERING, P66, DOI 10.1109/HASE.2005.2
   Lei Y, 2007, SOFTW TEST VERIF REL, V17, P207, DOI 10.1002/stvr.369
   Lei Y, 2006, IEEE T SOFTWARE ENG, V32, P382, DOI 10.1109/TSE.2006.56
   Lu S., 2007, P ACM SIGOPS S OP SY
   Lu S., 2007, P JOINT M EUR SOFTW
   Lu Shan, 2006, P INT C ARCH SUPP PR
   Lucia B., 2008, P ANN INT S COMP ARC
   Malaiya Y., 1994, P INT S SOFTW REL EN
   Musuvathi M., 2008, P C OP SYST DES IMPL
   MUSUVATHI M, 2007, P ACM SIGPLAN C PROG
   Narayanasamy S., 2007, P ACM SIGPLAN C PROG
   Narayanasamy S., 2006, P JOINT INT C MEAS M
   Netzer R.H.B., 1991, P ACM SIGPLAN S PRIN
   Savage S, 1997, ACM T COMPUT SYST, V15, P391, DOI 10.1145/269005.266641
   SecurityFocus, 2011, SOFTW BUG CONTR BLAC
   Sen K., 2008, P ACM SIGPLAN C PROG
   Sen K., 2006, P FUND APPR SOFTW EN
   Stoller ScottD., 2002, ELECTRON NOTES THEOR, V70, P142
   TAYLOR RN, 1992, IEEE T SOFTWARE ENG, V18, P206, DOI 10.1109/32.126769
   Vaziri M., 2006, P ACM SIGPLAN SIGACT
   VMware, 2011, APP C US INT VIRT DE
   WANG L, 2006, P ACM SIGPLAN S PRIN
   Wang LQ, 2006, IEEE T SOFTWARE ENG, V32, P93, DOI 10.1109/TSE.2006.1599419
   Weiss S.N., 1988, P 2 WORKSH SOFTW TES
   WEYUKER EJ, 1993, IEEE T SOFTWARE ENG, V19, P912, DOI 10.1109/32.241773
   Xu M., 2005, P ACM SIGPLAN C PROG
   Yang C.-S. D., 1998, P ACM SIGSOFT INT S
   Yu Y., 2005, P ACM S OP SYST PRIN
NR 48
TC 24
Z9 28
U1 1
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2012
VL 38
IS 4
BP 844
EP 860
DI 10.1109/TSE.2011.35
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 983LE
UT WOS:000307120000007
DA 2024-07-18
ER

PT J
AU McMinn, P
   Harman, M
   Lakhotia, K
   Hassoun, Y
   Wegener, J
AF McMinn, Phil
   Harman, Mark
   Lakhotia, Kiran
   Hassoun, Youssef
   Wegener, Joachim
TI Input Domain Reduction through Irrelevant Variable Removal and Its
   Effect on Local, Global, and Hybrid Search-Based Structural Test Data
   Generation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Search-based software testing; evolutionary testing; automated test data
   generation; input domain reduction
ID SOFTWARE
AB Search-Based Test Data Generation reformulates testing goals as fitness functions so that test input generation can be automated by some chosen search-based optimization algorithm. The optimization algorithm searches the space of potential inputs, seeking those that are "fit for purpose," guided by the fitness function. The search space of potential inputs can be very large, even for very small systems under test. Its size is, of course, a key determining factor affecting the performance of any search-based approach. However, despite the large volume of work on Search-Based Software Testing, the literature contains little that concerns the performance impact of search space reduction. This paper proposes a static dependence analysis derived from program slicing that can be used to support search space reduction. The paper presents both a theoretical and empirical analysis of the application of this approach to open source and industrial production code. The results provide evidence to support the claim that input domain reduction has a significant effect on the performance of local, global, and hybrid search, while a purely random search is unaffected.
C1 [McMinn, Phil] Univ Sheffield, Sheffield S1 4DP, S Yorkshire, England.
   [Harman, Mark; Lakhotia, Kiran] UCL, CREST, London WC1E 6BT, England.
   [Hassoun, Youssef] Kings Coll London, London WC2R 2LS, England.
   [Wegener, Joachim] Berner & Mattner Syst Tech GmbH, D-10587 Berlin, Germany.
C3 University of Sheffield; University of London; University College
   London; University of London; King's College London
RP McMinn, P (corresponding author), Univ Sheffield, 211 Portobello, Sheffield S1 4DP, S Yorkshire, England.
EM p.mcminn@sheffield.ac.uk; m.harman@cs.ucl.ac.uk;
   k.lakhotia@cs.ucl.ac.uk; youssef.hassoun@kcl.ac.uk;
   joachim.wegener@berner-mattner.com
OI Harman, Mark/0000-0002-5864-4488
FU EPSRC [EP/G009600/1, EP/F065825/1, EP/I010386/1, EP/G060525, EP/F059442,
   EP/D050863, EP/I010165]; European Union [ICT-2009.1.2, 257574]; EPSRC
   [EP/G009600/1, EP/F065825/1, EP/I010386/1] Funding Source: UKRI
FX The authors would like to thank the anonymous referees for their
   comments on earlier versions of this paper. They are also grateful to
   Lorna Anderson, Hamilton Gross, and Becky McMinn for proof reading. Phil
   McMinn is supported, in part, by EPSRC grants EP/G009600/1 (Automated
   Discovery of Emergent Misbehavior), EP/F065825/1 (REGI: Reverse
   Engineering State Machine Hierarchies by Grammar Inference), and
   EP/I010386/1 (RE-COST: REducing the Cost of Oracles in Software
   Testing). Mark Harman is supported, in part, by EPSRC grants EP/G060525
   (CREST Platform grant), EP/F059442 (SLIM: SLIcing state based Models),
   and EP/D050863 (SEBASE: Software Engineering By Automated SEarch)
   EP/I010165 (RE-COST: REducing the Cost of Oracles for Software Testing).
   Youssef Hassoun and Kiran Lakhotia are supported by the EPSRC CREST
   Platform Grant (EP/G060525) and Kiran Lakhotia is also supported by the
   European Union project FITTEST (ICT-2009.1.2 no 257574).
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Andersen L. O., 1994, Ph.D. thesis
   [Anonymous], 2011, SOFTWARE ARTIFACT IN
   [Anonymous], 2010, Proceedings of the 19th International Symposium on Software Testing and Analysis, ISSTA'10
   Arcuri Andrea, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P205, DOI 10.1109/ICST.2010.17
   Arcuri A, 2009, LECT NOTES COMPUT SC, V5792, P156, DOI 10.1007/978-3-642-04944-6_13
   BAKER JE, 1987, P 2 INT C GEN ALG TH
   Binkley D, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1217295.1217297
   Ribeiro JCB, 2009, INFORM SOFTWARE TECH, V51, P1534, DOI 10.1016/j.infsof.2009.06.009
   Briand LC., 2002, P 14 INT C SOFTW ENG, P43, DOI DOI 10.1145/568760.568769
   Buehler O., 2003, P INT C COMP COMM CO
   Chen S, 1999, GECCO-99: PROCEEDINGS OF THE GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P135
   Cousot P., 1992, Journal of Logic and Computation, V2, P511, DOI 10.1093/logcom/2.4.511
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   *GRAMM INC, 2002, COD SLIC SYST
   Harman M, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P55, DOI 10.1109/SCAM.2002.1134105
   Harman M., 2009, TR0903 KINGS COLL LO
   HARMAN M., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, P155, DOI DOI 10.1145/1287624.1287647
   Harman M., 2010, P 3 INT WORKSH SEARC
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Harman M, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P185
   HORWITZ S, 1988, SIGPLAN NOTICES, V23, P35
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Krinke J, 1998, INFORM SOFTWARE TECH, V40, P661, DOI 10.1016/S0950-5849(98)00090-1
   Lakhotia K, 2010, J SYST SOFTWARE, V83, P2379, DOI 10.1016/j.jss.2010.07.026
   Lammermann F, 2004, LECT NOTES COMPUT SC, V3103, P1350
   Larranaga P., 2002, Estimation of Distribution Algorithms: A New Tool for Evolutionary Computation. Genetic algorithms and evolutionary computation
   Mansour N, 2004, SOFTWARE QUAL J, V12, P121, DOI 10.1023/B:SQJO.0000024059.72478.4e
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   MCMINN P., 2006, Proceedings of the 2006 international symposium on Software testing and analysis, P13, DOI [10.1145/1146238.1146241, DOI 10.1145/1146238.1146241]
   MCMINN P., 2010, Proceedings of the First International Workshop on Software Test Output Validation, P1
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   Miller W., 1976, IEEE Transactions on Software Engineering, VSE-2, P223, DOI 10.1109/TSE.1976.233818
   Mühlenbein H, 1993, EVOL COMPUT, V1, P25, DOI 10.1162/evco.1993.1.1.25
   Pargas R. P., 1999, Software Testing, Verification and Reliability, V9, P263, DOI 10.1002/(SICI)1099-1689(199912)9:4<263::AID-STVR190>3.0.CO;2-Y
   R Core Team, 2020, R FDN STAT COMPUTING
   Sagana R, 2008, COMPUT INTELL-US, V24, P23, DOI 10.1111/j.1467-8640.2007.00321.x
   Schmiedle F, 2003, IEEE T COMPUT, V52, P815, DOI 10.1109/TC.2003.1204836
   Steensgaard B., 1996, Conference Record of POPL '96: The 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P32, DOI 10.1145/237721.237727
   Tracey N, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P285, DOI 10.1109/ASE.1998.732680
   VOAS JM, 1995, IEEE SOFTWARE, V12, P17, DOI 10.1109/52.382180
   WANG HC, 2006, P 2 TAIW C SOFTW ENG
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Wegener J, 1998, REAL-TIME SYST, V15, P275, DOI 10.1023/A:1008096431840
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   WHITLEY D, 1989, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P116
   Xanthakis S., 1992, 5 INT C SOFTWARE ENG, P625
   [No title captured]
NR 52
TC 34
Z9 40
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2012
VL 38
IS 2
BP 453
EP 477
DI 10.1109/TSE.2011.18
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 913ZF
UT WOS:000301915200013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Schreiber, FA
   Camplani, R
   Fortunato, M
   Marelli, M
   Rota, G
AF Schreiber, Fabio A.
   Camplani, Romolo
   Fortunato, Marco
   Marelli, Marco
   Rota, Guido
TI PerLa: A Language and Middleware Architecture for Data Management and
   Integration in Pervasive Information Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Declarative language; device heterogeneity; functionality proxy;
   middleware infrastructure; pervasive system; SQL; wireless sensor
   networks
AB A declarative SQL-like language and a middleware infrastructure are presented for collecting data from different nodes of a pervasive system. Data management is performed by hiding the complexity due to the large underlying heterogeneity of devices, which can span from passive RFID(s) to ad hoc sensor boards to portable computers. An important feature of the presented middleware is to make the integration of new device types in the system easy through the use of device self-description. Two case studies are described for PerLa usage, and a survey is made for comparing our approach with other projects in the area.
C1 [Schreiber, Fabio A.; Camplani, Romolo; Fortunato, Marco; Marelli, Marco; Rota, Guido] Politecn Milan, Dipartimento Elettron & Informaz, I-20133 Milan, Italy.
C3 Polytechnic University of Milan
RP Schreiber, FA (corresponding author), Politecn Milan, Dipartimento Elettron & Informaz, Via Ponzio 34-5, I-20133 Milan, Italy.
EM schreiber@elet.polimi.it; camplani@elet.polimi.it;
   fortunato_marco@alice.it; marelli_marco@hotmail.com;
   guido.rota@gmail.com
RI Schreiber, Fabio/K-6884-2019
OI Schreiber, Fabio/0000-0002-5237-0455
FU Politecnico di Milano PROMETEO P2ICT Lab; Italian MIUR-FIRB Art-Deco;
   European Commission [227077-SMScom]
FX This research has been partially funded by the following research
   projects: Politecnico di Milano PROMETEO P2ICT Lab, Italian MIUR-FIRB
   Art-Deco, European Commission Programme IDEAS-ERC Project 227077-SMScom.
CR Abadi D.J., 2009, B IEEE COMPUTER SOC, V32, P3
   Aberer K., 2006, ACM IFIP USENIX 7 IN
   Allen G.W., 2005, P 2 EUR WORKSH WIR S
   Alliance Z., 2005, 053474R06 ZIGBEE, V1
   [Anonymous], 2011, RMI REM METH INV
   [Anonymous], 2011, JMS JAV MESS SERV
   [Anonymous], 2011, JAXB JAV ARCH XML BI
   [Anonymous], 2006, VLDB'06: Proceedings of the 32nd international conference on Very large data bases
   [Anonymous], 2010, DROOLS BUS LOG INT P
   [Anonymous], P REALWSN
   [Anonymous], 2011, CORBA COMM OBJ REQ B
   [Anonymous], 1992, Conceptual Database Design-An entity-relationship Approach
   [Anonymous], 2010, DSPIC HIGH PERF 16 B
   [Anonymous], 2011, OSGI SERV PLATF COR
   [Anonymous], 2000, Dissertation
   [Anonymous], 2011, 1189812003 ISO
   [Anonymous], P 1 INT C AUT COMP C
   Avancha S., 2002, P NSF WORKSH CONT AW
   Bindelli S, 2008, 2008 23RD IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS, PROCEEDINGS, P17, DOI 10.1109/ASEW.2008.4686289
   Bolchini C, 2006, MOBILE INFORMATION SYSTEMS: INFRASTRUCTURE AND DESIGN FOR ADAPTIVITY AND FLEXIBILITY, P155, DOI 10.1007/3-540-31008-8_6
   Bolchini C, 2009, COMMUN ACM, V52, P136, DOI 10.1145/1592761.1592793
   Cappiello C., 2009, P IEEE INT C PERV CO, P634
   Chakraborty D., 2002, P 5 INT WORKSH MOB D
   Chu D., 2006, Proceedings of the 32nd international conference on Very large data bases, VLDB '06, P1203
   Chu D, 2007, SENSYS'07: PROCEEDINGS OF THE 5TH ACM CONFERENCE ON EMBEDDED NETWORKED SENSOR SYSTEMS, P175
   Cugola G., 2006, P 6 INT WORKSH SOFTW, P16
   Cugola G, 2009, LECT NOTES COMPUT SC, V5432, P69
   Davies N, 2004, IEEE PERVAS COMPUT, V3, P74, DOI 10.1109/MPRV.2004.1316823
   Golab L, 2003, SIGMOD REC, V32, P5, DOI 10.1145/776985.776986
   Hadim G., 2006, IEEE DISTRIBUTED SYS, V7, P1
   Hartung C., 2006, MobiSys2006. The Fourth International Conference on Mobile Systems, Applications and Services, P28, DOI 10.1145/1134680.1134685
   Juang P, 2002, ACM SIGPLAN NOTICES, V37, P96, DOI 10.1145/605432.605408
   Kindberg T., 2002, IEEE Pervasive Computing, V1, P70, DOI 10.1109/MPRV.2002.993146
   Kindberg T., 2000, P 9 WOKSHOP ACM SIGO, P195
   Levis P, 2005, AMBIENT INTELLIGENCE, P115
   Madden S, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P131, DOI 10.1145/1060289.1060303
   Madden SR, 2005, ACM T DATABASE SYST, V30, P122, DOI 10.1145/1061318.1061322
   Mainwaring A., 2002, ACM INT WORKSHOP WIR
   Malek S, 2005, IEEE T SOFTWARE ENG, V31, P256, DOI 10.1109/TSE.2005.29
   Mattmann CA, 2005, LECT NOTES COMPUT SC, V3470, P68
   McKnight LW, 2004, IEEE INTERNET COMPUT, V8, P24, DOI 10.1109/MIC.2004.14
   Messer A., 2007, COMM MOD PATT PERV C
   Murphy AL, 2001, INT CON DISTR COMP S, P524, DOI 10.1109/ICDSC.2001.918983
   Ozsu M.T., 1999, PRINCIPLES DISTRIBUT, V2nd
   Perich F., 2002, P 13 INT C DAT EXP S
   Roman M., 2002, IEEE Pervasive Computing, V1, P74, DOI 10.1109/MPRV.2002.1158281
   Schreiber FA, 2008, INT CONF PERVAS COMP, P282, DOI 10.1109/PERCOM.2008.30
   Schreiber F.A., 2010, 20109 ARTDECO, P1
   Sousa J. P., 2002, Software Architecture. Systems Design, Development and Maintenance. IFIP 17th World Computer Congress - TC2 Stream/ 3rd Working IEEE/IFIP Conference on Software Architecture, P29
   WEISER M, 1991, SCI AM, V265, P94, DOI 10.1038/scientificamerican0991-94
NR 50
TC 28
Z9 32
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2012
VL 38
IS 2
BP 478
EP 496
DI 10.1109/TSE.2011.25
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 913ZF
UT WOS:000301915200014
DA 2024-07-18
ER

PT J
AU Shousha, M
   Briand, LC
   Labiche, Y
AF Shousha, Marwa
   Briand, Lionel C.
   Labiche, Yvan
TI A UML/MARTE Model Analysis Method for Uncovering Scenarios Leading to
   Starvation and Deadlocks in Concurrent Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Search-based software engineering; MDD; deadlock; starvation; model
   analysis; concurrent systems; UML; MARTE; genetic algorithms
ID RACE DETECTION; CHECKING
AB Concurrency problems such as starvation and deadlocks should be identified early in the design process. As larger, more complex concurrent systems are being developed, this is made increasingly difficult. We propose here a general approach based on the analysis of specialized design models expressed in the Unified Modeling Language (UML) that uses a specifically designed genetic algorithm to detect concurrency problems. Though the current paper addresses deadlocks and starvation, we will show how the approach can be easily tailored to other concurrency issues. Our main motivations are 1) to devise solutions that are applicable in the context of the UML design of concurrent systems without requiring additional modeling and 2) to use a search technique to achieve scalable automation in terms of concurrency problem detection. To achieve the first objective, we show how all relevant concurrency information is extracted from systems' UML models that comply with the UML Modeling and Analysis of Real-Time and Embedded Systems (MARTE) profile. For the second objective, a tailored genetic algorithm is used to search for execution sequences exhibiting deadlock or starvation problems. Scalability in terms of problem detection is achieved by showing that the detection rates of our approach are, in general, high and are not strongly affected by large increases in the size of complex search spaces.
C1 [Shousha, Marwa; Labiche, Yvan] Carleton Univ, Dept Syst & Comp Engn, Software Qual Engn Lab, Ottawa, ON K1S 5B6, Canada.
   [Briand, Lionel C.] Simula Res Lab, N-1325 Lysaker, Norway.
   [Briand, Lionel C.] Univ Oslo, N-0316 Oslo, Norway.
C3 Carleton University; University of Oslo
RP Shousha, M (corresponding author), Carleton Univ, Dept Syst & Comp Engn, Software Qual Engn Lab, 1125 Colonel Dr, Ottawa, ON K1S 5B6, Canada.
EM mshousha@sce.carleton.ca; briand@simula.no; labiche@sce.carleton.ca
OI Labiche, Yvan/0000-0001-8880-4836
CR Abadi M, 2006, ACM T PROGR LANG SYS, V28, P207, DOI 10.1145/1119479.1119480
   Abdellatif-Kaddour O., 2001, PROPERTY ORIENTED TE
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Alba E, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1066
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   [Anonymous], 2005, UML PROF SCHED PERF
   Back T., 1992, Toward a Practice of Autonomous Systems. Proceedings of the First European Conference on Artificial Life, P263
   BACON J, 1997, CONCURRENT SYSTEMS O
   Behrmann G., 2004, TUTORIAL UPPAAL
   Bin Lei, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P200, DOI 10.1109/ICST.2008.64
   BRAT G, 2000, P WORKSH ADV VER
   Chugh R, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P316, DOI 10.1145/1375581.1375620
   Demathieu S, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P50
   Dorigo M, 1993, FRONTIER ARTIFICIAL, P5
   Downey A., 2008, The Little Book of Semaphores
   Edelkamp S., 2001, ELECT NOTES THEORETI, V55, P343
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   Flanagan C, 2000, ACM SIGPLAN NOTICES, V35, P219, DOI 10.1145/358438.349328
   Gagnon P, 2008, J OBJECT TECHNOL, V7, P59, DOI 10.5381/jot.2008.7.1.a1
   Godefroid P., 2004, International Journal on Software Tools for Technology Transfer, V6, P117, DOI 10.1007/s10009-004-0141-1
   Gomaa H., 2000, DESIGNING CONCURRENT
   Gradara S, 2006, J COMPUT SYST SCI, V72, P1397, DOI 10.1016/j.jcss.2006.03.003
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Haupt R, 1998, PRACTICAL GENETIC AL
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Jacob C., 2001, ILLUSTRATING EVOLUTI, DOI 10.1016/B978-155860637-1/50019-9
   Kahlon V, 2007, LECT NOTES COMPUT SC, V4590, P226
   Kim SK, 2005, 2005 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P100
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Knapp A, 2007, LECT NOTES COMPUT SC, V4364, P42
   Koza J.R., 1992, GENETIC PROGRAMMING, VVolume 1
   Mraidha C, 2008, IEEE INT C ENG COMP, P222, DOI 10.1109/ICECCS.2008.37
   Oaks Scott., 2004, JAVA THREADS
   OMG, 2009, UML PROF MOD AN REAL
   OMG, 2009, UN MOD LANG UML VERS
   Palshikar G., 2004, EMBEDDED SYSTEMS DES
   Petriu D.C., 2005, MODEL DRIVEN ENG DIS, P205
   Rosete-Suárez A, 1999, GECCO-99: PROCEEDINGS OF THE GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1699
   Safe M, 2004, LECT NOTES ARTIF INT, V3171, P405
   Savage S, 1997, ACM T COMPUT SYST, V15, P391, DOI 10.1145/269005.266641
   Schneider F., 1999, P 5 LANGL FORM METH
   Shousha M, 2008, LECT NOTES COMPUT SC, V5301, P475, DOI 10.1007/978-3-540-87875-9_34
   Sinclair R., 2002, CODENOTES JAVA INTER
   Tracey N., 1999, P 17 INT SYSTEM SAFE, P128
   Wang L, 1998, FIRST MERGED INTERNATIONAL PARALLEL PROCESSING SYMPOSIUM & SYMPOSIUM ON PARALLEL AND DISTRIBUTED PROCESSING, P345, DOI 10.1109/IPPS.1998.669938
   YANG H, 2006, DEADLOCK JAVA TUTORI
NR 46
TC 20
Z9 22
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2012
VL 38
IS 2
BP 354
EP 374
DI 10.1109/TSE.2010.107
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 913ZF
UT WOS:000301915200008
DA 2024-07-18
ER

PT J
AU Calinescu, R
   Grunske, L
   Kwiatkowska, M
   Mirandola, R
   Tamburrelli, G
AF Calinescu, Radu
   Grunske, Lars
   Kwiatkowska, Marta
   Mirandola, Raffaela
   Tamburrelli, Giordano
TI Dynamic QoS Management and Optimization in Service-Based Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Service-oriented software engineering; QoS management; QoS optimization;
   adaptive systems
ID MODEL-CHECKING; WEB SERVICES; GENETIC ALGORITHM; ENVIRONMENT; PATTERNS
AB Service-based systems that are dynamically composed at runtime to provide complex, adaptive functionality are currently one of the main development paradigms in software engineering. However, the Quality of Service (QoS) delivered by these systems remains an important concern, and needs to be managed in an equally adaptive and predictable way. To address this need, we introduce a novel, tool-supported framework for the development of adaptive service-based systems called QoSMOS (QoS Management and Optimization of Service-based systems). QoSMOS can be used to develop service-based systems that achieve their QoS requirements through dynamically adapting to changes in the system state, environment, and workload. QoSMOS service-based systems translate high-level QoS requirements specified by their administrators into probabilistic temporal logic formulae, which are then formally and automatically analyzed to identify and enforce optimal system configurations. The QoSMOS self-adaptation mechanism can handle reliability and performance-related QoS requirements, and can be integrated into newly developed solutions or legacy systems. The effectiveness and scalability of the approach are validated using simulations and a set of experiments based on an implementation of an adaptive service-based system for remote medical assistance.
C1 [Calinescu, Radu] Aston Univ, Birmingham B4 7ET, W Midlands, England.
   [Grunske, Lars] Swinburne Univ Technol, Fac ICT, Hawthorn, Vic 3122, Australia.
   [Kwiatkowska, Marta] Univ Oxford, Comp Lab, Oxford OX1 3QD, England.
   [Mirandola, Raffaela; Tamburrelli, Giordano] Politecn Milan, I-20133 Milan, Italy.
C3 Aston University; Swinburne University of Technology; University of
   Oxford; Polytechnic University of Milan
RP Calinescu, R (corresponding author), Aston Univ, Birmingham B4 7ET, W Midlands, England.
EM R.C.Calinescu@aston.ac.uk; lgrunske@swin.edu.au;
   Marta.Kwiatkowska@comlab.ox.ac.uk; mirandola@elet.polimi.it;
   tamburrelli@elet.polimi.it
RI Calinescu, Radu/AAN-1912-2020; Grunske, Lars/AAH-4550-2019
OI Grunske, Lars/0000-0002-8747-3745; Calinescu, Radu/0000-0002-2678-9260;
   MIRANDOLA, RAFFAELA/0000-0003-3154-2438; Kwiatkowska,
   Marta/0000-0001-9022-7599
FU FP7 European project CONNECT [FP7 231167]; FP7 European project
   Q-ImPrESS [FP7 215013]; FP7 European project IDEAS-ERC SMScom [227977];
   UK Engineering and Physical Sciences Research Council [EP/F001096/1,
   EP/H042644/1]; EPSRC [EP/F001096/1] Funding Source: UKRI
FX This work was partly supported by the FP7 European projects CONNECT (FP7
   231167), Q-ImPrESS (FP7 215013), and IDEAS-ERC SMScom (227977), and by
   the UK Engineering and Physical Sciences Research Council Grants
   EP/F001096/1 and EP/H042644/1.
CR Adel Serhani M, 2005, 2005 IEEE International Conference on Web Services, Vols 1 and 2, Proceedings, P113
   Ajmonen M., 1989, ADV PETRI NETS LECT, V424, P1
   ALUR R, 1993, INFORM COMPUT, V104, P2, DOI 10.1006/inco.1993.1024
   Alur R., 1999, Formal Methods in System Design, P207
   [Anonymous], 2009, AUTONOMIC COMPUTING
   Ardagna D, 2005, 2005 IEEE International Conference on Web Services, Vols 1 and 2, Proceedings, P805
   Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   Ardagna D, 2008, LECT NOTES COMPUT SC, V5281, P1, DOI 10.1007/978-3-540-87879-7_1
   Aziz A, 1995, LECT NOTES COMPUT SC, V939, P155
   Badidi E, 2005, THIRD EUROPEAN CONFERENCE ON WEB SERVICES, PROCEEDINGS, P204
   Baier C, 1999, LECT NOTES COMPUT SC, V1664, P146
   Baresi L, 2007, IET SOFTW, V1, P219, DOI 10.1049/iet-sen:20070027
   BARESI L, 2005, P 3 INT C SERV ORIEN
   Baresi L, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P663
   Baresi L, 2006, COMPUTER, V39, P36, DOI 10.1109/MC.2006.362
   Berbner R, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P72
   Berger J. O., 1985, STAT DECISION THEORY, DOI DOI 10.1007/978-1-4757-4286-2
   Bettini C, 2007, WORLD WIDE WEB, V10, P503, DOI 10.1007/s11280-007-0028-7
   Bianco A., 1995, Foundations of Software Technology and Theoretical Computer Science. 15th Conference. Proceedings, P499
   Bianculli D, 2007, IW SOSWE 07, P15
   BOLCH G, 1998, QUEUING NETWORK MARK
   BOONEA B, 2010, J SYSTEMS S IN PRESS
   Calinescu R., 2009, International Journal On Advances in Intelligent Systems, V2, P38
   Calinescu R, 2009, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.2009.5070512
   Calinescu R, 2009, LECT NOTES COMPUT SC, V5503, P421
   Canfora G, 2005, 2005 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, PROCEEDINGS, P121
   Canfora G, 2008, J SYST SOFTWARE, V81, P1754, DOI 10.1016/j.jss.2007.12.792
   Canfora G, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1069
   CAO L, 2005, P INT C COMP INT SEC, P679
   Cardellini V, 2006, SCW 2006: IEEE SERVICES COMPUTING WORKSHOPS, PROCEEDINGS, P105
   Cardellini V, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P131, DOI 10.1145/1595696.1595718
   Chafle G, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P784
   Cheng B. H. C., 2008, SOFTWARE ENG SELF AD
   Ciesinski R, 2004, LECT NOTES COMPUT SC, V2925, P147
   CLARK A, 2007, 7 INT SCH FORMAL MET, P132
   Colombo M, 2006, LECT NOTES COMPUT SC, V4294, P191
   COLVIN R, 2007, P INT C INT FORM MET, P156
   Colvin R, 2008, J SYST SOFTWARE, V81, P2163, DOI 10.1016/j.jss.2008.04.035
   Dan A, 2004, IBM SYST J, V43, P136, DOI 10.1147/sj.431.0136
   Di Nitto E, 2008, AUTOMAT SOFTW ENG, V15, P313, DOI 10.1007/s10515-008-0032-x
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Epifani I, 2009, PROC INT CONF SOFTW, P111, DOI 10.1109/ICSE.2009.5070513
   Frei R, 2008, SASO 2008: SECOND IEEE INTERNATIONAL CONFERENCE ON SELF-ADAPTIVE AND SELF-ORGANIZING SYSTEMS, PROCEEDINGS, P97, DOI 10.1109/SASO.2008.20
   Frolund S., 1998, Distributed Systems Engineering, V5, P179, DOI 10.1088/0967-1846/5/4/005
   Gallotti S, 2008, LECT NOTES COMPUT SC, V5281, P119, DOI 10.1007/978-3-540-87879-7_8
   Garcia R, 2003, ACM SIGPLAN NOTICES, V38, P115, DOI 10.1145/949343.949317
   Ghezzi C, 2009, LECT NOTES COMPUT SC, V5581, P70, DOI 10.1007/978-3-642-02351-4_5
   Gilmore S., 1994, Computer Performance Evaluation. Modelling Techniques and Tools. 7th International Conference Proceedings, P353
   GRASSI V, 2004, P WORKSH ARCH DEP SY, P279
   Gruhn V, 2006, ELECTRON NOTES THEOR, V153, P117, DOI 10.1016/j.entcs.2005.10.035
   Grunske L, 2007, 2007 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P211, DOI 10.1109/ASWEC.2007.49
   Grunske L, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P183, DOI 10.1145/1595696.1595724
   Grunske L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P31, DOI 10.1145/1368088.1368094
   Guo HP, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P280
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Harel D, 2002, MASCOTS 2002: 10TH IEEE INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS, AND SIMULATION OF COMPUTER AND TELECOMMUNICATIONS SYSTEMS, PROCEEDINGS, P193, DOI 10.1109/MASCOT.2002.1167077
   Harney J., 2007, P 16 INT C WORLD WID, P1023
   Huebscher MC, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1380584.1380585
   Hull D, 2006, NUCLEIC ACIDS RES, V34, pW729, DOI 10.1093/nar/gkl320
   ITU-TS, 1999, ITU TS REC Z 120 MES
   Jansen DN, 2008, LECT NOTES COMPUT SC, V4899, P69
   JANSEN DN, 2002, P 7 INT S FORM TECHN, P355
   JANSEN DN, 2003, P 6 INT C UN MOD LAN, P76
   Juric M., 2004, Business process execution language for web services
   Karastoyanova D, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, P222, DOI 10.1109/ICWS.2009.75
   Katoen JP, 2007, LECT NOTES COMPUT SC, V4424, P87
   Keller A., 2003, Journal of Network and Systems Management, V11, P57, DOI 10.1023/A:1022445108617
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Ko JM, 2008, J SYST SOFTWARE, V81, P2079, DOI 10.1016/j.jss.2008.04.044
   Konrad S, 2005, PROC INT CONF SOFTW, P372
   KOYMANS R, 1990, REAL-TIME SYST, V2, P255, DOI 10.1007/BF01995674
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Kwiatkowska M., 2004, International Journal on Software Tools for Technology Transfer, V6, P128, DOI 10.1007/s10009-004-0140-2
   Kwiatkowska M, 2007, INFORM COMPUT, V205, P1027, DOI 10.1016/j.ic.2007.01.004
   Kwiatkowska M, 2006, FORM METHOD SYST DES, V29, P33, DOI 10.1007/s10703-006-0005-2
   Kwiatkowska M, 2006, LECT NOTES COMPUT SC, V4144, P234, DOI 10.1007/11817963_23
   Lamanna DD, 2003, NINTH IEEE WORKSHOP ON FUTURE TRENDS OF DISTRIBUTED COMPUTING SYSTEMS, PROCEEDINGS, P100, DOI 10.1109/FTDCS.2003.1204317
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   Ma Y, 2008, COMPUT NETW, V52, P1093, DOI 10.1016/j.comnet.2007.12.003
   Marzolla M., 2007, P 3 INT C QUALITY SO, P127
   MENASCE DA, 2010, 1 JOINT WOSP SIPEW I, P27
   MENASCE DA, 2008, P 7 INT WORKSH SOFTW, P13
   Menasce DA, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P422
   Menascé DA, 2007, PERFORM EVALUATION, V64, P646, DOI 10.1016/j.peva.2006.10.001
   Moser O., 2008, P 17 INT C WORLD WID, P815, DOI DOI 10.1145/1367497.1367607
   Oinn T, 2006, CONCURR COMP-PRACT E, V18, P1067, DOI 10.1002/cpe.993
   Papazoglou MP, 2007, VLDB J, V16, P389, DOI 10.1007/s00778-007-0044-3
   Presti Francesco Lo, 2007, RR0759 U ROM TOR VER
   Puterman ML., 2014, MARKOV DECISION PROC, DOI DOI 10.1002/9780470316887
   Rodrigues G, 2005, LECT NOTES COMPUT SC, V3442, P111, DOI 10.1007/978-3-540-31984-9_9
   Saffre F, 2009, COMPUT J, V52, P397, DOI 10.1093/comjnl/bxn017
   Sahai A, 2002, LECT NOTES COMPUT SC, V2506, P28
   Sato N, 2007, LECT NOTES COMPUT SC, V4749, P107
   SOBEL JM, 1996, P REFL 96 APR
   Su S, 2007, LECT NOTES COMPUT SC, V4531, P284
   SUTO T, 2006, P 14 INT S MOD AN SI, P303
   Tosic V, 2003, ICWS'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON WEB SERVICES, P375
   WANG L, 2008, P 5 EUR PERF ENG WOR, P141
   Younes HLS, 2006, INFORM COMPUT, V204, P1368, DOI 10.1016/j.ic.2006.05.002
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   Zhang CW, 2007, COMPUT COMMUN, V30, P1082, DOI 10.1016/j.comcom.2006.11.002
NR 101
TC 202
Z9 219
U1 0
U2 29
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2011
VL 37
IS 3
BP 387
EP 409
DI 10.1109/TSE.2010.92
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 768KZ
UT WOS:000290934800007
DA 2024-07-18
ER

PT J
AU Demsky, B
   Sundaramurthy, SR
AF Demsky, Brian
   Sundaramurthy, Sivaji R.
TI Bristlecone: Language Support for Robust Software Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software robustness
AB We present Bristlecone, a programming language for robust software systems. Bristlecone applications have two components: a high-level organization specification that describes how the application's conceptual operations interact and a low-level operational specification that describes the sequence of instructions that comprise an individual conceptual operation. Bristlecone uses the high-level organization specification to recover the software system from an error to a consistent state and to reason how to safely continue the software system's execution after the error. We have implemented a compiler and runtime for Bristlecone. We have evaluated this implementation on three benchmark applications: a Web crawler, a Web server, and a multiroom chat server. We developed both a Bristlecone version and a Java version of each benchmark application. We used injected failures to evaluate the robustness of each version of the application. We found that the Bristlecone versions of the benchmark applications more successfully survived the injected failures. The Bristlecone compiler contains a static analysis that operates on the organization specification to generate a set of diagrams that graphically present the task interactions in the application. We have used the analysis to help understand the high-level structure of three Bristlecone applications: a game server, a Web server, and a chat server.
C1 [Demsky, Brian; Sundaramurthy, Sivaji R.] Univ Calif Irvine, Dept Elect Engn & Comp Sci, Henry Samueli Sch Engn, Irvine, CA 92697 USA.
C3 University of California System; University of California Irvine
RP Demsky, B (corresponding author), Univ Calif Irvine, Dept Elect Engn & Comp Sci, Henry Samueli Sch Engn, 3213 Engn 3, Irvine, CA 92697 USA.
EM bdemsky@uci.edu; sivaji.raju@gmail.com
FU US National Science Foundation [CCF-0725350, CCF-0846195]; Direct For
   Computer & Info Scie & Enginr [0846195] Funding Source: National Science
   Foundation; Division of Computing and Communication Foundations
   [0846195] Funding Source: National Science Foundation
FX This is a revised and extended version of the paper that appeared in
   ECOOP 2008 [15]. This research was supported by the US National Science
   Foundation under Grant Nos. CCF-0725350 and CCF-0846195.
CR ACCETTA M, 1986, P USENIX SUMM C
   Agha GulA., 1997, J FUNCT PROGRAM, V7, P1
   AMMONS G, 2002, P 29 ANN ACM S PRINC
   ANDERSON T, 1976, P 2 INT C SOFTW ENG, P447
   [Anonymous], 2002, UCBCSD021175
   [Anonymous], P 2002 ACM SIGSOFT I
   ARMSTRONG J, 2003, THESIS SWEDISH I COM
   Avizienis A., 1995, METHODOLOGY N VERSIO
   Baker WO, 2000, BELL LABS TECH J, V5, P3, DOI 10.1002/bltj.2204
   BENTON N, 2002, P 16 EUR C OBJ OR PR
   BOYAPATI C, 2002, KORAT AUTOMATED TEST
   Candea G, 2001, EIGHTH WORKSHOP ON HOT TOPICS IN OPERATING SYSTEMS, PROCEEDINGS, P125, DOI 10.1109/HOTOS.2001.990072
   COOK WR, 2006, P 2006 INT C COORD M
   CORBETT J, 2000, P 2000 INT C SOFTW E
   DEMSKY B, 2008, P 2008 EUR C OBJ OR
   DEMSKY B, 2004, P 2 INT WORKSH DYN A
   DEMSKY B, 2005, P 2005 INT C SOFTW E
   ERNST MD, 2000, P 22 INT C SOFTW ENG
   GARLAN D, 1991, LECT NOTES COMPUT SC, V551, P31
   GELERNTER D, 1985, ACM T PROGR LANG SYS, V7, P80, DOI 10.1145/2363.2433
   GHIYA R, 1996, P 23 ACM SIGPLAN SIG
   GOODENOUGH JB, 1975, P 2 ACM SIGACT SIGPL
   Harris T, 2005, SCI COMPUT PROGRAM, V58, P325, DOI 10.1016/j.scico.2005.03.005
   HAUGK G, 1985, AT&T TECH J, V64, P1385, DOI 10.1002/j.1538-7305.1985.tb00280.x
   Hewitt C., 1978, Actors and continuous functionals
   HUANG K, 1998, P 1998 ANN IEEE WORK
   Johnston WM, 2004, ACM COMPUT SURV, V36, P1, DOI 10.1145/1013208.1013209
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Leavens G.T., 2000, OBJECT ORIENTED PROG, P105
   LISKOV B, 1987, MITLCSTR400
   MEHL M, 1999, THESIS TECHNISCHE FA
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   MOURAD S, 1987, IEEE T SOFTWARE ENG, V13, P1135, DOI 10.1109/TSE.1987.232855
   NANDA MG, 2005, P 20 ANN ACM SIGPLAN
   Pai VS, 1999, PROCEEDINGS OF THE 1999 USENIX ANNUAL TECHNICAL CONFERENCE, P199
   PLANK JS, 1995, PROCEEDINGS OF THE 1995 USENIX TECHNICAL CONFERENCE, P213
   RAMAMOORTHY CV, 1972, IEEE T COMPUT, VC 21, P137, DOI 10.1109/TC.1972.5008918
   Reuter A, 1993, T PROCESSING CONCEPT
   RINARD M, 2006, P 20 ACM INT C SUP
   SAGIV M, 1999, S PRINC PROGR LANG, P105
   SHAPIRO E, 1989, COMPUT SURV, V21, P412, DOI 10.1145/72551.72555
   Shirvani PP, 2000, IEEE T RELIAB, V49, P273, DOI 10.1109/24.914544
   SMOLKA G, 1996, P EUR WORKSH LOG ART, P251
   STROM RE, 1986, IEEE T SOFTWARE ENG, V12, P157, DOI 10.1109/TSE.1986.6312929
   Wasylkowski Andrzej, 2007, P 6 JOINT M EUROPEAN, P35, DOI [10.1145/1287624.1287632, DOI 10.1145/1287624.1287632]
   Welsh M., 2001, P 18 S OP SYST PRINC
   YOUNG JW, 1974, COMMUN ACM, V17, P530, DOI 10.1145/361147.361115
   ZHANG Y, 2005, ACM SIGOPS OPERATING, V39, P72
NR 48
TC 3
Z9 3
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2011
VL 37
IS 1
BP 4
EP 23
DI 10.1109/TSE.2010.27
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 712OS
UT WOS:000286676700002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Friedrich, G
   Fugini, M
   Mussi, E
   Pernici, B
   Tagni, G
AF Friedrich, Gerhard
   Fugini, Mariagrazia
   Mussi, Enrico
   Pernici, Barbara
   Tagni, Gaston
TI Exception Handling for Repair in Service-Based Processes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Exception handling; failures; faults; repair; self-healing processes;
   Web services; process management
ID ARCHITECTURE; ENVIRONMENT
AB This paper proposes a self-healing approach to handle exceptions in service-based processes and to repair the faulty activities with a model-based approach. In particular, a set of repair actions is defined in the process model, and repairability of the process is assessed by analyzing the process structure and the available repair actions. During execution, when an exception arises, repair plans are generated by taking into account constraints posed by the process structure, dependencies among data, and available repair actions. The paper also describes the main features of the prototype developed to validate the proposed repair approach for composed Web services; the self-healing architecture for repair handling and the experimental results are illustrated.
C1 [Friedrich, Gerhard] Alpen Adria Univ Klagenfurt, A-9020 Klagenfurt, Austria.
   [Fugini, Mariagrazia; Mussi, Enrico; Pernici, Barbara] Politecn Milan, Dipartimento Elettron & Informaz, I-20133 Milan, Italy.
   [Tagni, Gaston] Vrije Univ Amsterdam, Dept Artificial Intelligence, Fac Sci, NL-1081 HV Amsterdam, Netherlands.
C3 University of Klagenfurt; Polytechnic University of Milan; Vrije
   Universiteit Amsterdam
RP Friedrich, G (corresponding author), Alpen Adria Univ Klagenfurt, Univ Str 65-67, A-9020 Klagenfurt, Austria.
EM gerhard.friedrich@uni-klu.ac.at; fugini@elet.polimi.it;
   enrico.mussi@ymail.com; pernici@elet.polimi.it; gtagni@few.vu.nl
RI ; Pernici, Barbara/C-1035-2016
OI Fugini, Mariagrazia/0000-0002-0692-0153; Pernici,
   Barbara/0000-0002-2034-9774
FU FET project WS-Diamond IST [516933]; S-Cube European Network of
   Excellence in Software Services and Systems [FP7/2007-2013, 215483]
FX This research has been developed in the FET project WS-Diamond
   IST-516933 and within the S-Cube European Network of Excellence in
   Software Services and Systems of the European Seventh Framework
   Programme FP7/2007-2013, grant agreement 215483. The authors acknowledge
   the contribution of Vladimir Ivanchenko in the development of the
   prototype for repair plan generation.
CR Alonso G., 2004, DAT SYS APP, DOI 10.1007/978-3-662-10876-5_5
   [Anonymous], 1995, P 3 INT C COOPERATIV
   [Anonymous], 2019, Business Process Management: Concepts, Languages, Architectures
   Ardagna B, 2007, IEEE SOFTWARE, V24, P39, DOI 10.1109/MS.2007.174
   Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   Ardagna D, 2008, LECT NOTES COMPUT SC, V5281, P1, DOI 10.1007/978-3-540-87879-7_1
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Baresi L, 2007, PROC INT CONF SOFTW, P69, DOI 10.1109/ICSECOMPANION.2007.31
   Benatallah B, 2003, LECT NOTES COMPUT SC, V2681, P449
   Benatallah B, 2003, IEEE INTERNET COMPUT, V7, P40, DOI 10.1109/MIC.2003.1167338
   Benatallah B, 2006, DATA KNOWL ENG, V58, P327, DOI 10.1016/j.datak.2005.07.006
   Blair G.S., 2002, P 1 WORKSHOP SELF HE, P9, DOI 10.1145/582128.582131
   BRESINA JL, 1999, P 5 INT S ART INT RO
   Buccafurri F, 2008, DATA KNOWL ENG, V67, P463, DOI 10.1016/j.datak.2008.08.004
   Cao JN, 2005, INT CONF E BUS ENG, P48, DOI 10.1109/ICEBE.2005.65
   Cardoso J, 2003, J INTELL INF SYST, V21, P191, DOI 10.1023/A:1025542915514
   Casati F, 2000, IEEE T SOFTWARE ENG, V26, P760, DOI 10.1109/32.879813
   Casati F, 1999, INFORM SYST, V24, P255, DOI 10.1016/S0306-4379(99)00018-6
   Colombo M, 2006, LECT NOTES COMPUT SC, V4294, P191
   Console L, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P286
   CORDIER MO, 2007, P 18 INT WORKSH PRIN
   Curbera F, 2002, BUSINESS PROCESS EXE
   Davidson S, 2007, J COMPUT SYST SCI, V73, P316, DOI 10.1016/j.jcss.2006.10.022
   De Antonellis V, 2006, SOFTWARE PRACT EXPER, V36, P191, DOI 10.1002/spe.696
   Di Nitto E, 2008, AUTOMAT SOFTW ENG, V15, P313, DOI 10.1007/s10515-008-0032-x
   Dogac A., 2001, SIGECOM EXCHANGE, V2, P16
   Eiter T., 2004, ACM Transactions on Computational Logic, V5, P206, DOI 10.1145/976706.976708
   Erradi A, 2006, P IEEE I C SERV COMP, P151, DOI 10.1109/SCC.2006.97
   Fugini MG, 2009, INFORM SYST FRONT, V11, P227, DOI 10.1007/s10796-008-9086-3
   Garlan David, 2002, P 1 WORKSH SELFH HEA, P27, DOI [10.1145/582128.582134, DOI 10.1145/582128.582134]
   Ghosh D, 2007, DECIS SUPPORT SYST, V42, P2164, DOI 10.1016/j.dss.2006.06.011
   Griffith R, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P59
   GURGUIS SA, 2005, SIGSOFT SOFTW ENG NO, V30, P1
   Hamadi R., 2003, Proceedings of the 14th Australasian database conference, V17, P191
   Hamadi R, 2008, DISTRIB PARALLEL DAT, V23, P1, DOI 10.1007/s10619-007-7020-1
   Hoffmann J., 2007, P 22 NATL C ARTIFICI, P1013
   Kaabi R S., 2004, Proceedings of the 2nd international conference on Service oriented computing, P308
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   MODAFFERI S., 2006, MW4SOC '06: Proceedings of the 1st workshop on Middleware for Service Oriented Computing (MW4SOC 2006), P48
   Nie ZX, 2009, PROCEEDINGS OF THE 8TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE, P666, DOI 10.1109/ICIS.2009.56
   Papazoglou MP, 2007, COMPUTER, V40, P38, DOI 10.1109/MC.2007.400
   Pernici B, 2007, ECOWS 07: PROCEEDING OF THE 5TH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P119, DOI 10.1109/ECOWS.2007.13
   Reichert M, 1998, J INTELL INF SYST, V10, P93, DOI 10.1023/A:1008604709862
   RUSSEL N, 2006, WORKFLOW CONTROL FLO
   Russell N, 2006, LECT NOTES COMPUT SC, V4001, P288, DOI 10.1007/11767138_20
   SABOORI A, 2005, P 2005 ICSC C COMP I
   Schäfer M, 2008, ACM T WEB, V2, DOI 10.1145/1346237.1346242
   Shin ME, 2005, SCI COMPUT PROGRAM, V57, P27, DOI 10.1016/j.scico.2004.10.003
   van Splunter S, 2005, 2005 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE, PROCEEDINGS, P495, DOI 10.1109/WI.2005.145
   Vanhatalo J, 2008, LECT NOTES COMPUT SC, V5240, P100, DOI 10.1007/978-3-540-85758-7_10
   Vanhatalo J, 2007, LECT NOTES COMPUT SC, V4749, P43
   VANNIEUWENBORGH D, 2007, P INT C LOG PROGR NO, P214
   VERMA K, 2005, P INT C SERV OR COMP, P1
   Wang GJ, 2006, IEEE T RELIAB, V55, P118, DOI 10.1109/TR.2005.863808
   Wang HH, 2008, IEEE INT C ENG COMP, P111, DOI 10.1109/ICECCS.2008.25
   *WS DIAM TEAM, 2009, YOUR SERV OV RES PRO
   *WS DIAM TEAM, 2007, P E CHALL C
   *WS DIAMOND EUR PR, 2006, D31 WSDIAMOND EUR PR
   Zulkernine M, 2005, J SYST SOFTWARE, V74, P15, DOI 10.1016/j.jss.2003.05.006
   2010, WEB SERVICE DIAGNOSI
NR 60
TC 65
Z9 69
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2010
VL 36
IS 2
BP 198
EP 215
DI 10.1109/TSE.2010.8
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 574ZH
UT WOS:000276032300006
DA 2024-07-18
ER

PT J
AU Moha, N
   Guéhéneuc, YG
   Duchien, L
   Le Meur, AF
AF Moha, Naouel
   Gueheneuc, Yann-Gael
   Duchien, Laurence
   Le Meur, Anne-Francoise
TI DECOR: A Method for the Specification and Detection of Code and Design
   Smells
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Antipatterns; design smells; code smells; specification; metamodeling;
   detection; Java
AB Code and design smells are poor solutions to recurring implementation and design problems. They may hinder the evolution of a system by making it hard for software engineers to carry out changes. We propose three contributions to the research field related to code and design smells: 1) DECOR, a method that embodies and defines all the steps necessary for the specification and detection of code and design smells, 2) DETEX, a detection technique that instantiates this method, and 3) an empirical validation in terms of precision and recall of DETEX. The originality of DETEX stems from the ability for software engineers to specify smells at a high level of abstraction using a consistent vocabulary and domain-specific language for automatically generating detection algorithms. Using DETEX, we specify four well-known design smells: the antipatterns Blob, Functional Decomposition, Spaghetti Code, and Swiss Army Knife, and their 15 underlying code smells, and we automatically generate their detection algorithms. We apply and validate the detection algorithms in terms of precision and recall on XERCES v2.7.0, and discuss the precision of these algorithms on 11 open-source systems.
C1 [Moha, Naouel] Univ Rennes 1, IRISA, Triskell Team, F-35042 Rennes, France.
   [Gueheneuc, Yann-Gael] Ecole Polytech, Dept Genie Informat & Genie Logiciel, Montreal, PQ H3C 3A7, Canada.
   [Duchien, Laurence; Le Meur, Anne-Francoise] Lille Nord Europe, INRIA, F-59650 Villeneuve Dascq, France.
C3 Universite de Rennes; Universite de Montreal; Polytechnique Montreal;
   Inria
RP Moha, N (corresponding author), Univ Rennes 1, IRISA, Triskell Team, Room F233,INRIA Rennes Bretagne Atlantique Campus, F-35042 Rennes, France.
EM moha@irisa.fr; yann-gael.gueheneuc@polymtl.ca;
   Laurence.Duchien@inria.fr; Le_Meur@inria.fr
RI Guéhéneuc, Yann-Gaël/K-9371-2019
FU NSERC Discovery; Universite de Montreal; FQRNT (Fonds Quebecois de la
   Recherche sur la Nature et les Technologies; Gouvernement du Quebec
FX The authors are grateful to G. Antoniol, K. Mens, and D. Thomas for
   their comments on earlier versions of this paper. They thank M. Amine El
   Haimer and N. Tajeddine for applying the method and detection technique
   on several smells. They also thank D. Huynh and P. Leduc for their help
   with the implementation of parts of the SMELLFW framework. Finally, they
   express their gratitude to the developers who confirmed their findings
   in the open-source systems. Y.-G. Gueheneuc was partially supported by
   an NSERC Discovery Grant. N. Moha was supported by the Universite de
   Montreal and the FQRNT (Fonds Quebecois de la Recherche sur la Nature et
   les Technologies), a funding agency of the Gouvernement du Quebec.
CR ALBINAMIOT H, 2002, P ACT 8 C LANG MOD O, V8, P41
   Alikacem El Hachemi., 2006, Proceedings of the 16th International Workshop on Software Measurement and Metrik Kongress (IWSM/MetriKon), P383
   Allen R., 1997, ACM Transactions on Software Engineering and Methodology, V6, P213, DOI 10.1145/258077.258078
   [Anonymous], P 20 INT C AUT SOFTW
   [Anonymous], 2014, Software engineering: a practitioner's approach
   Beyer D, 2005, IEEE T SOFTWARE ENG, V31, P137, DOI 10.1109/TSE.2005.23
   Beyer Dirk, 2007, International Journal on Software Tools for Technology Transfer, V9, P505, DOI 10.1007/s10009-007-0044-z
   BORODAY S, 2005, P 3 INT WORKSH DYN A, P1
   BRANT J, 1997, SMALLLINT
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Bruno G, 2007, DEXA 2007: 18TH INTERNATIONAL CONFERENCE ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P387, DOI 10.1109/DEXA.2007.68
   Chambers J.M., 1983, Graphical Methods for Data Analysis
   Chen H., 2002, P 9 ACM C COMPUTER C, P235
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CONSEL C, 1998, LECT NOTES COMPUTER, P170
   Dashofy EM, 2005, ACM T SOFTW ENG METH, V14, P199, DOI 10.1145/1061254.1061258
   DEMEYER S, 2001, FAMIX 2 1 FAMOOS INF, P1
   DETLEFS DL, 1996, P 1 FORM METH SOFTW
   Dhambri K, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P279
   Dudney B., 2003, J2EE_AntiPatterns
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Frakes WB., 1992, Information retrieval: Data structures and algorithms
   Gamma Erich., 1994, DESIGN PATTERNS
   GARLAN D, 1995, IEEE SOFTWARE, V12, P17, DOI 10.1109/52.469757
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Guéhéneuc YG, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P172, DOI 10.1109/WCRE.2004.21
   Guéhéneuc YG, 2001, TOOLS, V39, P296, DOI 10.1109/TOOLS.2001.941682
   GUEHENEUC YG, 2004, P 19 C OBJ OR PROGR, P301
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Jackson D., 1995, ACM Transactions on Software Engineering and Methodology, V4, P109, DOI 10.1145/210134.210135
   JORWEKAR S, 2007, P 33 INT C VER LARG, P1263
   Kiczales G., 1991, The Art of the Metaobject Protocol
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Mantyla M., 2003, THESIS HELSINKI U TE
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Marinescu R., 2002, THESIS POLITEHNICA U
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   MOHA N, 2008, P 11 INT C FUND APPR
   Mohan N, 2006, IEEE CUST INTEGR CIR, P297
   Muller H., 2000, Proceedings of the Future of Software Engineering, P47, DOI [10.1145/336512.336526, DOI 10.1145/336512.336526]
   Munro M.J, 2005, P 11 INT SOFTW METR
   Murphy G. C., 1996, ACM Transactions on Software Engineering and Methodology, V5, P262, DOI 10.1145/234426.234441
   NG JKY, 2007, P 3 INT WORKSH PROGR, P34
   Patcha A, 2007, COMPUT NETW, V51, P3448, DOI 10.1016/j.comnet.2007.02.001
   Prieto-Diaz R., 1990, SIGSOFT Software Engineering Notes, V15, P47, DOI 10.1145/382296.382703
   REIMER D, 2004, P INT S SOFTW TEST A, P243
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   SMITH CU, 2002, PERFORMANCE SOLUTION
   Tate BruceA., 2002, BITTER JAVA
   Travassos G. H., 1999, SIGPLAN Notices, V34, P47, DOI 10.1145/320385.320389
   van Emden E., 2002, P 9 WORK C REV ENG O
   Van Rompaey B, 2007, IEEE T SOFTWARE ENG, V33, P800, DOI 10.1109/TSE.2007.70745
   Wake W.C., 2003, Refactoring Workbook, V1st
   Webster BruceF., 1995, PITFALLS OBJECT ORIE
   Winter A, 2002, LECT NOTES COMPUT SC, V2269, P324
   Wirfs-Brock Rebecca., 2002, Object Design: Roles, Responsibilities and Collaborations
   Wuyts R, 1998, TOOLS 26 - TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES - PROCEEDINGS, P112, DOI 10.1109/TOOLS.1998.711007
   2010, DECOR
   2006, FXCOP
   2008, ANALYST4J
   [No title captured]
NR 62
TC 459
Z9 512
U1 0
U2 24
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2010
VL 36
IS 1
BP 20
EP 36
DI 10.1109/TSE.2009.50
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 548TI
UT WOS:000273988900004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mäntylä, MV
   Lassenius, C
AF Mantyla, Mika V.
   Lassenius, Casper
TI What Types of Defects Are Really Discovered in Code Reviews?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Code inspections and walkthroughs; enhancement; extensibility;
   maintainability; restructuring
ID SOFTWARE; INSPECTION; QUALITY; METRICS; DESIGN; GUIDELINES; COMPLEXITY
AB Research on code reviews has often focused on defect counts instead of defect types, which offers an imperfect view of code review benefits. In this paper, we classified the defects of nine industrial (C/C++) and 23 student (Java) code reviews, detecting 388 and 371 defects, respectively. First, we discovered that 75 percent of defects found during the review do not affect the visible functionality of the software. Instead, these defects improved software evolvability by making it easier to understand and modify. Second, we created a defect classification consisting of functional and evolvability defects. The evolvability defect classification is based on the defect types found in this study, but, for the functional defects, we studied and compared existing functional defect classifications. The classification can be useful for assigning code review roles, creating checklists, assessing software evolvability, and building software engineering tools. We conclude that, in addition to functional defects, code reviews find many evolvability defects and, thus, offer additional benefits over execution-based quality assurance methods that cannot detect evolvability defects. We suggest that code reviews may be most valuable for software products with long life cycles as the value of discovering evolvability defects in them is greater than for short life cycle systems.
C1 [Mantyla, Mika V.; Lassenius, Casper] Aalto Univ, Helsinki 02015, Finland.
C3 Aalto University
RP Mäntylä, MV (corresponding author), Aalto Univ, POB 9210, Helsinki 02015, Finland.
EM mika.mantyla@tkk.fi; casper.lassenius@tkk.fi
RI Mäntylä, Mika V/E-7644-2012; Lassenius, Casper/A-4339-2013
OI Mantyla, Mika/0000-0002-2841-5879; Lassenius, Casper/0000-0003-4192-7024
FU Finnish Funding Agency for Technology and Innovation (TEKES); Finnish
   Graduate School on Software and Systems Engineering (SOSE)
FX This research has been supported by the Finnish Funding Agency for
   Technology and Innovation (TEKES) and by the Finnish Graduate School on
   Software and Systems Engineering (SOSE). The authors would like to thank
   Juha Itkonen, Jari Vanhanen, Kristian Rautiainen, Jarno Vahaniitty,
   Maria Paasivaara, and Arttu Piri for their valuable contributions to the
   research presented in this paper. The authors would also like to thank
   the other members of their research group who improved this paper
   through their internal paper review meetings. The authors express their
   gratitude toward the anonymous reviewers and the associate editor, who
   provided many helpful suggestions for improving this paper. This
   research would have not been possible without the case company, which
   prefers to remain anonymous, and the students participating in the
   Software Testing course.
CR *AFOTEC, 1996, SOFTW MAINT EV GUID
   [Anonymous], 1990, IEEE STANDARD GLOSSA
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 10441993 IEEE
   ARNOLD RS, 1989, P IEEE, V77, P607, DOI 10.1109/5.24146
   Aurum A, 2002, SOFTW TEST VERIF REL, V12, P133, DOI 10.1002/stvr.243
   Bandi RK, 2003, IEEE T SOFTWARE ENG, V29, P77, DOI 10.1109/TSE.2003.1166590
   Banker R. D., 1993, Journal of Operations Management, V11, P81, DOI 10.1016/0272-6963(93)90035-N
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   Beck K., 2000, EXTREME PROGRAMMING
   Beck Kent L., 2003, Test Driven Development By Example
   Berling T, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P226, DOI 10.1109/METRIC.2003.1232470
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P513, DOI 10.1109/32.926174
   Briand LC, 2000, IEEE T SOFTWARE ENG, V26, P518, DOI 10.1109/32.852741
   Burnstein I., 2002, Practical Software Testing
   Campbell DT., 1963, EXPT QUASIEXPERIMENT
   CHAAR JK, 1993, IEEE T SOFTWARE ENG, V19, P1055, DOI 10.1109/32.256853
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   CLEMENTS P., 2002, EVALUATING SOFTWARE
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Cunningham W., 1993, OOPS MESSENGER, V4, P29, DOI DOI 10.1145/157710.157715
   Cusumano M.A., 1995, MICROSOFT SECRETS
   Darcy DP, 2005, IEEE T SOFTWARE ENG, V31, P982, DOI 10.1109/TSE.2005.130
   El Emam K, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P322, DOI 10.1109/ISSRE.1998.730897
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Fowler M., 2000, Refactoring: Improving the Design of Existing Code
   GARVIN DA, 1984, SLOAN MANAGE REV, V26, P25
   Gilb Tom, 1993, Software inspections
   GORLA N, 1990, IEEE T SOFTWARE ENG, V16, P223, DOI 10.1109/32.44385
   Grady RB., 1992, PRACTICAL SOFTWARE M
   Humphrey W S, 1995, A discipline for software engineering
   Jamieson S, 2004, MED EDUC, V38, P1217, DOI 10.1111/j.1365-2929.2004.02012.x
   KAMSTIES E, 1996, P 5 EUR SOFTW ENG C, P362
   Kaner C., 1999, TESTING COMPUTER SOF
   Kazman R., 2000, Tech. Rep. CMU/SEI-2000-TR-004
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   KNAPP TR, 1990, NURS RES, V39, P121
   Laitenberger O., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P312, DOI 10.1109/METRIC.1999.809752
   Laitenberger O, 2000, J SYST SOFTWARE, V50, P5, DOI 10.1016/S0164-1212(99)00073-4
   Laitenberger O, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P237, DOI 10.1109/ISSRE.1998.730887
   LaToza T.D., 2006, P INTERNATION C SOFT, P492, DOI [10.1145/1134285.1134355, DOI 10.1145/1134285.1134355]
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Linnaeus C., 1758, Systema naturae per regna tria naturae, secundum classes, ordines, genera, species, cum characteribus, differentiis, synonymis, locis, V10
   Maldonado JC, 2006, EMPIR SOFTW ENG, V11, P119, DOI 10.1007/s10664-006-5967-6
   Mantyla M.V., 2006, P 2006 ACMIEEE INT S, P297
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   MIARA RJ, 1983, COMMUN ACM, V26, P861, DOI 10.1145/182.358437
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   MOILANEN T, 1994, KVALITATIVIISEN AINE
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   MYERS GJ, 1978, COMMUN ACM, V21, P760, DOI 10.1145/359588.359602
   NIINILUOTO I, 1980, JOHDATUS TIETEENFILO, P171
   Oman P. W., 1990, Communications of the ACM, V33, P506, DOI 10.1145/78607.78611
   ONEILL D, 2002, NATL SOFTWARE QUALIT
   Parnas D. L., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P132
   PORTON R, 1995, CINEASTE, V21, P6
   Regnell B., 2000, Empirical Software Engineering, V5, P331, DOI 10.1023/A:1009848320066
   ROMBACH HD, 1987, IEEE T SOFTWARE ENG, V13, P344, DOI 10.1109/TSE.1987.233165
   Runeson P, 2006, IEEE SOFTWARE, V23, P82, DOI 10.1109/MS.2006.89
   Runeson P., 1998, Empirical Software Engineering, V3, P381, DOI 10.1023/A:1009728205264
   RUSSELL GW, 1991, IEEE SOFTWARE, V8, P25, DOI 10.1109/52.62929
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Siy H, 2001, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2001.972741
   So SS, 2002, SOFTW TEST VERIF REL, V12, P155, DOI 10.1002/stvr.248
   TENNY T, 1988, IEEE T SOFTWARE ENG, V14, P1271, DOI 10.1109/32.6171
   Wiegers K., 2002, PEER REV SOFTWARE
   Wood M, 1997, LECT NOTES COMPUT SC, V1301, P262, DOI 10.1145/267896.267915
   Xing ZC, 2006, PROC IEEE INT CONF S, P458
   Zhou YM, 2006, IEEE T SOFTWARE ENG, V32, P771, DOI 10.1109/TSE.2006.102
NR 73
TC 117
Z9 131
U1 1
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2009
VL 35
IS 3
BP 430
EP 448
DI 10.1109/TSE.2008.71
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 450NL
UT WOS:000266408000007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yang, B
   Hu, HJ
   Jia, LX
AF Yang, Bo
   Hu, Huajun
   Jia, Lixin
TI A Study of Uncertainty in Software Cost and Its Impact on Optimal
   Software Release Time
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cost estimation; nonhomogeneous Poisson process (NHPP); reliability;
   software release; time estimation
ID RELIABILITY ANALYSIS; MODEL; IMPERFECT; POLICIES; SYSTEMS; SENSITIVITY;
   ALLOCATION; EFFICIENCY; WARRANTY
AB For a software development project, management often faces the dilemma of when to stop testing the software and release it for operation, which requires careful decision making as it has great impact on both software reliability and project cost. In most existing research on the optimal software release problem, the cost considered was the Expected Cost (EC) of the project. However, what concerns management is the Actual Cost (AC) of the project rather than the EC. Treatment (such as minimization) of the EC may not ensure the desired low level of the AC due to the uncertainty (variability) involved in the AC. In this paper, we study the uncertainty in software cost and its impact on optimal software release time in detail. The uncertainty is quantified by the variance of the AC and several risk functions. A risk-control approach to the optimal software release problem is proposed. New formulations of the problem which are extensions of current formulations are developed and solution procedures are established. Several examples are presented. Results reveal that it seems crucial to take into account the uncertainty in software cost in the optimal software release problem; otherwise, unsafe decisions may be reached which could be a false dawn to management.
C1 [Yang, Bo] Univ Elect Sci & Technol China, Sch Mechatron Engn, Dept Ind Engn, Chengdu 610054, Sichuan, Peoples R China.
   [Hu, Huajun] Univ Elect Sci & Technol China, Sch Elect Engn, Dept Informat Engn, Chengdu 610054, Sichuan, Peoples R China.
   [Jia, Lixin] Xian Jiaotong Univ, Sch Elect Engn, Xian 710049, Shaanxi, Peoples R China.
C3 University of Electronic Science & Technology of China; University of
   Electronic Science & Technology of China; Xi'an Jiaotong University
RP Yang, B (corresponding author), Univ Elect Sci & Technol China, Sch Mechatron Engn, Dept Ind Engn, 4,Sect 2,N Jian She Rd, Chengdu 610054, Sichuan, Peoples R China.
EM yangbo@uestc.edu.cn; huhuajun@uestc.edu.cn; lxjia@mail.xjtu.edu.cn
RI Liu, Chenyu/KBQ-8899-2024
OI Yang, Bo/0000-0003-0805-7928
FU National High Technology Research and Development Program of China
   [2006AA04Z180]; Scientific and Technical Supporting Programs, China
   [07GG012-002]
FX This work was supported by the National High Technology Research and
   Development Program of China ( 863 Program) under Contract Number
   2006AA04Z180 and the Sichuan Provincial Project of Scientific and
   Technical Supporting Programs, China, under Contract Number 07GG012-002.
CR Boland PJ, 2007, STAT PROBABIL LETT, V77, P1176, DOI 10.1016/j.spl.2007.03.004
   Boland PJ, 2003, IEEE T RELIAB, V52, P168, DOI 10.1109/TR.2003.813166
   Chang YC, 2005, APPL MATH COMPUT, V171, P746, DOI 10.1016/j.amc.2005.01.084
   FARR W, 1996, HDB SOFTWARE RELIABI, pCH3
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   Hou RH, 1997, IEEE T COMPUT, V46, P216, DOI 10.1109/12.565602
   Huang CY, 2005, IEEE T RELIAB, V54, P583, DOI 10.1109/TR.2005.859230
   Huang CY, 2005, IEEE T RELIAB, V54, P592, DOI 10.1109/TR.2005.858099
   Huang CY, 2005, J SYST SOFTWARE, V77, P139, DOI 10.1016/j.jss.2004.10.014
   Jorgensen M, 2005, IEEE T SOFTWARE ENG, V31, P942, DOI 10.1109/TSE.2005.128
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P209, DOI 10.1109/TSE.2004.1274041
   Juran J.M., 1988, QUALITY CONTROL HDB, V4th, p26.1
   Kimura M, 1999, RELIAB ENG SYST SAFE, V66, P49, DOI 10.1016/S0951-8320(99)00020-4
   KOCH HS, 1983, IEEE T SOFTWARE ENG, V9, P323, DOI 10.1109/TSE.1983.236868
   LEUNG YW, 1992, J SYST SOFTWARE, V17, P233, DOI 10.1016/0164-1212(92)90112-W
   Liu AH, 2007, PAEDIATR PERINAT EP, V21, P2, DOI 10.1111/j.1365-3016.2007.00878.x
   Morali N, 2003, NAV RES LOG, V50, P88, DOI 10.1002/nav.10048
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   OHBA M, 1984, IBM J RES DEV, V28, P428, DOI 10.1147/rd.284.0428
   Okumoto K., 1980, Journal of Systems and Software, V1, P315, DOI 10.1016/0164-1212(79)90033-5
   Pham H, 1999, IEEE T COMPUT, V48, P71, DOI 10.1109/12.743412
   Pham H, 2003, EUR J OPER RES, V149, P475, DOI 10.1016/S0377-2217(02)00498-8
   Pham H, 1996, INT J SYST SCI, V27, P455, DOI 10.1080/00207729608929237
   ROSS SM, 1985, IEEE T SOFTWARE ENG, V11, P1472, DOI 10.1109/TSE.1985.231891
   SINGPURWALLA ND, 1991, IEEE T SOFTWARE ENG, V17, P313, DOI 10.1109/32.90431
   Slaughter SA, 1998, COMMUN ACM, V41, P67, DOI 10.1145/280324.280335
   Xie M., 2004, Opsearch, V41, P250
   Xie M, 2003, IEEE T SOFTWARE ENG, V29, P471, DOI 10.1109/TSE.2003.1199075
   Xie M, 1998, J SYST SOFTWARE, V44, P163, DOI 10.1016/S0164-1212(98)10053-5
   Xie M., 1991, SOFTWARE RELIABILITY
   XIE M, 2001, INT J QUALITY RELIAB, V18, P854
   YAMADA S, 1984, IEEE T RELIAB, V33, P289, DOI 10.1109/TR.1984.5221826
   YAMADA S, 1995, MATH COMPUT MODEL, V22, P295, DOI 10.1016/0895-7177(95)00207-I
   YAMADA S, 1985, IEEE T RELIAB, V34, P422, DOI 10.1109/TR.1985.5222222
   Yang B, 2000, RELIAB ENG SYST SAFE, V70, P323, DOI 10.1016/S0951-8320(00)00069-7
   YANG B, 2008, P 54 ANN REL MAINT S, P393
NR 36
TC 42
Z9 45
U1 1
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2008
VL 34
IS 6
BP 813
EP 825
DI 10.1109/TSE.2008.47
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 376HR
UT WOS:000261175200007
DA 2024-07-18
ER

PT J
AU Stürmer, I
   Conrad, M
   Dörr, H
   Pepper, P
AF Stuermer, Ingo
   Conrad, Mirko
   Doerr, Heiko
   Pepper, Peter
TI Systematic testing of model-based code generators
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE testing and debugging
AB Unlike for conventional compilers for imperative programming languages such as C or ADA, no established methods for safeguarding artifacts generated by model-based code generators exist despite progress in the field of formal verification. Several test approaches dominate the engineering practice. This paper describes a general and tool-independent test architecture for code generators used in model-based development. We evaluate the effectiveness of our test approach by means of testing optimizations performed by the TargetLink code generator, a widely accepted and complex development tool used in automotive model-based development.
C1 Model Engn Solut, D-10117 Berlin, Germany.
   Mathworks GmbH, D-85737 Ismaning, Germany.
   Carmeq GmbH, D-10587 Berlin, Germany.
   Tech Univ Berlin, Compiler Construct & Programming Languages Grp, D-10587 Berlin, Germany.
C3 MathWorks; Technical University of Berlin
RP Stürmer, I (corresponding author), Model Engn Solut, Friedrichstr 50, D-10117 Berlin, Germany.
EM Stuermer@model-engineers.com; mirko.conrad@mathworks.com;
   heiko.doerr@carmeq.com; pepper@cs.tu-berlin.de
RI Zou, Ying/KLC-9380-2024
OI Conrad, Mirko/0000-0003-3221-6503
CR *AD CONF ASS AUTH, 2002, ADA CONF ASS TEST SU
   ALDRICH WJ, 2002, P AIAA MODELING SIMU
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 1997, Handbook of Graph Grammars and Computing by Graph Transformation
   [Anonymous], 2000, P 8 EUR INT C SOFTW
   [Anonymous], 1999, 61508 IEC
   *AV INC, 1992, RTCADO178B
   BALDAN P, 2004, P INT C GRAPH TRANSF, P194
   Baresel A, 2003, P 11 EUR INT C SOFTW
   Bauer J. A., 1979, Proceedings of the 4th International Conference on Software Engineering, P425
   BAZZICHI F, 1982, IEEE T SOFTWARE ENG, V8, P343, DOI 10.1109/TSE.1982.235428
   BEINE M, 2004, P SOC AUT ENG WORLD
   Boujarwah AS, 1999, INFORM SOFTWARE TECH, V41, P15, DOI 10.1016/S0950-5849(98)00075-5
   Boujarwah AS, 1997, INFORM SOFTWARE TECH, V39, P617, DOI 10.1016/S0950-5849(97)00017-7
   Burnard A, 2004, P INT AUT C IAC, P71
   CELENTANO A, 1980, SOFTWARE PRACT EXPER, V10, P897, DOI 10.1002/spe.4380101104
   CONRAD M, 2003, TESTING EMBEDDED SOF
   CONRAD M, 2006, P SOC AUT ENG INT C
   Craig R.D., 2002, SYSTEMATIC SOFTWARE
   DAVE MA, 2003, ACM SIGSOFT SOFTW NO, V28
   *DSPACE, 2004, TARG PROD COD GEN GU
   EDWARDS PD, 1999, P VEH EL SYST EUR C
   Glesner S, 2003, J UNIVERS COMPUT SCI, V9, P191
   GOOS G, 2000, LNCS, V1912, P177
   Grochtmann M., 1993, Software Testing, Verification and Reliability, V3, P63, DOI 10.1002/stvr.4370030203
   Hamon G, 2004, LECT NOTES COMPUT SC, V2984, P229
   HANFORD KV, 1970, IBM SYST J, V9, P242, DOI 10.1147/sj.94.0242
   HANSELMANN H, 1999, P EMB INT C MAR
   HARM J, 2000, P 3 WORKSH ATTR GRAM
   HOMER W, 1989, SOFTWARE PRACT EXPER, V19, P53, DOI 10.1002/spe.4380190106
   *ISO WD, 2005, 26262 ISO WD
   KAner C., 2001, LESSONS LEARNED SOFT
   Karsai G, 2003, J UNIVERS COMPUT SCI, V9, P1296
   Lamberg K., 2005, J PASSENGER CARS ELE, V7, P132
   LAPSLEYP, 1997, DSP PROCESSOR FUNDAM
   Marriott K, 1997, J VISUAL LANG COMPUT, V8, P375, DOI 10.1006/jvlc.1997.0053
   *MATHWORKS, 2004, SIM STAT US GUID
   *MATHWORKS, 2004, REALT WORKSH EMB COD
   Muchnick S., 1997, ADV COMPILER DESIGN
   Myers Glenford J., 2011, The Art of Software Testing
   Necula G.C., 2000, P ACM SIGPLAN C PROG
   Purdom P., 1972, BIT (Nordisk Tidskrift for Informationsbehandling), V12, P366, DOI 10.1007/BF01932308
   *REACT SYST, 2002, REACT US GUID
   SANTHANAM V, 2002, P 2002 ANN ACM SIGAD, P40
   Scott D.S., 1970, P 4 ANN PRINC C INF, P169
   SIRER EG, 1999, P 2 C DOM SPEC LANG
   Stürmer I, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P286, DOI 10.1109/ASE.2003.1240322
   STURMER I, 2006, THESIS
   STURMER I, UNPUB SOFTWARE SYSTE
   STURMER L, 2005, P 2 INT ICSE WORKSH
   THOMSEN T, 2003, P SOC ATU ENG WORLD
   Toeppe S, 1999, P 18 AIAA IEEE SAE D
   Tonndorf M, 1999, ADA LETTERS, V19, P89
   Ueda T., 2004, P 30 INT C TRANSP EL, P439
   WEGENER J, 2001, INFORMATION SOFTWARE, V43, P851
   Zelenov SV, 2003, PROGRAM COMPUT SOFT+, V29, P104, DOI 10.1023/A:1022904917707
   Zuck L, 2003, J UNIVERS COMPUT SCI, V9, P223
   2005, NULLSTONE C
NR 58
TC 34
Z9 39
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2007
VL 33
IS 9
BP 622
EP 634
DI 10.1109/TSE.2007.70708
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 202EO
UT WOS:000248885000004
DA 2024-07-18
ER

PT J
AU van Ommering, R
AF van Ommering, R
TI Software reuse in product populations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 8th International Conference on Software Reuse
CY JUL 05-09, 2004
CL Madrid, SPAIN
DE software reuse; software components; component-based software
   architectures; software product families; software product lines
AB Consumer products are becoming increasingly software intensive. The software complexity of individual products grows, while the diversity of products increases and the lead time must decrease. Software reuse is the answer to this, not only within a family but also between families of consumer products. We have devised an approach based upon a software component technology to enable reuse. This paper describes that approach, and it zooms in on two important aspects of component-based development. One aspect concerns the prediction of system properties from properties of components, which we illustrate using thread synchronization as example. The other aspect concerns branching of our software in our configuration management systems, where our analysis leads to the discovery that we may be constantly rewriting our own code and to the definition of the turn-over factor to quantify this. We end this paper with a brief validation of our approach.
C1 Philips Res Labs, NL-5656 AA Eindhoven, Netherlands.
C3 Philips; Philips Research
RP Philips Res Labs, Prof Holstlaan 4, NL-5656 AA Eindhoven, Netherlands.
EM Rob.van.Ommering@philips.com
CR BOSCH J, 2004, SEM SUCC REUS SYST V
   BOSCH J, 2000, P 3 INT WORKSH DEV E
   BOURGONJON R, 1995, P INT C ENG COMPL CO
   Clements P., 2002, Software product lines
   Fioukov AV, 2002, EUROMICRO CONF PROC, P33, DOI 10.1109/EURMIC.2002.1046130
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   *GIMP, 2004, GNU IM MAN PROGR
   Jacobson I., 1997, Software Reuse: Architecture, Process and Organization for Business Success
   Magee J., 1995, P 5 EUROPEAN SOFTWAR, P137
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   MULLER G, 2004, BALANCING GENERICITY
   Pronk BJ, 2000, KLUWER INT SER ENG C, V576, P331
   Toft P, 2000, KLUWER INT SER ENG C, V576, P111
   van Ommering R, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P255, DOI 10.1109/ICSE.2002.1007973
   van Ommering R, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P55, DOI 10.1109/WICSA.2001.948407
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   VANOMMERING R, 2004, THESIS RIJKSUNIVERSI
   WEISS D, 2004, P 8 INT C SOFTW REUS
   WIJNSTRA JG, 2004, THESIS RIJKSUNIVERSI
   WILLIAMS T, 1990, INHERITANCE WHAT IT
NR 20
TC 34
Z9 35
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2005
VL 31
IS 7
BP 537
EP 550
DI 10.1109/TSE.2005.84
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 951EW
UT WOS:000230912900002
DA 2024-07-18
ER

PT J
AU Jorgensen, M
   Molokken-Ostvold, K
AF Jorgensen, M
   Molokken-Ostvold, K
TI Reasons for software effort estimation error: Impact of respondent role,
   information collection approach, and data analysis method
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE cost estimation; review and evaluation; performance evaluation
AB This study aims to improve analyses of why errors occur in software effort estimation. Within one software development company, we collected information about estimation errors through: 1) interviews with employees in different roles who are responsible for estimation, 2) estimation experience reports from 68 completed projects, and 3) statistical analysis of relations between characteristics of the 68 completed projects and estimation error. We found that the role of the respondents, the data collection approach, and the type of analysis had an important impact on the reasons given for estimation error. We found, for example, a strong tendency to perceive factors outside the respondents' own control as important reasons for inaccurate estimates. Reasons given for accurate estimates, on the other hand, typically cited factors that were within the respondents' own control and were determined by the estimators' skill or experience. This bias in types of reason means that the collection only of project managers' viewpoints will not yield balanced models of reasons for estimation error. Unfortunately, previous studies on reasons for estimation error have tended to collect information from project managers only. We recommend that software companies combine estimation error information from in-depth interviews with stakeholders in all relevant roles, estimation experience reports, and results from statistical analyses of project characteristics.
C1 Simula Res Lab, N-1325 Lysaker, Norway.
RP Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
EM magne.jorgensen@simula.no; kjetilmo@simula.no
RI Jorgensen, Magne/H-4402-2016
CR Argyris C., 1993, ORG LEARNING
   BREHMER B, 1980, ACTA PSYCHOL, V45, P223, DOI 10.1016/0001-6918(80)90034-7
   BRICKMAN P, 1975, J PERS SOC PSYCHOL, V32, P1060, DOI 10.1037/0022-3514.32.6.1060
   Chan A.P.C., 1997, AUSTR I OFQUANTITY S, V1 No, P55
   Flyvbjerg B, 2002, J AM PLANN ASSOC, V68, P279, DOI 10.1080/01944360208976273
   Gray A. R., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P216, DOI 10.1109/METRIC.1999.809743
   Hammond K.R., 1996, Human judgement and social policy : Irreducible uncertainty, inevitable error, unavoidable injustice
   Johnson C., 2002, COGNITION TECHNOLOGY, V4, P65, DOI [10.1007/s101110200005, DOI 10.1007/S101110200005]
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P209, DOI 10.1109/TSE.2004.1274041
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   JORGENSEN M, 2004, EMPIRICAL SOFTWARE E, V9
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   LEDERER AL, 1993, J INF TECHNOL-UK, V8, P22, DOI 10.1057/jit.1993.4
   LEDERER AL, 1995, J SYST SOFTWARE, V31, P125, DOI 10.1016/0164-1212(94)00092-2
   LEDERER AL, 1991, ACM T COMPUTER PERSO, V13, P47
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   Pearl Judea, 2000, MODELS REASONING INF, V19, DOI DOI 10.1017/CBO9780511803161
   Phan Dien., 1998, COMPUTERWORLD, V22, P95
   SUBRAMANIAN GH, 1995, J SYST SOFTWARE, V31, P135, DOI 10.1016/0164-1212(94)00093-3
   Tan HT, 1997, J BEHAV DECIS MAKING, V10, P315, DOI 10.1002/(SICI)1099-0771(199712)10:4<315::AID-BDM257>3.0.CO;2-L
   THAMBAIN H, 1986, PROJECT MANAGEME JUN, P75
   VANGENUCHTEN M, 1991, IEEE T SOFTWARE ENG, V17, P582, DOI 10.1109/32.87283
NR 22
TC 67
Z9 72
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2004
VL 30
IS 12
BP 993
EP 1007
DI 10.1109/TSE.2004.103
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881RI
UT WOS:000225886200010
DA 2024-07-18
ER

PT J
AU Miller, R
   Tripathi, A
AF Miller, R
   Tripathi, A
TI The guardian model and primitives for exception handling in distributed
   systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE concurrent programming; distributed programming; fault tolerance
AB This paper presents an abstraction called guardian for exception handling in distributed and concurrent systems that use coordinated exception handling. This model addresses two fundamental problems with distributed exception handling in a group of asynchronous processes. The first is to perform recovery when multiple exceptions are concurrently signaled. The second is to determine the correct context in which a process should execute its exception handling actions. Several schemes have been proposed in the past to address these problems. These are based on structuring a distributed program as atomic actions based on conversations or transactions and resolving multiple concurrent exceptions into a single one. The guardian in a distributed program represents the abstraction of a global exception handler, which encapsulates rules for handling concurrent exceptions and directing each process to the semantically correct context for executing its recovery actions. Its programming primitives and the underlying distributed execution model are presented here. In contrast to the existing approaches, this model is more basic and can be used to implement or enhance the existing schemes. Using several examples we illustrate the capabilities of this model. Finally, its advantages and limitations are discussed in contrast to existing approaches.
C1 IBM Corp, Rochester, MN 55901 USA.
   Univ Minnesota, Dept Comp Sci & Engn, Minneapolis, MN 55455 USA.
C3 International Business Machines (IBM); University of Minnesota System;
   University of Minnesota Twin Cities
RP IBM Corp, 3605 Highway 52 N, Rochester, MN 55901 USA.
EM rmill@us.ibm.com; tripathi@cs.umn.edu
CR Arnold K., 1998, JAVA PROGRAMMING LAN
   Budhiraja Navin, 1993, Distributed Systems, V2, P199
   CAMPBELL RH, 1986, IEEE T SOFTWARE ENG, V12, P811, DOI 10.1109/TSE.1986.6312984
   COHEN NH, 1996, ADA 2 LANGUAGE
   CRISTIAN F, 1982, IEEE T COMPUT, V31, P531, DOI 10.1109/TC.1982.1676035
   Cristian F, 1999, IEEE T PARALL DISTR, V10, P642, DOI 10.1109/71.774912
   GOODENOUGH JB, 1975, COMMUN ACM, V18, P683, DOI 10.1145/361227.361230
   Gray J. N., 1978, Operating Systems. An Advanced Course, P393
   Hadzilacos Vassos., 1994, A Modular Approach to Fault-Tolerant Broadcasts and Related Problems
   HAERDER T, 1983, COMPUT SURV, V15, P287, DOI 10.1145/289.291
   HECHT H, 1993, COMPASS 93 : PROCEEDINGS OF THE EIGHTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P81, DOI 10.1109/CMPASS.1993.288855
   ISSARNY V, 1993, J OBJECT-ORIENT PROG, V6, P29
   JALOTE P, 1986, IEEE T SOFTWARE ENG, V12, P59, DOI 10.1109/TSE.1986.6312920
   Kienzle J, 2001, SIXTH INTERNATIONAL WORKSHOP ON OBJECT-ORIENTED REAL-TIME DEPENDABLE SYSTEMS, PROCEEDINGS, P197, DOI 10.1109/WORDS.2001.945131
   KLEIN M, 1999, P 3 INT C AUT AG AG
   LEE PA, 1981, FAULT TOLERANCE PRIN
   LISKOV BH, 1979, IEEE T SOFTWARE ENG, V5, P546, DOI 10.1109/TSE.1979.230191
   LOMET DB, 1977, ACM SIGPLAN NOTICES, V12, P128
   Miller R, 2002, CONCURRENCY IN DEPENDABLE COMPUTING, P209
   MILLER R, 2002, THESIS U MINNESOTA
   Miller RH, 2002, HEALTH AFFAIR, V21, P304
   RANDELL B, 1978, COMPUT SURV, V10, P123, DOI 10.1145/356725.356729
   Randell B., 1975, IEEE Transactions on Software Engineering, VSE-1, P220, DOI 10.1109/TSE.1975.6312842
   Romanovsky A, 1996, INT CON DISTR COMP S, P545, DOI 10.1109/ICDCS.1996.508004
   ROMANOVSKY A, 2001, P 20 IEEE S REL DIST, P28
   SCHNEIDER M, 1990, URBAN AFF REV, V26, P299, DOI 10.1177/004208169002600208
   Stroustrup B., 1991, C PROGRAMMING LANGUA, VSecond
   Xu J, 2002, IEEE T COMPUT, V51, P164, DOI 10.1109/12.980006
   Xu J, 2000, IEEE T PARALL DISTR, V11, P1019, DOI 10.1109/71.888642
   Xu J, 1999, DIG PAP INT SYMP FAU, P68, DOI 10.1109/FTCS.1999.781035
NR 30
TC 14
Z9 16
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2004
VL 30
IS 12
BP 1008
EP 1022
DI 10.1109/TSE.2004.106
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881RI
UT WOS:000225886200011
DA 2024-07-18
ER

PT J
AU Mok, AK
   Konana, P
   Liu, GT
   Lee, CG
   Woo, H
AF Mok, AK
   Konana, P
   Liu, GT
   Lee, CG
   Woo, H
TI Specifying timing constraints and composite events: An application in
   the design of electronic brokerages
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE active databases; real-time databases; electronic brokerages; event
   specification; timing constraints
ID ACTIVE DATABASE
AB Increasingly, business applications need to capture consumers' complex preferences interactively and monitor those preferences by translating them into Event-Condition-Action (ECA) rules and syntactically correct processing specification. An expressive event model to specify primitive and composite events that may involve timing constraints among events is critical to such applications. Relying on the work done in active databases and real-time systems, this research proposes a new composite event model based on Real-Time Logic (RTL). The proposed event model does not require fixed event consumption policies and allows the users to represent the exact correlation of event instances in defining composite events. It also supports a wide-range of domain-specific temporal events and constraints, such as future events, time-constrained events, and relative events. This event model is validated within an electronic brokerage architecture that unbundles the required functionalities into three separable components-business rule manager, ECA rule manager, and event monitor-with well-defined interfaces. A proof-of-concept prototype was implemented in the Java programming language to demonstrate the expressiveness of the event model and the feasibility of the architecture. The performance of the composite event monitor was evaluated by varying the number of rules, event arrival rates, and type of composite events.
C1 Univ Texas, Dept Comp Sci, Austin, TX 78712 USA.
   Univ Texas, Grad Sch Business, Dept Management Sci & Informat Syst, Austin, TX 78721 USA.
   SBC Technol Resources Inc, Austin, TX 78712 USA.
C3 University of Texas System; University of Texas Austin; University of
   Texas System; University of Texas Austin
RP Univ Texas, Dept Comp Sci, Taylor Hall 2-124, Austin, TX 78712 USA.
EM mok@cs.utexas.edu; pkonana@mail.utexas.edu; gliu@tri.sbc.com;
   cglee@cs.utexas.edu; honguk@cs.utexas.edu
OI Lee, Chan-gun/0000-0001-9734-4456
CR Adi A, 2004, VLDB J, V13, P177, DOI 10.1007/s00778-003-0108-y
   Bellini P, 2000, ACM COMPUT SURV, V32, P12, DOI 10.1145/349194.349197
   BRANDING H, 1996, P 1 INT WORKSH REAL, P45
   BUCHMANN AP, 1995, P ACM SIGMOD INT C M, P476
   CHAKRAVARTHY S, 1994, DATA KNOWL ENG, V14, P1, DOI 10.1016/0169-023X(94)90006-X
   Chakravarthy S., 1994, P 20 INT C VER LARG, P606
   CHENG A.M. K., 2002, REAL-TIME SYSTEMS: Scheduling, Analysis, and Verification
   CHODROW SE, 1991, PROCEEDING : TWELFTH REAL-TIME SYSTEMS SYMPOSIUM, P74, DOI 10.1109/REAL.1991.160360
   Dayal U., 1988, SIGMOD Record, V17, P51, DOI 10.1145/44203.44208
   Drusinsky D, 2000, LECT NOTES COMPUT SC, V1885, P323
   DRUSINSKY D, 2003, P 2003 COMP AID VER, P114
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   Galton A., 2002, Database and Expert Systems Applications. 13th International Conference, DEXA 2002. Proceedings (Lecture Notes in Computer Science Vol.2453), P547
   Galton A., 1995, HDB LOGIC ARTIFICIAL, V4, P175
   GALTON A, IN PRESS HDB TIME TE
   Gatziu S., 1994, Proceedings Fourth International Workshop on Research Issues in Data Engineering. Active Database Systems (Cat. No.94TH0618-9), P2, DOI 10.1109/RIDE.1994.282859
   Gatziu S., 1998, SIGMOD Record, V27, P35, DOI 10.1145/273244.273255
   Gatziu S., 1992, IEEE Q B DATA ENG SP, V15, P23
   GATZIU S, 1994, P WORKSH RUL DAT RID, P309
   GEHANI N, 1991, PROC INT CONF VERY L, P327
   Hamblin CharlesLeonard., 1972, The study of time, P324, DOI [DOI 10.1007/978-3-642-65387-2_23, 10.1007/978-3-642-65387-2_23]
   JAHANIAN F, 1986, IEEE T SOFTWARE ENG, V12, P890, DOI 10.1109/TSE.1986.6313045
   JAHANIAN F, 1987, IEEE T COMPUT, V36, P961, DOI 10.1109/TC.1987.5009519
   JAHANIAN F, 1990, P IEEE FAULT TOL COM, P148
   Lee YH, 2004, IEEE T SOFTWARE ENG, V30, P112, DOI 10.1109/TSE.2004.1265816
   LIU G, 1999, THESIS U TEXAS AUSTI
   Liu GT, 1998, FOURTH IEEE REAL-TIME TECHNOLOGY AND APPLICATIONS SYMPOSIUM - PROCEEDINGS, P199, DOI 10.1109/RTTAS.1998.683204
   MANSOURISAMANI M, 1997, IEE IOP BCS DISTRIBU, V4
   Miranker D. R, 1987, P 6 NAT C ART INT, P42
   Mok A. K., 1985, Proceedings of the 1985 International Conference on Parallel Processing (Cat. No.85CH2140-2), P619
   Mok AK, 1997, REAL TIM SYST SYMP P, P176, DOI 10.1109/REAL.1997.641280
   Mok AK, 1997, THIRD IEEE REAL-TIME TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P252, DOI 10.1109/RTTAS.1997.601363
   Patankar A. K., 1998, Temporal Databases: Research and Practice, P257, DOI 10.1007/BFb0053706
   Paton NW, 1999, ACM COMPUT SURV, V31, P63, DOI 10.1145/311531.311623
   RAMAMRITHAM K, 1993, DISTRIB PARALLEL DAT, V1, P199, DOI 10.1007/BF01264051
   RONCANCIO CL, 1997, P 2 INT WORKSH ACT R, V1553, P176
   SCHREIER U, 1991, PROC INT CONF VERY L, P469
   SISTLA AP, 1995, P ACM SIGMOD INT C M, P269
   Terenziani P, 2000, SEVENTH INTERNATIONAL WORKSHOP ON TEMPORAL REPRESENTATION AND REASONING - TIME 2000, PROCEEDINGS, P191, DOI 10.1109/TIME.2000.856601
   Widom J., 1996, ACTIVE DATABASE SYST
   Zimmer D, 1999, PROC INT CONF DATA, P392, DOI 10.1109/ICDE.1999.754955
NR 41
TC 10
Z9 11
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2004
VL 30
IS 12
BP 841
EP 858
DI 10.1109/TSE.2004.105
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881RI
UT WOS:000225886200001
DA 2024-07-18
ER

PT J
AU Arisholm, E
   Sjoberg, DIK
AF Arisholm, E
   Sjoberg, DIK
TI Evaluating the effect of a delegated versus centralized control style on
   the maintainability of object-oriented software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE design principles; responsibility delegation; control styles;
   object-oriented design; object-oriented programming; software
   maintainability; controlled experiment
ID DESIGN
AB A fundamental question in object-oriented design is how to design maintainable software. According to expert opinion, a delegated control style, typically a result of responsibility-driven design, represents object-oriented design at its best, whereas a centralized control style is reminiscent of a procedural solution, or a "bad" object-oriented design. This paper presents a controlled experiment that investigates these claims empirically. A total of 99 junior, intermediate, and senior professional consultants from several international consultancy companies were hired for one day to participate in the experiment. To compare differences between (categories of) professionals and students, 59 students also participated. The subjects used professional Java tools to perform several change tasks on two alternative Java designs that had a centralized and delegated control style, respectively. The results show that the most skilled developers, in particular, the senior consultants, require less time to maintain software with a delegated control style than with a centralized control style. However, more novice developers, in particular, the undergraduate students and junior consultants, have serious problems understanding a delegated control style, and perform far better with a centralized control style. Thus, the maintainability of object-oriented software depends, to a large extent, on the skill of the developers who are going to maintain it. These results may have serious implications for object-oriented development in an industrial context: Having senior consultants design object-oriented systems may eventually pose difficulties unless they make an effort to keep the designs simple, as the cognitive complexity of "expert" designs might be unmanageable for less skilled maintainers.
C1 Simula Res Lab, N-1325 Lysaker, Norway.
RP Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
EM erika@simula.no; dagsj@simula.no
CR [Anonymous], 1990, DESIGNING OBJECT ORI
   [Anonymous], 1963, EXPT QUASIEXPERIMENT
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], EMPIR SOFTW ENG
   Arisholm E., 2001, Empirical Software Engineering, V6, P231, DOI 10.1023/A:1011439416657
   Arisholm E., 2002, Nordic Journal of Computing, V9, P231
   ARISHOLM E, 2003, 20036 SIM RES LAB
   BECK K, 1989, SIGPLAN NOTICES, V24, P1, DOI 10.1145/74878.74879
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 2002, ADV COMPUT, V56, P97, DOI 10.1016/S0065-2458(02)80005-5
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P513, DOI 10.1109/32.926174
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Burkhardt J.-M., 2002, Empirical Software Engineering, V7, P115, DOI 10.1023/A:1015297914742
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Christensen R., 1998, Analysis of variance, design and regression: applied statistical methods
   Coad P., 1991, OBJECT ORIENTED DESI
   COCKBURN A, 1998, USERS J          MAY
   GLASS RL, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.329400
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   KELLER RK, 1997, P OOPSLA 97 WORKSH O
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kitchenham B. A., 1996, SIGSOFT Software Engineering Notes, V21, P11, DOI 10.1145/381790.381795
   LIEBERHERR KJ, 1989, IEEE SOFTWARE, V6, P38, DOI 10.1109/52.35588
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   POTTS C, 1993, IEEE SOFTWARE, V10, P19, DOI 10.1109/52.232392
   Sharble R. C., 1993, SIGSOFT Software Engineering Notes, V18, P60, DOI 10.1145/159420.155839
   Sheetz SD, 2002, J SYST SOFTWARE, V64, P23, DOI 10.1016/S0164-1212(02)00019-5
   Shlaer S, 1988, OBJECT ORIENTED SYST
   SJOBERG D, 2003, EMPIRICAL METHODS ST
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   TOCKEY S, 1990, P SOFTW IMPR C
   WIRFSBROCK R, 1989, SIGPLAN NOTICES, V24, P71, DOI 10.1145/74878.74885
   WIRFSBROCK R, 1994, REPORT OBJECT ANAL D, V1
NR 33
TC 91
Z9 95
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2004
VL 30
IS 8
BP 521
EP 534
DI 10.1109/TSE.2004.43
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 837CL
UT WOS:000222605000003
DA 2024-07-18
ER

PT J
AU Chaki, S
   Clarke, EM
   Groce, A
   Jha, S
   Veith, H
AF Chaki, S
   Clarke, EM
   Groce, A
   Jha, S
   Veith, H
TI Modular verification of software components in C
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software engineering; formal methods; verification
ID MODEL CHECKING; ABSTRACTION; SYSTEMS
AB We present a new methodology for automatic verification of C programs against finite state machine specifications. Our approach is compositional, naturally enabling us to decompose the verification of large software systems into subproblems of manageable complexity. The decomposition reflects the modularity in the software design. We use weak simulation as the notion of conformance between the program and its specification. Following the CounterExample Guided Abstraction Refinement (CEGAR) paradigm, our tool MAGIC first extracts a finite model from C source code using predicate abstraction and theorem proving. Subsequently, weak simulation is checked via a reduction to Boolean satisfiability. MAGIC has been interfaced with several publicly available theorem provers and SAT solvers. We report experimental results with procedures from the Linux kernel, the OpenSSL toolkit, and several industrial strength benchmarks.
C1 Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
   Univ Wisconsin, Dept Comp Sci, Madison, WI 53706 USA.
   Tech Univ Munich, Inst Informat 17, D-85748 Garching, Germany.
C3 Carnegie Mellon University; University of Wisconsin System; University
   of Wisconsin Madison; Technical University of Munich
RP Chaki, S (corresponding author), Carnegie Mellon Univ, Sch Comp Sci, 5000 Forbes Ave, Pittsburgh, PA 15213 USA.
EM chaki@cs.cmu.edu; emc@cs.cmu.edu; agroce@cs.cmu.edu; jha@cs.wisc.edu;
   veith@in.tum.de
CR ANDERSON LO, 1994, THESIS U COPENHAGEN
   [Anonymous], 1999, Communicating and Mobile Systems: The Calculus
   [Anonymous], ELECT NOTES THEORETI
   AUSIELLO G, 1991, J LOGIC PROGRAM, V10, P69, DOI 10.1016/0743-1066(91)90006-B
   Ball Thomas, 2001, LECT NOTES COMPUTER, V2057
   Ball Thomas., 2001, Tools and Algorithms for the Construction and Analysis of Systems, Lecture Notes in Computer Science, V2031, P268, DOI [DOI 10.1007/3-540-45319-9_19, 10.1007/3-540-45319-9_19]
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   CHAKI S, 2003, CMUCS03188
   CHAKI S, 2003, P 12 ADV RES WORK C
   CHAKI S, IN PRESS P 4 INT C I
   Clarke Edmund M., 2001, Model Checking
   CLARKE EM, 1994, ACM T PROGR LANG SYS, V16, P1512, DOI 10.1145/186025.186051
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   CLARKE EM, 2000, COMPUTER AIDED VERIF, P154, DOI DOI 10.1007/10722167_15
   CLARKE EM, 2000, ACM T SOFTWARE ENG M, V9
   COENPORISINI A, 2001, P 8 EUR SOFTW ENG C, P142
   DAMS D, 2003, P C VER MOD CHECK AB
   Das S., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P160
   DIJKSTRA EW, 1973, LECT NOTES INT SUMM
   Dowling W. F., 1984, Journal of Logic Programming, V1, P267, DOI 10.1016/0743-1066(84)90014-1
   Dwyer MB, 2001, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.2001.919092
   DWYER MB, 1994, P FDN SOFTW ENG S FS
   Engler D, 2000, P S OP SYST DES IMPL
   FILLIATRE JC, 2001, COMPUTER AIDED VERIF
   Graf S, 1997, LECT NOTES COMPUT SC, V1254, P72
   HALLEM S, 2002, P SIGPLAN C PROGR LA
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Havelund K., 2000, International Journal on Software Tools for Technology Transfer (STTT), V2, P366, DOI [10.1007/s100090050043., DOI 10.1007/S100090050043]
   Henzinger ThomasA., 2002, Proc. of the Symposium on Principles of Programming Languages. POPL, P58
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   JACKSON D, 2000, P ACM SIGSOFT C FDN
   Jeff Magee Jeff Kramer., 2000, Concurrency: State Models and Java Programs
   KROENING D, 2002, P VER WORKSH VERIFY, P5
   Livadas C, 2000, P IEEE, V88, P926, DOI 10.1109/5.871302
   LOWE G, 2000, MODELLING ANAL SECUR
   MARQUESSILVA J, 1996, P IEEE ACM INT C COM
   MILNER R, 1989, CMMUNICATION CONCURR
   MOSKEWICZ M, 2001, P DES UT C JUN
   NELSON G, 1980, THESIS STANFORD U
   Olender K. M., 1992, ACM Transactions on Software Engineering and Methodology, V1, P21, DOI 10.1145/125489.122822
   SHUKLA SK, 1995, TR958 STAT U NEW YOR
   SHUKLA SK, 1997, THESIS STATE U NEW Y
   SMITH RL, 2002, P INT C SOFTW ENG IC
   STUMP A, 2002, P C COMP AID VER
   ZHANG H, 1997, P C AUTT DED
   [No title captured]
   2002, ESC JAVA
   2002, BUSINESS PROCESS EXE
   2002, BLAST
   2002, CIL
   2002, MAGIC
   2002, UNIFIED MODELING LAN
   2002, OPENSSL
   2002, BANDERA
   2002, JAVA PATHFINDER
   2002, CVC LITE
   2002, SSL 3 0 SPECIFICATIO
   2002, SLAM
NR 59
TC 122
Z9 146
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2004
VL 30
IS 6
BP 388
EP 402
DI 10.1109/TSE.2004.22
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 820IW
UT WOS:000221383400004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rothenberger, MA
   Dooley, KJ
   Kulkarni, UR
   Nada, N
AF Rothenberger, MA
   Dooley, KJ
   Kulkarni, UR
   Nada, N
TI Strategies for software reuse: A principal component analysis of reuse
   practices
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE reusability; systematic software reuse; software process improvement;
   quality; reuse success; reuse classification scheme; best practices
ID PRODUCT DEVELOPMENT; REUSABILITY; INNOVATION; METRICS; ISSUES; FIRM; KEY
AB This research investigates the premise that the likelihood of success of software reuse efforts may vary with the reuse strategy employed and, hence, potential reuse adopters must be able to understand reuse strategy alternatives and their implications. We use survey data collected from 71 software development groups to empirically develop a set of six dimensions that describe the practices employed in reuse programs. The study investigates the patterns in which these practices co-occur in the real world, demonstrating that the dimensions cluster into five distinct reuse strategies, each with a different potential for reuse success. The findings provide a means to classify reuse settings and assess their potential for success.
C1 Univ Wisconsin, Sch Business Adm, Milwaukee, WI 53201 USA.
   Arizona State Univ, WP Carey Sch Business, Tempe, AZ 85287 USA.
   Sharjah Coll, Dept Comp Sci, Sharjah, U Arab Emirates.
C3 University of Wisconsin System; University of Wisconsin Milwaukee;
   Arizona State University; Arizona State University-Tempe; Higher
   Colleges of Technology - United Arab Emirates
RP Univ Wisconsin, Sch Business Adm, POB 742, Milwaukee, WI 53201 USA.
EM rothenb@uwm.edu; kevin.dooley@asu.edu; uday.kulkarni@asu.edu;
   nader@shjcollege1.ac.ae
RI Rothenberger, Marcus/AAG-7866-2020; Wagner, Adriano/E-9872-2013
OI Rothenberger, Marcus/0000-0002-6935-9690; 
CR APTE U, 1990, MIS QUART, V14, P421, DOI 10.2307/249791
   ARMSTRONG JS, 1977, J MARKETING RES, V14, P396, DOI 10.2307/3150783
   Baldwin CY, 1997, HARVARD BUS REV, V75, P84
   BANKER RD, 1994, IEEE T SOFTWARE ENG, V20, P169, DOI 10.1109/32.268919
   BANKER RD, 1991, MIS QUART, V15, P375, DOI 10.2307/249649
   BARNEY J, 1991, J MANAGE, V17, P99, DOI 10.1177/014920639101700108
   Basili VR, 1996, COMMUN ACM, V39, P104, DOI 10.1145/236156.236184
   BIGGERSTAFF T, 1987, IEEE SOFTWARE, V4, P41, DOI 10.1109/MS.1987.230095
   BIGGERSTAFF TJ, 1992, ADV COMPUT, V34, P1
   BROWN SL, 1995, ACAD MANAGE REV, V20, P343, DOI 10.2307/258850
   Cioch FA, 2000, J SYST SOFTWARE, V50, P221, DOI 10.1016/S0164-1212(99)00099-0
   DAVIS T, 1994, IEEE SPECTRUM    JUN, P44
   Deming W. E., 1986, OUT CRISIS
   DeVellis R.F., 1991, SCALE DEV THEORY APP
   Drucker P.F., 1987, Frontiers of management
   Edwards J E, 1999, Br J Fam Plann, V24, P3
   EISENHARDT KM, 1995, ADMIN SCI QUART, V40, P84, DOI 10.2307/2393701
   Evans J.R., 1999, The Management and Control of Quality, V4th
   Feitzinger E, 1997, HARVARD BUS REV, V75, P116
   Fichman RG, 1997, COMPUTER, V30, P47, DOI 10.1109/2.625304
   Frakes W, 1996, ACM COMPUT SURV, V28, P415, DOI 10.1145/234528.234531
   FRAKES WB, 1995, COMMUN ACM, V38, P75, DOI 10.1145/203241.203260
   FRAKES WB, 1994, IEEE SOFTWARE, V11, P15
   GAFFNEY JE, 1989, INFORM SOFTWARE TECH, V31, P258, DOI 10.1016/0950-5849(89)90005-0
   GOLDENSON D, 1995, SEICMM95TR009 CARN M
   Griffin A, 1997, J MARKETING RES, V34, P24, DOI 10.2307/3152062
   Griss Martin L., 1994, Proceedings of the 1994 ACM Symposium on Applied Computing, SAC'94, P47, DOI DOI 10.1145/326619.326658
   HAYES W, 1995, CMUSEI95TR008
   INCORVAIA AJ, 1990, P 14 ANN INT COMP SO
   ISODA S, 1992, P 14 INT C SOFTW ENG, P320
   Kim KR, 1998, J IND ENG CHEM, V4, P113
   KLEINER A, 1997, HARVARD BUSINESS SEP
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   LATOUR L, 1988, P 3 INT C AD APPL EN, P105
   Lee NY, 1997, IEEE T SOFTWARE ENG, V23, P537, DOI 10.1109/32.629492
   LIM WC, 1994, IEEE SOFTWARE, V11, P23, DOI 10.1109/52.311048
   Meyer M., 1997, The power of product platforms
   MILI H, 1995, IEEE T SOFTWARE ENG, V21, P528, DOI 10.1109/32.391379
   Miller D, 1996, ACAD MANAGE J, V39, P519, DOI 10.5465/256654
   Mintzberg Henry., 1973, The Nature of Managerial Work
   Morisio M, 2000, IEEE SOFTWARE, V17, P56, DOI 10.1109/52.854069
   Nunnally J. C., 1994, Psychometric Theory
   PANCAKE CM, 1995, COMMUN ACM, V38, P32, DOI 10.1145/226239.226247
   Paulk Mark., 1993, Encyclopedia of Software Engineering
   Pfleeger SL, 1996, IEEE SOFTWARE, V13, P118, DOI 10.1109/52.526839
   Porter M, 1985, Competitive advantage: Creating and sustaining superior performance, DOI DOI 10.1145/3120459.3120478
   Poulin J.S., 1997, MEASURING SOFTWARE R
   POULIN JS, 1993, IBM SYST J, V32, P567, DOI 10.1147/sj.324.0567
   POULIN JS, 1995, J SYST SOFTWARE, V30, P187, DOI 10.1016/0164-1212(94)00133-8
   PRIETODIAZ R, 1993, IEEE SOFTWARE, V10, P61, DOI 10.1109/52.210605
   PYSTER A, 1998, P IEEE INT C TECHN I
   RAMESH M, 1994, DECIS SUPPORT SYST, V12, P57, DOI 10.1016/0167-9236(94)90074-4
   Ravichandran T, 1999, EUR J INFORM SYST, V8, P183, DOI 10.1057/palgrave.ejis.3000332
   Rine DC, 1998, J SYST SOFTWARE, V41, P17, DOI 10.1016/S0164-1212(97)10003-6
   ROBERTSON D., 1998, Sloan Management Review, P19
   Rogers E. M., 1995, Diffusion of Innovation Theory, P25, DOI https://doi.org/10.1007/978-3-642-79868-92
   ROMBACH HD, 1991, INFORM SOFTWARE TECH, V33, P86, DOI 10.1016/0950-5849(91)90027-9
   Rothenberger MA, 1999, INFORM MANAGE, V35, P283, DOI 10.1016/S0378-7206(98)00095-0
   Rothenberger MA, 1999, DECISION SCI, V30, P1131, DOI 10.1111/j.1540-5915.1999.tb00921.x
   Sharma Subhash., 1995, Applied Multivariate Techniques, V1
   SINDRE G, 1995, J SYST SOFTWARE, V30, P201, DOI 10.1016/0164-1212(94)00134-9
   Sutcliffe A, 2000, J SYST SOFTWARE, V50, P175, DOI 10.1016/S0164-1212(99)00096-5
   Tabrizi B, 1997, HARVARD BUS REV, V75, P116
   TITIKONDA M, 1999, ACAD MANAGEMENT C BE
   *USA GAO, 1999, GAOTNSIAD99116
   Weber Max., 1961, The Theory of Social and Economic Organization
NR 66
TC 58
Z9 65
U1 0
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2003
VL 29
IS 9
BP 825
EP 837
DI 10.1109/TSE.2003.1232287
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 719EY
UT WOS:000185191700005
DA 2024-07-18
ER

PT J
AU Parnas, DL
   Lawford, M
AF Parnas, DL
   Lawford, M
TI The role of inspection in software quality assurance
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
C1 Univ Limerick, Software Quality Res Lab, Limerick, Ireland.
   McMaster Univ, Software Quality Res Lab, Dept Comp & Software, Hamilton, ON L8S 4K1, Canada.
C3 University of Limerick; McMaster University
RP Parnas, DL (corresponding author), Univ Limerick, Software Quality Res Lab, Limerick, Ireland.
NR 0
TC 43
Z9 48
U1 2
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2003
VL 29
IS 8
BP 674
EP 676
DI 10.1109/TSE.2003.1223642
PG 3
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 708KQ
UT WOS:000184566400001
OA Green Published
DA 2024-07-18
ER

PT J
AU Huang, CY
   Lyu, MR
   Kuo, SY
AF Huang, CY
   Lyu, MR
   Kuo, SY
TI A unified scheme of some Nonhomogenous Poisson process models for
   software reliability estimation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software reliability growth model (SRGM); weighted arithmetic mean;
   weighted geometric mean; weighted harmonic mean; mean value function
   (MVF); power transformation; nonhomogeneous Poisson process (NHPP)
AB In this paper, we describe how several existing software reliability growth models based on Nonhomogeneous Poisson processes (NHPPs) can be comprehensively derived by applying the concept of weighted arithmetic, weighted geometric, or weighted harmonic mean. Furthermore, based on these three weighted means, we thus propose a more general NHPP model from the quasi arithmetic viewpoint. In addition to the above three means, we formulate a more general transformation that includes a parametric family of power transformations. Under this general framework, we verify the existing NHPP models and derive several new NHPP models. We show that these approaches cover a number of well-known models under different conditions.
C1 Natl Taiwan Univ, Dept Elect Engn, Taipei 10764, Taiwan.
   Chinese Univ Hong Kong, Dept Comp Sci & Engn, Shatin, Hong Kong, Peoples R China.
C3 National Taiwan University; Chinese University of Hong Kong
RP Natl Taiwan Univ, Dept Elect Engn, 1,Sec 4,Roosevelt Rd, Taipei 10764, Taiwan.
EM cy2huang@mail.cbc.gov.tw; lyu@cse.cuhk.edu.hk; sykuo@cc.ee.ntu.edu.tw
OI Kuo, Sy-Yen/0000-0002-3021-8321
CR [Anonymous], 1996, HDB SOFTWARE RELIABI
   Box GEP, 1976, TIME SERIES ANAL FOR
   Bullen P.S., 1988, Means and their inequalities
   GOEL AL, 1985, IEEE T SOFTWARE ENG, V11
   Gokhale SS, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P34, DOI 10.1109/HASE.1998.731593
   Hou RH, 1998, 1998 INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: EDUCATION & PRACTICE, PROCEEDINGS, P60, DOI 10.1109/SEEP.1998.707634
   Huang CY, 2002, IEEE T RELIAB, V51, P261, DOI 10.1109/TR.2002.801847
   Huang CY, 2000, P INT COMP SOFTW APP, V24, P454, DOI 10.1109/CMPSAC.2000.884764
   Huang CY, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P72, DOI 10.1109/ISSRE.2000.885862
   Kuo SY, 2001, IEEE T RELIAB, V50, P310, DOI 10.1109/24.974129
   LANGBERG N, 1985, SIAM J SCI STAT COMP, V6, P781, DOI 10.1137/0906053
   LITTLEWOOD B, 1991, P 5 ANN EUR COMP C A, P36
   Malaiya Y.K., 1990, SOFTWARE RELIABILITY
   MILLER DR, 1986, IEEE T SOFTWARE ENG, V12, P12, DOI 10.1109/TSE.1986.6312915
   Musa J., 1999, SOFTWARE RELIABILITY
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   OHBA M, 1984, IBM J RES DEV, V28, P428, DOI 10.1147/rd.284.0428
   Pham H., 2000, SOFTWARE RELIABILITY
   TRACHTENBERG M, 1990, IEEE T RELIAB, V39, P92, DOI 10.1109/24.52617
   Xie M., 1991, SOFTWARE RELIABILITY
NR 20
TC 157
Z9 180
U1 1
U2 25
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2003
VL 29
IS 3
BP 261
EP 269
DI 10.1109/TSE.2003.1183936
PG 9
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 651QH
UT WOS:000181331700006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Antón, AI
   Potts, C
AF Antón, AI
   Potts, C
TI Functional paleontology:: The evolution of user-visible system services
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 23rd International Conference on Software Engineering (ICSE 2001)
CY MAY 12-19, 2001
CL TORONTO, CANADA
SP IEEE Comp Soc, IEEE Comp Soc, Tech Council Software Engn, Assoc Comp Machinery, ACM SIGSOFT Special Interest Grp Software Engn, ACM SIGSOFT Special Interest Grp Programming Languages, ACD Syst, Alberta Software Engn Res Consortium, Avaya Commun, Bell Canada, Canada Natl Res Council Canada, Cisco Syst, Commun & Informat Technol Ontario, IBM Toronto Lab, Alberta Informat Circle Res Excellence, MacDonald Dettwiler, Microsoft Res, Nokia, Rational Software, Software Product Ctr Inc, Sun Microsyst
DE measurement; metrics; empirical methods; reverse engineering;
   requirements engineering; software evolution
AB It has long been accepted, that requirements analysis should precede architectural design and implementation, but in software evolution and reverse engineering this concern with black-box analysis of function has necessarily been de-emphasized in favor of code-based analysis and designer-oriented interpretation. In this paper, we, redress this balance by describing "functional paleontology," an approach to analyzing the evolution of user-visible features or services independent of architecture and design intent. We classify the benefits and burdens of interpersonal communication services into core and peripheral categories and investigate the telephony services available to domestic subscribers over a 50-year period. We report that services were introduced in discrete bursts, each of which emphasized different benefits and burdens. We discuss the general patterns of functional evolution that this "fossil record" illustrates and conclude by discussing their implications for forward engineering of software products.
C1 N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
   Georgia Inst Technol, Coll Comp, Atlanta, GA 30332 USA.
C3 North Carolina State University; University System of Georgia; Georgia
   Institute of Technology
RP N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM aianton@eos.ncsu.edu; potts@cc.gatech.edu
CR Allen R., 1997, ACM Transactions on Software Engineering and Methodology, V6, P213, DOI 10.1145/258077.258078
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 1993, The nature of selection: evolutionary theory in philosophical focus
   Anton AI, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P136, DOI 10.1109/ICRE.1996.491438
   Anton AI, 1998, PROC INT CONF SOFTW, P157, DOI 10.1109/ICSE.1998.671112
   BASALA G, 1988, EVOLUTION TECHNOLOGY
   BOEHM B, 1995, PROC INT CONF SOFTW, P243, DOI 10.1145/225014.225037
   Brand Stewart., 1994, BUILDINGS LEARN WHAT
   CHOMSKY N, 1965, ASPECTS THEORY SYNTE
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Dahlbom B., 1993, COMPUTERS CONTEXT PH
   deBaud J.-M., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P34, DOI 10.1109/ICSE.1999.840993
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GRUDIN J, 1994, COMPUTER, V27, P19, DOI 10.1109/2.291294
   Hsi I, 2000, PROC IEEE INT CONF S, P143, DOI 10.1109/ICSM.2000.883033
   Jackson M., 2001, PROBLEM FRAMES ANAL
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Kuhn T. S., 1962, STRUCTURE SCI REVOLU
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   MACDONELL SG, 1994, SOFTWARE ENG J, V9, P107, DOI 10.1049/sej.1994.0014
   Nardi Bonnie A., 1995, Context and Consciousness: Activity Theory and Human-computer Interaction, P69
   Petroski H., 1992, EVOLUTION USEFUL THI
   POTTS C, 1999, P IEEE 4 INT S REQ E
   Rogers E. M., 1995, Diffusion of Innovation Theory, P25, DOI https://doi.org/10.1007/978-3-642-79868-92
   Saussure F., 1959, Course in General Linguistics
   Shaw M, 2001, PROC INT CONF SOFTW, P657, DOI 10.1109/ICSE.2001.919147
   SULLIVAN KJ, 1996, P 2 INT SOFTW ARCH W, P15
   Tenner Edward., 1996, Why Things Bite Back: Technology and the Revenge of Unintended Consequences
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   van Lamsweerde A., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P194, DOI 10.1109/ISRE.1995.512561
   Zuboff S., 1988, In the age of the smart machine: the future of work and power
NR 32
TC 16
Z9 18
U1 2
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2003
VL 29
IS 2
BP 151
EP 166
DI 10.1109/TSE.2003.1178053
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 644EB
UT WOS:000180904000005
DA 2024-07-18
ER

PT J
AU Iorga, D
   Wickerson, J
   Donaldson, AF
AF Iorga, Dan
   Wickerson, John
   Donaldson, Alastair F.
TI Simulating Operational Memory Models Using Off-the-Shelf Program
   Analysis Tools
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Operational semantics; model checking; fuzzing; symbolic execution
ID WEAK MEMORY; CONSISTENCY; CHECKING
AB Memory models allow reasoning about the correctness of multithreaded programs. Constructing and using such models is facilitated by simulators that reveal which behaviours of a given program are allowed. While extensive work has been done on simulating axiomatic memory models, there has been less work on simulation of operational models. Operational models are often considered more intuitive than axiomatic models, but are challenging to simulate due to the vast number of paths through the model's transition system. Observing that a similar path-explosion problem is tackled by program analysis tools, we investigate the idea of reducing the decision problem of "whether a given memory model allows a given behaviour" to the decision problem of "whether a given C program is safe", which can be handled by a variety of off-the-shelf tools. We report on our experience using multiple program analysis tools for C for this purpose-a model checker (CBMC), a symbolic execution tool (KLEE), and three coverage-guided fuzzers (libFuzzer, Centipede and AFL++)-presenting two case-studies. First, we evaluate the performance and scalability of these tools in the context of the x86 memory model, showing that fuzzers offer performance competitive with that of RMEM, a state-of-the-art bespoke memory model simulator. Second, we study a more complex, recently developed memory model for hybrid CPU/FPGA devices for which no bespoke simulator is available. We highlight how different encoding strategies can aid the various tools and show how our approach allows us to simulate the CPU/FPGA model twice as deeply as in prior work, leading to us finding and fixing several infidelities in the model. We also experimented with applying three analysis tools that won the "falsification" category in the 2023 Annual Software Verification Competition (SV-COMP). We found that these tools do not scale to our use cases, motivating us to submit example C programs arising from our work for inclusion in the set of SV-COMP benchmarks, so that they can serve as challenge examples.
C1 [Iorga, Dan; Donaldson, Alastair F.] Imperial Coll London, Dept Comp, London SW7 2AZ, England.
   [Wickerson, John] Imperial Coll London, Dept Elect & Elect Engn, London SW7 2AZ, England.
C3 Imperial College London; Imperial College London
RP Iorga, D (corresponding author), Imperial Coll London, Dept Comp, London SW7 2AZ, England.
EM d.iorga17@imperial.ac.uk; j.wickerson@imperial.ac.uk;
   alastair.donaldson@imperial.ac.uk
OI Wickerson, John/0000-0001-6735-5533
FU EPSRC via the IRIS Programme
FX No Statement Available
CR Advanced Fuzzing League ++, 2023, American Fuzzy Lop plus plus (AFL++)
   AFL++ Project, 2023, AFL++ Overview
   Alglave J, 2012, Arxiv, DOI arXiv:1207.7264
   Alglave J, 2014, ACM T PROGR LANG SYS, V36, DOI 10.1145/2627752
   Alglave J, 2011, LECT NOTES COMPUT SC, V6605, P41, DOI 10.1007/978-3-642-19835-9_5
   Armstrong A., 2022, RMEM: A tool for exploring relaxed -memory concurrency
   Armstrong A, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290384
   Arya Abhishek, 2019, Open sourcing clusterfuzz
   Batty M, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P509
   Ben Simner, 2020, LECT NOTES COMPUT SC, V12075, P626, DOI 10.1007/978-3-030-44914-8_23
   Beyer Dirk, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P184, DOI 10.1007/978-3-642-22110-1_16
   Beyer D., 2023, Competition on software verification (SV-COMP)
   Beyer D., 2023, Lecture Notes in Computer Science
   Beyer Dirk, 2023, Zenodo, DOI 10.5281/ZENODO.7627829
   Cadar C., 2008, KLEE: Unassisted and Automatic Generation of High-Coverage Tests for Complex Systems Programs
   Chalupa M., 2023, Lecture Notes in Computer Science
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   De A., 2008, PASTE 08, P8, DOI [10.1145/1512475.1512478, DOI 10.1145/1512475.1512478]
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Fan HY, 2023, ACM T PROGR LANG SYS, V45, DOI 10.1145/3579835
   Fioraldi Andrea, 2020, 14 USENIX WORKSHOP O
   Flur S, 2016, ACM SIGPLAN NOTICES, V51, P608, DOI 10.1145/2914770.2837615
   Godbole A, 2022, Form Comp Aid Design, V3, P331, DOI 10.34727/2022/isbn.978-3-85448-053-2_40
   Google, 2023, OSS-Fuzz
   Google, 2023, Centipede
   Google, 2022, American Fuzzy Lop
   Haas T, 2022, P ACM PROGRAM LANG, V6, DOI 10.1145/3563292
   Holzmann GJ, 2001, SOFTW TEST VERIF REL, V11, P65, DOI 10.1002/stvr.228
   Holzmann GJ, 2004, The SPIN model checker: primer and reference manual, V1003
   Iorga D., 2023, Merge request to add memory model tests to the SV-COMP benchmark set
   Iorga D, 2021, P ACM PROGRAM LANG, V5, DOI 10.1145/3485497
   Jiang K., 2009, Master's thesis
   Kokologiannakis M, 2021, LECT NOTES COMPUT SC, V12759, P427, DOI 10.1007/978-3-030-81685-8_20
   lafintel, 2016, Circumventing Fuzzing Roadblocks With Compiler Transformations
   Lahav O, 2016, LECT NOTES COMPUT SC, V9995, P479, DOI 10.1007/978-3-319-48989-6_29
   LAMPORT L, 1979, IEEE T COMPUT, V28, P690, DOI 10.1109/TC.1979.1675439
   Liew D, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P521, DOI 10.1145/3338906.3338921
   LLVM Project, 2023, afl_driver.cpp-A glue between AFL and libFuzzer
   Lustig D, 2017, TWENTY-SECOND INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXII), P661, DOI 10.1145/3037697.3037723
   Mulligan DP, 2014, ICFP'14: PROCEEDINGS OF THE 2014 ACM SIGPLAN INTERNATIONAL CONFERENCE ON FUNCTIONAL PROGRAMMING, P175, DOI 10.1145/2628136.2628143
   Norris B, 2013, ACM SIGPLAN NOTICES, V48, P131, DOI [10.1145/2509136.2509514, 10.1145/2544173.2509514]
   Oswald N, 2022, INT S HIGH PERF COMP, P756, DOI 10.1109/HPCA53966.2022.00061
   Owens S, 2009, LECT NOTES COMPUT SC, V5674, P391, DOI 10.1007/978-3-642-03359-9_27
   Peng H, 2018, P IEEE S SECUR PRIV, P697, DOI 10.1109/SP.2018.00056
   Ponce-de-Leon Hernan, 2020, Tools and Algorithms for the Construction and Analysis of Systems. 26th International Conference, TACAS 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12079), P378, DOI 10.1007/978-3-030-45237-7_24
   Priya S, 2021, LECT NOTES COMPUT SC, V12971, P187, DOI 10.1007/978-3-030-88885-5_13
   Pulte C, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P1, DOI 10.1145/3314221.3314624
   Pulte C, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3158107
   Richter C, 2019, LECT NOTES COMPUT SC, V11429, P229, DOI 10.1007/978-3-030-17502-3_19
   Roychoudhury A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P489, DOI 10.1109/ICSE.2002.1007993
   Rupp K., 2015, 40 YEARS MICROPROCES
   Sarkar S., 2012, Proceedings of the 33rd ACM SIGPLAN conference on Programming Language Design and Implementation, PLDI '12, P311, DOI [10.1145/2254064.2254102, DOI 10.1145/2254064.2254102]
   Sarkar S, 2011, ACM SIGPLAN NOTICES, V46, P175, DOI 10.1145/1993316.1993520
   Sarkar S, 2009, ACM SIGPLAN NOTICES, V44, P379, DOI 10.1145/1594834.1480929
   Serebryany K., 2022, Google
   Snyder W., 2022, Veripool
   Sorensen T, 2016, ACM SIGPLAN NOTICES, V51, P100, DOI [10.1145/2980983.2908114, 10.1145/2908080.2908114]
   Sorensen Tyler., 2013, Proceedings of the 27th International ACM Conference on International Conference on Supercomputing, ICS'13, P489, DOI DOI 10.1145/2464996.2467280
   Still V, 2018, LECT NOTES COMPUT SC, V11232, P124, DOI 10.1007/978-3-030-02450-5_8
   Trippel Timothy, 2021, arXiv, DOI DOI 10.48550/ARXIV.2102.02308
   Vikhar Pradnya A., 2016, 2016 International Conference on Global Trends in Signal Processing, Information Computing and Communication (ICGTSPICC). Proceedings, P261, DOI 10.1109/ICGTSPICC.2016.7955308
   Wickerson J, 2017, ACM SIGPLAN NOTICES, V52, P190, DOI 10.1145/3093333.3009838
   Zeller A., 2023, TheFuzzing Book
NR 63
TC 1
Z9 1
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2023
VL 49
IS 12
BP 5084
EP 5102
DI 10.1109/TSE.2023.3326056
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CL0K1
UT WOS:001125287400004
OA hybrid
DA 2024-07-18
ER

PT J
AU Xu, X
   Zheng, QH
   Yan, Z
   Fan, M
   Jia, A
   Zhou, ZH
   Wang, HJ
   Liu, T
AF Xu, Xi
   Zheng, Qinghua
   Yan, Zheng
   Fan, Ming
   Jia, Ang
   Zhou, Zhaohui
   Wang, Haijun
   Liu, Ting
TI PatchDiscovery: Patch Presence Test for Identifying Binary
   Vulnerabilities Based on Key Basic Blocks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Source coding; Security; Microprogramming; Software systems; Optical
   fiber testing; Flow graphs; Computer bugs; Patch presence test;
   vulnerability detection; bug search; software maintenance
ID CODE SEARCH; SIMILARITY; ACCURATE
AB Software vulnerabilities are easily propagated through code reuses, which pose dire threats to software system security. Automatic patch presence test offers an effective way to detect whether vulnerabilities have been patched, which is significant for large-scale software system maintenance. However, most existing approaches cannot handle binary codes. They suffer from low accuracy and poor efficiency. None of them are resilient to version gap, function size, and patch size. To tackle the above problems, we propose PatchDiscovery, a patch presence test approach to identify binary vulnerabilities by extracting key basic blocks of patch and vulnerability as their signatures for patch discovery. We propose an efficient and accurate basic block matching method over the normalized and simplified control flow graphs (CFGs) of a vulnerable function (VF) and its patched function (PF) to precisely locate a vulnerability and a patch. Then, we conduct fine-grained patch-level analysis on the patch and the vulnerability to gain their key basic blocks as the signatures of PF and VF for patch presence test. Concretely, the key basic blocks of PF and VF are separately searched in a target function (TF) to identify whether the TF is more similar to PF or VF, i.e., patched or not. Extensive experiments based on two real-world binary datasets that contain 524 common vulnerabilities and exposures (CVEs) with 11607 target functions reveal that PatchDiscovery is very effective and efficient. It achieves $92.2\%$92.2% F-measure and takes only 0.091s on average to test a target function. It is also resilient to version gap, patch size, and function size to a good extent. Moreover, it is outperforming the state-of-the-art works and has a much faster testing speed for large-scale patch detection. Moreover, PatchDiscovery achieves good performance in firmware vulnerability discovery scenario.
C1 [Xu, Xi; Zheng, Qinghua] Xi An Jiao Tong Univ, Sch Comp Sci & Technol, Xian 710049, Peoples R China.
   [Yan, Zheng] Xidian Univ, Sch Cyber Engn, State Key Lab Integrated Serv Networks, Xian 710126, Peoples R China.
   [Yan, Zheng] Xidian Univ, Hangzhou Inst Technol, Hangzhou 311231, Peoples R China.
   [Fan, Ming; Jia, Ang; Zhou, Zhaohui; Wang, Haijun; Liu, Ting] Xi An Jiao Tong Univ, Key Lab Intelligent Networks & Network Secur, Minist Educ, Xian 710049, Peoples R China.
C3 Xi'an Jiaotong University; Xidian University; Xidian University; Xi'an
   Jiaotong University
RP Yan, Z (corresponding author), Xidian Univ, Sch Cyber Engn, State Key Lab Integrated Serv Networks, Xian 710126, Peoples R China.
EM xx19960325@stu.xjtu.edu.cn; qhzheng@mail.xjtu.edu.cn;
   zyan@xidian.edu.cn; mingfan@mail.xjtu.edu.cn; jiaang@stu.xjtu.edu.cn;
   zhzhou@stu.xjtu.edu.cn; haijunwang@xjtu.edu.cn; tingliu@mail.xjtu.edu.cn
RI Jia, Ang/HJY-9263-2023; zheng, yan/GQY-6668-2022; Yan,
   Zheng/AEV-7247-2022
OI Jia, Ang/0000-0002-6464-5428; Xue, Luguo/0000-0001-7168-1120; Yan,
   Zheng/0000-0002-9697-2108; Liu, Ting/0000-0002-7600-0934
FU National Key R#x0026;D Program of China
FX No Statement Available
CR angr, 2022, about us
   [Anonymous], 2019, Cybersecurity: One in three breaches are caused by unpatched vulnerabilities
   [Anonymous], 2022, Unpatched vulnerabilities remain primary ransomware attack vector
   [Anonymous], 2014, CVE-2014-0160
   [Anonymous], 2020, The 'new normal' state of cybersecurity
   [Anonymous], 2012, Cve-2012-1140
   [Anonymous], 2022, IDA PRO
   [Anonymous], 2023, binutils
   [Anonymous], 2021, Finding sources of security in the complex software supply chains of tomorrow
   [Anonymous], 2022, Minhashlshforest
   [Anonymous], 2023, Cve-2018-20671
   [Anonymous], 2023, Cve-2015-1791
   [Anonymous], 1998, The vulnerabilities in openSSL
   [Anonymous], 2023, Patchdiscovery
   Bawa M, 2005, Proceedings of the 14th International Conference on World Wide Web-WWW'05, P651, DOI [DOI 10.1145/1060745.1060840, 10.1145/1060745.1060840]
   Chandramohan M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P678, DOI 10.1145/2950290.2950350
   Chen XL, 2021, FEBS OPEN BIO, V11, P435, DOI 10.1002/2211-5463.13064
   d_link, 1995, About us
   Dai JR, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P1147
   David Y, 2017, ACM SIGPLAN NOTICES, V52, P79, DOI [10.1145/3140587.3062387, 10.1145/3062341.3062387]
   David Y, 2016, ACM SIGPLAN NOTICES, V51, P266, DOI [10.1145/2908080.2908126, 10.1145/2980983.2908126]
   David Y, 2014, ACM SIGPLAN NOTICES, V49, P349, DOI [10.1145/2594291.2594343, 10.1145/2666356.2594343]
   Ding SHH, 2019, P IEEE S SECUR PRIV, P472, DOI 10.1109/SP.2019.00003
   Engler D., 2001, Operating Systems Review, V35, P57, DOI 10.1145/502059.502041
   Gao J, 2018, IEEE INT CONF AUTOM, P896, DOI 10.1145/3238147.3240480
   github, 2014, binwalk
   Jang JY, 2012, P IEEE S SECUR PRIV, P48, DOI 10.1109/SP.2012.13
   Jia A, 2022, Arxiv, DOI arXiv:2210.15159
   Jia A, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3561385
   Jiang ZY, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1149, DOI 10.1145/3372297.3417240
   Kim S, 2017, P IEEE S SECUR PRIV, P595, DOI 10.1109/SP.2017.62
   Leiserson Charles Eric, 1994, Introduction to Algorithms, V3
   Li Z, 2016, ANN COMPUT SECURITY, P201, DOI 10.1145/2991079.2991102
   Openwsn, 2023, About us
   Peng JQ, 2019, I C DEPEND SYS NETWO, P605, DOI 10.1109/DSN.2019.00066
   Pewny J., 2014, P 30 ANN COMP SEC AP, P406, DOI [10.1145/2664243.2664269, DOI 10.1145/2664243.2664269]
   Ramos DA, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P49
   Sun PY, 2021, COMPUT COMMUN, V173, P95, DOI 10.1016/j.comcom.2021.03.011
   Tian Y, 2012, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2012.6227176
   Tong F, 2017, J PARALLEL DISTR COM, V103, P22, DOI 10.1016/j.jpdc.2016.10.012
   trendnet, 1996, About us
   Ul Haq I, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3446371
   Wei WT, 2022, INFORM FUSION, V82, P43, DOI 10.1016/j.inffus.2021.12.006
   Xu X, 2021, PROC INT CONF SOFTW, P873, DOI 10.1109/ICSE43902.2021.00084
   Xu XJ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P363, DOI 10.1145/3133956.3134018
   Xu Y, 2020, P 29 ACM SIGSOFT INT, P376, DOI DOI 10.1145/3395363.3397361
   Xue YX, 2019, IEEE T SOFTWARE ENG, V45, P1125, DOI 10.1109/TSE.2018.2827379
   Zhang H, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P887
NR 48
TC 1
Z9 1
U1 6
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2023
VL 49
IS 12
BP 5279
EP 5294
DI 10.1109/TSE.2023.3332732
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CL0K1
UT WOS:001125287400011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alhanahnah, M
   Stevens, C
   Chen, BC
   Yan, QB
   Bagheri, H
AF Alhanahnah, Mohannad
   Stevens, Clay
   Chen, Bocheng
   Yan, Qiben
   Bagheri, Hamid
TI IOTCOM: Dissecting Interaction Threats in IoT Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Interaction threats; IoT safety; formal verification
AB Due to the growing presence of Internet of Things (IoT) apps and devices in smart homes and smart cities, there are more and more concerns about their security and privacy risks. IoT apps normally interact with each other and the physical world to offer utility to the users. In this paper, we investigate the safety and security risks brought by the interactive behaviors of IoT apps. Two major challenges ensue in identifying the interaction threats: i) how to discover the threats across both cyber and physical channels; and ii) how to ensure the scalability of the detection approach. To address these challenges, we first provide a taxonomy of interaction threats between IoT apps, which contains seven classes of coordination threats categorized based on their interaction behaviors. Then, we present IoTCom, a compositional threat detection system capable of automatically detecting and verifying unsafe interactions between IoT apps and devices. IoTCom applies static analysis to automatically infer relevant apps' behaviors, and uses a novel strategy to trim the extracted app's behaviors prior to translating them into analyzable formal specifications, mitigating the state explosion associated with formal analysis. Our experiments with numerous bundles of real-world IoT apps have corroborated IoTCom's ability to effectively identify a broad spectrum of interaction threats triggered through cyber and physical channels, many of which were previously unknown. Finally, IoTCom uses an automatic verifier to validate the discovered threats. Our experimental results show that IoTCom significantly outperforms the existing techniques in terms of the computational time, and maintains the capability to perform its analysis across different IoT platforms.
C1 [Alhanahnah, Mohannad] Univ Wisconsin, Dept Comp Sci, Madison, WI 53706 USA.
   [Stevens, Clay; Bagheri, Hamid] Univ Nebraska, Sch Comp, Lincoln, NE 68588 USA.
   [Chen, Bocheng; Yan, Qiben] Michigan State Univ, Dept Comp Sci & Engn, E Lansing, MI 48824 USA.
C3 University of Wisconsin System; University of Wisconsin Madison;
   University of Nebraska System; University of Nebraska Lincoln; Michigan
   State University
RP Alhanahnah, M (corresponding author), Univ Wisconsin, Dept Comp Sci, Madison, WI 53706 USA.
EM mohannad@cs.wisc.edu; clay.stevens@huskers.unl.edu; chenboc1@msu.edu;
   qyan@msu.edu; bagheri@unl.edu
RI Yan, Qiben/AAZ-3002-2020; Chen, Bocheng/JMP-5857-2023
OI Yan, Qiben/0000-0001-6272-7668; Chen, Bocheng/0009-0001-0471-7063;
   /0000-0001-6686-466X; Stevens, Clay/0000-0001-5399-9661
FU National Science Foundation [CCF-1755890, CCF-1618132, CCF-2139845,
   CNS-1950171]
FX This work was supported by National Science Foundation under Grants
   CCF-1755890, CCF-1618132, CCF-2139845, and CNS-1950171.
CR Acar A, 2020, Arxiv, DOI [arXiv:1808.02741, 10.1145/3395351, DOI 10.1145/3395351]
   Agadakos I., 2017, P 2017 WORKSHOP CYBE, P37, DOI 10.1145/3140241.3140252
   Alhanahnah Mohannad, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P272, DOI 10.1145/3395363.3397347
   Ali B, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18030817
   apple, 2018, APPL HOMEKIT
   Apthorpe N.J., 2017, arXiv
   Babun Leonardo, 2021, Proceedings on Privacy Enhancing Technologies, V2021, P145, DOI 10.2478/popets-2021-0009
   Bagheri Hamid, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P514, DOI 10.1109/DSN.2016.53
   Bagheri H, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09932-6
   Bagheri H, 2018, PROC IEEE INT CONF S, P357, DOI 10.1109/ICSME.2018.00044
   Bagheri H, 2018, FORM ASP COMPUT, V30, P525, DOI 10.1007/s00165-017-0445-z
   Bagheri H, 2017, IEEE T SOFTWARE ENG, V43, P145, DOI 10.1109/TSE.2016.2587646
   Bagheri H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P106, DOI 10.1145/2568225.2568291
   Bagheri H, 2016, FORM ASP COMPUT, V28, P441, DOI 10.1007/s00165-016-0360-8
   Bagheri H, 2015, IEEE T SOFTWARE ENG, V41, P866, DOI 10.1109/TSE.2015.2419611
   Bagheri H, 2010, LECT NOTES COMPUT SC, V6395, P376
   Bastys I, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P1102, DOI 10.1145/3243734.3243841
   Celik ZB, 2018, Arxiv, DOI arXiv:1809.06962
   Celik ZB, 2018, Arxiv, DOI arXiv:1805.08876
   Brida SG, 2021, PROC INT CONF SOFTW, P1135, DOI 10.1109/ICSE43902.2021.00105
   Busold C, 2015, LECT NOTES COMPUT SC, V8975, P272, DOI 10.1007/978-3-662-47854-7_17
   Celik ZB, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23326
   Celik ZB, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P147
   Celik ZB, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1687
   Chen JY, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23159
   Chen Y., 2022, PROC 31 USENIX SECUR
   Chi H., 2018, ARXIV
   Nguyen DT, 2018, CONEXT'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON EMERGING NETWORKING EXPERIMENTS AND TECHNOLOGIES, P191, DOI 10.1145/3281411.3281440
   Davidson Chad, 2019, Smart Grid and Internet of Things. Second EAI International Conference, SGIoT 2018. Proceedings. Lecture Notes of the Institute for Computer Sciences, Social Informatics and Telecommunications Engineering (LNICST 256), P46, DOI 10.1007/978-3-030-05928-6_5
   Ding WB, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P832, DOI 10.1145/3243734.3243865
   Fernandes E, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23119
   flow.microsoft, 2020, MICR
   github, 2019, IOTMAL BENCHM APP RE
   github, 2018, SMARTTHINGS COMM RES
   google, 2018, GOOGL HOM
   Goudbeek A, 2018, IEEE TRUST BIG, P1446, DOI 10.1109/TrustCom/BigDataSE.2018.00201
   Hsu KH, 2019, IEEE T INF FOREN SEC, V14, P2607, DOI 10.1109/TIFS.2019.2899758
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Jia YHA, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23051
   Lagesse Brent, 2018, 2018 IEEE International Conference on Pervasive Computing and Communications Workshops (PerCom Workshops), P185, DOI 10.1109/PERCOMW.2018.8480257
   Liang CJM, 2016, BUILDSYS'16: PROCEEDINGS OF THE 3RD ACM CONFERENCE ON SYSTEMS FOR ENERGY-EFFCIENT BUILT ENVIRONMENTS, P133, DOI 10.1145/2993422.2993426
   Mahadewa K, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P2, DOI 10.1145/3460319.3464838
   Mansoor N, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P785, DOI 10.1145/3236024.3275534
   Mirzaei N, 2016, PROC INT CONF SOFTW, P559, DOI 10.1145/2884781.2884853
   Nagendra V, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P1625, DOI 10.1145/3366423.3380234
   Newcomb JL, 2017, PROCEEDINGS OF THE 2017 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!'17), P119, DOI 10.1145/3133850.3133860
   platform.ifttt, 2019, IFTTT PLATF DOC
   Rahmati A, 2018, 2018 IEEE CYBERSECURITY DEVELOPMENT CONFERENCE (SECDEV 2018), P29, DOI 10.1109/SecDev.2018.00012
   smartthings, 2018, SMARTTHINGS CLASS DO
   statista, 2021, SMART HOM US STAT ST
   statista, 2021, GLOB SMART HOM MARK
   Stevens Clay, 2020, SEAD 2020: Proceedings of the 3rd SIGSOFT International Workshop on Software Security from Design to Deployment, P3, DOI 10.1145/3416507.3423188
   Stevens C, 2020, PROC INT CONF SOFTW, P1522, DOI 10.1145/3377811.3380365
   Surbatovich M, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P1501, DOI 10.1145/3038912.3052709
   tasi, 2021, IFTTT APPL OP GAR DO
   Tekeoglu A, 2016, IEEE INT CONF MOB, P343, DOI [10.1109/MASS.2016.051, 10.1109/MASS.2016.37]
   Thapliyal H, 2018, 2018 IEEE 4TH INTERNATIONAL SYMPOSIUM ON SMART ELECTRONIC SYSTEMS (ISES 2018), P31, DOI 10.1109/iSES.2018.00017
   Tian Y, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P361
   Trimananda Rahmadi, 2020, ESEC/FSE 2020: Proceedings of the 28th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P1215, DOI 10.1145/3368089.3409682
   Ur B, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P3227, DOI 10.1145/2858036.2858556
   Wang Q, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1439, DOI 10.1145/3319535.3345662
   Wang Q, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23282
   Wilson J, 2017, MOBISYS'17: PROCEEDINGS OF THE 15TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P464, DOI 10.1145/3081333.3081342
   Xiao F, 2020, IEEE T EMERG TOP COM, V8, P267, DOI 10.1109/TETC.2017.2754103
   Yassein MB, 2016, 2016 INTERNATIONAL CONFERENCE ON ENGINEERING & MIS (ICEMIS)
   Yu T., 2015, P 14 ACM WORKSH HOT, P5
   zapier, 2020, ZAP
   Zhang W, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P1074, DOI 10.1145/3243734.3243820
NR 69
TC 3
Z9 4
U1 3
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1523
EP 1539
DI 10.1109/TSE.2022.3179294
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600008
DA 2024-07-18
ER

PT J
AU Chen, AR
   Chen, TH
   Wang, SW
AF Chen, An Ran
   Chen, Tse-Hsun (Peter)
   Wang, Shaowei
TI T-Evos: A Large-Scale Longitudinal Study on CI Test Execution and
   Failure
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Computer bugs; Benchmark testing; Java; Manuals; Data collection;
   Software testing; Evolution and maintenance; mining software
   repositories; software testing
ID REPAIR
AB Continuous integration is widely adopted in software projects to reduce the time it takes to deliver the changes to the market. To ensure software quality, developers also run regression test cases in a continuous fashion. The CI practice generates commit-by-commit software evolution data that provides great opportunities for future testing research. However, such data is often unavailable due to space limitation (e.g., developers only keep the data for a certain period) and the significant effort involved in re-running the test cases on a per-commit basis. In this paper, we present T-Evos, a dataset on test result and coverage evolution, covering 8,093 commits across 12 open-source Java projects. Our dataset includes the evolution of statement-level code coverage for every test case (either passed and failed), test result, all the builds information, code changes, and the corresponding bug reports. We conduct an initial analysis to demonstrate the overall dataset. In addition, we conduct an empirical study using T-Evos to study the characteristics of test failures in CI settings. We find that test failures are frequent, and while most failures are resolved within a day, some failures require several weeks to resolve. We highlight the relationship between code changes and test failure, and provide insights for future automated testing research. Our dataset may be used for future testing research and benchmarking in CI. Our findings provide an important first step in understanding code coverage evolution and test failures in a continuous environment.
C1 [Chen, An Ran; Chen, Tse-Hsun (Peter)] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
   [Wang, Shaowei] Univ Manitoba, Dept Comp Sci, Winnipeg, MB R3T 2N2, Canada.
C3 Concordia University - Canada; University of Manitoba
RP Chen, AR (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
EM anr_chen@encs.concordia.ca; peterc@encs.concordia.ca;
   shaowei@cs.umanitoba.ca
OI Chen, An Ran/0000-0003-3137-7540; Chen, Tse-Hsun/0000-0003-4027-0905
CR Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Bell J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P433, DOI 10.1145/3180155.3180164
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Beller M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P179, DOI 10.1145/2786805.2786843
   Catolino G, 2019, PROC IEEE INT CONF S, P223, DOI 10.1109/ICSME.2019.00034
   eclemma, JAC
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   github, 2021, T EV
   Hilton M, 2018, IEEE INT CONF AUTOM, P53, DOI 10.1145/3238147.3238183
   Jira, JIR REST AP
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Just R, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P287, DOI 10.1145/3213846.3213870
   Kim D. J., 2021, PROC JOINT EUR SOFTW, P187
   Kim DJ, 2021, PROC INT CONF SOFTW, P62, DOI 10.1109/ICSE43902.2021.00019
   Labuschagne A, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P821, DOI 10.1145/3106237.3106288
   Lam W, 2020, PROC INT CONF SOFTW, P1471, DOI 10.1145/3377811.3381749
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Lin Derrick, 2017, P COMPANION 2017 ACM, P55, DOI [10.1145/3135932, DOI 10.1145/3135932, 10.1145/3135932.3135941]
   Liu K, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110817
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Madeiral F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P468, DOI [10.1109/saner.2019.8667991, 10.1109/SANER.2019.8667991]
   Marsavina C, 2014, IEEE INT WORK C SO, P195, DOI 10.1109/SCAM.2014.28
   maven.apache, MAV SUR REP PLUG
   Palomba F, 2017, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2017.12
   Peng Z, 2022, IEEE T SOFTWARE ENG, V48, P1979, DOI 10.1109/TSE.2020.3045914
   Pinto L.S., 2012, P ACM SIGSOFT 20 INT, P1
   Pinto L. S., 2012, P ACM SIGSOFT 20 INT, P1
   Rogers RO, 2004, LECT NOTES COMPUT SC, V3092, P68
   Rosenberg Carl Martin, 2020, ESEM 20 ACM IEEE INT, V18, DOI 10.1145/3382494.3410684
   Saha RK, 2018, IEEE WORK CONF MIN S, P10, DOI 10.1145/3196398.3196473
   Wen M, 2017, Arxiv, DOI arXiv:1707.05172
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Yi J, 2018, EMPIR SOFTW ENG, V23, P2948, DOI 10.1007/s10664-017-9552-y
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
   zenodo, T EV
   Zhang P., DOMAIN SPECIFIC FIXE
NR 39
TC 0
Z9 0
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2352
EP 2365
DI 10.1109/TSE.2022.3218264
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600053
DA 2024-07-18
ER

PT J
AU Jangali, M
   Tang, YM
   Alexandersson, N
   Leitner, P
   Yang, JQ
   Shang, WY
AF Jangali, Mostafa
   Tang, Yiming
   Alexandersson, Niclas
   Leitner, Philipp
   Yang, Jinqiu
   Shang, Weiyi
TI Automated Generation and Evaluation of JMH Microbenchmark Suites From
   Unit Tests
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Performance; performance testing; performance microbenchmarking; JMH;
   performance mutation testing
AB Performance is a crucial non-functional requirement of many software systems. Despite the widespread use of performance testing, developers still struggle to construct and evaluate the quality of performance tests. To address these two major challenges, we implement a framework, dubbed ju2jmh, to automatically generate performance microbenchmarks from JUnit tests and use mutation testing to study the quality of generated microbenchmarks. Specifically, we compare our ju2jmh generated benchmarks to manually written JMH benchmarks and to automatically generated JMH benchmarks using the AutoJMH framework, as well as directly measuring system performance with JUnit tests. For this purpose, we have conducted a study on three subjects (Rxjava, Eclipse-collections, and Zipkin) with similar to 454K source lines of code (SLOC), 2,417 JMH benchmarks (including manually written and generated AutoJMH benchmarks) and 35,084 JUnit tests. Our results show that the ju2jmh generated JMH benchmarks consistently outperform using the execution time and throughput of JUnit tests as a proxy of performance and JMH benchmarks automatically generated using the AutoJMH framework while being comparable to JMH benchmarks manually written by developers in terms of tests' stability and ability to detect performance bugs. Nevertheless, ju2jmh benchmarks are able to cover more of the software applications than manually written JMH benchmarks during the microbenchmark execution. Furthermore, ju2jmh benchmarks are generated automatically, while manually written JMH benchmarks require many hours of hard work and attention; therefore our study can reduce developers' effort to construct microbenchmarks. In addition, we identify three factors (too low test workload, unstable tests and limited mutant coverage) that affect a benchmark's ability to detect performance bugs. To the best of our knowledge, this is the first study aimed at assisting developers in fully automated microbenchmark creation and assessing microbenchmark quality for performance testing.
C1 [Jangali, Mostafa; Tang, Yiming; Yang, Jinqiu; Shang, Weiyi] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
   [Alexandersson, Niclas; Leitner, Philipp] Chalmers Univ Gothenburg, Software Engn Div, S-40530 Gothenburg, Sweden.
C3 Concordia University - Canada; Chalmers University of Technology
RP Tang, YM (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
EM m_jangal@encs.concordia.ca; t_yiming@encs.concordia.ca;
   nicale@student.chalmers.se; philipp.leitner@chalmers.se;
   jinqiuy@encs.concordia.ca; shang@encs.concordia.ca
OI TANG, YIMING/0000-0003-2378-8972
CR AlGhamdi H. M., 2015, J SOFTW EVOL PROCESS, P2276
   AlGhmadi HM, 2016, PROC IEEE INT CONF S, P279, DOI 10.1109/ICSME.2016.46
   Bezemer CP, 2019, PROCEEDINGS OF THE 2019 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '19), P45, DOI 10.1145/3297663.3309672
   Bulej L, 2017, AUTOMAT SOFTW ENG, V24, P139, DOI 10.1007/s10515-015-0188-0
   Click C., 2010, ART JAVA BENCHMARKIN
   Costa D, 2021, IEEE T SOFTWARE ENG, V47, P1452, DOI 10.1109/TSE.2019.2925345
   Curtsinger C, 2013, ACM SIGPLAN NOTICES, V48, P219, DOI 10.1145/2499368.2451141
   Delgado-Pérez P, 2021, SOFTW TEST VERIF REL, V31, DOI 10.1002/stvr.1728
   Ding ZS, 2020, PROC INT CONF SOFTW, P1435, DOI 10.1145/3377811.3380351
   Georges A, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P57
   Georges A, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P367
   Google Corporation, 2015, CAL
   Hesterberg TC, 2015, AM STAT, V69, P371, DOI 10.1080/00031305.2015.1089789
   Huang P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P60, DOI 10.1145/2568225.2568232
   I. Clarkware Consulting, 2009, JUN
   Jiang ZM, 2015, IEEE T SOFTWARE ENG, V41, P1091, DOI 10.1109/TSE.2015.2445340
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Kalibera T, 2020, Arxiv, DOI arXiv:2007.10899
   Laaber C., 2021, PA PERFORMANCE CHANG
   Laaber C, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P989, DOI 10.1145/3368089.3409683
   Laaber C, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P410, DOI 10.1145/3293882.3338982
   Laaber C, 2019, EMPIR SOFTW ENG, V24, P2469, DOI 10.1007/s10664-019-09681-1
   Laaber C, 2018, IEEE WORK CONF MIN S, P119, DOI 10.1145/3196398.3196407
   Leitner P., 2017, P 8 ACMSPEC INT C PE, P373
   Leitner P, 2016, ACM T INTERNET TECHN, V16, DOI 10.1145/2885497
   Linares-Vásquez M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P233, DOI 10.1145/3106237.3106275
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Mytkowicz T, 2009, ACM SIGPLAN NOTICES, V44, P265, DOI 10.1145/1508284.1508275
   Nistor A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P902, DOI 10.1109/ICSE.2015.100
   Nistor A, 2013, IEEE WORK CONF MIN S, P237, DOI 10.1109/MSR.2013.6624035
   O. Corporation, 2016, JAV MICR HARN JMH
   Olivo O, 2015, ACM SIGPLAN NOTICES, V50, P369, DOI [10.1145/2813885.2737966, 10.1145/273924.2737966]
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Petrovic G., 2021, ARXIV
   Radu Aida, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P399, DOI 10.1109/MSR.2019.00066
   Ren SQ, 2010, J APPL STAT, V37, P1487, DOI 10.1080/02664760903046102
   Rodriguez-Cancio M, 2016, IEEE INT CONF AUTOM, P132, DOI 10.1145/2970276.2970346
   Shacham O, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P408, DOI 10.1145/1542476.1542522
   Shipilev A., 2021, JAVA BENCHMARKING EA
   Shipilev A., 2021, NANOTRUSTING NANOTIM
   Stefan P., 2017, P 8 ACM SPEC INT C P, P401, DOI [DOI 10.1145/3030207.3030226, 10. 1145/3030207.3030226]
   Stine RA, 2001, SOCIOL METHOD RES, V30, P124, DOI 10.1177/0049124101030001011
   Weyuker EJ, 2000, IEEE T SOFTWARE ENG, V26, P1147, DOI 10.1109/32.888628
   Zaman S., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P199, DOI 10.1109/MSR.2012.6224281
NR 45
TC 0
Z9 0
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1704
EP 1725
DI 10.1109/TSE.2022.3188005
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600017
DA 2024-07-18
ER

PT J
AU Li, ZX
   Yu, Y
   Wang, T
   Lei, Y
   Wang, Y
   Wang, HM
AF Li, Zhixing
   Yu, Yue
   Wang, Tao
   Lei, Yan
   Wang, Ying
   Wang, Huaimin
TI To Follow or Not to Follow: Understanding
   <i>Issue</i>/<i>Pull</i>-<i>Request</i> <i>Templates</i> on GitHub
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Software development management; Computer bugs; Guidelines;
   Documentation; Collaboration; Behavioral sciences; GitHub; issue
   template; open source software; pull-request template
AB For most Open Source Software (OSS) projects, issues and Pull-requests (PR) are the primary means by which stakeholders of a project report and discuss software problems and code changes, and their descriptions are important for people to understand them. To help ensure the informational quality of issue/PR descriptions, GitHub introduced the issue/PR template feature, which pre-populates the description for anyone trying to open a new issue/PR. To better understand this feature, we report on a large-scale, mixed-methods empirical study of templates that explores contents, impacts, and perceptions. Our results show that templates typically contain elements to greet contributors, explain project guidelines, and collect relevant information. After template adoption, the monthly volume of incoming issues and PRs decreases, and issues have fewer monthly discussion comments and longer resolution duration. Although both contributors and maintainers positively rated the usefulness of templates from various aspects, they also reported challenges in using templates (e.g., excessive and irrelevant information request) and suggested potential improvements of the template feature (e.g., better user interaction and advanced automation). This work contributes to the informed use and targeted improvement of templates to enhance OSS practitioners' collaboration and interaction.
C1 [Li, Zhixing; Yu, Yue; Wang, Tao; Wang, Huaimin] Natl Univ Def Technol, Coll Comp, Changsha 410073, Hunan, Peoples R China.
   [Lei, Yan] Chongqing Univ, Sch Big Data & Software Engn, Chongqing 400044, Peoples R China.
   [Wang, Ying] Northeasthern Univ, Software Coll, Shenyang 110004, Liaoning, Peoples R China.
C3 National University of Defense Technology - China; Chongqing University
RP Yu, Y (corresponding author), Natl Univ Def Technol, Coll Comp, Changsha 410073, Hunan, Peoples R China.
EM lizhixing15@nudt.edu.cn; yuyue@nudt.edu.cn; taowang2005@nudt.edu.cn;
   yanlei@cqu.edu.cn; wangying@swc.neu.edu.cn; hmwang@nudt.edu.cn
RI Wang, Tao/G-9636-2012
OI Yu, Yue/0000-0002-9865-2212; Li, Zhixing/0000-0002-7981-5418
FU National Grand RD Plan [2020AAA0103504]; Major Key Project of PCL
FX This work was supported in part by National Grand R&D Plan under Grant
   2020AAA0103504, and in part by the Major Key Project of PCL.
CR Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], 2019, GITHUB DRAFT PULL RE
   [Anonymous], 2016, GITHUB ISSUE PULL RE
   [Anonymous], 2022, Github REST API
   [Anonymous], 2022, Replication Package
   [Anonymous], 2022, ABOUT US
   [Anonymous], 2022, CREAT ISS FORMS GITH
   [Anonymous], 2016, COMMUNICATION
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Baysal O, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P666, DOI 10.1145/2635868.2635887
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Breu S, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P301
   Campbell JL, 2013, SOCIOL METHOD RES, V42, P294, DOI 10.1177/0049124113500475
   Chacon S, 2018, PRO GIT
   Chaparro O, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P396, DOI 10.1145/3106237.3106285
   Chen AR, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09893-w
   Cohen J., 2013, APPL MULTIPLE REGRES, DOI DOI 10.2307/2064799
   Cook T. D., 1979, QUASIEXPERIMENTATION
   Davies S, 2014, P 8 ACM IEEE INT S E, DOI [10.1145/2652524.2652541, DOI 10.1145/2652524.2652541]
   Di Penta Massimiliano, 2012, P ACM SIGSOFT 20 INT, P1
   Ebert F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P49, DOI [10.1109/SANER.2019.8668024, 10.1109/saner.2019.8668024]
   Elazhary O, 2019, PROC IEEE INT CONF S, P286, DOI 10.1109/ICSME.2019.00043
   Ford D, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P51, DOI 10.1109/ICSE-SEIS.2019.00014
   Fusch PI, 2015, QUAL REP, V20, P1408
   Gerosa M, 2021, Arxiv, DOI arXiv:2101.10291
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Gutwin C., 2004, Computer Supported Cooperative Work Conference Proceedings, P72, DOI 10.1145/1031607.1031621
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   Imbens GW, 2008, J ECONOMETRICS, V142, P615, DOI 10.1016/j.jeconom.2007.05.001
   Iyer RN, 2021, IEEE T SOFTWARE ENG, V47, P2632, DOI 10.1109/TSE.2019.2960357
   Kavaler D, 2017, IEEE INT CONF AUTOM, P72, DOI 10.1109/ASE.2017.8115620
   Lee A, 2017, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2017.25
   Li Renee, 2021, Proceedings of the ACM on Human-Computer Interaction, V5, DOI 10.1145/3449093
   Li Z, 2022, PROC ACM HUM COMPUT, V3, P1
   Li ZX, 2022, IEEE T SOFTWARE ENG, V48, P2173, DOI 10.1109/TSE.2021.3053403
   Li ZX, 2022, IEEE T SOFTWARE ENG, V48, P1309, DOI 10.1109/TSE.2020.3018726
   Liu ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P176, DOI 10.1109/ASE.2019.00026
   Maddila C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P874, DOI 10.1145/3338906.3340457
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   Moran K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P673, DOI 10.1145/2786805.2786857
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nakakoji Kumiyo, 2002, P INT WORKSHOP PRINC, P76, DOI DOI 10.1145/512035.512055
   Overney C, 2020, PROC INT CONF SOFTW, P1209, DOI 10.1145/3377811.3380410
   Panichella S, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106665
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Pinto G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P112, DOI 10.1109/SANER.2016.68
   Prana GAA, 2019, EMPIR SOFTW ENG, V24, P1296, DOI 10.1007/s10664-018-9660-3
   Ram A, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P201, DOI 10.1145/3236024.3236080
   Rastogi A, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240504
   Raymond Eric, 1999, KNOWLEDGE TECHNOLOGY, V12, P23, DOI DOI 10.1007/S12130-999-1026-0
   Song Y, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1551, DOI 10.1145/3368089.3417928
   Steinmacher I, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P256, DOI 10.1145/3180155.3180208
   Steinmacher I, 2016, PROC INT CONF SOFTW, P273, DOI 10.1145/2884781.2884806
   Tourani P, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P24, DOI 10.1109/SANER.2017.7884606
   Trockman A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P511, DOI 10.1145/3180155.3180209
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Tsay J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P144, DOI 10.1145/2635868.2635882
   Vasilescu B, 2016, PROC INT CONF SOFTW, P994, DOI 10.1145/2884781.2884875
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Wessel Mairieli, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274451
   Xin Tan, 2019, Proceedings of the ACM on Human-Computer Interaction, V3, DOI 10.1145/3359210
   Yu Y, 2016, SCI CHINA INFORM SCI, V59, DOI 10.1007/s11432-016-5595-8
   Zhang M., 2021, INFORM SOFTWARE TECH, V144
   Zhang XH, 2021, Arxiv, DOI arXiv:2111.13323
   Zhang Xunhui, 2021, arXiv
   Zhang ZY, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P86, DOI 10.1109/SEAA53835.2021.00020
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
   Zhou SR, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P350, DOI 10.1145/3338906.3338918
   Zhou SR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P105, DOI 10.1145/3180155.3180205
   Zimmermann T, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P137
NR 74
TC 1
Z9 2
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2530
EP 2544
DI 10.1109/TSE.2022.3224053
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600064
DA 2024-07-18
ER

PT J
AU Zhang, JX
   Liu, SY
   Gong, LN
   Zhang, HX
   Huang, ZQ
   Jiang, H
AF Zhang, Jingxuan
   Liu, Siyuan
   Gong, Lina
   Zhang, Haoxiang
   Huang, Zhiqiu
   Jiang, He
TI BEQAIN: An Effective and Efficient Identifier Normalization Approach
   With BERT and the Question Answering System
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Source coding; Software; Semantics; Programming; Natural languages;
   Codes; Task analysis; Identifier expansion; identifier normalization;
   identifier splitting; source code comprehension
ID SOURCE CODE IDENTIFIERS
AB As one of the most important resources to express the semantics of source code, identifiers are usually composed of several common or domain-specific terms and abbreviations, thus heavily hindering developers from analyzing and comprehending source code. Hence, it is very necessary to normalize identifiers, which aims to align the vocabulary found in identifiers with natural language words found in other software artifacts. Even though researchers have proposed several identifier normalization approaches in the literature, these approaches only rely on the lexical information in identifiers and related source code entities to normalize identifiers, suffering from the lack of deep semantic understanding of identifiers. In this paper, we propose an effective and efficient identifier normalization approach BEQAIN to split identifiers into their composing words and expand the enclosed abbreviations. Specifically, BEQAIN employs a deep learning model, which is mainly composed of a Bidirectional Encoder Representation from Transformers (BERT) layer and a Conditional Random Fields (CRF) layer to embed identifiers into low-level vectors and learn the identifier splitting patterns. The BERT-CRF network is also combined with a pre-processing component and a post-processing component to resolve the problems of over-splitting and under-splitting so as to improve the identifier splitting performance. Furthermore, BEQAIN also employs a Question Answering (Q&A) system to learn the abbreviation expansion mappings and leverages the current programming context to determine the exactly correct expansion when there are multiple expansions for specific abbreviations. After BEQAIN is fully trained, it can be used to normalize identifiers. We conduct extensive experiments to validate the effectiveness and efficiency of BEQAIN over two publicly available datasets with nine projects. Experimental results show that BEQAIN achieves the overall average Accuracy of 80.20% and outperforms the existing state-of-the-art approach by 9.88% in normalizing identifiers. The pre-processing and post-processing components could improve the Accuracy of BEQAIN in identifier splitting by 11.70%. Employing the programming context information could improve the Accuracy of BEQAIN in abbreviation expansion by 11.15% on average. In addition, the average normalization time of BEQAIN is less than one second. Finally, we also discuss some observations for the road ahead for identifier normalization to inspire other researchers.
C1 [Zhang, Jingxuan; Liu, Siyuan; Gong, Lina; Huang, Zhiqiu] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 210016, Peoples R China.
   [Zhang, Haoxiang] Queens Univ, Kingston, ON K7L 3N6, Canada.
   [Jiang, He] Dalian Univ Technol, Sch Software, Dalian 116024, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics; Queens University -
   Canada; Dalian University of Technology
RP Zhang, JX (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 210016, Peoples R China.
EM jxzhang@nuaa.edu.cn; liusiyuan@nuaa.edu.cn; gonglina@nuaa.edu.cn;
   haoxiang.zhang@acm.org; zqhuang@nuaa.edu.cn; jianghe@dlut.edu.cn
RI zheng, Li/JVN-7465-2024; Chen, Jin/KBQ-0163-2024
OI Chen, Jin/0009-0005-5844-635X; Gong, Lina/0000-0002-5272-6706
FU National Natural Science Foundation of China [61902181, 62032004]; Fund
   of Prospective Layout of Scientific Research for NUAA (Nanjing
   University of Aeronautics and Astronautics)
FX This work was supported in part by the National Natural Science
   Foundation of China under Grants 61902181 and 62032004 and in part by
   the Fund of Prospective Layout of Scientific Research for NUAA (Nanjing
   University of Aeronautics and Astronautics).
CR Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   Arnaoudova V, 2014, IEEE T SOFTWARE ENG, V40, P502, DOI 10.1109/TSE.2014.2312942
   Binkley D, 2011, Proceedings of the Working Conference on Mining Software Repositories (MSR), P203
   Börstler J, 2016, IEEE T SOFTWARE ENG, V42, P886, DOI 10.1109/TSE.2016.2527791
   Butler S, 2011, LECT NOTES COMPUT SC, V6813, P130, DOI 10.1007/978-3-642-22655-7_7
   Cai Q., 2019, PROC IEEE 10 INT C S, P1
   Carvalho NR, 2015, J SYST SOFTWARE, V100, P117, DOI 10.1016/j.jss.2014.10.013
   Corazza A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P233, DOI 10.1109/ICSM.2012.6405277
   De Lucia A, 2011, IEEE T SOFTWARE ENG, V37, P205, DOI 10.1109/TSE.2010.89
   Deissenboeck F, 2015, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2015.9
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Dongxue Chu, 2014, Applied Mechanics and Materials, V687-691, P1536, DOI 10.4028/www.scientific.net/AMM.687-691.1536
   Efstathiou Vasiliki, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P29, DOI 10.1109/MSR.2019.00015
   Enslen E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P71, DOI 10.1109/MSR.2009.5069482
   Feild H, 2006, PROCEEDINGS OF THE 10TH IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND APPLICATIONS, P365
   Ge X, 2012, PROC INT CONF SOFTW, P211, DOI 10.1109/ICSE.2012.6227192
   Guerrouj L., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P103, DOI 10.1109/WCRE.2012.20
   Guerrouj L, 2013, J SOFTW-EVOL PROC, V25, P575, DOI 10.1002/smr.539
   Guo J, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2017.9
   Hill E., 2008, P 2008 INT WORKING C, P79
   Hill E, 2014, EMPIR SOFTW ENG, V19, P1754, DOI 10.1007/s10664-013-9261-0
   Jiang YJ, 2022, IEEE T SOFTWARE ENG, V48, P519, DOI 10.1109/TSE.2020.2995736
   Jiang YJ, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P578, DOI 10.1145/3468264.3468616
   Jiang YJ, 2020, IEEE T SOFTWARE ENG, V46, P732, DOI 10.1109/TSE.2018.2868762
   Kim S, 2016, EMPIR SOFTW ENG, V21, P565, DOI 10.1007/s10664-015-9369-5
   Lafferty John, 2001, INT C MACH LEARN ICM
   Lawrie D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P113, DOI 10.1109/ICSM.2011.6080778
   Lawrie Dawn, 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P3, DOI 10.1109/WCRE.2010.10
   Lawrie D, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P139
   Li GJ, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3379443
   Li JX, 2018, PROCEEDINGS OF THE 2018 EURO-ASIA CONFERENCE ON ENVIRONMENT AND CSR: TOURISM, SOCIETY AND EDUCATION SESSION. PT I, P175
   Lin B, 2017, IEEE INT WORK C SO, P81, DOI 10.1109/SCAM.2017.17
   Liu H, 2016, PROC INT CONF SOFTW, P1063, DOI 10.1145/2884781.2884841
   Liu H, 2015, IEEE T SOFTWARE ENG, V41, P887, DOI 10.1109/TSE.2015.2427831
   Liu K, 2019, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2019.00019
   Liu N, 2018, LECT NOTES COMPUT SC, V11305, P558, DOI 10.1007/978-3-030-04221-9_50
   Liu SY, 2021, ASIA PAC SOFWR ENG, P192, DOI 10.1109/APSEC53868.2021.00027
   Liu ZX, 2021, IEEE T SOFTWARE ENG, V47, P2012, DOI 10.1109/TSE.2019.2941943
   Liu ZW, 2018, IEEE T PATTERN ANAL, V40, P1814, DOI 10.1109/TPAMI.2017.2737535
   Madani N, 2010, EUR CON SFTWR MTNCE, P68, DOI 10.1109/CSMR.2010.31
   Newman CD, 2022, IEEE T SOFTWARE ENG, V48, P3506, DOI 10.1109/TSE.2021.3098242
   Newman CD, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110740
   Newman CD, 2019, PROC IEEE INT CONF S, P269, DOI 10.1109/ICSME.2019.00040
   Noto M, 2000, IEEE SYS MAN CYBERN, P2316, DOI 10.1109/ICSMC.2000.886462
   Omri S., 2020, DEEP LEARNING SOFTWA, P209
   Pantiuchina J, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3408302
   Scanniello G, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3104029
   Schankin A, 2018, INT C PROGRAM COMPRE, P31, DOI 10.1145/3196321.3196332
   Sennrich R, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1715
   Sureka A., 2012, Proceedings of the First International Workshop on Software Mining, P1
   Vaswani A, 2017, ADV NEUR IN, V30
   Wainakh Y, 2021, PROC INT CONF SOFTW, P562, DOI 10.1109/ICSE43902.2021.00059
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Zhang Y, 2007, P 45 ACL, V45, P840
NR 55
TC 1
Z9 1
U1 3
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2597
EP 2620
DI 10.1109/TSE.2022.3227559
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600068
DA 2024-07-18
ER

PT J
AU Bal, PR
   Kumar, S
AF Bal, Pravas Ranjan
   Kumar, Sandeep
TI A Data Transfer and Relevant Metrics Matching Based Approach for
   Heterogeneous Defect Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Measurement; Software; Data models; Predictive models; Kernel;
   Correlation; Transfer learning; Heterogeneous defect prediction;
   heterogeneous metrics; chi square test; random forest; relevant metrics
AB Heterogeneous defect prediction (HDP) is a promising research area in the software defect prediction domain to handle the unavailability of the past homogeneous data. In HDP, the prediction is performed using source dataset in which the independent features (metrics) are entirely different than the independent features of target dataset. One important assumption in machine learning is that independent features of the source and target datasets should be relevant to each other for better prediction accuracy. However, these assumptions do not generally hold in HDP. Further in HDP, the selected source dataset for a given target dataset may be of small size causing insufficient training. To resolve these issues, we have proposed a novel heterogeneous data preprocessing method, namely, Transfer of Data from Target dataset to Source dataset selected using Relevance score (TDTSR), for heterogeneous defect prediction. In the proposed approach, we have used chi-square test to select the relevant metrics between source and target datasets and have performed experiments using proposed approach with various machine learning algorithms. Our proposed method shows an improvement of at least 14% in terms of AUC score in the HDP scenario compared to the existing state of the art models.
C1 [Bal, Pravas Ranjan; Kumar, Sandeep] Indian Inst Technol Roorkee, Dept Comp Sci & Engn, Roorkee 247667, Uttarakhand, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Roorkee
RP Kumar, S (corresponding author), Indian Inst Technol Roorkee, Dept Comp Sci & Engn, Roorkee 247667, Uttarakhand, India.
EM pravasranjan90@gmail.com; sandeepkumargarg@gmail.com
RI Kumar, Dr Sandeep/AAW-6313-2020; Kumar, Sandeep/AAW-6570-2020
OI Kumar, Dr Sandeep/0000-0003-0747-6776; Kumar,
   Sandeep/0000-0002-3250-4866
FU VAJRA Scheme of Government of India; SPARC Scheme of Government of India
FX Authors are thankful to the anonymous reviewers and the editor for their
   valuable comments and acknowledge the funding received under VAJRA and
   SPARC Schemes of Government of India.
CR Bal P. R., 2018, ICSOFT, P103
   Bal PR, 2018, ICSOFT, P354
   Bal PR, 2020, IEEE T RELIAB, V69, P1355, DOI 10.1109/TR.2020.2996261
   Brownlee J., 2020, Machine Learning Mastery
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen X., 2020, INFORM SOFTWARE TECH, V130
   Cheng M., 2016, P 28 INT C SOFTW ENG, P171
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Cohen J., 2013, APPL MULTIPLE REGRES, DOI DOI 10.2307/2064799
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Friedman M, 1940, ANN MATH STAT, V11, P86, DOI 10.1214/aoms/1177731944
   He P., 2014, ARXIV
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Krasner H, 2018, Consortium for IT Software Quality, P10
   Kuhn HW, 2005, NAV RES LOG, V52, P7, DOI 10.1002/nav.20053
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li ZQ, 2019, AUTOMAT SOFTW ENG, V26, P599, DOI 10.1007/s10515-019-00259-1
   Li ZQ, 2018, AUTOMAT SOFTW ENG, V25, P201, DOI 10.1007/s10515-017-0220-7
   Li ZQ, 2017, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2017.19
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Peebles P.Z., 2001, PROBABILITY RANDOM V, V3
   PLACKETT RL, 1983, INT STAT REV, V51, P59, DOI 10.2307/1402731
   Rathore SS, 2017, EXPERT SYST APPL, V82, P357, DOI 10.1016/j.eswa.2017.04.014
   Rathore SS, 2017, KNOWL-BASED SYST, V119, P232, DOI 10.1016/j.knosys.2016.12.017
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Tantithamthavorn C, 2015, R PACKAGE DEFECT PRE
   Tong HN, 2021, IEEE T SOFTWARE ENG, V47, P1886, DOI 10.1109/TSE.2019.2939303
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xu Z, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P10, DOI 10.1109/QRS.2019.00015
   Yu Q, 2017, J SYST SOFTWARE, V132, P366, DOI 10.1016/j.jss.2017.06.070
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
NR 35
TC 4
Z9 4
U1 5
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2023
VL 49
IS 3
BP 1232
EP 1245
DI 10.1109/TSE.2022.3173678
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA A1QF2
UT WOS:000952938700014
DA 2024-07-18
ER

PT J
AU Wang, HJ
   Ma, PC
   Yuan, YY
   Liu, ZB
   Wang, S
   Tang, QY
   Nie, S
   Wu, S
AF Wang, Huaijin
   Ma, Pingchuan
   Yuan, Yuanyuan
   Liu, Zhibo
   Wang, Shuai
   Tang, Qiyi
   Nie, Sen
   Wu, Shi
TI Enhancing DNN-Based Binary Code Function Search With Low-Cost
   Equivalence Checking
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Reverse engineering; symbolic execution; software similarity; deep
   learning
ID SIMILARITY
AB Binary & nbsp;code function search has been used as the core basis of various security and software engineering applications, including malware clustering, code clone detection, and vulnerability audits. Recognizing logically similar assembly functions, however, remains a challenge. Most binary code search tools rely on program structure-level information, such as control flow and data flow graphs, that is extracted using program analysis techniques or deep neural networks (DNNs). However, DNN-based techniques capture lexical-, control structure-, or data flow-level information of binary code for representation learning, which is often too coarse-grained and does not accurately denote program functionality. Additionally, it may exhibit low robustness to a variety of challenging settings, such as compiler optimizations and obfuscations. This paper proposes a general solution for enhancing the top-k ranked candidates in DNN-based binary code function search. The key idea is to design a low-cost and comprehensive equivalence check that quickly exposes functionality deviations between the target function and its top-k matched functions. Functions that fail this equivalence check can be shaved from the top-k list, and functions that pass the check can be revisited to move ahead on the top-k ranked candidates, in a deliberate way. We design a practical and efficient equivalence check, named BinUSE, using under-constrained symbolic execution (USE). USE, a variant of symbolic execution, improves scalability by initiating symbolic execution directly from function entry points and relaxing constraints on function parameters. It eliminates the overhead incurred by path explosion and costly constraints. BinUSE is specifically designed to deliver an assembly function-level equivalence check, enhancing DNN-based binary code search by reducing its false alarms with low cost. Our evaluation shows that BinUSE can enable a general and effective enhancement of four state-of-the-art DNN-based binary code search tools when confronted with challenges posed by different compilers, optimizations, obfuscations, and architectures.
C1 [Wang, Huaijin; Ma, Pingchuan; Yuan, Yuanyuan; Liu, Zhibo; Wang, Shuai] HKUST, Dept Comp Sci & Engn, Clear Water Bay, Hong Kong, Peoples R China.
   [Tang, Qiyi; Nie, Sen; Wu, Shi] Tencent Secur Keen Lab, Shenzhen 518000, Guangdong, Peoples R China.
C3 Hong Kong University of Science & Technology
RP Wang, S (corresponding author), HKUST, Dept Comp Sci & Engn, Clear Water Bay, Hong Kong, Peoples R China.
EM hwangdz@cse.ust.hk; pmaab@cse.ust.hk; yyuanaq@cse.ust.hk;
   zliudc@cse.ust.hk; shuaiw@cse.ust.hk; dodgetang@tencent.com;
   snie@tencent.com; shiwu@tencent.com
RI Ma, Pingchuan/AFR-0634-2022
OI Ma, Pingchuan/0000-0003-3752-0803; Wang, Huaijin/0000-0002-1066-0331;
   Wang, Shuai/0000-0002-0866-0308; Liu, Zhibo/0000-0002-7872-1129; Yuan,
   Yuanyuan/0000-0002-3053-8923
FU Bridge Gap Fund of TTC/HKUST [BGF.003.2021]; CCF-Tencent Open Research
   Fund
FX This work was supported in part by a Bridge Gap Fund of TTC/HKUST
   underGrant BGF.003.2021 and CCF-Tencent Open Research Fund.
CR Alon U., 2018, ARXIV
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   [Anonymous], 2017, P MACHINE LEARNING R
   [Anonymous], 2022, TRANSL GETT
   [Anonymous], 2021, FAST LIB ID REC TECH
   [Anonymous], 2022, PRINTF CHK
   [Anonymous], 2021, MOKLEE EX TIM
   [Anonymous], 2021, RES ART BINUSE
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   Bao T, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P845
   Bauman E, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23300
   Ben-Nun Tal, 2018, P 32 INT C NEURAL IN, V31, P3589
   Brumley D, 2008, P IEEE S SECUR PRIV, P143, DOI 10.1109/SP.2008.17
   Busse Frank, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P63, DOI 10.1145/3395363.3397360
   Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   Cesare S., 2012, Software Similarity and Classification
   Chandramohan M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P678, DOI 10.1145/2950290.2950350
   Client Crash, 2021, US
   David Y, 2017, ACM SIGPLAN NOTICES, V52, P79, DOI [10.1145/3140587.3062387, 10.1145/3062341.3062387]
   David Y, 2016, ACM SIGPLAN NOTICES, V51, P266, DOI [10.1145/2908080.2908126, 10.1145/2980983.2908126]
   David Y, 2014, ACM SIGPLAN NOTICES, V49, P349, DOI [10.1145/2594291.2594343, 10.1145/2666356.2594343]
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Ding SHH, 2019, P IEEE S SECUR PRIV, P472, DOI 10.1109/SP.2019.00003
   Duan Y, 2020, 27TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2020), DOI 10.14722/ndss.2020.24311
   Dullien T, 2005, S SEC TECHN INF COMM, V5, P3
   Egele M, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P303
   Egele M, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089126
   Eschweiler S, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23185
   Flake H., 2004, Proceedings of the Detection of Intrusions and Malware Vulnerability Assessment, GI SIG SIDAR Workshop, DIMVA 2004, Dortmund, Germany, 6-7 July 2004, P161, DOI [10.17877/DE290R-2007, DOI 10.17877/DE290R-2007]
   FunctionSimSearch, 2021, US
   Gao DB, 2008, LECT NOTES COMPUT SC, V5308, P238
   Gao J, 2018, IEEE INT CONF AUTOM, P896, DOI 10.1145/3238147.3240480
   Goldberg Y, 2014, Arxiv, DOI [arXiv:1402.3722, DOI 10.48550/ARXIV.1402.3722]
   Gritti Fabio., 2020, IEEE CONF COMM NETW, P1, DOI DOI 10.1109/cns48642.2020.9162164
   Gunnerson Eric., 2001, PROGRAMMERS INTRO C, V2nd
   Gunning D., 2017, Explainable artificial intelligence (xai)
   Gunning D., 2021, PALMTREE
   Hoare C. A. R., 1996, FME '96: Industrial Benefit and Advances in Formal Methods. Third International Symposium of Formal Methods Europe. Proceedings, P1
   Hu X, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P611
   Hu YK, 2021, IEEE T SOFTWARE ENG, V47, P1241, DOI 10.1109/TSE.2019.2918326
   Hu YK, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P57, DOI 10.1109/SANER.2016.50
   IDAPro, 2021, US
   Jang J., 2013, P 22 USENIX SEC S US, P81
   Jhi YC, 2015, IEEE T SOFTWARE ENG, V41, P925, DOI 10.1109/TSE.2015.2418777
   Jhi YC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P756, DOI 10.1145/1985793.1985899
   Jiang LX, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P81
   Jianguo Jiang, 2020, Computer Security - ESORICS 2020 25th European Symposium on Research in Computer Security, ESORICS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12308), P295, DOI 10.1007/978-3-030-58951-6_15
   Jin W, 2012, 2012 11TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2012), VOL 1, P386, DOI 10.1109/ICMLA.2012.70
   Junod P, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE PROTECTION (SPRO), P3, DOI 10.1109/SPRO.2015.10
   KLEE Execution Time, 2021, AB
   Larsen P, 2014, P IEEE S SECUR PRIV, P276, DOI 10.1109/SP.2014.25
   Li XZX, 2021, CCS '21: PROCEEDINGS OF THE 2021 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P3236, DOI 10.1145/3460120.3484587
   Li YJ, 2017, Arxiv, DOI arXiv:1511.05493
   Li ZJ, 2022, PROC INT CONF SOFTW, P2253, DOI 10.1145/3510003.3510217
   Liu BC, 2018, IEEE INT CONF AUTOM, P667, DOI 10.1145/3238147.3238199
   Luan SF, 2019, Arxiv, DOI arXiv:1812.01158
   Luo LN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P389, DOI 10.1145/2635868.2635900
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McKee D, 2020, Arxiv, DOI arXiv:1906.02928
   Microsoft, 2020, LLVM MCTOLL
   Ming J, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P253
   Myles G, 2004, LECT NOTES COMPUT SC, V3225, P404
   Pewny J, 2015, P IEEE S SECUR PRIV, P709, DOI 10.1109/SP.2015.49
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Ramos DA, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P49
   Redmond K, 2018, Arxiv, DOI arXiv:1812.09652
   RetDec, 2021, US
   Sæbjornsen A, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P117
   SCHULER D., 2007, ASE 07, P274, DOI 10.1145/1321631.1321672
   Shin ECR, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P611
   Shoshitaishvili Y, 2016, P IEEE S SECUR PRIV, P138, DOI 10.1109/SP.2016.17
   Stueben M., 2018, GOOD HABITS GREAT CO
   T. of Bits, 2018, MCSEM
   Talman A, 2019, NAT LANG ENG, V25, P467, DOI 10.1017/S1351324919000202
   Ul Haq I, 2019, Arxiv, DOI arXiv:1909.11424
   Wang RY, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23225
   Wang S, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P627
   Wang S, 2017, IEEE INT CONF AUTOM, P319, DOI 10.1109/ASE.2017.8115645
   Wang XR, 2009, 25TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, P149, DOI 10.1109/ACSAC.2009.24
   Woo SH, 2018, LECT NOTES COMPUT SC, V11211, P3, DOI 10.1007/978-3-030-01234-2_1
   Xu XJ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P363, DOI 10.1145/3133956.3134018
   Xue YX, 2019, IEEE T SOFTWARE ENG, V45, P1125, DOI 10.1109/TSE.2018.2827379
   Yan Lin, 2021, 2021 IEEE Symposium on Security and Privacy (SP), P36, DOI 10.1109/SP40001.2021.00006
   Yu ZP, 2020, AAAI CONF ARTIF INTE, V34, P1145
   Yun I, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P745
   Zhang F., 2012, Proceedings of the 2012 International Symposium on Software Testing and Analysis, ACM, P111
   Zhang H, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P887
   Zuo F, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23492
NR 89
TC 4
Z9 4
U1 4
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 226
EP 250
DI 10.1109/TSE.2022.3149240
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA L1HD8
UT WOS:001020827200012
DA 2024-07-18
ER

PT J
AU Zhang, Y
   Kabir, MMA
   Xiao, Y
   Yao, DF
   Meng, N
AF Zhang, Ying
   Kabir, Md Mahir Asef
   Xiao, Ya
   Yao, Danfeng
   Meng, Na
TI Automatic Detection of Java Cryptographic API Misuses: Are We There Yet?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cryptography; Java; Security; Codes; Software; Encoding; Ciphers;
   Detection of cryptographic API misuses; developers' feedback; empirical
AB The Java platform provides various cryptographic APIs to facilitate secure coding. However, correctly using these APIs is challenging for developers who lack cybersecurity training. Prior work shows that many developers misused APIs and consequently introduced vulnerabilities into their software. To eliminate such vulnerabilities, people created tools to detect and/or fix cryptographic API misuses. However, it is still unknown (1) how current tools are designed to detect cryptographic API misuses, (2) how effectively the tools work to locate API misuses, and (3) how developers perceive the usefulness of tools ' outputs. For this paper, we conducted an empirical study to investigate the research questions mentioned above. Specifically, we first conducted a literature survey on existing tools and compared their approach design from different angles. Then we applied six of the tools to three popularly used benchmarks to measure tools ' effectiveness of API-misuse detection. Next, we applied the tools to 200 Apache projects and sent 57 vulnerability reports to developers for their feedback. Our study revealed interesting phenomena. For instance, none of the six tools was found universally better than the others; however, CogniCrypt, CogniGuard, and Xanitizer outperformed SonarQube. More developers rejected tools ' reports than those who accepted reports (30 versus 9) due to their concerns on tools ' capabilities, the correctness of suggested fixes, and the exploitability of reported issues. This study reveals a significant gap between the state-of-the-art tools and developers ' expectations; it sheds light on future research in vulnerability detection.
C1 [Zhang, Ying; Kabir, Md Mahir Asef; Xiao, Ya; Yao, Danfeng; Meng, Na] Virginia Tech, Dept Comp Sci, Blacksburg, VA 24060 USA.
C3 Virginia Polytechnic Institute & State University
RP Meng, N (corresponding author), Virginia Tech, Dept Comp Sci, Blacksburg, VA 24060 USA.
EM yingzhang@vt.edu; mdmahirasefk@vt.edu; yax99@vt.edu; danfeng@vt.edu;
   nm8247@vt.edu
OI Meng, Na/0000-0002-0230-5524; Zhang, Ying/0000-0002-2770-9189; Yao,
   Danfeng (Daphne)/0000-0001-8969-2792
FU NSF [1845446, 1929701]
FX This work was supported by NSF under Grants 1845446 and 1929701.
CR Afrose S., 2021, ARXIV
   Afrose S, 2019, 2019 IEEE SECURE DEVELOPMENT (SECDEV 2019), P49, DOI 10.1109/SecDev.2019.00017
   Amann S, 2019, IEEE T SOFTWARE ENG, V45, P1170, DOI 10.1109/TSE.2018.2827384
   Amann S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P464, DOI [10.1145/2901739.2903506, 10.1109/MSR.2016.055]
   AndroBugs, 2021, US
   AndroGuard, 2021, US
   [Anonymous], 2021, MUB
   [Anonymous], 2017, DEV LACK SKILLS NEED
   [Anonymous], 2021, CWE 330 US INS RAND
   [Anonymous], 2020, CRYPTOGUARDOSS CRYPT
   [Anonymous], 2020, SOOT
   [Anonymous], 2021, CWE 326 IN ENCR STRE
   [Anonymous], 2020, GOSSIPER JAVA
   [Anonymous], 2021, WEAK SSL TLS PROT SH
   [Anonymous], 2020, JAVA SECURE SOCKET E
   [Anonymous], 2021, CWE 798 US HARD COD
   [Anonymous], 2021, CWE 295 IMPR CERT VA
   [Anonymous], 2019, ADD 201 PAR CRYPT JC
   [Anonymous], 2021, JAVA CRYPTOGRAPHY AR
   [Anonymous], 2021, CWE 327 AV WEAK ENCR
   [Anonymous], 2021, XANITIZER RIGS IT BE
   [Anonymous], 2017, MD5FUNCTION JAVA
   [Anonymous], 2021, CWE 327 US BROK RISK
   [Anonymous], 2021, MOBSF MOB SEC FRAM M
   [Anonymous], 2021, CWE 757 SEL LESS SEC
   [Anonymous], 2021, OWASP BENCHM
   [Anonymous], 2019, TOO FEW CYBERSECURIT
   Argus SAF, 2021, US
   Chen MS, 2019, PROC INT CONF SOFTW, P536, DOI 10.1109/ICSE.2019.00065
   CWE-Common weakness enumeration, 2021, US
   Egele M., 2013, P 2013 ACM SIGSAC C, P73
   Fahl S., 2012, ACM CCS 12, P50, DOI DOI 10.1145/2382196.2382205
   Find security bugs, 2021, US
   Fischer F, 2017, P IEEE S SECUR PRIV, P121, DOI 10.1109/SP.2017.31
   Fischer F, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P339
   Gajrani Jyoti, 2020, ACM Digital Threats: Research Practice, V1, DOI 10.1145/3376121
   Gao J, 2021, IEEE T RELIAB, V70, P212, DOI 10.1109/TR.2019.2956690
   Georgiev Martin, 2012, P 2012 ACM C COMPUTE, P38
   Green M, 2016, IEEE SECUR PRIV, V14, P40, DOI 10.1109/MSP.2016.111
   He BY, 2015, P IEEE S SECUR PRIV, P519, DOI 10.1109/SP.2015.38
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Jlint, 2021, US
   Jun Gao, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P388, DOI 10.1109/MSR.2019.00065
   Krüger S, 2017, IEEE INT CONF AUTOM, P931, DOI 10.1109/ASE.2017.8115707
   Kruger Stefan, 2018, EUR C OBJ OR PROGR E, V10, P1
   Ma SQ, 2017, LECT NOTES COMPUT SC, V10493, P229, DOI 10.1007/978-3-319-66399-9_13
   Ma SQ, 2016, ASIA CCS'16: PROCEEDINGS OF THE 11TH ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P711, DOI 10.1145/2897845.2897896
   Pérez PM, 2011, COMM COM INF SC, V184, P148
   Meng N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P372, DOI 10.1145/3180155.3180201
   Muslukhov I, 2018, PROCEEDINGS OF THE 2018 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIACCS'18), P133, DOI 10.1145/3196494.3196538
   Nadi S, 2016, PROC INT CONF SOFTW, P935, DOI 10.1145/2884781.2884790
   Newbury K. L., 2020, THESIS U ALBERTA
   NIST SAMATE, 2012, STAT AN TOOL EXP SAT
   Oppliger R, 2009, ARTECH HSE INF SECUR, P1
   Oyetoyan TD, 2018, LECT NOTES BUS INF P, V314, P86, DOI 10.1007/978-3-319-91602-6_6
   Paletov R, 2018, ACM SIGPLAN NOTICES, V53, P450, DOI [10.1145/3192366.3192403, 10.1145/3296979.3192403]
   Phan Nam FL, 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, ASE'10, (New York, NY, USA), P447
   Rahaman S, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P2455, DOI 10.1145/3319535.3345659
   Shao S, 2014, 2014 IEEE 12TH INTERNATIONAL CONFERENCE ON DEPENDABLE, AUTONOMIC AND SECURE COMPUTING (DASC)/2014 IEEE 12TH INTERNATIONAL CONFERENCE ON EMBEDDED COMPUTING (EMBEDDEDCOM)/2014 IEEE 12TH INTERNATIONAL CONF ON PERVASIVE INTELLIGENCE AND COMPUTING (PICOM), P75, DOI 10.1109/DASC.2014.22
   Singh Gurpreet, 2013, INT J COMPUT APPL, V67
   Singleton Larry, 2020, SIGITE '20: Proceedings of the 21st Annual Conference on Information Technology Education, P403, DOI 10.1145/3368308.3415419
   SonarQube, 2021, US
   Spotbugs, 2021, SPOTB SPOTB
   StackOverflow, 2020, About us
   Tupsamudre H, 2020, LECT NOTES COMPUT SC, V12063, P192, DOI 10.1007/978-3-030-54455-3_14
   Vallee-Rai R., 1999, Proceedings of the 1999 Conference of the Centre for Advanced Studies on Collaborative Research, CASCON'99, page, P13
   WALA IR, 2020, US
   Wei FG, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1329, DOI 10.1145/2660267.2660357
   Xu ZW, 2020, 2020 INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE 2020), P153, DOI 10.1109/TASE49443.2020.00029
   Zou DQ, 2020, Arxiv, DOI arXiv:2001.02334
NR 70
TC 4
Z9 4
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 288
EP 303
DI 10.1109/TSE.2022.3150302
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA L1HD8
UT WOS:001020827200015
DA 2024-07-18
ER

PT J
AU Li, H
   Zhang, HX
   Wang, SW
   Hassan, AE
AF Li, Heng
   Zhang, Haoxiang
   Wang, Shaowei
   Hassan, Ahmed E.
TI Studying the Practices of Logging Exception Stack Traces in Open-Source
   Software Projects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software maintenance; software logging; exception logging; stack traces;
   random forest
AB Logging he stack traces of runtime exceptions assists developers in diagnosing runtime failures. However, unnecessary logging of exception stack traces can have many negative impacts such as polluting log files. Unfortunately, there exist no guidelines for the logging of exception stack traces and developers usually practice it in an ad hoc manner. In this work, we perform a comprehensive study of the source code, code change history, and issue reports of ten open-source Java projects, combining quantitative and qualitative analysis, in order to understand how developers log and modify the logging of exception stack traces, their rationale for logging or not logging exception stack traces, and the factors that impact their logging of exception stack traces. We observe that logging of exception stack traces is a popular practice in open-source projects, while developers have difficulties making appropriate logging of exception stack traces in the first place. Through a qualitative analysis of 385 related issue reports, we derived recommendations for the logging of exception stack traces, such as logging of stack traces should be avoided or downgraded for user errors, normal execution, expected exceptions, in user interfaces, or when there is a security concern. Finally, based on our empirical observations, we design and extract a set of code metrics and construct models to explain the likelihood of logging an exception stack trace. Our analysis of the models indicates the important factors (e.g., the exception type and the method that throws the exception) for determining the logging of exception stack traces. Our study helps developers and researchers understand the current practices of logging exception stack traces, provides recommendations for developers to consider when determining whether to log the stack trace of an exception, and provides insights for future research and practices to derive global or company-wide guidelines for the logging of exception stack traces.
C1 [Li, Heng] Polytech Montreal, Dept Comp Engn & Software Engn, Montreal, PQ H3T 1J4, Canada.
   [Zhang, Haoxiang] Ctr Software Excellence Huawei, Markham, ON L3R 5A4, Canada.
   [Wang, Shaowei] Univ Manitoba, Dept Comp Sci, Winnipeg, MB R3T 2N2, Canada.
   [Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
C3 Universite de Montreal; Polytechnique Montreal; University of Manitoba;
   Queens University - Canada
RP Li, H (corresponding author), Polytech Montreal, Dept Comp Engn & Software Engn, Montreal, PQ H3T 1J4, Canada.
EM heng.li@polymtl.ca; haoxiang.zhang@acm.org; shaowei@cs.umanitoba.ca;
   ahmed@cs.queensu.ca
CR Artstein R, 2008, COMPUT LINGUIST, V34, P555, DOI 10.1162/coli.07-034-R2
   Barbosa E. A., 2012, 2012 26th Brazilian Symposium on Software Engineering (SBES), P171, DOI 10.1109/SBES.2012.22
   Barbosa EA, 2018, IEEE T SOFTWARE ENG, V44, P855, DOI 10.1109/TSE.2017.2716925
   Barbosa EA, 2016, IEEE T SOFTWARE ENG, V42, P559, DOI 10.1109/TSE.2015.2506164
   Barik T, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P92, DOI 10.1145/2889160.2889231
   Bender R, 2001, J CLIN EPIDEMIOL, V54, P343, DOI 10.1016/S0895-4356(00)00314-0
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Chen BY, 2017, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.2017.15
   Chen BY, 2017, EMPIR SOFTW ENG, V22, P330, DOI 10.1007/s10664-016-9429-5
   Coelho R, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P134, DOI 10.1109/MSR.2015.20
   de Padua GB, 2018, IEEE WORK CONF MIN S, P564, DOI 10.1145/3196398.3196435
   de Pádua GB, 2017, IEEE INT WORK C SO, P11, DOI 10.1109/SCAM.2017.16
   de Pádua GB, 2017, INT C PROGRAM COMPRE, P328, DOI 10.1109/ICPC.2017.1
   Ding Rui, 2015, P 2015 USENIX TECHN, P139
   Ebert F, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P552, DOI 10.1109/SANER48275.2020.9054791
   Ebert F, 2015, J SYST SOFTWARE, V106, P82, DOI 10.1016/j.jss.2015.04.066
   Freeman D., 2007, Statistics, V4th
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Han S, 2012, PROC INT CONF SOFTW, P145, DOI 10.1109/ICSE.2012.6227198
   Hassani M, 2018, EMPIR SOFTW ENG, V23, P3248, DOI 10.1007/s10664-018-9603-z
   Hayes AF, 2007, COMMUN METHODS MEAS, V1, P77, DOI 10.1080/19312450709336664
   He PJ, 2018, IEEE INT CONF AUTOM, P178, DOI 10.1145/3238147.3238193
   Jelihovschi E.G., 2014, TEMA (São Carlos), V15, P3
   Jia ZY, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P61, DOI 10.1109/SANER.2018.8330197
   Kabacoff R., 2011, R ACTION, V2nd
   Kabinna S, 2018, EMPIR SOFTW ENG, V23, P290, DOI 10.1007/s10664-017-9518-0
   Kabinna S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P154, DOI [10.1145/2901739.2901769, 10.1109/MSR.2016.025]
   Kechagia M, 2018, J SYST SOFTWARE, V142, P248, DOI 10.1016/j.jss.2018.04.034
   Krippendorff K., 2019, Content Analysis: an Introduction to its methodology, V4th, P277, DOI [10.4135/9781071878781, DOI 10.4135/9781071878781]
   Krippendorff Klaus, 2011, COMPUTING KRIPPENDOR, DOI DOI 10.1002/9781405186407.WBIECR029
   Lal S, 2016, PROCEEDINGS OF THE 9TH INDIA SOFTWARE ENGINEERING CONFERENCE, P151, DOI 10.1145/2856636.2856637
   Li H, 2021, IEEE T SOFTWARE ENG, V47, P2858, DOI 10.1109/TSE.2020.2970422
   Li H, 2018, EMPIR SOFTW ENG, V23, P2655, DOI 10.1007/s10664-018-9595-8
   Li H, 2017, EMPIR SOFTW ENG, V22, P1684, DOI 10.1007/s10664-016-9456-2
   Li YH, 2018, IEEE INT C ENG COMP, P104, DOI 10.1109/ICECCS2018.2018.00019
   Li ZH, 2021, PROC INT CONF SOFTW, P1461, DOI 10.1109/ICSE43902.2021.00131
   Liao LZ, 2020, EMPIR SOFTW ENG, V25, P4130, DOI 10.1007/s10664-020-09866-z
   Liu ZX, 2021, IEEE T SOFTWARE ENG, V47, P2012, DOI 10.1109/TSE.2019.2941943
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Melo H, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P128, DOI [10.1109/SANER.2019.8668001, 10.1109/saner.2019.8668001]
   Montenegro T, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P413, DOI 10.1109/SANER.2018.8330228
   Nakshatri S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P500, DOI [10.1145/2901739.2903499, 10.1109/MSR.2016.064]
   Newman A., LOGGING EXCEPTIONS J
   Nguyen T, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1027, DOI 10.1145/3368089.3409690
   Nurmuliani N, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P240
   Pecchia A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P169, DOI 10.1109/ICSE.2015.145
   Rugg G, 2005, EXPERT SYST, V22, P94, DOI 10.1111/j.1468-0394.2005.00300.x
   Sayagh M, 2017, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2017.31
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Sena D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P212, DOI [10.1109/MSR.2016.030, 10.1145/2901739.2901757]
   Shang WY, 2014, J SOFTW-EVOL PROC, V26, P3, DOI 10.1002/smr.1579
   Spencer D., 2009, CARD SORTING DESIGNI
   Nguyen TT, 2019, PROCEEDINGS OF THE 2019 ANNUAL ACM SOUTHEAST CONFERENCE (ACMSE 2019), P257, DOI 10.1145/3299815.3314472
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Thummalapenta S, 2009, PROC INT CONF SOFTW, P496, DOI 10.1109/ICSE.2009.5070548
   Weisstein Eric W., 2004, Bonferroni correction
   Yuan D., 2012, P 2012 USENIX S OP S, P293
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Yuan D, 2011, ACM SIGPLAN NOTICES, V46, P3, DOI 10.1145/1961296.1950369
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
   Zimmermann T, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P137
NR 64
TC 2
Z9 2
U1 2
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 4907
EP 4924
DI 10.1109/TSE.2021.3129688
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600009
OA hybrid
DA 2024-07-18
ER

PT J
AU Niu, XT
   Wu, HY
   Changhai, N
   Lei, Y
   Wang, XY
AF Niu, Xintao
   Wu, Huayao
   Changhai, Nie
   Lei, Yu
   Wang, Xiaoyin
TI A Theory of Pending Schemas in Combinatorial Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Color; Software; Complexity theory; Combinatorial testing;
   Licenses; Computer science; Pending schema; minimal failure-causing
   schema; combinatorial testing; software testing
ID COVERING ARRAYS
AB Combinatorial Testing (CT) is an effective testing technique for detecting failures which are triggered by the interactions of various factors that influence the behaviour of a system. Although many studies in CT have designed elaborate test suites (called covering arrays) to systemically check each possible factor interaction, they provide weak support to locate the concrete failure-inducing interactions, i.e., the Minimal Failure-causing Schemas (MFS). To this end, a variety of MFS identification approaches have been proposed. However, as this study reveals, these approaches suffer from various issues such as cannot identify multiple overlapping MFSs, cannot handle MFSs with high degrees, cannot be applied to systems with large number of parameters, etc. These issues are essentially caused by the exponential computing complexity of checking every interaction in the test cases. Therefore, they can only focus on a subset of all the possible interactions, resulting in many interactions unnoticed. Ignoring these unnoticed interactions could potentially cause failures that have never been systematically checked. Hence, it is beneficial for MFS identification approaches to identify these interactions. In order to account for these unnoticed interactions in CT, this study introduces the notion of pending schema, based on which a theoretical framework of CT schemas is established. In particular, we formally define the determinability of a schema in CT with respect to given information; as such, the yet-to-be determined schemas are exactly the pending schemas. The relationships between the different schemas (faulty, healthy, and pending) and test cases are also theoretically analyzed. Based on which, we further propose three formulas, along with three corresponding algorithms, for the identification of the pending schemas in failing test cases, and formally prove their correctness. As a result, we reduce the complexity of obtaining pending schemas with respect to the number of factors that may have influences on the software.
C1 [Niu, Xintao; Wu, Huayao; Changhai, Nie] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
   [Lei, Yu] Univ Texas Arlington, Dept Comp Sci & Engn, Arlington, TX 76019 USA.
   [Wang, Xiaoyin] Univ Texas San Antonio, Dept Comp Sci, San Antonio, TX 78249 USA.
C3 Nanjing University; University of Texas System; University of Texas
   Arlington; University of Texas System; University of Texas at San
   Antonio (UTSA)
RP Wu, HY (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
EM niuxintao@gmail.com; hywu@outlook.com; changhainie@nju.edu.cn;
   ylei@cse.uta.edu; Xiaoyin.Wang@utsa.edu
RI Lei, Yu/IAN-0544-2023; Nie, Changhai/IWM-7504-2023
OI Wang, Xiaoyin/0000-0002-9079-5534
FU National Key Research and Development Program of China [2018YFB1003800];
   National Natural Science Foundation of China [61902174, 62072226];
   Natural Science Foundation of Jiangsu Province [BK20190291]; Information
   Technology Laboratory at National Institute of Standards and Technology
   [70NANB18H207]
FX This work was supported in part by the National Key Research and
   Development Program of China under Grant 2018YFB1003800, in part by the
   National Natural Science Foundation of China under Grants 61902174 and
   62072226, in part by the Natural Science Foundation of Jiangsu Province
   under Grant BK20190291, and in part by Information Technology Laboratory
   at National Institute of Standards and Technology under Grant
   70NANB18H207.
CR Aldaco Abraham N., 2015, ACM SIGOPS Operating Systems Review, V49, P31
   Arcaini P, 2019, IEEE ICST WORKSHOP, P200, DOI 10.1109/ICSTW.2019.00054
   Bach J., 2004, P 22 PACIFIC NW SOFT, P180
   Blue D, 2019, IEEE ICST WORKSHOP, P268, DOI 10.1109/ICSTW.2019.00063
   Bonn J, 2019, IEEE ICST WORKSHOP, P224, DOI 10.1109/ICSTW.2019.00057
   Cohen M.B., 2007, P 2007 INT S SOFTW T, P129
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Colbourn CJ, 2008, J COMB OPTIM, V15, P17, DOI 10.1007/s10878-007-9082-4
   Compton Randy, 2016, 2016 IEEE Conference on Computer Communications: Workshops (INFOCOM WKSHPS), P650, DOI 10.1109/INFCOMW.2016.7562157
   Fouché S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P177
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Ghandehari L. S. G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P370, DOI 10.1109/ICST.2012.117
   Ghandehari LS, 2020, IEEE T SOFTWARE ENG, V46, P616, DOI 10.1109/TSE.2018.2865935
   Ghandehari LS, 2013, PROC INT SYMP SOFTW, P168, DOI 10.1109/ISSRE.2013.6698916
   Godbole A.P., 1996, Combinatorics, Probability and Computing, V5, P105
   Jin H, 2020, LECT NOTES COMPUT SC, V12543, P302, DOI 10.1007/978-3-030-64881-7_20
   Jin H, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110771
   Jin H, 2018, IEEE ICST WORKSHOP, P285, DOI 10.1109/ICSTW.2018.00062
   Jones J A., 2007, Debugging in parallel, P16
   Konishi T, 2017, IEEE ICST WORKSHOP, P276, DOI 10.1109/ICSTW.2017.49
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Kuhn R, 2003, 27TH ANNUAL NASA GODDARD/IEEE SOFTWARE ENGINEERING WORKSHOP - PROCEEDINGS, P91, DOI 10.1109/SEW.2002.1199454
   Li J, 2012, INT CONF QUAL SOFTW, P102, DOI 10.1109/QSIC.2012.28
   Ma CY, 2013, WOR CONG SOFTW ENG, P91, DOI 10.1109/WCSE.2013.19
   Martínez C, 2008, LECT NOTES COMPUT SC, V4957, P504, DOI 10.1007/978-3-540-78773-0_44
   Martinez C, 2009, SIAM J DISCRETE MATH, V23, P1776, DOI 10.1137/080730706
   Masri W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559932
   Medeiros F, 2016, PROC INT CONF SOFTW, P643, DOI 10.1145/2884781.2884793
   Nagamoto T, 2014, IEEE PAC RIM INT SYM, P155, DOI 10.1109/PRDC.2014.26
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Nie CH, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000801
   Nishiura K, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P138, DOI 10.1109/QRS.2017.24
   Niu XT, 2020, IEEE T SOFTWARE ENG, V46, P584, DOI 10.1109/TSE.2018.2865772
   Niu XT, 2020, IEEE T SOFTWARE ENG, V46, P141, DOI 10.1109/TSE.2018.2844259
   Niu X, 2013, IEEE ICST WORKSHOP, P271, DOI 10.1109/ICSTW.2013.38
   Qi Y., 2016, 28 INT C SOFTWARE EN, P655
   Sarkar K, 2017, SIAM J DISCRETE MATH, V31, P1277, DOI 10.1137/16M1067767
   Shakya K., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P620, DOI 10.1109/ICST.2012.149
   Shi C, 2012, SCI CHINA MATH, V55, P197, DOI 10.1007/s11425-011-4307-5
   Shi L, 2005, LECT NOTES COMPUT SC, V3516, P1088
   Song C, 2014, IEEE T SOFTWARE ENG, V40, P251, DOI 10.1109/TSE.2013.55
   Song C, 2012, PROC INT CONF SOFTW, P903, DOI 10.1109/ICSE.2012.6227129
   Stevens B., 1998, Designs, Codes and Cryptography, V15, P279, DOI 10.1023/A:1008329410829
   Tang Y, 2012, J STAT THEORY PRACT, V6, P20, DOI 10.1080/15598608.2012.647484
   Wang Q, 2016, COMM COM INF SC, V675, P109, DOI 10.1007/978-981-10-3482-4_8
   Wu HY, 2020, IEEE T SOFTWARE ENG, V46, P302, DOI 10.1109/TSE.2018.2852744
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Yilmaz C, 2014, IEEE T SOFTWARE ENG, V40, P43, DOI 10.1109/TSE.2013.53
   Yoo S, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3078840
   Yu L., 2015, P INT C WIR COMM SIG, P1
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zhang J., 2012, P INT C THEOR APPL S, P186
   Zhang Z., 2011, P ACM 20 INT S SOFTW, P331
   Zheng W., 2016, ADV SOFTW ENG
   Ziyuan Wang, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P495, DOI 10.1109/QSIC.2010.36
NR 56
TC 0
Z9 0
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 4119
EP 4151
DI 10.1109/TSE.2021.3113920
PG 33
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800023
OA hybrid
DA 2024-07-18
ER

PT J
AU Zhang, PX
   Wang, JY
   Sun, J
   Wang, XY
   Dong, GL
   Wang, XG
   Dai, T
   Dong, JS
AF Zhang, Peixin
   Wang, Jingyi
   Sun, Jun
   Wang, Xinyu
   Dong, Guoliang
   Wang, Xingen
   Dai, Ting
   Dong, Jin Song
TI Automatic Fairness Testing of Neural Classifiers Through Adversarial
   Sampling
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Data models; Deep learning; Systematics; Recurrent neural networks;
   Neurons; Training data; Task analysis; Deep learning; fairness testing;
   individual discrimination; gradient
AB Although deep learning has demonstrated astonishing performance in many applications, there are still concerns about its dependability. One desirable property of deep learning applications with societal impact is fairness (i.e., non-discrimination). Unfortunately, discrimination might be intrinsically embedded into the models due to the discrimination in the training data. As a countermeasure, fairness testing systemically identifies discriminatory samples, which can be used to retrain the model and improve the model's fairness. Existing fairness testing approaches however have two major limitations. First, they only work well on traditional machine learning models and have poor performance (e.g., effectiveness and efficiency) on deep learning models. Second, they only work on simple structured (e.g., tabular) data and are not applicable for domains such as text. In this work, we bridge the gap by proposing a scalable and effective approach for systematically searching for discriminatory samples while extending existing fairness testing approaches to address a more challenging domain, i.e., text classification. Compared with state-of-the-art methods, our approach only employs lightweight procedures like gradient computation and clustering, which is significantly more scalable and effective. Experimental results show that on average, our approach explores the search space much more effectively (9.62 and 2.38 times more than the state-of-the-art methods respectively on tabular and text datasets) and generates much more discriminatory samples (24.95 and 2.68 times) within a same reasonable time. Moreover, the retrained models reduce discrimination by 57.2 and 60.2 percent respectively on average.
C1 [Zhang, Peixin; Wang, Jingyi; Wang, Xinyu; Dong, Guoliang; Wang, Xingen] Zhejiang Univ, Hangzhou 310027, Zhejiang, Peoples R China.
   [Sun, Jun] Singapore Management Univ, Singapore 188065, Singapore.
   [Dai, Ting] Huawei Int Pte Ltd, Shenzhen 518129, Peoples R China.
   [Dong, Jin Song] Natl Univ Singapore, Singapore 119077, Singapore.
C3 Zhejiang University; Singapore Management University; National
   University of Singapore
RP Wang, JY; Wang, XY (corresponding author), Zhejiang Univ, Hangzhou 310027, Zhejiang, Peoples R China.
EM pxzhang94@zju.edu.cn; wangjyee@zju.edu.cn; junsun@smu.edu.sg;
   wangxinyu@zju.edu.cn; dgl-prc@zju.edu.cn; newroot@zju.edu.cn;
   daiting2@huawei.com; dcsdjs@nus.edu.sg
RI Wang, Jinyang/JXN-8650-2024; Wang, Jing/IQW-3496-2023; Wang,
   Jin/GYA-2019-2022; chen, wang/KGK-5932-2024; wang, jie/HTQ-4920-2023;
   Zhang, Peixin/GXF-5650-2022; wang, juan/IUO-6218-2023; wang,
   jian/HRB-9588-2023; wang, jing/HJA-5384-2022; LI, XIAO/IQV-9318-2023;
   jing, wang/KCZ-2144-2024; li, yang/IQV-3559-2023; yu, hui/KDO-3946-2024;
   Wu, Jing/GZK-5063-2022; wang, xu/IAN-4886-2023
OI Wang, Jing/0000-0002-8296-2961; Zhang, Peixin/0000-0001-5039-5651; Wang,
   Xingen/0000-0003-0507-5020; Wang, Jingyi/0000-0001-7113-7635
FU Key-Area Research and Development Program of Guangdong Province
   [2020B0101100005]; Key Research and Development Program of Zhejiang
   Province [2021C01014]; Fundamental Research Funds for the Zhejiang
   University NGICS Platform; Guangdong Science and Technology Department
   [2018B010107004]; Ministry of Education, Singapore [MOET32020-0004,
   T2EP20120-0019, T1-251RES1901]
FX This work was supported by the Key-Area Research and Development Program
   of Guangdong Province Grant 2020B0101100005. This research was also
   supported by the Key Research and Development Program of Zhejiang
   Province 2021C01014, the Fundamental Research Funds for the Zhejiang
   UniversityNGICS Platform, the Guangdong Science and Technology
   Department under Grant 2018B010107004, and Ministry of Education,
   Singapore Project MOET320200004, T2EP20120-0019, and T1-251RES1901.
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Aggarwal A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P625, DOI 10.1145/3338906.3338937
   Albarghouthi A, 2019, FAT*'19: PROCEEDINGS OF THE 2019 CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, P211, DOI 10.1145/3287560.3287588
   Angell R, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P871, DOI 10.1145/236024.3264590
   Barocas S., 2019, Fairness and Machine Learning
   Bastani O, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360544
   Bengio S, 2016, ARXIV
   Beutel Alex, 2017, ARXIV170700075
   Bolukbasi T, 2016, ADV NEUR IN, V29
   Cer D.M., 2018, P EMNLP
   Chen IY, 2018, ADV NEUR IN, V31
   Cho K., 2014, ARXIV14061078
   DEMPSTER AP, 1977, J ROY STAT SOC B MET, V39, P1, DOI 10.1111/j.2517-6161.1977.tb01600.x
   Dixon L, 2018, PROCEEDINGS OF THE 2018 AAAI/ACM CONFERENCE ON AI, ETHICS, AND SOCIETY (AIES'18), P67, DOI 10.1145/3278721.3278729
   Dwork C., 2012, P 3 INNOVATIONS THEO, P214
   Ebrahimi J, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 2, P31
   European Commission, 2018, HIGH LEV EXP GROUP A
   Feldman M, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P259, DOI 10.1145/2783258.2783311
   Fu K, 2016, LECT NOTES COMPUT SC, V9949, P483, DOI 10.1007/978-3-319-46675-0_53
   Galhotra S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P498, DOI 10.1145/3106237.3106277
   Garg S, 2019, AIES '19: PROCEEDINGS OF THE 2019 AAAI/ACM CONFERENCE ON AI, ETHICS, AND SOCIETY, P219, DOI 10.1145/3306618.3317950
   Goh G, 2016, ADV NEUR IN, V29
   Goodfellow I. J., 2015, 3 INT C LEARNING REP
   Gowal Sven, 2018, On the effectiveness of interval bound propagation for training verifiably robust models
   Guo WB, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P364, DOI 10.1145/3243734.3243792
   Gupta S, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P863, DOI 10.1145/3368089.3409756
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   HOEFFDING W, 1963, J AM STAT ASSOC, V58, P13, DOI 10.2307/2282952
   Hovy D, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2016), VOL 2, P591
   Huang PS, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P4083
   Jia R, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P4129
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Li JF, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23138
   Massart P, 2007, LECT NOTES MATH, V1896, P1, DOI 10.1007/978-3-540-48503-2
   Nair Vinod, 2010, INT C INT C MACHINE, P807
   Nasr M, 2019, P IEEE S SECUR PRIV, P739, DOI 10.1109/SP.2019.00065
   Papernot N, 2016, IEEE MILIT COMMUN C, P49, DOI 10.1109/MILCOM.2016.7795300
   Papernot N, 2016, 1ST IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY, P372, DOI 10.1109/EuroSP.2016.36
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Rehurek R., 2010, LREC, DOI DOI 10.13140/2.1.2393.1847
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Schroff F, 2015, PROC CVPR IEEE, P815, DOI 10.1109/CVPR.2015.7298682
   Song LW, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P241, DOI 10.1145/3319535.3354211
   Sutskever I, 2014, ADV NEUR IN, V27
   Szegedy C, 2014, Arxiv, DOI [arXiv:1312.6199, DOI 10.1109/CVPR.2015.7298594]
   Tatman R, 2017, P 1 ACL WORKSH ETH N, P53, DOI [DOI 10.18653/V1/W17-1606, 10.18653/v1/w17-1606, 10.18653/v1/W17-1606]
   Thomas PS, 2019, SCIENCE, V366, P999, DOI 10.1126/science.aag3311
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Tramèr F, 2017, 2017 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P), P401, DOI 10.1109/EuroSP.2017.29
   Udeshi S, 2018, IEEE INT CONF AUTOM, P98, DOI 10.1145/3238147.3238165
   Wang XY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P291, DOI 10.1145/3180155.3180177
   Wiegand M, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P602
   Wulczyn E, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P1391, DOI 10.1145/3038912.3052591
   Zhang P., 2020, US
   Zhang PX, 2020, PROC INT CONF SOFTW, P949, DOI 10.1145/3377811.3380331
   Zhang Y., 2020, PROC 37 INT C MACH L, p11 023
NR 58
TC 8
Z9 8
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3593
EP 3612
DI 10.1109/TSE.2021.3101478
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500022
OA Green Submitted, Green Accepted, Green Published
DA 2024-07-18
ER

PT J
AU Ni, C
   Xia, X
   Lo, D
   Chen, X
   Gu, Q
AF Ni, Chao
   Xia, Xin
   Lo, David
   Chen, Xiang
   Gu, Qing
TI Revisiting Supervised and Unsupervised Methods for Effort-Aware
   Cross-Project Defect Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Manuals; Predictive models; Atmospheric measurements; Particle
   measurements; Data models; Software; Testing; Defect prediction;
   cross-project; supervised model; unsupervised model
ID MODELS; CODE
AB Cross-project defect prediction (CPDP), aiming to apply defect prediction models built on source projects to a target project, has been an active research topic. A variety of supervised CPDP methods and some simple unsupervised CPDP methods have been proposed. In a recent study, Zhou et al. found that simple unsupervised CPDP methods (i.e., ManualDown and ManualUp) have a prediction performance comparable or even superior to complex supervised CPDP methods. Therefore, they suggested that the ManualDown should be treated as the baseline when considering non-effort-aware performance measures (NPMs) and the ManualUp should be treated as the baseline when considering effort-aware performance measures (EPMs) in future CPDP studies. However, in that work, these unsupervised methods are only compared with existing supervised CPDP methods using a small subset of NPMs, and the prediction results of baselines are directly collected from the primary literatures. Besides, the comparison has not considered other recently proposed EPMs, which consider context switches and developer fatigue due to initial false alarms. These limitations may not give a holistic comparison between the supervised methods and unsupervised methods. In this paper, we aim to revisit Zhou et al.'s study. To the best of our knowledge, we are the first to make a comparison between the existing supervised CPDP methods and the unsupervised methods proposed by Zhou et al. in the same experimental setting when considering both NPMs and EPMs. We also propose an improved supervised CPDP method EASC and make a further comparison with the unsupervised methods. According to the results on 82 projects in terms of 11 performance measures, we find that when considering NPMs, EASC can achieve prediction performance comparable or even superior to unsupervised method ManualDown in most cases. Besides, when considering EPMs, EASC can statistically significantly outperform the unsupervised method ManualUp with a large improvement in terms of Cliff's delta in most cases. Therefore, the supervised CPDP methods are more promising than the unsupervised method in practical application scenarios, since the limitation of testing resource and the impact on developers cannot be ignored in these scenarios.
C1 [Ni, Chao] Zhejiang Univ, Sch Software Technol, Ningbo 315048, Zhejiang, Peoples R China.
   [Ni, Chao] Zhejiang Univ, Ningbo Res Inst, Ningbo, Zhejiang, Peoples R China.
   [Ni, Chao] PengCheng Lab, Shenzhen 518066, Guangdong, Peoples R China.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Melbourne, Vic 3000, Australia.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
   [Chen, Xiang] Nantong Univ, Sch Informat Sci & Technol Sci, Nantong 226000, Jiangsu, Peoples R China.
   [Chen, Xiang] Nanjing Univ, Nanjing 210094, Jiangsu, Peoples R China.
   [Gu, Qing] Nanjing Univ, State Key Iaboratony Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.
C3 Zhejiang University; Zhejiang University; Monash University; Singapore
   Management University; Nantong University; Nanjing University; Nanjing
   University
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic 3000, Australia.
EM jacknichao920209@gmail.com; xin.xia@monash.edu; davidlo@smu.edu.sg;
   xchencs@ntu.edu.cn; guq@nju.edu.cn
RI Chen, Xiang/AAG-3663-2019; Lo, David/A-2493-2012
OI Chen, Xiang/0000-0002-1180-3891; Lo, David/0000-0002-4367-7201; Xia,
   Xin/0000-0002-6302-3256; Ni, Chao/0000-0002-2906-0598
FU Australian Research Council's Discovery Early Career Researcher Award
   (DECRA) funding scheme [DE200100021]; National Natural Science
   Foundation of China [61872057, 61972192, 61872263, 61702041]; Open
   Project of State Key Laboratory for Novel Software Technology at Nanjing
   University [KFKT2019B14]
FX We would like to thank Herbold et al. [28] for sharing the tool and
   datasets in their study. This research was partially supported by the
   Australian Research Council's Discovery Early Career Researcher Award
   (DECRA) funding scheme (DE200100021), the National Natural Science
   Foundation of China (61872057, 61972192, 61872263 and 61702041), and the
   Open Project of State Key Laboratory for Novel Software Technology at
   Nanjing University (KFKT2019B14).
CR Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   Amasaki S, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P32, DOI 10.1145/3273934.3273938
   [Anonymous], 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Bennin KE, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P699, DOI 10.1145/3180155.3182520
   Boucher A, 2018, INFORM SOFTWARE TECH, V96, P38, DOI 10.1016/j.infsof.2017.11.005
   Chao N., 2020, ONLINE APPENDIX REVI
   Chen X, 2019, INFORM SOFTWARE TECH, V106, P161, DOI 10.1016/j.infsof.2018.10.003
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Cliff N., 2014, ORDINAL METHODS BEHA
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Gray David, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P96, DOI 10.1049/ic.2011.0012
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herbold S., 2018, BENCHMARKING CROSS P, P1
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Herbold S, 2017, EMPIR SOFTW ENG, V22, P1866, DOI 10.1007/s10664-016-9468-y
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Jiang Y, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P237, DOI 10.1109/ISSRE.2007.24
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Kamei Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P33, DOI 10.1109/SANER.2016.56
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Koru AG, 2008, EMPIR SOFTW ENG, V13, P473, DOI 10.1007/s10664-008-9080-x
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Koru G, 2010, EMPIR SOFTW ENG, V15, P577, DOI [10.1007/s10664-010-9132-X, 10.1007/s10664-010-9132-x]
   Krishna R, 2019, IEEE T SOFTWARE ENG, V45, P1081, DOI 10.1109/TSE.2018.2821670
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li ZQ, 2019, IEEE T SOFTWARE ENG, V45, P391, DOI 10.1109/TSE.2017.2780222
   Li ZQ, 2018, AUTOMAT SOFTW ENG, V25, P201, DOI 10.1007/s10515-017-0220-7
   Li ZQ, 2017, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2017.19
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P343, DOI 10.1109/ASE.2011.6100072
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Ni C, 2017, J COMPUT SCI TECH-CH, V32, P1090, DOI 10.1007/s11390-017-1785-0
   Ni C, 2017, P INT COMP SOFTW APP, P51, DOI 10.1109/COMPSAC.2017.127
   Pan SJ, 2011, IEEE T NEURAL NETWOR, V22, P199, DOI 10.1109/TNN.2010.2091281
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Ryu D, 2016, APPL SOFT COMPUT, V49, P1062, DOI 10.1016/j.asoc.2016.04.009
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Stuckman J, 2017, IEEE T RELIAB, V66, P17, DOI 10.1109/TR.2016.2630503
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P867, DOI 10.1145/2889160.2889256
   Turhan B, 2011, EUROMICRO CONF PROC, P396, DOI 10.1109/SEAA.2011.59
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Watanabe S., 2008, P 4 INT WORKSH PRED, P19
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wu F, 2018, IEEE T RELIAB, V67, P581, DOI 10.1109/TR.2018.2804922
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Yang XX, 2015, IEEE T RELIAB, V64, P234, DOI 10.1109/TR.2014.2370891
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yang YB, 2016, IEEE INT CONF AUTOM, P296, DOI 10.1145/2970276.2970353
   Yu X, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P298, DOI [10.1109/SANER.2019.8668033, 10.1109/saner.2019.8668033]
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhang Y, 2018, FRONT COMPUT SCI-CHI, V12, P280, DOI 10.1007/s11704-017-6015-y
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 80
TC 37
Z9 37
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2022
VL 48
IS 3
BP 786
EP 802
DI 10.1109/TSE.2020.3001739
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZU6ZO
UT WOS:000769989900004
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Xue, L
   Zhou, H
   Luo, XP
   Yu, L
   Wu, DH
   Zhou, YJ
   Ma, XB
AF Xue, Lei
   Zhou, Hao
   Luo, Xiapu
   Yu, Le
   Wu, Dinghao
   Zhou, Yajin
   Ma, Xiaobo
TI PackerGrind: An Adaptive Unpacking System for Android Apps
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Androids; Humanoid robots; Runtime; Subspace constraints; Open area test
   sites; Tools; Monitoring; Android packer; dynamic analysis; binary
   instrumentation; bytecode obfuscation
ID TRACKING INFORMATION FLOWS
AB App developers are increasingly using packing services (or packers) to protect their code against being reverse engineered or modified. However, such packing techniques are also leveraged by the malicious developers to prevent the malware from being analyzed and detected by the static malware analysis and detection systems. Though there are already studies on unpacking packed Android apps, they usually leverage the manual reverse engineered packing behaviors to unpack apps packed by the specific packers and cannot be appified to the evolved and new packers. In this paper, we propose a novel unpacking approach with the capacity of adaptively unpacking the evolved and newly encountered packers. Also, we develop a new system, named PackerGrind, based on this adaptive approach for unpacking Android packers. The evaluation with real packed apps demonstrates that PackerGrind can successfully reveal packers protection mechanisms, effectively handle their evolution and recover Dex files with low overhead.
C1 [Xue, Lei; Zhou, Hao; Luo, Xiapu; Yu, Le] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
   [Wu, Dinghao] Penn State Univ, Coll Informat Sci & Technol, State Coll, PA 16801 USA.
   [Zhou, Yajin] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310027, Zhejiang, Peoples R China.
   [Ma, Xiaobo] Xi An Jiao Tong Univ, Dept Comp Sci & Technol, Xian 710049, Peoples R China.
C3 Hong Kong Polytechnic University; Pennsylvania Commonwealth System of
   Higher Education (PCSHE); Pennsylvania State University; Zhejiang
   University; Xi'an Jiaotong University
RP Luo, XP (corresponding author), Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
EM cslxue@comp.polyu.edu.hk; sunmoonsky0001@gmail.com;
   csxluo@comp.polyu.edu.hk; yulele08@gmail.com; dwu@ist.psu.edu;
   yajin_zhou@zju.edu.cn; ma.xjtu@qq.com
RI YU, Le/B-7784-2013; Zhang, Yanyan/JFA-9161-2023; li,
   yurong/JMQ-8540-2023; Zhou, Hao/AAH-7956-2020
OI YU, Le/0000-0003-1227-1273; Zhou, Hao/0000-0002-0146-5518; Wu,
   Dinghao/0000-0002-0741-5511; Yu, Le/0000-0003-1457-6329; Xue,
   Lei/0000-0001-5321-5740
FU Hong Kong RGC Projects [PolyU 152279/16E, PolyU 152223/17E, PolyU
   152239/18E, CityU C1008-16G]; Leading Innovative and Entrepreneur Team
   Introduction Program of Zhejiang [2018R01005]; Zhejiang Key RD
   [2019C03133]; US National Science Foundation (NSF) [CNS-1652790]; Office
   of Naval Research (ONR) [N00014-16-12265, N00014-16-1-2912,
   N00014-17-1-2894]
FX We thank the anonymous reviewers for their helpful comments. This work
   was supported in part by the Hong Kong RGC Projects (PolyU 152279/16E,
   PolyU 152223/17E, PolyU 152239/18E, and CityU C1008-16G), Leading
   Innovative and Entrepreneur Team Introduction Program of Zhejiang
   (2018R01005), Zhejiang Key R&D(Grant No: 2019C03133), US National
   Science Foundation (NSF) Grant No. CNS-1652790, and Office of Naval
   Research (ONR) (Grant No. N00014-16-12265, N00014-16-1-2912,
   andN00014-17-1-2894).
CR Aimoto S., 2016, 5 WAYS ANDROID MALWA
   Android, 2019, GEST
   [Anonymous], 2014, P 30 ANN COMP SEC AP
   [Anonymous], 1995, TOOL INTERFACE STAND
   [Anonymous], 2009, Surreptitious Software: Obfuscation, Watermarking, and Tamperproofing for Software Protection: Obfuscation, Watermarking, and Tamperproofing for Software Protection
   Apvrille A., 2014, VIRUS B, P1
   Au Kathy Wain Yee, 2012, P 2012 ACM C COMP CO, P217
   Avdiienko V., 2018, PROC ACMIEEE 37 INT, P426
   Bellard F., 2018, QEMU OPEN SOURCE PRO
   Bonfante G, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P745, DOI 10.1145/2810103.2813627
   Chen K, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P659
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Cisco, 2014, 2014 ANN SEC REP
   Duan Y, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23296
   Enck W, 2014, ACM T COMPUT SYST, V32, DOI 10.1145/2619091
   Fan M, 2016, PROC INT SYMP SOFTW, P24, DOI 10.1109/ISSRE.2016.14
   Gartner Inc., 2015, DEB 6 MYTHS APP WRAP
   Gordon MI, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23089
   Guo FL, 2008, LECT NOTES COMPUT SC, V5230, P98
   Jiang ZQ, 2017, IEEE INT CONF ELECTR, P53, DOI 10.1109/ICEIEC.2017.8076511
   Jing Yiming., 2014, Proceedings of the 30th Annual Computer Security Applications Conference, P216, DOI [10.1145/2664243.2664250, DOI 10.1145/2664243.2664250]
   Kang MG, 2007, WORM'07: PROCEEDINGS OF THE 2007 ACM WORKSHOP ON RECURRING MALCODE, P46
   Kelly G., 2014, 97 MOBILE MALWARE IS
   Kim D., 2015, INT J DISTRIB SENSOR, V11
   Le Yu, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P538, DOI 10.1109/DSN.2016.55
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Lim J, 2016, EURASIP J WIREL COMM, P1, DOI 10.1186/s13638-016-0720-3
   Mirzaei N, 2016, PROC INT CONF SOFTW, P559, DOI 10.1145/2884781.2884853
   Nethercote N, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P89, DOI 10.1145/1250734.1250746
   Ning ZY, 2018, I C DEPEND SYS NETWO, P690, DOI 10.1109/DSN.2018.00075
   Palo Alto Networks, 2016, WILDF CLOUD BAS THRE
   Qian CX, 2014, I C DEPEND SYS NETWO, P180, DOI 10.1109/DSN.2014.30
   Quist Danny., 2007, COVERT DEBUGGING CIR
   Sabanal P., 2018, HIDING ART
   Schrittwieser S, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2886012
   Song D, 2008, LECT NOTES COMPUT SC, V5352, P1, DOI 10.1007/978-3-540-89862-7_1
   Strazzere Tim., 2014, Android hacker protection level 0
   Sun CJ, 2018, IEEE ACCESS, V6, P61267, DOI 10.1109/ACCESS.2018.2875694
   Tam K, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23145
   Tam K, 2017, ACM COMPUT SURV, V49, DOI 10.1145/3017427
   Ugarte-Pedrero X, 2015, P IEEE S SECUR PRIV, P659, DOI 10.1109/SP.2015.46
   Wei XT, 2012, MOBICOM 12: PROCEEDINGS OF THE 18TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING, P137
   Wenbo Yang, 2015, Research in Attacks, Intrusions and Defenses. 18th International Symposium, RAID 2015. Proceedings: LNCS 9404, P359, DOI 10.1007/978-3-319-26362-5_17
   Wong MY, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1247
   Wong MY, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23118
   Xu M, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2963145
   Xue L, 2019, IEEE T INF FOREN SEC, V14, P814, DOI 10.1109/TIFS.2018.2866347
   Xue L, 2017, PROC INT CONF SOFTW, P358, DOI 10.1109/ICSE.2017.40
   Yan L. K., 2012, P 21 USENIX SEC S US, P569
   Yang C., 2015, P INT C SEC PRIV COM, P58
   Zhang M, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1105, DOI 10.1145/2660267.2660359
   Zhang YQ, 2015, LECT NOTES COMPUT SC, V9327, P293, DOI 10.1007/978-3-319-24177-7_15
   Zheng M, 2014, INT WIREL COMMUN, P128, DOI 10.1109/IWCMC.2014.6906344
   Zhou YJ, 2012, P IEEE S SECUR PRIV, P95, DOI 10.1109/SP.2012.16
   Zuo CS, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P867, DOI 10.1145/3038912.3052609
NR 55
TC 8
Z9 8
U1 2
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2022
VL 48
IS 2
BP 551
EP 570
DI 10.1109/TSE.2020.2996433
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZB4EB
UT WOS:000756796100012
OA hybrid
DA 2024-07-18
ER

PT J
AU Grano, G
   Laaber, C
   Panichella, A
   Panichella, S
AF Grano, Giovanni
   Laaber, Christoph
   Panichella, Annibale
   Panichella, Sebastiano
TI Testing with Fewer Resources: An Adaptive Approach to Performance-Aware
   Test Case Generation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Runtime; Genetic algorithms; Memory management; Fault
   detection; Sociology; Statistics; Evolutionary testing; many-objective
   optimization; performance
ID EVOLUTIONARY ALGORITHMS; MUTATION
AB Automated test case generation is an effective technique to yield high-coverage test suites. While the majority of research effort has been devoted to satisfying coverage criteria, a recent trend emerged towards optimizing other non-coverage aspects. In this regard, runtime and memory usage are two essential dimensions: less expensive tests reduce the resource demands for the generation process and later regression testing phases. This study shows that performance-aware test case generation requires solving two main challenges: providing a good approximation of resource usage with minimal overhead and avoiding detrimental effects on both final coverage and fault detection effectiveness. To tackle these challenges, we conceived a set of performance proxies-inspired by previous work on performance testing- that provide a reasonable estimation of the test execution costs (i.e., runtime and memory usage). Thus, we propose an adaptive strategy, called aDynaMOSA, which leverages these proxies by extending DynaMOSA, a state-of-the-art evolutionary algorithm in unit testing. Our empirical study -involving 110 non-trivial Java classes-reveals that our adaptive approach generates test suite with statistically significant improvements in runtime (-25 percent) and heap memory consumption (-15 percent) compared to DynaMOSA. Additionally, aDynaMOSA has comparable results to DynaMOSA over seven different coverage criteria and similar fault detection effectiveness. Our empirical investigation also highlights that the usage of performance proxies (i.e., without the adaptiveness) is not sufficient to generate more performant test cases without compromising the overall coverage.
C1 [Grano, Giovanni; Laaber, Christoph] Univ Zurich, CH-8006 Zurich, Switzerland.
   [Panichella, Annibale] Delft Univ Technol, NL-2628 CD Delft, Netherlands.
   [Panichella, Sebastiano] Zurich Univ Appl Sci, CH-8005 Zurich, Switzerland.
C3 University of Zurich; Delft University of Technology; Zurich University
   of Applied Sciences
RP Grano, G (corresponding author), Univ Zurich, CH-8006 Zurich, Switzerland.
EM grano@ifi.uzh.ch; laaber@ifi.uzh.ch; A.Panichella@tudelft.nl;
   panc@zhaw.ch
RI Laaber, Christoph/AAU-8240-2021; Grano, Giovanni/ABA-1024-2021
OI Laaber, Christoph/0000-0001-6817-331X; Grano,
   Giovanni/0000-0002-8207-3259; Panichella, Sebastiano/0000-0003-4120-626X
FU SNSF through project MINCA [165546]
FX Laaber acknowledges the support of the SNSF through project MINCA under
   Grant no. 165546.
CR Afshan S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P352, DOI 10.1109/ICST.2013.11
   Albert E., 2011, P INT S LOG BAS PROG, P25
   Albunian NM, 2017, LECT NOTES COMPUT SC, V10452, P183, DOI 10.1007/978-3-319-66299-2_17
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2014, P 29 ACM IEEE INT C, DOI [10.1145/2642937.2643002, DOI 10.1145/2642937.2643002]
   [Anonymous], 2013, P INT S SOFTWARE TES
   Arcuri Andrea, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P205, DOI 10.1109/ICST.2010.17
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Asadollah SA, 2015, LECT NOTES COMPUT SC, V9447, P194, DOI 10.1007/978-3-319-25945-1_12
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Campos J, 2017, LECT NOTES COMPUT SC, V10452, P33, DOI 10.1007/978-3-319-66299-2_3
   Campos J, 2018, INFORM SOFTWARE TECH, V104, P207, DOI 10.1016/j.infsof.2018.08.010
   Chen N, 2015, IEEE T SOFTWARE ENG, V41, P198, DOI 10.1109/TSE.2014.2363469
   Conover W.J., 1999, Practical Nonparametric Statistics, V350
   Crepinsek M, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2480741.2480752
   Daka E, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P107, DOI 10.1145/2786805.2786838
   de Oliveira AB, 2017, IEEE INT CONF SOFTW, P103, DOI 10.1109/ICST.2017.17
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Ferrer J, 2012, SOFTWARE PRACT EXPER, V42, P1331, DOI 10.1002/spe.1135
   Fowler M., 2006, THOUGHT WORKS, V122, P14
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P783, DOI 10.1007/s10664-013-9299-z
   Fraser G, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685612
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Georges A, 2007, ACM SIGPLAN NOTICES, V42, P57, DOI 10.1145/1297105.1297033
   Goldberg D. E., 1989, GENETIC ALGORITHMS S
   Grano G., 2019, [Replication Package, Testing with fewer resources: An adaptive approach to performance-aware test case generation], DOI 10.5281/zenodo.3477414
   Harman Mark, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P182, DOI 10.1109/ICSTW.2010.31
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1098
   Hilton M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P197, DOI 10.1145/3106237.3106270
   Huang P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P60, DOI 10.1145/2568225.2568232
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Köppen M, 2007, LECT NOTES COMPUT SC, V4403, P727
   McAllister W., 2008, Data Structures and Algorithms Using Java
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Mostafa S, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P23, DOI 10.1145/3092703.3092725
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Offutt J, 2011, INFORM SOFTWARE TECH, V53, P1098, DOI 10.1016/j.infsof.2011.03.007
   Oster N, 2006, LECT NOTES COMPUT SC, V4166, P426
   Palomba F, 2016, P 25 INT S SOFTW TES, P130, DOI [10.1145/2931037.2931057, DOI 10.1145/2931037.2931057]
   Panichella A, 2018, INFORM SOFTWARE TECH, V104, P236, DOI 10.1016/j.infsof.2018.08.009
   Panichella A, 2018, LECT NOTES COMPUT SC, V11036, P309, DOI 10.1007/978-3-319-99241-9_17
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Panichella A, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P32, DOI 10.1109/SBST.2017.7
   Panichella A, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P15, DOI 10.1109/SST.2015.10
   Panichella S, 2016, PROC INT CONF SOFTW, P547, DOI 10.1145/2884781.2884847
   Pinto G. H. L., 2010, 2010 Proceedings of 22nd International Conference on Tools with Artificial Intelligence (ICTAI 2010), P129, DOI 10.1109/ICTAI.2010.26
   Raz Tzvi., 1992, SIAM Review, V34, P518, DOI [10.1137/1034111, DOI 10.1137/1034111]
   Rojas Jose Miguel, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P93, DOI 10.1007/978-3-319-22183-0_7
   Rojas JM, 2017, EMPIR SOFTW ENG, V22, P852, DOI 10.1007/s10664-015-9424-2
   Shamshiri S, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1367, DOI 10.1145/2739480.2754696
   Shirazi J., 2002, JAVA PERFORMANCE TUN, V2nd
   Soltani M., IEEE T SOFTWARE ENG
   Tonella P., 2004, Software Engineering Notes, V29, P119, DOI 10.1145/1013886.1007528
   Torngren Martin, 2018, Principles of Modeling - Essays Dedicated to Edward A. Lee on the Occasion of His 60th Birthday. Lecture Notes in Computer Science (LNCS 10760), P478, DOI 10.1007/978-3-319-95246-8_27
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vassallo C, 2016, PROC IEEE INT CONF S, P519, DOI 10.1109/ICSME.2016.72
   von Lücken C, 2014, COMPUT OPTIM APPL, V58, P707, DOI 10.1007/s10589-014-9644-1
   Wei Y, 2012, LECT NOTES COMPUT SC, V7007, P194
   Xuan JF, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P52, DOI 10.1145/2635868.2635906
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
NR 66
TC 12
Z9 13
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2021
VL 47
IS 11
BP 2332
EP 2347
DI 10.1109/TSE.2019.2946773
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WW2QE
UT WOS:000717767100002
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Hoang, T
   Lawall, J
   Tian, Y
   Oentaryo, RJ
   Lo, D
AF Hoang, Thong
   Lawall, Julia
   Tian, Yuan
   Oentaryo, Richard J.
   Lo, David
TI PatchNet: Hierarchical Deep Learning-Based Stable Patch Identification
   for the Linux Kernel
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Kernel; Linux; Computer bugs; Feature extraction; Deep learning;
   Indexes; Manuals; Linux kernel; patch classification; deep learning
ID GRADIENT; RECOGNITION
AB Linux kernel stable versions serve the needs of users who value stability of the kernel over new features. The quality of such stable versions depends on the initiative of kernel developers and maintainers to propagate bug fixing patches to the stable versions. Thus, it is desirable to consider to what extent this process can be automated. A previous approach relies on words from commit messages and a small set of manually constructed code features. This approach, however, shows only moderate accuracy. In this paper, we investigate whether deep learning can provide a more accurate solution. We propose PatchNet, a hierarchical deep learning-based approach capable of automatically extracting features from commit messages and commit code and using them to identify stable patches. PatchNet contains a deep hierarchical structure that mirrors the hierarchical and sequential structure of commit code, making it distinctive from the existing deep learning models on source code. Experiments on 82,403 recent Linux patches confirm the superiority of PatchNet against various state-of-the-art baselines, including the one recently-adopted by Linux kernel maintainers.
C1 [Hoang, Thong; Lo, David] Singapore Management Univ, Singapore 188065, Singapore.
   [Lawall, Julia] Sorbonne Univ, INRIA, LIP6, F-75005 Paris, France.
   [Tian, Yuan] Queens Univ, Kingston, ON K7L 3N6, Canada.
   [Oentaryo, Richard J.] McLaren Appl Technol, Singapore 038987, Singapore.
C3 Singapore Management University; Sorbonne Universite; Inria; Queens
   University - Canada
RP Hoang, T (corresponding author), Singapore Management Univ, Singapore 188065, Singapore.
EM vdthoang.2016@smu.edu.sg; Julia.Lawall@lip6.fr; yuan.tian@cs.queensu.ca;
   richard.oentaryo@mclaren.com; davidlo@smu.edu.sg
RI Hoang, Thong/AFQ-0983-2022; Lo, David/A-2493-2012
OI Hoang, Thong/0000-0002-7421-4672; Lo, David/0000-0002-4367-7201
FU Singapore National Research Foundation [NRF2016-NRF-ANR003]
FX This research was supported by the Singapore National Research
   Foundation (Award number: NRF2016-NRF-ANR003) and theANRITrans project.
CR Lam AN, 2017, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2017.24
   Anastassiou GA, 2011, MATH COMPUT MODEL, V53, P1111, DOI 10.1016/j.mcm.2010.11.072
   [Anonymous], 2014, Proceedings of the 2014 conference on empirical methods in natural language processing (EMNLP), DOI [DOI 10.3115/V1/D14-1181, 10.3115/v1/D14-1181]
   [Anonymous], 2009, Scholarpedia
   [Anonymous], 1996, NEURAL NETWORK DESIG
   Anthimopoulos M, 2016, IEEE T MED IMAGING, V35, P1207, DOI 10.1109/TMI.2016.2535865
   Arora S, 2018, PR MACH LEARN RES, V80
   Bing L, 2003, THIRD IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P179, DOI 10.1109/icdm.2003.1250918
   Bishop C. M., 1995, NEURAL NETWORKS PATT
   Bottou L, 2010, COMPSTAT'2010: 19TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL STATISTICS, P177, DOI 10.1007/978-3-7908-2604-3_16
   Brants Thorsten., 2004, Proceedings of the 14th Meeting of Computational Linguistics in the Netherlands, P1
   Brown P. F., 1992, Computational Linguistics, V18, P467
   Bui NDQ, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P33, DOI 10.1145/3183399.3183427
   Caruana R, 2001, ADV NEUR IN, V13, P402
   Cauwenberghs G, 2001, ADV NEUR IN, V13, P409
   Collobert R, 2011, J MACH LEARN RES, V12, P2493
   Cristianini N., 2000, INTRO SUPPORT VECTOR
   Dahl GE, 2013, INT CONF ACOUST SPEE, P8609, DOI 10.1109/ICASSP.2013.6639346
   Geoffrey EHinton., 2012, Improving neural networks by preventing co-adaptation of feature detectors
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Guo J, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2017.9
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Haykin S., 2004, Kalman filtering and neural networks, V47
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Huo X., 2016, IJCAI, P1606
   Huo X, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1909
   Ji SW, 2013, IEEE T PATTERN ANAL, V35, P221, DOI 10.1109/TPAMI.2012.59
   Joachims T., 1999, SVM-Light Support Vector Mach., V19, P25
   Jurafsky D., 2014, SPEECH LANGUAGE PROC, V3
   Kalchbrenner N, 2014, PROCEEDINGS OF THE 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P655, DOI 10.3115/v1/p14-1062
   Karpathy A, 2014, PROC CVPR IEEE, P1725, DOI 10.1109/CVPR.2014.223
   King DB, 2015, ACS SYM SER, V1214, P1
   Kohavi R., 1995, INT JOINT C ART INT, V2, P1137, DOI DOI 10.1067/MOD.2000.109031
   Korbar Bruno, 2017, J Pathol Inform, V8, P30, DOI 10.4103/jpi.jpi_34_17
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Lawrence S, 1997, IEEE T NEURAL NETWOR, V8, P98, DOI 10.1109/72.554195
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   LeCun Y, 1999, LECT NOTES COMPUT SC, V1681, P319, DOI 10.1007/3-540-46805-6_19
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Lee GK, 2003, ORGAN SCI, V14, P633, DOI 10.1287/orsc.14.6.633.24866
   Letouzey F, 2000, LECT NOTES ARTIF INT, V1968, P71
   Levin S., 2018, BUILDING STABLE TREE
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Liu JZ, 2017, SIGIR'17: PROCEEDINGS OF THE 40TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P115, DOI 10.1145/3077136.3080834
   Love Robert, 2010, Linux Kernel Development
   MacKenzie D., 2003, COMP MERGING FILES G
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Mikolov T, 2010, 11TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION 2010 (INTERSPEECH 2010), VOLS 1-2, P1045
   Mnih V, 2014, ADV NEUR IN, V27
   Nair Vinod, 2010, INT C INT C MACHINE, P807
   Nguyen G. H., 2009, PATTERN RECOGN, P193
   Padioleau Y, 2008, EUROSYS'08: PROCEEDINGS OF THE EUROSYS 2008 CONFERENCE, P247, DOI 10.1145/1357010.1352618
   Padioleau Y, 2009, LECT NOTES COMPUT SC, V5501, P109, DOI 10.1007/978-3-642-00722-4_9
   Prechelt L, 1998, NEURAL NETWORKS, V11, P761, DOI 10.1016/S0893-6080(98)00010-0
   Severyn A, 2015, SIGIR 2015: PROCEEDINGS OF THE 38TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P373, DOI 10.1145/2766462.2767738
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Suykens JAK, 1999, NEURAL PROCESS LETT, V9, P293, DOI 10.1023/A:1018628609742
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Tian Y, 2012, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2012.6227176
   Tolias G., 2016, Conference Track Proceedings,
   Vijayarani S., 2015, International Journal of Computer Science Communication Networks, V5, P7
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wen Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1210, DOI 10.1109/ASE.2019.00140
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Xiong YF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P789, DOI 10.1145/3180155.3180182
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Zanjani MB, 2016, IEEE T SOFTWARE ENG, V42, P530, DOI 10.1109/TSE.2015.2500238
   Zeiler M.D., 2013, ARXIV201313013557, P1
NR 71
TC 9
Z9 11
U1 3
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2021
VL 47
IS 11
BP 2471
EP 2486
DI 10.1109/TSE.2019.2952614
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WW2QE
UT WOS:000717767100010
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Cruz, L
   Abreu, R
AF Cruz, Luis
   Abreu, Rui
TI On the Energy Footprint of Mobile Testing Frameworks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Automation; Energy consumption; Testing; Tools; Energy measurement;
   Monitoring; Robots; Mobile testing; testing frameworks; energy
   consumption
AB High energy consumption is a challenging issue that an ever increasing number of mobile applications face today. However, energy consumption is being tested in an ad hoc way, despite being an important non-functional requirement of an application. Such limitation becomes particularly disconcerting during software testing: on the one hand, developers do not really know how to measure energy; on the other hand, there is no knowledge as to what is the energy overhead imposed by the testing framework. In this paper, as we evaluate eight popular mobile UI automation frameworks, we have discovered that there are automation frameworks that increase energy consumption up to roughly 2200 percent. While limited in the interactions one can do, Espresso is the most energy efficient framework. However, depending on the needs of the tester, Appium, Monkeyrunner, or UIAutomator are good alternatives. In practice, results show that deciding which is the most suitable framework is vital. We provide a decision tree to help developers make an educated decision on which framework suits best their testing needs.
C1 [Cruz, Luis] Delft Univ Technol, NL-2628 CD Delft, Netherlands.
   [Abreu, Rui] Univ Lisbon, P-1649004 Lisbon, Portugal.
   [Abreu, Rui] INESC ID, P-1000029 Lisbon, Portugal.
C3 Delft University of Technology; Universidade de Lisboa; INESC-ID;
   Universidade de Lisboa
RP Cruz, L (corresponding author), Delft Univ Technol, NL-2628 CD Delft, Netherlands.
EM luiscruz@fe.up.pt; rui@computer.org
RI Cruz, Luis/AAJ-1874-2021; Abreu, Rui/K-7048-2019
OI Cruz, Luis/0000-0002-1615-355X; Abreu, Rui/0000-0003-3734-3157
FU Fundacao para a Ciencia e a Tecnologia (FCT) [UID/EEA/50014/2019];
   GreenLab Project [POCI-01-0145-FEDER-016718]; FaultLocker Project
   [PTDC/CCI-COM/29300/2017]; Delft Data Science (DDS) project
FX This work was supported in part by Fundacao para aCie<^>ncia e a
   Tecnologia (FCT) with reference UID/EEA/50014/2019, in part by the
   GreenLab Project (ref. POCI-01-0145-FEDER-016718), in part by the
   FaultLocker Project (ref. PTDC/CCI-COM/29300/2017), and in part by
   theDelft Data Science (DDS) project.
CR Abdulsalam Sarah, 2015, 2015 Sixth International Green and Sustainable Computing Conference (IGSC), P1, DOI 10.1109/IGCC.2015.7393699
   Banerjee A, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P127, DOI [10.1109/MobileSoft.2016.037, 10.1145/2897073.2897085]
   Banerjee A, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P139, DOI [10.1109/MobileSoft.2016.038, 10.1145/2897073.2897086]
   Cao Y, 2017, P ACM MEAS ANAL COMP, V1, DOI 10.1145/3084443
   Carette A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P115, DOI 10.1109/SANER.2017.7884614
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Coppola R., 2016, Proceedings of the 2Nd International Workshop on User Interface Test Automation. Coll.  INTUITEST 2016, P11
   Coppola R, 2017, PROC IEEE ACM INT C, P405, DOI 10.1109/ICSE-C.2017.22
   Cruz Luis, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P46, DOI 10.1109/MOBILESoft.2017.19
   Cruz L., 2018, P 21 IBERO AM C SOFT
   Cruz L, 2019, EMPIR SOFTW ENG, V24, P2209, DOI 10.1007/s10664-019-09682-0
   Di Nucci D, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P103, DOI 10.1109/SANER.2017.7884613
   Ferreira D, 2013, UBICOMP'13: PROCEEDINGS OF THE 2013 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING, P563, DOI 10.1145/2493432.2493465
   Gao ZB, 2016, IEEE T SOFTWARE ENG, V42, P170, DOI 10.1109/TSE.2015.2454510
   Gomez L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P72, DOI 10.1109/ICSE.2013.6606553
   Gunasekaran S., 2015, INT J ADV ENG RES SC, V2, P2349
   Hao S, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P204, DOI 10.1145/2594368.2594390
   Hecht G, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P59, DOI [10.1145/2897073.2897100, 10.1109/MobileSoft.2016.030]
   Hindle A, 2015, EMPIR SOFTW ENG, V20, P374, DOI 10.1007/s10664-013-9276-6
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Kulkarni M.K., 2016, Journal 4 Research, V2, P70
   Lee S, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING (UBICOMP 2015), P191, DOI 10.1145/2750858.2807531
   Li D., 2014, P 3 INT WORKSHOP GRE, P46, DOI DOI 10.1145/2593743.2593750
   Li D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P527, DOI 10.11455/2568225.2568321
   Li D, 2014, PROC IEEE INT CONF S, P121, DOI 10.1109/ICSME.2014.34
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Linares-Vásquez M, 2017, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSME.2017.27
   Linares-Vásquez M, 2017, PROC IEEE INT CONF S, P613, DOI 10.1109/ICSME.2017.47
   Linares-Vásquez M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P763, DOI 10.1109/ICSE.2015.242
   Liu CH, 2014, 2014 INTERNATIONAL SYMPOSIUM ON COMPUTER, CONSUMER AND CONTROL (IS3C 2014), P1129, DOI 10.1109/IS3C.2014.293
   Liu KC, 2017, IEEE ICST WORKSHOP, P372, DOI 10.1109/ICSTW.2017.66
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Mahmood R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P599, DOI 10.1145/2635868.2635896
   Malavolta Ivano, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P35, DOI 10.1109/MOBILESoft.2017.7
   Moreira RMLM, 2013, PROC INT SYMP SOFTW, P288, DOI 10.1109/ISSRE.2013.6698881
   Morgado IC, 2015, IEEE INT CONF AUTOM, P876, DOI 10.1109/ASE.2015.96
   Pang C, 2016, IEEE SOFTWARE, V33, P83, DOI 10.1109/MS.2015.83
   Pereira R, 2017, PROC IEEE ACM INT C, P238, DOI 10.1109/ICSE-C.2017.80
   Rasmussen K., 2014, P 3 INT WORKSHOP GRE, P38
   Saborido Ruben., 2015, PeerJ PrePrints, V3, pe1219, DOI DOI 10.7287/PEERJ.PREPRINTS.1219V2
   Sahin C, 2016, J SYST SOFTWARE, V117, P307, DOI 10.1016/j.jss.2016.03.031
NR 41
TC 9
Z9 9
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2021
VL 47
IS 10
BP 2260
EP 2271
DI 10.1109/TSE.2019.2946163
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WH1IX
UT WOS:000707441900013
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Huang, RB
   Sun, WF
   Xu, YY
   Chen, HB
   Towey, D
   Xia, X
AF Huang, Rubing
   Sun, Weifeng
   Xu, Yinyin
   Chen, Haibo
   Towey, Dave
   Xia, Xin
TI A Survey on Adaptive Random Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Subspace constraints; Testing; Libraries; Software; Power capacitors;
   Strips; Art; Adaptive random testing; random testing; survey
ID CENTROIDAL VORONOI TESSELLATIONS; PROPORTIONAL SAMPLING STRATEGY;
   TEST-CASE PRIORITIZATION; TEST-CASE GENERATION; CODE COVERAGE;
   GUIDELINES; PROGRAMS
AB Random testing (RT) is a well-studied testing method that has been widely applied to the testing of many applications, including embedded software systems, SQL database systems, and Android applications. Adaptive random testing (ART) aims to enhance RT's failure-detection ability by more evenly spreading the test cases over the input domain. Since its introduction in 2001, there have been many contributions to the development of ART, including various approaches, implementations, assessment and evaluation methods, and applications. This paper provides a comprehensive survey on ART, classifying techniques, summarizing application areas, and analyzing experimental evaluations. This paper also addresses some misconceptions about ART, and identifies open research challenges to be further investigated in the future work.
C1 [Huang, Rubing] Jiangsu Univ, Sch Comp Sci & Commun Engn, Jiangsu Key Lab Secur Technol Ind Cyberspace, Zhenjiang 212013, Jiangsu, Peoples R China.
   [Sun, Weifeng; Xu, Yinyin; Chen, Haibo] Jiangsu Univ, Sch Comp Sci & Commun Engn, Zhenjiang 212013, Jiangsu, Peoples R China.
   [Towey, Dave] Univ Nottingham Ningbo China, Sch Comp Sci, Ningbo 315100, Zhejiang, Peoples R China.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Melbourne, Vic 3168, Australia.
C3 Jiangsu University; Jiangsu University; University of Nottingham Ningbo
   China; Monash University
RP Huang, RB (corresponding author), Jiangsu Univ, Sch Comp Sci & Commun Engn, Jiangsu Key Lab Secur Technol Ind Cyberspace, Zhenjiang 212013, Jiangsu, Peoples R China.
EM rbhuang@ujs.edu.cn; 2211808031@stmail.ujs.edu.cn;
   2221808040@stmail.ujs.edu.cn; 2221808034@stmail.ujs.edu.cn;
   dave.towey@nottingham.edu.cn; xin.xia@monash.edu
RI Xia, Xin/AAD-6217-2022; Towey, Dave/K-3160-2014
OI Xia, Xin/0000-0002-6302-3256; Sun, Weifeng/0000-0001-6013-1369; Towey,
   Dave/0000-0003-0877-4353; Huang, Rubing/0000-0002-1769-6126
FU National Natural Science Foundation of China [61502205, 61872167]; China
   Postdoctoral Science Foundation [2019T120396]; Senior Personnel
   Scientific Research Foundation of Jiangsu University [14JDG039]; Young
   Backbone Teacher Cultivation Project of Jiangsu University; Postgraduate
   Research & Practice Innovation Program of Jiangsu Province [KYCX19_1614,
   29/9/1973-6/10/2017]
FX We would like to thank the anonymous reviewers for their many
   constructive comments. We would also like to thank T. Y. Chen for his
   many helpful suggestions for this article. This work is supported by the
   National Natural Science Foundation of China, under grant nos. 61502205
   and 61872167; the China Postdoctoral Science Foundation, under grant no.
   2019T120396; and the Senior Personnel Scientific Research Foundation of
   Jiangsu University, under grant no. 14JDG039. This work is also
   supported by the Young Backbone Teacher Cultivation Project of Jiangsu
   University, and the Postgraduate Research & Practice Innovation Program
   of Jiangsu Province, under grant no. KYCX19_1614. We dedicate this
   article to the memory of our friend and colleague, Dr. Diana Fei-Ching
   Kuo (29/9/1973-6/10/2017), one of the pioneers of Adaptive Random
   Testing.
CR Ahmed BS, 2017, IEEE ACCESS, V5, P25706, DOI 10.1109/ACCESS.2017.2771562
   Allen F.E., 1970, ACM Sigplan Not, V5, P1, DOI [DOI 10.1145/800028.808479, 10.1145/390013.808479, DOI 10.1145/390013.808479]
   AMMANN PE, 1988, IEEE T COMPUT, V37, P418, DOI 10.1109/12.2185
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   [Anonymous], 2016, APACHE COMMONS MATH
   [Anonymous], 1994, CHRIS LOTTS WEBSITE
   [Anonymous], 2015, COMMON MODELING ERRO
   [Anonymous], 2014, DELPHI
   [Anonymous], 2019, GNU SCI LIB
   [Anonymous], 2004, Understanding Probability
   [Anonymous], 1995, Methods in Scientific Computing
   [Anonymous], 2014, SEKE
   [Anonymous], 2019, JODATIME
   [Anonymous], 2012, RBCVT
   [Anonymous], 2019, DELPHI
   [Anonymous], 2005, P 17 INT C SOFTW ENG
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2010, LECT NOTES COMPUT SC, V6435, P95, DOI 10.1007/978-3-642-16573-3_8
   Arcuri Andrea., 2011, ISSTA
   Association for Computing Machinery, 1980, COLL ALG ACM, VI
   AURENHAMMER F, 1991, COMPUT SURV, V23, P345, DOI 10.1145/116873.116880
   Barus AC, 2016, IEEE T COMPUT, V65, P3509, DOI 10.1109/TC.2016.2547380
   Bati H., 2007, P 33 INT C VER LARG, P1243
   BELLMAN R, 1966, SCIENCE, V153, P34, DOI 10.1126/science.153.3731.34
   BISHOP PG, 1993, FTCS-23 - TWENTY-THIRD INTERNATIONAL SYMPOSIUM ON FAULT-TOLERANT COMPUTING : DIGEST OF PAPERS, P98, DOI 10.1109/FTCS.1993.627312
   Bo Zhou, 2010, Proceedings 2010 IEEE 12th International Symposium on High-Assurance Systems Engineering (HASE), P162, DOI 10.1109/HASE.2010.11
   Brooks SP, 1998, J ROY STAT SOC D-STA, V47, P69, DOI 10.1111/1467-9884.00117
   Bueno P. M., 2007, P 2 INT WORKSH RAND, P10
   Bueno PMS, 2014, INFORM SCIENCES, V259, P490, DOI 10.1016/j.ins.2011.01.025
   Chan FT, 2004, P INT COMP SOFTW APP, P96, DOI 10.1109/ISIC.2004.1387665
   Chan FT, 1996, INFORM SOFTWARE TECH, V38, P775, DOI 10.1016/0950-5849(96)01103-2
   Chan K. P., 2007, PROX 19 INT C SOFTW, P163
   Chan KP, 2003, LECT NOTES COMPUT SC, V2655, P368
   Chan KP, 2002, LECT NOTES COMPUT SC, V2349, P321
   CHAN KP, 2004, P 9 AD EUR INT C REL, P200
   Chan KP, 2006, INT CONF QUAL SOFTW, P274
   Chan KP, 2006, P INT COMP SOFTW APP, P485
   Chan KP, 2006, INT J SOFTW ENG KNOW, V16, P553, DOI 10.1142/S0218194006002926
   Chen, 2013, P 28 ANN ACM S APPL, P1049
   Chen JF, 2017, IEEE T RELIAB, V66, P373, DOI 10.1109/TR.2016.2628759
   Chen JF, 2016, IEEE INT SYMP SOFTW, P205, DOI 10.1109/ISSREW.2016.29
   Chen JF, 2014, TSINGHUA SCI TECHNOL, V19, P429, DOI 10.1109/TST.2014.6919819
   Chen JJ, 2016, IEEE INT CONF SOFTW, P266, DOI 10.1109/ICST.2016.19
   Chen MH, 2001, IEEE T RELIAB, V50, P165, DOI 10.1109/24.963124
   Chen TY, 2008, INT CONF QUAL SOFTW, P443, DOI 10.1109/QSIC.2008.22
   Chen TY, 2006, 2006 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P300
   Chen TY, 2006, LECT NOTES COMPUT SC, V4006, P155
   Chen T. Y., 2007, P 9 INT C SOFTW ENG, P141
   Chen T. Y., 2007, P 40 ANN HAW INT C S, p262a
   Chen T.Y., 2009, P 2009 ACM S APPL CO, P422
   Chen T. Y., 2007, P 2 ACM INT WORKSH R, P2
   Chen T. Y., 2006, P 1 INT WORKSH RAND, P64
   Chen TY, 2008, J SYST SOFTWARE, V81, P2146, DOI 10.1016/j.jss.2008.03.062
   Chen TY, 2008, INT CONF QUAL SOFTW, P145, DOI 10.1109/QSIC.2008.23
   Chen TY, 2007, INT J SOFTW ENG KNOW, V17, P805, DOI 10.1142/S0218194007003501
   Chen TY, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P274
   Chen TY, 2007, 2007 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P265, DOI 10.1109/ASWEC.2007.20
   Chen TY, 2007, IEEE T RELIAB, V56, P562, DOI 10.1109/TR.2007.903293
   Chen TY, 2006, J SYST SOFTWARE, V79, P591, DOI 10.1016/j.jss.2005.05.029
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Chen TY, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-015-5314-x
   Chen TY, 2013, IEEE T RELIAB, V62, P226, DOI 10.1109/TR.2013.2240898
   Chen TY, 2011, J INF SCI ENG, V27, P1449
   Chen TY, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363107
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Chen TY, 2009, J SYST SOFTWARE, V82, P1419, DOI 10.1016/j.jss.2009.05.017
   Chen TY, 2009, IEEE T RELIAB, V58, P179, DOI 10.1109/TR.2008.2011687
   Chen Tsong-Yueh, 2006, Journal of Software, V17, P2438, DOI 10.1360/jos172438
   Chen TY, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P292, DOI 10.1109/APSEC.2004.17
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Chen TY, 2004, INFORM SOFTWARE TECH, V46, P1001, DOI 10.1016/j.infsof.2004.07.004
   Chen TY, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P146
   Chen TY, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P79
   Chen TY, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P4, DOI 10.1109/QSIC.2003.1319079
   Chen TY, 2001, J SYST SOFTWARE, V58, P65, DOI 10.1016/S0164-1212(01)00028-0
   Chi HM, 2006, PROCEEDINGS OF THE 2006 WINTER SIMULATION CONFERENCE, VOLS 1-5, P975, DOI 10.1109/WSC.2006.323184
   Chow C, 2013, INT CONF QUAL SOFTW, P268, DOI 10.1109/QSIC.2013.19
   Ciupa I, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P71, DOI 10.1145/1368088.1368099
   Ciupa Ilinca., 2006, P 1 INT WORKSHOP RAN, P55
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   Cotroneo D, 2016, IEEE T SOFTWARE ENG, V42, P452, DOI 10.1109/TSE.2015.2491931
   CRANLEY R, 1976, SIAM J NUMER ANAL, V13, P904, DOI 10.1137/0713071
   Cui J, 2009, P PAC AS C KNOWL ENG, P33
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Du Q, 1999, SIAM REV, V41, P637, DOI 10.1137/S0036144599352836
   FINELLI GB, 1991, RELIAB ENG SYST SAFE, V32, P155, DOI 10.1016/0951-8320(91)90052-9
   Flannery B. P., 1992, NUMERICAL RECIPES C, DOI DOI 10.2277/052143064X
   Forrester JE, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE 4TH UNSENIX WINDOWS SYSTEMS SYMPOSIUM, P59
   Frankl PG, 1998, IEEE T SOFTWARE ENG, V24, P586, DOI 10.1109/32.707695
   Ghani A. A. A, 2011, P 6 INT C SOFTW ENG, P49
   HALEY A, 1984, J SYST SOFTWARE, V4, P309, DOI 10.1016/0164-1212(84)90030-X
   HALTON JH, 1964, COMMUN ACM, V7, P701, DOI 10.1145/355588.365104
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Hemmati H., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P327, DOI 10.1109/ICST.2011.12
   Hemmati H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430540
   Hemmati H, 2010, LECT NOTES COMPUT SC, V6435, P63, DOI 10.1007/978-3-642-16573-3_6
   Huai Liu, 2009, Proceedings 21st International Conference on Software Engineering & Knowledge Engineering (SEKE 2009), P418
   Huai Liu, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P92, DOI 10.1109/QSIC.2010.61
   Huang J. C., 1975, Computing Surveys, V7, P113, DOI 10.1145/356651.356652
   Huang R., 2014, P ACM S APPL COMP, P1058, DOI [10.1145/2554850.2554854, DOI 10.1145/2554850.2554854]
   HUANG R, 2014, SCI WORLD J, V2014, P1, DOI DOI 10.1155/2014/792673
   Huang RB, 2015, INFORM SOFTWARE TECH, V67, P13, DOI 10.1016/j.infsof.2015.06.003
   Huang RB, 2012, P INT COMP SOFTW APP, P52, DOI 10.1109/COMPSAC.2012.15
   Huang XY, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P32, DOI 10.1109/QRS.2017.13
   Hui Z.-W., 2016, P 1 INT WORKSHOP SPE, P27, DOI DOI 10.1145/2975954.2975959
   Iqbal Muhammad Zohaib, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P136, DOI 10.1007/978-3-642-33119-0_11
   ISO/IEC/IEEE International Standard-Systems and software engineeringVocabulary, 2010, 247652017 IEEE
   Jaygarl H, 2009, P INT COMP SOFTW APP, P148, DOI 10.1109/COMPSAC.2009.29
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jiang B, 2015, J SYST SOFTWARE, V105, P91, DOI 10.1016/j.jss.2015.03.066
   Jiang B, 2013, P INT COMP SOFTW APP, P190, DOI 10.1109/COMPSAC.2013.33
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Johannes M., 2006, P 1 INT WORKSH RAND, P70
   Johannes M., 2006, P 3 INT WORKSH SOFTW, P22
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Kitchenham B., 2007, 2007001 EBSE
   Kollig T, 2002, COMPUT GRAPH FORUM, V21, P557, DOI 10.1111/1467-8659.00706
   Kuo FC, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P1467, DOI 10.1145/1244002.1244316
   Kuo F.-C., 2007, P 19 INT C SOFTW ENG, P135
   Kuo FC, 2008, SOFTWARE QUAL J, V16, P303, DOI 10.1007/s11219-008-9047-6
   Kuo FC, 2009, INT CONF QUAL SOFTW, P51, DOI 10.1109/QSIC.2009.15
   Kwok Ping Chan, 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P78
   LASKI JW, 1983, IEEE T SOFTWARE ENG, V9, P347, DOI 10.1109/TSE.1983.236871
   Ledru Y, 2012, AUTOMAT SOFTW ENG, V19, P65, DOI 10.1007/s10515-011-0093-0
   Lin Y, 2009, IEEE INT CONF AUTOM, P221, DOI 10.1109/ASE.2009.13
   Liu H, 2016, IEEE T COMPUT, V65, P1896, DOI 10.1109/TC.2015.2455981
   Liu H, 2009, INT CONF QUAL SOFTW, P59, DOI 10.1109/QSIC.2009.16
   Liu H, 2012, SOFTWARE PRACT EXPER, V42, P1055, DOI 10.1002/spe.1113
   Liu H, 2011, SOFTWARE PRACT EXPER, V41, P1131, DOI 10.1002/spe.1067
   Long X., 2010, P 2 INT C COMP ENG T
   Mao CY, 2017, ASIA PAC SOFWR ENG, P689, DOI 10.1109/APSEC.2017.86
   Mao CY, 2017, SCI CHINA INFORM SCI, V60, DOI 10.1007/s11432-016-0087-0
   Mao CY, 2012, INFORM-J COMPUT INFO, V36, P297
   Matinnejad R, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P84, DOI 10.1145/2786805.2786818
   Mayer J., 2006, Proceedings of the 2006 International Conference on Software Engineering Research and Practice and Conference on Programming Languages and Compilers SERP'06, P16
   Mayer J., 2006, Proceedings of the 2006 International Conference on Software Engineering Research and Practice and Conference on Programming Languages and Compilers SERP'06, P59
   Mayer J., 2006, P 5 ACM IEEE INT S E, P105
   Mayer J., 2005, P 20 IEEEACM INT C A, P333, DOI DOI 10.1145/1101908
   MAYER J, 2005, P 7 INT C FORM ENG M, P251
   Mayer J., 2006, P 18 INT C SOFTW ENG, P499
   Mayer J, 2006, GECCO 2006: Genetic and Evolutionary Computation Conference, Vol 1 and 2, P1955
   Mayer J, 2006, INT CONF QUAL SOFTW, P251
   Mayer J, 2006, LECT NOTES COMPUT SC, V3997, P72
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Merkel R. G., 2005, ASE 05, P309
   Merkel R. G, 2011, P 26 ANN ACM S APPL, P378
   Merkel R. G, 2003, P 7 ANN INT WORKSH S, P71
   Merkel R, 2011, P INT COMP SOFTW APP, P68, DOI 10.1109/COMPSAC.2011.88
   Mohsenzadeh M, 2012, INT J INNOVATIVE TEC, V1, P1
   Mohsenzadeh M, 2012, P 1 INT C INF TECHN, P147
   Muangsiri W, 2017, INT J SOFTW ENG KNOW, V27, P1603, DOI 10.1142/S0218194017400149
   Musa JD, 1996, COMPUTER, V29, P61, DOI 10.1109/2.544239
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Nie CH, 2015, INFORM SOFTWARE TECH, V62, P198, DOI 10.1016/j.infsof.2015.02.008
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   NIEDERREITER H, 1988, J NUMBER THEORY, V30, P51, DOI 10.1016/0022-314X(88)90025-X
   Nikravan Esmaeel, 2015, 2015 2nd International Conference on Knowledge-Based Engineering and Innovation (KBEI). Proceedings, P510, DOI 10.1109/KBEI.2015.7436097
   Orso A., 2014, P FUTURE SOFTWARE EN, P117, DOI [10.1145/2593882.2593885, DOI 10.1145/2593882.2593885]
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Park Y. B, 2016, P 10 INT C UBIQ INF, P631
   Patrick M., 2015, P 10 INT WORKSH MUT, P1, DOI [10.1109/icstw.2015.7107451, DOI 10.1109/ICSTW.2015.7107451]
   Patrick M, 2017, INFORM SOFTWARE TECH, V81, P36, DOI 10.1016/j.infsof.2016.04.009
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Purdom P., 1972, BIT (Nordisk Tidskrift for Informationsbehandling), V12, P366, DOI 10.1007/BF01932308
   Putra IPES, 2013, INT C ADV COMP SCI I, P39, DOI 10.1109/ICACSIS.2013.6761550
   Qi YC, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P316, DOI 10.1109/QRS-C.2017.60
   Regehr J, 2005, P 5 ACM INT C EMB SO, P290
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Sabor KK, 2015, 10TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST AST 2015, P28, DOI 10.1109/AST.2015.13
   Sarala S., 2014, INT J COMPUT APPL, V93, P11
   Schneckenburger Christoph, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P241, DOI 10.1109/ICSTW.2008.24
   Schneckenburger C., 2007, P 4 INT WORKSH SOFTW, P90
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Selay E., 2014, P INT C DIG IM COMP, P1, DOI DOI 10.1109/DICTA.2014.7008093
   Sen K, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P11, DOI 10.1145/1375581.1375584
   Seung-Hun Shin, 2010, IEEE 34th Annual Computer Software and Applications Conference Workshops (COMPSACW 2010), P335, DOI 10.1109/COMPSACW.2010.65
   Shahbazi A, 2016, IEEE T SOFTWARE ENG, V42, P361, DOI 10.1109/TSE.2015.2487958
   Shahbazi A, 2013, IEEE T SOFTWARE ENG, V39, P163, DOI 10.1109/TSE.2012.18
   Sinaga AM, 2017, PROCEEDINGS OF THE 2017 INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY (ICIT 2017), P248, DOI 10.1145/3176653.3176711
   Sobo I., 1976, USSR J. Comput. Math. Math. Phys. Engl. Transl, V16, P1332, DOI DOI 10.1016/0041-5553(76)90154-3
   Sun B, 2012, 2012 9TH INTERNATIONAL CONFERENCE ON UBIQUITOUS INTELLIGENCE & COMPUTING AND 9TH INTERNATIONAL CONFERENCE ON AUTONOMIC & TRUSTED COMPUTING (UIC/ATC), P455, DOI 10.1109/UIC-ATC.2012.77
   Tappenden AF, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559936
   Tappenden AF, 2009, IEEE T RELIAB, V58, P619, DOI 10.1109/TR.2009.2034288
   Towey, 2005, P 17 INT C SOFTW ENG, P292
   Towey D, 2007, P INT C KOR SOC INF, P1
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Walkinshaw N, 2017, IEEE INT CONF SOFTW, P253, DOI 10.1109/ICST.2017.30
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   WHITE LJ, 1980, IEEE T SOFTWARE ENG, V6, P247, DOI 10.1109/TSE.1980.234486
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yu Liu, 2008, 2008 Second IEEE International Conference on Secure System Integration and Reliability Improvement (SSIRI), P24, DOI 10.1109/SSIRI.2008.18
   Yue H, 2015, ASIA PAC SOFWR ENG, P246, DOI 10.1109/APSEC.2015.34
   ZADEH LA, 1965, INFORM CONTROL, V8, P338, DOI 10.1016/S0019-9958(65)90241-X
   Zhang J, 2010, P 7 INT C ED INF TEC
   Zhang L, 2013, P 5 AS PAC S INT
   Zhang XF, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P374, DOI 10.1109/QRS.2016.49
   Zhi Quan Zhou, 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P5584, DOI 10.1109/HICSS.2012.454
   Zhi Quan Zhou, 2010, IEEE 34th Annual Computer Software and Applications Conference Workshops (COMPSACW 2010), P208, DOI 10.1109/COMPSACW.2010.43
   Zhou B, 2013, IEEE T COMPUT, V62, P186, DOI 10.1109/TC.2011.208
   Zhou B, 2012, IEICE T INF SYST, VE95D, P2219, DOI 10.1587/transinf.E95.D.2219
   Zhou L, 2010, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON ADVANCED TEXTILE MATERIALS & MANUFACTURING TECHNOLOGY, P472
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
   Zulzazil H, 2015, INT J INFORM TECHNOL, V19, P116
NR 206
TC 45
Z9 45
U1 2
U2 21
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2021
VL 47
IS 10
BP 2052
EP 2083
DI 10.1109/TSE.2019.2942921
PG 32
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WH1IX
UT WOS:000707441900002
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Muntean, P
   Monperrus, M
   Sun, H
   Grossklags, J
   Eckert, C
AF Muntean, Paul
   Monperrus, Martin
   Sun, Hao
   Grossklags, Jens
   Eckert, Claudia
TI IntRepair: Informed Repairing of Integer Overflows
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Maintenance engineering; Software; Tools; Fault detection; Runtime;
   Engines; Fuses; Program repair; source code refactoring; integer
   overflow; software fault; symbolic execution; static program analysis
AB Integer overflows have threatened software applications for decades. Thus, in this paper, we propose a novel technique to provide automatic repairs of integer overflows in C source code. Our technique, based on static symbolic execution, fuses detection, repair generation and validation. This technique is implemented in a prototype named IntRepair. We applied IntRepair to 2,052 C programs (approx. 1 million lines of code) contained in SAMATE's Juliet test suite and 50 synthesized programs that range up to 20 KLOC. Our experimental results show that IntRepair is able to effectively detect integer overflows and successfully repair them, while only increasing the source code (LOC) and binary (Kb) size by around 1 percent, respectively. Further, we present the results of a user study with 30 participants which shows that IntRepair repairs are more than 10x efficient as compared to manually generated code repairs.
C1 [Muntean, Paul; Grossklags, Jens; Eckert, Claudia] Tech Univ Munich, Dept Comp Sci, D-80333 Munich, Germany.
   [Monperrus, Martin] KTH Royal Inst Technol, Dept Comp Sci, S-11428 Stockholm, Sweden.
   [Sun, Hao] Nanjing Univ, Dept Comp Sci & Technol, State Key Lab Novel Software Technol, Nanjing 210008, Peoples R China.
C3 Technical University of Munich; Royal Institute of Technology; Nanjing
   University
RP Muntean, P (corresponding author), Tech Univ Munich, Dept Comp Sci, D-80333 Munich, Germany.
EM paul.muntean@sec.in.tum.de; martin.monperrus@csc.kth.se;
   shqking@gmail.com; jens.grossklags@in.tum.de;
   claudia.eckert@sec.in.tum.de
RI Monperrus, Martin/I-3640-2012
OI Monperrus, Martin/0000-0003-3505-3383
FU Wallenberg Artificial Intelligence, Autonomous Systems, and Software
   Program (WASP) - Knut and Alice Wallenberg Foundation; Swedish
   Foundation for Strategic Research (SSF)
FX This work was supported in part by the Wallenberg Artificial
   Intelligence, Autonomous Systems, and Software Program (WASP) funded by
   the Knut and Alice Wallenberg Foundation and the Swedish Foundation for
   Strategic Research (SSF). The authors are grateful to the anonymous
   reviewers for their insightful and constructive comments. Further, we
   want to especially thank Nenad Medvidovic and Victor A. Braberman for
   their constructive feedback throughout the reviewing process of this
   paper.
CR Avgerinos T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1083, DOI 10.1145/2568225.2568293
   Barrett C., 2010, P 8 INT WORKSHOP SAT, V13, P14
   Brumley David, 2007, NETWORK DISTRIBUTED
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Chen P, 2009, LECT NOTES COMPUT SC, V5927, P336, DOI 10.1007/978-3-642-11145-7_26
   Chen P, 2009, 2009 INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY (ARES), VOLS 1 AND 2, P208, DOI 10.1109/ARES.2009.77
   Cheng X, 2017, IEEE INT CONF AUTOM, P996, DOI 10.1109/ASE.2017.8115718
   Cheng X, 2016, P INT COMP SOFTW APP, P2, DOI 10.1109/COMPSAC.2016.70
   Chinchani R, 2004, LECT NOTES COMPUT SC, V3193, P385
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Coker Z, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P792, DOI 10.1109/ICSE.2013.6606625
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dietz W, 2012, PROC INT CONF SOFTW, P760, DOI 10.1109/ICSE.2012.6227142
   Eclipse, LANG TOOLK API AUT R
   Eclipse, ECL JFACE
   Eclipse, ECLIPSECDT
   Gamma Erich., 1994, DESIGN PATTERNS
   GCC, the GNU Compiler Collection
   Godefroid Patrice, 2008, Network and Distributed Systems Security
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Huang Z, 2019, P IEEE S SECUR PRIV, P539, DOI 10.1109/SP.2019.00071
   Ibing A, 2015, DES AUT TEST EUROPE, P241
   Ibing A, 2015, IEEE HI ASS SYS ENGR, P44, DOI 10.1109/HASE.2015.16
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   Laskavaia A., 2011, ECLIPSECON
   Long F, 2014, ACM SIGPLAN NOTICES, V49, P439, DOI 10.1145/2535838.2535888
   M. Corporation, INT OV WRAP
   Marinescu PD, 2012, PROC INT CONF SOFTW, P716, DOI 10.1109/ICSE.2012.6227146
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Microsoft, PREFAST AN TOOL
   Mitre, NUM TRUNC ERR
   Mitre, OFF BY ON ERR
   Mitre, SIGN UNS CONV ERR
   Mitre, INT COERC ERR
   Mitre, UN SIGN EXT
   Mitre, IO2BO INT OV BUFF OV
   Mitre, UNS SIGN CONV ERR
   Mitre, INT UND WRAP WRAP
   Molnar David, 2009, P 18 C USENIX SEC S, V9, P67
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Moy Y., 2009, MSRTR200957
   Muntean P., 2018, P EUR S RES COMP SEC
   Muntean P, 2018, LECT NOTES COMPUT SC, V11050, P423, DOI 10.1007/978-3-030-00470-5_20
   Muntean P, 2015, INFO SECUR S AFR
   Muntean P, 2015, LECT NOTES COMPUT SC, V9337, P441, DOI 10.1007/978-3-319-24255-2_32
   Pereira F, 2013, INT WORKSHOP PATTERN, P1, DOI 10.1109/PRNI.2013.10
   Pomonis Marios., 2014, Proceedings of the 30th Annual Computer Security Applications Conference, P416
   Sidiroglou-Douskos S., 2015, MITCSAILTR2015018
   Sidiroglou-Douskos S., 2014, MITCSAILTR2014024
   Sidiroglou-Douskos S, 2015, ACM SIGPLAN NOTICES, V50, P473, DOI [10.1145/10.1145/2694344.2694389, 10.1145/2775054.2694389]
   Sun H, 2016, PROC INT CONF SOFTW, P1051, DOI 10.1145/2884781.2884820
   Torres CF, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P664, DOI 10.1145/3274694.3274737
   U.S. National Institute of Standards and Technology (NIST), JUL TEST SUIT V1 2 C
   Wang TL, 2014, LECT NOTES COMPUT SC, V8550, P255
   Wang Tielei, 2009, NDSS
   Wojtczuk R., 2005, CHAOS COMM C 22C3
   Yang Zhang, 2015, Research in Attacks, Intrusions and Defenses. 18th International Symposium, RAID 2015. Proceedings: LNCS 9404, P247, DOI 10.1007/978-3-319-26362-5_12
   Zhang B, 2016, 2016 17TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P385, DOI 10.1109/SNPD.2016.7515929
   Zhang C, 2010, LECT NOTES COMPUT SC, V6345, P71, DOI 10.1007/978-3-642-15497-3_5
NR 61
TC 12
Z9 14
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2021
VL 47
IS 10
BP 2225
EP 2241
DI 10.1109/TSE.2019.2946148
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WH1IX
UT WOS:000707441900011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ghaleb, TA
   da Costa, DA
   Zou, Y
   Hassan, AE
AF Ghaleb, Taher Ahmed
   da Costa, Daniel Alencar
   Zou, Ying
   Hassan, Ahmed E.
TI Studying the Impact of Noises in Build Breakage Data
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Noise measurement; Data models; Software; Environmental factors;
   Servers; Indexes; Continuous integration; CI build breakages; noisy
   data; mining software repositories; empirical software engineering
ID CONTINUOUS INTEGRATION
AB Much research has investigated the common reasons for build breakages. However, prior research has paid little attention to builds that may break due to reasons that are unlikely to be related to development activities. For example, Continuous Integration (CI) builds may break due to timeout or connection errors while generating the build. Such kinds of build breakages potentially introduce noises to build breakage data. Not considering such noises may lead to misleading results when studying CI builds. In this paper, we propose three criteria to identify build breakages that can potentially introduce noises to build breakage data. We apply these criteria to a dataset of 350,246 builds from 153 GitHub projects that are linked with Travis CI. Our results reveal that 33 percent of the build breakages are due to environmental factors (e.g., errors in CI servers), 29 percent are due to (unfixed) errors in previous builds, and 9 percent are due to build jobs that were later deemed by developers as noisy (there is an overlap of 17 percent between these three types of breakages). We measure the impact of noises in build breakage data on modeling build breakages. We observe that models that use uncleaned build breakage data can lead to misleading associations between build breakages and development activities (e.g., the role of developer). However, such associations could not be observed after eliminating noisy build breakages. Moreover, we replicate a prior study that investigates the association between build breakages and development activities using data from 14 GitHub projects. We observe that some observations reported by the prior study (e.g., pull requests cause more breakages) do not hold after eliminating the noises from build breakage data.
C1 [Ghaleb, Taher Ahmed] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
   [da Costa, Daniel Alencar] Univ Otago, Dept Informat Sci, Dunedin 9016, New Zealand.
   [Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON K7L 3N6, Canada.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
C3 Queens University - Canada; University of Otago; Queens University -
   Canada; Queens University - Canada
RP Ghaleb, TA (corresponding author), Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
EM taher.ghaleb@queensu.ca; danielcalencar@otago.ac.nz;
   ying.zou@queensu.ca; ahmed@cs.queensu.ca
RI Zou, Ying/KLC-9380-2024; Ghaleb, Taher A/I-9457-2018; KHALIFA, AHMED
   khalifa/HKF-2246-2023
OI Ghaleb, Taher A/0000-0001-9336-7298; KHALIFA, AHMED
   khalifa/0000-0002-2918-7572
CR [Anonymous], 2008, Guide to Advanced Empirical Software Engineering
   [Anonymous], 2019, Studying the Impact of Noises in Build Breakage Data, DOI 10.5281/zenodo.3401555
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Beller M, 2017, IEEE WORK CONF MIN S, P447, DOI 10.1109/MSR.2017.24
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   DELONG ER, 1988, BIOMETRICS, V44, P837, DOI 10.2307/2531595
   Domingos P, 2012, COMMUN ACM, V55, P78, DOI 10.1145/2347736.2347755
   Drummond D.C., 2009, Proceedings of the Evaluation Methods for Machine Learning Workshop 26th International Conference for Machine Learning, P1
   Faraway JulianJ., 2016, EXTENDING LINEAR MOD, V124
   Fereday J., 2006, INT J QUAL METH, V5, P80, DOI [10.1177/160940690600500107, DOI 10.1177/160940690600500107]
   Fowler M., 2006, Continuous integration
   Fowler M., 2011, CONTINUOUS INTEGRATI
   Gallaba K, 2018, IEEE INT CONF AUTOM, P87, DOI 10.1145/3238147.3238171
   Ghaleb TA, 2019, EMPIR SOFTW ENG, V24, P2102, DOI 10.1007/s10664-019-09695-9
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Hassan AE, 2006, IEEE INT CONF AUTOM, P189
   Hassan F, 2017, INT SYMP EMP SOFTWAR, P157, DOI 10.1109/ESEM.2017.23
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hilton M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P197, DOI 10.1145/3106237.3106270
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Howison J., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P7, DOI 10.1049/ic:20040467
   Ivie P, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3186266
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kerzazi N, 2014, PROC IEEE INT CONF S, P41, DOI 10.1109/ICSME.2014.26
   Kwan I, 2011, IEEE T SOFTWARE ENG, V37, P307, DOI 10.1109/TSE.2011.29
   Lacoste FJ, 2009, AGILE 2009 CONFERENCE, P387, DOI 10.1109/AGILE.2009.35
   Lewis A. J., 2009, MIXED EFFECTS MODELS
   Liebchen G. A., 2008, P 4 INT WORKSH PRED, P39, DOI [10.1145/1370788.1370799, DOI 10.1145/1370788.1370799]
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Luo Y, 2017, 2017 14TH WEB INFORMATION SYSTEMS AND APPLICATIONS CONFERENCE (WISA 2017), P139, DOI 10.1109/WISA.2017.17
   Memon A, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P233, DOI 10.1109/ICSE-SEIP.2017.16
   Nguyen T. H. D., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P259, DOI 10.1109/WCRE.2010.37
   Ni AS, 2017, IEEE WORK CONF MIN S, P455, DOI 10.1109/MSR.2017.26
   Peduzzi P, 1996, J CLIN EPIDEMIOL, V49, P1373, DOI 10.1016/S0895-4356(96)00236-3
   Pinheiro P., 2010, Linear and nonlinear mixed effects models. R package version 3.1-97
   Rausch T, 2017, IEEE WORK CONF MIN S, P345, DOI 10.1109/MSR.2017.54
   Robles Gregorio, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P171, DOI 10.1109/MSR.2010.5463348
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Sarle W. S., 1990, SAS STAT US GUID VAR
   Seo H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P724, DOI 10.1145/2568225.2568255
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Steyerberg EW, 2001, J CLIN EPIDEMIOL, V54, P774, DOI 10.1016/S0895-4356(01)00341-9
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   van der Storm T, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P233
   Vasilescu B, 2014, PROC IEEE INT CONF S, P401, DOI 10.1109/ICSME.2014.62
   Vassallo C, 2018, INT C PROGRAM COMPRE, P41, DOI 10.1145/3196321.3196350
   Vassallo C, 2017, PROC IEEE INT CONF S, P183, DOI 10.1109/ICSME.2017.67
   Wolf T, 2009, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2009.5070503
   Xia J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P311, DOI 10.1109/QRS-C.2017.59
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
   Ziftci C, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P113, DOI 10.1109/ICSE-SEIP.2017.13
   Zoltagharinia M, 2017, IEEE WORK CONF MIN S, P312, DOI 10.1109/MSR.2017.7
NR 57
TC 10
Z9 11
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2021
VL 47
IS 9
BP 1998
EP 2011
DI 10.1109/TSE.2019.2941880
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UR3QY
UT WOS:000696667700014
DA 2024-07-18
ER

PT J
AU Aquino, A
   Denaro, G
   Pezzè, M
AF Aquino, Andrea
   Denaro, Giovanni
   Pezze, Mauro
TI Reusing Solutions Modulo Theories
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Scalability; Software engineering; Prototypes; Terminology; Model
   checking; Indexes; Symbolic program analysis; symbolic execution; SMT
   solver; solution reuse
AB In this paper we propose an approach for reusing formula solutions to reduce the impact of Satisfiability Modulo Theories (SMT) solvers on the scalability of symbolic program analysis. SMT solvers can efficiently handle huge expressions in relevant logic theories, but they still represent a main bottleneck to the scalability of symbolic analyses, like symbolic execution and symbolic model checking. Reusing proofs of formulas solved during former analysis sessions can reduce the amount of invocations of SMT solvers, thus mitigating the impact of SMT solvers on symbolic program analysis. Early approaches to reuse formula solutions exploit equivalence and inclusion relations among structurally similar formulas, and are strongly tighten to the specific target logics. In this paper, we present an original approach that reuses both satisfiability and unsatisfiability proofs shared among many formulas beyond only equivalent or related-by-implication formulas. Our approach straightforwardly generalises across multiple logics. It is based on the original concept of distance between formulas, which heuristically approximates the likelihood of formulas to share either satisfiability or unsatisfiability proofs. We show the efficiency and the generalisability of our approach, by instantiating the underlying distance function for formulas that belong to most popular logic theories handled by current SMT solvers, and confirm the effectiveness of the approach, by reporting experimental results on over nine millions formulas from five logic theories.
C1 [Aquino, Andrea; Pezze, Mauro] Univ Svizzera Italiana USI, CH-6900 Lugano, Switzerland.
   [Denaro, Giovanni; Pezze, Mauro] Univ Milano Bicocca, Software Engn, I-20126 Milan, Italy.
C3 Universita della Svizzera Italiana; University of Milano-Bicocca
RP Denaro, G (corresponding author), Univ Milano Bicocca, Software Engn, I-20126 Milan, Italy.
EM andrea.aquino@usi.ch; giovanni.denaro@unimib.it; mauro.pezze@unimib.it
OI DENARO, GIOVANNI/0000-0002-7566-8051; PEZZE, MAURO/0000-0001-5193-7379
FU Swiss SNF project CloSE [200021_149997/1]; Italian MIUR PRIN project
   GAUSS [2015KWREMX]; Swiss National Science Foundation (SNF)
   [200021_149997] Funding Source: Swiss National Science Foundation (SNF)
FX This work is partially supported by the Swiss SNF project CloSE
   (200021_149997/1) and by the Italian MIUR PRIN project GAUSS (Contract
   2015KWREMX).
CR [Anonymous], 1966, SOVIET PHYS DOKLADY
   Aquino A, JULIA
   Aquino A, 2017, PROC INT CONF SOFTW, P427, DOI 10.1109/ICSE.2017.46
   Aquino Andrea., 2015, Proceedings of the 2015 International Symposium on Software Testing and Analysis, P305
   BLOOM BH, 1970, COMMUN ACM, V13, P422, DOI 10.1145/362686.362692
   Bounimova E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P122, DOI 10.1109/ICSE.2013.6606558
   Braione P, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P90, DOI 10.1145/3092703.3092715
   Braione P, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P602, DOI 10.1145/2786805.2786842
   Brummayer R, 2009, LECT NOTES COMPUT SC, V5505, P174, DOI 10.1007/978-3-642-00768-2_16
   Bruttomesso R, 2010, LECT NOTES COMPUT SC, V6015, P150, DOI 10.1007/978-3-642-12002-2_12
   Burnim Jacob, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P443, DOI 10.1109/ASE.2008.69
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Chen M, 2018, THESIS USI
   Cimatti A, 2013, LECT NOTES COMPUT SC, V7795, P93
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   De Moura L, 2011, COMMUN ACM, V54, P69, DOI 10.1145/1995376.1995394
   Dutertre B, 2014, LECT NOTES COMPUT SC, V8559, P737, DOI 10.1007/978-3-319-08867-9_49
   Erete I., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P310, DOI 10.1109/ICSTW.2011.98
   Jha S, 2009, LECT NOTES COMPUT SC, V5643, P668, DOI 10.1007/978-3-642-02658-4_53
   Jia Xiangyang, 2015, P 2015 INT S SOFTWAR, P177
   Knuth D.E., 2011, The Art of Computer Programming: Seminumerical Algorithms, V1st
   Liang TY, 2014, LECT NOTES COMPUT SC, V8559, P646, DOI 10.1007/978-3-319-08867-9_43
   Mariani L, 2017, IEEE T SOFTWARE ENG, V43, P715, DOI 10.1109/TSE.2016.2623623
   Palikareva Hristina, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P53, DOI 10.1007/978-3-642-39799-8_3
   Papalini M, 2016, PROCEEDINGS OF THE 2016 SYMPOSIUM ON ARCHITECTURES FOR NETWORKING AND COMMUNICATIONS SYSTEMS (ANCS'16), P43, DOI 10.1145/2881025.2881032
   Perry DM, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P68, DOI 10.1145/3092703.3092728
   Ramakrishna M. V., 1997, Database Systems for Advanced Applications '97. Proceedings of the Fifth International Conference, P215, DOI 10.1142/9789812819536_0023
   Saxena P, 2010, P IEEE S SECUR PRIV, P513, DOI 10.1109/SP.2010.38
   Tianhai Liu, 2014, Hardware and Software: Verification and Testing. 10th International Haifa Verification Conference, HVC 2014. Proceedings: LNCS 8855, P284, DOI 10.1007/978-3-319-13338-6_21
   Visser W, 2012, P FSE, P58, DOI DOI 10.1145/2393596.2393665
   Wu Sun., 1992, Usenix Winter 1992, P153
   Zheng YH, 2017, FORM METHOD SYST DES, V50, P249, DOI 10.1007/s10703-016-0263-6
NR 33
TC 2
Z9 2
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2021
VL 47
IS 5
BP 948
EP 968
DI 10.1109/TSE.2019.2898199
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SC1RN
UT WOS:000650457700006
OA Bronze
DA 2024-07-18
ER

PT J
AU Elazhary, O
   Werner, C
   Li, ZS
   Lowlind, D
   Ernst, NA
   Storey, MA
AF Elazhary, Omar
   Werner, Colin
   Li, Ze Shi
   Lowlind, Derek
   Ernst, Neil A.
   Storey, Margaret-Anne
TI Uncovering the Benefits and Challenges of Continuous Integration
   Practices
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tools; Software; Companies; Built-in self-test; Software quality;
   Complexity theory; Computer bugs; Software engineering; automation;
   continuous integration; continuous software development
ID DELIVERY
AB In 2006, Fowler and Foemmel defined ten core Continuous Integration (CI) practices that could increase the speed of software development feedback cycles and improve software quality. Since then, these practices have been widely adopted by industry and subsequent research has shown they improve software quality. However, there is poor understanding of how organizations implement these practices, of the benefits developers perceive they bring, and of the challenges developers and organizations experience in implementing them. In this article, we discuss a multiple-case study of three small- to medium-sized companies using the recommended suite of ten CI practices. Using interviews and activity log mining, we learned that these practices are broadly implemented but how they are implemented varies depending on their perceived benefits, the context of the project, and the CI tools used by the organization. We also discovered that CI practices can create new constraints on the software process that hurt feedback cycle time. For researchers, we show that how CI is implemented varies, and thus studying CI (for example, using data mining) requires understanding these differences as important context for research studies. For practitioners, our findings reveal in-depth insights on the possible benefits and challenges from using the ten practices, and how project context matters.
C1 [Elazhary, Omar; Werner, Colin; Li, Ze Shi; Lowlind, Derek; Ernst, Neil A.; Storey, Margaret-Anne] Univ Victoria, Comp Sci, Victoria, BC V8P 5C2, Canada.
C3 University of Victoria
RP Elazhary, O (corresponding author), Univ Victoria, Comp Sci, Victoria, BC V8P 5C2, Canada.
EM omazhary@uvic.ca; colinwerner@uvic.ca; zanelib1@gmail.com;
   dereklowlind@uvic.ca; nernst@uvic.ca; mstorey@uvic.ca
RI Ernst, Neil/M-3065-2017
OI Ernst, Neil/0000-0001-5992-2366; Werner, Colin/0000-0002-4541-7796;
   Lowlind, Derek/0000-0002-0307-9020
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX We acknowledge the support of the Natural Sciences and Engineering
   Research Council of Canada (NSERC). We would also like to thank
   Cassandra Petrachenko for her valuable help with this study.
CR Berg S., 2019, 4 BIG WAYS BP MEASUR
   Bugayenko Y., 2014, CONTINUOUS INTEGRATI
   Costello K., 2019, Gartner forecasts worldwide public cloud revenue to grow 17.3 percent in 2019
   Duvall P. M., 2011, CONTINUOUS DELIVERY
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Forsgren N., 2019, 48455 DORA GOOGL CLO
   Fowler M., 2006, Continuous integration
   Gallaba K, 2019, PROC IEEE INT CONF S, P619, DOI 10.1109/ICSME.2019.00099
   Gallaba K, 2020, IEEE T SOFTWARE ENG, V46, P33, DOI 10.1109/TSE.2018.2838131
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Guerriero M, 2019, PROC IEEE INT CONF S, P580, DOI 10.1109/ICSME.2019.00092
   Heikkilä VT, 2017, EMPIR SOFTW ENG, V22, P2892, DOI 10.1007/s10664-016-9491-z
   Heller M., 2015, CONTINUOUS INTEGRATI
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Hukkanen L., 2015, ADOPTING CONTINUOUS
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Islam MR, 2017, IEEE WORK CONF MIN S, P467, DOI 10.1109/MSR.2017.30
   Jaspan C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P225, DOI 10.1145/3183519.3183550
   Kikas R, 2017, IEEE WORK CONF MIN S, P102, DOI 10.1109/MSR.2017.55
   Laukkanen E, 2017, INFORM SOFTWARE TECH, V82, P55, DOI 10.1016/j.infsof.2016.10.001
   Mårtensson T, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P1, DOI 10.1109/SEAA.2017.30
   Rahman A, 2018, PROCEEDINGS OF THE 4TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN'18), P8, DOI 10.1145/3278142.3278149
   Rahman MT, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P201, DOI [10.1145/2901739.2901745, 10.1109/MSR.2016.029]
   Roller M.R., 2015, APPL QUALITATIVE RES
   Rossi C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P12, DOI 10.1145/2950290.2994157
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Ståhl D, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P81, DOI 10.1109/ICSE-SEIP.2019.00017
   Stahl Daniel, 2013, P 2013 12 IASTED INT, P736
   Storey MA, 2020, EMPIR SOFTW ENG, V25, P4097, DOI 10.1007/s10664-020-09858-z
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Yin R.K., 1984, CASE STUDY RES
   Zampetti F, 2020, EMPIR SOFTW ENG, V25, P1095, DOI 10.1007/s10664-019-09785-8
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
NR 34
TC 16
Z9 17
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 9
PY 2021
VL 48
IS 7
BP 2570
EP 2583
DI 10.1109/TSE.2021.3064953
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5ZK
UT WOS:000825974600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Murphy-Hill, E
   Dicker, J
   Hodges, MM
   Egelman, CD
   Jaspan, C
   Cheng, L
   Kammer, E
   Holtz, B
   Jorde, MA
   Dolan, AK
   Green, C
AF Murphy-Hill, Emerson
   Dicker, Jillian
   Hodges, Margaret Morrow
   Egelman, Carolyn D.
   Jaspan, Ciera
   Cheng, Lan
   Kammer, Elizabeth
   Holtz, Ben
   Jorde, Matthew A.
   Dolan, Andrea Knight
   Green, Collin
TI Engineering Impacts of Anonymous Author Code Review: A Field Experiment
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Internet; Browsers; Tools; Software development management; Software;
   Particle measurements; Licenses; Code review; unbiasing
ID DOUBLE-BLIND; SINGLE-BLIND; QUALITY; BIAS
AB Code review is a powerful technique to ensure high quality software and spread knowledge of best coding practices between engineers. Unfortunately, code reviewers may have biases about authors of the code they are reviewing, which can lead to inequitable experiences and outcomes. In principle, anonymous author code review can reduce the impact of such biases by withholding an author's identity from a reviewer. In this paper, to understand the engineering effects of using author anonymous code review in a practical setting, we applied the technique to 5217 code reviews performed by 300 software engineers at Google. Our results suggest that during anonymous author code review, reviewers can frequently guess authors' identities; that focus is reduced on reviewer-author power dynamics; and that the practice poses a barrier to offline, high-bandwidth conversations. Based on our findings, we recommend that those who choose to implement anonymous author code review should reveal the time zone of the author by default, have a break-the-glass option for revealing author identity, and reveal author identity directly after the review.
C1 [Murphy-Hill, Emerson; Dicker, Jillian; Hodges, Margaret Morrow; Egelman, Carolyn D.; Jaspan, Ciera; Cheng, Lan; Kammer, Elizabeth; Holtz, Ben; Jorde, Matthew A.; Dolan, Andrea Knight; Green, Collin] Google Inc, Core Syst, Mountain View, CA 94043 USA.
C3 Google Incorporated
RP Murphy-Hill, E (corresponding author), Google Inc, Core Syst, Mountain View, CA 94043 USA.
EM emersonm@google.com; jdicker@google.com; hodgesm@google.com;
   cegelman@google.com; ciera@google.com; lancheng@google.com;
   eakammer@google.com; benholtz@google.com; majorde@google.com;
   aknight@google.com; colling@google.com
OI Egelman, Carolyn/0000-0003-3352-2203
CR ADAIR JG, 1984, J APPL PSYCHOL, V69, P334, DOI 10.1037/0021-9010.69.2.334
   Alam M, 2011, BRIT J DERMATOL, V165, P563, DOI 10.1111/j.1365-2133.2011.10432.x
   [Anonymous], 2013, DISABILITY STUDIES Q
   Åslund O, 2012, ILR REV, V65, P82, DOI 10.1177/001979391206500105
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Bavota G, 2015, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSM.2015.7332454
   Baysal O, 2013, WORK CONF REVERSE EN, P122, DOI 10.1109/WCRE.2013.6671287
   BLANK RM, 1991, AM ECON REV, V81, P1041
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   Budden AE, 2008, TRENDS ECOL EVOL, V23, P4, DOI 10.1016/j.tree.2007.07.008
   CECI SJ, 1984, AM PSYCHOL, V39, P1491, DOI 10.1037/0003-066X.39.12.1491
   Davison HK, 2000, J VOCAT BEHAV, V56, P225, DOI 10.1006/jvbe.1999.1711
   Egelman CD, 2020, PROC INT CONF SOFTW, P174, DOI 10.1145/3377811.3380414
   FISHER M, 1994, JAMA-J AM MED ASSOC, V272, P143, DOI 10.1001/jama.272.2.143
   German DM, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P523, DOI 10.1145/3180155.3180217
   Goldin C, 2000, AM ECON REV, V90, P715, DOI 10.1257/aer.90.4.715
   Gordon RA, 2004, J APPL SOC PSYCHOL, V34, P468, DOI 10.1111/j.1559-1816.2004.tb02557.x
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   GREENHAUS JH, 1990, ACAD MANAGE J, V33, P64, DOI 10.5465/256352
   Hosoda M, 2003, PERS PSYCHOL, V56, P431, DOI 10.1111/j.1744-6570.2003.tb00157.x
   Humphries E, 2017, WEB EXTENSION DEBIAS
   Jaspan C, 2020, IEEE SOFTWARE, V37, P44, DOI 10.1109/MS.2020.3014573
   Justice AC, 1998, JAMA-J AM MED ASSOC, V280, P240, DOI 10.1001/jama.280.3.240
   Kim JY, 2018, J PERS SOC PSYCHOL, V115, P974, DOI 10.1037/pspa0000129
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Largent E.A., 2016, BLINDING SOLUTION BI, P75, DOI 10.1016/B978-0-12-802460-7.00005-X
   Le Goues C, 2018, COMMUN ACM, V61, P30, DOI 10.1145/3208157
   Marti D, 2017, BLIND CODE REV EXPT
   McFadden D., 1974, Frontiers in econometrics, DOI DOI 10.1108/EB028592
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   McKinley KS, 2008, ACM SIGPLAN NOTICES, V43, P5, DOI 10.1145/1416216.1416218
   MCNUTT RA, 1990, JAMA-J AM MED ASSOC, V263, P1371, DOI 10.1001/jama.263.10.1371
   Nelson A, 2018, GOOGLE STRUCTURAL SE
   Okike K, 2016, JAMA-J AM MED ASSOC, V316, P1315, DOI 10.1001/jama.2016.11014
   Ratcliffe J., 2009, P PAC NW SOFTW QUAL, P171
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Seetharaman D, 2017, FACEBOOKS FEMALE ENG
   Shah H., 2012, P 4 INT C INT COLL, P77
   Terrell J, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.111
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Thongtanunam P, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P168, DOI 10.1109/MSR.2015.23
   Tomkins A, 2017, P NATL ACAD SCI USA, V114, P12708, DOI 10.1073/pnas.1707323114
   van Rooyen S, 1998, JAMA-J AM MED ASSOC, V280, P234, DOI 10.1001/jama.280.3.234
   Ware Mark, 2008, Information Services & Use, V28, P109, DOI 10.3233/ISU-2008-0568
   Wells JD, 2010, DECISION SCI, V41, P813, DOI 10.1111/j.1540-5915.2010.00292.x
   Wong J. C, 2017, FACEBOOK LEAKING INF
NR 47
TC 0
Z9 0
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 23
PY 2021
VL 48
IS 7
BP 2495
EP 2509
DI 10.1109/TSE.2021.3061527
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5YZ
UT WOS:000825973500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Tantithamthavorn, C
   Hassan, AE
   Matsumoto, K
AF Tantithamthavorn, Chakkrit
   Hassan, Ahmed E.
   Matsumoto, Kenichi
TI The Impact of Class Rebalancing Techniques on the Performance and
   Interpretation of Defect Prediction Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Predictive models; Training; Analytical models; Guidelines; Context
   modeling; Open source software; Software quality assurance; software
   defect prediction; class rebalancing techniques; experimental design;
   empirical investigation
ID PROGNOSTIC MODELS; SOFTWARE; FRAMEWORK; FAULTS
AB Defect models that are trained on class imbalanced datasets (i.e., the proportion of defective and clean modules is not equally represented) are highly susceptible to produce inaccurate prediction models. Prior research compares the impact of class rebalancing techniques on the performance of defect models but arrives at contradictory conclusions due to the use of different choice of datasets, classification techniques, and performance measures. Such contradictory conclusions make it hard to derive practical guidelines for whether class rebalancing techniques should be applied in the context of defect models. In this paper, we investigate the impact of class rebalancing techniques on the performance measures and interpretation of defect models. We also investigate the experimental settings in which class rebalancing techniques are beneficial for defect models. Through a case study of 101 datasets that span across proprietary and open-source systems, we conclude that the impact of class rebalancing techniques on the performance of defect prediction models depends on the used performance measure and the used classification techniques. We observe that the optimized SMOTE technique and the under-sampling technique are beneficial when quality assurance teams wish to increase AUC and Recall, respectively, but they should be avoided when deriving knowledge and understandings from defect models.
C1 [Tantithamthavorn, Chakkrit] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
   [Matsumoto, Kenichi] Nara Inst Sci & Technol, Grad Sch Informat Sci, Ikoma 6300192, Japan.
C3 Monash University; Queens University - Canada; Nara Institute of Science
   & Technology
RP Tantithamthavorn, C (corresponding author), Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
EM chakkrit.tantithamthavorn@monash.edu; ahmed@cs.queensu.ca;
   matumoto@is.naist.jp
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; MATSUMOTO,
   KENICHI/0000-0002-7418-9323; Tantithamthavorn,
   Chakkrit/0000-0002-5516-9984
FU Australian Government through the Australian Research Council's
   Discovery Early Career Researcher Award (DECRA) funding scheme
   [DE200100941]; Natural Sciences and Engineering Research Council of
   Canada (NSERC);  [16J03360]
FX This work was supported by the Grant-in-Aid for JSPS Fellows (No.
   16J03360), and the Natural Sciences and Engineering Research Council of
   Canada (NSERC). The work of C. Tantithamthavorn was supported in part by
   the Australian Government through the Australian Research Council's
   Discovery Early Career Researcher Award (DECRA) funding scheme
   (DE200100941).
CR Agrawal Amritanshu, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE). Proceedings, P1050, DOI 10.1145/3180155.3180197
   Akiyama F., 1972, Information Processing 71 Proceedings of the IFIP Congress 1971 Volume 1, P353
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2012, THESIS
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Bennett K., 2018, Encyclopedia of personality and individual differences, P1, DOI [10.1007/978-3-319-28099-81627-1, DOI 10.1007/978-3-319-28099-81627-1]
   Benni KE, 2018, IEEE T SOFTWARE ENG, V44, P534, DOI 10.1109/TSE.2017.2731766
   Bettenburg N, 2013, EMPIR SOFTW ENG, V18, P375, DOI 10.1007/s10664-012-9205-0
   Blagus R, 2013, BMC BIOINFORMATICS, V14, DOI 10.1186/1471-2105-14-106
   Blagus R, 2010, BMC BIOINFORMATICS, V11, DOI 10.1186/1471-2105-11-523
   Brier G. W., 1950, MON WEATHER REV, V78, P1, DOI 10.1175/1520-0493(1950)078andlt;0001:VOFEITandgt;2.0.CO;2
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   Chawla N.V., 2003, P ICML, V3, P66
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Cohen J., 1988, STAT POWER ANAL BEHA
   COX DR, 1958, BIOMETRIKA, V45, P562, DOI 10.2307/2333203
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   den Boer S, 2005, CRIT CARE, V9, pR458, DOI 10.1186/cc3765
   EFRON B, 1983, J AM STAT ASSOC, V78, P316, DOI 10.2307/2288636
   Efron B., 1993, INTRO BOOTSTRAP, DOI 10.1007/978-1-4899-4541-9
   Friedman J, 2010, J STAT SOFTW, V33, P1, DOI 10.18637/jss.v033.i01
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Harrell F.E., 2002, Regression modeling strategies
   Harrell FE, 1996, STAT MED, V15, P361, DOI 10.1002/(SICI)1097-0258(19960229)15:4<361::AID-SIM168>3.0.CO;2-4
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hastie T., 2017, GLMNET LASSO ELASTIC
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Huang J, 2005, IEEE T KNOWL DATA EN, V17, P299, DOI 10.1109/TKDE.2005.50
   Ioannidis JPA, 2009, NAT GENET, V41, P149, DOI 10.1038/ng.295
   Jiarpakdee J., 2018, IEEE T SOFTW ENG
   Jiarpakdee J, 2018, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSME.2018.00018
   Jiarpakdee J, 2016, IEEE INT SYMP SOFTW, P51, DOI 10.1109/ISSREW.2016.30
   Kamei Yasutaka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P196
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kazdin AE, 1999, J CONSULT CLIN PSYCH, V67, P332, DOI 10.1037/0022-006X.67.3.332
   Khoshgoftaar TM, 2010, PROC INT C TOOLS ART, DOI 10.1109/ICTAI.2010.27
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lunardon N, 2014, R J, V6, P79
   Mahmoodzadeh Zahra, 2015, 2015 IEEE Power & Energy Society General Meeting, P1, DOI 10.1109/PESGM.2015.7286219
   Malhotra R, 2017, EMPIR SOFTW ENG, V22, P2806, DOI 10.1007/s10664-016-9488-7
   Menardi G, 2014, DATA MIN KNOWL DISC, V28, P92, DOI 10.1007/s10618-012-0295-5
   Menzies T., 2015, The promise repository of empirical software engineering data
   MILLER ME, 1991, STAT MED, V10, P1213, DOI 10.1002/sim.4780100805
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Mockus A, 2010, Proc. of the 18th Symposium on the Foundations of Software Engineering (FSE), P117
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Nam Jaechang., 2014, SURVEY SOFTWARE DEFE
   Nemenyi P. B., 1963, doctoral dissertation
   Pelayo L, 2007, NAFIPS 2007 - 2007 ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY, P69, DOI 10.1109/NAFIPS.2007.383813
   Rahman F, 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, ESEC/FSE '11, P322, DOI DOI 10.1145/2025113
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Riquelme J., 2008, Actas de los Talleres de las Jornadas de Ingenieria del Software y Bases de Datos, V2, P67
   Robles Gregorio, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P171, DOI 10.1109/MSR.2010.5463348
   Rufibach K, 2010, J CLIN EPIDEMIOL, V63, P938, DOI 10.1016/j.jclinepi.2009.11.009
   Sarle WS, 1990, SAS STAT USERS GUIDE
   Seiffert C, 2014, INFORM SCIENCES, V259, P571, DOI 10.1016/j.ins.2010.12.016
   Seiffert C, 2010, IEEE T SYST MAN CY A, V40, P185, DOI 10.1109/TSMCA.2009.2029559
   Seiffert C, 2009, IEEE T SYST MAN CY A, V39, P1283, DOI 10.1109/TSMCA.2009.2027131
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shihab E., 2011, Proceedings of the ACM SIGSOFT symposium and the European Conference on Foundations of Software Engineering, P300
   Steyerberg E., 2009, CLIN PREDICTION MODE, V19
   Steyerberg EW, 2000, STAT MED, V19, P1059, DOI 10.1002/(SICI)1097-0258(20000430)19:8<1059::AID-SIM412>3.3.CO;2-S
   Steyerberg EW, 2010, EPIDEMIOLOGY, V21, P128, DOI 10.1097/EDE.0b013e3181c30fb2
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C., 2017, SCOTTKNOTTESD SCOTT
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P867, DOI 10.1145/2889160.2889256
   Tantithamthavorn C, 2016, IEEE T SOFTWARE ENG, V42, P1092, DOI 10.1109/TSE.2016.2553030
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Torgo L., 2013, DMwR: Functions and data for data mining with R. R package version 0.4, 1
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Xia X, 2015, INFORM SOFTWARE TECH, V61, P93, DOI 10.1016/j.infsof.2014.12.006
   Yang XL, 2017, J COMPUT SCI TECH-CH, V32, P181, DOI 10.1007/s11390-017-1713-3
   Yang XL, 2016, P INT COMP SOFTW APP, P227, DOI 10.1109/COMPSAC.2016.67
NR 91
TC 165
Z9 182
U1 3
U2 30
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2020
VL 46
IS 11
BP 1200
EP 1219
DI 10.1109/TSE.2018.2876537
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OR0UE
UT WOS:000589192400003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yuan, Y
   Banzhaf, W
AF Yuan, Yuan
   Banzhaf, Wolfgang
TI ARJA: Automated Repair of Java Programs via Multi-Objective Genetic
   Programming
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Maintenance engineering; Computer bugs; Java; Genetic programming;
   Search problems; Sociology; Statistics; Program repair; patch
   generation; genetic programming; multi-objective optimization; genetic
   improvement
ID SOFTWARE; IMPROVEMENT; ALGORITHM
AB Automated program repair is the problem of automatically fixing bugs in programs in order to significantly reduce the debugging costs and improve the software quality. To address this problem, test-suite based repair techniques regard a given test suite as an oracle and modify the input buggy program to make the entire test suite pass. GenProg is well recognized as a prominent repair approach of this kind, which uses genetic programming (GP) to rearrange the statements already extant in the buggy program. However, recent empirical studies show that the performance of GenProg is not fully satisfactory, particularly for Java. In this paper, we propose ARJA, a new GP based repair approach for automated repair of Java programs. To be specific, we present a novel lower-granularity patch representation that properly decouples the search subspaces of likely-buggy locations, operation types and potential fix ingredients, enabling GP to explore the search space more effectively. Based on this new representation, we formulate automated program repair as a multi-objective search problem and use NSGA-II to look for simpler repairs. To reduce the computational effort and search space, we introduce a test filtering procedure that can speed up the fitness evaluation of GP and three types of rules that can be applied to avoid unnecessary manipulations of the code. Moreover, we also propose a type matching strategy that can create new potential fix ingredients by exploiting the syntactic patterns of existing statements. We conduct a large-scale empirical evaluation of ARJA along with its variants on both seeded bugs and real-world bugs in comparison with several state-of-the-art repair approaches. Our results verify the effectiveness and efficiency of the search mechanisms employed in ARJA and also show its superiority over the other approaches. In particular, compared to jGenProg (an implementation of GenProg for Java), an ARJA version fully following the redundancy assumption can generate a test-suite adequate patch for more than twice the number of bugs (from 27 to 59), and a correct patch for nearly four times of the number (from 5 to 18), on 224 real-world bugs considered in Defects4J. Furthermore, ARJA is able to correctly fix several real multi-location bugs that are hard to be repaired by most of the existing repair approaches.
C1 [Yuan, Yuan; Banzhaf, Wolfgang] Michigan State Univ, Dept Comp Sci & Engn, E Lansing, MI 48824 USA.
C3 Michigan State University
RP Yuan, Y (corresponding author), Michigan State Univ, Dept Comp Sci & Engn, E Lansing, MI 48824 USA.
EM yyuan@msu.edu; banzhafw@msu.edu
RI Banzhaf, Wolfgang/JLK-9751-2023; yuan, yubo/HSG-3147-2023
OI Banzhaf, Wolfgang/0000-0002-6382-3245; 
CR Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Ackling T, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1427
   [Anonymous], 1998, GENETIC PROGRAMMING
   [Anonymous], 2013, P 2013 INT S SOFTW T
   [Anonymous], 2007, Linear genetic programming
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arcuri A, 2011, APPL SOFT COMPUT, V11, P3494, DOI 10.1016/j.asoc.2011.01.023
   Arcuri A, 2008, IEEE C EVOL COMPUTAT, P162, DOI 10.1109/CEC.2008.4630793
   Assiri FY, 2017, SOFTWARE QUAL J, V25, P171, DOI 10.1007/s11219-016-9312-z
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Böhme M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P117, DOI 10.1145/3106237.3106255
   Brameier M, 2001, IEEE T EVOLUT COMPUT, V5, P17, DOI 10.1109/4235.910462
   Campos J, 2012, IEEE INT CONF AUTOM, P378, DOI 10.1145/2351676.2351752
   D'Antoni L, 2016, LECT NOTES COMPUT SC, V9780, P383, DOI 10.1007/978-3-319-41540-6_21
   Dallmeier V, 2009, IEEE INT CONF AUTOM, P550, DOI 10.1109/ASE.2009.15
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Debroy Vidroha, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P65, DOI 10.1109/ICST.2010.66
   Durieux T., 2017, TECH REP
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Fast E., 2010, Conference on Genetic and Evolutionary Computation, P965
   Forrest S., 2009, P 11 ANN C GENETIC E, P947, DOI DOI 10.1145/1569901.1570031
   Fry Z.P., 2012, INT S SOFTWARE TESTI, P177, DOI 10.1145/04000800.2336775
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Harman M, 2012, IEEE INT CONF AUTOM, P1, DOI 10.1145/2351676.2351678
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Jensen Mikkel T, 2004, Journal of Mathematical Modelling and Algorithms, V3, P323, DOI DOI 10.1023/B:JMMA.0000049378.57591.C6
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Knowles JD, 2001, LECT NOTES COMPUT SC, V1993, P269
   Kong XL, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P194, DOI 10.1109/ISSRE.2015.7381813
   KOZA JR, 1994, STAT COMPUT, V4, P87, DOI 10.1007/BF00175355
   Langdon WB, 2015, IEEE T EVOLUT COMPUT, V19, P118, DOI 10.1109/TEVC.2013.2281544
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le Goues C, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P959, DOI 10.1145/2330163.2330296
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le XBD, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P376, DOI 10.1145/3092703.3098225
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Le XBD, 2016, PROC IEEE INT CONF S, P423, DOI 10.1109/ICSME.2016.68
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Lee YS, 2011, ENERG CONVERS MANAGE, V52, P147, DOI 10.1016/j.enconman.2010.06.053
   Long F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/3106237.3106253
   Long F, 2016, PROC INT CONF SOFTW, P702, DOI 10.1145/2884781.2884872
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Martinez M., 2016, P 25 INT S SOFTWARE, P441, DOI 10.1145/2931037
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Martinez M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P492, DOI 10.1145/2591062.2591114
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   Nguyen S, 2017, COMPLEX INTELL SYST, V3, P41, DOI 10.1007/s40747-017-0036-x
   Oliveira VPL, 2016, LECT NOTES COMPUT SC, V9962, P112, DOI 10.1007/978-3-319-47106-8_8
   Pei Y, 2014, IEEE T SOFTWARE ENG, V40, P427, DOI 10.1109/TSE.2014.2312918
   Petke J, 2018, IEEE T SOFTWARE ENG, V44, P574, DOI 10.1109/TSE.2017.2702606
   Petke J, 2018, IEEE T EVOLUT COMPUT, V22, P415, DOI 10.1109/TEVC.2017.2693219
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Schulte E., 2010, P 25 IEEEACM INT C A, P313, DOI [DOI 10.1145/1858996.1859059, 10.1145/1858996.1859059]
   Schulte E, 2014, GENET PROGRAM EVOL M, V15, P281, DOI 10.1007/s10710-013-9195-8
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Soto M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P512, DOI [10.1145/2901739.2903495, 10.1109/MSR.2016.067]
   Tan SH, 2017, PROC IEEE ACM INT C, P180, DOI 10.1109/ICSE-C.2017.76
   Tan SH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/2950290.2950295
   Tao YD, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P64, DOI 10.1145/2635868.2635873
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Weimer W, 2010, COMMUN ACM, V53, P109, DOI 10.1145/1735223.1735249
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Wen Ming, 2017, ARXIV170705172
   White DR, 2011, IEEE T EVOLUT COMPUT, V15, P515, DOI 10.1109/TEVC.2010.2083669
   Wloka J, 2010, IEEE SOFTWARE, V27, P66, DOI 10.1109/MS.2009.159
   Wu F, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1375, DOI 10.1145/2739480.2754648
   Xin Q, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P226, DOI 10.1145/3092703.3092718
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Yang JQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P831, DOI 10.1145/3106237.3106274
   Yu Zhongxing, 2017, ARXIV170300198
   Yuan Y, 2016, IEEE T EVOLUT COMPUT, V20, P180, DOI 10.1109/TEVC.2015.2443001
   Yuan Y, 2016, IEEE T EVOLUT COMPUT, V20, P16, DOI 10.1109/TEVC.2015.2420112
   Yuan Y, 2015, IEEE T AUTOM SCI ENG, V12, P336, DOI 10.1109/TASE.2013.2274517
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
   Zhou AM, 2011, SWARM EVOL COMPUT, V1, P32, DOI 10.1016/j.swevo.2011.03.001
NR 87
TC 110
Z9 119
U1 2
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2020
VL 46
IS 10
BP 1040
EP 1067
DI 10.1109/TSE.2018.2874648
PG 28
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OA7HI
UT WOS:000577950900001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alizadeh, V
   Kessentini, M
   Mkaouer, MW
   Ocinneide, M
   Ouni, A
   Cai, YF
AF Alizadeh, Vahid
   Kessentini, Marouane
   Mkaouer, Mohamed Wiem
   Ocinneide, Mel
   Ouni, Ali
   Cai, Yuanfang
TI An Interactive and Dynamic Search-Based Approach to Software Refactoring
   Recommendations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Manuals; Tools; Software quality; Maintenance engineering; Optimization;
   Electronic mail; Search-based software engineering; Refactoring;
   interactive optimization; software quality
ID MULTIOBJECTIVE EVOLUTIONARY ALGORITHMS; DEFECTS DETECTION; TOOLS
AB Successful software products evolve through a process of continual change. However, this process may weaken the design of the software and make it unnecessarily complex, leading to significantly reduced productivity and increased fault-proneness. Refactoring improves the software design while preserving overall functionality and behavior, and is an important technique in managing the growing complexity of software systems. Most of the existing work on software refactoring uses either an entirely manual or a fully automated approach. Manual refactoring is time-consuming, error-prone and unsuitable for large-scale, radical refactoring. On the other hand, fully automated refactoring yields a static list of refactorings which, when applied, leads to a new and often hard to comprehend design. Furthermore, it is difficult to merge these refactorings with other changes performed in parallel by developers. In this paper, we propose a refactoring recommendation approach that dynamically adapts and interactively suggests refactorings to developers and takes their feedback into consideration. Our approach uses NSGA-II to find a set of good refactoring solutions that improve software quality while minimizing the deviation from the initial design. These refactoring solutions are then analyzed to extract interesting common features between them such as the frequently occurring refactorings in the best non-dominated solutions. Based on this analysis, the refactorings are ranked and suggested to the developer in an interactive fashion as a sequence of transformations. The developer can approve, modify or reject each of the recommended refactorings, and this feedback is then used to update the proposed rankings of recommended refactorings. After a number of introduced code changes and interactions with the developer, the interactive NSGA-II algorithm is executed again on the new modified system to repair the set of refactoring solutions based on the new changes and the feedback received from the developer. We evaluated our approach on a set of eight open source systems and two industrial projects provided by an industrial partner. Statistical analysis of our experiments shows that our dynamic interactive refactoring approach performed significantly better than four existing search-based refactoring techniques and one fully-automated refactoring tool not based on heuristic search.
C1 [Alizadeh, Vahid] Univ Michigan, Dearborn, MI 48128 USA.
   [Kessentini, Marouane] Univ Michigan, Dept Comp & Informat Sci, Dearborn, MI 48128 USA.
   [Mkaouer, Mohamed Wiem] Rochester Inst Technol, B Thomas Golisano Coll Comp & Informat Sci, Software Engn Dept, Rochester, NY 14623 USA.
   [Ocinneide, Mel] Univ Coll Dublin, Sch Comp Sci, Dublin 4, Ireland.
   [Ouni, Ali] ETS, Montreal, PQ H3C 1K3, Canada.
   [Cai, Yuanfang] Drexel Univ, Comp Sci, Philadelphia, PA 19104 USA.
C3 University of Michigan System; University of Michigan; University of
   Michigan System; University of Michigan; Rochester Institute of
   Technology; University College Dublin; University of Quebec; Ecole de
   Technologie Superieure - Canada; Drexel University
RP Kessentini, M (corresponding author), Univ Michigan, Dearborn, MI 48128 USA.
EM alizadeh@umich.edu; marouane@umich.edu; mwmvse@rit.edu;
   mel.ocinneide@ucd.ie; ouniaali@gmail.com; yfcai@cs.drexel.edu
RI Alizadeh, Vahid/S-2154-2018; Mkaouer, Mohamed Wiem/N-7476-2017; Ó
   Cinnéide, Mel/GQP-1737-2022; Ouni, Ali/Y-8280-2019
OI Mkaouer, Mohamed Wiem/0000-0001-6010-7561; Ouni,
   Ali/0000-0003-4708-0362; Alizadeh, Vahid/0000-0002-5030-9036
CR [Anonymous], 2003, TEST DRIVEN DEV EXAM
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bavota Gabriele, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P75, DOI 10.1007/978-3-642-33119-0_7
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Cinnéide MO, 2012, INT SYMP EMP SOFTWAR, P49, DOI 10.1145/2372251.2372260
   Counsell S., 2010, Advances in Software Engineering, DOI 10.1155/2010/820103
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1629
   Deb K, 2010, IEEE T EVOLUT COMPUT, V14, P723, DOI 10.1109/TEVC.2010.2064323
   Dig D, 2011, IEEE SOFTWARE, V28, P17, DOI 10.1109/MS.2011.1
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   Farina M, 2004, IEEE T EVOLUT COMPUT, V8, P425, DOI 10.1109/TEVC.2004.831456
   Fatiregun D, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P65
   Fernandez E, 2010, COMPUT OPER RES, V37, P390, DOI 10.1016/j.cor.2009.06.004
   Fokaefs M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1037, DOI 10.1145/1985793.1985989
   Foster SR, 2012, PROC INT CONF SOFTW, P222, DOI 10.1109/ICSE.2012.6227191
   Fowler M., 2001, Software Development, V9, P28
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fowler M., 1999, P C NAM C LOC, P1
   Ge X, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1095, DOI 10.1145/2568225.2568280
   Ge Xi, 2011, P ACM INT C COMP OBJ, V11, P19, DOI [10.1145/2048147.2048157, DOI 10.1145/2048147.2048157]
   Hall M, 2012, 28 IEEE INT C SOFTW, V2012, P23
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Jackson RR, 2001, BEHAVIOUR, V138, P1215, DOI 10.1163/15685390152822184
   Jensen A. C., 2010, P 12 ANN C GEN EV CO
   Karahan I, 2010, IEEE T EVOLUT COMPUT, V14, P636, DOI 10.1109/TEVC.2009.2033586
   Kataoka Y, 2001, PROC IEEE INT CONF S, P736, DOI 10.1109/ICSM.2001.972794
   Keppel G., 2004, DESIGN ANAL RES HDB
   Kessentini M, 2011, CONF PROC INT SYMP C, P81, DOI 10.1109/ICPC.2011.22
   Kilic H, 2011, LECT NOTES COMPUT SC, V6956, P271, DOI 10.1007/978-3-642-23716-4_26
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1
   Lin Y, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P535, DOI 10.1145/2950290.2950317
   Mkaouer M. W., 2014, P 29 ACM IEEE INT C, P331, DOI [DOI 10.1145/2642937.2642965, 10.1145/2642937.2642965. u r l, DOI 10.1145/2642937.2642965.URL]
   Mkaouer MW, 2016, EMPIR SOFTW ENG, V21, P2503, DOI 10.1007/s10664-015-9414-4
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Murphy-Bill E, 2008, IEEE SOFTWARE, V25, P38, DOI 10.1109/MS.2008.123
   Murphy-Hill E., 2013, IEEE T SOFTWARE ENG, V38, P21
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P1417, DOI 10.1109/TSE.2011.110
   MURPHYHILL E, 2008, PROC INT CONF SOFTW, P421
   Negara S, 2013, LECT NOTES COMPUT SC, V7920, P552, DOI 10.1007/978-3-642-39038-8_23
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   Opdyke W., 1990, P S OBJ OR PROGR EMP, P14
   Opdyke W.F., 1992, REFACTORING OBJECT O
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Ouni A, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1461
   Ouni A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P347, DOI 10.1109/ICSM.2012.6405292
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Stroggylos K., 2007, P 5 INT WORKSH SOFTW, P10, DOI [10.1109/WOSQ.2007.11, DOI 10.1109/WOSQ.2007.11]
   Tahvildari L, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P183, DOI 10.1109/CSMR.2003.1192426
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wagner T, 2010, IEEE T EVOLUT COMPUT, V14, P688, DOI 10.1109/TEVC.2010.2058119
   Wohlin C., 2012, Experimentation in Software Engineering
   Yang L., 2014, P INT C SOFTW ENG KN, P112
NR 57
TC 30
Z9 40
U1 0
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2020
VL 46
IS 9
BP 932
EP 961
DI 10.1109/TSE.2018.2872711
PG 30
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA NR7JB
UT WOS:000571735900002
OA Green Published
DA 2024-07-18
ER

PT J
AU Meng, Y
   Gay, G
   Whalen, M
AF Meng, Ying
   Gay, Gregory
   Whalen, Michael
TI Ensuring the Observability of Structural Test Obligations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Observability; Test pattern generators; Monitoring; Sensitivity;
   Software; Complexity theory; Software testing; automated test
   generation; test adequacy criteria; model-based test generation
ID COVERAGE; GENERATION
AB Test adequacy criteria are widely used to guide test creation. However, many of these criteria are sensitive to statement structure or the choice of test oracle. This is because such criteria ensure that execution reaches the element of interest, but impose no constraints on the execution path after this point. We are not guaranteed to observe a failure just because a fault is triggered. To address this issue, we have proposed the concept of observability-an extension to coverage criteria based on Boolean expressions that combines the obligations of a host criterion with an additional path condition that increases the likelihood that a fault encountered will propagate to a monitored variable. Our study, conducted over five industrial systems and an additional forty open-source systems, has revealed that adding observability tends to improve efficacy over satisfaction of the traditional criteria, with average improvements of 125.98 percent in mutation detection with the common output-only test oracle and per-model improvements of up to 1760.52 percent. Ultimately, there is merit to our hypothesis-observability reduces sensitivity to the choice of oracle and to the program structure.
C1 [Meng, Ying; Gay, Gregory] Univ South Carolina, Dept Comp Sci & Engn, Columbia, SC 29208 USA.
   [Whalen, Michael] Univ Minnesota, Dept Comp Sci & Engn, Minneapolis, MN 55455 USA.
C3 University of South Carolina System; University of South Carolina
   Columbia; University of Minnesota System; University of Minnesota Twin
   Cities
RP Gay, G (corresponding author), Univ South Carolina, Dept Comp Sci & Engn, Columbia, SC 29208 USA.
EM ymeng@email.sc.edu; greg@greggay.com; mwwhalen@umn.edu
RI Meng, Ying/JJD-9947-2023
OI Meng, Ying/0000-0001-8443-5148; Gay, Gregory/0000-0001-6794-9585
FU NSF [CCF-1657299]
FX This work has been partially supported by NSF grant CCF-1657299. We also
   thank the Advanced Technology Center at Rockwell Collins Inc. for
   granting access to industrial case examples.
CR AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   Almasi MM, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P263, DOI 10.1109/ICSE-SEIP.2017.27
   Almulla H, 2017, LECT NOTES COMPUT SC, V10452, P153, DOI 10.1007/978-3-319-66299-2_13
   Ammann P., 2016, INTRO SOFTWARE TESTI, DOI [10.1017/9781316771273, DOI 10.1017/9781316771273]
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   [Anonymous], 2011, RTCADO178C EUROCAE
   [Anonymous], 1991, P S TEST AN VER TAV
   [Anonymous], 2013, P 2013 INT S SOFTW T, DOI DOI 10.1145/2483760.2483774
   Arcuri A, 2013, SOFTW TEST VERIF REL, V23, P119, DOI 10.1002/stvr.457
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Chilenski J., 2001, TECH REP
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   Clause J., 2007, P 2007 INT S SOFTW T, DOI [10.1145/1273463.1273490, DOI 10.1145/1273463.1273490]
   Colaço JL, 2017, PROCEEDINGS 11TH 2017 INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE), P4
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Devadas S, 1996, IEEE IC CAD, P418, DOI 10.1109/ICCAD.1996.569832
   Esterel-Technologies, 2004, SCADE SUIT PROD DESC
   Fallah F, 2002, IEEE T VLSI SYST, V10, P919, DOI 10.1109/TVLSI.2002.808438
   Fallah F, 2001, IEEE T COMPUT AID D, V20, P1003, DOI 10.1109/43.936381
   FELLEISEN M, 1992, THEOR COMPUT SCI, V103, P235, DOI 10.1016/0304-3975(92)90014-7
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P783, DOI 10.1007/s10664-013-9299-z
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Gacek A., 2015, JKIND A JAVA IMPLEME
   Gargantini A, 1999, LECT NOTES COMPUT SC, V1687, P146, DOI 10.1145/318774.318939
   Gay G, 2017, IEEE T SOFTWARE ENG, V43, P531, DOI 10.1109/TSE.2016.2615311
   Gay G, 2017, IEEE INT CONF SOFTW, P345, DOI 10.1109/ICST.2017.38
   Gay G, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2934672
   Gay G, 2015, IEEE T SOFTWARE ENG, V41, P1119, DOI 10.1109/TSE.2015.2436920
   Gay G, 2015, IEEE T SOFTWARE ENG, V41, P803, DOI 10.1109/TSE.2015.2421011
   Gay Gregory., 2014, Proceedings of the 7th International Workshop on Search-Based Software Testing. SBST 2014, P19
   Groce Alex, 2014, INT S NEW ID NEW PAR, P255, DOI DOI 10.1145/2661136.2661157
   Hagen G., 2008, THESIS
   HALBWACHS N, 1991, P IEEE, V79, P1305, DOI 10.1109/5.97300
   Halbwachs Nicolas., 1993, Synchronous Programming of Reactive Systems
   Heimdahl MPE, 2004, EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P178, DOI 10.1109/HASE.2004.1281742
   HOWDEN WE, 1978, IEEE T SOFTWARE ENG, V4, P293, DOI 10.1109/TSE.1978.231514
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Jee E, 2009, INFORM SOFTWARE TECH, V51, P1131, DOI 10.1016/j.infsof.2009.01.003
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Just R., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P612, DOI 10.1109/ASE.2011.6100138
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kaminski G, 2013, J SYST SOFTWARE, V86, P2002, DOI 10.1016/j.jss.2012.08.024
   Kit E., 1995, SOFTWARE TESTING REA
   Kupferman O., 2003, International Journal on Software Tools for Technology Transfer, V4, P224, DOI 10.1007/s100090100062
   Lakehal Abdesselam., 2005, Proceedings of the 10th International Workshop on Formal Methods for Industrial Critical Systems, P35
   Lau MF, 2005, ACM T SOFTW ENG METH, V14, P247, DOI 10.1145/1072997.1072998
   Masri W, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P198, DOI 10.1109/ISSRE.2004.17
   Mathworks Inc, 2015, SIM
   MathWorks Inc, 2015, STAT
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   MCMINN P., 2010, Proceedings of the First International Workshop on Software Test Output Validation, P1
   Mockus A, 2009, INT SYMP EMP SOFTWAR, P292
   Murugesan A, 2015, LECT NOTES COMPUT SC, V9058, P279, DOI 10.1007/978-3-319-17524-9_20
   Namin AS, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P57
   Perry W.E., 2006, EFFECTIVE METHODS SO, VThird
   Pezze M., 2006, Software Test and Analysis: Process, Principles, and Techniques
   Rajan A, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P161, DOI 10.1145/1368088.1368111
   Rajan A, 2008, LECT NOTES COMPUT SC, V5256, P86, DOI 10.1007/978-3-540-88194-0_8
   Rayadurgam S, 2001, EIGHTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P83, DOI 10.1109/ECBS.2001.922409
   Rosu G, 2010, J LOGIC ALGEBR PROGR, V79, P397, DOI 10.1016/j.jlap.2010.03.012
   Schuler D., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P90, DOI 10.1109/ICST.2011.32
   Schuler D., 2011, THESIS
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Souza FCM, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P45, DOI [10.1145/2897010.2897012, 10.1109/SBST.2016.018]
   Special Committee, 1992, DO178BED12B RTCA EUR
   Staats M, 2012, PROC INT CONF SOFTW, P870, DOI 10.1109/ICSE.2012.6227132
   Staats M, 2012, LECT NOTES COMPUT SC, V7212, P409, DOI 10.1007/978-3-642-28872-2_28
   Staats M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P892, DOI 10.1145/1985793.1985936
   Vilkomir S. A., 2002, ZB 2002: Formal Specification and Development in Z and B. 2nd International Conference of B and Z Users. Proceedings (Lecture Notes in Computer Science Vol.2272), P291
   Weyuker E.J., 1980, 13th Int'l Conf on System Sciences, P44
   Whalen M.W., 2010, MODEL CHECKING INFOR
   Whalen M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P102, DOI 10.1109/ICSE.2013.6606556
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Woodward M. R., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P152, DOI 10.1109/WST.1988.5370
   You DJ, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P228, DOI 10.1109/ISSRE.2015.7381816
   Yuen TY, 2006, J SYST SOFTWARE, V79, P577, DOI 10.1016/j.jss.2005.05.030
NR 76
TC 3
Z9 3
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL 1
PY 2020
VL 46
IS 7
BP 748
EP 772
DI 10.1109/TSE.2018.2869146
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ML2UM
UT WOS:000549327500004
OA hybrid
DA 2024-07-18
ER

PT J
AU Meyers, B
   Vangheluwe, H
   Denil, J
   Salay, R
AF Meyers, Bart
   Vangheluwe, Hans
   Denil, Joachim
   Salay, Rick
TI A Framework for Temporal Verification Support in Domain-Specific
   Modelling
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Domain-specific modelling; model-driven engineering; language
   engineering
ID TRANSFORMATIONS; GENERATION; PATTERN; DESIGN; LOGIC
AB In Domain-Specific Modelling (DSM) the general goal is to provide Domain-Specific Modelling Languages (DSMLs) for domain users to model systems using concepts and notations they are familiar with, in their problem domain. Verifying whether a model satisfies a set of requirements is considered to be an important challenge in DSM, but is nevertheless mostly neglected. We present a solution in the form of ProMoBox, a framework that integrates the definition and verification of temporal properties in discrete-time behavioural DSMLs, whose semantics can be described as a schedule of graph rewrite rules. Thanks to the expressiveness of graph rewriting, this covers a very large class of problems. With ProMoBox, the domain user models not only the system with a DSML, but also its properties, input model, run-time state and output trace. A DSML is thus comprised of five sublanguages, which share domain-specific syntax, and are generated from a single metamodel. Generic transformations to and from a verification backbone ensure that both the language engineer and the domain user are shielded from underlying notations and techniques. We explicitly model the ProMoBox framework's process in the paper. Furthermore, we evaluate ProMoBox to assert that it supports the specification and verification of properties in a highly flexible and automated way.
C1 [Meyers, Bart; Vangheluwe, Hans; Denil, Joachim] Univ Antwerp, Dept Math & Comp Sci, Antwerp 2000, Belgium.
   [Meyers, Bart; Vangheluwe, Hans; Denil, Joachim] Flanders Make Vzw, Lommel 3920, Belgium.
   [Vangheluwe, Hans] McGill Univ, Sch Comp Sci, Montreal, PQ H3A 0G4, Canada.
   [Salay, Rick] Univ Toronto, Dept Comp Sci, Toronto, ON M5S 1A1, Canada.
C3 University of Antwerp; McGill University; University of Toronto
RP Meyers, B (corresponding author), Univ Antwerp, Dept Math & Comp Sci, Antwerp 2000, Belgium.
EM bart.meyers@flandersmake.be; hv@cs.mcgil.ca;
   joachim.denil@uantwerpen.be; rsalay@cs.toronto.edu
RI Denil, Joachim/JHU-4354-2023; Denil, Joachim/AAQ-5210-2021; Vangheluwe,
   Hans/H-9884-2016
OI Denil, Joachim/0000-0002-4926-6737; Denil, Joachim/0000-0002-4926-6737;
   Vangheluwe, Hans/0000-0003-2079-6643; Meyers, Bart/0000-0001-9566-8297
CR ALPERN B, 1987, DISTRIB COMPUT, V2, P117, DOI 10.1007/BF01782772
   [Anonymous], [No title captured]
   [Anonymous], THESIS
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], THESIS
   [Anonymous], ECEASST
   [Anonymous], [No title captured]
   [Anonymous], JOT
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   Autili M, 2015, IEEE T SOFTWARE ENG, V41, P620, DOI 10.1109/TSE.2015.2398877
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Bengtsson J., 1996, Hybrid Systems III. Verification and Control, P232, DOI 10.1007/BFb0020949
   Bensalem S., 2000, LFM 2000: Fifth NASA Langley Formal Methods Workshop (NASA/CP-2000-210100), P187
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4199, P440
   Boulanger F., 2011, 2011 11th International Conference on Application of Concurrency to System Design (ACSD), P153, DOI 10.1109/ACSD.2011.17
   Brooke J, 2013, J USABILITY STUD, V8, P29
   Brosch Petra, 2012, Tests and Proofs. Proceedings 6th International Conference, TAP 2012, P149, DOI 10.1007/978-3-642-30473-6_12
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Cimatti A., 2011, 2011 Formal Methods in Computer-Aided Design (FMCAD), P54
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Clavel M., 2007, All About Maude, A High-Performance Logical Framework, volume 4350 of Lecture Notes in Computer Science, V4350
   Combemale B, 2012, ASIA PAC SOFWR ENG, P282, DOI 10.1109/APSEC.2012.79
   Corbett JC, 2000, LECT NOTES COMPUT SC, V1885, P205
   Costagliola G, 2002, J VISUAL LANG COMPUT, V13, P573, DOI 10.1006/S1045-926X(02)00025-3
   da Costa Cavalheiro Simone Andre, 2012, Formal Methods: Foundations and Applications. Proceedings 15th Brazilian Symposium, SBMF 2012, P83, DOI 10.1007/978-3-642-33296-8_8
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Dwyer M. B., 1998, Proceedings of FMSP'98. Second Workshop on Formal Methods in Software Practice, P7, DOI 10.1145/298595.298598
   Emerson E. A., 1990, Handbook of Theoretical Computer Science, VB, P995, DOI [10.1016/b978-0-444-88074-1.50021-4, DOI 10.1016/B978-0-444-88074-1.50021-4]
   EMERSON EA, 1982, SCI COMPUT PROGRAM, V2, P241, DOI 10.1016/0167-6423(83)90017-5
   Fischer T, 2000, LECT NOTES COMPUT SC, V1764, P296
   Gray Jeff., 2007, HDB DYNAMIC SYSTEM M
   Gruhn V, 2006, ELECTRON NOTES THEOR, V153, P117, DOI 10.1016/j.entcs.2005.10.035
   Guerra E, 2013, AUTOMAT SOFTW ENG, V20, P5, DOI 10.1007/s10515-012-0102-y
   Guerra E, 2008, ELECTRON NOTES THEOR, V211, P99, DOI 10.1016/j.entcs.2008.04.033
   Guerra Esther., 2010, Visual Languages and Human-Centric Computing VL/HCC, P119
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Herrmannsdoerfer M, 2009, LECT NOTES COMPUT SC, V5653, P52, DOI 10.1007/978-3-642-03013-0_4
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Huber F, 1996, LECT NOTES COMPUT SC, V1135, P467
   Kanso Bilal., 2012, SLE, P83
   Kelly S., 2008, Domain-Specific Modeling
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Klein F, 2007, LECT NOTES COMPUT SC, V4422, P185
   Knapp A., 2002, Formal Techniques in Real-Time and Fault-Tolerant Systems. 7th International Symposium, FTRTFT 2002. Proceedings (Lecture Notes in Computer Science Vol.2469), P395
   Knapp A., 2006, Models in Software Engineering. Workshops and Symposia at MoDELS 2006. Reports and Revised Selected Papers (Lecture Notes in Computer Science Vol.4364), P42
   Konrad S, 2005, PROC INT CONF SOFTW, P372
   Kühne T, 2010, LECT NOTES COMPUT SC, V6002, P240
   Kuhne T., 2006, Softw Syst Model, V5, P369, DOI [DOI 10.1007/S10270-006-0017-9, 10.1007/s10270-006-0017-9]
   Li X, 2005, LECT NOTES COMPUT SC, V3758, P298
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Meyers B, 2013, 7 WORKSH MULT MOD MO, P47
   Meyers B., 2013, P 2013 ACM WORKSH DO, P39, DOI DOI 10.1145/2541928
   Meyers B, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P181, DOI 10.1145/2997364.2997367
   Meyers B, 2014, LECT NOTES COMPUT SC, V8706, P1, DOI 10.1007/978-3-319-11245-9_1
   Meyers B, 2011, SCI COMPUT PROGRAM, V76, P1223, DOI 10.1016/j.scico.2011.01.002
   MILLER JC, 1963, COMMUN ACM, V6, P58, DOI 10.1145/366246.366248
   Mosterman PJ, 2004, SIMUL-T SOC MOD SIM, V80, P433, DOI 10.1177/0037549704050532
   Mustafiz S., 2012, Proceedings of the 6th International Workshop on Multi-Paradigm Modeling, P13
   Object Management Group, 2015, OMG UN MOD LANG VERS
   Object Management Group, 2014, Tech. Rep.
   Pelliccione P, 2009, IEEE T SOFTWARE ENG, V35, P325, DOI 10.1109/TSE.2008.104
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Ramezani E, 2012, LECT NOTES COMPUT SC, V7481, P262, DOI 10.1007/978-3-642-32885-5_21
   Rensink A, 2008, LECT NOTES COMPUT SC, V5065, P114, DOI 10.1007/978-3-540-68679-8_8
   Rivera J.E., 2008, International Conference on Software Language Engineering, P54, DOI DOI 10.1007/978-3-642-00434-6
   Rivera JE, 2009, SIMUL-T SOC MOD SIM, V85, P778, DOI 10.1177/0037549709341635
   Rose LM, 2008, LECT NOTES COMPUT SC, V5095, P1, DOI 10.1007/978-3-540-69100-6_1
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Smith MH, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P14
   Sunkle Sagar, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P659, DOI 10.1007/978-3-642-33666-9_42
   Syriani E., 2013, JOINT P MODELS 13 DE, P21
   Varro Daniel, 2004, Journal of Software and Systems Modeling, V3, P85, DOI [10.1007/s10270-003-0050-x, DOI 10.1007/S10270-003-0050-X, 10.1007/ s10270-003-0050-x]
   Varró G, 2006, ELECTRON NOTES THEOR, V152, P191, DOI 10.1016/j.entcs.2005.10.025
   Visser W, 2012, SOFTW SYST MODEL, V11, P541, DOI 10.1007/s10270-012-0281-9
   Zalila Faiez, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Applications and Case Studies. Proceedings of the 5th International Symposium, ISoLA 2012, P329, DOI 10.1007/978-3-642-34032-1_34
   Zalila F, 2013, LECT NOTES COMPUT SC, V8107, P336, DOI 10.1007/978-3-642-41533-3_21
   Ziemann P, 2003, LECT NOTES COMPUT SC, V2890, P351
NR 88
TC 5
Z9 5
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2020
VL 46
IS 4
BP 362
EP 404
DI 10.1109/TSE.2018.2859946
PG 43
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA LI5MK
UT WOS:000529529700002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Czepa, C
   Zdun, U
AF Czepa, Christoph
   Zdun, Uwe
TI On the Understandability of Temporal Properties Formalized in Linear
   Temporal Logic, Property Specification Patterns and Event Processing
   Language
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Computer science; Guidelines; Industries; Software
   architecture; Cognition; Controlled experiment; understandability;
   temporal property; linear temporal logic; property specification
   patterns; complex event processing; event processing language
ID LTL; VERIFICATION; FRAMEWORK; CHECKING
AB Temporal properties are important in a wide variety of domains for different purposes. For example, they can be used to avoid architectural drift in software engineering or to support the regulatory compliance of business processes. In this work, we study the understandability of three major temporal property representations: (1) Linear Temporal Logic (LTL) is a formal and well-established logic that offers temporal operators to describe temporal properties; (2) Property Specification Patterns (PSP) are a collection of recurring temporal properties that abstract underlying formal and technical representations; (3) Event Processing Language (EPL) can be used for runtime monitoring of event streams using Complex Event Processing. We conducted two controlled experiments with 216 participants in total to study the understandability of those approaches using a completely randomized design with one alternative per experimental unit. We hypothesized that PSP, as a highly abstracting pattern language, is easier to understand than LTL and EPL, and that EPL, due to separation of concerns (as one or more queries can be used to explicitly define the truth value change that an observed event pattern causes), is easier to understand than LTL. We found evidence supporting our hypotheses which was statistically significant and reproducible.
C1 [Czepa, Christoph; Zdun, Uwe] Univ Vienna, Res Grp Software Architecture, Fac Comp Sci, Wahringerstr 29, A-1090 Vienna, Austria.
C3 University of Vienna
RP Czepa, C (corresponding author), Univ Vienna, Res Grp Software Architecture, Fac Comp Sci, Wahringerstr 29, A-1090 Vienna, Austria.
EM christoph.czepa@univie.ac.at; uwe.zdun@univie.ac.at
RI Zdun, Uwe/AFR-2161-2022
OI Zdun, Uwe/0000-0002-6233-2591
FU FFG (Austrian Research Promotion Agency) project CACAO [843461]; FWF
   (Austrian Science Fund) [I 2885-N33]
FX We would like to thank all participants. This work was supported by: FFG
   (Austrian Research Promotion Agency) project CACAO, no. 843461; FWF
   (Austrian Science Fund) project ADDCompliance: I 2885-N33.
CR Adam M., 2017, Journal of Physics: Conference Series, V898, DOI 10.1088/1742-6596/898/4/042020
   Aniello Leonardo, 2011, Computer Safety, Reliability, and Security. Proceedings 30th International Conference, SAFECOMP 2011, P310, DOI 10.1007/978-3-642-24270-0_23
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], 2017, P S APPL COMPUTING S
   [Anonymous], EPL REF
   [Anonymous], UIB201305 ULM U
   [Anonymous], DESIGN SYNTHESIS SYN
   [Anonymous], P INT S EMP SOFTW EN
   [Anonymous], MODEL CHECKING PLUS
   [Anonymous], 2012, LNCS
   [Anonymous], INF SYST
   Awad A, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1203, DOI 10.1145/2695664.2699488
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Bauer A, 2010, J LOGIC COMPUT, V20, P651, DOI 10.1093/logcom/exn075
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bianculli D, 2012, PROC INT CONF SOFTW, P968, DOI 10.1109/ICSE.2012.6227125
   Blom S, 2010, LECT NOTES COMPUT SC, V6174, P354
   Bobák M, 2015, I S INTELL SYST INFO, P43, DOI 10.1109/SISY.2015.7325408
   Cimatti A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P359
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cugola Gianpaolo., 2010, Proceedings of the Fourth ACM International Conference on Distributed Event-Based Systems - DEBS'10, P50
   Czepa C, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P155, DOI 10.1109/ICSA.2017.10
   Czepa C, 2016, IEEE INT ENTERP, P3
   De Giacomo G, 2014, AAAI CONF ARTIF INTE, P1027
   De Giacomo G, 2014, LECT NOTES COMPUT SC, V8659, P1, DOI 10.1007/978-3-319-10172-9_1
   De Giacomo Giuseppe., International Joint Conference on Artificial Intelligence, IJCAI. IJCAI/AAAI, P854, DOI DOI 10.5555/2540128.2540252
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Elgammal A, 2016, SOFTW SYST MODEL, V15, P119, DOI 10.1007/s10270-014-0395-3
   Esteve MA, 2012, PROC INT CONF SOFTW, P1022, DOI 10.1109/ICSE.2012.6227118
   Falcone Y, 2015, SOFTW SYST MODEL, V14, P173, DOI 10.1007/s10270-013-0323-y
   Feigenspan J, 2013, EMPIR SOFTW ENG, V18, P699, DOI 10.1007/s10664-012-9208-x
   Gunawardhane SDW, 2013, INT CONF ADV ICT, P240, DOI 10.1109/ICTer.2013.6761185
   Habiballa H., 2004, INT J MATH ED SCI TE, V35, P829, DOI DOI 10.1080/00207390412331271267
   Heijstek W, 2011, INT SYMP EMP SOFTWAR, P167, DOI 10.1109/ESEM.2011.25
   Hoisl B, 2014, 2014 9TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P95, DOI 10.1109/QUATIC.2014.19
   Holmes T, 2011, SERVICE ENGINEERING: EUROPEAN RESEARCH RESULTS, P117, DOI 10.1007/978-3-7091-0415-6_5
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Joshi Yogi., 2017, Proceedings of the Symposium on Applied Computing - SAC'17, P1379, DOI DOI 10.1145/3019612.3019827
   Juristo N., 2010, BASICS SOFTWARE ENG
   Kherbouche OM, 2013, INT CONF EMERG TECHN, P102
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Knobelsdorf M, 2016, PROCEEDINGS OF THE 2016 ACM CONFERENCE ON INTERNATIONAL COMPUTING EDUCATION RESEARCH (ICER'16), P73, DOI 10.1145/2960310.2960331
   Kunz S, 2010, LECT NOTES BUS INF, V67, P78
   Ly LT, 2015, INFORM SYST, V54, P209, DOI 10.1016/j.is.2015.02.007
   Medvidovic N., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P44, DOI 10.1109/ICSE.1999.840994
   Morimoto S, 2008, LECT NOTES COMPUT SC, V5102, P514, DOI 10.1007/978-3-540-69387-1_58
   Morse J, 2015, SOFTW SYST MODEL, V14, P65, DOI 10.1007/s10270-013-0366-0
   Mulo E, 2013, SERV ORIENTED COMPUT, V7, P59, DOI 10.1007/s11761-012-0121-3
   Pesic M, 2007, IEEE INT ENTERP DIST, P287, DOI 10.1109/EDOC.2007.14
   Pesic M, 2010, LECT NOTES COMPUT SC, V6349, P146
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Post A, 2012, REQUIR ENG, V17, P19, DOI 10.1007/s00766-011-0145-9
   RICHARDSON FC, 1972, J COUNS PSYCHOL, V19, P551, DOI 10.1037/h0033456
   Rovani M, 2015, EXPERT SYST APPL, V42, P9236, DOI 10.1016/j.eswa.2015.07.040
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Sharafi Z, 2013, CONF PROC INT SYMP C, P33, DOI 10.1109/ICPC.2013.6613831
   Spichkova M, 2016, LECT NOTES COMPUT SC, V9946, P242, DOI 10.1007/978-3-319-50230-4_18
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Tran J, 2015, NEW APPROACH RELIG, P91
   Tran T., 2016, PROC 5 INT WORKSHOP, P1
   van der Aalst WMP, 2006, LECT NOTES COMPUT SC, V4184, P1
   Wu E., 2006, P ASS COMP MACH ACM, P407
   Yu J, 2006, LECT NOTES COMPUT SC, V4255, P156
   Zdun U, 2013, IEEE SOFTWARE, V30, P46, DOI 10.1109/MS.2013.97
NR 68
TC 15
Z9 16
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2020
VL 46
IS 1
BP 100
EP 112
DI 10.1109/TSE.2018.2859926
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA KE2MI
UT WOS:000508392800006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Luo, Q
   Moran, K
   Zhang, LM
   Poshyvanyk, D
AF Luo, Qi
   Moran, Kevin
   Zhang, Lingming
   Poshyvanyk, Denys
TI How Do Static and Dynamic Test Case Prioritization Techniques Perform on
   Modern Software Systems? An Extensive Study on GitHub Projects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Measurement; Computer bugs; Software systems; Java; Fault
   detection; Regression testing; test case prioritization; static;
   dynamic; mutation analysis
ID MUTATION
AB Test Case Prioritization (TCP) is an increasingly important regression testing technique for reordering test cases according to a pre-defined goal, particularly as agile practices gain adoption. To better understand these techniques, we perform the first extensive study aimed at empirically evaluating four static TCP techniques, comparing them with state-of-research dynamic TCP techniques across several quality metrics. This study was performed on 58 real-word Java programs encompassing 714 KLoC and results in several notable observations. First, our results across two effectiveness metrics (the Average Percentage of Faults Detected APFD and the cost cognizant APFDc) illustrate that at test-class granularity, these metrics tend to correlate, but this correlation does not hold at test-method granularity. Second, our analysis shows that static techniques can be surprisingly effective, particularly when measured by APFDc. Third, we found that TCP techniques tend to perform better on larger programs, but that program size does not affect comparative performance measures between techniques. Fourth, software evolution does not significantly impact comparative performance results between TCP techniques. Fifth, neither the number nor type of mutants utilized dramatically impact measures of TCP effectiveness under typical experimental settings. Finally, our similarity analysis illustrates that highly prioritized test cases tend to uncover dissimilar faults.
C1 [Luo, Qi; Moran, Kevin; Poshyvanyk, Denys] Coll William & Mary, Dept Comp Sci, Williamsburg, VA 23188 USA.
   [Zhang, Lingming] Univ Texas Dallas, Dept Comp Sci, Dallas, TX 75080 USA.
C3 William & Mary; University of Texas System; University of Texas Dallas
RP Luo, Q (corresponding author), Coll William & Mary, Dept Comp Sci, Williamsburg, VA 23188 USA.
EM qluo@cs.wm.edu; kpmorans@c.wm.edu; lingming.zhang@utdallas.edu;
   denys@cs.wm.edu
OI Poshyvanyk, Denys/0000-0002-5626-7586
FU NSF [CNS-1510239, CCF-1218129, CCF-1566589]
FX We would like thank the anonymous TSE and FSE reviewers for their
   insightful comments that significantly improved the quality of a
   previous version of this paper and provided useful suggestions for
   extending the study as presented in this journal paper submission. This
   work is supported in part by the NSF CCF-1218129, CCF-1566589, and NSF
   CNS-1510239 grants. Any opinions, findings, and conclusions expressed
   herein are the authors' and do not necessarily reflect those of the
   sponsors. This paper is an extension of "A Large-scale Empirical
   Comparison of Static and Dynamic Test Case Prioritization Techniques"
   that appeared in Proceedings of 24th ACM SIGSOFT International Symposium
   on the Foundations of Software Engineering (FSE'16), Seattle, WA,
   November 13-18, 2016, pp. 559-570.
CR Ammann P, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P21, DOI 10.1109/ICST.2014.13
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], PROC INT CONF SOFTW
   [Anonymous], 2010, INT J COMPUTER SCI T
   [Anonymous], INT S SOFTW TEST AN
   Arafeen MJ, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P312, DOI 10.1109/ICST.2013.12
   Catal C, 2013, SOFTWARE QUAL J, V21, P445, DOI 10.1007/s11219-012-9181-z
   Chen T., 2013, THESIS
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Czerwonka Jacek, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P357, DOI 10.1109/ICST.2011.24
   Do H, 2005, PROC IEEE INT CONF S, P411
   Do H., 2008, Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering (SIGSOFT '08/FSE-16), P71
   Do HS, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P113
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Do Hyunsook., 2006, P ACM SIGSOFT INT S, P141, DOI DOI 10.1145/1181775.1181793
   Elbaum S, 2004, SOFTWARE QUAL J, V12, P185, DOI 10.1023/B:SQJO.0000034708.84524.22
   Elbaum S, 2003, SOFTW TEST VERIF REL, V13, P65, DOI 10.1002/stvr.263
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   Epitropakis M. G., 2015, P INT S SOFTW TEST A, P234, DOI [DOI 10.1145/2771783.2771788, 10.1145/2771783.2771788]
   Gligoric M., 2015, P 2015 INT S SOFTWAR, P211, DOI 10.1145/2771783.2771784
   Gligoric M., 2013, P 2013 INT S SOFTW T, P302, DOI DOI 10.1145/2483760.2483769
   Hao D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685614
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Islam MM, 2012, EUR CON SFTWR MTNCE, P21, DOI 10.1109/CSMR.2012.13
   Jia Yue, 2016, P 25 INT S SOFTWARE, P354
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Just R., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P720, DOI 10.1109/ICST.2012.162
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kaminski G, 2013, J SYST SOFTWARE, V86, P2002, DOI 10.1016/j.jss.2012.08.024
   Kapfhammer G. M., 2007, PROC ACM INT WORKSHO, P19
   Kasurinen J., 2010, P 2010 ACM IEEE INT
   Kavitha R., 2010, INT J COMPUT SCI ENG, V2, P1462, DOI 10.24297/ijct.v9i3.6814
   Kintis M, 2010, ASIA PAC SOFWR ENG, P300, DOI 10.1109/APSEC.2010.42
   Korel B, 2005, PROC IEEE INT CONF S, P559
   Korel B, 2008, PROC IEEE INT CONF S, P247, DOI 10.1109/ICSM.2008.4658073
   Ledru Y, 2012, AUTOMAT SOFTW ENG, V19, P65, DOI 10.1007/s10515-011-0093-0
   Legunsen O, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P583, DOI 10.1145/295029.2950361
   Li SM, 2010, MODELLING SIMULATION, P265
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Liang Z, 2009, WISM: 2009 INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS AND MINING, PROCEEDINGS, P19, DOI 10.1109/WISM.2009.12
   Luo Q., TSE 17 ONLINE APPEND
   Luo Q, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P559, DOI 10.1145/2950290.2950344
   Mei H, 2012, IEEE T SOFTWARE ENG, V38, P1258, DOI 10.1109/TSE.2011.106
   Nguyen Cu D., 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P636, DOI 10.1109/ICWS.2011.75
   Qu X., 2008, P 2008 INT S SOFTW T, P75
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Saha RK, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P268, DOI 10.1109/ICSE.2015.47
   SEN PK, 1968, J AM STAT ASSOC, V63, P1379
   Smith A.M., 2009, P 2009 ACM S APPL CO, p[461, 467], DOI DOI 10.1145/1529282.1529382
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   Tonella P, 2006, PROC IEEE INT CONF S, P123
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Wang S, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P32, DOI 10.1145/2648511.2648515
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   You D., 2011, P 2011 ACM S APPL CO, P1451
   Zhang L., 2013, P 2013 INT S SOFTW T, P235
   Zhang L, 2011, SPRINGER SER DEMOGR, V27, P25, DOI 10.1007/978-90-481-8939-7_3
   Zhang LM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P192, DOI 10.1109/ICSE.2013.6606565
NR 63
TC 26
Z9 28
U1 1
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2019
VL 45
IS 11
BP 1054
EP 1080
DI 10.1109/TSE.2018.2822270
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA JO3UP
UT WOS:000497506400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Clarisó, R
   González, CA
   Cabot, J
AF Clariso, Robert
   Gonzalez, Carlos A.
   Cabot, Jordi
TI Smart Bound Selection for the Verification of UML/OCL Class Diagrams
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Formal verification; UML; class diagram; OCL; constraint propagation;
   SAT
ID UML CLASS DIAGRAMS; MODELS
AB Correctness of UML class diagrams annotated with OCL constraints can be checked using bounded verification techniques, e.g., SAT or constraint programming (CP) solvers. Bounded verification detects faults efficiently but, on the other hand, the absence of faults does not guarantee a correct behavior outside the bounded domain. Hence, choosing suitable bounds is a non-trivial process as there is a trade-off between the verification time (faster for smaller domains) and the confidence in the result (better for larger domains). Unfortunately, bounded verification tools provide little support in the bound selection process. In this paper, we present a technique that can be used to (i) automatically infer verification bounds whenever possible, (ii) tighten a set of bounds proposed by the user and (iii) guide the user in the bound selection process. This approach may increase the usability of UML/OCL bounded verification tools and improve the efficiency of the verification process.
C1 [Clariso, Robert] Univ Oberta Catalunya, IT Multimedia & Telecommun Dept, Barcelona 08018, Spain.
   [Gonzalez, Carlos A.] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, L-4365 Esch Sur Alzette, Luxembourg.
   [Cabot, Jordi] ICREA, Pg Lluis Co 23, Barcelona 08010, Spain.
C3 UOC Universitat Oberta de Catalunya; University of Luxembourg; ICREA
RP Clarisó, R (corresponding author), Univ Oberta Catalunya, IT Multimedia & Telecommun Dept, Barcelona 08018, Spain.
EM rclariso@uoc.edu; carlos.gonzalez@uni.lu; jordi.cabot@icrea.cat
RI Clariso, Robert/B-5450-2009; Cabot, Jordi/P-7723-2015
OI Clariso, Robert/0000-0001-9639-0186; Cabot, Jordi/0000-0003-2418-2489
FU H2020 ECSEL Joint Undertaking Project "MegaM@Rt2: MegaModelling at
   Runtime" [737494]; Spanish Ministry of Economy and Competitivity
   [TIN2016-75944-R]; Internet Interdisciplinary Institute (IN3) at UOC
FX This work is partially funded by the H2020 ECSEL Joint Undertaking
   Project "MegaM@Rt2: MegaModelling at Runtime" (737494), the Spanish
   Ministry of Economy and Competitivity through the project "Open Data for
   All: an API-based infrastructure for exploiting online data sources"
   (TIN2016-75944-R) and a research grant from the Internet
   Interdisciplinary Institute (IN3) at UOC. The authors would like to
   thank the anonymous reviewers and Dr. Tim Nelson for their valuable
   comments.
CR Ali S, 2013, IEEE T SOFTWARE ENG, V39, P1376, DOI 10.1109/TSE.2013.17
   Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   [Anonymous], 2003, Principles of Constraint Programming
   Apt K.R., 2007, CONSTRAINT LOGIC PRO
   Bagheri H, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P27, DOI 10.1145/2950290.2950337
   Balaban M, 2013, LECT NOTES COMPUT SC, V8107, P454, DOI 10.1007/978-3-642-41533-3_28
   Balaban M, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491518
   Baudry B, 2010, COMMUN ACM, V53, P139, DOI 10.1145/1743546.1743583
   Berardi D, 2005, ARTIF INTELL, V168, P70, DOI 10.1016/j.artint.2005.05.003
   Bjorner N, 2009, LECT NOTES COMPUT SC, V5505, P307, DOI 10.1007/978-3-642-00768-2_27
   Bordeaux L, 2011, J ARTIF INTELL RES, V40, P657, DOI 10.1613/jair.3248
   Brucker AD, 2008, LECT NOTES COMPUT SC, V4961, P97, DOI 10.1007/978-3-540-78743-3_8
   BRUCKER AD, 2006, 525 ETH ZUR
   Cabot J, 2014, J SYST SOFTWARE, V93, P1, DOI 10.1016/j.jss.2014.03.023
   Cadoli M., 2004, CSP TECH IMMED APPL, V2, P2
   Cadoli M, 2007, LECT NOTES COMPUT SC, V4733, P36
   Choi CW, 2006, LECT NOTES COMPUT SC, V4304, P49
   Choi Y, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P314
   Clarisó R, 2015, LECT NOTES COMPUT SC, V9276, P108, DOI 10.1007/978-3-319-22969-0_8
   Clarke E., 2003, INT J FDN COMPUTER S, V14, P583, DOI [/10.1142/S012905410300190X, DOI 10.1142/S012905410300190X, 10.1142/S012905410300190X]
   Clavel M., 2010, EUR ASS SOFTW SCI TE, V24, DOI [10.14279/tuj.eceasst.24.334, DOI 10.14279/TUJ.ECEASST.24.334]
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Feinerer I, 2011, LECT NOTES COMPUT SC, V6981, P379, DOI 10.1007/978-3-642-24485-8_27
   Galeotti JP, 2013, IEEE T SOFTWARE ENG, V39, P1283, DOI 10.1109/TSE.2013.15
   Gogolla M, 2002, LECT NOTES COMPUT SC, V2263, P85
   Gogolla M, 2010, LECT NOTES COMPUT SC, V6143, P38, DOI 10.1007/978-3-642-13977-2_5
   Gogolla M, 2009, LECT NOTES COMPUT SC, V5668, P90
   González CA, 2014, INFORM SOFTWARE TECH, V56, P821, DOI 10.1016/j.infsof.2014.03.003
   Gonzalez Perez Carlos Alberto., 2012, Formal Methods in Software Engineering: Rigorous and Agile Approaches, DOI [10 . 1109 / FormSERA.2012.6229788, DOI 10.1109/FORMSERA.2012.6229788]
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Kuhlmann Mirco, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P415, DOI 10.1007/978-3-642-33666-9_27
   Macedo N., 2016, IEEE T SOFTW ENG
   Maoz S, 2011, LECT NOTES COMPUT SC, V6981, P592, DOI 10.1007/978-3-642-24485-8_44
   Marinov D., 2005, THESIS
   Nelson Timothy, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P136, DOI 10.1007/978-3-642-30885-7_10
   Oetsch J., 2012, P KR 2012, P43
   Petre M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P722, DOI 10.1109/ICSE.2013.6606618
   Przigoda N, 2015, 2015 EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN (DSD), P359, DOI 10.1109/DSD.2015.85
   Queralt A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089123
   Queralt A, 2012, DATA KNOWL ENG, V73, P1, DOI 10.1016/j.datak.2011.09.004
   Rosner Nicolas, 2010, Abstract State Machines, Alloy, B and Z. Proceedings Second International Conference, ABZ 2010, P396, DOI 10.1007/978-3-642-11811-1_33
   Rosner N, 2013, IEEE INT CONF AUTOM, P147, DOI 10.1109/ASE.2013.6693075
   Seiter J, 2013, DES AUT TEST EUROPE, P1189
   Shaikh A., 2010, Proceedings of the IEEE/ACM international conference on Automated Software Engineering, P185, DOI DOI 10.1145/1858996.1859038
   Soeken M., 2011, P 8 INT WORKSH MOD D
   Soeken M, 2010, DES AUT TEST EUROPE, P1341
   Torlak E, 2013, MATH STRUCT COMP SCI, V23, P915, DOI 10.1017/S0960129512000291
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   VANHENTENRYCK P, 1992, ARTIF INTELL, V57, P291, DOI 10.1016/0004-3702(92)90020-X
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Yu F, 2007, PROCEEDINGS OF THE 26TH CHINESE CONTROL CONFERENCE, VOL 4, P331, DOI 10.1145/1287624.1287671
NR 51
TC 12
Z9 12
U1 1
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2019
VL 45
IS 4
BP 412
EP 426
DI 10.1109/TSE.2017.2777830
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HU4MK
UT WOS:000465248900005
OA Green Published
DA 2024-07-18
ER

PT J
AU Upadhyaya, G
   Rajan, H
AF Upadhyaya, Ganesha
   Rajan, Hridesh
TI On Accelerating Source Code Analysis at Massive Scale
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Source code analysis; mining software repositories; ultra-large-scale
   mining; data-driven software engineering
ID POINTS-TO ANALYSIS
AB Encouraged by the success of data-driven software engineering (SE) techniques that have found numerous applications e.g., in defect prediction, specification inference, the demand for mining and analyzing source code repositories at scale has significantly increased. However, analyzing source code at scale remains expensive to the extent that data-driven solutions to certain SE problems are beyond our reach today. Extant techniques have focused on leveraging distributed computing to solve this problem, but with a concomitant increase in computational resource needs. This work proposes a technique that reduces the amount of computation performed by the ultra-large-scale source code mining task, especially those that make use of control and data flow analyses. Our key idea is to analyze the mining task to identify and remove the irrelevant portions of the source code, prior to running the mining task. We show a realization of our insight for mining and analyzing massive collections of control flow graphs of source codes. Our evaluation using 16 classical control-/data-flow analyses that are typical components of mining tasks and 7 Million CFGs shows that our technique can achieve on average a 40 percent reduction in the task computation time. Our case studies demonstrates the applicability of our technique to massive scale source code mining tasks.
C1 [Upadhyaya, Ganesha; Rajan, Hridesh] Iowa State Univ, Dept Comp Sci, Ames, IA 50011 USA.
C3 Iowa State University
RP Upadhyaya, G (corresponding author), Iowa State Univ, Dept Comp Sci, Ames, IA 50011 USA.
EM ganeshau@iastate.edu; hridesh@iastate.edu
RI ; Upadhyaya, Ganesha/A-3036-2019
OI Rajan, Hridesh/0000-0002-9410-9562; Upadhyaya,
   Ganesha/0000-0003-0764-2578
FU US National Science Foundation (NSF) [CCF-15-18789, CCF-15-12947,
   CCF-14-23370]
FX This work was supported in part by the US National Science Foundation
   (NSF) under grants CCF-15-18789, CCF-15-12947, and CCF-14-23370. The
   views expressed in this work are those of the authors and do not
   necessarily reflect the official policy or position of the US National
   Science Foundation. The authors would like to thank the anonymous
   reviewers of TSE, ESEC/FSE 2017, and Dr. Wei Le for constructive
   comments and suggestions for improving the manuscript.
CR Acharya Mithun, 2007, P 6 JOINT M EUROPEAN, P25, DOI [DOI 10.1145/1287624.1287630, 10.1145/1287624.1287630]
   Ali K, 2012, LECT NOTES COMPUT SC, V7313, P688, DOI 10.1007/978-3-642-31057-7_30
   Allen N, 2015, LECT NOTES COMPUT SC, V9031, P131, DOI 10.1007/978-3-662-46663-6_7
   [Anonymous], 2007, 6th joint meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), DOI DOI 10.1145/1287624.1287632
   Bajracharya S, 2014, SCI COMPUT PROGRAM, V79, P241, DOI 10.1016/j.scico.2012.04.008
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Ding S, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P74, DOI 10.1109/CSMR-WCRE.2014.6747227
   Diwan A, 1998, ACM SIGPLAN NOTICES, V33, P106, DOI 10.1145/277652.277670
   Dyer R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P779, DOI 10.1145/2568225.2568295
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Georges A, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P57
   Godefroid P, 2010, POPL'10: PROCEEDINGS OF THE 37TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P43, DOI 10.1145/1706299.1706307
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Nguyen HA, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P166, DOI 10.1145/2635868.2635924
   Kothari S, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P394, DOI 10.1145/2889160.2889192
   Kulkarni S, 2016, ACM SIGPLAN NOTICES, V51, P359, DOI 10.1145/3022671.2984023
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Livshits V.B., 2005, ESEC SIGSOFT FSE, P296, DOI [DOI 10.1145/1095430.1081754, DOI 10.1145/1081706.1081754]
   Lokuciejewski P, 2009, INT SYM CODE GENER, P136, DOI 10.1109/CGO.2009.17
   McMillan C, 2012, IEEE T SOFTWARE ENG, V38, P1069, DOI 10.1109/TSE.2011.84
   Rajan H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P579, DOI 10.1109/ICSE.2015.339
   Reps T., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P49, DOI 10.1145/199448.199462
   Rountev A, 2008, LECT NOTES COMPUT SC, V4959, P53
   Sharir M., 1978, 2 APPROACHES INTERPR
   Smaragdakis Y, 2013, ACM SIGPLAN NOTICES, V48, P253, DOI [10.1145/2509136.2509524, 10.1145/2544173.2509524]
   Snelting G, 2006, ACM T SOFTW ENG METH, V15, P410, DOI 10.1145/1178625.1178628
   Tamrawi A, 2016, ASIA PAC SOFWR ENG, P113, DOI [10.1109/APSEC.2016.33, 10.1109/APSEC.2016.026]
   Thummalapenta S, 2009, IEEE INT CONF AUTOM, P283, DOI 10.1109/ASE.2009.72
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Wu RX, 2016, ACM SIGPLAN NOTICES, V51, P678, DOI 10.1145/2914770.2837619
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Yan D., 2012, Proceedings of the ACM SIGPLAN International Workshop on State of the Art in Java Program analysis, P9
   Zhang Tianyi, 2018, P 40 INT C SOFTW ENG
NR 34
TC 5
Z9 7
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2018
VL 44
IS 7
BP 669
EP 688
DI 10.1109/TSE.2018.2828848
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GN3LJ
UT WOS:000438906900004
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Cuadrado, JS
   Guerra, E
   de Lara, J
AF Sanchez Cuadrado, Jesus
   Guerra, Esther
   de lara, Juan
TI Static Analysis of Model Transformations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Model-driven engineering; model transformation; ATL; static analysis;
   model finders; verification and testing
ID ATL
AB Model transformations are central to Model-Driven Engineering (MDE), where they are used to transform models between different languages; to refactor and simulate models; or to generate code from models. Thus, given their prominent role in MDE, practical methods helping in detecting errors in transformations and automate their verification are needed. In this paper, we present a method for the static analysis of ATL model transformations. The method aims at discovering typing and rule errors, like unresolved bindings, uninitialized features or rule conflicts. It relies on static analysis and type inference, and uses constraint solving to assert whether a source model triggering the execution of a given problematic statement can possibly exist. Our method is supported by a tool that integrates seamlessly with the ATL development environment. To evaluate the usefulness of our method, we have used it to analyse a public repository of ATL transformations. The high number of errors discovered shows that static analysis of ATL transformations is needed in practice. Moreover, we have measured the precision and recall of the method by considering a synthetic set of transformations obtained by mutation techniques, and comparing with random testing. The experiment shows good overall results in terms of false positives and negatives.
C1 [Sanchez Cuadrado, Jesus] Univ Murcia, Dept Languages & Syst, E-30100 Murcia, Spain.
   [Guerra, Esther; de lara, Juan] Univ Autonoma Madrid, Dept Comp Sci, E-28049 Madrid, Spain.
C3 University of Murcia; Autonomous University of Madrid
RP Cuadrado, JS (corresponding author), Univ Murcia, Dept Languages & Syst, E-30100 Murcia, Spain.
EM jesusc@um.es; esther.guerra@uam.es; juan.delara@uam.es
RI de Lara, Juan/B-5422-2014; Guerra, Esther/B-4977-2014; Sanchez Cuadrado,
   Jesus/L-2365-2013
OI Guerra, Esther/0000-0002-2818-2278; Sanchez Cuadrado,
   Jesus/0000-0001-9755-5616
FU Spanish MINECO [TIN2014-52129-R, TIN2015-73968-JIN]; R&D programme of
   the Madrid Region [S2013/ICE-3006]
FX This work was supported by the Spanish MINECO through grants
   TIN2014-52129-R and TIN2015-73968-JIN (AEI/FEDER/UE), and the R&D
   programme of the Madrid Region (S2013/ICE-3006). We are grateful to the
   referees for their accurate comments.
CR Ab Rahim L, 2015, SOFTW SYST MODEL, V14, P1003, DOI 10.1007/s10270-013-0358-0
   Agesen O, 1995, LECT NOTES COMPUT SC, V952, P2
   Amrani M, 2015, J OBJECT TECHNOL, V14, DOI 10.5381/jot.2015.14.1.a3
   Andoni A., 2003, MITLCSTR921 CSAIL
   [Anonymous], 2013, ELECT COMMUNICATIONS
   [Anonymous], THESIS
   [Anonymous], JPL
   Barroca B, 2011, LECT NOTES COMPUT SC, V6563, P296, DOI 10.1007/978-3-642-19440-5_19
   Baudry B, 2010, COMMUN ACM, V53, P139, DOI 10.1145/1743546.1743583
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4199, P440
   Bocic I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P620, DOI 10.1145/2568225.2568281
   Burgueño L, 2015, IEEE T SOFTWARE ENG, V41, P490, DOI 10.1109/TSE.2014.2375201
   Buttner Fabian, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P432, DOI 10.1007/978-3-642-33666-9_28
   Buttner F., 2012, P 14 INT C FORMAL EN, V7635, P198
   Cabot J, 2014, J SYST SOFTWARE, V93, P1, DOI 10.1016/j.jss.2014.03.023
   Cabot J, 2010, J SYST SOFTWARE, V83, P283, DOI 10.1016/j.jss.2009.08.012
   Calegari D, 2011, LECT NOTES COMPUT SC, V6527, P112, DOI 10.1007/978-3-642-19829-8_8
   Chugh R, 2012, ACM SIGPLAN NOTICES, V47, P231, DOI 10.1145/2103621.2103686
   Cuadrado J. S., 2015, P 15 INT WORKSH TEXT, P73
   Cuadrado J. S., 2016, SOFTW SYST MODEL, P1
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Dayal U, 1996, WORK COMP, P3
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Fleurey F, 2009, SOFTW SYST MODEL, V8, P185, DOI 10.1007/s10270-007-0074-8
   Gonzalez Carlos A., 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P449, DOI 10.1007/978-3-642-33666-9_29
   Guerra E, 2015, SOFTW SYST MODEL, V14, P623, DOI 10.1007/s10270-013-0369-x
   Jackson D, 1996, IEEE T SOFTWARE ENG, V22, P484, DOI 10.1145/226295.226322
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jézéquel JM, 2011, LECT NOTES COMPUT SC, V6491, P201, DOI 10.1007/978-3-642-18023-1_5
   Jouault F., 2006, KM3 DSL METAMODEL SP, P171
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kuhlmann M, 2011, LECT NOTES COMPUT SC, V6705, P290, DOI 10.1007/978-3-642-21952-8_21
   Kuster J. M., 2006, Models in Software Engineering. Workshops and Symposia at MoDELS 2006. Reports and Revised Selected Papers (Lecture Notes in Computer Science Vol.4364), P193
   Larsen L, 1996, PROC INT CONF SOFTW, P495, DOI 10.1109/ICSE.1996.493444
   Lawley M., 2005, Satellite Events at the MoDELS 2005 Conference. MoDELS 2005 International Workshops. Doctoral Symposium, Educators Symposium. Revised Selected Papers (Lecture Notes in Computer Science Vol. 3844), P139
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Mottu J-M, 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P291, DOI 10.1109/ISSRE.2012.7
   Muslu K, 2015, IEEE T SOFTWARE ENG, V41, P745, DOI 10.1109/TSE.2015.2417161
   Oakes BJ, 2018, SOFTW SYST MODEL, V17, P815, DOI 10.1007/s10270-016-0548-7
   OMG, 2014, OCL 2 4 SPEC
   Rentschler A., 2013, P MODELS 13 DEM SESS, V1115, P36
   REWERSE working group I1, 2006, R2ML WEB PAG
   Ribaric M, 2008, LECT NOTES COMPUT SC, V5235, P377, DOI 10.1007/978-3-540-88643-3_8
   Richa E, 2015, LECT NOTES COMPUT SC, V9152, P183, DOI 10.1007/978-3-319-21155-8_14
   Sánchez Cuadrado J, 2006, LECT NOTES COMPUT SC, V4066, P158
   Cuadrado JS, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P146, DOI 10.1109/MODELS.2015.7338245
   Cuadrado JS, 2014, PROC INT SYMP SOFTW, P34, DOI 10.1109/ISSRE.2014.10
   Cuadrado JS, 2009, LECT NOTES COMPUT SC, V5421, P273, DOI 10.1007/978-3-642-01648-6_29
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Seki M., 2005, THE DRUBY BOOK
   Selim G.M., 2012, Proceedings of the First Workshop on the Analysis of Model Transformations, P21
   Sen Sagar, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P24, DOI 10.1007/978-3-642-30476-7_2
   Sen S, 2009, LECT NOTES COMPUT SC, V5563, P148, DOI 10.1007/978-3-642-02408-5_11
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Siek J, 2007, LECT NOTES COMPUT SC, V4609, P2
   Snelting G, 2006, ACM T SOFTW ENG METH, V15, P410, DOI 10.1145/1178625.1178628
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Ujhelyi Zoltan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P1, DOI 10.1109/ICST.2012.80
   Ujhelyi Z., 2011, ELECT COMMUN EASST, V38, P1
   Vallecillo Antonio, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P399, DOI 10.1007/978-3-642-30982-3_11
   van Amstel Marcel F., 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P108, DOI 10.1007/978-3-642-21732-6_8
   Vieira A., 2011, P 3 INT WORKSH MOD T, P75
   W3C, 2007, WSDL 2 0 SPEC
   Wagelaar D, 2010, SOFTW SYST MODEL, V9, P285, DOI 10.1007/s10270-009-0134-3
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
NR 69
TC 44
Z9 46
U1 2
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2017
VL 43
IS 9
BP 868
EP 897
DI 10.1109/TSE.2016.2635137
PG 30
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FH6TE
UT WOS:000411309800004
DA 2024-07-18
ER

PT J
AU Caporuscio, M
   Grassi, V
   Marzolla, M
   Mirandola, R
AF Caporuscio, Mauro
   Grassi, Vincenzo
   Marzolla, Moreno
   Mirandola, Raffaela
TI GOPRIME: A Fully Decentralized Middleware for Utility-Aware Service
   Assembly
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Service-oriented architecture; pervasive computing; runtime adaptation;
   quality of service; gossip protocol
AB Modern applications, e.g., for pervasive computing scenarios, are increasingly reliant on systems built from multiple distributed components, which must be suitably composed to meet some specified functional and non-functional requirements. A key challenge is how to efficiently and effectively manage such complex systems. The use of self-management capabilities has been suggested as a possible way to address this challenge. To cope with the scalability and robustness issues of large distributed systems, self-management should ideally be architected in a decentralized way, where the overall system behavior emerges from local decisions and interactions. Within this context, we propose GOPRIME, a fully decentralized middleware solution for the adaptive self-assembly of distributed services. The GOPRIME goal is to build and maintain an assembly of services that, besides functional requirements, fulfils also global quality-of-service and structural requirements. The key aspect of GOPRIME is the use of a gossip protocol to achieve decentralized information dissemination and decision making. To show the validity of our approach, we present results from the experimentation of a prototype implementation of GOPRIME in a mobile health application, and an extensive set of simulation experiments that assess the effectiveness of GOPRIME in terms of scalability, robustness and convergence speed.
C1 [Caporuscio, Mauro] Linnaeus Univ, Dept Comp Sci, Vaxjo, Sweden.
   [Grassi, Vincenzo] Univ Roma Tor Vergata, Informat Sistemi & Prod, Rome, Italy.
   [Marzolla, Moreno] Univ Bologna, Dipartimento Informat Sci & Ingn, Bologna, Italy.
   [Mirandola, Raffaela] Politecn Milan, Dipartimento Elettron Informaz & Bioingn, I-20133 Milan, Italy.
C3 Linnaeus University; University of Rome Tor Vergata; University of
   Bologna; Polytechnic University of Milan
RP Caporuscio, M (corresponding author), Linnaeus Univ, Dept Comp Sci, Vaxjo, Sweden.; Grassi, V (corresponding author), Univ Roma Tor Vergata, Informat Sistemi & Prod, Rome, Italy.; Marzolla, M (corresponding author), Univ Bologna, Dipartimento Informat Sci & Ingn, Bologna, Italy.; Mirandola, R (corresponding author), Politecn Milan, Dipartimento Elettron Informaz & Bioingn, I-20133 Milan, Italy.
EM mauro.caporuscio@lnu.se; vgrassi@disp.uniroma2.it;
   moreno.marzolla@unibo.it; raffaela.mirandola@polimi.it
RI Caporuscio, Mauro/AAB-1320-2021
OI Caporuscio, Mauro/0000-0001-6981-0966; Marzolla,
   Moreno/0000-0002-2151-5287; MIRANDOLA, RAFFAELA/0000-0003-3154-2438
CR [Anonymous], 1995, FDN SOFTWARE MEASURE
   Caporuscio M, 2015, J SYST SOFTWARE, V106, P9, DOI 10.1016/j.jss.2015.03.102
   Cardellini V, 2012, IEEE T SOFTWARE ENG, V38, P1138, DOI 10.1109/TSE.2011.68
   Cardoso J., 2007, Software Process Improvement and Practice, V12, P35, DOI 10.1002/spip.302
   Cheng B. H. C., 2008, DAGSTUHL SEMI P, V08031, P1
   DannyWeyns Bradley, 2013, Revised Selected and Invited Papers, P76, DOI [10.1007/978-3-642-35813-5_4, DOI 10.1007/978-3-642-35813-5_4]
   Ehrgott M., 2006, MULTICRITERIA OPTIMI
   El Falou Mohamad, 2010, 2010 IEEE International Conference on Web Services (ICWS), P337, DOI 10.1109/ICWS.2010.13
   Erl T, 2005, SERVICE ORIENTED ARC
   Georgiadis I., 2002, P 1 WORKSHOP SELF HE, P33, DOI DOI 10.1145/582128.582135.
   Grassi V, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P53, DOI 10.1109/SEAMS.2013.6595492
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Huebscher MC, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1380584.1380585
   Hwang CL, 1981, Multiple attribute decision making: Methods and applications a state-ofthe-art survey, DOI [DOI 10.1007/978-3-642-48318-93, 10.1007/978-3-642-48318-93, DOI 10.1007/978-3-642-48318-9]
   Jelasity M, 2005, ACM T COMPUT SYST, V23, P219, DOI 10.1145/1082469.1082470
   Jelasity M, 2007, ACM T COMPUT SYST, V25, DOI 10.1145/1275517.1275520
   Kalasapur S, 2007, IEEE T PARALL DISTR, V18, P907, DOI 10.1109/TPDS.2007.1039
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kota R, 2012, ACM T AUTON ADAP SYS, V7, DOI 10.1145/2168260.2168261
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Montresor A, 2009, IEEE INT CONF PEER, P99, DOI 10.1109/P2P.2009.5284506
   Paolucci M, 2002, LECT NOTES COMPUT SC, V2342, P333
   Roman Gruia-Catalin., 2000, P 22 INT C SOFTWARE, P241
   Schuhmann S, 2013, ACM T AUTON ADAP SYS, V8, DOI 10.1145/2491465.2491469
   Shah D., 2009, FDN TRENDS NETWORKIN
   Sykes D, 2011, P 6 INT S SOFTW ENG, P100, DOI [10.1145/1988008.1988023, DOI 10.1145/1988008.1988023]
   Trivedi KishorS., 2002, PROBABILITY STAT REL, V2nd
   Weyns D., 2010, ACM T AUTON ADAP SYS, V5
   Weyns D., 2010, Proceedings of the 2010 ICSE Workshop on Software Engineering for Adaptive and Self-Managing Systems (SEAMS), P84, DOI [DOI 10.1145/1808984.1808994, 10.1145/1808984.1808994]
   Weyns D, 2010, ACM T AUTON ADAP SYS, V5, DOI 10.1145/1867713.1867717
NR 30
TC 14
Z9 14
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2016
VL 42
IS 2
BP 136
EP 152
DI 10.1109/TSE.2015.2476797
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DE8GD
UT WOS:000370872900003
OA Green Published
DA 2024-07-18
ER

PT J
AU Blincoe, K
   Valetto, G
   Damian, D
AF Blincoe, Kelly
   Valetto, Giuseppe
   Damian, Daniela
TI Facilitating Coordination between Software Developers: A Study and
   Techniques for Timely and Efficient Recommendations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer-supported cooperative work; human factors in software design;
   management; metrics/measurement; productivity; programming teams
ID SYSTEMS; COMMUNICATION
AB When software developers fail to coordinate, build failures, duplication of work, schedule slips and software defects can result. However, developers are often unaware of when they need to coordinate, and existing methods and tools that help make developers aware of their coordination needs do not provide timely or efficient recommendations. We describe our techniques to identify timely and efficient coordination recommendations, which we developed and evaluated in a study of coordination needs in the Mylyn software project. We describe how data obtained from tools that capture developer actions within their Integrated Development Environment (IDE) as they occur can be used to timely identify coordination needs; we also describe how properties of tasks coupled with machine learning can focus coordination recommendations to those that are more critical to the developers to reduce information overload and provide more efficient recommendations. We motivate our techniques through developer interviews and report on our quantitative analysis of coordination needs in the Mylyn project. Our results suggest that by leveraging IDE logging facilities, properties of tasks and machine learning techniques awareness tools could make developers aware of critical coordination needs in a timely way. We conclude by discussing implications for software engineering research and tool design.
C1 [Blincoe, Kelly; Damian, Daniela] Univ Victoria, Software Engn Global Interact Lab, Victoria, BC, Canada.
   [Valetto, Giuseppe] Fdn Bruno Kessler, Trento, Italy.
C3 University of Victoria; Fondazione Bruno Kessler
RP Blincoe, K (corresponding author), Univ Victoria, Software Engn Global Interact Lab, Victoria, BC, Canada.
EM kblincoe@acm.org; valetto@fbk.eu; danielad@uvic.ca
RI Blincoe, Kelly/AAI-6285-2020
OI Blincoe, Kelly/0000-0003-4092-9706; Valetto,
   Giuseppe/0000-0001-7254-1963
FU US National Science Foundation (NSF) [VOSS OCI-1221254]; NECSIS Grant
FX The authors thank Sean Goggins and Nora McDonald for their manual coding
   efforts and the developers who dedicated time for interviews. This work
   was supported in part by the US National Science Foundation (NSF) grant
   VOSS OCI-1221254 and NECSIS Grant.
CR [Anonymous], 2006, M C J, DOI DOI 10.1108/1463715981020011145
   [Anonymous], P 1 INT WORKSH SOC C
   [Anonymous], 2000, DESIGN RULES POWER M
   [Anonymous], ACM T INTELLIGENT SY
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Begel A., 2010, Software Engineering, 2010 ACM/IEEE 32nd International Conference on, V1, P125
   Bharadwaj V., 2005, THESIS W VIRGINIA U
   Biehl JT, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1313
   Blincoe K., 2013, Proc. Int'l Workshop Social Software Eng. (SSE 13), P1
   Blincoe K., 2013, Proc. 9th Joint Meeting on Foundations of Software Engineering (ESEC/FSE 13), P213, DOI DOI 10.1145/2491411.2491440
   Blincoe K., 2012, Proc. Conf. Computer Supported Cooperative Work (CSCW 12), P1351
   Bolici F. J., 2009, WORKSH SOC C
   Brooks Frederick P., 1995, The mythical man-month
   Cataldo M., 2012, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, P3081, DOI DOI 10.1145/2207676.2208722
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   CONWAY ME, 1968, DATAMATION, V14, P28
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   COVER TM, 1967, IEEE T INFORM THEORY, V13, P21, DOI 10.1109/TIT.1967.1053964
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Damian D, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P81
   de Souza C.R., 2012, Journal of the Brazilian Computer Society, V18, P201
   de Souza C. R. B., 2004, Software Engineering Notes, V29, P221, DOI 10.1145/1041685.1029925
   de Souza CRB, 2011, IEEE T SOFTWARE ENG, V37, P325, DOI 10.1109/TSE.2011.19
   de Souza CRB, 2007, GROUP'07: PROCEEDINGS OF THE 2007 INTERNATIONAL ACM CONFERENCE ON SUPPORTING GROUP WORK, P147
   de Souza CRB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1145/1368088.1368122
   Dewan P, 2007, ECSCW 2007: PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK, P159, DOI 10.1007/978-1-84800-031-5_9
   Di Penta Massimiliano, 2007, 2007 IEEE International Conference on Software Maintenance, P315, DOI 10.1109/ICSM.2007.4362644
   Dourish P., 1992, CSCW '92. Sharing Perspectives. Proceedings of the Conference on Computer-Supported Cooperative Work, P107, DOI 10.1145/143457.143468
   Fitzpatrick Geraldine., 2006, CSCW'06: Proceedings of the 2006 20th anniversary conference on Computer supported cooperative work, P49
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Goggins SP, 2013, USER MODEL USER-ADAP, V23, P345, DOI 10.1007/s11257-012-9122-3
   Grinter RE, 1999, P 1999 ACM INT C SUP, P306, DOI DOI 10.1145/320297.320333
   Gutwin C., 2002, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V11, P411, DOI 10.1023/A:1021271517844
   Gutwin C, 1996, Proceedings of Human Factors in Computing Systems (CHI), P208
   Guzzi A., 2010, Proceedings of the International Conference on Software Maintenance, ICSM '10, P1
   Herbsleb J.D., 2006, Proc. Int'l Conf. Information Systems (ICIS 06), P38
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Herbsleb JD, 1999, IEEE SOFTWARE, V16, P63, DOI 10.1109/52.795103
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   HILTZ SR, 1985, COMMUN ACM, V28, P680, DOI 10.1145/3894.3895
   Jiang B, 2008, J COMPUT, V3, P101
   Kasi BK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P732, DOI 10.1109/ICSE.2013.6606619
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Kotsiantis SB, 2007, INFORM-J COMPUT INFO, V31, P249
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Krippendorff K., 2012, Content analysis
   Kwan I., 2011, P INT WORKSH SOC SOF, P2
   Kwan I., 2009, WORKSH SOCIOTECHNICA, P1
   Kwan I, 2012, IEEE SOFTWARE, V29, P90, DOI 10.1109/MS.2012.3
   Kwan I, 2011, IEEE T SOFTWARE ENG, V37, P307, DOI 10.1109/TSE.2011.29
   Lotufo R, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P430, DOI 10.1109/ICSM.2012.6405303
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   Margaret-Anne D.Storey., 2005, SOFTVIS, P193, DOI DOI 10.1145/1056018.1056045
   Markopoulos Panos, 2005, CHI 05 EXTENDED ABST, P2128, DOI [10.1145/1056808.1057121, DOI 10.1145/1056808.1057121]
   Minto Shawn, 2007, 4 INT WORKSH MIN SOF, P5
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   Murphy G.C., 2010, Proc. 2nd Int'l Workshop Recommendation Systems for Software Eng. (RSSE 10), P57
   Omoronyia I, 2009, COMPUT SUPP COOP W J, V18, P509, DOI 10.1007/s10606-009-9104-0
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Rastkar Sarah, 2010, P 32 ACM IEEE INT C, V1, P505, DOI DOI 10.1145/1806799.1806872
   Sarma A., 2008, 16th ACM SIGSOFT International Symposium on Foundation of Software engineering, P113, DOI DOI 10.1145/1453101.1453118
   Sarma A, 2012, IEEE T SOFTWARE ENG, V38, P889, DOI 10.1109/TSE.2011.64
   Sarma A, 2009, PROC INT CONF SOFTW, P23, DOI 10.1109/ICSE.2009.5070505
   Sawyer S, 2004, COMMUN ACM, V47, P95, DOI 10.1145/1035134.1035140
   Scacchi W., 2007, Advances in Computers, V69, P243, DOI [DOI 10.1016/S0065-2458(06)69005-0, 10.1016/S0065-2458(06)69005-0]
   Sosa ME, 2004, MANAGE SCI, V50, P1674, DOI 10.1287/mnsc.1040.0289
   Sullivan Patrick, 2004, Science & Technology Libraries, V25, P109, DOI 10.1300/J122v25n01_08
   Wong S, 2009, IEEE INT CONF AUTOM, P197, DOI 10.1109/ASE.2009.53
NR 70
TC 14
Z9 15
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2015
VL 41
IS 10
BP 969
EP 985
DI 10.1109/TSE.2015.2431680
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CU0VR
UT WOS:000363237500002
DA 2024-07-18
ER

PT J
AU Brun, Y
   Bang, JY
   Edwards, G
   Medvidovic, N
AF Brun, Yuriy
   Bang, Jae Young
   Edwards, George
   Medvidovic, Nenad
TI Self-Adapting Reliability in Distributed Software Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Redundancy; reliability; fault-tolerance; iterative redundancy;
   self-adaptation; optimal redundancy
ID TECHNOLOGY; TOLERANCE
AB Developing modern distributed software systems is difficult in part because they have little control over the environments in which they execute. For example, hardware and software resources on which these systems rely may fail or become compromised and malicious. Redundancy can help manage such failures and compromises, but when faced with dynamic, unpredictable resources and attackers, the system reliability can still fluctuate greatly. Empowering the system with self-adaptive and self-managing reliability facilities can significantly improve the quality of the software system and reduce reliance on the developer predicting all possible failure conditions. We present iterative redundancy, a novel approach to improving software system reliability by automatically injecting redundancy into the system's deployment. Iterative redundancy self-adapts in three ways: (1) by automatically detecting when the resource reliability drops, (2) by identifying unlucky parts of the computation that happen to deploy on disproportionately many compromised resources, and (3) by not relying on a priori estimates of resource reliability. Further, iterative redundancy is theoretically optimal in its resource use: Given a set of resources, iterative redundancy guarantees to use those resources to produce the most reliable version of that software system possible; likewise, given a desired increase in the system's reliability, iterative redundancy guarantees achieving that reliability using the least resources possible. Iterative redundancy handles even the Byzantine threat model, in which compromised resources collude to attack the system. We evaluate iterative redundancy in three ways. First, we formally prove its self-adaptation, efficiency, and optimality properties. Second, we simulate it at scale using discrete event simulation. Finally, we modify the existing, open-source, volunteer-computing BOINC software system and deploy it on the globally-distributed PlanetLab testbed network to empirically evaluate that iterative redundancy is self-adaptive and more efficient than existing techniques.
C1 [Brun, Yuriy] Univ Massachusetts, Sch Comp Sci, Amherst, MA 01003 USA.
   [Bang, Jae Young; Edwards, George; Medvidovic, Nenad] Univ So Calif, Dept Comp Sci, Los Angeles, CA 90089 USA.
C3 University of Massachusetts System; University of Massachusetts Amherst;
   University of Southern California
RP Brun, Y (corresponding author), Univ Massachusetts, Sch Comp Sci, Amherst, MA 01003 USA.
EM brun@cs.umass.edu; jaeyounb@usc.edu; gedwards@usc.edu; neno@usc.edu
RI Edwards, George/HGB-4007-2022
OI Brun, Yuriy/0000-0003-3027-7986
FU US Defense Advanced Research Projects Agency (DARPA) [N66001-11-C-4021];
   IARPA [N66001-13-1-2006]; National Science Foundation [CCF-1117593,
   CCF-1218115, CCF-1321141]; Infosys Ltd.
FX This work has been supported by the US Defense Advanced Research
   Projects Agency (DARPA) under Contract No. N66001-11-C-4021, IARPA under
   Contract No. N66001-13-1-2006, and the National Science Foundation under
   award numbers CCF-1117593, CCF-1218115, and CCF-1321141. The work has
   also been supported in part by Infosys Ltd. Yuriy Brun is the
   corresponding author.
CR Abd-El-Malek M., 2005, ACM SIGOPS Operating Systems Review, P59, DOI DOI 10.1145/1095810.1095817
   Agbaria A, 2005, 25TH IEEE INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOPS, PROCEEDINGS, P137, DOI 10.1109/ICDCSW.2005.21
   Aguilera MK, 2006, I C DEPEND SYS NETWO, P147, DOI 10.1109/DSN.2006.22
   Almeida A. D. L., 2007, LAT AM AUT COMP S PE
   Anderson DP, 2004, FIFTH IEEE/ACM INTERNATIONAL WORKSHOP ON GRID COMPUTING, PROCEEDINGS, P4, DOI 10.1109/GRID.2004.14
   Anderson DP, 2002, COMMUN ACM, V45, P56, DOI 10.1145/581571.581573
   Andrade Jorge, 2006, In Silico Biol, V6, P495
   [Anonymous], BERK OP INFR NETW CO
   [Anonymous], 1994, Fault Tolerance in Distributed Systems
   [Anonymous], 1971, Fault Detection in Digital Circuits
   [Anonymous], INT WORKSH ENG FAULT
   [Anonymous], 2014, P SIGCHI
   Barowy DW, 2014, ACM SIGPLAN NOTICES, V49, P507, DOI [10.1145/2714064.2660207, 10.1145/2660193.2660207]
   Barowy DW, 2012, ACM SIGPLAN NOTICES, V47, P639, DOI 10.1145/2398857.2384663
   Baset S., 2006, IEEE INT C COMPUTER, P1, DOI DOI 10.1109/INFOCOM.2006.312
   Bernstein Michael S., 2010, P 23ND ANN ACM S USE, P313, DOI 10.1145/1866029.1866078
   Bondavalli A, 2002, J SYST ARCHITECT, V47, P763, DOI 10.1016/S1383-7621(01)00029-7
   BONDAVALLI A, 1993, COMPUT SYST SCI ENG, V8, P234
   Brun Y., 2012, 2012 IEEE 5th International Conference on Cloud Computing (CLOUD), P285, DOI 10.1109/CLOUD.2012.126
   Brun Y, 2013, IEEE T DEPEND SECURE, V10, P225, DOI 10.1109/TDSC.2013.13
   Brun Y, 2011, INT CON DISTR COMP S, P665, DOI 10.1109/ICDCS.2011.25
   Brun Y, 2009, THEOR COMPUT SCI, V410, P1461, DOI 10.1016/j.tcs.2008.12.008
   Budhiraja N., 1993, DISTRIBUTED SYSTEMS, V2, P199
   Buyya R, 2005, CONCURR COMP-PRACT E, V17, P1783, DOI 10.1002/cpe.888
   Chakravarti AJ, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P96, DOI 10.1109/ICAC.2004.1301352
   Clarke Ian, 2001, Freenet: A Distributed Anonymous Information Storage and Retrieval System, P46, DOI [DOI 10.1007/3-540-44702-4, DOI 10.1007/3-540-44702-4_4, 10.1007/3-540-44702-4_4]
   Dean J., 2004, S OP SYST DES IMPL S
   Duerig J., 2006, P 5 WORKSH HOT TOP N, P103
   Edwards G., 2009, USCCSSE2009511
   Ernst MD, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1092, DOI 10.1145/2660267.2660343
   Hwang S., 2003, J GRID COMPUT, V1, P251, DOI DOI 10.1023/B:GRID.0000035187.54694.75
   Jeffery SR, 2008, VLDB J, V17, P265, DOI 10.1007/s00778-007-0084-8
   Jin H, 2003, J COMPUT SCI TECH-CH, V18, P423, DOI 10.1007/BF02948916
   Kimoto T., 1990, IJCNN International Joint Conference on Neural Networks (Cat. No.90CH2879-5), P1, DOI 10.1109/IJCNN.1990.137535
   KNIGHT JC, 1986, IEEE T SOFTWARE ENG, V12, P96, DOI 10.1109/TSE.1986.6312924
   Koren Israel, 2007, Fault-Tolerant Systems
   Korpela E., 1996, IEEE MULTIMEDIA, V3, P78
   Lamanna M, 2004, NUCL INSTRUM METH A, V534, P1, DOI 10.1016/j.nima.2004.07.049
   LAMPORT L, 1982, ACM T PROGR LANG SYS, V4, P382, DOI 10.1145/357172.357176
   Laney C. B., 1998, Computational Gasdynamics, V1
   Larson StefanM., 2002, Folding@ Home and Genome@ Home: Using distributed computing to tackle previously intractable problems in computational biology
   LONG D, 1995, 14TH SYMPOSIUM ON RELIABLE DISTRIBUTED SYSTEMS, PROCEEDINGS, P2, DOI 10.1109/RELDIS.1995.518718
   Medvidovic Nenad, 2011, IEEE COMPUT, V44, P61
   NGUYENTUONG A, 2000, THESIS U VIRGINIA CH
   Peterson L, 2003, ACM SIGCOMM COMP COM, V33, P59, DOI 10.1145/774763.774772
   Priya SB, 2007, SIXTH INTERNATIONAL CONFERENCE ON GRID AND COOPERATIVE COMPUTING, PROCEEDINGS, P676, DOI 10.1109/GCC.2007.67
   Sarmenta LFG, 2002, FUTURE GENER COMP SY, V18, P561, DOI 10.1016/S0167-739X(01)00077-2
   SCHNEIDER FB, 1990, COMPUT SURV, V22, P299, DOI 10.1145/98163.98167
   Setiawan A, 2004, LECT NOTES COMPUT SC, V3320, P872
   Sipser M., 2013, Introduction to the theory of computation, V3
   Wood T, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P123
NR 51
TC 10
Z9 10
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2015
VL 41
IS 8
BP 764
EP 780
DI 10.1109/TSE.2015.2412134
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CP0KI
UT WOS:000359563800003
DA 2024-07-18
ER

PT J
AU Maplesden, D
   Tempero, E
   Hosking, J
   Grundy, JC
AF Maplesden, David
   Tempero, Ewan
   Hosking, John
   Grundy, John C.
TI Performance Analysis for Object-Oriented Software: A Systematic Mapping
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Systematic review; survey; performance; object-oriented
AB Performance is a crucial attribute for most software, making performance analysis an important software engineering task. The difficulty is that modern applications are challenging to analyse for performance. Many profiling techniques used in real-world software development struggle to provide useful results when applied to large-scale object-oriented applications. There is a substantial body of research into software performance generally but currently there exists no survey of this research that would help identify approaches useful for object-oriented software. To provide such a review we performed a systematic mapping study of empirical performance analysis approaches that are applicable to object-oriented software. Using keyword searches against leading software engineering research databases and manual searches of relevant venues we identified over 5,000 related articles published since January 2000. From these we systematically selected 253 applicable articles and categorised them according to ten facets that capture the intent, implementation and evaluation of the approaches. Our mapping study results allow us to highlight the main contributions of the existing literature and identify areas where there are interesting opportunities. We also find that, despite the research including approaches specifically aimed at object-oriented software, there are significant challenges in providing actionable feedback on the performance of large-scale object-oriented applications.
C1 [Maplesden, David; Tempero, Ewan] Univ Auckland, Dept Comp Sci, Auckland 1142, New Zealand.
   [Hosking, John] Univ Auckland, Fac Sci, Auckland 1142, New Zealand.
   [Grundy, John C.] Swinburne Univ Technol, Fac Informat & Commun Technol, Hawthorn, Vic 3122, Australia.
C3 University of Auckland; University of Auckland; Swinburne University of
   Technology
RP Maplesden, D (corresponding author), Univ Auckland, Dept Comp Sci, Private Bag 92019, Auckland 1142, New Zealand.
EM dmap001@aucklanduni.ac.nz; e.tempero@cs.auckland.ac.nz;
   j.hosking@auckland.ac.nz; jgrundy@swin.edu.au
RI Grundy, John/AAF-1716-2019
OI Grundy, John/0000-0003-4928-7076
CR Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   D'Elia DC, 2011, ACM SIGPLAN NOTICES, V46, P516, DOI 10.1145/1993316.1993559
   Dufour Bruno, 2007, ACM SIGSOFT Int. Symp. Software Testing and Analysis, DOI [10.1145/1273463.1273480, DOI 10.1145/1273463.1273480]
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Kitchenham B., 2007, EBSE200701 KEEL U CO
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Larus J, 2009, COMMUN ACM, V52, P62, DOI 10.1145/1506409.1506425
   Mitchell N, 2006, LECT NOTES COMPUT SC, V4067, P429
   Mitchell N, 2010, IEEE SOFTWARE, V27, P56, DOI 10.1109/MS.2010.7
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Petersen K, 2011, INFORM SOFTWARE TECH, V53, P317, DOI 10.1016/j.infsof.2010.12.001
   Smith C.U., 1990, Performance engineering of software systems, VSeventh
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
   Xu Guoqing, 2010, P FSE SDP WORKSH FUT, P421
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 17
TC 25
Z9 25
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2015
VL 41
IS 7
BP 691
EP 710
DI 10.1109/TSE.2015.2396514
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CN2JO
UT WOS:000358247100004
DA 2024-07-18
ER

PT J
AU Henard, C
   Papadakis, M
   Perrouin, G
   Klein, J
   Heymans, P
   Le Traon, Y
AF Henard, Christopher
   Papadakis, Mike
   Perrouin, Gilles
   Klein, Jacques
   Heymans, Patrick
   Le Traon, Yves
TI Bypassing the Combinatorial Explosion: Using Similarity to Generate and
   Prioritize T-Wise Test Configurations for Software Product Lines
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software product lines; testing; T-wise Interactions; search-based
   approaches; prioritization; similarity
ID SEARCH
AB Large Software Product Lines (SPLs) are common in industry, thus introducing the need of practical solutions to test them. To this end, t-wise can help to drastically reduce the number of product configurations to test. Current t-wise approaches for SPLs are restricted to small values of t. In addition, these techniques fail at providing means to finely control the configuration process. In view of this, means for automatically generating and prioritizing product configurations for large SPLs are required. This paper proposes (a) a search-based approach capable of generating product configurations for large SPLs, forming a scalable and flexible alternative to current techniques and (b) prioritization algorithms for any set of product configurations. Both these techniques employ a similarity heuristic. The ability of the proposed techniques is assessed in an empirical study through a comparison with state of the art tools. The comparison focuses on both the product configuration generation and the prioritization aspects. The results demonstrate that existing t-wise tools and prioritization techniques fail to handle large SPLs. On the contrary, the proposed techniques are both effective and scalable. Additionally, the experiments show that the similarity heuristic can be used as a viable alternative to t-wise.
C1 [Henard, Christopher; Papadakis, Mike; Klein, Jacques; Le Traon, Yves] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, Luxembourg, Luxembourg.
   [Perrouin, Gilles; Heymans, Patrick] Univ Namur, Precise Res Ctr Software Engn, Namur, Belgium.
C3 University of Luxembourg; University of Namur
RP Henard, C (corresponding author), Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, Luxembourg, Luxembourg.
EM christopher.henard@uni.lu; mike.papadakis@uni.lu;
   gilles.perrouin@unamur.be; jacques.klein@uni.lu;
   patrick.heymans@unamur.be; yves.letraon@uni.lu
RI LE TRAON, Yves/T-2911-2019; Perrouin, Gilles/I-1621-2019
OI Perrouin, Gilles/0000-0002-8431-0377; Papadakis,
   Mike/0000-0003-1852-2547; Klein, Jacques/0000-0003-4052-475X; LE TRAON,
   Yves/0000-0002-1045-4861
CR Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   [Anonymous], 2013, P 17 INT SOFTW PROD, DOI [DOI 10.1145/2491627.2491635, 10.1145/2491627.2491635]
   [Anonymous], 2011, P 8 EUR SOFTW ENG C, DOI DOI 10.1145/2025113.2025144
   [Anonymous], 2010, Journal on Satisfiability, Boolean Modeling and Computation, DOI DOI 10.3233/SAT190075
   [Anonymous], 2012, P 6 INT WORKSH VAMOS
   [Anonymous], 2001, STAND SOFTW COMP TES
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P1088, DOI 10.1109/TSE.2011.85
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger Thorsten, 2013, 7 INT WORKSH VAR MOD, DOI DOI 10.1145/2430502.2430513
   Borazjany M. N., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P591, DOI 10.1109/ICST.2012.146
   Bryce R.C., 2007, WORKSHOP DOMAIN SPEC, P1
   Bryce RC, 2011, INT J SYST ASSUR ENG, V2, P126, DOI 10.1007/s13198-011-0067-4
   Bryce RC, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1082
   Calvagna A, 2008, LECT NOTES COMPUT SC, V4966, P66
   Classen A, 2008, LECT NOTES COMPUT SC, V4961, P16, DOI 10.1007/978-3-540-78743-3_2
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen M.B., 2007, P 2007 INT S SOFTW T, P129
   Cohen M.B., 2006, P ISSTA 2006 WORKSHO, P53, DOI DOI 10.1145/1147249.1147257
   Cohen MB, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P394, DOI 10.1109/ISSRE.2003.1251061
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Davril Jean-Marc., 2013, JOINT M EUR SOFTW EN, P290, DOI DOI 10.1145/2491411.2491455
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Droste S, 2002, THEOR COMPUT SCI, V276, P51, DOI 10.1016/S0304-3975(01)00182-7
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Ensan Faezeh, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P613, DOI 10.1007/978-3-642-31095-9_40
   Frankl PG, 1998, IEEE T SOFTWARE ENG, V24, P586, DOI 10.1109/32.707695
   Frisch AM, 2005, J AUTOM REASONING, V35, P143, DOI 10.1007/s10817-005-9011-0
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Grindal M, 2005, SOFTW TEST VERIF REL, V15, P167, DOI 10.1002/stvr.319
   Hemmati Hadi, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P141, DOI 10.1109/ISSRE.2010.9
   Hervieu A, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P120, DOI 10.1109/ISSRE.2011.31
   Jaccard P., 1901, B SOC VAUD SCI NAT, V37, P547, DOI DOI 10.5169/SEALS-266450
   Johansen Martin Fagereng, 2012, Testing Software and Systems. 24th IFIP WG 6.1 International Conference (ICTSS 2012). Proceedings, P39, DOI 10.1007/978-3-642-34691-0_5
   Johansen Martin Fagereng, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P269, DOI 10.1007/978-3-642-33666-9_18
   Johansen MF, 2011, LECT NOTES COMPUT SC, V6981, P638, DOI 10.1007/978-3-642-24485-8_47
   Johansen Martin Fagereng, 2012, P 16 INT SOFTWARE PR, P46, DOI [10.1145/2362536.2362547, DOI 10.1145/2362536.2362547]
   Kang Kyo C, 1990, Technical Report
   Kim C.H. P., 2011, Proceedings of the Tenth International Conference on Aspect-oriented Software Development, P57
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Kuhn Rick, 2008, IT Professional, V10, P19, DOI 10.1109/MITP.2008.54
   Lei Y, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P254, DOI 10.1109/HASE.1998.731623
   Marijan Dusica., 2013, Proceedings of the 17th International Software Product Line Conference. SPLC'13, P227, DOI DOI 10.1145/2491627.2491646
   McGregor J. D., 2007, CMUSEI2001TR022
   McGregor J. D., 2007, P 11 INT C SOFTW PRO, P59
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Oster S, 2010, LECT NOTES COMPUT SC, V6287, P196, DOI 10.1007/978-3-642-15579-6_14
   Perrouin Gilles, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P459, DOI 10.1109/ICST.2010.43
   Perrouin G, 2012, SOFTWARE QUAL J, V20, P605, DOI 10.1007/s11219-011-9160-9
   Petke Justyna, 2013, P ESEC FSE 2013, DOI [DOI 10.1145/2491411.2491436, 10.1145/2491411.2491436]
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Reisner E., 2010, P ACM IEEE INT C SOF, V1, P445, DOI DOI 10.1145/1806799.1806864
   Rubenstein D., 1997, P 10 FLAIRS, P386
   Runeson P., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P742, DOI 10.1109/ICST.2012.167
   Sampath Sreedevi, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P141, DOI 10.1109/ICST.2008.42
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   Song C, 2012, PROC INT CONF SOFTW, P903, DOI 10.1109/ICSE.2012.6227129
   Uzuncaova Engin, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P249, DOI 10.1109/ISSRE.2008.56
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P201
NR 64
TC 136
Z9 139
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2014
VL 40
IS 7
BP 650
EP 670
DI 10.1109/TSE.2014.2327020
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AM9HF
UT WOS:000340191000002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Misirli, AT
   Bener, AB
AF Misirli, Ayse Tosun
   Bener, Ayse Basar
TI Bayesian Networks For Evidence-Based Decision-Making in Software
   Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Evidence-based decision-making; Bayesian networks; Bayesian statistics;
   software reliability; software metrics; post-release defects
ID EVIDENCE-BASED MEDICINE; PREDICTION; MODEL
AB Recommendation systems in software engineering (SE) should be designed to integrate evidence into practitioners experience. Bayesian networks (BNs) provide a natural statistical framework for evidence-based decision-making by incorporating an integrated summary of the available evidence and associated uncertainty (of consequences). In this study, we follow the lead of computational biology and healthcare decision-making, and investigate the applications of BNs in SE in terms of 1) main software engineering challenges addressed, 2) techniques used to learn causal relationships among variables, 3) techniques used to infer the parameters, and 4) variable types used as BN nodes. We conduct a systematic mapping study to investigate each of these four facets and compare the current usage of BNs in SE with these two domains. Subsequently, we highlight the main limitations of the usage of BNs in SE and propose a Hybrid BN to improve evidence-based decision-making in SE. In two industrial cases, we build sample hybrid BNs and evaluate their performance. The results of our empirical analyses show that hybrid BNs are powerful frameworks that combine expert knowledge with quantitative data. As researchers in SE become more aware of the underlying dynamics of BNs, the proposed models will also advance and naturally contribute to evidence based-decision-making.
C1 [Misirli, Ayse Tosun] Univ Oulu, Dept Informat Proc Sci, SF-90100 Oulu, Finland.
   [Bener, Ayse Basar] Ryerson Univ, Mech & Ind Engn Dept, Toronto, ON, Canada.
C3 University of Oulu; Toronto Metropolitan University
RP Misirli, AT (corresponding author), Univ Oulu, Dept Informat Proc Sci, SF-90100 Oulu, Finland.
EM ayse.tosunmisirli@oulu.fi; ayse.bener@ryerson.ca
RI Basar, Ayse/ABF-9265-2020; Tosun, Ayse/B-4794-2014
OI Basar, Ayse/0000-0003-4934-8326; Tosun, Ayse/0000-0003-1859-7872
FU NSERC DG Grant [402003-2012]
FX This research was supported in part by NSERC DG Grant number
   402003-2012.
CR [Abran A. IEEE Computer Society IEEE Computer Society], 2004, GUIDE SOFTWARE ENG B
   Ammar H. H., 2012, INT C COMP INF TECHN, P24
   [Anonymous], 2010, AG BAYES NETW SIM SO
   [Anonymous], 1983, CHAPMAN HALL STAT SE
   [Anonymous], 1976, ICSE 76
   [Anonymous], 2006, INTRO COPULAS
   Ashby D, 2000, STAT MED, V19, P3291, DOI 10.1002/1097-0258(20001215)19:23<3291::AID-SIM627>3.0.CO;2-T
   Bai CG, 2005, J SYST SOFTWARE, V77, P103, DOI 10.1016/j.jss.2004.11.034
   Barry PS, 1999, UNCERTAINTY IN ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P41
   Beaver J. M., 2005, Fourth International Conference on Machine Learning and Applications
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Çaglayan B, 2009, 2009 ICSE WORKSHOP ON EMERGING TRENDS IN FREE-LIBRE-OPEN SOURCE SOFTWARE RESEARCH AND DEVELOPMENT, P31, DOI 10.1109/FLOSS.2009.5071357
   Cemgil A. T., 2012, MONTE CARLO METHODS
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   Daly R, 2011, KNOWL ENG REV, V26, P99, DOI 10.1017/S0269888910000251
   Darwiche A, 2010, COMMUN ACM, V53, P80, DOI 10.1145/1859204.1859227
   Dejaeger K, 2013, IEEE T SOFTWARE ENG, V39, P237, DOI 10.1109/TSE.2012.20
   Do H., 2008, Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering (SIGSOFT '08/FSE-16), P71
   Doguc O, 2009, RELIAB ENG SYST SAFE, V94, P542, DOI 10.1016/j.ress.2008.06.009
   Eddy DM, 2005, HEALTH AFFAIR, V24, P9, DOI 10.1377/hlthaff.24.1.9
   Fenton N, 2004, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE.2004.1317462
   Fenton N., 2008, Proceedings of the Institution of Mechanical Engineers, Part O (Journal of Risk and Reliability), V222, P701, DOI 10.1243/1748006XJRR161
   Fenton N, 2008, EMPIR SOFTW ENG, V13, P499, DOI 10.1007/s10664-008-9072-x
   Fenton Norman, 2012, Risk Assessment and Decision Analysis with Bayesian Networks
   Fineman M., 2009, COMPUTATIONAL INTELL, P1
   Fisher NI, 2001, AM STAT, V55, P233, DOI 10.1198/000313001317098248
   FISHER NI, 1985, BIOMETRIKA, V72, P253
   Genest C, 2007, J HYDROL ENG, V12, P347, DOI 10.1061/(ASCE)1084-0699(2007)12:4(347)
   Giger E, 2011, P 8 WORK C MIN SOFTW, P83, DOI [10.1145/1985441.1985456, DOI 10.1145/1985441.1985456]
   Heckerman D., 1995, MSRTR9506
   Jeet K., 2012, ACM SIGSOFT SOFTW EN, V37, P1, DOI DOI 10.1145/2180921.2180935
   Jeet K., 2012, SIGSOFT SOFTW ENG NO, V37, P1
   Jiamthubthugsin W., 2006, P 39 HAW INT C SYST, p229a
   Jongsawat N., 2010, P 11 ACIS INT C SOFT, P295
   Kan SH, 2001, IBM SYST J, V40, P220, DOI 10.1147/sj.401.0220
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Li Qiu-ying, 2010, 2010 2nd International Conference on Education Technology and Computer (ICETC 2010), P446, DOI 10.1109/ICETC.2010.5529643
   LILLIEFO.HW, 1969, J AM STAT ASSOC, V64, P387, DOI 10.2307/2283748
   Liu J., 2003, HDB STAT GENETICS, P66
   Lucas PJF, 2004, ARTIF INTELL MED, V30, P201, DOI 10.1016/j.artmed.2003.11.001
   Lunn DJ, 2000, STAT COMPUT, V10, P325, DOI 10.1023/A:1008929526011
   Marquez D, 2010, RELIAB ENG SYST SAFE, V95, P412, DOI 10.1016/j.ress.2009.11.012
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Meziane F., 2010, Artificial intelligence applications for improved software engineering development: New prospects, P278
   Mirarab S, 2007, INT C PROGRAM COMPRE, P177
   Misirli A.T., 2014, P 3 INT WORKSHOP REA, P7
   Nagappan N., 2005, P INT C SOFTW ENG, P15
   Nagappan N, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P209, DOI 10.1109/ISSRE.2007.18
   Nagappan N, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P62
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Neil M, 2000, KNOWL ENG REV, V15, P257, DOI 10.1017/S0269888900003039
   Neil M, 2008, RELIAB ENG SYST SAFE, V93, P933, DOI 10.1016/j.ress.2007.03.009
   Neil M, 2007, STAT COMPUT, V17, P219, DOI 10.1007/s11222-007-9018-y
   Neill M, 2006, FIRST INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P817, DOI 10.1109/ARES.2006.83
   Ostrand T. J., 2002, Software Engineering Notes, V27, P55, DOI 10.1145/566171.566181
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pendharkar PC, 2005, IEEE T SOFTWARE ENG, V31, P615, DOI 10.1109/TSE.2005.75
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Port D, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P51
   Radlinski Lukasz, 2010, International Journal of Software Engineering and Computing, V2, P95
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schulz T., 2010, P 6 INT C PRED MOD S
   Schutt R., 2012, 10 IMPORTANT DATA SC
   Seifert T. I., 2010, INFORM SOFTW TECHNOL, V52, P539
   Seo Yeong-Seok., 2008, Proceedings of the 4th international workshop on Predictor models in software engineering, P25
   Settas D, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P117, DOI 10.1109/SERA.2006.68
   Shaw M., 2002, International Journal on Software Tools for Technology Transfer, V4, P1, DOI 10.1007/s10009-002-0083-4
   Shepperd M, 2003, MANAGING SOFTWARE ENGINEERING KNOWLEDGE, P181
   Spiegelhalter DJ, 2002, J R STAT SOC B, V64, P583, DOI 10.1111/1467-9868.00353
   Talby D, 2006, IEEE SOFTWARE, V23, P30, DOI 10.1109/MS.2006.93
   Tosun A, 2010, INFORM SOFTWARE TECH, V52, P1242, DOI 10.1016/j.infsof.2010.06.006
   Turhan B., 2012, P INT C ART INT SOFT, P1
   Wilkinson DJ, 2007, BRIEF BIOINFORM, V8, P109, DOI 10.1093/bib/bbm007
   Winkler RL, 2001, INT J TECHNOL ASSESS, V17, P56, DOI 10.1017/S026646230110406X
   Wohlin C., 2012, EXPT SOFTWARE ENG, P45, DOI DOI 10.1007/978-3-642-29044-2_4
   Xiaoxu Wang, 2010, 2010 IEEE International Conference on Advanced Management Science (ICAMS), P26, DOI 10.1109/ICAMS.2010.5552847
   Xiong HY, 2011, BIOINFORMATICS, V27, P2554, DOI 10.1093/bioinformatics/btr444
NR 80
TC 35
Z9 42
U1 2
U2 29
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2014
VL 40
IS 6
BP 533
EP 554
DI 10.1109/TSE.2014.2321179
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AJ9KV
UT WOS:000338030200001
DA 2024-07-18
ER

PT J
AU Song, C
   Porter, A
   Foster, JS
AF Song, Charles
   Porter, Adam
   Foster, Jeffrey S.
TI iTree: Efficiently Discovering High-Coverage Configurations Using
   Interaction Trees
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical software engineering; software configurations; software
   testing and analysis
ID SOFTWARE; EXECUTION; SUPPORT; DESIGN
AB Modern software systems are increasingly configurable. While this has many benefits, it also makes some software engineering tasks, such as software testing, much harder. This is because, in theory, unique errors could be hiding in any configuration, and, therefore, every configuration may need to undergo expensive testing. As this is generally infeasible, developers need cost-effective technique for selecting which specific configurations they will test. One popular selection approach is combinatorial interaction testing (CIT), where the developer selects a strength t and then computes a covering array (a set of configurations) in which all t-way combinations of configuration option settings appear at least once. In prior work, we demonstrated several limitations of the CIT approach. In particular, we found that a given system's effective configuration space-the minimal set of configurations needed to achieve a specific goal-could comprise only a tiny subset of the system's full configuration space. We also found that effective configuration space may not be well approximated by t-way covering arrays. Based on these insights we have developed an algorithm called interaction tree discovery (iTree). iTree is an iterative learning algorithm that efficiently searches for a small set of configurations that closely approximates a system's effective configuration space. On each iteration iTree tests the system on a small sample of carefully chosen configurations, monitors the system's behaviors, and then applies machine learning techniques to discover which combinations of option settings are potentially responsible for any newly observed behaviors. This information is used in the next iteration to pick a new sample of configurations that are likely to reveal further new behaviors. In prior work, we presented an initial version of iTree and performed an initial evaluation with promising results. This paper presents an improved iTree algorithm in greater detail. The key improvements are based on our use of composite proto-interactions-a construct that improves iTree's ability to correctly learn key configuration option combinations, which in turn significantly improves iTree's running time, without sacrificing effectiveness. Finally, the paper presents a detailed evaluation of the improved iTree algorithm by comparing the coverage it achieves versus that of covering arrays and randomly generated configuration sets, including a significantly expanded scalability evaluation with the similar to 1M-LOC MySQL. Our results strongly suggest that the improved iTree algorithm is highly scalable and can identify a high-coverage test set of configurations more effectively than existing methods.
C1 [Song, Charles] Fraunhofer USA Ctr Expt Software Engn, College Pk, MD 20740 USA.
   [Porter, Adam; Foster, Jeffrey S.] Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
C3 University System of Maryland; University of Maryland College Park
RP Song, C (corresponding author), Fraunhofer USA Ctr Expt Software Engn, 5825 Univ Res Court,Suite 1300, College Pk, MD 20740 USA.
EM csong@fc-md.umd.edu; aporter@cs.umd.edu; jfoster@cs.umd.edu
FU NSF [CCF-1116740, NSF-CCF-0811284]; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1116740] Funding Source: National Science Foundation
FX This research was supported in part by NSF CCF-1116740 and
   NSF-CCF-0811284.
CR Breiman L, 1996, MACH LEARN, V24, P123, DOI 10.1007/bf00058655
   BROWNLIE R, 1992, AT&T TECH J, V71, P41, DOI 10.1002/j.1538-7305.1992.tb00164.x
   Brun Y, 2004, PROC INT CONF SOFTW, P480, DOI 10.1109/ICSE.2004.1317470
   Bryce RC, 2006, INFORM SOFTWARE TECH, V48, P960, DOI 10.1016/j.infsof.2006.03.004
   Burr K., 1998, P INT C SOFTW ICSE A
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen M. B., 2009, COMBINATORIAL INTERA
   Dalal S. R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P285, DOI 10.1109/ICSE.1999.841019
   Dickinson W, 2001, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2001.919107
   Dunietz IS, 1997, PROC INT CONF SOFTW, P205, DOI 10.1145/253228.253271
   Fouché S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P177
   Francis P, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P451, DOI 10.1109/ISSRE.2004.43
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Haran M, 2007, IEEE T SOFTWARE ENG, V33, P287, DOI 10.1109/TSE.2007.1004
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Kuhn D.R., 2002, Proceedings of 27th Annual NASA Goddard Software Engineering Workshop, 2002, P91, DOI DOI 10.1109/SEW.2002.1199454
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Leon D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P442, DOI 10.1109/ISSRE.2003.1251065
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Liu WL, 2007, INT C COMP AID DES C, P252
   MANDL R, 1985, COMMUN ACM, V28, P1054, DOI 10.1145/4372.4375
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   Porter A, 2007, IEEE T SOFTWARE ENG, V33, P510, DOI 10.1109/TSE.2007.70719
   Qu X., 2008, P 2008 INT S SOFTW T, P75
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Quinlan JR, 1996, PROCEEDINGS OF THE THIRTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE EIGHTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE, VOLS 1 AND 2, P725
   Reisner E., 2010, P ACM IEEE INT C SOF, V1, P445, DOI DOI 10.1145/1806799.1806864
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P130, DOI 10.1109/ICSE.2002.1007962
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Song C, 2012, PROC INT CONF SOFTW, P903, DOI 10.1109/ICSE.2012.6227129
   Wheeler D. A., 2014, SLOCCOUNT
   Yang Y., 2002, P 8 ACM SIGKDD INT C, P682, DOI DOI 10.1145/775047.775149
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Yoo S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P201
   Yuan X., 2007, P 22 IEEE ACM INTL C
NR 38
TC 21
Z9 26
U1 0
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2014
VL 40
IS 3
BP 251
EP 265
DI 10.1109/TSE.2013.55
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AF4FH
UT WOS:000334666500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kästner, C
   Dreiling, A
   Ostermann, K
AF Kaestner, Christian
   Dreiling, Alexander
   Ostermann, Klaus
TI Variability Mining: Consistent Semi-automatic Detection of Product-Line
   Features
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Variability; reverse engineering; mining; feature; software product
   line; LEADT; feature location
AB Software product line engineering is an efficient means to generate a set of tailored software products from a common implementation. However, adopting a product-line approach poses a major challenge and significant risks, since typically legacy code must be migrated toward a product line. Our aim is to lower the adoption barrier by providing semi-automatic tool support-called variability mining-to support developers in locating, documenting, and extracting implementations of product-line features from legacy code. Variability mining combines prior work on concern location, reverse engineering, and variability-aware type systems, but is tailored specifically for the use in product lines. Our work pursues three technical goals: (1) we provide a consistency indicator based on a variability-aware type system, (2) we mine features at a fine level of granularity, and (3) we exploit domain knowledge about the relationship between features when available. With a quantitative study, we demonstrate that variability mining can efficiently support developers in locating features.
C1 [Kaestner, Christian] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
   [Dreiling, Alexander] Univ Magdeburg, D-39106 Magdeburg, Germany.
   [Dreiling, Alexander] Deutsch Bank AG, Grp Technol, Frankfurt, Germany.
   [Ostermann, Klaus] Univ Marburg, Dept Math & Comp Sci, D-35032 Marburg, Germany.
C3 Carnegie Mellon University; Otto von Guericke University; Deutsche Bank;
   Philipps University Marburg
RP Kästner, C (corresponding author), Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
OI Kastner, Christian/0000-0002-4450-4572
FU ERC [203099]; Metop Research Institute; Direct For Computer & Info Scie
   & Enginr; Division of Computing and Communication Foundations [1318808]
   Funding Source: National Science Foundation; European Research Council
   (ERC) [203099] Funding Source: European Research Council (ERC)
FX The authors are grateful to Norbert Siegmund for sharing his experience
   with HyperSQL, to Eyke Hullermeier for hints regarding measures in our
   experiment, and to Paolo Giarrusso, Sven Apel, and the anonymous
   reviewers for helpful comments on prior drafts of this paper. Kaster and
   Ostermann's work was supported in part by ERC grant #203099. Dreiling's
   work was supported by the Metop Research Institute.
CR Adams B, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P243
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Apel S, 2009, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2009.5070523
   Arnold Robert S., 1996, SOFTWARE CHANGE IMPA
   Bass Len, 2012, SEI S SOFTW
   Bayer J, 1999, LECT NOTES COMPUT SC, V1687, P446, DOI 10.1145/318774.319262
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bergey J., 2000, CMUSEI2000TN008
   BIGGERSTAFF TJ, 1993, PROC INT CONF SOFTW, P482, DOI 10.1109/ICSE.1993.346017
   Bodden E., 2012, P WORKSH PROGR LANG
   Brabrand C., 2012, Proceedings of the 11th Annual International Conference on Aspect-oriented Software Development, AOSD '12, P13, DOI DOI 10.1145/2162049.2162052
   Butler S, 2011, LECT NOTES COMPUT SC, V6813, P130, DOI 10.1007/978-3-642-22655-7_7
   Chatterjee S, 2009, LECT NOTES COMPUT SC, V5503, P385
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   Clements P, 2002, IEEE SOFTWARE, V19, P28, DOI 10.1109/MS.2002.1020283
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Couto MV, 2011, EUR CON SFTWR MTNCE, P191, DOI 10.1109/CSMR.2011.25
   Dagenais B, 2008, ACM SIGPLAN NOTICES, V43, P313, DOI 10.1145/1449955.1449790
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   Duszynski S., 2011, 2011 18th Working Conference on Reverse Engineering, P303, DOI 10.1109/WCRE.2011.44
   Eaddy M, 2008, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2008.39
   Eisenbarth T, 2002, PROC IEEE INT CONF S, P273, DOI 10.1109/ICSM.2002.1167778
   Faust D, 2003, SOFTWARE PRACT EXPER, V33, P933, DOI 10.1002/spe.530
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   GODIL I, 2005, P CASCON 2005 TOR CA, P83
   Holmes R, 2009, IEEE INT CONF AUTOM, P397, DOI 10.1109/ASE.2009.65
   Jia Liu, 2006, 28th International Conference on Software Engineering Proceedings, P112
   Kästner C, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P223, DOI 10.1109/SPLINE.2007.12
   Kästner C, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2211616.2211617
   Kästner C, 2011, ACM SIGPLAN NOTICES, V46, P805, DOI 10.1145/2076021.2048128
   Kästner C, 2009, LECT NOTES BUS INF P, V33, P175
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Kang Kyo C, 1990, Technical Report
   Kastner C., 2012, P INT C OBJ OR PROGR
   Kastner C., 2012, Proc. of FOSD'12, P1
   Kastner C., 2011, 012011 PHIL U DEP MA
   Kastner Christian., 2009, Proceedings of the 13th International Software Product Line Conference, P181, DOI DOI 10.1145/1753235.1753261
   Kastner Christian, 2009, P INT C GEN PROGR CO, P157, DOI DOI 10.1145/1621607.1621632
   Kellens A, 2007, LECT NOTES COMPUT SC, V4640, P143
   Kim C. H. P., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P221, DOI 10.1109/ISSRE.2012.23
   Liebig J., 2013, P 2013 9 JOINT M FDN, P81, DOI DOI 10.1145/2491411.2491437
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Lopez-Herrejon R. E., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P181, DOI 10.1109/SPLC.2011.52
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Monteiro M., 2005, Proceedings of the 4th international conference on Aspect-oriented software development, P111
   Petrenko M, 2009, INT C PROGRAM COMPRE, P10, DOI 10.1109/ICPC.2009.5090023
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rabkin A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P131, DOI 10.1145/1985793.1985812
   Reisner E., 2010, P ACM IEEE INT C SOF, V1, P445, DOI DOI 10.1145/1806799.1806864
   Robillard MP, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/13487689.13487691
   Savage T., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P255, DOI 10.1145/1810295.1810345
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   Stoermer C, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P35, DOI 10.1109/WICSA.2001.948405
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Valente MT, 2012, IEEE T SOFTWARE ENG, V38, P737, DOI 10.1109/TSE.2011.57
   WILDE N, 1995, J SOFTW MAINT-RES PR, V7, P49, DOI 10.1002/smr.4360070105
   Zhang C, 2004, ACM SIGPLAN NOTICES, V39, P188, DOI 10.1145/1035292.1028992
NR 60
TC 50
Z9 56
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2014
VL 40
IS 1
BP 67
EP 82
DI 10.1109/TSE.2013.45
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AF4FB
UT WOS:000334665800005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Piccioni, M
   Oriol, M
   Meyer, B
AF Piccioni, Marco
   Oriol, Manuel
   Meyer, Bertrand
TI Class Schema Evolution for Persistent Object-Oriented Software: Model,
   Empirical Study, and Automated Support
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Versioning; persistence; serialization; object-oriented class schema
   evolution; IDE integration
ID MANAGEMENT
AB With the wide support for object serialization in object-oriented programming languages, persistent objects have become commonplace and most large object-oriented software systems rely on extensive amounts of persistent data. Such systems also evolve over time. Retrieving previously persisted objects from classes whose schema has changed is, however, difficult, and may lead to invalidating the consistency of the application. The ESCHER framework addresses these issues through an IDE-integrated approach that handles class schema evolution by managing versions of the code and generating transformation functions automatically. The infrastructure also enforces class invariants to prevent the introduction of potentially corrupt objects. This paper describes a model for class attribute changes, a measure for class evolution robustness, four empirical studies, and the design and implementation of the ESCHER system.
C1 [Piccioni, Marco; Meyer, Bertrand] Swiss Fed Inst Technol, CH-8092 Zurich, Switzerland.
   [Oriol, Manuel] ABB Switzerland Ltd Corp Res, CH-5405 Baden, Switzerland.
C3 Swiss Federal Institutes of Technology Domain; ETH Zurich; ABB
RP Piccioni, M (corresponding author), Swiss Fed Inst Technol, Clausiusstr 59, CH-8092 Zurich, Switzerland.
EM marco.piccioni@inf.ethz.ch; manuel.oriol@ch.abb.com;
   Bertrand.Meyer@inf.ethz.ch
RI Meyer, Bertrand/E-4543-2010
OI Meyer, Bertrand/0000-0002-5985-7434
FU Swiss National Foundation [200021-113808]
FX The authors thank the Swiss National Foundation (grant numbers
   200021-113808) for partially funding this work. They also thank Matthias
   Loeu and Teseo Schneider for their implementation work on the initial
   versions of ESCHER.
CR [Anonymous], 2005, TC39TG4STD367 ECMA C
   Atkinson M., 2000, Proceedings of Objects and Databases, International Symposium at ECOOP 2000. Sophia An- tipolis, France, June 2000. Published as Lecture Notes in Computer Science, V1944, P1
   ATKINSON M, 2000, TR200090 SMLI
   Atkinson M. P., 1978, Proceedings of the Fourth International Conference on Very Large Data Bases, P408
   Atkinson M.P., 1995, VLDB J, V4, P319
   Authors V., 2012, SCHEMA EVOLUTION BEN
   Banerjee J., 1987, SIGMOD Record, V16, P311, DOI 10.1145/38714.38748
   Bierman G, 2008, LECT NOTES COMPUT SC, V5142, P235, DOI 10.1007/978-3-540-70592-5_11
   Boyapati C, 2003, ACM SIGPLAN NOTICES, V38, P403, DOI 10.1145/949343.949341
   Cattell R., 2000, The Object Data Standard: ODMG 3.0
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Curino CA, 2008, PROC VLDB ENDOW, V1, P761, DOI 10.14778/1453856.1453939
   Czarnecki K, 2009, LECT NOTES COMPUT SC, V5563, P260, DOI 10.1007/978-3-642-02408-5_19
   DATE C.J., 2003, An Introduction to Database Systems, Veight
   Deepak Advani, 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1713, DOI 10.1145/1141277.1141685
   Delgado C, 2003, LECT NOTES COMPUT SC, V2817, P226
   Dig D, 2007, PROC INT CONF SOFTW, P427
   Dmitriev M., 2001, TR200198 SMLI
   Falleri JR, 2008, LECT NOTES COMPUT SC, V5301, P326, DOI 10.1007/978-3-540-87875-9_24
   FRANCONI E, 2000, FMLDO, P85
   GemStone, 2009, GEMST S 64 BIT PROGR
   Gruschko B., 2007, P INT WORKSH MOD DRI
   Herrmannsdoerfer M, 2008, LECT NOTES COMPUT SC, V5301, P645, DOI 10.1007/978-3-540-87875-9_45
   Hofmann M., 2011, P ACM SIGPLAN SIGACT
   JORDAN M, 2004, TR2004136 SUN MICR L
   Lautemann S.-E., 1996, Proceedings. Seventh International Workshop on Database and Expert Systems Applications, P132, DOI 10.1109/DEXA.1996.558286
   Lerner BS, 2000, ACM T DATABASE SYST, V25, P83, DOI 10.1145/352958.352983
   Lewis B. M. B., 2000, TR200093 SUN MICR LA
   Meyer B, 2005, LECT NOTES COMPUT SC, V3586, P1
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Meyer B, 2001, JOOP, V13, P28
   Microsoft, 2012, VERS TOL SER
   Milo T., 1998, Proceedings of the Twenty-Fourth International Conference on Very-Large Databases, P122
   Monk S., 1993, SIGMOD Record, V22, P16, DOI 10.1145/163090.163094
   Neamtiu I, 2006, ACM SIGPLAN NOTICES, V41, P72, DOI 10.1145/1133981.1133991
   Oracle, 2009, ED BAS RED
   Oracle, 2012, JAV SER SPEC
   Paterson J., 2005, MICROSOFT WINDOWS IN
   Piccioni M., 2007, P WORKSH REFL AOP ME, P27
   Piccioni M, 2009, IEEE INT CONF AUTOM, P650, DOI 10.1109/ASE.2009.100
   Rahm E, 2001, VLDB J, V10, P334, DOI 10.1007/s007780100057
   SKARRA AH, 1986, SIGPLAN NOTICES, V21, P483, DOI 10.1145/960112.28747
   Wachsmuth G, 2007, LECT NOTES COMPUT SC, V4609, P600
NR 43
TC 4
Z9 5
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2013
VL 39
IS 2
BP 184
EP 196
DI 10.1109/TSE.2011.123
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 079ML
UT WOS:000314174500004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Brosch, F
   Koziolek, H
   Buhnova, B
   Reussner, R
AF Brosch, Franz
   Koziolek, Heiko
   Buhnova, Barbora
   Reussner, Ralf
TI Architecture-Based Reliability Prediction with the Palladio Component
   Model
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software architectures; quality analysis and evaluation; reliability;
   design tools and techniques
ID SOFTWARE SYSTEMS; PERFORMANCE
AB With the increasing importance of reliability in business and industrial software systems, new techniques of architecture-based reliability engineering are becoming an integral part of the development process. These techniques can assist system architects in evaluating the reliability impact of their design decisions. Architecture-based reliability engineering is only effective if the involved reliability models reflect the interaction and usage of software components and their deployment to potentially unreliable hardware. However, existing approaches either neglect individual impact factors on reliability or hard-code them into formal models, which limits their applicability in component-based development processes. This paper introduces a reliability modeling and prediction technique that considers the relevant architectural factors of software systems by explicitly modeling the system usage profile and execution environment and automatically deriving component usage profiles. The technique offers a UML-like modeling notation whose models are automatically transformed into a formal analytical model. Our work builds upon the Palladio Component Model (PCM), employing novel techniques of information propagation and reliability assessment. We validate our technique with sensitivity analyses and simulation in two case studies. The case studies demonstrate effective support of usage profile analysis and architectural configuration ranking, together with the employment of reliability-improving architecture tactics.
C1 [Brosch, Franz] FZI Forschungszentrum Informat, D-76131 Karlsruhe, Germany.
   [Koziolek, Heiko] ABB Corp Res Ind Software Syst, D-68526 Ladenburg, Germany.
   [Buhnova, Barbora] Masaryk Univ, Fac Informat, Brno 60200, Czech Republic.
   [Reussner, Ralf] Karlsruhe Inst Technol, Inst Program Struct & Data Org IPD, D-76131 Karlsruhe, Germany.
C3 ABB; Masaryk University Brno; Helmholtz Association; Karlsruhe Institute
   of Technology
RP Brosch, F (corresponding author), FZI Forschungszentrum Informat, Haid & Neu Str 10-14, D-76131 Karlsruhe, Germany.
EM brosch@fzi.de; heiko.koziolek@de.abb.com; buhnova@fi.muni.cz;
   reussner@kit.edu
RI Koziolek, Heiko/AAF-5917-2020; Buhnova, Barbora/J-3364-2013
OI Buhnova, Barbora/0000-0003-4205-101X; Reussner, Ralf/0000-0002-9308-6290
FU European Commission as part of the EU-project Q-ImPrESS [FP7-215013];
   German Federal Ministry of Education and Research [01BS0822]; Czech
   Science Foundation
FX This work was supported by the European Commission as part of the
   EU-project Q-ImPrESS (grant No. FP7-215013), by the German Federal
   Ministry of Education and Research (grant No. 01BS0822), and by the
   Czech Science Foundation.
CR [Anonymous], 2011, RELIABILITY PREDICTI
   [Anonymous], 2011, Eclipse Modeling Project
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   [Anonymous], 2010, INT C PERF ENG WOSP, DOI DOI 10.1145/1712605.1712613
   [Anonymous], 2011, SSJ STOCHASTIC SIMUL
   [Anonymous], 2011, PCM PALLADIO COMPONE
   [Anonymous], 2002, P 3 INT WORKSHOP SOF, DOI DOI 10.1145/584369.584415
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Becker S., 2008, THESIS U OLDENBURG
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Brosch F, 2010, LECT NOTES COMPUT SC, V6093, P36, DOI 10.1007/978-3-642-13821-8_5
   Chen MH, 2001, IEEE T RELIAB, V50, P165, DOI 10.1109/24.963124
   Cheung L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P111, DOI 10.1145/1368088.1368104
   CHEUNG RC, 1980, IEEE T SOFTWARE ENG, V6, P118, DOI 10.1109/TSE.1980.234477
   Dast O., 2003, P WORKSH SOFTW ARCH, P266
   Fiondella LN, 2010, SOFTW TEST VERIF REL, V20, P63, DOI 10.1002/stvr.420
   Gokhale SS, 2004, 10TH IEEE PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P113, DOI 10.1109/PRDC.2004.1276562
   Gokhale SS, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P64, DOI 10.1109/ISSRE.2002.1173214
   Gokhale SS, 2007, IEEE T DEPEND SECURE, V4, P32, DOI 10.1109/TDSC.2007.4
   Goseva-Popstojanova K, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P307, DOI 10.1109/ISSRE.2003.1251052
   Goseva-Popstojanova K, 2003, IEEE T SOFTWARE ENG, V29, P946, DOI 10.1109/TSE.2003.1237174
   Goseva-Popstojanova K, 2003, COMPUT MATH APPL, V46, P1023, DOI [10.1016/S0898-1221(03)90116-7, 10.1016/S0898-1221(03)00307-9]
   Goseva-Popstojanova K, 2001, PERFORM EVALUATION, V45, P179, DOI 10.1016/S0166-5316(01)00034-7
   Goseva-Popstojanova K, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P197
   Goseva-Popstojanova K, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P43, DOI 10.1109/ISSRE.2005.25
   Goswami K. K., 1993, Digest of Papers FTCS-23 The Twenty-Third International Symposium on Fault-Tolerant Computing, P218, DOI 10.1109/FTCS.1993.627325
   Grassi V, 2005, LECT NOTES COMPUT SC, V3549, P279
   Grottke M., 2005, The Journal of Reliability Engineering Association of Japan, V27, P425
   Hamlet D, 2009, ACM T SOFTW ENG METH, V18, DOI 10.1145/1525880.1525885
   Huang B, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P63
   Immonen A, 2008, SOFTW SYST MODEL, V7, P49, DOI 10.1007/s10270-006-0040-x
   Kappler T., 2008, Software Engineering 2008, P140
   Kienzle J., 2003, P 8 AD EUR INT C REL, P641
   Kim S, 2009, J SYST SOFTWARE, V82, P1211, DOI 10.1016/j.jss.2009.03.102
   Koziolek Heiko, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P279, DOI 10.1109/ISSRE.2010.15
   Koziolek H., 2008, THESIS U OLDENBURG
   Koziolek H, 2009, ELECTRON NOTES THEOR, V253, P23, DOI 10.1016/j.entcs.2009.09.026
   Kuperberg M, 2008, LECT NOTES COMPUT SC, V5282, P48, DOI 10.1007/978-3-540-87891-9_4
   Lipton MW, 2008, SPRINGER SER RELIAB, P309, DOI 10.1007/978-1-84800-113-8_15
   Malek S, 2009, PROC INT CONF SOFTW, P275, DOI 10.1109/ICSE-COMPANION.2009.5071000
   Martens A., 2010, P 1 JOINT WOSP SIPEW, P105, DOI [DOI 10.1145/1712605.1712624, 10.1145]
   Martens A, 2009, QUASSOSS 09: 1ST INTERNATIONAL WORKSHOP ON THE QUALITY OF SERVICE-ORIENTED SOFTWARE SYSTEM, P25
   Meedeniya I., 2011, QOSAISARCS, P85
   Milner R., 1989, Communication and concurrency
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   Popic P, 2005, 16th IEEE International Symposium on Software Reliability Engineering, Proceedings, P53, DOI 10.1109/ISSRE.2005.18
   Reussner RH, 2003, J SYST SOFTWARE, V66, P241, DOI 10.1016/S0164-1212(02)00080-8
   Reussner RH, 2003, FUTURE GENER COMP SY, V19, P627, DOI 10.1016/S0167-739X(02)00173-5
   Rodrigues G, 2005, LECT NOTES COMPUT SC, V3442, P111, DOI 10.1007/978-3-540-31984-9_9
   Rodrigues GN, 2007, PROC INT CONF SOFTW, P63, DOI 10.1109/ICSECOMPANION.2007.59
   Roshandel R, 2007, LECT NOTES COMPUT SC, V4880, P108
   Rozanski N., 2005, SOFTWARE SYSTEMS ARC
   Sato N, 2007, P IEEE I C SERV COMP, P114
   Schroeder B., 2007, P 5 USENIX C FIL STO
   Sharma VS, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P299
   Sharma VS, 2007, J SYST SOFTWARE, V80, P493, DOI 10.1016/j.jss.2006.07.021
   Trivedi K., 2008, 2008 14th IEEE Pacific Rim International Symposium on Dependable Computing, P323, DOI 10.1109/PRDC.2008.50
   Vilkomir SA, 2005, P INT COMP SOFTW APP, P473
   Wang WL, 2006, J SYST SOFTWARE, V79, P132, DOI 10.1016/j.jss.2005.09.004
   Whittaker J. A., 1993, ACM Transactions on Software Engineering and Methodology, V2, P93, DOI 10.1145/151299.151326
   WU X, 2004, P 4 INT WORKSH SOFTW, V29, P290
   Yacoub S, 2004, IEEE T RELIAB, V53, P465, DOI 10.1109/TR.2004.838034
NR 63
TC 65
Z9 69
U1 0
U2 26
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2012
VL 38
IS 6
BP 1319
EP 1339
DI 10.1109/TSE.2011.94
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 043PI
UT WOS:000311556100005
DA 2024-07-18
ER

PT J
AU Casale, G
   Kalbasi, A
   Krishnamurthy, D
   Rolia, J
AF Casale, Giuliano
   Kalbasi, Amir
   Krishnamurthy, Diwakar
   Rolia, Jerry
TI BURN: Enabling Workload Burstiness in Customized Service Benchmarks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Benchmarking; performance; burstiness; bottleneck migration; overdemand
ID CLOSED QUEUING-NETWORKS; ASYMPTOTIC ANALYSIS; ARRIVAL PROCESSES;
   PHASE-TYPE; SYSTEMS; GENERATION; BOTTLENECK
AB We introduce BURN, a methodology to create customized benchmarks for testing multitier applications under time-varying resource usage conditions. Starting from a set of preexisting test workloads, BURN finds a policy that interleaves their execution to stress the multitier application and generate controlled burstiness in resource consumption. This is useful to study, in a controlled way, the robustness of software services to sudden changes in the workload characteristics and in the usage levels of the resources. The problem is tackled by a model-based technique which first generates Markov models to describe resource consumption patterns of each test workload. Then, a policy is generated using an optimization program which sets as constraints a target request mix and user-specified levels of burstiness at the different resources in the system. Burstiness is quantified using a novel metric called overdemand, which describes in a natural way the tendency of a workload to keep a resource congested for long periods of time and across multiple requests. A case study based on a three-tier application testbed shows that our method is able to control and predict burstiness for session service demands at a fine-grained scale. Furthermore, experiments demonstrate that for any given request mix our approach can expose latency and throughput degradations not found with nonbursty workloads having the same request mix.
C1 [Kalbasi, Amir; Krishnamurthy, Diwakar] Univ Calgary, Calgary, AB T2N 1N4, Canada.
   [Rolia, Jerry] HP Labs, Serv Res Lab, Palo Alto, CA 94304 USA.
C3 University of Calgary; Hewlett-Packard
RP Casale, G (corresponding author), Univ London Imperial Coll Sci Technol & Med, Dept Comp, 180 Queens Gate, London SW7 2AZ, England.
EM g.casale@imperial.ac.uk; akalbasi@ucalgary.ca; dkrishna@ucalgary.ca;
   jerry.rolia@hp.com
RI Kalbasi, Amir/GLN-7604-2022; Casale, Giuliano/W-5595-2019
OI Kalbasi, Amir/0000-0001-9475-3086; Casale, Giuliano/0000-0003-4548-7951
FU InvestNI/SAP project MORE; Natural Sciences and Engineering Research
   Council of Canada (NSERC); Imperial College Junior Research Fellowship
FX Part of the work of G. Casale and D. Krishnamurthy was done while at SAP
   Research CEC Belfast, The Concourse, Queen's Road, Queen's Island,
   Titanic Quarter, Belfast BT3 9DT, United Kingdom. This research was
   partially funded by the InvestNI/SAP project MORE, by grants from the
   Natural Sciences and Engineering Research Council of Canada (NSERC), and
   by the Imperial College Junior Research Fellowship. The authors thank
   Stephen Dawson for helpful feedback during the preparation of this work.
CR Amza C., 2002, P 5 WORKSH WORKL CHA
   [Anonymous], SYSTEM MODELING ANAL
   Balbo G, 1997, PERFORM EVALUATION, V30, P115, DOI 10.1016/S0166-5316(97)00005-9
   Balbo G, 1996, PERFORM EVALUATION, V26, P51, DOI 10.1016/0166-5316(95)00021-6
   Barford P., 1998, Performance Evaluation Review, V26, P151, DOI 10.1145/277858.277897
   Bolch G., 2006, Queueing Networks and Markov Chains: Modeling and Performance Evaluation with Computer Science Applications, VSecond
   Casale G, 2004, IEEE COMPUTER SOCIETY'S 12TH ANNUAL INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS, AND SIMULATION OF COMPUTER AND TELECOMMUNICATIONS SYSTEMS - PROCEEDINGS, P223, DOI 10.1109/MASCOT.2004.1348242
   CASALE G, 2009, SERG200902 U CALG
   Casale G, 2008, INT CONF QUANT EVAL, P83, DOI 10.1109/QEST.2008.33
   Casale G, 2010, PERFORM EVALUATION, V67, P873, DOI 10.1016/j.peva.2009.12.003
   Casale G, 2009, LECT NOTES COMPUT SC, V5896, P393, DOI 10.1007/978-3-642-10445-9_20
   Casale G, 2010, PERFORM EVALUATION, V67, P61, DOI 10.1016/j.peva.2009.09.003
   Casale G, 2008, PERF E R SI, V36, P13, DOI 10.1145/1384529.1375460
   Crovella ME, 1997, PROCEEDINGS OF THE 1997 WINTER SIMULATION CONFERENCE, P1005, DOI 10.1145/268437.268733
   Dujmovic J. J., 1999, MASCOTS '99. Proceedings of the Seventh International Symposium on Modeling, Analysis and Simulation of Computer and Telecommunication Systems, P197, DOI 10.1109/MASCOT.1999.805056
   García DF, 2003, COMPUTER, V36, P42, DOI 10.1109/MC.2003.1178045
   Grace R., 1996, The benchmark book
   GUSELLA R, 1991, IEEE J SEL AREA COMM, V9, P203, DOI 10.1109/49.68448
   H.P. LoadRunner, 2011, LOADRUNNER
   Hashemian R., 2010, HPL2010163
   Kalbasi A, 2012, IEEE T SOFTWARE ENG, V38, P561, DOI 10.1109/TSE.2011.23
   KANT K, 2001, P WORKSH COMP ARCH E
   Krishnamurthy D, 2006, IEEE T SOFTWARE ENG, V32, P868, DOI 10.1109/TSE.2006.106
   Krishnaswamy U, 2000, IEEE T COMPUT, V49, P1325, DOI 10.1109/12.895853
   LELAND WE, 1994, IEEE ACM T NETWORK, V2, P1, DOI 10.1109/90.282603
   Litoiu M, 2000, IEEE T SOFTWARE ENG, V26, P1168, DOI 10.1109/32.888630
   Malkowski S, 2009, I S WORKL CHAR PROC, P118, DOI 10.1109/IISWC.2009.5306791
   Mi NF, 2007, PERFORM EVALUATION, V64, P1082, DOI 10.1016/j.peva.2007.06.016
   Mi NF, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P149
   Mi NF, 2008, LECT NOTES COMPUT SC, V5346, P265
   MOSBERGER D, 1998, HPL9861
   NEUTS MF, 1979, J APPL PROBAB, V16, P764, DOI 10.2307/3213143
   NEUTS MF, 1978, NAV RES LOG, V25, P445, DOI 10.1002/nav.3800250307
   Panchenko A, 2007, PERFORM EVALUATION, V64, P629, DOI 10.1016/j.peva.2006.09.002
   Riska A, 2006, INT CONF QUANT EVAL, P41
   Rolia J., 2010, P 1 JOINT WOSP SIPEW
   Xue JWJ, 2008, PROCEEDINGS OF THE 2008 14TH IEEE INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED SYSTEMS, P203, DOI 10.1109/ICPADS.2008.104
NR 37
TC 5
Z9 6
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2012
VL 38
IS 4
BP 778
EP 793
DI 10.1109/TSE.2011.58
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 983LE
UT WOS:000307120000003
DA 2024-07-18
ER

PT J
AU Kwan, TW
   Leung, HKN
AF Kwan, Tak Wah
   Leung, Hareton K. N.
TI A Risk Management Methodology for Project Risk Dependencies
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Project risk management; risk dependencies; risk assessment; metrics
AB Project risks are not always independent, yet current risk management practices do not clearly manage dependencies between risks. If dependencies can be explicitly identified and analyzed, project managers will be able to develop better risk management strategies and make more effective risk planning decisions. This paper proposes a management methodology to address risk dependency issues. Through the study of three IT projects, we confirm that risk dependencies do exist in projects and can be identified and systematically managed. We also observed that, as project teams needed to deal with risk dependency issues, communications between projects were improved, and there were synergetic effects in managing risks and risk dependencies among projects.
C1 [Kwan, Tak Wah; Leung, Hareton K. N.] Hong Kong Polytech Univ, Dept Comp, Lab Software Dev & Management, Kowloon, Hong Kong, Peoples R China.
C3 Hong Kong Polytechnic University
RP Kwan, TW (corresponding author), Hong Kong Polytech Univ, Dept Comp, Lab Software Dev & Management, Kowloon, Hong Kong, Peoples R China.
EM william.twkwan@gmail.com; cshleung@comp.polyu.edu.hk
RI Kwan, William/AAI-5654-2020; Leung, Hareton Kam Nang/O-5899-2014
OI Leung, Hareton Kam Nang/0000-0002-1766-7667
CR Am. Systems Corporation, 2003, RISK MAN PROC IMPL
   [Anonymous], P 37 HAW INT C SYST
   [Anonymous], 2004, ENTERPRISE RISK MANA
   [Anonymous], 1998, PROBABILISTIC REASON
   [Anonymous], 2008, GUID PROJ MAN BOD KN
   [Anonymous], 1989, Software risk management tutorial
   ASNAR Y, 2006, P 1 INT WORKSH CRIT
   Aven T., 1992, RELIABILITY RISK ANA, V1st
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   Bouti A., 1994, Int. J. Reliab. Qual. Saf. Eng, V1, P515, DOI DOI 10.1142/S0218539394000362
   Charette R. N., 1989, SOFTWARE ENG RISK AN
   Dorofee A., 1996, CONTINUOUS RISK MANA
   FENTON N, 2004, W070401 AG
   Ferguson R., 2004, Crosstalk, P12
   Garvey P., 2000, PROBABILITY METHODS
   Giorgini P, 2003, LECT NOTES COMPUT SC, V2800, P1
   Hillson D., 2001, P 4 EUR PROJ MAN C J
   *INT EL COMM, 2006, IEC61165
   INTERNATIONAL ELECTROCHEMICAL COMMISSION, 1995, IEC6030039
   International Electrotechnical Commission, 2006, IEC61025
   IT Governance Institute, 2007, IT ASS GUID US COBIT
   KAHKOKONEN K, 2001, P 4 EUR PROJ MAN C J
   KWAN T, 2005, P IASTED INT C SOFTW
   KWAN T, 2009, P 13 IASTED INT C SO
   Kwan T., 2007, P IASTED INT C ADV C
   Lientz B., 2001, BREAKTHROUGH TECHNOL
   Lock D., 2007, ESSENTIALS PROJECT M, V3rd
   Navarro E, 2007, ADVANCES IN INFORMATION SYSTEMS DEVELOPMENT, VOL 2, P167, DOI 10.1007/978-0-387-70802-7_14
   Nielsen DS, 1971, RISOM1374
   *SOFTW ENG I, 2006, CMMI DEV VERS 1 2
   Van Scoy RL, 1992, SOFTWARE DEV RISK OP
   WHITE BE, 2006, P INCOSE 2006 S JUL
   Williams RC, 1997, IEEE SOFTWARE, V14, P75, DOI 10.1109/52.589240
NR 33
TC 60
Z9 71
U1 10
U2 95
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2011
VL 37
IS 5
BP 635
EP 648
DI 10.1109/TSE.2010.108
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 823YC
UT WOS:000295162900003
DA 2024-07-18
ER

PT J
AU Bergel, A
   Harrison, W
   Cahill, V
   Clarke, S
AF Bergel, Alexandre
   Harrison, William
   Cahill, Vinny
   Clarke, Siobhan
TI FlowTalk: Language Support for Long-Latency Operations in Embedded
   Devices
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Embedded systems; object-based programming
AB Wireless sensor networks necessitate a programming model different from those used to develop desktop applications. Typically, resources in terms of power and memory are constrained. C is the most common programming language used to develop applications on very small embedded sensor devices. We claim that C does not provide efficient mechanisms to address the implicit asynchronous nature of sensor sampling. C applications for these devices suffer from a disruption in their control flow. In this paper, we present FlowTalk, a new object-oriented programming language aimed at making software development for wireless embedded sensor devices easier. FlowTalk is an object-oriented programming language in which dynamicity (e.g., object creation) has been traded for a reduction in memory consumption. The event model that traditionally comes from using sensors is adapted in FlowTalk with controlled disruption, a light-weight continuation mechanism. The essence of our model is to turn asynchronous long-latency operations into synchronous and blocking method calls. FlowTalk is built for TinyOS and can be used to develop applications that can fit in 4 KB of memory for a large number of wireless sensor devices.
C1 [Bergel, Alexandre] Univ Chile, Comp Sci Dept DCC, PLEIAD Lab, Santiago, Chile.
   [Harrison, William] Trinity Coll Dublin, Software Struct Grp, Sch Comp Sci & Stat, Dublin, Ireland.
   [Cahill, Vinny; Clarke, Siobhan] Trinity Coll Dublin, Distributed Syst Grp, Dublin, Ireland.
   [Clarke, Siobhan] Trinity Coll Dublin, Lero Irish Software Engn Res Ctr, Dublin, Ireland.
C3 Universidad de Chile; Trinity College Dublin; Trinity College Dublin;
   Trinity College Dublin
RP Bergel, A (corresponding author), Univ Chile, Comp Sci Dept DCC, PLEIAD Lab, Santiago, Chile.
EM abergel@dcc.uchile.cl; Bill.Harrison@scss.tcd.ie;
   Vinny.Cahill@scss.tcd.ie; Siobhan.Clarke@scss.tcd.ie
RI Bergel, Alexandre/I-1397-2013
OI Bergel, Alexandre/0000-0001-8087-1903; Clarke,
   Siobhan/0000-0001-5721-9976
FU Science Foundation Ireland [03/CE2/I303_1]
FX FlowTalk is the result of an intense research effort that began in 2006.
   This work was supported in part by Science Foundation Ireland grant
   03/CE2/I303_1 to Lero-The Irish Software Engineering Research Centre
   (www.lero.ie). The authors thank Shane Brennan, Raymond Cunningham,
   Stephane Ducasse (for suggesting "FlowTalk"), David Gay, Ron Goldman,
   Oscar Nierstrasz, Andreas Polze and his research group, Lukas Renggli,
   and Aline Senart for their valuable comments. The authors also thank
   Marcin Karpinski for his precious help with TinyOS. Several technical
   problems had to be faced when experimenting. Thanks are also due to
   Alain Fargue, Greg Guche, and all of the POPS INRIA Project Team.
CR ANDERSEN JR, 2004, P ESUG INT SMALLT C
   ANDREAE C, 2006, P EUR C OBJ OR PROGR, P124
   [Anonymous], 2002, WSNA '02
   BAKER J, 2006, P 12 IEEE REAL TIM E
   Berry Gerard., 1998, Proof, Language and Interaction: Essays in Honour of Robin Milner
   Bhatti S, 2005, MOBILE NETW APPL, V10, P563, DOI 10.1007/s11036-005-1567-8
   Brewer E., 2004, NesC: A programming language for deeply Networked systems
   CAROMEL D, 1990, P TOOLS 3 SYDNEY, P245
   CHANDRASEKARAN P, 2007, P ESEC SIGSOFT FSE 2, P65
   Cheong E, 2005, DES AUT TEST EUROPE, P1050, DOI 10.1109/DATE.2005.165
   CONWAY ME, 1963, COMMUN ACM, V6, P396, DOI 10.1145/366663.366704
   DEDECKER J, 2006, P 20 EUR C OBJ OR PR, P230
   DRAVES RP, 1991, P 13 ACM S OP SYST P, P122
   Ducasse S, 2006, ACM T PROGR LANG SYS, V28, P331, DOI 10.1145/1119479.1119483
   Ducasse S, 2007, IEEE SOFTWARE, V24, P56, DOI 10.1109/MS.2007.144
   Dunkels Adam, 2006, Proceedings of the 4th International Conference on Embedded Networked Sensor Systems. SenSys'06, P29, DOI DOI 10.1145/1182807.1182811
   Fischer J., 2007, PEPM, P134, DOI [10.1145/1244381.1244403, DOI 10.1145/1244381.1244403]
   Gay David., 2003, PLDI 03, P1
   Gummadi R., 2005, Proc. 20th ACM Symp. Operating Systems Principles, P1
   Gummadi Ramakrishna., 2007, P 6 INT C ASPECT ORI, P173
   Halbwachs Nicolas., 1992, Synchronous Programming of Reactive Systems
   Haller P, 2006, LECT NOTES COMPUT SC, V4228, P4
   Karpinski M, 2007, 2007 4TH ANNUAL IEEE COMMUNICATIONS SOCIETY CONFERENCE ON SENSOR, MESH AND AD-HOC COMMUNICATIONS AND NETWORKS, VOLS 1 AND 2, P610, DOI 10.1109/SAHCN.2007.4292873
   Kothari N, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P200, DOI 10.1145/1250734.1250757
   Krishnamurthi Shriram., 2007, Programming languages: Application and interpretation
   LEVIS Philip., 2002, P 10 INT C ARCHITECT, P85
   MATHEUS K, 2005, P 5 EUR C EXH INT TR
   MATTHEWS J, 2003, AUTOMAT SOFTW ENG, V11, P337
   Mattos JCB, 2005, SBCCI 2005: 18TH SYMPOSIUM ON INTEGRATED CIRCUITS AND SYSTEMS DESIGN, PROCEEDINGS, P104
   Ni Y, 2005, ACM SIGPLAN NOTICES, V40, P249, DOI 10.1145/1064978.1065040
   Nicholas D., 1978, LIT BIBLIOMETRICS
   Nierstrasz O, 2002, LECT NOTES COMPUT SC, V2370, P200
   Noble James, 2000, Small Memory Software: Patterns for Systems with Limited Memory
   NORDLANDER J, 2002, P 5 IEEE INT S OBJ O
   NORDLANDER J, 1999, THESIS CHALMERS U TE
   Queinnec C, 2003, ACM SIGPLAN NOTICES, V38, P57, DOI 10.1145/772970.772977
   Schultz UP, 2003, ACM SIGPLAN NOTICES, V38, P42, DOI 10.1145/780731.780739
   Simon D., 2006, VEE 2006. Proceedings of the Second International Conference on Virtual Execution Environments, P78
   *TINYOS, 2010, OP SOURC OS NETW SEN
   TITZER B, 2006, P ACM C OBJ OR PROGR, P191
   WARNEKE BA, 2002, P ASME INT MECH ENG, P17
   ZENDRA O, 2006, P WORKSH IMPL COMP O
   Zhang YT, 2002, LECT NOTES COMPUT SC, V2304, P14
   Zhao T, 2004, REAL TIM SYST SYMP P, P241, DOI 10.1109/REAL.2004.51
NR 44
TC 1
Z9 1
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2011
VL 37
IS 4
BP 526
EP 543
DI 10.1109/TSE.2010.66
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 801QT
UT WOS:000293456000005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mariani, L
   Pastore, F
   Pezzè, M
AF Mariani, Leonardo
   Pastore, Fabrizio
   Pezze, Mauro
TI Dynamic Analysis for Diagnosing Integration Faults
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Dynamic Analysis; diagnosis; fault localization; false positive filters;
   regression failure analysis; field failure analysis
ID COMPONENT; SOFTWARE
AB Many software components are provided with incomplete specifications and little access to the source code. Reusing such gray-box components can result in integration faults that can be difficult to diagnose and locate. In this paper, we present Behavior Capture and Test (BCT), a technique that uses dynamic analysis to automatically identify the causes of failures and locate the related faults. BCT augments dynamic analysis techniques with model-based monitoring. In this way, BCT identifies a structured set of interactions and data values that are likely related to failures (failure causes), and indicates the components and the operations that are likely responsible for failures (fault locations). BCT advances scientific knowledge in several ways. It combines classic dynamic analysis with incremental finite state generation techniques to produce dynamic models that capture complementary aspects of component interactions. It uses an effective technique to filter false positives to reduce the effort of the analysis of the produced data. It defines a strategy to extract information about likely causes of failures by automatically ranking and relating the detected anomalies so that developers can focus their attention on the faults. The effectiveness of BCT depends on the quality of the dynamic models extracted from the program. BCT is particularly effective when the test cases sample the execution space well. In this paper, we present a set of case studies that illustrate the adequacy of BCT to analyze both regression testing failures and rare field failures. The results show that BCT automatically filters out most of the false alarms and provides useful information to understand the causes of failures in 69 percent of the case studies.
C1 [Mariani, Leonardo; Pezze, Mauro] Univ Milano Bicocca, Dept Informat Syst & Commun, I-20126 Milan, Italy.
   [Pastore, Fabrizio; Pezze, Mauro] Univ Lugano, Fac Informat, CH-6900 Lugano, Switzerland.
C3 University of Milano-Bicocca; Universita della Svizzera Italiana
RP Mariani, L (corresponding author), Univ Milano Bicocca, Dept Informat Syst & Commun, Edificio U14,Viale Sarca 336, I-20126 Milan, Italy.
EM mariani@disco.unimib.it; fabrizio.pastore@usi.ch; mauro.pezze@usi.ch
RI Pastore, Fabrizio/ABY-9262-2022
OI Pastore, Fabrizio/0000-0003-3541-3641
FU European Community [IST-035157]
FX This work has been partly supported by the European Community under the
   Information Society Technologies (IST) program of the sixth FP for
   RTD-project SHADOWS contract IST-035157.
CR Ammons Glenn, 1997, P ACM SIGPLAN 97 C P, P85, DOI [10.1145/258915, DOI 10.1145/258915]
   [Anonymous], ECL BUG 181288
   [Anonymous], TOMC BUG 40820
   [Anonymous], BIOL ENG
   [Anonymous], ECL PLUG CENT
   [Anonymous], ECL BUG 221738
   [Anonymous], P IEEE 18 INT C AUT
   [Anonymous], JASP REP
   [Anonymous], P 14 INT S FDN SOFTW
   [Anonymous], 610121990 IEEE STAND
   [Anonymous], JAV REFL
   [Anonymous], P 30 INT C SOFTW ENG
   [Anonymous], CRYST REP
   [Anonymous], 1999, Classification
   [Anonymous], P 19 C OBJ OR PROGR
   [Anonymous], TOMC BUG 41939
   [Anonymous], ECL BUG 156532
   [Anonymous], BUG REP ECL PROJ
   [Anonymous], P 12 ACM SIGSOFT
   [Anonymous], P 30 INT C SOFTW ENG
   [Anonymous], 1998, P 4 INT C GRAMM INF
   [Anonymous], ISOLATING FAULTS COM
   [Anonymous], 2007, P 19 IFIP INT C TEST
   [Anonymous], P JOINT M EUR SOFTW
   [Anonymous], ECL TEST PERF TOOLS
   [Anonymous], LTA201001 U MIL BIC
   [Anonymous], SOFTW ART INFR REP S
   BIERMANN AW, 1972, IEEE T COMPUT, VC 21, P592, DOI 10.1109/TC.1972.5009015
   Briand LC, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P137, DOI 10.1109/ISSRE.2007.31
   Chanudaud S, 2000, POSITIF, P97, DOI 10.1109/ICDSN.2000.857521
   Chen W.-K., 1997, GRAPH THEORY ITS ENG
   Cicchello O., 2003, Journal of Machine Learning Research, V4, P603
   Clause J, 2007, PROC INT CONF SOFTW, P261
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   Cook J. E., 1998, ACM Transactions on Software Engineering and Methodology, V7, P215, DOI 10.1145/287000.287001
   Csallner C, 2005, PROC INT CONF SOFTW, P422
   Csallner C, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1348250.1348254
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Godefroid P., 2007, SIGPLAN Notices, V42, P47, DOI [10.1145/1190216.1190226, 10.1145/1190215.1190226]
   Godefroid Patrice, 2005, ACM SIGPLAN NOTICES, P213, DOI DOI 10.1145/1064978.1065036
   Hangal S, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P291, DOI 10.1109/ICSE.2002.1007976
   Harder M, 2003, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2003.1201188
   Henkel J, 2007, IEEE T SOFTWARE ENG, V33, P526, DOI 10.1109/TSE.2007.70705
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Jones JA, 2005, P 20 IEEE ACM INT C, P273
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Leveson NG, 2004, J SPACECRAFT ROCKETS, V41, P564, DOI 10.2514/1.11950
   LIBLIT B, 2005, P 2005 ACM SIGPLAN C, P15, DOI DOI 10.1145/1065010.1065014
   Mariani L, 2005, IEEE INT C ENG COMP, P292
   Mariani L, 2007, IEEE SOFTWARE, V24, P76, DOI 10.1109/MS.2007.138
   Masri W, 2007, IEEE T SOFTWARE ENG, V33, P454, DOI 10.1109/TSE.2007.1020
   McCamant Stephen, 2003, P 9 EUR C HELD JOINT, P287
   Morisio M., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P32, DOI 10.1109/ICSE.2000.870394
   ONCINA J, 1992, S MACH PERC, V1, P49
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Perkins JH, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P87
   PORAT S, 1991, MACH LEARN, V7, P109, DOI 10.1007/BF00114841
   Raz O, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P302, DOI 10.1109/ICSE.2002.1007977
   Reiss SP, 2001, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2001.919096
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Rutar N, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P245, DOI 10.1109/ISSRE.2004.1
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   van der Meulen MJP, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P101, DOI 10.1109/ISSRE.2004.7
   Vasudevan P, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P289, DOI 10.1109/SERA.2006.25
   Weyuker EJ, 1998, IEEE SOFTWARE, V15, P54, DOI 10.1109/52.714817
   Zeller A., 2005, Why Programs Fail: A Guide to Systematic Debugging
   Zeller Andreas., 2002, Proceedings of the 10th ACM SIGSOFT Symposium on Foundations of Software Engineering, SIGSOFT '02/FSE-10, P1, DOI DOI 10.1145/587051.587053
NR 67
TC 58
Z9 61
U1 0
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2011
VL 37
IS 4
BP 486
EP 508
DI 10.1109/TSE.2010.93
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 801QT
UT WOS:000293456000003
DA 2024-07-18
ER

PT J
AU Praditwong, K
   Harman, M
   Yao, X
AF Praditwong, Kata
   Harman, Mark
   Yao, Xin
TI Software Module Clustering as a Multi-Objective Search Problem
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE SBSE; module clustering; multi-objective optimization; evolutionary
   computation
AB Software module clustering is the problem of automatically organizing software units into modules to improve program structure. There has been a great deal of recent interest in search-based formulations of this problem in which module boundaries are identified by automated search, guided by a fitness function that captures the twin objectives of high cohesion and low coupling in a single-objective fitness function. This paper introduces two novel multi-objective formulations of the software module clustering problem, in which several different objectives (including cohesion and coupling) are represented separately. In order to evaluate the effectiveness of the multi-objective approach, a set of experiments was performed on 17 real-world module clustering problems. The results of this empirical study provide strong evidence to support the claim that the multi-objective approach produces significantly better solutions than the existing single-objective approach.
C1 [Praditwong, Kata; Yao, Xin] Univ Birmingham, Sch Comp Sci, Ctr Excellence Res Computat Intelligence & Applic, Birmingham B15 2TT, W Midlands, England.
   [Harman, Mark] UCL, Ctr Res Evolut Search & Testing CREST, Software Engn Grp, Dept Comp Sci, London WC1E 6BT, England.
C3 University of Birmingham; University of London; University College
   London
RP Praditwong, K (corresponding author), Univ Birmingham, Sch Comp Sci, Ctr Excellence Res Computat Intelligence & Applic, Birmingham B15 2TT, W Midlands, England.
EM mark.harman@ucl.ac.uk
RI YAO, XIN/W-2158-2018
OI YAO, XIN/0000-0001-8837-4442; Harman, Mark/0000-0002-5864-4488
FU EPSRC [EP/D050863, EP/0052785]; National Science Foundation of China
   [60428202]; EPSRC [EP/D052785/1] Funding Source: UKRI
FX The authors are grateful to Spiros Mancoridis and Brian Mitchell for
   providing detailed feedback on an earlier version of this paper and also
   for many valuable conversations about software module clustering over
   the past six years. Spiros and Brian also kindly made available both the
   Bunch tool and the MDGs used in this paper. The authors also are
   grateful to Kiarash Mahdavi for providing references, discussions, and
   comments. The anonymous referees also provided detailed, thoughtful, and
   constructive advice which helped to improve the presentation of the
   paper. This work is partially supported by EPSRC (Grant Nos. EP/D050863
   and EP/0052785) and the National Science Foundation of China (Grant No.
   60428202).
CR [Anonymous], 1975, Adatation in Natural and Artificial Systems
   [Anonymous], 1995, FDN SOFTWARE MEASURE
   [Anonymous], FUTURE SOFTWARE ENG
   BIEMAN JM, 1994, IEEE T SOFTWARE ENG, V20, P644, DOI 10.1109/32.310673
   BOWMAN M, 2007, P 23 IEEE INT C SOFT
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P722, DOI 10.1109/32.815329
   Briand LC., 2002, P 14 INT C SOFTW ENG, P43, DOI DOI 10.1145/568760.568769
   BROCKHOFF D, 2007, P GEN EV COMP C, V1, P765
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   COHEN M, 2006, P 8 ANN C GEN EV COM, V2, P1901
   Constantine LarryL., 1979, Structured Design
   Devroye L., 1986, Non-Uniform Random Variate Generation
   DOVAL D, 1999, P INT C SOFTW TOOLS
   Garey M.R., 1979, COMPUTERS INTRACTABI
   HARMAN M, 1997, P 19 INT C SOFTW ENG
   HARMAN M, 2002, P GEN EV COMP C GECC, P1351
   Harman M, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1029
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   Mahdavi K, 2003, PROC IEEE INT CONF S, P315, DOI 10.1109/ICSM.2003.1235437
   Mancoridis S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P50, DOI 10.1109/ICSM.1999.792498
   Mancoridis S, 1998, PROG COMPREHEN, P45, DOI 10.1109/WPC.1998.693283
   Mitchell B.S., 2002, Proc. Genet. Evol. Comput. Conf, P1375
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Moses L.E., 1986, THINK EXPLAIN STAT
   Phalp K., 2001, Software Quality Journal, V9, P223, DOI 10.1023/A:1013858918910
   Praditwong K, 2006, 2006 INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND SECURITY, PTS 1 AND 2, PROCEEDINGS, P286, DOI 10.1109/ICCIAS.2006.294139
   Pressman R.S., 1992, Software Engineering: A Practitioner's Approach, Vthird
   Sommerville I, 2001, Software Engineering
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Yu LG, 2004, IEEE T SOFTWARE ENG, V30, P694, DOI 10.1109/TSE.2004.58
   Zhang YY, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1129
NR 31
TC 247
Z9 264
U1 0
U2 25
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2011
VL 37
IS 2
BP 264
EP 282
DI 10.1109/TSE.2010.26
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 739ZL
UT WOS:000288760900008
DA 2024-07-18
ER

PT J
AU Emberson, P
   Bate, I
AF Emberson, Paul
   Bate, Iain
TI Stressing Search with Scenarios for Flexible Solutions to Real-Time Task
   Allocation Problems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Maintainability; extensibility; heuristics; search; scheduling;
   scenarios
ID OPTIMIZATION; SYSTEMS
AB One of the most important properties of a good software engineering process and of the design of the software it produces is robustness to changing requirements. Scenario-based analysis is a popular method for improving the flexibility of software architectures. This paper demonstrates a search-based technique for automating scenario-based analysis in the software architecture deployment view. Specifically, a novel parallel simulated annealing search algorithm is applied to the real-time task allocation problem to find baseline solutions which require a minimal number of changes in order to meet the requirements of potential upgrade scenarios. Another simulated annealing-based search is used for finding a solution that is similar to an existing baseline when new requirements arise. Solutions generated using a variety of scenarios are judged by how well they respond to different system requirements changes. The evaluation is performed on a set of problems with a controlled set of different characteristics.
C1 [Emberson, Paul; Bate, Iain] Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
C3 University of York - UK
RP Emberson, P (corresponding author), Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
EM paul.emberson@cs.york.ac.uk; iain.bate@cs.york.ac.uk
FU EPSRC [EP/D050618/1]; EPSRC [EP/D050618/1] Funding Source: UKRI
FX This work is funded by the Software Engineering by Automated Search
   (SEBASE) Program, EPSRC Grant EP/D050618/1. The authors would like to
   thank Simon Poulding for his advice on experimental methods.
CR Alba E, 2001, FUTURE GENER COMP SY, V17, P451, DOI 10.1016/S0167-739X(99)00129-6
   Alba E, 2007, INFORM SCIENCES, V177, P2380, DOI 10.1016/j.ins.2006.12.020
   [Anonymous], 2004, DESIGN ANAL EXPT
   Attiya G, 2006, J PARALLEL DISTR COM, V66, P1259, DOI 10.1016/j.jpdc.2006.06.006
   Babar MA, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P309, DOI 10.1109/ASWEC.2004.1290484
   BASS LJ, 2002, PFE 01, P169
   Bate I, 2006, PROCEEDINGS OF THE 12TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, P221
   Beck JE, 1996, EIGHTH IEEE SYMPOSIUM ON PARALLEL AND DISTRIBUTED PROCESSING, PROCEEDINGS, P232, DOI 10.1109/SPDP.1996.570339
   BOEHM BW, 1976, P 2 INT C SOFTW ENG, P592
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   Davis RI, 2008, IEEE T COMPUT, V57, P1261, DOI 10.1109/TC.2008.66
   Eiben AE, 2002, IEEE C EVOL COMPUTAT, P582, DOI 10.1109/CEC.2002.1006991
   EMBERSON P, 2008, P 29 IEEE INT REAL T
   Emberson P, 2007, RTAS 2007: 13TH REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P158
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Hladik PE, 2008, J SYST SOFTWARE, V81, P132, DOI 10.1016/j.jss.2007.02.032
   Hooker J. N., 1995, Journal of Heuristics, V1, P33, DOI 10.1007/BF02430364
   Jansen A, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P109
   KAZMAN R, 1994, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.1994.296768
   Kazman R, 1999, ANN SOFTW ENG, V7, P71, DOI 10.1023/A:1018902725104
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   KOOPMAN P, 1996, P 1996 INT C COMP DE
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Matsumoto M., 1998, ACM Transactions on Modeling and Computer Simulation, V8, P3, DOI 10.1145/272991.272995
   Metzner A, 2006, REAL TIM SYST SYMP P, P147, DOI 10.1109/RTSS.2006.44
   Palencia JC, 1998, REAL TIM SYST SYMP P, P26, DOI 10.1109/REAL.1998.739728
   Peng DT, 1997, IEEE T SOFTWARE ENG, V23, P745, DOI 10.1109/32.637388
   Poulding S, 2007, HASE 2007: 10TH IEEE HIGH ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P53, DOI 10.1109/HASE.2007.27
   Racu R, 2007, INT FED INFO PROC, V231, P57
   Sangiovanni-Vincentelli A, 2007, COMPUTER, V40, P42, DOI 10.1109/MC.2007.344
   Sha L., 2004, Real-Time and Embedded Computing Systems and Applications. 9th International Conference, RTCSA 2003. Revised Papers. (Lecture Notes in Comput. Sci. Vol.2968), P123
   TINDELL KW, 1992, REAL-TIME SYST, V4, P145, DOI 10.1007/BF00365407
   Yin PY, 2007, APPL MATH COMPUT, V184, P407, DOI 10.1016/j.amc.2006.06.071
   Zheng Qi-wei, 2007, Huanjing Kexue, V28, P170
NR 34
TC 17
Z9 17
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2010
VL 36
IS 5
BP 704
EP 718
DI 10.1109/TSE.2009.58
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 653YP
UT WOS:000282135000008
DA 2024-07-18
ER

PT J
AU Zhao, CY
   Kong, J
   Zhang, K
AF Zhao, Chunying
   Kong, Jun
   Zhang, Kang
TI Program Behavior Discovery and Verification: A Graph Grammar Approach
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Visual language; graph grammar induction; program comprehension;
   reengineering
AB Discovering program behaviors and functionalities can ease program comprehension and verification. Existing program analysis approaches have used text mining algorithms to infer behavior patterns or formal models from program execution. When one tries to identify the hierarchical composition of a program behavior at different abstraction levels, textual descriptions are not informative and expressive enough. To address this, we present a semi-automatic graph grammar approach to retrieving the hierarchical structure of the program behavior. The hierarchical structure is built on recurring substructures in a bottom-up fashion. We formulate the behavior discovery and verification problem as a graph grammar induction and parsing problem, i.e., automatically iteratively mining qualified patterns and then constructing graph rewriting rules. Furthermore, using the induced grammar to parse the behavioral structure of a new program could verify if the program has the same behavioral properties specified by the grammar.
C1 [Zhao, Chunying; Zhang, Kang] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75080 USA.
   [Kong, Jun] N Dakota State Univ, Dept Comp Sci, Fargo, ND 58102 USA.
C3 University of Texas System; University of Texas Dallas; North Dakota
   State University Fargo
RP Zhao, CY (corresponding author), Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75080 USA.
EM cxz051000@utdallas.edu; jun.kong@ndsu.edu; kzhang@utdallas.edu
FU HP Labs [2009-1047-1-A]
FX The authors would like to thank the associate editor, Dr. Heinz Schmidt,
   and the anonymous reviewers for their insightful and constructive
   comments that have helped them to significantly improve the
   presentation. The first author is partially supported by the HP Labs
   Innovation Research Program (2009-1047-1-A).
CR Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   [Anonymous], 2005, 1 ECOOP WORKSH BUILD
   Ates K, 2007, PROC INT C TOOLS ART, P456, DOI 10.1109/ICTAI.2007.59
   Ates K, 2006, PROC INT C TOOLS ART, P232
   Baresi L, 2002, LECT NOTES COMPUT SC, V2505, P402
   BARESI L, 2003, P 9 EUR SOFTW ENG C, P68
   Basit Hamid Abdul, 2005, SIGSOFT Softw. Eng. Notes, V30, P156, DOI [10.1145/1095430.1081733, DOI 10.1145/1095430.1081733]
   Briand LC, 2006, IEEE T SOFTWARE ENG, V32, P642, DOI 10.1109/TSE.2006.96
   Casella G., 2004, P IADIS INT C E SOC, P243
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   CHRISTODORESCU M, 2007, P 6 JOINT M EUR SOFT, P5, DOI DOI 10.1145/1287624.1287628
   Cook DJ, 1993, J ARTIF INTELL RES, V1, P231, DOI 10.1613/jair.43
   Cook J. E., 1998, ACM Transactions on Software Engineering and Methodology, V7, P215, DOI 10.1145/287000.287001
   Costagliola G, 2006, IEEE T SOFTWARE ENG, V32, P156, DOI 10.1109/TSE.2006.23
   Costagliola G, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P102, DOI 10.1109/CSMR.2005.23
   Costagliola G, 2004, ACM T SOFTW ENG METH, V13, P431, DOI 10.1145/1040291.1040293
   Costagliola G, 2007, PROC INT CONF DOC, P1078
   CSALLNER C, 2008, ACM T SOFTW ENG METH, V17, P345
   Diep M., 2007, P 22 IEEE ACM INT C, P477
   Dupont P, 2008, APPL ARTIF INTELL, V22, P77, DOI 10.1080/08839510701853200
   Ehrig H., 1999, HDB GRAPH GRAMMARS C
   Hamou-Lhadj A, 2002, PROG COMPREHEN, P159, DOI 10.1109/WPC.2002.1021337
   Hamou-Lhadj A, 2006, INT C PROGRAM COMPRE, P181, DOI 10.1109/ICPC.2006.45
   Hrischuk CE, 2002, IEEE T SOFTWARE ENG, V28, P321, DOI 10.1109/TSE.2002.995416
   HUGHES G, 2007, P INT S SOFTW TEST A, P39, DOI DOI 10.1145/1273463.1273471
   Jin Ruoming., 2005, P 11 ACM SIGKDD INT, P606
   JONYER I, 2003, THESIS U TEXAS ARLIN
   Kiczales Gregor., 2001, Proceedings of the 15th European Conference on Object-Oriented Programming, P327
   Kong J., 2006, ACM Transactions on Computer-Human Interaction, V13, P268, DOI 10.1145/1165734.1165739
   KONG J, 2006, THESIS U TEXAS DALLA
   Kukluk JP, 2006, SIAM PROC S, P544
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Liu XJ, 2001, IEEE SYMPOSIA ON HUMAN-CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P50
   Minas M, 2002, SCI COMPUT PROGRAM, V44, P157, DOI 10.1016/S0167-6423(02)00037-0
   Safyallah H, 2006, INT C PROGRAM COMPRE, P84, DOI 10.1109/ICPC.2006.19
   Salah Maher, 2006, P 10 EUR C SOFTW MAI, P10
   SARTIPI K, 2006, P SOFTW ENG KNOWL EN, P302
   Schurr Andy., 1999, HDB GRAPH GRAMMARS C, P487
   Sommerville I., 2000, Software Engineering, V6
   STANDISH TA, 1984, IEEE T SOFTWARE ENG, V10, P494, DOI 10.1109/TSE.1984.5010272
   Stasko J.T., 1998, SOFTWARE VISUALIZATI
   Taghdiri M., 2006, P 14 ACM SIGSOFT INT, P276
   Ting RMH, 2006, SIAM PROC S, P639
   Walkinshaw N, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P209, DOI 10.1109/WCRE.2007.45
   Weimer W, 2005, LECT NOTES COMPUT SC, V3440, P461
   Xie T, 2007, PROC INT CONF SOFTW, P172, DOI 10.1109/ICSECOMPANION.2007.50
   Yan XF, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P721, DOI 10.1109/ICDM.2002.1184038
   Zaidman A, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P134, DOI 10.1109/CSMR.2005.12
   Zhang DQ, 2001, COMPUT J, V44, P186, DOI 10.1093/comjnl/44.3.186
   Zhang K, 2001, IEEE T SOFTWARE ENG, V27, P289, DOI 10.1109/32.917521
   Zhang X, 2005, Proceedings of the 24th Chinese Control Conference, Vols 1 and 2, P197, DOI 10.1145/1081706.1081738
   ZHAO C, 2009, P 24 ANN ACM S APPL, P549
   ZHAO C, 1920, P 20 IEEE INT C TOOL, P395
   Zhao CY, 2008, IEEE HI ASS SYS ENGR, P449, DOI 10.1109/HASE.2008.9
NR 55
TC 20
Z9 22
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2010
VL 36
IS 3
BP 431
EP 448
DI 10.1109/TSE.2010.3
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 601PB
UT WOS:000278073400010
DA 2024-07-18
ER

PT J
AU Chalin, P
AF Chalin, Patrice
TI Engineering a Sound Assertion Semantics for the Verifying Compiler
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software verification; assertions; programming by contract; logics of
   programs; requirements engineering
ID VERIFIED SOFTWARE; LOGIC; DESIGN
AB The Verifying Compiler ( VC) project is a core component of the Dependable Systems Evolution Grand Challenge. The VC offers the promise of automatically proving that a program or component is correct, where correctness is defined by program assertions. While several VC prototypes exist, all adopt a semantics for assertions that is unsound. This paper presents a consolidation of VC requirements analysis ( RA) activities that, in particular, brought us to ask targeted VC customers what kind of semantics they wanted. Taking into account both practitioners' needs and current technological factors, we offer recovery of soundness through an adjusted definition of assertion validity that matches user expectations and can be implemented practically using current prover technology. For decades, there have been debates concerning the most appropriate semantics for program assertions. Our contribution here is unique in that we have applied fundamental software engineering techniques by asking primary stakeholders what they want and, based on this, proposed a means of efficiently realizing the semantics stakeholders want using standard tools and techniques. We describe how support for the new semantics has been added to ESC/Java2, one of the most fully developed VC prototypes. Case studies demonstrate the effectiveness of the new semantics at uncovering previously indiscernible specification errors.
C1 Concordia Univ, Dependable Software Res Grp, Comp Sci & Software Engn Dept, Montreal, PQ, Canada.
C3 Concordia University - Canada
RP Chalin, P (corresponding author), Concordia Univ, Dependable Software Res Grp, Comp Sci & Software Engn Dept, Montreal, PQ, Canada.
EM chalin@encs.concordia.ca
FU NSERC of Canada [261573-03, -08]; International Conference on Software
   Engineering (ICSE) [23-33, 2007]
FX The author is grateful for the valuable feedback provided by Dan
   Hoffman, Gary Leavens, DSRG members, and the anonymous referees. George
   Karabotsos contributed to early efforts in the implementation of strong
   validity in ESC/Java2. This work was supported in part by NSERC of
   Canada under grants 261573-03 and -08. This paper is an extended version
   of: P. Chalin, " A Sound Assertion Semantics for the Dependable Systems
   Evolution Verifying Compiler," Proceedings of the International
   Conference on Software Engineering (ICSE), pp. 23-33, 2007.
CR [Anonymous], 1997, Object-oriented software construction
   [Anonymous], 1999, CHAOS REC SUCC
   [Anonymous], 2003, High Integrity Software: The SPARK Approach to Safety and Security
   BARNETT M, 2004, P INT WORKSH CONSTR
   Barrett C, 2007, LECT NOTES COMPUT SC, V4590, P298
   BARRINGER H, 1984, ACTA INFORM, V21, P251, DOI 10.1007/BF00264250
   Berezin S, 2005, ELECTRON NOTES THEOR, V125, P13, DOI 10.1016/j.entcs.2004.06.064
   Bicarregui JC, 2006, FORM ASP COMPUT, V18, P143, DOI 10.1007/s00165-005-0079-4
   Bloch J., 2001, EFFECTIVE JAVA PROGR
   Chalin P, 2008, IET SOFTW, V2, P515, DOI 10.1049/iet-sen:20080010
   CHALIN P, 2006, P RIG DEV COMPL FAUL, P100
   CHALIN P, 2008, P INT C VER SOFTW TH
   CHALIN P, 2008, P 15 INT S FORM METH
   CHALIN P, 2005, P 4 INT S FORM METH
   Chalin P, 2007, LECT NOTES COMPUT SC, V4609, P227
   Chalin P, 2007, FORM ASP COMPUT, V19, P139, DOI 10.1007/s00165-006-0016-1
   CHECHIK M, 2002, P 14 INT C COMP AID
   CHEON Y, 2005, P 6 INT S AUT AN DRI
   Cheon Yoonsik, 2003, Ph.D. Dissertation
   Cok DR, 2005, LECT NOTES COMPUT SC, V3362, P108
   CROCKER D, 2005, SAFE OBJECT ORIENTED
   DARVAS A, 2008, P INT JOINT C AUT RE, P100
   Devlin K, 2003, COMMUN ACM, V46, P36, DOI 10.1145/903893.903917
   FISH MR, 2002, P AM C INF SYST
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   Gries D, 1995, LECT NOTES COMPUT SC, V1000, P366
   GRUNDY J, 1993, P INT C FORM METH PR
   Guttag JohnV., 1993, LARCH LANGUAGES TOOL
   Hähnle R, 2005, LOG J IGPL, V13, P415, DOI 10.1093/jigpal/jzi032
   HEHNER ECR, 1984, COMMUN ACM, V27, P144, DOI 10.1145/69610.357990
   HEHNER ECR, 1984, COMMUN ACM, V27, P134, DOI 10.1145/69610.357988
   *HIMSS, 2004, P 15 ANNLEAD SURV
   Hoare C. A. R., 1998, Unifying Theories of Programming
   Hoare T, 2003, J ACM, V50, P63, DOI 10.1145/602382.602403
   HOARE T, 2005, P IFIP WORK C VER SO
   JAMES PR, 2009, P ACM S APPL COMP SO
   Jones C, 2006, COMPUTER, V39, P93, DOI 10.1109/MC.2006.145
   Jones C., 1996, APPL SOFTWARE MEASUR
   JONES CB, 1994, ACTA INFORM, V31, P399, DOI 10.1007/BF01178666
   Jones CB., 1990, SYSTEMATIC SOFTWARE
   KINIRY J, 2006, P WORKSH SPEC VER CO
   Konikowska B., 1991, Fundamenta Informaticae, V14, P411
   Konikowska B., 1993, LECT NOTES COMPUT SC, V3, P39, DOI [10.1080/11663081.1993.10510795, DOI 10.1080/11663081.1993.10510795]
   Kuhn KA, 2001, METHOD INFORM MED, V40, P275
   Kulak D., 2003, USE CASES REQUIREMEN, V2 nd
   LARSEN PG, 2005, P 1 OV WORKSH JUL
   Leavens G. T., 1998, Formal Aspects of Computing, V10, P59, DOI 10.1007/PL00003926
   Leavens G. T., 2006, Design by Contract with JML
   Leavens G.T., 2000, OBJECT ORIENTED PROG, P105
   Leavens GT, 2005, SCI COMPUT PROGRAM, V55, P185, DOI 10.1016/j.scico.2004.05.015
   LEAVENS GT, 2006, JML REFERENCE MANUAL
   Leffingwell D., 2003, Managing Software Requirements: A Use Case Approach
   LEINO KRM, 1999, 1999002 COMPAQ SRC
   LEINO KRM, 1997, P 4 INT WORKSH FDN O
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Morris JM, 1997, INFORM PROCESS LETT, V61, P241, DOI 10.1016/S0020-0190(97)00023-9
   Müller P, 2006, SCI COMPUT PROGRAM, V62, P253, DOI 10.1016/j.scico.2006.03.001
   Nipkow Tobias, 2002, ISABELLE HOL PROOF A
   PEYTONJONES S, 2002, REPORT PROGRAMMING L
   Sagiv M, 2002, ACM T PROGR LANG SYS, V24, P217, DOI 10.1145/514188.514190
   Sauer C., 1999, Rethinking management information systems, P279
   *SRI INT, 2009, PVS SPEC VER SYST
   *STAND GROUP, 2004, CHAOS 3 Q RES REP
   STIDOLPH DC, 2003, P INT S FORM METH EU, P170
   Taylor J, 2000, POPTRONICS, V1, P24
   WILSON T, 2005, P 3 INT C SOFTW ENG
   WING JM, 1987, ACM T PROGR LANG SYS, V9, P1, DOI 10.1145/9758.10500
   WING JM, 1983, 299 MIT LCS
   Winskel G., 1993, The Formal Semantics of Programming Languages
   WOODCOCK JCP, 2003, DEPENDABLE SYSTEMS E
NR 70
TC 5
Z9 5
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2010
VL 36
IS 2
BP 275
EP 287
DI 10.1109/TSE.2009.59
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 574ZH
UT WOS:000276032300010
DA 2024-07-18
ER

PT J
AU Cuadrado, JS
   Molina, JG
AF Sanchez Cuadrado, Jesus
   Garcia Molina, Jesus
TI A Model-Based Approach to Families of Embedded Domain-Specific Languages
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Domain-specific languages; model-driven development; families of DSLs;
   DSL composition
AB With the emergence of model-driven engineering (MDE), the creation of domain-specific languages (DSLs) is becoming a fundamental part of language engineering. The development cost of a DSL should be modest compared to the cost of developing a general-purpose programming language. Reducing the implementation effort and providing reuse techniques are key aspects for DSL approaches to be really effective. In this paper, we present an approach to build embedded domain-specific languages applying the principles of model-driven engineering. On the basis of this approach, we will tackle reuse of DSLs by defining families of DSLs, addressing reuse both from the DSL developer and user point of views. A family of DSLs will be built up by composing several DSLs, so we will propose composition mechanisms for the abstract syntax, concrete syntax, and model transformation levels of a DSL's definition. Finally, we contribute a software framework to support our approach, and we illustrate the paper with a case study to demonstrate its practical applicability.
C1 [Sanchez Cuadrado, Jesus; Garcia Molina, Jesus] Univ Murcia, Dept Comp & Syst, Fac Informat, E-30071 Murcia, Spain.
C3 University of Murcia
RP Cuadrado, JS (corresponding author), Univ Murcia, Dept Comp & Syst, Fac Informat, E-30071 Murcia, Spain.
EM jesusc@um.es; jmolina@um.es
RI GARCIA-MOLINA, JESUS J/X-7078-2019; Sanchez Cuadrado, Jesus/L-2365-2013
OI Sanchez Cuadrado, Jesus/0000-0001-9755-5616
FU Consejeria de Educacion y Cultura (Murcia, Spain) [TIC-INF 06/01-0001];
   Fundacion Seneca (Murcia, Spain) [05645/PI/07]
FX This work has been supported by Consejeria de Educacion y Cultura
   (Murcia, Spain), grant TIC-INF 06/01-0001, and Fundacion Seneca (Murcia,
   Spain), grant 05645/PI/07. The authors thank the reviewers for their
   clear and insightful comments.
CR [Anonymous], 2003, Eclipse Modeling Framework
   [Anonymous], 2004, Software Factories
   BELAUNDE M, 2006, P 1 EUR WORKSH COMP, P45
   Brinkkemper S, 1999, INFORM SYST, V24, P209, DOI 10.1016/S0306-4379(99)00016-2
   Clark T., 2004, APPL METAMODELLING F
   CUADRADO JS, 2008, SOFTWARE SYSTEMS MOD, V8, P325
   CUADRADO JS, 2006, P 9 INT C MOD DRIV E, P336
   Cuadrado LS, 2007, IEEE SOFTWARE, V24, P48, DOI 10.1109/MS.2007.135
   Czarnecki K, 2003, LECT NOTES COMPUT SC, V3016, P51
   Dingel J, 2008, SOFTW SYST MODEL, V7, P443, DOI 10.1007/s10270-007-0073-9
   Ducasse S, 2007, IEEE SOFTWARE, V24, P56, DOI 10.1109/MS.2007.144
   EVANS A, 2003, P 2 WORKSH SOFTW MOD
   FREEMAN S, 2006, COMP 21 ACM SIGPLAN, P855
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gamma Erich., 2003, CONTRIBUTING ECLIPSE
   Graham P., 1994, On LISP: Advanced Techniques for Common Lisp
   Hudak P, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P134, DOI 10.1109/ICSR.1998.685738
   Hudak P., 1996, ACM COMPUT SURV, V28, P196, DOI [10.1145/242224.242477, DOI 10.1145/242224.242477]
   Kamin SN, 1997, PROCEEDINGS OF THE CONFERENCE ON DOMAIN-SPECIFIC LANGUAGES, P297
   KELLY S, 2008, DOMAIN SPECIFC MODEL
   Kleppe A, 2007, LECT NOTES COMPUT SC, V4530, P114
   Kurtev I., 2006, COMPANION 21 ANN ACM, P602, DOI DOI 10.1145/1176617.1176632
   Kurtev I, 2007, SCI COMPUT PROGRAM, V68, P138, DOI 10.1016/j.scico.2007.05.006
   LAMMEL R, 2003, P AOSD 02 WORKSH FDN
   Ledeczi A, 2001, PROCEEDINGS OF THE 2001 IEEE INTERNATIONAL CONFERENCE ON CONTROL APPLICATIONS (CCA'01), P756, DOI 10.1109/CCA.2001.973959
   Lédeczi A, 2001, COMPUTER, V34, P44, DOI 10.1109/2.963443
   LEIJEN D, 1999, P 2 C DOM SPEC LANG
   Leijen D., 2001, UUCS200135
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   *OBJ MAN GROUP INC, 2003, MET OBJ FAC MOF 2 0
   *OMG, 2007, UML SPEC V2 1 2
   Sánchez Cuadrado J, 2006, LECT NOTES COMPUT SC, V4066, P158
   Spinellis D, 2001, J SYST SOFTWARE, V56, P91, DOI 10.1016/S0164-1212(00)00089-3
   Thomas David., 2000, Programming Ruby: the pragmatic programmer's guide
   VANWIJNGAARDEEN JV, 2003, PROGRAM TRANSFORMATI
   VOELTER M, 2008, P 8 OOPSLA WORKSH DO
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
   WIMMER M, 2006, P SAT EV MODELS 05 C, P159
NR 38
TC 19
Z9 20
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2009
VL 35
IS 6
BP 825
EP 840
DI 10.1109/TSE.2009.14
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 524VP
UT WOS:000272172800006
DA 2024-07-18
ER

PT J
AU Masood, A
   Bhatti, R
   Ghafoor, A
   Mathur, A
AF Masood, Ammar
   Bhatti, Rafae
   Ghafoor, Arif
   Mathur, Aditya
TI Scalable and Effective Test Generation for Role-Based Access Control
   Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Role-Based Access Control (RBAC); finite state models; fault model;
   first-order mutants; malicious faults
ID SELECTION; MUTATION
AB Conformance testing procedures for generating tests from the finite state model representation of Role-Based Access Control (RBAC) policies are proposed and evaluated. A test suite generated using one of these procedures has excellent fault detection ability but is astronomically large. Two approaches to reduce the size of the generated test suite were investigated. One is based on a set of six heuristics and the other directly generates a test suite from the finite state model using random selection of paths in the policy model. Empirical studies revealed that the second approach to test suite generation, combined with one or more heuristics, is most effective in the detection of both first-order mutation and malicious faults and generates a significantly smaller test suite than the one generated directly from the finite state models.
C1 [Masood, Ammar] Air Univ, Dept Avion Engn, Inst Avion & Aeronaut, Islamabad, Pakistan.
   [Bhatti, Rafae] Oracle, Redwood Shores, CA 94065 USA.
   [Ghafoor, Arif] Purdue Univ, Sch Elect & Comp Engn, W Lafayette, IN 47907 USA.
   [Mathur, Aditya] Purdue Univ, Dept Comp Sci, W Lafayette, IN 47906 USA.
C3 Air University Islamabad; Oracle; Purdue University System; Purdue
   University; Purdue University System; Purdue University
RP Masood, A (corresponding author), Air Univ, Dept Avion Engn, Inst Avion & Aeronaut, E-9, Islamabad, Pakistan.
EM ammar.masood@mail.au.edu.pk; rafae@ieee.org; ghafoor@ecn.purdue.edu;
   apm@cs.purdue.edu
RI Masood, Ammar/V-3640-2019
CR Ahmed T., 2003, SACMAT '03, P196, DOI DOI 10.1145/775412.775438
   Ahn G.-J., 2000, ACM Transactions on Information and Systems Security, V3, P207, DOI 10.1145/382912.382913
   AHO AV, 1991, IEEE T COMMUN, V39, P1604, DOI 10.1109/26.111442
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], IEEE COMPUT
   [Anonymous], 1992, 15 NAT COMP SEC C
   Belli F, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P24, DOI 10.1109/ISSRE.1996.558687
   Bhatti R., 2005, ACM Transactions on Information and Systems Security, V8, P187, DOI 10.1145/1065545.1065547
   CHANDRAMOULI R, 2004, P 37 HAW INT C SYST, P299
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Cohen DM, 1996, IEEE SOFTWARE, V13, P83, DOI 10.1109/52.536462
   Daran M., 1996, SIGSOFT Software Engineering Notes, V21, P158, DOI [10.1145/229000.226313, 10.1145/226295.226313]
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Drouineaud M, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P60
   Ferraiolo D. F., 2001, ACM Transactions on Information and Systems Security, V4, P224, DOI 10.1145/501978.501980
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   HANSEN F, 2005, P INF SEC PRACT EXP
   Ip CN, 1996, FORM METHOD SYST DES, V9, P41, DOI 10.1007/BF00625968
   Joshi JamesB. D., 2003, Proceedings of the 8th ACM Symposium on Access Control Models and Technologies, P51, DOI DOI 10.1145/775412.775420
   Joshi JBD, 2005, IEEE T KNOWL DATA EN, V17, P4, DOI 10.1109/TKDE.2005.1
   Lupu EC, 1999, IEEE T SOFTWARE ENG, V25, P852, DOI 10.1109/32.824414
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   MASOOD A, 2006, 200624 TR CERIAS PUR
   SABNANI K, 1988, COMPUT NETWORKS ISDN, V15, P285, DOI 10.1016/0169-7552(88)90064-5
   SANDHU RS, 1994, IEEE COMMUN MAG, V32, P40, DOI 10.1109/35.312842
   SIDHU DP, 1989, IEEE T SOFTWARE ENG, V15, P413, DOI 10.1109/32.16602
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
   [No title captured]
NR 28
TC 19
Z9 26
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2009
VL 35
IS 5
BP 654
EP 668
DI 10.1109/TSE.2009.35
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 498PM
UT WOS:000270154300005
DA 2024-07-18
ER

PT J
AU Dig, D
   Manzoor, K
   Johnson, R
   Nguyen, TN
AF Dig, Danny
   Manzoor, Kashif
   Johnson, Ralph
   Nguyen, Tien N.
TI Effective software merging in the presence of object-oriented
   refactorings
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE refactoring; merging; software configuration management; version control
   systems
ID CONFIGURATION MANAGEMENT
AB Current text-based Software Configuration Management (SCM) systems have trouble with refactorings. Refactorings result in global changes, which lead to merge conflicts. A refactoring-aware SCM system reduces merge conflicts. This paper describes MolhadoRef, a refactoring-aware SCM system, and the merge algorithm at its core. MolhadoRef records change operations (refactorings and edits) used to produce one version and replays them when merging versions. Since refactorings are change operations with well-defined semantics, MolhadoRef treats them intelligently. A case study and a controlled experiment show that MolhadoRef automatically solves more merge conflicts than CVS while resulting in fewer merge errors.
C1 [Dig, Danny] MIT, CSAIL, Stata Ctr, Cambridge, MA 02139 USA.
   [Johnson, Ralph] Univ Illinois, Siebel Ctr, Dept Comp Sci, Urbana, IL 61801 USA.
   [Nguyen, Tien N.] Iowa State Univ, Dept Elect & Comp Engn, Ames, IA 50011 USA.
C3 Massachusetts Institute of Technology (MIT); University of Illinois
   System; University of Illinois Urbana-Champaign; Iowa State University
RP Dig, D (corresponding author), MIT, CSAIL, Stata Ctr, Bldg 32-G720,32 Vassar St, Cambridge, MA 02139 USA.
EM dannydig@csail.mit.edu; cashifmanzoor@gmail.com; johnson@cs.uiuc.edu;
   tien@iastate.edu
CR [Anonymous], P USENIX C C USENIX
   ASKLUND U, 1999, P 9 INT S SYST CONF, P100
   Asklund Ulf., 1994, Proceedings ofNordic Workshop on Programming Environment Research, P231
   BERCZUK S, 2002, COMMUNICATION
   BERLAGE T, 1993, P 6 ANN ACM S US INT, P249
   BERZINS V, 1994, ACM T PROGR LANG SYS, V16, P1875, DOI 10.1145/197320.197403
   CHUCARROLL M, 2002, P 10 ACM SIGSOFT S F, P99
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   Cormen ThomasH., 2001, Introduction to Algorithms, V2nd, P549
   Demeyer S, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P123, DOI 10.1109/IWPSE.2005.30
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   DIG D, 2006, UIUCDCSR20062710 U I
   DIG D, 2006, UIUCDCSR20062770 U I
   Dig D, 2007, PROC INT CONF SOFTW, P427
   Dig D, 2006, LECT NOTES COMPUT SC, V4067, P404
   Edwards W. E., 1997, Proceedings of the ACM Symposium on User Interface Software and Technology. 10th Annual Symposium. UIST '97, P139, DOI 10.1145/263407.263533
   Ekman Torbjorn., 2004, Electr. Notes Theor. Comput. Sci, V107, P57, DOI DOI 10.1016/J.ENTCS.2004.02.048
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   HUNT JW, 1977, COMMUN ACM, V20, P350, DOI 10.1145/359581.359603
   Kniesel G, 2004, SCI COMPUT PROGRAM, V52, P9, DOI 10.1016/j.scico.2004.03.002
   LIE A, 1989, ACM SIGSOFT, V17, P56, DOI 10.1145/72910.73348
   Lin YJ, 1996, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.1996.493425
   Lippe Ernst., 1992, Proceedings of the fifth ACM SIGSOFT symposium on Software development environments - SDE 5, P78, DOI DOI 10.1145/142868.143753
   Magnusson B, 1996, LECT NOTES COMPUT SC, V1167, P31, DOI 10.1007/BFb0023079
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   MENS T, 1999, THESIS VRIJE U BRUSS
   MILLER W, 1985, SOFTWARE PRACT EXPER, V15, P1025, DOI 10.1002/spe.4380151102
   MORSE T, 1996, LINUX J, P3
   Nguyen TN, 2005, PROC INT CONF SOFTW, P215
   OHST D, 2003, P 9 EUR SOFTW ENG C, P227
   Rho J, 1998, 1998 ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P236, DOI 10.1109/APSEC.1998.733725
   SHEN H, 2004, P 28 ANN INT COMP SO, P293
   Westfechtel B., 1991, Proceedings of the 3rd International Workshop on Software Configuration Management, P68, DOI 10.1145/111062.111071
   YANG W, 1994, J SYST SOFTWARE, V27, P129, DOI 10.1016/0164-1212(94)90026-4
   YANG W, 1992, ACM T SOFTW ENG METH, V16, P310
   2008, WHATS NEW ECLIPSE 3
NR 36
TC 44
Z9 46
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2008
VL 34
IS 3
BP 321
EP 335
DI 10.1109/TSE.2008.29
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 306CA
UT WOS:000256223600002
DA 2024-07-18
ER

PT J
AU Breaux, TD
   Antón, AI
AF Breaux, Travis D.
   Anton, Annie I.
TI Analyzing regulatory rules for privacy and security requirements
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE data security and privacy; laws and regulations; compliance;
   accountability; requirements engineering
AB Information practices that use personal, financial, and health-related information are governed by US laws and regulations to prevent unauthorized use and disclosure To ensure compliance under the law, the security and privacy requirements,of relevant software systems must properly be aligned with these regulations. However, these regulations describe stakeholder rules, called rights and obligations, in complex and sometimes ambiguous legal language. These "rules" are often precursors to software requirements that must undergo considerable refinement and analysis before they become implementable. To support the software engineering effort to derive security requirements from regulations, we present a methodology for directly extracting access rights and obligations from regulation texts. The methodology provides statement-level coverage for an entire regulatory document to consistently identify and infer six types of data access constraints, handle complex cross references, resolve ambiguities, and assign required priorities between access rights and obligations to avoid unlawful information disclosures. We present results from applying this methodology to the entire regulation text of the US Health Insurance Portability and Accountability Act (HIPAA) Privacy Rule.
C1 [Breaux, Travis D.; Anton, Annie I.] N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27606 USA.
C3 North Carolina State University
RP Breaux, TD (corresponding author), N Carolina State Univ, Dept Comp Sci, Bldh 2,Suite 3231, Raleigh, NC 27606 USA.
EM tdbreaux@ncsu.edu; aianton@ncsu.edu
OI Breaux, Travis/0000-0001-7127-8155
CR [Anonymous], 2000, P INT SCH FDN SEC AN
   [Anonymous], 2005, 3 S REQTS ENGR INFO
   Anton AI, 2004, IEEE SECUR PRIV, V2, P36, DOI 10.1109/MSECP.2004.1281243
   Antón AI, 2004, REQUIR ENG, V9, P169, DOI 10.1007/s00766-003-0183-z
   Anton AI, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P136, DOI 10.1109/ICRE.1996.491438
   Ashley P., 2002, P 2002 ACM WORKSH PR, P103, DOI [10.1145/644527.644538, DOI 10.1145/644527.644538]
   Ashley P., 2002, P NEW SECURITY PARAD, P43
   BREAUX T. D., 2006, TR200614 N CAR STAT
   Breaux TD, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P177, DOI 10.1109/RE.2005.12
   Breaux TD, 2005, SIXTH IEEE INTERNATIONAL WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, PROCEEDINGS, P67, DOI 10.1109/POLICY.2005.12
   BREAUX TD, IN PRESS ACM T SOFTW
   BREAUX TD, 2007, TR20076 N CAR STAT U
   Breaux TD, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P49
   Breaux TD, 2006, SEVENTH IEEE INTERNATIONAL WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, PROCEEDINGS, P227, DOI 10.1109/POLICY.2006.18
   Breaux TravisD., 2005, WPES '05, P51, DOI DOI 10.1145/1102199.1102210
   Brodie Carolyn, 2005, SOUPS '05: Proceedings of the 2005 Symposium on Usable Privacy and Security, V93, P35, DOI 10.1145/1073001.1073005
   *BUR LAB STAT, 2007, CARR GUID IND 2006 2
   BYON JW, 2005, P 10 ACM S ACC CONTR, P102
   FARRELL CB, 2006, 0523069 FTC OFF PUBL
   Garner B.A., 2004, BLACKS LAW DICT, V8th
   Giorgini P, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P167, DOI 10.1109/RE.2005.43
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Haley CB, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P102
   Haley CharlesB., 2004, PROC AOSD 04, P112, DOI [10.1145/976270.976285, DOI 10.1145/976270.976285]
   HOOFNAGLE CJ, 2004, RE REQUEST INVESTIGA
   Horty J.F., 2001, AGENCY DEONTIC LOGIC
   JACKSON M, 1995, PROC INT CONF SOFTW, P283, DOI 10.1145/225014.225041
   Jackson M., 1993, PROC IEEE 1 INT S RE, P56
   LEE SW, 2006, P INT WORKSHOP SOFTW, P43
   Lin L, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P371
   May M.J., 2006, CSFW, P85
   Mylopoulos J, 1999, COMMUN ACM, V42, P31, DOI 10.1145/291469.293165
   *OAS STAND GROUP, 2005, EXT ACC CONTR MARK L
   Reagle J, 1999, COMMUN ACM, V42, P48, DOI 10.1145/293411.293455
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   van Lamsweerde A, 2004, PROC INT CONF SOFTW, P148, DOI 10.1109/ICSE.2004.1317437
   Verhanneman T., 2005, P 1 WORKSH SOFTW ENG, V30, P1
   Xu DX, 2006, P INT COMP SOFTW APP, P79
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
   2003, FED REG          FEB, V68, P8334
   2006, FED REG          FEB, V71, P8389
NR 41
TC 161
Z9 195
U1 1
U2 34
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2008
VL 34
IS 1
BP 5
EP 20
DI 10.1109/TSE.2007.70746
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 265QH
UT WOS:000253375500002
DA 2024-07-18
ER

PT J
AU Zou, Y
   Zhang, Q
   Zhao, XL
AF Zou, Ying
   Zhang, Qi
   Zhao, Xulin
TI Improving the usability of e-commerce applications using business
   processes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 22nd IEEE International Conference on Software Maintenance
CY SEP 24-27, 2006
CL Philadelphia, PA
SP IEEE
DE graphical user interface; user interface reengineering; business
   process; process definition; usability
ID WORKFLOW AUTOMATION; WEB; INTERFACES
AB E-commerce applications automate many daily business activities. Users interact with e-commerce applications through menu-driven User Interface (UI) components such as toolbars, dialogs, and windows. However, the tremendous number of functionalities may overwhelm the users. Users struggle to locate the appropriate UI components to accomplish the tasks required by business processes. In this paper, we enhance e-commerce applications by improving their usability using the knowledge embedded in business process definitions. Our improved application provides contextual information to fulfill each business task. The improved application guides users through the various tasks in a step-by-step fashion. Through a controlled experiment, we demonstrate that our improved application offers a better usability experience for novice users by giving them more guidance and reducing the time needed to locate the next UI component in a complex UI.
C1 Queens Univ, Dept Elect & Comp Engn, Kingston, ON K7L 3N6, Canada.
   Univ Waterloo, Devid R Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 Queens University - Canada; University of Waterloo
RP Zou, Y (corresponding author), Queens Univ, Dept Elect & Comp Engn, Walter Light Hall,19 Union St, Kingston, ON K7L 3N6, Canada.
EM ying.zou@queensu.ca; q8zhang@cs.uwaterloo.ca
CR [Anonymous], 2007, RES BASED WEB DESIGN
   Antoniol Giuliano., 2000, PROC INT WORKSHOP WE, P9
   Aversano L, 2002, J SYST SOFTWARE, V63, P29, DOI 10.1016/S0164-1212(01)00128-5
   Biazzo Stefano., 2000, Business Process Management Journal, V6, P99
   BODHUIN T, 2003, P 10 WORK C REV ENG, P329
   BRAMBILLA M., 2003, Journal of Web Engineering, V1, P163
   BUSCHMANN F, 1998, SYSTEM PATTERNS
   Cachero C, 2000, LECT NOTES COMPUT SC, V1875, P206
   COSTABILE M, 2001, HDB SOFTWARE ENG KNO
   Damianou N, 2001, LECT NOTES COMPUT SC, V1995, P18
   De Lucia A, 2005, WSE 2005: SEVENTH IEEE INTERNATIONAL SYMPOSIUM ON WEB SITE EVOLUTION, PROCEEDINGS, P103
   De Lucia A, 2004, PROG COMPREHEN, P132, DOI 10.1109/WPC.2004.1311055
   Di Lucca GA, 2003, FIFTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION THEME: ARCHITECTURE, PROCEEDINGS, P12, DOI 10.1109/WSE.2003.1234004
   Di Lucca GA, 2002, SIXTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P241, DOI 10.1109/CSMR.2002.995811
   Di Lucca GA, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P231, DOI 10.1109/WCRE.2001.957827
   GANTI N, 1995, TRANSITION LEGACY SY
   GEORGAKOPOULOS D, 1995, DISTRIB PARALLEL DAT, V3, P119, DOI 10.1007/BF01277643
   Grant D, 2002, COMMUN ACM, V45, P85, DOI 10.1145/503124.503128
   GUELL N, 2000, P WORLD WIDE WEB CON, P115
   Hammer M., 1994, REENGINEERING CORPOR
   Henninger S, 2000, INTERACT COMPUT, V12, P225, DOI 10.1016/S0953-5438(99)00013-2
   Hung MK, 2007, INT C PROGRAM COMPRE, P198
   Hunt KL, 1997, PROCEEDINGS OF THE 1997 WINTER SIMULATION CONFERENCE, P1275, DOI 10.1145/268437.268771
   *IBM, 2007, WEB DES GUID
   *IBM CORP, 2007, US INT ARCH
   IDEN J, 1995, P C ORG COMP SYST, P75
   *ISO, 2007, 9126 ISO
   *ISO, 1997, ERG REQ OFF WORK VIS
   Jajodia S, 2001, ACM T DATABASE SYST, V26, P214, DOI 10.1145/383891.383894
   JANSENVULLERS M, 2004, P 6 INT C EL COMM, P291
   Johnson J, 2003, WEB BLOOPERS 60 COMM
   KAMM C, 1998, P 5 INT C SPOK LANG, P1211
   KOCH N, 2003, P 3 INT WORKSH WEB O
   Merlo E., 1993, Proceedings of Working Conference on Reverse Engineering (Cat. No.93TH0534-8), P171, DOI 10.1109/WCRE.1993.287767
   MOLICH R, 1990, COMMUN ACM, V33, P338, DOI 10.1145/77481.77486
   Montgomery DC, 2009, Engineering statistics
   MOORE M, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P72, DOI 10.1109/ICSM.1994.336788
   Moore MM, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P52, DOI 10.1109/WCRE.2000.891452
   NIELSEN J, 2001, J NIELSENS ALERTBOX
   Nielsen J, 2000, WHY YOU ONLY NEED TE
   *OR WORKFL, 2006, FEAT OV OR 9I APPL S
   PADILLA M, 2003, STRIKE BALANCE USERS
   PING Y, 2004, P 8 EUR C SOFTW MAIN, P204
   Plaisant C, 1997, IEEE SOFTWARE, V14, P66, DOI 10.1109/52.595958
   Ricca F., 2001, IEEE Multimedia, V8, P40, DOI 10.1109/93.917970
   Scholtz J., 1998, P 4 C HUM FACT WEB
   Shneiderman B., 2010, DESIGNING USER INTER
   SLISKI T, 2001, ACM SIGSOFT SOFTW EN, V26, P33
   Stroulia E., 2003, Automated Software Engineering, V10, P271, DOI 10.1023/A:1024460315173
   Stroulia E, 2002, PROC IEEE INT CONF S, P320, DOI 10.1109/ICSM.2002.1167788
   Tidwell J., 2010, Designing interfaces: Patterns for effective interaction design
   TUCKER K, 1999, P 6 WORK C REV ENG, P56
   Vanderdonckt J, 1999, INTERACT COMPUT, V12, P81, DOI 10.1016/S0953-5438(99)00019-3
   VANNIAMPARAMPIL A, CSTR767 U MARYL DEP, P95
   VANWELIE M, 2007, WEB DESIGN PATTERNS
   Vassileva J, 1996, USER MODEL USER-ADAP, V6, P185, DOI 10.1007/BF00143967
   VERING M, 2001, EBUSINESS WORKPLACE
   WALKER M, 1999, P ASRU WORKSH KEYST, P1167
   Weske M, 2004, DATA KNOWL ENG, V50, P1, DOI 10.1016/j.datak.2004.01.001
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zhang Q., 2005, P IBM CTR ADV STUD C, P320
   Zhang Q, 2006, PROC IEEE INT CONF S, P428
   Zou Y, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P224
   ZOU Y, 2006, P 2006 INT C SOFTW E, P799
   Zou Y, 2006, INT C PROGRAM COMPRE, P127
   2006, WEBSPHERE MQ WORKFLO
   2006, WORKFLOW MANAGEMENT
   2007, WORKFLOW PROCESS DEF
   [No title captured]
   2007, CORE SPECIFICATION E
   2007, INERFACE HALL SHAME
   2006, WEBSPHERE BUSINESS M
NR 72
TC 16
Z9 23
U1 2
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2007
VL 33
IS 12
BP 837
EP 855
DI 10.1109/TSE.2007.70708
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 223RG
UT WOS:000250389400004
DA 2024-07-18
ER

PT J
AU Pai, GJ
   Dugan, JB
AF Pai, Ganesh J.
   Dugan, Joanne Bechta
TI Empirical analysis of software fault content and fault proneness using
   Bayesian methods
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Bayesian analysis; Bayesian networks; defects; fault proneness; metrics;
   object-oriented; regression; software quality
ID METRICS; COMPLEXITY; QUALITY
AB We present a methodology for Bayesian analysis of software quality. We cast our research in the broader context of constructing a causal framework that can include process, product, and other diverse sources of information regarding fault introduction during the software development process. In this paper, we discuss the aspect of relating internal product metrics to external quality metrics. Specifically, we build a Bayesian network (BN) model to relate object-oriented software metrics to software fault content and fault proneness. Assuming that the relationship can be described as a generalized linear model, we derive parametric functional forms for the target node conditional distributions in the BN. These functional forms are shown to be able to represent linear, Poisson, and binomial logistic regression. The models are empirically evaluated using a public domain data set from a software subsystem. The results show that our approach produces statistically significant estimations and that our overall modeling method performs no worse than existing techniques.
C1 IESE, D-67663 Kaiserslautern, Germany.
   Univ Virginia, Charles L Brown Dept Elect & Comp Engn, Charlottesville, VA 22904 USA.
C3 University of Virginia
RP Pai, GJ (corresponding author), IESE, Fraunhofer Pl 1, D-67663 Kaiserslautern, Germany.
EM ganesh.pai@iese.fraunhofer.de; j.b.dugan@ieee.org
RI Pai, Ganesh/G-4516-2013
OI Pai, Ganesh/0000-0002-9848-3754
CR Abdi H., 2007, ENCY MEASUREMENT STA, P740
   [Anonymous], P INT C SOFTW ENG
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Berger J. O., 1985, STAT DECISION THEORY, DOI DOI 10.1007/978-1-4757-4286-2
   Bishop CM, 2003, ADV LEARNING THEORY, V190, P267
   Box G. E. P., 1992, Bayesian inference in statistical analysis, DOI DOI 10.1002/9781118033197.CH4
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   BRIAND LC, 2002, ADV COMPUTERS, V56
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   FENTON N, 2002, IEEE SOFTWARE, V10
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fenton N, 2007, INFORM SOFTWARE TECH, V49, P32, DOI 10.1016/j.infsof.2006.09.001
   Gras L, 2004, IEEE SOFTWARE, V21, P98, DOI 10.1109/MS.2004.1331312
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Heckerman D., 1999, LEARNING GRAPHICAL M
   Humphrey W S, 1995, A discipline for software engineering
   Jensen FV, 1996, INTRO BAYESIAN NETWO
   KHOSHGOFTAAR TM, 1992, IEEE T SOFTWARE ENG, V18, P979, DOI 10.1109/32.177367
   MINANA EP, 2006, SOFTW TEST VERIF REL, V16, P157
   NAGAPPAN N, 2006, P INT S SOFTW REL
   Neil M., 2003, Software Engineering with Computational Intelligence
   NEIL M, 1996, P 21 ANN SOFTW ENG W
   NIKORA AP, 1998, THESIS U S CALIFORNI
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   PAI GJ, 2007, THESIS U VIRGINIA DE
   ROSENBERG L, 1995, SATCTR951001
   Spiegelhalter DJ, 2002, J R STAT SOC B, V64, P583, DOI 10.1111/1467-9868.00353
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Zhou YM, 2006, IEEE T SOFTWARE ENG, V32, P771, DOI 10.1109/TSE.2006.102
NR 31
TC 117
Z9 130
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 7
PY 2007
VL 33
IS 10
BP 675
EP 686
DI 10.1109/TSE.2007.70722
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 204XB
UT WOS:000249076200003
DA 2024-07-18
ER

PT J
AU Sampath, S
   Sprenkle, S
   Gibson, E
   Pollock, L
   Greenwald, AS
AF Sampath, Sreedevi
   Sprenkle, Sara
   Gibson, Emily
   Pollock, Lori
   Greenwald, Amie Souter
TI Applying concept analysis to user-session-based testing of web
   applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software testing; Web applications; user-session-based testing; test
   suite reduction; concept analysis; incremental test suite reduction
AB The continuous use of the Web for daily operations by businesses, consumers, and the government has created a great demand for reliable Web applications. One promising approach to testing the functionality of Web applications leverages the user session data collected by Web servers. User-session-based testing automatically generates test cases based on real user profiles. The key contribution of this paper is the application of concept analysis for clustering user sessions and a set of heuristics for test case selection. Existing incremental concept analysis algorithms are exploited to avoid collecting and maintaining large user-session data sets and to thus provide scalability. We have completely automated the process from user session collection and test suite reduction through test case replay. Our incremental test suite update algorithm, coupled with our experimental study, indicates that concept analysis provides a promising means for incrementally updating reduced test suites in response to newly captured user sessions with little loss in fault detection capability and program coverage.
C1 Univ Maryland, Dept Informat Syst, Baltimore, MD 21250 USA.
   Washington & Lee Univ, Dept Comp Sci, Lexington, VA 24450 USA.
   Univ Delaware, Dept Comp & Informat Sci, Newark, DE 19716 USA.
   Alcatel Lucent Bell Labs, Murray Hill, NJ 07974 USA.
C3 University System of Maryland; University of Maryland Baltimore;
   Washington & Lee University; University of Delaware; Alcatel-Lucent
RP Sampath, S (corresponding author), Univ Maryland, Dept Informat Syst, 1000 Hilltop Circle, Baltimore, MD 21250 USA.
EM sampath@umbc.edu; sprenkles@wlu.edu; gibson@cis.udel.edu;
   pollock@cis.udel.edu; agreenwald@alcatel-lucent.com
RI Sprenkle, Sara/AAB-4566-2020
CR Andrews A, 2005, SOFTWARE SYSTEMS MOD, V4, P326, DOI DOI 10.1007/S10270-004-0077-7
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], P ACM C
   Ball T, 1999, LECT NOTES COMPUT SC, V1687, P216, DOI 10.1145/318774.318944
   Benedikt Michael., 2002, Proceedings of the 11th international conference on World Wide Web (WWW02)
   Birkhoff G., 1940, LATTICE THEORY, V5
   Chen TY, 1996, INFORM PROCESS LETT, V60, P135, DOI 10.1016/S0020-0190(96)00135-4
   DENG Y., 2004, SIGSOFT SOFTWARE ENG, V29, P1
   Di Lucca GA, 2002, PROC IEEE INT CONF S, P310, DOI 10.1109/ICSM.2002.1167787
   Dickinson W., 2001, ESEC FSE 01, P246, DOI DOI 10.1145/503209.503243
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Elbaum S, 2005, IEEE T SOFTWARE ENG, V31, P187, DOI 10.1109/TSE.2005.36
   FU C, 2004, P ACM SIGSOFT INT S, P23
   GODIN R, 1995, COMPUT INTELL-US, V11, P246, DOI 10.1111/j.1467-8640.1995.tb00031.x
   Harder M, 2003, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2003.1201188
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   HOWER R, 2007, WEB SITE TEST TOOLS
   Jacobson I., 1995, SCENARIO BASED DESIG, p309 336
   Jeffrey D, 2005, PROC IEEE INT CONF S, P549
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Kirda E., 2001, IEEE Multimedia, V8, P58, DOI 10.1109/93.923954
   KRONE M, 1994, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.1994.296765
   Kuipers T, 2000, PROG COMPREHEN, P221, DOI 10.1109/WPC.2000.852496
   Kung DC, 2000, FIRST ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P111, DOI 10.1109/APAQ.2000.883784
   Leon D, 2005, PROC INT CONF SOFTW, P412
   Leon D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P442, DOI 10.1109/ISSRE.2003.1251065
   Lindig C, 1997, PROC INT CONF SOFTW, P349, DOI 10.1145/253228.253354
   Liu CH, 2000, FIRST ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P7, DOI 10.1109/APAQ.2000.883773
   MASTER SM, 2005, P 21 IEEE INT C SOFT, P539
   OFFUTT J, 1995, P 12 INT C TEST COMP, P111
   OFFUTT J, 2004, P WORKSH TEST AN VER
   Podgurski A, 1999, ACM T SOFTW ENG METH, V8, P263, DOI 10.1145/310663.310667
   Ricca F, 2001, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2001.919078
   Sampath S, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P132, DOI 10.1109/ASE.2004.1342731
   SAMPATH S, 2006, THESIS U DELAWARE
   Sampath S, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P266
   SANT J, 2005, P 3 INT WORKSH DYNAM
   Siff M, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P170, DOI 10.1109/ICSM.1997.624243
   SNELTING G, 1998, P ACM SIGSOFT S FDN, P99, DOI DOI 10.1145/288195.288273
   Sprenkle S, 2005, PROC IEEE INT CONF S, P587
   Sprenkle Sara., 2005, AUTOMAT SOFTW ENG, P253, DOI DOI 10.1145/1101908.1101947
   Tallam Sriraman., 2005, PASTE 05, P35, DOI [10.1145/1108768.1108802, DOI 10.1145/1108768.1108802]
   Tonella P, 2001, IEEE T SOFTWARE ENG, V27, P351, DOI 10.1109/32.917524
NR 43
TC 64
Z9 94
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 7
PY 2007
VL 33
IS 10
BP 643
EP 658
DI 10.1109/TSE.2007.70723
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 204XB
UT WOS:000249076200001
DA 2024-07-18
ER

PT J
AU Baker, BS
AF Baker, Brenda S.
TI Finding clones with dup: Analysis of an experiment
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE redundant code; duplicated code; software clones
ID ALGORITHMS
AB An experiment was carried out by a group of scientists to compare different tools and techniques for detecting duplicated or near-duplicated source code. The overall comparative results are presented elsewhere. This paper takes a closer look at the results for one tool, Dup, which finds code sections that are textually the same or the same except for systematic substitution of parameters such as identifiers and constants. Various factors that influenced the results are identified and their impact on the results is assessed via rerunning Dup with changed options and modifications. These improve the performance of Dup with regard to the experiment and could be incorporated into a postprocessor to be used with other tools.
RP Baker, BS (corresponding author), 140 North Rd, Berkeley Hts, NJ 07922 USA.
EM brendabaker@ieee.org
CR AMIR A, 1994, INFORM PROCESS LETT, V49, P111, DOI 10.1016/0020-0190(94)90086-8
   [Anonymous], P 36 ANN S FDN COMP
   Baker B. S., 1993, Proceedings of the Twenty-Fifth Annual ACM Symposium on the Theory of Computing, P71, DOI 10.1145/167088.167115
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Baker BS, 1997, SIAM J COMPUT, V26, P1343, DOI 10.1137/S0097539793246707
   Baker BS, 1996, J COMPUT SYST SCI, V52, P28, DOI 10.1006/jcss.1996.0003
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   BELLON S, 2004, DETECTION SOFTWARE C
   BELLON S, IN PRESS IEEE T SOFT
   Crochemore M., 2003, Jewels of stringology
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   IDURY RM, 1994, P 5 ANN S COMB PATT, P226
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   KERNIGHAN B, 1991, COMMUNICATION
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Lague B, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P314, DOI 10.1109/ICSM.1997.624264
   MARYRAN J, 1996, P INT C SOFTW MAIN, P244
   MCCREIGHT EM, 1976, J ACM, V23, P262, DOI 10.1145/321941.321946
NR 18
TC 36
Z9 41
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2007
VL 33
IS 9
BP 608
EP 621
DI 10.1109/TSE.2007.70720
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 202EO
UT WOS:000248885000003
DA 2024-07-18
ER

PT J
AU Murtojaervi, M
   Järvinen, J
   Johnsson, M
   Leipälä, T
AF Murtojaervi, Mika
   Jaervinen, Jouni
   Johnsson, Mika
   Leipaelae, Timo
TI Determining the proper number and price of software licenses
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software release management and delivery; queuing theory; mathematical
   modeling; simulation
AB Software houses sell their products by transferring usage licenses of various software components to the customers. Depending on the kind of software, there are several different license types that allow controlled access of services. The two most popular types are the fixed license, which gives access rights for an identified workstation, and the floating license, which restricts the number of simultaneous users to a certain bound. The latter of these types is advantageous when the users do not demand full-time services and occasional lack of access is bearable. The problem of deciding the number of floating licenses is studied in the present paper. Based on the expected usage profile of the software, we calculate the minimal number of licenses that guarantees that the customers get service better than a given lower bound. The problem is studied by using certain queuing models, known as the Erlang loss system, the Erlang delay system, and the Engset model. None of these analytic models consider, however, the transient period that we analyze by means of simulation and by the so-called modified offered load approximation. We also give simple formulas presenting how the number of software licenses needed to keep the probability of nonaccess below a given blocking level grows as a function of the offered load, which is the proportion of the time used in the case that all requests were successful. Results of the study may be used for setting license prices and for determining the proper number of licenses.
C1 Univ Turku, Dept Informat Technol, FI-20014 Turku, Finland.
   Valor Computerized syst Finland, FIN-20540 Turku, Finland.
   Univ Turku, Dept Math, FI-20014 Turku, Finland.
C3 University of Turku; University of Turku
RP Murtojaervi, M (corresponding author), Univ Turku, Dept Informat Technol, FI-20014 Turku, Finland.
EM mika.murtojarvi@utu.fi; jouni.jarvinen@utu.fi; mika.johnsson@valor.com;
   leipala@utu.fi
RI Järvinen, Jouni/E-4885-2014
OI Järvinen, Jouni/0000-0002-8729-8633
CR [Anonymous], 1981, INTRO QUEUING THEORY
   Bouras C, 2003, DISCRETE APPL MATH, V129, P49, DOI 10.1016/S0166-218X(02)00233-0
   DAIGLE JN, 1988, P IEEE INFOCOM 88, P871
   DAVIS JL, 1995, MANAGE SCI, V41, P1107, DOI 10.1287/mnsc.41.6.1107
   GREEN L, 1991, MANAGE SCI, V37, P84, DOI 10.1287/mnsc.37.1.84
   Gross D., 1985, Wiley series in probability and mathematical statistics, V2nd
   HALD A, 1957, STAT THEORY ENG APPL
   Iversen V.B., 2003, TELETRAFFIC ENG HDB
   KIMURA T, 1995, MATH COMPUT MODEL, V22, P157, DOI 10.1016/0895-7177(95)00192-5
   KOOLE G, 2001, 20017 VRIJ U AMST DE
   MURTOJARVI M, 2004, LICENSE CALCULATOR A
   Rolls DA, 2005, COMPUT NETW, V48, P447, DOI 10.1016/j.comnet.2004.11.016
   Sharp DS, 2004, IEEE J SEL AREA COMM, V22, P1197, DOI 10.1109/JSAC.2004.829339
   SIVAZLIAN BD, 1975, ANAL SYSTEMS OPERATI
   Smith D. K., 2002, Journal of Applied Mathematics and Decision Sciences, V6, P43, DOI 10.1155/S1173912602000032
   WILLEMAIN TR, 2001, 3804510 DSES
NR 16
TC 6
Z9 6
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2007
VL 33
IS 5
BP 305
EP 315
DI 10.1109/TSE.2007.1003
PG 11
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 151PR
UT WOS:000245303400003
DA 2024-07-18
ER

PT J
AU Liu, C
   Fei, L
   Yan, XF
   Han, J
   Midkiff, SP
AF Liu, Chao
   Fei, Long
   Yan, Xifeng
   Han, Jiawei
   Midkiff, Samuel P.
TI Statistical debugging: A hypothesis testing-based approach
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE debugging aids; statistical methods; statistical debugging
AB Manual debugging is tedious, as well as costly. The high cost has motivated the development of fault localization techniques, which help developers search for fault locations. In this paper, we propose a new statistical method, called SOBER, which automatically localizes software faults without any prior knowledge of the program semantics. Unlike existing statistical approaches that select predicates correlated with program failures, SOBER models the predicate evaluation in both correct and incorrect executions and regards a predicate as fault-relevant if its evaluation pattern in incorrect executions significantly diverges from that in correct ones. Featuring a rationale similar to that of hypothesis testing, SOBER quantifies the fault relevance of each predicate in a principled way. We systematically evaluate SOBER under the same setting as previous studies. The result clearly demonstrates the effectiveness: SOBER could help developers locate 68 out of the 130 faults in the Siemens suite by examining no more than 10 percent of the code, whereas the Cause Transition approach proposed by Holger et al. [6] and the statistical approach by Liblit et al. [12] locate 34 and 52 faults, respectively. Moreover, the effectiveness of SOBER is also evaluated in an "imperfect world," where the test suite is either inadequate or only partially labeled. The experiments indicate that SOBER could achieve competitive quality under these harsh circumstances. Two case studies with grep 2.2 and bc 1.06 are reported, which shed light on the applicability of SOBER on reasonably large programs.
C1 Univ Illinois, Dept Comp Sci, Urbana, IL 61801 USA.
   Purdue Univ, Sch Elect & Comp Engn, W Lafayette, IN 47907 USA.
C3 University of Illinois System; University of Illinois Urbana-Champaign;
   Purdue University System; Purdue University
RP Liu, C (corresponding author), Univ Illinois, Dept Comp Sci, 1304 W Springfield Ave, Urbana, IL 61801 USA.
EM chaoliu@cs.uiuc.edu; lfei@purdue.edu; xyan@cs.uiuc.edu; hanj@cs.uiuc.edu
RI yan, xi/ITV-4972-2023
OI Midkiff, Samuel/0000-0003-0246-7192
CR Agrawal H, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P143, DOI 10.1109/ISSRE.1995.497652
   Andrew J Ko, 2004, P SIGCHI C HUMAN FAC, V6, P151, DOI [DOI 10.1145/985692.985712, 10.1145/985692.985712]
   [Anonymous], 2001, STAT INFERENCE
   [Anonymous], VERIFICATION SEQUENT
   Ayalew Y., 2003, P EUR SPREADSH RISKS
   Boyapati C., 2002, ISSTA 02, P123, DOI DOI 10.1145/566172.566191
   Brun Y, 2004, PROC INT CONF SOFTW, P480, DOI 10.1109/ICSE.2004.1317470
   Clarke EM, 1999, MODEL CHECKING, P1
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   Cover Thomas A., 1991, ELEM INF THEORY, DOI 10.1002/047174882X
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Dickinson W, 2001, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2001.919107
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Engler Dawson R., 2001, Proceedings of the 18th ACM Symposium on Operating Systems Principles, P57
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   GUPTA N, 2005, P 20 IEEE ACM INT C, P263
   Hangal S, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P291, DOI 10.1109/ICSE.2002.1007976
   Harrold MJ, 2000, SOFTW TEST VERIF REL, V10, P171, DOI 10.1002/1099-1689(200009)10:3<171::AID-STVR209>3.0.CO;2-J
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Jones JA, 2005, P 20 IEEE ACM INT C, P273
   LIBLIT B, 2005, P 2005 ACM SIGPLAN C, P15, DOI DOI 10.1145/1065010.1065014
   LIBLIT B, 2003, P ACM SIGPLAN 2003 C, P141
   Liu DH, 2005, AM J TRANSPLANT, V5, P295
   Lyle J., 1987, Proceedings of the ICCEA, ICCEA'87, P877
   MISURAD J, 2005, P 14 INT C COMP CONS, P242
   Musuvathi M, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P75, DOI 10.1145/1060289.1060297
   Pacheco C, 2005, LECT NOTES COMPUT SC, V3586, P504
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   Pytlik Brock., 2003, Proceedings of AADEBUG'03, P273
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Rothermel G, 1998, IEEE T SOFTWARE ENG, V24, P401, DOI 10.1109/32.689399
   Ruthruff JR, 2005, PROC INT CONF SOFTW, P352
   TIP F, 1995, J PROGRAM LANG, V3, P121
   VESSEY I, 1985, INT J MAN MACH STUD, V23, P459, DOI 10.1016/S0020-7373(85)80054-7
   Visser W, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ASE.2000.873645
   WHEELER D, 2006, SLOCCOUNT SET TOOLS
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zeller Andreas., 2002, Proceedings of the 10th ACM SIGSOFT Symposium on Foundations of Software Engineering, SIGSOFT '02/FSE-10, P1, DOI DOI 10.1145/587051.587053
   Zimmermann T, 2002, LECT NOTES COMPUT SC, V2269, P191
NR 40
TC 175
Z9 223
U1 1
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2006
VL 32
IS 10
BP 831
EP 848
DI 10.1109/TSE.2006.105
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 096OC
UT WOS:000241385700005
DA 2024-07-18
ER

PT J
AU Freimut, B
   Briand, LC
   Vollei, F
AF Freimut, B
   Briand, LC
   Vollei, F
TI Determining inspection cost-effectiveness by combining project data and
   expert opinion
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software inspection; cost-effectiveness model; Monte Carlo simulation;
   case study; expert opinion
AB There is a general agreement among software engineering practitioners that software inspections are an important technique to achieve high software quality at a reasonable cost. However, there are many ways to perform such inspections and many factors that affect their cost-effectiveness. It is therefore important to be able to estimate this cost-effectiveness in order to monitor it, improve it, and convince developers and management that the technology and related investments are worthwhile. This work proposes a rigorous but practical way to do so. In particular, a meaningful model to measure cost-effectiveness is proposed and a method to determine cost-effectiveness by combining project data and expert opinion is described. To demonstrate the feasibility of the proposed approach, the results of a large-scale industrial case study are presented and an initial validation is performed.
C1 Fraunhofer Inst Expt Software Engn, D-67663 Kaiserslautern, Germany.
   Simula Res Lab, N-1325 Lysaker, Norway.
   Siemens AG, D-81359 Munich, Germany.
C3 Fraunhofer Gesellschaft; Siemens AG; Siemens Germany
RP Fraunhofer Inst Expt Software Engn, Fraunhofer Pl 1, D-67663 Kaiserslautern, Germany.
EM freimut@iese.fraunhofer.de; briand@simula.no;
   Ferdinand.vollei@siemens.com
CR ACKERMAN AF, 1989, IEEE SOFTWARE, V6, P31, DOI 10.1109/52.28121
   [Anonymous], 1992, PRACTICAL SOFTWARE M
   [Anonymous], 1982, JUDGMENT UNCERTAINTY
   Briand L, 1998, PROC INT CONF SOFTW, P340, DOI 10.1109/ICSE.1998.671387
   Briand LC, 1998, PROC INT CONF SOFTW, P390, DOI 10.1109/ICSE.1998.671392
   Briand LC, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P124, DOI 10.1109/ISSRE.2000.885866
   COLLOFELLO JS, 1989, J SYST SOFTWARE, V9, P191, DOI 10.1016/0164-1212(89)90039-3
   EBENAU RG, 1993, SOFTWARE INSPECTION
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   FRANKLIN RE, 1994, WEED TECHNOL, V8, P6, DOI 10.1017/S0890037X00039129
   Gilb Tom, 1993, Software inspections
   GRADY RB, 1994, IEEE SOFTWARE, V11, P46, DOI 10.1109/52.300084
   HOFER E, 1986, NUCL ENG DES, V93, P153, DOI 10.1016/0029-5493(86)90214-1
   HORA SC, 1989, NUCL SCI ENG, V102, P323, DOI 10.13182/NSE89-A23645
   Host M, 1997, INFORM SOFTWARE TECH, V39, P755, DOI 10.1016/S0950-5849(97)00027-X
   Jalote P, 1998, PROC INT CONF SOFTW, P371, DOI 10.1109/ICSE.1998.671390
   Jones C., 1997, SOFTWARE QUALITY
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   KITSON DH, 1993, PROC INT CONF SOFTW, P68, DOI 10.1109/ICSE.1993.346055
   KUSUMOTO S, 1992, IEICE T INF SYST, VE75D, P674
   LAITENBERGER O, 2002, VISEK011E
   Meyer M., 1991, ELICITING ANAL EXPER
   MOSLEH A, 1987, PROBABILISTIC SAFETY, V1, P152
   OPPENHEIM AN, 1992, QUESTIOINNAIRE DESIG
   *PAL CORP, 2000, RISK ADV RISK AN SPR
   Radice R., 2002, HIGH QUALITY LOW COS
   RICO D, 2004, ROI SOFTWARE PROCESS
   Rosqvist T, 2003, SOFTWARE QUAL J, V11, P39, DOI 10.1023/A:1023741528816
   Saaty T., 1980, The Analytic Hierarchy Process: Planning, Priority Setting, Resource Allocation
   SABALIAUSKAITE G, 2004, THESIS
   VANSOLINGEN R, 2004, IEEE SOFTWARE    MAY, P32
   Vose D., 1996, QUANTITATIVE RISK AN
NR 32
TC 16
Z9 19
U1 1
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2005
VL 31
IS 12
BP 1074
EP 1092
DI 10.1109/TSE.2005.136
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 995RU
UT WOS:000234122300007
DA 2024-07-18
ER

PT J
AU Jorgensen, M
   Carelius, GJ
AF Jorgensen, M
   Carelius, GJ
TI An empirical study of software project bidding
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE cost estimation; risk management; software psychology
ID DECISION; UTILITY
AB The study described in this paper reports from a real-life bidding process in which 35 companies were bidding for the same contract. The bidding process consisted of two separate phases: a prestudy phase and a bidding phase. In the prestudy phase, 17 of the 35 bidding companies provided rough price indications based on a brief, incomplete description of user requirements. In the bidding phase, all 35 companies provided bids based on a more complete requirement specification that described a software system with substantially more functionality than the system indicated in the prestudy phase. The main result of the study is that the 17 companies involved in the prestudy phase presented bids that were, on average, about 70 percent higher than the bids of the other companies, although all companies based their bids on the same requirement specification. We propose an explanation for this difference that is consistent with the "prospect theory" and the "precautionary bidding effect." A possible implication of our findings is that software clients should not request early price indications based on limited and uncertain information when the final bids can be based on more complete and reliable information.
C1 Simula Res Lab, N-1325 Lysaker, Norway.
RP Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
EM magne.jorgensen@simula.no; carelius@simula.no
RI Jorgensen, Magne/H-4402-2016
CR [Anonymous], 2002, RIS VER 2002 BUND KO
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   ESO P, 2003, CTR EC POLICY RES DI, V3975, P1
   Friedman M, 1948, J POLIT ECON, V56, P279, DOI 10.1086/256692
   GILLEY OW, 1986, MANAGE SCI, V32, P673, DOI 10.1287/mnsc.32.6.673
   Hays W.L., 1963, STAT PSYCHOLOGISTS
   Jorgensen M., 2004, International Journal of Project Management, V22, P317, DOI 10.1016/S0263-7863(03)00085-1
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P79, DOI 10.1016/S0164-1212(02)00160-7
   Jorgensen M, 2001, INFORM SOFTWARE TECH, V43, P939, DOI 10.1016/S0950-5849(01)00203-8
   JORGENSEN M, 2004, UNPUB UNDERSTANDING
   KAHNEMAN D, 1979, ECONOMETRICA, V47, P263, DOI 10.2307/1914185
   Kerzner H., 2003, PROJECT MANAGEMENT S
   Kingsman BG, 1997, INT J PROD ECON, V53, P119, DOI 10.1016/S0925-5273(97)00116-3
   Kitchenham B, 2003, IEEE T SOFTWARE ENG, V29, P542, DOI 10.1109/TSE.2003.1205181
   Markowitz H, 1952, J POLIT ECON, V60, P151, DOI 10.1086/257177
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   Plous S., 1993, PSYCHOL JUDGMENT DEC
   Tweedley N., 1995, Winning the bid: A manager's guide to competitive bidding
   Whyte G, 1997, ORGAN BEHAV HUM DEC, V69, P75, DOI 10.1006/obhd.1996.2674
NR 19
TC 27
Z9 27
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2004
VL 30
IS 12
BP 953
EP 969
DI 10.1109/TSE.2004.92
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 881RI
UT WOS:000225886200008
DA 2024-07-18
ER

PT J
AU Binkley, D
   Harman, M
AF Binkley, D
   Harman, M
TI Analysis and visualization of predicate dependence on formal parameters
   and global variables
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE dependence analysis; program slicing; program comprehension; software
   maintenance
ID PROGRAM; SUPPORT
AB Empirical data concerning the qualitative and quantitative nature of program dependence is presented for a set of 20 programs ranging from 600 lines of code to 167,000 lines of code. The sources of dependence considered are global variables and formal parameters and the targets considered are a program's predicate nodes. The results show that as the number of formal parameters available to a predicate increases, there is a decrease in the proportion of these formal parameters which are depended upon by the predicate. No such correlation was found for global variables. Results from theoretical and actual computation time analysis indicate that the computation of dependence information is practical, suggesting that the analysis may be beneficial to several application areas. The paper also presents results concerning correlations that provide strong evidence that the global and formal dependence sources are independent of one another and that the numbers of globals and formals are independent of the size of the procedure that contains them. Finally, two visualization techniques for displaying dependence information are introduced. Illustrations show how these visualizations and predicate dependence analysis can assist in activities such as testing, comprehension, and evolution.
C1 Loyola Coll, Baltimore, MD 21210 USA.
   Kings Coll London, London WC2R 2LS, England.
C3 Loyola University Maryland; University of London; King's College London
RP Loyola Coll, Baltimore, MD 21210 USA.
EM binkley@cs.loyola.edu; Mark@dcs.kcl.ac.uk
OI Harman, Mark/0000-0002-5864-4488
CR AGRAWAL H, 1994, SIGPLAN NOTICES, V29, P302, DOI 10.1145/773473.178456
   Andersen L. O., 1994, Ph.D. thesis
   [Anonymous], P IFIP INT WORKSH DE
   [Anonymous], CSR9438 CENTR WISK I
   [Anonymous], P 1 INT C SYST INT
   Atkinson D. C., 1998, Software Engineering Notes, V23, P46, DOI 10.1145/291252.288217
   Ball T., 1994, Proceedings. IEEE Symposium on Visual Languages (Cat. No.94TH8010), P288, DOI 10.1109/VL.1994.363606
   BALL T, 1993, P 1 INT WORKSH AUT A, P206
   Balmas F, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P145, DOI 10.1109/SCAM.2002.1134114
   BIEMAN JM, 1994, IEEE T SOFTWARE ENG, V20, P644, DOI 10.1109/32.310673
   Binkley D, 2004, ADV COMPUT, V62, P105, DOI 10.1016/S0065-2458(03)62003-6
   Binkley D, 2003, PROC INT CONF SOFTW, P330, DOI 10.1109/ICSE.2003.1201212
   Binkley D, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P203, DOI 10.1109/SCAM.2003.1238046
   Binkley D, 2000, PROG COMPREHEN, P161, DOI 10.1109/WPC.2000.852490
   Binkley D., 1996, Advances in Computers, V43, P1
   Canfora G, 1998, INFORM SOFTWARE TECH, V40, P595, DOI 10.1016/S0950-5849(98)00086-X
   CHOI JD, 1994, ACM T PROGR LANG SYS, V16, P1097, DOI 10.1145/183432.183438
   DeLucia A, 1996, FOURTH WORKSHOP ON PROGRAM COMPREHENSION, PROCEEDINGS, P9, DOI 10.1109/WPC.1996.501116
   Ferguson R., 1996, ACM Transactions on Software Engineering and Methodology, V5, P63, DOI 10.1145/226155.226158
   GALLAGHER KB, 1992, P INT C SOFTW MAINT, P236
   *GRAMM INC, 2002, COD SLIC SYST
   Harman M, 2004, IEEE T SOFTWARE ENG, V30, P3, DOI 10.1109/TSE.2004.1265732
   Harman M, 1998, J SOFTW MAINT-RES PR, V10, P415, DOI 10.1002/(SICI)1096-908X(199811/12)10:6<415::AID-SMR180>3.0.CO;2-Z
   HARMAN M, 1995, J SOFTWARE TESTING V, V5, P143
   HARMAN M, 2001, SOFTWARE FOCUS, V2, P85
   HARMAN M, 1997, P 19 ICSE WORKSH PRO
   Harris N, 1998, LIBRARY, V20, P74
   Hierons R., 1999, Software Testing, Verification and Reliability, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:4<233::AID-STVR191>3.0.CO;2-3
   HIND M, 2001, PROGR AN SOFTW TOOLS
   Holland J.H., 1975, ADAPTION NATURAL ART
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   HORWITZ S, 1988, P ACM SIGPLAN C PROG, P25
   HORWITZ S, 1995, P 3 ACM SIGSOFT S FD, P104
   Jones BF, 1998, COMPUT J, V41, P98, DOI 10.1093/comjnl/41.2.98
   Jones BF, 1996, SOFTWARE ENG J, V11, P299, DOI 10.1049/sej.1996.0040
   Komondoor R, 2003, PROG COMPREHEN, P33
   Komondoor R., PROC 27 ACM SIGPLAN, DOI [10.1145/325694.325713, DOI 10.1145/325694.325713]
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Korel B, 1998, PROG COMPREHEN, P145, DOI 10.1109/WPC.1998.693339
   Krinke J, 2002, PROC IEEE INT CONF S, P22, DOI 10.1109/ICSM.2002.1167744
   Kumar S, 2002, LECT NOTES COMPUT SC, V2306, P96
   Kusumoto S., 2002, Empirical Software Engineering, V7, P49, DOI 10.1023/A:1014823126938
   Lakhotia A, 1998, INFORM SOFTWARE TECH, V40, P677, DOI 10.1016/S0950-5849(98)00091-3
   LAKHOTIA A, 2003, VIRUS B          SEP
   Larsen L, 1996, PROC INT CONF SOFTW, P495, DOI 10.1109/ICSE.1996.493444
   LIANG D, 1999, P FDN SOFTW ENG
   Lyle J., 1987, Proceedings of the ICCEA, ICCEA'87, P877
   LYLE JR, 1995, 5691 NISTIR US DEP C
   Mancoridis S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P50, DOI 10.1109/ICSM.1999.792498
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   Mitchell M., 1999, INTRO GENETIC ALGORI, DOI DOI 10.1016/S0898-1221(96)90227-8
   MOCK M, 2002, P 10 ACM SIGSOFT S F, P71
   Mueller F, 1998, FOURTH IEEE REAL-TIME TECHNOLOGY AND APPLICATIONS SYMPOSIUM - PROCEEDINGS, P144, DOI 10.1109/RTTAS.1998.683198
   NING JQ, 1994, COMMUN ACM, V37, P50, DOI 10.1145/175290.175295
   Offutt AJ, 1999, SOFTWARE PRACT EXPER, V29, P167, DOI 10.1002/(SICI)1097-024X(199902)29:2<167::AID-SPE225>3.0.CO;2-V
   Orso A, 2001, PROC IEEE INT CONF S, P158, DOI 10.1109/ICSM.2001.972726
   Orso A, 2001, PROG COMPREHEN, P39, DOI 10.1109/WPC.2001.921712
   PARGAS RP, 1999, J SOFTWARE TESTING V, V9, P263
   Pohlheim H, 1999, GECCO-99: PROCEEDINGS OF THE GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1795
   REPS T, 1994, P ACM SIGSOFT 94 S F, P11
   RILLING J, 2002, P 10 WORK C REV ENG, P42
   SCHULTZ AC, 1993, IEEE EXPERT, V8, P9, DOI 10.1109/64.236476
   SHAPIRO M, 1997, LECT NOTES COMPUTER, V1302, P16
   Sinha S., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P432, DOI 10.1109/ICSE.1999.841033
   Steensgaard B., 1996, 23 ANN ACM SIGACT SI, P32, DOI DOI 10.1145/237721.237727
   TARJAN RE, 1974, J COMPUT SYST SCI, V9, P355, DOI 10.1016/S0022-0000(74)80049-8
   TIP F, 1995, J PROGRAM LANG, V3, P121
   TRACEY N, 1998, P INT S SOFTW TEST A, P73
   VENKATESH GA, 1995, ACM T PROGR LANG SYS, V17, P197, DOI 10.1145/201059.201062
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Wegener J, 1997, SOFTWARE QUAL J, V6, P127, DOI 10.1023/A:1018551716639
   Wegener J., 1996, P 4 INT C SOFTW TEST
   WEISER M, 1982, COMMUN ACM, V25, P446, DOI 10.1145/358557.358577
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Weiser MD., 1979, PROGRAM SLICES FORMA
   YONG SH, 1999, P ACM C PROGR LANG D, P91
   Yur J.-S., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P442, DOI 10.1109/ICSE.1999.841034
   Zhang XY, 2003, INT SYM CODE GENER, P325, DOI 10.1109/CGO.2003.1191556
   Zhang ZG, 2003, PROC INT CONF SOFTW, P319
NR 79
TC 20
Z9 21
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2004
VL 30
IS 11
BP 715
EP 735
DI 10.1109/TSE.2004.78
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 867OX
UT WOS:000224853000002
DA 2024-07-18
ER

PT J
AU Souter, AL
   Pollock, LL
AF Souter, AL
   Pollock, LL
TI The construction of contextual def-use associations for object-oriented
   systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE D.3.2.p object-oriented languages; D.2.5.m testing coverage of code;
   object flow analysis
AB This paper describes a program representation and algorithms for realizing a novel structural testing methodology that not only focuses on addressing the complex features of object-oriented languages, but also incorporates the structure of object-oriented software into the approach. The testing methodology is based on the construction of contextual def-use associations, which provide context to each definition and use of an object. Testing based on contextual def-use associations can provide increased test coverage by identifying multiple unique contextual def-use associations for the same context-free association. Such a testing methodology promotes more thorough and focused testing of the manipulation of objects in object-Oriented programs. This paper presents a technique for the construction of contextual def-use associations, as well as detailed examples illustrating their construction, an analysis of the cost of constructing contextual def-use associations with this approach, and a description of a prototype testing tool that shows how the theoretical contributions of this work can be useful for structural test coverage.
C1 Drexel Univ, Dept Comp Sci, Philadelphia, PA 19104 USA.
   Univ Delaware, Newark, DE 19716 USA.
C3 Drexel University; University of Delaware
RP Souter, AL (corresponding author), Drexel Univ, Dept Comp Sci, 3141 Chestnut St, Philadelphia, PA 19104 USA.
CR ALEXANDER R, 1999, P INT C EXH TECHN OB
   BACON DF, 1996, P C OBJ OR PROGR SYS
   BUY U, 2000, P ACM SIGSOFT INT S
   CHATTERJEE R, 1999, P ACM SIGPLAN SIGACT
   CHEN MH, 1999, P INT S SOFTW REL EN
   FROHLICH M, 1994, GRAPH VISULIZATION S
   HARROLD MJ, 1994, P S FDN SOFTW ENG
   JIN Z, 1998, SOFTW TEST VERIF REL, V8, P133
   JORGENSEN PC, 1994, COMMUN ACM, V37, P30, DOI 10.1145/182987.182989
   KUNG D, 1995, COMMUN ACM, V38, P75, DOI 10.1145/226239.226256
   ORSO A, 1998, THESIS POLITECNICO M
   RINARD M, 2002, FLEX FLEX GROUP
   SOUTER A, 1999, P ACM WORKSH PROGR A
   SOUTER AL, 2001, P C TOOLS ALG CONSTR
   SOUTER AL, 2001, P ACM WORKSH PROGR A
   SOUTER AL, 2000, P ACM SIGSOFT INT S
   WHALEY J, 1999, P ACM SIGPLAN C OBJ
   WSOUTER AL, 2002, THESIS U DELAWARE
   [No title captured]
NR 19
TC 20
Z9 21
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2003
VL 29
IS 11
BP 1005
EP 1018
DI 10.1109/TSE.2003.1245302
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 740KU
UT WOS:000186402200005
DA 2024-07-18
ER

PT J
AU Boland, PJ
   Singh, H
   Cukic, B
AF Boland, PJ
   Singh, H
   Cukic, B
TI Comparing partition and random testing via majorization and Schur
   functions
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE partition testing; random testing; software debugging; majorization;
   Schur functions
ID OPTIMAL ALLOCATION; RELIABILITY; FAILURES; PARALLEL; SYSTEM
AB The comparison of partition and random sampling methods for software testing has received considerable attention in the literature. A standard criterion for comparisons between random and partition testing based on their expected efficacy in program debugging is the probability of detecting at least one failure causing input in the program's domain. We investigate the relative effectiveness of partition testing versus random testing through the powerful mathematical technique of majorization, which was introduced by Hardy et al. The tools of majorization and the concepts of Schur (convex and concave) functions enable us to derive general conditions under which partition testing is superior to random testing and, consequently, to give further insights into the value of partition testing strategies.
C1 Natl Univ Ireland Dublin, Dept Stat, Dublin 4, Ireland.
   W Virginia Univ, Dept Stat, Morgantown, WV 26506 USA.
   W Virginia Univ, Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
C3 University College Dublin; West Virginia University; West Virginia
   University
RP Natl Univ Ireland Dublin, Dept Stat, Dublin 4, Ireland.
EM Philip.J.Boland@ucd.ie; hsingh@stat.wvu.edu; cukic@csee.wvu.edu
RI Cukic, Bojan/B-8287-2009
OI Cukic, Bojan/0000-0001-7130-9054
CR [Anonymous], RELIABILITY FAULT TR
   Bishop P. G., 1993, P 23 INT S FAULT TOL, P98
   BISHOP PG, 1988, P IEEE INT S FAULT T
   BOLAND PJ, 1994, J APPL PROBAB, V31, P180, DOI 10.2307/3215245
   Chen TY, 1996, IEEE T SOFTWARE ENG, V22, P109, DOI 10.1109/32.485221
   CHEN TY, 1994, IEEE T SOFTWARE ENG, V20, P977, DOI 10.1109/32.368132
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   FINELLI GB, 1988, P AIAA AHS ASEE AIRC
   Frankl PG, 1998, IEEE T SOFTWARE ENG, V24, P586, DOI 10.1109/32.707695
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P202, DOI 10.1109/32.221133
   Gutjahr WJ, 1999, IEEE T SOFTWARE ENG, V25, P661, DOI 10.1109/32.815325
   HAMLET D, 1990, IEEE T SOFTWARE ENG, V16, P1402, DOI 10.1109/32.62448
   Hardy G, 1952, INEQUALITIES
   Hecht H., 1994, P ANN REL MAINT S AN, P334
   HECHT H, 1997, P 2 IEEE HIGH ASS SY
   Hierons R. M., 1997, Software Testing, Verification and Reliability, V7, P153, DOI 10.1002/(SICI)1099-1689(199709)7:3<153::AID-STVR141>3.0.CO;2-4
   JENG BC, 1989, ACM SIGSOFT, V14, P38, DOI 10.1145/75309.75314
   Marshall A. W., 1979, Inequalities: Theory of Majorization and its Applications
   Nicol DM, 1996, IEEE T COMPUT, V45, P730, DOI 10.1109/12.506428
   Prasad VR, 1998, IEEE T RELIAB, V47, P255, DOI 10.1109/24.740496
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   Schur I., 1923, Sitzungsberichte der Berliner Mathematischen Gesellschaft, V22, P51
   SHAKED M, 1992, ADV APPL PROBAB, V24, P894, DOI 10.2307/1427718
   WEYUKER EJ, 1980, IEEE T SOFTWARE ENG, V6, P236, DOI 10.1109/TSE.1980.234485
   WEYUKER EJ, 1991, IEEE T SOFTWARE ENG, V17, P703, DOI 10.1109/32.83906
NR 26
TC 21
Z9 22
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2003
VL 29
IS 1
BP 88
EP 94
DI 10.1109/TSE.2003.1166591
PG 7
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 633GD
UT WOS:000180273500007
DA 2024-07-18
ER

PT J
AU Huai, YQ
   Almanee, S
   Chen, YTY
   Wu, XF
   Chen, QA
   Garcia, J
AF Huai, Yuqi
   Almanee, Sumaya
   Chen, Yuntianyi
   Wu, Xiafa
   Chen, Qi Alfred
   Garcia, Joshua
TI scenoRITA : Generating Diverse, Fully Mutable, Test Scenarios for
   Autonomous Vehicle Planning
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Embedded/cyber-physical systems; search-based software engineering;
   software testing
ID EVOLUTIONARY ALGORITHMS
AB Autonomous Vehicles (AVs) leverage advanced sensing and networking technologies (e.g., camera, LiDAR, RADAR, GPS, DSRC, 5G, etc.) to enable safe and efficient driving without human drivers. Although still in its infancy, AV technology is becoming increasingly common and could radically transform our transportation system and by extension, our economy and society. As a result, there is tremendous global enthusiasm for research, development, and deployment of AVs, e.g., self-driving taxis and trucks from Waymo and Baidu. The current practice for testing AVs uses virtual tests-where AVs are tested in software simulations-since they offer a more efficient and safer alternative compared to field operational tests. Specifically, search-based approaches are used to find particularly critical situations. These approaches provide an opportunity to automatically generate tests; however, systematically creating valid and effective tests for AV software remains a major challenge. To address this challenge, we introduce scenoRITA, a test generation approach for AVs that uses an evolutionary algorithm with (1) a novel gene representation that allows obstacles to be fully mutable, hence, resulting in more reported violations and more diverse scenarios, (2) 5 test oracles to determine both safety and motion sickness-inducing violations and (3) a novel technique to identify and eliminate duplicate tests. Our extensive evaluation shows that scenoRITA can produce test scenarios that are more effective in revealing ADS bugs and more diverse in covering different parts of the map compared to other state-of-the-art test generation approaches.
C1 [Huai, Yuqi; Chen, Yuntianyi] Univ Calif Irvine, Software Engn Program, Donald Bren Sch Informat & Comp Sci, Irvine, CA 92697 USA.
   [Almanee, Sumaya] Univ Calif Irvine, Irvine, CA 92697 USA.
   [Wu, Xiafa] Univ Calif Irvine, Donald Bren Sch Informat & Comp Sci, Comp Sci Program, Irvine, CA 92697 USA.
   [Chen, Qi Alfred; Garcia, Joshua] Univ Calif Irvine, Sch Informat & Comp Sci, Irvine, CA 92697 USA.
C3 University of California System; University of California Irvine;
   University of California System; University of California Irvine;
   University of California System; University of California Irvine;
   University of California System; University of California Irvine
RP Garcia, J (corresponding author), Univ Calif Irvine, Sch Informat & Comp Sci, Irvine, CA 92697 USA.
EM yhuai@uci.edu; salmanee@uci.edu; yuntianc@uci.edu; xiafaw@uci.edu;
   alfchen@uci.edu; joshug4@uci.edu
RI Garcia, Joshua/AAO-4575-2021; Chen, Yuntianyi/KSL-9292-2024
OI Garcia, Joshua/0000-0002-1696-8783; Chen, Yuntianyi/0000-0002-3497-4167;
   Huai, Yuqi/0000-0002-4792-8215; Wu, Xiafa/0009-0005-4381-4594
FU NSF [1823262, 1929771, 1932464, 2145493]
FX This work was supported by NSF under Grants 1823262, 1929771, 1932464,
   and 2145493.
CR Abdullin A, 2021, 2021 IEEE/ACM 14TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST 2021), P32, DOI 10.1109/SBST52555.2021.00014
   Althoff M, 2018, IEEE INT VEH SYM, P1326, DOI 10.1109/IVS.2018.8500374
   [Anonymous], 2021, Anthropometric reference data for children and adults: United States, 2015-2018
   [Anonymous], 2018, New York TimesMar
   [Anonymous], 2019, Measuring motion sickness in driverless cars
   [Anonymous], Release apollo-v7.0.0 ApolloAuto/apollo
   [Anonymous], Apollo-master LGSVL camera perception
   [Anonymous], 3D ground truth sensor cannot detect pedestrian
   [Anonymous], 2022, Study: The most dangerous intersections in Orange county
   [Anonymous], 2023, Mercury NewsSep
   [Anonymous], Cclinus/AV-Fuzzer
   [Anonymous], Waymo and intel collaborate on self-driving car technology
   [Anonymous], Apollo 7.0 + LGSVL 2021.2 sometimes does not complete a sharp turn
   [Anonymous], Running ADFuzz for more than 1 hour
   [Anonymous], Fix: Added missing predecessor and successor for Borregas avenue HD map
   [Anonymous], 2009, PID speed control
   [Anonymous], 1992, Federal size regulations for commercial motor vehicles
   [Anonymous], Error after 100 simulations
   [Anonymous], Self-driving fundamentals: Featuring Apollo
   [Anonymous], 2021, Ecosystem
   [Anonymous], Uber AV: Autonomous mobility and delivery
   [Anonymous], LGSVL pedestrian not showing up in Apollo
   [Anonymous], 2021, Open vehicles compatible with apollo
   [Anonymous], Reproducing result for the archived paper #15
   [Anonymous], Yuqihuai/SORA-SVL: Local SVL cloud
   [Anonymous], Baidu Apollo: An open autonomous driving platform
   [Anonymous], 2022, Apollo's Sim Control
   [Anonymous], TESLA AUTOPILOT
   [Anonymous], 2020, New York TimesFeb
   [Anonymous], Who is at fault in a car accident changing lanes in California
   [Anonymous], SVL Simulator Sunset
   [Anonymous], 2018, Deutsche Welle4 Jul
   [Anonymous], Apollo-master camera object detection (Smoke)
   [Anonymous], Adfuzz/stack2_svl_apollo.md at main AIasd/ADFuzz GitHub
   [Anonymous], 2021, Dreamland's grading system
   [Anonymous], 2016, Guardian
   [Anonymous], Who is at fault in an accident when changing lanes?
   [Anonymous], 2020, New York TimesJan
   [Anonymous], Who is at fault in a rear-end collision?
   [Anonymous], AIasd/ADFuzz: An open-source software package for fuzzing autonomous driving systems in high-fidelity simulators
   [Anonymous], 2012, Bicycle road safety audit guidelines and prompt lists
   [Anonymous], 2009, Analysis of lane-change crashes and near-crashes
   [Anonymous], Autoware: Open-Source To Self-Driving
   [Anonymous], Reimplementation-AVFuzzer
   [Anonymous], 2021, 2021 IEEEACM 14 INT, P1
   [Anonymous], 2022, PROC IEEE INT C ARTI
   [Anonymous], 2022, 2022 IEEEACM 15 INT, P1
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Automated Vehicle Standards Committee, 2018, Taxonomy and definitions for terms related to driving automation systems for on-road motor vehicles, DOI [10.4271/J3016_201806, DOI 10.4271/J3016_201806]
   Bellem H, 2018, TRANSPORT RES F-TRAF, V55, P90, DOI 10.1016/j.trf.2018.02.036
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Ben Abdessalem R, 2016, IEEE INT CONF AUTOM, P63, DOI 10.1145/2970276.2970311
   Bertoncello M., 2015, Ten Ways Autonomous Driving Could Redefine the Automotive World, V6
   Calò A, 2020, IEEE INT CONF SOFTW, P375, DOI 10.1109/ICST46399.2020.00045
   Castellano E, 2021, 2021 IEEE/ACM 14TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST 2021), P36, DOI 10.1109/SBST52555.2021.00016
   Corso A, 2019, IEEE INT C INTELL TR, P163, DOI 10.1109/ITSC.2019.8917242
   Deb K., 2000, Parallel Problem Solving from Nature PPSN VI. 6th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1917), P849
   Ebadi H, 2021, THIRD IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST 2021), P103, DOI 10.1109/AITEST52744.2021.00030
   Erbsmehl Christian., 2009, 21st International Technical Conference on the Enhanced Safety of Vehicles (ESV) National Highway Traffic Safety, P09
   Ester M., 1996, KDD 96, P226, DOI DOI 10.5555/3001460.3001507
   Felton R., 2018, JalopnikFeb
   Fortin FA, 2012, J MACH LEARN RES, V13, P2171
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Gambi A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P318, DOI 10.1145/3293882.3330566
   Gambi A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3338906.3338942
   Garcia J, 2020, PROC INT CONF SOFTW, P385, DOI 10.1145/3377811.3380397
   Hauer F, 2020, IEEE INT VEH SYM, P1007, DOI 10.1109/IV47402.2020.9304636
   Hauer F, 2019, LECT NOTES COMPUT SC, V11698, P69, DOI 10.1007/978-3-030-26601-1_5
   Hawkins A. J., 2021, VergeAug.
   Horwitz J., 2016, QuartzSep
   Huai Yuqi, 2023, Zenodo, DOI 10.5281/ZENODO.8231392
   Huai Yuqi, 2023, Zenodo, DOI 10.5281/ZENODO.8231346
   Hussain R, 2019, IEEE COMMUN SURV TUT, V21, P1275, DOI 10.1109/COMST.2018.2869360
   Ingrassia P., 2014, Reuters
   JOHNSON SC, 1967, PSYCHOMETRIKA, V32, P241, DOI 10.1007/BF02289588
   Kalra N, 2016, TRANSPORT RES A-POL, V94, P182, DOI 10.1016/j.tra.2016.09.010
   Kato S, 2018, ACM IEEE INT CONF CY, P287, DOI 10.1109/ICCPS.2018.00035
   Kato S, 2015, IEEE MICRO, V35, P60, DOI 10.1109/MM.2015.133
   Kaufmann D, 2021, THIRD IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST 2021), P118, DOI 10.1109/AITEST52744.2021.00032
   Khastgir S, 2015, IEEE INT VEH SYM, P648, DOI 10.1109/IVS.2015.7225758
   Kilgore T., 2019, Market WatchSep
   Kim J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1466, DOI 10.1145/3368089.3417065
   Klück F, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P418, DOI 10.1109/QRS.2019.00058
   Klück F, 2021, 2021 IEEE/ACM 14TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST 2021), P38, DOI 10.1109/SBST52555.2021.00017
   Koopman P, 2016, SAE INT J TRANSP SAF, V4, P15, DOI 10.4271/2016-01-0128
   Korosec K., 2022, Tech Crunch
   Kruber F, 2018, IEEE INT C INTELL TR, P2811, DOI 10.1109/ITSC.2018.8569682
   Rial IML, 2021, 2021 IEEE/ACM 14TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST 2021), P30, DOI 10.1109/SBST52555.2021.00013
   Leung Alexander Kc, 2019, Drugs Context, V8, DOI 10.7573/dic.2019-9-4
   Levine RV, 1999, J CROSS CULT PSYCHOL, V30, P178, DOI 10.1177/0022022199030002003
   LGSVL Simulator, About Us
   Li GP, 2020, PROC INT SYMP SOFTW, P25, DOI 10.1109/ISSRE5003.2020.00012
   Li L, 2016, IEEE T INTELL VEHICL, V1, P158, DOI 10.1109/TIV.2016.2608003
   Liao R., 2018, Tech CrunchNov
   Lin Q, 2020, P AMER CONTR CONF, P3965, DOI [10.23919/acc45564.2020.9147893, 10.23919/ACC45564.2020.9147893]
   Luo YX, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P279, DOI [10.1109/ASE51524.2021.967883, 10.1109/ASE51524.2021.9678883]
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Moghadam MH, 2021, 2021 IEEE/ACM 14TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST 2021), P40, DOI 10.1109/SBST52555.2021.00018
   Nguyen V, 2021, THIRD IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST 2021), P128, DOI 10.1109/AITEST52744.2021.00033
   Peng Z, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1240, DOI 10.1145/3368089.3417063
   Rahmah N, 2016, IOP C SER EARTH ENV, V31, DOI 10.1088/1755-1315/31/1/012012
   SAE, 2014, SAE STANDARD J, V3016, P1, DOI DOI 10.4271/J3016_201401
   Seymour J, 2021, THIRD IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST 2021), P111, DOI 10.1109/AITEST52744.2021.00031
   Shepardson D., 2022, Reuters
   Stocco A, 2020, PROC INT CONF SOFTW, P359, DOI 10.1145/3377811.3380353
   Thrun S, 2006, J FIELD ROBOT, V23, P661, DOI 10.1002/rob.20147
   Tilley, 2016, Forbes
   Ul Haq F, 2022, PROC INT CONF SOFTW, P811, DOI 10.1145/3510003.3510188
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Viswanadha K, 2021, THIRD IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST 2021), P136, DOI 10.1109/AITEST52744.2021.00034
   Wang WS, 2020, IEEE T INTELL VEHICL, V5, P485, DOI 10.1109/TIV.2020.2973550
   Wayland M., 2021, CNBCAug.
   waymo, About Us
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhao Jinxin., 2021, Large scale autonomous driving scenarios clustering with self-supervised feature extraction
   Zhong ZY, 2023, IEEE T SOFTWARE ENG, V49, P1860, DOI 10.1109/TSE.2022.3195640
   Zhou HS, 2020, PROC INT CONF SOFTW, P347, DOI 10.1145/3377811.3380422
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
   Zohdinasab T, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P79, DOI 10.1145/3460319.3464811
NR 120
TC 0
Z9 0
U1 8
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2023
VL 49
IS 10
BP 4656
EP 4676
DI 10.1109/TSE.2023.3309610
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA Y1NF7
UT WOS:001102997400009
DA 2024-07-18
ER

PT J
AU Zhang, JW
   Liu, ZX
   Hu, X
   Xia, X
   Li, SP
AF Zhang, Junwei
   Liu, Zhongxin
   Hu, Xing
   Xia, Xin
   Li, Shanping
TI Vulnerability Detection by Learning From Syntax-Based Execution Paths of
   Code
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Vulnerability detection; deep learning; control flow graph; pre-trained
   model
AB Vulnerability detection is essential to protect software systems. Various approaches based on deep learning have been proposed to learn the pattern of vulnerabilities and identify them. Although these approaches have shown vast potential in this task, they still suffer from the following issues: (1) It is difficult for them to distinguish vulnerability-related information from a large amount of irrelevant information, which hinders their effectiveness in capturing vulnerability features. (2) They are less effective in handling long code because many neural models would limit the input length, which hinders their ability to represent the long vulnerable code snippets. To mitigate these two issues, in this work, we proposed to decompose the syntax-based Control Flow Graph (CFG) of the code snippet into multiple execution paths to detect the vulnerability. Specifically, given a code snippet, we first build its CFG based on its Abstract Syntax Tree (AST), refer to such CFG as syntax-based CFG, and decompose the CFG into multiple paths from an entry node to its exit node. Next, we adopt a pre-trained code model and a convolutional neural network to learn the path representations with intra- and inter-path attention. The feature vectors of the paths are combined as the representation of the code snippet and fed into the classifier to detect the vulnerability. Decomposing the code snippet into multiple paths can filter out some redundant information unrelated to the vulnerability and help the model focus on the vulnerability features. Besides, since the decomposed paths are usually shorter than the code snippet, the information located in the tail of the long code is more likely to be processed and learned. To evaluate the effectiveness of our model, we build a dataset with over 231 k code snippets, in which there are 24 k vulnerabilities. Experimental results demonstrate that the proposed approach outperforms state-of-the-art baselines by at least 22.30%, 42.92%, and 32.58% in terms of Precision, Recall, and F1-Score, respectively. Our further analysis investigates the reason for the proposed approach's superiority.
C1 [Zhang, Junwei; Liu, Zhongxin; Xia, Xin; Li, Shanping] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310027, Zhejiang, Peoples R China.
   [Hu, Xing] Zhejiang Univ, Sch Software Technol, Ningbo 315103, Zhejiang, Peoples R China.
C3 Zhejiang University; Zhejiang University
RP Liu, ZX (corresponding author), Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310027, Zhejiang, Peoples R China.
EM jw.zhang@zju.edu.cn; liu_zx@zju.edu.cn; xinghu@zju.edu.cn;
   xin.xia@acm.org; shan@zju.edu.cn
OI Zhang, Junwei/0000-0003-4323-8951; Liu, Zhongxin/0000-0002-1981-1626;
   Xia, Xin/0000-0002-6302-3256; Hu, Xing/0000-0003-0093-3292
FU National Natural Science Foundation of China [62202420, 62141222];
   Zhejiang University Education Foundation Qizhen Scholar Foundation
FX This work was supported by the National Natural Science Foundation of
   China under Grants 62202420 and 62141222. Zhongxin Liu gratefully
   acknowledgesthe support of the Zhejiang University Education Foundation
   Qizhen Scholar Foundation.
CR Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   [Anonymous], 2023, LUA PROJECT
   [Anonymous], 2023, REDIS PROJECT
   Bai JG, 2021, 16TH CONFERENCE OF THE EUROPEAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (EACL 2021), P3011
   Cao SC, 2022, PROC INT CONF SOFTW, P1456, DOI 10.1145/3510003.3510219
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Checkmarx, 2022, About us
   Chen T, 2020, PR MACH LEARN RES, V119
   Cheng X, 2024, IEEE T DEPEND SECURE, V21, P542, DOI 10.1109/TDSC.2022.3192419
   Cheng X, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P519, DOI 10.1145/3533767.3534371
   Cheng X, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3436877
   Cheng X, 2019, IEEE INT C ENG COMP, P41, DOI 10.1109/ICECCS.2019.00012
   cvedetails, 2016, CVE20167115
   cvedetails, CVE201812633
   cvedetails, 2014, CVE20143515
   Duan X, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4665
   Efron B., 1993, INTRO BOOTSTRAP, DOI 10.1007/978-1-4899-4541-9
   Fan JH, 2020, IEEE WORK CONF MIN S, P508, DOI 10.1145/3379597.3387501
   Feng Zhangyin, 2020, ARXIV200208155
   FFmpeg, 2023, ABOUT US
   Flawfinder, 2022, About us
   Fu M, 2022, IEEE WORK CONF MIN S, P608, DOI 10.1145/3524842.3528452
   Gao TY, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P6894
   google, 2022, Rough Audit Tool for Security
   Guo D., 2021, PROC 9 INT C LEARN R
   Hanif H., 2022, arXiv
   Hastie T., 2009, ELEMENTS STAT LEARNI, DOI [DOI 10.1007/978-0-387-84858-7, 10.1007/978-0-387-84858-7]
   Hin D, 2022, IEEE WORK CONF MIN S, P596, DOI 10.1145/3524842.3527949
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Jang-Jaccard J, 2014, J COMPUT SYST SCI, V80, P973, DOI 10.1016/j.jcss.2014.02.005
   Jiarpakdee J, 2021, IEEE T SOFTWARE ENG, V47, P320, DOI 10.1109/TSE.2019.2891758
   Johnson Arnold, 2011, NIST special publication, V800, P16
   Kanade A, 2020, PR MACH LEARN RES, V119
   Dam HK, 2017, Arxiv, DOI arXiv:1708.02368
   Kim Y, 2014, ARXIV PREPRINT ARXIV, DOI 10.3115/v1/D14-1181
   Kipf TN, 2016, ARXIV
   Le Quoc V., 2014, P INT C MACH LEARN I
   Lei Ba J., 2016, arXiv
   Li Y., 2016, ICLR, P1, DOI DOI 10.48550/ARXIV.1511.05493
   Li Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P292, DOI 10.1145/3468264.3468597
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Lin GJ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2539, DOI 10.1145/3133956.3138840
   Lin JF, 2021, PROC INT CONF SOFTW, P324, DOI 10.1109/ICSE43902.2021.00040
   Loshchilov I., 2019, PROC 7 INT C LEARN R
   Mac-telnet, 2022, US
   Mao CZ, 2019, ADV NEUR IN, V32
   Kipf TN, 2017, Arxiv, DOI arXiv:1609.02907
   Niu CA, 2022, Arxiv, DOI arXiv:2201.01549
   nvd, 2016, CVE20163078
   Parikh AP., 2016, EMNLP
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Php-src, 2023, US
   proxylogon, 2022, PROXYLOGON FLAW
   Pytorch, 2021, about us
   Qemu, 2023, US
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Schuster M, 1997, IEEE T SIGNAL PROCES, V45, P2673, DOI 10.1109/78.650093
   Sennrich R, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1715
   Sui YL, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION (CC 2016), P265, DOI 10.1145/2892208.2892235
   Thapa C, 2022, Arxiv, DOI arXiv:2204.03214
   Torvalds, 2023, US
   Tree-sitter, 2023, About us
   Nguyen VA, 2022, PROC IEEE ACM INT C, P178, DOI [10.1145/3510454.3516865, 10.1109/ICSE-Companion55297.2022.9793807]
   Vaswani A, 2017, ADV NEUR IN, V30
   Wilcoxon Frank, 1992, BREAKTHROUGHS STAT
   Wu YM, 2022, PROC INT CONF SOFTW, P2365, DOI 10.1145/3510003.3510229
   Yamaguchi F., 2015, THESIS U GOTTINGEN G
   Yamaguchi F, 2017, IT-INF TECHNOL, V59, P101, DOI 10.1515/itit-2016-0037
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Zenodo, 2022, ONL REPL PACK, DOI [10.5281/zenodo.7123322, DOI 10.5281/ZENODO.7123322]
   Zheng WN, 2021, PROC INT SYMP SOFTW, P457, DOI 10.1109/ISSRE52982.2021.00054
   Zheng YH, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P111, DOI 10.1109/ICSE-SEIP52600.2021.00020
   Zhou Y., 2019, PROC INT C NEURAL IN, p10 197
NR 75
TC 4
Z9 4
U1 11
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2023
VL 49
IS 8
BP 4196
EP 4212
DI 10.1109/TSE.2023.3286586
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA P3WA9
UT WOS:001049968200014
DA 2024-07-18
ER

PT J
AU Chaleshtari, NB
   Pastore, F
   Goknil, A
   Briand, LC
AF Chaleshtari, Nazanin Bayati
   Pastore, Fabrizio
   Goknil, Arda
   Briand, Lionel C.
TI Metamorphic Testing for Web System Security
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE System security testing; metamorphic testing; domain-specific languages
ID TEST-GENERATION; IMAGING SOFTWARE; FRAMEWORK; CLASSIFICATION;
   SPECIFICATION; REQUIREMENTS; FAILURES
AB Security testing aims at verifying that the software meets its security properties. In modern Web systems, however, this often entails the verification of the outputs generated when exercising the system with a very large set of inputs. Full automation is thus required to lower costs and increase the effectiveness of security testing. Unfortunately, to achieve such automation, in addition to strategies for automatically deriving test inputs, we need to address the oracle problem, which refers to the challenge, given an input for a system, of distinguishing correct from incorrect behavior (e.g., the response to be received after a specific HTTP GET request). In this paper, we propose Metamorphic Security Testing for Web-interactions (MST-wi), a metamorphic testing approach that integrates test input generation strategies inspired by mutational fuzzing and alleviates the oracle problem in security testing. It enables engineers to specify metamorphic relations (MRs) that capture many security properties of Web systems. To facilitate the specification of such MRs, we provide a domain-specific language accompanied by an Eclipse editor. MST-wi automatically collects the input data and transforms the MRs into executable Java code to automatically perform security testing. It automatically tests Web systems to detect vulnerabilities based on the relations and collected data. We provide a catalog of 76 system-agnostic MRs to automate security testing in Web systems. It covers 39% of the OWASP security testing activities not automated by state-of-the-art techniques; further, our MRs can automatically discover 102 different types of vulnerabilities, which correspond to 45% of the vulnerabilities due to violations of security design principles according to the MITRE CWE database. We also define guidelines that enable test engineers to improve the testability of the system under test with respect to our approach. We evaluated MST-wi effectiveness and scalability with two well-known Web systems (i.e., Jenkins and Joomla). It automatically detected 85% of their vulnerabilities and showed a high specificity (99.81% of the generated inputs do not lead to a false positive); our findings include a new security vulnerability detected in Jenkins. Finally, our results demonstrate that the approach scale, thus enabling automated security testing overnight.
C1 [Chaleshtari, Nazanin Bayati] Univ Ottawa, Sch Elect Engn & Comp Sci, Ottawa, ON K1N 6N5, Canada.
   [Pastore, Fabrizio] Univ Luxembourg, SnT, L-4365 Esch sur Alzette, Luxembourg.
   [Goknil, Arda] Sustainable Commun Technol, SINTEF Digital, N-0373 Oslo, Norway.
   [Briand, Lionel C.] Univ Luxembourg, SnT Ctr, L-4365 Esch sur Alzette, Luxembourg.
C3 University of Ottawa; University of Luxembourg; SINTEF; University of
   Luxembourg
RP Pastore, F (corresponding author), Univ Luxembourg, SnT, L-4365 Esch sur Alzette, Luxembourg.
EM n.bayati@uottawa.ca; fabrizio.pastore@uni.lu; Arda.Goknil@sintef.no;
   lionel.briand@uni.lu
RI Pastore, Fabrizio/ABY-9262-2022
OI Pastore, Fabrizio/0000-0003-3541-3641; Briand,
   Lionel/0000-0002-1393-1010
FU NSERC of Canada
FX This work was supported in part by NSERC of Canada under the Discovery
   and CRC programs. Recommended for acceptance by J. Sun.
CR Alexander C., 1977, PATTERN LANGUAGE TOW
   [Anonymous], 2016, OWASP TOP 10 MOBILE
   [Anonymous], 2005, 2nd International Conference on Electicatl Engineering/Electronics, Computer, Telecommunications, and Information Technology
   [Anonymous], 2014, FORMAT STRING ATTACK
   [Anonymous], 2022, CWE 640 WEAK PASSW R
   [Anonymous], 2022, CWE 613 INSUFFICIENT
   [Anonymous], 2022, CWE 287 IMPROPER AUT
   [Anonymous], 2021, SELENIUM WEB TESTING
   [Anonymous], 2022, ABOUT US
   [Anonymous], 2020, WSTG V4 1 TESTING SE
   [Anonymous], 2021, CWE COMMON WEAKNESS
   [Anonymous], 2011, SEHC
   [Anonymous], 2019, ASM BYTECODE MANIPUL
   [Anonymous], 2005, Secure Systems Development with UML
   [Anonymous], 2021, CWE 2021 CWE TOP 25
   [Anonymous], 2021, OWASP TOP 10 WEB APP
   [Anonymous], 2012, PROC ADV COMPUT SCI
   Apache software foundation, 2022, AP WEB SERV
   Appelt Dennis, 2014, Future Internet Testing. First International Workshop, FITTEST 2013. Revised Selected Papers, P32, DOI 10.1007/978-3-319-07785-7_2
   Appelt Dennis, 2014, P 2014 INT S SOFTWAR, P259
   Aruna C, 2014, 2014 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P2244, DOI 10.1109/ICACCI.2014.6968586
   Austin A, 2013, INFORM SOFTWARE TECH, V55, P1279, DOI 10.1016/j.infsof.2012.11.007
   Ayerdi J, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1264, DOI 10.1145/3468264.3473920
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bau J, 2010, P IEEE S SECUR PRIV, P332, DOI 10.1109/SP.2010.27
   Bayati Chaleshtari Nazanin, 2023, Zenodo, DOI 10.5281/ZENODO.7702754
   Bekrar Sofia, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P427, DOI 10.1109/ICST.2011.48
   Bertolino A., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P8, DOI 10.1109/IWAST.2012.6228997
   Blome A, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P471, DOI 10.1109/ICST.2013.65
   Calloni N. M. B. A., 2011, ADB381215 LOCKH MART
   Chaleshtari N. B., 2022, CATALOG METAMORPHIC
   Chaleshtari N. B., 2022, SMRL EDITOR EXECUTAB
   Chan WK, 2007, INT J WEB SERV RES, V4, P61, DOI 10.4018/jwsr.2007040103
   Chan WK, 2007, P INT COMP SOFTW APP, P397
   Chan WK, 2007, LECT NOTES COMPUT SC, V4498, P84
   Chan WK, 2010, SOFTW TEST VERIF REL, V20, P89, DOI 10.1002/stvr.408
   Chang-ai Sun, 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P283, DOI 10.1109/ICWS.2011.65
   Chen T.Y., 1998, Metamorphic testing: a new approach for generating next test cases
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Chen TY, 2016, COMPUTER, V49, P48, DOI 10.1109/MC.2016.176
   Chen TY, 2009, BMC BIOINFORMATICS, V10, DOI 10.1186/1471-2105-10-24
   Chen TY, 2009, LECT NOTES COMPUT SC, V5522, P243, DOI 10.1007/978-3-642-02138-1_19
   Chen TY, 2002, P INT COMP SOFTW APP, P327, DOI 10.1109/CMPSAC.2002.1045022
   CWE Category, CWE CATEGORY SERT CE
   CWE Category, 2021, CWE CATEGORY SOFTWAR
   CWE VIEW, 2021, CWE VIEW SOFTWARE DE
   CWE VIEW, 2021, CWE VIEW ARCHITECTUR
   CWE VIEW, 2021, CWE VIEW RES CONCEPT
   CWE VIEW, 2021, CWE VIEW HARDWARE DE
   CWE View, 2018, CWE VIEW WEAKNESSES
   CWE-FAQ, 2021, US
   Deahl D., 2018, ANOTHER FACEBOOK VUL
   Ding JH, 2011, PROD PLAN CONTROL, V22, P282, DOI 10.1080/09537287.2010.498606
   Eclipse Foundation, 2020, JETT APPL SERV
   Eclipse Foundation, 2020, JENK CI CD SERV
   Eclipse IDE, 2021, US
   EDLAH2, 2019, ACT ASS LIV PROGR
   Efftinge S, 2013, ACM SIGPLAN NOTICES, V48, P112, DOI 10.1145/2480361.2371419
   Elder S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10179-6
   Felderer M., 2011, Advances in System Testing and Validation Lifecycle (VALID 2011), P109
   Felderer M, 2016, ADV COMPUT, V101, P1, DOI 10.1016/bs.adcom.2015.11.003
   Felderer M, 2016, SOFTW TEST VERIF REL, V26, P119, DOI 10.1002/stvr.1580
   Garousi V, 2019, INFORM SOFTWARE TECH, V108, P35, DOI 10.1016/j.infsof.2018.12.003
   Gu Tian-yang, 2010, World Acadmeny of Science, Engineering and Technology, V70, P647
   Guderlei R, 2007, INT J SOFTW ENG KNOW, V17, P757, DOI 10.1142/S0218194007003471
   Haley CB, 2008, IEEE T SOFTWARE ENG, V34, P133, DOI 10.1109/TSE.2007.70754
   Haller Istvan, 2013, P 22 USENIX SEC S, P49, DOI DOI 10.5555/2534766.2534772
   He K, 2008, ISCSCT 2008: INTERNATIONAL SYMPOSIUM ON COMPUTER SCIENCE AND COMPUTATIONAL TECHNOLOGY, VOL 1, PROCEEDINGS, P782, DOI 10.1109/ISCSCT.2008.116
   Hong Zhu, 2015, 2015 Second International Conference on Trustworthy Systems and their Applications (TSA). Proceedings, P8, DOI 10.1109/TSA.2015.13
   Huang Yao-Wen, 2003, Proceedings of the 12th International Conference on World Wide Web, P148
   Jameel Tahir, 2015, P 16 IEEE ACIS INT C, P1
   Java Platform, 2021, JAVA PLATFORM ENTERP
   Jiang MY, 2012, INT CONF SOFTW ENG, P530
   Joomla, 2017, US
   Jürjens J, 2008, ELECTRON NOTES THEOR, V220, P93, DOI 10.1016/j.entcs.2008.11.008
   JUnit, 2021, US
   Jürjens J, 2005, PROC INT CONF SOFTW, P322
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Just R, 2009, IEEE ICST WORKSHOP, P205, DOI 10.1109/ICSTW.2009.20
   Kals S., 2006, P 15 INT C WORLD WID, P247, DOI [DOI 10.1145/1135777.1135817, 10.1145/1135777.1135817]
   Kuo FC, 2010, IET SOFTW, V4, P294, DOI 10.1049/iet-sen.2009.0084
   Kuo F.-C., 2011, SAC, P1482
   Kuo FC, 2011, C LOCAL COMPUT NETW, P291, DOI 10.1109/LCN.2011.6115306
   Lane D., 2003, Online Statistics Education: A Multimedia Course of Study
   Lascu A, 2022, IEEE INT CONF SOFTW, P35, DOI 10.1109/ICST53961.2022.00015
   Le Traon Y, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P93, DOI [10.1109/ISSRE.2007.27, 10.1109/ISSRF.2007.27]
   Lebeau F, 2013, IEEE ICST WORKSHOP, P445, DOI 10.1109/ICSTW.2013.58
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Liu H, 2014, IEEE T SOFTWARE ENG, V40, P4, DOI 10.1109/TSE.2013.46
   Liverani R. S., 2017, INTEGRATION BURP SUI
   Luu QH, 2021, J SYST SOFTWARE, V182, DOI 10.1016/j.jss.2021.111062
   Mai P. X., 2020, CVE 2020 2162 STORED
   Mai PX, 2020, PROC INT CONF SOFTW, P9, DOI 10.1145/3377812.3382152
   Mai PX, 2020, IEEE INT CONF SOFTW, P186, DOI 10.1109/ICST46399.2020.00028
   Mai PX, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P55, DOI 10.1109/ICSE-Companion.2019.00037
   Mai PX, 2018, PROC INT SYMP SOFTW, P58, DOI [10.1109/1SSRE.2018.00017, 10.1109/ISSRE.2018.00017]
   Mai PX, 2018, INFORM SOFTWARE TECH, V100, P165, DOI 10.1016/j.infsof.2018.04.007
   Manès VJM, 2021, IEEE T SOFTWARE ENG, V47, P2312, DOI 10.1109/TSE.2019.2946563
   Marback A, 2013, SOFTWARE PRACT EXPER, V43, P241, DOI 10.1002/spe.2111
   Martin E., 2007, P 3 INT WORKSH SOFTW, P5
   Martin E., P 16 INT C WORLD WID, P667
   Martin E, 2006, LECT NOTES COMPUT SC, V4307, P139
   Martin M.C., 2008, USENIX SECURITY S, P31
   Masood A, 2010, IEEE T DEPEND SECURE, V7, P144, DOI 10.1109/TDSC.2008.41
   Mayer J, 2006, INT CONF QUAL SOFTW, P85
   Mesbah Ali, 2008, 2008 8th International Conference on Web Engineering (ICWE), P122, DOI 10.1109/ICWE.2008.24
   Mesbah A, 2012, ACM T WEB, V6, DOI 10.1145/2109205.2109208
   Meucci M., 2014, OWASP Testing Guide 4.0
   Microsoft Corp, 2021, SILV PLUG INS DEV TO
   MITRE, 2018, CVE 2018 1999045 CON
   MITRE, 2021, Common Attack Pattern Enumeration and Classification
   MITRE, 2018, CVE 2018 1000406 CON
   MITRE, 2020, CVE 2020 2162 CONC O
   MITRE, 2018, CVE 2018 1999046 CON
   MITRE, 2018, CVE 2018 1999004 CON
   MITRE, 2022, CWE 521
   MITRE, 2022, CWE 262
   MITRE, 2018, CVE 2018 1000409 CON
   MITRE, 2018, CVE 2018 11327
   MITRE, 2018, CVE 2018 1999047 CON
   MITRE, 2018, CVE 2018 1999006 CON
   MITRE, 2018, CVE 2018 17857
   MITRE, 2018, CVE 2018 1999003 CON
   MITRE common weaknesses enumeration project, 2022, WHICH PROVIDE TAXONO
   MITRE Corporation, 2022, COMM VULN EXP
   Mouelhi T, 2008, LECT NOTES COMPUT SC, V5301, P537, DOI 10.1007/978-3-540-87875-9_38
   Mouelhi T, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P171, DOI 10.1109/ICST.2009.49
   Murphy Christian, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P867
   Murphy C., 2008, 20 INT C SOFTWARE EN, P867
   Murphy C, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P436, DOI 10.1109/ICST.2009.19
   Ognawala S, 2016, IEEE INT CONF AUTOM, P780, DOI 10.1145/2970276.2970281
   Oracle Corp, 2022, MYSQL RDBMS ENG
   OWASP, 2020, WSTG ATHZ 02 TEST BY
   OWASP, 2014, OTG BUSLOGIC 006 TES
   OWASP, 2020, WSTG ATHZ 01 TEST DI
   OWASP, 2014, OTG INPVAL 014 TEST
   OWASP, 2014, OTG INFO 010 MAPP AP
   OWASP, 2020, WSTG SESS 03 TEST SE
   OWASP, OTG AUTHN 002 TEST D
   OWASP, 2021, OWASP ZED ATT PROXY
   Pezzè M, 2014, ADV COMPUT, V95, P1, DOI 10.1016/B978-0-12-800160-8.00001-2
   Portswigger, 2021, BURP SUIT
   Portswigger, 2021, BURP SUIT SCANN CRAW
   Portswigger, 2021, US BURP SUIT TEST BY
   Pullum LL, 2012, 2012 ASE INTERNATIONAL CONFERENCE ON BIOMEDICAL COMPUTING (BIOMEDCOM), P62, DOI 10.1109/BioMedCom.2012.17
   Raghavan S., 2001, Proceedings of the 27th International Conference on Very Large Data Bases, P129
   Ralph Paul, 2018, P 22 INT C EV ASS SO, P13
   Ramanathan A, 2012, 2012 ASE INTERNATIONAL CONFERENCE ON BIOMEDICAL COMPUTING (BIOMEDCOM), P68, DOI 10.1109/BioMedCom.2012.18
   Rosen Guy, 2018, Facebook security update
   Salas MIP, 2014, ELECTRON NOTES THEOR, V302, P133, DOI 10.1016/j.entcs.2014.01.024
   Santos JCS, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P220, DOI 10.1109/ICSAW.2017.25
   Santos JCS, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P69, DOI 10.1109/ICSA.2017.39
   Segura Sergio, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P35, DOI 10.1109/ICST.2010.20
   Segura S., 2017, ISA17TR01 APPL SOFTW
   Segura S, 2019, 2019 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2019), P24, DOI 10.1109/MET.2019.00012
   Segura S, 2018, IEEE T SOFTWARE ENG, V44, P1083, DOI 10.1109/TSE.2017.2764464
   Segura S, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2017), P3, DOI 10.1109/MET.2017.3
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Segura S, 2015, SOFTW TEST VERIF REL, V25, P138, DOI 10.1002/stvr.1566
   Segura S, 2011, INFORM SOFTWARE TECH, V53, P245, DOI 10.1016/j.infsof.2010.11.002
   SonarSource, 2021, SON COD QUAL COD SEC
   Staats M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P391, DOI 10.1145/1985793.1985847
   Sun CA, 2014, FRONT COMPUT SCI-CHI, V8, P478, DOI 10.1007/s11704-014-3040-y
   Synopsys Inc, 2020, DESCR OPENSSL HEARTB
   Takanen A, 2018, ADV TOP SCI TECH CHI, P1
   Tao QM, 2010, ASIA PAC SOFWR ENG, P270, DOI 10.1109/APSEC.2010.39
   Tripp O., 2013, P 2013 INT S SOFTW T, P347, DOI [DOI 10.1145/2483760.2483776, 10.1145/2483760.2483776]
   Tse T. H., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P458, DOI 10.1109/CMPSAC.2004.1342879
   VOAS JM, 1995, IEEE SOFTWARE, V12, P17, DOI 10.1109/52.382180
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P216, DOI [10.1145/2666356.2594334, 10.1145/2594291.2594334]
   Walker J., 2021, TEEN HACKER SCOOPS 4
   Whittle J, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P121, DOI 10.1145/1368088.1368106
   Wimmel G, 2002, LECT NOTES COMPUT SC, V2495, P471
   Wood R., 2022, Damn vulnerable web application
   Woollacott E., 2022, FACEBOOK ACCOUNT TAK
   Xie XY, 2009, INT CONF QUAL SOFTW, P135, DOI 10.1109/QSIC.2009.26
   Xtext, 2020, US
   Xu D., 2012, P 17 ACM S ACC CONTR, P209, DOI DOI 10.1145/2295136.2295173
   Xu DX, 2015, IEEE T RELIAB, V64, P247, DOI 10.1109/TR.2014.2354172
   Xu DX, 2012, IEEE T DEPEND SECURE, V9, P526, DOI 10.1109/TDSC.2012.24
   Xu DX, 2006, IEEE T SOFTWARE ENG, V32, P265, DOI 10.1109/TSE.2006.40
   Xu LM, 2021, J SYST SOFTWARE, V182, DOI 10.1016/j.jss.2021.111060
   Zeller A., 2019, The fuzzing book
   Zhou ZQ, 2020, IEEE T SOFTWARE ENG, V46, P1120, DOI 10.1109/TSE.2018.2876433
   Zhou ZQ, 2012, SOFTW TEST VERIF REL, V22, P221, DOI 10.1002/stvr.437
NR 185
TC 3
Z9 3
U1 6
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2023
VL 49
IS 6
BP 3430
EP 3471
DI 10.1109/TSE.2023.3256322
PG 42
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA J9KW5
UT WOS:001012752300006
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Ferreira, T
   Ivers, J
   Yackley, JJ
   Kessentini, M
   Ozkaya, I
   Gaaloul, K
AF Ferreira, Thiago
   Ivers, James
   Yackley, Jeffrey J.
   Kessentini, Marouane
   Ozkaya, Ipek
   Gaaloul, Khouloud
TI Dependent or Not: Detecting and Understanding Collections of
   Refactorings
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Dependency; refactoring; search based software engineering
AB Refactoring is a program transformation to improve the internal structure of a program while preserving its external behavior. Developers frequently apply multiple refactorings that depend on each other to achieve goals such as improving code reusability. Although manually applying a sequence of dependent refactorings is a common practice, existing refactoring recommendation tools treat refactorings in isolation without revealing the dependencies among them to developers. One reason is that these relationships among refactorings are poorly understood. Current approaches treat refactoring recommendations as a strictly ordered sequence limiting developers' ability to understand, validate, and apply recommended refactorings. To address this gap, this paper describes a theory for reasoning about collections of refactorings through defining an ordering dependency relation among refactorings and organizing collection of refactorings as a set of refactoring graphs. We propose an algorithm for identifying refactoring dependencies and illustrate these concepts with a tool for visualizing such refactoring dependencies and refactoring graphs. Our validation results demonstrate that 43% of the 1,457,873 recommended refactorings from 9,595 projects that we studied are part of dependent refactoring graphs. Furthermore, refactorings are not only commonly involved in dependent relations, but also when applied, dependent refactoring graphs improve all of the quality attribute metrics in our experiments more than individual refactorings.
C1 [Ferreira, Thiago; Yackley, Jeffrey J.] Univ Michigan Flint, Coll Innovat & Technol, Flint, MI 48502 USA.
   [Ivers, James; Ozkaya, Ipek] Carnegie Mellon Univ, Software Engn Inst, Pittsburgh, PA 15213 USA.
   [Kessentini, Marouane; Gaaloul, Khouloud] Oakland Univ, Dept Comp Sci & Engn, Rochester, MI 48309 USA.
C3 University of Michigan System; University of Michigan Flint; Carnegie
   Mellon University; Software Engineering Institute; Oakland University
RP Kessentini, M (corresponding author), Oakland Univ, Dept Comp Sci & Engn, Rochester, MI 48309 USA.
EM thiagod@umich.edu; jivers@sei.cmu.edu; jyackley@umich.edu;
   marouane@umich.edu; ozkaya@sei.cmu.edu; kgaaloul@umich.edu
RI Ferreira, Thiago/HNC-1049-2023; Yackley, Jeffrey Jonathan/JJC-8312-2023
OI Yackley, Jeffrey Jonathan/0000-0001-6383-7359; GAALOUL,
   KHOULOUD/0000-0002-4156-9768; Ferreira, Thiago/0000-0001-7010-8306
FU Department of Defense [FA8702-15-D-0002]
FX This work was supported by the Department of Defense under Grant
   FA8702-15-D-0002, with Carnegie Mellon University for the operation of
   the Software Engineering Institute, a federally funded research and
   development center.
CR Abid C, 2020, Arxiv, DOI arXiv:2007.02194
   Alizadeh V, 2020, IEEE T SOFTWARE ENG, V46, P932, DOI 10.1109/TSE.2018.2872711
   Alshayeb M, 2009, INFORM SOFTWARE TECH, V51, P1319, DOI 10.1016/j.infsof.2009.04.002
   [Anonymous], 1996, HDB STAT
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bavota G., 2014, Recommendation Systems in Software Engineering, P387
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Bibiano AC, 2019, INT SYMP EMP SOFTWAR, P31
   Chávez A, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P74, DOI 10.1145/3131151.3131171
   Cinnéide MO, 2012, INT SYMP EMP SOFTWAR, P49, DOI 10.1145/2372251.2372260
   DPRef, 2022, US
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Kessentini M, 2011, CONF PROC INT SYMP C, P81, DOI 10.1109/ICPC.2011.22
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Kuutila M, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106257
   Lin Y, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P535, DOI 10.1145/2950290.2950317
   Liu H, 2008, IET SOFTW, V2, P446, DOI 10.1049/iet-sen:20070033
   Liu H, 2012, IEEE T SOFTWARE ENG, V38, P220, DOI 10.1109/TSE.2011.9
   McDonald J.H., 2009, HDB BIOL STAT, V2
   Melton H., 2006, P ACM 29 AUSTR COMP, P35
   Mens T, 2007, SOFTW SYST MODEL, V6, P269, DOI 10.1007/s10270-006-0044-6
   Mens T, 2005, ELECTRON NOTES THEOR, V127, P113, DOI 10.1016/j.entcs.2004.08.038
   Mkaouer M. W., 2014, P 29 ACM IEEE INT C, P331, DOI [DOI 10.1145/2642937.2642965, 10.1145/2642937.2642965. u r l, DOI 10.1145/2642937.2642965.URL]
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   O'Keeffe M., 2003, PPPJ 03, P59, DOI [10.1145/957289.957308, DOI 10.1145/957289.957308]
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Ouni A, 2013, EUR CON SFTWR MTNCE, P221, DOI 10.1109/CSMR.2013.31
   Palomba F, 2017, INT C PROGRAM COMPRE, P176, DOI 10.1109/ICPC.2017.38
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Slaughter SA, 1998, COMMUN ACM, V41, P67, DOI 10.1145/280324.280335
   Sousa L, 2020, IEEE WORK CONF MIN S, P186, DOI 10.1145/3379597.3387477
   Szoke G, 2017, J SYST SOFTWARE, V129, P107, DOI 10.1016/j.jss.2016.08.071
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Vassallo C, 2019, SCI COMPUT PROGRAM, V180, P1, DOI 10.1016/j.scico.2019.05.002
   Yoshida N, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P133
NR 41
TC 1
Z9 1
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2023
VL 49
IS 6
BP 3344
EP 3358
DI 10.1109/TSE.2023.3244123
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA J9KW5
UT WOS:001012752300001
DA 2024-07-18
ER

PT J
AU Liu, W
   Chen, TH
AF Liu, Wei
   Chen, Tse-Hsun
TI SLocator: Localizing the Origin of SQL Queries in Database-Backed Web
   Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Databases; Codes; Java; Static analysis; Information retrieval; Computer
   bugs; Location awareness; localization; object-relational mapping;
   static analysis
ID LOCALIZATION
AB In database-backed web applications, developers often leverage Object-Relational Mapping (ORM) frameworks for database accesses. ORM frameworks provide an abstraction of the underlying database access details so that developers can focus on implementing the business logic of the application. However, due to the abstraction, developers may not know where and how a problematic SQL query is generated in the application code, causing challenges in debugging database access problems. In this paper, we propose an approach, called SLocator, which locates where a SQL query is generated in the application code. SLocator is a hybrid approach that leverages both static analysis and information retrieval (IR) techniques. SLocator uses static analysis to infer the database access for every possible path in the control flow graph. Then, given a SQL query, SLocator applies IR techniques to find the control flow path (i.e., a sequence of methods called in an interprocedural control flow graph) whose inferred database access has the highest similarity ranking. We implement SLocator for Java's official ORM API specification (JPA) and evaluate SLocator on seven open source Java applications. We find that SLocator is able to locate the control flow path that generates a SQL query with a Top@1 accuracy ranging from 37.4% to 70% for SQL queries in sessions, and 30.7% to 69.2% for individual SQL queries; and Top@5 ranging from 78.3% to 95.5% for SQL queries in sessions, and 59.1% to 100% for individual SQL queries. We also conduct a study to illustrate how SLocator may be used for locating issues in the database access code.
C1 [Liu, Wei; Chen, Tse-Hsun] Concordia Univ, Software PErformance Anal & Reliabil SPEAR Lab, Montreal, PQ H3G 1M8, Canada.
C3 Concordia University - Canada
RP Liu, W (corresponding author), Concordia Univ, Software PErformance Anal & Reliabil SPEAR Lab, Montreal, PQ H3G 1M8, Canada.
EM w_liu201@encs.concordia.ca; peterc@encs.concordia.ca
OI Liu, Wei/0000-0001-8956-730X; Chen, Tse-Hsun/0000-0003-4027-0905
CR A. S. Foundation, 2021, AP JMETER
   Anderson D., 2018, THESIS E CAROLINA U
   Annamaa A, 2010, LECT NOTES COMPUT SC, V6461, P131, DOI 10.1007/978-3-642-17164-2_10
   [Anonymous], 2014, JAV DEV RES REP LAND
   [Anonymous], 2022, US STAT SIT EL WEBS
   [Anonymous], 2014, P 22 INT C PROGR COM
   [Anonymous], 2021, HIB SHOW REAL SQL
   [Anonymous], 2021, ONL APP REPL PACK SL
   Arzamasova N, 2020, IEEE T KNOWL DATA EN, V32, P1982, DOI 10.1109/TKDE.2019.2913381
   Arzamasova N, 2018, PROC INT CONF DATA, P1751, DOI 10.1109/ICDE.2018.00233
   Bangladesh Bureau of Statistics (BBS), 2022, About us
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Biagiola M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P142, DOI 10.1145/3338906.3338970
   Brass S, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P250
   BroadleafCommerce, 2022, BROADL ENT EC FRAM B
   Cabral GG, 2019, PROC INT CONF SOFTW, P666, DOI 10.1109/ICSE.2019.00076
   Cavalheiro V., 2022, HIBERNATE DEBUGGING
   Chen AR, 2022, IEEE T SOFTWARE ENG, V48, P2905, DOI 10.1109/TSE.2021.3071473
   Chen T.-H., 2016, IMPROVING PERFORMANC
   Chen TH, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P71, DOI 10.1145/2889160.2889228
   Chen TH, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P165, DOI [10.1109/MSR.2016.026, 10.1145/2901739.2901758]
   Chen TH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P666, DOI 10.1145/2950290.2950303
   Chen TH, 2016, IEEE T SOFTWARE ENG, V42, P1148, DOI 10.1109/TSE.2016.2553039
   Chen TH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1001, DOI 10.1145/2568225.2568259
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   CloudStore, 2022, US
   Corradini D, 2021, IEEE INT WORK C SO, P226, DOI 10.1109/SCAM52516.2021.00035
   E. Foundation, 2021, ASP PROJ
   Florez JM, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P166, DOI 10.1109/SANER50967.2021.00024
   Gould C, 2004, PROC INT CONF SOFTW, P645, DOI 10.1109/ICSE.2004.1317486
   Grechanik M., 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, P356, DOI DOI 10.1145/2491411.2491412
   Haiduc S., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P637, DOI 10.1109/ASE.2011.6100144
   Haiduc S, 2011, CONF PROC INT SYMP C, P234, DOI 10.1109/ICPC.2011.48
   Hibernate, 2018, LOGG
   Huang ZJ, 2022, SCI COMPUT PROGRAM, V217, DOI 10.1016/j.scico.2022.102778
   Islam A., 2008, ACM Trans. Knowl. Discov. Data, V2, P1, DOI [10.1145/1376815.1376819, DOI 10.1145/1376815.1376819]
   JeeWeb, 2022, US
   Keith M., 2018, JAVA EE 8 IN DEPTH G, V3rd, P101
   Kul G, 2018, IEEE T KNOWL DATA EN, V30, P2408, DOI 10.1109/TKDE.2018.2831214
   Le TDB, 2014, PROC INT SYMP SOFTW, P335, DOI 10.1109/ISSRE.2014.39
   Lee J, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P61, DOI 10.1145/3213846.3213856
   Lyu YJ, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P270, DOI 10.1145/3460319.3464818
   Manousis P, 2017, LECT NOTES COMPUT SC, V10253, P511, DOI 10.1007/978-3-319-59536-8_32
   Meurice L, 2016, LECT NOTES COMPUT SC, V9694, P491, DOI 10.1007/978-3-319-39696-5_30
   Mihalcea V., 2019, DO LOCKMODETYPE PESS
   Mills C, 2020, EMPIR SOFTW ENG, V25, P3086, DOI 10.1007/s10664-020-09823-w
   Murali V, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P188, DOI 10.1109/ICSE-SEIP52600.2021.00028
   Nagy C, 2018, PROC IEEE ACM INT C, P93, DOI 10.1145/3183440.3183496
   Nagy C, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P580, DOI 10.1109/SANER.2015.7081881
   Oracle, 2017, JSR 338 JAV PERS API
   Oracle, 2020, GEN QUER LOG
   Oracle, 2020, DEADL INN
   Oracle, 2013, JAX RS JAV API RESTF
   Oracle, 2015, LOCKM
   Oracle, 2020, INN DEADL EX
   Oracle, 2020, SLOW QUER LOG
   Oracle, 2020, MYSQL SERV LOGS
   PetClinic, 2022, SAMPL SPRING BAS APP
   PostgreSQL, 2020, ERR REP LOGG
   Pradel Michael, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P225, DOI 10.1145/3395363.3397356
   PublicCMS, 2022, US
   Shao SD, 2020, PROC IEEE INT CONF S, P58, DOI 10.1109/ICSME46990.2020.00016
   Singh R, 2016, PROCEEDINGS OF THE 2016 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'16), P309, DOI 10.1145/2851553.2851576
   Sinha S, 2000, IEEE T SOFTWARE ENG, V26, P849, DOI 10.1109/32.877846
   Sohn J, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P284, DOI 10.1109/SANER50967.2021.00034
   Soltani M., 2020, EMPIR SOFTW ENG, V25, P1
   spring, 2021, SPRING FRAMEWORK
   Thung F, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P767, DOI 10.1145/2635868.2661678
   TPC-W, 2022, US
   vladmihalcea, 2021, EAG FETCH IS COD SME
   WallRide, 2022, MULTILINGUAL EASY T
   Wang SW, 2016, J SOFTW-EVOL PROC, V28, P921, DOI 10.1002/smr.1801
   Wang SW, 2014, PROC IEEE INT CONF S, P171, DOI 10.1109/ICSME.2014.39
   Warszawski T, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P5, DOI 10.1145/3035918.3064037
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Yan C, 2017, CIKM'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P1299, DOI 10.1145/3132847.3132954
   Yang JW, 2019, PROC INT CONF SOFTW, P994, DOI 10.1109/ICSE.2019.00104
   Yang JW, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P800, DOI 10.1145/3180155.3180194
   Yuan D, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P143
   Zeng L, 2015, IEEE ICC, P7168, DOI 10.1109/ICC.2015.7249470
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
NR 83
TC 0
Z9 0
U1 2
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2023
VL 49
IS 6
BP 3376
EP 3390
DI 10.1109/TSE.2023.3253700
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA J9KW5
UT WOS:001012752300003
DA 2024-07-18
ER

PT J
AU Wei, CH
   Xiao, L
   Yu, TT
   Chen, XY
   Wang, X
   Wong, SY
   Clune, A
AF Wei, Chenhao
   Xiao, Lu
   Yu, Tingting
   Chen, Xinyu
   Wang, Xiao
   Wong, Sunny
   Clune, Abigail
TI Automatically Tagging the "AAA" Pattern in Unit Test Cases Using Machine
   Learning Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Machine learning; Tagging; Debugging; Production; Maintenance
   engineering; Computer bugs; AAA pattern; feature engineering; machine
   learning; natural language processing; software testing; unit testing
ID SOFTWARE DEFECT PREDICTION; REQUIREMENTS; SMOTE; SMELLS
AB The AAA pattern (i.e., Arrange-Act-Assert) is a common and natural layout to create a test case. Following this pattern in test cases may benefit comprehension, debugging, and maintenance. The AAA structure of real-life test cases, however, may not be clear due to their high complexity. Manually labeling AAA statements in test cases is tedious. Thus, we envision that an automated approach for labeling AAA statements in existing test cases could benefit new developers and projects that practice collective code ownership and test-driven development. This paper contributes an automatic approach based on machine learning models. The "secret sauce" of this approach is a set of three learning features that are based on the semantic, syntax, and context information in test cases, derived from the manual tagging process. Thus, our approach mimics how developers may manually tag the AAA pattern of a test case. We assess the precision, recall, and F-1 score of our approach based on 449 test cases, containing about 16,612 statements, across 4 Apache open source projects. To achieve the best performance in our approach, we explore the usage of six machine learning models; the contribution of the SMOTE data balancing technique; the comparison of the three learning features; and the comparison of five different methods for calculating the semantic feature. The results show our approach is able to identify Arrangement, Action, and Assertion statements with a precision upwards of 92%, and recall up to 74%. We also summarize some experience based on our experiments-regarding the choice of machine learning models, data balancing algorithm, and feature engineering methods-which could potentially provide some reference to related future research.
C1 [Wei, Chenhao; Xiao, Lu; Wang, Xiao] Stevens Inst Technol, Sch Syst & Enterprises, Hoboken, NJ 07030 USA.
   [Yu, Tingting] Univ Cincinnati, Dept EECS, Cincinnati, OH 45221 USA.
   [Chen, Xinyu] HSBC Software Dev Guangdong Ltd, Guangzhou 510620, Guangdong, Peoples R China.
   [Wong, Sunny] Envestnet Inc, Berwyn, PA 19312 USA.
   [Clune, Abigail] AGI Ansys Co, Exton, PA 19341 USA.
C3 Stevens Institute of Technology; University System of Ohio; University
   of Cincinnati
RP Xiao, L (corresponding author), Stevens Inst Technol, Sch Syst & Enterprises, Hoboken, NJ 07030 USA.
EM cwei7@stevens.edu; lxiao6@stevens.edu; tingting.yu@uc.edu;
   neal.x.y.chen@hsbc.com; xwang97@stevens.edu; sunny@computer.org;
   abigail.clune@ansys.com
RI xiao, lu/KRO-9302-2024
OI Wei, Chenhao/0000-0002-2707-120X
FU U.S. National Science Foundation (NSF) [CCF-1909085, CCF-1909763]
FX This work was supported in part by the U.S. National Science Foundation
   (NSF) under Grants CCF-1909085 and CCF-1909763. Recommended for
   acceptance by G. Canfora.
CR Abrantes JF, 2011, INT SYMP EMP SOFTWAR, P355, DOI 10.1109/ESEM.2011.47
   Aleem S, 2015, Arxiv, DOI arXiv:1506.07563
   AlOmar EA, 2021, EXPERT SYST APPL, V167, DOI 10.1016/j.eswa.2020.114176
   Alsawalqah H, 2017, ADV INTELL SYST COMP, V575, P355, DOI 10.1007/978-3-319-57141-6_39
   Aniche M, 2022, IEEE T SOFTWARE ENG, V48, P4925, DOI 10.1109/TSE.2021.3129889
   [Anonymous], 1996, Principles of Adsorption and Reaction on Solid Surfaces
   Arnaoudova V, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P949, DOI 10.1109/ICSE.2015.301
   Athanasiou D, 2014, IEEE T SOFTWARE ENG, V40, P1100, DOI 10.1109/TSE.2014.2342227
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Bavota G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P56, DOI 10.1109/ICSM.2012.6405253
   Beck K, 2001, IEEE SOFTWARE, V18, P87, DOI 10.1109/52.951502
   Behl D, 2014, PROCEEDINGS OF THE 2014 INTERNATIONAL CONFERENCE ON RELIABILTY, OPTIMIZATION, & INFORMATION TECHNOLOGY (ICROIT 2014), P294, DOI 10.1109/ICROIT.2014.6798341
   Beller M, 2019, IEEE T SOFTWARE ENG, V45, P261, DOI 10.1109/TSE.2017.2776152
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cohen D, 2004, ADV COMPUT, V62, P1, DOI 10.1016/S0065-2458(03)62001-2
   D'Ambros M, 2009, WORK CONF REVERSE EN, P135, DOI 10.1109/WCRE.2009.19
   Dalpiaz F, 2018, IEEE SOFTWARE, V35, P115, DOI 10.1109/MS.2018.3571242
   Dawood O.S., 2018, Eur. J. Eng. Technol. Res, V3, P42, DOI [10.24018/ejeng.2018.3.7.807, DOI 10.24018/EJENG.2018.3.7.807]
   Canedo ED, 2020, ENTROPY-SWITZ, V22, DOI 10.3390/e22091057
   Du Bois B, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P334, DOI 10.1109/CSMR.2005.25
   Durelli VHS, 2019, IEEE T RELIAB, V68, P1189, DOI 10.1109/TR.2019.2892517
   Eason T., 2020, MEWS NOV
   Efstathiou V, 2018, IEEE WORK CONF MIN S, P38, DOI 10.1145/3196398.3196448
   El-Shorbagy S.A., 2018, P 7 INT C SOFTWARE I, P44, DOI [10.1145/3220267.3220286, DOI 10.1145/3220267.3220286]
   Elrahman S. M. A., 2013, J NET INNOV COMPUT, V1, P332, DOI DOI 10.20943/01201706.4351
   Ernst Michael D., 2017, SUMMIT ADV PROGRAMMI, V71, DOI [10.4230/LIPIcs.SNAPL.2017.4, DOI 10.4230/LIPICS.SNAPL.2017.4]
   Fatwanto Agung, 2013, 2013 International Conference on QiR (Quality in Research), P105, DOI 10.1109/QiR.2013.6632546
   Garousi V, 2019, IEEE SOFTWARE, V36, P61, DOI 10.1109/MS.2018.2875843
   Gomes P., 2017, RETRIEVED SPE, V9
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P95
   Gulati S., 2017, JAVA UNIT TESTING JU, P1
   Guo SK, 2019, INT J SOFTW ENG KNOW, V29, P139, DOI 10.1142/S0218194019500074
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   Hecht-Nielsen R., 1989, IJCNN: International Joint Conference on Neural Networks (Cat. No.89CH2765-6), P593, DOI 10.1109/IJCNN.1989.118638
   Huertas C., 2012, PROC CUBE INT INF TE
   Ilieva MG, 2005, LECT NOTES COMPUT SC, V3513, P392
   Khorikov V, 2020, Unit Testing Principles, Practices, and Patterns
   Kicsi A, 2021, IEEE ACCESS, V9, P79089, DOI 10.1109/ACCESS.2021.3083923
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Kudrjavets G, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P204
   Lee S, 2008, NCM 2008: 4TH INTERNATIONAL CONFERENCE ON NETWORKED COMPUTING AND ADVANCED INFORMATION MANAGEMENT, VOL 2, PROCEEDINGS, P554, DOI 10.1109/NCM.2008.199
   Li Juanzi, 2007, Wuhan University Journal of Natural Sciences, V12, P917, DOI 10.1007/s11859-007-0038-4
   Li ZQ, 2018, IET SOFTW, V12, P161, DOI 10.1049/iet-sen.2017.0148
   Longadge R, 2013, Arxiv, DOI [arXiv:1305.1707, DOI 10.48550/ARXIV.1305.1707]
   Luo H., 2015, P C EMP METH NAT LAN, P1687
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Menard S., 2002, APPL LOGISTIC REGRES, V106, DOI [10.4135/9781412983433, DOI 10.4135/9781412983433]
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Modi Ritesh, 2021, DeepDive Terraform on Azure, P191
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Mostafa S, 2014, INT CONF QUAL SOFTW, P127, DOI 10.1109/QSIC.2014.19
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Noble WS, 2006, NAT BIOTECHNOL, V24, P1565, DOI 10.1038/nbt1206-1565
   Pak C, 2018, INT J SOFTW ENG KNOW, V28, P811, DOI 10.1142/S0218194018500237
   Pal M, 2005, INT J REMOTE SENS, V26, P217, DOI 10.1080/01431160412331269698
   Pastor-Pellicer J, 2013, LECT NOTES COMPUT SC, V7902, P376, DOI 10.1007/978-3-642-38679-4_37
   Pecorelli F, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P19, DOI 10.1145/3340482.3342744
   Peruma A., 2019, P 29 ANN INT C COMP, P193, DOI DOI 10.5555/3370272.3370293
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Qusef A, 2019, IEEE ACCESS, V7, P139526, DOI 10.1109/ACCESS.2019.2943488
   Rajaraman Anand., 2011, Mining of Massive Datasets, DOI DOI 10.1017/CBO9781139058452
   Rokach L, 2005, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, P165, DOI 10.1007/0-387-25465-X_9
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   SPARCKJONES K, 1972, J DOC, V28, P11, DOI 10.1108/eb026526
   Sutar Shantanu, 2020, 2020 International Conference on Intelligent Engineering and Management (ICIEM), P301, DOI 10.1109/ICIEM48762.2020.9160225
   Taj S, 2019, PROCEEDINGS OF 2019 8TH INTERNATIONAL CONFERENCE ON SOFTWARE AND INFORMATION ENGINEERING (ICSIE 2019), P42, DOI 10.1145/3328833.3328837
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Virgínio T, 2019, PROCEEDINGS OF THE XXXIII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2019, P467, DOI 10.1145/3350768.3350775
   Yadla S, 2005, INNOV SYST SOFTW ENG, V1, P116, DOI 10.1007/s11334-005-0011-3
   Zhang D, 2003, SOFTWARE QUAL J, V11, P87, DOI 10.1023/A:1023760326768
   Zhang D., 2006, Advances in machine learning applications in software engineering
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 81
TC 1
Z9 1
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2023
VL 49
IS 5
BP 3305
EP 3324
DI 10.1109/TSE.2023.3252442
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA G8MH8
UT WOS:000991628700015
DA 2024-07-18
ER

PT J
AU Benaroch, M
   Lyytinen, K
AF Benaroch, Michel
   Lyytinen, Kalle
TI How Much Does Software Complexity Matter for Maintenance Productivity?
   The Link Between Team Instability and Diversity
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Maintenance engineering; Task analysis; Software; Complexity theory;
   Productivity; Codes; Software maintenance; Interaction effects; high
   software complexity; productivity; software complexity; software
   maintenance; team instability; team knowledge diversity
ID MENTAL MODELS; PERFORMANCE; EXPERIENCE; TASK; DETERMINANTS; FAMILIARITY;
   VOLATILITY; KNOWLEDGE
AB Software complexity decreases maintenance productivity, as do team attributes of instability and knowledge diversity. We know little about the extent to which the two team attributes interact with software complexity and shape productivity across systems of varying complexity. We address this gap by investigating whether and to what degree software complexity moderates the effects of team instability and knowledge diversity on maintenance productivity over the life of a system. We posit, given the exponential growth of code and task dependencies inherent in complex software systems, that system-level complexity has a significant nonlinear amplifying effect on the adverse effects of the two team attributes. To validate the presence of such an effect, we conduct a robust split-sample econometric analysis using three years of maintenance data from 426 mission-critical systems of a Fortune 100 company. The sampled systems vary in size (50KLOC to 2000KLOC, where 20% exceed 500KLOC), with a considerable portion of the sample manifesting "high" to "very high" software complexity. The analysis corroborates the known adverse effects of team instability, team knowledge diversity, and software complexity on maintenance productivity. More importantly, it shows-as theorized-that the adverse effects of the team attributes on maintenance productivity are significantly amplified only when software complexity grows high. We conclude with practical and research implications about how to manage software teams maintaining complex software over the life of a system.
C1 [Benaroch, Michel] Syracuse Univ, Whitman Sch Management, Syracuse, NY 13244 USA.
   [Lyytinen, Kalle] Case Western Reserve Univ, Design & Innovat Dept, Cleveland, OH 44106 USA.
C3 Syracuse University; University System of Ohio; Case Western Reserve
   University
RP Benaroch, M (corresponding author), Syracuse Univ, Whitman Sch Management, Syracuse, NY 13244 USA.
EM mbenaroc@syr.edu; kjl13@case.edu
CR Abid NJ, 2019, ETRA 2019: 2019 ACM SYMPOSIUM ON EYE TRACKING RESEARCH & APPLICATIONS, DOI 10.1145/3314111.3319834
   Aiken L.S., 1991, MULTIPLE REGRESSION
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 1994, Designing engineers
   [Anonymous], 2007, CROSSTALK J DEFENSE
   [Anonymous], 2009, 2009 ATLANTA C SCI I
   [Anonymous], 1985, Longitudinal Analysis of Labor Market Data
   [Anonymous], 2006, P PAC NW SOFTW QUAL
   Arapidis C.S., 2012, SONAR CODE QUALITY T
   Argote L, 2021, MANAGE SCI, V67, P5399, DOI 10.1287/mnsc.2020.3693
   Banker Rajiv D., 1987, Proceedings of the International Conference on Information Systems, P160
   Banker RD, 2000, INFORM SYST RES, V11, P219, DOI 10.1287/isre.11.3.219.12209
   BANKER RD, 1993, COMMUN ACM, V36, P81, DOI 10.1145/163359.163375
   Banker RD, 1997, MANAGE SCI, V43, P1709, DOI 10.1287/mnsc.43.12.1709
   Banker RD, 1998, MANAGE SCI, V44, P433, DOI 10.1287/mnsc.44.4.433
   Bao LF, 2017, IEEE WORK CONF MIN S, P170, DOI 10.1109/MSR.2017.58
   Barry EJ, 2007, J SOFTW MAINT EVOL-R, V19, P1, DOI 10.1002/smr.342
   Bedwell WL, 2019, FRONT PSYCHOL, V10, DOI 10.3389/fpsyg.2019.02266
   Belsley D. A., 2005, Regression Diagnostics: Identifying Influential Data and Sources of Collinearity
   Benaroch M., 2016, PROC 8 ANN ILAIS C
   Bergman M, 2007, J ASSOC INF SYST, V8, P546, DOI 10.17705/1jais.00144
   BOEHMDAVIS DA, 1992, INT J MAN MACH STUD, V36, P21, DOI 10.1016/0020-7373(92)90051-L
   Boh WF, 2007, MANAGE SCI, V53, P1315, DOI 10.1287/mnsc.1060.0687
   Bozan K, 2021, COMMUN ACM, V64, P79, DOI 10.1145/3378064
   Brenner R, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P38, DOI 10.1109/TechDebt.2019.00013
   Britto R, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962636
   Britto R, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110699
   Britto R, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1921
   Brooks Fred, 1975, The Mythical Man-Month
   Bunderson JS, 2002, ACAD MANAGE J, V45, P875, DOI 10.2307/3069319
   CANNONBOWERS JA, 1993, INDIVIDUAL AND GROUP DECISION MAKING, P221
   Daniel S, 2013, INFORM SYST RES, V24, P312, DOI 10.1287/isre.1120.0435
   Davison JW, 2000, BELL LABS TECH J, V5, P44, DOI 10.1002/bltj.2221
   De Dreu CKW, 2003, J APPL PSYCHOL, V88, P741, DOI 10.1037/0021-9010.88.4.741
   Dibble R, 2018, HUM RELAT, V71, P925, DOI 10.1177/0018726717735372
   Dreyfus SE., 2004, Bull Sci Technol Soc, V24, P177, DOI [10.1177/0270467604264992, DOI 10.1177/0270467604264992]
   Durán M, 2019, 2019 7TH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION (CONISOFT 2019), P87, DOI 10.1109/CONISOFT.2019.00022
   Edmondson AC, 2003, J MANAGE STUD, V40, P1419, DOI 10.1111/1467-6486.00386
   Ellwart T, 2017, ADV INF QUAL MANAGE, P223, DOI 10.4018/978-1-5225-2061-0.ch010
   Espinosa JA, 2007, ORGAN SCI, V18, P613, DOI 10.1287/orsc.1070.0297
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   Faraj S, 2006, MANAGE SCI, V52, P1155, DOI 10.1287/mnsc.1060.0526
   FIX V, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P74
   Gefen D, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P134, DOI 10.1109/ICSM.1996.564998
   GILL GK, 1991, IEEE T SOFTWARE ENG, V17, P1284, DOI 10.1109/32.106988
   Hærem T, 2015, ACAD MANAGE REV, V40, P446, DOI 10.5465/amr.2013.0350
   Heales J., 1995, PROC 16 INT C INFORM
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Huckman RS, 2011, M&SOM-MANUF SERV OP, V13, P310, DOI 10.1287/msom.1100.0321
   Huckman RS, 2009, MANAGE SCI, V55, P85, DOI 10.1287/mnsc.1080.0921
   Hutchins E., 1995, COGNITION WILD
   JORGENSEN M, 1995, IEEE T SOFTWARE ENG, V21, P674, DOI 10.1109/32.403791
   Kang K, 2017, INFORM SYST RES, V28, P797, DOI 10.1287/isre.2017.0713
   Kemerer C. F., 1995, Annals of Software Engineering, V1, P1, DOI 10.1007/BF02249043
   Kemerer CF, 1997, J SOFTW MAINT-RES PR, V9, P235, DOI 10.1002/(SICI)1096-908X(199707/08)9:4<235::AID-SMR153>3.0.CO;2-3
   Kemerer CF, 1999, IEEE T SOFTWARE ENG, V25, P493, DOI 10.1109/32.799945
   Krancher O., 2012, P 33 INT C INF SYST, P105
   Krishnan MS, 2000, MANAGE SCI, V46, P745, DOI 10.1287/mnsc.46.6.745.11941
   Lewis K, 2004, MANAGE SCI, V50, P1519, DOI 10.1287/mnsc.1040.0257
   Liang TP, 2007, IND MANAGE DATA SYST, V107, P636, DOI 10.1108/02635570710750408
   Lim BC, 2006, J ORGAN BEHAV, V27, P403, DOI 10.1002/job.387
   Lindberg A, 2016, INFORM SYST RES, V27, P751, DOI 10.1287/isre.2016.0673
   LITTMAN DC, 1987, J SYST SOFTWARE, V7, P341, DOI 10.1016/0164-1212(87)90033-1
   McCarter MW, 2013, PLOS ONE, V8, DOI 10.1371/journal.pone.0055058
   Mens T, 2016, Arxiv, DOI arXiv:1608.01533
   Mishra A, 2020, COMPUT SCI REV, V38, DOI 10.1016/j.cosrev.2020.100308
   Mockus A., 2001, GLOBAL SOFTWARE IT G
   Mohammed S, 2001, J ORGAN BEHAV, V22, P89, DOI 10.1002/job.86
   Mortensen M, 2018, ORGAN SCI, V29, P341, DOI 10.1287/orsc.2017.1198
   Nah FFH, 2001, J SOFTW MAINT EVOL-R, V13, P399, DOI 10.1002/smr.239
   Narayanan S, 2014, PROD OPER MANAG, V23, P1332, DOI 10.1111/poms.12039
   Narayanan S, 2009, MANAGE SCI, V55, P1861, DOI 10.1287/mnsc.1090.1057
   Ohlsson Niclas., 1996, P 6 INT C SOFTWARE Q, P1
   Peitek N, 2020, IEEE T SOFTWARE ENG, V46, P442, DOI 10.1109/TSE.2018.2863303
   Przybilla L., 2020, P 28 EUR C INF SYST, P1
   Ramasubbu N, 2016, MANAGE SCI, V62, P1487, DOI 10.1287/mnsc.2015.2196
   Ramasubbu N, 2012, IEEE T SOFTWARE ENG, V38, P1054, DOI 10.1109/TSE.2011.88
   Reagans R, 2005, MANAGE SCI, V51, P869, DOI 10.1287/mnsc.1050.0366
   Scott E, 2020, EUROMICRO CONF PROC, P124, DOI 10.1109/SEAA51224.2020.00029
   Selvaratnam D.P., 2016, Acta Universitatis Danubius: Oeconomica, V12, P138
   Shaft TM, 2006, MIS QUART, V30, P29
   Smite D, 2017, INT CONF GLOBAL SOFT, P96, DOI 10.1109/ICGSE.2017.12
   Stahl GK, 2010, J INT BUS STUD, V41, P690, DOI 10.1057/jibs.2009.85
   Ton Z, 2008, ORGAN SCI, V19, P56, DOI 10.1287/orsc.1070.0294
   Waseem M, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110798
   Wiedemann A, 2019, COMMUN ACM, V62, P44, DOI 10.1145/3331138
   WIEDENBECK S, 1985, INT J MAN MACH STUD, V23, P383, DOI 10.1016/S0020-7373(85)80041-9
   Wooldridge J.M., 2016, Introductory Econometrics: A Modern Approach
   Zhang XN, 2003, J SOFTW MAINT EVOL-R, V15, P191, DOI 10.1002/SMR.276
   Zhou YM, 2013, ORGAN SCI, V24, P339, DOI 10.1287/orsc.1120.0744
NR 90
TC 1
Z9 1
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2459
EP 2475
DI 10.1109/TSE.2022.3222119
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600060
DA 2024-07-18
ER

PT J
AU Zhang, ZY
   Lyu, D
   Arcaini, P
   Ma, L
   Hasuo, I
   Zhao, JJ
AF Zhang, Zhenya
   Lyu, Deyun
   Arcaini, Paolo
   Ma, Lei
   Hasuo, Ichiro
   Zhao, Jianjun
TI FalsifAI: Falsification of AI-Enabled Hybrid Control Systems Guided by
   Time-Aware Coverage Criteria
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Behavioral sciences; Neurons; Biological neural networks; Robustness;
   Automobiles; Task analysis; Deep learning; Search-based testing;
   falsification; neural network controllers; coverage criteria;
   cyber-physical systems
AB Modern Cyber-Physical Systems (CPSs) that need to perform complex control tasks (e.g., autonomous driving) are increasingly using AI-enabled controllers, mainly based on deep neural networks (DNNs). The quality assurance of such types of systems is of vital importance. However, their verification can be extremely challenging, due to their complexity and uninterpretable decision logic. Falsification is an established approach for CPS quality assurance, which, instead of attempting to prove the system correctness, aims at finding a time-variant input signal violating a formal specification describing the desired behavior; it often employs a search-based testing approach that tries to minimize the robustness of the specification, given by its quantitative semantics. However, guidance provided by robustness is mostly black-box and only related to the system output, but does not allow to understand whether the temporal internal behavior determined by multiple consecutive executions of the neural network controller has been explored sufficiently. To bridge this gap, in this paper, we make an early attempt at exploring the temporal behavior determined by the repeated executions of the neural network controllers in hybrid control systems and first propose eight time-aware coverage criteria specifically designed for neural network controllers in the context of CPS, which consider different features by design: the simple temporal activation of a neuron, the continuous activation of a neuron for a given duration, and the differential neuron activation behavior over time. Second, we introduce a falsification framework, named FalsifAI, that exploits the coverage information for better falsification guidance. Namely, inputs of the controller that increase the coverage (so improving the exploration of the DNN behaviors), are prioritized in the exploitation phase of robustness minimization. Our large-scale evaluation over a total of 3 typical CPS tasks, 6 system specifications, 18 DNN models and more than 12,000 experiment runs, demonstrates 1) the advantage of our proposed technique in outperforming two state-of-the-art falsification approaches, and 2) the usefulness of our proposed time-aware coverage criteria for effective falsification guidance.
C1 [Zhang, Zhenya; Lyu, Deyun; Ma, Lei; Zhao, Jianjun] Kyushu Univ, Fukuoka 8190395, Japan.
   [Arcaini, Paolo; Hasuo, Ichiro] Natl Inst Informat, Tokyo 1018430, Japan.
   [Arcaini, Paolo; Hasuo, Ichiro] SOKENDAI Grad Univ Adv Studies, Hayama 2400193, Japan.
   [Ma, Lei] Univ Alberta, Edmonton, AB, Canada.
   [Ma, Lei] Alberta Machine Intelligence Inst Amii, Edmonton, AB T5J 3B1, Canada.
C3 Kyushu University; Research Organization of Information & Systems
   (ROIS); National Institute of Informatics (NII) - Japan; Graduate
   University for Advanced Studies - Japan; University of Alberta
RP Zhang, ZY (corresponding author), Kyushu Univ, Fukuoka 8190395, Japan.
EM zhang@ait.kyushu-u.ac.jp; lyu.deyun.107@s.kyushu-u.ac.jp;
   arcaini@nii.ac.jp; ma.lei@acm.org; i.hasuo@acm.org;
   zhao@ait.kyushu-u.ac.jp
RI Arcaini, Paolo/J-3616-2017
OI Arcaini, Paolo/0000-0002-6253-4062; Lyu, Deyun/0000-0003-3017-7977;
   Zhang, Zhenya/0000-0002-3854-9846
FU JST SPRING [JPMJSP2136]; ERATO HASUO Metamathematics for Systems Design
   Project [JPMJER1603]; JST; Engineerable AI Techniques for Practical
   Applications of High-Quality Machine Learning -based Systems Project,
   JST-Mirai Program [JPMJMI20B8]; Canada First Research Excellence Fund
   through the University of Alberta's Future Energy Systems Research
   Initiative, Canada; CIFAR AI Chairs Program; Amii RAP Program; Natural
   Sciences and Engineering Research Council of Canada [NSERC
   RGPIN-2021-02549, RGPAS-2021-00034, DGECR-2021-00019]; JSPS KAKENHI
   [JP19H04086, JP20H04168, JP21H04877]; JST-Mirai Program [JPMJMI20B8];
   Grants-in-Aid for Scientific Research [21H04877, 20H04168] Funding
   Source: KAKEN
FX The work of Deyun Lyu was supported in part by JST SPRING under Grant
   JPMJSP2136. The work of Paolo Arcaini and Ichiro Hasuo was supported in
   part by ERATO HASUO Metamathematics for Systems Design Project under
   Grant JPMJER1603, in part by JST under Grant 10.13039/501100009024
   ERATO. The work of Paolo Arcaini was also supported in part by
   Engineerable AI Techniques for Practical Applications of High-Quality
   Machine Learning -based Systems Project, JST-Mirai Program under Grant
   JPMJMI20B8. This work was supported in part by the Canada First Research
   Excellence Fund through the University of Alberta's Future Energy
   Systems Research Initiative, Canada, in part by CIFAR AI Chairs Program,
   in part by Amii RAP Program, in part by the Natural Sciences and
   Engineering Research Council of Canada under Grants NSERC
   RGPIN-2021-02549, RGPAS-2021-00034, and DGECR-2021-00019, in part by
   JSPS KAKENHI under Grants JP19H04086, JP20H04168, and JP21H04877, and in
   part by JST-Mirai Program under Grant JPMJMI20B8.
CR Adimoolam A, 2017, LECT NOTES COMPUT SC, V10426, P483, DOI 10.1007/978-3-319-63387-9_24
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Ammann Paul, 2008, Introduction to software testing, V1st
   Annapureddy Y, 2011, LECT NOTES COMPUT SC, V6605, P254, DOI 10.1007/978-3-642-19835-9_21
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Berend D, 2020, IEEE INT CONF AUTOM, P1041, DOI 10.1145/3324884.3416609
   Bojarski M, 2016, Arxiv, DOI [arXiv:1604.07316, 10.48550/arXiv.1604.07316]
   Chen YQT, 2020, IEEE INT CONF AUTOM, P237, DOI 10.1145/3324884.3416667
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   Crepinsek M, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2480741.2480752
   Julian KD, 2018, Arxiv, DOI arXiv:1810.04240
   Dokhanchi A, 2015, 2015 PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON EMBEDDED SOFTWARE (EMSOFT), P31, DOI 10.1109/EMSOFT.2015.7318257
   Donzé A, 2010, LECT NOTES COMPUT SC, V6246, P92, DOI 10.1007/978-3-642-15297-9_9
   Donzé A, 2010, LECT NOTES COMPUT SC, V6174, P167, DOI 10.1007/978-3-642-14295-6_17
   Dreossi T, 2019, J AUTOM REASONING, V63, P1031, DOI 10.1007/s10817-018-09509-5
   Dreossi T, 2019, LECT NOTES COMPUT SC, V11561, P432, DOI 10.1007/978-3-030-25540-4_25
   Dreossi T, 2015, LECT NOTES COMPUT SC, V9058, P127, DOI 10.1007/978-3-319-17524-9_10
   Du XN, 2020, IEEE INT CONF AUTOM, P423, DOI 10.1145/3324884.3416564
   Du XN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P477, DOI 10.1145/3338906.3338954
   Ernst G., 2020, EPiC Series in Computing, V74
   Ernst Gidon., 2021, 8 INT WORKSHOP APPL, P133
   Fainekos GE, 2009, THEOR COMPUT SCI, V410, P4262, DOI 10.1016/j.tcs.2009.06.021
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Gladisch C, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P26, DOI 10.1109/ASE.2019.00013
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Henzinger TA, 1996, IEEE S LOG, P278, DOI 10.1109/LICS.1996.561342
   Tran HD, 2019, ACM T EMBED COMPUT S, V18, DOI 10.1145/3358230
   Hope EM, 2011, IEEE T CIRCUITS-I, V58, P2944, DOI 10.1109/TCSI.2011.2157780
   Huang C, 2019, ACM T EMBED COMPUT S, V18, DOI 10.1145/3358228
   Jin X., 2014, P 17 INT C HYBRID SY, P253, DOI DOI 10.1145/2562059.2562140
   Johnson T.T., 2020, EPiC Series in Computing, V74, P107
   Johnson T.T., 2021, 8 INT WORKSHOP APPL, P90
   Kapinski J, 2016, IEEE CONTR SYST MAG, V36, P45, DOI 10.1109/MCS.2016.2602089
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Klees G, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2123, DOI 10.1145/3243734.3243804
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma L, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P614, DOI [10.1109/saner.2019.8668044, 10.1109/SANER.2019.8668044]
   Menghi C, 2020, PROC INT CONF SOFTW, P372, DOI 10.1145/3377811.3380370
   Nejati S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1015, DOI 10.1145/3338906.3340444
   Nguyen L. V., 2015, PROC 1 2 INT WORKSHO, P19
   Odena A, 2019, PR MACH LEARN RES, V97
   Pacheco Carlos, 2007, COMPANION 22 ACM SIG, P815, DOI DOI 10.1145/1297846.1297902
   Pei KX, 2019, COMMUN ACM, V62, P137, DOI 10.1145/3361566
   Platzer A, 2008, LECT NOTES ARTIF INT, V5195, P171, DOI 10.1007/978-3-540-71070-7_15
   Suenaga K, 2011, LECT NOTES COMPUT SC, V6756, P392, DOI 10.1007/978-3-642-22012-8_31
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Tran HD, 2020, LECT NOTES COMPUT SC, V12224, P3, DOI 10.1007/978-3-030-53288-8_1
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Yaghoubi S, 2019, PROCEEDINGS OF THE 2019 22ND ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL (HSCC '19), P179, DOI 10.1145/3302504.3311814
   Yamagata Y, 2021, IEEE T SOFTWARE ENG, V47, P2823, DOI 10.1109/TSE.2020.2969178
   Zeiler MD, 2014, LECT NOTES COMPUT SC, V8689, P818, DOI 10.1007/978-3-319-10590-1_53
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang ZY, 2021, LECT NOTES COMPUT SC, V12759, P595, DOI 10.1007/978-3-030-81685-8_29
   Zhang ZY, 2020, IEEE T COMPUT AID D, V39, P3674, DOI 10.1109/TCAD.2020.3013073
   Zhang ZY, 2020, LECT NOTES COMPUT SC, V12229, P401, DOI 10.1007/978-3-030-55754-6_24
   Zhang ZY, 2019, LECT NOTES COMPUT SC, V11561, P401, DOI 10.1007/978-3-030-25540-4_23
   Zhang ZY, 2018, IEEE T COMPUT AID D, V37, P2894, DOI 10.1109/TCAD.2018.2858463
   Zhang Zhenya, 2022, IEEE T SOFTWARE ENG, V2022
NR 60
TC 3
Z9 3
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1842
EP 1859
DI 10.1109/TSE.2022.3194640
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600024
DA 2024-07-18
ER

PT J
AU Afzal, A
   Le Goues, C
   Timperley, CS
AF Afzal, Afsoon
   Le Goues, Claire
   Timperley, Christopher Steven
TI Mithra: Anomaly Detection as an Oracle for Cyberphysical Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Codes; Testing; Telemetry; Splines (mathematics);
   Sensors; Sensor systems; Robotics and autonomous systems; cyberphysical
   systems testing; anomaly detection; oracle learning; clustering; Mithra
ID TIME-SERIES; VARIABLES; COMPLEX
AB Testing plays an essential role in ensuring the safety and quality of cyberphysical systems (CPSs). One of the main challenges in automated and software-in-the-loop simulation testing of CPSs is defining effective oracles that can check that a given system conforms to expectations of desired behavior. Manually specifying such oracles can be tedious, complex, and error-prone, and so techniques for automatically learning oracles are attractive. Characteristics of CPSs, such as limited or no access to source code, behavior that is non-deterministic and sensitive to noise, and that the system may respond differently to input based on its context introduce considerable challenges for automated oracle learning. We present Mithra, a novel, unsupervised oracle learning technique for CPSs that operates on existing telemetry data. It uses a three-step multivariate time series clustering to discover the set of unique, correct behaviors for a CPS, which it uses to construct robust oracles. We instantiate our proposed technique for ArduPilot, a popular, open-source autopilot software. On a set of 24 bugs, we show that Mithra effectively identifies buggy executions with few false positives and outperforms AR-SI, a state-of-the-art CPS oracle learning technique. We demonstrate Mithra's wider applicability by applying it to an autonomous racer built for the Robot Operating System.
C1 [Afzal, Afsoon; Le Goues, Claire; Timperley, Christopher Steven] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
C3 Carnegie Mellon University
RP Afzal, A (corresponding author), Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
EM afsoona@alumni.cmu.edu; clegoues@cs.cmu.edu; ctimperley@cmu.edu
OI Le Goues, Claire/0000-0002-3931-060X
FU AFRL [FA8750-15-2-0075, 19-PAF00747]; DARPA [FA8750-16-2-0042]; NSF
   [CCF-1750116];  [NSF-1563797]
FX This work was partially supported by AFRL (#FA8750-15-2-0075), DARPA
   (#FA8750-16-2-0042), NSF-1563797, AFRL 19-PAF00747, and the NSF
   (#CCF-1750116).
CR Abbaspour A, 2016, PROCEDIA COMPUT SCI, V95, P193, DOI 10.1016/j.procs.2016.09.312
   Abdi H, 2010, WIRES COMPUT STAT, V2, P433, DOI 10.1002/wics.101
   Afanasov Mikhail, 2017, ACM SIGBED Review, V14, P27, DOI 10.1145/3177803.3177808
   Afshan S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P352, DOI 10.1109/ICST.2013.11
   Afzal A, 2021, IEEE INT CONF SOFTW, P263, DOI 10.1109/ICST49551.2021.00036
   Afzal A, 2020, IEEE INT CONF SOFTW, P96, DOI 10.1109/ICST46399.2020.00020
   Aghabozorgi S, 2015, INFORM SYST, V53, P16, DOI 10.1016/j.is.2015.04.007
   Aghabozorgi S, 2014, INTELL DATA ANAL, V18, P793, DOI 10.3233/IDA-140669
   Aliabadi MR, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P349, DOI 10.1145/3106237.3106282
   Alippi C, 2017, IEEE TETCI, V1, P61, DOI 10.1109/TETCI.2016.2641452
   [Anonymous], 2016, SCHIAP LAND INV MAK
   [Anonymous], ARDUPILOT
   Bagnall A, 2005, MACH LEARN, V58, P151, DOI 10.1007/s10994-005-5825-6
   Bao L, 2018, J SYST SOFTWARE, V143, P172, DOI 10.1016/j.jss.2018.05.016
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Berndt D.J., 1994, AAAI 94 WORKSH KNOWL, V10, P359, DOI [10.5555/3000850.3000887, DOI 10.5555/3000850.3000887]
   Beschastnikh I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P468, DOI 10.1145/2568225.2568246
   Beschastnikh I, 2016, COMMUN ACM, V59, P32, DOI 10.1145/2909480
   BIERMANN AW, 1972, IEEE T COMPUT, VC 21, P592, DOI 10.1109/TC.1972.5009015
   Briand L. C., 2006, 28th International Conference on Software Engineering Proceedings, P92, DOI 10.1145/1134285.1134300
   Broy Manfred., 2013, Complex Systems Design Management, P1
   Charette RN, 2014, IEEE Spectrum
   Chávez E, 2001, ACM COMPUT SURV, V33, P273, DOI 10.1145/502807.502808
   Chen YL, 2017, INFORM FUSION, V36, P225, DOI 10.1016/j.inffus.2016.11.015
   Chen YQ, 2018, P IEEE S SECUR PRIV, P648, DOI 10.1109/SP.2018.00016
   Cheng L, 2017, ANN COMPUT SECURITY, P315, DOI 10.1145/3134600.3134640
   Choi H, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P801, DOI 10.1145/3243734.3243752
   Coelho M. S., 2012, THESIS NSBE UNL
   Cohen J, 2003, APPL MULTIPLE REGRES, DOI DOI 10.4324/9780203774441
   Csallner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P281, DOI 10.1145/1368088.1368127
   Engler D., 2001, Operating Systems Review, V35, P57, DOI 10.1145/502059.502041
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Fremont DJ, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P63, DOI 10.1145/3314221.3314633
   Fu AWC, 2008, VLDB J, V17, P899, DOI 10.1007/s00778-006-0040-z
   Gambi A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P318, DOI 10.1145/3293882.3330566
   Ghafouri A, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3769
   Ghafouri Amin., 2017, Proceedings of the 2nd International Workshop on Science of Smart City Operations and Platforms Engineering, P1
   Gladisch C, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P26, DOI 10.1109/ASE.2019.00013
   Grant S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1149, DOI 10.1145/3180155.3180199
   Gu J, 2006, LECT NOTES COMPUT SC, V4224, P841
   Han J., 2006, DATA MINING CONCEPTS, DOI 10.1016/C2009-0-61819-5
   Harada Y, 2017, INT WORKSH EMPIR ENG, P1, DOI 10.1109/IWESEP.2017.12
   Hauer F, 2017, IEEE INT SYMP SOFTW, P5, DOI 10.1109/ISSREW.2017.10
   He ZJ, 2019, PROC INT CONF SOFTW, P116, DOI 10.1109/ICSE.2019.00029
   Hofbaur MW, 2002, LECT NOTES COMPUT SC, V2289, P253
   Hotelling H, 1933, J EDUC PSYCHOL, V24, P417, DOI 10.1037/h0071325
   Hoxha B., 2014, INT WORKSH DES IMPL
   Hui M, 2018, IEEE ACCESS, V6, P27760, DOI 10.1109/ACCESS.2018.2840086
   Inoue J, 2017, INT CONF DAT MIN WOR, P1058, DOI 10.1109/ICDMW.2017.149
   Jiang H, 2017, AUTON ROBOT, V41, P1027, DOI 10.1007/s10514-016-9576-y
   John C.M., 1995, TECHNOLOGY READINESS
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   JOHNSON SC, 1967, PSYCHOMETRIKA, V32, P241, DOI 10.1007/BF02289588
   Kahveci T, 2002, 14TH INTERNATIONAL CONFERENCE ON SCIENTIFIC AND STATISTICAL DATABASE MANAGEMENT, PROCEEDINGS, P175, DOI 10.1109/SSDM.2002.1029718
   Kahveci T, 2001, PROC INT CONF DATA, P273, DOI 10.1109/ICDE.2001.914838
   Kane A, 2014, I C DEPEND SYS NETWO, P148, DOI 10.1109/DSN.2014.28
   Kao C., 2019, F110 OPEN SOURCE AUT
   Kastner C., 2012, Proc. of FOSD'12, P1
   Kaufman L., 1987, Statistical Data Analysis Based on the L1-Norm and Related Methods. First International Conference, P405
   Keogh E., 2002, Proceedings of the Twenty-eighth International Conference on Very Large Data Bases, P406
   Klück F, 2018, IEEE INT SYMP SOFTW, P118, DOI 10.1109/ISSREW.2018.00-20
   Koo TK, 2016, J CHIROPR MED, V15, P155, DOI 10.1016/j.jcm.2016.02.012
   Kropp NP, 1998, DIG PAP INT SYMP FAU, P230, DOI 10.1109/FTCS.1998.689474
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   LEMIEUX C, 2015, PROC INT C SOFTW ENG, P751
   Lemieux C, 2015, IEEE INT CONF AUTOM, P81, DOI 10.1109/ASE.2015.71
   Lindvall M, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2017), P35, DOI 10.1109/MET.2017.6
   Lou J, 2010, PROTEIN ENG DES SEL, V23, P311, DOI 10.1093/protein/gzq001
   Loyola P., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P193
   Luckcuck M, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3342355
   Majumdar R., 2019, ARXIV
   Malik H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1012, DOI 10.1109/ICSE.2013.6606651
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Matinnejad R, 2016, PROC INT CONF SOFTW, P595, DOI 10.1145/2884781.2884797
   McCausland P., 2017, NBC NEWS
   MCMINN P., 2010, Proceedings of the First International Workshop on Software Test Output Validation, P1
   Menghi C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P27, DOI 10.1145/3338906.3338920
   Mohalik S, 2014, SOFTW TEST VERIF REL, V24, P155, DOI 10.1002/stvr.1489
   Mullins Galen E., 2017, 2017 IEEE International Conference on Robotics and Automation (ICRA), P1443, DOI 10.1109/ICRA.2017.7989173
   Mullins GE, 2018, J SYST SOFTWARE, V137, P197, DOI 10.1016/j.jss.2017.10.031
   Nader P, 2014, IEEE T IND INFORM, V10, P2308, DOI 10.1109/TII.2014.2330796
   Novikov A., 2019, Journal of Open Source Software, V4, P1230, DOI [10.21105/joss.01230, DOI 10.21105/JOSS.01230, 10 . 21105 / joss . 01230]
   Ohmann T., 2014, P IEEE ACM INT C AUT, P19, DOI [10.1145/2642937.2642988, DOI 10.1145/2642937.2642988, 10.1145/2642937, DOI 10.1145/2642937]
   OKane S., 2020, The Verge
   Pasqualetti F, 2011, IEEE DECIS CONTR P, P2195
   Pastore F, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P342, DOI 10.1109/ICST.2013.13
   Pearson K, 1901, PHILOS MAG, V2, P559, DOI 10.1080/14786440109462720
   Platzer A., 2018, Logical Foundations of Cyber-Physical Systems
   Quigley M, 2009, IEEE INT CONF ROBOT, P3604
   Ratanamahatana CA, 2005, SIAM PROC S, P506
   Reger G., 2015, ACM SIGSOFT SOFTWARE, V40, P1
   Robert C, 2020, EMPIR SOFTW ENG, V25, P2025, DOI 10.1007/s10664-020-09800-3
   Rocklage E., 2018, 2017 ieee 20th international conference on intelligent transportation systems (itsc), P476
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   Sadowski C, 2018, COMMUN ACM, V61, P58, DOI 10.1145/3188720
   Salvadora S, 2007, INTELL DATA ANAL, V11, P561, DOI 10.3233/IDA-2007-11508
   Schmidt L, 2017, IEEE INT CONF AUTOM, P901, DOI 10.1109/ASE.2017.8115702
   Skutkova H, 2013, BMC BIOINFORMATICS, V14, DOI 10.1186/1471-2105-14-S10-S1
   Nguyen TV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P608, DOI 10.1145/2568225.2568275
   Nguyen T, 2017, IEEE INT CONF AUTOM, P804
   Thomas T. M.CoverandJ. A., 1991, ELEMENTS INFORM THEO, DOI 10.1002/0471200611
   Thounaojam Y, 2020, IEEE SYS MAN CYBERN, P30, DOI [10.1109/SMC42975.2020.9282846, 10.1109/smc42975.2020.9282846]
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Timperley CS, 2018, IEEE INT CONF SOFTW, P331, DOI 10.1109/ICST.2018.00040
   Tuncali, 2019, THESIS ARIZONA STATE
   Tuncali CE, 2016, 2016 IEEE 19TH INTERNATIONAL CONFERENCE ON INTELLIGENT TRANSPORTATION SYSTEMS (ITSC), P1470, DOI 10.1109/ITSC.2016.7795751
   van Tonder R, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P363, DOI 10.1145/3314221.3314589
   Vasudevan P, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P289, DOI 10.1109/SERA.2006.25
   Verma V, 2004, IEEE ROBOT AUTOM MAG, V11, P56, DOI 10.1109/MRA.2004.1310942
   Weimer W., 2018, AFRLRIRSTR2018182 U
   Windisch A, 2009, PROC INT CONF SOFTW, P395, DOI 10.1109/ICSE-COMPANION.2009.5071030
   Wyrobek K, 2017, The Origin Story of ROS, the Linux of Robotics
   Xia Q, 2018, INT J AUTO TECH-KOR, V19, P751, DOI 10.1007/s12239-018-0072-6
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Yang K., 2004, ACM INT WORKSHOP MUL, P65, DOI DOI 10.1145/1032604.1032616
   Ye N, 2002, IEEE T COMPUT, V51, P810, DOI 10.1109/TC.2002.1017701
   Zhang M, 2016, LECT NOTES COMPUT SC, V9764, P247, DOI 10.1007/978-3-319-42061-5_16
   Zhang TC, 2009, COMPUT MATH APPL, V57, P937, DOI 10.1016/j.camwa.2008.10.083
   Zhou ZQ, 2019, COMMUN ACM, V62, P61, DOI 10.1145/3241979
   Zibaei E, 2018, 2018 3RD INTERNATIONAL CONFERENCE ON SYSTEM RELIABILITY AND SAFETY (ICSRS), P120, DOI [10.1109/ICSRS.2018.8688886, 10.1109/ICSRS.2018.00028]
NR 120
TC 6
Z9 6
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4535
EP 4552
DI 10.1109/TSE.2021.3120680
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800017
DA 2024-07-18
ER

PT J
AU Jin, H
   Wang, ZL
   Wen, M
   Dai, WQ
   Zhu, Y
   Zou, DQ
AF Jin, Hai
   Wang, Zeli
   Wen, Ming
   Dai, Weiqi
   Zhu, Yu
   Zou, Deqing
TI Aroc: An Automatic Repair Framework for On-Chain Smart Contracts
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Contracts; Smart contracts; Codes; Blockchains; Computer bugs;
   Maintenance engineering; Task analysis; Smart contract; vulnerability;
   repair; on-chain protection
AB Ongoing smart contract attack events have seriously impeded the practical application of blockchain. Although lots of researches have been conducted, they mostly focus on off-chain vulnerability detection. However, smart contracts cannot be modified once they have been deployed on-chain, thus existing techniques cannot protect those deployed contracts from being attacked. To mitigate this problem, we propose a general smart contract repairer named Aroc, which can automatically patch vulnerable deployed contracts without changing the contract codes. The core insight of Aroc is to generate patch contracts to abort malicious transactions in advance. Taking the three most serious bug types (i.e., reentrancy, arithmetic bugs, and unchecked low-level checks) as examples, we present how Aroc automatically repairs them on-chain. We conduct abundant evaluations on four kinds of datasets to evaluate the effectiveness and efficiency of Aroc. In particular, Aroc can repair 95.95% of the vulnerable contracts with an average correctness ratio of 93.32%. Meanwhile, Aroc introduces acceptable additional overheads to smart contract users and blockchain miners. When compared with the state-of-the-art techniques, Aroc introduces either fewer execution overheads or contract codes.
C1 [Jin, Hai; Wang, Zeli] Huazhong Univ Sci & Technol, Sch Comp Sci & Technol, Cluster & Grid Comp Lab, Natl Engn Res Ctr Big Data Technol & Syst, Wuhan 430074, Peoples R China.
   [Wen, Ming; Dai, Weiqi; Zhu, Yu] Huazhong Univ Sci & Technol, Sch Cyber Sci & Engn, Hubei Engn Res Ctr Big Data Secur, Natl Engn Res Ctr Big Data Technol & Syst, Wuhan 430074, Peoples R China.
C3 Huazhong University of Science & Technology; Huazhong University of
   Science & Technology
RP Wen, M (corresponding author), Huazhong Univ Sci & Technol, Sch Cyber Sci & Engn, Hubei Engn Res Ctr Big Data Secur, Natl Engn Res Ctr Big Data Technol & Syst, Wuhan 430074, Peoples R China.
EM hjin@hust.edu.cn; zeliwang@hust.edu.cn; mwenaa@hust.edu.cn;
   wqdai@hust.edu.cn; zy_hust@hust.edu.cn; deqingzou@hust.edu.cn
RI Zou, Deqing/F-6194-2019; Wen, Ming/AEJ-8029-2022
OI Wang, Zeli/0000-0002-5053-5201
FU National Key Research and Development Program of China [2020YFB1006000];
   National Natural Science Foundation of China [62072202, 62002125];
   Science and Technology Program of Guangzhou, China [201902020016];
   Fundamental Research Funds for the Central Universities [HUST:
   2020JYCXJJ068]
FX This work was supported by the National Key Research and Development
   Program of China under Grant 2020YFB1006000, the National Natural
   Science Foundation of China under Grants 62072202 and 62002125, the
   Science and Technology Program of Guangzhou, China under Grant
   201902020016, and the Fundamental Research Funds for the Central
   Universities under Grant HUST: 2020JYCXJJ068.
CR [Anonymous], 2018, CONTRACT UPGRADE ANT
   [Anonymous], 2016, POSTMORTEM INVESTIGA
   Breidenbach L, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1335
   Brent L, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P454, DOI 10.1145/3385412.3385990
   Chen T, 2020, 27TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2020), DOI 10.14722/ndss.2020.24449
   Durieux T, 2020, PROC INT CONF SOFTW, P530, DOI 10.1145/3377811.3380364
   Ethereum, 2020, REM ETH IDE
   Ethereum, 2015, ETH BLOCKCH EXPL
   Feng Y, 2020, IEEE INT CONF AUTOM, P1141, DOI 10.1145/3324884.3416646
   Ferreira J. F., 2020, SB CURATED CURATED D
   Ferreira JF, 2020, IEEE INT CONF AUTOM, P1349, DOI 10.1145/3324884.3415298
   Grieco Gustavo, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P557, DOI 10.1145/3395363.3404366
   Huang H, 2020, SCI CHINA INFORM SCI, V63, DOI 10.1007/s11432-018-9781-0
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Kolluri A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P363, DOI 10.1145/3293882.3330560
   Li A, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P438, DOI 10.1145/3385412.3385982
   Liu BW, 2020, I C DEPEND SYS NETWO, P221, DOI 10.1109/DSN48063.2020.00039
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Ma FC, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P554, DOI [10.1109/SANER.2019.8668038, 10.1109/saner.2019.8668038]
   Merdetoken, 2017, ARCHN USCC TREE MAST
   Mueller B., 2016, DETECTING INTEGER AR
   N. Group, 2018, DEC APPL SEC PROJ DA
   Nguyen TD, 2020, PROC INT CONF SOFTW, P778, DOI 10.1145/3377811.3380334
   OpenZeppelin, 2020, Openzeppelin: Contracts
   Peng C, 2019, ASIA PAC SOFWR ENG, P466, DOI 10.1109/APSEC48747.2019.00069
   Permenev A, 2020, P IEEE S SECUR PRIV, P1661, DOI 10.1109/SP40000.2020.00024
   Rodler M, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P1289
   Rodler M, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23413
   Siegel D., 2016, Understanding The DAO Attack
   Slowmist, 2018, US
   So S, 2020, P IEEE S SECUR PRIV, P1678, DOI 10.1109/SP40000.2020.00032
   Solidworks, 2020, About us
   Torres CF, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P664, DOI 10.1145/3274694.3274737
   Wang XM, 2020, IEEE T SERV COMPUT, V13, P314, DOI 10.1109/TSC.2019.2949561
   Wang ZL, 2021, FRONT COMPUT SCI-CHI, V15, DOI 10.1007/s11704-020-9284-9
   Wood Gavin, 2018, ETHEREUM YELLOW PAPE
   Zhang QZ, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P116, DOI [10.1109/saner48275.2020.9054822, 10.1109/SANER48275.2020.9054822]
   Zhong S, 2020, SCI CHINA INFORM SCI, V63, DOI 10.1007/s11432-020-2781-0
   Zone S., 2020, SLOWMIST HACKED
NR 40
TC 7
Z9 8
U1 4
U2 23
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4611
EP 4629
DI 10.1109/TSE.2021.3123170
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800021
OA hybrid
DA 2024-07-18
ER

PT J
AU Xiao, L
   Cai, YF
   Kazman, R
   Mo, R
   Feng, Q
AF Xiao, Lu
   Cai, Yuanfang
   Kazman, Rick
   Mo, Ran
   Feng, Qiong
TI Detecting the Locations and Predicting the Maintenance Costs of Compound
   Architectural Debts
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Maintenance engineering; Software; Compounds; Computer architecture;
   History; Trajectory; Aggregates; Software architecture; technical debt;
   software maintenance; debt quantification and prioritization
ID MINING VERSION HISTORIES; MANAGE TECHNICAL DEBT; SOFTWARE-DEVELOPMENT;
   IDENTIFICATION; SMELLS
AB Architectural Technical Debt (ATD) refers to sub-optimal architectural design in a software system that incurs high maintenance "interest" over time. Previous research revealed that ATD has significant negative impact on daily development. This paper contributes an approach to enable an architect to precisely locate ATDs, as well as capture the trajectory of maintenance cost on each debt, based on which, predict the cost of the debt in a future release. The ATDs are expressed in four typical patterns, which entail the core of each debt. Furthermore, we aggregate compound ATDs to capture the complicated relationship among multiple ATD instances, which should be examined together for effective refactoring solutions. We evaluate our approach on 18 real-world projects. We identified ATDs that persistently incur significant (up to 95 percent of) maintenance costs in most projects. The maintenance costs on the majority of debts fit into a linear regression model-indicating stable "interest" rate. In five projects, 12.1 to 27.6 percent of debts fit into an exponential model, indicating increasing "interest" rate, which deserve higher priority from architects. The regression models can accurately predict the costs of the majority of (82 to 100 percent) debts in the next release of a system. By aggregating related ATDs, architects can focus on a small number of cost-effective compound debts, which contain a relatively small number of source files, but account for a large portion of maintenance costs in their projects. With these capabilities, our approach can help architects make informed decisions regarding whether, where, and how to refactor for eliminating ATDs in their systems.
C1 [Xiao, Lu] Stevens Inst Technol, Sch Syst & Enterprises, Hoboken, NJ 07030 USA.
   [Cai, Yuanfang] Drexel Univ, Comp Sci, Philadelphia, PA 19104 USA.
   [Kazman, Rick] Univ Hawaii, Dept Informat Technol Management, Honolulu, HI 96822 USA.
   [Mo, Ran] Cent China Normal Univ, Comp Sci, Wuhan, Hubei, Peoples R China.
   [Feng, Qiong] Nanjing Univ Sci & Technol, Sch Comp Sci & Engn, Nanjing 210014, Jiangsu, Peoples R China.
C3 Stevens Institute of Technology; Drexel University; University of Hawaii
   System; Central China Normal University; Nanjing University of Science &
   Technology
RP Xiao, L (corresponding author), Stevens Inst Technol, Sch Syst & Enterprises, Hoboken, NJ 07030 USA.
EM lxiao6@stevens.edu; yfcai@cs.drexel.edu; kazman@hawaii.edu;
   moran@mail.ccnu.edu.cn; qiongfeng@njust.edu.cn
RI xiao, lu/KRO-9302-2024
OI Kazman, Rick/0000-0003-0392-2783; Mo, Ran/0000-0001-7556-153X
FU National Science Foundation [CNS-1823074, CNS-1823177, CNS-1823214,
   CCF-1817267, CCF-1816594, OAC-1835292]
FX This work was supported in part by awards CNS-1823074, CNS-1823177,
   CNS-1823214, CCF-1817267, CCF-1816594, and OAC-1835292 from the National
   Science Foundation. We would also like to thank the anonymous reviewers
   for their valuable feedback, which helped us to improve thiswork.
CR Adams B., 2010, P 32 ACMIEEE INT C S, P305
   Alfayez R, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P1, DOI 10.1145/3194164.3194165
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Amanatidis T., 2017, P XP2017 SCI WORKSHO, P1, DOI [DOI 10.1145/3120459.3120464, 10.1145/3120459.3120464]
   Anda BCD, 2009, IEEE T SOFTWARE ENG, V35, P407, DOI 10.1109/TSE.2008.89
   [Anonymous], 2007, P INT WORKSH PRINC S
   Arjovsky M, 2017, PR MACH LEARN RES, V70
   Baldwin C. Y., 2000, Design rules: The power of modularity, DOI DOI 10.7551/MITPRESS/2366.001.0001
   Bass L., 1997, SOFTWARE ARCHITECTUR
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   Beck F., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P99, DOI 10.1109/WCRE.2010.19
   Becker C, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P85, DOI 10.1145/3194164.3194171
   Behutiye WN, 2017, INFORM SOFTWARE TECH, V82, P139, DOI 10.1016/j.infsof.2016.10.004
   Bellomo S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P327, DOI [10.1145/2901739.2901754, 10.1109/MSR.2016.041]
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Besker T, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P105, DOI 10.1145/3194164.3194178
   Besker T, 2018, PROC IEEE INT CONF S, P415, DOI 10.1109/ICSME.2018.00051
   Besker T, 2018, J SYST SOFTWARE, V135, P1, DOI 10.1016/j.jss.2017.09.025
   Besker T, 2017, PROC IEEE INT CONF S, P13, DOI 10.1109/ICSME.2017.42
   Besker T, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P278, DOI 10.1109/SEAA.2017.16
   Beyer D., 2005, P 21 IEEE INT C SOFT, P89
   Beyer D, 2006, WORK CONF REVERSE EN, P199
   Bogner J, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P125, DOI 10.1145/3194164.3194166
   Brondum J., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P7, DOI 10.1109/MTD.2012.6226003
   Canfora G, 2006, PROC IEEE INT CONF S, P213
   Caron P., CREATING USING QUALI
   Carver JC, 2017, IEEE SOFTWARE, V34, P105, DOI 10.1109/MS.2017.51
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   Codabux Z, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P704, DOI 10.1145/2889160.2892643
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Curtis B, 2012, IEEE SOFTWARE, V29, P34, DOI 10.1109/MS.2012.156
   D'Ambros Marco, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P23, DOI 10.1109/QSIC.2010.58
   D'Ambros M, 2009, IEEE T SOFTWARE ENG, V35, P720, DOI 10.1109/TSE.2009.17
   Dai K., 2017, QUASOQ APSEC, P59
   Deligiannis I, 2003, J SYST SOFTWARE, V65, P127, DOI 10.1016/S0164-1212(02)00054-7
   Digkas G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P153, DOI 10.1109/SANER.2018.8330205
   Digkas G, 2017, LECT NOTES COMPUT SC, V10475, P51, DOI 10.1007/978-3-319-65831-5_4
   Feng Q, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P221, DOI 10.1109/WICSA.2016.41
   Fernández-Sánchez C, 2017, J SYST SOFTWARE, V124, P22, DOI 10.1016/j.jss.2016.10.018
   Fioravanti F, 2001, IEEE T SOFTWARE ENG, V27, P1062, DOI 10.1109/32.988708
   Fontana FA, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P282, DOI 10.1109/ICSAW.2017.16
   Fontana FA, 2016, INT WORKSH MANAG TEC, P28, DOI 10.1109/MTD.2016.11
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Gethers M, 2012, PROC INT CONF SOFTW, P430, DOI 10.1109/ICSE.2012.6227172
   Griffith I., 2014, Design pattern decay: the case for class grime, P39
   Guo YP, 2016, EMPIR SOFTW ENG, V21, P159, DOI 10.1007/s10664-014-9351-7
   Hayes JH, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P254, DOI 10.1109/CSMR.2004.1281427
   Holvitie J, 2018, INFORM SOFTWARE TECH, V96, P141, DOI 10.1016/j.infsof.2017.11.015
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   Kagdi H., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P119, DOI 10.1109/WCRE.2010.21
   Kamei E.d.S., 2016, QUASOQ TDA APSEC, P68
   Kazman R., 1999, Automated Software Engineering, V6, P107, DOI 10.1023/A:1008781513258
   Kazman R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P179, DOI 10.1109/ICSE.2015.146
   Kosti MV, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P329, DOI 10.1109/SEAA.2017.59
   Kouroshfar E, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P246, DOI 10.1109/MSR.2015.30
   Kouroshfar E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1450, DOI 10.1109/ICSE.2013.6606741
   Lefever J, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P121, DOI 10.1109/ICSE-SEIP52600.2021.00021
   Lenarduzzi V., 2019, ARXIV
   Lenarduzzi V, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P2, DOI 10.1145/3345629.3345630
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   MacCormack A, 2006, MANAGE SCI, V52, P1015, DOI 10.1287/mnsc.1060.0552
   MacCormack A, 2016, J SYST SOFTWARE, V120, P170, DOI 10.1016/j.jss.2016.06.007
   Maldonado ED, 2017, PROC IEEE INT CONF S, P238, DOI 10.1109/ICSME.2017.8
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   Mamun M.A.A., 2019, INTERNATIONALWORKSHO, P87
   Martinez AB, 2015, IEEE GLOB COMM CONF, DOI 10.1109/GLOCOM.2015.7417650
   Martini A, 2018, LECT NOTES COMPUT SC, V11048, P320, DOI 10.1007/978-3-030-00761-4_21
   Martini A, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P55, DOI 10.1145/3194164.3194185
   Martini A, 2018, SCI COMPUT PROGRAM, V163, P42, DOI 10.1016/j.scico.2018.03.007
   Martini A, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P31, DOI 10.1145/2889160.2889224
   Mensah S, 2018, J SYST SOFTWARE, V135, P37, DOI 10.1016/j.jss.2017.09.026
   Mo R, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P51, DOI 10.1109/WICSA.2015.12
   Mo R, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P39, DOI 10.1109/MTD.2013.6608677
   Mohan M, 2016, J SYST SOFTWARE, V120, P183, DOI 10.1016/j.jss.2016.05.019
   Mondal M, 2013, CONF PROC INT SYMP C, P103, DOI 10.1109/ICPC.2013.6613838
   Nayebi M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P171, DOI 10.1109/ICSE-SEIP.2019.00026
   Niessink F, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P32, DOI 10.1109/ICSM.1997.624228
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Pérez B, 2019, P INT C CHIL COMPUT, DOI 10.1109/sccc49216.2019.8966424
   Peters Lawrence, 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P8, DOI 10.1109/MTD.2014.7
   Ramasubbu N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P883, DOI 10.1145/3180155.3182529
   Reimanis D., 2014, P ACM IEEE INT S EMP, DOI DOI 10.1145/2652524.2652581
   Ren XX, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3324916
   Rios N, 2019, 25TH AMERICAS CONFERENCE ON INFORMATION SYSTEMS (AMCIS 2019)
   Rios N, 2018, EUROMICRO CONF PROC, P429, DOI 10.1109/SEAA.2018.00076
   Rios N, 2018, INFORM SOFTWARE TECH, V102, P117, DOI 10.1016/j.infsof.2018.05.010
   Rolfsnes T, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P201, DOI 10.1109/SANER.2016.101
   Roveda R, 2018, EUROMICRO CONF PROC, P408, DOI 10.1109/SEAA.2018.00073
   Schwanke R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P891, DOI 10.1109/ICSE.2013.6606638
   Sierra G, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P534, DOI [10.1109/saner.2019.8667999, 10.1109/SANER.2019.8667999]
   Silva LL, 2015, PROC IEEE INT CONF S, P21, DOI 10.1109/ICSM.2015.7332448
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Skiada P, 2018, EUROMICRO CONF PROC, P404, DOI 10.1109/SEAA.2018.00072
   Spinola Rodrigo O., 2019, Journal of the Brazilian Computer Society, V25, DOI 10.1186/s13173-019-0087-5
   Tornhill A, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P59, DOI 10.1145/3194164.3194187
   Tsintzira, 2019, PROC CHINA EUR INT S
   Vanya A, 2010, EUR CON SFTWR MTNCE, P260, DOI 10.1109/CSMR.2010.50
   Verdecchia R, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P11, DOI 10.1145/3194164.3194176
   Wehaibi S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P179, DOI 10.1109/SANER.2016.72
   Wiese IS, 2015, IFIP ADV INF COMM TE, V451, P3, DOI 10.1007/978-3-319-17837-0_1
   Wong S., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P293, DOI 10.1109/ASE.2011.6100065
   Wong S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P411, DOI 10.1145/1985793.1985850
   Wu H, 2016, PROC IEEE INT CONF S, P32, DOI 10.1109/ICSME.2016.87
   Xiao L, 2016, PROC INT CONF SOFTW, P488, DOI 10.1145/2884781.2884822
   Xiao L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P967, DOI 10.1145/2568225.2568241
   Yan M, 2019, IEEE T SOFTWARE ENG, V45, P1211, DOI 10.1109/TSE.2018.2831232
   Yli-Huumo J, 2016, J SYST SOFTWARE, V120, P195, DOI 10.1016/j.jss.2016.05.018
   Zampetti F, 2018, IEEE WORK CONF MIN S, P526, DOI 10.1145/3196398.3196423
   Zazworka N, 2014, SOFTWARE QUAL J, V22, P403, DOI 10.1007/s11219-013-9200-8
   Zhou DH, 2019, INT C PROGRAM COMPRE, P271, DOI 10.1109/ICPC.2019.00046
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 112
TC 7
Z9 7
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3686
EP 3715
DI 10.1109/TSE.2021.3102221
PG 30
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500027
DA 2024-07-18
ER

PT J
AU Jarman, D
   Berry, J
   Smith, R
   Thung, F
   Lo, D
AF Jarman, Darryl
   Berry, Jeffrey
   Smith, Riley
   Thung, Ferdian
   Lo, David
TI Legion: Massively Composing Rankers for Improved Bug Localization at
   Adobe
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Location awareness; Tools; Debugging; Random forests;
   Programming; Information retrieval; Bug localization; information
   retrieval; bug reports; data augmentation; ranker composition;
   industrial study
ID FAULT LOCALIZATION
AB Studies have estimated that, in industrial settings, developers spend between 30 and 90 percent of their time fixing bugs. As such, tools that assist in identifying the location of bugs provide value by reducing debugging costs. One such tool is BugLocator. This study initially aimed to determine if developers working on the Adobe Analytics product could use BugLocator. The initial results show that BugLocator achieves a similar accuracy on five of seven Adobe Analytics repositories and on open-source projects. However, these results do not meet the minimum applicability requirement deemed necessary by Adobe Analytics developers prior to possible adoption. Thus, we consequently examine how BugLocator can achieve the targeted accuracy with two extensions: (1) adding more data corpora, and (2) massively composing individual rankers consisting of augmented BugLocator instances trained on various combinations of corpora and parameter configurations with a Random Forest model. We refer to our final extension as Legion. On average, applying Legion to Adobe Analytics repositories results in at least one buggy file ranked in the top-ten recommendations 76.8 percent of the time for customer-reported bugs across all 7 repositories. This represents a substantial improvement over BugLocator of 36.4 percent, and satisfies the minimum applicability requirement. Additionally, our extensions boost Mean Average Precision by 107.7 percent, Mean Reciprocal Rank by 86.1 percent, Top 1 by 143.4 percent and Top 5 by 58.1 percent.
C1 [Jarman, Darryl; Berry, Jeffrey; Smith, Riley] Adobe, Lehi, UT 84043 USA.
   [Thung, Ferdian; Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
C3 Adobe Systems Inc.; Singapore Management University
RP Thung, F (corresponding author), Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
EM djarman@adobe.com; berry@adobe.com; rilsmith@adobe.com;
   ferdianthung@smu.edu.sg; davidlo@smu.edu.sg
RI smith, riley/JRW-9318-2023; Thung, Ferdian/AAX-9321-2020; Lo,
   David/A-2493-2012
OI , Darryl/0000-0002-4039-4812; Lo, David/0000-0002-4367-7201
CR Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Abreu R, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P712
   Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   Ali N., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P174, DOI 10.1109/SCAM.2012.26
   Lam AN, 2017, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2017.24
   Lam AN, 2015, IEEE INT CONF AUTOM, P476, DOI 10.1109/ASE.2015.73
   [Anonymous], 2003, SOFTWARE TESTING TEC
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Bird C, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P191, DOI 10.1109/MSR.2015.25
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bissyandé TF, 2013, EUR CON SFTWR MTNCE, P89, DOI 10.1109/CSMR.2013.19
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Chaparro O, 2019, EMPIR SOFTW ENG, V24, P2947, DOI 10.1007/s10664-018-9672-z
   Chaparro O, 2017, PROC IEEE INT CONF S, P376, DOI 10.1109/ICSME.2017.100
   Dallmeier V, 2005, LECT NOTES COMPUT SC, V3586, P528
   Dao T, 2017, INT C PROGRAM COMPRE, P241, DOI 10.1109/ICPC.2017.29
   Dormann CF, 2013, ECOGRAPHY, V36, P27, DOI 10.1111/j.1600-0587.2012.07348.x
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Garcia E., 2006, DESCRIPTION ADVANTAG
   Golagha M, 2020, IEEE INT CONF SOFTW, P4, DOI 10.1109/ICST46399.2020.00012
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Jiang Y, 2015, 2015 INTERNATIONAL SYMPOSIUM ON BIOELECTRONICS AND BIOINFORMATICS (ISBB), P1, DOI 10.1109/ISBB.2015.7344908
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P1597, DOI 10.1109/TSE.2013.24
   Kochhar Pavneet Singh, 2014, P 2 ACM IEEE INT C, P803, DOI DOI 10.1145/2642937.2642997
   Laghari G, 2016, IEEE INT CONF AUTOM, P274, DOI 10.1145/2970276.2970308
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Le TDB, 2017, EMPIR SOFTW ENG, V22, P2237, DOI 10.1007/s10664-016-9484-y
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Liu C., 2005, P EUR SOFTW ENG C HE, V30, P286
   Liu J., 2011, Proceedings of the American Society for Information Science and Technology, V48, P1, DOI DOI 10.1002/MEET.2011.14504801152
   Lo D., 2010, Software Maintenance (ICSM), 2010 IEEE International Confer- ence on, P1, DOI DOI 10.1109/ICSM.2010.5609542
   Lucia, 2014, J SOFTW-EVOL PROC, V26, P172, DOI 10.1002/smr.1616
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Moreno L, 2014, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSME.2014.37
   Newman M., 2002, NIST ASSESSES TECH N
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pytlik B., 2003, Automated fault localization using potential invariants
   Rahman MM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P621, DOI 10.1145/3236024.3236065
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Rath M, 2018, IEEE WORK CONF MIN S, P442, DOI 10.1145/3196398.3196415
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Sahoo SK, 2013, ACM SIGPLAN NOTICES, V48, P139, DOI 10.1145/2499368.2451131
   Shin Yoo, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P244, DOI 10.1007/978-3-642-33119-0_18
   Sisman B., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P50, DOI 10.1109/MSR.2012.6224299
   Sisman B, 2013, IEEE WORK CONF MIN S, P309, DOI 10.1109/MSR.2013.6624044
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Thomas SW, 2013, IEEE T SOFTWARE ENG, V39, P1427, DOI 10.1109/TSE.2013.27
   Hoang T, 2019, IEEE T SOFTWARE ENG, V45, P1002, DOI 10.1109/TSE.2018.2810892
   Wang SH, 2013, IEEE WORK CONF MIN S, P247, DOI 10.1109/MSR.2013.6624036
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Xia X, 2016, PROC IEEE INT CONF S, P268, DOI 10.1109/ICSME.2016.67
   Xiao Y, 2019, INFORM SOFTWARE TECH, V105, P17, DOI 10.1016/j.infsof.2018.08.002
   Xiaoyuan Xie, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P224, DOI 10.1007/978-3-642-39742-4_17
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Zhang HY, 2009, PROC IEEE INT CONF S, P274, DOI 10.1109/ICSM.2009.5306304
   Zhang M, 2017, P 26 ACM SIGS INT S, P261, DOI DOI 10.1145/3092703.3092731
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 65
TC 0
Z9 0
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 3010
EP 3024
DI 10.1109/TSE.2021.3075215
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500018
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Razzaq, A
   Ventresque, A
   Koschke, R
   De Lucia, A
   Buckley, J
AF Razzaq, Abdul
   Ventresque, Anthony
   Koschke, Rainer
   De Lucia, Andrea
   Buckley, Jim
TI The Effect of Feature Characteristics on the Performance of Feature
   Location Techniques
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Measurement; Feature extraction; Software maintenance; Task analysis;
   Software systems; Gold; Standards; Feature location; bug localization;
   software maintenance; software recommendation; software characteristics
ID LINK ANALYSIS ALGORITHMS; SOURCE-CODE; INFORMATION-RETRIEVAL;
   TRACEABILITY LINKS; METRICS; IMPACT
AB Feature Location (FL) is a core software maintenance activity that aims to locate observable functionalities in the source code. Given its key role in software change, a vast array of Feature Location Techniques (FLTs) have been proposed but, as more and more FLTs are introduced, the selection of an appropriate FLT is an increasingly difficult problem. One consideration is the characteristics of the features being sought. For example, in the code associated with the feature, programmers may have named identifiers consistently, and with meaningful naming conventions, or not, and this may impact on the suitability of different FLTs. The suggestion that such characteristics matter has implicit support in the literature: An analysis of existing FLT empirical studies reveals that the system under study can often have a stronger impact on FLT performance than differing FLTs themselves. To understand this interaction between feature characteristics and FLTs better, this paper proposes a suite of feature-characteristic metrics that are postulated to control FLTs' performance, holistically across FLTs and impacting on individual FLTs to different degrees. To evaluate the suite, a controlled experiment is performed, using 878 features, to probe the relationship between the metrics and the performance of four FTL techniques: three commonly-used techniques and one state-of-the-art technique. The evaluation is performed using four commonly used evaluation measures and extended by employing 41 other established source-code metrics as extraneous variables. Results of the empirical evaluation suggest that the feature-metric suite presented impacts FLT performance holistically, and impacts different FLTs to different degrees. Thus, this paper moves towards the more standard selection of appropriate FLTs, with respect to the prominent feature characteristics in the software systems under study, and more rigorous consideration of the features selected to compare FLTs.
C1 [Razzaq, Abdul] Univ Limerick, Lero Irish Software Res Ctr, Limerick V94 T9PX, Ireland.
   [Ventresque, Anthony] Univ Coll Dublin, Sch Comp Sci, Dublin D04 V1W8, Ireland.
   [Koschke, Rainer] Univ Bremen, Arbeitsgrp Softwaretech, D-28359 Bremen, Germany.
   [De Lucia, Andrea] Univ Salerno, Dipartimento Matemat & Informat, I-84084 Fisciano, Italy.
   [Buckley, Jim] Univ Limerick, CSIS, Limerick V94 T9PX, Ireland.
C3 University of Limerick; University College Dublin; University of Bremen;
   University of Salerno; University of Limerick
RP Razzaq, A (corresponding author), Univ Limerick, Lero Irish Software Res Ctr, Limerick V94 T9PX, Ireland.
EM abdul.razzaq@lero.ie; anthony.ventresque@ucd.ie; koschke@uni-bremen.de;
   adelucia@unisa.it; jim.buckley@ul.ie
RI De Lucia, Andrea/AAG-6781-2020
OI RAZZAQ, Dr ABDUL/0000-0003-4351-1487; De Lucia,
   Andrea/0000-0002-4238-1425
FU Science Foundation Ireland [13/RC/2094]; European Regional Development
   Fund through the Southern & Eastern Regional Operational Programme
FX This work was financially supported by Science Foundation Ireland grant
   13/RC/2094 and co-funded under the European Regional Development Fund
   through the Southern & Eastern Regional Operational Programme to Lero
   -the Irish Software Research Centre (www.lero.ie).
CR [Anonymous], 1991, USERS GUIDE PRINCIPA
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Biggers LR, 2014, EMPIR SOFTW ENG, V19, P465, DOI 10.1007/s10664-012-9224-x
   Binkley D, 2015, J SYST SOFTWARE, V101, P30, DOI 10.1016/j.jss.2014.11.013
   Bolin JH, 2014, J EDUC MEAS, V51, P335, DOI 10.1111/jedm.12050
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Campbell, 2002, EXPT QUASIEXPERIMENT
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chochlov M, 2017, INFORM SOFTWARE TECH, V88, P110, DOI 10.1016/j.infsof.2017.04.003
   Corley CS, 2015, PROC IEEE INT CONF S, P71, DOI 10.1109/ICSM.2015.7332453
   Corley CS, 2015, PROC IEEE INT CONF S, P556, DOI 10.1109/ICSM.2015.7332513
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Dilshener T, 2018, AUTOMAT SOFTW ENG, V25, P383, DOI 10.1007/s10515-017-0226-1
   Dit B, 2015, CONFIGURING ASSEMBLI
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dit B, 2013, EMPIR SOFTW ENG, V18, P277, DOI 10.1007/s10664-011-9194-4
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Eddy BP, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1892
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Fenton N., 2000, INT C SOFTWARE ENG, P357, DOI DOI 10.1145/336512.336588
   Figueiredo E, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P183
   Finch JF, 1997, STRUCT EQU MODELING, V4, P87, DOI 10.1080/10705519709540063
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   GREEN SB, 1991, MULTIVAR BEHAV RES, V26, P499, DOI 10.1207/s15327906mbr2603_7
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Hayes AF, 2007, BEHAV RES METHODS, V39, P709, DOI 10.3758/BF03192961
   Judd CM, 1996, PSYCHOL METHODS, V1, P366, DOI 10.1037/1082-989X.1.4.366
   Judd CM, 2001, PSYCHOL METHODS, V6, P115, DOI 10.1037/1082-989X.6.2.115
   Kachigan S.K., 1991, Multivariate StatisticalAnalysis: A ConceptualIntroduction
   Kästner C, 2014, IEEE T SOFTWARE ENG, V40, P67, DOI 10.1109/TSE.2013.45
   Kagdi H, 2013, EMPIR SOFTW ENG, V18, P933, DOI 10.1007/s10664-012-9233-9
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P1597, DOI 10.1109/TSE.2013.24
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Kuh E., 2004, BOOK REV REGRESSION, P277
   Lee J, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P61, DOI 10.1145/3213846.3213856
   Leppink J., 2018, HLTH PROFESSIONS ED, V4, P225, DOI [DOI 10.1016/J.HPE.2018.04.001, 10.1016/j.hpe.2018.04]
   Li BX, 2012, ADV ENG SOFTW, V53, P1, DOI 10.1016/j.advengsoft.2012.07.001
   MACKINNON JG, 1985, J ECONOMETRICS, V29, P305, DOI 10.1016/0304-4076(85)90158-7
   Mahmoud A, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2824251
   Mahmoud A, 2015, REQUIR ENG, V20, P281, DOI 10.1007/s00766-013-0199-y
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Martinez J, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P257, DOI 10.1145/3233027.3236402
   Mills C, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3078841
   Mogstad M, 2018, ANNU REV ECON, V10, P577, DOI 10.1146/annurev-economics-101617-041813
   Montoya AK, 2019, BEHAV RES METHODS, V51, P61, DOI 10.3758/s13428-018-1088-6
   Moreno L, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P567, DOI 10.1145/2786805.2786859
   Nunez-Varela AS, 2017, J SYST SOFTWARE, V128, P164, DOI 10.1016/j.jss.2017.03.044
   O'Brien MP, 2004, J SOFTW MAINT EVOL-R, V16, P427, DOI 10.1002/smr.307
   Panichella A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P314, DOI 10.1109/SANER.2016.97
   Poshyvanyk D, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377660
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Razzaq A, 2020, EMPIR SOFTW ENG, V25, P266, DOI 10.1007/s10664-019-09734-5
   Razzaq A, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3280988
   Razzaq A, 2012, 2012 15TH INTERNATIONAL MULTITOPIC CONFERENCE (INMIC), P471, DOI 10.1109/INMIC.2012.6511500
   Revelle M, 2011, EMPIR SOFTW ENG, V16, P773, DOI 10.1007/s10664-011-9159-7
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   Scanniello G, 2015, EMPIR SOFTW ENG, V20, P1666, DOI 10.1007/s10664-014-9327-7
   Seltman H.J., 2012, Experimental Design and Analysis
   Shi Z., 2014, Proc. InnoSWDev, P106
   Shin Y., 2012, FRAMEWORK EVALUATING
   Sisman B, 2013, IEEE WORK CONF MIN S, P309, DOI 10.1109/MSR.2013.6624044
   Thomas SW, 2013, IEEE T SOFTWARE ENG, V39, P1427, DOI 10.1109/TSE.2013.27
   Wang SW, 2014, PROC IEEE INT CONF S, P171, DOI 10.1109/ICSME.2014.39
   Wright H. K., 2010, P FSE SDP WORKSH FUT, P411, DOI [10.1145/1882362.1882446, DOI 10.1145/1882362.1882446]
   Ye X, 2016, IEEE T SOFTWARE ENG, V42, P379, DOI 10.1109/TSE.2015.2479232
NR 72
TC 3
Z9 3
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2022
VL 48
IS 6
BP 2066
EP 2085
DI 10.1109/TSE.2021.3049735
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2D5IM
UT WOS:000811580600015
DA 2024-07-18
ER

PT J
AU He, F
   Yu, QS
   Cai, LM
AF He, Fei
   Yu, Qianshan
   Cai, Liming
TI Efficient Summary Reuse for Software Regression Verification
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Task analysis; Performance evaluation; Linux; Device drivers; Safety;
   Interpolation; Regression verification; program verification;
   abstraction refinement; summary reuse
ID STATE
AB Software systems evolve throughout their life cycles. Many revisions are produced over time. Verifying each revision of the software is impractical. Regression verification suggests reusing intermediate results from the previous verification runs. This paper studies regression verification via summary reuse. Not only procedure summaries, but also loop summaries are proposed to be reused. This paper proposes a fully automatic regression verification technique in the context of CEGAR. A lazy counterexample analysis technique is developed to improve the efficiency of summary reuse. We performed extensive experiments on two large sets of industrial programs (3,675 revisions of 488 Linux kernel device drivers). Results show that our summary reuse technique saves 84 to 93 percent analysis time of the regression verification.
C1 [He, Fei; Yu, Qianshan; Cai, Liming] Tsinghua Univ, Sch Software, Beijing 100084, Peoples R China.
C3 Tsinghua University
RP He, F (corresponding author), Tsinghua Univ, Sch Software, Beijing 100084, Peoples R China.
EM hefei@tsinghua.edu.cn; yuqianshan@foxmail.com; limingcai0101@yeah.net
OI He, Fei/0000-0002-4266-875X
FU National Natural Science Foundation of China [61672310, 61527812];
   National Key R&D Program of China [2018YFB1308601]
FX This work was supported in part by the National Natural Science
   Foundation of China (61672310, 61527812), the National Key R&D Program
   of China (2018YFB1308601).
CR Alt L, 2017, LECT NOTES COMPUT SC, V10206, P207, DOI 10.1007/978-3-662-54580-5_12
   [Anonymous], 2014, SER ISSTA 2014
   [Anonymous], 2012, P INT S AUT TECHN VE
   Aquino Andrea., 2015, Proceedings of the 2015 International Symposium on Software Testing and Analysis, P305
   Backes John, 2013, Model Checking Software. 20th International Symposium, SPIN 2013. Proceedings, P99, DOI 10.1007/978-3-642-39176-7_7
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Beyer Dirk, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P184, DOI 10.1007/978-3-642-22110-1_16
   Beyer Dirk, 2007, International Journal on Software Tools for Technology Transfer, V9, P505, DOI 10.1007/s10009-007-0044-z
   Beyer D., 2013, ESEC FSE, P389, DOI [10.1145/2491411.2491429, DOI 10.1145/2491411.2491429]
   Beyer D., 2012, P FSE ACM, P57, DOI DOI 10.1145/2393596.2393664
   Beyer D, 2007, LECT NOTES COMPUT SC, V4590, P504
   Beyer D, 2017, LECT NOTES COMPUT SC, V10206, P331, DOI 10.1007/978-3-662-54580-5_20
   Beyer D, 2016, LECT NOTES COMPUT SC, V9636, P887, DOI 10.1007/978-3-662-49674-9_55
   Böhme M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P302, DOI 10.1109/ICSE.2013.6606576
   Carter M, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P589, DOI 10.1145/2889160.2889163
   Chaki S, 2012, LECT NOTES COMPUT SC, V7148, P119, DOI 10.1007/978-3-642-27940-9_9
   Clarke E, 2003, TIME-ICTL 2003: 10TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING AND FOURTH INTERNATIONAL CONFERENCE ON TEMPORAL LOGIC, PROCEEDINGS, P7
   Clarke EM, 1999, MODEL CHECKING, P1
   Conway CL, 2005, LECT NOTES COMPUT SC, V3576, P449
   D'Silva V, 2008, IEEE T COMPUT AID D, V27, P1165, DOI 10.1109/TCAD.2008.923410
   Fedyukovich G, 2016, LECT NOTES COMPUT SC, V9780, P433, DOI 10.1007/978-3-319-41540-6_24
   Fedyukovich G, 2013, LECT NOTES COMPUT SC, V7795, P292, DOI 10.1007/978-3-642-36742-7_21
   Felsing D, 2014, P 29 ACM IEEE INT C, P349, DOI [10.1145/2642937.2642987, DOI 10.1145/2642937.2642987]
   Godefroid Patrice., 2011, Proc. ISSTA, P23, DOI [10.1145/2001420.2001424, DOI 10.1145/2001420.2001424]
   Godlin B, 2009, DES AUT CON, P466
   Graf S, 1997, LECT NOTES COMPUT SC, V1254, P72
   Graves TL, 2001, ACM T SOFTW ENG METH, V10, P184, DOI 10.1145/367008.367020
   Guo SJ, 2016, IEEE INT CONF AUTOM, P531, DOI 10.1145/2970276.2970332
   Heizmann Matthias, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P36, DOI 10.1007/978-3-642-39799-8_2
   Henzinger TA, 2003, LECT NOTES COMPUT SC, V2772, P332
   Henzinger TA, 2002, ACM SIGPLAN NOTICES, V37, P58, DOI 10.1145/565816.503279
   Jia Xiangyang, 2015, P 2015 INT S SOFTWAR, P177
   Jia Y, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P94, DOI 10.1109/TAIC-PART.2008.18
   Kroening D, 2013, FORM METHOD SYST DES, V42, P221, DOI 10.1007/s10703-012-0176-y
   Lahiri ShuvenduK., 2013, ACM SIGSOFT S FDN SO, P345, DOI DOI 10.1145/2491411.2491452
   Lauterburg S, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P291, DOI 10.1145/1368088.1368128
   McMillan KL, 2006, LECT NOTES COMPUT SC, V4144, P123
   McMillan KL, 2003, LECT NOTES COMPUT SC, V2725, P1
   Mora F, 2018, IEEE INT CONF AUTOM, P441, DOI [10.1145/3238147.3238178, 10.1145/3238117.3238178]
   Person S, 2011, ACM SIGPLAN NOTICES, V46, P504, DOI 10.1145/1993316.1993558
   Person Suzette, 2008, P 16 INT S FDN SOFTW, P226, DOI [DOI 10.1145/1453101.1453131, 10.1145/1453101.1453131]
   Reps T., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P49, DOI 10.1145/199448.199462
   Rothenberg BC, 2018, LECT NOTES COMPUT SC, V11002, P364, DOI 10.1007/978-3-319-99725-4_22
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Rungta N, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P109, DOI 10.1109/ICSM.2012.6405261
   Seghir MN, 2011, LECT NOTES COMPUT SC, V6996, P351, DOI 10.1007/978-3-642-24372-1_25
   Sery O, 2012, PROCEEDINGS OF THE 12TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2012), P114
   Sharir M., 1978, 2 APPROACHES INTERPR
   Trostanetski A, 2017, LECT NOTES COMPUT SC, V10422, P405, DOI 10.1007/978-3-319-66706-5_20
   Visser W, 2012, P FSE, P58, DOI DOI 10.1145/2393596.2393665
   Xie XF, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P61, DOI 10.1145/2950290.2950340
   Xie YC, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1232420.1232423
   Yang GW, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1059, DOI 10.1145/2568225.2568319
   Yang GW, 2009, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSM.2009.5306334
NR 54
TC 1
Z9 1
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2022
VL 48
IS 4
BP 1417
EP 1431
DI 10.1109/TSE.2020.3021477
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 0N4HC
UT WOS:000782799700018
DA 2024-07-18
ER

PT J
AU Kallehbasti, MMP
   Rossi, M
   Baresi, L
AF Kallehbasti, Mohammad Mehdi Pourhashem
   Rossi, Matteo
   Baresi, Luciano
TI On How Bit-Vector Logic Can Help Verify LTL-Based Specifications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Formal methods; linear temporal logic; bounded satisfiability checking;
   bit-vector logic
ID TEMPORAL LOGIC; SATISFIABILITY; CHECKING
AB This paper studies how bit-vector logic (bv logic) can help improve the efficiency of verifying specifications expressed in Linear Temporal Logic (LTL). First, it exploits the notion of Bounded Satisfiability Checking to propose an improved encoding of LTL formulae into formulae of by logic, which can be formally verified by means of Satisfiability Modulo Theories (SMT) solvers. To assess the gain in efficiency, we compare the proposed encoding, implemented in our tool Zot, against three well-known encodings available in the literature: the classic bounded encoding and the optimized, incremental one, as implemented in both NuSMV and nuXmv, and the encoding optimized for metric temporal logic, which was the "standard" implementation provided by Zot. We also compared the newly proposed solution against five additional efficient algorithms proposed by nuXmv, which is the state-of-the-art tool for verifying LTL specifications. The experiments show that the new encoding provides significant benefits with respect to existing tools. Since the first set of experiments only used Z3 as SMT solver, we also wanted to assess whether the benefits were induced by the specific solver or were more general. This is why we also embedded different SMT solvers in Zot. Besides Z3, we also carried out experiments with CVC4, Mathsat, Yices2, and Boolector, and compared the results against the first and second best solutions provided by either NuSMV or nuXmv. Obtained results witness that the benefits of the by logic encoding are independent of the specific solver. By logic-based solutions are better than traditional ones with only a few exceptions. It is also true that there is no particular SMT solver that outperformed the others. Boolector is often the best as for memory usage, while Yices2 and Z3 are often the fastest ones.
C1 [Kallehbasti, Mohammad Mehdi Pourhashem] Univ Sci & Technol Mazandamn, Dept Comp Engn, Behsluthr, Iran.
   [Rossi, Matteo] Politecn Milan, Dipartimento Meccan, I-20133 Milan, Italy.
   [Baresi, Luciano] Politecn Milan, Dipartimento Elettron Informaz & Bioingn, I-20133 Milan, Italy.
C3 Polytechnic University of Milan; Polytechnic University of Milan
RP Kallehbasti, MMP (corresponding author), Univ Sci & Technol Mazandamn, Dept Comp Engn, Behsluthr, Iran.
EM pourhashem@mazust.ac.ir; matteo.rossi@polimi.it;
   luciano.baresi@polimi.it
RI ; Baresi, Luciano/N-4208-2018
OI Rossi, Matteo/0000-0002-9193-9560; Pourhashem Kallehbasti, Mohammad
   Mehdi/0000-0001-9484-6813; Baresi, Luciano/0000-0001-6467-837X
CR Baresi L., 2016, P 31 ANN ACM S APPL, P1666
   Baresi L., 2014, P 2 FME WORKSH FORM, P10
   Baresi L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P711, DOI 10.1109/ICSE.2015.84
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Bauer A, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000800
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   Biere A, 2006, LOG METH COMPUT SCI, V2, DOI 10.2168/LMCS-2(5:5)2006
   Cavada R, 2014, LECT NOTES COMPUT SC, V8559, P334, DOI 10.1007/978-3-319-08867-9_22
   Cimatti A, 2004, LECT NOTES COMPUT SC, V3312, P245
   Cimatti A., 2002, P INT C COMP AID VER, P359, DOI DOI 10.1007/3-540-45657-0_29
   Cimatti A, 2013, LECT NOTES COMPUT SC, V7795, P93
   de Moura Leonardo, 2013, Automated Reasoning and Mathematics. Essays in Memory of William W. McCune, P15, DOI 10.1007/978-3-642-36675-8_2
   Duret-Lutz A, 2004, IEEE COMPUTER SOCIETY'S 12TH ANNUAL INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS, AND SIMULATION OF COMPUTER AND TELECOMMUNICATIONS SYSTEMS - PROCEEDINGS, P76, DOI 10.1109/MASCOT.2004.1348184
   Dutertre B, 2006, TOOL PAPER
   Fainekos GE, 2005, IEEE INT CONF ROBOT, P2020
   Furia C. A., 2012, MODELING TIME COMPUT
   GHEZZI C, 1990, J SYST SOFTWARE, V12, P107, DOI 10.1016/0164-1212(90)90074-V
   Giannakopoulou D, 2002, LECT NOTES COMPUT SC, V2529, P308
   Goranko V, 2010, ELECTRON NOTES THEOR, V262, P113, DOI 10.1016/j.entcs.2010.04.009
   Heitmeyer C., 1996, FORMAL METHODS REAL
   Heljanko K, 2005, LECT NOTES COMPUT SC, V3576, P98
   Holzmann G. J., 2004, SPIN MODEL CHECKER P, V1003
   Kurshan R. P., 2014, COMPUTER AIDED VERIF
   Laroussinie F, 2002, IEEE S LOG, P383, DOI 10.1109/LICS.2002.1029846
   Latvala T, 2005, LECT NOTES COMPUT SC, V3385, P380
   Latvala T, 2004, LECT NOTES COMPUT SC, V3312, P186
   Li JW, 2013, INT WORKSHOP TEMPORA, P91, DOI 10.1109/TIME.2013.19
   Lichtenstein O., 1985, Logics of Programs. Proceedings, P196
   Microsoft research, 2020, Z3 EFF SMT SOLV
   Niemetz A., 2015, Journal of Satisfiability, Boolean Modeling and Computation (JSAT), V9, P53
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Pradella M, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491514
   Reynolds M, 2016, TRADITIONAL TREE STY
   Rozier Kristin Y., 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P417, DOI 10.1007/978-3-642-21437-0_31
   Rozier Kristin Y., 2010, International Journal on Software Tools for Technology Transfer, V12, P123, DOI 10.1007/s10009-010-0140-3
   Rozier KY, 2007, LECT NOTES COMPUT SC, V4595, P149
   Rozier KY, 2011, COMPUT SCI REV, V5, P163, DOI 10.1016/j.cosrev.2010.06.002
   Schuppan V, 2011, LECT NOTES COMPUT SC, V6996, P397, DOI 10.1007/978-3-642-24372-1_28
   Schwendimann S, 1998, LECT NOTES ARTIF INT, V1397, P277
   Tabuada P, 2006, IEEE T AUTOMAT CONTR, V51, P1862, DOI 10.1109/TAC.2006.886494
   Tan L, 2004, PROCEEDINGS OF THE 2004 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI-2004), P493
   Vicentini F, 2020, IEEE T ROBOT, V36, P42, DOI 10.1109/TRO.2019.2937471
   Wolper Pierre, 1985, Logique et Analyse, V1985, P119
NR 43
TC 1
Z9 1
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2022
VL 48
IS 4
BP 1154
EP 1168
DI 10.1109/TSE.2020.3014394
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 0N4HC
UT WOS:000782799700004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Liu, D
   Feng, Y
   Zhang, XF
   Jones, JA
   Chen, ZY
AF Liu, Di
   Feng, Yang
   Zhang, Xiaofang
   Jones, James A.
   Chen, Zhenyu
TI Clustering Crowdsourced Test Reports of Mobile Applications Using Image
   Understanding
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Task analysis; Mobile applications; Computer bugs; Software;
   Mars; Mobile handsets; Crowdsourced testing; mobile testing; test report
   processing
ID BUG REPORT DETECTION; DUPLICATE; SOFTWARE; PRIORITIZATION; PRIORITY;
   SUPPORT
AB Crowdsourced testing has been widely used to improve software quality as it can detect various bugs and simulate real usage scenarios. Crowdsourced workers perform tasks on crowdsourcing platforms and present their experiences as test reports, which naturally generates an overwhelming number of test reports. Therefore, inspecting these reports becomes a time-consuming yet inevitable task. In recent years, many text-based prioritization and clustering techniques have been proposed to address this challenge. However, in mobile testing, test reports often consist of only short test descriptions but rich screenshots. Compared with the uncertainty of textual information, well-defined screenshots can often adequately express the mobile application's activity views. In this paper, by employing image-understanding techniques, we propose an approach for clustering crowdsourced test reports of mobile applications based on both textual and image features to assist the inspection procedure. We employ Spatial Pyramid Matching (SPM) to measure the similarity of the screenshots and use the natural-language-processing techniques to compute the textual distance of test reports. To validate our approach, we conducted an experiment on 6 industrial crowdsourced projects that contain more than 1600 test reports and 1400 screenshots. The results show that our approach is capable of outperforming the baselines by up to 37 percent regarding the APFD metric. Further, we analyze the parameter sensitivity of our approach and discuss the settings for different application scenarios.
C1 [Liu, Di; Zhang, Xiaofang] Soochow Univ, Sch Comp Sci & Technol, Suzhou 215006, Jiangsu, Peoples R China.
   [Jones, James A.] Univ Calif Irvine, Dept Informat, Irvine, CA 92697 USA.
   [Feng, Yang; Chen, Zhenyu] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Chen, Zhenyu] Mooctest Inc, Nanjing 210000, Peoples R China.
C3 Soochow University - China; University of California System; University
   of California Irvine; Nanjing University
RP Zhang, XF (corresponding author), Soochow Univ, Sch Comp Sci & Technol, Suzhou 215006, Jiangsu, Peoples R China.; Feng, Y (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
EM dliu0721@stu.suda.edu.cn; charles.fengy@gmail.com; xfzhang@suda.edu.cn;
   jajones@uci.edu; zychen@nju.edu.cn
OI Zhang, Xiaofang/0000-0002-8667-0456; Chen, Zhenyu/0000-0002-9592-7022
FU National Natural Science Foundation of China [61772263, 61772014];
   National Key R&D Program of China [2018YFB1403400]; Collaborative
   Innovation Center of Novel Software Technology and Industrialization,
   Suzhou Technology Development Plan (key industry technology
   innovation-prospective application research project) [SYG201807];
   Priority Academic Program Development of JiangsuHigher Education
   Institutions
FX This work was partially supported by National Key R&D Program of
   China(2018YFB1403400), National Natural Science Foundation of
   China(61772263, 61772014), Collaborative Innovation Center of Novel
   Software Technology and Industrialization, Suzhou Technology Development
   Plan (key industry technology innovation-prospective application
   research project SYG201807), and the Priority Academic Program
   Development of JiangsuHigher Education Institutions.
CR Afshan S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P352, DOI 10.1109/ICST.2013.11
   Alenezi Mamdouh, 2013, Journal of Software, V8, P2185, DOI 10.4304/jsw.8.9.2185-2190
   Alenezi M, 2013, 2013 12TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2013), VOL 2, P112, DOI 10.1109/ICMLA.2013.114
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], 2004, Software Engineering and Knowledge Engineering
   [Anonymous], 2006, THESIS U BRIT COLUMB
   [Anonymous], 2008, J THEOR APPL INF TEC
   Anvik J., 2006, 28th International Conference on Software Engineering Proceedings, P937, DOI 10.1145/1134285.1134457
   Cai D, 2003, Beijing microsoft research asia technical report (MSR-TR-2003-79), P1
   Chen FX, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P320, DOI 10.1145/2786805.2786819
   Chen KT, 2010, IEEE NETWORK, V24, P28, DOI 10.1109/MNET.2010.5430141
   Choudhary S.R., 2014, P 2014 INT S SOFTWAR, P417
   Dang YN, 2012, PROC INT CONF SOFTW, P1084, DOI 10.1109/ICSE.2012.6227111
   Deshmukh J, 2017, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSME.2017.69
   Diab Mona., 2009, Proceedings of the Workshop on Multiword Expressions: Identification, Interpretation, Disambiguation and Applications, P17
   Dolstra E, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P332, DOI 10.1109/ICST.2013.44
   Fan X, 2003, 2003 INTERNATIONAL CONFERENCE ON MULTIMEDIA AND EXPO, VOL I, PROCEEDINGS, P53
   Fang CR, 2014, SOFTWARE QUAL J, V22, P335, DOI 10.1007/s11219-013-9224-0
   [冯洋 Feng Yang], 2019, [中国科学. 信息科学, Scientia Sinica Informationis], V49, P1412
   Feng Y, 2016, IEEE INT CONF AUTOM, P202, DOI 10.1145/2970276.2970367
   Feng Y, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P225, DOI 10.1145/2786805.2786862
   Feng Y, 2016, SCI CHINA INFORM SCI, V59, DOI 10.1007/s11432-015-5506-4
   Feng Y, 2012, PROC INT CONF SOFTW, P1305, DOI 10.1109/ICSE.2012.6227093
   Gao RZ, 2019, EMPIR SOFTW ENG, V24, P537, DOI 10.1007/s10664-018-9618-5
   Gegick Michael, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P11, DOI 10.1109/MSR.2010.5463340
   Guaiani F, 2015, SECOND INTERNATIONAL WORKSHOP ON CROWDSOURCING IN SOFTWARE ENGINEERING CSI-SE 2015, P32, DOI 10.1109/CSI-SE.2015.14
   Hindle A, 2016, EMPIR SOFTW ENG, V21, P368, DOI 10.1007/s10664-015-9387-3
   Ilieva MG, 2005, LECT NOTES COMPUT SC, V3513, P392
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Jiang H, 2018, ACM T INTERNET TECHN, V18, DOI 10.1145/3106164
   Kanwal J, 2012, J COMPUT SCI TECH-CH, V27, P397, DOI 10.1007/s11390-012-1230-3
   Komarov S., 2013, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, P207, DOI DOI 10.1145/2470654.2470684
   Lazar A., 2014, P 11 WORKING C MININ, P308
   Lazebnik S., 2006, P IEEE CVF C COMP VI, DOI [DOI 10.1109/CVPR.2006.68, 10.1109/CVPR.2006.68]
   Liu C, 2008, IEEE T SOFTWARE ENG, V34, P826, DOI 10.1109/TSE.2008.66
   Liu D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P492, DOI 10.1109/SANER.2018.8330246
   Liu Di, 2012, Proceedings of the American Society for Information Science and Technology, V49, P1, DOI DOI 10.1002/MEET.14504901100
   Mani S., 2012, P ACM SIGSOFT 20 INT, P1, DOI DOI 10.1145/2393596.2393607
   Mao K, 2017, J SYST SOFTWARE, V126, P57, DOI 10.1016/j.jss.2016.09.015
   Michail A, 2005, PROC INT CONF SOFTW, P107
   Michail A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P327, DOI 10.1109/ICSE.2002.1007979
   MURTAGH F, 1983, COMPUT J, V26, P354, DOI 10.1093/comjnl/26.4.354
   Musson R, 2013, IEEE SOFTWARE, V30, P38, DOI 10.1109/MS.2013.67
   Nagwani Naresh Kumar, 2010, Proceedings of the 2010 International Conference on Recent Trends in Information, Telecommunication and Computing (ITC 2010), P13, DOI 10.1109/ITC.2010.56
   Nowak E, 2006, LECT NOTES COMPUT SC, V3954, P490
   Pham R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1209, DOI 10.1109/ICSE.2013.6606680
   Pingclasai N, 2013, ASIA PAC SOFWR ENG, P13, DOI 10.1109/APSEC.2013.105
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   Rosenberg A, 2007, P 2007 JOINT C EMP M, P410, DOI [10 . 7916 / D80V8N84, DOI 10.7916/D80V8N84]
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   Rubner Y, 2000, INT J COMPUT VISION, V40, P99, DOI 10.1023/A:1026543900054
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Schiele B, 2000, INT J COMPUT VISION, V36, P31, DOI 10.1023/A:1008120406972
   Schneider C., 2013, Information systems development: Reflections, challenges and new directions, P551
   Sherief N., 2013, P 18 INT C EV ASS SO
   Shutova Ekaterina., 2010, P 23 INT C COMP LING, P1002
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Sureka A, 2010, ASIA PAC SOFWR ENG, P366, DOI 10.1109/APSEC.2010.49
   Tamrawi A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P884, DOI 10.1145/1985793.1985934
   Tao DP, 2013, IEEE T MULTIMEDIA, V15, P833, DOI 10.1109/TMM.2013.2238909
   Tian Y, 2013, PROC IEEE INT CONF S, P200, DOI 10.1109/ICSM.2013.31
   Tian Y, 2012, EUR CON SFTWR MTNCE, P385, DOI 10.1109/CSMR.2012.48
   Tung YH, 2013, J SYST SOFTWARE, V86, P2143, DOI 10.1016/j.jss.2013.03.079
   Wang JJ, 2019, INFORM SOFTWARE TECH, V110, P139, DOI 10.1016/j.infsof.2019.03.003
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Wu CC, 2013, IEEE T MULTIMEDIA, V15, P1121, DOI 10.1109/TMM.2013.2241043
   Xia X, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P134, DOI 10.1109/CSMR-WCRE.2014.6747163
   Xia X, 2013, WORK CONF REVERSE EN, P72, DOI 10.1109/WCRE.2013.6671282
   Yang Y., 2019, INT C DAT MIN BIG DA, P135
   Yim O, 2015, QUANT METH PSYCHOL, V11, P8, DOI 10.20982/tqmp.11.1.p008
   Yu L, 2010, LECT NOTES ARTIF INT, V6441, P356, DOI 10.1007/978-3-642-17313-4_35
   Zhang J, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-014-5241-2
   Zhang JZ, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SMART CITY/SOCIALCOM/SUSTAINCOM (SMARTCITY), P101, DOI 10.1109/SmartCity.2015.54
   Zhang T, 2019, IEEE SOFTWARE, V36, P63, DOI 10.1109/MS.2017.377142400
   Zogaj S., 2014, J BUSINESS EC, V84, P375
NR 78
TC 9
Z9 9
U1 2
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2022
VL 48
IS 4
BP 1290
EP 1308
DI 10.1109/TSE.2020.3017514
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 0N4HC
UT WOS:000782799700011
DA 2024-07-18
ER

PT J
AU Motwani, M
   Soto, M
   Brun, Y
   Just, R
   Le Goues, C
AF Motwani, Manish
   Soto, Mauricio
   Brun, Yuriy
   Just, Rene
   Le Goues, Claire
TI Quality of Automated Program Repair on Real-World Defects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Maintenance engineering; Java; Contracts; Manuals; Diversity reception;
   Inspection; Software quality; Automated program repair; patch quality;
   objective quality measure; Java; GenProg; Par; TrpAutoRepair; Defects4J
ID SOFTWARE; GENERATION; BEHAVIOR; SEARCH
AB Automated program repair is a promising approach to reducing the costs of manual debugging and increasing software quality. However, recent studies have shown that automated program repair techniques can be prone to producing patches of low quality, overfitting to the set of tests provided to the repair technique, and failing to generalize to the intended specification. This paper rigorously explores this phenomenon on real-world Java programs, analyzing the effectiveness of four well-known repair techniques, GenProg, Par, SimFix, and TrpAutoRepair, on defects made by the projects' developers during their regular development process. We find that: (1) When applied to real-world Java code, automated program repair techniques produce patches for between 10.6 and 19.0 percent of the defects, which is less frequent than when applied to C code. (2) The produced patches often overfit to the provided test suite, with only between 13.8 and 46.1 percent of the patches passing an independent set of tests. (3) Test suite size has an extremely small but significant effect on the quality of the patches, with larger test suites producing higher-quality patches, though, surprisingly, higher-coverage test suites correlate with lower-quality patches. (4) The number of tests that a buggy program fails has a small but statistically significant positive effect on the quality of the produced patches. (5) Test suite provenance, whether the test suite is written by a human or automatically generated, has a significant effect on the quality of the patches, with developer-written tests typically producing higher-quality patches. And (6) the patches exhibit insufficient diversity to improve quality through some method of combining multiple patches. We develop JaRFly, an open-source framework for implementing techniques for automatic search-based improvement of Java programs. Our study uses JaRFly to faithfully reimplement GenProg and TrpAutoRepair to work on Java code, and makes the first public release of an implementation of Par. Unlike prior work, our study carefully controls for confounding factors and produces a methodology, as well as a dataset of automatically-generated test suites, for objectively evaluating the quality of Java repair techniques on real-world defects.
C1 [Motwani, Manish; Brun, Yuriy] Univ Massachusetts Amherst, Manning Coll Informat & Comp Sci, Amherst, MA 01003 USA.
   [Soto, Mauricio; Le Goues, Claire] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
   [Just, Rene] Univ Washington, Paul G Allen Sch Comp Sci & Engn, Seattle, WA 98195 USA.
C3 University of Massachusetts System; University of Massachusetts Amherst;
   Carnegie Mellon University; University of Washington; University of
   Washington Seattle
RP Motwani, M (corresponding author), Univ Massachusetts Amherst, Manning Coll Informat & Comp Sci, Amherst, MA 01003 USA.
EM mmotwani@cs.umass.edu; msotogan@cs.cmu.edu; brun@cs.umass.edu;
   rjust@cs.washington.edu; clegouesi@cs.cmu.edu
RI Motwani, Manish/V-3320-2019
OI Motwani, Manish/0000-0001-5129-3980; Brun, Yuriy/0000-0003-3027-7986; Le
   Goues, Claire/0000-0002-3931-060X; Soto, Mauricio/0000-0002-1196-1646;
   Just, Rene/0000-0002-5982-275X
FU US National Science Foundation [CCF-1453474, CCF-1563797, CCF-1564162,
   CCF-1750116]
FX Thisworkwas supported by the USNational Science Foundation under grants
   CCF-1453474, CCF-1563797, CCF-1564162, and CCF-1750116. This work was
   performed in part using high performance computing equipment obtained
   under a grant from the CollaborativeR&DFund managed by theMassachusetts
   Technology Collaborative.
CR Abd-El-Malek M., 2005, ACM SIGOPS Operating Systems Review, P59, DOI DOI 10.1145/1095810.1095817
   Ackling T, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1427
   Afzal A, 2021, IEEE T SOFTWARE ENG, V47, P2162, DOI 10.1109/TSE.2019.2944914
   Alba E, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1066
   Alkhalaf M., 2014, P 2014 INT S SOFTWAR, P225
   Angell R, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P871, DOI 10.1145/236024.3264590
   [Anonymous], 2006, P 2006 INT S SOFTWAR
   [Anonymous], 2013, P 2013 INT S SOFTW T
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Atlassian, 2016, CLOV COD COV TOOL
   B_ohme M., 2014, INT S SOFTWARE TESTI, P105
   Bader J., 2019, SYST LANG APPL
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Barreto A, 2008, COMPUT OPER RES, V35, P3073, DOI 10.1016/j.cor.2007.01.010
   BESCHASTNIKH I., 2011, P 19 ACM SIGSOFT S 1, P267, DOI DOI 10.1145/2025113.2025151
   Beschastnikh I, 2015, IEEE T SOFTWARE ENG, V41, P408, DOI 10.1109/TSE.2014.2369047
   Beschastnikh I, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P252, DOI 10.1109/ICSE.2013.6606571
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Blasi A, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P242, DOI 10.1145/3213846.3213872
   Böhme M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P117, DOI 10.1145/3106237.3106255
   Brun Y., 2020, P ACM IEEE INT C SOF
   Brun Y., 2013, EVOLUTION INTELLIGEN
   Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   Campos J, 2012, IEEE INT CONF AUTOM, P378, DOI 10.1145/2351676.2351752
   Carzaniga A., 2010, Proceedings of the eighteenth ACM SIGSOFT international symposium on Foundations of software engineering, P237
   Carzaniga A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P782, DOI 10.1109/ICSE.2013.6606624
   Chen L., 1978, FTCS-8. The Eighth Annual International Conference on Fault-Tolerant Computing, P3
   Chen LS, 2017, IEEE INT CONF AUTOM, P637, DOI 10.1109/ASE.2017.8115674
   Chiueh T., 2005, P NETW DISTR SYST SE
   Christou S., 2015, COBERTURA CODE COVER
   Cochran RA, 2015, ACM SIGPLAN NOTICES, V50, P677, DOI [10.1145/2676726.2676973, 10.1145/2775051.2676973]
   Coker Z, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P792, DOI 10.1109/ICSE.2013.6606625
   Coles H., 2016, P 25 INT S SOFTWARE, P449
   D'Antoni L, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P582, DOI 10.1145/3106237.3106241
   D'Antoni L, 2016, LECT NOTES COMPUT SC, V9780, P383, DOI 10.1007/978-3-319-41540-6_21
   Dallmeier V, 2009, IEEE INT CONF AUTOM, P550, DOI 10.1109/ASE.2009.15
   de Souza EF, 2018, GECCO'18: PROCEEDINGS OF THE 2018 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1443, DOI 10.1145/3205455.3205566
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Debroy Vidroha, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P65, DOI 10.1109/ICST.2010.66
   Demsky B, 2006, IEEE T SOFTWARE ENG, V32, P931, DOI 10.1109/TSE.2006.122
   Dhar A, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P555, DOI 10.1145/2786805.2786877
   Ding ZY, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL WORKSHOP ON GENETIC IMPROVEMENT (GI@ICSE 2019), P2, DOI 10.1109/GI.2019.00011
   Durieux T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P302, DOI 10.1145/3338906.3338911
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   EclEmma, 2017, JACOCO JAV COD COV L
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Estler HC, 2014, LECT NOTES COMPUT SC, V8442, P230, DOI 10.1007/978-3-319-06410-9_17
   Fast E., 2010, Conference on Genetic and Evolutionary Computation, P965
   Forrest Stephanie, 2009, P 11 ANN C GEN EV CO, P947
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fry Z.P., 2012, INT S SOFTWARE TESTI, P177, DOI 10.1145/04000800.2336775
   Gabel Mark., 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, P1
   Galhotra S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P498, DOI 10.1145/3106237.3106277
   Goffi A., 2016, P 25 INT S SOFTW TES, P213, DOI DOI 10.1145/2931037.2931061
   Gulwani S, 2018, ACM SIGPLAN NOTICES, V53, P465, DOI [10.1145/3192366.3192387, 10.1145/3296979.3192387]
   Gulwani S, 2011, ACM SIGPLAN NOTICES, V46, P317, DOI 10.1145/1925844.1926423
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Hoffmann M. R., 2009, JACOCO CODE COVERAGE
   Hua JR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P12, DOI 10.1145/3180155.3180245
   Ivankovic M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P955, DOI 10.1145/3338906.3340459
   Jiang J., 2017, SIMFIX IMPLEMENTATIO
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Jin GL, 2011, ACM SIGPLAN NOTICES, V46, P389, DOI 10.1145/1993316.1993544
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   KNIGHT JC, 1986, IEEE T SOFTWARE ENG, V12, P96, DOI 10.1109/TSE.1986.6312924
   KOZA JR, 1994, STAT COMPUT, V4, P87, DOI 10.1007/BF00175355
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le Goues C, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P959, DOI 10.1145/2330163.2330296
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le XBD, 2019, PROC INT CONF SOFTW, P524, DOI 10.1109/ICSE.2019.00064
   Le XBD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P163, DOI 10.1145/3180155.3182536
   Le XBD, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P376, DOI 10.1145/3092703.3098225
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Lin Derrick, 2017, P COMPANION 2017 ACM, P55, DOI [10.1145/3135932, DOI 10.1145/3135932, 10.1145/3135932.3135941]
   Lin Yiyan., 2014, International Symposium on Software Testing and Analysis, ISSTA '14, San Jose, CA, USA - July 21 - 26, 2014, P237
   Liu P, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P318, DOI 10.1145/2635868.2635881
   Liu XL, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P118, DOI 10.1109/SANER.2018.8330202
   Long F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/3106237.3106253
   Long F, 2016, PROC INT CONF SOFTW, P702, DOI 10.1145/2884781.2884872
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Marginean A, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P269, DOI 10.1109/ICSE-SEIP.2019.00039
   Martinez M., 2016, P 25 INT S SOFTWARE, P441, DOI 10.1145/2931037
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Mechtaev S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P129, DOI 10.1145/3180155.3180247
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   Motwani M, 2019, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE.2019.00035
   Motwani M, 2018, EMPIR SOFTW ENG, V23, P2901, DOI [10.1007/s10664-017-9550-0, 10.1145/3180155.3182533]
   Mu K., 2013, ESEC FSE NEW IDEAS T, P631, DOI DOI 10.1145/2491411.2494580
   Mu  slu K., 2015, ISSTA 15, P373, DOI [10.1145/27717 83.2771792, DOI 10.1145/2771783.2771792]
   Ohmann T., 2014, P IEEE ACM INT C AUT, P19, DOI [10.1145/2642937.2642988, DOI 10.1145/2642937.2642988, 10.1145/2642937, DOI 10.1145/2642937]
   Oliveira VPL, 2018, EMPIR SOFTW ENG, V23, P2980, DOI 10.1007/s10664-017-9562-9
   Oliveira VPL, 2016, LECT NOTES COMPUT SC, V9962, P112, DOI 10.1007/978-3-319-47106-8_8
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pei Y, 2014, IEEE T SOFTWARE ENG, V40, P427, DOI 10.1109/TSE.2014.2312918
   Perkins JH, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P87
   Petke J, 2018, IEEE T EVOLUT COMPUT, V22, P415, DOI 10.1109/TEVC.2017.2693219
   Posnett D., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P362, DOI 10.1109/ASE.2011.6100074
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi YH, 2013, PROC IEEE INT CONF S, P180, DOI 10.1109/ICSM.2013.29
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Rolim R, 2017, PROC INT CONF SOFTW, P404, DOI 10.1109/ICSE.2017.44
   Saha RK, 2017, IEEE INT CONF AUTOM, P648, DOI 10.1109/ASE.2017.8115675
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Shin Hwei Tan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P260, DOI 10.1109/ICST.2012.106
   Sidiroglou S, 2005, IEEE SECUR PRIV, V3, P41, DOI 10.1109/MSP.2005.144
   Sidiroglou-Douskos S, 2015, ACM SIGPLAN NOTICES, V50, P43, DOI [10.1145/2813885.2737988, 10.1145/2737924.2737988]
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Soto M, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P221, DOI 10.1109/SANER.2018.8330211
   Tan SH, 2017, PROC IEEE ACM INT C, P180, DOI 10.1109/ICSE-C.2017.76
   Tan SH, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P471, DOI 10.1109/ICSE.2015.65
   Thomas PS, 2019, SCIENCE, V366, P999, DOI 10.1126/science.aag3311
   Tian Y, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P752, DOI 10.1145/3106237.3106300
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Wang K, 2018, PROCEEDINGS OF THE 39TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, PLDI 2018, P481, DOI 10.1145/3192366.3192384
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Xin Q, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P226, DOI 10.1145/3092703.3092718
   Xiong YF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P789, DOI 10.1145/3180155.3180182
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Xuan JF, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P52, DOI 10.1145/2635868.2635906
   Ye H, 2019, 2019 IEEE 1ST INTERNATIONAL WORKSHOP ON INTELLIGENT BUG FIXING (IBF '19), P1, DOI [10.1109/ibf.2019.8665475, 10.1109/icnsurv.2019.8735415, 10.1109/IBF.2019.8665475]
   Yu ZX, 2019, EMPIR SOFTW ENG, V24, P33, DOI 10.1007/s10664-018-9619-4
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
NR 140
TC 20
Z9 20
U1 2
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2022
VL 48
IS 2
BP 637
EP 661
DI 10.1109/TSE.2020.2998785
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZB4EB
UT WOS:000756796100016
OA hybrid
DA 2024-07-18
ER

PT J
AU Sayagh, M
   Hassan, AE
AF Sayagh, Mohammed
   Hassan, Ahmed E.
TI ConfigMiner: Identifying the Appropriate Configuration Options for
   Config-Related User Questions by Mining Online Forums
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software systems; Computer bugs; Debugging; Statistical analysis; Task
   analysis; Prediction algorithms; Data mining; Configuration; user
   questions; online forums; stackOverflow
AB While the behavior of a software system can be easily changed by modifying the values of a couple of configuration options, finding one out of hundreds or thousands of available options is, unfortunately, a challenging task. Therefore, users often spend a considerable amount of time asking and searching around for the appropriate configuration options in online forums such as StackOverflow. In this paper, we propose ConfigMiner, an approach to automatically identify the appropriate option(s) to config-related user questions by mining already-answered config-related questions in online forums. Our evaluation on 2,062 config-related user questions for seven software systems shows that ConfigMiner can identify the appropriate option(s) for a median of 83 percent (up to 91 percent) of user questions within the top-20 recommended options, improving over state-of-the-art approaches by a median of 130 percent. Besides, ConfigMiner reports the relevant options at a median rank of 4, compared to a median of 16-20.5 as reported by the state-of-the-art approaches.
C1 [Sayagh, Mohammed; Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
C3 Queens University - Canada
RP Sayagh, M (corresponding author), Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
EM msayagh@cs.queensu.ca; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Sayagh,
   Mohammed/0000-0002-2724-0034
CR Ahasanuzzaman Muhammad, 2016, 2016 IEEE/ACM 13th Working Conference on Mining Software Repositories (MSR). Proceedings, P402, DOI 10.1109/MSR.2016.048
   Andrzejak A., 2018, CONFWS, P85
   Attariyan M., 2010, P 9 USENIX S OP SYST, P1
   Boisselle V, 2015, IEEE INT WORK C SO, P131, DOI 10.1109/SCAM.2015.7335409
   Cer D, 2018, CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018): PROCEEDINGS OF SYSTEM DEMONSTRATIONS, P169
   Dong Z, 2015, PROC IEEE INT CONF S, P171, DOI 10.1109/ICSM.2015.7332463
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Han X, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962602
   Jin D., 2014, THESIS
   Jin DP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P215, DOI 10.1145/2591062.2591191
   Johnson R., 2010, More Details on Today's Outage
   Le Quoc V., 2014, P INT C MACH LEARN I
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Ma SX, 2014, INT C PAR DISTRIB SY, P150, DOI 10.1109/PADSW.2014.7097803
   Miller George, 1998, WORDNET ELECT LEXICA
   Sayagh M, 2020, IEEE T SOFTWARE ENG, V46, P646, DOI 10.1109/TSE.2018.2867847
   Sayagh M, 2017, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2017.31
   Sayagh M, 2015, IEEE INT WORK C SO, P31, DOI 10.1109/SCAM.2015.7335399
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Shimagaki J, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P212, DOI 10.1145/2889160.2889243
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Wen W, 2016, PROC INT SYMP SOFTW, P150, DOI 10.1109/ISSRE.2016.29
   Xie X, 2014, P INT COMP SOFTW APP, P107, DOI 10.1109/COMPSAC.2014.17
   Xiong YF, 2015, IEEE T SOFTWARE ENG, V41, P603, DOI 10.1109/TSE.2014.2383381
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Xu BW, 2015, ASIA PAC SOFWR ENG, P206, DOI 10.1109/APSEC.2015.38
   Xu TY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P307, DOI 10.1145/2786805.2786852
   Xu TY, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2791577
   Yin ZN, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P159
   Zhang S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P152, DOI 10.1145/2568225.2568251
   Zhang S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1438, DOI 10.1109/ICSE.2013.6606737
   Zhang WE, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P1221, DOI 10.1145/3038912.3052701
NR 34
TC 5
Z9 6
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2021
VL 47
IS 12
BP 2907
EP 2918
DI 10.1109/TSE.2020.2973997
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XM6HB
UT WOS:000728924600016
DA 2024-07-18
ER

PT J
AU Gao, J
   Jiang, Y
   Liu, Z
   Yang, X
   Wang, C
   Jiao, X
   Yang, ZJ
   Sun, JG
AF Gao, Jian
   Jiang, Yu
   Liu, Zhe
   Yang, Xin
   Wang, Cong
   Jiao, Xun
   Yang, Zijiang
   Sun, Jiaguang
TI Semantic Learning and Emulation Based Cross-Platform Binary
   Vulnerability Seeker
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Drilling machines; Process control; Automation; Rocks; Tools; Semantic
   emulation; semantic learning; cross-platform binary; vulnerability
   search; neural network
ID CODE
AB Clone detection is widely exploited for software vulnerability search. The approaches based on source code analysis cannot be applied to binary clone detection because the same source code can produce significantly different binaries due to different operating systems, microprocessor architectures and compilers. In this paper, we present BinSeeker, a cross-platform binary seeker that integrates semantic learning and emulation. With the help of the labeled semantic flow graph, BinSeeker can quickly identify M candidate functions that are most similar to the vulnerability from the target binary. The value of M is relatively large so this semantic learning procedure essentially eliminates those functions that are very unlikely to have the vulnerability. Then, semantic emulation is conducted on these M candidates to obtain their dynamic signature sequences. By comparing signature sequences, BinSeeker produces top-N functions that exhibit most similar behavior to that of the vulnerability. With fast filtering of semantic learning and accurate comparison of semantic emulation, BinSeeker seeks vulnerability precisely with little overhead. The experiments on six widely used programs with fifteen known CVE vulnerabilities demonstrate that BinSeeker outperforms three state-of-the-art tools Genius, Gemini and CACompare. Regarding search accuracy, BinSeeker achieves an MRR value of 0.65 in the target programs, whereas the MRR values by Genius, Gemini and CACompare are 0.17, 0.07 and 0.42, respectively. If we consider ranking a function with the targeted vulnerability in the top-5 as accurate, BinSeeker achieves the accuracy of 93.33 percent, while the accuracy of the other three tools is merely 33.33, 13.33 and 53.33 percent, respectively. Such accuracy is achieved with 0.27s on average to determine whether the target binary function contains a known vulnerability, and the time for the other three tools are 1.57s, 0.15s and 0.98s, respectively. Compared to the time used to manually identify the true positive vulnerability from the false positive candidates reported by Gemini, the time overhead of BinSeeker is negligible. Evidently, the proposed BinSeeker achieves a better balance between accuracy and efficiency.
C1 [Gao, Jian; Jiang, Yu; Yang, Xin; Wang, Cong; Sun, Jiaguang] Tsinghua Univ, Sch Software, Beijing Natl Res Ctr Informat Sci & Technol, Beijing 100084, Peoples R China.
   [Gao, Jian; Jiang, Yu; Yang, Xin; Wang, Cong; Sun, Jiaguang] Tsinghua Univ, Key Lab Informat Syst Secur, Minist Educ, Beijing 100084, Peoples R China.
   [Liu, Zhe] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 211106, Peoples R China.
   [Jiao, Xun] Vilianova Univ, Dept Elect & Comp Engn, Villanova, PA 19085 USA.
   [Yang, Zijiang] Western Michigan Univ, Dept Comp Sci, Kalamazoo, MI 49008 USA.
C3 Tsinghua University; Tsinghua University; Nanjing University of
   Aeronautics & Astronautics; Western Michigan University
RP Jiang, Y (corresponding author), Tsinghua Univ, Sch Software, Beijing Natl Res Ctr Informat Sci & Technol, Beijing 100084, Peoples R China.; Jiang, Y (corresponding author), Tsinghua Univ, Key Lab Informat Syst Secur, Minist Educ, Beijing 100084, Peoples R China.
EM gaojian094@gmail.com; jiangyu198964@126.com; zhe.liu@nuaa.edu.cn;
   yangx16@mails.tsinghua.edu.cn; wangcong15@mails.tsinghua.edu.cn;
   xujiao@eng.ucsd.edu; zijiang.yang@wmich.edu; sunjg@tsinghua.edu.cn
RI LIU, zhe/HGD-6875-2022
OI Jiang, Yu/0000-0003-0955-503X; Liu, Zhe/0000-0001-8578-2635
FU NSFC Program [61527812]; National Science and Technology Major Project
   of China [2016ZX01038101]
FX This work was sponsored in part by the NSFC Program under Grant
   61527812, and in part by the National Science and Technology Major
   Project of China under Grant 2016ZX01038101.
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Alrabaee S, 2016, DIGIT INVEST, V18, pS11, DOI 10.1016/j.diin.2016.04.002
   [Anonymous], American Fuzzy Lop
   Böhme M, 2019, IEEE T SOFTWARE ENG, V45, P489, DOI 10.1109/TSE.2017.2785841
   Bourquin Martial, 2013, P 2 ACM SIGPLAN PROG
   Bromley J., 1993, International Journal of Pattern Recognition and Artificial Intelligence, V7, P669, DOI 10.1142/S0218001493000339
   Caselden Dan, 2013, Computer Security - ESORICS 2013. 18th European Symposium on Research in Computer Security. Proceedings: LNCS 8134, P164, DOI 10.1007/978-3-642-40203-6_10
   Chandramohan M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P678, DOI 10.1145/2950290.2950350
   Chen YL, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1967
   Dai HJ, 2016, PR MACH LEARN RES, V48
   David Y, 2014, ACM SIGPLAN NOTICES, V49, P349, DOI [10.1145/2594291.2594343, 10.1145/2666356.2594343]
   Egele M, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P303
   Eschweiler S, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23185
   Feng Q., 2016, P 2016 ACM SIGSAC C, P480, DOI [10.1145/2976749.2978370, DOI 10.1145/2976749.2978370]
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Flake H., 2004, Proceedings of the Detection of Intrusions and Malware Vulnerability Assessment, GI SIG SIDAR Workshop, DIMVA 2004, Dortmund, Germany, 6-7 July 2004, P161, DOI [10.17877/DE290R-2007, DOI 10.17877/DE290R-2007]
   Gao DB, 2008, LECT NOTES COMPUT SC, V5308, P238
   Gao J, 2018, IEEE INT CONF AUTOM, P896, DOI 10.1145/3238147.3240480
   Gao J, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P803, DOI 10.1145/3236024.3275524
   Hu YK, 2017, INT C PROGRAM COMPRE, P88, DOI 10.1109/ICPC.2017.22
   Jang JY, 2012, P IEEE S SECUR PRIV, P48, DOI 10.1109/SP.2012.13
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jiang Y, 2018, IEEE T INTELL TRANSP, V19, P3320, DOI 10.1109/TITS.2017.2778077
   Jiang Y, 2017, IEEE T IND INFORM, V13, P1900, DOI 10.1109/TII.2016.2573762
   Jiang Y, 2015, IEEE T PARALL DISTR, V26, P2220, DOI 10.1109/TPDS.2014.2346171
   Jiang Y, 2015, IEEE T IND ELECTRON, V62, P1270, DOI 10.1109/TIE.2014.2316234
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Lakhotia A, 2013, P 2 ACM SIGPLAN PROG, DOI [10.1145/2430553.2430558, DOI 10.1145/2430553.2430558]
   Li Z, 2016, ANN COMPUT SECURITY, P201, DOI 10.1145/2991079.2991102
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Liang J, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P809, DOI 10.1145/3236024.3275525
   Luo LN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P389, DOI 10.1145/2635868.2635900
   MIASM, REV ENG FRAM
   Ming J, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P253
   MongoDB I., MONGODB DATABASE SER
   MUNKRES J, 1957, J SOC IND APPL MATH, V5, P32, DOI 10.1137/0105003
   Nethercote N, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P89, DOI 10.1145/1250734.1250746
   Pewny J, 2015, P IEEE S SECUR PRIV, P709, DOI 10.1109/SP.2015.49
   Pro I., The ida pro disassembler and debugger
   Shoshitaishvili Y, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23294
   Shoshitaishvili Y, 2016, P IEEE S SECUR PRIV, P138, DOI 10.1109/SP.2016.17
   Stephens N, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23368
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Xu XJ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P363, DOI 10.1145/3133956.3134018
   Yadegari B, 2016, THESIS U ARIZONA TUC
NR 46
TC 7
Z9 8
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2021
VL 47
IS 11
BP 2575
EP 2589
DI 10.1109/TSE.2019.2956932
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WW2QE
UT WOS:000717767100017
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Udeshi, S
   Chattopadhyay, S
AF Udeshi, Sakshi
   Chattopadhyay, Sudipta
TI Grammar Based Directed Testing of Machine Learning Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Machine learning; Grammar; Robustness; Systematics; Test pattern
   generators; Natural language processing; Software testing; machine
   learning; natural language processing
ID ROBUSTNESS
AB The massive progress of machine learning has seen its application over a variety of domains in the past decade. But how do we develop a systematic, scalable and modular strategy to validate machine-learning systems? We present, to the best of our knowledge, the first approach, which provides a systematic test framework for machine-learning systems that accepts grammar-based inputs. Our Ogma approach automatically discovers erroneous behaviours in classifiers and leverages these erroneous behaviours to improve the respective models. Ogma leverages inherent robustness properties present in any well trained machine-learning model to direct test generation and thus, implementing a scalable test generation methodology. To evaluate our Ogma approach, we have tested it on three real world natural language processing (NLP) classifiers. We have found thousands of erroneous behaviours in these systems. We also compare Ogma with a random test generation approach and observe that Ogma is more effective than such random test generation by up to 489 percent.
C1 [Udeshi, Sakshi; Chattopadhyay, Sudipta] Singapore Univ Technol & Design, Singapore 487372, Singapore.
C3 Singapore University of Technology & Design
RP Udeshi, S (corresponding author), Singapore Univ Technol & Design, Singapore 487372, Singapore.
EM sakshi_udeshi@mymail.sutd.edu.sg; sudipta_chattopadhyay@sutd.edu.sg
RI Chattopadhyay, Sudipta/ADP-6499-2022
OI Chattopadhyay, Sudipta/0000-0002-4843-5391; Udeshi,
   Sakshi/0000-0001-6484-6249
FU Ministry of Education, Singapore
FX The first author is supported by the President's Graduate Fellowship
   funded by the Ministry of Education, Singapore.
CR [Anonymous], 2019, IAB CONTENT TAXONOMY
   [Anonymous], 2019, ROSETTE TEXT ANAL
   [Anonymous], 2019, GOOGLE CLOUD NATURAL
   [Anonymous], 2019, GOOGLE NATURAL LANGU
   [Anonymous], 2019, AMAZON COMPREHEND
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Dvijotham K, 2018, UNCERTAINTY IN ARTIFICIAL INTELLIGENCE, P550
   Fawzi A, 2018, MACH LEARN, V107, P481, DOI 10.1007/s10994-017-5663-3
   Galhotra S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P498, DOI 10.1145/3106237.3106277
   Gallagher E., 1999, USERS GUIDE APPL
   Gammerman A., 1998, Uncertainty in Artificial Intelligence. Proceedings of the Fourteenth Conference (1998), P148
   Gehr T, 2018, P IEEE S SECUR PRIV, P3, DOI 10.1109/SP.2018.00058
   Godefroid P, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P206, DOI 10.1145/1375581.1375607
   Hendler D, 2018, PROCEEDINGS OF THE 2018 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIACCS'18), P187, DOI 10.1145/3196494.3196511
   Höschele M, 2016, IEEE INT CONF AUTOM, P720, DOI 10.1145/2970276.2970321
   Holler Christian, 2012, P 21 USENIX SEC S US, P445
   Jimenez S., 2013, P 2 JOINT C LEXICAL, V1, P194
   Katz G, 2017, LECT NOTES COMPUT SC, V10426, P97, DOI 10.1007/978-3-319-63387-9_5
   Kuper L., 2018, TECHNICAL REPORT
   LEVANDOWSKY M, 1971, NATURE, V234, P34, DOI 10.1038/234034a0
   Li JF, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23138
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Moore R.E., 2009, Introduction to interval analysis, DOI DOI 10.1137/1.9780898717716
   Odena A, 2019, PR MACH LEARN RES, V97
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Tan P. N., 2005, Introduction to Data Mining
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Udeshi S, 2018, IEEE INT CONF AUTOM, P98, DOI 10.1145/3238147.3238165
   Pham VT, 2016, IEEE INT CONF AUTOM, P543, DOI 10.1145/2970276.2970316
   Vierthaler J., 2018, ABS180206012 CORR
   Wang SQ, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1599
   Wicker M, 2018, LECT NOTES COMPUT SC, V10805, P408, DOI 10.1007/978-3-319-89960-2_22
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
NR 36
TC 2
Z9 2
U1 2
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2021
VL 47
IS 11
BP 2487
EP 2503
DI 10.1109/TSE.2019.2953066
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WW2QE
UT WOS:000717767100011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zou, WQ
   Lo, D
   Kochhar, PS
   Le, XBD
   Xia, X
   Feng, Y
   Chen, ZY
   Xu, BW
AF Zou, Weiqin
   Lo, David
   Kochhar, Pavneet Singh
   Le, Xuan-Bach Dinh
   Xia, Xin
   Feng, Yang
   Chen, Zhenyu
   Xu, Baowen
TI Smart Contract Development: Challenges and Opportunities
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Smart contracts; Blockchain; Law; Interviews; Software; Smart contract;
   challenges; empirical study; blockchain
ID DATA SATURATION; SYSTEM
AB Smart contract, a term which was originally coined to refer to the automation of legal contracts in general, has recently seen much interest due to the advent of blockchain technology. Recently, the term is popularly used to refer to low-level code scripts running on a blockchain platform. Our study focuses exclusively on this subset of smart contracts. Such smart contracts have increasingly been gaining ground, finding numerous important applications (e.g., crowdfunding) in the real world. Despite the increasing popularity, smart contract development still remains somewhat a mystery to many developers largely due to its special design and applications. Are there any differences between smart contract development and traditional software development? What kind of challenges are faced by developers during smart contract development? Questions like these are important but have not been explored by researchers yet. In this paper, we performed an exploratory study to understand the current state and potential challenges developers are facing in developing smart contracts on blockchains, with a focus on Ethereum (the most popular public blockchain platform for smart contracts). Toward this end, we conducted this study in two phases. In the first phase, we conducted semi-structured interviews with 20 developers from GitHub and industry professionals who are working on smart contracts. In the second phase, we performed a survey on 232 practitioners to validate the findings from the interviews. Our interview and survey results revealed several major challenges developers are facing during smart contract development: (1) there is no effective way to guarantee the security of smart contract code; (2) existing tools for development are still very basic; (3) the programming languages and the virtual machines still have a number of limitations; (4) performance problems are hard to handle under resource constrained running environment; and (5) online resources (including advanced/updated documents and community support) are still limited. Our study suggests several directions that researchers and practitioners can work on to help improve developers' experience on developing high-quality smart contracts.
C1 [Zou, Weiqin; Feng, Yang; Chen, Zhenyu; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210008, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
   [Kochhar, Pavneet Singh] Microsoft, Mississauga, ON, Canada.
   [Le, Xuan-Bach Dinh] Univ Melbourne, Sch Comp & Informat Syst, Parkville, Vic 3010, Australia.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
C3 Nanjing University; Singapore Management University; University of
   Melbourne; Monash University
RP Chen, ZY (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210008, Peoples R China.
EM wqzou@smail.nju.edu.cn; davidlo@smu.edu.sg;
   kochharps.2012@phdis.smu.edu.sg; bach.le@unimelb.edu.au;
   xin.xia@monash.edu; charles.fy0708@gmail.com; zychen@nju.edu.cn;
   bwxu@nju.edu.cn
RI Le, Xuan-Bach D./AFR-4740-2022; Xia, Xin/AAD-6217-2022; Xu,
   Baowen/IXW-4882-2023; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Xu, Baowen/0000-0001-7743-1296; Lo,
   David/0000-0002-4367-7201; Zou, Weiqin/0000-0002-0913-1539; Chen,
   Zhenyu/0000-0002-9592-7022
FU National Key Research and Development Program of China [2018YFB1403400];
   National Natural Science Foundation of China [61690201, 61772014];
   program B for Outstanding PhD candidate of Nanjing University
FX We are grateful for the interview and survey participants who provided
   many insightful comments and answered our survey questions. We strongly
   thank the anonymous reviewers for their constructive comments. The work
   is partly supported by the National Key Research and Development Program
   of China (2018YFB1403400), the National Natural Science Foundation of
   China (61690201, 61772014), and the program B for Outstanding PhD
   candidate of Nanjing University. Any opinions, findings, and conclusions
   in this paper are those of the authors only and do not necessarily
   reflect the views of our sponsors.
CR Al Khalil Firas, 2017, Financial Cryptography and Data Security. FC 2017 International Workshops WAHC, BITCOIN, VOTING, WTSC, and TA. Revised Selected Papers: LNCS 10323, P510, DOI 10.1007/978-3-319-70278-0_32
   Alharby M., 2017, COMPUTER SCI INFORM, DOI DOI 10.5121/CSIT.2017.71011
   Alt Leonardo, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P376, DOI 10.1007/978-3-030-03427-6_28
   Amani S, 2018, P 7 INT C CERT PROGR, P66, DOI DOI 10.1145/3167084
   Anati I., 2013, P 2 INT WORKSH HARDW, V13
   anchez D. C. S~, 2018, CORRABS180709484
   Aniche M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P499, DOI 10.1145/3180155.3180180
   [Anonymous], 2007, GUIDE ADV EMPIRICAL
   [Anonymous], 2009, HDB BIOL STAT
   [Anonymous], 2017, P 21 INT C EVALUATIO, DOI [DOI 10.1145/3084226, 10.1145/3084226.3084287, DOI 10.1145/3084226.3084287]
   [Anonymous], 2017, ARXIV170303779
   [Anonymous], 2010, P 32 ACMIEEE INT C S, DOI DOI 10.1145/1806799.1806831
   ARM, 2009, ARM SECURITY TECHNOL
   Barowy DW, 2015, ACM SIGPLAN NOTICES, V50, P218, DOI [10.1145/2813885.2737952, 10.1145/2737924.2737952]
   Bartoletti Massimo, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P432, DOI 10.1007/978-3-030-03427-6_32
   Bartoletti Massimo, 2017, Financial Cryptography and Data Security. FC 2017 International Workshops WAHC, BITCOIN, VOTING, WTSC, and TA. Revised Selected Papers: LNCS 10323, P494, DOI 10.1007/978-3-319-70278-0_31
   Bartoletti M, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P83, DOI 10.1145/3243734.3243795
   Bhargavan K, 2016, PROCEEDINGS OF THE 2016 ACM WORKSHOP ON PROGRAMMING LANGUAGES AND ANALYSIS FOR SECURITY (PLAS'16), P91, DOI 10.1145/2993600.2993611
   Bigi G, 2015, LECT NOTES COMPUT SC, V9465, P142, DOI 10.1007/978-3-319-25527-9_11
   Bragagnolo S., 2017, THESIS NAT I RES COM
   Brent Lexi, 2018, ARXIV180903981
   Brown R G., 2016, Corda: An Introduction, DOI DOI 10.13140/RG.2.2.30487.37284
   Broy M., 2006, 28th International Conference on Software Engineering Proceedings, P33, DOI 10.1145/1134285.1134292
   Buterin V., 2014, CISC VIS NETW IND GL, V3, DOI DOI 10.5663/APS.V1I1.10138
   Calcagno C, 2011, LECT NOTES COMPUT SC, V6617, P459, DOI 10.1007/978-3-642-20398-5_33
   Chan C., 2017, Scoping Study to Expedite Development of a Field Deployable and Portable Instrument for UF6 Enrichment Assay, P1
   Chen T, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P81, DOI 10.1145/3183399.3183420
   Chen T, 2017, LECT NOTES COMPUT SC, V10701, P3, DOI 10.1007/978-3-319-72359-4_1
   Chen T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P442, DOI 10.1109/SANER.2017.7884650
   Chen WL, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P1409, DOI 10.1145/3178876.3186046
   Cheng R, 2019, 2019 4TH IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P), P185, DOI 10.1109/EuroSP.2019.00023
   Christopher ClackD., 2018, Journal of Digital Banking, V2, P338
   Clack C., 2018, J. Digit. Bank., V2, P1
   Clack Christopher D., 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P339, DOI 10.1007/978-3-030-03427-6_26
   Clack CD, 2016, ARXIV PREPRINT ARXIV
   Clack Christopher D., 2019, SMART DERIVATIVES CO, P3
   Coblenz M, 2017, PROC IEEE ACM INT C, P97, DOI 10.1109/ICSE-C.2017.150
   Colombo Christian, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P300, DOI 10.1007/978-3-030-03427-6_23
   Dagenais B, 2014, IEEE T SOFTWARE ENG, V40, P1126, DOI 10.1109/TSE.2014.2347969
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Delmolino K, 2016, LECT NOTES COMPUT SC, V9604, P79, DOI 10.1007/978-3-662-53357-4_6
   Destefanis G, 2018, 2018 IEEE 1ST INTERNATIONAL WORKSHOP ON BLOCKCHAIN ORIENTED SOFTWARE ENGINEERING (IWBOSE), P19, DOI 10.1109/IWBOSE.2018.8327567
   Dickerson T, 2017, PROCEEDINGS OF THE ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING (PODC'17), P303, DOI 10.1145/3087801.3087835
   Dillon T, 2010, INT CON ADV INFO NET, P27, DOI 10.1109/AINA.2010.187
   Eberhardt J, 2017, LECT NOTES COMPUT SC, V10465, P3, DOI 10.1007/978-3-319-67262-5_1
   Filliâtre JC, 2013, LECT NOTES COMPUT SC, V7792, P125, DOI 10.1007/978-3-642-37036-6_8
   Fisher RA, 1922, J R STAT SOC, V85, P87, DOI 10.2307/2340521
   Frantz CK, 2016, 2016 IEEE 1ST INTERNATIONAL WORKSHOPS ON FOUNDATIONS AND APPLICATIONS OF SELF* SYSTEMS (FAS*W), P210, DOI 10.1109/FAS-W.2016.53
   Fröwis M, 2017, LECT NOTES COMPUT SC, V10436, P357, DOI 10.1007/978-3-319-67816-0_20
   Fusch PI, 2015, QUAL REP, V20, P1408
   Galal H. S., 2019, CORRABS190506280
   Goodman L.A., 1961, ANN MATH STAT, V32, P148, DOI [10.1214/aoms/1177705148, DOI 10.1214/AOMS/1177705148]
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Grech N., 2018, P ACM PROGR LANG, P14
   Grishchenko I, 2018, LECT NOTES COMPUT SC, V10981, P51, DOI 10.1007/978-3-319-96145-3_4
   Grishchenko I, 2018, LECT NOTES COMPUT SC, V10804, P243, DOI 10.1007/978-3-319-89722-6_10
   Grossman S, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3158136
   Guest G, 2006, FIELD METHOD, V18, P59, DOI 10.1177/1525822X05279903
   Hegedus P, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P35, DOI 10.1145/3194113.3194119
   Henkel J, 2005, PROC INT CONF SOFTW, P274
   Henrich J, 2010, BEHAV BRAIN SCI, V33, P61, DOI 10.1017/S0140525X0999152X
   Hildenbrandt E, 2018, P IEEE COMPUT SECUR, P204, DOI 10.1109/CSF.2018.00022
   Hilton M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P197, DOI 10.1145/3106237.3106270
   Hirai Yoichi, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P389, DOI 10.1007/978-3-030-03427-6_29
   Hirai Y, 2016, FORMAL VERIFICATION, P1
   Hora A, 2015, PROC IEEE INT CONF S, P321, DOI 10.1109/ICSM.2015.7332478
   Idelberger F, 2016, LECT NOTES COMPUT SC, V9718, P167, DOI 10.1007/978-3-319-42019-6_11
   ISDA and King & Wood Mallesons, 2018, SMART DER CONTR CONC, P1
   ISDA and Linklaters, 2017, SMART CONTR DISTR LE, P1
   Iuon-Chang Lin, 2017, International Journal of Network Security, V19, P653, DOI 10.6633/IJNS.201709.19(5).01
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Juels A, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P283, DOI 10.1145/2976749.2978362
   Kalodner H, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1353
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kawaguchi S, 2006, J SYST SOFTWARE, V79, P939, DOI 10.1016/j.jss.2005.06.044
   Kephart JO, 2005, PROC INT CONF SOFTW, P15, DOI 10.1145/1062455.1062464
   Kim M, 2018, IEEE T SOFTWARE ENG, V44, P1024, DOI 10.1109/TSE.2017.2754374
   Kim M, 2016, PROC INT CONF SOFTW, P96, DOI 10.1145/2884781.2884783
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Knight JC, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P547, DOI 10.1109/ICSE.2002.1007998
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Krupp J, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1317
   Labrinidis A, 2012, PROC VLDB ENDOW, V5, P2032, DOI 10.14778/2367502.2367572
   Li C, 2019, I C DATA ENGIN WORKS, P7, DOI 10.1109/ICDEW.2019.00-43
   Li ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1198, DOI 10.1109/ASE.2019.00136
   Liang J, 2018, SCI CHINA INFORM SCI, V61, DOI 10.1007/s11432-017-9245-1
   Liu C, 2018, PROC IEEE ACM INT C, P65, DOI 10.1145/3183440.3183495
   Liu H, 2018, IEEE INT CONF AUTOM, P814, DOI 10.1145/3238147.3240728
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Ma SQ, 2016, ASIA CCS'16: PROCEEDINGS OF THE 11TH ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P711, DOI 10.1145/2897845.2897896
   Magazzeni D, 2017, COMPUTER, V50, P50, DOI 10.1109/MC.2017.3571045
   Manferdelli JL, 2008, P IEEE, V96, P808, DOI 10.1109/JPROC.2008.917730
   Manotas I, 2016, PROC INT CONF SOFTW, P237, DOI 10.1145/2884781.2884810
   Marescotti Matteo, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P450, DOI 10.1007/978-3-030-03427-6_33
   Marino B, 2016, LECT NOTES COMPUT SC, V9718, P151, DOI 10.1007/978-3-319-42019-6_10
   Mavridou A., 2017, ARXIV171109327
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Miller Andrew, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P280, DOI 10.1007/978-3-030-03427-6_22
   Morse JM, 2015, QUAL HEALTH RES, V25, P587, DOI 10.1177/1049732315576699
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Muccini H., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P29, DOI 10.1109/IWAST.2012.6228987
   Muller G., 2006, Operating Systems Review, V40, P90, DOI 10.1145/1151374.1151392
   Nakahara Shinichi, 2019, European Journal of Taxonomy, P1, DOI 10.5852/ejt.2019.551
   Nguyen A.T., 2014, P 29 ACM IEEE INT C, P457, DOI [10.1145/2642937.2643010, DOI 10.1145/2642937.2643010]
   Nikolic I, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P653, DOI 10.1145/3274694.3274743
   Nipkow Tobias, 2002, ISABELLE HOL PROOF A, V2283
   Ong AD, 2000, J APPL SOC PSYCHOL, V30, P1691, DOI 10.1111/j.1559-1816.2000.tb02462.x
   Padioleau Y, 2008, EUROSYS'08: PROCEEDINGS OF THE EUROSYS 2008 CONFERENCE, P247, DOI 10.1145/1357010.1352618
   Parizi R.M., 2018, P 28 ANN INT C COMP, P103
   Parizi RM, 2018, LECT NOTES COMPUT SC, V10974, P75, DOI 10.1007/978-3-319-94478-4_6
   Park D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P912, DOI 10.1145/3236024.3264591
   Pawlak R, 2016, SOFTWARE PRACT EXPER, V46, P1155, DOI 10.1002/spe.2346
   Pettersson Jack, 2016, THESIS
   Porru S, 2017, PROC IEEE ACM INT C, P169, DOI 10.1109/ICSE-C.2017.142
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   R3, 2018, CORD DOC
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Rosu G, 2010, J LOGIC ALGEBR PROGR, V79, P397, DOI 10.1016/j.jlap.2010.03.012
   Sanchez Cesar, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P275, DOI 10.1007/978-3-030-03427-6_21
   Saunders B, 2018, QUAL QUANT, V52, P1893, DOI 10.1007/s11135-017-0574-8
   Schneidewind, 2018, Tech. Rep
   Schrans F., 2018, P C COMP 2 INT C ART, P218
   Seijas Pablo Lamela, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P356, DOI 10.1007/978-3-030-03427-6_27
   Seijas P.L., 2016, Scripting smart contracts for distributed ledger technology
   Sergey Ilya, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P323, DOI 10.1007/978-3-030-03427-6_25
   Sergey I., 2017, INT C FIN CRYPT DAT, P478
   Shepherd D, 2018, IEEE INT WORK C SO, P209, DOI 10.1109/SCAM.2018.00032
   Sheyner O, 2003, LECT NOTES COMPUT SC, V3188, P344
   Singer L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P211, DOI 10.1145/2568225.2568305
   Spencer D., 2009, CARD SORTING DESIGNI
   Stark J., 2016, COINDESK JUN
   Strauss A. L., 1997, Grounded Theory in Practice
   Sun CN, 2016, PROC INT CONF SOFTW, P203, DOI 10.1145/2884781.2884879
   Swan Melanie, 2015, BLOCKCHAIN BLUEPRINT
   Szabo N., 1997, First Monday, V2
   Thung Ferdian, 2016, 2016 IEEE International Conference on Software Maintenance and Evolution (ICSME), P222, DOI 10.1109/ICSME.2016.71
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Tsankov Petar, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P316, DOI 10.1007/978-3-030-03427-6_24
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   Unterweger A, 2018, INT CONF NEW TECHNOL
   Valente MIB, 2018, COMMUNITY DENT ORAL, V46, P161, DOI 10.1111/cdoe.12349
   Valliappan Nachiappan, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P414, DOI 10.1007/978-3-030-03427-6_31
   Wang PC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1066, DOI 10.1145/3180155.3180179
   Weintrop D, 2018, CHI 2018: EXTENDED ABSTRACTS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3170427.3186599
   Wöhrer M, 2018, 2018 IEEE 1ST INTERNATIONAL WORKSHOP ON BLOCKCHAIN ORIENTED SOFTWARE ENGINEERING (IWBOSE), P2, DOI 10.1109/IWBOSE.2018.8327565
   Wood G., 2014, Ethereum project yellow paper, V151, P1
   Wu H., 2019, MUTATION TESTING ETH
   Xiaohong Chen, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P405, DOI 10.1007/978-3-030-03427-6_30
   Xingya Wang, 2019, 2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER). Proceedings, P549, DOI 10.1109/SANER.2019.8668020
   Zhang F, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P270, DOI 10.1145/2976749.2978326
   Zhang Q, 2010, J INTERNET SERV APPL, V1, P7, DOI 10.1007/s13174-010-0007-6
   Zhong H, 2013, ACM SIGPLAN NOTICES, V48, P803, DOI [10.1145/2509136.2509523, 10.1145/2544173.2509523]
   Zhou Y, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1371
   Zimmermann T, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P137
   Zou WQ, 2020, IEEE T SOFTWARE ENG, V46, P836, DOI 10.1109/TSE.2018.2870414
NR 160
TC 248
Z9 265
U1 36
U2 216
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2021
VL 47
IS 10
BP 2084
EP 2106
DI 10.1109/TSE.2019.2942301
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WH1IX
UT WOS:000707441900003
OA Green Accepted
HC Y
HP N
DA 2024-07-18
ER

PT J
AU Costa, D
   Bezemer, CP
   Leitner, P
   Andrzejak, A
AF Costa, Diego
   Bezemer, Cor-Paul
   Leitner, Philipp
   Andrzejak, Artur
TI What's Wrong with My Benchmark Results? Studying Bad Practices in JMH
   Benchmarks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Benchmark testing; Java; Optimization; Tools; Writing; Static analysis;
   Performance testing; microbenchmarking; JMH; bad practices; static
   analysis
AB Microbenchmarking frameworks, such as Java's Microbenchmark Harness (JMH), allow developers to write fine-grained performance test suites at the method or statement level. However, due to the complexities of the Java Virtual Machine, developers often struggle with writing expressive JMH benchmarks which accurately represent the performance of such methods or statements. In this paper, we empirically study bad practices of JMH benchmarks. We present a tool that leverages static analysis to identify 5 bad JMH practices. Our empirical study of 123 open source Java-based systems shows that each of these 5 bad practices are prevalent in open source software. Further, we conduct several experiments to quantify the impact of each bad practice in multiple case studies, and find that bad practices often significantly impact the benchmark results. To validate our experimental results, we constructed seven patches that fix the identified bad practices for six of the studied open source projects, of which six were merged into the main branch of the project. In this paper, we show that developers struggle with accurate Java microbenchmarking, and provide several recommendations to developers of microbenchmarking frameworks on how to improve future versions of their framework.
C1 [Costa, Diego; Andrzejak, Artur] Heidelberg Univ, Inst Comp Sci, D-69117 Heidelberg, Germany.
   [Bezemer, Cor-Paul] Univ Alberta, Analyt Software Games & Repository Data ASGAARD L, Edmonton, AB T6G 2R3, Canada.
   [Leitner, Philipp] Chalmers, Software Engn Div, SE-40530 Gothenburg, Sweden.
   [Leitner, Philipp] Univ Gothenburg, SE-40530 Gothenburg, Sweden.
C3 Ruprecht Karls University Heidelberg; University of Alberta; Chalmers
   University of Technology; University of Gothenburg
RP Costa, D (corresponding author), Heidelberg Univ, Inst Comp Sci, D-69117 Heidelberg, Germany.
EM diego.costa@informatik.uni-heidelberg.de; bezemer@ualberta.ca;
   philipp.leitner@chalmers.se;
   artur.andrzejak@informatik.uni-heidelberg.de
RI Costa, Diego/Y-7589-2019
OI Bezemer, Cor-Paul/0000-0002-0474-5718; Costa, Diego
   Elias/0000-0001-7084-2594
FU Swedish Research Council VR [2018-04127]; Swedish Research Council
   [2018-04127] Funding Source: Swedish Research Council
FX Philipp Leitner acknowledges the financial support provided by the
   Swedish Research Council VR under grant number 2018-04127
   (Developer-Targeted Performance Engineering for Immersed Release and
   Software Engineers).
CR Alexander Z, 2010, LECT NOTES COMPUT SC, V6065, P18
   Blackburn SM, 2008, COMMUN ACM, V51, P83, DOI 10.1145/1378704.1378723
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Bulej L, 2017, ICPE'17: COMPANION OF THE 2017 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING, P186, DOI 10.1145/3053600.3053638
   Chen Y, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P448, DOI 10.1145/1806596.1806647
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Costa D, 2018, LOG4J2 2478 RETURN C
   Costa D., 2018, SPOTJMHBUGS
   Costa D., 2018, STUDYING BAD PRACTIC
   Costa D., 2018, FIX 627 CONSUME EVER
   Costa D, 2018, AVOIDING USAGE JMH I
   Costa D., 2018, REDUCING USAGE JMH I
   Costa D., 2018, FIX CONFIGURE BENCHM
   Costa D, 2018, PUBDEV 6081 REDUCING
   Costa D., 2018, USE BLACKHOLE OBJECT
   Curtsinger C, 2013, ACM SIGPLAN NOTICES, V48, P219, DOI 10.1145/2499368.2451141
   de Oliveira AugustoBorn., 2013, Proceedings of the 4th ACM/SPEC International Conference on Performance Engineering, ICPE'13, P137
   Georges A, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P57
   Gil J. Y., 2011, P COMP COL WORKSH DS P COMP COL WORKSH, P297, DOI DOI 10.1145/2095050.2095100
   Green Viki., 2016, Impact of slow page load time on website performance
   Gu D., 2005, STUDIA INFORM UNIVER, V4, P83
   Harji A. S., 2011, P 2 AS PAC WORKSH SY P 2 AS PAC WORKSH SY
   Horky V., 2015, P 6 ACMSPEC INT C PE, P337, DOI [10.1145/2668930, DOI 10.1145/2668930]
   Kalibera T., 2005, P INT S PERF EV COMP P INT S PERF EV COMP, P853
   Kalibera T, 2013, PROCEEDINGS OF THE ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT (ISMM '13), P63
   Kuperberg M., 2010, P SOFTW ENG 2010 FAC P SOFTW ENG 2010 FAC, P57
   Laaber C, 2018, IEEE WORK CONF MIN S, P119, DOI 10.1145/3196398.3196407
   Leitner P., 2017, P 8 ACMSPEC INT C PE, P373
   Moreno C, 2017, IEEE EMBED SYST LETT, V9, P17, DOI 10.1109/LES.2017.2654160
   Mytkowicz T, 2009, ACM SIGPLAN NOTICES, V44, P265, DOI 10.1145/1508284.1508275
   Nogueira P. E., 2014, P 29 ANN ACM S APPL P 29 ANN ACM S APPL, P1529, DOI DOI 10.1145/2554850.2555022
   OpenJDK, 2018, JAV MICR HARN JAV MICR HARN
   Oracle America Inc, 2014, JMH SAMPL JMH SAMPL
   Ponge J, 2014, AVOIDING BENCHMARKIN
   Pradel Michael, 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P13, DOI DOI 10.1145/2610384.2610393
   Rodriguez-Cancio M, 2016, IEEE INT CONF AUTOM, P132, DOI 10.1145/2970276.2970346
   Romano J., 2006, P ANN MEET SO ASS I P ANN MEET SO ASS I
   Shipil_ev Aleksey, 2013, JAVA MICROBENCHMARK JAVA MICROBENCHMARK
   Stefan P., 2017, P 8 ACM SPEC INT C P, P401, DOI [DOI 10.1145/3030207.3030226, 10. 1145/3030207.3030226]
   The JUnit Team, 2019, JUNIT 5
   WEGMAN MN, 1991, ACM T PROGR LANG SYS, V13, P181, DOI 10.1145/103135.103136
   Weise D., 1994, Conference Record of POPL '94: 21st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P297, DOI 10.1145/174675.177907
   Weyuker EJ, 2000, IEEE T SOFTWARE ENG, V26, P1147, DOI 10.1109/32.888628
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
NR 44
TC 20
Z9 21
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL 1
PY 2021
VL 47
IS 7
BP 1452
EP 1467
DI 10.1109/TSE.2019.2925345
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA TJ6XV
UT WOS:000673623000009
DA 2024-07-18
ER

PT J
AU Decan, A
   Mens, T
AF Decan, Alexandre
   Mens, Tom
TI What Do Package Dependencies Tell Us About Semantic Versioning?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; distribution; maintenance; and enhancement;
   maintainability; version control; metrics/measurement; reusable
   software; reusable libraries; configuration management; software release
   management and delivery
AB The semantic versioning (semver) policy is commonly accepted by open source package management systems to inform whether new releases of software packages introduce possibly backward incompatible changes. Maintainers depending on such packages can use this information to avoid or reduce the risk of breaking changes in their own packages by specifying version constraints on their dependencies. Depending on the amount of control a package maintainer desires to have over her package dependencies, these constraints can range from very permissive to very restrictive. This article empirically compares semver compliance of four software packaging ecosystems (Cargo, npm, Packagist and Rubygems), and studies how this compliance evolves over time. We explore to what extent ecosystem-specific characteristics or policies influence the degree of compliance. We also propose an evaluation based on the "wisdom of the crowds" principle to help package maintainers decide which type of version constraints they should impose on their dependencies.
C1 [Decan, Alexandre; Mens, Tom] Univ Mons, Software Engn Lab, Ave Maistriau 15, B-7000 Mons, Belgium.
C3 University of Mons
RP Decan, A (corresponding author), Univ Mons, Software Engn Lab, Ave Maistriau 15, B-7000 Mons, Belgium.
EM alexandre.decan@umons.ac.be; tom.mens@umons.ac.be
RI Mens, Tom/B-6518-2013
OI Mens, Tom/0000-0003-3636-5020
FU FRQ-FNRS collaborative research project [R.60.04.18.F]; FWO-Vlaanderen
   [30446992]; F.R.S.-FNRS
FX This research was carried out in the context of FRQ-FNRS collaborative
   research project R.60.04.18.F SECOHealth and Excellence of Science
   project 30446992 SECO-ASSIST financed by FWO-Vlaanderen and F.R.S.-FNRS.
CR Aalen OO, 2008, STAT BIOL HEALTH, P1
   Abate P, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P24, DOI 10.1109/MSR.2015.10
   [Anonymous], 2019, GEMNASIUM GITLAB
   [Anonymous], 2011, JOINT EUR SOFTW ENG
   [Anonymous], 2019, GITHUB SECURITY ALER
   Bavota G, 2013, PROC IEEE INT CONF S, P280, DOI 10.1109/ICSM.2013.39
   Bogart C., 2017, VALUES PRACTICES 18
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Bogart C, 2015, 2015 30TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOP (ASEW), P86, DOI 10.1109/ASEW.2015.21
   Cox J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P109, DOI 10.1109/ICSE.2015.140
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Decan A, 2018, PROC IEEE INT CONF S, P404, DOI 10.1109/ICSME.2018.00050
   Decan A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P2, DOI 10.1109/SANER.2017.7884604
   Decan A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P493, DOI 10.1109/SANER.2016.12
   Derr E, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2187, DOI 10.1145/3133956.3134059
   Ganesan B, 2017, NPM DEPENDENCY ERROR
   Gonzalez-Barahona J. M., 2017, IFIP Advances in Information and Communication Technology, P182
   HOLM S, 1979, SCAND J STAT, V6, P65
   Hopcroft John E, 2001, Introduction to Automata Theory, Languages, and Computation, V32, P60, DOI DOI 10.1145/568438.568455
   Hyrynsalmi S, 2015, LECT NOTES BUS INF P, V210, P272, DOI 10.1007/978-3-319-19593-3_24
   Jansen S, 2014, INFORM SOFTWARE TECH, V56, P1508, DOI 10.1016/j.infsof.2014.04.006
   KAPLAN EL, 1958, J AM STAT ASSOC, V53, P457, DOI 10.2307/2281868
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Kula RG, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P520, DOI 10.1109/SANER.2015.7081869
   Lungu M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P289, DOI 10.1145/1810295.1810356
   Mileva YM, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P57
   Mostafa S, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P215, DOI 10.1145/3092703.3092721
   Nesbitt A., 2018, LIBRARIESIO OPEN SOU, DOI [10.5281/zenodo.1196312, DOI 10.5281/ZENODO.1196312]
   Preston-Werner Tom., 2013, Semantic Versioning 2.0.0
   Raemaekers S, 2017, J SYST SOFTWARE, V129, P140, DOI 10.1016/j.jss.2016.04.008
   Ricci F, 2011, RECOMMENDER SYSTEMS HANDBOOK, P1, DOI 10.1007/978-0-387-85820-3_1
   Vouillon J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P412, DOI 10.1109/ICSE.2013.6606587
   Wang Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P319, DOI 10.1145/3236024.3236056
   Wittern E, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P351, DOI [10.1145/2901739.2901743, 10.1109/MSR.2016.043]
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Xavier L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P138, DOI 10.1109/SANER.2017.7884616
   Zerouali A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2157
NR 38
TC 37
Z9 38
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2021
VL 47
IS 6
BP 1226
EP 1240
DI 10.1109/TSE.2019.2918315
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SQ8XU
UT WOS:000660633800008
DA 2024-07-18
ER

PT J
AU Spinellis, D
   Avgeriou, P
AF Spinellis, Diomidis
   Avgeriou, Paris
TI Evolution of the Unix System Architecture: An Exploratory Case Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer architecture; Complexity theory; Evolution (biology); Linux;
   Kernel; Unix; software architecture; software evolution; architecture
   design decisions; operating systems
ID OPEN-SOURCE SOFTWARE; LARGE-SCALE; LINUX KERNEL; PROGRAM; HISTORY
AB Unix has evolved for almost five decades, shaping modern operating systems, key software technologies, and development practices. Studying the evolution of this remarkable system from an architectural perspective can provide insights on how to manage the growth of large, complex, and long-lived software systems. Along main Unix releases leading to the FreeBSD lineage we examine core architectural design decisions, the number of features, and code complexity, based on the analysis of source code, reference documentation, and related publications. We report that the growth in size has been uniform, with some notable outliers, while cyclomatic complexity has been religiously safeguarded. A large number of Unix-defining design decisions were implemented right from the very early beginning, with most of them still playing a major role. Unix continues to evolve from an architectural perspective, but the rate of architectural innovation has slowed down over the system's lifetime. Architectural technical debt has accrued in the forms of functionality duplication and unused facilities, but in terms of cyclomatic complexity it is systematically being paid back through what appears to be a self-correcting process. Some unsung architectural forces that shaped Unix are the emphasis on conventions over rigid enforcement, the drive for portability, a sophisticated ecosystem of other operating systems and development organizations, and the emergence of a federated architecture, often through the adoption of third-party subsystems. These findings have led us to form an initial theory on the architecture evolution of large, complex operating system software.
C1 [Spinellis, Diomidis] Athens Univ Econ & Business, Dept Management Sci & Technol, Athina 10434, Greece.
   [Spinellis, Diomidis] Athens Univ Econ & Business, Business Analyt Lab, Athina 10434, Greece.
   [Avgeriou, Paris] Univ Groningen, Software Engn, Software Engn Res Grp, NL-9712 Groningen, Netherlands.
C3 Athens University of Economics & Business; Athens University of
   Economics & Business; University of Groningen
RP Spinellis, D (corresponding author), Athens Univ Econ & Business, Business Analyt Lab, Athina 10434, Greece.
EM dds@aueb.gr; paris@cs.rug.nl
RI Spinellis, Diomidis/E-3600-2010
OI Spinellis, Diomidis/0000-0003-4231-1897; Avgeriou,
   Paris/0000-0002-7101-0754
FU European Union [732223]
FX The authors thank the members of the Unix Heritage Society15 and in
   particular Warren Toomey and Kirk McKusick for preserving and making
   available many important early Unix artifacts. They also thank the TUHS
   mailing list participants for their input and encouragement regarding
   this research. The authors are especially grateful to the anonymous
   reviewers and to Kirk McKusick, George Neville-Neil, Warren Toomey, and
   Alexios Zavras, for their detailed and insightful comments regarding
   earlier versions of this document. The research described has been
   carried out as part of the CROSSMINER Project, which has received
   funding from the European Union's Horizon 2020 Research and Innovation
   Programme under grant agreement No. 732223.
CR AHO AV, 1979, SOFTWARE PRACT EXPER, V9, P267, DOI 10.1002/spe.4380090403
   American National Standard for Information Systems-programming language-C, 1989, ANSI STANDARD ANSI X
   [Anonymous], 1996, IEEE ANSI STD 10031
   [Anonymous], 1999, Programming languages, their environments and system software interfaces
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2018, Programming Language Usage
   [Anonymous], 2017, IEEE STANDARD 10031
   [Anonymous], 1993, INFORM TECHNOLOGY PO
   [Anonymous], 2015, FREEBSD HDB
   Aram M., 2017, P OP SOURC SPL KNOWL, P111
   AT&T, 1978, BELL SYST TECH J, V57
   AT&T, 1984, AT T BELL LAB TECH J, V63
   Avgeriou P., 2016, DAGSTUHL SEMINAR 161, V6
   Avgeriou P, 2016, IEEE SOFTWARE, V33, P66, DOI 10.1109/MS.2016.13
   Babaoglu O., 1981, Operating Systems Review, V15, P78, DOI 10.1145/1067627.806595
   Bach MJ, 1986, DESIGN UNIX OPERATIN
   Bagherzadeh M, 2018, EMPIR SOFTW ENG, V23, P1519, DOI 10.1007/s10664-017-9551-z
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Behnamghader P, 2017, EMPIR SOFTW ENG, V22, P1146, DOI 10.1007/s10664-016-9466-0
   Bell Laboratories, 1979, UNIX PROGRAMMERS MAN, V1
   Bell Laboratories, 1979, UNIX PROGRAMMERS MAN
   BENTLEY J, 1986, COMMUN ACM, V29, P711, DOI 10.1145/6424.315691
   BENTLEY JL, 1987, COMPUT CHEM, V11, P281, DOI 10.1016/0097-8485(87)85006-4
   Biba K. J, 1977, TECH REP MTR3153 REV
   Bonwick Jeff., 2003, The Zettabyte File System
   Bourne, 1979, UNIX PROGRAMMERS MAN
   Bourne S. R, 1977, COMPUT SCI TECH REP
   BOURNE SR, 1978, AT&T TECH J, V56, P1971
   Bouwers E, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P83, DOI 10.1109/WICSA.2011.20
   Bovet DanielP., 2006, UNDERSTANDING LINUX
   Breivold HP, 2010, ASIA PAC SOFWR ENG, P356, DOI 10.1109/APSEC.2010.48
   Brooks Fred, 1975, The Mythical Man-Month
   Cantrill BM, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK 2004 USENIX ANNUAL TECHNICAL CONFERENCE, P15
   Capiluppi A, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P21, DOI 10.1109/CSMR.2005.30
   Cherry L. L, 1974, COMPUT SCI TECH REP
   Conley C.A., 2009, System Sciences, P1
   DAmbros M., 2008, Software Evolution, P37
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Feitelson DG, 2012, J SYST SOFTWARE, V85, P859, DOI 10.1016/j.jss.2011.10.050
   Feldman S. I, 1977, COMPUT SCI TECH REP
   FELDMAN SI, 1979, SOFTWARE PRACT EXPER, V9, P255, DOI 10.1002/spe.4380090402
   Fowler M., 2010, Domain-specific languages
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Gorden M, 1965, Electronics, V38, P114, DOI [DOI 10.1109/N-SSC.2006.4785860, DOI 10.1109/JPROC.1998.658762]
   Harrison NB, 2007, IEEE SOFTWARE, V24, P38, DOI 10.1109/MS.2007.124
   Hatton L, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1847
   Herraiz I, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2543581.2543595
   Hume A, 1988, P EUUG SPRING 88 C B, P237
   Israeli A, 2010, J SYST SOFTWARE, V83, P485, DOI 10.1016/j.jss.2009.09.042
   Johnson S, 2017, UNIX HERITAGE SOC MA
   Johnson S. C, 1977, COMPUT SCI TECH REP
   Johnson S. C, 1975, COMPUT SCI TECH REP
   JOHNSON S.C., 1979, UNIX Programmer's Manual
   JOHNSON SC, 1978, AT&T TECH J, V57, P2021, DOI 10.1002/j.1538-7305.1978.tb02141.x
   JOHNSON SC, 1978, AT&T TECH J, V56, P2155
   Jolitz, 1991, DR DOBBS J, V16
   Karn P, 1987, PROC 6 ARRL COMPUT N, P91
   Kernighan, 1977, 8 BELL LAB
   Kernighan B. W, 1979, COMPUT SCI TECH REP
   Kernighan B. W, 1982, COMPUT SCI TECH REP
   KERNIGHAN BW, 1982, SOFTWARE PRACT EXPER, V12, P1, DOI 10.1002/spe.4380120102
   Kessler P. B, 1983, UNIX PROGRAMMERS MAN
   Killian ThomasJ., 1984, Proc. of USENIX Summer, P203
   Koch S, 2007, J SOFTW MAINT EVOL-R, V19, P361, DOI 10.1002/smr.348
   LaPadula L. J, 1973, TECH REP MTR 2547, V1
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Leffler S.J., 1988, DESIGN IMPLEMENTATIO
   Lehey G, 2006, COMPLETE FREEBSD
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   Lesk, 1979, UNIX PROGRAMMERS MAN
   Lesk M. E, 1975, COMPUT SCI TECH REP
   Lewis A, 1956, NEW YORK TIMES, P16
   Lions J., 1996, Lions' Commentary on UNIX 6th Edition with Source Code.
   Love Robert, 2010, Linux Kernel Development
   MacCormack A, 2006, MANAGE SCI, V52, P1015, DOI 10.1287/mnsc.1060.0552
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McIlroy M, 2018, INTERVIEW MICHAEL S, DOI [10.5281/zenodo.2525529, DOI 10.5281/ZENODO.2525529]
   McKusick M.K., 2014, DESIGN IMPLEMENTATIO
   McKusick Marshall., 2004, DESIGN IMPLEMENTATIO
   McKusick Marshall Kirk, 1996, DESIGN IMPLEMENTATIO
   McKusick MK, 1999, PROCEEDINGS OF THE FREENIX TRACK, P1
   MCKUSICK MK, 1984, ACM T COMPUT SYST, V2, P181, DOI 10.1145/989.990
   McMahon, 1979, SED NONINTERACTIVE T
   Merkel D., 2014, LINUX J, V2014, P2, DOI DOI 10.5555/2600239.2600241
   Nyman L, 2016, IEEE ANN HIST COMPUT, V38, P84, DOI 10.1109/MAHC.2016.34
   Organick ElliottI., 1972, The Multics system: an examination of its structure
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Paulson JW, 2004, IEEE T SOFTWARE ENG, V30, P246, DOI 10.1109/TSE.2004.1274044
   PIKE R, 1995, COMPUT SYST, V8, P221
   Primiero G, 2017, REFLECTIONS OPERATIN
   QUARTERMAN JS, 1986, COMMUN ACM, V29, P932, DOI 10.1145/6617.6618
   Ressler S, 1989, LIFE UNIX
   Richard Stevens W., 1998, UNIX NETWORK PROGRAM, V1
   Richard Stevens W., 1992, ADV PROGRAMMING UNIX
   Ritchie, 1979, UNIX PROGRAMMERS MAN
   Ritchie D. M, 1979, UNIX PROGRAMMERS MAN
   RITCHIE DM, 1978, AT&T TECH J, V57, P1905, DOI 10.1002/j.1538-7305.1978.tb02136.x
   RITCHIE DM, 1984, AT&T TECH J, V63, P1577, DOI 10.1002/j.1538-7305.1984.tb00054.x
   RITCHIE DM, 1974, COMMUN ACM, V17, P365, DOI 10.1145/361011.361061
   RITCHIE DM, 1978, AT&T TECH J, V56, P1947
   Rizzo L., 2012, 2012 USENIX ANN TECH, P101
   ROSLER L, 1984, AT&T TECH J, V63, P1685, DOI 10.1002/j.1538-7305.1984.tb00060.x
   Salus P. H, 1998, LITTLE LANGUAGES TOO, VIII
   Salus P. H., 1994, A Quarter Century of UNIX
   Sandberg Russel., 1985, Proceedings of the Summer USENIX conference, P119
   Schilling J, 2016, TUHS THE UNIX HERITA
   Seaman C.B., 2008, Guide to Advanced Empirical Software Engineering, P35, DOI [10.1007/978-1-84800-044-52, DOI 10.1007/978-1-84800-044-52]
   Seibel P, 2009, CODERS WORK REFLECTI, P449
   Seltzer Margo., 1992, Proceedings of the 1992 Winter Usenix, P9
   Singer Janice, 2008, Guide to Advanced Empirical Software Engineering, P9
   Sjoberg DIK, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P29
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   SPINELLIS D, 2018, PROC 15 C MINING SOF, P58
   Spinellis D., 2007, Beautiful Code: Leading Programmers Explain How They Think, P279
   Spinellis D, 2017, EMPIR SOFTW ENG, V22, P1372, DOI 10.1007/s10664-016-9445-5
   Spinellis D, 2016, PROC INT CONF SOFTW, P748, DOI 10.1145/2884781.2884799
   Spinellis D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P381, DOI 10.1145/1368088.1368140
   STEVENS WR, 1995, PROCEEDINGS OF THE 1995 USENIX TECHNICAL CONFERENCE, P1
   Stone M, 1999, OPEN SOURCES VOICES, P31
   Takamatsu, 2013, ANN BUS ADMIN SCI, V12, P123
   Tanenbaum Andrew S., 1997, OPERATING SYSTEMS DE
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   THOMPSON K, 1984, COMMUN ACM, V27, P761, DOI 10.1145/358198.358210
   Thompson K, 2018, INTERVIEW MICHAEL S, DOI [10.5281/zenodo.2525529, DOI 10.5281/ZENODO.2525529]
   Thompson K, 1972, INTERNAL BELL LABS T
   Thompson K., 1993, P WINT 1993 USENIX C, P43
   Thompson K, 1978, COMPUT SCI TECH REP
   Toomey W, 2010, IEEE ANN HIST COMPUT, V32, P74, DOI 10.1109/MAHC.2009.55
   Toomey Warren, 2009, P 2009 USENIX ANN TE, P20
   Tyree J, 2005, IEEE SOFTWARE, V22, P19, DOI 10.1109/MS.2005.27
   Vliet H. V., 2008, SOFTWARE ENG PRINCIP
   Watson R. N. M, 2000, PROC 2 INT SYST ADM
   Wettel R, 2008, WORK CONF REVERSE EN, P219, DOI 10.1109/WCRE.2008.55
   Zhang F, 2017, IEEE T SOFTWARE ENG, V43, P476, DOI 10.1109/TSE.2016.2599161
NR 135
TC 3
Z9 3
U1 3
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2021
VL 47
IS 6
BP 1134
EP 1163
DI 10.1109/TSE.2019.2892149
PG 30
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SQ8XU
UT WOS:000660633800003
OA Green Submitted, hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Wang, JJ
   Wang, S
   Chen, JF
   Menzies, T
   Cui, Q
   Xie, M
   Wang, Q
AF Wang, Junjie
   Wang, Song
   Chen, Jianfeng
   Menzies, Tim
   Cui, Qiang
   Xie, Miao
   Wang, Qing
TI Characterizing Crowds to Better Optimize Worker Recommendation in
   Crowdsourced Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Crowdsourced testing; crowd worker recommendation; multi-objective
   optimization
ID PRIORITIZATION
AB Crowdsourced testing is an emerging trend, in which test tasks are entrusted to the online crowd workers. Typically, a crowdsourced test task aims to detect as many bugs as possible within a limited budget. However not all crowd workers are equally skilled at finding bugs; Inappropriate workers may miss bugs, or report duplicate bugs, while hiring them requires nontrivial budget. Therefore, it is of great value to recommend a set of appropriate crowd workers for a test task so that more software bugs can be detected with fewer workers. This paper first presents a new characterization of crowd workers and characterizes them with testing context, capability, and domain knowledge. Based on the characterization, we then propose Multi-Objective Crowd wOrker recoMmendation approach (MOCOM), which aims at recommending a minimum number of crowd workers who could detect the maximum number of bugs for a crowdsourced testing task. Specifically, MOCOM recommends crowd workers by maximizing the bug detection probability of workers, the relevance with the test task, the diversity of workers, and minimizing the test cost. We experimentally evaluate MOCOM on 532 test tasks, and results show that MOCOM significantly outperforms five commonly-used and state-of-the-art baselines. Furthermore, MOCOM can reduce duplicate reports and recommend workers with high relevance and larger bug detection probability; because of this it can find more bugs with fewer workers.
C1 [Wang, Junjie; Wang, Qing] Chinese Acad Sci, Lab Internet Software Technol, State Key Lab Comp Sci, Inst Software, Beijing 100190, Peoples R China.
   [Wang, Junjie; Wang, Qing] Univ Chinese Acad Sci, Beijing, Peoples R China.
   [Wang, Song] York Univ, Toronto, ON M3J 1P3, Canada.
   [Chen, Jianfeng; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
   [Cui, Qiang] Bytedance Inc, Beijing, Peoples R China.
   [Xie, Miao] Alibaba Grp, DAMO Acad, Beijing, Peoples R China.
C3 Chinese Academy of Sciences; Institute of Software, CAS; Chinese Academy
   of Sciences; University of Chinese Academy of Sciences, CAS; York
   University - Canada; North Carolina State University; Alibaba Group
RP Wang, JJ; Wang, Q (corresponding author), Chinese Acad Sci, Lab Internet Software Technol, State Key Lab Comp Sci, Inst Software, Beijing 100190, Peoples R China.
EM wangjunjie@itechs.iscas.ac.cn; wangsong.itechs@gmail.com;
   jchen37@ncsu.edu; timm@ieee.org; cuiqiang1225@gmail.com;
   0520shui@163.com; wq@itechs.iscas.ac.cn
RI Menzies, Tim/X-7680-2019; wang, qi/ITT-9652-2023; Xie,
   Miao/JVD-4697-2023
OI Menzies, Tim/0000-0002-5040-3196; Xie, Miao/0000-0002-9569-509X; wang,
   jun jie/0000-0002-9941-6713
FU National Key Research and Development Program of China [2018YFB1403400];
   National Natural Science Foundation of China [61602450, 61432001]; China
   Scholarship Council
FX This work is supported by the National Key Research and Development
   Program of China under grant No.2018YFB1403400, the National Natural
   Science Foundation of China under grant No.61602450, No.61432001, and
   China Scholarship Council. We would like to thank the testers in Baidu
   for their extensive efforts in supporting this work.
CR Abbas H, 2013, ACM T EMBED COMPUT S, V12, DOI 10.1145/2465787.2465797
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bhattacharya P, 2010, PROC IEEE INT CONF S
   Brooks Frederick P., 1995, The mythical man-month
   Chen JJ, 2017, PROC INT CONF SOFTW, P700, DOI 10.1109/ICSE.2017.70
   Chen JJ, 2016, IEEE INT CONF SOFTW, P266, DOI 10.1109/ICST.2016.19
   Chen N, 2012, IEEE INT CONF AUTOM, P140, DOI 10.1145/2351676.2351697
   Cui Q., 2017, P SEKE, P218
   Cui Q, 2017, P INT COMP SOFTW APP, P75, DOI 10.1109/COMPSAC.2017.265
   Deb K., 2000, Parallel Problem Solving from Nature PPSN VI. 6th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1917), P849
   Di Penta Massimiliano, 2012, P ACM SIGSOFT 20 INT, P1
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Epitropakis M. G., 2015, P INT S SOFTW TEST A, P234, DOI [DOI 10.1145/2771783.2771788, 10.1145/2771783.2771788]
   Feng Y, 2016, IEEE INT CONF AUTOM, P202, DOI 10.1145/2970276.2970367
   Feng Y, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P225, DOI 10.1145/2786805.2786862
   Gómez M, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P88, DOI [10.1109/MobileSoft.2016.033, 10.1145/2897073.2897088]
   Gomide VHM., 2014, INT J COMPUTER SCI I, V5, P575
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Henard C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P517, DOI 10.1109/ICSE.2015.69
   HOLLAND JH, 1992, SCI AM, V267, P66, DOI 10.1038/scientificamerican0792-66
   Hosseini M, 2014, INT CONF RES CHAL
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Kettunen V., 2010, P 19 INT S SOFTW TES, P231, DOI [10.1145/1831708.1831737, DOI 10.1145/1831708.1831737]
   Ledru Y, 2012, AUTOMAT SOFTW ENG, V19, P65, DOI 10.1007/s10515-011-0093-0
   Ledru Y, 2009, IEEE INT CONF AUTOM, P510, DOI 10.1109/ASE.2009.23
   Leicht N, 2017, IEEE SOFTWARE, V34, P62, DOI 10.1109/MS.2017.37
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Ma D, 2009, PROC IEEE INT CONF S, P535, DOI 10.1109/ICSM.2009.5306386
   Mao K, 2017, J SYST SOFTWARE, V126, P57, DOI 10.1016/j.jss.2016.09.015
   Mao K, 2015, 9TH IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2015), P347, DOI 10.1109/SOSE.2015.46
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   Mei H, 2012, IEEE T SOFTWARE ENG, V38, P1258, DOI 10.1109/TSE.2011.106
   Memon A, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P233, DOI 10.1109/ICSE-SEIP.2017.16
   Musson R, 2013, IEEE SOFTWARE, V30, P38, DOI 10.1109/MS.2013.67
   Naguib H, 2013, IEEE WORK CONF MIN S, P22, DOI 10.1109/MSR.2013.6623999
   Newcombe C, 2015, COMMUN ACM, V58, P66, DOI 10.1145/2699417
   Ricci F, 2011, RECOMMENDER SYSTEMS HANDBOOK, P1, DOI 10.1007/978-0-387-85820-3_1
   Rocha H, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P46, DOI 10.1109/SANER.2016.87
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Schaefer I, 2011, COMPUTER, V44, P82, DOI 10.1109/MC.2011.47
   Shi A, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P237, DOI 10.1145/2786805.2786878
   Song Wang, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P193, DOI 10.1109/ESEM.2013.24
   Tamrawi A, 2011, P 19 ACM SIGSOFT S 1, P365, DOI [DOI 10.1145/2025113.2025163, 10.31274/etd-180810-1814, DOI 10.31274/ETD-180810-1814]
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   Wang JJ, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962584
   Wang JJ, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P83, DOI 10.1109/ICSE-SEIP.2017.8
   Wang JJ, 2016, IEEE INT CONF AUTOM, P190, DOI 10.1145/2970276.2970300
   Wang S, 2016, PROC INT CONF SOFTW, P631, DOI 10.1145/2884781.2884880
   [王思霖 Wang Silin], 2014, [高分子通报, Polymer Bulletin], P25
   Wang S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P523, DOI 10.1145/3106237.3106258
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Witten I. H., 2005, DATA MINING PRACTICA
   Xie M, 2017, PROC INT SYMP SOFTW, P316, DOI 10.1109/ISSRE.2017.25
   Xuan JF, 2012, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2012.6227209
   Yang H, 2016, P INT COMP SOFTW APP, P239, DOI 10.1109/COMPSAC.2016.101
   Yang Y, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962594
   Ye B, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P1, DOI 10.1109/ICWS.2016.10
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhang W, 2013, INT CONF CLOUD SERV, P98, DOI 10.1109/CSC.2013.23
   Zhang Xiao-Fang, 2018, Journal of Software, V29, P69, DOI 10.13328/j.cnki.jos.005377
   Zhou MH, 2015, IEEE T SOFTWARE ENG, V41, P82, DOI 10.1109/TSE.2014.2349496
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
NR 64
TC 14
Z9 14
U1 0
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2021
VL 47
IS 6
BP 1259
EP 1276
DI 10.1109/TSE.2019.2918520
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SQ8XU
UT WOS:000660633800010
DA 2024-07-18
ER

PT J
AU Nguyen, PT
   Di Rocco, J
   Di Sipio, C
   Di Ruscio, D
   Di Penta, M
AF Nguyen, Phuong T.
   Di Rocco, Juri
   Di Sipio, Claudio
   Di Ruscio, Davide
   Di Penta, Massimiliano
TI Recommending API Function Calls and Code Snippets to Support Software
   Development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Recommender systems; Libraries; Tools; Data mining; Task analysis;
   Software engineering; Documentation; Recommender systems; API calls;
   source code recommendations; android programming
AB Software development activity has reached a high degree of complexity, guided by the heterogeneity of the components, data sources, and tasks. The proliferation of open-source software (OSS) repositories has stressed the need to reuse available software artifacts efficiently. To this aim, it is necessary to explore approaches to mine data from software repositories and leverage it to produce helpful recommendations. We designed and implemented FOCUS as a novel approach to provide developers with API calls and source code while they are programming. The system works on the basis of a context-aware collaborative filtering technique to extract API usages from OSS projects. In this work, we show the suitability of FOCUS for Android programming by evaluating it on a dataset of 2,600 mobile apps. The empirical evaluation results show that our approach outperforms two state-of-the-art API recommenders, UP-Miner and PAM, in terms of prediction accuracy. We also point out that there is no significant relationship between the categories for apps defined in Google Play and their API usages. Finally, we show that participants of a user study positively perceive the API and source code recommended by FOCUS as relevant to the current development context.
C1 [Nguyen, Phuong T.; Di Rocco, Juri; Di Sipio, Claudio; Di Ruscio, Davide] Univ Aquila, I-67100 Laquila, Italy.
   [Di Penta, Massimiliano] Univ Sannio, I-82100 Benevento, Italy.
C3 University of L'Aquila; University of Sannio
RP Di Ruscio, D (corresponding author), Univ Aquila, I-67100 Laquila, Italy.
EM phuong.nguyen@univaq.it; juri.dirocco@univaq.it;
   claudio.disipio@univaq.it; davide.diruscio@univaq.it;
   dipenta@unisannio.it
RI Nguyen, Phuong/ABE-3890-2021; Di Ruscio, Davide/AAG-4674-2020; Di Rocco,
   Juri/HSE-7230-2023; Di Sipio, Claudio/JYQ-5925-2024
OI Nguyen, Phuong/0000-0002-3666-4162; Di Ruscio,
   Davide/0000-0002-5077-6793; Di Sipio, Claudio/0000-0001-9872-9542; Di
   Penta, Massimiliano/0000-0002-0340-9747; Di Rocco,
   Juri/0000-0002-7909-3902
FU European Union's Horizon 2020 Research and Innovation Programme
   [732223]; H2020 - Industrial Leadership [732223] Funding Source: H2020 -
   Industrial Leadership
FX The research described has been carried out as part of the CROSSMINER
   Project, which has received funding from the European Union's Horizon
   2020 Research and Innovation Programme under grant agreement No. 732223.
   The authors would like to thank Gian Luca Scoccia for providing them
   with the tool to extract APK files from Apkpure. They also thank the
   students who kindly participated in the user study, despite difficulties
   caused by the unprecedented pandemic. Finally, they are grateful to the
   anonymous reviewers for their valuable comments and suggestions that
   helped them improve the paper.
CR Aarssen R., 2017, **DATA OBJECT**, DOI 10.5281/zenodo.891122
   Acharya Mithun, 2007, P 6 JOINT M EUROPEAN, P25, DOI [DOI 10.1145/1287624.1287630, 10.1145/1287624.1287630]
   [Anonymous], 1999, 80 20 PRINCIPLE SECR
   Basten B, 2015, SCI COMPUT PROGRAM, V114, P7, DOI 10.1016/j.scico.2015.11.003
   Basten B, 2015, 2015 IEEE 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN), P25, DOI 10.1109/SWAN.2015.7070485
   Buse RPL, 2012, PROC INT CONF SOFTW, P782, DOI 10.1109/ICSE.2012.6227140
   Capiluppi A, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106279
   Chen A, 2005, LECT NOTES COMPUT SC, V3479, P244, DOI 10.1007/11426646_23
   Cordeiro J., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P85, DOI 10.1109/RSSE.2012.6233418
   dex2jar, 2021, LIB CAT TOOLS KAL OR
   Fazzini M, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P204, DOI 10.1145/3293882.3330571
   Fowkes J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P254, DOI 10.1145/2950290.2950319
   Geiger FX, 2018, IEEE WORK CONF MIN S, P30, DOI 10.1145/3196398.3196460
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Hills M, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P454, DOI 10.1109/CSMR-WCRE.2014.6747217
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   Jang H, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P2557, DOI 10.1145/3319535.3363255
   Kohavi R., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1137
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   McMillan C, 2012, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2012.6227178
   Moreno L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P880, DOI 10.1109/ICSE.2015.98
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Nguyen P. T., 2021, **DATA OBJECT**, DOI DOI 10.5281/ZENODO.4415618
   Nguyen PT, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110460
   Nguyen PT, 2019, PROC INT CONF SOFTW, P1050, DOI 10.1109/ICSE.2019.00109
   Nguyen PT, 2017, LECT NOTES ARTIF INT, V10352, P481, DOI 10.1007/978-3-319-60438-1_47
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Parnas D. L., 1972, Information Processing 71 Proceedings of the IFIP Congress 1971 Volume 1, P339
   Ponzanelli L, 2017, PROC INT CONF SOFTW, P94, DOI 10.1109/ICSE.2017.17
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Raghothaman M, 2016, PROC INT CONF SOFTW, P357, DOI 10.1145/2884781.2884808
   Rahman MM, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P194, DOI 10.1109/CSMR-WCRE.2014.6747170
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Rigby PC, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P832, DOI 10.1109/ICSE.2013.6606629
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Ruiz I. J. M., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P113
   Sahavechaphan N, 2006, ACM SIGPLAN NOTICES, V41, P413, DOI 10.1145/1167515.1167508
   Saied MA, 2015, INT C PROGRAM COMPRE, P71, DOI 10.1109/ICPC.2015.16
   Saied MA, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P23, DOI 10.1109/SANER.2015.7081812
   Sanz B, 2012, CONSUM COMM NETWORK, P149, DOI 10.1109/CCNC.2012.6181075
   Schafer J. B., 2007, The Adaptive Web. Methods and Strategies of Web Personalization, P291
   Scoccia GL, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P45, DOI 10.1145/3197231.3197236
   Takuya Watanabe, 2011, P 3 INT WORKSH SEARC, P17, DOI [DOI 10.1145/1985429.1985434, 10.1145/1985429.1985434]
   Thummalapenta Suresh, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P327, DOI 10.1109/ASE.2008.43
   Thummalapenta S, 2010, EMPIR SOFTW ENG, V15, P1, DOI 10.1007/s10664-009-9108-x
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Uddin G, 2015, IEEE SOFTWARE, V32, P68, DOI 10.1109/MS.2014.80
   Vargas S, 2014, PROCEEDINGS OF THE 8TH ACM CONFERENCE ON RECOMMENDER SYSTEMS (RECSYS'14), P145, DOI 10.1145/2645710.2645744
   Viennot N., 2014, 2014 ACM INT C MEAS, P221, DOI DOI 10.1145/2637364.2592003
   Wang J, 2013, IEEE WORK CONF MIN S, P319, DOI 10.1109/MSR.2013.6624045
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wong TT, 2015, PATTERN RECOGN, V48, P2839, DOI 10.1016/j.patcog.2015.03.009
   Zhong H, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P885, DOI 10.1145/3180155.3182550
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
   Zhou SF, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1202, DOI 10.1109/ASE.2019.00137
NR 58
TC 21
Z9 21
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 19
PY 2021
VL 48
IS 7
BP 2417
EP 2438
DI 10.1109/TSE.2021.3059907
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5ZI
UT WOS:000825974400002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wang, H
   Chen, CY
   Xing, ZC
   Grundy, J
AF Wang, Han
   Chen, Chunyang
   Xing, Zhenchang
   Grundy, John
TI DiffTech: Differencing Similar Technologies From Crowd-Scale Comparison
   Discussions
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Libraries; Tools; Natural language processing; Aggregates; Task
   analysis; Tagging; Data mining; Comparing and differencing similar
   technology; stack overflow; natural language processing; NLP
ID SOFTWARE; DISTANCE
AB Developers use different technologies for many software development tasks. However, when faced with several technologies with comparable functionalities, it is not easy to select the most appropriate one, as trial and error comparisons among such technologies are time-consuming. Instead, developers can resort to expert articles, read official documents or ask questions in Q&A sites. However, it still remains difficult to get a comprehensive comparison as online information is often fragmented or contradictory. To overcome these limitations, we propose the DiffTech system that exploits crowdsourced discussions from Stack Overflow, and assists technology comparison with an informative summary of different aspects. We first build a large database of comparable technologies in software engineering by mining tags in Stack Overflow. We then locate comparative sentences about comparable technologies with natural language processing methods. We further mine prominent comparison aspects by clustering similar comparative sentences and representing each cluster with its keywords and aggregate the overall opinion towards the comparable technologies. Our evaluation demonstrates both the accuracy and usefulness of our model, and we have implemented our approach as a practical website for public use.
C1 [Wang, Han; Chen, Chunyang; Grundy, John] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Xing, Zhenchang] Australian Natl Univ, Coll Engn & Amp Comp Sci, Canberra, ACT 2600, Australia.
C3 Monash University; Australian National University
RP Chen, CY (corresponding author), Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
EM freddie.wanah@gmail.com; chunyang.chen@monash.edu;
   zhenchang.xing@anu.edu.au; john.grundy@monash.edu
RI wang, xueting/JPY-2782-2023; Grundy, John/I-6681-2012
OI Grundy, John/0000-0003-4928-7076; Chen, Chunyang/0000-0003-2011-9618;
   Wang, Han/0000-0001-7862-6677; Xing, Zhenchang/0000-0001-7663-1421
FU ARC Laureate Fellowship [FL190100035]
FX John Grundy was supported by ARC Laureate Fellowship FL190100035.
CR Abbasi Ahmed, 2008, ACM Transactions on Information Systems, V26, DOI 10.1145/1361684.1361685
   Adams K, 2006, ACM SIGPLAN NOTICES, V41, P2, DOI 10.1145/1168918.1168860
   Adhikari A., 2019, ARXIV 190408398
   Ahasanuzzaman M, 2020, EMPIR SOFTW ENG, V25, P1493, DOI 10.1007/s10664-019-09743-4
   Ahmed T, 2017, IEEE INT CONF AUTOM, P106, DOI 10.1109/ASE.2017.8115623
   [Anonymous], 2003, Alphabetical list of partofspeech tags used in the penn treebank project
   [Anonymous], 2018, ALTERNATIVETO CROWDS
   [Anonymous], 2014, STACK EXCHANGE DATA
   [Anonymous], 2017, MILLIONS QUERIES PER
   [Anonymous], 2013, CHOOSE RIGHT TECHNOL
   [Anonymous], 2019, DIFFTECH COMPARE SIM
   [Anonymous], 2017, MYSQL VERSUS POSTGRE
   [Anonymous], 2003, P 12 INT C WORLD WID, DOI DOI 10.1145/775152.775226
   [Anonymous], 2019, US
   [Anonymous], 2019, WEBSITE COULD BE HEL
   [Anonymous], 2019, BIDIRECTIONAL ENCODE
   [Anonymous], 2018, SIMILARTECH FIND ALT
   Bao LF, 2017, EMPIR SOFTW ENG, V22, P134, DOI 10.1007/s10664-015-9417-1
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Cao KB, 2021, PROC INT CONF SOFTW, P1273, DOI 10.1109/ICSE43902.2021.00116
   Chen CY, 2021, IEEE T SOFTWARE ENG, V47, P432, DOI 10.1109/TSE.2019.2896123
   Chen CY, 2020, PROC INT CONF SOFTW, P37, DOI 10.1145/3377812.3382140
   Chen CY, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962588
   Chen CY, 2019, EMPIR SOFTW ENG, V24, P1155, DOI 10.1007/s10664-018-9657-y
   Chen CY, 2016, PROC IEEE INT CONF S, P356, DOI 10.1109/ICSME.2016.17
   Chen CY, 2016, IEEE INT CONF AUTOM, P834, DOI 10.1145/2970276.2970290
   Chen CY, 2016, P INT COMP SOFTW APP, P83, DOI 10.1109/COMPSAC.2016.210
   Chen CY, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P338, DOI 10.1109/SANER.2016.21
   Chen GB, 2016, IEEE INT CONF AUTOM, P744, DOI 10.1145/2970276.2970317
   Chen N, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P305, DOI 10.1145/2684822.2685305
   Chen X, 2021, IEEE T SOFTWARE ENG, V47, P1960, DOI 10.1109/TSE.2019.2940439
   Cheng CL, 2017, 2017 12TH INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS AND KNOWLEDGE ENGINEERING (IEEE ISKE), DOI 10.1109/ULTSYM.2017.8091659
   Chunyang Chen, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274302
   Clark K., 2016, P 2016 C EMPIRICAL M, P2256, DOI DOI 10.18653/V1/D16-1245
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   de la Mora FL, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P37, DOI 10.1145/3183399.3183418
   Devlin J., 2018, BERT PRE TRAINING DE
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   FOWLKES EB, 1983, J AM STAT ASSOC, V78, P553, DOI 10.2307/2288117
   Ganapathibhotla M., 2008, COLING 2008 22 INT C, P241, DOI DOI 10.3115/1599081.1599112
   Gao S, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P411, DOI 10.1109/saner.2019.8667994
   Girvan M, 2002, P NATL ACAD SCI USA, V99, P7821, DOI 10.1073/pnas.122653799
   Gu XD, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3675
   Hartigan J. A., 1979, Applied Statistics, V28, P100, DOI 10.2307/2346830
   Huang Y, 2018, IEEE INT CONF AUTOM, P214, DOI 10.1145/3238147.3238208
   HUBERT L, 1985, J CLASSIF, V2, P193, DOI 10.1007/BF01908075
   Jiang ZZ, 2016, PHYSICA A, V463, P293, DOI 10.1016/j.physa.2016.07.050
   Jones StevenL., 2004, TRAFFIC SIMULATION S, V2217
   Jordan P. W., 1996, Industry
   Joulin A., 2017, P 15 C EUR CHAPT ASS, P427, DOI DOI 10.18653/V1/E17-2068
   Kusner MJ, 2015, PR MACH LEARN RES, V37, P957
   Li G, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1080, DOI 10.1145/2675133.2675155
   Lin B, 2019, PROC INT CONF SOFTW, P548, DOI 10.1109/ICSE.2019.00066
   Linares-V~asquez M., 2016, P IEEE 24 INT C PROG, P1
   Ling H, 2007, IEEE T PATTERN ANAL, V29, P840, DOI 10.1109/TPAMI.2007.1058
   Liu Yang, 2019, Fine-tune bert for extractive summarization
   Ma SY, 2021, IEEE T SOFTWARE ENG, V47, P2296, DOI 10.1109/TSE.2019.2946830
   McMillan C, 2012, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2012.6227178
   Michail A., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P463, DOI 10.1109/ICSE.1999.841036
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Mikolov T., 2013, INT C LEARNING REPRE, P1
   Nassif M, 2020, IEEE T SOFTWARE ENG, V46, P20, DOI 10.1109/TSE.2018.2836450
   Pele O, 2009, IEEE I CONF COMP VIS, P460, DOI 10.1109/ICCV.2009.5459199
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Rahman MM, 2018, IEEE WORK CONF MIN S, P465, DOI 10.1145/3196398.3196425
   Rosenberg A, 2007, P 2007 JOINT C EMP M, P410, DOI [10 . 7916 / D80V8N84, DOI 10.7916/D80V8N84]
   Simulink, 2018, US
   SPARCKJONES K, 1972, J DOC, V28, P11, DOI 10.1108/eb026526
   Su Fang-Hsiang, 2016, 2016 IEEE 24th International Conference on Program Comprehension (ICPC), P1, DOI 10.1109/ICPC.2016.7503720
   Sutton C, 2012, FOUND TRENDS MACH LE, V4, P267, DOI 10.1561/2200000013
   Teyton C, 2013, WORK CONF REVERSE EN, P192, DOI 10.1109/WCRE.2013.6671294
   Thung F, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P600, DOI 10.1109/ICSM.2012.6405331
   Nguyen TD, 2017, PROC INT CONF SOFTW, P438, DOI 10.1109/ICSE.2017.47
   Uddin G, 2017, IEEE INT CONF AUTOM, P978, DOI 10.1109/ASE.2017.8115715
   Varathan KD, 2017, J ASSOC INF SCI TECH, V68, P811, DOI 10.1002/asi.23716
   Vaswani A, 2017, ADV NEUR IN, V30
   Vinh NX, 2010, J MACH LEARN RES, V11, P2837
   Wang H, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1576, DOI 10.1145/3368089.3417931
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P800, DOI 10.1007/s10664-017-9533-1
   Wang X, 2019, EMPIR SOFTW ENG, V24, P3514, DOI 10.1007/s10664-019-09702-z
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Winer B., 1971, STAT PRINCIPLES EXPT, P196
   Xia X, 2013, IEEE WORK CONF MIN S, P287, DOI 10.1109/MSR.2013.6624040
   Ye DH, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P90, DOI 10.1109/SANER.2016.10
   Yuanchun Li, 2017, Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, V1, DOI 10.1145/3130935
   Zhang Y, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P13, DOI 10.1109/SANER.2017.7884605
   Zhu YK, 2015, IEEE I CONF COMP VIS, P19, DOI 10.1109/ICCV.2015.11
NR 88
TC 3
Z9 3
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 17
PY 2021
VL 48
IS 7
BP 2399
EP 2416
DI 10.1109/TSE.2021.3059885
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5YR
UT WOS:000825972700001
DA 2024-07-18
ER

PT J
AU Martins, LEG
   Gorschek, T
AF Martins, Luiz Eduardo G.
   Gorschek, Tony
TI Requirements Engineering for Safety-Critical Systems: An Interview Study
   with Industry Practitioners
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Safety; Companies; Requirements engineering; Software; Certification;
   Interviews; Unified modeling language; Requirements; specification;
   software and system safety; requirements engineering; safety critical
   systems; software engineering; SCS
ID SOFTWARE; DESIGN; VALIDATION; MODEL
AB We have conducted in-depth interviews with experienced practitioners in the Safety-Critical Systems (SCS) domain in order to investigate several aspects related to requirements specification and safety analysis for SCS. We interviewed 19 practitioners from eleven SCS companies in different domains with the intention of verifying which approaches they use day-to-day, and what their perceptions are in relation to the approaches used to elicit, analyze, specify and validate safety requirements. The aim of this study is to obtain an in-depth understanding of how requirements engineering is carried out in companies that develop SCS.
C1 [Martins, Luiz Eduardo G.] Univ Fed Sao Paulo, Inst Sci & Technol, Sao Jose Dos Campos 12231280, Brazil.
   [Gorschek, Tony] Blekinge Inst Technol, Sch Comp, Karlskrona 37179, Sweden.
C3 Universidade Federal de Sao Paulo (UNIFESP); Blekinge Institute
   Technology
RP Martins, LEG (corresponding author), Univ Fed Sao Paulo, Inst Sci & Technol, Sao Jose Dos Campos 12231280, Brazil.
EM legmartins@unifesp.br; tony.gorschek@bth.se
RI Martins, Luiz/AAL-7679-2020
FU Federal University of Sao Paulo (UNIFESP); Brazilian research agency
   CNPq -Conselho Nacional de Desenvolvimento Cientifico e Tecnologico
   [249059/2013-04]; Knowledge Foundation in Sweden [20140218]
FX This work was partially funded by the Federal University of Sao Paulo
   (UNIFESP), and the Brazilian research agency CNPq -Conselho Nacional de
   Desenvolvimento Cientifico e Tecnologico - under grant agreement no.
   249059/2013-04. The work is partially supported by a research grant for
   the ORION project (reference number 20140218) from The Knowledge
   Foundation in Sweden.
CR Abdulkhaleq A, 2015, PROCEDIA ENGINEER, V128, P2, DOI 10.1016/j.proeng.2015.11.498
   Abrial J. -R., 2006, 28th International Conference on Software Engineering Proceedings, P761, DOI 10.1145/1134285.1134406
   [Anonymous], MILSTD882C DOD US
   [Anonymous], 00801 RA STRUCT SOFT
   [Anonymous], 2015, THESIS
   [Anonymous], P IEEE ACM 40 INT C
   [Anonymous], HARVARD BUS REV
   [Anonymous], HARVARD BUS REV
   [Anonymous], US NUCL REGULATORY C
   Aurum A., 2005, Engineering and Managing Software Requirements
   Beatty J, 2013, S VIS LANG HUM CEN C, P364, DOI 10.1109/RE.2013.6636753
   Beckers K, 2014, LECT NOTES COMPUT SC, V8666, P65, DOI 10.1007/978-3-319-10506-2_5
   Braun P, 2014, COMPUT SCI-RES DEV, V29, P21, DOI 10.1007/s00450-010-0136-y
   Chen F, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P289, DOI [10.1109/REW.2016.34, 10.1109/REW.2016.054]
   Chen Z, 2009, DEPEND: 2009 SECOND INTERNATIONAL CONFERENCE ON DEPENDABILITY, P81, DOI 10.1109/DEPEND.2009.18
   Duarte AMD, 2016, INT REQUIR ENG CONF, P236, DOI 10.1109/RE.2016.32
   Feldmann S, 2014, IEEE INTL CONF IND I, P726, DOI 10.1109/INDIN.2014.6945603
   Fernández DM, 2015, INFORM SOFTWARE TECH, V57, P616, DOI 10.1016/j.infsof.2014.05.008
   Ferrari A, 2016, INT REQUIR ENG CONF, P56, DOI 10.1109/RE.2016.25
   Ferrari A, 2015, INT REQUIR ENG CONF, P26, DOI 10.1109/RE.2015.7320405
   Fricker S, 2008, 2008 SECOND INTERNATIONAL WORKSHOP ON SOFTWARE PRODUCT MANAGEMENT, P29
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Gorschek T, 2014, J SYST SOFTWARE, V95, P176, DOI 10.1016/j.jss.2014.03.082
   HALL A, 1990, IEEE SOFTWARE, V7, P11, DOI 10.1109/52.57887
   Heitmeyer C.L., 2004, ELECTRON NOTES THEOR, V108, P11
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   Ivarsson M, 2009, REQUIR ENG, V14, P155, DOI 10.1007/s00766-009-0080-1
   Jones, 2014, P FUT SOFTW ENG, P182, DOI DOI 10.1145/2593882.2593895
   Komssi M., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P283, DOI 10.1109/RE.2010.40
   Leveson N.G., 1995, Safeware: System Safety and Computers
   Leveson NG, 2011, ENG SYST, P1
   Liu L, 2010, J NEAR INFRARED SPEC, V18, P317, DOI 10.1255/jnirs.898
   Martins LEG, 2016, INFORM SOFTWARE TECH, V75, P71, DOI 10.1016/j.infsof.2016.04.002
   Mikulak R.J., 2008, The Basics of FMEA
   Opdenakker R., 2006, FORUM QUAL SOZIALFOR, V7, P11, DOI [10.17169/fqs-7.4.175, DOI 10.17169/FQS-7.4.175]
   Ott D., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P291, DOI 10.1109/RE.2012.6345817
   Panesar-Walawege Rajwinder Kaur, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P335, DOI 10.1109/ICST.2010.12
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Popov G., 2016, Risk Assessment: A Practical Guide to Assessing Operational Risks
   Robson C., 2002, Real world research
   Ruiz A, 2017, RELIAB ENG SYST SAFE, V158, P153, DOI 10.1016/j.ress.2016.08.017
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sadraei E, 2007, REQUIR ENG, V12, P145, DOI 10.1007/s00766-007-0042-4
   Soares H.A., 2015, 2015 LAT AM COMP C C, P1, DOI DOI 10.1109/CLEI.2015.7360001
   Sujan MA, 2016, SAFETY SCI, V84, P181, DOI 10.1016/j.ssci.2015.12.021
   Svensson RB, 2012, IEEE T SOFTWARE ENG, V38, P923, DOI 10.1109/TSE.2011.47
   Thurimella A. K., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P313, DOI 10.1109/SPLC.2011.17
   TURBAN E., 2006, ELECT COMMERCE MANAG
   Wu J, 2013, INT CONF QUAL SOFTW, P55, DOI 10.1109/QSIC.2013.41
   Zheng X, 2017, IEEE SYST J, V11, P2614, DOI 10.1109/JSYST.2015.2496293
   Zhou JL, 2014, INT REQUIR ENG CONF, P428, DOI 10.1109/RE.2014.6912294
NR 51
TC 15
Z9 15
U1 2
U2 24
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2020
VL 46
IS 4
BP 346
EP 361
DI 10.1109/TSE.2018.2854716
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA LI5MK
UT WOS:000529529700001
DA 2024-07-18
ER

PT J
AU Thomé, J
   Shar, LK
   Bianculli, D
   Briand, L
AF Thome, Julian
   Shar, Lwin Khin
   Bianculli, Domenico
   Briand, Lionel
TI An Integrated Approach for Effective Injection Vulnerability Analysis of
   Web Applications Through Security Slicing and Hybrid Constraint Solving
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Security; Benchmark testing; Tools; Explosions; Java; Static analysis;
   Reliability; Vulnerability detection; constraint solving; static
   analysis; search-based software engineering
ID STATIC ANALYSIS
AB Malicious users can attack Web applications by exploiting injection vulnerabilities in the source code. This work addresses the challenge of detecting injection vulnerabilities in the server-side code of Java Web applications in a scalable and effective way. We propose an integrated approach that seamlessly combines security slicing with hybrid constraint solving; the latter orchestrates automata-based solving with meta-heuristic search. We use static analysis to extract minimal program slices relevant to security from Web programs and to generate attack conditions. We then apply hybrid constraint solving to determine the satisfiability of attack conditions and thus detect vulnerabilities. The experimental results, using a benchmark comprising a set of diverse and representative Web applications/services as well as security benchmark applications, show that our approach (implemented in the JOACO tool) is significantly more effective at detecting injection vulnerabilities than state-of-the-art approaches, achieving 98 percent recall, without producing any false alarm. We also compared the constraint solving module of our approach with state-of-the-art constraint solvers, using six different benchmark suites; our approach correctly solved the highest number of constraints (665 out of 672), without producing any incorrect result, and was the one with the least number of time-out/failing cases. In both scenarios, the execution time was practically acceptable, given the offline nature of vulnerability detection.
C1 [Thome, Julian; Bianculli, Domenico; Briand, Lionel] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, 29 Ave JF Kennedy, L-1855 Luxembourg, Luxembourg.
   [Shar, Lwin Khin] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, L-4365 Esch Sur Alzette, Luxembourg.
   [Shar, Lwin Khin] Nanyang Technol Univ, Sch Comp Sci & Engn, Singapore 639798, Singapore.
C3 University of Luxembourg; University of Luxembourg; Nanyang
   Technological University
RP Thomé, J (corresponding author), Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, 29 Ave JF Kennedy, L-1855 Luxembourg, Luxembourg.
EM julian.thome@uni.lu; lkshar@ntu.edu.sg; domenico.bianculli@uni.lu;
   lionel.briand@uni.lu
RI Bianculli, Domenico/AAD-8981-2019
OI Bianculli, Domenico/0000-0002-4854-685X; Shar, Lwin
   Khin/0000-0001-5130-0407; Briand, Lionel/0000-0002-1393-1010
FU National Research Fund, Luxembourg [FNR/P10/03, INTER/DFG/14/11092585];
   AFR grant [FNR9132112]
FX We would like to thank Dr. Xiang Fu from Hofstra University, Hempstead
   for sharing the Sushi tool. This work is supported by the National
   Research Fund, Luxembourg FNR/P10/03, INTER/DFG/14/11092585, and the AFR
   grant FNR9132112.
CR Abdulla PA, 2015, LECT NOTES COMPUT SC, V9206, P462, DOI 10.1007/978-3-319-21690-4_29
   Alshraideh M, 2006, SOFTW TEST VERIF REL, V16, P175, DOI 10.1002/stvr.354
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2016, P 25 INT S SOFTWARE, DOI [DOI 10.1145/2931037, 10.1145/2931037.]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2011, BPMN 2 0 SPEC
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2005, USENIX SEC S
   [Anonymous], [No title captured]
   Antunes N, 2015, IEEE T SERV COMPUT, V8, P269, DOI 10.1109/TSC.2014.2310221
   Aquino A, 2017, PROC INT CONF SOFTW, P427, DOI 10.1109/ICSE.2017.46
   Arcuri Andrea, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P205, DOI 10.1109/ICST.2010.17
   Aydin A, 2015, LECT NOTES COMPUT SC, V9206, P255, DOI 10.1007/978-3-319-21690-4_15
   Balzarotti D, 2008, P IEEE S SECUR PRIV, P387, DOI 10.1109/SP.2008.22
   Berzish M., 2017, CORR
   Bisht P, 2008, LECT NOTES COMPUT SC, V5137, P23, DOI 10.1007/978-3-540-70542-0_2
   Brennan T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P535, DOI 10.1145/3106237.3106303
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Christensen AS, 2003, LECT NOTES COMPUT SC, V2694, P1
   CROES GA, 1958, OPER RES, V6, P791, DOI 10.1287/opre.6.6.791
   Dechter R., 2003, Constraint Processing
   Dinges P, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P425, DOI 10.1145/2635868.2635889
   Dorigo M., 2011, Encyclopedia of machine learning, P36, DOI [10.1007/978-0-387-30164-8_22, DOI 10.1007/978-0-387-30164-8]
   Dorigo M., 2006, TRIRIDIA2006010
   Fraser G, 2015, J SYST SOFTWARE, V103, P311, DOI 10.1016/j.jss.2014.05.032
   Ghosh I, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P992, DOI 10.1109/ICSE.2013.6606649
   Greenberg HJ, 1996, ANN MATH ARTIF INTEL, V17, P37, DOI 10.1007/BF02284624
   Gregoire E., 2013, P IJCAI 13, P552
   Halfond WGJ, 2008, IEEE T SOFTWARE ENG, V34, P65, DOI 10.1109/TSE.2007.70748
   Hammer C., 2009, THESIS
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Hickey T, 2001, J ACM, V48, P1038, DOI 10.1145/502102.502106
   Hooimeijer P, 2012, AUTOMAT SOFTW ENG, V19, P531, DOI 10.1007/s10515-012-0111-x
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Huang W, 2014, LECT NOTES COMPUT SC, V8411, P140
   Jovanovic N, 2006, P IEEE S SECUR PRIV, P258, DOI 10.1109/SP.2006.29
   Kausler Scott., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, ASE '14, P259
   Kiezun A, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P105
   Kiezun A, 2009, PROC INT CONF SOFTW, P199, DOI 10.1109/ICSE.2009.5070521
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Lecoutre Christophe, 2009, Constraint Networks: Techniques and Algorithms
   Li D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P661, DOI 10.1145/2786805.2786879
   Li G, 2013, PROCEEDINGS OF 2ND CONFERENCE ON LOGISTICS, INFORMATICS AND SERVICE SCIENCE (LISS 2012), VOLS 1 AND 2, P19, DOI 10.1007/978-3-642-32054-5_5
   Liang TY, 2014, LECT NOTES COMPUT SC, V8559, P646, DOI 10.1007/978-3-319-08867-9_43
   LIN S, 1965, AT&T TECH J, V44, P2245, DOI 10.1002/j.1538-7305.1965.tb04146.x
   Liu Y, 2009, INT C PROGRAM COMPRE, P50, DOI 10.1109/ICPC.2009.5090027
   Luu L, 2014, ACM SIGPLAN NOTICES, V49, P565, DOI [10.1145/2666356.2594331, 10.1145/2594291.2594331]
   Pérez PM, 2011, COMM COM INF SC, V184, P148
   McMillan KL, 2005, THEOR COMPUT SCI, V345, P101, DOI 10.1016/j.tcs.2005.07.003
   McMinn P., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P141, DOI 10.1109/ICST.2012.94
   Trinh MT, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1232, DOI 10.1145/2660267.2660372
   Moller A, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2531921
   Moore R. E., 2009, INTERVAL, V110
   Muchnick S., 1997, ADV COMPILER DESIGN
   Navarro G, 2001, ACM COMPUT SURV, V33, P31, DOI 10.1145/375360.375365
   Poole D.L., 2010, ARTIF INTELL, DOI DOI 10.1017/9781108164085
   Qi DW, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522925
   Redelinghuys G, 2012, PROCEEDINGS OF THE SOUTH AFRICAN INSTITUTE FOR COMPUTER SCIENTISTS AND INFORMATION TECHNOLOGISTS CONFERENCE, P139
   Samuel M, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P587
   Saxena P, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P601
   Saxena P, 2010, P IEEE S SECUR PRIV, P513, DOI 10.1109/SP.2010.38
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Shannon D, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P13, DOI 10.1109/TAIC.PART.2007.34
   Stützle T, 2000, FUTURE GENER COMP SY, V16, P889, DOI 10.1016/S0167-739X(00)00043-1
   Tateishi T, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522926
   Thomé J, 2018, J SYST SOFTWARE, V137, P766, DOI 10.1016/j.jss.2017.02.040
   Thome J, 2017, PROC INT CONF SOFTW, P198, DOI 10.1109/ICSE.2017.26
   Tripp O, 2013, LECT NOTES COMPUT SC, V7793, P210, DOI 10.1007/978-3-642-37057-1_15
   Tripp O, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P87, DOI 10.1145/1542476.1542486
   Wassermann G, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P32, DOI 10.1145/1250734.1250739
   Wassermann G, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P171, DOI 10.1145/1368088.1368112
   Xie J, 2011, 27TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2011), P267
   Yu F, 2014, FORM METHOD SYST DES, V44, P44, DOI 10.1007/s10703-013-0189-1
   Yu F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P251, DOI 10.1145/1985793.1985828
   Yu F, 2010, 2011 INTERNATIONAL CONFERENCE ON COMPUTERS, COMMUNICATIONS, CONTROL AND AUTOMATION (CCCA 2011), VOL III, P154
   Zhang JP, 2000, 2000 INTERNATIONAL CONFERENCE ON IMAGE PROCESSING, VOL III, PROCEEDINGS, P472, DOI 10.1109/ICIP.2000.899445
   Zheng YH, 2015, LECT NOTES COMPUT SC, V9206, P235, DOI 10.1007/978-3-319-21690-4_14
   Zheng YH, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P652, DOI 10.1109/ICSE.2013.6606611
NR 94
TC 12
Z9 13
U1 1
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2020
VL 46
IS 2
BP 163
EP 195
DI 10.1109/TSE.2018.2844343
PG 33
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA KU7YW
UT WOS:000519930000003
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Canfora, G
   Martinelli, F
   Mercaldo, F
   Nardone, V
   Santone, A
   Visaggio, CA
AF Canfora, Gerardo
   Martinelli, Fabio
   Mercaldo, Francesco
   Nardone, Vittoria
   Santone, Antonella
   Visaggio, Corrado Aaron
TI LEILA: Formal Tool for Identifying Mobile Malicious Behaviour
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Malware; Androids; Humanoid robots; Payloads; Computer security; Model
   checking; Automata; Security; malware; model checking; testing; Android
ID MALWARE DETECTION; CODE
AB With the increasing diffusion of mobile technologies, nowadays mobile devices represent an irreplaceable tool to perform several operations, from posting a status on a social network to transfer money between bank accounts. As a consequence, mobile devices store a huge amount of private and sensitive information and this is the reason why attackers are developing very sophisticated techniques to extort data and money from our devices. This paper presents the design and the implementation of LEILA (formaL tool for idEntifying mobIle maLicious behAviour), a tool targeted at Android malware families detection. LEILA is based on a novel approach that exploits model checking to analyse and verify the Java Bytecode that is produced when the source code is compiled. After a thorough description of the method used for Android malware families detection, we report the experiments we have conducted using LEILA. The experiments demonstrated that the tool is effective in detecting malicious behaviour and, especially, in localizing the payload within the code: we evaluated real-world malware belonging to several widespread families obtaining an accuracy ranging between 0.97 and 1.
C1 [Canfora, Gerardo; Nardone, Vittoria; Visaggio, Corrado Aaron] Univ Sannio, Dept Engn, I-82100 Benevento, BN, Italy.
   [Martinelli, Fabio; Mercaldo, Francesco] Natl Res Council Italy CNR, Inst Informat & Telemat, I-00185 Pisa, Italy.
   [Santone, Antonella] Univ Molise, Dept Biosci & Terr, I-86100 Pesche Is, CB, Italy.
C3 University of Sannio; Consiglio Nazionale delle Ricerche (CNR); Istituto
   di Informatica e Telematica (IIT-CNR); University of Molise
RP Mercaldo, F (corresponding author), Natl Res Council Italy CNR, Inst Informat & Telemat, I-00185 Pisa, Italy.
EM canfora@unisannio.it; fabio.martinelli@iit.cnr.it;
   francesco.mercaldo@iit.cnr.it; vnardone@unisannio.it;
   antonella.santone@unimol.it; visaggio@unisannio.it
RI Baldissera, Annalisa/AHD-6334-2022
OI Canfora, Gerardo/0000-0003-0049-1279
FU H2020 EU funded project NeCS [675320]; H2020 EU funded project C3ISP
   [700294]
FX This work was partially supported by the H2020 EU funded project NeCS
   [GA #675320], by the H2020 EU funded project C3ISP [GA #700294]. The
   Authors thank Maurizio Viscusi and Raffaele Sanzari for helping in the
   LEILA implementation.
CR Aafer Y, 2013, L N INST COMP SCI SO, V127, P86
   Alam S, 2016, INT CONF DIGIT INFO, P79, DOI 10.1109/DICTAP.2016.7544005
   Andersen JR, 2015, LECT NOTES COMPUT SC, V9399, P573, DOI 10.1007/978-3-319-25150-9_33
   Andronio Nicolo, 2015, Research in Attacks, Intrusions and Defenses. 18th International Symposium, RAID 2015. Proceedings: LNCS 9404, P382, DOI 10.1007/978-3-319-26362-5_18
   [Anonymous], 2001, MODEL CHECKING
   Arp D., 2014, P 20 ANN NETW DISTR, P1
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Bai GD, 2018, IEEE T SOFTWARE ENG, V44, P595, DOI 10.1109/TSE.2017.2697848
   Barbuti R, 2005, FORM METHOD SYST DES, V26, P319, DOI 10.1007/s10703-005-1634-6
   Barbuti R, 1999, J COMPUT SYST SCI, V59, P537, DOI 10.1006/jcss.1999.1660
   Battista Pasquale, 2016, ICISSP 2016. 2nd International Conference on Information Systems Security and Privacy. Proceedings, P542
   Burguera I., 2011, P 1 ACM WORKSH SEC P, P15, DOI DOI 10.1145/2046614.2046619
   Canfora Gerardo, 2015, 2015 Mobile Systems Technologies Workshop (MST). Architecture, Technology Trends and Memory Solutions. Proceedings, P21, DOI 10.1109/MST.2015.8
   Canfora G, 2016, COMPUT SECUR, V61, P1, DOI 10.1016/j.cose.2016.04.009
   Chen S, 2016, ASIA CCS'16: PROCEEDINGS OF THE 11TH ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P377, DOI 10.1145/2897845.2897860
   Cimitile A, 2017, FME WORKS FORM, P24, DOI 10.1109/FormaliSE.2017.4
   Clarke EM, 2008, LECT NOTES COMPUT SC, V5000, P196
   Dash SK, 2016, 2016 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2016), P252, DOI 10.1109/SPW.2016.25
   De Francesco N, 2007, INFORM SCIENCES, V177, P299, DOI 10.1016/j.ins.2006.03.008
   Elish K. O., 2015, P IEEE MOB SEC TECHN, P1
   Enck W, 2014, ACM T COMPUT SYST, V32, DOI 10.1145/2619091
   Georgios Kambourakis C. K., 2017, DATA LEAKAGE MOBILE
   Jacob G, 2010, FIFTH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY: ARES 2010, PROCEEDINGS, P597, DOI 10.1109/ARES.2010.59
   Jiang X, 2013, P 8 ACM SIGSAC S INF, P329
   Kinder J, 2005, LECT NOTES COMPUT SC, V3548, P174
   Li L., 2016, PROC ISSTA, P318
   Li L, 2017, J COMPUT SCI TECH-CH, V32, P1108, DOI 10.1007/s11390-017-1786-z
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Li L, 2014, IEEE INT CONF TRUST, P388, DOI 10.1109/TrustCom.2014.50
   Meng GZ, 2016, ASIA CCS'16: PROCEEDINGS OF THE 11TH ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P365, DOI 10.1145/2897845.2897856
   Mercaldo F, 2016, FME WORKS FORM, P22, DOI [10.1145/2897667.2897673, 10.1109/FormaliSE.2016.012]
   Mercaldo F, 2016, PROCEEDINGS OF 2016 11TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, (ARES 2016), P628, DOI 10.1109/ARES.2016.35
   Mercaldo F, 2016, LECT NOTES COMPUT SC, V9688, P212, DOI 10.1007/978-3-319-39570-8_14
   Milner R., 1989, Communication and concurrency
   Nishani L., 2015, AUTOMATED ENTERPRISE, P1
   Nix R, 2017, IEEE IJCNN, P1871, DOI 10.1109/IJCNN.2017.7966078
   Octeau Damien, 2013, P 22 USENIX C SEC SE, P543
   Rastogi V, 2014, IEEE T INF FOREN SEC, V9, P99, DOI 10.1109/TIFS.2013.2290431
   Saracino A, 2018, IEEE T DEPEND SECURE, V15, P83, DOI 10.1109/TDSC.2016.2536605
   Schrittwieser S, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2886012
   Song F., 2001, P INT S FORM METH, P418
   Song F., 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, P607
   Song S, 2014, MATH PROBL ENG, V2014, DOI 10.1155/2014/860216
   Spreitzenbarth M., 2013, P 28 ANN ACM S APPL, DOI [DOI 10.1145/2480362.2480701, 10.1145/2480362.2480701]
   Stirling Colin, 1989, P CONC THEOR LANG AR, P2
   Suarez-Tangil G, 2017, PROCEEDINGS OF THE SEVENTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY (CODASPY'17), P309, DOI 10.1145/3029806.3029825
   Ting Z, 2017, 2017 2ND INTERNATIONAL CONFERENCE ON ROBOTICS AND AUTOMATION ENGINEERING (ICRAE), P254, DOI 10.1109/ICRAE.2017.8291390
   Wei FG, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1329, DOI 10.1145/2660267.2660357
   Xu K, 2016, IEEE T INF FOREN SEC, V11, P1252, DOI 10.1109/TIFS.2016.2523912
   You I., 2010, P 2010 INT C BROADB, P297, DOI DOI 10.1109/BWCCA.2010.85
   Zheng XJ, 2012, IEEE INT CONF NANO, P82, DOI 10.1109/NANOMED.2012.6509114
   Zhou YJ, 2012, P IEEE S SECUR PRIV, P95, DOI 10.1109/SP.2012.16
NR 52
TC 25
Z9 25
U1 1
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2019
VL 45
IS 12
BP 1230
EP 1252
DI 10.1109/TSE.2018.2834344
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA JW0NQ
UT WOS:000502756700004
DA 2024-07-18
ER

PT J
AU LaToza, TD
   Di Lecce, A
   Ricci, F
   Ben Towne, W
   van der Hoek, A
AF LaToza, Thomas D.
   Di Lecce, Arturo
   Ricci, Fabio
   Ben Towne, W.
   van der Hoek, Andre
TI Microtask Programming
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Programming; Task analysis; Crowdsourcing; Electronic mail; Programming
   environments; Open source software; Programming environments; management
ID SOFTWARE; NEWCOMERS; CROWD
AB Traditional forms of Crowdsourcing such as open source software development harness crowd contributions to democratize the creation of software. However, potential contributors must first overcome joining barriers forcing casually committed contributors to spend days or weeks onboarding and thereby reducing participation. To more effectively harness potential contributions from the crowd, we propose a method for programming in which work occurs entirely through microtasks, offering contributors short, self-contained tasks such as implementing part of a function or updating a call site invoking a function to match a change made to the function. In microtask programming, microtasks involve changes to a single artifact, are automatically generated as necessary by the system, and nurture quality through iteration. A study examining the feasibility of microtask programming to create small programs found that developers were able to complete 1008 microtasks, onboard and submit their first microtask in less than 15 minutes, complete all types of microtasks in less than 5 minutes on average, and create 490 lines of code and 149 unit tests. The results demonstrate the potential feasibility as well as revealing a number of important challenges to address to successfully scale microtask programming to larger and more complex programs.
C1 [LaToza, Thomas D.] George Mason Univ, Dept Comp Sci, 4400 Univ Dr,MS 4A5, Fairfax, VA 22030 USA.
   [Di Lecce, Arturo] Cuebiq Srl, Corso Porta Romana 68, I-20122 Milan, Italy.
   [Ricci, Fabio] Bosch Rexroth, I-20063 Milan, Italy.
   [Ben Towne, W.] Carnegie Mellon Univ, Sch Comp Sci, Inst Software Res, 5000 Forbes Ave, Pittsburgh, PA 15213 USA.
   [van der Hoek, Andre] Univ Calif Irvine, Dept Informat, Donald Bren Sch Informat & Comp Sci, 5029 Donald Brett Hall, Irvine, CA 92697 USA.
C3 George Mason University; Carnegie Mellon University; University of
   California System; University of California Irvine
RP LaToza, TD (corresponding author), George Mason Univ, Dept Comp Sci, 4400 Univ Dr,MS 4A5, Fairfax, VA 22030 USA.
EM tlatoza@gmu.edu; arturodilecce@gmail.com; f.ricci89@gmail.com;
   wbt@cs.cmu.edu; andre@ics.uci.edu
OI LaToza, Thomas/0000-0002-9564-3337; van der Hoek,
   Andre/0000-0001-7917-932X
FU National Science Foundation [NSF IIS-1111446, IIS-1302522, CCF-1414197];
   Div Of Information & Intelligent Systems; Direct For Computer & Info
   Scie & Enginr [1302522] Funding Source: National Science Foundation
FX We thank Steven Morad, Patrick Nguyen, and Eric Chiquillo for their
   contributions to early versions of CrowdCode, we thank the participants
   in the study for their participation, and we thank Jonathan Bell for
   editorial assistance. This work was supported in part by the National
   Science Foundation under grants NSF IIS-1111446, IIS-1302522, and
   CCF-1414197.
CR [Anonymous], 2012, P 14 WORKSH FORM TEC
   [Anonymous], 2011, P 24 ANN ACM S USER, DOI DOI 10.1145/2047196.2047202
   [Anonymous], 2014, Proceedings of the 27th annual ACM Symposium on User Interface Software and Technology, DOI [DOI 10.1145/2642918, DOI 10.1145/2642918.2647409]
   [Anonymous], 2010, P 23ND ANN ACM S USE, DOI DOI 10.1145/1866029.1866040
   [Anonymous], 2013, P SIGCHI C HUM FACT, DOI [10.1145/2470654.2470685, DOI 10.1145/2470654.2470685]
   [Anonymous], 2009, HERE COMES EVERYBODY, DOI DOI 10.14318/HAU7.1.008
   [Anonymous], 2011, P 19 ACM SIGSOFT S 1
   Benkler Y, 2006, J POLIT PHILOS, V14, P394, DOI 10.1111/j.1467-9760.2006.00235.x
   Bernstein Michael S., 2010, P 23ND ANN ACM S USE, P313, DOI 10.1145/1866029.1866078
   Chen Y, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P3192, DOI 10.1145/2858036.2858512
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   Dean Jeffrey, 2004, OSDI 04, P10
   Doan A, 2011, COMMUN ACM, V54, P86, DOI 10.1145/1924421.1924442
   Dolstra E, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P332, DOI 10.1109/ICST.2013.44
   Goldman AH, 2011, ROUTL PHILOS COMPAN, P155
   Goldman M, 2012, THESIS MIT
   Groen EC, 2017, IEEE SOFTWARE, V34, P44, DOI 10.1109/MS.2017.33
   Hartmann B, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1019
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Khatib F, 2011, P NATL ACAD SCI USA, V108, P18949, DOI 10.1073/pnas.1115898108
   Kittur Aniket, 2013, P 2013 C COMP SUPP C, P1301, DOI DOI 10.1145/2441776.2441923
   Kraut RE, 2011, BUILDING SUCCESSFUL ONLINE COMMUNITIES: EVIDENCE-BASED SOCIAL DESIGN, P1
   Kulkarni A, 2012, IEEE INTERNET COMPUT, V16, P28, DOI 10.1109/MIC.2012.72
   Lasecki WS, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P1925, DOI 10.1145/2702123.2702565
   LaToza TD, 2016, IEEE SOFTWARE, V33, P74, DOI 10.1109/MS.2016.12
   LaToza TD, 2015, PROCEEDINGS 2015 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P23, DOI 10.1109/VLHCC.2015.7357194
   LaToza TD, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P563, DOI 10.1109/ICSE.2015.194
   LaToza TD, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P551, DOI 10.1109/ICSE.2015.72
   LaToza TD, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P85, DOI 10.1109/CHASE.2013.6614737
   LaToza ThomasD., 2014, Proceedings of the 27th Annual ACM Symposium on User Interface Software and Technology, UIST '14, P43, DOI DOI 10.1145/2642918.2647349
   Lawrance J, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P1323
   Leicht N, 2017, IEEE SOFTWARE, V34, P62, DOI 10.1109/MS.2017.37
   Maalej W., 2009, P 24 ACM SIGPLAN C C, P981, DOI [10.1145/1639950.1640068, DOI 10.1145/1639950.1640068]
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   Mao K, 2017, J SYST SOFTWARE, V126, P57, DOI 10.1016/j.jss.2016.09.015
   Moffitt K, 2015, SECOND INTERNATIONAL WORKSHOP ON CROWDSOURCING IN SOFTWARE ENGINEERING CSI-SE 2015, P30, DOI 10.1109/CSI-SE.2015.13
   Mujumdar Dhawal, 2011, CHI 11 EXTENDED ABST, P1525, DOI [10.1145/1979742, DOI 10.1145/1979742]
   Murphy GC, 2005, LECT NOTES COMPUT SC, V3586, P33
   Nebeling Michael, 2012, Web Engineering. Proceedings 12th International Conference, ICWE 2012, P31, DOI 10.1007/978-3-642-31753-8_3
   Parnin C, 2006, INT C PROGRAM COMPRE, P13, DOI 10.1109/ICPC.2006.14
   Pastore F, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P342, DOI 10.1109/ICST.2013.13
   Steinmacher I, 2015, INFORM SOFTWARE TECH, V59, P67, DOI 10.1016/j.infsof.2014.11.001
   Stol KJ, 2017, IEEE SOFTWARE, V34, P30, DOI 10.1109/MS.2017.52
   Stol KJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P187, DOI 10.1145/2568225.2568249
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   Watson Christopher, 2012, Advances in Web-Based Learning - ICWL 2012. Proceedings of the 11th International Conference, P228, DOI 10.1007/978-3-642-33642-3_25
   Weidema ERQ, 2016, 2016 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON CROWDSOURCING IN SOFTWARE ENGINEERING (CSI-SE), P41, DOI [10.1145/2897659.2897664, 10.1109/CSI-SE.2016.015]
   Yao CL, 2012, 2011 INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND NETWORK TECHNOLOGY (ICCSNT), VOLS 1-4, P1259
   Zanatta AL, 2018, SBES'18: PROCEEDINGS OF THE XXXII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P5, DOI 10.1109/MS.2017.32
NR 49
TC 11
Z9 11
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2019
VL 45
IS 11
BP 1106
EP 1124
DI 10.1109/TSE.2018.2823327
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA JO3UP
UT WOS:000497506400003
OA hybrid
DA 2024-07-18
ER

PT J
AU Palma, F
   Moha, N
   Guéhéneuc, YG
AF Palma, Francis
   Moha, Naouel
   Gueheneuc, Yann-Gael
TI UniDoSA: The Unified Specification and Detection of Service Antipatterns
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Antipatterns; service-based systems; REST; SCA; SOAP; web services;
   specification; detection; quality of service; design; software
   maintenance and evolution
AB Service-based Systems (SBSs) are developed on top of diverse Service-Oriented Architecture (SOA) technologies or architectural styles. Like any other complex systems, SBSs face both functional and non-functional changes at the design or implementation-level. Such changes may degrade the design quality and quality of service (QoS) of the services in SBSs by introducing poor solutions-service antipatterns. The presence of service antipatterns in SBSs may hinder the future maintenance and evolution of SBSs. Assessing the quality of design and QoS of SBSs through the detection of service antipatterns may ease their maintenance and evolution. However, the current literature lacks a unified approach for modelling and evaluating the design of SBSs in term of design quality and QoS. To address this lack, this paper presents a meta-model unifying the three main service technologies: REST, SCA, and SOAP. Using the meta-model, it describes a unified approach, UniDoSA (Unified Specification and Detection of Service Antipatterns), supported by a framework, SOFA (Service Oriented Framework for Antipatterns), for modelling and evaluating the design quality and QoS of SBSs. We apply and validate UniDoSA on: (1) 18 RESTful APIs, (2) two SCA systems with more than 150 services, and (3) more than 120 SOAP Web services. With a high precision and recall, the detection results provide evidence of the presence of service antipatterns in SBSs, which calls for future studies of their impact on QoS.
C1 [Palma, Francis] Linnaeus Univ, Dept Comp Sci & Media Technol, S-39182 Kalmar, Sweden.
   [Moha, Naouel] Univ Quebec Montreal, Dept Comp Sci, Montreal, PQ H3C 3P8, Canada.
   [Gueheneuc, Yann-Gael] Polytech Montreal, Dept Comp & Software Engn, Montreal, PQ H3C 3A7, Canada.
C3 Linnaeus University; University of Quebec; University of Quebec
   Montreal; Universite de Montreal; Polytechnique Montreal
RP Palma, F (corresponding author), Linnaeus Univ, Dept Comp Sci & Media Technol, S-39182 Kalmar, Sweden.
EM francispalmaphd@gmail.com; moha.naouel@uqam.ca;
   yann-gael.gueheneuc@polymtl.ca
RI Palma, Francis/HPC-9574-2023
FU NSERC; Canada Chairs; FRQ-NT
FX The authors are thankful to Dr. Wei Wu for his valuable insights and
   comments on this paper. We would like to thank Moustapha Boulgoudan from
   University of Quebec in Montreal, Canada and Gaetan Francois from
   Polytech Montpellier, France for their help with the implementation of
   the online antipattern detection tool. This work was partly supported by
   NSERC, Canada Chairs, and FRQ-NT research grants.
CR Abid W. B., 2011, 2011 Seventh International Conference on Semantics Knowledge and Grid, P191, DOI 10.1109/SKG.2011.36
   Alonso G., 2000, WEB SERVICES CONCEPT
   Anchuri Pranay., 2014, Proceedings of the 23rd ACM International Conference on Conference on Information and Knowledge Management, P1749
   [Anonymous], 2008, P INT C WWW BEIJ CHI, DOI DOI 10.1145/1367497.1367606
   [Anonymous], 2005, Web Services Platform Architecture: SOAP, WSDL, WS-Policy, WS-Addressing, WS-BPEL, WS-Reliable Messaging, and More
   [Anonymous], 2000, ARCHITECTURAL STYLES
   Brabra H, 2016, LECT NOTES COMPUT SC, V9936, P202, DOI 10.1007/978-3-319-46295-0_13
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Budinsky FJ, 1996, IBM SYST J, V35, P151, DOI 10.1147/sj.352.0151
   Chambers J.M., 1983, Graphical Methods for Data Analysis
   Chappell David., 2007, Introducing SCA
   Cherbakov Luba., 2006, SOA Antipatterns: The Obstacles to the Adoption and Successful Realization of Service-Oriented Architecture
   Chinnici R., 2007, W3C WORKING DRAFT
   Consel C., 1998, LECT NOTES COMPUTER, V1490, P170
   Cortellessa Vittorio, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P290, DOI 10.1007/978-3-642-30982-3_9
   Cortellessa V, 2014, SOFTW SYST MODEL, V13, P391, DOI 10.1007/s10270-012-0246-z
   Czarnecki K, 2000, LECT NOTES COMPUT SC, V1766, P25
   Demange A, 2013, LECT NOTES COMPUT SC, V8274, P114, DOI 10.1007/978-3-642-45005-1_9
   Di Marco A, 2014, ELECTRON P THEOR COM, P77, DOI 10.4204/EPTCS.147.6
   Dudney B., 2003, J2EE_AntiPatterns
   EMF-Eclipse, 2010, ECL MOD FRAM EMF
   Erl T, 2005, SERVICE ORIENTED ARC
   Evdemon J., 2005, Principles of Service Design: Service Patterns and Anti-Patterns
   FraSCAti, 2013, HOM AUT
   Gamma Erich., 1994, DESIGN PATTERNS
   Geiger L., 2005, em PROCEEDINGS OF THE FUJABA DAYS 2005, P57
   Huang W, 2000, IAHS-AISH P, P127
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Jones Steve., 2006, SOA Anti-patterns
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Koenig A., 1998, The Patterns Handbooks: Techniques, Strategies, and Applications, P383
   Král J, 2009, 2009 COMPUTATION WORLD: FUTURE COMPUTING, SERVICE COMPUTATION, COGNITIVE, ADAPTIVE, CONTENT, PATTERNS, P271, DOI 10.1109/ComputationWorld.2009.80
   Kral Jaroslav., 2008, Proceedings of the International Conference on Software Engineering Advances, V2, P160
   Kral Jaroslav., 2007, ICSEA 07, P29
   Rodriguez JM, 2013, SOFTWARE PRACT EXPER, V43, P613, DOI 10.1002/spe.2123
   Rodriguez JM, 2010, IFIP ADV INF COMM TE, V341, P139
   Rodriguez JM, 2010, SCI COMPUT PROGRAM, V75, P1001, DOI 10.1016/j.scico.2010.01.002
   Masse Mark., 2012, REST API Design Rulebook
   Mateos C, 2011, INT J WEB GRID SERV, V7, P357, DOI 10.1504/IJWGS.2011.044710
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Modi Tarak., 2006, SOA Management: SOA Antipatterns
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Nayrolles M, 2013, WORK CONF REVERSE EN, P321, DOI 10.1109/WCRE.2013.6671307
   Ouni A, 2017, IEEE T SERV COMPUT, V10, P603, DOI 10.1109/TSC.2015.2502595
   Ouni A, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1351, DOI 10.1145/2739480.2754724
   Palma F., 2018, TECHNICAL REPORT UNI
   Palma F, 2014, LECT NOTES COMPUT SC, V8627, P58, DOI 10.1007/978-3-319-09970-5_6
   Palma F, 2013, INT J COOP INF SYST, V22, DOI 10.1142/S0218843013410049
   Palma FB, 2014, EUROPE-REV LIT MENS, P230
   Peiris M., 2014, ACM SIGSOFT Softw. Eng. Notes, V39, P1
   Perepletchikov M, 2010, IEEE T SERV COMPUT, V3, P89, DOI 10.1109/TSC.2010.23
   Petrillo F, 2016, LECT NOTES COMPUT SC, V9936, P157, DOI 10.1007/978-3-319-46295-0_10
   Prieto-Diaz R., 1990, SIGSOFT Software Engineering Notes, V15, P47, DOI 10.1145/382296.382703
   Richardson L., 2010, RICHARDSON MATURITY
   Rodríguez C, 2016, LECT NOTES COMPUT SC, V9671, P21, DOI 10.1007/978-3-319-38791-8_2
   Salehie M, 2006, INT C PROGRAM COMPRE, P159, DOI 10.1109/ICPC.2006.6
   Sciamma David., 2013, Ecore Tools
   Seinturier L, 2012, SOFTWARE PRACT EXPER, V42, P559, DOI 10.1002/spe.1077
   Smith Connie U., 2002, International Computer Measurement Group Conference
   Stoianov Alecsandar, 2010, IEEE International Joint Conference on Computational Cybernetics and Technical Informatics (ICCC-CONTI 2010). IEEE 8th International Conference on Computational Cybernetics and 9th International Conference on Technical Informatics, P253, DOI 10.1109/ICCCYB.2010.5491288
   Tilkov S., 2008, RESTFUL DESIGN INTRO
   Tilkov Stefan., 2008, REST Anti-Patterns
   Torkamani Mohammad Ali., 2014, International Journal of Electrical and Computer Engineering (IJECE), V4, P16, DOI DOI 10.11591/ijece.v4i1.4097
   Tripathi Deepali, 2014, International Journal of Computer Theory and Engineering, V6, P20, DOI 10.7763/IJCTE.2014.V6.829
   Valverde Francisco., 2009, V Jornadas Cientifico-Tecnicas en Servicios Web y SOA, JSWEB, P243
   Wang HZ, 2016, LECT NOTES COMPUT SC, V9936, P352, DOI 10.1007/978-3-319-46295-0_22
   Zheng YY, 2006, INT CONF QUAL SOFTW, P74
NR 67
TC 11
Z9 12
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2019
VL 45
IS 10
BP 1024
EP 1053
DI 10.1109/TSE.2018.2819180
PG 30
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA JV1FR
UT WOS:000502113300005
DA 2024-07-18
ER

PT J
AU Maldonado, ED
   Shihab, E
   Tsantalis, N
AF Maldonado, Everton da Silva
   Shihab, Emad
   Tsantalis, Nikolaos
TI Using Natural Language Processing to Automatically Detect Self-Admitted
   Technical Debt
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Technical debt; source code comments; natural language processing;
   empirical study
ID DEFECT REPORTS; IDENTIFICATION; REQUIREMENTS; COEFFICIENT
AB The metaphor of technical debt was introduced to express the trade off between productivity and quality, i.e., when developers take shortcuts or perform quick hacks. More recently, our work has shown that it is possible to detect technical debt using source code comments (i.e., self-admitted technical debt), and that the most common types of self-admitted technical debt are design and requirement debt. However, all approaches thus far heavily depend on the manual classification of source code comments. In this paper, we present an approach to automatically identify design and requirement self-admitted technical debt using Natural Language Processing (NLP). We study 10 open source projects: Ant, ArgoUML, Columba, EMF, Hibernate, JEdit, JFreeChart, JMeter, JRuby and SQuirrel SQL and find that 1) we are able to accurately identify self-admitted technical debt, significantly outperforming the current state-of-the-art based on fixed keywords and phrases; 2) words related to sloppy code or mediocre source code quality are the best indicators of design debt, whereas words related to the need to complete a partially implemented requirement in the future are the best indicators of requirement debt; and 3) we can achieve 90 percent of the best classification performance, using as little as 23 percent of the comments for both design and requirement self-admitted technical debt, and 80 percent of the best performance, using as little as 9 and 5 percent of the comments for design and requirement self-admitted technical debt, respectively. The last finding shows that the proposed approach can achieve a good accuracy even with a relatively small training dataset.
C1 [Maldonado, Everton da Silva; Shihab, Emad] Concordia Univ, Dept Comp Sci & Software Engn, Data Driven Anal Software DAS Lab, Montreal, PQ H4B 1R6, Canada.
   [Tsantalis, Nikolaos] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H4B 1R6, Canada.
C3 Concordia University - Canada; Concordia University - Canada
RP Maldonado, ED (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Data Driven Anal Software DAS Lab, Montreal, PQ H4B 1R6, Canada.
EM e_silvam@encs.concordia.ca; eshihab@encs.concordia.ca;
   tsantalis@encs.concordia.ca
RI Tsantalis, Nikolaos/AAR-7845-2020
OI Tsantalis, Nikolaos/0000-0003-2508-3845; Shihab,
   Emad/0000-0003-1285-9878
CR Ali K, 2012, LECT NOTES COMPUT SC, V7313, P688, DOI 10.1007/978-3-642-31057-7_30
   Alves Nicolli S. R., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P1, DOI 10.1109/MTD.2014.9
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   [Anonymous], SIGPLAN OOPS MESS, DOI [10.1145/157710.157715, DOI 10.1145/157710.157715]
   [Anonymous], 2003, P C N AM CHAPT ASS C
   [Anonymous], 2010, 2010 IEEE International Conference on Software Maintenance, DOI [10.1109/ICSM.2010.5609564, DOI 10.1109/ICSM.2010.5609564]
   [Anonymous], P INT C NEUR INF PRO
   [Anonymous], P C SOFTW MAINT REEN
   Banko M, 2001, 39TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P26, DOI 10.3115/1073012.1073017
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   Berry D., 2012, CASE DUMB REQUIREMEN
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Canfora G., 2005, P 11 IEEE IT S SOFTW, P21
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Farias MAD, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P25, DOI 10.1109/MTD.2015.7332621
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Fleiss J., 2003, STAT METHODS RATES P, P598, DOI DOI 10.1002/0471445428.CH18
   FLEISS JL, 1973, EDUC PSYCHOL MEAS, V33, P613, DOI 10.1177/001316447303300309
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Fontana F. A., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P15, DOI 10.1109/MTD.2012.6225993
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2015, INT WORKS EMERG TREN, P44, DOI 10.1109/WETSoM.2015.14
   Fontana FA, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P609, DOI 10.1109/SANER.2016.84
   FORMAN G, 2004, PROC 8 EUR CONF, V3202, P161
   Fowler Martin, 2009, Technical debt quadrant, 2009
   Graf J, 2010, IEEE INT WORK C SO, P105, DOI 10.1109/SCAM.2010.9
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hayes JH, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.156
   Kruchten Philippe, 2013, ACM SIGSOFT Software Engineering Notes, V38, P51
   Lim E, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.130
   Maldonado E., 2016, REPLICATION PACKAGE
   Maldonado ED, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P9, DOI 10.1109/MTD.2015.7332619
   Malik H, 2008, PROC IEEE INT CONF S, P167, DOI 10.1109/ICSM.2008.4658065
   Manning C. D., 2008, Introduction to Retrieval
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Marinescu R, 2012, IBM J RES DEV, V56, DOI 10.1147/JRD.2012.2204512
   Marinescu R, 2010, EUR CON SFTWR MTNCE, P274, DOI 10.1109/CSMR.2010.44
   Nord R. L., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P91, DOI 10.1109/WICSA-ECSA.212.17
   Oliveira P, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P254, DOI 10.1109/CSMR-WCRE.2014.6747177
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Sadowski C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P598, DOI 10.1109/ICSE.2015.76
   Seaman C, 2011, ADV COMPUT, V82, P25, DOI 10.1016/B978-0-12-385512-1.00002-5
   Shin Hwei Tan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P260, DOI 10.1109/ICST.2012.106
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   STOREY MA, 2008, P INT C SOFTW ENG, P251
   Tsantalis N, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P329
   Tsantalis N, 2015, IEEE T SOFTWARE ENG, V41, P1055, DOI 10.1109/TSE.2015.2448531
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Vassallo C, 2016, PROC IEEE INT CONF S, P519, DOI 10.1109/ICSME.2016.72
   Wehaibi S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P179, DOI 10.1109/SANER.2016.72
   Wheeler D.A., 2004, Sloc count user's guide
   Xiao L, 2016, PROC INT CONF SOFTW, P488, DOI 10.1145/2884781.2884822
   Yadla S, 2005, INNOV SYST SOFTW ENG, V1, P116, DOI 10.1007/s11334-005-0011-3
   Zazworka N., 2013, Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering, DOI DOI 10.1145/2460999.2461005.ASSOCIATIONFORCOMPUTINGMACHINERY
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
NR 57
TC 112
Z9 124
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2017
VL 43
IS 11
BP 1044
EP 1062
DI 10.1109/TSE.2017.2654244
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FM5XS
UT WOS:000415117000004
DA 2024-07-18
ER

PT J
AU Tang, EY
   Zhang, XY
   Müller, NT
   Chen, ZY
   Li, XD
AF Tang, Enyi
   Zhang, Xiangyu
   Mueller, Norbert Th.
   Chen, Zhenyu
   Li, Xuandong
TI Software Numerical Instability Detection and Diagnosis by Combining
   Stochastic and Infinite-Precision Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Numerical analysis; infinite-precision arithmetic; stochastic
   arithmetic; software testing
ID FLOATING-POINT; LIBRARY
AB Numerical instability is a well-known problem that may cause serious runtime failures. This paper discusses the reason of instability in software development process, and presents a toolchain that not only detects the potential instability in software, but also diagnoses the reason for such instability. We classify the reason of instability into two categories. When it is introduced by software requirements, we call the instability caused by problem. In this case, it cannot be avoided by improving software development, but requires inspecting the requirements, especially the underlying mathematical properties. Otherwise, we call the instability caused by practice. We design our toolchain as four loosely-coupled tools, which combine stochastic arithmetic with infinite-precision testing. Each tool in our toolchain can be configured with different strategies according to the properties of the analyzed software. We evaluate our toolchain on subjects from literature. The results show that it effectively detects and separates the instabilities caused by problems from others. We also conduct an evaluation on the latest version of GNU Scientific Library, and the toolchain finds a few real bugs in the well-maintained and widely deployed numerical library. With the help of our toolchain, we report the details and fixing advices to the GSL buglist.
C1 [Tang, Enyi; Chen, Zhenyu; Li, Xuandong] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.
   [Tang, Enyi; Chen, Zhenyu; Li, Xuandong] Nanjing Univ, Software Inst, Nanjing 210023, Jiangsu, Peoples R China.
   [Zhang, Xiangyu] Purdue Univ, Dept Comp Sci, 305 North Univ St, W Lafayette, IN 47907 USA.
   [Mueller, Norbert Th.] Univ Trier, Abt Informat, D-54286 Trier, Germany.
C3 Nanjing University; Nanjing University; Purdue University System; Purdue
   University; Universitat Trier
RP Tang, EY (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.; Tang, EY (corresponding author), Nanjing Univ, Software Inst, Nanjing 210023, Jiangsu, Peoples R China.
EM eytang@nju.edu.cn; xyzhang@cs.purdue.edu; mueller@uni-trier.de;
   zychen@nju.edu.cn; lxd@nju.edu.cn
RI Zhang, Xiangyu/H-9255-2013
OI Zhang, Xiangyu/0000-0003-0876-6783
FU National Basic Research Program of China (973 Program) [2014CB340702];
   National Natural Science Foundation of China [61402222, 61632015,
   61373013]; NSF(US) [1409668, 1320444, 1320306]
FX We would like to thank Xie Wang and Shixun Huang for their helpful
   discussions. This research is supported by National Basic Research
   Program of China (973 Program 2014CB340702), National Natural Science
   Foundation of China (Grant No. 61402222, 61632015 and 61373013), and
   NSF(US) Award (Grant No. 1409668, 1320444, and 1320306). Enyi Tang and
   Zhenyu Chen are the corresponding authors.
CR Anderson MJ, 2009, PR IEEE COMP DESIGN, P465, DOI 10.1109/ICCD.2009.5413114
   [Anonymous], 1974, INFORM PROCESSING 19
   [Anonymous], COMPTES RENDUS ACAD
   [Anonymous], 2014, GNU MP GNU MULTIPLE
   [Anonymous], CSD970014 U CAL
   [Anonymous], PROC 35 ACM SIGPL
   [Anonymous], PROC 11 EUR SYMP
   [Anonymous], PROC 13 INT STAT AN
   [Anonymous], 2011, INTRO NUMERICAL ORDI
   Ayad A, 2010, LECT NOTES ARTIF INT, V6173, P127
   Bagnara R, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P1, DOI 10.1109/ICST.2013.17
   Bao T, 2013, ACM SIGPLAN NOTICES, V48, P817, DOI [10.1145/2509136.2509526, 10.1145/2544173.2509526]
   Barr ET, 2013, ACM SIGPLAN NOTICES, V48, P549, DOI 10.1145/2480359.2429133
   Benz F, 2012, ACM SIGPLAN NOTICES, V47, P453, DOI 10.1145/2345156.2254118
   Blanck J, 2006, J LOGIC ALGEBR PROGR, V66, P50, DOI 10.1016/j.jlap.2005.07.002
   Boldo S, 2007, P S COMP ARITHM, P187, DOI 10.1109/ARITH.2007.20
   Boldo S, 2011, P S COMP ARITHM, P243, DOI 10.1109/ARITH.2011.40
   Briggs K, 2006, THEOR COMPUT SCI, V351, P74, DOI 10.1016/j.tcs.2005.09.058
   Cheney E.W., 2007, NUMERICAL MATH COMPU
   Cohen J., 2013, APPL MULTIPLE REGRES
   Darulova E, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P325
   Eggert PR, 2005, SOFTWARE PRACT EXPER, V35, P313, DOI 10.1002/spe.637
   El-Araby E, 2007, I C FIELD PROG LOGIC, P79, DOI 10.1109/FPL.2007.4380629
   Fousse L, 2007, ACM T MATH SOFTWARE, V33, DOI 10.1145/1236463.1236468
   Galassi M., 2002, GNU Scientific Library Reference Manual, VSecond
   Goubault E, 2001, LECT NOTES COMPUT SC, V2126, P234
   Graillat S, 2011, MATH COMPUT SCI, V5, P359, DOI 10.1007/s11786-011-0103-4
   Hart D., 2010, POWER ELECT
   Higham N.J., 2002, ACCURACY STABILITY N, V2nd ed.
   Jézéquel F, 2008, COMPUT PHYS COMMUN, V178, P933, DOI 10.1016/j.cpc.2008.02.003
   Kormanyos C, 2011, ACM T MATH SOFTWARE, V37, DOI 10.1145/1916461.1916469
   Lam MO, 2012, 2012 SC COMPANION: HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS (SCC), P1423
   Lambov B, 2007, MATH STRUCT COMP SCI, V17, P81, DOI 10.1017/S0960129506005822
   Lingxiao Jiang, 2006, 28th International Conference on Software Engineering Proceedings, P262, DOI 10.1145/1134285.1134323
   Liu CS, 2009, J MAR SCI TECHNOL-TA, V17, P216
   Marcial-Romero JR, 2004, IEEE S LOG, P426, DOI 10.1109/LICS.2004.1319637
   Martel M, 2007, LECT NOTES COMPUT SC, V4634, P298
   Martel Matthieu., 2009, P 2009 ACM SIGPLAN W, P101, DOI DOI 10.1145/1480945.1480960
   Ménissier-Morain V, 2005, J LOGIC ALGEBR PROGR, V64, P13, DOI 10.1016/j.jlap.2004.07.003
   Miller W., 1976, IEEE Transactions on Software Engineering, VSE-2, P223, DOI 10.1109/TSE.1976.233818
   Miller W., 1978, ACM Transactions on Mathematical Software, V4, P369, DOI 10.1145/356502.356496
   Miller W., 1975, ACM Transactions on Mathematical Software, V1, P108, DOI 10.1145/355637.355639
   Miller W., 1973, P ACM S THEOR COMP, P50
   Mohan N., 2002, POWER ELECT CONVERTE, VThird
   Monniaux D, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1353445.1353446
   Moore R. E., 2009, INTERVAL, V110
   Muller N. T., 2001, Computability and Complexity in Analysis. 4th International Workshop, CCA 2000. Selected Papers (Lecture Notes in Computer Science Vol.2064), P222
   Parker DS, 2000, COMPUT SCI ENG, V2, P58, DOI 10.1109/5992.852391
   Parker DS, 1997, Monte Carlo arithmetic: exploiting randomness in floating-point arithmetic
   Putot S, 2004, LECT NOTES COMPUT SC, V2991, P306
   Quinlan D., 2000, Parallel Processing Letters, V10, P215, DOI 10.1016/S0129-6264(00)00021-4
   Revol N., 2005, Reliable Computing, V11, P275, DOI 10.1007/s11155-005-6891-y
   Rubio-González C, 2013, INT CONF HIGH PERFOR, DOI 10.1145/2503210.2503296
   Shoup Victor., 2014, NTL: A Library for doing Number Theory. 6.2.1
   Stolfi J, 2003, Trends Comput. Appl. Math., V4, P297, DOI DOI 10.5540/TEMA.2003.04.03.0297
   TANG E., 2010, Proceedings of the 8th International Symposium on Software Testing and Analysis, P131, DOI DOI 10.1145/1831708.1831724
   Vignes J, 2004, NUMER ALGORITHMS, V37, P377, DOI 10.1023/B:NUMA.0000049483.75679.ce
   VIGNES J, 1993, MATH COMPUT SIMULAT, V35, P233, DOI 10.1016/0378-4754(93)90003-D
   Wang XJ, 2006, ANN IEEE SYM FIELD P, P249
   Wang XJ, 2010, ACM T RECONFIG TECHN, V3, DOI 10.1145/1839480.1839486
   Wilkinson J. H., 1994, Rounding Errors in Algebraic Processes
   Willmott CJ, 2005, CLIMATE RES, V30, P79, DOI 10.3354/cr030079
   Xiao XP, 2005, IEEE SYS MAN CYBERN, P622
   Zou D., 2015, P 37 INT C SOFTW ENG, P20
NR 64
TC 7
Z9 8
U1 1
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2017
VL 43
IS 10
BP 975
EP 994
DI 10.1109/TSE.2016.2642956
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FJ9YP
UT WOS:000413137700005
DA 2024-07-18
ER

PT J
AU Carr, SA
   Logozzo, F
   Payer, M
AF Carr, Scott A.
   Logozzo, Francesco
   Payer, Mathias
TI Automatic Contract Insertion with CCBot
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Contract-based verification; automated patching; assertions; class
   invariants
ID PROGRAMS
AB Existing static analysis tools require significant programmer effort. On large code bases, static analysis tools produce thousands of warnings. It is unrealistic to expect users to review such a massive list and to manually make changes for each warning. To address this issue we propose CCBot (short for CodeContractsBot), a new tool that applies the results of static analysis to existing code through automatic code transformation. Specifically, CCBot instruments the code with method preconditions, postconditions, and object invariants which detect faults at runtime or statically using a static contract checker. The only configuration the programmer needs to perform is to give CCBot the file paths to code she wants instrumented. This allows the programmer to adopt contract-based static analysis with little effort. CCBot's instrumented version of the code is guaranteed to compile if the original code did. This guarantee means the programmer can deploy or test the instrumented code immediately without additional manual effort. The inserted contracts can detect common errors such as null pointer dereferences and out-of-bounds array accesses. CCBot is a robust large-scale tool with an open-source C# implementation. We have tested it on real world projects with tens of thousands of lines of code. We discuss several projects as case studies, highlighting undiscovered bugs found by CCBot, including 22 new contracts that were accepted by the project authors.
C1 [Carr, Scott A.] Purdue Univ, W Lafayette, IN 47907 USA.
   [Payer, Mathias] Purdue Univ, Comp Sci, W Lafayette, IN 47907 USA.
   [Logozzo, Francesco] FaceBook, Seattle, WA 98109 USA.
C3 Purdue University System; Purdue University; Purdue University System;
   Purdue University; Facebook Inc
RP Carr, SA (corresponding author), Purdue Univ, W Lafayette, IN 47907 USA.
EM carr27@purdue.edu; logozzo@fb.com; mathias.payer@nebelwelt.net
FU NSF [CNS-1464155]
FX We thank Xiangyu Zhang, Stephen McCamant, Michael Pradel, and the
   anonymous reviewers for their invaluable feedback on this work. The
   technical assistance from HeeJae Chang, Birendra Acharya, Jack Tilford,
   and Mike Barnett from Microsoft is greatly appreciated. This work was
   sponsored, in part, by NSF CNS-1464155. The work completed while
   Francesco Logozzo with Microsoft Research.
CR Alkhalaf M., 2014, P 2014 INT S SOFTWAR, P225
   [Anonymous], 2014, P 29 ACM IEEE INT C, DOI [10.1145/2642937.2643002, DOI 10.1145/2642937.2643002]
   [Anonymous], 2013, P 14 C VER MOD CHECK
   [Anonymous], 2014, P ACM IEEE INT C AUT, DOI DOI 10.1145/2642937.2642986
   [Anonymous], STACKOVERFLOW DEAL S
   [Anonymous], 2013, SIGADA ANN C HIGH IN
   [Anonymous], 2016, Continuous integration
   [Anonymous], 2014, P 29 ACM IEEE INT C
   [Anonymous], P 10 AS S PROGR LANG
   [Anonymous], 2006, COMP 21 ACM SIGPLAN, DOI DOI 10.1145/1176617
   Azim Md.Tanzirul., 2014, P 29 ACMIEEE INT C A, P623
   Barnett M, 2005, LECT NOTES COMPUT SC, V3362, P49
   Burdy L., 2005, International Journal on Software Tools for Technology Transfer, V7, P212, DOI 10.1007/s10009-004-0167-4
   Chalin P, 2006, LECT NOTES COMPUT SC, V4157, P100
   Daniel B, 2009, IEEE INT CONF AUTOM, P433, DOI 10.1109/ASE.2009.17
   Ernst M. D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P213, DOI 10.1109/ICSE.1999.841011
   Estler HC, 2014, LECT NOTES COMPUT SC, V8442, P230, DOI 10.1007/978-3-319-06410-9_17
   Fähndrich M, 2011, LECT NOTES COMPUT SC, V6528, P10
   Flanagan C., 2001, FME 2001: Formal Methods for Increasing Software Productivity. International Symposium on Formal Methods Europe. Proceedings (Lecture Notes in Computer Science Vol.2021), P500
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   Hoder K, 2011, LECT NOTES COMPUT SC, V6605, P60, DOI 10.1007/978-3-642-19835-9_7
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Logozzo F, 2012, ACM SIGPLAN NOTICES, V47, P133, DOI 10.1145/2398857.2384626
   Meyer B., 1992, Eiffel: The Language
   Meyer B, 2009, COMPUTER, V42, P46, DOI 10.1109/MC.2009.296
   Mkaouer M. W., 2014, P 29 ACM IEEE INT C, P331, DOI [DOI 10.1145/2642937.2642965, 10.1145/2642937.2642965. u r l, DOI 10.1145/2642937.2642965.URL]
   Murphy-Hill E, 2015, IEEE T SOFTWARE ENG, V41, P65, DOI 10.1109/TSE.2014.2357438
   Nanda M. G., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P99, DOI 10.1145/1810295.1810310
   Panichella S, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P161, DOI 10.1109/SANER.2015.7081826
   Pasareanu Corina S., 2010, P 25 IEEE ACM INT C, P179, DOI [10.1145/1858996.1859035, DOI 10.1145/1858996.1859035]
   Pei Y, 2014, IEEE T SOFTWARE ENG, V40, P427, DOI 10.1109/TSE.2014.2312918
   Perkins JH, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P87
   Pradel M, 2009, IEEE INT CONF AUTOM, P371, DOI 10.1109/ASE.2009.60
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Sadowski C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P598, DOI 10.1109/ICSE.2015.76
   Schiller TW, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P596, DOI 10.1145/2568225.2568285
   Schulte E, 2013, ACM SIGPLAN NOTICES, V48, P317, DOI 10.1145/2499368.2451151
   Tschannen Julian., 2012, Tools for Practical Software Verification, volume 7682 of Lecture Notes in Computer Science, V7682, P133
   Venkatasubramanyam R.D., 2014, Proceedings of the 1st International Workshop on Software Engineering Research and Industrial Practices, SERIPs 2014, page, P24, DOI [10.1145/2593850.2593855, DOI 10.1145/2593850.2593855]
NR 40
TC 8
Z9 8
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2017
VL 43
IS 8
BP 701
EP 714
DI 10.1109/TSE.2016.2625248
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FD7FW
UT WOS:000407693000001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Gao, ZB
   Chen, ZY
   Zou, YX
   Memon, AM
AF Gao, Zebao
   Chen, Zhenyu
   Zou, Yunxiao
   Memon, Atif M.
TI <i>SITAR</i>: GUI Test Script Repair
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE GUI testing; GUI test script; test script repair; human knowledge
   accumulation
ID MODEL
AB System testing of a GUI-based application requires that test cases, consisting of sequences of user actions/events, be executed and the software's output be verified. To enable automated re-testing, such test cases are increasingly being coded as low-level test scripts, to be replayed automatically using test harnesses. Whenever the GUI changes-widgets get moved around, windows get merged-some scripts become unusable because they no longer encode valid input sequences. Moreover, because the software's output may have changed, their test oracles-assertions and checkpoints-encoded in the scripts may no longer correctly check the intended GUI objects. We present ScrIpT repAireR (SITAR), a technique to automatically repair unusable low-level test scripts. SITAR uses reverse engineering techniques to create an abstract test for each script, maps it to an annotated event-flow graph (EFG), uses repairing transformations and human input to repair the test, and synthesizes a new "repaired" test script. During this process, SITAR also repairs the reference to the GUI objects used in the checkpoints yielding a final test script that can be executed automatically to validate the revised software. SITAR amortizes the cost of human intervention across multiple scripts by accumulating the human knowledge as annotations on the EFG. An experiment using QTP test scripts suggests that SITAR is effective in that 41-89 percent unusable test scripts were repaired. Annotations significantly reduced human cost after 20 percent test scripts had been repaired.
C1 [Gao, Zebao; Chen, Zhenyu; Zou, Yunxiao] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210008, Jiangsu, Peoples R China.
   [Gao, Zebao; Memon, Atif M.] Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
   [Zou, Yunxiao] Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
C3 Nanjing University; University System of Maryland; University of
   Maryland College Park; Purdue University System; Purdue University
RP Gao, ZB; Chen, ZY; Zou, YX (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210008, Jiangsu, Peoples R China.; Gao, ZB; Memon, AM (corresponding author), Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.; Zou, YX (corresponding author), Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
EM gaozebao@cs.umd.edu; zychen@nju.edu.cn; zou41@purdue.edu;
   atif@cs.umd.edu
FU National Basic Research Program of China (973 Program) [2014CB340702];
   NSFC [61170067, 61373013]; US National Science Foundation [CNS-1205501]
FX This research is sponsored in part by National Basic Research Program of
   China (973 Program 2014CB340702), NSFC Program (61170067 and 61373013).
   This work was also supported by the US National Science Foundation under
   Grant No. CNS-1205501. In addition, the authors thank all the volunteers
   who contributed tirelessly to our empirical study. Zhenyu Chen is the
   corresponding author.
CR Alegroth E., 2015, 2015 IEEE 8 INT C SO, P1
   Alshahwan Nadia, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P298, DOI 10.1109/ICST.2008.56
   [Anonymous], 2015, SATISFACTION BEHAV P
   [Anonymous], 2010, INT C SOFTWARE TESTI
   [Anonymous], 2007, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering
   [Anonymous], 2007, ESEC FSE 2007, DOI DOI 10.1145/1287624.1287707
   [Anonymous], 2010, P 19 INT S SOFTW TES
   [Anonymous], 2011, 1 INT WORKSHOP END T
   Burns D, 2010, SELENIUM 1 0 TESTING
   Daniel B, 2009, IEEE INT CONF AUTOM, P433, DOI 10.1109/ASE.2009.17
   Dyutiman Choudhary Dyutiman Choudhary, 2011, Pro-poor value chain development for high value products in mountain regions: Indian Bay Leaf
   Fu C, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P1, DOI 10.1109/ICST.2009.12
   Grechanik M, 2009, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2009.5070540
   Kervinen A, 2006, LECT NOTES COMPUT SC, V3997, P16
   Lalwani T., 2011, QUICKTEST PROFESSION, V2nd ed.
   Le Goues C., 2012, IEEE Transactions on Software Engineering, V38, P54, DOI 10.1109/TSE.2011.104
   Leotta M., 2013, P 2013 INT WORKSH JO, P53, DOI DOI 10.1145/2489280.2489284
   Memon A, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P186, DOI 10.1109/ASE.2004.1342736
   Memon A, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P260, DOI 10.1109/WCRE.2003.1287256
   Memon A. M., 2003, Software Engineering Notes, V28, P118, DOI 10.1145/949952.940088
   Memon A. M., 2001, Software Engineering Notes, V26, P256, DOI 10.1145/503271.503244
   Memon AM, 2007, SOFTW TEST VERIF REL, V17, P137, DOI 10.1002/stvr.364
   Memon AM, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1416563.1416564
   Mirzaaghaei M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P231, DOI 10.1109/ICST.2012.103
   Mirzaaghaei M., 2010, Proceedings of the 2010 IEEE International Conference on Software Maintenance ICSM 2010, P1
   Mirzaaghaei Mehdi, 2011, P 19 ACM SIGSOFT S 1, P396
   Nguyen BN, 2014, IEEE T SOFTWARE ENG, V40, P216, DOI 10.1109/TSE.2014.2300857
   Pinto L.S., 2012, P ACM SIGSOFT 20 INT, P1
   Xie Q, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189752
   Xie T, 2006, LECT NOTES COMPUT SC, V4067, P380
   Yang WR, 2014, J SYST SOFTWARE, V89, P76, DOI 10.1016/j.jss.2013.09.043
   Zhang YL, 2013, PROCEEDINGS OF 2013 INTERNATIONAL SYMPOSIUM - WOMEN'S SURVIVAL AND DEVELOPMENT IN CURRENT CULTURAL ENVIRONMENT, P45
NR 32
TC 33
Z9 35
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2016
VL 42
IS 2
BP 170
EP 186
DI 10.1109/TSE.2015.2454510
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DE8GD
UT WOS:000370872900005
DA 2024-07-18
ER

PT J
AU Mangano, N
   LaToza, TD
   Petre, M
   van der Hoek, A
AF Mangano, Nicolas
   LaToza, Thomas D.
   Petre, Marian
   van der Hoek, Andre
TI How Software Designers Interact with Sketches at the Whiteboard
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Interaction styles; systems analysis and design; user-centered design
ID DECISION-MAKING; ENVIRONMENTS
AB Whiteboard sketches play a crucial role in software development, helping to support groups of designers in reasoning about a software design problem at hand. However, little is known about these sketches and how they support design 'in the moment', particularly in terms of the relationships among sketches, visual syntactic elements within sketches, and reasoning activities. To address this gap, we analyzed 14 hours of design activity by eight pairs of professional software designers, manually coding over 4000 events capturing the introduction of visual syntactic elements into sketches, focus transitions between sketches, and reasoning activities. Our findings indicate that sketches serve as a rich medium for supporting design conversations. Designers often use general-purpose notations. Designers introduce new syntactic elements to record aspects of the design, or re-purpose sketches as the design develops. Designers constantly shift focus between sketches, using groups of sketches together that contain complementary information. Finally, sketches play an important role in supporting several types of reasoning activities (mental simulation, review of progress, consideration of alternatives). But these activities often leave no trace and rarely lead to sketch creation. We discuss the implications of these and other findings for the practice of software design at the whiteboard and for the creation of new electronic software design sketching tools.
C1 [Mangano, Nicolas] Molimur, Mission Viejo, CA 92692 USA.
   [LaToza, Thomas D.; van der Hoek, Andre] Univ Calif Irvine, Dept Informat, Donald Bren Sch Informat & Comp Sci, Irvine, CA 92697 USA.
   [Petre, Marian] Open Univ, Fac Math & Comp, Milton Keynes MK7 6AA, Bucks, England.
C3 University of California System; University of California Irvine; Open
   University - UK
RP Mangano, N (corresponding author), Molimur, Mission Viejo, CA 92692 USA.
EM nick@molimur.com; tlatoza@ics.uci.edu; m.petre@open.ac.uk;
   andre@ics.uci.edu
FU Microsoft; National Science Foundation [CCF-1118052, IIS-1111446];
   Direct For Computer & Info Scie & Enginr [1111446] Funding Source:
   National Science Foundation; Div Of Information & Intelligent Systems
   [1111446] Funding Source: National Science Foundation
FX The authors would like to thank all of the participants in their study
   and the participants of the Studying Professional Software Design
   Workshop. This work was supported in part by Microsoft and by the
   National Science Foundation under grants CCF-1118052 and IIS-1111446.
CR [Anonymous], 2007, SKETCHING USER EXPER
   [Anonymous], 2007, Basics of qualitative research: techniques and procedures for developing grounded theory
   [Anonymous], 2005, Proceedings of the 2005 Workshop on Human and Social Factors of Software Engineering, HSSE'05, page
   Baker A., 2010, STUD PROF SOFTW
   Baker A, 2010, DESIGN STUD, V31, P590, DOI 10.1016/j.destud.2010.09.008
   Ball LJ, 2010, DESIGN STUD, V31, P567, DOI 10.1016/j.destud.2010.09.003
   Ball LJ, 2009, DESIGN STUD, V30, P169, DOI 10.1016/j.destud.2008.12.005
   Bertin J, 1983, IN PRESS
   Booch G, 2011, IEEE SOFTWARE, V28, P6, DOI 10.1109/MS.2011.4
   Cherubini M, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P557
   Christiaans H, 2010, DESIGN STUD, V31, P641, DOI 10.1016/j.destud.2010.09.005
   Chung R., 2005, P 6 ACM SIGCHI NZ CH, P29
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Damm C. H., 2000, CHI 2000 Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2000. The Future is Here, P518, DOI 10.1145/332040.332488
   Dekel U, 2007, ACM SIGPLAN NOTICES, V42, P261, DOI 10.1145/1297105.1297047
   Ferguson E., 1992, ENG MINDS EYE
   Goel V., 1995, Sketches of thought
   Goldschmidt G., 1991, CREATIVITY RES J, V4, P123, DOI [10.1080/10400419109534381, DOI 10.1080/10400419109534381, https://doi.org/10.1080/10400419109534381]
   Grisham P., 2009, P WORKSH ACC TRAC GL, P13
   Grundy J, 2007, PROC INT CONF SOFTW, P282
   Guimbretiere F., 2001, 01UIST. Proceedings of the 14th Annual ACM Symposium on User Interface Software and Technology, P21, DOI 10.1145/502348.502353
   Guindon R., 1990, Human-Computer Interaction, V5, P305, DOI 10.1207/s15327051hci0502&3_6
   Hendry DG, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P95
   Hundhausen CD, 2005, J VISUAL LANG COMPUT, V16, P153, DOI 10.1016/j.jvlc.2004.11.002
   Johnson Gabe, 2008, Foundations and Trends in Human-Computer Interaction, V2, P1, DOI 10.1561/1100000013
   Ju W, 2008, CSCW: 2008 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, CONFERENCE PROCEEDINGS, P17
   Klemmer Scott R., 2001, P UIST 01, P1, DOI 10.1145/502348.502350
   Landay J., 1996, P CCOMPHUM FACT SYST, P399
   LARKIN JH, 1987, COGNITIVE SCI, V11, P65, DOI 10.1016/S0364-0213(87)80026-5
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Mangano N., 2014, P SIGCHI HUM FACT CO, P10
   Mangano N, 2012, AUTOMAT SOFTW ENG, V19, P381, DOI 10.1007/s10515-012-0104-9
   McDonnell J, 2012, DESIGN STUD, V33, P44, DOI 10.1016/j.destud.2011.05.003
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Mynatt ED, 1999, HUMAN-COMPUTER INTERACTION - INTERACT '99, P196
   Mynatt Elizabeth D., 1999, P SIGCHI C HUM FACT, P346, DOI DOI 10.1145/302979.303108
   Nakakoji K., 2014, SOFTW DESIGNERS ACTI, P381
   Newell A., 1972, HUMAN PROBLEM SOLVIN, V104
   Newman MW, 2003, HUM-COMPUT INTERACT, V18, P259, DOI 10.1207/S15327051HCI1803_3
   Olson G. M., 1992, Human-Computer Interaction, V7, P347, DOI 10.1207/s15327051hci0704_1
   Ossher H., 2014, SOFTWARE DESIGNERS A, P295
   Petre M., 2014, SOFTWARE DESIGNERS A, P267
   Petre M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P722, DOI 10.1109/ICSE.2013.6606618
   Petre M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P233, DOI 10.1145/1595696.1595731
   Scaife M, 1996, INT J HUM-COMPUT ST, V45, P185, DOI 10.1006/ijhc.1996.0048
   Schon D. A., 1984, REFLECTIVE PRACTITIO, V5126
   Schumann J., 1996, Human Factors in Computing Systems. Common Ground. CHI 96 Conference Proceedings, P35, DOI 10.1145/238386.238398
   Shipman F. M.  III, 1999, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V8, P333, DOI 10.1023/A:1008716330212
   Simon H.A., 1996, The Sciences of the Artificial, V3rd ed
   SIMON HA, 1973, ARTIF INTELL, V4, P181, DOI 10.1016/0004-3702(73)90011-8
   Suwa M, 2002, LECT NOTES ARTIF INT, V2317, P341
   Suwa M., 2000, DESIGN STUDIES, V21, P539, DOI [DOI 10.1016/S0142-694X(99)00034-4, 10.1016/S0142-694X(99)00034-4]
   Tang HH, 2011, DESIGN STUD, V32, P1, DOI 10.1016/j.destud.2010.06.004
   Tversky B., 2002, 2002 AAAI SPRING S S, P148
   Van Der Hoek A., 2013, SOFTWARE DESIGNERS A
   Walny J, 2011, IEEE T VIS COMPUT GR, V17, P2508, DOI 10.1109/TVCG.2011.251
   Wong Y. Y., 1992, POST SHORT TALKS SIG
   Yatani K, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P995
   Zannier C., 2007, AGILE PROCESSES SOFT
   Zannier C, 2007, INFORM SOFTWARE TECH, V49, P637, DOI 10.1016/j.infsof.2007.02.010
NR 60
TC 16
Z9 21
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2015
VL 41
IS 2
BP 135
EP 156
DI 10.1109/TSE.2014.2362924
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CD9ZJ
UT WOS:000351460400002
OA Bronze
DA 2024-07-18
ER

PT J
AU Syer, MD
   Nagappan, M
   Adams, B
   Hassan, AE
AF Syer, Mark D.
   Nagappan, Meiyappan
   Adams, Bram
   Hassan, Ahmed E.
TI Replicating and Re-Evaluating the Theory of Relative Defect-Proneness
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Survival analysis; Cox models; defect modelling
ID PREDICTION
AB A good understanding of the factors impacting defects in software systems is essential for software practitioners, because it helps them prioritize quality improvement efforts (e.g., testing and code reviews). Defect prediction models are typically built using classification or regression analysis on product and/or process metrics collected at a single point in time (e.g., a release date). However, current defect prediction models only predict if a defect will occur, but not when, which makes the prioritization of software quality improvements efforts difficult. To address this problem, Koru et al. applied survival analysis techniques to a large number of software systems to study how size (i.e., lines of code) influences the probability that a source code module (e.g., class or file) will experience a defect at any given time. Given that 1) the work of Koru et al. has been instrumental to our understanding of the size-defect relationship, 2) the use of survival analysis in the context of defect modelling has not been well studied and 3) replication studies are an important component of balanced scholarly debate, we present a replication study of the work by Koru et al. In particular, we present the details necessary to use survival analysis in the context of defect modelling (such details were missing from the original paper by Koru et al.). We also explore how differences between the traditional domains of survival analysis (i.e., medicine and epidemiology) and defect modelling impact our understanding of the size-defect relationship. Practitioners and researchers considering the use of survival analysis should be aware of the implications of our findings.
C1 [Syer, Mark D.; Nagappan, Meiyappan; Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON, Canada.
   [Adams, Bram] Ecole Polytech, Genie Informat & Genie Logiciel, Montreal, PQ H3C 3A7, Canada.
C3 Queens University - Canada; Universite de Montreal; Polytechnique
   Montreal
RP Syer, MD (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM mdsyer@cs.queensu.ca; mei@cs.queensu.ca; bram.adams@polymtl.ca;
   ahmed@cs.queensu.ca
RI Ali, Ahmed/HOF-4672-2023; KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan,
   Ahmed/AAB-7241-2019
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Syer,
   Mark/0000-0002-2855-9557; Adams, Bram/0000-0001-7213-4006
CR [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cohen J., 2013, APPL MULTIPLE REGRES, DOI DOI 10.2307/2064799
   COMPTON BT, 1990, J SYST SOFTWARE, V12, P199, DOI 10.1016/0164-1212(90)90040-S
   Ekanayake J, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P51, DOI 10.1109/MSR.2009.5069480
   El Emam K, 2002, IEEE T SOFTWARE ENG, V28, P494, DOI 10.1109/TSE.2002.1000452
   Erlikh L., 2000, IT Professional, V2, P17, DOI 10.1109/6294.846201
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Harrell F.E., 2001, Regression modeling strategies: with applications to linear models, logistic regression, and survival analysis
   Hassan AE, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P837
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Hatton L, 1998, IEEE SOFTWARE, V15, P46, DOI 10.1109/52.676735
   Hatton L, 1997, IEEE SOFTWARE, V14, P89, DOI 10.1109/52.582978
   HESS KR, 1995, STAT MED, V14, P1707, DOI 10.1002/sim.4780141510
   Hosmer D., 1999, APPL SURVIVAL ANAL R
   Jenkins S.P., 2004, Survival analysis
   Koru AG, 2008, EMPIR SOFTW ENG, V13, P473, DOI 10.1007/s10664-008-9080-x
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Koru G., 2007, 29 INT C SOFTW ENG C, P115, DOI DOI 10.1109/ICSECOMPANION.2007.54
   Koru G, 2010, EMPIR SOFTW ENG, V15, P577, DOI [10.1007/s10664-010-9132-X, 10.1007/s10664-010-9132-x]
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   Menzies T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P343, DOI 10.1109/ASE.2011.6100072
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   MOAD J, 1990, DATAMATION, V36, P61
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Raja U, 2009, J SOFTW MAINT EVOL-R, V21, P49, DOI 10.1002/smr.398
   Rosenberg J, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P137, DOI 10.1109/METRIC.1997.637174
   Selim G. M. K., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P13, DOI 10.1109/WCRE.2010.11
   Shihab E., 2010, Proceedings of the International Symposium on Empirical Software Engineering and Measurement, P29
   Steele F., 2005, NCRM METHODS REV PAP
   Therneau T. M., 2010, MODELLING SURVIVAL D
   Therneau T.M., 1999, PACKAGE SURVIVAL ANA
   Tosun A, 2010, INFORM SOFTWARE TECH, V52, P1242, DOI 10.1016/j.infsof.2010.06.006
   Van der Meer T, 2010, AM SOCIOL REV, V75, P173, DOI 10.1177/0003122409359166
   Vittinghoff E, 2005, STAT BIOL HEALTH, pVII
   Wedel M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P282
   Weyuker EJ, 2008, EMPIR SOFTW ENG, V13, P539, DOI 10.1007/s10664-008-9082-8
   WITHROW C, 1990, IEEE SOFTWARE, V7, P26, DOI 10.1109/52.43046
NR 43
TC 10
Z9 12
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2015
VL 41
IS 2
BP 176
EP 197
DI 10.1109/TSE.2014.2361131
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CD9ZJ
UT WOS:000351460400004
DA 2024-07-18
ER

PT J
AU Lano, K
   Kolahdouz-Rahimi, S
AF Lano, Kevin
   Kolahdouz-Rahimi, Shekoufeh
TI Model-Transformation Design Patterns
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Model transformations; design patterns; model-driven development
ID LANGUAGES
AB This paper defines a catalogue of patterns for the specification and design of model transformations, and provides a systematic scheme and classification of these patterns, together with pattern application examples in leading model transformation languages such as ATL, QVT, GrGen. NET, and others. We consider patterns for improving transformation modularization and efficiency and for reducing data storage requirements. We define a metamodel-based formalization of model transformation design patterns, and measurement-based techniques to guide the selection of patterns. We also provide an evaluation of the effectiveness of transformation patterns on a range of different case studies.
C1 [Lano, Kevin; Kolahdouz-Rahimi, Shekoufeh] Kings Coll London, Dept Informat, London WC2R 2LS, England.
C3 University of London; King's College London
RP Lano, K (corresponding author), Kings Coll London, Dept Informat, London WC2R 2LS, England.
EM kevin.lano@kcl.ac.uk; s.kolahdouz-rahimi@kcl.ac.uk
OI Lano, Kevin Charles/0000-0002-9706-1410
CR Agrawal A, 2005, ELECTRON NOTES THEOR, V127, P181, DOI 10.1016/j.entcs.2004.12.035
   AKEHURST DH, 2005, P MOD TRANSF PRACT W
   Alexander C., 1977, PATTERN LANGUAGE TOW
   Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   [Anonymous], PATTERNS JAVA
   Balasubramanian D., 2006, P 3 INT WORKSH GRAPH, V1
   Bayley I, 2008, INT CONF QUAL SOFTW, P27, DOI 10.1109/QSIC.2008.32
   Bezivin J., 2003, MODEL TRANSFORMATION
   Cabot J, 2010, J SYST SOFTWARE, V83, P283, DOI 10.1016/j.jss.2009.08.012
   CLEAVELAND C, 2001, PROGRAM GENERATORS X
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Duddy K, 2003, SEVENTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P174, DOI 10.1109/EDOC.2003.1233847
   Eclipsepedia, 2014, ATL US GUID
   Fowler M., 2000, Refactoring: Improving the Design of Existing Code
   France R, 2003, IEEE SOFTWARE, V20, P52, DOI 10.1109/MS.2003.1231152
   Gamma Erich., 1994, DESIGN PATTERNS
   Goldschmidt T., 2011, REFINEMENT TRANSORMA
   Gronmo R, 2009, LECT NOTES COMPUT SC, V5562, P2
   Guerra E, 2010, LECT NOTES COMPUT SC, V6394, P106
   Hafiz M., 2013, SECURITY PATTERN CAT
   Horn T., 2014, TTC
   Iacob Maria-Eugenia., 2008, ENTERPRISE DISTRIBUT, P1
   Jakumeit Edgar, 2010, International Journal on Software Tools for Technology Transfer, V12, P263, DOI 10.1007/s10009-010-0148-8
   Johannes J, 2009, LECT NOTES COMPUT SC, V5795, P546, DOI 10.1007/978-3-642-04425-0_41
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Kerievsky J., 2004, REFACTORING PATTERNS
   Kolahdouz-Rahimi S., 2013, SCI COMPUT PROGRAMM, V85, P5
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kurtev I., 2006, P 2006 ACM S APPL CO, P1202
   Lano K, 2013, ELECTRON PROC THEOR, P101, DOI 10.4204/EPTCS.135.13
   Lano K, 2014, SOFTW SYST MODEL, V13, P873, DOI 10.1007/s10270-012-0291-7
   Lano Kevin, 2013, MODELSWARD 2013. 1st International Conference on Model-Driven Engineering and Software Development. Proceedings, P77
   Lano Kevin, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P47, DOI 10.1007/978-3-642-21732-6_4
   Lano K., 2012, P WORKSH MOD DRIV EN, P23
   Lano K., 2006, CATALOGUE UML MODEL
   Lano K., 2011, P 5 TRANSF TOOL CONT, V74, P36
   Lano K., 2011, 6 INT C SOFTW ENG AD, P263
   Lano K., 2009, Model-Driven Software Development With UML and Java
   Lano K., 2014, TTC
   Lano K., 2014, UML RSDA MANUAL
   Lano K., 2010, 5 TRANSF TOOL CONT M
   Lano K., 2013, CASE STUDY CLASS DIA
   Lano K., 1998, P 1 INT WORKSH UN MO, P107
   Lano K, 2012, ADV COMPUT, V85, P123, DOI 10.1016/B978-0-12-396526-4.00003-5
   Lano K, 2010, LECT NOTES COMPUT SC, V6395, P228
   MICHIE D, 1968, NATURE, V218, P19, DOI 10.1038/218019a0
   Object Management Group (OMG), 2005, PTC051101 OMG
   OMG, 2010, ANNEX A
   Poernomo I, 2008, LECT NOTES COMPUT SC, V5063, P214, DOI 10.1007/978-3-540-69927-9_15
   Poernomo I, 2010, LECT NOTES COMPUT SC, V6447, P56, DOI 10.1007/978-3-642-16901-4_6
   Pons Claudia, 2009, Proceedings of the 28th International Conference of the Chilean Computer Science Society (SCCC 2009), P105, DOI 10.1109/SCCC.2009.14
   Prechelt L., 1997, 91997 U KARLSR FAC C
   RENSINK A., 2009, ELECTR COMMUN, V18, P1
   Romeikat R, 2008, LECT NOTES COMPUT SC, V5063, P137, DOI 10.1007/978-3-540-69927-9_10
   Rose L., 2012, SOFTW SYST MODEL, V13, P323
   Rose LM, 2010, LECT NOTES COMPUT SC, V6142, P184, DOI 10.1007/978-3-642-13688-7_13
   Cuadrado JS, 2009, LECT NOTES COMPUT SC, V5421, P273, DOI 10.1007/978-3-642-01648-6_29
   Cuadrado JS, 2009, SOFTW SYST MODEL, V8, P325, DOI 10.1007/s10270-008-0093-0
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Selic B, 2012, SOFTW SYST MODEL, V11, P513, DOI 10.1007/s10270-012-0261-0
   Syriani E., 2010, P 9 INT WORKSH GRAPH
   Taentzer G., 2005, P MOD TRANSF PRACT W, P5
   Tisi M, 2010, LECT NOTES COMPUT SC, V6142, P215, DOI 10.1007/978-3-642-13688-7_15
   van Amstel Marcel, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P198, DOI 10.1007/978-3-642-21732-6_14
   Van Gorp P., 2010, P 5 TRANSF TOOL CONT
   Van Gorp P, 2013, ELECTRON PROC THEOR, P16, DOI 10.4204/EPTCS.135.3
   Varro D., 2007, LNCS, V5088, P540, DOI [10.1007/978-3-540-89020-1_36, DOI 10.1007/978-3-540-89020-1_36]
   Zschaler S., 2011, P 1 WORKSH FREE COMP
NR 68
TC 35
Z9 37
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2014
VL 40
IS 12
BP 1224
EP 1259
DI 10.1109/TSE.2014.2354344
PG 36
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AW4AQ
UT WOS:000346224400005
DA 2024-07-18
ER

PT J
AU Rastkar, S
   Murphy, GC
   Murray, G
AF Rastkar, Sarah
   Murphy, Gail C.
   Murray, Gabriel
TI Automatic Summarization of Bug Reports
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical software engineering; summarization of software artifacts; bug
   report duplicate detection
AB Software developers access bug reports in a project's bug repository to help with a number of different tasks, including understanding how previous changes have been made and understanding multiple aspects of particular defects. A developer's interaction with existing bug reports often requires perusing a substantial amount of text. In this article, we investigate whether it is possible to summarize bug reports automatically so that developers can perform their tasks by consulting shorter summaries instead of entire bug reports. We investigated whether existing conversation-based automated summarizers are applicable to bug reports and found that the quality of generated summaries is similar to summaries produced for e-mail threads and other conversations. We also trained a summarizer on a bug report corpus. This summarizer produces summaries that are statistically better than summaries produced by existing conversation-based generators. To determine if automatically produced bug report summaries can help a developer with their work, we conducted a task-based evaluation that considered the use of summaries for bug report duplicate detection tasks. We found that summaries helped the study participants save time, that there was no evidence that accuracy degraded when summaries were used and that most participants preferred working with summaries to working with original bug reports.
C1 [Rastkar, Sarah; Murphy, Gail C.] Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1Z4, Canada.
   [Murray, Gabriel] Univ Fraser Valley, Comp Informat Syst Dept, Abbotsford, BC V2S 7M8, Canada.
C3 University of British Columbia; University of Fraser Valley
RP Rastkar, S (corresponding author), Univ British Columbia, Dept Comp Sci, 2366 Main Mall, Vancouver, BC V6T 1Z4, Canada.
EM rastkar@cs.ubc.ca; murphy@cs.ubc.ca; gabriel.murray@ufv.ca
FU NSERC
FX The authors would like to thank Chengnian Sun for providing them with
   the code for the BM25F-based duplicate bug report recommender. This work
   was funded by NSERC.
CR Abdi Herve., 2007, ENCY MEASUREMENT STA, P1
   Anvik John, 2005, P 2005 OOPSLA WORKSH, P35
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bertram D, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P291
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Breu S, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P301
   Carenini Giuseppe., 2008, Proceedings of the Association for Computational Linguistics: Human Language Technologies (ACL-HLT 2008), P353
   Carletta J, 2005, LECT NOTES COMPUT SC, V3869, P28
   Chen YW, 2006, STUD FUZZ SOFT COMP, V207, P315
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   Davidson JL, 2011, S VIS LANG HUM CEN C, P101, DOI 10.1109/VLHCC.2011.6070386
   Fan RE, 2008, J MACH LEARN RES, V9, P1871
   Fawcett T, 2004, ROC GRAPHS NOTES PRA
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Klimt B., 2004, P 1 C E MAIL ANT CEA
   Ko AJ, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P127
   Lotufo R, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P430, DOI 10.1109/ICSM.2012.6405303
   Mani I, 1999, NINTH CONFERENCE OF THE EUROPEAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS, P77
   Mani S., 2012, P ACM SIGSOFT 20 INT, P1, DOI DOI 10.1145/2393596.2393607
   Mckeown K., 2005, P 28 ANN INT ACM SIG, P210
   Moreno L., 2013, P IEEE 21 INT C PROG
   Murray G., 2009, ACM T SPEECH LANGUAG, V6, P2
   Murray G., 2008, P C EMP METH NAT LAN
   Murray G., 2010, PROC 6 INT NATURAL L, P105
   Nenkova A, 2004, HLT-NAACL 2004: HUMAN LANGUAGE TECHNOLOGY CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE MAIN CONFERENCE, P145
   Nenkova A, 2011, FOUND TRENDS INF RET, V5, P103, DOI 10.1561/1500000015
   Over P, 2007, INFORM PROCESS MANAG, V43, P1506, DOI 10.1016/j.ipm.2007.01.019
   Rambow O., 2004, P HUM LANG TECHN C N
   Rastkar S., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P103, DOI 10.1109/ICSM.2011.6080777
   Rastkar Sarah, 2010, P 32 ACM IEEE INT C, V1, P505, DOI DOI 10.1145/1806799.1806872
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Sandusky R.J., 2005, P 2005 INT ACM SIGGR, P187
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   Stephen Wan e., 2004, COLING'04: Proceedings of the 20th international conference on Computational Linguistics, page, P549
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Teufel S., 2001, WORKSH AUT SUMM NAAC, P12
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Zechner K, 2002, COMPUT LINGUIST, V28, P447, DOI 10.1162/089120102762671945
   Zhu XD, 2006, INTERSPEECH 2006 AND 9TH INTERNATIONAL CONFERENCE ON SPOKEN LANGUAGE PROCESSING, VOLS 1-5, P1531
NR 41
TC 118
Z9 135
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2014
VL 40
IS 4
BP 366
EP 380
DI 10.1109/TSE.2013.2297712
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AH3WD
UT WOS:000336056000003
DA 2024-07-18
ER

PT J
AU Sui, YL
   Ye, D
   Xue, JL
AF Sui, Yulei
   Ye, Ding
   Xue, Jingling
TI Detecting Memory Leaks Statically with Full-Sparse Value-Flow Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Memory Leaks; sparse value-flow analysis; static analysis; pointer
   analysis
ID SIDE-EFFECT ANALYSIS; POINTS-TO ANALYSIS; HEAP CLONING
AB We introduce a static detector, SABER, for detecting memory leaks in C programs. Leveraging recent advances on sparse pointer analysis, SABER is the first to use a full-sparse value-flow analysis for detecting memory leaks statically. SABER tracks the flow of values from allocation to free sites using a sparse value-flow graph (SVFG) that captures def-use chains and value flows via assignments for all memory locations represented by both top-level and address-taken pointers. By exploiting field-, flow-and context-sensitivity during different phases of the analysis, SABER detects memory leaks in a program by solving a graph reachability problem on its SVFG. SABER, which is fully implemented in Open64, is effective at detecting 254 leaks in the 15 SPEC2000 C programs and seven applications, while keeping the false positive rate at 18.3 percent. SABER compares favorably with several static leak detectors in terms of accuracy (leaks and false alarms reported) and scalability (LOC analyzed per second). In particular, compared with FASTCHECK (which analyzes allocated objects flowing only into top-level pointers) using the 15 SPEC2000 C programs, SABER detects 44.1 percent more leaks at a slightly higher false positive rate but is only a few times slower.
C1 [Sui, Yulei; Ye, Ding; Xue, Jingling] Univ New S Wales, Sch Comp Sci & Engn, Programming Language & Compilers Grp, Sydney, NSW 2035, Australia.
C3 University of New South Wales Sydney
RP Sui, YL (corresponding author), Univ New S Wales, Sch Comp Sci & Engn, Programming Language & Compilers Grp, Sydney, NSW 2035, Australia.
RI Xue, Jingling/AAE-1991-2020; Sui, Yulei/AAL-5915-2020
OI Xue, Jingling/0000-0003-0380-3506; Sui, Yulei/0000-0002-9510-6574
FU Australian Research Council (ARC) [DP110104628, DP130101970]; Oracle
   Labs
FX The authors would like to thank the reviewers for their valuable
   comments. This work was supported by the Australian Research Council
   (ARC) grants, DP110104628 and DP130101970, and a grant from Oracle Labs.
CR [Anonymous], 2007, P ACM SIGPLAN C PROG
   [Anonymous], P ACM SIGPLAN C PROG
   [Anonymous], 1995, P 22 ACM SIGPLAN SIG
   Bruening D., 2011, P IEEE ACM 9 ANN INT
   CALLAHAN D, 1988, J PARALLEL DISTR COM, V5, P517, DOI 10.1016/0743-7315(88)90011-1
   CHEREM S., 2007, P ACM SIGPLAN C PROG
   CHOW F, 1996, P 6 INT C COMP CONST
   Clause J., 2010, P ACM IEEE 32 INT C
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   Hardekopf B., 2011, P IEEE ACM 9 ANN INT
   Hardekopf B., 2009, P 36 ANN ACM SIGPLAN
   HEINE D, 2003, P ACM SIGPLAN C PROG
   Jung Y., 2008, P 7 INT S MEM MAN IS
   Lattner C, 2007, ACM SIGPLAN NOTICES, V42, P278, DOI 10.1145/1273442.1250766
   Le W, 2011, P 2011 INT S SOFTW T
   Li L., 2011, PROC 19 ACM SIGSOFT, P343
   Livshits V.B., 2003, P 9 EUR SOFTW ENG C
   Lu Y, 2013, LECT NOTES COMPUT SC, V7791, P61, DOI 10.1007/978-3-642-37051-9_4
   Madhavan R., 2011, P 18 INT C STAT AN S
   Nguyen P.H., 2005, AUSTRALASIAN C COMPU, P9
   Novark G., 2009, P ACM SIGPLAN C PROG
   Nystrom Erik M., 2004, Proceedings of the 2004 ACM SIGPLAN-SIGSOFT Workshop on Program Analysis For Software Tools and Engineering, PASTE'04, P43
   Orlovich M., 2006, P 13 INT C STAT AN S
   Ryder BG, 2001, ACM T PROGR LANG SYS, V23, P105, DOI 10.1145/383043.381532
   Salcianu A, 2005, LECT NOTES COMPUT SC, V3385, P199
   Shang L., 2012, P 10 INT S COD GEN O
   Shang L, 2012, IEEE INT CONF AUTOM, P270
   Sui Y., 2011, P 9 AS C PROGR LANG
   Sui Y., 2012, P INT S SOFTW TEST A
   Sui YL, 2013, INT SYM CODE GENER, P1
   Torlak E., 2010, P ACM IEEE 32 INT C
   XIE Y., 2005, P 10 EUR SOFTW ENG C
   Xie YC, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1232420.1232423
   Xu G., 2011, P 32 ACM SIGPLAN C P
   Xu Guoqing, 2008, P 30 INT C SOFTW ENG
   Xue JL, 2007, J SYST SOFTWARE, V80, P92, DOI 10.1016/j.jss.2006.06.015
   Yu H., 2010, P IEEE ACM 8 ANN INT
NR 37
TC 75
Z9 89
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2014
VL 40
IS 2
BP 107
EP 122
DI 10.1109/TSE.2014.2302311
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AF4FD
UT WOS:000334666000001
DA 2024-07-18
ER

PT J
AU Rafique, Y
   Misic, VB
AF Rafique, Yahya
   Misic, Vojislav B.
TI The Effects of Test-Driven Development on External Quality and
   Productivity: A Meta-Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Test-driven development; meta-analysis; code quality; programmer
   productivity; agile software development
ID TEST AUTOMATION; EXPERIENCE; IMPACT; IMPROVEMENT; STUDENTS; DESIGN
AB This paper provides a systematic meta-analysis of 27 studies that investigate the impact of Test-Driven Development (TDD) on external code quality and productivity. The results indicate that, in general, TDD has a small positive effect on quality but little to no discernible effect on productivity. However, subgroup analysis has found both the quality improvement and the productivity drop to be much larger in industrial studies in comparison with academic studies. A larger drop of productivity was found in studies where the difference in test effort between the TDD and the control group's process was significant. A larger improvement in quality was also found in the academic studies when the difference in test effort is substantial; however, no conclusion could be derived regarding the industrial studies due to the lack of data. Finally, the influence of developer experience and task size as moderator variables was investigated, and a statistically significant positive correlation was found between task size and the magnitude of the improvement in quality.
C1 [Rafique, Yahya] Ryerson Univ, Toronto, ON M5T 1V2, Canada.
   [Misic, Vojislav B.] Ryerson Univ, Toronto, ON M5B 2K3, Canada.
C3 Toronto Metropolitan University; Toronto Metropolitan University
RP Rafique, Y (corresponding author), Ryerson Univ, 96 St Patrick St,Suite TH101, Toronto, ON M5T 1V2, Canada.
EM yahya.rafique@ryerson.ca; vmisic@ryerson.ca
CR Abrahamsson P, 2005, INT FED INFO PROC, V180, P227
   Ambler S., 2006, DOBBS AGILE NEWS JUN
   [Anonymous], [No title captured]
   [Anonymous], 2010, MAKING SOFTWARE WHAT
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   [Anonymous], 2002, THESIS N CAROLINA ST
   Astels Dave, 2003, Test-Driven Development: A Practical Guide
   Bhat T., 2006, Proceedings of the 2006 ACM/IEEE International Symposium on Empirical Software Engineering (ISESE '06), P356, DOI [DOI 10.1145/1159733.1159787, 10.1145/1159733.1159787]
   Borenstein M, 2010, RES SYNTH METHODS, V1, P97, DOI 10.1002/jrsm.12
   Canfora G., 2006, P 2006 ACMIEEE INT S, P364
   Canfora G, 2006, LECT NOTES COMPUT SC, V4034, P383
   Damm LO, 2007, LECT NOTES COMPUT SC, V4764, P187
   Damm LO, 2005, ELECTRON NOTES THEOR, V116, P3, DOI 10.1016/j.entcs.2004.02.090
   Desai Chetan, 2009, SIGCSE Bulletin, V41, P148, DOI 10.1145/1539024.1508921
   Dogsa T, 2011, SOFTWARE QUAL J, V19, P643, DOI 10.1007/s11219-011-9130-2
   Edwards S. H., 2004, P26, DOI 10.1145/971300.971312.
   Edwards SH, 2003, INTERNATIONAL CONFERENCE ON EDUCATION AND INFORMATION SYSTEMS: TECHNOLOGIES AND APPLICATIONS, PROCEEDINGS, P421
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Flohr T, 2006, LECT NOTES COMPUT SC, V4034, P305
   George B, 2004, INFORM SOFTWARE TECH, V46, P337, DOI 10.1016/j.infsof.2003.09.011
   George B., 2003, Proc. of the ACM SAC 2003. SAC 03, P1135, DOI [DOI 10.1145/952532.952753, 10.1145/952532.952753$, DOI 10.1145/952532.952753$]
   Geras A, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P405, DOI 10.1109/METRIC.2004.1357925
   Geras A., 2004, THESIS U CALGARY CAN
   Gupta Atul, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P285
   Hanhineva A., 2004, THESIS U OULU FINLAN
   Hannay JE, 2009, INFORM SOFTWARE TECH, V51, P1110, DOI 10.1016/j.infsof.2009.02.001
   Hodgetts P, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P106
   Höfer A, 2009, LECT NOTES BUS INF P, V31, P33
   Huang L, 2009, INFORM SOFTWARE TECH, V51, P182, DOI 10.1016/j.infsof.2008.03.007
   Huedo-Medina TB, 2006, PSYCHOL METHODS, V11, P193, DOI 10.1037/1082-989X.11.2.193
   Janzen DS, 2008, IEEE SOFTWARE, V25, P77, DOI 10.1109/MS.2008.34
   Janzen DS, 2007, CONF SOFTW ENG EDUC, P89, DOI 10.1109/CSEET.2007.20
   Janzen DS, 2006, CONF SOFTW ENG EDUC, P141, DOI 10.1109/CSEET.2006.25
   JANZEN DS, 2006, THESIS U KANSAS
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kaufmann R., 2003, Companion of the 18th annual ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, P298
   Kollanus S., 2008, Proceedings of the 8th International Conference on Computing Education Research, P25
   Kollanus S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P403, DOI 10.1109/QUATIC.2010.73
   Langr J., 2001, P ACM C OBJ OR PROGR
   Lipsey M., 2001, PRACTICAL METAANALYS
   Lui KM, 2004, LECT NOTES COMPUT SC, V3092, P219
   Madeyski L, 2007, LECT NOTES COMPUT SC, V4764, P200
   Madeyski L, 2006, LECT NOTES COMPUT SC, V4034, P278
   Madeyski L, 2005, FRONT ARTIF INTEL AP, V130, P113
   Madeyski L, 2006, LECT NOTES COMPUT SC, V4044, P65
   Madeyski L, 2010, INFORM SOFTWARE TECH, V52, P169, DOI 10.1016/j.infsof.2009.08.007
   Andrade-Garda JM, 2009, RSC ANAL SPECTROSC M, P181, DOI 10.1039/9781847559661-00181
   Maximilien EM, 2003, PROC INT CONF SOFTW, P564, DOI 10.1109/ICSE.2003.1201238
   Melnik G, 2005, PROC INT CONF SOFTW, P481
   Müller MM, 2007, EMPIR SOFTW ENG, V12, P593, DOI 10.1007/s10664-007-9048-2
   Muller M. M., 2002, IEE Proceedings-Software, V149, P131, DOI 10.1049/ip-sen:20020540
   Nagappan N, 2008, EMPIR SOFTW ENG, V13, P289, DOI 10.1007/s10664-008-9062-z
   Pancur M, 2003, IEEE REGION 8 EUROCON 2003, VOL B, PROCEEDINGS, P83
   Pancur M, 2011, INFORM SOFTWARE TECH, V53, P557, DOI 10.1016/j.infsof.2011.02.002
   Rahman S., 2007, P 37 ANN FRONT ED C
   Rendell A, 2008, AGILE 2008, PROCEEDINGS, P298, DOI 10.1109/Agile.2008.45
   Sanchez JC, 2007, AGILE 2007, PROCEEDINGS, P5, DOI 10.1109/AGILE.2007.43
   Shull F, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.152
   Siniaalto Maria, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P275
   SINIAALTO M, 2007, P 2 IFIP TC 2 CENTR, P143
   Siniaalto M., 2006, TEST DRIVEN DEV EMPI
   Siniaalto M, 2006, TECHNICAL REPORT
   Slyngstad Odd Petter N., 2008, 2008 The Third International Conference on Software Engineering Advances (ICSEA), P214, DOI 10.1109/ICSEA.2008.8
   Steinberg D. H., 2001, P XP UN OCT
   Vu JH, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P229, DOI 10.1109/ITNG.2009.11
   Williams L, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P34, DOI 10.1109/ISSRE.2003.1251029
   Xu SC, 2009, STUD COMPUT INTELL, V253, P229, DOI 10.1007/978-3-642-05441-9_20
   Yenduri S., 2006, Proceedings of the 2006 International Conference on Software Engineering Research and Practice and Conference on Programming Languages and Compilers SERP'06, P126
   Ynchausti R., 2001, P 2 INT C EXTR PROGR, P79
   Zhang L, 2006, LECT NOTES COMPUT SC, V4044, P211
NR 70
TC 73
Z9 74
U1 5
U2 45
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2013
VL 39
IS 6
BP 835
EP 856
DI 10.1109/TSE.2012.28
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 149RG
UT WOS:000319338200008
DA 2024-07-18
ER

PT J
AU Robillard, MP
   Bodden, E
   Kawrykow, D
   Mezini, M
   Ratchford, T
AF Robillard, Martin P.
   Bodden, Eric
   Kawrykow, David
   Mezini, Mira
   Ratchford, Tristan
TI Automated API Property Inference Techniques
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE API property; programming rules; specifications; protocols; interface;
   data mining; pattern mining; API evolution; API usage pattern
ID MINING TEMPORAL SPECIFICATIONS; GENERATION; RULES
AB Frameworks and libraries offer reusable and customizable functionality through Application Programming Interfaces (APIs). Correctly using large and sophisticated APIs can represent a challenge due to hidden assumptions and requirements. Numerous approaches have been developed to infer properties of APIs, intended to guide their use by developers. With each approach come new definitions of API properties, new techniques for inferring these properties, and new ways to assess their correctness and usefulness. This paper provides a comprehensive survey of over a decade of research on automated property inference for APIs. Our survey provides a synthesis of this complex technical field along different dimensions of analysis: properties inferred, mining techniques, and empirical results. In particular, we derive a classification and organization of over 60 techniques into five different categories based on the type of API property inferred: unordered usage patterns, sequential usage patterns, behavioral specifications, migration mappings, and general information.
C1 [Robillard, Martin P.; Kawrykow, David] McGill Univ, Sch Comp Sci, Montreal, PQ H3A 2A7, Canada.
   [Bodden, Eric] Tech Univ Darmstadt, Secure Software Engn Grp, European Ctr Secur & Privacy Design EC SPRIDE, D-64293 Darmstadt, Germany.
   [Mezini, Mira] Tech Univ Darmstadt, D-64289 Darmstadt, Germany.
   [Ratchford, Tristan] IBM Res, Cambridge, MA 02142 USA.
C3 McGill University; Technical University of Darmstadt; Technical
   University of Darmstadt; International Business Machines (IBM)
RP Robillard, MP (corresponding author), McGill Univ, Sch Comp Sci, 318 McConnell Engn Bldg,3480 Univ St, Montreal, PQ H3A 2A7, Canada.
EM martin@cs.mcgill.ca; bodden@ec-spride.de; dkawry@cs.mcgill.ca;
   mezini@informatik.tu-darmstadt.de; tratch@us.ibm.com
RI Bodden, Eric/AAE-1365-2021
OI Bodden, Eric/0000-0003-3470-3647
CR Acharya M, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P311
   Acharya M, 2009, LECT NOTES COMPUT SC, V5503, P370
   Acharya Mithun, 2007, P 6 JOINT M EUROPEAN, P25, DOI [DOI 10.1145/1287624.1287630, 10.1145/1287624.1287630]
   Alur R, 2005, ACM SIGPLAN NOTICES, V40, P98, DOI 10.1145/1047659.1040314
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   [Anonymous], 1994, P INT C VERY LARGE D
   [Anonymous], 2010, P 19 INT S SOFTW TES, DOI [10.1145/1831708.1831723, DOI 10.1145/1831708.1831723]
   [Anonymous], 2005, Proc. of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE'05)
   [Anonymous], 2007, P 6 JOINT M EUR SOFT
   [Anonymous], 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering- Volume 1, ICSE '10
   [Anonymous], 2010, P 26 IEEE INT C SOFT, DOI DOI 10.1109/ICSM.2010.5609576
   [Anonymous], 2007, 6th joint meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), DOI DOI 10.1145/1287624.1287632
   [Anonymous], 2007, P 2007 INT S SOFTWAR
   [Anonymous], 2007, P 22 IEEE ACM INT C
   [Anonymous], 2010, P 32 ACMIEEE INT C S, DOI DOI 10.1145/1806799.1806831
   BIERMANN AW, 1972, IEEE T COMPUT, VC 21, P592, DOI 10.1109/TC.1972.5009015
   Bjorner N, 1997, THEOR COMPUT SCI, V173, P49, DOI 10.1016/S0304-3975(96)00191-0
   Bodden E, 2012, ACM T PROGR LANG SYS, V34, DOI 10.1145/2220365.2220366
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Bruch Marcel., 2006, P 4 OOPSLA WORKSHOP, P55, DOI [10.1145/1188835.1188847, DOI 10.1145/1188835.1188847]
   Buse R.P., 2008, Proceedings of the 2008 International Symposium on Software Testing and Analysis, ISSTA '08, P273
   Chang Liu, 2006, 28th International Conference on Software Engineering Proceedings, P823
   Cimatti A., 2002, NUSMV 2 OPENSOURCE T
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Dagenais B, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000805
   Dagenais B, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P481, DOI 10.1145/1368088.1368154
   Dallmeier V., 2010, P 19 INT S SOFTWARE, P85, DOI [DOI 10.1145/1831708.1831719, 10.1145/1831708.1831719]
   Dallmeier V., 2006, P 2006 INT WORKSH DY, P17, DOI DOI 10.1145/1138912.1138918
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Dig D, 2006, LECT NOTES COMPUT SC, V4067, P404
   Dupont P, 2008, APPL ARTIF INTELL, V22, P77, DOI 10.1080/08839510701853200
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Engler D., 2001, Operating Systems Review, V35, P57, DOI 10.1145/502059.502041
   Ernst M. D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P213, DOI 10.1109/ICSE.1999.841011
   Flanagan C., 2001, FME 2001: Formal Methods for Increasing Software Productivity. International Symposium on Formal Methods Europe. Proceedings (Lecture Notes in Computer Science Vol.2021), P500
   Gabel M., 2008, SIGSOFT FSE, P339, DOI DOI 10.1145/1453101.1453150
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P51, DOI 10.1145/1368088.1368096
   Ghezzi C, 2009, PROC INT CONF SOFTW, P430, DOI 10.1109/ICSE.2009.5070542
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   Grahne G., 2003, P WORKSH FREQ IT SET
   GUTTAG JV, 1978, ACTA INFORM, V10, P27, DOI 10.1007/BF00260922
   HENKEL J, 2003, P 17 EUR C OBJ OR PR
   Henkel J, 2007, IEEE T SOFTWARE ENG, V33, P526, DOI 10.1109/TSE.2007.70705
   Henzinger TA, 2003, LECT NOTES COMPUT SC, V2648, P235
   Hoan AN, 2010, ACM SIGPLAN NOTICES, V45, P302, DOI 10.1145/1932682.1869486
   Holmes R., 2007, P OOPSLA WORKSH ECL, P70
   Holmes R, 2006, IEEE T SOFTWARE ENG, V32, P952, DOI 10.1109/TSE.2006.117
   Kagdi H., 2007, twenty-second IEEE/ACM international conference on Automated software engineering (ASE), P457
   KAGDI H, 2007, P 4 INT WORKSH MIN S
   Kim M, 2007, PROC INT CONF SOFTW, P333
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Kleinberg JM, 1999, J ACM, V46, P604, DOI 10.1145/324133.324140
   Lee C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P591, DOI 10.1145/1985793.1985874
   Leino K.R. M., 1999, P WORKSHOP OBJECT OR, P110
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Liu C., 2006, P 21 IEEE ACM INT C
   Livshits V.B., 2005, ESEC SIGSOFT FSE, P296, DOI [DOI 10.1145/1095430.1081754, DOI 10.1145/1081706.1081754]
   Lo D., 2006, SIGSOFT FSE, P265
   Lo D, 2008, J SOFTW MAINT EVOL-R, V20, P227, DOI 10.1002/smr.375
   Lo D, 2006, WORK CONF REVERSE EN, P51
   Lo D, 2009, WORK CONF REVERSE EN, P62, DOI 10.1109/WCRE.2009.42
   Long F, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P203, DOI 10.1145/1595696.1595727
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Mandelin D, 2005, ACM SIGPLAN NOTICES, V40, P48, DOI 10.1145/1064978.1065018
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Michail A., 1999, 14th IEEE International Conference on Automated Software Engineering, P24, DOI 10.1109/ASE.1999.802089
   Michail A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P167, DOI 10.1109/ICSE.2000.870408
   Mileva YM, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P57
   Monperrus M, 2010, LECT NOTES COMPUT SC, V6183, P2, DOI 10.1007/978-3-642-14107-2_2
   Naeem NA, 2008, ACM SIGPLAN NOTICES, V43, P347, DOI 10.1145/1449955.1449792
   Nguyen TT, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P383, DOI 10.1145/1595696.1595767
   Pradel M., 2009, Proceedings of the 24th ACM SIGPLAN Conference Companion on Object Oriented Programming Systems Languages and Applications, P773
   Pradel M, 2009, IEEE INT CONF AUTOM, P371, DOI 10.1109/ASE.2009.60
   Quante J, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P219, DOI 10.1109/WCRE.2007.24
   RAMAN A, 1997, P 14 INT C MACH LEAR
   Ramanathan MK, 2007, PROC INT CONF SOFTW, P240
   Ramanathan MK, 2007, ACM SIGPLAN NOTICES, V42, P123, DOI 10.1145/1273442.1250749
   Reif JohnH., 1979, P 11 ANN ACM S THEOR, P288
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Robillard MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2009.161
   Robillard MP, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/13487689.13487691
   Salah M, 2005, PROC IEEE INT CONF S, P155
   Sankaranarayanan S, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P131, DOI 10.1145/1368088.1368107
   Schäfer T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P471, DOI 10.1145/1368088.1368153
   Srikant R., 1995, VLDB '95. Proceedings of the 21st International Conference on Very Large Data Bases, P407
   Stylos J, 2009, S VIS LANG HUM CEN C, P119, DOI 10.1109/VLHCC.2009.5295283
   Thummalapenta Suresh, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P327, DOI 10.1109/ASE.2008.43
   Thummalapenta S, 2009, IEEE INT CONF AUTOM, P283, DOI 10.1109/ASE.2009.72
   Thummalapenta S, 2009, PROC INT CONF SOFTW, P496, DOI 10.1109/ICSE.2009.5070548
   Tillmann N, 2006, LECT NOTES COMPUT SC, V4260, P717
   Vallee-Rai R., 1999, Proceedings of the 1999 Conference of the Centre for Advanced Studies on Collaborative Research, CASCON'99, page, P13
   Vasudevan P, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P289, DOI 10.1109/SERA.2006.25
   Viljamaa J., 2003, Software Engineering Notes, V28, P217, DOI 10.1145/949952.940101
   Walkinshaw Neil, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P248, DOI 10.1109/ASE.2008.35
   Walkinshaw N, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P209, DOI 10.1109/WCRE.2007.45
   Wang JY, 2004, PROC INT CONF DATA, P79, DOI 10.1109/ICDE.2004.1319986
   Wasylkowski A, 2009, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2009.30
   Webb G. I., 2003, KNOWLEDGE DISCOVERY
   Weimer W, 2005, LECT NOTES COMPUT SC, V3440, P461
   Whaley J., 2002, Software Engineering Notes, V27, P221, DOI 10.1145/566171.566212
   Wu Wei, 2010, P 32 ACMIEEE INT C S, P325, DOI DOI 10.1145/1806799.1806848
   Xing ZC, 2007, AUTOMAT SOFTW ENG, V14, P215, DOI 10.1007/s10515-007-0007-3
   Xing ZC, 2007, IEEE T SOFTWARE ENG, V33, P818, DOI 10.1109/TSE.2007.70747
   Yang Jinlin., 2004, P 5 ACM SIGPLAN SIGS, P23, DOI DOI 10.1145/996821.996832
   Yang JL, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P340
   Zhong H, 2009, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2009.94
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
   Zhong H, 2008, ASIA PAC SOFWR ENG, P221, DOI 10.1109/APSEC.2008.54
NR 109
TC 128
Z9 139
U1 0
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2013
VL 39
IS 5
BP 613
EP 637
DI 10.1109/TSE.2012.63
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 140GL
UT WOS:000318642300003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mittas, N
   Angelis, L
AF Mittas, Nikolaos
   Angelis, Lefteris
TI Ranking and Clustering Software Cost Estimation Models through a
   Multiple Comparisons Algorithm
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cost estimation; management; metrics/measurement; statistical methods
ID FUNCTION POINTS; PREDICTION; REGRESSION; CROSS
AB Software Cost Estimation can be described as the process of predicting the most realistic effort required to complete a software project. Due to the strong relationship of accurate effort estimations with many crucial project management activities, the research community has been focused on the development and application of a vast variety of methods and models trying to improve the estimation procedure. From the diversity of methods emerged the need for comparisons to determine the best model. However, the inconsistent results brought to light significant doubts and uncertainty about the appropriateness of the comparison process in experimental studies. Overall, there exist several potential sources of bias that have to be considered in order to reinforce the confidence of experiments. In this paper, we propose a statistical framework based on a multiple comparisons algorithm in order to rank several cost estimation models, identifying those which have significant differences in accuracy, and clustering them in nonoverlapping groups. The proposed framework is applied in a large-scale setup of comparing 11 prediction models over six datasets. The results illustrate the benefits and the significant information obtained through the systematic comparison of alternative methods.
C1 [Mittas, Nikolaos; Angelis, Lefteris] Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
C3 Aristotle University of Thessaloniki
RP Mittas, N (corresponding author), Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
EM nmittas@csd.auth.gr; lef@csd.auth.gr
RI Mittas, Nikolaos/AAL-6645-2021
OI Mittas, Nikolaos/0000-0003-3061-7864
CR Abran A, 1996, IEEE T SOFTWARE ENG, V22, P895, DOI 10.1109/32.553638
   [Anonymous], 1981, SIMULTANEOUS STAT IN
   [Anonymous], 2007, ISBSG DAT SET 10
   [Anonymous], 2014, DESIGN EXPT ENG SCI
   Blom G., 1958, Statistical Estimates and Transformed Beta-variables
   Borges L.C., 2003, Revista de Matematica e Estatistica, V21, P67
   Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   BRIAND LC, 1992, IEEE T SOFTWARE ENG, V18, P931, DOI 10.1109/32.177363
   Cortez P, 2010, LECT NOTES ARTIF INT, V6171, P572, DOI 10.1007/978-3-642-14400-4_44
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   EFRON B, 1983, J AM STAT ASSOC, V78, P316, DOI 10.2307/2288636
   Ellis PD, 2010, ESSENTIAL GUIDE TO EFFECT SIZES: STATISTICAL POWER, META-ANALYSIS AND THE INTERPRETATION OF RESEARCH RESULTS, P1
   Ferreira EPD, 2009, EUR J SOIL BIOL, V45, P466, DOI 10.1016/j.ejsobi.2009.07.003
   Ferreira MW, 2011, J WORLD AQUACULT SOC, V42, P24, DOI 10.1111/j.1749-7345.2010.00440.x
   Finnie GR, 1997, J SYST SOFTWARE, V39, P281, DOI 10.1016/S0164-1212(97)00055-1
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Gray A. R., 1999, Empirical Software Engineering, V4, P297, DOI 10.1023/A:1009849100780
   Hochberg Yosef, 1987, Multiple comparison procedures
   *INS CORP, 2001, SPLUS 6 WIND GUID ST, V2
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   Jelihovschi E., R J IN PRESS
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kaufman L., 2009, FINDING GROUPS DATA
   Keung J, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P294
   Keung JW, 2008, IEEE T SOFTWARE ENG, V34, P471, DOI 10.1109/TSE.2008.34
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   Kitchenham B, 1998, IEEE T SOFTWARE ENG, V24, P278, DOI 10.1109/32.677185
   Kitchenham B, 2009, P 5 INT C PRED MOD S, P1, DOI DOI 10.1145/1540438.1540444
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kitchenham BA, 2002, INFORM SOFTWARE TECH, V44, P13, DOI 10.1016/S0950-5849(01)00204-X
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kohavi R., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1137
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li JZ, 2007, EMPIR SOFTW ENG, V12, P65, DOI 10.1007/s10664-006-7552-4
   Liebchen G. A., 2008, P 4 INT WORKSH PRED, P39, DOI [10.1145/1370788.1370799, DOI 10.1145/1370788.1370799]
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   Menzies T, 2012, EMPIR SOFTW ENG, V17, P1, DOI 10.1007/s10664-011-9193-5
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P409, DOI 10.1007/s10515-010-0070-z
   Mittas N, 2008, J SYST SOFTWARE, V81, P616, DOI 10.1016/j.jss.2007.07.039
   Mittas N, 2008, INFORM SOFTWARE TECH, V50, P221, DOI 10.1016/j.infsof.2007.04.001
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   Montgomery D.C., 1991, DESIGN ANAL EXPT
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Pendharkar PC, 2005, IEEE T SOFTWARE ENG, V31, P615, DOI 10.1109/TSE.2005.75
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Shepperd M, 1996, PROC INT CONF SOFTW, P170, DOI 10.1109/ICSE.1996.493413
   Sheskin David, 2011, Handbook of Parametric and Nonparametric Statistical Procedures
   Shirabad J.S., PROMISE REPOSITORY S
   SILVA EC, 1999, CIENC AGROTEC, V23, P687
   Stensrud E, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P205, DOI 10.1109/METRIC.1998.731247
   Tsoumakas G, 2005, INTELL DATA ANAL, V9, P511, DOI 10.3233/IDA-2005-9602
NR 54
TC 124
Z9 130
U1 0
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2013
VL 39
IS 4
BP 537
EP 551
DI 10.1109/TSE.2012.45
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 112UH
UT WOS:000316618800006
DA 2024-07-18
ER

PT J
AU Oliveira, JN
   Ferreira, MA
AF Oliveira, Jose N.
   Ferreira, Miguel A.
TI Alloy Meets the Algebra of Programming: A Case Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Model checking; algebra of programming; software verification; grand
   challenges in computing
ID FILE SYSTEM; MODEL-CHECKING; SPECIFICATION; CALCULUS
AB Relational algebra offers to software engineering the same degree of conciseness and calculational power as linear algebra in other engineering disciplines. Binary relations play the role of matrices with similar emphasis on multiplication and transposition. This matches with Alloy's lemma "everything is a relation" and with the relational basis of the Algebra of Programming (AoP). Altogether, it provides a simple and coherent approach to checking and calculating programs from abstract models. In this paper, we put Alloy and the Algebra of Programming together in a case study originating from the Verifiable File System mini-challenge put forward by Joshi and Holzmann: verifying the refinement of an abstract file store model into a journaled (FLASH) data model catering to wear leveling and recovery from power loss. Our approach relies on diagrams to graphically express typed assertions. It interweaves model checking (in Alloy) with calculational proofs in a way which offers the best of both worlds. This provides ample evidence of the positive impact in software verification of Alloy's focus on relations, complemented by induction-free proofs about data structures such as stores and lists.
C1 [Oliveira, Jose N.] Univ Minho, Dept Informat, INESC TEC, High Assurance Software Lab HASLab, P-4710057 Braga, Portugal.
   [Ferreira, Miguel A.] Software Improvement Grp, NL-1096 HA Amsterdam, Netherlands.
C3 Universidade do Minho; INESC TEC
RP Oliveira, JN (corresponding author), Univ Minho, Dept Informat, INESC TEC, High Assurance Software Lab HASLab, Campus Gualtar, P-4710057 Braga, Portugal.
EM jno@di.uminho.pt
RI Oliveira, Jose Nuno/D-3490-2013; Ferreira, Miguel/HHZ-6251-2022
OI Oliveira, Jose/0000-0002-0196-4229
FU Portuguese Science and Technology Foundation (FCT)
   [PTDC/EIA-CCO/108302/2008]
FX This research was carried out in the context of the MONDRIAN Project
   funded by the Portuguese Science and Technology Foundation (FCT)
   contract PTDC/EIA-CCO/108302/2008. The authors would like to thank the
   anonymous referees for insightful comments which significantly improved
   the quality of the original submission. Comments by Raymond Boute on an
   earlier draft of this paper are also gratefully acknowledged. Jose
   Oliveira would like to thank Antonio Murta for renewing his interest in
   Alloy.
CR [Anonymous], 1987, A Formalization Of Set Theory Without Variables
   [Anonymous], 2011, FORM METH SOFTW ENG
   Backhouse R., 2004, MATH PROGRA IN PRESS
   Backhouse Roland, 2003, PROGRAM CONSTRUCTION
   BACKUS J, 1978, COMMUN ACM, V21, P613, DOI 10.1145/359576.359579
   Barbosa LS, 2008, LECT NOTES COMPUT SC, V5140, P83
   Barbosa LS, 2006, THEOR COMPUT SCI, V365, P2, DOI 10.1016/j.tcs.2006.07.030
   Bird Richard, 1997, Algebra of Programming
   Bolton C, 2005, ELECTRON NOTES THEOR, V137, P23, DOI 10.1016/j.entcs.2005.04.023
   Butterfield A, 2007, IEEE INT C ENG COMP, P251, DOI 10.1109/ICECCS.2007.23
   Butterfield A, 2009, LECT NOTES COMPUT SC, V5902, P70, DOI 10.1007/978-3-642-10452-7_6
   Damchoom K, 2009, LECT NOTES COMPUT SC, V5902, P134, DOI 10.1007/978-3-642-10452-7_10
   Dybjer P, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P272, DOI 10.1109/QSIC.2003.1319111
   Feferman S, 2006, LOG METH COMPUT SCI, V2, DOI 10.2168/LMCS-2(3:6)2006
   Ferreira JF, 2011, LECT NOTES ARTIF INT, V6680, P62, DOI 10.1007/978-3-642-21350-2_8
   Ferreira MA, 2009, LECT NOTES COMPUT SC, V5902, P153, DOI 10.1007/978-3-642-10452-7_11
   Freitas L, 2009, SCI COMPUT PROGRAM, V74, P238, DOI 10.1016/j.scico.2008.08.001
   Freyd P, 1990, North-Holland Mathematical Library, V39
   Frias MF, 2007, LECT NOTES COMPUT SC, V4424, P587
   Galloway A, 2009, LECT NOTES COMPUT SC, V5403, P74, DOI 10.1007/978-3-540-93900-9_10
   Givant S, 2006, J AUTOM REASONING, V37, P277, DOI 10.1007/s10817-006-9062-x
   Hesselink WH, 2009, ELECTRON NOTES THEOR, V259, P67, DOI 10.1016/j.entcs.2009.12.018
   Hoare Tony, 2005, Verified Software: Theories, Tools, Experiments. First IFIP TC 2/WG 2.3 Conference, VSTTE 2005. (Lecture Notes in Computer Science vol. 4171), P1
   Höfner P, 2008, LECT NOTES ARTIF INT, V5195, P50, DOI 10.1007/978-3-540-71070-7_5
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Jones CB., 1990, SYSTEMATIC SOFTWARE
   Jones C, 2008, FORM ASP COMPUT, V20, P1, DOI 10.1007/s00165-007-0064-1
   Joshi Rajeev, 2005, Verified Software: Theories, Tools, Experiments. First IFIP TC 2/WG 2.3 Conference, VSTTE 2005. (Lecture Notes in Computer Science vol. 4171), P49
   Kang E., 2009, INT J SOFTWARE INFOR, V3, P129
   Kramer J, 2007, COMMUN ACM, V50, P37
   Kreyszig E., 1988, Advanced Engineering Mathematics, V6th
   Macedo N., 2010, THESIS U MINHO
   Mad91 R.D., 1991, Studia Logica, V50, P421
   Matos P., 2008, J COMPUTING RES REPO
   Mery D, 2009, INT J SOFTWARE INFOR, V3, P197
   MORGAN C, 1984, IEEE T SOFTWARE ENG, V10, P128, DOI 10.1109/TSE.1984.5010215
   Muhlberg JT, 2009, LECT NOTES COMPUT SC, V5902, P306, DOI 10.1007/978-3-642-10452-7_21
   Naur P., 1969, SOFTW ENG C SPONS NA
   Necco C., 2007, FAST0701 U MINH CCTC
   Oliveira J., 2009, IFIP WG 2 1 64 M APR
   Oliveira J., 2008, P LERNET ALFA SUMM S, P195
   Oliveira J.N., 2011, TRHASLAB32011 INESC
   Oliveira JN, 2006, LECT NOTES COMPUT SC, V4085, P236
   Oliveira JN, 2008, LECT NOTES COMPUT SC, V5235, P134, DOI 10.1007/978-3-540-88643-3_4
   Owre S., 1996, Computer Aided Verification. 8th International Conference, CAV '96. Proceedings, P411
   Parnas DL, 2010, COMPUTER, V43, P28, DOI 10.1109/MC.2010.22
   Russo Lucio., 2003, The Forgotten Revolution, V2nd
   Schierl A, 2009, LECT NOTES COMPUT SC, V5850, P190, DOI 10.1007/978-3-642-05089-3_13
   Schmidt G, 2010, ENCY MATH ITS APPL
   Silva P.F., 2008, PPDP '08: Proceedings of the 10th international ACM SIGPLAN conference on Principles and practice of declarative programming, P44, DOI DOI 10.1145/1389449.1389456
   Wang SL, 2008, TASE 2008: SECOND IFIP/IEEE INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING, PROCEEDINGS, P263, DOI 10.1109/TASE.2008.38
   Wing JM, 2008, PHILOS T R SOC A, V366, P3717, DOI 10.1098/rsta.2008.0118
   Yang JF, 2006, ACM T COMPUT SYST, V24, P393, DOI 10.1145/1189256.1189259
NR 53
TC 7
Z9 8
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2013
VL 39
IS 3
BP 305
EP 326
DI 10.1109/TSE.2012.15
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 098CA
UT WOS:000315520700002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rosa, L
   Rodrigues, L
   Lopes, A
   Hiltunen, M
   Schlichting, R
AF Rosa, Liliana
   Rodrigues, Luis
   Lopes, Antonia
   Hiltunen, Matti
   Schlichting, Richard
TI Self-Management of Adaptable Component-Based Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Adaptive systems; self-management; autonomic computing; goal policies
ID PERFORMANCE; SOFTWARE
AB The problem of self-optimization and adaptation in the context of customizable systems is becoming increasingly important with the emergence of complex software systems and unpredictable execution environments. Here, a general framework for automatically deciding on when and how to adapt a system whenever it deviates from the desired behavior is presented. In this framework, the system's target behavior is described as a high-level policy that establishes goals for a set of performance indicators. The decision process is based on information provided independently for each component that describes the available adaptations, their impact on performance indicators, and any limitations or requirements. The technique consists of both offline and online phases. Offline, rules are generated specifying component adaptations that may help to achieve the established goals when a given change in the execution context occurs. Online, the corresponding rules are evaluated when a change occurs to choose which adaptations to perform. Experimental results using a prototype framework in the context of a web-based application demonstrate the effectiveness of this approach.
C1 [Rosa, Liliana; Rodrigues, Luis] Univ Tecn Lisboa, INESC ID, P-1000029 Lisbon, Portugal.
   [Rosa, Liliana; Rodrigues, Luis] Univ Tecn Lisboa, IST, P-1000029 Lisbon, Portugal.
   [Lopes, Antonia] Univ Lisbon, Fac Ciencias, Dept Informat, P-1749016 Lisbon, Portugal.
   [Hiltunen, Matti; Schlichting, Richard] AT&T Labs Res, Florham Pk, NJ 07932 USA.
C3 Universidade de Lisboa; INESC-ID; Universidade de Lisboa; Universidade
   de Lisboa; AT&T
RP Rosa, L (corresponding author), Univ Tecn Lisboa, INESC ID, P-1000029 Lisbon, Portugal.
EM lrosa@gsd.inesc-id.pt; ler@ist.utl.pt; mal@di.fc.ul.pt;
   hiltunen@research.att.com; rick@research.att.com
RI Rodrigues, Luis/AAD-4549-2019; Lopes, Antonia/M-1755-2015; Rodrigues,
   Luis/C-5539-2008
OI Lopes, Antonia/0000-0003-0688-3521; Rodrigues, Luis/0000-0002-0313-6590
FU FCT (INESC-ID) through PIDDAC [CMU-PT/ELE/0030/2009]
FX The authors thank the anonymous reviewers for their valuable feedback.
   Also, they gratefully acknowledge the support of FCT (INESC-ID
   multi-annual funding) through the PIDDAC Program funds and project
   CMU-PT/ELE/0030/2009.
CR Abdelzaher TF, 1999, COMPUT NETW, V31, P1563, DOI 10.1016/S1389-1286(99)00031-6
   Ari I, 2003, PROCEEDINGS OF THE 11TH IEEE/ACM INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS AND SIMULATION OF COMPUTER TELECOMMUNICATIONS SYSTEMS, P246
   ASTROM KJ, 1987, P IEEE, V75, P185, DOI 10.1109/PROC.1987.13721
   Bahati RM, 2007, P 2007 C CTR ADV STU, P137
   Bandara AK, 2004, FIFTH IEEE INTERNATIONAL WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, PROCEEDINGS, P229, DOI 10.1109/POLICY.2004.1309175
   Bridges P., 2009, IEEE T COMPUTERS
   Chen WK, 2001, INT CON DISTR COMP S, P635, DOI 10.1109/ICDSC.2001.918994
   Cheng S.-W., 2006, INT WORKSH SELF AD S, P2, DOI DOI 10.1145/1137677.1137679
   Couceiro Maria, 2010, 2010 Proceedings of 4th IEEE International Conference on Self-Adaptive and Self-Organizing Systems (SASO 2010), P184, DOI 10.1109/SASO.2010.41
   Couceiro M, 2011, LECT NOTES COMPUT SC, V7049, P309
   Diao Y, 2003, IBM SYST J, V42, P136, DOI 10.1147/SJ.2003.5386833
   Eshghi K., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P562
   Grieco R, 2006, FOURTH ANNUAL IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS WORKSHOPS, PROCEEDINGS, P600, DOI 10.1109/PERCOMW.2006.34
   Gueyoung Jung, 2008, 2008 International Conference on Autonomic Computing (ICAC '08), P23, DOI 10.1109/ICAC.2008.21
   Iaccarino Gennaro., 2006, P 2006 INT CROSS DIS, P23
   Keeney John, 2008, 2008 2nd IEEE International Workshop on Bandwidth on Demand, P309
   Linden G, 2003, IEEE INTERNET COMPUT, V7, P76, DOI 10.1109/MIC.2003.1167344
   Lohse GL, 1998, COMMUN ACM, V41, P81, DOI 10.1145/278476.278491
   Mazzoni F., 2006, THESIS U MODENA REGG
   MCCARTHY DR, 1989, SIGMOD REC, V18, P215, DOI 10.1145/66926.66946
   Mobasher B, 2000, COMMUN ACM, V43, P142, DOI 10.1145/345124.345169
   Rosa L, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P2174
   Souders S, 2008, COMMUN ACM, V51, P36, DOI 10.1145/1409360.1409374
   Sykes Daniel., 2008, Proceedings of the 2008 international workshop on Software engineering for adaptive and self-managing systems, SEAMS '08, P1
   Van Renesse R, 1998, SOFTWARE PRACT EXPER, V28, P963, DOI 10.1002/(SICI)1097-024X(19980725)28:9<963::AID-SPE179>3.0.CO;2-9
   Walsh WE, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P70, DOI 10.1109/ICAC.2004.1301349
   Wang GJ, 2005, NINTH IEEE INTERNATIONAL EDOC ENTERPRISE COMPUTING CONFERENCE, PROCEEDINGS, P239, DOI 10.1109/EDOC.2005.30
   Zhang RG, 2002, INT CON DISTR COMP S, P301, DOI 10.1109/ICDCS.2002.1022267
NR 28
TC 24
Z9 30
U1 0
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2013
VL 39
IS 3
BP 403
EP 421
DI 10.1109/TSE.2012.29
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 098CA
UT WOS:000315520700007
DA 2024-07-18
ER

PT J
AU Leue, S
   Wei, W
AF Leue, Stefan
   Wei, Wei
TI Integer Linear Programming-Based Property Checking for Asynchronous
   Reactive Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software verification; formal methods; property checking; integer linear
   programming; static analysis; abstraction; refinement; counterexamples;
   asynchronous communication; buffer boundedness; livelock freedom;
   control flow cycles; cycle dependences; UML; Promela
ID SCALABLE INCOMPLETE TEST; DEADLOCK DETECTION; VERIFICATION; BOUNDEDNESS;
   PROMELA; SAFETY
AB Asynchronous reactive systems form the basis of a wide range of software systems, for instance in the telecommunications domain. It is highly desirable to rigorously show that these systems are correctly designed. However, traditional formal approaches to the verification of these systems are often difficult because asynchronous reactive systems usually possess extremely large or even infinite state spaces. We propose an integer linear program (ILP) solving-based property checking framework that concentrates on the local analysis of the cyclic behavior of each individual component of a system. We apply our framework to the checking of the buffer boundedness and livelock freedom properties, both of which are undecidable for asynchronous reactive systems with an infinite state space. We illustrate the application of the proposed checking methods to Promela, the input language of the SPIN model checker. While the precision of our framework remains an issue, we propose a counterexample guided abstraction refinement procedure based on the discovery of dependences among control flow cycles. We have implemented prototype tools with which we obtained promising experimental results on real-life system models.
C1 [Leue, Stefan] Univ Konstanz, Dept Comp & Informat Sci, Constance, Germany.
   [Wei, Wei] Darmstadt SAP AG, SAP Res Ctr, Darmstadt, Germany.
C3 University of Konstanz; SAP
RP Leue, S (corresponding author), Univ Konstanz, Dept Comp & Informat Sci, Constance, Germany.
EM stefan.leue@uni-konstanz.de
FU Direct For Computer & Info Scie & Enginr [0943262] Funding Source:
   National Science Foundation; Div Of Information & Intelligent Systems
   [0943262] Funding Source: National Science Foundation
CR [Anonymous], 1976, Rep. 62
   [Anonymous], P 3 SPIN WORKSH
   [Anonymous], P ADV COURS GEN NET
   [Anonymous], P 18 ANN C INF SCI S
   [Anonymous], P 12 EUR S PROGR LAN
   [Anonymous], P COOP SYST DES SCEN
   [Anonymous], PRINCIPLES CONCURREN
   [Anonymous], THESIS U PF CAL
   [Anonymous], P 8 IFIP WG6 1 INT C
   [Anonymous], FAIL DIV REF FDR 2 U
   [Anonymous], THESIS U KONSTANZ
   [Anonymous], FORMAL PROMELA MODEL
   [Anonymous], P 6 INT C APPL CONC
   [Anonymous], 1981, Technical Report 1053
   [Anonymous], P 3 SPIN WORKSH
   [Anonymous], 9248 U MASS AMH DEP
   [Anonymous], THESIS PARIS 11
   [Anonymous], DATABASE PROMELA MOD
   [Anonymous], P 7 INT S FORM TECHN
   [Anonymous], CLASSICAL MIND ESSAY
   [Anonymous], PROMELA MODEL SESSIO
   [Anonymous], 2000, Int. J. Softw. Tools Technol. Transf., DOI [10.1007/s100090050045, DOI 10.1007/S100090050045]
   [Anonymous], 1987, P 8 INT C APPL THEOR
   [Anonymous], P INT SPIN WORKSH
   [Anonymous], 1971, P 3 ANN ACM S THEOR
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Bouajjani A, 1999, LECT NOTES COMPUT SC, V1563, P323
   Boyer RobertS., 1985, J AUTOM REASONING, V1, P17
   Clarke E, 2003, TIME-ICTL 2003: 10TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING AND FOURTH INTERNATIONAL CONFERENCE ON TEMPORAL LOGIC, PROCEEDINGS, P7
   Clarke Edmund M., 2001, Model Checking
   Corbett JC, 1996, IEEE T SOFTWARE ENG, V22, P161, DOI 10.1109/32.489078
   CORBETT JC, 1995, FORM METHOD SYST DES, V6, P97, DOI 10.1007/BF01384316
   Cormen T.H., 2002, INTRO ALGORITHMS, V2nd
   Cousot Patrick, 1977, P 4 ACM S PRINC PROG, P238, DOI [10.1145/512950.512973, DOI 10.1145/512950.512973]
   Cousot Patrick, 1978, P 5 ACM SIGACT SIGPL, p84S96, DOI DOI 10.1145/512760.512770
   Dong Y., 2003, International Journal on Software Tools for Technology Transfer (STTT), V4, P505
   Ellsberger J., 1997, SDL: formal object-oriented language for communicating systems
   Esparza J, 2000, FORM METHOD SYST DES, V16, P159, DOI 10.1023/A:1008743212620
   Esparza J., 1995, J INFORM PROCESSING, V30, P143
   Finkel A., 1988, Advances in Petri Nets 1988, P106
   Gallardo MD, 2004, FORM ASP COMPUT, V16, P166, DOI 10.1007/s00165-004-0040-y
   GOUDA MG, 1987, COMPUT ARTIF INTELL, V6, P209
   Hansen H., 2002, Electronic Notes in Theoretical Computer Science, V66, P178, DOI DOI 10.1016/S1571-0661(04)80411-0
   Ibarra OH, 2002, THEOR COMPUT SCI, V289, P165, DOI 10.1016/S0304-3975(01)00268-7
   Ip CN, 1996, FORM METHOD SYST DES, V9, P41, DOI 10.1007/BF00625968
   JERON T, 1993, THEOR COMPUT SCI, V113, P93, DOI 10.1016/0304-3975(93)90212-C
   Karp R. M., 1969, J COMPUT SYST SCI, V3, P147, DOI DOI 10.1016/S0022-0000(69)80011-5
   KHACHIIAN LG, 1979, DOKL AKAD NAUK SSSR+, V244, P1093
   Leue S, 2005, LECT NOTES COMPUT SC, V3639, P58
   Leue S, 2004, LECT NOTES COMPUT SC, V2988, P327
   Leue S, 2004, LECT NOTES COMPUT SC, V2989, P216
   Leue S, 2008, LECT NOTES COMPUT SC, V5156, P176, DOI 10.1007/978-3-540-85114-1_14
   Leue S, 2006, LECT NOTES COMPUT SC, V4137, P79
   Maréchal O, 2004, LECT NOTES COMPUT SC, V3291, P1502
   McMillan K. L., 1993, Symbolic model checking
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Peled D, 1998, LECT NOTES COMPUT SC, V1427, P17, DOI 10.1007/BFb0028727
   Poizat P, 2006, LECT NOTES COMPUT SC, V4037, P33
   Romano P, 2003, LECT NOTES COMPUT SC, V2767, P62
   ROSIER LE, 1986, THEOR COMPUT SCI, V44, P69, DOI 10.1016/0304-3975(86)90110-6
   Schrijver Alexander, 1999, THEORY LINEAR INTEGE
   Selic B., 1994, REAL TIME OBJECT ORI
   Selic Bran., 1998, Using UML for Modeling Complex Real-Time Systems
   Siegel SF, 2002, IEEE T SOFTWARE ENG, V28, P115, DOI 10.1109/32.988494
   TIP F, 1995, J PROGRAM LANG, V3, P121
   WEGMAN MN, 1991, ACM T PROGR LANG SYS, V13, P181, DOI 10.1145/103135.103136
   YEN HC, 1992, INFORM COMPUT, V96, P119, DOI 10.1016/0890-5401(92)90059-O
NR 67
TC 1
Z9 1
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2013
VL 39
IS 2
BP 216
EP 236
DI 10.1109/TSE.2011.1
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 079ML
UT WOS:000314174500006
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Murphy-Hill, E
   Black, AP
AF Murphy-Hill, Emerson
   Black, Andrew P.
TI Programmer-Friendly Refactoring Errors
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Refactoring; refactoring errors; usability; programmers; tools
AB Refactoring tools, common to many integrated development environments, can help programmers to restructure their code. These tools sometimes refuse to restructure the programmer's code, instead giving the programmer a textual error message that she must decode if she wishes to understand the reason for the tool's refusal and what corrective action to take. This paper describes a graphical alternative to textual error messages called Refactoring Annotations. It reports on two experiments, one using an integrated development environment and the other using paper mockups, that show that programmers can use Refactoring Annotations to quickly and accurately understand the cause of refactoring errors.
C1 [Murphy-Hill, Emerson] N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
   [Black, Andrew P.] Portland State Univ, Dept Comp Sci, Portland, OR 97207 USA.
C3 North Carolina State University; Portland State University
RP Murphy-Hill, E (corresponding author), N Carolina State Univ, Dept Comp Sci, Campus Box 8206, Raleigh, NC 27695 USA.
EM emerson@csc.ncsu.edu; black@cs.pdx.edu
OI Black, Andrew/0000-0003-0014-6483
FU US National Science Foundation [CCF-0520346]
FX For their reviews and advice, the authors would like to thank Barry
   Anderson, Robert Bauer, Paul Berry, Iavor Diatchki, Tom Harke, Brian
   Huffman, Mark Jones, Jim Larson, Chuan-kai Lin, Ralph London, Philip
   Quitslund, Suresh Singh, Tim Sheard, and Aravind Subhash. Special thanks
   are due to participants in the user study and the anonymous reviewers
   for detailed, insightful criticism. The authors also thank the US
   National Science Foundation for partially funding this research under
   grant CCF-0520346.
CR Andersen T.R., 2005, EXTRACT METHOD ERROR
   [Anonymous], 2007, P 6 JOINT M EUR SOFT
   ERNST MD, 1994, MSRTR9414
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   FINDLER RB, 2002, J FUNCTIONAL PROGRAM, V12, P369
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Griswold William G., 1992, Program Restructuring as an Aid to Software Maintenance
   Hendrix TD, 2000, SIGCSE BULL, V32, P382, DOI 10.1145/331795.331890
   Hitz M., 1995, PROC INT S APPL CORP
   Joy W., 1984, INTRO DISPLAY EDITIN
   Kniesel G, 2004, SCI COMPUT PROGRAM, V52, P9, DOI 10.1016/j.scico.2004.03.002
   Kummerfeld Sarah K., 2003, ACE, V20, P105
   Mealy E, 2007, 2007 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P307, DOI 10.1109/ASWEC.2007.24
   Murphy-hill E., 2009, P 31 INT C SOFTW ENG
   Murphy-Hill E., 2009, THESIS PORTLAND STAT
   Murphy-Hill E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P421, DOI 10.1145/1368088.1368146
   Nielsen J., 2020, 10 Usability Heuristics for User Interface Design
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Rigby P., 2005, PROC OOPSLA WORKSHOP, P105
   Roberts D., 1997, Theory and Practice of Object Systems, V3, P253, DOI 10.1002/(SICI)1096-9942(1997)3:4<253::AID-TAPO3>3.0.CO;2-T
   SHNEIDERMAN B, 1982, DIRECTIONS HUMAN COM, P55
   Xing ZC, 2006, PROC IEEE INT CONF S, P458
NR 22
TC 10
Z9 11
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2012
VL 38
IS 6
BP 1417
EP 1431
DI 10.1109/TSE.2011.110
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 043PI
UT WOS:000311556100010
DA 2024-07-18
ER

PT J
AU Andrews, JH
   Menzies, T
   Li, FCH
AF Andrews, James H.
   Menzies, Tim
   Li, Felix C. H.
TI Genetic Algorithms for Randomized Unit Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; randomized testing; genetic algorithms; feature subset
   selection; search-based optimization; testing tools
ID SOFTWARE TEST DATA; GENERATION; CHECKING
AB Randomized testing is an effective method for testing software units. The thoroughness of randomized unit testing varies widely according to the settings of certain parameters, such as the relative frequencies with which methods are called. In this paper, we describe Nighthawk, a system which uses a genetic algorithm (GA) to find parameters for randomized unit testing that optimize test coverage. Designing GAs is somewhat of a black art. We therefore use a feature subset selection (FSS) tool to assess the size and content of the representations within the GA. Using that tool, we can reduce the size of the representation substantially while still achieving most of the coverage found using the full representation. Our reduced GA achieves almost the same results as the full system, but in only 10 percent of the time. These results suggest that FSS could significantly optimize metaheuristic search-based software engineering tools.
C1 [Andrews, James H.; Li, Felix C. H.] Univ Western Ontario, Dept Comp Sci, London, ON N6A 2B7, Canada.
   [Menzies, Tim] W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
C3 Western University (University of Western Ontario); West Virginia
   University
RP Andrews, JH (corresponding author), Univ Western Ontario, Dept Comp Sci, London, ON N6A 2B7, Canada.
EM andrews@csd.uwo.ca; tim@menzies.us
RI Menzies, Tim/X-7680-2019; Li, Felix/JCP-1106-2023
OI Menzies, Tim/0000-0002-5040-3196; 
FU Direct For Computer & Info Scie & Enginr [0810879] Funding Source:
   National Science Foundation; Division of Computing and Communication
   Foundations [0810879] Funding Source: National Science Foundation
CR ANDREWS J, 2009, P 5 INT C PRED MOD S
   ANDREWS J, 2007, P 22 IEEE ACM INT C
   ANDREWS J.H., 2006, Proceedings of the 1st international workshop on Random testing, P36, DOI [10.1145/1145735.1145741, DOI 10.1145/1145735.1145741]
   Andrews JH, 2003, IEEE T SOFTWARE ENG, V29, P634, DOI 10.1109/TSE.2003.1214327
   [Anonymous], 1994, Encyclopedia of software Engineering
   Antoy S, 2000, IEEE T SOFTWARE ENG, V26, P55, DOI 10.1109/32.825766
   Ball T, 2004, LECT NOTES COMPUT SC, V2999, P1
   Berner S, 2007, PROC INT CONF SOFTW, P612
   Burdy L., 2005, International Journal on Software Tools for Technology Transfer, V7, P212, DOI 10.1007/s10009-004-0167-4
   Ciupa I, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P71, DOI 10.1145/1368088.1368099
   Claessen Koen., 2000, Proceedings of the fifth ACM SIGPLAN international conference on Functional programming - ICFP'00, P268, DOI [10.1145/351240.351266, DOI 10.1145/351240.351266]
   Clarke L. A., 1976, IEEE Transactions on Software Engineering, VSE-2, P215, DOI 10.1109/TSE.1976.233817
   COK D, 2008, P SAVCBS, P27
   CORNETT S, 2006, MINIMUM ACCEPTABLE C
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   De Jong K.A., 1990, P INT WORKSHOP PARAL, P38
   DOONG RK, 1994, ACM T SOFTW ENG METH, V3, P101
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P774, DOI 10.1109/32.238581
   Godefroid Patrice, 2005, ACM SIGPLAN NOTICES, P213, DOI DOI 10.1145/1064978.1065036
   Goldberg David E, 1989, GENETIC ALGORITHMS S
   Groce A, 2007, PROC INT CONF SOFTW, P621
   Guo Q, 2004, LECT NOTES COMPUT SC, V2931, P164
   GUPTA N, 1998, P 6 INT S FDN SOFTW, P224
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Havelund K., 2000, International Journal on Software Tools for Technology Transfer (STTT), V2, P366, DOI [10.1007/s100090050043., DOI 10.1007/S100090050043]
   Hetzel W.C., 1973, Program Test Methods
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   KIRA K, 1992, MACHINE LEARNING /, P249
   Kononenko I., 1994, EUR C MACH LEARN, V94, P171, DOI DOI 10.1007/3-540-57868-4_57
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Leow WK, 2004, PROC INT CONF SOFTW, P96
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   Miller A., 2002, SUBSET SELECTION REG
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   NAMIN AS, 2009, P INT S SOFTW TEST A, P57
   OWEN D, 2003, SOFTWARE ENG KNOWLED, P158
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Pargas RoyP., 1999, Verification and Reliability, V9, P263
   RELA L, 2004, THESIS LAPPEENRANTA
   Rothermel G, 1998, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.1998.738487
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   TONELLA P, 2004, P INT S SOFTW TEST A, P119
   VISSER W, 2006, P INT S SOFTW TEST A, P37, DOI DOI 10.1145/1146238.1146243
   Visser W., 2004, P 2004 ACM SIGSOFT I, P97, DOI [DOI 10.1145/1007512.1007526, 10.1145/1007512.1007526]
   Watkins A, 2006, SOFTWARE PRACT EXPER, V36, P95, DOI 10.1002/spe.684
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
NR 48
TC 45
Z9 55
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2011
VL 37
IS 1
BP 80
EP 94
DI 10.1109/TSE.2010.46
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 712OS
UT WOS:000286676700006
DA 2024-07-18
ER

PT J
AU Buse, RPL
   Weimer, WR
AF Buse, Raymond P. L.
   Weimer, Westley R.
TI Learning a Metric for Code Readability
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT International Symposium on Software Testing and Analysis
CY JUL 20-24, 2008
CL Seattle, WA
DE Software readability; program understanding; machine learning; software
   maintenance; code metrics; FindBugs
ID PROGRAM READABILITY; SOFTWARE
AB In this paper, we explore the concept of code readability and investigate its relation to software quality. With data collected from 120 human annotators, we derive associations between a simple set of local code features and human notions of readability. Using those features, we construct an automated readability measure and show that it can be 80 percent effective and better than a human, on average, at predicting readability judgments. Furthermore, we show that this metric correlates strongly with three measures of software quality: code changes, automated defect reports, and defect log messages. We measure these correlations on over 2.2 million lines of code, as well as longitudinally, over many releases of selected projects. Finally, we discuss the implications of this study on programming language design and engineering practice. For example, our data suggest that comments, in and of themselves, are less important than simple blank lines to local judgments of readability.
C1 [Buse, Raymond P. L.; Weimer, Westley R.] Univ Virginia, Charlottesville, VA 22904 USA.
C3 University of Virginia
RP Buse, RPL (corresponding author), Univ Virginia, 151 Engineers Way,POB 400740, Charlottesville, VA 22904 USA.
EM buse@cs.virginia.edu; weimer@cs.virginia.edu
CR Aggarwal KK, 2002, P A REL MAI, P235, DOI 10.1109/RAMS.2002.981648
   Ambler S., 1997, SOFTWARE DEV, V5, P67
   Bederson BB, 2002, ACM T GRAPHIC, V21, P833, DOI 10.1145/571647.571649
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Buse R.P., 2008, Proceedings of the 2008 International Symposium on Software Testing and Analysis, P121
   Cannon L.W., 1990, RECOMMENDED C STYLE
   Chen TY, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P146
   Deimel L. E., 1985, ACM SIGCSE B, V17, P5
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   ELSHOFF JL, 1982, COMMUN ACM, V25, P512, DOI 10.1145/358589.358596
   Flesch R, 1948, J APPL PSYCHOL, V32, P221, DOI 10.1037/h0057532
   Giventer LawrenceL., 2007, STAT ANAL PUBLIC ADM
   Gosling James, 1996, The Java Language Specification
   Gunning R, 1952, TECHNIQUE CLEAR WRIT
   Haneef N. J., 1998, Software Engineering Notes, V23, P75, DOI 10.1145/279437.279470
   HATZIMANIKATIS AE, 1995, J SOFTW MAINT-RES PR, V7, P77, DOI 10.1002/smr.4360070203
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   *JUNIT ORG, 2006, JUNIT 4 0
   KNIGHT JC, 1991, ACM SIGSOFT SOFTWARE, V16, P29
   Kohavi R., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1137
   LEGOUES C, 2009, P 15 INT C TOOLS ALG
   Likert R., 1932, Archives of Psychology, V22, P44
   MACHAFFIE S, 2007, READABILITY METRIC C
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   MCLAUGHLIN GH, 1969, J READING, V12, P639
   MIARA RJ, 1983, COMMUN ACM, V26, P861, DOI 10.1145/182.358437
   Mitchell T. M., 1997, MACHINE LEARNING
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Ramamoorthy CV, 1996, COMPUTER, V29, P47, DOI 10.1109/2.539720
   Raymond DarrellR., 1991, P 1991 C CTR ADV STU, P3
   Relf P.A., 2005, P INT S EMP SOFTW EN
   Rugaber S, 2000, ANN SOFTW ENG, V9, P143, DOI 10.1023/A:1018976708691
   SIMONYI C, 1999, MSDN LIB         NOV
   SMITH EA, 1970, HUM FACTORS, V12, P457, DOI 10.1177/001872087001200505
   Stemler S.E., 2004, A comparison of consensus, consistency, and measurement approaches
   Sutter Herb, 2004, C++ coding standards: 101 rules, guidelines, and best practices
   TENNY T, 1988, IEEE T SOFTWARE ENG, V14, P1271, DOI 10.1109/32.6171
   Watters A., 1996, INTERNET PROGRAMMING
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   [No title captured]
NR 41
TC 209
Z9 241
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2010
VL 36
IS 4
BP 546
EP 558
DI 10.1109/TSE.2009.70
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 631LE
UT WOS:000280347600007
DA 2024-07-18
ER

PT J
AU Spanoudakis, G
   Zisman, A
AF Spanoudakis, George
   Zisman, Andrea
TI Discovering Services during Service-Based System Design Using UML
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Design notations and documentation; software process models; search
   discovery language; service discovery engine
AB Recently, there has been a proliferation of service-based systems, i.e., software systems that are composed of autonomous services but can also use software code. In order to support the development of these systems, it is necessary to have new methods, processes, and tools. In this paper, we describe a UML-based framework to assist with the development of service-based systems. The framework adopts an iterative process in which software services that can provide functional and nonfunctional characteristics of a system being developed are discovered, and the identified services are used to reformulate the design models of the system. The framework uses a query language to represent structural, behavioral, and quality characteristics of services to be identified, and a query processor to match the queries against service registries. The matching process is based on distance measurements between the queries and service specifications. A prototype tool has been implemented. The work has been evaluated in terms of recall, precision, and performance measurements.
C1 [Spanoudakis, George; Zisman, Andrea] City Univ London, Sch Informat, London EC1V 0HB, England.
C3 City University London
RP Spanoudakis, G (corresponding author), City Univ London, Sch Informat, London EC1V 0HB, England.
EM g.spanoudakis@soi.city.ac.uk; a.zisman@soi.city.ac.uk
FU European Commission [IST-511680]
FX The work reported in this paper has been funded by the European
   Commission under the Information Society Technologies Programme as part
   of the project SeCSE (contract IST-511680).
CR AGGARWAL R, 2004, P IEEE INT C SERV CO
   ALBERT P, 2006, P INT C WEB SERV JUL
   ANDERSON TW, 1952, ANN MATH STAT, V23, P193, DOI 10.1214/aoms/1177729437
   BEERI C, 2006, P 32 INT C VER LARG
   Ben Mokhtar S, 2008, J SYST SOFTWARE, V81, P785, DOI 10.1016/j.jss.2007.07.030
   CANFORA G, 2006, P 4 INT C SERV OR CO
   CHAFLE G, 2005, P INT C WEB SERV
   COURBIS C, 2005, P INT C WEB SERV
   DEPAOLI F, 2006, P 4 INT C SERV OR CO
   DEUBLER M, 2005, P ACM IEEE 8 INT C M
   DIPENTA M, 2006, P INT WORKSH SERV OR
   FOSTER H, 2004, P INT C WEB SERV
   [傅学怡 Fu Xueyi], 2004, [土木工程学报, China Civil Engineering Journal], V37, P1
   GARDNER T, 2004, P 2 EUR WORKSH OO WE
   GAROFALAKIS J, 2004, P INT WORKSH WEB ENG
   GRIRORI D, 2006, P INT C WEB SERV
   HALL RJ, 2004, P 2 INT C SERV OR CO
   HAUSMANN JH, 2004, P IEEE INT C WEB SER
   Horrocks Ian., 2003, Journal of Web Semantics, V1, P7, DOI [DOI 10.1016/J.WEBSEM.2003.07.001, https://doi.org/10.1016/j.websem.2003.07.001]
   HOSCHEK W, 2002, P IEEE ACM SUP C
   HULL D, 1993, P 16 ANN ACM SIGIR
   Jawhar I, 2005, I C COMP SYST APPLIC
   KELLER U, 2005, P 2 EUR SEM WEB C
   Klein M, 2004, IEEE INTERNET COMPUT, V8, P30, DOI 10.1109/MIC.2004.1260701
   Klusch M., 2006, P 5 INT C AUT AG MUL
   KOKASH N, 2006, P INT C WEB SERV
   KOZLENKOV A, 2006, P INT WORKSH SERV OR
   KOZLENKOV A, 2007, INT J WEB SERV RES, V81, P112
   KRAMLER G, 2005, P 1 C INT ENT SOFTW
   LI L, 2003, P INT WWW C WORKSH E
   MIKHAIEL R, 2006, P 4 INT C SERV OR CO
   Morato J, 2003, GWC 2004: SECOND INTERNATIONAL WORDNET CONFERENCE, PROCEEDINGS, P270
   NGUYEN XT, 2006, P 4 INT C SERV OR CO
   PANTAZOGLOU M, 2007, P SERV OR COMP LOOK
   PANTAZOGLOU M, 2006, P 4 INT C SERV OR CO
   PAOLUCCI M, 2002, P INT SEM WEB C
   Papadimitriou C.H., 1998, Combinatorial Optimization : Algorithms and Complexity
   PAPAZOGLOU M, 2009, REQUEST LANGUAGE WEB
   PISTORE M, 2005, P INT C WEB SERV
   Sanderson M., 2005, SIGIR 2005. Proceedings of the Twenty-Eighth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P162, DOI 10.1145/1076034.1076064
   Saracevic T, 2007, J AM SOC INF SCI TEC, V58, P2126, DOI 10.1002/asi.20681
   SHEN Z, 2005, P IEEE INT C SERV CO
   Spanoudakis G, 1996, INT J INTELL SYST, V11, P917, DOI 10.1002/(SICI)1098-111X(199611)11:11<917::AID-INT4>3.3.CO;2-V
   SPANOUDAKIS G, 2005, P INT C SERV COMP JU
   Wang Y., 2003, P 1 INT C SERV OR CO
   YUNYAO LY, 2005, P SIGMOD 05 JUN
   ZACHOS K, 2006, P INT WORKSH SERV OR
   Zaremski A. M., 1995, ACM Transactions on Software Engineering and Methodology, V4, P146, DOI 10.1145/210134.210179
   ZISMAN A, 2006, P 4 INT C SERV OR CO
NR 49
TC 20
Z9 22
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2010
VL 36
IS 3
BP 371
EP 389
DI 10.1109/TSE.2009.88
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 601PB
UT WOS:000278073400007
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Nan, N
   Harter, DE
AF Nan, Ning
   Harter, Donald E.
TI Impact of Budget and Schedule Pressure on Software Development Cycle
   Time and Effort
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cost estimation; time estimation; schedule and organizational issues;
   systems development
ID INFORMATION-TECHNOLOGY; PROJECT-MANAGEMENT; DEVELOPMENT TEAMS; QUALITY;
   PERFORMANCE; DESIGN; MODELS; COST; PRODUCTIVITY; MAINTENANCE
AB As excessive budget and schedule compression becomes the norm in today's software industry, an understanding of its impact on software development performance is crucial for effective management strategies. Previous software engineering research has implied a nonlinear impact of schedule pressure on software development outcomes. Borrowing insights from organizational studies, we formalize the effects of budget and schedule pressure on software cycle time and effort as U-shaped functions. The research models were empirically tested with data from a $25 billion/year international technology firm, where estimation bias is consciously minimized and potential confounding variables are properly tracked. We found that controlling for software process, size, complexity, and conformance quality, budget pressure, a less researched construct, has significant U-shaped relationships with development cycle time and development effort. On the other hand, contrary to our prediction, schedule pressure did not display significant nonlinear impact on development outcomes. A further exploration of the sampled projects revealed that the involvement of clients in the software development might have "eroded" the potential benefits of schedule pressure. This study indicates the importance of budget pressure in software development. Meanwhile, it implies that achieving the potential positive effect of schedule pressure requires cooperation between clients and software development teams.
C1 [Nan, Ning] Univ Oklahoma, Price Coll Business, Norman, OK 73019 USA.
   [Harter, Donald E.] Syracuse Univ, Whitman Sch Management, Syracuse, NY 13244 USA.
C3 University of Oklahoma System; University of Oklahoma - Norman; Syracuse
   University
RP Nan, N (corresponding author), Univ Oklahoma, Price Coll Business, 307 W Brooks, Norman, OK 73019 USA.
EM nnan@ou.edu; dharter@syr.edu
CR Abdel-Hamid TK, 1999, MIS QUART, V23, P531, DOI 10.2307/249488
   ABDELHAMID TK, 1993, IEEE T SOFTWARE ENG, V19, P603, DOI 10.1109/32.232025
   ABDELHAMID TK, 1989, COMMUN ACM, V32, P1426, DOI 10.1145/76380.76383
   ABDELHAMID TK, 1989, IEEE T SOFTWARE ENG, V15, P109, DOI 10.1109/32.21738
   ABDELHAMID TK, 1988, MIS QUART, V12, P395, DOI 10.2307/249206
   Agrawal M, 2007, IEEE T SOFTWARE ENG, V33, P145, DOI 10.1109/TSE.2007.29
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Ang S, 2001, MIS QUART, V25, P321, DOI 10.2307/3250920
   ANISMAN H, 1982, PSYCHOL STRESS PSYCH
   [Anonymous], 1995, The Capability Maturity Model: Guidelines for Improving the Software Process
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   Austin RD, 2001, INFORM SYST RES, V12, P195, DOI 10.1287/isre.12.2.195.9699
   BANKER RD, 1994, INFORM SOFTWARE TECH, V36, P275, DOI 10.1016/0950-5849(94)90083-3
   Banker RD, 1997, MANAGE SCI, V43, P1709, DOI 10.1287/mnsc.43.12.1709
   Banker RD, 1998, MANAGE SCI, V44, P433, DOI 10.1287/mnsc.44.4.433
   BANKER RD, 1989, IEEE T SOFTWARE ENG, V15, P416
   Baum JR, 2001, ACAD MANAGE J, V44, P292, DOI 10.5465/3069456
   BERRY R N, 1962, J Exp Psychol, V63, P275, DOI 10.1037/h0039547
   Boehm BW., 1981, Software Engineering Economics
   Brooks FP, 1974, The Mythical Man-Month: Essays on Software Engineering
   BURDICK D, 2000, GARTNER CASE STU JAN
   Chatterjee D, 2002, MIS QUART, V26, P65, DOI 10.2307/4132321
   Cook D.R., 1999, APPL REGRESSION INCL
   CSIKSZENTMIHALY.M, 1977, BOREDOM ANXIETY
   CSIKSZENTMIHALYI M, 1975, J HUMANIST PSYCHOL, V15, P41
   Darcy DP, 2005, IEEE T SOFTWARE ENG, V31, P982, DOI 10.1109/TSE.2005.130
   DAVIDSON R, 1981, ECONOMETRICA, V49, P781, DOI 10.2307/1911522
   DIENSTBIER RA, 1989, PSYCHOL REV, V96, P84, DOI 10.1037/0033-295X.96.1.84
   Duffy E., 1962, ACTIVATION BEHAV
   EREZ M, 1984, J APPL PSYCHOL, V69, P69, DOI 10.1037/0021-9010.69.1.69
   Fitzgerald B, 2006, MIS QUART, V30, P587
   FRANKENHAEUSER M, 1976, J HUM STRESS, V2, P35, DOI 10.1080/0097840X.1976.9936068
   French J.R.P., 1982, The mechanisms of job stress and strain
   Friedman T.L., 2006, WORLD IS FLAT GLOBAL
   GUTIERREZ GJ, 1991, MANAGE SCI, V37, P990, DOI 10.1287/mnsc.37.8.990
   Harter DE, 2000, MANAGE SCI, V46, P451, DOI 10.1287/mnsc.46.4.451.12056
   Helander ME, 1998, IEEE T SOFTWARE ENG, V24, P420, DOI 10.1109/32.689400
   Humphrey W S, 1995, A discipline for software engineering
   IVES B, 1991, MIS QUART, V15, P33, DOI 10.2307/249433
   JEFFERY DR, 1987, IEEE T SOFTWARE ENG, V13, P852, DOI 10.1109/TSE.1987.233496
   Jones C., 1996, APPL SOFTWARE MEASUR
   Kemerer ChrisF., 1997, Software Project Management: Readings and Cases
   KITCHENHAM BA, 1992, INFORM SOFTWARE TECH, V34, P211, DOI 10.1016/0950-5849(92)90077-3
   Krishnan MS, 2000, MANAGE SCI, V46, P745, DOI 10.1287/mnsc.46.6.745.11941
   Levina N, 2003, MIS QUART, V27, P331
   Locke EA, 2002, AM PSYCHOL, V57, P705, DOI 10.1037//0003-066X.57.9.705
   McComas A J, 1998, Gerodontology, V15, P3, DOI 10.1111/j.1741-2358.1998.00003.x
   McGrath J.E., 1976, Handbook of Industrial Organizational Psychology, P1351
   Nollen S., 1996, MANAGING CONTINGENT
   OLEARYKELLY AM, 1994, ACAD MANAGE J, V37, P1285, DOI 10.5465/256673
   PARKINSON C.N., 1957, PARKINSONS LAW OTHER
   PEETERS G, 2000, CROSSTALK J DEFENCE, P20
   Pfeffer J., 1988, Research in organizational behaviour
   PRICE KH, 1987, ORGAN BEHAV HUM DEC, V40, P330, DOI 10.1016/0749-5978(87)90020-3
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   Qing Hu, 1998, Journal of Management Information Systems, V15, P143
   RAGHAVENDRA CS, 1985, IEEE T SOFTWARE ENG, V11, P1184, DOI 10.1109/TSE.1985.231866
   ROBERT L.G., 1999, COMMUNICATIONS OFTHE, V42, P17
   RODGERS R, 1991, J APPL PSYCHOL, V76, P322, DOI 10.1037/0021-9010.76.2.322
   Ruhe G, 2005, IEEE SOFTWARE, V22, P47, DOI 10.1109/MS.2005.164
   SCHAUBROECK J, 1993, J APPL PSYCHOL, V78, P73, DOI 10.1037/0021-9010.78.1.73
   SCOTT WE, 1966, ORGAN BEHAV HUM PERF, V1, P3, DOI 10.1016/0030-5073(66)90003-1
   Selye H., 1975, STRESS LIFE
   Singh J, 1998, J MARKETING, V62, P69, DOI 10.2307/1251744
   SJOBERG H, 1977, J HUM STRESS, V3, P33
   Smirnov N.V., 1939, B LUNIVERSITE MOSCOU, V2, P3, DOI DOI 10.12691/AJSSM-2-1-2
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   STENNETT RG, 1957, J EXP PSYCHOL, V54, P54, DOI 10.1037/h0043340
   Stewart KJ, 2006, MIS QUART, V30, P291
   Weinberg M.W., 1971, PSYCHOL COMPUTER PRO
   WHITE H, 1980, ECONOMETRICA, V48, P817, DOI 10.2307/1912934
   Yerkes RM, 1908, J COMP NEUROL PSYCHO, V18, P459, DOI 10.1002/cne.920180503
   Yourdon E., 1997, DEATH MARCH COMPLETE
   Zmud RW, 1980, MIS QUART, V4, P45, DOI 10.2307/249336
NR 74
TC 64
Z9 74
U1 2
U2 43
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2009
VL 35
IS 5
BP 624
EP 637
DI 10.1109/TSE.2009.18
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 498PM
UT WOS:000270154300003
DA 2024-07-18
ER

PT J
AU Ducasse, S
   Pollet, D
AF Ducasse, Stephane
   Pollet, Damien
TI Software Architecture Reconstruction: A Process-Oriented Taxonomy
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 23rd IEEE International Conference on Software Maintenance
CY OCT 02-05, 2007
CL Paris, FRANCE
SP IEEE, IEEE Comp Soc, IEEE France Sect, TCSE, IEEE Comp Soc, Tech Council Software Engn, Reeng Forum, Univ Waterloo, Univ Studi Sannio
DE Software architecture reconstruction
ID SUPPORT; RECOVERY; MODEL; ENVIRONMENT; FEATURES; VIEWS
AB To maintain and understand large applications, it is important to know their architecture. The first problem is that unlike classes and packages, architecture is not explicitly represented in the code. The second problem is that successful applications evolve over time, so their architecture inevitably drifts. Reconstructing the architecture and checking whether it is still valid is therefore an important aid. While there is a plethora of approaches and techniques supporting architecture reconstruction, there is no comprehensive software architecture reconstruction state of the art and it is often difficult to compare the approaches. This paper presents a state of the art in software architecture reconstruction approaches.
C1 [Ducasse, Stephane; Pollet, Damien] Univ Lille 1, Ctr Rech Inria Lille Nord Europe, F-59650 Villeneuve Dascq, France.
C3 Universite de Lille
RP Ducasse, S (corresponding author), Univ Lille 1, Ctr Rech Inria Lille Nord Europe, Parc Sci Haute Borne,40 Ave Halley,Bat A,Park Pla, F-59650 Villeneuve Dascq, France.
EM stephane.ducasse@inria.fr; damien.pollet@inria.fr
OI Ducasse, Stephane/0000-0001-6070-6599
CR ALDRICH J, 2002, P 16 EUR C OBJ OR PR, P334
   ANASTASOPOULOS M, 2000, 03800E FRAUNH IESE
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], THESIS VIENNA U TECH
   [Anonymous], THESIS U STUTTGART
   [Anonymous], ARCHITECTURE RECONST
   [Anonymous], P CSMR 2006 10 EUR C
   [Anonymous], P 6 WORK C REV ENG
   [Anonymous], ARCHITECTURE RECONST
   Anquetil N, 1999, J SOFTW MAINT-RES PR, V11, P201, DOI 10.1002/(SICI)1096-908X(199905/06)11:3<201::AID-SMR192>3.0.CO;2-1
   Antoniol G, 1998, PROG COMPREHEN, P153, DOI 10.1109/WPC.1998.693342
   Arévalo G, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P122, DOI 10.1109/WCRE.2004.18
   Bassil S, 2001, PROG COMPREHEN, P7, DOI 10.1109/WPC.2001.921708
   BECK K, 2004, P EUR C OBJ OR PROGR, P139
   Bergenti Federico, 2000, P 12 INT C SOFTWARE, P336
   Bojic D., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P23, DOI 10.1109/CSMR.2000.827302
   Bowman I. T., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P555, DOI 10.1109/ICSE.1999.841045
   Bowman I. T., 1998, PROC CTR ADV STUD C, P123
   Bril RJ, 2001, PROG COMPREHEN, P269, DOI 10.1109/WPC.2001.921737
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Carmichael I, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P134, DOI 10.1109/ICSM.1995.526535
   Ceccato M, 2005, PROG COMPREHEN, P13, DOI 10.1109/WPC.2005.2
   Chen KR, 2000, PROG COMPREHEN, P241, DOI 10.1109/WPC.2000.852498
   Christl A, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P89
   CIMITILE A, 1995, J SYST SOFTWARE, V28, P117, DOI 10.1016/0164-1212(94)00049-S
   CONWAY ME, 1968, DATAMATION, V14, P28
   DEHONDT K, 1998, THESIS VRIJE U BRUSS
   Demeyer S., 2001, FAMIX 2 1 FAMOOS INF
   Ding L, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P191, DOI 10.1109/WICSA.2001.948429
   DUCASSE D, 1999, FAMOOS OO REENGINEER
   Ducasse S, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P309, DOI 10.1109/CSMR.2004.1281433
   Ducasse S, 2003, J SOFTW MAINT EVOL-R, V15, P345, DOI 10.1002/smr.279
   DUCASSE S, 2007, P 23 IEEE INT C SOFT, P94
   DUCASSE S, 2005, TOOLS SOFTWARE MAINT, P55
   Ducasse S, 2006, PROC IEEE INT CONF S, P203
   Duenas JC, 1998, SECOND EUROMICRO CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P113, DOI 10.1109/CSMR.1998.665766
   Dunsmore A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P467, DOI 10.1109/ICSE.2000.870437
   Ebert J., 2002, Electronic Notes in Theoretical Computer Science, V72, P47
   EDEN AH, 2001, P INT C SOFTW ENG WO
   Eisenbarth T, 2002, PROC IEEE INT CONF S, P273, DOI 10.1109/ICSM.2002.1167778
   EISENBARTH T, 2003, COMPUTER, V29, P210
   Eixelsberger W, 1998, PROC INT CONF SOFTW, P508, DOI 10.1109/ICSE.1998.671617
   Favre JM, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P204, DOI 10.1109/WCRE.2004.15
   FAVRE JM, 2003, P WORKSH EV LARG SCA
   Feijs L, 1998, SOFTWARE PRACT EXPER, V28, P371, DOI 10.1002/(SICI)1097-024X(19980410)28:4<371::AID-SPE154>3.0.CO;2-1
   Feijs L, 1998, COMMUN ACM, V41, P72, DOI 10.1145/290133.290151
   Finnigan PJ, 1997, IBM SYST J, V36, P564, DOI 10.1147/sj.364.0564
   Fiutem R, 1999, J SOFTW MAINT-RES PR, V11, P339, DOI 10.1002/(SICI)1096-908X(199909/10)11:5<339::AID-SMR196>3.0.CO;2-I
   FIUTEM R, 1996, P INT C SOFTW MAINT
   Gallagher K, 2005, 3RD IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEEDINGS, P76
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gang Huang, 2006, Automated Software Engineering, V13, P257, DOI 10.1007/s10515-006-7738-4
   Gansner ER, 2000, SOFTWARE PRACT EXPER, V30, P1203, DOI 10.1002/1097-024X(200009)30:11<1203::AID-SPE338>3.0.CO;2-N
   GARLAN D, 1995, IEEE SOFTWARE, V12, P17, DOI 10.1109/52.469757
   Garlan D., 2000, FUTURE SOFTWARE ENG, P91
   Garlan D, 2000, FDN COMPONENT BASED, P47
   GIRARD JF, 1997, P INT C SOFTW MAINT
   Greevy O, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P314, DOI 10.1109/CSMR.2005.21
   Grundy J, 2000, IEEE VISLANG, P5, DOI 10.1109/VL.2000.874344
   Guéhéneuc YG, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P172, DOI 10.1109/WCRE.2004.21
   Guéhéneuc YG, 2001, TOOLS, V39, P296, DOI 10.1109/TOOLS.2001.941682
   GUEHENEUC YG, 2006, P C SOFTW MAINT REEN
   GUO Y, 1999, P WORK IFIP C SOFTW, P15
   Hamou-Lhadj A, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P112, DOI 10.1109/CSMR.2005.46
   Hamou-Lhadj Abdelwahab., 2004, CASCON, P42
   HARRIS DR, 1995, P INT C SOFTW ENG IC
   Hassan AE, 2004, PROG COMPREHEN, P183, DOI 10.1109/WPC.2004.1311060
   HATCH A, 2004, THESIS DURHAM U
   Heuzeroth D, 2003, PROG COMPREHEN, P94
   Hofmeister C., 2000, APPL SOFTWARE ARCHIT
   HOLT R, 2001, P ASERC WORKSH SOFTW
   Holt RC, 2006, SCI COMPUT PROGRAM, V60, P149, DOI 10.1016/j.scico.2005.10.003
   Holt RC, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P210, DOI 10.1109/WCRE.1998.723191
   IEEE, 2000, REC PRACT ARCH DESCR
   Ivkovic I, 2003, PROG COMPREHEN, P266
   Jerding D, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P56, DOI 10.1109/WCRE.1997.624576
   KAZMAN R, 1994, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.1994.296768
   Kazman R, 1998, IEEE INT C ENG COMP, P68, DOI 10.1109/ICECCS.1998.706657
   Kazman R., 1999, Automated Software Engineering, V6, P107, DOI 10.1023/A:1008781513258
   KAZMAN R, 1998, P INT C SOFTW REUS
   Kazman R., 2005, Categorizing Business Goals for Software Architecture
   KELLENS A, 2007, T ASPECT ORIENTED SO, V4, P143
   Keller R. K., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P226, DOI 10.1109/ICSE.1999.841012
   Knodel J, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P120
   Knodel J, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P277
   Kramer C, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P208, DOI 10.1109/WCRE.1996.558905
   KRIKHAAR RL, 1999, THESIS U AMSTERDAM
   Kruchten P, 2006, IEEE SOFTWARE, V23, P22, DOI 10.1109/MS.2006.59
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   LANGE DB, 1995, P OOPSLA 95, P342
   Langelier G., 2005, Proc. IEEE/ACM Automated Software Engineering, P214
   Lanza M, 2003, IEEE T SOFTWARE ENG, V29, P782, DOI 10.1109/TSE.2003.1232284
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   Lethbridge T.C., 2004, Electronic Notes in Theoretical Computer Science, V94, P7
   Li QS, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P57
   LOHR E, 2005, P IEEE INT WORKSH VI
   Lundberg J., 2003, ELECT NOTES THEORETI, V82, P98
   Lungu M, 2005, 3RD IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEEDINGS, P95
   Magee J., 1995, P 5 EUROPEAN SOFTWAR, P137
   Mancoridis S., 1998, P INT WORKSH PROGR C
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Medvidovic N., 2006, Automated Software Engineering, V13, P225, DOI 10.1007/s10515-006-7737-5
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   MEDVIDOVIC N, 2003, P INT WORKSH SOFTW R
   Mendonca N. C., 2001, Automated Software Engineering, V8, P311, DOI 10.1023/A:1011217720860
   MENDONCA NC, 1996, P ISAW 2 SAN FRANC O, P101
   Mens K, 2006, COMPUT LANG SYST STR, V32, P140, DOI 10.1016/j.cl.2005.09.002
   MENS K, 2000, THESIS VRIJE U BRUSS
   Meyer M., 2006, Proceedings of the 2006 ACM symposium on Software visualization, P135, DOI DOI 10.1145/1148493.1148513
   MIODONSKI P, 2004, EVALUATION SOFTWARE
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Muller H., 1995, Object-oriented techology for database and software systems, P240, DOI [10.1142/9789812831163_0016, DOI 10.1142/9789812831163_0016]
   Murphy G.C., 1995, Proceedings of the 3rd ACM SIGSOFT symposium on Foundations of software engineering, P18
   Murphy G. C, 1996, THESIS U WASHINGTON
   NAAB M, 2005, THESIS FRAUNHOFER IE
   NIERE J, 2001, TRRI01222 U PAD SOFT
   Nora B., 2006, Journal of Computer Science, V2, P322
   O'Brien L, 2002, CMUSEI2002TR024
   O'Brien L, 2005, 13 IEEE INT WORKSH S, P81, DOI [10.1109/STEP.2005.29, DOI 10.1109/STEP.2005.29]
   PACIONE M, 2005, THESIS U STRATHCLYDE
   PANAS T, 2005, THESIS VAJJO U
   PASHOV I, 2004, P IEEE INT C WORKSH
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   PHILIPPOW I, 2003, P WORKSH MOD VAR OBJ, P42
   Pinzger M, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P170, DOI 10.1109/WCRE.2002.1173075
   Pinzger M, 2002, PROG COMPREHEN, P53, DOI 10.1109/WPC.2002.1021318
   PINZGER M, 2004, P INT WORKSH PROD FA, P332
   Pinzger M, 2005, ELECTRON NOTES THEOR, V127, P183, DOI 10.1016/j.entcs.2004.08.043
   Reenskaug Trygve., 1996, WORKING OBJECTS OORA
   Richner T, 2002, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.2002.1167745
   Richner T., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P13, DOI 10.1109/ICSM.1999.792487
   Riva C, 2002, SIXTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P47, DOI 10.1109/CSMR.2002.995789
   RIVA C, 2004, THESIS TU VIENNA
   Robbins JE, 1998, KNOWL-BASED SYST, V11, P47, DOI 10.1016/S0950-7051(98)00055-0
   Salah M, 2004, PROC IEEE INT CONF S, P72, DOI 10.1109/ICSM.2004.1357792
   Sangal Neeraj, 2005, P 20 ANN ACM SIGPLAN, P167, DOI DOI 10.1145/1103845.1094824
   Sartipi K., 2003, THESIS U WATERLOO
   SEFIKA M, 1996, THESIS U ILLINOIS
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   SHULL F, 1996, CSTR3597 U MAR
   Siff M, 1999, IEEE T SOFTWARE ENG, V25, P749, DOI 10.1109/32.824377
   SIM SE, 1999, P INT C SOFTW MAINT, P381, DOI DOI 10.1109/ICSM.1999.792636
   SMOLANDER K, 2001, REQUIRED OPTIONAL VI
   Sochos P, 2006, 13TH ANNUAL IEEE INTERNATIONAL SYMPOSIUM AND WORKSHOP ON ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P308, DOI 10.1109/ECBS.2006.69
   SONI D, 1995, PROC INT CONF SOFTW, P196, DOI 10.1145/225014.225033
   Stoermer C, 2006, SOFTWARE PRACT EXPER, V36, P333, DOI 10.1002/spe.699
   Stoermer C, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P46, DOI 10.1109/WCRE.2003.1287236
   Stoermer C, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P35, DOI 10.1109/WICSA.2001.948405
   Storey MAD, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P275, DOI 10.1109/ICSM.1995.526549
   Storey MAD, 1999, J SYST SOFTWARE, V44, P171, DOI 10.1016/S0164-1212(98)10055-9
   SULLIVAN KJ, 2001, P EUR SOFTW ENG C S
   SVETINOVIC D, 2001, P WORK C REV ENG
   Systä T, 2001, SOFTWARE PRACT EXPER, V31, P371, DOI 10.1002/spe.386
   Systa Tarja., 1999, P WORKSHOP OBJECT OR, P304
   Telea A, 2002, PROG COMPREHEN, P3, DOI 10.1109/WPC.2002.1021303
   Tilley SR, 1996, FOURTH WORKSHOP ON PROGRAM COMPREHENSION, PROCEEDINGS, P19, DOI 10.1109/WPC.1996.501117
   TILLEY T, 2003, P INT C FORM CONC AN
   Tonella P, 2001, IEEE T SOFTWARE ENG, V27, P351, DOI 10.1109/32.917524
   TRAN J, 1999, P C CTR ADV STUD COL
   TRIFU A, 2001, THESIS U KARLSRUHE
   Tu Q, 2001, PROC IEEE INT CONF S, P398, DOI 10.1109/ICSM.2001.972753
   van Deursen A, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P122, DOI 10.1109/WICSA.2004.1310696
   VASCONCELOS A, 2004, P BRAZ S SOFTW ENG
   WALKER RJ, 2000, P C CTR ADV STUD COL, P12
   WENDEHALS L, 2003, P INT C SOFTW ENG WO
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
   WILDE N, 1995, J SOFTW MAINT-RES PR, V7, P49, DOI 10.1002/smr.4360070105
   WILDE N, 1992, IEEE T SOFTWARE ENG, V18, P1038, DOI 10.1109/TSE.1992.1263033
   Wilde N, 2003, J SYST SOFTWARE, V65, P105, DOI [10.1016/S0164-1212(02)00052-3, 10.1016/s0164-1212(02)00052-3]
   Wong K., 1998, The Rigi User's Manual - Version 5.4.4
   Wong WE, 1999, ASSET'99: 1999 IEEE SYMPOSIUM ON APPLICATION-SPECIFIC SYSTEMS AND SOFTWARE ENGINEERING & TECHNOLOGY - PROCEEDINGS, P194, DOI 10.1109/ASSET.1999.756769
   WOODS SG, 1999, SEI INTERACTIVE ARCH, V2
   WU L, 2004, P C CTR ADV STUD COL, P56
   Wu XM, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P90
   Wuyts R, 1998, TOOLS 26 - TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES - PROCEEDINGS, P112, DOI 10.1109/TOOLS.1998.711007
   Wuyts R., 2001, Ph.D. thesis
   Yan H, 2004, PROC INT CONF SOFTW, P470, DOI 10.1109/ICSE.2004.1317469
   YEH AS, 1997, P INT C SOFTW ENG
   [No title captured]
   [No title captured]
NR 181
TC 172
Z9 188
U1 1
U2 22
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2009
VL 35
IS 4
BP 573
EP 591
DI 10.1109/TSE.2009.19
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 474TB
UT WOS:000268305800011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cleland-Huang, J
   Marrero, W
   Berenbach, B
AF Cleland-Huang, Jane
   Marrero, Will
   Berenbach, Brian
TI Goal-centric traceability: Using virtual plumblines to maintain critical
   systemic qualities
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT International Symposium on Software Testing and Analysis (ISSTA)
CY 2007
CL Univ London Sch Oriental & African Studies, Brunei Gallery, London,
   ENGLAND
HO Univ London Sch Oriental & African Studies, Brunei Gallery
DE traceability; quality goals; nonfunctional requirements; goal modeling;
   software maintenance; software evolution
ID REQUIREMENTS; GENERATION; LINKS
AB Successful software development involves the elicitation, implementation, and management of critical systemic requirements related to qualities such as security, usability, and performance. Unfortunately, even when such qualities are carefully incorporated into the initial design and implemented code, there are no guarantees that they will be consistently maintained throughout the lifetime of the software system. Even though it is well known that system qualities tend to erode as functional and environmental changes are introduced, existing regression testing techniques are primarily designed to test the impact of change upon system functionality rather than to evaluate how it might affect more global qualities. The concept of using goal-centric traceability to establish relationships between a set of strategically placed assessment models and system goals is introduced. This paper describes the process, algorithms, and techniques for utilizing goal models to establish executable traces between goals and assessment models, detect change impact points through the use of automated traceability techniques, propagate impact events, and assess the impact of change upon systemic qualities. The approach is illustrated through two case studies.
C1 [Cleland-Huang, Jane; Marrero, Will] Depaul Univ, Sch Comp, Chicago, IL 60604 USA.
   [Berenbach, Brian] Siemens Corp Res, Princeton, NJ 08540 USA.
C3 DePaul University; Siemens AG
RP Cleland-Huang, J (corresponding author), Depaul Univ, Sch Comp, 243 S Wabash Ave, Chicago, IL 60604 USA.
EM jhuang@cs.depaul.edu; marrero@cs.depaul.edu; brian.berenbach@siemens.com
CR ABOWD G, 1997, CMUSEI96TR025
   Alexander I, 2003, IEEE SOFTWARE, V20, P58, DOI 10.1109/MS.2003.1159030
   Ambriola V., 1997, ACM Transactions on Software Engineering and Methodology, V6, P283, DOI 10.1145/258077.258080
   [Anonymous], 1990, 610121990R2002 IEEE
   [Anonymous], THESIS STANFORD U
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bengtsson P, 2004, J SYST SOFTWARE, V69, P129, DOI 10.1016/S0164-1212(03)00080-3
   BERENBACH B, 1984, P DIG EQ CORP US SOC, P661
   BERENBACH B, 1991, SCS SIMULATION SERIE, V24
   Boehm B., 1978, TRW SERIES SOFTWARE
   BOEHM B, 1973, TRW SERIES SOFTWARE
   Castro Jaelson., 2005, AGENT ORIENTED METHO
   CHUNG L, 1995, PROC INT CONF SOFTW, P25, DOI 10.1145/225014.225017
   CHUNG L, 1993, DKBSTR911 U TOR DEP
   Chung L., 2000, Non-functional Requirements in Software Engineering
   Cleland-Huang J, 2005, PROC INT CONF SOFTW, P362
   Cleland-Huang J., 2003, Requirements Engineering, V8, P171, DOI 10.1007/s00766-003-0175-z
   Cleland-Huang J, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P212
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   CLELANDHUANG J, 2001, P IEEE JOINT INT C R, P289
   CLELANDHUANG J, 2005, P 3 INT WORKSH TRAC
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   CRONE B, 2006, SIM NEWS         FEB, P6
   Cysneiros LM, 2004, IEEE T SOFTWARE ENG, V30, P328, DOI 10.1109/TSE.2004.10
   DARDENNE A, 1993, SCI COMPUTER PROGRAM
   FLETCHER J, 2007, P ACM INT S GRAND CH, P82
   Fletcher J, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P363
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hull E., 2002, Requirements Engineering
   *INT COUNC SYST EN, 2008, SE TOOLS TAX REQ TRA
   Kazman R, 1996, IEEE SOFTWARE, V13, P47, DOI 10.1109/52.542294
   Kazman R., 2000, Tech. Rep. CMU/SEI-2000-TR-004
   LEVESON NG, 1993, COMPUTER, V26, P18, DOI 10.1109/MC.1993.274940
   Lin J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P363
   Liu L, 2004, INFORM SYST, V29, P187, DOI 10.1016/S0306-4379(03)00052-8
   Maiden N, 2005, IEEE SOFTWARE, V22, P104, DOI 10.1109/MS.2005.113
   Marcus A, 2005, INT J SOFTW ENG KNOW, V15, P811, DOI 10.1142/S0218194005002543
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   PARNAS DL, 1990, COMMUN ACM, V33, P636, DOI 10.1145/78973.78974
   Peters DK, 2002, IEEE T SOFTWARE ENG, V28, P146, DOI 10.1109/32.988496
   Pohl K, 1999, ACM T SOFTW ENG METH, V8, P343, DOI 10.1145/322993.322995
   Regev G, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P353, DOI 10.1109/RE.2005.80
   Robertson S, 2012, Mastering the requirements process: getting requirements right
   Robinson WN, 2006, REQUIR ENG, V11, P17, DOI 10.1007/s00766-005-0016-3
   SALEH K, 2004, P INT C INN INF TECH
   Seffah A, 2001, SECOND ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P311, DOI 10.1109/APAQS.2001.990036
   Sheyner O, 2002, P IEEE S SECUR PRIV, P273, DOI 10.1109/SECPRI.2002.1004377
   Smith C.U., 2002, SCALABLE SOFTWARE
   THANE H, 2002, THESIS ROYAL I TECHN
   Tsai J. J. P., 1995, MONITORING DEBUGGING
   van Lamsweerde A, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P4
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   Winbladh K, 2006, IEEE INT CONF AUTOM, P289
   YU ESK, 1994, PROC INT CONF SOFTW, P159, DOI 10.1109/ICSE.1994.296775
   Zou XC, 2006, P INT COMP SOFTW APP, P265
   2003, KAOS TUTORIAL
NR 59
TC 21
Z9 23
U1 1
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2008
VL 34
IS 5
BP 685
EP 699
DI 10.1109/TSE.2008.45
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 351WM
UT WOS:000259456600008
DA 2024-07-18
ER

PT J
AU Cohen, MB
   Dwyer, MB
   Shi, JF
AF Cohen, Myra B.
   Dwyer, Matthew B.
   Shi, Jiangfan
TI Constructing interaction test suites for highly-configurable systems in
   the presence of constraints: A greedy approach
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT International Symposium on Software Testing and Analysis (ISSTA)
CY 2007
CL Univ London Sch Oriental & African Studies, Brunei Gallery, London,
   ENGLAND
HO Univ London Sch Oriental & African Studies, Brunei Gallery
DE combinatorial interaction testing; constraints; covering arrays;
   propositional logic; satisfiability (SAT) checking
ID GENERATION; ALGORITHMS; DESIGN
AB Researchers have explored the application of combinatorial interaction testing (CIT) methods to construct samples to drive systematic testing of software system configurations. Applying CIT to highly-configurable software systems is complicated by the fact that, in many such systems, there are constraints between specific configuration parameters that render certain combinations invalid. Many CIT algorithms lack a mechanism to avoid these. In recent work, automated constraint solving methods have been combined with search-based CIT construction methods to address the constraint problem with promising results. However, these techniques can incur a nontrivial overhead. In this paper, we build upon our previous work to develop a family of greedy CIT sample generation algorithms that exploit calculations made by modern Boolean satisfiability (SAT) solvers to prune the search space of the CIT problem. We perform a comparative evaluation of the cost effectiveness of these algorithms on four real-world highly-configurable software systems and on a population of synthetic examples that share the characteristics of those systems. In combination, our techniques reduce the cost of CIT in the presence of constraints to 30 percent of the cost of widely used unconstrained CIT methods without sacrificing the quality of the solutions.
C1 [Cohen, Myra B.; Dwyer, Matthew B.; Shi, Jiangfan] Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
C3 University of Nebraska System; University of Nebraska Lincoln
RP Cohen, MB (corresponding author), Univ Nebraska, Dept Comp Sci & Engn, Avery Hall, Lincoln, NE 68588 USA.
EM myra@cse.unl.edu; dwyer@cse.unl.edu; jfshi@cse.unl.edu
RI Shi, Jiangfan/F-5939-2012
OI Dwyer, Matthew/0000-0002-1937-1544
FU Direct For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [0747009] Funding Source: National Science
   Foundation
CR *AP SOFTW FDN, 2007, AP HTTP SEV
   BROWNLIE R, 1992, AT&T TECH J, V71, P41, DOI 10.1002/j.1538-7305.1992.tb00164.x
   Bryce RC, 2005, PROC INT CONF SOFTW, P146
   Bryce RC, 2006, INFORM SOFTWARE TECH, V48, P960, DOI 10.1016/j.infsof.2006.03.004
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen M.B., 2007, P 2007 INT S SOFTW T, P129
   Cohen M.B., 2006, P ISSTA 2006 WORKSHO, P53, DOI DOI 10.1145/1147249.1147257
   Cohen MB, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P394, DOI 10.1109/ISSRE.2003.1251061
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Cohen MB, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P121, DOI 10.1109/TAIC.PART.2007.17
   Colbourn CJ, 2004, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P345
   Czerwonka J., 2006, PROC 24 PACIFIC NW S, P419
   DAVIS M, 1960, J ACM, V7, P201, DOI 10.1145/321033.321034
   Dunietz IS, 1997, PROC INT CONF SOFTW, P205, DOI 10.1145/253228.253271
   DVORAK D, 2000, P IEEE AER C MAR
   EEN N, 2007, MINISAT C V1 14 1
   *FREE SOFTW FDN, 2005, GNU 4 1 1 MANP
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Hartman A, 2005, GRAPH THEORY, COMBINATORICS AND ALGORITHMS: INTERDISCIPLINARY APPLICATIONS, P237
   Hartman A, 2004, DISCRETE MATH, V284, P149, DOI 10.1016/j.disc.2003.11.029
   Hnich B, 2006, CONSTRAINTS, V11, P199, DOI 10.1007/s10601-006-7094-9
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   HOLZMANN GJ, 2006, ON FLY LTL MODEL CHE
   *IBM ALPHAWORKS, 2005, IBM INT TEST CAS HAN
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Lott C., 2005, SIGSOFT Softw. Eng. Notes, V30, P1, DOI [10.1145/1082983.1083281, DOI 10.1145/1082983.1083281]
   MANDL R, 1985, COMMUN ACM, V28, P1054, DOI 10.1145/4372.4375
   Marques-Silva JP, 1999, IEEE T COMPUT, V48, P506, DOI 10.1109/12.769433
   McGregor J.D., 2001, TESTING SOFTWARE PRO
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   *NOK CORP, 2007, NOK MOB PHON LIN
   Nurmela KJ, 2004, DISCRETE APPL MATH, V138, P143, DOI 10.1016/S0166-218X(03)00291-9
   Pargament K., 1999, The International Journal for the Psychology of Religion, V9, P3, DOI DOI 10.1207/S15327582IJPR0901_2
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, P1, DOI 10.1109/TSE.1976.233797
   Tai KC, 2002, IEEE T SOFTWARE ENG, V28, P109, DOI 10.1109/32.979992
   Tinelli C, 2002, LECT NOTES ARTIF INT, V2424, P308, DOI 10.1007/3-540-45757-7_26
   Tung YW, 2000, AEROSP CONF PROC, P431, DOI 10.1109/AERO.2000.879426
   Walsh T., 2000, Principles and Practice of Constraint Programming - CP 2000. 6th International Conference, CP 2000. Proceedings (Lecture Notes in Computer Science Vol.1894), P441
   Williams AW, 2001, ACS/IEEE INTERNATIONAL CONFERENCE ON COMPUTER SYSTEMS AND APPLICATIONS, PROCEEDINGS, P304, DOI 10.1109/AICCSA.2001.934001
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
NR 43
TC 193
Z9 222
U1 1
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2008
VL 34
IS 5
BP 633
EP 650
DI 10.1109/TSE.2008.50
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 351WM
UT WOS:000259456600005
DA 2024-07-18
ER

PT J
AU Eaddy, M
   Zimmermann, T
   Sherwood, KD
   Garg, V
   Murphy, GC
   Nagappan, N
   Aho, AV
AF Eaddy, Marc
   Zimmermann, Thomas
   Sherwood, Kaitlin D.
   Garg, Vibhav
   Murphy, Gail C.
   Nagappan, Nachiappan
   Aho, Alfred V.
TI Do crosscutting concerns cause defects?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE crosscutting concerns; fault proneness; feature location; requirements
   traceability; mining software repositories; metrics; statistical
   analysis; empirical software engineering; open source software
ID SOFTWARE-QUALITY; SOURCE CODE; FEATURES; METRICS; MODELS
AB There is a growing consensus that crosscutting concerns harm code quality. An example of a crosscutting concern is a functional requirement whose implementation is distributed across multiple software modules. We asked the question, "How much does the amount that a concern is crosscutting affect the number of defects in a program?" We conducted three extensive case studies to help answer this question. All three studies revealed a moderate to strong statistically significant correlation between the degree of scattering and the number of defects. This paper describes the experimental framework we developed to conduct the studies, the metrics we adopted and developed to measure the degree of scattering, the studies we performed, the efforts we undertook to remove experimental and other biases, and the results we obtained. In the process, we have formulated a theory that explains why increased scattering might lead to increased defects.
C1 [Eaddy, Marc; Garg, Vibhav; Aho, Alfred V.] Columbia Univ, Dept Comp Sci, New York, NY 10027 USA.
   [Zimmermann, Thomas] Univ Calgary, Dept Comp Sci, Calgary, AB T2N 1N4, Canada.
   [Sherwood, Kaitlin D.; Murphy, Gail C.] Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1Z4, Canada.
   [Nagappan, Nachiappan] Microsoft Res, Software Reliabil Res, Redmond, WA 98052 USA.
C3 Columbia University; University of Calgary; University of British
   Columbia; Microsoft
RP Eaddy, M (corresponding author), Columbia Univ, Dept Comp Sci, 1214 Amsterdam Ave, New York, NY 10027 USA.
EM eaddy@ca.columbia.edu; zimmerth@cpsc.ucalgary.ca; ducky@webfoot.com;
   vgarg@ca.columbia.edu; murphy@cs.ubc.ca; nachin@microsoft.com;
   aho@ca.columbia.edu
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   [Anonymous], 1991, A User's Guide to Principal Components
   [Anonymous], SOFTWARE MAINTENANCE
   [Anonymous], ACM Computing Surveys, DOI [DOI 10.1145/242224.242420, 10.1145/242224.242420]
   [Anonymous], P 27 INT C SOFTW ENG
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   BARTSCH M, 2007, P WORKSH ASS ASP TEC
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   BERG KV, 2006, P WORKSH ASP OR REQ
   BIGGERSTAFF TJ, 1993, PROC INT CONF SOFTW, P482, DOI 10.1109/ICSE.1993.346017
   BIYANI S, 1998, P 9 INT S SOFTW REL
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   BRUNTINK M, 2006, P 28 INT C SOFTW ENG
   CANFORA G, 2006, P 22 INT C SOFTW MAI
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   Cederqvist P., 2002, VERSION MANAGEMENT C
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cohen J., 1988, STAT POWER ANAL BEHA
   Collins-Sussman B., 2004, VERSION CONTROL SUBV
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   EADDY M, 2007, P WORKSH ASS CONT MO
   *ECMA, 2007, 16262 ISOIEC
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Eisenberg AD, 2005, PROC IEEE INT CONF S, P337
   El-Emam K., 2000, 44142 NRC
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Figueiredo E., 2005, P 9 ECOOP WORKSH QUA
   FILHO FC, 2006, FSE 06, P152
   FILMAN R, 2005, ASPECT ORIENTED SOFT
   FISCHER M, 2003, P 19 INT C SOFTW MAI, V23
   GARCIA A, 2005, P INT C ASP OR SOFTW
   GIBBS C, 2005, P 19 EUR C OBJ OR PR, P241
   Greenwood P, 2007, LECT NOTES COMPUT SC, V4609, P176
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Harrison R, 1996, INFORM SOFTWARE TECH, V38, P443, DOI 10.1016/0950-5849(95)01081-5
   Harrison R, 2000, J SYST SOFTWARE, V52, P173, DOI 10.1016/S0164-1212(99)00144-2
   *ISO IEC, 1996, 145981 IDS ISO IEC
   Kachigan SamKash., 1986, STAT ANAL
   Kan S. H., 2003, METRICS MODELS SOFTW
   KERSTEN M, 2006, FDN SOFTWARE ENG
   Khoshgoftaar TM, 2000, IEEE T RELIAB, V49, P4, DOI 10.1109/24.855532
   Khoshgoftaar TM, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P364, DOI 10.1109/ISSRE.1996.558896
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   Ko A.J., 2007, P 29 INT C SOFTW ENG
   LAI A, 1999, P WORKSH MULT SEP CO
   LETOVSKY S, 1986, IEEE SOFTWARE, V3, P41, DOI 10.1109/MS.1986.233414
   Lippert M., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P418, DOI 10.1109/ICSE.2000.870432
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   REVELLE M, 2005, P 13 IEEE INT WORKSH
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   ROBILLARD MP, 2003, THESIS U BRIT COLUMB
   ROBILLARD MP, 2005, P WORKSH ECL TECHN E
   Rochkind M. J., 1975, IEEE Transactions on Software Engineering, VSE-1, P364, DOI 10.1109/TSE.1975.6312866
   SLIWERSKI T, 2005, P WORKSH MIN SOFTW R
   Sneath P. H. A., 1973, Numerical Taxonomy: The Principles and Practice of Numerical Classification
   Sutton S.M., 2005, ASPECT ORIENTED SOFT, P479
   TSANG SL, 2004, P 7 INT S OBJ OR REA
   WILDE N, 1995, J SOFTW MAINT-RES PR, V7, P49, DOI 10.1002/smr.4360070105
   Wong WE, 2000, J SYST SOFTWARE, V54, P87, DOI 10.1016/S0164-1212(00)00029-7
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
   Zhang YZ, 2003, HUM IMMUNOL, V64, P130, DOI 10.1016/S0198-8859(02)00743-7
   Zhao W, 2006, ACM T SOFTW ENG METH, V15, P195, DOI 10.1145/1131421.1131424
NR 65
TC 128
Z9 158
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2008
VL 34
IS 4
BP 497
EP 515
DI 10.1109/TSE.2008.36
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 330JI
UT WOS:000257936500006
DA 2024-07-18
ER

PT J
AU Zhou, YM
   Leung, H
   Winoto, P
AF Zhou, Yuming
   Leung, Hareton
   Winoto, Pinata
TI MNav: A Markov model-based web site navigability measure
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 22nd IEEE International Conference on Software Maintenance
CY SEP 24-27, 2006
CL Philadelphia, PA
SP IEEE
DE web site; navigability; measure; Markov chain
ID DESIGN; ALGORITHM; REGULARITIES; NAVIGATION; PAGERANK; QUALITY
AB Web site success is significantly associated with navigability, an important attribute of usability that denotes the ease with which users find desired information as they move through a Web site. Navigable Web sites allow users to form a mental model of the type and location of information in the Web site and an expectation of where and to what a particular hyperlink will lead. Existing navigability measures are based mainly on the static hyperlink structure of a Web site. Such measures, however, have two main drawbacks: 1) the effect on navigability of a hyperlink structure cannot be well characterized and 2) the effect on navigability of the navigation aids (such as the "Back" button provided by a browser) is ignored. In this paper, we abstract a dynamic Web surfing behavior as a Markov model which synthesizes typical surfing actions. Based on this model, we propose a novel navigability measure MNav. The experimental results show that MNav can be efficiently computed and it provides an effective and useful measurement of Web site navigability.
C1 Hong Kong Polytech Univ, Dept Comp, Hong Kong, Hong Kong, Peoples R China.
   Hong Kong Baptist Univ, Dept Comp Sci, Hong Kong, Hong Kong, Peoples R China.
C3 Hong Kong Polytechnic University; Hong Kong Baptist University
RP Zhou, YM (corresponding author), Hong Kong Polytech Univ, Dept Comp, Hong Kong, Hong Kong, Peoples R China.
EM csyzhou@comp.polyu.edu.hk; cshleung@inet.polyu.edu.hk;
   pinata@comp.hkbu.edu.hk
RI Leung, Hareton Kam Nang/O-5899-2014
OI Leung, Hareton Kam Nang/0000-0002-1766-7667
CR [Anonymous], 1998, Computer Networks and ISDN Systems, DOI [DOI 10.1016/S0169-7552(98)00110-X, 10.1016/S0169-7552(98)00110-X]
   [Anonymous], 2000, Data Mining: Practical Machine Learning Tools and Techniques with Java Implementations
   AUMUELLER DJ, 2003, THESIS U LEEDS
   BERNARD ML, 2002, THESIS WICHITA STATE
   Bianchini M., 2005, ACM Transactions on Internet Technology, V5, P92, DOI 10.1145/1052934.1052938
   Borges J, 2004, INT J INF TECH DECIS, V3, P307, DOI 10.1142/S0219622004001021
   BORGES J, 2000, SIGKDD EXPLORATIONS, V2, P40
   BOTAFOGO RA, 1992, ACM T INFORM SYST, V10, P142, DOI 10.1145/146802.146826
   BOTAFOGO RA, 1991, P 3 ACM C HYP, P63
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P513, DOI 10.1109/32.926174
   Broder AZ, 2006, INFORM RETRIEVAL, V9, P123, DOI 10.1007/s10791-006-7146-1
   Chi E., 2001, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, P490, DOI [10.1145/365024.365325, DOI 10.1145/365024.365325]
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   DEBRA P, 2005, HYPERTEXT METRICS RE
   Diligenti M, 2004, IEEE T KNOWL DATA EN, V16, P4, DOI 10.1109/TKDE.2004.1264818
   ESCHER T, 2006, P ANN M AM POL SCI A
   Gansner E., 2005, DRAWING GRAPHS DOT
   Haveliwala TH, 2003, IEEE T KNOWL DATA EN, V15, P784, DOI 10.1109/TKDE.2003.1208999
   Huberman BA, 1998, SCIENCE, V280, P95, DOI 10.1126/science.280.5360.95
   KAMVAR S. D., 2003, 200317 STANF U
   KAMVAR SD, 2003, 200326 STANF U
   Kamvar Sepandar D., 2003, P 12 INT C WORLD WID, P261, DOI DOI 10.1145/775152.775190
   KIGER JI, 1984, INT J MAN MACH STUD, V20, P201, DOI 10.1016/S0020-7373(84)80018-8
   Kleinberg JM, 1999, J ACM, V46, P604, DOI 10.1145/324133.324140
   Langville A. N., 2003, Internet Math, V1, P335, DOI DOI 10.1080/15427951.2004.10129091
   LARSON K, 1998, P 16 ACM C HUM FACT, P18
   Levene M., 2001, Knowledge and Information Systems, V3, P120, DOI 10.1007/PL00011657
   Levene M., 2003, INT J INF TECH DECIS, V2, P459
   Liu JM, 2004, IEEE T KNOWL DATA EN, V16, P566, DOI 10.1109/TKDE.2004.1277818
   Machlis S., 1998, Computerworld, V32, P43
   McDonald S, 1998, HUM FACTORS, V40, P18, DOI 10.1518/001872098779480541
   McEneaney JE, 2001, INT J HUM-COMPUT ST, V55, P761, DOI 10.1006/ijhc.2001.0505
   MCENEANEY JE, 1999, P 10 ACM C HYP HYP, P61
   McGovern G., 2001, Web Content Style Guide
   Meyer, 2000, MATRIX ANAL APPL LIN, DOI 10.1137/1.9780898719512
   Meyn S. P., 1993, Markov chains and stochastic stability, DOI [10.1007%2F978-1-4471-3267-7, DOI 10.1007/978-1-4471-3267-7, 10.1007/978-1-4471-3267-7]
   MOHAGEG MF, 1992, HUM FACTORS, V34, P351, DOI 10.1177/001872089203400308
   NIELSEN J, 1990, HYPERTEXT HYPERMEDIA
   Palmer JW, 2002, INFORM SYST RES, V13, P151, DOI 10.1287/isre.13.2.151.88
   Pirolli P, 1999, PSYCHOL REV, V106, P643, DOI 10.1037/0033-295X.106.4.643
   Pirolli P, 2005, COGNITIVE SCI, V29, P343, DOI 10.1207/s15516709cog0000_20
   SCHEMPER M, 1991, STATISTICIAN, V40, P73
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   Yamada S., 1995, ACM Transactions on Computer-Human Interaction (TOCHI), V2, P284
   ZAPHIRIS P, 1997, DEPTH BREADTH ARRANG
   Zhang D, 2000, COMPUT NETW, V33, P449, DOI 10.1016/S1389-1286(00)00056-6
   Zhang YL, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P172
   Zhou YM, 2006, IEEE T SOFTWARE ENG, V32, P771, DOI 10.1109/TSE.2006.102
NR 49
TC 16
Z9 23
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2007
VL 33
IS 12
BP 869
EP 890
DI 10.1109/TSE.2007.70743
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 223RG
UT WOS:000250389400006
DA 2024-07-18
ER

PT J
AU Lau, KK
   Wang, Z
AF Lau, Kung-Kiu
   Wang, Zheng
TI Software component models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software components; software component models; component life cycle;
   component syntax; component semantics; component composition
AB Component-based development (CBD) is an important emerging topic in software engineering, promising long-sought-after benefits like increased reuse, reduced time to market, and, hence, reduced software production cost. The cornerstone of a CBD technology is its underlying software component model, which defines components and their composition mechanisms. Current models use objects or architectural units as components. These are not ideal for component reuse or systematic composition. In this paper, we survey and analyze current component models and classify them into a taxonomy based on commonly accepted desiderata for CBD. For each category in the taxonomy, we describe its key characteristics and evaluate them with respect to these desiderata.
C1 Univ Manchester, Sch Comp Sci, Manchester M13 9PL, Lancs, England.
C3 University of Manchester
RP Lau, KK (corresponding author), Univ Manchester, Sch Comp Sci, Manchester M13 9PL, Lancs, England.
EM kung-kiu@cs.man.ac.uk; zw@cs.man.ac.uk
CR Aldrich J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P187, DOI 10.1109/ICSE.2002.1007967
   ALDRICH J, 2002, P 16 EUR C OBJ OR PR, P334
   Aldrich J., 2004, PROC OOPSLA COMPANIO, P156
   Allen R., 1997, ACM Transactions on Software Engineering and Methodology, V6, P213, DOI 10.1145/258077.258078
   Alonso G., 2004, DAT SYS APP, DOI 10.1007/978-3-662-10876-5_5
   Andrews T., 2004, BUSINESS PROCESS EXE
   *AR MICR IBM, 2001, WEB SERV DESCR LANG
   Atkinson C., 2001, COMPONENT BASED PROD
   BACHMANN F, 2000, CMUSEI2000TR008 SOFT, V2
   Barnett M, 2003, J SYST SOFTWARE, V65, P199, DOI 10.1016/S0164-1212(02)00041-9
   Bass L., 2013, SOFTWARE ARCHITECTUR
   *BEA SYST, 1999, ORBOS990205 OBJ MAN
   Box D., 1998, ESSENTIAL COM
   Broy M, 1998, SOFTWARE-CONC TOOL, V19, P49, DOI 10.1007/s003780050007
   Bruneton E, 2004, LECT NOTES COMPUT SC, V3054, P7
   BRUNETONM E, 2003, FRACTAL DYNAMIC SOFT
   BRUNETONM E, 2002, P 7 INT WORKSH COMP
   *CARN MELL U, 1998, ACMESTUDIO 2 1 US MA
   Cheesman J., 2000, UML COMPONENTS SIMPL
   Choi YH, 2002, EUROMICRO CONF PROC, P40, DOI 10.1109/EURMIC.2002.1046131
   Christiansson B, 2002, ART H COMP SCI LIBR, P89
   Clements P. C., 1996, Proceedings of the 8th International Workshop on Software Specification and Design, P16, DOI 10.1109/IWSSD.1996.501143
   Crnkovic Ivica., 2004, ACM SIGSOFT Software Engineering Notes, V29, P1
   DeMichiel L., 2006, ENTERPRISE JAVABEANS
   DeMichiel L.G., 2001, ENTERPRISE JAVABEANS
   Garlan D, 2000, FDN COMPONENT BASED, P47
   Genssler T., 2002, PECOS NUTSHELL
   Heineman GeorgeT., 2001, COMPONENT BASED SOFT
   Hnetynka P, 2006, LECT NOTES COMPUT SC, V4063, P352
   Lau K-K., 2006, SURVEY SOFTWARE COMP, V2nd
   Lau KK, 2005, EUROMICRO-SEAA 2005: 31ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P88
   Lau KK, 2005, LECT NOTES COMPUT SC, V3489, P90
   LAU KK, 2006, P 4 INT S FORM METH, P1
   LAU KK, 2006, P 28 INT C SOFTW ENG, P1081
   LUMPE M, 2000, FDN COMPONENT BASED, P69
   MAJOR A, 1999, COM IDL INTERFACE DE
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Meyer B, 2003, PROC INT CONF SOFTW, P660, DOI 10.1109/ICSE.2003.1201252
   Monson-Haefel R., 2004, ENTERPRISE JAVABEANS, V4th
   NATAN R, 1995, GUIDE COMMON OBJECT
   Newcomer E., 2002, UNDERSTANDING WEB SE
   Nierstrasz O, 2002, LECT NOTES COMPUT SC, V2370, P200
   *OBJECTWEB OP SOUR, 2007, OPENCCM US GUID
   *OMG, 2002, CORBA COMP MOD V3
   *OMG, 2007, UML 2 SUP SPEC
   Peltz C, 2003, COMPUTER, V36, P46, DOI 10.1109/MC.2003.1236471
   Plasil F., 1999, Proceedings of Technology of Object-Oriented Languages and Systems - TOOLS 30 (Cat. No.PR00278), P387, DOI 10.1109/TOOLS.1999.787567
   Plasil F, 1998, FOURTH INTERNATIONAL CONFERENCE ON CONFIGURABLE DISTRIBUTED SYSTEMS, PROCEEDINGS, P43, DOI 10.1109/CDS.1998.675757
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   *SUN MICR, 1997, JAV SPEC
   *SUN MICR, 2007, BEAN BUILD
   *SUN MICR, 2003, JAVABEANS ARCH BDK D
   Sun Microsystems, 2007, JAV 2 PLATF ENT ED
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   van Ommering R, 2002, ART H COMP SCI LIBR, P223
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   Warboys B, 2005, IEEE SOFTWARE, V22, P20, DOI 10.1109/MS.2005.86
   Wigley A., 2003, Microsoft .NET compact framework Core Reference
   2004, COMMON OBJECT REQUES
NR 59
TC 161
Z9 186
U1 2
U2 28
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 7
PY 2007
VL 33
IS 10
BP 709
EP 724
DI 10.1109/TSE.2007.70726
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 204XB
UT WOS:000249076200005
DA 2024-07-18
ER

PT J
AU Egyed, A
   Wile, DS
AF Egyed, Alexander
   Wile, David S.
TI Support for managing design-time decisions
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE UML; design choices; consistency checking; design alternatives; choice
   elimination
ID CONSISTENCY
AB The desirability of maintaining multiple stakeholders' interests during the software design process argues for leaving choices undecided as long as possible. Yet, any form of underspecification, either missing information or undecided choices, must be resolved before automated analysis tools can be used. This paper demonstrates how Constraint Satisfaction Problem Solution Techniques ( CSTs) can be used to automatically reduce the space of choices for ambiguities by incorporating the local effects of constraints, ultimately with more global consequences. As constraints typical of those encountered during the software design process, we use UML consistency and well-formedness rules. It is somewhat surprising that CSTs are suitable for the software modeling domain since the constraints may relate many ambiguities during their evaluation, encountering a well-known problem with CSTs called the k-consistency problem. This paper demonstrates that our CST-based approach is computationally scalable and effective - as evidenced by empirical experiments based on dozens of industrial models.
C1 Teknowledge Corp, Marina Del Rey, CA 90292 USA.
C3 Teknowledge Corporation
RP Egyed, A (corresponding author), Teknowledge Corp, 4640 Admiralty Way,Suite 1010, Marina Del Rey, CA 90292 USA.
EM aegyed@teknowledge.com; dwile@teknowledge.com
RI Egyed, Alexander/E-2632-2017
OI Egyed, Alexander/0000-0003-3128-5427
CR [Anonymous], P WORKSH GRAPH TRANS
   BEGEMAN ML, 1988, BYTE, V13, P255
   Boehm B, 1998, COMPUTER, V31, P33, DOI 10.1109/2.689675
   BORGER E, 1994, LOGIC PROGRAMMING FO
   Bruns G., 2000, CONCUR 2000 - Concurrency Theory. 11th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1877), P168
   Cass A., 2002, REQUIREMENTS BASED D
   DOHYUNG K, 1999, JAVA MPEG PLAYER
   DOYLE J, 1979, ARTIF INTELL, V12, P231, DOI 10.1016/0004-3702(79)90008-0
   Easterbrook S, 2001, PROC INT CONF SOFTW, P411, DOI 10.1109/ICSE.2001.919114
   Egyed A, 2003, IEEE T SOFTWARE ENG, V29, P116, DOI 10.1109/TSE.2003.1178051
   EGYED A, 2005, P 28 INT C SOFTW ENG
   EGYED A, 2006, INT J AUTOMATED SOFT, V13, P41
   FINKELSTEIN ACW, 1994, IEEE T SOFTWARE ENG, V20, P569, DOI 10.1109/32.310667
   GERTZ M, 1996, P 7 INT WORKSH FDN M, P41
   GUINDON R, 1987, P 2 WORKSH EMP STUD, P65
   HENTERYCK P, 1996, ACM COMPUTING SURVEY, V28
   Hudak Paul., 2000, The Haskell school of expression: learning functional programming through multimedia
   *IBM, 2006, RAT ROS
   Jackson D., 2002, ACM T SOFTWARE ENG M, V11
   KLEER J, 1993, ARTIF INTELL, V59, P63
   MACKWORTH AK, 1977, ARTIF INTELL, V8, P99, DOI 10.1016/0004-3702(77)90007-8
   MITTAL S, 1990, PROCEEDINGS : EIGHTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P25
   MOERKOTTE G, 1991, ACM T DATABASE SYST, V16, P670, DOI 10.1145/115302.115298
   Nentwich C., 2002, ACM T INTERNET TECHN, V2, P151, DOI [10.1145/514183.514186, DOI 10.1145/514183.514186]
   NETWICH C, 2003, P 25 INT C SOFTW ENG, P455
   ROBINS J, 2006, ARGOUML
   Rumbaugh James, 1999, The unified modeling language reference manual
   SABIN D, 1996, P 1 ART INT MAN RES
   vanderHoek A, 1996, PROC INT CONF SOFTW, P308, DOI 10.1109/ICSE.1996.493426
   WILE D, 1983, COMM ACM, V26
NR 30
TC 11
Z9 12
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2006
VL 32
IS 5
BP 299
EP 314
DI 10.1109/TSE.2006.48
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 045LB
UT WOS:000237742500002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lakhotia, A
   Kumar, EU
   Venable, M
AF Lakhotia, A
   Kumar, EU
   Venable, M
TI A method for detecting obfuscated calls in malicious binaries
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE invasive software (viruses, worms); program analysis; validation;
   obfuscation; abstract stack
AB Information about calls to the operating system ( or kernel libraries) made by a binary executable may be used to determine whether the binary is malicious. Being aware of this approach, malicious programmers hide this information by making such calls without using the call instruction. For instance, the call addr instruction may be replaced by two push instructions and a ret instruction, the first push pushes the address of instruction after the ret instruction, and the second push pushes the address addr. The code may be further obfuscated by spreading the three instructions and by splitting each instruction into multiple instructions. This work presents a method to statically detect obfuscated calls in binary code. The idea is to use abstract interpretation to detect where the normal call-ret convention is violated. These violations can be detected by what is called an abstract stack graph. An abstract stack graph is a concise representation of all potential abstract stacks at every point in a program. An abstract stack is used to associate each element in the stack to the instruction that pushes the element. An algorithm for constructing the abstract stack graph is also presented. Methods for using the abstract stack graph are shown to detect eight different obfuscations. The technique is demonstrated by implementing a prototype tool called DOC ( Detector for Obfuscated Calls).
C1 Univ Louisiana Lafayette, Ctr Adv Comp Studies, Lafayette, LA 70504 USA.
   Authentium Inc, Palm Springs, FL 33406 USA.
C3 University of Louisiana Lafayette
RP Univ Louisiana Lafayette, Ctr Adv Comp Studies, POB 44330, Lafayette, LA 70504 USA.
EM arun@cacs.louisiana.edu; ekumar@authentium.com;
   mpv7292@cacs.louisiana.edu
OI Lakhotia, Arun/0000-0001-9943-7795
CR [Anonymous], 2000, P VIR B C
   [Anonymous], P IEEE S SEC PRIV
   [Anonymous], 2003, ACM C COMP COMM SEC
   Balakrishnan G., 2004, P INT C COMP CONSTR
   BARAK B, 2001, P C ADV CRYPT CRYPTO
   CHO S, 2004, WIN32 DISASSEMBLER
   CHRISTODRESCU M, 2003, P 12 USENIX SEC S SE
   CIFUENTES C, 1995, SOFTWARE PRACT EXPER, V25, P811, DOI 10.1002/spe.4380250706
   Cohen F., 1989, Computers & Security, V8, P325, DOI 10.1016/0167-4048(89)90089-8
   Collberg C., 1997, TAXONOMY OBFUSCATING
   Collberg CS, 2002, IEEE T SOFTWARE ENG, V28, P735, DOI 10.1109/TSE.2002.1027797
   Cousot P, 1976, P 2 INT S PROGR
   Jones NeilD., 1995, HDB LOGIC COMPUTER S, V4, P527
   KRUEGEL C, 2004, P USENIX SEC C
   LAKHOTIA A, 2004, P 11 IEEE WORK C REV
   LAKHOTIA A, 2005, P 14 EICAR C
   LAKHOTIA A, 2003, VIRUS B, P14
   Nachenberg C, 1997, COMMUN ACM, V40, P46, DOI 10.1145/242857.242869
   SCHMIDT D, 2005, ABSTRACT INTERPRETAT
   Schwarz B., 2002, P 9 WORK C REV ENG W
   *SYM, 2004, UND HEUR SYM BLOODH
   SZOR P, 2001, P VIR B C
   TESO, 2004, BURN ELF ENCR PROGR
   Venable M., 2005, P C DET INTR MALW VU
   VINCIGUERRA L, 2003, P 10 WORK C REV ENG
   Wroblewski G., 2002, General Method of Program Code Obfuscation
NR 26
TC 29
Z9 40
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2005
VL 31
IS 11
BP 955
EP 968
DI 10.1109/TSE.2005.120
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 989GE
UT WOS:000233660100004
DA 2024-07-18
ER

PT J
AU Dybå, T
AF Dybå, T
TI An empirical investigation of the key factors for success in software
   process improvement
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE empirical software engineering; software process improvement; critical
   success factors; organizational issues; survey research
ID QUALITY; COMMITMENT; KNOWLEDGE
AB Understanding how to implement software process improvement (SPI) successfully is arguably the most challenging issue facing the SPI field today. The SPI literature contains many case studies of successful companies and descriptions of their SPI programs. However, the research efforts to date are limited and inconclusive and without adequate theoretical and psychometric justification. This paper extends and integrates models from prior research by performing an empirical investigation of the key factors for success in SPI. A quantitative survey of 120 software organizations was designed to test the conceptual model and hypotheses of the study. The results indicate that success depends critically on six organizational factors, which explained more than 50 percent of the variance in the outcome variable. The main contribution of the paper is to increase the understanding of the influence of organizational issues by empirically showing that they are at least as important as technology for succeeding with SPI and, thus, to provide researchers and practitioners with important new insights regarding the critical factors of success in SPI.
C1 SINTEF ICT, Software Engn Dept, NO-7465 Trondheim, Norway.
C3 SINTEF
RP SINTEF ICT, Software Engn Dept, NO-7465 Trondheim, Norway.
EM tore.dyba@sintef.no
CR Abrahamsson P, 2001, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.2001.919082
   ABRAHAMSSON P, 2000, P 26 EUR C SEPT, V2, P246
   Ahire SL, 1996, DECISION SCI, V27, P23, DOI 10.1111/j.1540-5915.1996.tb00842.x
   Anastasi A., 1997, Psychological testing, V7e
   [Anonymous], 1994, Statistics
   [Anonymous], 1998, Software process improvement
   Argyris C., 1996, Organizational learning II: Theory, method, and practice, V2
   Baruch Y, 1999, HUM RELAT, V52, P421, DOI 10.1023/A:1016905407491
   Basili VR, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P69, DOI 10.1109/ICSE.2002.1007957
   BASILI VR, 1995, SLOAN MANAGE REV, V37, P55
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   BEER M, 1990, HARVARD BUS REV, V68, P158
   Berger Peter., 1966, SOCIAL CONSTRUCTION
   Berry M., 2000, Empirical Software Engineering, V5, P183, DOI 10.1023/A:1026534430984
   BIRO M, 2002, ASQ SOFTWARE QUALITY, V4, P34
   BIRO M, 1999, BETTER SOFTWARE PRAC, P15
   Black SA, 1996, DECISION SCI, V27, P1, DOI 10.1111/j.1540-5915.1996.tb00841.x
   Briand L., 1996, Empirical Software Engineering, V1, P61, DOI 10.1007/BF00125812
   Brodman J., 1995, Software Process: Improvement Practice, P35
   Brown JS, 1991, ORGAN SCI, V2, P40, DOI 10.1287/orsc.2.1.40
   CATTELL RB, 1966, MULTIVAR BEHAV RES, V1, P245, DOI 10.1207/s15327906mbr0102_10
   Cohen J., 1988, STAT POWER ANAL BEHA
   Comrey A. L., 1992, A first course in factor analysis, DOI DOI 10.4324/9781315827506-16
   CONRADI R, 2001, P JOINT 8 EUR SOFTW
   Cronbach L.J., 1971, ED MEASUREMENT, DOI DOI 10.1037/14353-009
   CRONBACH LJ, 1951, PSYCHOMETRIKA, V16, P297, DOI [10.1007/BF02310555, DOI 10.1007/BF02310555]
   Crosby P.B., 1996, QUALITY IS STILL FRE
   Cummings T.G., 2004, ORG DEV CHANGE
   DASKALANTONAKIS MK, 1992, IEEE T SOFTWARE ENG, V18, P998, DOI 10.1109/32.177369
   Davenport T.H., 1993, PROCESS INNOVATION R
   Debou C., 2000, Software Process Improvement and Practice, V5, P55, DOI 10.1002/(SICI)1099-1670(200003)5:1<55::AID-SPIP111>3.0.CO;2-X
   Debou C., 1999, Software Practice for Business Benefits. Principles and Experiences, P281
   Deephouse C., 1995, Journal of Management Information Systems, V12, P187
   DeMarco T, 1986, CONTROLLING SOFTWARE
   Deming W. E., 1986, OUT CRISIS
   DION R, 1993, IEEE SOFTWARE, V10, P28, DOI 10.1109/52.219618
   Dybå T, 2000, IEEE SOFTWARE, V17, P82, DOI 10.1109/52.877872
   Dybå T, 2003, MANAGING SOFTWARE ENGINEERING KNOWLEDGE, P95
   Dyba T., 2000, Empirical Software Engineering, V5, P357, DOI 10.1023/A:1009800404137
   DYBA T, 2003, P 9 EUR SOFTW ENG C, P148, DOI DOI 10.1145/940071.940092
   DYBA T, 1999, P EUR SOFTW PROC IMP
   DYBA T, 2004, KLUWER INT SERIES SO
   Ehn P., 1992, Usability: Turning technologies into tools, P96
   El Emam K., 1999, SUCCESS FACTORS BARR, P355
   El-Emam K., 2001, Empirical Software Engineering, V6, P207, DOI 10.1023/A:1011487332587
   ELEMAM K, 1998, SPICE THEORY PRACTIC
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   French W.L., 1999, ORG DEV BEHAV SCI IN
   GOLDENSON DR, 1995, CMUSEI95TR009
   Grady R., 1997, SUCCESSFUL SOFTWARE
   Grady R.B., 1987, SOFTWARE METRICS EST, V1
   HAMBRICK DC, 1993, STRATEGIC MANAGE J, V14, P401, DOI 10.1002/smj.4250140602
   Hammer M., 1993, Reengineering the Corporation -A Manifesto for Business Revolution
   Hammer M., 1996, REENGINEERING PROCES
   Herbsleb JD, 1996, PROC INT CONF SOFTW, P323, DOI 10.1109/ICSE.1996.493427
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   Humphrey WattsS., 1997, Managing technical people: Innovation, teamwork, and the software process
   HUMPHREY WS, 1991, IEEE SOFTWARE, V8, P11, DOI 10.1109/52.300031
   Juran J.Godfrey., 1999, Quality handbook
   KAISER HF, 1970, PSYCHOMETRIKA, V35, P401, DOI 10.1007/BF02291817
   Kaplan R.S., 1996, The balanced scorecard: translating strategy into action
   Kitchenham BarbaraA., 1996, Software metrics: measurement for software process improvement
   KONISHI S, 1981, BIOMETRIKA, V68, P647, DOI 10.1093/biomet/68.3.647
   Lave J., 1991, Situated Learning: Legitimate Peripheral Partic- ipation
   March JG, 1991, ORGAN SCI, V2, P71, DOI 10.1287/orsc.2.1.71
   March JamesG., 1999, PURSUIT ORG INTELLIG
   March JG, 1997, ORGAN SCI, V8, P698, DOI 10.1287/orsc.8.6.698
   MART J, 1992, CULTURES ORG 3 PERSP
   Mayo E., 1933, The human problems of an industrial civilization
   Mayo E., 1945, SOCIAL PROBLEMS IND
   MCFEELEY B, 1996, HDB CMU
   MEHNER T, 1999, BETTER SOFTWARE PRAC, P199
   MESSNARZ R, 1999, BETTER SOFTWARE PRAC, P389
   Nadler D., 1977, FEEDBACK ORG DEV USI
   NONAKA I, 1994, ORGAN SCI, V5, P14, DOI 10.1287/orsc.5.1.14
   Nonaka I., 1995, The Knowledge-Creating Company How Japanese Companies Create the Dynamics of Information, DOI DOI 10.1016/0024-6301(96)81509-3
   Nunnally JC, 1978, PSYCHOMETRIC THEORY, V2nd
   POWELL TC, 1995, STRATEGIC MANAGE J, V16, P15, DOI 10.1002/smj.4250160105
   Pulford K., 1996, A quantitative approach to software management: the ami handbook
   Rainer A, 2002, J SYST SOFTWARE, V62, P71, DOI 10.1016/S0164-1212(01)00122-4
   Rifkin S, 2001, IEEE SOFTWARE, V18, P41, DOI 10.1109/52.922724
   Rooijmans J, 1996, IEEE SOFTWARE, V13, P55, DOI 10.1109/52.476286
   SARAPH JV, 1989, DECISION SCI, V20, P810, DOI 10.1111/j.1540-5915.1989.tb01421.x
   Schein EH, 1996, ADMIN SCI QUART, V41, P229, DOI 10.2307/2393715
   Senge P., 1990, The fifth discipline: the art and practice of the learning organization
   Simon HA, 1991, ORGAN SCI, V2, P125, DOI 10.1287/orsc.2.1.125
   Stelzer D., 1998, Software Process Improvement and Practice, V4, P227, DOI 10.1002/(SICI)1099-1670(199812)4:4<227::AID-SPIP106>3.0.CO;2-1
   STELZER D, 1996, P 29 HAW INT C SYST
   Stevens JP., 2002, APPL MULTIVARIATE ST
   STRAUB DW, 1989, MIS QUART, V13, P147, DOI 10.2307/248922
   Taylor F., 1967, The principles of scientific management
   THORSRUD E, 1976, HDB WORK ORG SOC, P648
   TRIST E, 1981, OCCASIONAL PAPERS ON, V2
   Van Solingen Rini, 1999, The Goal/ Question/ Metric Method: a practical guide for quality improvement of software development
   VELLEMAN PF, 1993, AM STAT, V47, P65, DOI 10.2307/2684788
   Weber M., 1946, From Max Weber, Essays in Sociology, P77
   Wenger E., 1998, Communities of practice: learning, meaning, and identity, DOI [10.1017/CBO9780511803932, DOI 10.1017/CBO9780511803932]
   Yusof SM, 1999, TOTAL QUAL MANAGE, V10, pS803
NR 98
TC 147
Z9 166
U1 0
U2 21
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2005
VL 31
IS 5
BP 410
EP 424
DI 10.1109/TSE.2005.53
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 929VC
UT WOS:000229373700004
DA 2024-07-18
ER

PT J
AU Tan, Y
   Mookerjee, VS
AF Tan, Y
   Mookerjee, VS
TI Comparing uniform and flexible policies for software maintenance and
   replacement
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software maintenance and replacement; cost models; optimal scheduling
ID EQUIPMENT REPLACEMENT; INFORMATION-SYSTEMS; COMPLEXITY METRICS; SCALE
   ECONOMIES; FUNCTION POINTS; MODEL; PERFORMANCE; MAINTAINABILITY;
   PROJECT; COSTS
AB The importance of software maintenance in managing the life-cycle costs of a system cannot be overemphasized. Beyond a point, however, it is better to replace a system rather than maintain it. We derive model and operating policy that reduces the sum of maintenance and replacement costs in the useful life of a software system. The main goal is to compare uniform ( occurring at fixed time intervals) versus flexible ( occurring at varying, planned time intervals) polices for maintenance and replacement. The model draws from the empirical works of earlier researchers to consider 1) inclusion of user requests for maintenance, 2) scale economies in software maintenance, 3) efficiencies derived from replacing old software technology with new software technology, and 4) the impact of software reuse on replacement and maintenance. Results from our model show that the traditional practice of maintaining or replacing a software system at uniform time intervals may not be optimal. We also find that an increase in software reuse leads to more frequent replacement, but the number of maintenance activities is not significantly impacted.
C1 Univ Washington, Sch Business, Seattle, WA 98195 USA.
   Univ Texas, Sch Management, Richardson, TX 75083 USA.
C3 University of Washington; University of Washington Seattle; University
   of Texas System; University of Texas Dallas
RP Univ Washington, Sch Business, Box 353200, Seattle, WA 98195 USA.
EM ytan@u.washington.edu; vijaym@utdallas.edu
RI mookerjee, vijay/Q-5020-2018
OI mookerjee, vijay/0000-0001-5583-3585
CR Ahn Y, 2003, J SOFTW MAINT EVOL-R, V15, P71, DOI 10.1002/smr.269
   ANDREWS D, 1993, FUSION INTEGRATING I
   Antoniol G, 2004, IEEE T SOFTWARE ENG, V30, P43, DOI 10.1109/TSE.2004.1265735
   Aoyama M., 2002, P INT WORKSHOP PRINC, P103
   Aversano L, 2004, J SOFTW MAINT EVOL-R, V16, P255, DOI 10.1002/smr.296
   Bandi RK, 2003, IEEE T SOFTWARE ENG, V29, P77, DOI 10.1109/TSE.2003.1166590
   Banker R. D., 1993, Journal of Operations Management, V11, P81, DOI 10.1016/0272-6963(93)90035-N
   BANKER RD, 1989, IEEE T SOFTWARE ENG, V15, P1199, DOI 10.1109/TSE.1989.559768
   Banker RD, 1997, MANAGE SCI, V43, P1709, DOI 10.1287/mnsc.43.12.1709
   Banker RD, 1998, MANAGE SCI, V44, P433, DOI 10.1287/mnsc.44.4.433
   Barua A., 1989, Proceedings of the Twenty-Second Annual Hawaii International Conference on System Sciences. Vol.III: Decision Support and Knowledge Based Systems Track (Cat. No.89TH0244-4), P89, DOI 10.1109/HICSS.1989.49228
   Basili V, 1996, PROC INT CONF SOFTW, P464, DOI 10.1109/ICSE.1996.493441
   BELLMAN R, 1955, J SOC IND APPL MATH, V3, P133, DOI 10.1137/0103011
   BENDIFALLAH S, 1987, IEEE T SOFTWARE ENG, V13, P311, DOI 10.1109/TSE.1987.233162
   Berk E, 2000, IIE TRANS, V32, P433
   BIANCHI A, 2001, P 7 INT SOFTW METR S, P210
   BOEHM BW, 1983, P SOFTW MAINT WORKSH, P9
   Burch E, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P40, DOI 10.1109/ICSM.1997.624229
   Burton Swanson E., 1976, Proceedings of International Conference on Software Engineering (ICSE), P492
   Chan TZ, 1996, IEEE T SOFTWARE ENG, V22, P580, DOI 10.1109/32.536958
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   COLEMAN D, 1994, COMPUTER, V27, P44, DOI 10.1109/2.303623
   DANEVA M, 1999, P 5 S SOFTW REUS, P141
   Donzelli P, 2003, J SOFTW MAINT EVOL-R, V15, P27, DOI 10.1002/smr.266
   Fioravanti F, 2001, IEEE T SOFTWARE ENG, V27, P1062, DOI 10.1109/32.988708
   Gefen D, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P134, DOI 10.1109/ICSM.1996.564998
   Glass R.L., 1981, Software maintenance guidebook
   Gradshteyn IS., 2014, TABLE INTEGRALS SERI
   Hassan AE, 2004, PROC IEEE INT CONF S, P284, DOI 10.1109/ICSM.2004.1357812
   Heales J, 2002, J SOFTW MAINT EVOL-R, V14, P409, DOI 10.1002/smr.271
   Huang CY, 2003, IEEE T SOFTWARE ENG, V29, P261, DOI 10.1109/TSE.2003.1183936
   Humphrey W.S., 1990, MANAGING SOFTWARE PR
   KAFURA D, 1987, IEEE T SOFTWARE ENG, V13, P335, DOI 10.1109/TSE.1987.233164
   Kung HJ, 2004, PROC IEEE INT CONF S, P232
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   LEHMAN MM, 1998, 9811 IMP COLL DEP CO
   LEHMAN MM, 2000, P ICSE 2000 2 WORKSH
   LIENTZ B, 1981, SOFTWARE MAINTENANCE
   MATSON JE, 1994, IEEE T SOFTWARE ENG, V20, P275, DOI 10.1109/32.277575
   MCCALL JJ, 1965, MANAGE SCI, V11, P493, DOI 10.1287/mnsc.11.5.493
   McClure C.L., 1981, Managing software development and maintenance
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   MOINZADEH K, IN PRESS IIE T
   MUNSON JB, 1981, COMPUTER, V14, P103, DOI 10.1109/C-M.1981.220258
   NAIR SK, 1992, EUR J OPER RES, V63, P207, DOI 10.1016/0377-2217(92)90026-6
   PENGALLY A, 1995, SOFTWARE ENG J   SEP
   POUL J, 1997, MEASURING SOFTWARE R
   RACOON LBS, 1996, ACM SOFTWARE ENG NOT, V21, P77
   Rajagopalan S, 1998, MANAGE SCI, V44, P12, DOI 10.1287/mnsc.44.1.12
   Sahin I, 2001, J SOFTW MAINT EVOL-R, V13, P469, DOI 10.1002/smr.242
   SCHNEIDEWIND NF, 1987, IEEE T SOFTWARE ENG, V13, P303, DOI 10.1109/TSE.1987.233161
   Sneed HM, 2004, PROC IEEE INT CONF S, P264, DOI 10.1109/ICSM.2004.1357810
   SUTHERLAND J, 1995, ACM COMPUT SURV, V27, P274, DOI 10.1145/210376.210394
   TAMAI T, 1992, P INT C SOFTW MAINT, P63
   Tsai CH, 2003, ENG OPTIMIZ, V35, P215, DOI 10.1080/0305215032000077041
   YE MH, 1990, EUR J OPER RES, V44, P84, DOI 10.1016/0377-2217(90)90317-5
   YOURDON E, 1980, TECHNIQUES PROGRAM S
NR 57
TC 21
Z9 25
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2005
VL 31
IS 3
BP 238
EP 255
DI 10.1109/TSE.2005.30
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 917IE
UT WOS:000228453500005
DA 2024-07-18
ER

PT J
AU Costagliola, G
   Ferrucci, F
   Tortora, G
   Vitiello, G
AF Costagliola, G
   Ferrucci, F
   Tortora, G
   Vitiello, G
TI Class point: An approach for the size estimation of object-oriented
   systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE object-oriented systems; size measures; Function Point Analysis;
   theoretical validation; empirical validation; effort prediction model
ID SOFTWARE ENGINEERING MEASUREMENT; MEASUREMENT VALIDATION;
   COMPLEXITY-MEASURES; USER-INTERFACE; METRICS; MODELS; ENVIRONMENT;
   FRAMEWORK; DESIGN
AB In this paper, we present an FP-like approach, named Class Point, which was conceived to estimate the size of object-oriented products. In particular, two measures are proposed, which are theoretically validated showing that they satisfy well-known properties necessary for size measures. An initial empirical validation is also performed, meant to assess the usefulness and effectiveness of the proposed measures to predict the development effort of object-oriented systems. Moreover, a comparative analysis is carried out, taking into account several other size measures.
C1 Univ Salerno, Dipartimento Matemat & Informat, I-84084 Fisciano, SA, Italy.
C3 University of Salerno
RP Costagliola, G (corresponding author), Univ Salerno, Dipartimento Matemat & Informat, Via Ponte Don Melillo, I-84084 Fisciano, SA, Italy.
EM gcostagliola@unisa.it; fferrucci@unisa.it; tortora@unisa.it;
   gvitiello@unisa.it
RI Ferrucci, Filomena/AAG-6799-2020; Costagliola, Gennaro/GLV-1530-2022;
   Vitiello, Giuliana/AAU-9132-2020
OI Ferrucci, Filomena/0000-0002-0975-8972; Costagliola,
   Gennaro/0000-0003-3816-7765; Vitiello, Giuliana/0000-0001-7130-996X
CR AALTO JM, 1994, P C TECHN OBJ OR LAN, P205
   ABREU F, 1995, P ECOOP 95 WORKSH ME
   ABREU F, 1995, P 5 INT C SOFTW QUAL
   Albrecht A.J., 1979, Em Proceedings of the Joint SHARE, GUIDE, and IBM Application Development Symposium, P83
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 1994, OBJECT ORIENTED SOFT
   [Anonymous], 1995, ANN SOFTW ENG
   [Anonymous], 1994, P 4 INT C SOFTWARE Q
   Antoniol G., 1999, Empirical Software Engineering, V4, P263, DOI 10.1023/A:1009834811663
   BANKER RD, 1994, IEEE T SOFTWARE ENG, V20, P169, DOI 10.1109/32.268919
   BASILI VL, 1996, IEEE T SOFTWARE ENG, V10, P751
   Booch G., 1999, The unified software development process
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   Briand L., 1996, Empirical Software Engineering, V1, P61, DOI 10.1007/BF00125812
   Briand L., 1999, EMPIR SOFTW ENG, V4, P387
   BRIAND L, 1999, ISERN9915
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P313, DOI 10.1109/ICSE.1999.841022
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P963, DOI 10.1109/32.965338
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Brito e Abreu F, 1996, P 3 INT SOFTW METR S
   Bruegge B, 1994, P 2 INT C COOP INF S, P90
   Carrol J.M., 1995, Scenario-based design: Envisioning work and technology in system development
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Coad P., 1993, OBJECT ORIENTED PROG
   Coad P., 1991, OBJECT ORIENTED ANAL, V2nd
   Collins D., 1995, DESIGNING OBJECT ORI
   COSTAGLIOLA G, 1998, P AQUIS 98 C, P121
   Dreger J.B., 1989, FUNCTION POINT ANAL
   ELEMAM K, 2001, P 7 INT SOFTW METR S, P185
   FENTON N, 1994, IEEE T SOFTWARE ENG, V20, P199, DOI 10.1109/32.268921
   Fetcke T., 1997, P IFPUG 1997 SPRING, P134
   Graham I., 1995, MIGRATING OBJECT TEC
   Harrison R, 1998, IEEE T SOFTWARE ENG, V24, P491, DOI 10.1109/32.689404
   HENDERSONSELLER.B, 1996, OBJECT ORIENTED METR
   International Function Point Users Group, 2001, FUNCT POINT COUNT PR
   ITAKURA M, 1982, P 6 INT C SOFTW ENG, P104
   JAAKSI A, 1995, SOFTWARE PRACT EXPER, V25, P1203, DOI 10.1002/spe.4380251103
   JEFFERY DR, 1993, IEEE T SOFTWARE ENG, V19, P529, DOI 10.1109/32.232016
   JOHNSON JA, 1993, COMMUN ACM, V36, P41
   Jones C., 1988, SHORT HIST FUNCTION
   Kan S.H., 1995, METRICS MODELS SOFTW, V1st
   KEMERER CF, 1992, IEEE T SOFTWARE ENG, V18, P1011, DOI 10.1109/32.177370
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Keyes J., 1992, IEEE SOFTWARE, V12, P42
   Kitchenham B., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P11, DOI 10.1109/METRIC.1993.263805
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   KOHLERT D, 1993, SOFTWARE PRACT EXPER, V23, P981, DOI 10.1002/spe.4380230905
   Krasner G. E., 1988, J OBJECT ORIENTED PR, V1, P26
   LAKSHMANAN KB, 1991, IEEE T SOFTWARE ENG, V17, P1289, DOI 10.1109/32.106989
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   LI W, 1995, J OBJECT ORIENTE JUL
   LIN YB, 1995, SOFTWARE PRACT EXPER, V25, P193, DOI 10.1002/spe.4380250206
   LINTON MA, 1909, COMPUTER, V22, P8
   LOW GC, 1990, IEEE T SOFTWARE ENG, V16, P64, DOI 10.1109/32.44364
   MATSON JE, 1994, IEEE T SOFTWARE ENG, V20, P275, DOI 10.1109/32.277575
   MINKIEWICZ AF, 1997, P C APPL SOFTW MEAS
   Misic VB, 1998, J SYST SOFTWARE, V41, P133, DOI 10.1016/S0164-1212(97)10014-0
   Morasca S, 1997, IEEE T SOFTWARE ENG, V23, P187, DOI 10.1109/32.585506
   Moser S, 1999, J SYST SOFTWARE, V49, P33, DOI 10.1016/S0164-1212(99)00064-3
   MOSER S, 1997, P TOOL PAC 97 C
   Myers B., 1992, P SIGCHI C HUM FACT, P195
   Myers BA, 1997, IEEE T SOFTWARE ENG, V23, P347, DOI 10.1109/32.601073
   Nesi P, 1998, J SYST SOFTWARE, V42, P89, DOI 10.1016/S0164-1212(97)10021-8
   NORMAN M, 1990, ADAPTIVE USER INTERF
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Sommerville I., 1996, Software Engineering, V5th
   SYMONS CR, 1988, IEEE T SOFTWARE ENG, V14, P2, DOI 10.1109/32.4618
   VERNER J, 1992, IEEE T SOFTWARE ENG, V18, P265, DOI 10.1109/32.129216
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   WHITMIRE SA, 1996, P ASM 96 C
   Zuse H, 1997, IEEE T SOFTWARE ENG, V23, P533, DOI 10.1109/32.624309
   Zuse H., 1990, SOFTWARE COMPLEXITY
NR 73
TC 67
Z9 77
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2005
VL 31
IS 1
BP 52
EP 74
DI 10.1109/TSE.2005.5
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 893QP
UT WOS:000226734600004
DA 2024-07-18
ER

PT J
AU Whisnant, K
   Iyer, RK
   Kalbarczyk, ZT
   Jones, PH
   Rennels, DA
   Some, R
AF Whisnant, K
   Iyer, RK
   Kalbarczyk, ZT
   Jones, PH
   Rennels, DA
   Some, R
TI The effects of an ARMOR-based SIFT environment on the performance and
   dependability of user applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software-implemented fault tolerance; distributed systems; high
   availability
ID FAULT TOLERANCE; ARCHITECTURE
AB Few distributed software-implemented fault tolerance (SIFT) environments have been experimentally evaluated using substantial applications to show that they protect both themselves and the applications from errors. This paper presents an experimental evaluation of a SIFT environment used to oversee spaceborne applications as part of the Remote Exploration and Experimentation (REE) program at the Jet Propulsion Laboratory. The SIFT environment is built around a set of self-checking ARMOR processes running on different machines that provide error detection and recovery services to themselves and to the REE applications. An evaluation methodology is presented in which over 28,000 errors were injected into both the SIFT processes and two representative REE applications. The experiments were split into three groups of error injections, with each group successively stressing the SIFT error detection and recovery more than the previous group. The results show that the SIFT environment added negligible overhead to the application's execution time during failure-free runs. Correlated failures affecting a SIFT process and application process are possible, but the division of detection and recovery responsibilities in the SIFT environment allows it to recover from these multiple failure scenarios. Only 28 cases were observed in which either the application failed to start or the SIFT environment failed to recognize that the application had completed. Further investigations showed that assertions within the SIFT processes-coupled with object-based incremental checkpointing-were effective in preventing system failures by protecting dynamic data within the SIFT processes.
C1 Sun Microsyst, San Diego, CA 92121 USA.
   Univ Illinois, Ctr Reliable & High Performance Comp, Urbana, IL 61801 USA.
   Washington Univ, Dept Comp Sci, St Louis, MO 63130 USA.
   CALTECH, Jet Prop Lab, Pasadena, CA 91109 USA.
C3 Sun Microsystems, Inc.; University of Illinois System; University of
   Illinois Urbana-Champaign; Washington University (WUSTL); National
   Aeronautics & Space Administration (NASA); NASA Jet Propulsion
   Laboratory (JPL); California Institute of Technology
RP Sun Microsyst, 9515 Towne Ctr Dr, San Diego, CA 92121 USA.
EM Keith.Whisnant@sun.com; iyer@crhc.uiuc.edu; kalbarl@crhc.uiuic.edu;
   pjones@wustl.edu; Rennels@cs.ucla.edu; Raphael.R.Some@jpl.nasa.gov
CR ARLAT J, 1990, IEEE T RELIAB, V39, P455, DOI 10.1109/24.58723
   Bagchi S., 2001, THESIS U ILLINOIS UR
   Batchu R, 2001, FIRST IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, PROCEEDINGS, P26
   Beahan J, 2000, AEROSP CONF PROC, P279, DOI 10.1109/AERO.2000.878499
   Birman K.P., 1994, RELIABLE DISTRIBUTED
   BUZATO L, 1992, 400 U NEWC UP TYN
   Chen FN, 2000, DSN 2000: INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P367, DOI 10.1109/ICDSN.2000.857562
   Chevochot P, 2001, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P304, DOI 10.1109/DSN.2001.941415
   Deavours DD, 2002, IEEE T SOFTWARE ENG, V28, P956, DOI 10.1109/TSE.2002.1041052
   Fabre JC, 1998, IEEE T COMPUT, V47, P78, DOI 10.1109/12.656088
   Fagg GE, 2000, LECT NOTES COMPUT SC, V1908, P346
   FUCHS E, 1998, P 6 DEP COMP CRIT AP, P225
   Gunnels JA, 2001, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P47, DOI 10.1109/DSN.2001.941390
   HAYDEN M, 1988, THESIS CORNELL U ITH
   He Jun., 2001, Middleware, P351
   HUANG KH, 1984, IEEE T COMPUT, V33, P518, DOI 10.1109/TC.1984.1676475
   Kalbarczyk ZT, 1999, IEEE T PARALL DISTR, V10, P560, DOI 10.1109/71.774907
   Karlsson J., 1995, Proc. of 5th IEEE International Working Conference on Dependable Computing for Critical Applications, P150
   KERNS SE, 1988, P IEEE, V76, P1470, DOI 10.1109/5.90115
   LI M, 2001, P 13 C PAR DISTR COM, P480
   Madeira H., 2002, P 2002 INT C DEP SYS
   Message Passing Interface Forum, 1997, MPI 2 EXT MESS PASS
   Moser LE, 1999, DIG PAP INT SYMP FAU, P150, DOI 10.1109/FTCS.1999.781045
   Moser LE, 1996, COMMUN ACM, V39, P54, DOI 10.1145/227210.227226
   Narasimhan P, 2001, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P261, DOI 10.1109/DSN.2001.941411
   Powell D, 1999, IEEE T PARALL DISTR, V10, P580, DOI 10.1109/71.774908
   POWELL D, 1988, P 18 INT S FAULT TOL, P246
   REN J, 2001, THESIS U ILLINOIS UR
   REN YJ, 1998, P 17 S REL DISTR SYS, P245
   SHRIVASTAVA S, 1995, LECT NOTES COMPUTER, V938
   Stellner G, 1996, 10TH INTERNATIONAL PARALLEL PROCESSING SYMPOSIUM - PROCEEDINGS OF IPPS '96, P526, DOI 10.1109/IPPS.1996.508106
   Stott D. T., 2000, Proceedings IEEE International Computer Performance and Dependability Symposium. IPDS 2000, P91, DOI 10.1109/IPDS.2000.839467
   vanRenesse R, 1996, COMMUN ACM, V39, P76, DOI 10.1145/227210.227229
   WENSLEY J, 1971, P C ART INT PLANN SY, V41, P243
   Whisnant K, 2003, IBM SYST J, V42, P45, DOI 10.1147/sj.421.0045
   Whisnant K, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P585
   WHISNANT K, 2003, THESIS U ILLINOIS UR
   WHISNANT K, 2000, P 6 INT ON LIN TEST
NR 38
TC 8
Z9 10
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2004
VL 30
IS 4
BP 257
EP 277
DI 10.1109/TSE.2004.1274045
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 810YV
UT WOS:000220740500005
DA 2024-07-18
ER

PT J
AU France, RB
   Kim, DK
   Ghosh, S
   Song, EJ
AF France, RB
   Kim, DK
   Ghosh, S
   Song, EJ
TI A UML-based pattern specification technique
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE design patterns; object-oriented models; pattern specification; UML
AB Informally described design patterns are useful for communicating proven solutions for recurring design problems to developers, but they cannot be used as compliance points against which solutions that claim to conform to the patterns are checked. Pattern specification languages that utilize mathematical notation provide the needed formality, but often at the expense of usability. In this paper, we present a rigorous and practical technique for specifying pattern solutions expressed in the Unified Modeling Language (UML). The specification technique paves the way for the development of tools that support rigorous application of design patterns to UML design models. The technique has been used to create specifications of solutions for several popular design patterns. We illustrate the use of the technique by specifying observer and visitor pattern solutions.
C1 Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80523 USA.
C3 Colorado State University
RP Colorado State Univ, Dept Comp Sci, 601 S Howes St, Ft Collins, CO 80523 USA.
EM france@cs.colostate.edu; dkkim@cs.colstate.edu; ghosh@cs.colstate.edu;
   song@cs.colstate.edu
RI Ghosh, Sudipto/ABI-4888-2020
CR [Anonymous], 2000, PATTERN ORIENTED SOF
   [Anonymous], 1995, Design patterns for object-oriented software development
   Buschmann F., 1996, SYSTEM PATTERNS PATT
   Eden A, 1999, THESIS U TEL AVIV IS
   France R, 2003, IEEE SOFTWARE, V20, P52, DOI 10.1109/MS.2003.1231152
   FRANCE R, 2002, 02106 COL STAT U COM
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   JUDSON SR, 2003, P WORKSH SOFTW MOD E
   KIM D, 2004, IN PRESS J VISUAL LA
   Kim D. K., 2003, P WORKSH SOFTW MOD E
   KIM DK, 2003, P 27 IEEE ANN INT CO
   KIM DK, 2002, P INT C ENG COMPL CO
   LAMPORT L, 1994, ACM T PROGR LANG SYS, V16, P872, DOI 10.1145/177492.177726
   Lano K., 1996, P 1 BCS FACS NO FORM
   Lauder A., 1998, Precise Visual Speci cation of Design Patterns, P114
   Le Guennec A, 2000, LECT NOTES COMPUT SC, V1939, P482
   Mikkonen T, 1998, PROC INT CONF SOFTW, P115, DOI 10.1109/ICSE.1998.671108
   PAGEL BU, 1996, P EUR C PATT LANG PR
   SEFIKLA M, 1909, P INT C SOFTW ENG
   Warmer J., 1999, AW OBJ TECHNOL S
NR 20
TC 149
Z9 162
U1 1
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2004
VL 30
IS 3
BP 193
EP 206
DI 10.1109/TSE.2004.1271174
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 803BN
UT WOS:000220206700005
DA 2024-07-18
ER

PT J
AU Dolado, JJ
   Harman, M
   Otero, MC
   Hu, L
AF Dolado, JJ
   Harman, M
   Otero, MC
   Hu, L
TI An empirical investigation of the influence of a type of side effects on
   program comprehension
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE side-effect-free programs; crossover designs; program comprehension
ID GUIDELINES
AB This paper reports the results of a study on the impact of a type of side effect (SE) upon program comprehension. We applied a crossover design on different tests involving fragments of C code that include increment and decrement operators. Each test had an SE version and a side-effect-free (SEF) counterpart. The variables measured in the treatments were the number of correct answers and the time spent in answering. The results show that the side-effect operators considered significantly reduce performance in comprehension-related tasks, providing empirical justification for the belief that side effects are harmful.
C1 Univ Basque Country, Dept Comp Languages & Syst, San Sebastian 20009, Spain.
   Brunel Univ, Dept Informat Syst & Comp, Uxbridge UB8 3PH, Middx, England.
C3 University of Basque Country; Brunel University
RP Univ Basque Country, Dept Comp Languages & Syst, San Sebastian 20009, Spain.
EM jipdocoj@si.ehu.es; mark.harman@brunel.ac.uk; jipotvim@vc.ehu.es;
   Lin.Hu@brunel.ac.uk
RI Dolado, José Javier/I-5402-2015
OI Dolado, José Javier/0000-0002-3301-5650; Otero Vidal, Mari
   Carmen/0000-0002-5321-9271; Harman, Mark/0000-0002-5864-4488
CR CANNON L, 2000, RECOMMENDED C STYLE
   Cohen J., 1988, STAT POWER ANAL BEHA
   Dallal GE, 2000, COMPUTER AIDED ANAL
   DIJKSTRA EW, 1968, COMMUN ACM, V11, P147, DOI 10.1145/362929.362947
   GRIZZLE JE, 1965, BIOMETRICS, V21, P467, DOI 10.2307/2528104
   HARMAN M, 2001, P IEEE INT WORKSH PR, P309
   Hendrix D, 2002, IEEE T SOFTWARE ENG, V28, P463, DOI 10.1109/TSE.2002.1000450
   HILLS M, 1979, BRIT J CLIN PHARMACO, V8, P7, DOI 10.1111/j.1365-2125.1979.tb05903.x
   *ISO, 1990, 9899 ISOIEC
   Kernighan B. W., 1999, The Practice of Programming, V1st
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kuehl R.O., 2000, Design of experiments: statistical principles of research designand analysis, V2nd
   Lenth RV, 2001, AM STAT, V55, P187, DOI 10.1198/000313001317098149
   MARSHALL LF, 2000, 699 U NEWC DEPT COMP
   McConnell S, 1996, IEEE SOFTWARE, V13, P127, DOI 10.1109/52.476305
   MIARA RJ, 1983, COMMUN ACM, P861
   Miller J, 1997, INFORM SOFTWARE TECH, V39, P285, DOI 10.1016/S0950-5849(96)01139-1
   Milliken G.A., 1984, Analysis of messy data, V1
   OMAN PW, 1990, COMMUN ACM, V33, P506, DOI 10.1145/78607.78611
   Stevens JP., 2002, APPL MULTIVARIATE ST
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   YUE LQ, 1998, BIOPHARMACEUTICAL ST, V8, P577
NR 22
TC 26
Z9 29
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2003
VL 29
IS 7
BP 665
EP 670
DI 10.1109/TSE.2003.1214329
PG 6
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 698HG
UT WOS:000183992500007
DA 2024-07-18
ER

PT J
AU van Beest, N
   Groefsema, H
   Cryer, A
   Governatori, G
   Tosatto, SC
   Burke, H
AF van Beest, Nick
   Groefsema, Heerko
   Cryer, Adrian
   Governatori, Guido
   Tosatto, Silvano Colombo
   Burke, Hannah
TI Cross-Instance Regulatory Compliance Checking of Business Process Event
   Logs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Business; Runtime; Regulation; Monitoring; Computational modeling;
   Computational complexity; Patents; Business process; event log;
   compliance; regulations; cross-instance; instance-spanning; runtime
   verification
ID EFFICIENT; VERIFICATION
AB Event logs capture the execution of business processes, such that each task is represented by an event and each individual execution is a chronological sequence of events, called an event trace. Event logs allow after-the-act and runtime analysis of deployed business processes to verify whether their execution complies with regulations and business requirements. Checking the compliance of a single sequence of events in a trace is straightforward and a number of approaches have been proposed to address this. However, some regulations or business rules span multiple process instances, requiring a cross-instance analysis. In order to check whether such requirements are maintained at all times, multiple traces need to be analysed together, which can result in a combinatorial computational complexity. In this article, we present a novel approach that efficiently checks runtime regulatory compliance based on event logs, while supporting cross-instance rule evaluation and extensible function evaluation over sequences of attribute data values. The efficiency and applicability of the proposed method is tested in a two-pronged evaluation, showing a significant improvement over existing techniques with respect to capabilities as well as computational complexity. The approach presented in this paper is subject to a patent application, with patent number WO2021/248201.
C1 [van Beest, Nick; Cryer, Adrian; Governatori, Guido; Tosatto, Silvano Colombo; Burke, Hannah] v, Data61, Brisbane, Qld 4001, Australia.
   [Groefsema, Heerko] Univ Groningen, Bernoulli Inst, Fac Sci & Engn, NL-9700 AK Groningen, Netherlands.
C3 Commonwealth Scientific & Industrial Research Organisation (CSIRO);
   University of Groningen
RP van Beest, N (corresponding author), v, Data61, Brisbane, Qld 4001, Australia.
EM nick.vanbeest@data61.csiro.au; h.groefsema@rug.nl;
   adrian.cryer@data61.csiro.au; guido.governatori@data61.csiro.au;
   silvano.colombotosatto@data61.csiro.au; hannah.burke@data61.csiro.au
RI Governatori, Guido/I-5293-2015
OI Governatori, Guido/0000-0002-9878-2762; van Beest,
   Nick/0000-0003-3199-1604; Groefsema, Heerko/0000-0001-8081-6883; Colombo
   Tosatto, Silvano/0000-0002-8809-9716
CR Alur R, 2016, LECT NOTES COMPUT SC, V9632, P15, DOI 10.1007/978-3-662-49498-1_2
   Arasu A, 2006, VLDB J, V15, P121, DOI 10.1007/s00778-004-0147-z
   Armas Cervantes Abel, 2017, On the Move to Meaningful Internet Systems: OTM 2017 Conferences. Confederated International Conferences CoopIS, C&TC and ODBASE 2017. Proceedings: LNCS 10573, P53, DOI 10.1007/978-3-319-69462-7_5
   Awad A, 2008, LECT NOTES COMPUT SC, V5240, P326, DOI 10.1007/978-3-540-85758-7_24
   Awad A, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1203, DOI 10.1145/2695664.2699488
   Awad A, 2011, J VISUAL LANG COMPUT, V22, P30, DOI 10.1016/j.jvlc.2010.11.002
   Basin D, 2015, FORM METHOD SYST DES, V46, P262, DOI 10.1007/s10703-015-0222-7
   Basin David A., 2017, RV-CuBES, V3, P19
   Begoli E, 2019, INT CONF MANAGE DATA, P1757, DOI 10.1145/3299869.3314040
   Birukou A, 2010, LECT NOTES COMPUT SC, V6470, P122, DOI 10.1007/978-3-642-17358-5_9
   Cugola G, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187677
   Dees M, 2016, 4TU.ResearchData, DOI 10.4121/uuid:01345ac4-7d1d-426e-92b8-24933a079412
   Diba K., 2019, P INT C PROC MIN BPI, P1
   Falcone Y, 2021, INT J SOFTW TOOLS TE, V23, P255, DOI 10.1007/s10009-021-00609-z
   Forgy CharlesL., 1989, READINGS ARTIFICIAL, P547
   García-Bañuelos L, 2018, IEEE T SOFTWARE ENG, V44, P262, DOI 10.1109/TSE.2017.2668418
   Ghose A, 2007, LECT NOTES COMPUT SC, V4749, P169
   Governatori G., 2021, U.S. patent, Patent No. [WO2021/248201, 2021248201]
   Governatori G, 2006, IEEE INT ENTERP DIST, P221
   Governatori G, 2010, CONCEPTUAL MODELLING 2010, P3
   Governatori G, 2015, IEEE INT ENTERP, P33, DOI 10.1109/EDOCW.2015.28
   Groefsema H, 2020, COMPUT IND, V115, DOI 10.1016/j.compind.2019.103181
   Groefsema H, 2022, LECT NOTES BUS INF P, V458, P21, DOI 10.1007/978-3-031-16171-1_2
   Groefsema H, 2018, IEEE T SERV COMPUT, V11, P466, DOI 10.1109/TSC.2016.2579621
   Groefsema H, 2015, IEEE INT CONF SERV, P108, DOI 10.1109/SOCA.2015.14
   Hashmi M, 2018, KNOWL INF SYST, V57, P79, DOI 10.1007/s10115-017-1142-1
   Hashmi Mustafa, 2013, P AUSTR S SERV RES I, P100
   Havelund K, 2020, FORM METHOD SYST DES, V56, P1, DOI 10.1007/s10703-018-00327-4
   Havelund K, 2015, INT J SOFTW TOOLS TE, V17, P143, DOI 10.1007/s10009-014-0309-2
   Jin D, 2012, PROC INT CONF SOFTW, P1427, DOI 10.1109/ICSE.2012.6227231
   Leucker M, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1925, DOI 10.1145/3167132.3167338
   Lu RP, 2008, LECT NOTES COMPUT SC, V4928, P120
   Luo QZ, 2014, LECT NOTES COMPUT SC, V8734, P285, DOI 10.1007/978-3-319-11164-3_24
   Montali M., 2015, PROC ITALIAN C COMPU, V1459, P101
   Ramezani E, 2012, LECT NOTES COMPUT SC, V7481, P262, DOI 10.1007/978-3-642-32885-5_21
   Sadiq S., 2015, Handbook on Business Process Management, V2, P265
   Stertz F, 2022, CONF BUS INFORM, P49, DOI 10.1109/CBI54897.2022.10048
   Taghiabadi ER, 2014, LECT NOTES COMPUT SC, V8841, P237, DOI 10.1007/978-3-662-45563-0_14
   Thullner R, 2011, IEEE INT ENTERP, P429, DOI 10.1109/EDOCW.2011.22
   van der Aa H, 2017, LECT NOTES COMPUT SC, V10253, P79, DOI 10.1007/978-3-319-59536-8_6
   van der Aalst WMP, 2005, LECT NOTES COMPUT SC, V3760, P130
   van Dongen B., 2019, Dataset BPI Challenge 2019, DOI [10.4121/uuid:d06aff4b79f0-45e6-8ec8-e19730c248f1, DOI 10.4121/UUID:D06AFF4B79F0-45E6-8EC8-E19730C248F1]
   Winter K, 2020, INFORM SYST, V89, DOI 10.1016/j.is.2019.101484
   Zaki Nesma M., 2023, Model and Data Engineering: 11th International Conference, MEDI 2022, Proceedings. Lecture Notes in Computer Science (13761), P147, DOI 10.1007/978-3-031-21595-7_11
NR 44
TC 0
Z9 0
U1 2
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2023
VL 49
IS 11
BP 4917
EP 4931
DI 10.1109/TSE.2023.3319086
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA Z3ZN2
UT WOS:001111494200004
OA Green Published
DA 2024-07-18
ER

PT J
AU Yu, SC
   Fang, CR
   Zhang, QJ
   Cao, ZH
   Yun, YX
   Cao, ZF
   Mei, K
   Chen, ZY
AF Yu, Shengcheng
   Fang, Chunrong
   Zhang, Quanjun
   Cao, Zhihao
   Yun, Yexiao
   Cao, Zhenfei
   Mei, Kai
   Chen, Zhenyu
TI Mobile App Crowdsourced Test Report Consistency Detection via Deep
   Image-and-Text Fusion Understanding
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Crowdsourced testing; image-and-text fusion understanding; report
   consistency detection
ID BUG REPORT DETECTION; SMOTE
AB Crowdsourced testing, as a distinct testing paradigm, has attracted much attention in software testing, especially in mobile application (app) testing field. Compared with in-house testing, crowdsourced testing shows superiority with the diverse testing environments when faced with the mobile testing fragmentation problem. However, crowdsourced testing also encounters the low-quality test report problem caused by unprofessional crowdworkers involved with different expertise. In order to handle the submitted reports of uneven quality, app developers have to distinguish high-quality reports from low-quality ones to help the bug inspection. One kind of typical low-quality test report is inconsistent test reports, which means the textual descriptions are not focusing on the attached bug-occurring screenshots. According to our empirical survey, only 18.07% crowdsourced test reports are consistent. Inconsistent reports cause waste on mobile app testing. To solve the inconsistency problem, we propose ReCoDe to detect the consistency of crowdsourced test reports via deep image-and-text fusion understanding. ReCoDe is a two-stage approach that first classifies the reports based on textual descriptions into different categories according to the bug feature. In the second stage, ReCoDe has a deep understanding of the GUI image features of the app screenshots and then applies different strategies to handle different types of bugs to detect the consistency of the crowdsourced test reports. We conduct an experiment on a dataset with over 22 k test reports to evaluate ReCoDe, and the results show the effectiveness of ReCoDe in detecting the consistency of crowdsourced test reports. Besides, a user study is conducted to prove the practical value of ReCoDe in effectively helping app developers improve the efficiency of reviewing the crowdsourced test reports.
C1 [Yu, Shengcheng; Fang, Chunrong; Zhang, Quanjun; Cao, Zhihao; Yun, Yexiao; Cao, Zhenfei; Mei, Kai; Chen, Zhenyu] Nanjing Univ, State Key Lab Novel SoftwareTechnol, Nanjing 210093, Jiangsu, Peoples R China.
C3 Nanjing University
RP Fang, CR (corresponding author), Nanjing Univ, State Key Lab Novel SoftwareTechnol, Nanjing 210093, Jiangsu, Peoples R China.
EM yusc@smail.nju.edu.cn; fangchunrong@nju.edu.cn;
   quanjun.zhang@smail.nju.edu.cn; caozhh@smail.nju.edu.cn;
   mf20320212@smail.nju.edu.cn; zhenfeicao@smail.nju.edu.cn;
   181840164@smail.nju.edu.cn; zychen@nju.edu.cn
RI Fang, Chunrong/GPW-9872-2022; Zhang, Quanjun/HZH-4091-2023
OI Fang, Chunrong/0000-0002-9930-7111; Zhang, Quanjun/0000-0002-2495-3805;
   Chen, Zhenyu/0000-0002-9592-7022; Yu, Shengcheng/0000-0003-4640-8637
FU National Natural Science Foundation of China [62141215, 62272220,
   61802171]; Science, Technology and Innovation Commission of Shenzhen
   Municipality [CJGJZD20200617103001003]; Postgraduate Research amp;
   Practice Innovation Program of Jiangsu Province [KYCX22_0174]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grants 62141215, 62272220, and 61802171, in
   part by Science, Technology and Innovation Commission of Shenzhen
   Municipality under Grant CJGJZD20200617103001003, and in part by the
   Postgraduate Research & Practice Innovation Program of Jiangsu Province
   under Grant KYCX22_0174.& nbsp;
CR Alipour A, 2013, IEEE WORK CONF MIN S, P183, DOI 10.1109/MSR.2013.6624026
   Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], 2012, Proceedings of_the_21st_ACM_international_conference_on_Information_and_knowledge management
   Banerjee S., 2012, 2012 IEEE 14th International Symposium on High-Assurance Systems Engineering (HASE 2012), P74, DOI 10.1109/HASE.2012.38
   Banerjee S, 2013, PROC INT SYMP SOFTW, P208, DOI 10.1109/ISSRE.2013.6698920
   Chaparro O, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P86, DOI 10.1145/3338906.3338947
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P665, DOI 10.1145/3180155.3180222
   Chen JS, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1202, DOI 10.1145/3368089.3409691
   Chen JS, 2020, PROC INT CONF SOFTW, P322, DOI 10.1145/3377811.3380327
   Cooper N, 2021, PROC INT CONF SOFTW, P957, DOI 10.1109/ICSE43902.2021.00091
   Cui Q., 2017, P SEKE, P218
   Cui Q, 2017, P INT COMP SOFTW APP, P75, DOI 10.1109/COMPSAC.2017.265
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Dozat T, 2017, Arxiv, DOI [arXiv:1611.01734, DOI 10.48550/ARXIV.1611.01734]
   Fazzini M, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P141, DOI 10.1145/3213846.3213869
   Feng SD, 2022, PROC INT CONF SOFTW, P1045, DOI 10.1145/3510003.3510048
   Feng Y, 2016, IEEE INT CONF AUTOM, P202, DOI 10.1145/2970276.2970367
   Feng Y, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P225, DOI 10.1145/2786805.2786862
   Gao RZ, 2019, EMPIR SOFTW ENG, V24, P537, DOI 10.1007/s10664-018-9618-5
   Geiger FX, 2018, IEEE WORK CONF MIN S, P30, DOI 10.1145/3196398.3196460
   Han H, 2005, LECT NOTES COMPUT SC, V3644, P878, DOI 10.1007/11538059_91
   Hindle A, 2016, EMPIR SOFTW ENG, V21, P368, DOI 10.1007/s10664-015-9387-3
   Hu M., 2004, P 10 ACM SIGKDD INT, P168, DOI DOI 10.1145/1014052.1014073
   Huang Y., 2020, PROC IEEEACM 14 INT, P1
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Li G, 2020, AAAI CONF ARTIF INTE, V34, P11336
   Liu B., 2005, Proceedings of 14th International Conference of World Wide Web, P342
   Liu P, 2020, IEEE WORK CONF MIN S, P548, DOI 10.1145/3379597.3387503
   Liu Z, 2023, IEEE T SOFTWARE ENG, V49, P403, DOI 10.1109/TSE.2022.3150876
   Liu Z, 2022, PROCEEDINGS OF THE 2022 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI' 22), DOI 10.1145/3491102.3501903
   Liu Z, 2020, IEEE INT CONF AUTOM, P398, DOI 10.1145/3324884.3416547
   Lu D., 2019, arXiv
   Mnih V, 2014, ADV NEUR IN, V27
   Moran K, 2020, IEEE T SOFTWARE ENG, V46, P196, DOI 10.1109/TSE.2018.2844788
   Prifti T., 2011, Proceedings of the 7th International Conference on Predictive Models in Software Engineering, p8:1, DOI DOI 10.1145/2020390.2020398
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Scalabrino Simone, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P288, DOI 10.1109/MSR.2019.00055
   Shen L, 2016, LECT NOTES COMPUT SC, V9911, P467, DOI 10.1007/978-3-319-46478-7_29
   Su WJ, 2020, Arxiv, DOI arXiv:1908.08530
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Sureka A, 2010, ASIA PAC SOFWR ENG, P366, DOI 10.1109/APSEC.2010.49
   Tian Y, 2013, PROC IEEE INT CONF S, P200, DOI 10.1109/ICSM.2013.31
   Nguyen TA, 2015, IEEE INT CONF AUTOM, P248, DOI 10.1109/ASE.2015.32
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang HY, 2018, IEEE WORK CONF MIN S, P231, DOI 10.1145/3196398.3196412
   Wang JJ, 2020, PROC INT CONF SOFTW, P1535, DOI 10.1145/3377811.3380380
   Wang JJ, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962584
   Wang JJ, 2019, INFORM SOFTWARE TECH, V110, P139, DOI 10.1016/j.infsof.2019.03.003
   Wang JJ, 2016, IEEE INT CONF AUTOM, P190, DOI 10.1145/2970276.2970300
   Wei LL, 2016, IEEE INT CONF AUTOM, P226, DOI 10.1145/2970276.2970312
   Wendland T, 2021, IEEE WORK CONF MIN S, P600, DOI 10.1109/MSR52588.2021.00082
   Xiao XS, 2019, PROC INT CONF SOFTW, P257, DOI 10.1109/ICSE.2019.00041
   Xie M, 2017, PROC INT SYMP SOFTW, P316, DOI 10.1109/ISSRE.2017.25
   Xu TT, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P191, DOI 10.1145/3460319.3464830
   Yu SC, 2021, PROC INT CONF SOFTW, P1561, DOI 10.1109/ICSE43902.2021.00139
   Yu SC, 2021, PROC INT CONF SOFTW, P946, DOI 10.1109/ICSE43902.2021.00090
   Yu SC, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1277, DOI 10.1109/ASE.2019.00161
   Yu SC, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1066, DOI 10.1109/ASE.2019.00103
   Zhang S, 2020, Arxiv, DOI arXiv:2009.00901
   Zhao Y, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3488244
   Zhu Muhua, 2013, P 51 ANN M ASS COMP, P434
NR 64
TC 2
Z9 2
U1 1
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2023
VL 49
IS 8
BP 4115
EP 4134
DI 10.1109/TSE.2023.3285787
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA P3WA9
UT WOS:001049968200010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Walkinshaw, N
   Hierons, RM
AF Walkinshaw, Neil
   Hierons, Robert M.
TI Modelling Second-Order Uncertainty in State Machines
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Uncertainty; Probabilistic logic; Testing; Protocols; Predictive models;
   IEEE 1394 Standard; Finite element analysis; State machine; second order
   uncertainty; subjective logic; inference; test prioritization
ID HIDDEN MARKOV-MODELS; PROBABILISTIC-AUTOMATA; INFERENCE; COMPLEXITY
AB Modelling the behaviour of state-based systems can be challenging, especially when the modeller is not entirely certain about its intended interactions with the user or the environment. Currently, it is possible to associate a stated level of uncertainty with a given event by attaching probabilities to transitions (producing 'Probabilistic State Machines'). This captures the 'First-order uncertainty' - the (un-)certainty that a given event will occur. However, this does not permit the modeller to capture their own uncertainty (or lack thereof) about that stated probability - also known as 'Second-order uncertainty'. In this article we introduce a generalisation of probabilistic finite state machines that makes it possible to incorporate this important additional dimension of uncertainty. For this we adopt a formalism for reasoning about uncertainty called Subjective Logic. We present an algorithm to create these enhanced state machines automatically from a conventional state machine and a set of observed sequences. We show how this approach can be used for reverse-engineering predictive state machines from traces.
C1 [Walkinshaw, Neil; Hierons, Robert M.] Univ Sheffield, Dept Comp Sci, Sheffield S10 2TN, England.
C3 University of Sheffield
RP Walkinshaw, N (corresponding author), Univ Sheffield, Dept Comp Sci, Sheffield S10 2TN, England.
EM n.walkinshaw@sheffield.ac.uk; r.hierons@sheffield.ac.uk
RI Walkinshaw, Neil/AHA-2966-2022
OI Walkinshaw, Neil/0000-0003-2134-6548; Hierons,
   Robert/0000-0002-4771-1446
FU EPSRC CITCOM [EP/T030526/1]
FX The work of Neil Walkinshaw and Robert M. Hierons are supported by the
   EPSRC CITCOM under Grant EP/T030526/1
CR Aichernig BK, 2018, LECT NOTES COMPUT SC, V11026, P74, DOI 10.1007/978-3-319-96562-8_3
   ANGLUIN D, 1978, INFORM CONTROL, V39, P337, DOI 10.1016/S0019-9958(78)90683-6
   ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   Attaluri S, 2009, J COMPUT VIROL HACKI, V5, P151, DOI 10.1007/s11416-008-0105-1
   Boole G, 1854, A Treatsie on the Calculus of Finite Differences
   Borges J, 2000, LECT NOTES COMPUT SC, V1836, P92
   Brglez F., 1996, ACMSIGMOD BENCHMARK
   Carrasco R. C., 1994, Grammatical Inference and Applications. Second International Colloquium, ICGI-94 Proceedings, P139
   Choi W, 2013, ACM SIGPLAN NOTICES, V48, P623, DOI [10.1145/2544173.2509552, 10.1145/2509136.2509552]
   Cook J. E., 1998, ACM Transactions on Software Engineering and Methodology, V7, P215, DOI 10.1145/287000.287001
   Daelemans W, 2010, MACH TRANSL, V24, P291, DOI 10.1007/s10590-011-9086-9
   de Ruiter J, 2016, LECT NOTES COMPUT SC, V10014, P169, DOI 10.1007/978-3-319-47560-8_11
   Dorn J, 2020, IEEE INT CONF AUTOM, P684, DOI 10.1145/3324884.3416620
   Duan L, 2016, IEEE HI ASS SYS ENGR, P86, DOI 10.1109/HASE.2016.52
   Dupont P, 2005, PATTERN RECOGN, V38, P1349, DOI 10.1016/j.patcog.2004.03.020
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P833, DOI 10.1145/2635868.2666608
   Emam SS, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3196883
   Fiterau-Brostean P, 2017, SPIN'17: PROCEEDINGS OF THE 24TH ACM SIGSOFT INTERNATIONAL SPIN SYMPOSIUM ON MODEL CHECKING OF SOFTWARE, P142, DOI 10.1145/3092282.3092289
   Fiterau-Brostean P, 2016, LECT NOTES COMPUT SC, V9780, P454, DOI 10.1007/978-3-319-41540-6_25
   Furia CA, 2021, IEEE T SOFTWARE ENG, V47, P1786, DOI 10.1109/TSE.2019.2935974
   GARDENFORS P, 1982, SYNTHESE, V53, P361, DOI 10.1007/BF00486156
   GOLD EM, 1978, INFORM CONTROL, V37, P302, DOI 10.1016/S0019-9958(78)90562-4
   Hierons RM, 2009, J SYST SOFTWARE, V82, P1804, DOI 10.1016/j.jss.2009.06.030
   Ho TK, 1998, IEEE T PATTERN ANAL, V20, P832, DOI 10.1109/34.709601
   Josang A, 2016, ARTIF INTELL-FOUND, P1, DOI 10.1007/978-3-319-42337-1
   Josang A, 2001, INT J UNCERTAIN FUZZ, V9, P279, DOI 10.1016/S0218-4885(01)00083-1
   Kiureghian AD, 2009, STRUCT SAF, V31, P105, DOI 10.1016/j.strusafe.2008.06.020
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Kwiatkowska M., 2003, Formal Aspects of Computing, V14, P295, DOI 10.1007/s001650300007
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Lang K. J., 1998, Grammatical Inference. 4th International Colloquium, ICGI-98. Proceedings, P1, DOI 10.1007/BFb0054059
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Li ZH, 2006, INFORM SCIENCES, V176, P2208, DOI 10.1016/j.ins.2005.05.001
   Nair S, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P541, DOI 10.1109/ISSRE.2015.7381846
   Neider Daniel, 2019, Models, Mindsets, Meta. The What, the How, and the Why Not? Essays Dedicated to Bernhard Steffen on the Occasion of His 60th Birthday. Lecture Notes in Computer Science (LNCS 11200), P390, DOI 10.1007/978-3-030-22348-9_23
   Rasool A., 2018, QUIC PATROL PROTOCOL
   RIVEST RL, 1993, INFORM COMPUT, V103, P299, DOI 10.1006/inco.1993.1021
   Shafer Glenn, 1976, A mathematical theory of evidence, V42, DOI DOI 10.2307/J.CTV10VM1QB
   Sharafi Z, 2020, EMPIR SOFTW ENG, V25, P3128, DOI 10.1007/s10664-020-09829-4
   Steffen B, 2011, LECT NOTES COMPUT SC, V6659, P256, DOI 10.1007/978-3-642-21455-4_8
   Su T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P245, DOI 10.1145/3106237.3106298
   Nguyen TT, 2015, IEEE INT CONF AUTOM, P795, DOI 10.1109/ASE.2015.109
   Tappler M, 2017, IEEE INT CONF SOFTW, P276, DOI 10.1109/ICST.2017.32
   Troya J, 2021, SOFTW SYST MODEL, V20, P1183, DOI 10.1007/s10270-020-00842-1
   VALIANT LG, 1984, COMMUN ACM, V27, P1134, DOI 10.1145/1968.1972
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Verwer S., 2011, IJCAI Int. Jt. Conf. Artif. Intell, P1529
   Verwer S, 2014, MACH LEARN, V96, P129, DOI 10.1007/s10994-013-5409-9
   Vidal E, 2005, IEEE T PATTERN ANAL, V27, P1013, DOI 10.1109/TPAMI.2005.147
   Vidal E, 2005, IEEE T PATTERN ANAL, V27, P1026, DOI 10.1109/TPAMI.2005.148
   Walkinshaw Neil, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P140, DOI 10.1145/3383219.3383234
   Walkinshaw N, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P107, DOI 10.1109/AITEST49225.2020.00023
   Walkinshaw N, 2017, IEEE INT CONF SOFTW, P253, DOI 10.1109/ICST.2017.30
   Walkinshaw N, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430545.2430549
   Walkinshaw N, 2013, EMPIR SOFTW ENG, V18, P791, DOI 10.1007/s10664-012-9210-3
   Walley P, 1996, J ROY STAT SOC B MET, V58, P3
   WEE WG, 1969, IEEE T SYST SCI CYB, VSSC5, P215, DOI 10.1109/TSSC.1969.300263
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   WEYUKER EJ, 1983, ACM T PROGR LANG SYS, V5, P641, DOI 10.1145/69575.357231
   YANG JB, 1994, IEEE T SYST MAN CYB, V24, P1, DOI 10.1109/21.259681
   ZADEH LA, 1965, INFORM CONTROL, V8, P338, DOI 10.1016/S0019-9958(65)90241-X
   Zhu JM, 2023, Arxiv, DOI arXiv:2008.06448
NR 62
TC 1
Z9 1
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2023
VL 49
IS 5
BP 3261
EP 3276
DI 10.1109/TSE.2023.3250835
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA G8MH8
UT WOS:000991628700012
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Menghi, C
   Tsigkanos, C
   Askarpour, M
   Pelliccione, P
   Vázquez, G
   Calinescu, R
   García, S
AF Menghi, Claudio
   Tsigkanos, Christos
   Askarpour, Mehrnoosh
   Pelliccione, Patrizio
   Vazquez, Gricel
   Calinescu, Radu
   Garcia, Sergio
TI Mission Specification Patterns for Mobile Robots: Providing Support for
   Quantitative Properties
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Robots; DSL; Software; Behavioral sciences; Software engineering;
   Probabilistic logic; Task analysis; Robotics software engineering;
   robotic missions specification; quantitative properties; domain-specific
   languages; probabilistic reward computation tree logic
ID TEMPORAL LOGIC; QUALITY; ENVIRONMENTS
AB With many applications across domains as diverse as logistics, healthcare, and agriculture, service robots are in increasingly high demand. Nevertheless, the designers of these robots often struggle with specifying their tasks in a way that is both human-understandable and sufficiently precise to enable automated verification and planning of robotic missions. Recent research has addressed this problem for the functional aspects of robotic missions through the use of mission specification patterns. These patterns support the definition of robotic missions involving, for instance, the patrolling of a perimeter, the avoidance of unsafe locations within an area, or reacting to specific events. Our article introduces a catalog of QUantitAtive RoboTic mission spEcificaTion patterns (QUARTET) that tackles the complementary and equally important challenge of specifying the reliability, performance, resource usage, and other key quantitative properties of robotic missions. Identified using a methodology that included the analysis of 73 research papers published in 17 leading software engineering and robotics venues between 2014-2021, our 22 QUARTET patterns are defined in a tool-supported domain-specific language. As such, QUARTET enables: (i) the precise definition of quantitative robotic-mission requirements and (ii) the translation of these requirements into probabilistic reward computation tree logic (PRCTL), supporting their formal verification and automated planning of robotic missions. We demonstrate the applicability of QUARTET by showing that it supports the specification of over 95% of the quantitative robotic mission requirements from a systematically selected set of recent research papers, of which 75% can be automatically translated into PRCTL for the purposes of verification through model checking and mission planning.
C1 [Menghi, Claudio; Askarpour, Mehrnoosh] McMaster Univ, Hamilton, ON L8S 4L8, Canada.
   [Tsigkanos, Christos] Univ Bern, CH-3012 Bern, Switzerland.
   [Pelliccione, Patrizio] Gran Sasso Sci Inst GSSI, I-67100 Laquila, AQ, Italy.
   [Vazquez, Gricel; Calinescu, Radu] Univ York, York YO10 5DD, England.
   [Garcia, Sergio] Volvo Cars Corp, S-40531 Gothenburg, Sweden.
C3 McMaster University; University of Bern; Gran Sasso Science Institute
   (GSSI); University of York - UK; Volvo
RP Menghi, C (corresponding author), McMaster Univ, Hamilton, ON L8S 4L8, Canada.
EM menghic@mcmaster.ca; christos.tsigkanos@inf.unibe.ch;
   askarpom@mcmaster.ca; patrizio.pelliccione@gssi.it;
   gricel.vazquez@york.ac.uk; radu.calinescu@york.ac.uk;
   sergio.garcia@volvocars.com
RI Pelliccione, Patrizio/Q-5118-2019; MENGHI, CLAUDIO/AAC-2265-2022
OI Pelliccione, Patrizio/0000-0002-5438-2281; MENGHI,
   CLAUDIO/0000-0001-5303-8481; Calinescu, Radu/0000-0002-2678-9260
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
   [RGPIN-2022-04622, DGECR-2022-0040]; UKRI project [EP/V026747/1];
   Mexican National Council for Science and Technology (CONACYT); Centre of
   EXcellence on Connected, Geo-Localized and Cybersecure Vehicles
   (EX-Emerge) - Italian Government [70/2017]; SPF [EP/V026747/1] Funding
   Source: UKRI
FX This work was supported in part by the Natural Sciences and Engineering
   Research Council of Canada (NSERC) under Grants RGPIN-2022-04622 and
   DGECR-2022-0040. The work of Radu Calinescu was supported in part by
   UKRI project under Grant EP/V026747/1 Trustworthy Autonomous Systems
   Node in Resilience' and the Assuring Autonomy International Programme .
   The work of Gricel Vazquez was supported in part by the Mexican National
   Council for Science and Technology (CONACYT). The work of Patrizio
   Pelliccione was supported in part by the Centre of EXcellence on
   Connected, Geo-Localized and Cybersecure Vehicles (EX-Emerge) , funded
   by the Italian Government under CIPE resolution n. 70/2017 (Aug. 7,
   2017).
CR Aksaray D, 2016, IEEE INT CONF ROBOT, P3141, DOI 10.1109/ICRA.2016.7487481
   Andova S, 2003, LECT NOTES COMPUT SC, V2791, P88
   [Anonymous], 2022, TOOL REPL PACK
   [Anonymous], 2022, PRISM GAM
   [Anonymous], 2022, US GUID MOB AUT ROB
   [Anonymous], 2022, PRISM CAS STUD
   [Anonymous], 2003, IJCAI 03
   Arantes MD, 2019, IEEE T ROBOT, V35, P433, DOI 10.1109/TRO.2018.2878996
   Arcaini P, 2020, J SYST SOFTWARE, V164, DOI 10.1016/j.jss.2020.110558
   Arkin R., 2006, MISSIONLAB V7 0
   Autili M, 2007, AUTOMAT SOFTW ENG, V14, P293, DOI 10.1007/s10515-007-0012-6
   Autili M, 2015, IEEE T SOFTWARE ENG, V41, P620, DOI 10.1109/TSE.2015.2398877
   Ayerdi J, 2020, INT REQUIR ENG CONF, P280, DOI 10.1109/RE48521.2020.00038
   Aziz K., 1996, Computer Aided Verification. 8th International Conference, CAV '96. Proceedings, P269
   Baier C., 1998, THESIS U MANNHEIM MA
   Balch T., 2004, ABOUT US
   Bianculli D, 2012, PROC INT CONF SOFTW, P968, DOI 10.1109/ICSE.2012.6227125
   Biggs G., 2003, Proceedings of the Australasian conference on robotics and automation, P27, DOI DOI 10.1109/ROBOT.2001.932554
   Bitsch F., 2001, LNCS, V2187, P176, DOI [10.1007/3-540-45416-018, DOI 10.1007/3-540-45416-018]
   Bopardikar SD, 2014, IEEE T ROBOT, V30, P1524, DOI 10.1109/TRO.2014.2344451
   Boufaied C, 2021, J SYST SOFTWARE, V174, DOI 10.1016/j.jss.2020.110881
   Boufaied C, 2020, IEEE INT CONF AUTOM, P1004, DOI 10.1145/3324884.3416631
   Bourbonnais F, 2015, IEEE-ASME T MECH, V20, P740, DOI 10.1109/TMECH.2014.2318999
   Bozhinoski D, 2015, IEEE INT CONF AUTOM, P801, DOI 10.1109/ASE.2015.104
   Bravo FA, 2017, 2017 IEEE 3RD COLOMBIAN CONFERENCE ON AUTOMATIC CONTROL (CCAC)
   Brooks RA., 1991, P 12 INT JOINT C ART, P569
   Broy M., 1991, Proceedings of the Sixth International Workshop on Software Specification and Design (Cat. No.91TH0388-9), P2, DOI 10.1109/IWSSD.1991.213082
   Brugali D, 2005, Proceedings of the 2005 IEEE International Conference on Information Reuse and Integration, P585
   Brugali D, 2007, SPRINGER TRAC ADV RO, V30, P9, DOI 10.1007/978-3-540-68951-5_2
   Brugali D, 2009, IEEE ROBOT AUTOM MAG, V16, P9, DOI 10.1109/MRA.2009.932127
   Brugali Davide, 2007, SOFTWARE ENG EXPT RO, V30
   C^ote C., 2005, PROC WORKSHOP ROBOTI, P1820
   Cai H, 2019, IEEE T ROBOT, V35, P200, DOI 10.1109/TRO.2018.2875389
   Calinescu R, 2016, IEEE T RELIAB, V65, P107, DOI 10.1109/TR.2015.2452931
   Calinescu R, 2011, IEEE T SOFTWARE ENG, V37, P387, DOI 10.1109/TSE.2010.92
   Chinchali SP, 2016, IEEE INT CONF ROBOT, P3682, DOI 10.1109/ICRA.2016.7487553
   Cho K, 2018, IEEE INT CONF ROBOT, P7322
   Czepa C, 2020, IEEE T SOFTWARE ENG, V46, P100, DOI 10.1109/TSE.2018.2859926
   David Alexandre, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P206, DOI 10.1007/978-3-662-46681-0_16
   Di Ruscio D, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P45, DOI 10.1145/2976767.2976794
   Ding XC, 2011, IEEE ROBOT AUTOM MAG, V18, P75, DOI 10.1109/MRA.2011.942117
   Dragule S, 2021, SOFTW SYST MODEL, V20, P1123, DOI 10.1007/s10270-020-00854-x
   Dragule Swaib, 2021, Software Engineering for Robotics, V2021, P377
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Emerson E.A., 1990, Handbook of Theoretical Computer Science, Volume B: Formal Models and Sematics (B), VB, P1072
   Endo Y, 2004, IEEE T SYST MAN CY C, V34, P168, DOI 10.1109/TSMCC.2004.826285
   Fainekos GE, 2009, AUTOMATICA, V45, P343, DOI 10.1016/j.automatica.2008.08.008
   Finucane C, 2010, IEEE INT C INT ROBOT, P1988, DOI 10.1109/IROS.2010.5650371
   García S, 2020, PROC INT CONF SOFTW, P5, DOI 10.1145/3377812.3382143
   García S, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P593, DOI 10.1145/3368089.3409743
   García S, 2019, PROCEEDINGS OF THE 12TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '19), P127, DOI 10.1145/3357766.3359535
   Gat E, 1998, ARTIFICIAL INTELLIGENCE AND MOBILE ROBOTS, P195
   Gerasimou S, 2018, AUTOMAT SOFTW ENG, V25, P785, DOI 10.1007/s10515-018-0235-8
   Gerasimou S, 2015, IEEE INT CONF AUTOM, P319, DOI 10.1109/ASE.2015.22
   Grunske L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P31, DOI 10.1145/1368088.1368094
   Guo M, 2015, INT J ROBOT RES, V34, P218, DOI 10.1177/0278364914546174
   Guo M, 2013, IEEE INT CONF ROBOT, P5025, DOI 10.1109/ICRA.2013.6631295
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Hentout A, 2016, PROCEEDINGS OF 2016 8TH INTERNATIONAL CONFERENCE ON MODELLING, IDENTIFICATION & CONTROL (ICMIC 2016), P67, DOI 10.1109/ICMIC.2016.7804217
   Holzmann G. J., 2002, Software Engineering Notes, V27, P81, DOI 10.1145/605466.605479
   Imamoglu N., 2014, SCI WORLD J
   Imeson F, 2019, IEEE T ROBOT, V35, P669, DOI 10.1109/TRO.2019.2896401
   Johansson M, 2013, LECT NOTES ARTIF INT, V8239, P351, DOI 10.1007/978-3-319-02675-6_35
   Jost B, 2014, 2014 IEEE INTERNATIONAL SYMPOSIUM ON MULTIMEDIA (ISM), P381, DOI 10.1109/ISM.2014.24
   Kala R, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SIMULATION, MODELING, AND PROGRAMMING FOR AUTONOMOUS ROBOTS (SIMPAR), P81, DOI 10.1109/SIMPAR.2018.8376275
   Katoen JP, 2005, INT CONF QUANT EVAL, P243, DOI 10.1109/QEST.2005.2
   Kloetzer M, 2015, IEEE T AUTOM SCI ENG, V12, P1407, DOI 10.1109/TASE.2015.2454299
   Konrad S, 2005, PROC INT CONF SOFTW, P372
   Kramer J, 2007, AUTON ROBOT, V22, P101, DOI 10.1007/s10514-006-9013-8
   Kress-Gazit H, 2009, IEEE T ROBOT, V25, P1370, DOI 10.1109/TRO.2009.2030225
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Kwiatkowska M, 2002, LECT NOTES COMPUT SC, V2324, P200
   Kwiatkowska M., 2011, COMPUTER AIDED VER I
   Lee IS, 1997, 1997 HIGH-ASSURANCE ENGINEERING WORKSHOP - PROCEEDINGS, P42, DOI 10.1109/HASE.1997.648037
   Li NY, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110742
   Licea DB, 2020, IEEE T ROBOT, V36, P431, DOI 10.1109/TRO.2019.2948801
   Lignos C, 2015, AUTON ROBOT, V38, P89, DOI 10.1007/s10514-014-9418-8
   Luckcuck M, 2019, Arxiv, DOI arXiv:1807.00048
   Makatchev M, 2010, ACMIEEE INT CONF HUM, P167, DOI 10.1109/HRI.2010.5453213
   Maniatopoulos S, 2014, IEEE INT CONF ROBOT, P4328, DOI 10.1109/ICRA.2014.6907489
   Maoz S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON ROBOTICS SOFTWARE ENGINEERING (ROSE), P17, DOI 10.1145/3196558.3196561
   Maoz S, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P96, DOI 10.1145/2786805.2786824
   Maoz Shahar, 2011, P 10 INT C ASP OR SO, P19, DOI [10.1145/1960275.1960280, DOI 10.1145/1960275.1960280]
   Markov Reward Model Checker (MRMC), 2022, UPDATES
   Markov Reward Model Checker (MRMC), 2022, US
   Menghi C, 2021, PROC INT CONF SOFTW, P847, DOI 10.1109/ICSE43902.2021.00082
   Menghi C, 2021, IEEE T SOFTWARE ENG, V47, P2208, DOI 10.1109/TSE.2019.2945329
   Menghi C, 2018, LECT NOTES COMPUT SC, V10951, P399, DOI 10.1007/978-3-319-95582-7_24
   Menghi C, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P99, DOI 10.1109/ICSE-Companion.2019.00048
   Menghi C, 2018, PROC IEEE ACM INT C, P434, DOI 10.1145/3183440.3195044
   Muralidharan A, 2019, IEEE T ROBOT, V35, P466, DOI 10.1109/TRO.2018.2883829
   Nam C, 2015, IEEE INT CONF ROBOT, P1249, DOI 10.1109/ICRA.2015.7139351
   Nasrabadi N.M, 2007, Pattern recognition and machine learning, V16
   Nordmann A., 2014, SIMULATION MODEL ING
   Nunes E, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SIMULATION, MODELING, AND PROGRAMMING FOR AUTONOMOUS ROBOTS (SIMPAR), P197, DOI 10.1109/SIMPAR.2016.7862396
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   PRISM, 2022, ABOUT US
   Puterman M., 1990, Handb Oper Res Manage Sci, V2, P331
   Sauppé A, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P1439, DOI 10.1145/2556288.2557057
   Schillinger P, 2018, IEEE INT CONF ROBOT, P7330
   Smith MH, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P14
   Spanoudakis G, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P1518, DOI 10.1145/1244002.1244327
   Srinivas S, 2013, 2013 IEEE INTERNATIONAL CONFERENCE ON ROBOTICS AND BIOMIMETICS (ROBIO), P704, DOI 10.1109/ROBIO.2013.6739543
   STORM, 2022, US
   Tang B, 2016, IEEE T HUM-MACH SYST, V46, P694, DOI 10.1109/THMS.2016.2571269
   Tsigkanos C, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P38, DOI 10.1145/3106237.3106299
   Ulusoy A, 2011, IEEE INT C INT ROBOT, P3087, DOI 10.1109/IROS.2011.6048524
   Veizaga A., 2020, PROC ACMIEEE 23 INT, P218
   Veizaga A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09956-6
   Verginis CK, 2019, IEEE INT CONF ROBOT, P951, DOI [10.1109/ICRA.2019.8794000, 10.1109/icra.2019.8794000]
   Wei W., 2016, PROC INT C SYST
   Williams RL, 2010, J ROBOT, V2010, DOI 10.1155/2010/901365
   Xtend, 2022, US
   Xtext, 2022, ABOUT US
   Yin KY, 2021, J ROBOT, V2021, DOI 10.1155/2021/8142161
   Zanchettin AM, 2019, IEEE T IND INFORM, V15, P3934, DOI 10.1109/TII.2018.2882741
NR 116
TC 2
Z9 2
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2741
EP 2760
DI 10.1109/TSE.2022.3230059
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600075
OA hybrid, Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Pei, KX
   Xuan, Z
   Yang, JF
   Jana, S
   Ray, B
AF Pei, Kexin
   Xuan, Zhou
   Yang, Junfeng
   Jana, Suman
   Ray, Baishakhi
TI Learning Approximate Execution Semantics From Traces for Binary Function
   Similarity
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Semantics; Task analysis; Computer architecture; Optimization; Codes;
   Behavioral sciences; Computational modeling; Binary analysis; large
   language models; software security
AB Detecting semantically similar binary functions - a crucial capability with broad security usages including vulnerability detection, malware analysis, and forensics - requires understanding function behaviors and intentions. This task is challenging as semantically similar functions can be compiled to run on different architectures and with diverse compiler optimizations or obfuscations. Most existing approaches match functions based on syntactic features without understanding the functions' execution semantics. We present Trex, a transfer-learning-based framework, to automate learning approximate execution semantics explicitly from functions' traces collected via forced-execution (i.e., by violating the control flow semantics) and transfer the learned knowledge to match semantically similar functions. While it is known that forced-execution traces are too imprecise to be directly used to detect semantic similarity, our key insight is that these traces can instead be used to teach an ML model approximate execution semantics of diverse instructions and their compositions. We thus design a pretraining task, which trains the model to learn approximate execution semantics from the two modalities (i.e., forced-executed code and traces) of the function. We then finetune the pretrained model to match semantically similar functions. We evaluate Trex on 1,472,066 functions from 13 popular software projects, compiled to run on 4 architectures (x86, x64, ARM, and MIPS), and with 4 optimizations (O0-O3) and 5 obfuscations. Trex outperforms the state-of-the-art solutions by 7.8%, 7.2%, and 14.3% in cross-architecture, optimization, and obfuscation function matching, respectively, while running 8x faster. Ablation studies suggest that the pretraining significantly boosts the function matching performance, underscoring the importance of learning execution semantics. Our case studies demonstrate the practical use-cases of Trex - on 180 real-world firmware images, Trex uncovers 14 vulnerabilities not disclosed by previous studies. We release the code and dataset of Trex at https://github.com/CUMLSec/trex.
C1 [Pei, Kexin; Yang, Junfeng; Jana, Suman; Ray, Baishakhi] Columbia Univ, New York, NY 10027 USA.
   [Xuan, Zhou] Purdue Univ, W Lafayette, IN 47907 USA.
C3 Columbia University; Purdue University System; Purdue University
RP Pei, KX (corresponding author), Columbia Univ, New York, NY 10027 USA.
EM kpei@cs.columbia.edu; xuan1@purdue.edu; junfeng@cs.columbia.edu;
   suman@cs.columbia.edu; rayb@cs.columbia.edu
OI Pei, Kexin/0000-0001-5052-9808
FU NSF [CCF-18-45893, CCF-18-22965, CCF-16-19123, CNS-18-42456,
   CNS-18-01426, CNS-16-18771, CNS-16-17670, CNS-15-64055, CNS-15-63843];
   ONR [N00014-17-1-2010, N00014-16-1-2263, N00014-17-1-2788]; ARO Young
   Investigator(YIP) award; Google Faculty Fellowship; MorganFaculty
   Research Award; Google Cloud Grant; Capital One Research Grant; Amazon
   Web Services Grant
FX This work was supported in part by NSF under Grants CCF-18-45893,
   CCF-18-22965, CCF-16-19123, CNS-18-42456, CNS-18-01426,
   CNS-16-18771,CNS-16-17670, CNS-15-64055, and CNS-15-63843, in part by
   ONR underGrants N00014-17-1-2010, N00014-16-1-2263, and
   N00014-17-1-2788, inpart by an NSF CAREER award, in part by an ARO Young
   Investigator(YIP) award, in part by a Google Faculty Fellowship, in part
   by a JP MorganFaculty Research Award, in part by a DiDi Faculty Research
   Award, in partby a Google Cloud Grant, in part by a Capital One Research
   Grant, and inpart by an Amazon Web Services Grant.
CR Aghakhani H, 2020, 27TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2020), DOI 10.14722/ndss.2020.24310
   Ahmad WU, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P2655
   Ahmadi M, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P2025
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Amazon Web Services, 2020, OP DISTR EL
   [Anonymous], 2005, P 2005 ACM S APPL CO, DOI DOI 10.1145/1066677.1066753
   Arp D, 2021, Arxiv, DOI arXiv:2010.09470
   Avgerinos T, 2014, COMMUN ACM, V57, P74, DOI 10.1145/2560217.2560219
   Banerjee P, 2021, Arxiv, DOI arXiv:2103.12801
   Bardin Sebastien, 2021, P MLPA 2020 MACH LEA
   Bayer U., 2009, NDSS, VVolume 9, P8
   Bourquin Martial, 2013, P 2 ACM SIGPLAN PROG
   Boytsov L, 2013, LECT NOTES COMPUT SC, V8199, P280, DOI 10.1007/978-3-642-41062-8_28
   Brumley D, 2008, P IEEE S SECUR PRIV, P143, DOI 10.1109/SP.2008.17
   Cai Lei, 2021, CIKM '21: Proceedings of the 30th ACM International Conference on Information & Knowledge Management, P3747, DOI 10.1145/3459637.3481955
   Chandramohan M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P678, DOI 10.1145/2950290.2950350
   Chen YZ, 2021, CCS '21: PROCEEDINGS OF THE 2021 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P477, DOI 10.1145/3460120.3484776
   Chua ZL, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P99
   Chunrong Fang, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P516, DOI 10.1145/3395363.3397362
   Crussell Jonathan, 2013, Computer Security - ESORICS 2013. 18th European Symposium on Research in Computer Security. Proceedings: LNCS 8134, P182, DOI 10.1007/978-3-642-40203-6_11
   David Y, 2017, ACM SIGPLAN NOTICES, V52, P79, DOI [10.1145/3140587.3062387, 10.1145/3062341.3062387]
   David Y, 2016, ACM SIGPLAN NOTICES, V51, P266, DOI [10.1145/2908080.2908126, 10.1145/2980983.2908126]
   David Y, 2014, ACM SIGPLAN NOTICES, V49, P349, DOI [10.1145/2594291.2594343, 10.1145/2666356.2594343]
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Ding SHH, 2019, P IEEE S SECUR PRIV, P472, DOI 10.1109/SP.2019.00003
   Duan Y, 2020, 27TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2020), DOI 10.14722/ndss.2020.24311
   Egele M, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P303
   Eschweiler S, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23185
   Fan M, 2019, PROC INT CONF SOFTW, P771, DOI 10.1109/ICSE.2019.00085
   Farhadi MR, 2014, INT CONF SOFTW SECUR, P78, DOI 10.1109/SERE.2014.21
   Feng Q., 2016, P 2016 ACM SIGSAC C, P480, DOI [10.1145/2976749.2978370, DOI 10.1145/2976749.2978370]
   Gao DB, 2008, LECT NOTES COMPUT SC, V5308, P238
   Gao J, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P803, DOI 10.1145/3236024.3275524
   Gionis A, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P518
   Gottschall S., 2005, DD WRT
   Guo WB, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1787
   Heo K, 2017, PROC INT CONF SOFTW, P519, DOI 10.1109/ICSE.2017.54
   Hu YK, 2017, INT C PROGRAM COMPRE, P88, DOI 10.1109/ICPC.2017.22
   Huang H, 2017, PROCEEDINGS OF THE 2017 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIA CCS'17), P155, DOI 10.1145/3052973.3052974
   Jang J., 2013, P 22 USENIX SEC S US, P81
   Jeon M, 2019, ACM T PROGR LANG SYS, V41, DOI 10.1145/3293607
   Jiang LX, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P81
   Jiang Ming, 2013, Information Security and Cryptology - ICISC 2012. 15th International Conference. Revised Selected Papers, P92, DOI 10.1007/978-3-642-37682-5_8
   Jiang S, 2022, COMPUT SECUR, V120, DOI 10.1016/j.cose.2022.102804
   Jiang ZB, 2020, T ASSOC COMPUT LING, V8, P423, DOI 10.1162/tacl_a_00324
   Jiang ZY, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1149, DOI 10.1145/3372297.3417240
   Kapravelos Alexandros., 2013, P 22 USENIX C SECURI, P637
   Khoo WM, 2013, IEEE WORK CONF MIN S, P329, DOI 10.1109/MSR.2013.6624046
   Kim D, 2022, Arxiv, DOI arXiv:2011.10749
   Koo Hyungjoon, 2021, Semantic-aware binary code representation with bert
   KULLBACK S, 1951, ANN MATH STAT, V22, P79, DOI 10.1214/aoms/1177729694
   Li XZX, 2021, CCS '21: PROCEEDINGS OF THE 2021 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P3236, DOI 10.1145/3460120.3484587
   Li YJ, 2019, PR MACH LEARN RES, V97
   Liu FC, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1777, DOI 10.1145/3319535.3363224
   Luo LN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P389, DOI 10.1145/2635868.2635900
   Lutz O, 2021, Arxiv, DOI [arXiv:2103.12607, DOI 10.48550/ARXIV.2103.12607]
   Maier A, 2019, LECT NOTES COMPUT SC, V11543, P288, DOI 10.1007/978-3-030-22038-9_14
   Marcelli A, 2022, PROCEEDINGS OF THE 31ST USENIX SECURITY SYMPOSIUM, P2099
   Massarelli L, 2019, LECT NOTES COMPUT SC, V11543, P309, DOI 10.1007/978-3-030-22038-9_15
   McKee D, 2020, Arxiv, DOI arXiv:1906.02928
   Mehrotra N, 2020, Arxiv, DOI arXiv:2011.11228
   Melicher W, 2021, PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE 2021 (WWW 2021), P2684, DOI 10.1145/3442381.3450062
   Ming J, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P253
   Ming J, 2015, IFIP ADV INF COMM TE, V455, P416, DOI 10.1007/978-3-319-18467-8_28
   Mu DL, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P924, DOI 10.1109/ASE.2019.00090
   Nye Maxwell, 2021, arXiv
   Ott M, 2019, NAACL HLT 2019: THE 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES: PROCEEDINGS OF THE DEMONSTRATIONS SESSION, P48
   OWASP, 2010, TOP 10 WEB APPL SEC
   Parihar S, 2017, ITICSE'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P92, DOI 10.1145/3059009.3059026
   Paszke A, 2019, ADV NEUR IN, V32
   Patrick-Evans J, 2020, ANN COMPUT SECURITY, P373, DOI 10.1145/3427228.3427265
   Payer M, 2014, Arxiv, DOI arXiv:1409.7760
   Pei KX, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P690, DOI 10.1145/3468264.3468607
   Pei KX, 2021, 28TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2021), DOI 10.14722/ndss.2021.23112
   Peng F, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P829
   Perdisci R, 2008, ANN COMPUT SECURITY, P301, DOI 10.1109/ACSAC.2008.22
   Pewny J., 2014, P 30 ANN COMP SEC AP, P406, DOI [10.1145/2664243.2664269, DOI 10.1145/2664243.2664269]
   Pewny J, 2015, P IEEE S SECUR PRIV, P709, DOI 10.1109/SP.2015.49
   Quynh N.A., 2015, Unicorn: Next generation cpu emulator framework
   Reddy S, 2020, PROC INT CONF SOFTW, P1410, DOI 10.1145/3377811.3380399
   Redmond K, 2018, Arxiv, DOI arXiv:1812.09652
   Rieck K, 2011, J COMPUT SECUR, V19, P639, DOI 10.3233/JCS-2010-0410
   Shrestha S.L., 2021, Slgpt: Using transfer learning to directly generate simulink model files and find bugs in the simulink toolchain
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang HT, 2021, IEEE T INF FOREN SEC, V16, P1943, DOI 10.1109/TIFS.2020.3044773
   Wang K., 2017, PROC INT C LEARN REP
   Wang K, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P121, DOI 10.1145/3385412.3385999
   Wang SQ, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1599
   Wang S, 2017, PROC IEEE INT CONF S, P388, DOI 10.1109/ICSME.2017.59
   Wartschinski L, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106809
   Wen M, 2020, IEEE T SOFTWARE ENG, V46, P1155, DOI 10.1109/TSE.2018.2876256
   Wong E, 2018, PR MACH LEARN RES, V80
   Xu XJ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P363, DOI 10.1145/3133956.3134018
   Yang J, 2021, IEEE T SOFTWARE ENG, V48, P2224, DOI 10.1109/TSE.2021.3056139
   Yang LM, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P2327
   Yu Zeping, 2020, Advances in Neural Information Processing Systems, V33, P3872
   Zhang N., 2017, Hikari-an improvement over Obfuscator
   Zhao L, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P149, DOI 10.1145/3372297.3423342
   Zuo F, 2018, Arxiv, DOI arXiv:1808.04706
   Zynamics, 2019, BINDIFF
NR 100
TC 7
Z9 8
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2776
EP 2790
DI 10.1109/TSE.2022.3231621
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600077
DA 2024-07-18
ER

PT J
AU Wang, X
   Xiao, L
   Yu, TT
   Woepse, A
   Wong, SY
AF Wang, Xiao
   Xiao, Lu
   Yu, Tingting
   Woepse, Anne
   Wong, Sunny
TI From Inheritance to Mockito: An Automatic Refactoring Approach
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Behavioral sciences; Codes; Production; Databases; Software
   systems; Java; Software refactoring; software testing; mocking
ID SOFTWARE; IDENTIFICATION; OPPORTUNITIES; SUPPORT; METRICS; SMELLS
AB Unit testing focuses on verifying the functions of individual units of a software system. It is challenging due to the high inter dependencies among software units. Developers address this by mocking-replacing the dependency by a "fake" object. Despite the existence of powerful, dedicated mocking frameworks, developers often turn to a "hand-rolled" approach-inheritance. That is, they create a subclass of the dependent class and mock its behavior through method overriding. However, this requires tedious implementation and compromises the design quality of unit tests. This work contributes a fully automated refactoring framework to identify and replace the usage of inheritance by using Mockito-a well received mocking framework. Our approach is built upon the empirical experience from five open source projects that use inheritance for mocking. We evaluate our approach on nine other projects. Results show that our framework is efficient, generally applicable to new datasets, mostly preserves test case behaviors in detecting defects (in the form of mutants), and decouples test code from production code. The qualitative evaluation by experienced developers suggests that the auto-refactoring solutions generated by our framework improve the quality of the unit test cases in various aspects, such as making test conditions more explicit, as well as improved cohesion, readability, understandability, and maintainability with test cases. Finally, we submit 23 pull requests containing our refactoring solutions to the open source projects. It turns our that, 9 requests are accepted/merged, 6 requests are rejected, the remaining requests are pending (5 requests), with unexpected exceptions (2 requests), or undecided (1 request). In particular, among the 21 open source developers that are involved in the reviewing process, 81% give positive votes. This indicates that our refactoring solutions are quite well received by the open source projects and developers.
C1 [Wang, Xiao; Xiao, Lu] Stevens Inst Technol, Sch Syst & Enterprises, Hoboken, NJ 07030 USA.
   [Yu, Tingting] Univ Cincinnati, Dept Elect Engn & Comp Sci, Cincinnati, OH 45221 USA.
   [Woepse, Anne] Ansys Govt Initiat, Exton, PA 19341 USA.
   [Wong, Sunny] Analyt Grap Inc, Exton, PA 19341 USA.
C3 Stevens Institute of Technology; University System of Ohio; University
   of Cincinnati
RP Xiao, L (corresponding author), Stevens Inst Technol, Sch Syst & Enterprises, Hoboken, NJ 07030 USA.
EM xwang97@stevens.edu; lxiao6@stevens.edu; tingting.yu@uc.edu;
   anne.woepse@ansys.com; sunny@computer.org
RI xiao, lu/KRO-9302-2024
FU U.S. National Science Foundation (NSF) [CCF-1909085, CCF-1909763]
FX This work was supported by the U.S. National Science Foundation (NSF)
   under Grants CCF-1909085 and CCF-1909763
CR Abebe Mesfin., 2014, INT J SOFTWARE ENG I, V8, P299, DOI [10.14257/ijseia.2014.8.6.24, DOI 10.14257/IJSEIA.2014.8.6.24]
   [Anonymous], 2010, ASE 10 P IEEE ACM IN, DOI DOI 10.1145/1858996.1859024
   [Anonymous], ?About us"
   Balazinska M, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P98, DOI 10.1109/WCRE.2000.891457
   Baqais AAB, 2020, SOFTWARE QUAL J, V28, P459, DOI 10.1007/s11219-019-09477-y
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Bavota G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559935
   Bavota G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P56, DOI 10.1109/ICSM.2012.6405253
   Bavota Gabriele., 2010, Proceedings of the IEEE International Conference on Software Maintenance ICSM, P1
   Beck Kent L., 2003, Test Driven Development By Example
   Beller M, 2019, IEEE T SOFTWARE ENG, V45, P261, DOI 10.1109/TSE.2017.2776152
   Beller M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P179, DOI 10.1145/2786805.2786843
   Berner S, 2005, PROC INT CONF SOFTW, P571
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   Chatzigeorgiou A, 2004, PROC INT CONF SOFTW, P656, DOI 10.1109/ICSE.2004.1317487
   COLEMAN D, 1994, COMPUTER, V27, P44, DOI 10.1109/2.303623
   Daka E, 2014, PROC INT SYMP SOFTW, P201, DOI 10.1109/ISSRE.2014.11
   Elish KO, 2009, ASIA PAC SOFWR ENG, P29, DOI 10.1109/APSEC.2009.14
   Fokaefs M, 2012, J SYST SOFTWARE, V85, P2241, DOI 10.1016/j.jss.2012.04.013
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Freeman S., 2004, Companion to the 19th annual ACM SIGPLAN Conference on Object-oriented Programming Systems, Languages, and Applications, OOPSLA '04, P236
   Ganea G, 2017, SCI COMPUT PROGRAM, V134, P19, DOI 10.1016/j.scico.2015.02.007
   Garousi V, 2019, IEEE SOFTWARE, V36, P61, DOI 10.1109/MS.2018.2875843
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Greiler M, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P322, DOI 10.1109/ICST.2013.45
   Grigg J., 2012, ABOUT US
   GUIMARAES T, 1983, COMMUN ACM, V26, P739, DOI 10.1145/358413.358421
   Hotta K, 2012, EUR CON SFTWR MTNCE, P53, DOI 10.1109/CSMR.2012.16
   Izurieta Clemente, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P449
   J. Code Geeks, MOCK PROGR COOKB
   Kataoka Y, 2001, PROC IEEE INT CONF S, P736, DOI 10.1109/ICSM.2001.972794
   Kemerer CF, 1999, IEEE T SOFTWARE ENG, V25, P493, DOI 10.1109/32.799945
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1
   Koochakzadeh Negar, 2010, Advances in Software Engineering, DOI 10.1155/2010/932686
   Marri MR, 2009, 2009 ICSE WORKSHOP ON AUTOMATION OF SOFTWARE TEST, P149, DOI 10.1109/IWAST.2009.5069054
   Mayer P, 2014, LECT NOTES COMPUT SC, V8586, P437
   Mazinanian D, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P613, DOI 10.1145/2889160.2889168
   Mens T, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13, DOI 10.1109/IWPSE.2005.7
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Mkaouer M. W., 2014, P 29 ACM IEEE INT C, P331, DOI [DOI 10.1145/2642937.2642965, 10.1145/2642937.2642965. u r l, DOI 10.1145/2642937.2642965.URL]
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Mostafa S, 2014, INT CONF QUAL SOFTW, P127, DOI 10.1109/QSIC.2014.19
   Nandigam J, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P713, DOI 10.1109/ITNG.2009.268
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Palomba F, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P5, DOI [10.1145/2897010.2897016, 10.1109/SBST.2016.010]
   Pereira G, 2020, PROC IEEE INT CONF S, P453, DOI 10.1109/ICSME46990.2020.00050
   Reichhart S, 2007, J OBJECT TECHNOL, V6, P231, DOI 10.5381/jot.2007.6.9.a12
   Runeson P, 2006, IEEE SOFTWARE, V23, P22, DOI 10.1109/MS.2006.91
   Santana Railana, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P374, DOI 10.1145/3422392.3422510
   Schulze S., 2009, Proceedings des Workshops der GI-Fachgruppe Software Reengineering (SRE), erschienen in den GI Softwaretechnik-Trends, V29, P10
   Spadini D, 2019, EMPIR SOFTW ENG, V24, P1461, DOI 10.1007/s10664-018-9663-0
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   Spadini D, 2017, IEEE WORK CONF MIN S, P402, DOI 10.1109/MSR.2017.61
   Szoke G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P693, DOI 10.1109/SANER.2016.17
   Tairas R., 2009, Companion to the 24th Annual ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications, OOPSLA 2009, October 25-29, 2009, Orlando, Florida, P817, DOI [10.1145 /1639950.1640030, DOI 10.1145/1639950.1640030]
   Tairas R, 2012, INFORM SOFTWARE TECH, V54, P1297, DOI 10.1016/j.infsof.2012.06.011
   Tsantalis N, 2010, J SYST SOFTWARE, V83, P391, DOI 10.1016/j.jss.2009.09.017
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Van Rompaey B, 2007, IEEE T SOFTWARE ENG, V33, P800, DOI 10.1109/TSE.2007.70745
   Vonken F., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P29, DOI 10.1109/WCRE.2012.13
   Wake WC., 2004, Refactoring Workbook
   Wang X, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P540, DOI 10.1145/3468264.3468590
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
   Zanetti M.S., 2014, P 13 INT C MOD MODUL, P73
   Zhao L, 2011, INNOV SYST SOFTW ENG, V7, P171, DOI 10.1007/s11334-011-0154-3
   US
NR 67
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2791
EP 2814
DI 10.1109/TSE.2022.3231850
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600078
DA 2024-07-18
ER

PT J
AU Zozas, I
   Bibi, S
   Ampatzoglou, A
AF Zozas, Ioannis
   Bibi, Stamatia
   Ampatzoglou, Apostolos
TI Forecasting the Principal of Code Technical Debt in JavaScript
   Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Predictive models; Measurement; Forecasting; Codes; Java; Source coding;
   Programming; Code technical debt; JavaScript; software quality; source
   code quality
ID MAINTENANCE EFFORT; METRICS
AB JavaScript (JS) is one of the most popular programming languages for developing client-side applications mainly due to allowing the adoption of different programming styles, not having strict syntax rules, and supporting a plethora of frameworks. The flexibility that the language provides may accelerate the development of application, but also pose threats to the quality of the final software product, e.g., introducing Technical Debt (TD). TD reflects the additional cost of software maintenance activities to implement new features, occurring due to poorly developed solutions. Being able to forecast the levels of TD in the future can be extremely valuable in managing TD, since it can contribute to informed decision making when designating future repayments and refactoring budget among a company's projects. Despite the popularity of JS and the undoubtful benefits of accurate TD forecasting, in the literature, there is available only a limited number of tools and methodologies that are able to: (a) forecast TD during software evolution, (b) provide a ground-truth TD quantifications to train forecasting, since TD tools that are available are based on different rulesets and none is recognized as a state-of-the-art solution, (c) take into consideration the language-specific characteristics of JS. As a main contribution for this study, we propose a methodology (along with a supporting tool) that supports the aforementioned goals based on the Backward Stepwise Regression and Auto-Regressive Integrated Moving Average (ARIMA). We evaluate the proposed approach through a case study on 19,636 releases of 105 open-source applications. The results point out that: (a) the proposed model can lead to an accurate prediction of TD, and (b) the Number of appearances of the "new" and "eval" keyword along with the number of "anonymous" and "arrow" functions are among the features of JavaScript language that are related to high levels of TD.
C1 [Zozas, Ioannis; Bibi, Stamatia] Univ Western Macedonia, Dept Elect & Comp Enigneering, Kozani 50100, Greece.
   [Ampatzoglou, Apostolos] Univ Macedonia, Dept Appl Informat, Thessaloniki 54636, Greece.
C3 University of Western Macedonia; University of Macedonia
RP Ampatzoglou, A (corresponding author), Univ Macedonia, Dept Appl Informat, Thessaloniki 54636, Greece.
EM izozas@uowm.gr; sbibi@uowm.gr; a.ampatzoglou@uom.edu.gr
OI Zozas, Ioannis/0000-0003-2159-1332; Bibi, Stamatia/0000-0003-4248-3752
FU European Union's H2020 Research and Innovation Programme [871177
   SmartCLIDE]
FX This work was supported by European Union's H2020 Research and
   Innovation Programme, under Grant 871177 SmartCLIDE.
CR Alégroth E, 2016, IEEE ICST WORKSHOP, P257, DOI 10.1109/ICSTW.2016.47
   Amanatidis T, 2020, EMPIR SOFTW ENG, V25, P4161, DOI 10.1007/s10664-020-09869-w
   Amanatidis T, 2017, INFORM SOFTWARE TECH, V90, P70, DOI 10.1016/j.infsof.2017.05.004
   Amin A, 2013, J SYST SOFTWARE, V86, P1923, DOI 10.1016/j.jss.2013.03.045
   Ampatzoglou A, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106391
   Avgeriou P, 2021, IEEE SOFTWARE, V38, P61, DOI 10.1109/MS.2020.3024958
   Baldassari B., 2012, P INT C SOFTW SYST E, P1
   Borboudakis G, 2019, J MACH LEARN RES, V20
   Box G. E. P., 1970, Time series analysis, forecasting and control
   Chatzimparmpas A, 2019, PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING (ENASE), P359, DOI 10.5220/0007727603590366
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Curtis B, 2012, IEEE SOFTWARE, V29, P34, DOI 10.1109/MS.2012.156
   Draper NR., 1981, APPL REGRESSION ANAL
   Fahrmeir L., 2013, Regression: Models, Methods and Applications
   Fioravanti F, 2001, IEEE T SOFTWARE ENG, V27, P1062, DOI 10.1109/32.988708
   Gallaba Keheliya, 2015, 2015 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM). Proceedings, P1, DOI 10.1109/ESEM.2015.7321196
   Gaudin O., 2009, SONAR JUN 11
   Gizas A., 2012, P 21 INT C WORLD WID, P513
   Goulao M, 2012, EUR CON SFTWR MTNCE, P213, DOI 10.1109/CSMR.2012.30
   Hafiz M, 2016, J SYST SOFTWARE, V121, P191, DOI 10.1016/j.jss.2016.04.045
   Salamea MJ, 2019, 2019 COMPANION OF THE 19TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS-C 2019), P120, DOI 10.1109/QRS-C.2019.00035
   Kazman R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P179, DOI 10.1109/ICSE.2015.146
   Kosti MV, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P329, DOI 10.1109/SEAA.2017.59
   Kumar S, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2019), P121, DOI 10.1109/ICWS.2019.00030
   Letouzey J-L, 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P31, DOI 10.1109/MTD.2012.6225997
   Li W., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P52, DOI 10.1109/METRIC.1993.263801
   Lin Y, 2017, INTELLIGENT COMPUTIN
   LJUNG GM, 1978, BIOMETRIKA, V65, P297, DOI 10.2307/2335207
   Mathioudaki M, 2021, LECT NOTES COMPUT SC, V12955, P306, DOI 10.1007/978-3-030-87007-2_22
   Mirghasemi Salman., 2011, Proceedings of the ACM International Conference Companion on Object Oriented Programming Systems Languages and Applications Companion, SPLASH'11, P277, DOI DOI 10.1145/2048147.2048222
   Misra S, 2012, INT ARAB J INF TECHN, V9, P535
   Raja U, 2009, J SOFTW MAINT EVOL-R, V21, P49, DOI 10.1002/smr.398
   Richards G., 2011, ECOOP 2011 OBJECT OR
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   SCHWARZ G, 1978, ANN STAT, V6, P461, DOI 10.1214/aos/1176344136
   Singh Y, 2009, INT J COMPUT APPL T, V35, P183, DOI 10.1504/IJCAT.2009.026595
   STONE M, 1974, J R STAT SOC B, V36, P111, DOI 10.1111/j.2517-6161.1974.tb00994.x
   Tsoukalas D., 2019, 15 CHIN EUR INT S SO
   Tsoukalas D, 2022, IEEE T SOFTWARE ENG, V48, P4892, DOI 10.1109/TSE.2021.3129355
   Tsoukalas D, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110777
   Tsoukalas D, 2018, 2018 9TH INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS (IS), P698, DOI 10.1109/IS.2018.8710521
   Wang MC, 2013, BUILDING SIMULATION 2013: 13TH INTERNATIONAL CONFERENCE OF THE INTERNATIONAL BUILDING PERFORMANCE SIMULATION ASSOCIATION, P2551
   Wang Y, 2016, SECUR COMMUN NETW, V9, P1520, DOI 10.1002/sec.1441
   Wei X., 2013, THESIS DURHAM U DURH
   Zozas I, 2019, EUROMICRO CONF PROC, P212, DOI 10.1109/SEAA.2019.00042
NR 46
TC 1
Z9 1
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2498
EP 2512
DI 10.1109/TSE.2022.3222318
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600062
DA 2024-07-18
ER

PT J
AU Sjoberg, DIK
   Bergersen, GR
AF Sjoberg, Dag I. K.
   Bergersen, Gunnar Rye
TI Construct Validity in Software Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; Systematics; Software measurement; Guidelines;
   Complexity theory; Object oriented modeling; Marine vehicles;
   Measurement; research quality; empirical research; systematic review;
   guidelines
ID DESIGN PATTERNS; VALIDATION
AB Empirical research aims to establish generalizable claims from data. Such claims may involve concepts that must be measured indirectly by using indicators. Construct validity is concerned with whether one can justifiably make claims at the conceptual level that are supported by results at the operational level. We report a quantitative analysis of the awareness of construct validity in the software engineering literature between 2000 and 2019 and a qualitative review of 83 articles about human-centric experiments published in five high-quality journals between 2015 and 2019. Over the two decades, the appearance in the literature of the term construct validity increased sevenfold. Some of the reviewed articles we reviewed employed various ways to ensure that the indicators span the concept in an unbiased manner. We also found articles that reuse formerly validated constructs. However, the articles disagree about how to define construct validity. Several interpret construct validity excessively by including threats to internal, external, or statistical conclusion validity. A few articles also include fundamental challenges of a study, such as cheating and misunderstanding of experiment material. The diversity of topics included as threats to construct validity calls for a more minimalist approach. Based on the review, we propose seven guidelines to improve how construct validity is handled and reported in software engineering.
C1 [Sjoberg, Dag I. K.; Bergersen, Gunnar Rye] Univ Oslo, Dept Informat, N-0315 Oslo, Norway.
C3 University of Oslo
RP Sjoberg, DIK (corresponding author), Univ Oslo, Dept Informat, N-0315 Oslo, Norway.
EM dagsj@ifi.uio.no; gunnab@ifi.uio.no
OI Bergersen, Gunnar Rye/0000-0002-8135-9052
CR Agarwal N. K., 2011, PROC AM SOC INF SCI, V48, P1, DOI DOI 10.1002/MEET.2011.14504801166
   Anda BCD, 2009, IEEE T SOFTWARE ENG, V35, P407, DOI 10.1109/TSE.2008.89
   [Anonymous], 1976, Experimenter effects in behavioral research
   [Anonymous], 1972, Research on Human Behavior: A Systematic Guide to Method
   [Anonymous], 1974, STRUCTURE SCI THEORI
   [Anonymous], 2005, PROC IEEE INT S EMPI
   [Anonymous], 1969, ARTIFACT BEHAV RES
   Aranda Jorge., 2007, P INT WORKSHOP MODEL, P7
   BARON RM, 1986, J PERS SOC PSYCHOL, V51, P1173, DOI 10.1037/0022-3514.51.6.1173
   Bergersen G. R., 2015, THESIS U OSLO OSLO
   Bergersen GR, 2014, IEEE T SOFTWARE ENG, V40, P1163, DOI 10.1109/TSE.2014.2348997
   Bergersen GR, 2011, INT SYMP EMP SOFTWAR, P305, DOI 10.1109/ESEM.2011.39
   Bergersen GR, 2011, J INDIVID DIFFER, V32, P201, DOI 10.1027/1614-0001/a000052
   Borsboom D, 2004, PSYCHOL REV, V111, P1061, DOI 10.1037/0033-295x.111.4.1061
   Briand L.C., 1995, Theoretical and Empirical Validation of Software Product Measures, P1
   Bryman A., 2002, QUANTITATIVE DATA AN
   Buckingham BR, 1921, J EDUC PSYCHOL, V12, P271, DOI 10.1037/h0066019
   CAMPBELL DT, 1959, PSYCHOL BULL, V56, P81, DOI 10.1037/h0046016
   Cattell RB, 1946, B J PSYCHOL-GEN SECT, V36, P159, DOI 10.1111/j.2044-8295.1946.tb01117.x
   CHERRYHOLMES CH, 1988, AM J EDUC, V96, P421, DOI 10.1086/443901
   Cohen B. P., 1989, DEV SOCIOLOGICAL KNO, V1123
   Coltman T, 2008, J BUS RES, V61, P1250, DOI 10.1016/j.jbusres.2008.01.013
   Cook T. D., 1979, Reproduced in part in research in organizations: Issues and controversies
   Courtis S.A., 1921, Journal of Educational Research, V4, P78
   Cronbach L.J., 1984, ESSENTIALS PSYCHOL T
   CRONBACH LJ, 1955, PSYCHOL BULL, V52, P281, DOI 10.1037/h0040957
   CURTIS B, 1980, P IEEE, V68, P1144, DOI 10.1109/PROC.1980.11813
   DAHL OJ, 1966, COMMUN ACM, V9, P671, DOI 10.1145/365813.365819
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Deissenboeck F, 2006, SOFTWARE QUAL J, V14, P261, DOI 10.1007/s11219-006-9219-1
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Einstein A., 1949, The Library of Living Philosophers, P665
   Ericsson KA, 2006, CAMBRIDGE HANDBOOK OF EXPERTISE AND EXPERT PERFORMANCE, P683
   Feldt R, 2018, EMPIR SOFTW ENG, V23, P3801, DOI 10.1007/s10664-018-9655-0
   FENTON N, 1994, IEEE T SOFTWARE ENG, V20, P199, DOI 10.1109/32.268921
   Fitts P. M., 1967, Human performance
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   Grisaffe D.B., 2007, Journal of Consumer Satisfaction, Dissatisfaction and Complaining Behavior, V20, P36
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hobson Archie., 2004, The Oxford Dictionary of Difficult Words
   Jordan P.W., 1996, Usability Evaluation in Industry, DOI DOI 10.1201/9781498710411
   JORESKOG KG, 1969, PSYCHOMETRIKA, V34, P183, DOI 10.1007/BF02289343
   Kalyuga Slava., 2009, MANAGING COGNITIVE L, P58, DOI [10.4018/978-1-60566-048-6.ch003, DOI 10.4018/978-1-60566-048-6.CH003]
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kaner Cem., 2004, METRICS 2004
   Kelley T.L., 1927, Interpretation of educational measurements, P62
   Kirk J. L., 1986, Reliability and validity in qualitative research
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   Kitchenham B.A., 2015, EVIDENCE BASED SOFTW, V4
   Kitchenham B, 2013, IEEE T SOFTWARE ENG, V39, P1002, DOI 10.1109/TSE.2012.76
   Krantz D. H., 1971, Foundations of Measurement, V1
   LIENTZ BP, 1978, COMMUN ACM, V21, P466, DOI 10.1145/359511.359522
   Mark M. M., 2000, REALISM VALIDITY EXP, V1, P141
   Maruyama G., 2014, RES METHODS SOCIAL R, V8th
   Maxwell J.A., 2004, Field Methods, V16, P243, DOI [DOI 10.1177/1525822X04266831, 10.1177/1525822X04266831]
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Messick S., 1989, Educational measurement, V3rd, P13, DOI [10.1002/j.2330-8516.1987.tb00244.x, DOI 10.7203/RELIEVE.22.1.8248]
   Miller N., 2000, DISCRIMINATIVE VALID, V1, P65
   Neto AmadeuAnderlin., 2013, P 17 INT C EVALUATIO, p82. isbn, DOI [10.1145/2460999.2461011, DOI 10.1145/2460999.2461011]
   Nunnally JC, 1978, PSYCHOMETRIC THEORY, V2nd
   Oman P., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P337, DOI 10.1109/ICSM.1992.242525
   Panayides P, 2013, EUR J PSYCHOL, V9, P687, DOI 10.5964/ejop.v9i4.653
   Patton Q. M., 1987, How to use qualitative methods in evaluation (No. 4)
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P1134, DOI 10.1109/32.988711
   Ralph Paul, 2018, P 22 INT C EV ASS SO, P13
   Roberts Fred S., 1985, Measurement Theory
   Rogers T., 1995, The psychological testing enterprise
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   Siegmund J, 2014, EMPIR SOFTW ENG, V19, P1299, DOI 10.1007/s10664-013-9286-4
   Sjoberg DIK, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P29
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Sjoberg DIK, 2012, INT SYMP EMP SOFTWAR, P107, DOI 10.1145/2372251.2372269
   Sjoberg DIK, 2012, IEEE SOFTWARE, V29, P47, DOI 10.1109/MS.2012.110
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Strube M. J., 2016, AM BIOL TEACH, V4th, P612
   Trochim W.M., 2001, Research Methods Knowledge Base, V2
   Trochim W. M., 2006, RES METHODS KNOWLEDG
   Vokác M, 2004, EMPIR SOFTW ENG, V9, P149, DOI 10.1023/B:EMSE.0000027778.69251.1f
   Wijayarathna C, 2019, INFORM SOFTWARE TECH, V115, P5, DOI 10.1016/j.infsof.2019.07.007
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yin R. K., 2018, Case Study Research and Applications: Design and Methods, DOI DOI 10.1016/J.TECHFORE.2018.10.013
   Yin R.K., 2003, CASE STUDY RES DESIG
NR 87
TC 14
Z9 14
U1 2
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2023
VL 49
IS 3
BP 1374
EP 1396
DI 10.1109/TSE.2022.3176725
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA A1QF2
UT WOS:000952938700021
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Amaro, R
   Pereira, R
   da Silva, MM
AF Amaro, Ricardo
   Pereira, Ruben
   da Silva, Miguel Mira
TI Capabilities and Practices in DevOps: A Multivocal Literature Review
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Bibliographies; Collaboration; Industries; Automation;
   Terminology; Systematics; DevOps capabilities; DevOps practices;
   software engineering process; software release management and delivery;
   software development; multivocal literature review
ID SOFTWARE; MICROSERVICES; DEFINITION; DELIVERY
AB Context. To meet the demands of customers and market, Information Technology (IT) organizations are seeking to implement DevOps. While many succeed in DevOps adoption, others lack the knowledge on how to incorporate DevOps culture, process, measurements, and techniques in their business. Thus, successful adoption is still inconsistent, highlighting the need to provide management with relevant information to support the development of DevOps Capabilities effectively. But what are these Capabilities? Unfortunately, there is still a lack of clarity about DevOps Capabilities and their relationships to DevOps Practices and Outcomes among researchers and practitioners. Objective. This research aims to gather community consensus on the relationship between Capabilities and Practices, so a better DevOps implementation can be mapped. Seeking to define DevOps Capabilities and Practices concepts and to identify, organize and summarize Capabilities as they relate to Practices. Method. A Multivocal Literature Review (MLR) is conducted, with 93 documents gathered and thoroughly examined from throughout the community, including books, scientific articles, white papers, and conferences, among others. Results. This survey contributes a list of 37 organized Capabilities, their mentions in literature, and their definitions. The concepts of Practices and Capabilities were mapped and categorized in an ordered taxonomy. It is concluded that industry research has much outweighed scientific research on this topic, with Capabilities evolving dynamically over time, reinforcing team collaboration and communication as the most crucial one. The study's Outcomes will assist researchers and practitioners understand how Capabilities and Practices are related at different levels and how to better implement them.
C1 [Amaro, Ricardo; Pereira, Ruben] Inst Univ Lisboa ISCTE IUL, P-1649026 Lisbon, Portugal.
   [da Silva, Miguel Mira] Univ Lisbon, Inst Super Tecn, P-1049001 Lisbon, Portugal.
C3 Instituto Universitario de Lisboa; Universidade de Lisboa
RP Amaro, R (corresponding author), Inst Univ Lisboa ISCTE IUL, P-1649026 Lisbon, Portugal.
EM ricardo_amaro@iscte-iul.pt; ruben.filipe.pereira@iscte-iul.pt;
   mms@tecnico.ulisboa.pt
RI Mira da Silva, Miguel/A-2892-2009; Pereira, Ruben/T-7648-2017
OI Mira da Silva, Miguel/0000-0002-0489-4465; Pereira,
   Ruben/0000-0002-3001-5911; Amaro, Ricardo/0000-0003-2649-8102
CR Adzic Gojko., 2012, Impact Mapping: Making a Big Impact with Software Products and ProjectsPaperback
   Allspaw John, 2009, VEL WEB PERF OP C
   [Anonymous], 2021, PRACTICE DEFINITION
   [Anonymous], 2012, 828TM2012 IEEE
   [Anonymous], 2015, PROC 1 INT WORKSHOP
   ANSI/IEEE, 1987, I ELECT ELECT ENG, DOI [10.1109/IEEESTD.1988.94582, DOI 10.1109/IEEESTD.1988.94582]
   AWS, 2021, WHAT IS DEVOPS AM WE
   B. I. Staff, 2020, 10 DEVOPS BEST PRACT
   Badshah Sher, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P427, DOI 10.1145/3383219.3383280
   Balalaie A, 2016, COMM COM INF SC, V567, P201, DOI 10.1007/978-3-319-33313-7_15
   Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Biggs Tyler., 1995, TECHNOLOGICAL CAPABI
   Bititci US, 2015, INT J PROD RES, V53, P3062, DOI 10.1080/00207543.2014.970709
   Blank-Edelman D.N., 2018, Seeking SRE: Conversations About Running Production Systems at Scale
   BMC, 2020, STAT DEVOPS 2020 REP
   Bou Ghantous G., 2017, PACIS2017
   BoxBoat, 2018, WHAT IS DEVOPS EXPL
   Budgen D., 2006, 28th International Conference on Software Engineering Proceedings, P1051, DOI 10.1145/1134285.1134500
   C. A. Technologies, 2017, CAN DEVOPS PRACT HEL
   Cambridge, 2021, PRACTICE MEAN CAMBR
   Cambridge, 2021, CAPABILITY MEAN CAMB
   Ceresani N., 2017, 4 CORE CAPABILITIES
   Chowdhury A. R., 2019, DEVOPS BEST PRACTICE
   CMMI, 2010, Tech. rep., DOI [10.1184/R1/6572342.v1, DOI 10.1184/R1/6572342.V1]
   Cook C., 2020, DEVOPS ENTERPRISE SU
   Croker M., 2015, DEVOPS INNOVATIVE EN
   Crouch A., 2017, 6 STEPS SUCCESSFUL D
   Crowley C, 2018, ICOPEV INT C PROJ EC, P29
   Cukier D., 2013, Proceedings of the 2013 Companion Publication for Conference on Systems, Programming, Applications: Software for Humanity, P143, DOI DOI 10.1145/2508075.2508432
   D. N, 2019, QUICK LIST DEVOPS BE
   de Feijter R, 2018, LECT NOTES BUS INF P, V318, P244, DOI 10.1007/978-3-319-91704-7_16
   de Feijter Rico., 2017, Towards the adoption of devops in software product organizations: A maturity model approach
   DeBoer E., 2019, ACCELERATE PRINCIPLE
   Debois P, 2008, AGILE 2008, PROCEEDINGS, P202, DOI 10.1109/Agile.2008.42
   Department of Energy Quality Managers: Software Quality Assurance Subcommittee, 2000, SQAS2001002000 US DE
   Devopedia, 2019, DEVOPS METR
   Díaz J, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09919-3
   DORA, 2020, DORA RES PROGR
   Düllmann TF, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P27, DOI 10.1145/3194760.3194763
   Dyck A, 2015, 2015 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON RELEASE ENGINEERING, P3, DOI 10.1109/RELENG.2015.10
   Ebert C, 2016, IEEE SOFTWARE, V33, P94, DOI 10.1109/MS.2016.68
   Eby K., 2017, TOOLS TECHNOLOGY DEV
   Erich FMA, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1885
   Faustino J., 2018, THESIS
   Fedak Vladimir, 2020, DevOps Metrics: What to Track, How and Why Do It
   Forsgren N., 2015, SSRN ELECT J, P1
   Forsgren N, 2017, LECT NOTES COMPUT SC, V10243, P436, DOI 10.1007/978-3-319-59144-5_27
   Forsgren Nicole., 2018, ACCELERATE SCI LEAN, V1st
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Garousi V, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916008
   Google, 2020, DEVOPS CAP DORA GOOG
   Groll J., 2016, WHAT IS DEVOPS BEST
   Gupta V, 2017, INFORM SOFTWARE TECH, V92, P75, DOI 10.1016/j.infsof.2017.07.010
   H. T. C. G. Services, 2020, 24 DEVOPS CAP DEVOPS
   Hall T., 2020, DEVOPS BEST PRACTICE
   Horvath K., 2015, DEVOPS 2
   Humble Jez, 2011, Cutter IT Journal, V24, P6
   Humble J., 2014, LEAN ENTERPRISE ADOP
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   I. T. Revolution, 2020, 24 KEY CAP DRIV IMPR
   Ibrahim MMA, 2019, 2019 8TH INTERNATIONAL CONFERENCE ON SOFTWARE AND COMPUTER APPLICATIONS (ICSCA 2019), P194, DOI 10.1145/3316615.3316670
   Imam M. D. Z., 2018, WHAT ARE BEST PRACTI
   Infopulse, 2018, 6 DEVOPS BEST PRACT
   Intellipaat, 2016, WHAT IS DEVOPS INTR
   Jabbari R, 2016, PROCEEDINGS OF THE XP2016 SCIENTIFIC WORKSHOPS, DOI 10.1145/2962695.2962707
   Jachja T., 2020, CI CD PATTERNS PRACT
   Karamitsos I, 2020, INFORMATION, V11, DOI 10.3390/info11070363
   Ketterer H., 2017, LEANER FASTER BETTER
   Kim G., 2014, The phoenix project: A novel about it, devops, and helping your business win
   Kim Gene, 2012, The Three Ways: The Principles Underpinning DevOps
   Kim Gene, 2016, The DevOps Handbook: How to Create WorldClass Agility, Reliability, and Security in Technology Organizations
   Kitchenham B. A., 2012, P 2 INT WORKSH EV AS, P1, DOI [10.1145/2372233.2372235, DOI 10.1145/2372233.2372235]
   Kuusinen K, 2018, EUROMICRO CONF PROC, P60, DOI 10.1109/SEAA.2018.00019
   Laudon Jane P., 2017, Management Information Systems: Managing the Digital Firm
   Leite L, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3359981
   Lichtenberger Alex, 2019, Blog: Agile: Dead End? Taking the next Step by Applying DevOps Practices Effectively-Impact Matters Blog
   Linthicum D., 2016, DEVOPS TOOLS BEST PR
   Lock E., 2020, MEASURE DEVOPS METRI
   Luz WP, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.083
   Lwakatare LE, 2019, INFORM SOFTWARE TECH, V114, P217, DOI 10.1016/j.infsof.2019.06.010
   Lwakatare LE, 2016, P ANN HICSS, P5437, DOI 10.1109/HICSS.2016.671
   Macarthy RW, 2020, EUROMICRO CONF PROC, P221, DOI 10.1109/SEAA51224.2020.00046
   Mäkinen S, 2016, INFORM SOFTWARE TECH, V80, P175, DOI 10.1016/j.infsof.2016.09.001
   Mao RF, 2020, 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS 2020), P450, DOI 10.1109/QRS51102.2020.00064
   Marnewick C, 2021, IEEE SOFTWARE, V38, P48, DOI 10.1109/MS.2020.3023298
   Mell P, 2010, COMMUN ACM, V53, P50
   Merriam-Webster, 2021, CAP DEF CAP MERR WEB
   Mikhalchuk O., 2020, 5 CORE DEVOPS PRINC
   Mikko K., 2018, J MANAGE INFORM SYST, V135, P408
   Mishra A, 2020, COMPUT SCI REV, V38, DOI 10.1016/j.cosrev.2020.100308
   Mitlöhner J, 2016, PROCEEDINGS 2016 2ND INTERNATIONAL CONFERENCE ON OPEN AND BIG DATA - OBD 2016, P72, DOI 10.1109/OBD.2016.18
   Mohamed Samer I., 2016, Int. J. Eng. Res. Sci., V2, P2395
   Motroc Gabriela, 2018, Key DevOps Metrics That Matter: How Well Does Your Team Sleep?
   Mueller E., 2019, WHAT IS DEVOPS AGILE
   Myrbakken H, 2017, COMM COM INF SC, V770, P17, DOI 10.1007/978-3-319-67383-7_2
   N. PR, 2019, IR REV ANN 2 ROUND S
   Netapp, 2019, WHAT IS DEVOPS PRACT
   de França BBN, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P53, DOI 10.1145/2973839.2973845
   Novak A, 2014, 6 CORE CAPABILITIES
   OGAWA RT, 1991, REV EDUC RES, V61, P265, DOI 10.3102/00346543061003265
   Olszewska J. I., 2021, IEEE STANDARD 2675 2, V1, P1, DOI [10.1109/IEEESTD.2021.9415476, DOI 10.1109/IEEESTD.2021.9415476]
   Online D., 2020, PRACT DEVOPS
   Outlaw M., 2020, DEVOPS HDB TECHNICAL
   P. CIO, 2018, BUILD STRONG DEVOPS
   Packard H., 2016, MEASURING DEVOPS SUC
   Pang C, 2016, PROC IEEE INT CONF S, P458, DOI 10.1109/ICSME.2016.45
   Pasten M. E., 2020, ROLE BASED DEVOPS CA
   Patel C., 2020, DEVOPS BEST PRACTICE
   Patil M., 2020, MAXIMIZING DEVOPS RO
   Pavlenko I., 2021, DEVOPS PRINCIPLES PR
   Pereira R, 2020, J INF TECHNOL-UK, V35, P161, DOI 10.1177/0268396219886874
   Pinkelephant, 2018, DEVOPS WHY 15 ESS PR
   Pousseo G., 2019, DEVOPS PRACTICES AGI
   Powell R., 2020, ESSENTIAL DEVOPS PRI
   Prates L, 2019, LECT NOTES BUS INF P, V359, P77, DOI 10.1007/978-3-030-29608-7_7
   Puppet, 2018, 5 FDN DEVOPS PRACT E
   Puppet Labs, 2015, 877 PUPP LABS
   Puppet Labs, 2019, Technical Report
   Puppet Labs, 2018, Technical Report
   Puppet Labs, 2017, Technical Report
   Puppet Labs, 2013, Technical Report
   Puppet Labs, 2020, Technical Report
   Puppet Labs, 2016, 2016 STATE DEVOPS RE
   Puppet Labs, 2014, Technical Report
   PuppetGuideCIOs, 2018, 5 STAG DEVOPS EV GUI
   PuppetSplunk, 2018, 5 FDN DEV PRACT
   Rayome A. D., 2018, 5 FDN DEVOPS PRACTIC
   RDC Partner, 2018, 6 COR CAP DEVOPS PRA
   RedHat, 2018, What is DevSecOps?
   Research D., 2019, STAT DEVOPS 2019 DOR
   Riungu-Kalliosaari L, 2016, LECT NOTES COMPUT SC, V10027, P590, DOI 10.1007/978-3-319-49094-6_44
   Rodríguez P, 2019, ADV COMPUT, V113, P135, DOI 10.1016/bs.adcom.2018.03.014
   Rother M., 2019, Toyota kata: Managing people for improvement, adaptiveness and superior results
   Rudder C., 2019, 10 WAYS DEVOPS HELPS
   S. Team, 2018, UND 6 ESS DEVOPS PRI
   Sacolick Isaac, 2018, 15 KPIs to Track Devops Transformation
   Sánchez-Gordón M, 2018, SIXTH INTERNATIONAL CONFERENCE ON TECHNOLOGICAL ECOSYSTEMS FOR ENHANCING MULTICULTURALITY (TEEM'18), P883, DOI 10.1145/3284179.3284328
   Sato D., 2015, PRACTICES DEVOPS CON
   Scaledagile, 2021, DEVOPS SCAL AG FRAM
   Senapathi M., 2018, PROC 22 INT C EVAL A, P57
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Silva M. A., 2018, PROC 27 INT C INF SY
   Smeds J, 2015, LECT NOTES BUS INF P, V212, P166, DOI 10.1007/978-3-319-18612-2_14
   Smith Sam, 2020, High Performing DevOps Metrics
   Solutions C., 2019, 8 BEST PRACT SUCC IM
   Souza R, 2019, PROCEEDINGS OF THE XXXIII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2019, P317, DOI 10.1145/3350768.3350786
   Stahl Daniel, 2017, 2017 43rd Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P440, DOI 10.1109/SEAA.2017.8114695
   Stamenkovic N., 2018, DEVOPS PRINCIPLES PR
   Steffens A, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P1, DOI 10.1145/3194760.3194768
   Teixeira Daniel, 2020, International Journal of Agile Systems and Management, V13, P464, DOI 10.1504/IJASM.2020.112343
   Teixeira D, 2020, INT J HUM CAP INF TE, V11, P1, DOI 10.4018/IJHCITP.2020070101
   Tessem B., 2008, International Workshop on Cooperative and Human Aspects of Software Engineering (CHASE), P105, DOI DOI 10.1145/1370114.1370141
   Toh MZ, 2019, 2019 8TH INTERNATIONAL CONFERENCE ON SOFTWARE AND COMPUTER APPLICATIONS (ICSCA 2019), P173, DOI 10.1145/3316615.3316619
   Tomas N., 2019, 2019 International Conference on Cyber Security and Protection of Digital Services (Cyber Security), Cyber Security and Protection of Digital Services (Cyber Security), 2019 International Conference On, P1, DOI [DOI 10.1109/CYBERSECPODS.2019.8884935, 10.1109/CyberSecPODS.2019.8884935]
   Tov C. S., 2020, DEVOPS BEST PRACTICE
   Ubiq, 2020, TOP DEVOPS METR KPIS
   Us C., 2020, TOP 7 DEVOPS PRACT S
   Valdes Alfonso, 2020, 5 DevOps Metrics and KPIs That CTOs Must Monitor
   Veritis, 2018, DEVOPS CAP 6 POINT P
   Veritis C., 2020, MEASURING DEVOPS KEY
   Verner JM, 2014, J SYST SOFTWARE, V92, P115, DOI 10.1016/j.jss.2014.01.008
   Vilmate, 2020, 7 DEVOPS BEST PRACT
   Wade J., 2017, DEVOPS BEST PRACTICE
   Wadhera A., 2016, 10 KEY DEVOPS PRACTI
   Wakayama Kentaro, 2020, How to Ensure the Success of DevOps in Your Organization
   Waterhouse P., 2015, DEVOPS PRACT SER MET
   Westrum R, 2004, QUAL SAF HEALTH CARE, V13, P22, DOI 10.1136/qshc.2003.009522
   Wiedemann A, 2019, COMMUN ACM, V62, P44, DOI 10.1145/3331138
   Wikipedia, 2021, DEVOPS WIK
   Willis John, 2012, DEVOPS CULTURE 1
   Wohlin C., 2014, INT C EVALUATION ASS, P1
   Yin LK, 2020, IEEE INT CONF AUTOM, P697, DOI 10.1145/3324884.3416640
   Yusuf S., 2021, EBBS FLOWS DEVOPS DE
   Zhu LM, 2016, IEEE SOFTWARE, V33, P32, DOI 10.1109/MS.2016.81
NR 176
TC 9
Z9 10
U1 3
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 883
EP 901
DI 10.1109/TSE.2022.3166626
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900023
DA 2024-07-18
ER

PT J
AU Liu, Z
   Chen, CY
   Wang, JJ
   Huang, YK
   Hu, J
   Wang, Q
AF Liu, Zhe
   Chen, Chunyang
   Wang, Junjie
   Huang, Yuekai
   Hu, Jun
   Wang, Qing
TI Nighthawk: Fully Automated Localizing UI Display Issues via Visual
   Understanding
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE UI display; mobile app; UI testing; deep learning; object detection
AB Graphical User Interface (GUI) provides a visual bridge between a software application and end users, through which they can interact with each other. With the upgrading of mobile devices and the development of aesthetics, the visual effects of the GUI are more and more attracting, and users pay more attention to the accessibility and usability of applications. However, such GUI complexity posts a great challenge to the GUI implementation. According to our pilot study of crowdtesting bug reports, display issues such as text overlap, component occlusion, missing image always occur during GUI rendering on different devices due to the software or hardware compatibility. They negatively influence the app usability, resulting in poor user experience. To detect these issues, we propose a fully automated approach, Nighthawk, based on deep learning for modelling visual information of the GUI screenshot. Nighthawk can detect GUIs with display issues and also locate the detailed region of the issue in the given GUI for guiding developers to fix the bug. At the same time, training the model needs a large amount of labeled buggy screenshots, which requires considerable manual effort to prepare them. We therefore propose a heuristic-based training data auto-generation method to automatically generate the labeled training data. The evaluation demonstrates that our Nighthawk can achieve average 0.84 precision and 0.84 recall in detecting UI display issues, average 0.59 AP and 0.60 AR in localizing these issues. We also evaluate Nighthawk with popular Android apps on Google Play and F-Droid, and successfully uncover 151 previously-undetected UI display issues with 75 of them being confirmed or fixed so far.
C1 [Liu, Zhe; Huang, Yuekai] Univ Chinese Acad Sci, Chinese Acad Sci, Lab Internet Software Technol, Inst Software, Beijing 101408, Peoples R China.
   [Chen, Chunyang] Monash Univ, Melbourne, Vic 3800, Australia.
   [Wang, Junjie; Wang, Qing] Univ Chinese Acad Sci, Chinese Acad Sci, Inst Software, State Key Lab Comp Sci,Sci &Technol Integrated In, Beijing 101408, Peoples R China.
C3 Chinese Academy of Sciences; University of Chinese Academy of Sciences,
   CAS; Institute of Software, CAS; Monash University; Chinese Academy of
   Sciences; Institute of Software, CAS; University of Chinese Academy of
   Sciences, CAS
RP Wang, JJ; Wang, Q (corresponding author), Univ Chinese Acad Sci, Chinese Acad Sci, Inst Software, State Key Lab Comp Sci,Sci &Technol Integrated In, Beijing 101408, Peoples R China.
EM liuzhe181@mails.ucas.ac.cn; Chunyang.chen@monash.edu;
   junjie@iscas.ac.cn; huangyuekai18@mails.ucas.ac.cn; hujun@iscas.ac.cn;
   wq@iscas.ac.cn
RI LIU, zhe/HGD-6875-2022; wang, qi/ITT-9652-2023; LIU,
   LIYING/KAM-4121-2024; Liu, Jing/IQX-0664-2023; cao, yutong/JJF-4531-2023
OI wang, jun jie/0000-0002-9941-6713; Chen, Chunyang/0000-0003-2011-9618;
   Liu, Zhe/0000-0001-9709-8275
FU National Key Research and Development Program of China [2018YFB1403400];
   National Natural Science Foundation of China [62072442, 62002348]; Youth
   Innovation Promotion Association Chinese Academy of Sciences
FX This work was supported in part by the National Key Research and
   Development Program of China under Grant 2018YFB1403400, in part by the
   National Natural Science Foundation of China under Grants 62072442 and
   62002348, and inpart by Youth Innovation Promotion Association Chinese
   Academy of Sciences.
CR Alameer A, 2019, IEEE INT CONF SOFTW, P172, DOI 10.1109/ICST.2019.00026
   Althomali I, 2019, IEEE INT CONF SOFTW, P183, DOI 10.1109/ICST.2019.00027
   Baek YM, 2016, IEEE INT CONF AUTOM, P238, DOI [10.1145/2970276.2970313, 10.1145/2970276.2970310]
   Bay H, 2008, COMPUT VIS IMAGE UND, V110, P346, DOI 10.1016/j.cviu.2007.09.014
   Behrang F, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P236, DOI 10.1145/3197231.3197244
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Chen CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P665, DOI 10.1145/3180155.3180222
   Chen JS, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1202, DOI 10.1145/3368089.3409691
   Chen JS, 2020, PROC INT CONF SOFTW, P322, DOI 10.1145/3377811.3380327
   Chen JS, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3391613
   Chen QY, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3434280
   Chen S, 2022, IEEE T SOFTWARE ENG, V48, P3954, DOI 10.1109/TSE.2021.3108162
   Chen S, 2021, IEEE T DEPEND SECURE, V18, P2551, DOI 10.1109/TDSC.2019.2956035
   Chen S, 2019, PROC INT CONF SOFTW, P596, DOI 10.1109/ICSE.2019.00070
   Chunyang Chen, 2020, Proceedings of the ACM on Human-Computer Interaction, V4, DOI 10.1145/3415194
   Chunyang Chen, 2019, Proceedings of the ACM on Human-Computer Interaction, V3, DOI 10.1145/3359282
   Coppola R, 2017, P 13 INT C PRED MOD, P22, DOI [10.1145/3127005.3127008, DOI 10.1145/3127005.3127008]
   Degott C, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P296, DOI 10.1145/3293882.3330569
   Deka B, 2017, UIST'17: PROCEEDINGS OF THE 30TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P845, DOI 10.1145/3126594.3126651
   Denaro G, 2019, PROGRAMMING 2019: PROCEEDINGS OF THE CONFERENCE COMPANION OF THE 3RD INTERNATIONAL CONFERENCE ON ART, SCIENCE, AND ENGINEERING OF PROGRAMMING, DOI 10.1145/3328433.3328452
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Feng SD, 2021, IUI '21 - 26TH INTERNATIONAL CONFERENCE ON INTELLIGENT USER INTERFACES, P59, DOI 10.1145/3397481.3450671
   Gao Y, 2017, IEEE INFOCOM SER
   github, 2020, About us
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Gu TX, 2019, PROC INT CONF SOFTW, P269, DOI 10.1109/ICSE.2019.00042
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Holzinger Andreas, 2012, Multidisciplinary Research and Practice for Information Systems. International Cross-Domain Conference and Workshop on Availability, Reliability and Security (CD-ARES 2012). Proceedings, P176, DOI 10.1007/978-3-642-32498-7_14
   Jansen B.J., 1998, ACM SIGCHI Bulletin, V30, P22, DOI 10.1145/279044.279051
   Kero B., 1995, PROC POSTCONF WORKSH, P1
   Ki T, 2019, PROC INT CONF SOFTW, P246, DOI 10.1109/ICSE.2019.00040
   Kondratova I., 2011, HDB RES CULTURALLY A, P316
   Kotsiantis SB, 2007, INFORM-J COMPUT INFO, V31, P249
   Lamsa Tomi, 2017, Comparison of GUI testing tools for Android applications
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Li WJ, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P355, DOI [10.1109/saner.2019.8668030, 10.1109/SANER.2019.8668030]
   Li YC, 2017, PROC IEEE ACM INT C, P23, DOI 10.1109/ICSE-C.2017.8
   Liu Z., 2022, PROC C HUM FACTORS C
   Liu Z, 2020, IEEE INT CONF AUTOM, P398, DOI 10.1145/3324884.3416547
   Lowe DG, 2004, INT J COMPUT VISION, V60, P91, DOI 10.1023/B:VISI.0000029664.99615.94
   Ma SY, 2021, IEEE T SOFTWARE ENG, V47, P2296, DOI 10.1109/TSE.2019.2946830
   Ma Y, 2019, HOTMOBILE '19 - PROCEEDINGS OF THE 20TH INTERNATIONAL WORKSHOP ON MOBILE COMPUTING SYSTEMS AND APPLICATIONS, P99, DOI 10.1145/3301293.3302363
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Mahajan S., 2015, PROC IEEE 8 INT C SO, P1
   Mahajan S, 2021, SOFTW TEST VERIF REL, V31, DOI 10.1002/stvr.1746
   Mahajan S, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P368, DOI 10.1145/3092703.3098223
   Mahajan S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P140, DOI 10.1145/3180155.3180262
   Mahajan S, 2016, ASIA PAC SOFWR ENG, P361, DOI [10.1109/APSEC.2016.060, 10.1109/APSEC.2016.30]
   Mahajan S, 2016, IEEE INT CONF SOFTW, P191, DOI 10.1109/ICST.2016.35
   Mariani L, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P280, DOI 10.1145/3180155.3180162
   Martin J., 1991, Rapid Application Development
   Memon AM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1479, DOI 10.1109/ICSE.2013.6606750
   Mirzaei N, 2016, PROC INT CONF SOFTW, P559, DOI 10.1145/2884781.2884853
   Moran K, 2018, IEEE INT CONF AUTOM, P543, DOI 10.1145/3238147.3238203
   Moran K, 2020, IEEE T SOFTWARE ENG, V46, P196, DOI 10.1109/TSE.2018.2844788
   Moran K, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P165, DOI 10.1145/3180155.3180246
   Moran K, 2017, PROC IEEE ACM INT C, P505, DOI 10.1109/ICSE-C.2017.166
   Moran K, 2017, PROC IEEE ACM INT C, P15, DOI 10.1109/ICSE-C.2017.16
   Nayebi F., 2012, 2012 25 IEEE CAN C E, P1, DOI DOI 10.1109/CCECE.2012.6334930
   Reiss SP, 2018, AUTOMAT SOFTW ENG, V25, P157, DOI 10.1007/s10515-017-0216-3
   Ren SQ, 2017, IEEE T PATTERN ANAL, V39, P1137, DOI 10.1109/TPAMI.2016.2577031
   Rublee E, 2011, IEEE I CONF COMP VIS, P2564, DOI 10.1109/ICCV.2011.6126544
   Saar T, 2016, SOFTWARE PRACT EXPER, V46, P1459, DOI 10.1002/spe.2387
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Su T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P245, DOI 10.1145/3106237.3106298
   Su YH, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1500, DOI 10.1145/3468264.3473109
   tools.android, 2020, US
   Nguyen TA, 2015, IEEE INT CONF AUTOM, P248, DOI 10.1109/ASE.2015.32
   Wang JJ, 2022, IEEE T SOFTWARE ENG, V48, P3131, DOI 10.1109/TSE.2021.3081171
   Wang JJ, 2020, PROC INT CONF SOFTW, P1535, DOI 10.1145/3377811.3380380
   Wang J, 2019, PROC INT CONF SOFTW, P912, DOI 10.1109/ICSE.2019.00097
   Wei LL, 2016, IEEE INT CONF AUTOM, P226, DOI 10.1145/2970276.2970312
   Wetzlmaier T, 2017, P 8 ACM SIGSOFT INT, P5
   Wetzlmaier T, 2016, IEEE INT CONF SOFTW, P416, DOI 10.1109/ICST.2016.51
   White TD, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P307, DOI 10.1145/3293882.3330551
   Yang B, 2021, PROC IEEE ACM INT C, P89, DOI 10.1109/ICSE-Companion52605.2021.00043
   Yang B, 2021, PROC INT CONF SOFTW, P761, DOI 10.1109/ICSE43902.2021.00075
   Zein S, 2016, J SYST SOFTWARE, V117, P334, DOI 10.1016/j.jss.2016.03.065
   Zhang T, 2015, 9TH IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2015), P179, DOI 10.1109/SOSE.2015.35
   Zhao DH, 2020, PROC INT CONF SOFTW, P1286, DOI 10.1145/3377811.3380411
   Zhao DH, 2019, PROC INT CONF SOFTW, P350, DOI 10.1109/ICSE.2019.00049
   Zhao TM, 2021, PROC INT CONF SOFTW, P748, DOI 10.1109/ICSE43902.2021.00074
NR 82
TC 22
Z9 25
U1 2
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 403
EP 418
DI 10.1109/TSE.2022.3150876
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA L1HD8
UT WOS:001020827200021
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Vale, G
   Hunsen, C
   Figueiredo, E
   Apel, S
AF Vale, Gustavo
   Hunsen, Claus
   Figueiredo, Eduardo
   Apel, Sven
TI Challenges of Resolving Merge Conflicts: A Mining and Survey Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Merge conflict resolution; collaborative software development; three-way
   merge
AB In collaborative software development, merge conflicts arise when developers integrate concurrent code changes. Practitioners seek to minimize the number of merge conflicts because resolving them is difficult, time consuming, and often an error-prone task. Despite a substantial number of studies investigating merge conflicts, the challenges in merge conflict resolution are not well understood. Our goal is to investigate which factors make merge conflicts longer to resolve in practice. To this end, we performed a two-phase study. First, we analyzed 66 projects containing around 81 thousand merge scenarios, involving 2 million files and over 10 million chunks. For this analysis, we use rank correlation, principal component analysis, multiple regression model, and effect-size analysis to investigate which independent variables (e.g., number of conflicting chunks and files) mostly influence our dependent variable (i.e., time to merge). We found that the number of chunks, lines of code, conflicting chunks, developers involved, conflicting lines of code, conflicting files, and the complexity of the conflicting code influence the merge conflict resolution time. Second, we surveyed 140 developers from our subject projects aiming at cross-validating our results from the first phase of our study. As main results, (i) we found that committing small chunks makes merge conflict resolution faster when leaving other independent variables untouched, (ii) we found evidence that merge scenario characteristics (e.g., the number of lines of code or chunks changed in the merge scenario) are stronger correlated with our dependent variable than merge conflict characteristics (e.g., the number of lines of code or chunks in conflict), (iii) we devise a taxonomy of four types of challenges in merge conflict resolution, and (iv) we observed that the inherent dependencies among conflicting and non-conflicting code is one of the main factors influencing the merge conflict resolution time.
C1 [Vale, Gustavo; Apel, Sven] Saarland Univ, Dept Comp Sci, D-66123 Saarbrucken, Germany.
   [Hunsen, Claus] Univ Passau, Dept Comp Sci, D-94032 Passau, Germany.
   [Figueiredo, Eduardo] Univ Fed Minas Gerais, Dept Comp Sci, BR-31270901 Belo Horizonte, MG, Brazil.
C3 Saarland University; University of Passau; Universidade Federal de Minas
   Gerais
RP Vale, G (corresponding author), Saarland Univ, Dept Comp Sci, D-66123 Saarbrucken, Germany.
EM vale@cs.uni-saarland.de; hunsen@fim.uni-passau.de;
   figueiredo@dcc.ufmg.br; apel@cs.uni-saarland.de
OI Apel, Sven/0000-0003-3687-2233
FU CNPq [290136/2015-6]; German Research Foundation [AP206/14-1]
FX This work was supported in part by CNPq under Grant 290136/2015-6.
   Thework of Sven Apel was supported by the German Research Foundation
   AP206/14-1.
CR Accioly P, 2017, Empirical software engineering, P1
   Ahmed I, 2017, INT SYMP EMP SOFTWAR, P58, DOI 10.1109/ESEM.2017.12
   Alali A, 2008, INT C PROGRAM COMPRE, P182, DOI 10.1109/ICPC.2008.24
   Amaral L, 2020, PROC IEEE INT CONF S, P441, DOI 10.1109/ICSME46990.2020.00049
   Apel S., 2011, P 19 ACM SIGSOFT S 1, P190, DOI DOI 10.1145/2025113.2025141
   Apel S, 2012, IEEE INT CONF AUTOM, P120, DOI 10.1145/2351676.2351694
   Biehl JT, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1313
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Brindescu C, 2020, PROC INT CONF SOFTW, P801, DOI 10.1145/3377811.3380344
   Brindescu C, 2020, PROC IEEE INT CONF S, P534, DOI 10.1109/ICSME46990.2020.00057
   Brindescu C, 2020, EMPIR SOFTW ENG, V25, P562, DOI 10.1007/s10664-019-09735-4
   Brun Y., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), P168, DOI [10.1145/2025113.2025139, DOI 10.1145/2025113.2025139]
   Cavalcanti G, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133883
   Chatfield C, 1984, ANAL TIME SERIES INT
   Cohen J., 1988, STAT POWER ANAL BEHA
   Costa C, 2014, INT J SOFTW ENG KNOW, V24, P1489, DOI 10.1142/S0218194014400166
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   de Mello RM, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962632
   Dewan P, 2007, ECSCW 2007: PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK, P159, DOI 10.1007/978-1-84800-031-5_9
   Dias K, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106256
   Fahrmeir L., 2013, Regression: models, methods and applications, DOI DOI 10.1007/978-3-642-34333-9
   Falk R.F., 1992, PRIMER SOFT MODELING
   Fang YL, 2018, INFORM SCIENCES, V460, P346, DOI 10.1016/j.ins.2018.05.050
   Field A., 2017, DISCOVERING STAT USI
   Ghiotto G, 2020, IEEE T SOFTWARE ENG, V46, P892, DOI 10.1109/TSE.2018.2871083
   Goode N, 2010, INTELLIGENCE, V38, P345, DOI 10.1016/j.intell.2010.01.001
   Gordon R. A., 2015, REGRESSION ANAL SOCI
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Guimaraes ML, 2012, PROC INT CONF SOFTW, P342, DOI 10.1109/ICSE.2012.6227180
   Hague M, 2019, ACM T PROGR LANG SYS, V41, DOI 10.1145/3310337
   Hindle Abram, 2008, P 2008 INT WORKING C, P99
   HOLLAND PW, 1986, J AM STAT ASSOC, V81, P945, DOI 10.2307/2289064
   James G, 2013, SPRINGER TEXTS STAT, V103, P303, DOI 10.1007/978-1-4614-7138-7_8
   Ji T, 2020, PROC INT SYMP SOFTW, P70, DOI 10.1109/ISSRE5003.2020.00016
   Just S, 2016, PROC INT SYMP SOFTW, P400, DOI 10.1109/ISSRE.2016.38
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kasi BK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P732, DOI 10.1109/ICSE.2013.6606619
   Lessenich O, 2018, AUTOMAT SOFTW ENG, V25, P279, DOI 10.1007/s10515-017-0227-0
   Levine TR, 2002, HUM COMMUN RES, V28, P612, DOI 10.1093/hcr/28.4.612
   Li YL, 2008, INFORM PROCESS MANAG, V44, P1822, DOI 10.1016/j.ipm.2008.07.005
   Liu J, 2010, LECT NOTES COMPUT SC, V6461, P1, DOI [10.1109/PCSPA.2010.9, 10.1007/978-3-642-17164-2_1]
   Mahmood W., 2020, PROC INT WORK C VARI, P1
   Mahmoudi M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P151, DOI [10.1109/saner.2019.8668012, 10.1109/SANER.2019.8668012]
   Mckee S, 2017, PROC IEEE INT CONF S, P467, DOI 10.1109/ICSME.2017.53
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Moll~eri J., 2016, PROC INT S EMPIR SOF
   Nelson N, 2019, EMPIR SOFTW ENG, V24, P2863, DOI 10.1007/s10664-018-9674-x
   Nieminen A, 2012, COLLABORATECOM, P540, DOI 10.4108/icst.collaboratecom.2012.250435
   Owhadi-Kareshk M, 2019, INT SYMP EMP SOFTWAR, P363
   Sakamoto Y, 2015, 2015 THIRD INTERNATIONAL CONFERENCE ON DIGITAL INFORMATION, NETWORKING, AND WIRELESS COMMUNICATIONS (DINWC), P127, DOI 10.1109/DINWC.2015.7054230
   Sarma A, 2012, IEEE T SOFTWARE ENG, V38, P889, DOI 10.1109/TSE.2011.64
   Shen B, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360596
   Siegmund J, 2015, EMPIR SOFTW ENG, V20, P1159, DOI 10.1007/s10664-014-9318-8
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Storey Margaret-Anne, 2013, P 2013 C COMPUTER SU, P103
   Strauss AL., 1997, GROUNDED THEORY PRAC, P280
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Vale G., 2021, CHALLENGES RESOLVING
   Vale G, 2020, EMPIR SOFTW ENG, V25, P402, DOI 10.1007/s10664-019-09774-x
   Yuzuki R, 2015, 2015 IEEE 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN), P21, DOI 10.1109/SWAN.2015.7070484
   ZAR JH, 1972, J AM STAT ASSOC, V67, P578, DOI 10.2307/2284441
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
   Zimmermann T., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, Washington, DC, USA, P11, DOI DOI 10.1109/MSR.2007.22
NR 67
TC 5
Z9 5
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 4964
EP 4985
DI 10.1109/TSE.2021.3130098
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600012
OA hybrid
DA 2024-07-18
ER

PT J
AU Mauerer, W
   Joblin, M
   Tamburri, DA
   Paradis, C
   Kazman, R
   Apel, S
AF Mauerer, Wolfgang
   Joblin, Mitchell
   Tamburri, Damian A.
   Paradis, Carlos
   Kazman, Rick
   Apel, Sven
TI In Search of Socio-Technical Congruence: A Large-Scale Longitudinal
   Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Open source software; Computer bugs; Software quality; Measurement;
   Software architecture; Data models; Task analysis; Socio-technical
   congruence; human factors in software engineering; graph analysis;
   empirical software engineering; socio-technical analysis; quantitative
   software engineering; mixed-methods research
ID REGRESSION; COORDINATION; MODELS; REGULARIZATION; SELECTION; ERRORS;
   TESTS
AB We report on a large-scale empirical study investigating the relevance of socio-technical congruence over key basic software quality metrics, namely, bugs and churn. In particular, we explore whether alignment or misalignment of social communication structures and technical dependencies in large software projects influences software quality. To this end, we have defined a quantitative and operational notion of socio-technical congruence, which we call socio-technical motif congruence (STMC). STMC is a measure of the degree to which developers working on the same file or on two related files, need to communicate. As socio-technical congruence is a complex and multi-faceted phenomenon, the interpretability of the results is one of our main concerns, so we have employed a careful mixed-methods statistical analysis. In particular, we provide analyses with similar techniques as employed by seminal work in the field to ensure comparability of our results with the existing body of work. The major result of our study, based on an analysis of 25 large open-source projects, is that STMC is not related to project quality measures-software bugs and churn-in any temporal scenario. That is, we find no statistical relationship between the alignment of developer tasks and developer communications on the one hand, and project outcomes on the other hand. We conclude that, wherefore congruence does matter as literature shows, then its measurable effect lies elsewhere.
C1 [Mauerer, Wolfgang] Tech Univ Appl Sci Regensburg, Theoret Comp Sci, D-93053 Regensburg, Germany.
   [Mauerer, Wolfgang; Joblin, Mitchell] Siemens AG, Corp Res & Technol, D-81739 Munich, Germany.
   [Joblin, Mitchell] Saarland Univ, D-66123 Saarbrucken, Germany.
   [Tamburri, Damian A.] Tech Univ Eindhoven, NL-5612 AZ Eindhoven, Netherlands.
   [Tamburri, Damian A.] Jheronimus Acad Data Sci, NL-5211 DA sHertogenbosch, Netherlands.
   [Paradis, Carlos] Univ Hawaii, Honolulu, HI 96822 USA.
   [Kazman, Rick] Univ Hawaii, Informat Technol Management, Honolulu, HI 96822 USA.
   [Apel, Sven] Saarland Univ, Saarland Informat Campus, D-66123 Saarbraucken, Saarland, Germany.
C3 Siemens AG; Siemens Germany; Saarland University; Eindhoven University
   of Technology; University of Hawaii System; University of Hawaii System
RP Mauerer, W (corresponding author), Tech Univ Appl Sci Regensburg, Theoret Comp Sci, D-93053 Regensburg, Germany.
EM wolfgang.maueren@othr.de; mitchell.joblin@siemens.com;
   d.a.tamburri@tue.nl; cvas@hawaii.edu; kazman@hawaii.edu;
   apel@cs.uni-saarland.de
RI Mauerer, Wolfgang/JFL-0857-2023; Tamburri, Damian Andrew/AAJ-2507-2021;
   Paradis, Carlos/AAA-3387-2020
OI Mauerer, Wolfgang/0000-0002-9765-8313; Tamburri, Damian
   Andrew/0000-0003-1230-8961; Paradis, Carlos/0000-0002-3062-7547; Kazman,
   Rick/0000-0003-0392-2783; Apel, Sven/0000-0003-3687-2233
FU National Science Foundation of the U.S. [CCF-1514561]; German Research
   Foundation [AP 206/14-1]; Siemens AG, Corporate Technology; iDev40
   project; ECSEL Joint Undertaking (JU) [783163]; European Union; 
   [BayIntAn-OTHR-2-16-144]
FX The work of Rick Kazman was supported in part by the National Science
   Foundation of the U.S. under Grant CCF-1514561. The work of Sven Apel
   was supported by German Research Foundation (AP 206/14-1). Wolfgang
   Mauerer acknowledges mobility support from grant BayIntAn-OTHR-2-16-144,
   and support from Siemens AG, Corporate Technology. This work was
   supported by iDev40 project. The iDev40 project has received funding
   from the ECSEL Joint Undertaking (JU) under Grant 783163. The JU
   receives support from the European Union's Horizon 2020 Research and
   Innovation Programme. It is co-founded by the consortium members, grants
   from Austria, Germany, Belgium, Italy, Spain and Romania.
CR Agresti A, 2007, INTRO CATEGORICAL DA, DOI DOI 10.1002/0470114754
   Alon U, 2007, NAT REV GENET, V8, P450, DOI 10.1038/nrg2102
   Andersen H., 2020, Stanford encyclopedia of philosophy (Winter 2020 edition). Retrieved March 29
   [Anonymous], 2016, R FOUND STAT COMPUT
   [Anonymous], 2012, Software Engineering Notes
   ANSCOMBE FJ, 1973, AM STAT, V27, P17, DOI 10.2307/2682899
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Baguley T, 2009, BRIT J PSYCHOL, V100, P603, DOI 10.1348/000712608X377117
   Bailey Sabrina E., 2013, Proceedings of the 2013 3rd International Workshop on Replication in Empirical Software Engineering Research (RESER 2013), P1, DOI 10.1109/RESER.2013.14
   BAKAN D, 1966, PSYCHOL BULL, V66, P423, DOI 10.1037/h0020412
   Bates D, 2015, J STAT SOFTW, V67, P1, DOI 10.18637/jss.v067.i01
   Bavota G, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P692, DOI 10.1109/ICSE.2013.6606615
   Begel A, 2013, IEEE SOFTWARE, V30, P52, DOI 10.1109/MS.2013.13
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Berkson J, 1938, J AM STAT ASSOC, V33, P526, DOI 10.2307/2279690
   Betz Stefanie, 2013, Proceedings of the 2013 3rd International Workshop on Replication in Empirical Software Engineering Research (RESER 2013), P15, DOI 10.1109/RESER.2013.8
   Bird Christian, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P109, DOI 10.1109/ISSRE.2009.17
   Bird Christian, 2006, P MSR, P137, DOI DOI 10.1145/1137983.1138016
   Bird Christian, 2008, Proceedings of the 2008 ACM SIGSOFT Symposium on the Foundations of Software Engineering, P24
   Borsos R., 2014, THESIS WUERZBURG BAV
   Breiman L, 1996, ANN STAT, V24, P2350
   Breiman L, 2001, STAT SCI, V16, P199, DOI 10.1214/ss/1009213726
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Browning TR, 2016, IEEE T ENG MANAGE, V63, P27, DOI 10.1109/TEM.2015.2491283
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Colfer L., 2010, Harvard Business School Working Paper
   CONWAY ME, 1968, DATAMATION, V14, P28
   de Souza CRB, 2011, IEEE T SOFTWARE ENG, V37, P325, DOI 10.1109/TSE.2011.19
   Dekker SWA, 2014, COGN TECHNOL WORK, V16, P541, DOI 10.1007/s10111-014-0284-0
   Drummond GB, 2016, BRIT J ANAESTH, V116, P893, DOI 10.1093/bja/aew146
   Espedal B, 2013, HUM RESOUR MANAGE-US, V52, P607, DOI 10.1002/hrm.21544
   Fahrmeir L., 2013, Regression: Models, Methods and Applications
   Fox J., 2018, Predictor effects graphics gallery
   Friedman J., 2001, ELEMENTS STAT LEARNI, V1, DOI DOI 10.1007/978-0-387-84858-7
   Friedman J, 2010, J STAT SOFTW, V33, P1, DOI 10.18637/jss.v033.i01
   Gelman A, 2015, J MANAGE, V41, P632, DOI 10.1177/0149206314525208
   Gobbi A, 2014, BIOINFORMATICS, V30, pI617, DOI 10.1093/bioinformatics/btu474
   Goeman JJ, 2010, BIOMETRICAL J, V52, P70, DOI 10.1002/bimj.200900028
   Greenland S, 2016, EUR J EPIDEMIOL, V31, P337, DOI 10.1007/s10654-016-0149-3
   Gurukar S, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P475, DOI 10.1145/2723372.2737791
   H Wickham, 2016, GGPLOT2 ELEGANT GRAP
   Hair JF, 2010, Multivariate data analysis
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Harrison W. A., 1981, SIGPLAN Notices, V16, P63, DOI 10.1145/947825.947829
   Hastie T., 1990, GEN ADDITIVE MODELS, DOI 10.1214/ss/1177013604
   Herbsleb J. D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P85, DOI 10.1109/ICSE.1999.840998
   Herbsleb JD, 1999, IEEE SOFTWARE, V16, P63, DOI 10.1109/52.795103
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   HOERL AE, 1970, TECHNOMETRICS, V12, P55, DOI 10.1080/00401706.1970.10488634
   Hofmann G., 2013, P IFIP INT C OP SOUR, P245
   Howison J., 2012, DISSERTATIONS THESES
   Howison J, 2014, MIS QUART, V38, P29, DOI 10.25300/MISQ/2014/38.1.02
   Hunsen C, 2020, EMPIR SOFTW ENG, V25, P4379, DOI 10.1007/s10664-020-09833-8
   Hunsen C, 2016, EMPIR SOFTW ENG, V21, P449, DOI 10.1007/s10664-015-9360-1
   Iorio F, 2016, BMC BIOINFORMATICS, V17, DOI 10.1186/s12859-016-1402-1
   Iqbal A., 2013, 25 INT C SOFTWARE EN, P113
   Jaccard P., 1901, B SOCIT VAUDOISE SCI, V37, P547, DOI [10.5169/seals-266440, DOI 10.5169/SEALS-266440]
   Joblin M, 2017, EMPIR SOFTW ENG, V22, P2050, DOI 10.1007/s10664-016-9478-9
   Joblin M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P563, DOI 10.1109/ICSE.2015.73
   Joblin Mitchell, 2017, Ph. D. Dissertation
   Kamola M, 2019, IEEE ACCESS, V7, P38469, DOI 10.1109/ACCESS.2019.2905671
   Karus S, 2012, INFORM SOFTWARE TECH, V54, P203, DOI 10.1016/j.infsof.2011.09.004
   Kazman R, 2016, IEEE T SOFTWARE ENG, V42, P222, DOI 10.1109/TSE.2015.2465387
   Kazman R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P179, DOI 10.1109/ICSE.2015.146
   Khosravi H, 2009, LECT NOTES COMPUT SC, V5549, P219, DOI 10.1007/978-3-642-01818-3_28
   Kuznetsova A, 2017, J STAT SOFTW, V82, P1, DOI 10.18637/jss.v082.i13
   Kwan I, 2012, IEEE SOFTWARE, V29, P90, DOI 10.1109/MS.2012.3
   Kwan I, 2011, IEEE T SOFTWARE ENG, V37, P307, DOI 10.1109/TSE.2011.29
   Kyung M, 2010, BAYESIAN ANAL, V5, P369, DOI 10.1214/10-BA607
   LaMantia MJ, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P83, DOI 10.1109/WICSA.2008.49
   Long Y, 2007, J DATABASE MANAGE, V18, P25, DOI 10.4018/jdm.2007040102
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McShane BB, 2019, AM STAT, V73, P235, DOI 10.1080/00031305.2018.1527253
   Meneely A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P281, DOI 10.1145/1985793.1985832
   Mo R, 2016, PROC INT CONF SOFTW, P499, DOI 10.1145/2884781.2884825
   Moksony F., 1999, Szociologiai Szemle, P130
   Moon E., 2014, AMCIS 2014 P
   Moon E, 2016, 9TH IEEE/ACM INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2016), P19, DOI [10.1145/2897586.2897593, 10.1109/CHASE.2016.012]
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   NELDER JA, 1972, J R STAT SOC SER A-G, V135, P370, DOI 10.2307/2344614
   Newman M. E. J., 2018, Networks: An Introduction, DOI [DOI 10.1093/ACPROF:OSO/9780199206650.001.0001, 10.1093/acprof:oso/9780199206650.001.0001]
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Palomba F., 2017, CEUR Workshop Proceedings, V2047, P18
   Palomba F, 2021, IEEE T SOFTWARE ENG, V47, P108, DOI 10.1109/TSE.2018.2883603
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Panichella S, 2014, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSME.2014.47
   Paranjape A, 2017, WSDM'17: PROCEEDINGS OF THE TENTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P601, DOI 10.1145/3018661.3018731
   Paulson JW, 2004, IEEE T SOFTWARE ENG, V30, P246, DOI 10.1109/TSE.2004.1274044
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Ramsauer R, 2019, PROC INT CONF SOFTW, P807, DOI 10.1109/ICSE.2019.00088
   Ramsauer R, 2016, PROCEEDINGS OF THE 12TH INTERNATIONAL SYMPOSIUM ON OPEN COLLABORATION (OPENSYM), DOI 10.1145/2957792.2957810
   Reina A, 2015, SWARM INTELL-US, V9, P75, DOI 10.1007/s11721-015-0105-y
   Reinhart A., 2015, Statistics done wrong: the woefully complete guide
   Sangal N, 2005, ACM SIGPLAN NOTICES, V40, P167, DOI 10.1145/1103845.1094824
   Sarma A, 2003, PROC INT CONF SOFTW, P444, DOI 10.1109/ICSE.2003.1201222
   Sarma A, 2009, PROC INT CONF SOFTW, P23, DOI 10.1109/ICSE.2009.5070505
   Sawyer RK, 2003, SOCIOL METHOD RES, V31, P325, DOI 10.1177/0049124102239079
   SHEPPERD M, 1988, SOFTWARE ENG J, V3, P30, DOI 10.1049/sej.1988.0003
   Shi M, 2005, COMPUT STAT DATA AN, V48, P779, DOI 10.1016/j.csda.2004.03.015
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Simmons JP, 2011, PSYCHOL SCI, V22, P1359, DOI 10.1177/0956797611417632
   Syeed M. M. M., 2013, OSS SER IFIP ADV INF, P109
   Tamburri DA, 2021, IEEE T SOFTWARE ENG, V47, P630, DOI 10.1109/TSE.2019.2901490
   Tamburri DA, 2015, J INTERNET SERV APPL, V6, DOI 10.1186/s13174-015-0024-6
   Tamburri DA, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2522968.2522971
   Tang Y, 2016, R J, V8, P474, DOI 10.32614/rj-2016-060
   Tibshirani R, 1996, J ROY STAT SOC B, V58, P267, DOI 10.1111/j.2517-6161.1996.tb02080.x
   TUKEY J. W., 1991, Statistical Science, V6, P100, DOI [10.1214/ss/1177011945, DOI 10.1214/SS/1177011945]
   Valetto G., 2007, 4 INT WORKSHOP MININ, P25, DOI DOI 10.1109/MSR.2007.33
   Venables V.N., 2002, Modern Applied Statistics with S, VFourth
   Wasserstein RL, 2019, AM STAT, V73, P1, DOI 10.1080/00031305.2019.1583913
   Wasserstein RL, 2016, AM STAT, V70, P129
   Wickham H, 2011, J STAT SOFTW, V40, P1, DOI 10.18637/jss.v040.i01
   Wickham H, 2007, J STAT SOFTW, V21, P1
   Winther R. G., 2021, The Stanford encyclopedia of philosophy
   Wong S, 2009, IEEE INT CONF AUTOM, P197, DOI 10.1109/ASE.2009.53
   Wood S.N., 2017, J STAT SOFTW
   Wood SN, 2011, J ROY STAT SOC B, V73, P3, DOI 10.1111/j.1467-9868.2010.00749.x
   Wood SN, 2004, J AM STAT ASSOC, V99, P673, DOI 10.1198/016214504000000980
   Wood SN, 2003, J ROY STAT SOC B, V65, P95, DOI 10.1111/1467-9868.00374
   Zeileis A, 2008, J STAT SOFTW, V27, P1, DOI 10.18637/jss.v027.i08
   Zhang DB, 2017, AM STAT, V71, P310, DOI 10.1080/00031305.2016.1256839
   Zimmermann T., 2008, PREDICTING BUGS HIST, P69, DOI [10.1007/978-3-540-76440-3_4, DOI 10.1007/978-3-540-76440-3_4]
   Zou H, 2005, J R STAT SOC B, V67, P301, DOI 10.1111/j.1467-9868.2005.00503.x
NR 126
TC 7
Z9 7
U1 2
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 3159
EP 3184
DI 10.1109/TSE.2021.3082074
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500027
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Shreeve, B
   Hallett, J
   Edwards, M
   Ramokapane, KM
   Atkins, R
   Rashid, A
AF Shreeve, Benjamin
   Hallett, Joseph
   Edwards, Matthew
   Ramokapane, Kopo M.
   Atkins, Richard
   Rashid, Awais
TI The Best Laid Plans or Lack Thereof: Security Decision-Making of
   Different Stakeholder Groups
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Games; Stakeholders; Computer security; Decision making; Organizations;
   Investment; Social and professional topics~computational thinking;
   applied computing~enterprise computing infrastructures
ID DIVERSITY
AB Cyber security requirements are influenced by the priorities and decisions of a range of stakeholders. Board members and Chief Information Security Officers (CISOs) determine strategic priorities. Managers have responsibility for resource allocation and project management. Legal professionals concern themselves with regulatory compliance. Little is understood about how the security decision-making approaches of these different stakeholders contrast, and if particular groups of stakeholders have a better appreciation of security requirements during decision-making. Are risk analysts better decision makers than CISOs? Do security experts exhibit more effective strategies than board members? This paper explores the effect that different experience and diversity of expertise has on the quality of a team's cyber security decision-making and whether teams with members from more varied backgrounds perform better than those with more focused, homogeneous skill sets. Using data from 208 sessions and 948 players of a tabletop game run in the wild by a major national organization over 16 months, we explore how choices are affected by player background (e.g., cyber security experts versus risk analysts, board-level decision makers versus technical experts) and different team make-ups (homogeneous teams of security experts versus various mixes). We find that no group of experts makes significantly better game decisions than anyone else, and that their biases lead them to not fully comprehend what they are defending or how the defenses work.
C1 [Shreeve, Benjamin; Hallett, Joseph; Edwards, Matthew; Ramokapane, Kopo M.; Rashid, Awais] Univ Bristol, Bristol Cyber Secur Grp, Bristol BS8 1TH, Avon, England.
   [Atkins, Richard] City London Police, London EC2V 7HH, England.
C3 University of Bristol
RP Shreeve, B (corresponding author), Univ Bristol, Bristol Cyber Secur Grp, Bristol BS8 1TH, Avon, England.
EM ben.shreeve@bristol.ac.uk; joseph.hallett@bristol.ac.uk;
   matthew.john.edwards@bristol.ac.uk; marvin.ramokapane@bristol.ac.uk;
   Richard.Atkins@city-of-london.pnn.police.uk; awais.rashid@bristol.ac.uk
OI Hallett, Joseph/0000-0002-6146-9852
FU EPSRC [EP/M002780/1, EP/N021657/2]; EPSRC [EP/N021657/1, EP/M002780/1,
   EP/N021657/2] Funding Source: UKRI
FX This work was supported in part by EPSRC Grants MUMBA: Multi-faceted
   Metrics for ICS Business Risk Analysis (EP/M002780/1) and DYPOSIT:
   Dynamic Policies for Shared Cyber-Physical Infrastructures under Attack
   (EP/N021657/2).
CR Abbasi A, 2017, ANN COMPUT SECURITY, P437, DOI 10.1145/3134600.3134618
   [Anonymous], 2015, Journal of Information Security, DOI [10.4236/jis.2015.61003, DOI 10.4236/JIS.2015.61003]
   [Anonymous], 2016, 2703512016 ISOIEC
   [Anonymous], 2013, PROC C COMPUTER COMM, DOI 10.1145/2508859.2516753
   Bartnes M, 2017, COMPUT SECUR, V67, P280, DOI 10.1016/j.cose.2016.11.017
   Bock Kevin, 2018, P USENIX WORKSHOP AD, P9
   Braun V., 2012, APA HDB RES METHODS, P57, DOI [https://doi.org/10.1037/13620-004, 10.1007/978-981-10-2779-6_103-1, 10.1037/13620-004]
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Carcano A, 2011, IEEE T IND INFORM, V7, P179, DOI 10.1109/TII.2010.2099234
   Cavusoglu H, 2004, COMMUN ACM, V47, P87, DOI 10.1145/1005817.1005828
   Chen YQ, 2018, P IEEE S SECUR PRIV, P648, DOI 10.1109/SP.2018.00016
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Dourish P, 2004, PERS UBIQUIT COMPUT, V8, P391, DOI 10.1007/s00779-004-0308-5
   Eikmeier Dale C., 2004, MILITARY REV, P2
   Eldefrawy K., 2012, NDSS, V12, P1
   ENISA, 2016, TP0217008ENN ENISA
   Fielder A, 2016, DECIS SUPPORT SYST, V86, P13, DOI 10.1016/j.dss.2016.02.012
   Fink Glenn, 2013, Foundations of Augmented Cognition. 7th International Conference, AC 2013. Held as Part of HCI International 2013. Proceedings, P656, DOI 10.1007/978-3-642-39454-6_70
   Frey S, 2019, IEEE T SOFTWARE ENG, V45, P521, DOI 10.1109/TSE.2017.2782813
   Frey S, 2016, 2016 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SMART CYBER-PHYSICAL SYSTEMS (SESCPS), P43, DOI [10.1109/SEsCPS.2016.015, 10.1145/2897035.2897036]
   Gondree M, 2013, IEEE SECUR PRIV, V11, P64, DOI 10.1109/MSP.2013.69
   Gordon L. A., 2002, Strategic Finance, V84, P26
   Gordon LA, 2016, Journal of Information Security, V7, P49, DOI [10.4236/jis.2016.72004, DOI 10.4236/JIS.2016.72004]
   Green B, 2017, P 10 USENIX WORKSH C, P4
   High EH, 2010, HEALTH PROMOT PRACT, V11, P310, DOI 10.1177/1524839908325063
   Information Technology Laboratory (ITIL), 2015, 80053 SP NAT I STAND, Vv4
   Information Technology Laboratory (ITIL), 2012, 80061 ITIL SP
   International Standards Organisation (ISO), 2013, INFORM SECURITY MANA, V27001
   Iulia I., 2015, Proceedings of the Symposium On Usable Privacy and Security (SOUPS), P327
   Jalali MS, 2019, J STRATEGIC INF SYST, V28, P66, DOI 10.1016/j.jsis.2018.09.003
   Kotonya G., 1998, Requirements engineering: processes and techniques
   Luiijf HAM, 2010, INT J CRIT INFRASTRU, V6, P293, DOI 10.1504/IJCIS.2010.033341
   Mickens J., 2018, PROC 27 FUSENIXG SEC, V18
   Mmanga A., 2017, PROC 13 S USABLE PRI, P11
   Morelock John R., 2018, P USENIX WORKSHOP AD
   Myagmar S., 2005, S REQ ENG INF SEC SR, P1
   National Cyber Security Centre, 2014, CYB ESS
   National Cybersecurity Alliance, 2019, SMALL BUS CYB TARG S
   Olson BJ, 2007, J MANAGE, V33, P196, DOI 10.1177/0149206306298657
   Paulsen C., 2016, 7621 NISTIR
   Simons T, 1999, ACAD MANAGE J, V42, P662, DOI 10.5465/256987
   Sonnenreich W, 2006, J RES PRACT INF TECH, V38, P45
   Spellerberg IF, 2003, GLOBAL ECOL BIOGEOGR, V12, P177, DOI 10.1046/j.1466-822X.2003.00015.x
   Stevens R, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P621
   Such JM, 2019, COMPUTER, V52, P21, DOI 10.1109/MC.2018.2888766
   Vykopal J., 2016, PROC WORKSHOP ADV SE, P8
   Wash Rick, 2015, P S USABLE PRIVACY S, P309
   Zanutto Alberto, 2017, 13 S US PRIV SEC SOU, P1
NR 48
TC 6
Z9 7
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2022
VL 48
IS 5
BP 1515
EP 1528
DI 10.1109/TSE.2020.3023735
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 1I8CJ
UT WOS:000797454000004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Qiu, K
   Zheng, Z
   Chen, T
   Poon, PL
AF Qiu, Kun
   Zheng, Zheng
   Chen, Tsong
   Poon, Pak-Lok
TI Theoretical and Empirical Analyses of the Effectiveness of Metamorphic
   Relation Composition
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Fault detection; Software; Guidelines; Systematics; Australia;
   Companies; Metamorphic testing; metamorphic relation; metamorphic
   relation composition; test oracle; fault detection capability
ID SOFTWARE
AB Metamorphic Relations (MRs) play a key role in determining the fault detection capability of Metamorphic Testing (MT). As human judgement is required for MR identification, systematic MR generation has long been an important research area in MT. Additionally, due to the extra program executions required for follow-up test cases, some concerns have been raised about MT cost-effectiveness. Consequently, the reduction in testing costs associated with MT has become another important issue to be addressed. MR composition can address both of these problems. This technique can automatically generate new MRs by composing existing ones, thereby reducing the number of follow-up test cases. Despite this advantage, previous studies on MR composition have empirically shown that some composite MRs have lower fault detection capability than their corresponding component MRs. To investigate this issue, we performed theoretical and empirical analyses to identify what characteristics component MRs should possess so that their corresponding composite MR has at least the same fault detection capability as the component MRs do. We have also derived a convenient, but effective guideline so that the fault detection capability of MT will most likely not be reduced after composition.
C1 [Qiu, Kun; Zheng, Zheng] Beihang Univ, Sch Automat Sci & Elect Engn, Beijing 100191, Peoples R China.
   [Chen, Tsong] Swinburne Univ Technol, Dept Comp Sci & Software Engn, Hawthorn, Vic 3122, Australia.
   [Poon, Pak-Lok] Cent Queensland Univ, Sch Engn & Technol, Melbourne, Vic 3000, Australia.
C3 Beihang University; Swinburne University of Technology; Central
   Queensland University
RP Zheng, Z (corresponding author), Beihang Univ, Sch Automat Sci & Elect Engn, Beijing 100191, Peoples R China.
EM qiukun@buaa.edu.cn; zhengz@buaa.edu.cn; tychen@swin.edu.au;
   p.poon@cqu.edu.au
RI Poon, Pak-Lok/ADQ-5493-2022
OI Chen, Tsong/0000-0003-3578-0994; Qiu, Kun/0000-0002-4121-3665; POON, Pak
   Lok/0000-0003-2840-2418
FU National Natural Science Foundation of China [61772055, 61872169];
   Technical Foundation Project of Ministry of Industry and Information
   Technology of China [JSZL2016601B003]; Equipment Preliminary R&D Project
   of China [41402020102]
FX We are indebted to Dr. Dave Towey of the University of Nottingham Ningbo
   China for his valuable comments and suggestions on improving this paper.
   This work was supported in part by the National Natural Science
   Foundation of China (Grant Nos. 61772055 and 61872169), the Technical
   Foundation Project of Ministry of Industry and Information Technology of
   China (Grant No. JSZL2016601B003), and the Equipment Preliminary R&D
   Project of China (Grant No. 41402020102).
CR Ammann P., 2018, INTRO SOFTWARE TESTI
   [Anonymous], 2007, Software testing and analysis-process, principles and techniques
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Brown J, 2018, PROCEEDINGS OF THE 51ST ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES (HICSS), P5687
   Chan F., 1998, P IASTED INT C SOFTW, P191
   Chan WK, 2007, INT J WEB SERV RES, V4, P61, DOI 10.4018/jwsr.2007040103
   Chan WK, 2006, INT J SOFTW ENG KNOW, V16, P677, DOI 10.1142/S0218194006002951
   Chang-ai Sun, 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P283, DOI 10.1109/ICWS.2011.65
   Chen T.Y., 1998, Metamorphic testing: a new approach for generating next test cases
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Chen TY, 2016, J SYST SOFTWARE, V116, P177, DOI 10.1016/j.jss.2015.07.037
   Chen TY, 2009, BMC BIOINFORMATICS, V10, DOI 10.1186/1471-2105-10-24
   Chen TY, 2002, P INT COMP SOFTW APP, P327, DOI 10.1109/CMPSAC.2002.1045022
   Donaldson AF, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133917
   Dong Guowei, 2008, Journal of Southeast University (English Edition), V24, P437
   Jiang MY, 2012, INT CONF SOFTW ENG, P530
   Kanewala U, 2016, SOFTW TEST VERIF REL, V26, P245, DOI 10.1002/stvr.1594
   Kanewala U, 2013, PROC INT SYMP SOFTW, P1, DOI 10.1109/ISSRE.2013.6698899
   Kuo FC, 2011, C LOCAL COMPUT NETW, P291, DOI 10.1109/LCN.2011.6115306
   Liu H, 2012, INT CONF QUAL SOFTW, P59, DOI 10.1109/QSIC.2012.10
   Mayer J, 2006, INT CONF QUAL SOFTW, P85
   Murphy C., 2011, CUCS01108
   Nair A, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P1, DOI [10.1145/3340482.3342741, 10.1109/ncc.2019.8732208]
   Nakajima S, 2016, ASIA PAC SOFWR ENG, P297, DOI [10.1109/APSEC.2016.049, 10.1109/APSEC.2016.19]
   Pullum LL, 2012, 2012 ASE INTERNATIONAL CONFERENCE ON BIOMEDICAL COMPUTING (BIOMEDCOM), P62, DOI 10.1109/BioMedCom.2012.17
   Rao PF, 2013, INT CONF QUAL SOFTW, P260, DOI 10.1109/QSIC.2013.18
   Sadi MS, 2011, J BIOINF COMPUT BIOL, V9, P729, DOI 10.1142/S021972001100563X
   Saha P, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P157, DOI 10.1109/AITest.2019.00019
   Segura S, 2018, IEEE T SOFTWARE ENG, V44, P1083, DOI 10.1109/TSE.2017.2764464
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Smith BH, 2009, EMPIR SOFTW ENG, V14, P341, DOI 10.1007/s10664-008-9083-7
   Sun CA, 2021, IEEE T SOFTWARE ENG, V47, P1764, DOI 10.1109/TSE.2019.2934848
   Sun CA, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET), P12, DOI [10.1109/MET.2016.011, 10.1145/2896971.2896974]
   Tao QM, 2010, ASIA PAC SOFWR ENG, P270, DOI 10.1109/APSEC.2010.39
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P216, DOI [10.1145/2666356.2594334, 10.1145/2594291.2594334]
   Xiao-li Lu, 2010, 2010 Proceedings of 7th International Conference on Ubiquitous Intelligence & Computing and 7th International Conference on Autonomic & Trusted Computing (UIC/ATC 2010), P272, DOI 10.1109/UIC-ATC.2010.75
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Xie XY, 2013, INFORM SOFTWARE TECH, V55, P866, DOI 10.1016/j.infsof.2012.08.008
   Xie XY, 2009, INT CONF QUAL SOFTW, P135, DOI 10.1109/QSIC.2009.26
   Zhang B, 2019, PROC IEEE INT CONF S, P235, DOI 10.1109/ICSME.2019.00035
   Zhang Jie, 2014, P 29 ACM IEEE INT C, P701, DOI DOI 10.1145/2642937.2642994
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhou ZQ, 2020, IEEE T SOFTWARE ENG, V46, P1120, DOI 10.1109/TSE.2018.2876433
   Zhou ZQ, 2019, COMMUN ACM, V62, P61, DOI 10.1145/3241979
   Zhou ZQ, 2016, IEEE T SOFTWARE ENG, V42, P264, DOI 10.1109/TSE.2015.2478001
   Zhou ZQ, 2012, SOFTW TEST VERIF REL, V22, P221, DOI 10.1002/stvr.437
   Zhu H, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P149, DOI 10.1109/AITest.2019.00018
   Zhu H, 2015, 2015 SECOND INTERNATIONAL CONFERENCE ON TRUSTWORTHY SYSTEMS AND THEIR APPLICATIONS, P120, DOI 10.1109/TSA.2015.13
NR 49
TC 11
Z9 12
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2022
VL 48
IS 3
BP 1001
EP 1017
DI 10.1109/TSE.2020.3009698
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZU6ZO
UT WOS:000769989900016
DA 2024-07-18
ER

PT J
AU Bhatia, A
   Wang, SW
   Asaduzzaman, M
   Hassan, AE
AF Bhatia, Aaditya
   Wang, Shaowei
   Asaduzzaman, Muhammad
   Hassan, Ahmed E.
TI A Study of Bug Management Using the Stack Exchange Question and
   Answering Platform
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Tagging; History; Communication channels; Software;
   Message systems; Indexes; Bug management systems; stack exchange;
   question & answer platform
AB Traditional bug management systems, like Bugzilla, are widely used in open source and commercial projects. Stack Exchange uses its online question and answer (Q&A) platform to collect and manage bugs, which brings several new unique features that are not offered in traditional bug management systems. Users can edit bug reports, use different communication channels, and vote on bug reports, answers, and their associated comments. Understanding how these features manage bug reports can provide insights to the designers of traditional bug management systems, like whether a feature should be introduced? and how would users leverage such a feature? We performed a large-scale analysis of 19,151 bug reports of the bug management system of Stack Exchange and studied the in-place editing, the answering and commenting, and the voting features. We find that: 1) The three features are used actively. 2) 57 percent of the edits improved the quality of bug reports. 3) Commenting provides a channel for discussing bug-related information, while answering offers a channel for explaining the causes of a bug and bug-fix information. 4) Downvotes are made due to the disagreement of the reported "bug" being a real bug and the low quality of bug reports. Based on our findings, we provide suggestions for traditional bug management systems.
C1 [Bhatia, Aaditya; Asaduzzaman, Muhammad; Hassan, Ahmed E.] Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
   [Wang, Shaowei] Univ Manitoba, Dept Comp Sci, Winnipeg, MB R3T 2N2, Canada.
C3 Queens University - Canada; University of Manitoba
RP Wang, SW (corresponding author), Univ Manitoba, Dept Comp Sci, Winnipeg, MB R3T 2N2, Canada.
EM aaditya.bhatia@cs.queensu.ca; shaowei@cs.umanitoba.ca;
   muhammad.asaduzzaman@cs.queensu.ca; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX This research was supported by the Natural Sciences and Engineering
   Research Council of Canada (NSERC).
CR Ahasanuzzaman M, 2020, EMPIR SOFTW ENG, V25, P1493, DOI 10.1007/s10664-019-09743-4
   [Anonymous], 2007, P 2014 WORKSH ECL TE, DOI 10.1145/1328279.1328284
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   Arya D, 2019, PROC INT CONF SOFTW, P454, DOI 10.1109/ICSE.2019.00058
   Azad S, 2017, ACM T SOFTW ENG METH, V25, DOI 10.1145/2990497
   Badashian AS, 2016, LECT NOTES COMPUT SC, V9633, P231, DOI 10.1007/978-3-662-49665-7_14
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bhattacharya P, 2013, EUR CON SFTWR MTNCE, P133, DOI 10.1109/CSMR.2013.23
   Breu S, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P301
   Chaparro O, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P396, DOI 10.1145/3106237.3106285
   Chen CW, 2018, IEEE INT SYMP CIRC S, DOI 10.1109/ISCAS.2018.8351436
   Chen T, 2014, PROCEEDINGS OF THE FIFTH INTERNATIONAL SYMPOSIUM ON TEST AUTOMATION & INSTRUMENTATION, VOLS 1 AND 2, P82
   Cheng J., 2014, P 8 INT AAAI C WEBL, P1
   Dal Sasso T, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P164, DOI 10.1109/QRS.2016.28
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P225, DOI 10.1109/WCRE.2012.32
   Fischer F, 2017, P IEEE S SECUR PRIV, P121, DOI 10.1109/SP.2017.31
   Fishbach A, 2010, SOC PERSONAL PSYCHOL, V4, P517, DOI 10.1111/j.1751-9004.2010.00285.x
   Huang Y, 2018, IEEE INT CONF AUTOM, P214, DOI 10.1145/3238147.3238208
   Ilgen DR, 2000, APPL PSYCHOL-INT REV, V49, P550, DOI 10.1111/1464-0597.00031
   Just S, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P82, DOI 10.1109/VLHCC.2008.4639063
   Liu XL, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P118, DOI 10.1109/SANER.2018.8330202
   Meng N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P372, DOI 10.1145/3180155.3180201
   Movshovitz-Attias Dana, 2013, ACL
   Ragkhitwetsagul C, 2021, IEEE T SOFTWARE ENG, V47, P560, DOI 10.1109/TSE.2019.2900307
   Rahman MM, 2018, PROC IEEE INT CONF S, P473, DOI 10.1109/ICSME.2018.00057
   Rejaul KM, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP 2019), P1, DOI 10.1109/ICSSP.2019.00010
   Saha RK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P144, DOI 10.1109/CSMR-WCRE.2014.6747164
   Sirres R, 2018, EMPIR SOFTW ENG, V23, P2622, DOI 10.1007/s10664-017-9544-y
   Teng Wang, 2013, 2013 IEEE/ACM International Conference on Advances in Social Networks Analysis and Mining (ASONAM), P388
   Tian Y, 2016, EMPIR SOFTW ENG, V21, P2298, DOI 10.1007/s10664-015-9409-1
   Wang SW, 2020, IEEE T SOFTWARE ENG, V46, P1024, DOI 10.1109/TSE.2018.2874470
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P1552, DOI 10.1007/s10664-017-9558-5
   Wong E, 2013, IEEE INT CONF AUTOM, P562, DOI 10.1109/ASE.2013.6693113
   Wu YH, 2019, EMPIR SOFTW ENG, V24, P637, DOI 10.1007/s10664-018-9634-5
   Zhang HX, 2021, IEEE T SOFTWARE ENG, V47, P2520, DOI 10.1109/TSE.2019.2954319
   Zhang HX, 2021, IEEE T SOFTWARE ENG, V47, P850, DOI 10.1109/TSE.2019.2906315
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
   Zhou MH, 2015, IEEE T SOFTWARE ENG, V41, P82, DOI 10.1109/TSE.2014.2349496
   Zou WQ, 2015, P INT COMP SOFTW APP, P254, DOI 10.1109/COMPSAC.2015.57
NR 40
TC 4
Z9 5
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2022
VL 48
IS 2
BP 502
EP 518
DI 10.1109/TSE.2020.2994006
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZB4EB
UT WOS:000756796100009
DA 2024-07-18
ER

PT J
AU Lamothe, M
   Shang, WY
   Chen, TH
AF Lamothe, Maxime
   Shang, Weiyi
   Chen, Tse-Hsun (Peter)
TI A3: Assisting Android API Migrations Using Code Examples
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Task analysis; Documentation; Google; Software maintenance; Interviews;
   Indexes; API; software quality; mining software repositories; empirical
   software engineering
ID USAGE; SUPPORT
AB The fast-paced evolution of Android APIs has posed a challenging task for Android app developers. To leverage Androids frequently released APIs, developers must often spend considerable effort on API migrations. Prior research and Android official documentation typically provide enough information to guide developers in identifying the API calls that must be migrated and the corresponding API calls in an updated version of Android (what to migrate). However, API migration remains a challenging task since developers lack the knowledge of how to migrate the API calls. There exist code examples, such as Google Samples, that illustrate the usage of APIs. We posit that by analyzing the changes of API usage in code examples, we can learn API migration patterns to assist developers with API Migrations. In this paper, we propose an approach that learns API migration patterns from code examples, applies these patterns to the source code of Android apps for API migration, and presents the results to users as potential migration solutions. To evaluate our approach, we migrate API calls in open source Android apps by learning API migration patterns from code examples. We find that our approach can successfully learn API migration patterns and provide API migration assistance in 71 out of 80 cases. Our approach can either migrate API calls with little to no extra modifications needed or provide guidance to assist with the migrations. Through a user study, we find that adopting our approach can reduce the time spent on migrating APIs, on average, by 29 percent. Moreover, our interviews with app developers highlight the benefits of our approach when seeking API migrations. Our approach demonstrates the value of leveraging the knowledge contained in software repositories to facilitate API migrations.
C1 [Lamothe, Maxime; Shang, Weiyi; Chen, Tse-Hsun (Peter)] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 2W1, Canada.
C3 Concordia University - Canada
RP Shang, WY (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 2W1, Canada.
EM max_lam@encs.concordia.ca; shang@encs.concordia.ca;
   peterc@encs.concordia.ca
OI Chen, Tse-Hsun/0000-0003-4027-0905
CR Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   [Anonymous], 2014, RECOMMENDATION SYSTE, DOI DOI 10.1007/978-3-642-45135-5_4
   [Anonymous], 2018, SAMPLES ANDROID DEVE
   [Anonymous], 2007, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering
   [Anonymous], 2017, PACKAGE INDEX
   [Anonymous], 2011, P 2 INT WORKSHOP WEB
   [Anonymous], 2017, ANDROID DEVELOPERS R
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, DOI [DOI 10.1145/2025113.2025185, 10.1145/2025113.2025185]
   [Anonymous], 2018, Distribution dashboard
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Beaton W, 2018, ECLIPSE CORNER ARTIC
   Buse RPL, 2012, PROC INT CONF SOFTW, P782, DOI 10.1109/ICSE.2012.6227140
   Businge J, 2015, SOFTWARE QUAL J, V23, P107, DOI 10.1007/s11219-013-9221-3
   Businge J, 2013, EUR CON SFTWR MTNCE, P37, DOI 10.1109/CSMR.2013.14
   Cai HP, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P216, DOI 10.1145/3293882.3330564
   Calciati P, 2018, IEEE WORK CONF MIN S, P142, DOI 10.1145/3196398.3196449
   Cossette B.E., 2012, P ACM SIGSOFT 20 INT, p55:1, DOI DOI 10.1145/2393596.2393661
   Dagenais B, 2009, PROC INT CONF SOFTW, P599, DOI 10.1109/ICSE.2009.5070565
   de Souza C. R. B., 2004, Software Engineering Notes, V29, P221, DOI 10.1145/1041685.1029925
   Dig D, 2005, PROC IEEE INT CONF S, P389
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Fazzini M, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P204, DOI 10.1145/3293882.3330571
   Glass RL, 2001, IEEE SOFTWARE, V18, P112, DOI 10.1109/MS.2001.922739
   Glassman EL, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174154
   Godfrey M. W., 2001, Software Engineering Notes, V26, P50, DOI 10.1145/505894.505906
   Henkel J, 2005, PROC INT CONF SOFTW, P274
   Hoan AN, 2010, ACM SIGPLAN NOTICES, V45, P302, DOI 10.1145/1932682.1869486
   Holmes R., 2007, P OOPSLA WORKSH ECL, P70
   Hu X, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2269
   Phan HD, 2017, PROC IEEE ACM INT C, P47, DOI 10.1109/ICSE-C.2017.17
   Phan H, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P632, DOI 10.1145/3180155.3180230
   Jaspan C, 2009, LECT NOTES COMPUT SC, V5653, P27, DOI 10.1007/978-3-642-03013-0_3
   Jun Gao, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P388, DOI 10.1109/MSR.2019.00065
   Jun Li, 2013, 2013 IEEE 20th International Conference on Web Services (ICWS), P300, DOI 10.1109/ICWS.2013.48
   Kong PF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P78, DOI 10.1145/3293882.3330572
   Kong PF, 2019, IEEE T RELIAB, V68, P45, DOI 10.1109/TR.2018.2865733
   Lamothe M, 2018, IEEE WORK CONF MIN S, P503, DOI 10.1145/3196398.3196420
   Langdon WB, 2016, LECT NOTES COMPUT SC, V9962, P224, DOI 10.1007/978-3-319-47106-8_16
   Li J, 2015, PROCEEDINGS OF THE 2015 ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION (PEPM'15), P91, DOI 10.1145/2678015.2682534
   Li L, 2020, EMPIR SOFTW ENG, V25, P2058, DOI 10.1007/s10664-019-09764-z
   Li L, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P153, DOI 10.1145/3213846.3213857
   Li L, 2018, IEEE WORK CONF MIN S, P254, DOI 10.1145/3196398.3196419
   Li L, 2017, INFORM SOFTWARE TECH, V88, P67, DOI 10.1016/j.infsof.2017.04.001
   Li L, 2016, PROC IEEE INT CONF S, P411, DOI 10.1109/ICSME.2016.35
   Linares-Vasquez M., 2014, P 22 INT C PROGR COM, P83, DOI DOI 10.1145/2597008.2597155
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Mahmoudi M, 2018, IEEE WORK CONF MIN S, P220, DOI 10.1145/3196398.3196434
   Mandelin D, 2005, ACM SIGPLAN NOTICES, V40, P48, DOI 10.1145/1064978.1065018
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Mendez D, 2013, IEEE INT WORK C SO, P43, DOI 10.1109/SCAM.2013.6648183
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Moran K, 2018, PROC IEEE ACM INT C, P33, DOI 10.1145/3183440.3183492
   Moritz E, 2013, IEEE INT CONF AUTOM, P646, DOI 10.1109/ASE.2013.6693127
   Nguyen A.T., 2014, P 29 ACM IEEE INT C, P457, DOI [10.1145/2642937.2643010, DOI 10.1145/2642937.2643010]
   Niu HR, 2017, J SYST SOFTWARE, V129, P127, DOI 10.1016/j.jss.2016.07.026
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Sawant AA, 2018, EMPIR SOFTW ENG, V23, P2158, DOI 10.1007/s10664-017-9554-9
   Sawant AA, 2017, EMPIR SOFTW ENG, V22, P1348, DOI 10.1007/s10664-016-9444-6
   Sridharan M, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P1053
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Nguyen T, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1013, DOI 10.1145/2950290.2983931
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Nguyen TD, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P756, DOI 10.1145/2889160.2892661
   Venkatesh PK, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P131, DOI 10.1109/ICWS.2016.25
   Wang C., 2016, P 30 EUR C OBJ OR PR
   Wang J, 2013, IEEE WORK CONF MIN S, P319, DOI 10.1109/MSR.2013.6624045
   Wang SH, 2014, LECT NOTES COMPUT SC, V8831, P245, DOI 10.1007/978-3-662-45391-9_17
   Wang W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P224, DOI 10.1109/MSR.2015.28
   Wang W, 2013, IEEE WORK CONF MIN S, P61, DOI 10.1109/MSR.2013.6624006
   Wu W., 2010, P 32 ACM IEEE INT C, V1
   Wu W., 2010, P 32 ACM IEEE INT C
   Wu W, 2015, EMPIR SOFTW ENG, V20, P1126, DOI 10.1007/s10664-014-9317-9
   Xie Tao, 2006, Proc. MSR, P54
   Xu SZ, 2019, INT C PROGRAM COMPRE, P335, DOI 10.1109/ICPC.2019.00052
   Zhai J, 2016, PROC INT CONF SOFTW, P380, DOI 10.1145/2884781.2884881
   Zhong H, 2013, ACM SIGPLAN NOTICES, V48, P803, DOI [10.1145/2509136.2509523, 10.1145/2544173.2509523]
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
NR 78
TC 17
Z9 19
U1 1
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2022
VL 48
IS 2
BP 417
EP 431
DI 10.1109/TSE.2020.2988396
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZB4EB
UT WOS:000756796100004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhong, H
   Wang, XY
   Mei, H
AF Zhong, Hao
   Wang, Xiaoyin
   Mei, Hong
TI Inferring Bug Signatures to Detect Real Bugs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Tools; Benchmark testing; Software; Manuals; History;
   Sun; Bug fix; bug signature; partial code analysis
ID CODE CLONES; ASSIGNMENT; INFERENCE; SYSTEM
AB Static tools like Findbugs allow their users to manually define bug patterns, so they can detect more types of bugs, but due to the complexity and variety of programs, it is difficult to manually enumerate all bug patterns, especially for those related to API usages or project-specific rules. Therefore, existing bug-detection tools (e.g., Findbugs) based on manual bug patterns are insufficient in detecting many bugs. Meanwhile, with the rapid development of software, many past bug fixes accumulate in software version histories. These bug fixes contain valuable samples of illegal coding practices. The gap between existing bug samples and well-defined bug patterns motivates our research. In the literature, researchers have explored techniques on learning bug signatures from existing bugs, and a bug signature is defined as a set of program elements explaining the cause/effect of the bug. However, due to various limitations, existing approaches cannot analyze past bug fixes in large scale, and to the best of our knowledge, no previously unknown bugs were ever reported by their work. The major challenge to automatically analyze past bug fixes is that, bug-inducing inputs are typically not recorded, and many bug fixes are partial programs that have compilation errors. As a result, for most bugs in the version history, it is infeasible to reproduce them for dynamic analysis or to feed buggy/fixed code directly into static analysis tools which mostly depend on compilable complete programs. In this paper, we propose an approach, called DePa, that extracts bug signatures based on accurate partial-code analysis of bug fixes. With its support, we conduct the first large scale evaluation on 6,048 past bug fixes collected from four popular Apache projects. In particular, we use DePa to infer bug signatures from these fixes, and to check the latest versions of the four projects with the inferred bug signatures. Our results show that DePa detected 27 unique previously unknown bugs in total, including at least one bug from each project. These bugs are not detected by their developers nor other researchers. Among them, three of our reported bugs are already confirmed and repaired by their developers. Furthermore, our results show that the state-of-the-art tools detected only two of our found bugs, and our filtering techniques improve our precision from 25.5 to 51.5 percent.
C1 [Zhong, Hao; Mei, Hong] Shanghai Tong Univ, Dept Comp Sci & Engn, Shanghai 200240, Peoples R China.
   [Wang, Xiaoyin] Univ Texas San Antonio, Dept Comp Sci, San Antonio, TX 78249 USA.
C3 University of Texas System; University of Texas at San Antonio (UTSA)
RP Zhong, H (corresponding author), Shanghai Tong Univ, Dept Comp Sci & Engn, Shanghai 200240, Peoples R China.
EM zhonghao@sjtu.edu.cn; xiaoyin.wang@utsa.edu; meih@sjtu.edu.cn
RI Zhong, Hao/B-2435-2015
OI Zhong, Hao/0000-0002-4302-9183; Wang, Xiaoyin/0000-0002-9079-5534
FU National Key R&D Program of China [2018YFC083050]; NSF [CCF1846467,
   HRD-C-SPECC 1736209]
FX We appreciate the anonymous reviewers for their constructive comments.
   This SJTU authors are sponsored by the National Key R&D Program of China
   No. 2018YFC083050. The UTSA author is in part supported by NSF Grants
   CCF1846467 and HRD-C-SPECC 1736209.
CR AGRAWAL R, 1995, PROC INT CONF DATA, P3, DOI 10.1109/ICDE.1995.380415
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   Andersen J, 2012, IEEE INT CONF AUTOM, P382, DOI 10.1145/2351676.2351753
   [Anonymous], 2013, JOINT M FDN SOFTW EN
   [Anonymous], 2001, Proceedings of the 18th ACM Symposium on Operating Systems Principles
   [Anonymous], 2009, Technical report
   [Anonymous], 2007, 6th joint meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), DOI DOI 10.1145/1287624.1287632
   [Anonymous], 2014, The Java Virtual Machine Specification, Java SE 8 Edition
   [Anonymous], 2007, Tech. Rep. 2007-541
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   BIERMANN AW, 1972, IEEE T COMPUT, VC 21, P592, DOI 10.1109/TC.1972.5009015
   Boag Scott, 2007, W3C RECOMMENDATION
   Brünink M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P39, DOI 10.1145/2950290.2950314
   Cheng H, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P141
   Cheng X, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Cheng X, 2016, IEEE INT CONF AUTOM, P696, DOI 10.1145/2970276.2970363
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Christakis M, 2016, IEEE INT CONF AUTOM, P332, DOI 10.1145/2970276.2970347
   Dagenais B, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P313
   Dallmeier V., 2010, P 19 INT S SOFTWARE, P85, DOI [DOI 10.1145/1831708.1831719, 10.1145/1831708.1831719]
   Duala-Ekoko E, 2007, PROC INT CONF SOFTW, P158
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Göde N, 2009, EUR CON SFTWR MTNCE, P219, DOI 10.1109/CSMR.2009.20
   Hao Zhong, 2018, Empirical Software Engineering, V23, P2521, DOI 10.1007/s10664-017-9584-3
   Higo Y, 2020, EMPIR SOFTW ENG, V25, P1951, DOI 10.1007/s10664-020-09807-w
   Nguyen HA, 2012, IEEE T SOFTWARE ENG, V38, P1008, DOI 10.1109/TSE.2011.90
   Hovemeyer David., 2004, ACM Conference on Object-Oriented Programming Systems, Lan-guages, and Applications, OOPSLA '04, P132
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Huang SY, 2019, PROC INT CONF SOFTW, P889, DOI 10.1109/ICSE.2019.00095
   Nguyen HV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P791, DOI 10.1145/2568225.2568302
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Hwa-You Hsu, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P439, DOI 10.1109/ASE.2008.68
   Jang JY, 2012, P IEEE S SECUR PRIV, P48, DOI 10.1109/SP.2012.13
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kim M, 2007, PROC INT CONF SOFTW, P333
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Kim S., 2007, EUROPEAN SOFTWARE EN, P45
   Kim Y, 2010, INFORM SOFTWARE TECH, V52, P210, DOI 10.1016/j.infsof.2009.10.004
   Kuhn HW, 2005, NAV RES LOG, V52, P7, DOI 10.1002/nav.20053
   Le TDB, 2015, IEEE INT CONF AUTOM, P115, DOI 10.1109/ASE.2015.83
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Legunsen O, 2016, IEEE INT CONF AUTOM, P602, DOI 10.1145/2970276.2970356
   Lemieux C, 2015, IEEE INT CONF AUTOM, P81, DOI 10.1109/ASE.2015.71
   Li JY, 2012, PROC INT CONF SOFTW, P310, DOI 10.1109/ICSE.2012.6227183
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Lin Y, 2017, PROC INT CONF SOFTW, P393, DOI 10.1109/ICSE.2017.43
   Lin Y, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P520, DOI 10.1145/2786805.2786871
   Lo D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P345, DOI 10.1145/1595696.1595761
   Maoz S, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P96, DOI 10.1145/2786805.2786824
   Mechtaev S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P129, DOI 10.1145/3180155.3180247
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Meng N, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P329
   MUNKRES J, 1957, J SOC IND APPL MATH, V5, P32, DOI 10.1137/0105003
   Nguyen TT, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P383, DOI 10.1145/1595696.1595767
   Pandita R, 2012, PROC INT CONF SOFTW, P815, DOI 10.1109/ICSE.2012.6227137
   Pendlebury F, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P729
   Pham N. H., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P227, DOI 10.1145/1810295.1810336
   Pradel M, 2012, PROC INT CONF SOFTW, P288, DOI 10.1109/ICSE.2012.6227185
   Ramanathan MK, 2007, PROC INT CONF SOFTW, P240
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Saied MA, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P23, DOI 10.1109/SANER.2015.7081812
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Semura Y, 2017, ASIA PAC SOFWR ENG, P654, DOI 10.1109/APSEC.2017.80
   Shan Lu, 2007, Operating Systems Review, V41, P103, DOI 10.1145/1323293.1294272
   Shi L, 2011, LECT NOTES COMPUT SC, V6603, P416, DOI 10.1007/978-3-642-19811-3_29
   Svajlenko J, 2015, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2015.7332459
   Tian Y, 2012, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2012.6227176
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1838
   Wang HJ, 2021, IEEE T SOFTWARE ENG, V47, P2421, DOI 10.1109/TSE.2019.2949568
   Wang Y, 2018, PROC IEEE INT CONF S, P287, DOI 10.1109/ICSME.2018.00038
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Xu ZG, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1171, DOI 10.1145/3180155.3180237
   Zhong H, 2019, IEEE T SOFTWARE ENG, V45, P319, DOI 10.1109/TSE.2017.2782280
   Zhong H, 2017, IEEE INT CONF AUTOM, P671, DOI 10.1109/ASE.2017.8115677
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
   Zhong H, 2009, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2009.94
   Zuo Z., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis New York, NY, USA, P215
NR 84
TC 3
Z9 3
U1 4
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2022
VL 48
IS 2
BP 571
EP 584
DI 10.1109/TSE.2020.2996975
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZB4EB
UT WOS:000756796100013
OA Bronze
DA 2024-07-18
ER

PT J
AU Abdalkareem, R
   Mujahid, S
   Shihab, E
   Rilling, J
AF Abdalkareem, Rabe
   Mujahid, Suhaib
   Shihab, Emad
   Rilling, Juergen
TI Which Commits Can Be CI Skipped?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Java; Software; Prototypes; Tools; Virtual machining; Data collection;
   Manuals; Continuous integration; travis CI; build status; mining
   software repository
AB Continuous Integration (CI) frameworks such as Travis CI, automatically build and run tests whenever a new commit is submitted/pushed. Although there are many advantages in using CI, e.g., speeding up the release cycle and automating the test execution process, it has been noted that the CI process can take a very long time to complete. One of the possible reasons for such delays is the fact that some commits (e.g., changes to readme files) unnecessarily kick off the CI process. Therefore, the goal of this paper is to automate the process of determining which commits can be CI skipped. We start by examining the commits of 58 Java projects and identify commits that were explicitly CI skipped by developers. Based on the manual investigation of 1,813 explicitly CI skipped commits, we first devise an initial model of a CI skipped commit and use this model to propose a rule-based technique that automatically identifies commits that should be CI skipped. To evaluate the rule-based technique, we perform a study on unseen datasets extracted from ten projects and show that the devised rule-based technique is able to detect and label CI skip commits, achieving Areas Under the Curve (AUC) values between 0.56 and 0.98 (average of 0.73). Additionally, we show that, on average, our technique can reduce the number of commits that need to trigger the CI process by 18.16 percent. We also qualitatively triangulated our analysis on the importance of skipping the CI process through a survey with 40 developers. The survey results showed that 75 percent of the surveyed developers consider it to be nice, important or very important to have a technique that automatically flags CI skip commits. To operationalize our technique, we develop a publicly available prototype tool, called CI-Skipper, that can be integrated with any git repository and automatically mark commits that can be CI skipped.
C1 [Abdalkareem, Rabe; Mujahid, Suhaib; Shihab, Emad] Concordia Univ, Dept Comp Sci & Software Engn, Data Driven Anal Software DAS Lab, Montreal, PQ H3G 1M8, Canada.
   [Rilling, Juergen] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
C3 Concordia University - Canada; Concordia University - Canada
RP Abdalkareem, R (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Data Driven Anal Software DAS Lab, Montreal, PQ H3G 1M8, Canada.
EM rab_abdu@encs.concordia.ca; s_mujahi@encs.concordia.ca;
   eshihab@encs.concordia.ca; juergen.rilling@concordia.ca
RI Abdalkareem, Rabe/AET-2496-2022; Abdalkareem, Rabe/IQV-8842-2023
OI Abdalkareem, Rabe/0000-0001-9914-5434; Mujahid,
   Suhaib/0000-0003-2738-1387
CR [Anonymous], 2007, P 4 INT WORKSH MIN S
   [Anonymous], 2014, P 29 ACM IEEE INT C, DOI [10.1145/2642937.2643002, DOI 10.1145/2642937.2643002]
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Beller M, 2017, IEEE WORK CONF MIN S, P447, DOI 10.1109/MSR.2017.24
   Bissyandé TF, 2013, P INT COMP SOFTW APP, P303, DOI 10.1109/COMPSAC.2013.55
   Brandtner M, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P184, DOI 10.1109/CSMR-WCRE.2014.6747169
   Brindescu C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P322, DOI 10.1145/2568225.2568322
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cusumano M. A., 1995, MICROSOFT SECRETS TH
   Dösinger S, 2012, IEEE INT CONF AUTOM, P374, DOI 10.1145/2351676.2351751
   Downs J., 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P82, DOI 10.1109/ICSEA.2010.20
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   FLEISS JL, 1973, EDUC PSYCHOL MEAS, V33, P613, DOI 10.1177/001316447303300309
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Gallaba K, 2020, IEEE T SOFTWARE ENG, V46, P33, DOI 10.1109/TSE.2018.2838131
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Hassan AE, 2006, IEEE INT CONF AUTOM, P189
   Hilton M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P197, DOI 10.1145/3106237.3106270
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Leppanen Marko, 2015, IEEE Software, V32, P64, DOI 10.1109/MS.2015.50
   Linaker J., 2015, Guidelines for Conducting Surveys in Software Engineering
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   Manotas I, 2016, PROC INT CONF SOFTW, P237, DOI 10.1145/2884781.2884810
   Matsumoto K., 2012, 2012 15th International Conference on Network-Based Information Systems (NBiS 2012), P815, DOI 10.1109/NBiS.2012.60
   Micco J., 2012, GOOGLE TECH TALK
   Miller A, 2008, AGILE 2008, PROCEEDINGS, P289, DOI 10.1109/Agile.2008.8
   Rausch T, 2017, IEEE WORK CONF MIN S, P345, DOI 10.1109/MSR.2017.54
   Santos EA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P504, DOI [10.1109/MSR.2016.065, 10.1145/2901739.2903493]
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Seo H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P724, DOI 10.1145/2568225.2568255
   Shihab E., 2012, P ACM SIGSOFT 20 INT, P1
   Singer Janice, 2008, Guide to Advanced Empirical Software Engineering, P9
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Thompson Christopher, 2017, P 13 INT C PREDICTIV, P83
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Vasilescu B, 2014, EMPIR SOFTW ENG, V19, P955, DOI 10.1007/s10664-013-9244-1
   Wang XQ, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON MULTISENSOR FUSION AND INTEGRATION FOR INTELLIGENT SYSTEMS (MFI), P1
   Zampetti F, 2017, IEEE WORK CONF MIN S, P334, DOI 10.1109/MSR.2017.2
   Ziftci C, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P113, DOI 10.1109/ICSE-SEIP.2017.13
NR 41
TC 28
Z9 30
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2021
VL 47
IS 3
BP 448
EP 463
DI 10.1109/TSE.2019.2897300
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA RA1TM
UT WOS:000631200300002
DA 2024-07-18
ER

PT J
AU Noei, E
   Zhang, F
   Zou, Y
AF Noei, Ehsan
   Zhang, Feng
   Zou, Ying
TI Too Many User-Reviews! What Should App Developers Look at First?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Google; Measurement; Crawlers; Natural language processing; Computer
   bugs; Tools; Filtering; Mobile application; empirical study; software
   release; user-review
ID STRENGTH DETECTION; SENTIMENT
AB Due to the rapid growth in the number of mobile applications (apps) in the past few years, succeeding in mobile app markets has become ruthless. Online app markets, such as Google Play Store, let users rate apps on a five-star scale and leave feedback. Given the importance of high star-ratings to the success of an app, it is crucial to help developers find the key topics of user-reviews that are significantly related to star-ratings of a given category. Having considered the key topics of user-reviews, app developers can narrow down their effort to the user-reviews that matter to be addressed for receiving higher star-ratings. We study 4,193,549 user-reviews of 623 Android apps that were collected from Google Play Store in ten different categories. The results show that few key topics commonly exist across categories, and each category has a specific set of key topics. We also evaluated the identified key topics with respect to the changes that are made to each version of the apps for 19 months. We observed, for 77 percent of the apps, considering the key topics in the next versions shares a significant relationship with increases in star-ratings.
C1 [Noei, Ehsan; Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON K7L 3N6, Canada.
   [Zhang, Feng] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
C3 Queens University - Canada; Queens University - Canada
RP Noei, E (corresponding author), Queens Univ, Dept Elect & Comp Engn, Kingston, ON K7L 3N6, Canada.
EM e.noei@queensu.ca; feng@cs.queensu.ca; ying.zou@queensu.ca
RI Zhang, Feng/AAQ-3506-2021; Zou, Ying/KLC-9380-2024
OI Noei, Ehsan/0000-0001-7192-4604; Zhang, Feng/0000-0001-9805-395X
CR Allacronyms, 2017, ACR ABBR
   [Anonymous], 2006, Proceedings of the 2006 Conference on Empirical Methods in Natural Language Processing (EMNLP 2006), DOI DOI 10.3115/1610075.1610135
   [Anonymous], 1992, MANY ITERATIONS GIBB
   [Anonymous], 2017, HARRELL MISCELLANEOU
   [Anonymous], 2006, PROC 5 INT C LANGUAG
   [Anonymous], 2013, Proceedings of the 27th International BCS Human Computer Interaction Conference
   [Anonymous], 2007, P 2007 JOINT C EMP M
   [Anonymous], 2005, TEXT ANAL TRANSLATIO
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Basili V. R., 1992, 519681 U MAR COLL PA
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Bird Steven, 2009, NATURAL LANGUAGE PRO, DOI DOI 10.1007/S10579-010-9124-X
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Cao J, 2009, NEUROCOMPUTING, V72, P1775, DOI 10.1016/j.neucom.2008.06.011
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Ciurumelea A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2017.7884612
   Crystal D., 2011, Dictionary of Linguistics and Phonetics, V30
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Doan A, 2011, COMMUN ACM, V54, P86, DOI 10.1145/1924421.1924442
   Feldman B., 2005, RELATIVE IMPORTANCE, DOI DOI 10.2139/SSRN.2255827
   Foerderer J., 2018, INFORM SYST RES
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Gilks W., 2005, Markov Chain Monte Carlo
   Google, 2007, GOOGL PLAY STOR
   Griffiths T., 2002, Standford University, V518, P1
   Griffiths TL, 2004, P NATL ACAD SCI USA, V101, P5228, DOI 10.1073/pnas.0307752101
   Grömping U, 2006, J STAT SOFTW, V17, DOI 10.18637/jss.v017.i01
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Harrell F.E., 2001, Regression modeling strategies: with applications to linear models, logistic regression, and survival analysis
   Held G., 1991, DATA COMPRESSION TEC
   Henriksson A, 2014, J BIOMED SEMANT, V5, DOI 10.1186/2041-1480-5-6
   Hoffman M., 2010, P ADV NEUR INF PROC, V23:856-864
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Jazzy, 2017, JAZZ SPELL CHECK
   Johann T, 2017, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2017.71
   Jongeling R, 2015, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSM.2015.7332508
   Khalid H, 2016, IEEE SOFTWARE, V33, P34, DOI 10.1109/MS.2015.29
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Kim H.-W., 2011, P 11 INT DSI 16 APDS, V16, P173
   Lee H., 2011, P 15 C COMPUTATIONAL, P28
   Leskovec J, 2014, MINING OF MASSIVE DATASETS, 2ND EDITION, P1
   LIN JH, 1991, IEEE T INFORM THEORY, V37, P145, DOI 10.1109/18.61115
   Lovins JulieB., 1968, Development of a Stemming Algorithm
   Maalej W, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.153
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Martin W., LEXICOGRAPHY PRINCIP
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   Netlingo, 2017, TOP 50 MOST POP TEXT
   Nguyen T.N. D., 2010, Proceedings of the International Conference on Software Maintenance, P1, DOI DOI 10.1109/ICSM.2010.5609560
   Nigam K, 2000, MACH LEARN, V39, P103, DOI 10.1023/A:1007692713085
   Noei E., 2018, DATA SCRIPTS
   Noei E, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P283, DOI 10.1145/3236024.3236044
   Noei E, 2017, EMPIR SOFTW ENG, V22, P3088, DOI 10.1007/s10664-017-9507-3
   Noei E, 2016, INFORM SOFTWARE TECH, V75, P135, DOI 10.1016/j.infsof.2016.03.007
   Optimaize, 2017, LANGUAGE DETECTION L
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Panichella S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1023, DOI 10.1145/2950290.2983938
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Phan X.-H., 2008, JGibbLDA
   Prescott SL, 1999, LANCET, V353, P196, DOI 10.1016/S0140-6736(98)05104-6
   Rombach H. D., 2002, ENCY SOFTWARE ENG, V2, P578
   Shull F., 2007, SOFTWARE ENG
   Statista, 2016, NUMB APPS AV LEAD AP
   Stats A., 2018, NUMBER ANDROID APPL
   Taba SES, 2013, PROC IEEE INT CONF S, P270, DOI 10.1109/ICSM.2013.38
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Thelwall M, 2012, J AM SOC INF SCI TEC, V63, P163, DOI 10.1002/asi.21662
   Thelwall M, 2010, J AM SOC INF SCI TEC, V61, P2544, DOI 10.1002/asi.21416
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Witten IH, 2011, MOR KAUF D, P1
NR 77
TC 37
Z9 37
U1 4
U2 25
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2021
VL 47
IS 2
BP 367
EP 378
DI 10.1109/TSE.2019.2893171
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QG7HE
UT WOS:000617753400009
DA 2024-07-18
ER

PT J
AU Ghiotto, G
   Murta, L
   Barros, M
   van der Hoek, A
AF Ghiotto, Gleiph
   Murta, Leonardo
   Barros, Marcio
   van der Hoek, Andre
TI On the Nature of Merge Conflicts: A Study of 2,731 Open Source Java
   Projects Hosted by GitHub
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tools; History; Electronic mail; Java; Software; Task analysis; Software
   merge; merge conflict; merge resolution
ID CONFIGURATION MANAGEMENT; SOFTWARE
AB When multiple developers change a software system in parallel, these concurrent changes need to be merged to all appear in the software being developed. Numerous merge techniques have been proposed to support this task, but none of them can fully automate the merge process. Indeed, it has been reported that as much as 10 to 20 percent of all merge attempts result in a merge conflict, meaning that a developer has to manually complete the merge. To date, we have little insight into the nature of these merge conflicts. What do they look like, in detail? How do developers resolve them? Do any patterns exist that might suggest new merge techniques that could reduce the manual effort? This paper contributes an in-depth study of the merge conflicts found in the histories of 2,731 open source Java projects. Seeded by the manual analysis of the histories of five projects, our automated analysis of all 2,731 projects: (1) characterizes the merge conflicts in terms of number of chunks, size, and programming language constructs involved, (2) classifies the manual resolution strategies that developers use to address these merge conflicts, and (3) analyzes the relationships between various characteristics of the merge conflicts and the chosen resolution strategies. Our results give rise to three primary recommendations for future merge techniques, that - when implemented - could on one hand help in automatically resolving certain types of conflicts and on the other hand provide the developer with tool-based assistance to more easily resolve other types of conflicts that cannot be automatically resolved.
C1 [Ghiotto, Gleiph; Murta, Leonardo] Fluminense Fed Univ, Comp Inst, BR-24220900 Niteroi, RJ, Brazil.
   [Ghiotto, Gleiph] Univ Fed Juiz de Fora, Comp Sci Dept, BR-36036900 Juiz De Fora, MG, Brazil.
   [Barros, Marcio] Univ Fed Estado Rio de Janeiro, Informat Syst Program, Rio de Janeiro, RJ, Brazil.
   [van der Hoek, Andre] Univ Calif Irvine, Dept Informat, Irvine, CA 92697 USA.
C3 Universidade Federal Fluminense; Universidade Federal de Juiz de Fora;
   Universidade Federal do Estado do Rio de Janeiro; University of
   California System; University of California Irvine
RP Barros, M (corresponding author), Univ Fed Estado Rio de Janeiro, Informat Syst Program, Rio de Janeiro, RJ, Brazil.
EM gmenezes@ic.uff.br; leomurta@ic.uff.br; marcio.barros@uniriotec.br;
   andre@ics.uci.edu
RI Barros, Marcio/AAD-2848-2022
OI Barros, Marcio/0000-0001-8136-9624; van der Hoek,
   Andre/0000-0001-7917-932X
FU CAPES; CNPq; FAPERJ; NSF [CCF-1414197]
FX The authors thank CAPES, CNPq, and FAPERJ for the financial support.
   Part of this work was supported by the NSF under grant number
   CCF-1414197.
CR Accioly P, 2017, Empirical software engineering, P1
   Ahmed I, 2017, INT SYMP EMP SOFTWAR, P58, DOI 10.1109/ESEM.2017.12
   [Anonymous], 1976, 41 CSTR BELL LAB
   Apel S., 2011, P 19 ACM SIGSOFT S 1, P190, DOI DOI 10.1145/2025113.2025141
   Apel S, 2012, IEEE INT CONF AUTOM, P120, DOI 10.1145/2351676.2351694
   Apiwattanapong T, 2007, AUTOMAT SOFTW ENG, V14, P3, DOI 10.1007/s10515-006-0002-0
   Berlage T., 1993, Sixth Annual Symposium on User Interface Software and Technology. Proceedings of the ACM Symposium on User Interface Software and Technology, P249, DOI 10.1145/168642.168668
   Berlin D., 2006, Practical Subversion, Vsecond
   BERZINS V, 1994, ACM T PROGR LANG SYS, V16, P1875, DOI 10.1145/197320.197403
   Biehl JT, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1313
   Binkley D., 1995, ACM Transactions on Software Engineering and Methodology, V4, P3, DOI 10.1145/201055.201056
   Brun Y., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), P168, DOI [10.1145/2025113.2025139, DOI 10.1145/2025113.2025139]
   Buffenbarger J., 1995, Software Configuration Management. ICSE SCM-4 and SCM-5 Workshops. Selected Papers, P153
   Cavalcanti G, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133883
   Cavalcanti G, 2015, INT SYMP EMP SOFTWAR, P267, DOI 10.1109/ESEM.2015.7321191
   Chacon Scott., 2009, Pro Git, V1st, DOI DOI 10.1016/j.rse.2010.01.021
   Devanbu P, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P543, DOI 10.1109/ICSE.2015.190
   Dewan P, 2007, ECSCW 2007: PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK, P159, DOI 10.1007/978-1-84800-031-5_9
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Estler HC, 2013, IEEE AUS SOFT ENGR, P201, DOI 10.1109/ASWEC.2013.32
   Guimaraes ML, 2012, PROC INT CONF SOFTW, P342, DOI 10.1109/ICSE.2012.6227180
   Haifeng Shen, 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P293, DOI 10.1109/CMPSAC.2004.1342846
   Hunt JJ, 2002, PROC IEEE INT CONF S, P511, DOI 10.1109/ICSM.2002.1167812
   JACKSON D, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P243, DOI 10.1109/ICSM.1994.336770
   Jae young Bang, 2010, 2010 32nd International Conference on Software Engineering (ICSE), P243, DOI 10.1145/1810295.1810341
   Kasi BK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P732, DOI 10.1109/ICSE.2013.6606619
   Lessenich O, 2018, AUTOMAT SOFTW ENG, V25, P279, DOI 10.1007/s10515-017-0227-0
   Lessenich O, 2015, AUTOMAT SOFTW ENG, V22, P367, DOI 10.1007/s10515-014-0151-5
   Mckee S, 2017, PROC IEEE INT CONF S, P467, DOI 10.1109/ICSME.2017.53
   Mendonca T, 2017, ANN IEEE SYST CONF, P15
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   MILLER W, 1985, SOFTWARE PRACT EXPER, V15, P1025, DOI 10.1002/spe.4380151102
   Murta L, 2007, SCI COMPUT PROGRAM, V65, P249, DOI 10.1016/j.scico.2006.05.011
   Myers EW, 1986, ALGORITHMICA, V1, P251, DOI 10.1007/BF01840446
   Nozaki T., 2010, Denisia, P235
   O'Sullivan Bryan, 2009, ACM Queue, V7, DOI [10.1145/1562164.1562183, 10.1145/1594204.1595636]
   Oster G., 2006, CSCW 06 P 2006 20 AN, P259, DOI DOI 10.1145/1180875.1180916
   Portillo-Rodriguez Javier, 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P13, DOI 10.1109/ICGSE.2010.12
   Sarma A, 2012, IEEE T SOFTWARE ENG, V38, P889, DOI 10.1109/TSE.2011.64
   Shen H., 2005, Proceedings. 19th IEEE International Parallel and Distributed Processing Symposium
   Weber B, 2012, 5TH INTERNATIONAL SYMPOSIUM ON BIOSORPTION AND BIOREMEDIATION, P151
   Westfechtel B., 1991, Proceedings of the 3rd International Workshop on Software Configuration Management, P68, DOI 10.1145/111062.111071
   Wloka J, 2009, PROC INT CONF SOFTW, P507, DOI 10.1109/ICSE.2009.5070549
   Yuzuki R, 2015, 2015 IEEE 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN), P21, DOI 10.1109/SWAN.2015.7070484
   Zimmermann T., 2007, P 4 INT WORKSH MIN S
NR 45
TC 32
Z9 34
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2020
VL 46
IS 8
BP 892
EP 915
DI 10.1109/TSE.2018.2871083
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA NB6VD
UT WOS:000560651400004
OA Bronze
DA 2024-07-18
ER

PT J
AU Fucci, D
   Scanniello, G
   Romano, S
   Juristo, N
AF Fucci, Davide
   Scanniello, Giuseppe
   Romano, Simone
   Juristo, Natalia
TI Need for Sleep: The Impact of a Night of Sleep Deprivation on Novice
   Developers' Performance
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Sleep; Software; Task analysis; Biomedical monitoring; Software
   engineering; Programming; Functional magnetic resonance imaging; Sleep
   deprivation; psycho-physiological factors; test-first development
ID PSYCHOMOTOR VIGILANCE PERFORMANCE; NEUROCOGNITIVE CONSEQUENCES; SOFTWARE
   DEVELOPERS; TEST PVT; MOOD; PRODUCTIVITY; SENSITIVITY; VALIDATION;
   KNOWLEDGE; THINKING
AB We present a quasi-experiment to investigate whether, and to what extent, sleep deprivation impacts the performance of novice software developers using the agile practice of test-first development (TFD). We recruited 45 undergraduates, and asked them to tackle a programming task. Among the participants, 23 agreed to stay awake the night before carrying out the task, while 22 slept normally. We analyzed the quality (i.e., the functional correctness) of the implementations delivered by the participants in both groups, their engagement in writing source code (i.e., the amount of activities performed in the IDE while tackling the programming task) and ability to apply TFD (i.e., the extent to which a participant is able to apply this practice). By comparing the two groups of participants, we found that a single night of sleep deprivation leads to a reduction of 50 percent in the quality of the implementations. There is notable evidence that the developers' engagement and their prowess to apply TFD are negatively impacted. Our results also show that sleep-deprived developers make more fixes to syntactic mistakes in the source code. We conclude that sleep deprivation has possibly disruptive effects on software development activities. The results open opportunities for improving developers' performance by integrating the study of sleep with other psycho-physiological factors in which the software engineering research community has recently taken an interest in.
C1 [Fucci, Davide] Univ Hamburg, HITeC, D-20146 Hamburg, Germany.
   [Scanniello, Giuseppe; Romano, Simone] Univ Basilicata, DiMIE, I-85100 Potenza, Italy.
   [Juristo, Natalia] Tech Univ Madrid, Madrid 28040, Spain.
C3 University of Hamburg; University of Basilicata; Universidad Politecnica
   de Madrid
RP Scanniello, G (corresponding author), Univ Basilicata, DiMIE, I-85100 Potenza, Italy.
EM fucci@informatik.uni-hamburg.de; giuseppe.scanniello@unibas.it;
   simone.romano@unibas.it; natalia@fi.upm.es
RI Romano, Simone/JVZ-6529-2024; Fucci, Davide/C-1463-2015; Romano,
   Simone/ABD-6504-2020
OI Fucci, Davide/0000-0002-0679-4361; Romano, Simone/0000-0003-4880-3622;
   Scanniello, Giuseppe/0000-0003-0024-7508
CR Abdullah S, 2016, UBICOMP'16: PROCEEDINGS OF THE 2016 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING, P178, DOI 10.1145/2971648.2971712
   Abrahao S, 2013, IEEE T SOFTWARE ENG, V39, P327, DOI 10.1109/TSE.2012.27
   Alhola Paula, 2007, Neuropsychiatr Dis Treat, V3, P553
   Althoff T, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P113, DOI 10.1145/3038912.3052637
   [Anonymous], 2013, Psychophysiology: Human behavior physiological response
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   Antonovsky A., 1979, HLTH STRESS COPING N
   Basili V., 1994, The Goal Question Metric Approach, P528
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Basner M, 2011, ACTA ASTRONAUT, V69, P949, DOI 10.1016/j.actaastro.2011.07.015
   Basner M, 2011, SLEEP, V34, P581, DOI 10.1093/sleep/34.5.581
   Becker K, 2015, INFORM SOFTWARE TECH, V57, P494, DOI 10.1016/j.infsof.2014.06.003
   Bednarik R., 2006, Proceedings. ETRA 2006. Symposium on Eye Tracking Research and Applications, P125, DOI 10.1145/1117309.1117356
   Bergersen GR, 2014, IEEE T SOFTWARE ENG, V40, P1163, DOI 10.1109/TSE.2014.2348997
   Bergersen GR, 2011, J INDIVID DIFFER, V32, P201, DOI 10.1027/1614-0001/a000052
   Blatter K, 2006, BEHAV BRAIN RES, V168, P312, DOI 10.1016/j.bbr.2005.11.018
   Brown S, 2015, P HUMAN FACTORS ERGO, P1167
   Chilton MA, 2005, J MANAGE INFORM SYST, V22, P193, DOI 10.1080/07421222.2005.11045849
   Claes M, 2017, IEEE WORK CONF MIN S, P243, DOI 10.1109/MSR.2017.3
   Conover W. J., 1998, PRACTICAL NONPARAMET, V3rd
   DAVID MM, 1991, ACTA PSYCHIAT SCAND, V84, P33, DOI 10.1111/j.1600-0447.1991.tb01418.x
   Dinges D. F., 2004, SLEEP DEBT SCI EVIDE
   Dinges D.F., 2012, Psychomotor vigilance self test on ISS
   Dinges DF, 1995, J SLEEP RES, V4, P4, DOI 10.1111/j.1365-2869.1995.tb00220.x
   Dinges DF, 1997, SLEEP, V20, P267
   DINGES DF, 1985, BEHAV RES METH INSTR, V17, P652, DOI 10.3758/BF03200977
   DOUGLAS NJ, 1992, LANCET, V339, P347, DOI 10.1016/0140-6736(92)91660-Z
   Drummond SPA, 2005, SLEEP, V28, P1059
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   Durmer JS, 2005, SEMIN NEUROL, V25, P117, DOI 10.1055/s-0029-1237117
   Elkner J., USING TEST DRIVEN DE
   Engle-Friedman M, 2014, SLEEP SCI, V7, P213, DOI 10.1016/j.slsci.2014.11.001
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Feitelson D. G., 2015, CORR
   Ferrara M, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0120029
   Floyd B, 2017, PROC INT CONF SOFTW, P175, DOI 10.1109/ICSE.2017.24
   Fritz T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P402, DOI 10.1145/2568225.2568266
   Fucci Davide, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P103, DOI 10.1109/ESEM.2013.15
   Fucci D, 2015, INFORM SOFTWARE TECH, V68, P82, DOI 10.1016/j.infsof.2015.08.004
   Goel N, 2009, SEMIN NEUROL, V29, P320, DOI 10.1055/s-0029-1237117
   Harrison Y, 1999, ORGAN BEHAV HUM DEC, V78, P128, DOI 10.1006/obhd.1999.2827
   Harrison Y, 2000, J EXP PSYCHOL-APPL, V6, P236, DOI 10.1037//1076-898X.6.3.236
   Hockey GRJ, 1998, HUM FACTORS, V40, P233, DOI 10.1518/001872098779480479
   Höfer A, 2009, LECT NOTES BUS INF P, V31, P33
   HORNE JA, 1988, SLEEP, V11, P528, DOI 10.1093/sleep/11.6.528
   Ikutani Y, 2014, 15 IEEE ACIS INT C S, P1, DOI DOI 10.1109/SNPD.2014.6888727
   Jeffries R, 2007, IEEE SOFTWARE, V24, P24, DOI 10.1109/MS.2007.75
   John LK, 2012, PSYCHOL SCI, V23, P524, DOI 10.1177/0956797611430953
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kaida K, 2006, CLIN NEUROPHYSIOL, V117, P1574, DOI 10.1016/j.clinph.2006.03.011
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Khitrov MY, 2014, BEHAV RES METHODS, V46, P140, DOI 10.3758/s13428-013-0339-9
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kolb B., 2012, INTRO BRAIN BEHAV, P481
   Kou HB, 2010, AUTOMAT SOFTW ENG, V17, P57, DOI 10.1007/s10515-009-0058-8
   Kramer AF, 1991, Multiple Task Performance, DOI DOI 10.1201/9781003069447-14/PHYSIOLOGICAL-METRICS-MENTAL-WORKLOAD-REVIEW-RECENT-PROGRESS-ARTHUR-KRAMER
   Kuzniarz L, 2004, PROG COMPREHEN, P14, DOI 10.1109/WPC.2004.1311043
   LINDE L, 1992, PSYCHOL RES-PSYCH FO, V54, P127, DOI 10.1007/BF00937141
   Madeyski L., 2017, EMPIR SOFTW ENG, P1
   Madeyski L, 2010, TEST-DRIVEN DEVELOPMENT, P197, DOI 10.1007/978-3-642-04288-1_10
   Mäntylä M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P247, DOI [10.1109/MSR.2016.033, 10.1145/2901739.2901752]
   Maquet P, 2001, SCIENCE, V294, P1048, DOI 10.1126/science.1062856
   Mark G, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P5517, DOI 10.1145/2858036.2858437
   Martin RC, 2007, IEEE SOFTWARE, V24, P32, DOI 10.1109/MS.2007.85
   Monk TH, 2007, SLEEP, V30, P1402, DOI 10.1093/sleep/30.11.1402
   Müller SC, 2016, PROC INT CONF SOFTW, P452, DOI 10.1145/2884781.2884803
   Müller SC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P688, DOI 10.1109/ICSE.2015.334
   Ostberg JP, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2017), P22, DOI 10.1109/SEmotion.2017.4
   Parnin C, 2011, CONF PROC INT SYMP C, P197, DOI 10.1109/ICPC.2011.49
   Philip P, 2004, J SLEEP RES, V13, P105, DOI 10.1111/j.1365-2869.2004.00399.x
   Pilcher JJ, 1996, SLEEP, V19, P318, DOI 10.1093/sleep/19.4.318
   Pilcher JJ, 2015, J PSYCHOSOM RES, V79, P657, DOI 10.1016/j.jpsychores.2015.05.003
   Radevski S, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P93, DOI 10.1109/CHASE.2015.28
   Rasch B, 2013, PHYSIOL REV, V93, P681, DOI 10.1152/physrev.00032.2012
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Rosekind MR, 2010, J OCCUP ENVIRON MED, V52, P91, DOI 10.1097/JOM.0b013e3181c78c30
   Sarkar S, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2017), P32, DOI 10.1109/SEmotion.2017.2
   Scanniello G, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2699696
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Sharif Bonita, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P196, DOI 10.1109/ICPC.2010.41
   Shattuck N.L., 2015, Sleep patterns, mood, psychomotor vigilance performance, and command resilience of watchstanders on the five and dime watchbill
   Shattuck N.L., 2014, Work and rest patterns and psychomotor vigilance performance of crewmembers of the USS Jason Dunham: a comparison of the 3/9 and 6/6 watchstanding schedules
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Siegmund J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P140, DOI 10.1145/3106237.3106268
   Siegmund J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P378, DOI 10.1145/2568225.2568252
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Sullivan Gail M, 2012, J Grad Med Educ, V4, P279, DOI 10.4300/JGME-D-12-00156.1
   TAUB JM, 1973, PSYCHOPHYSIOLOGY, V10, P559, DOI 10.1111/j.1469-8986.1973.tb00805.x
   Thomas M, 2000, J SLEEP RES, V9, P335, DOI 10.1046/j.1365-2869.2000.00225.x
   TOTTERDELL P, 1994, SLEEP, V17, P466, DOI 10.1093/sleep/17.5.466
   Tucker-Drob EM, 2011, PSYCHOL METHODS, V16, P298, DOI 10.1037/a0023349
   V. One, 2015, 9 ANN STATE AGILE SU
   Vegas S, 2016, IEEE T SOFTWARE ENG, V42, P120, DOI 10.1109/TSE.2015.2467378
   Verelst J, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17
   VIDACEK S, 1986, ERGONOMICS, V29, P1583
   Walker MP, 2009, ANN NY ACAD SCI, V1156, P168, DOI 10.1111/j.1749-6632.2009.04416.x
   Wastell D., 1993, Accounting, Management and Information Technology, V3, P121
   Weaver TE, 2007, SLEEP, V30, P711, DOI 10.1093/sleep/30.6.711
   Williams L, 2003, IEEE SOFTWARE, V20, P16, DOI 10.1109/MS.2003.1196315
   Wohlin C., 2012, Experimentation in Software Engineering
   Yoo SS, 2007, NAT NEUROSCI, V10, P385, DOI 10.1038/nn1851
NR 103
TC 12
Z9 13
U1 2
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2020
VL 46
IS 1
BP 1
EP 19
DI 10.1109/TSE.2018.2834900
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA KE2MI
UT WOS:000508392800001
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Mesgari, M
   Okoli, C
   de Guinea, AO
AF Mesgari, Mostafa
   Okoli, Chitu
   de Guinea, Ana Ortiz
TI Creating Rich and Representative Personas by Discovering Affordances
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Personas; affordances; mixed qualitative and quantitative methods; user
   modeling; interview; card sorting; cluster analysis; systems design and
   implementation; design and evaluation of IT infrastructure;
   questionnaire surveys
ID INFORMATION-SYSTEMS RESEARCH; TECHNOLOGIES; USER
AB During the last decade, information system designers have used the persona technique to put user needs and preferences at the center of all development decisions. Persona development teams draw on qualitative data, quantitative data or a combination of both to develop personas that are representative of the target users. Despite the benefits of both approaches, qualitative methods are limited by the cognitive capabilities of the experts, whereas quantitative methods lack contextual richness. To gain the advantages of both approaches, this article suggests a mixed qualitative-quantitative approach to create user personas based on the patterns of the affordances they actualize rather than merely the actions they take. It enriches personas by referring to the purposes fulfilled through affordance actualizations, and it grounds personas in readily available objective log data. This study illustrates the practical value of the proposed methodology by empirically creating personas based on real user data. Furthermore, it demonstrates its value by having practitioners compare the suggested method to that of qualitative-only and quantitative-only methods.
C1 [Mesgari, Mostafa] Loyola Marymount Univ, Coll Business Adm, Los Angeles, CA 90045 USA.
   [Okoli, Chitu] Univ Cote dAzur, SKEMA Business Sch, Paris, France.
   [de Guinea, Ana Ortiz] Univ Deusto, Deusto Business Sch, Dept Strategy & Informat Syst, Bilbao 48007, Bizkaia, Spain.
   [de Guinea, Ana Ortiz] HEC Montreal, Dept Informat Technol, Montreal, PQ H3T 2A7, Canada.
C3 Loyola Marymount University; Universite Cote d'Azur; SKEMA Business
   School; University of Deusto; Universite de Montreal; HEC Montreal
RP Mesgari, M (corresponding author), Loyola Marymount Univ, Coll Business Adm, Los Angeles, CA 90045 USA.
EM mostafa.mesgari@lmu.edu; chitu.okoli@skema.edu;
   ana.ortizdeguinea@deusto.es
RI Okoli, Chitu/G-1498-2010
OI Okoli, Chitu/0000-0001-5574-7572; Ortiz de Guinea,
   Ana/0000-0002-1946-3457; Mesgari, Mostafa (Arvin)/0000-0001-6162-3525
CR Adlin T., 2006, Extended Abstracts on Human Factors in Computing Systems, CHI'06, P13, DOI DOI 10.1145/1125451.1125456
   ANDERSON JC, 1991, J APPL PSYCHOL, V76, P732, DOI 10.1037/0021-9010.76.5.732
   Aoyama M, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P85, DOI 10.1109/RE.2005.50
   Beleites C., 2017, HYPERSPEC PACKAGE HA
   Blin F, 2016, LANG STUD SCI ENGINE, V2, P41, DOI 10.1075/lsse.2.03bli
   Borcard D, 2011, USE R, P1, DOI 10.1007/978-1-4419-7976-6
   Brickey J., 2010, P ACM C INF SYST
   Brickey J, 2012, IEEE T SOFTWARE ENG, V38, P537, DOI 10.1109/TSE.2011.60
   Broschinsky D, 2008, AGILE 2008, PROCEEDINGS, P543, DOI 10.1109/Agile.2008.91
   Carlile PR, 2002, ORGAN SCI, V13, P442, DOI 10.1287/orsc.13.4.442.2953
   Chang Y., 2008, Proceedings of the 5th Nordic Conference on Human-Computer Interaction: Building Bridges (NordiCHI 08), P439, DOI [DOI 10.1145/1463160.1463214, https://doi.org/10.1145/1463160.1463214]
   Charmaz K., 2006, CONSTRUCTING GROUNDE, DOI DOI 10.7748/NR.13.4.84.S4
   Columbus L., 2013, Forbes
   Compeau D, 2012, INFORM SYST RES, V23, P1093, DOI 10.1287/isre.1120.0423
   Cooper A., 1999, INMATES ARE RUNNING, V261
   de Guinea AO, 2013, MIS QUART, V37, P1165, DOI 10.25300/MISQ/2013/37.4.08
   Ehliger Samantha, 2016, FEDSCOOP        1021
   Faily S., 2013, P 5 ACM SIGCHI S ENG, P69, DOI [DOI 10.1145/2494603.2480318, 10.1145/2480296.2480318]
   Faily S, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2267
   Faraj S, 2011, ORGAN SCI, V22, P1224, DOI 10.1287/orsc.1100.0614
   FLEISS JL, 1979, PSYCHOL BULL, V86, P974, DOI 10.1037/0033-2909.86.5.974
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Flinders Karl, 2015, COMPUT WEEKLY   0619
   Ford D, 2017, INT SYMP EMP SOFTWAR, P394, DOI 10.1109/ESEM.2017.54
   Glass Robert L, 2001, IEEE software, V18, P112, DOI [DOI 10.1109/MS.2001.965816, 10.1109/MS.2001.922739, DOI 10.1109/MS.2001.922739]
   Gulliksen J, 2003, BEHAV INFORM TECHNOL, V22, P397, DOI 10.1080/01449290310001624329
   Haikara J, 2007, LECT NOTES COMPUT SC, V4536, P153
   Heft H, 2003, ECOL PSYCHOL, V15, P149, DOI 10.1207/S15326969ECO1502_4
   Hutchby I, 2001, SOCIOLOGY, V35, P441, DOI 10.1177/S0038038501000219
   JARVENPAA SL, 1989, MANAGE SCI, V35, P285, DOI 10.1287/mnsc.35.3.285
   JICK TD, 1979, ADMIN SCI QUART, V24, P602, DOI 10.2307/2392366
   Johansson M, 2005, DIGIT CREAT, V16, P231, DOI 10.1080/14626260500476606
   KeyMark Inc, 2008, TROUBL LEG SYST INS
   Konkel Frank, 2016, NEXTGOV         1025
   Kumar Ranjit., 2010, RES METHODOLOGY STEP, V3rd
   Laporte L., 2012, P 7 NORDIC C HUMAN C, V12, P265
   Leonardi PM, 2011, MIS QUART, V35, P147
   Lincoln, 1985, NATURALISTIC INQUIRY, P289, DOI DOI 10.1016/0147-1767(85)90062-8
   Lindgren A, 2007, LECT NOTES COMPUT SC, V4555, P460
   Ma J., 2007, P 2007 AM C INF SYST
   Maechler M., 2018, CLUSTER CLUSTER ANAL
   Majchrzak A., 2012, ENCY MANAG THEORY
   McGinn J, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P1521
   Mesgari M., 2012, P AM C INF SYST, P1
   Miaskiewicz T., 2009, AMCIS 2009 P, V697
   Miaskiewicz T, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P1501
   Michaels CF, 2003, ECOL PSYCHOL, V15, P135, DOI 10.1207/S15326969ECO1502_3
   Moore GC, 1991, INFORM SYST RES, V2, P192, DOI 10.1287/isre.2.3.192
   Moser C, 2011, PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTER ENTERTAINMENT TECHNOLOGY (ACE 2011)
   Operandi P., 2014, MOODL ED
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Pruitt John, 2003, P 2003 C DES US EXP, P1, DOI 10.1145/997078.997089
   Rahimi M., 2014, Proc.of the 29th ACM/IEEE Int. Conf. on Autom. Soft. Eng, P479
   Rosemann M, 2008, MIS QUART, V32, P1
   Schach R., 1999, SOFTWARE ENG
   Seffah A., 2009, P 21 INT C ASS FRANC, P333
   Sinha R., 2003, P CHI 03 CHI 03 HUM, P830, DOI [DOI 10.1145/766011.766017, 10.1145/765891.766017, DOI 10.1145/765891.766017]
   Strong DM, 2014, J ASSOC INF SYST, V15, P53
   Tan PN., 2013, Introduction to data mining
   Tu J, 2009, ELECTRON J QUAL THEO, P1
   Wickham H., 2009, GGPLOT2 IMPLEMENTATI
   Wickham H, 2007, J STAT SOFTW, V21, P1
   Yoo Y, 2012, ORGAN SCI, V23, P1398, DOI 10.1287/orsc.1120.0771
   Zheng YQ, 2016, INFORM SYST J, V26, P289, DOI 10.1111/isj.12096
NR 64
TC 7
Z9 7
U1 2
U2 24
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2019
VL 45
IS 10
BP 967
EP 983
DI 10.1109/TSE.2018.2826537
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA JV1FR
UT WOS:000502113300002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Hoang, T
   Oentaryo, RJ
   Le, TDB
   Lo, D
AF Thong Hoang
   Oentaryo, Richard J.
   Le, Tien-Duy B.
   Lo, David
TI Network-Clustered Multi-Modal Bug Localization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Bug localization; information retrieval; program spectra
ID INFORMATION-RETRIEVAL; FEATURE LOCATION; FAULT; EXECUTION; RANKING;
   MODEL
AB Developers often spend much effort and resources to debug a program. To help the developers debug, numerous information retrieval (IR)-based and spectrum-based bug localization techniques have been devised. IR-based techniques process textual information in bug reports, while spectrum-based techniques process program spectra (i.e., a record of which program elements are executed for each test case). While both techniques ultimately generate a ranked list of program elements that likely contain a bug, they only consider one source of information-either bug reports or program spectra-which is not optimal. In light of this deficiency, this paper presents a new approach dubbed Network-clustered Multi-modal Bug Localization (NetML), which utilizes multi-modal information from both bug reports and program spectra to localize bugs. NetML facilitates an effective bug localization by carrying out a joint optimization of bug localization error and clustering of both bug reports and program elements (i.e., methods). The clustering is achieved through the incorporation of network Lasso regularization, which incentivizes the model parameters of similar bug reports and similar program elements to be close together. To estimate the model parameters of both bug reports and methods, NetML employs an adaptive learning procedure based on Newton method that updates the parameters on a per-feature basis. Extensive experiments on 355 real bugs from seven software systems have been conducted to benchmark NetML against various state-of-the-art localization methods. The results show that NetML surpasses the best-performing baseline by 31.82, 22.35, 19.72, and 19.24 percent, in terms of the number of bugs successfully localized when a developer inspects the top 1, 5, and 10 methods and Mean Average Precision (MAP), respectively.
C1 [Thong Hoang; Oentaryo, Richard J.; Le, Tien-Duy B.; Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
C3 Singapore Management University
RP Hoang, T (corresponding author), Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
EM vdthoang.2016@smu.edu.sg; roentaryo@smu.edu.sg; btdle.2012@smu.edu.sg;
   davidlo@smu.edu.sg
RI Lo, David/A-2493-2012
OI Lo, David/0000-0002-4367-7201
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   [Anonymous], 2001, MPSSIAM SER OPTIM
   Anvik John, 2005, P 2005 OOPSLA WORKSH, P35
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Artzi S., 2010, ISSTA, P49, DOI DOI 10.1145/1831708.1831715
   Artzi Shay., 2010, P 32 ACMIEEE INT C S, P265
   BANK RE, 1981, NUMER MATH, V37, P279, DOI 10.1007/BF01398257
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bissyandé TF, 2013, EUR CON SFTWR MTNCE, P89, DOI 10.1109/CSMR.2013.19
   Chaparro O, 2017, PROC IEEE INT CONF S, P376, DOI 10.1109/ICSME.2017.100
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   Collins M, 2002, MACH LEARN, V48, P253, DOI 10.1023/A:1013912006537
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Dit B, 2013, EMPIR SOFTW ENG, V18, P277, DOI 10.1007/s10664-011-9194-4
   ELENA Z, 2014, BUL ACAD STIINT MOLD, P127
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Hallac D, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P387, DOI 10.1145/2783258.2783313
   Joachims T, 2002, P 8 ACM SIGKDD INT C, P133, DOI [DOI 10.1145/775047.775067, 10.1145/775047.775067]
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jones K.Sparck., 1997, READINGS INFORM RETR
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kelley C. T., 2003, Society for Industrial and Applied Mathematics, P57, DOI [DOI 10.1137/1.9780898718898, 10.1137/1.9780898718898.ch3, DOI 10.1137/1.9780898718898.CH3]
   Kellogg M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1124, DOI 10.1145/2950290.2983970
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Le T.-D. B., 2014, P IEEE INT C SOFTW M, P364
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Le TDB, 2015, IEEE INT CONF AUTOM, P115, DOI 10.1109/ASE.2015.83
   Li X, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133916
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liblit B, 2003, ACM SIGPLAN NOTICES, V38, P141, DOI 10.1145/780822.781148
   Liu C, 2005, SIAM PROC S, P286, DOI 10.1145/1081706.1081753
   Liu Dapeng, 2007, P 22 IEEEACM INT C A, P234, DOI 10.1145/1321631.1321667
   Lo D., 2010, Software Maintenance (ICSM), 2010 IEEE International Confer- ence on, P1, DOI DOI 10.1109/ICSM.2010.5609542
   Lucia, 2014, J SOFTW-EVOL PROC, V26, P172, DOI 10.1002/smr.1616
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Murphy KP, 2012, MACHINE LEARNING: A PROBABILISTIC PERSPECTIVE, P1
   Parnin C, 2011, CONF PROC INT SYMP C, P197, DOI 10.1109/ICPC.2011.49
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Perez A, 2017, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2017.66
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Ramos J, 2003, P 1 INSTRUCTIONAL C, V242, P29
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Shin Yoo, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P244, DOI 10.1007/978-3-642-33119-0_18
   Sisman B., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P50, DOI 10.1109/MSR.2012.6224299
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   Tassey G., 2002, EC IMPACTS INADEQUAT
   Thung F., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P271, DOI 10.1109/ISSRE.2012.22
   Wang SW, 2014, PROC IEEE INT CONF S, P171, DOI 10.1109/ICSME.2014.39
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wang YY, 2013, INT CONF E BUS ENG, P224, DOI 10.1109/ICEBE.2013.34
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Xia X, 2013, INT CONF QUAL SOFTW, P200, DOI 10.1109/QSIC.2013.60
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 70
TC 20
Z9 26
U1 1
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2019
VL 45
IS 10
BP 1002
EP 1023
DI 10.1109/TSE.2018.2810892
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA JV1FR
UT WOS:000502113300004
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU van der Linden, D
   Hadar, I
AF van der Linden, Dirk
   Hadar, Irit
TI A Systematic Literature Review of Applications of the Physics of
   Notations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Systematic literature review; physics of notations; visual notations;
   cognitive effectiveness; design rationale
ID VISUAL LANGUAGE; COGNITIVE EFFECTIVENESS; INFORMATION-SYSTEMS;
   KNOWLEDGE; DIAGRAM
AB INTRODUCTION: The Physics of Notations (PoN) is a theory for the design of cognitively effective visual notations, emphasizing the need for design grounded in objective and verifiable rationale. Although increasingly applied, no systematic analysis of PoN applications has yet been performed to assess the theory's efficacy in practice. OBJECTIVES: Our primary objective was to assess the scope and verifiability of PoN applications. METHOD: We performed a systematic literature review (SLR) of peer-reviewed PoN applications. We analyzed what visual notations have been evaluated and designed using the PoN, for what reasons, to what degree applications consider requirements of their notation's users, and how verifiable these applications are. RESULTS: Seventy PoN applications were analyzed. We found major differences between applications evaluating existing notations and applications designing new notations. Particularly, in the case of new notations, we found that most applications adopted the PoN with little critical thought towards it, rarely considered its suitability for a particular context, and typically treated and discussed the PoN with few, if any, verifiable details and data. CONCLUSION: The results warrant consideration for those applying the PoN to do so carefully, and show the need for additional means to guide designers in systematically applying the PoN.
C1 [van der Linden, Dirk] Univ Bristol, Dept Comp Sci, Bristol BS8 1TH, Avon, England.
   [Hadar, Irit] Univ Haifa, Dept Informat Syst, IL-3498838 Haifa, Israel.
C3 University of Bristol; University of Haifa
RP van der Linden, D (corresponding author), Univ Bristol, Dept Comp Sci, Bristol BS8 1TH, Avon, England.
EM dirk.vanderlinden@bristol.ac.uk; hadari@is.haifa.ac.il
OI van der Linden, Dirk/0000-0002-8597-3156
CR Algablan A.S., 2016, 2016 INT C ENG MIS I, P1, DOI [10.1109/ICEMIS.2016.7745358, DOI 10.1109/ICEMIS.2016.7745358]
   Almorsy Mohamed, 2014, 23rd Australian Software Engineering Conference (ASWEC 2014), P152, DOI 10.1109/ASWEC.2014.18
   [Anonymous], UND SYST REV RES EFF
   [Anonymous], SOFTW SYST MODEL
   Anwer S., 2014, P INT C INF SCI APPL, P1
   Aydemir F.B., 2014, 2014 IEEE 8 INT C RE, P1
   Aydemir K, 2016, BOUND VALUE PROBL, P1, DOI 10.1186/s13661-016-0589-4
   Bochicchio MA, 2014, 2014 IEEE-EMBS INTERNATIONAL CONFERENCE ON BIOMEDICAL AND HEALTH INFORMATICS (BHI), P424, DOI 10.1109/BHI.2014.6864393
   Bochicchio MA, 2013, 2013 IFIP/IEEE INTERNATIONAL SYMPOSIUM ON INTEGRATED NETWORK MANAGEMENT (IM 2013), P1211
   Boone S, 2014, LECT NOTES BUS INF P, V197, P87
   Breitenbucher U., 2015, P 17 INT C INF INT W, P64
   Breitenbucher U., 2012, OTM Confederated International Conferences" On the Move to Meaningful Internet Systems", P416, DOI DOI 10.1007/978-3-642-33606-5_25
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Burlutskiy N., 2014, 19 UK CBR WORKSH DEC
   Cortes-Cornax M, 2016, SOFTW SYST MODEL, V15, P219, DOI 10.1007/s10270-014-0398-0
   Cummings L., 2015, REASONING PUBLIC HLT, P67
   Teixeira MDD, 2016, LECT NOTES BUS INF P, V248, P432, DOI 10.1007/978-3-319-39429-9_27
   De Faveri C, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P145, DOI [10.1109/REW.2016.037, 10.1109/REW.2016.37]
   DeMarco T., 1979, PIONEERS THEIR CONTR, P255
   Diprose JP, 2011, S VIS LANG HUM CEN C, P25, DOI 10.1109/VLHCC.2011.6070374
   Dobesova Z, 2013, INT MULTI SCI GEOCO, P595, DOI 10.5593/SGEM2013/BB2.V1/S08.039
   Dobesova Z, 2013, INT MULTI SCI GEOCO, P603
   Doore K, 2014, WINT SIMUL C PROC, P3561, DOI 10.1109/WSC.2014.7020186
   El Ahmar Y, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P64, DOI 10.1109/MODELS.2015.7338236
   El-Attar M, 2015, IEEE T SOFTWARE ENG, V41, P661, DOI 10.1109/TSE.2015.2396526
   Elouali N., 2014, PROC 12 INT C ADV MO, P52, DOI [10.1145/2684103.2684112, DOI 10.1145/2684103.2684112]
   Erdogan G., 2016, INT WORKSH RISK ASS, P99
   Falagas ME, 2008, FASEB J, V22, P338, DOI 10.1096/fj.07-9492LSF
   Famelis M, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P7, DOI 10.1109/MiSE.2013.6595289
   Figl K, 2011, LECT NOTES COMPUT SC, V6998, P78, DOI 10.1007/978-3-642-24606-7_7
   Figl K, 2010, J VISUAL LANG COMPUT, V21, P359, DOI 10.1016/j.jvlc.2010.08.009
   Frankfurt HG, 2005, ON BULLSHIT, P1
   Garcia J. J. B., 2016, INGENIERIA U, V20
   Genon N., 2010, Software Language Engineering, P377
   Genon N., 2010, INT WORKSH SYST AN M, P221, DOI DOI 10.1007/978-3-642-21652-7_14
   Gómez M, 2013, J SYST SOFTWARE, V86, P2394, DOI 10.1016/j.jss.2013.04.022
   Gopalakrishnan S, 2011, LECT NOTES BUS INF P, V92, P52
   Granada D, 2014, LECT NOTES COMPUT SC, V8767, P535, DOI 10.1007/978-3-319-11653-2_33
   Granizo-Mackenzie Delaney, 2013, Evolutionary Computation, Machine Learning and Data Mining in Bioinformatics. 11th European Conference, EvoBIO 2013. Proceedings, P1, DOI 10.1007/978-3-642-37189-9_1
   Gulden J., 2015, P CAISE FOR 2015 STO, P8
   Hanser M., 2016, P ZEUS CEUR WS
   Helming Jonas, 2010, 2010 Fifth International Workshop on Requirements Engineering Visualization (REV), P53, DOI 10.1109/REV.2010.5625659
   Henderson-Sellers B., 2013, INT SCHOLARLY RES NO, V2013
   Henderson-Sellers B, 2012, LECT NOTES BUS INF P, V113, P422
   Herter J., 2013, LNPE, P805
   Hess M., 2015, P EUR C INF SYST
   Hitchman S., 2002, Commun. Assoc. Inf. Syst, V9, P10
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Kim CH, 2015, J VISUAL LANG COMPUT, V26, P99, DOI 10.1016/j.jvlc.2014.11.005
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Knuplesch D., 2016, SOFTWARE SYSTEMS MOD, V16, P1
   Krogstie J, 2006, EUR J INFORM SYST, V15, P91, DOI 10.1057/palgrave.ejis.3000598
   Kühn T, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P132, DOI 10.1145/2997364.2997371
   Kummer TF, 2016, DECIS SUPPORT SYST, V87, P1, DOI 10.1016/j.dss.2016.04.004
   LARKIN JH, 1987, COGNITIVE SCI, V11, P65, DOI 10.1016/S0364-0213(87)80026-5
   Laurent P., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P35, DOI 10.1109/ICGSE.2010.55
   Liu J, 2016, S VIS LANG HUM CEN C, P143, DOI 10.1109/VLHCC.2016.7739677
   Luong T.N., 2012, INT C INT US INT P I, P207
   Ma Q., 2015, ENTERPRISE BUSINESS, V214, P293
   Mäder P, 2013, SOFTW SYST MODEL, V12, P537, DOI 10.1007/s10270-012-0237-0
   Malinova M., 2013, P 21 EUR C INF SYST
   Malinova M., 2014, P BUS PROC MAN WORKS, P567
   Martinez E., 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P1, DOI 10.1109/SCC.2010.32
   Matulevicius R, 2012, J UNIVERS COMPUT SCI, V18, P816
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Mendling J., 2016, 2016 IEEE 20 INT ENT, P1
   Michael J, 2013, LECT NOTES COMPUT SC, V8217, P403, DOI 10.1007/978-3-642-41924-9_33
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Miske Carel, 2014, Advancing the Impact of Design Science: Moving from Theory to Practice. 9th International Conference, DESRIST 2014. Proceedings: LNCS 8463, P360, DOI 10.1007/978-3-319-06701-8_26
   Moody D., 2008, INT C SOFTW LANG ENG, P16
   Moody DL, 2010, REQUIR ENG, V15, P141, DOI 10.1007/s00766-010-0100-1
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Mylopoulos J., 2008, CONCEPTUAL MODELING, P363
   Naranjo D, 2012, IEEE INT ENTERP, P19, DOI 10.1109/EDOCW.2012.13
   Narayanan N.Hari., 1998, VISUAL LANGUAGE THEO, P87, DOI DOI 10.1007/978-1-4612-1676-6_3
   Natschläger C, 2015, SOFTW SYST MODEL, V14, P765, DOI 10.1007/s10270-013-0329-5
   Netto JM, 2013, INT C COMP SUPP COOP, P190, DOI 10.1109/CSCWD.2013.6580961
   Palyart M., 2012, P 1 INT WORKSH MOD D, P6
   Plauska I, 2013, COMM COM INF SC, V403, P297
   Popescu G, 2014, CONF BUS INFORM, P166, DOI 10.1109/CBI.2014.21
   Luna ER, 2011, REQUIR ENG, V16, P297, DOI 10.1007/s00766-011-0124-1
   Rodrigues DL, 2015, INT C COMP SUPP COOP, P165, DOI 10.1109/CSCWD.2015.7230952
   Roelens B, 2015, BUS INFORM SYST ENG+, V57, P61, DOI 10.1007/s12599-014-0363-z
   Romuald D., 2015, P 7 ACM SIGCHI S ENG, P34
   Rough D, 2015, PROCEEDINGS 2015 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P121, DOI 10.1109/VLHCC.2015.7357206
   Saeed M, 2016, INFORM SOFTWARE TECH, V71, P1, DOI 10.1016/j.infsof.2015.10.012
   Saleh F, 2015, INFORM SOFTWARE TECH, V66, P73, DOI 10.1016/j.infsof.2015.05.002
   Salnitri M., 2015, SOFTW SYST MODEL, P1
   Sandkuhl K, 2014, LECT NOTES BUS INF P, V197, P164
   Schuette R., 1998, LECT NOTES COMPUTER, P240, DOI [DOI 10.1007/978-3-540-49524-620, DOI 10.1007/978-3-540-49524-6-20]
   Sindre G, 2013, LECT NOTES BUS INF P, V147, P324
   Sion L, 2015, 2015 IEEE/ACM 7TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING, P36, DOI 10.1109/MiSE.2015.14
   Stark J., 2017, P 13 INT TAG WIRTSCH, P256
   Störrle H, 2013, LECT NOTES COMPUT SC, V8107, P104, DOI 10.1007/978-3-642-41533-3_7
   Strohmeier S., 2017, AIS Transactions on Human-Computer Interaction, V9, P34
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Thomas JC, 2012, S VIS LANG HUM CEN C, P41, DOI 10.1109/VLHCC.2012.6344478
   van der Linden D., LECT NOTES BUSINESS, V249, P109
   van der Linden D, 2017, INT REQUIR ENG CONF, P41, DOI 10.1109/RE.2017.37
   van der Linden D, 2016, ENASE: PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL SOFTWARE APPROACHES TO SOFTWARE ENGINEERING, P222, DOI 10.5220/0005895802220227
   van der Linden D, 2016, LECT NOTES BUS INF P, V248, P448, DOI 10.1007/978-3-319-39429-9_28
   van Doesburg Jan, 2011, Processing, Storage, Distribution of Food. Food in the Medieval Rural Environment, P31
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Vickery L., 2014, P AUSTR COMP MUS C
   Vogel-Heuser, 2012, P 2012 IEEE 17 INT C, P1
   Wand Y, 2002, INFORM SYST RES, V13, P363, DOI 10.1287/isre.13.4.363.69
   Wanderley F, 2014, IEEE INT WORKSH MODE, P47, DOI 10.1109/MoDRE.2014.6890825
   Wiebring J., 2015, LNBIP, P129
   Woods E, 2015, J SYST SOFTWARE, V99, P97, DOI 10.1016/j.jss.2014.09.018
   Zhang Rick, 2010, Proceedings 2010 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2010), P240, DOI 10.1109/VLHCC.2010.41
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
NR 113
TC 11
Z9 12
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2019
VL 45
IS 8
BP 736
EP 759
DI 10.1109/TSE.2018.2802910
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA IT1QZ
UT WOS:000482622600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lillack, M
   Kästner, C
   Bodden, E
AF Lillack, Max
   Kastner, Christian
   Bodden, Eric
TI Tracking Load-Time Configuration Options
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Variability mining; configuration options; static analysis
ID IMPACT
AB Many software systems are highly configurable, despite the fact that configuration options and their interactions make those systems significantly harder to understand and maintain. In this work, we consider load-time configuration options, such as parameters from the command-line or from configuration files. They are particularly hard to reason about: tracking configuration options from the point at which they are loaded to the point at which they influence control-flow decisions is tedious and error-prone, if done manually. We design and implement LOTRACK, an extended static taint analysis to track configuration options automatically. LOTRACK derives a configuration map that explains for each code fragment under which configurations it may be executed. An evaluation on Android apps and Java applications from different domains shows that LOTRACK yields high accuracy with reasonable performance. We use LOTRACK to empirically characterize how much of the implementation of Android apps depends on the platform's configuration options or interactions of these options.
C1 [Lillack, Max] Univ Leipzig, D-04109 Leipzig, Germany.
   [Kastner, Christian] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
   [Bodden, Eric] Paderborn Univ, Heinz Nixdorf Inst, D-33102 Paderborn, Germany.
   [Bodden, Eric] Fraunhofer IEM, D-33102 Paderborn, Germany.
C3 Leipzig University; Carnegie Mellon University; University of Paderborn
RP Lillack, M (corresponding author), Univ Leipzig, D-04109 Leipzig, Germany.
EM lillack@wifa.uni-leipzig.de; kaestner@cs.cmu.edu;
   eric.bodden@uni-paderborn.de
RI Bodden, Eric/AAE-1365-2021
OI Bodden, Eric/0000-0003-3470-3647
FU German Federal Ministry of Education and Research [01IS15009B]; US
   National Science Foundation [1318808, 1552944]; AFRL [FA8750-16-2-0042];
   DARPA [FA8750-16-2-0042]; German Research Foundation (DFG); CRC
   CROSSING; state of North Rhine-Westphalia within the graduate school
   NERD; Heinz Nixdorf Foundation; Science of Security Lablet
   [H9823014C0140]; Division of Computing and Communication Foundations;
   Direct For Computer & Info Scie & Enginr [1552944, 1318808] Funding
   Source: National Science Foundation
FX Lillack's work was supported by the German Federal Ministry of Education
   and Research under grant 01IS15009B. Kastner's work has been supported
   in part by the US National Science Foundation (awards 1318808 and
   1552944), the Science of Security Lablet (H9823014C0140), and AFRL and
   DARPA (FA8750-16-2-0042). Bodden's work was supported by the German
   Research Foundation (DFG) within the projects RUNSECURE and TESTIFY and
   the CRC CROSSING, by the state of North Rhine-Westphalia within the
   graduate school NERD, and by the Heinz Nixdorf Foundation.
CR Adams B, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P243
   Angerer F, 2015, IEEE INT CONF AUTOM, P385, DOI 10.1109/ASE.2015.58
   [Anonymous], JPL
   [Anonymous], 1999, P 1999 C CTR ADV STU
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   [Anonymous], 2013, JOINT M EUROPEAN SOF, DOI [10.1145/2491411.2491430, DOI 10.1145/2491411.2491430]
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Atkins DL, 2002, IEEE T SOFTWARE ENG, V28, P625, DOI 10.1109/TSE.2002.1019478
   Attariyan Mona., 2010, OSDI PAGES, P237
   Ball T, 2001, ACM SIGPLAN NOTICES, P97
   Baxter ID, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P281, DOI 10.1109/WCRE.2001.957833
   Bodden E, 2013, ACM SIGPLAN NOTICES, V48, P355, DOI 10.1145/2499370.2491976
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dong Z, 2015, PROC IEEE INT CONF S, P171, DOI 10.1109/ICSM.2015.7332463
   Enck W, 2014, ACM T COMPUT SYST, V32, DOI 10.1145/2619091
   Favre JM, 1997, PROG COMPREHEN, P29, DOI 10.1109/WPC.1997.601260
   Feigenspan J, 2013, EMPIR SOFTW ENG, V18, P699, DOI 10.1007/s10664-012-9208-x
   Ganai M., 2012, P ACM SIGSOFT 20 INT
   Ganesh V, 2009, PROC INT CONF SOFTW, P474, DOI 10.1109/ICSE.2009.5070546
   Graf J, 2013, SOFTWARE ENG 2013 WO, VP-215, P123
   Haldar V., 2005, P 21 ANN COMPUTER SE, P303, DOI DOI 10.1109/CSAC.2005.21
   Höschele M, 2016, IEEE INT CONF AUTOM, P720, DOI 10.1145/2970276.2970321
   Nguyen HV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P907, DOI 10.1145/2568225.2568300
   Jin DP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P215, DOI 10.1145/2591062.2591191
   Kästner C, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P805
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Kastner Christian, 2009, P INT C GEN PROGR CO, P157, DOI DOI 10.1145/1621607.1621632
   Kim C.H. P., 2011, Proceedings of the Tenth International Conference on Aspect-oriented Software Development, P57
   Kim C.H. P., 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, P257
   Le D, 2011, S VIS LANG HUM CEN C, P143, DOI 10.1109/VLHCC.2011.6070391
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Lillack Max, 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, P445, DOI 10.1145/2642937.2643001
   Lohmann D., 2006, Operating Systems Review, V40, P191, DOI 10.1145/1218063.1217954
   Meinicke J, 2016, IEEE INT CONF AUTOM, P483, DOI 10.1145/2970276.2970322
   Mohr Martin, 2015, SOFTWARE ENG WORKSHO, P140
   Ouellet M, 2012, PROC INT CONF SOFTW, P1453, DOI 10.1109/ICSE.2012.6227068
   Rabkin A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P193, DOI 10.1109/ASE.2011.6100053
   Rabkin A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P131, DOI 10.1145/1985793.1985812
   Rasthofer S., 2014, COMMUNICATION
   Reisner E., 2010, P ACM IEEE INT C SOF, V1, P445, DOI DOI 10.1145/1806799.1806864
   Ribeiro M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P989, DOI 10.1145/2568225.2568289
   RICE HG, 1953, T AM MATH SOC, V74, P358, DOI 10.2307/1990888
   Rosenmüller M, 2008, GPCE'08: PROCEEDINGS OF THE ACM SIGPLAN SEVENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P3
   Santelices Raul, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P429, DOI 10.1109/ICST.2010.29
   Shankar U., 2001, P 10 C USENIX SEC S
   Shi JF, 2012, LECT NOTES COMPUT SC, V7212, P270, DOI 10.1007/978-3-642-28872-2_19
   Sincero R., 2010, P 9 INT C GEN PROGR, P33
   SPENCER H, 1992, PROCEEDINGS OF THE SUMMER 1992 USENIX CONFERENCE, P185
   Sridharan M, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P112, DOI 10.1145/1250734.1250748
   Tartler R., 2014, USENIX ATC, P421
   Tartler R, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P47
   Nguyen T, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P655, DOI 10.1145/2950290.2950311
   Toman J., 2016, P EUR C OBJ OR PROGR
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Xu TY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P307, DOI 10.1145/2786805.2786852
   Zhang S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P152, DOI 10.1145/2568225.2568251
   Zheng Yunhui, 2013, P 9 JOINT M FDN SOFT, P114, DOI [10.1145/2491411.2491456, DOI 10.1145/2491411.2491456]
NR 57
TC 17
Z9 17
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2018
VL 44
IS 12
BP 1269
EP 1291
DI 10.1109/TSE.2017.2756048
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HD6AP
UT WOS:000452614100007
OA hybrid
DA 2024-07-18
ER

PT J
AU Herbold, S
   Trautsch, A
   Grabowski, J
AF Herbold, Steffen
   Trautsch, Alexander
   Grabowski, Jens
TI A Comparative Study to Benchmark Cross-Project Defect Prediction
   Approaches
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cross-project defect prediction; benchmark; comparison; replication
ID QUALITY; MODELS
AB Cross-Project Defect Prediction (CPDP) as a means to focus quality assurance of software projects was under heavy investigation in recent years. However, within the current state-of-the-art it is unclear which of the many proposals performs best due to a lack of replication of results and diverse experiment setups that utilize different performance metrics and are based on different underlying data. Within this article, we provide a benchmark for CPDP. We replicate 24 approaches proposed by researchers between 2008 and 2015 and evaluate their performance on software products from five different data sets. Based on our benchmark, we determined that an approach proposed by Camargo Cruz and Ochimizu (2009) based on data standardization performs best and is always ranked among the statistically significant best results for all metrics and data sets. Approaches proposed by Turhan et al. (2009), Menzies et al. (2011), and Watanabe et al. (2008) are also nearly always among the best results. Moreover, we determined that predictions only seldom achieve a high performance of 0.75 recall, precision, and accuracy. Thus, CPDP still has not reached a point where the performance of the results is sufficient for the application in practice.
C1 [Herbold, Steffen; Trautsch, Alexander; Grabowski, Jens] Univ Goettingen, Inst Comp Sci, D-37073 Gottingen, Germany.
C3 University of Gottingen
RP Herbold, S (corresponding author), Univ Goettingen, Inst Comp Sci, D-37073 Gottingen, Germany.
EM herbold@cs.uni-goettingen.de; alexander.trautsch@stud.uni-goettingen.de;
   grabowski@cs.uni-goettingen.de
RI Trautsch, Alexander/ABH-7306-2020
OI Trautsch, Alexander/0000-0001-5236-7953; Herbold,
   Steffen/0000-0001-9765-2803
CR Altinger H, 2015, LECT NOTES COMPUT SC, V9447, P141, DOI 10.1007/978-3-319-25945-1_9
   Amasaki S, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P96, DOI 10.1109/SEAA.2015.25
   [Anonymous], 2010, P 6 INT C PRED MOD S
   [Anonymous], 1998, CORRELATION BASED FE
   [Anonymous], CORR
   [Anonymous], W082015P02 PRE WRUT
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08
   [Anonymous], SHERBOLD REPLICATION
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Breiman L., 2001, Mach. Learn., V45, P5
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Broomhead D. S., 1988, Complex Systems, V2, P321
   Canfora G, 2015, SOFTW TEST VERIF REL, V25, P426, DOI 10.1002/stvr.1570
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Cao Q., 2015, PROC 1 INT C REL SYS, P1
   Caruana R., 2006, ACM INT C P SER, P161, DOI DOI 10.1145/1143844.1143865
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   COX DR, 1958, J R STAT SOC B, V20, P215
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Ester M., 1996, KDD-96 Proceedings. Second International Conference on Knowledge Discovery and Data Mining, P226
   Fisher R. A., 1919, Transactions of the Royal Society of Edinburgh, V52
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Friedman M, 1940, ANN MATH STAT, V11, P86, DOI 10.1214/aoms/1177731944
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gray David, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P96, DOI 10.1049/ic.2011.0012
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Halstead M.H., 1977, OPERATING PROGRAMMIN
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Herbold S., 2013, P 9 INT C PREDICTIVE, P1
   Herbold S, 2017, EMPIR SOFTW ENG, V22, P1866, DOI 10.1007/s10664-016-9468-y
   Herbold S, 2015, 2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW), P90, DOI 10.1109/ASEW.2015.8
   Herzig K, 2013, PROC INT SYMP SOFTW, P118, DOI 10.1109/ISSRE.2013.6698911
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Jureczko M, 2015, E-INFORMATICA, V9, P21, DOI 10.5277/e-Inf150102
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kawata K, 2015, 3RD INTERNATIONAL CONFERENCE ON APPLIED COMPUTING AND INFORMATION TECHNOLOGY (ACIT 2015) 2ND INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND INTELLIGENCE (CSI 2015), P2, DOI 10.1109/ACIT-CSI.2015.104
   Khoshgoftaar TM, 2009, SOFTWARE QUAL J, V17, P25, DOI 10.1007/s11219-008-9058-3
   Kocaguneli E, 2013, INT WORK REAL ARTIF, P42, DOI 10.1109/RAISE.2013.6615203
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Mahalanobis P. C., 1936, P NATL I SCI INDIA, V2, P49
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Menzies T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P343, DOI 10.1109/ASE.2011.6100072
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Mizuno O, 2014, INT WORKSH EMPIR ENG, P43, DOI 10.1109/IWESEP.2014.9
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Nemenyi P., 1963, THESIS
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Peters F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P801, DOI 10.1109/ICSE.2015.92
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Peters F, 2012, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.2012.6227194
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Raman B., 2003, ENHANCING LEARNING U
   Russell S., 2016, Artificial intelligence a modern approach
   Ryu D, 2017, SOFTWARE QUAL J, V25, P235, DOI 10.1007/s11219-015-9287-1
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Ryu D, 2015, J COMPUT SCI TECH-CH, V30, P969, DOI 10.1007/s11390-015-1575-5
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Singh P., 2013, Int. J. Comput. Appl., V74, P5, DOI DOI 10.5120/12903-9587
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   Trautsch F, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P97, DOI [10.1109/MSR.2016.019, 10.1145/2901739.2901753]
   Turhan B, 2013, INFORM SOFTWARE TECH, V55, P1101, DOI 10.1016/j.infsof.2012.10.003
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Turhan B, 2011, EUROMICRO CONF PROC, P396, DOI 10.1109/SEAA.2011.59
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Uchigaki S., 2012, Proceedings of the 2012 13th ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel & Distributed Computing (SNPD 2012), P476, DOI 10.1109/SNPD.2012.34
   van Gestel T, 2004, MACH LEARN, V54, P5, DOI 10.1023/B:MACH.0000008082.80494.e0
   Watanabe S., 2008, P 4 INT WORKSH PRED, P19
   Zhang F., 2014, P 11 WORK C MIN SOFT, P182, DOI [10.1145/2597073.2597078, DOI 10.1145/2597073.2597078]
   Zhang Y, 2015, P INT COMP SOFTW APP, P264, DOI 10.1109/COMPSAC.2015.58
   Zhimin He, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P45, DOI 10.1109/ESEM.2013.20
NR 88
TC 133
Z9 137
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2018
VL 44
IS 9
BP 811
EP 833
DI 10.1109/TSE.2017.2724538
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GT9EL
UT WOS:000444842700001
DA 2024-07-18
ER

PT J
AU Margara, A
   Salvaneschi, G
AF Margara, Alessandro
   Salvaneschi, Guido
TI On the Semantics of Distributed Reactive Programming: The Cost of
   Consistency
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Distributed reactive programming; consistency guarantees; reactive
   programming middleware; DREAM
ID DATA-FLOW; TOTAL ORDER
AB The reactive programming paradigm aims to simplify the development of reactive systems. It provides abstractions to define time-changing values that are automatically updated by the runtime according to their dependencies. The benefits of reactive programming in distributed settings have been recognized for long. Yet, existing solutions for distributed reactive programming enforce the same semantics as in single processes, introducing communication and synchronization costs that hamper scalability. Establishing suitable abstractions for distributed reactive programming demands for a deeper investigation of the semantics of change propagation. This paper takes a foundational approach and defines precise propagation semantics in terms of consistency guarantees that constrain the order and isolation of value updates. We study the benefits and costs of these consistency guarantees both theoretically and empirically, using case studies and synthetic benchmarks. We show that different applications require different levels of consistency and that manually implementing the required level on a middleware that provides a lower one annuls the abstraction improvements of reactive programming. This motivates a framework that enables the developers to select the best trade-off between consistency and overhead for the problem at hand. To this end, we present DREAM, a distributed reactive programming middleware with flexible consistency guarantees.
C1 [Margara, Alessandro] Politecn Milan, DEIB, I-20133 Milan, Italy.
   [Salvaneschi, Guido] Tech Univ Darmstadt, Dept Comp Sci, D-64289 Darmstadt, Germany.
C3 Polytechnic University of Milan; Technical University of Darmstadt
RP Margara, A (corresponding author), Politecn Milan, DEIB, I-20133 Milan, Italy.
EM alessandro.margara@polimi.it; salvaneschi@cs.tu-darmstadt.de
RI Margara, Alessandro/JVZ-4321-2024
OI Salvaneschi, Guido/0000-0002-9324-8894
FU European Research Council [321217]; German Research Foundation (DFG) as
   part of project C2 within the Collaborative Research Center [1053]; DFG
   [SA 2918/2-1]; AWS Cloud Credits for Research program
FX We thank the anonymous reviewers for their detailed analysis of the work
   and their useful suggestions during the revision process. We also thank
   Prof. Gianpaolo Cugola for his comments and insights. They significantly
   helped us to improve the quality of the paper. This research has been
   partially funded by the European Research Council (grant No. 321217), by
   the German Research Foundation (DFG) as part of project C2 within the
   Collaborative Research Center 1053 (MAKI), by DFG grant SA 2918/2-1, and
   by the AWS Cloud Credits for Research program.
CR Abadi DJ, 2003, VLDB J, V12, P120, DOI 10.1007/s00778-003-0095-z
   Affetti L., 2017, INT C DISTR EV BAS S, P134, DOI [10.1145/3093742.3093929, DOI 10.1145/3093742.3093929]
   [Anonymous], PEER TO PEER APPROAC
   [Anonymous], 1987, Concurrency Control and Recovery in Database Systems
   [Anonymous], 2014, P 8 ACM INT C DISTR
   ARASU A, 2003, P 2003 ACM SIGMOD IN, P665
   Babcock B., 2002, P 21 ACM SIGMOD SIGA, P1, DOI [DOI 10.1145/543613.543615, 10.1145/543613]
   Bainomugisha E, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2501654.2501666
   Banken H., 2018, P 39 INT C SOFTW ENG
   Barga R.S., 2007, CIDR 2007 3 BIENNIAL, P363
   Benveniste A, 2003, P IEEE, V91, P64, DOI 10.1109/JPROC.2002.805826
   Bhola S, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P7, DOI 10.1109/DSN.2002.1028881
   Blevins D., 2001, Component-BasedSoftware Engineering, P589
   Bregu N., 2016, P 14 ANN INT C MOB S, P207
   Burchett Kimberley., 2007, PEPM 07, P71
   Calus B, 2017, PROCEEDINGS OF THE 4TH ACM SIGPLAN INTERNATIONAL WORKSHOP ON REACTIVE AND EVENT-BASED LANGUAGES AND SYSTEMS (REBLS'17), P15, DOI 10.1145/3141858.3141861
   Carbone P., 2015, IEEE DATA ENG B, V36, P28, DOI DOI 10.1109/IC2EW.2016.56
   Carbone P., 2015, CoRR
   Carreton AL, 2010, LECT NOTES COMPUT SC, V6141, P41, DOI 10.1007/978-3-642-13953-6_3
   CHANDY KM, 1985, ACM T COMPUT SYST, V3, P63, DOI 10.1145/214451.214456
   Cooper GH, 2006, LECT NOTES COMPUT SC, V3924, P294
   Courtney A., 2001, Practical Aspects of Declarative Languages. Third International Symposium, PADL 2001. Proceedings (Lecture Notes in Computer Science Vol.1990), P29
   Cranor Chuck., 2003, ACM SIGMOD
   Cugola G, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187677
   Cugola Gianpaolo., 2010, Proceedings of the Fourth ACM International Conference on Distributed Event-Based Systems - DEBS'10, P50
   Cugola Gianpaolo., 2006, Proc. of the 6th international workshop on Software engineering and middleware, P9
   Czaplicki E, 2013, ACM SIGPLAN NOTICES, V48, P411, DOI 10.1145/2499370.2462161
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Dedecker J, 2006, LECT NOTES COMPUT SC, V4067, P230
   Défago X, 2004, ACM COMPUT SURV, V36, P372, DOI 10.1145/1041680.1041682
   Drechsler J, 2014, ACM SIGPLAN NOTICES, V49, P361, DOI [10.1145/2660193.2660240, 10.1145/2714064.2660240]
   Elliott C, 1997, ACM SIGPLAN NOTICES, V32, P263, DOI 10.1145/258949.258973
   Elliott C, 2009, HASKELL'09: PROCEEDINGS OF THE 2009 ACM SIGPLAN HASKELL SYMPOSIUM, P25
   Etzion O., 2010, Event Processing in Action, Vfirst
   Eugster P, 2009, LECT NOTES COMPUT SC, V5653, P570, DOI 10.1007/978-3-642-03013-0_26
   Eugster PT, 2003, ACM COMPUT SURV, V35, P114, DOI 10.1145/857076.857078
   FIDGE C, 1991, COMPUTER, V24, P28, DOI 10.1109/2.84874
   Fidler E, 2005, FEATURE INTERACTIONS IN TELECOMMUNICATIONS AND SOFTWARE SYSTEMS VIII, P12
   Finkbeiner B., 2017, P 1 INT WORKSH SAF C, P43, DOI [10.1145/3055378.3055385, DOI 10.1145/3055378.3055385]
   Galuba W, 2008, IEEE INT CONF PEER, P191, DOI 10.1109/P2P.2008.13
   Gasiunas V., 2011, P 10 INT C ASP OR SO, P227
   HALBWACHS N, 1991, P IEEE, V79, P1305, DOI 10.1109/5.97300
   Hammer MA, 2014, ACM SIGPLAN NOTICES, V49, P156, DOI [10.1145/2594291.2594324, 10.1145/2666356.2594324]
   Harkes D. C., 2016, P 30 EUR C OBJ OR PR
   Holt B, 2016, PROCEEDINGS OF THE SEVENTH ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC 2016), P279, DOI 10.1145/2987550.2987559
   Hudak P., 2003, ADV FUNCTIONAL PROGR
   Hwang JH, 2008, PROC INT CONF DATA, P804, DOI 10.1109/ICDE.2008.4497489
   JIA XH, 1995, IEEE T PARALL DISTR, V6, P617, DOI 10.1109/71.388042
   Johnson R., 1995, DESIGN PATTERNS ELEM
   Kamina T., 2018, ART SCI ENG PROGRAM, V2
   Kleppmann M., 2017, Designing data-intensive applications: The big ideas behind reliable, scalable, and maintainable systems
   KUNG HT, 1981, ACM T DATABASE SYST, V6, P213, DOI 10.1145/319566.319567
   Kuraj I., 2017, P 2 SUMM ADV PROGR L
   Luckham David C., 2001, POWER EVENTS INTRO C
   Luthra M., 2018, P 12 ACM INT C DISTR, P378
   Maier Ingo., 2012, Deprecating the observer pattern with Scala
   Mandel L, 2015, PROCEEDINGS OF THE 17TH INTERNATIONAL SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING (PPDP 2015), P6, DOI 10.1145/2790449.2790509
   Margara A., 2017, P WORKSH FORM TECHN
   Margara A., 2013, P WORKSH REACT EV MO
   Margara A, 2014, IEEE T PARALL DISTR, V25, P126, DOI 10.1109/TPDS.2013.39
   Margara Alessandro., 2011, Proceedings of the 5th ACM international conference on Distributed event-based system, DEBS'11, P183
   Mattern F., 1989, Parallel and Distributed Algorithms. Proceedings of the International Workshop, P215
   Meijer E., 2012, QUEUE, V10
   Meyerovich LA, 2009, OOPSLA 2009, CONFERENCE PROCEEDINGS, P1
   Mogk R., 2018, P 32 EUR C OBJ OR PR
   Mosberger D., 1993, Operating Systems Review, V27, P18, DOI 10.1145/160551.160553
   Muhl G, 2006, Distributed Event-Based Systems
   Myter F., 2016, P 3 INT WORKSH REACT, P1
   Myter F, 2017, PROCEEDINGS OF THE 4TH ACM SIGPLAN INTERNATIONAL WORKSHOP ON REACTIVE AND EVENT-BASED LANGUAGES AND SYSTEMS (REBLS'17), P1, DOI 10.1145/3141858.3141859
   Perez I., 2017, P ACM PROGR LANG, V1
   Pietzuch P. R., 2004, UCAMCLTR590
   Pietzuch PR, 2003, LECT NOTES COMPUT SC, V2672, P62
   Pietzuch PR, 2002, 22ND INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOP, PROCEEDINGS, P611, DOI 10.1109/ICDCSW.2002.1030837
   Proença J, 2017, LECT NOTES COMPUT SC, V10522, P180, DOI 10.1007/978-3-319-68972-2_12
   Rajan H, 2008, LECT NOTES COMPUT SC, V5142, P155, DOI 10.1007/978-3-540-70592-5_8
   Ramson S., 2017, CORR
   Raynal M., 1992, Operating Systems Review, V26, P41, DOI 10.1145/130704.130708
   Reynders Bob, 2014, ONWARD, V2014, P55
   Sadoghi M., 2011, DaMoN'11, P27, DOI DOI 10.1145/1995441.1995445
   Salvaneschi G., 2013, P 12 ANN INT C ASP O, P37
   Salvaneschi G, 2017, IEEE T SOFTWARE ENG, V43, P1125, DOI 10.1109/TSE.2017.2655524
   Salvaneschi G, 2016, PROC INT CONF SOFTW, P796, DOI 10.1145/2884781.2884815
   Salvaneschi G, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P564, DOI 10.1145/2635868.2635895
   Salvaneschi G, 2013, LECT NOTES COMPUT SC, V7890, P226, DOI 10.1007/978-3-642-38493-6_16
   Salvaneschi Guido, 2014, P 13 INT C MOD, P25, DOI DOI 10.1145/2577080.2577083
   Sant'Anna Francisco., 2015, Proceedings of the 14th International Conference on Modularity - MODULARITY 2015, P29
   Sawada K, 2016, COMPANION PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON MODULARITY (MODULARITY COMPANION'16), P36, DOI 10.1145/2892664.2892670
   Tucker PA, 2003, IEEE T KNOWL DATA EN, V15, P555, DOI 10.1109/TKDE.2003.1198390
   Van Heek J., 2014, 4th International Workshop on User-Centered Design of Pervasive Healthcare Applications, P205, DOI [10.4108/icst.pervasivehealth.2014, DOI 10.4108/ICST.PERVASIVEHEALTH.2014]
   Viotti P, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2926965
   Weisenburger Pascal, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P140, DOI 10.1109/SEAMS.2017.10
   WHITING PG, 1994, IEEE ANN HIST COMPUT, V16, P38, DOI 10.1109/85.329757
   Zaharia Matei., 2012, NSDI 12
   Zaza N., 2016, P WORKSH PROGR MOD L
   Zhang KW, 2012, INT CON DISTR COMP S, P335, DOI 10.1109/ICDCS.2012.17
NR 95
TC 9
Z9 9
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2018
VL 44
IS 7
BP 689
EP 711
DI 10.1109/TSE.2018.2833109
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GN3LJ
UT WOS:000438906900005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bai, GD
   Ye, QQ
   Wu, YZ
   Botha, H
   Sun, J
   Liu, Y
   Dong, JS
   Visser, W
AF Bai, Guangdong
   Ye, Quanqi
   Wu, Yongzheng
   Botha, Heila
   Sun, Jun
   Liu, Yang
   Dong, Jin Song
   Visser, Willem
TI Towards Model Checking Android Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software model checking; security verification; android application
AB As feature-rich Android applications (apps for short) are increasingly popularized in security-sensitive scenarios, methods to verify their security properties are highly desirable. Existing approaches on verifying Android apps often have limited effectiveness. For instance, static analysis often suffers from a high false-positive rate, whereas approaches based on dynamic testing are limited in coverage. In this work, we propose an alternative approach, which is to apply the software model checking technique to verify Android apps. We have built a general framework named DROIDPF upon Java PathFinder (JPF), towards model checking Android apps. In the framework, we craft an executable mock-up Android OS which enables JPF to dynamically explore the concrete state spaces of the tested apps; we construct programs to generate user interaction and environmental input so as to drive the dynamic execution of the apps; and we introduce Android specific reduction techniques to help alleviate the state space explosion. DROIDPF focuses on common security vulnerabilities in Android apps including sensitive data leakage involving a non-trivial flow- and context-sensitive taint-style analysis. DROIDPF has been evaluated with 131 apps, which include real-world apps, third-party libraries, malware samples and benchmarks for evaluating app analysis techniques like ours. DROIDPF precisely identifies nearly all of the previously known security issues and nine previously unreported vulnerabilities/bugs.
C1 [Bai, Guangdong] Singapore Inst Technol, Singapore 138682, Singapore.
   [Ye, Quanqi; Dong, Jin Song] Natl Univ Singapore, Singapore 119077, Singapore.
   [Wu, Yongzheng] Huawei, Shenzhen, Peoples R China.
   [Sun, Jun] Singapore Univ Technol & Design, Singapore 487372, Singapore.
   [Liu, Yang] Nanyang Technol Univ, Singapore 639798, Singapore.
   [Botha, Heila; Visser, Willem] Stellenbosch Univ, ZA-7599 Stellenbosch, South Africa.
C3 Singapore Institute of Technology; National University of Singapore;
   Huawei Technologies; Singapore University of Technology & Design;
   Nanyang Technological University; Stellenbosch University
RP Bai, GD (corresponding author), Singapore Inst Technol, Singapore 138682, Singapore.
EM Guangdong.Bai@SingaporeTech.edu.sg; yequanqi@u.nus.edu;
   wu.yongzheng@huawei.com; hvdmerwe@cs.sun.ac.za; sunjun@sutd.edu.sg;
   yangliu@ntu.edu.sg; dcsdjs@u.nus.edu; wvisser@cs.sun.ac.za
RI Ye, Quanqi/AAK-6500-2021; yang, liu/HTN-9175-2023; Liu,
   Yang/HNJ-6693-2023; liu, yang/HQY-7531-2023; Bai,
   Guangdong/GLS-2331-2022; yang, liu/GVU-8760-2022; Liu, Yang/D-2306-2013;
   liu, yang/HHY-8583-2022; liu, yang/HIU-0559-2022; LIU,
   YANG/HWQ-4615-2023
OI Bai, Guangdong/0000-0002-6390-9890; Liu, Yang/0000-0001-7300-9215; 
FU Singapore NRF grant [RGNRF1501]; South African NRF [88210]; National
   Research Foundation, Prime Ministers Office, Singapore under its
   National Cybersecurity RD Program [NRF2014NCR-NCR001-30]
FX This research is partially support by Singapore NRF grant RGNRF1501 and
   South African NRF under Grant 88210. This research is also supported (in
   part) by the National Research Foundation, Prime Ministers Office,
   Singapore under its National Cybersecurity R&D Program (Award No.
   NRF2014NCR-NCR001-30) and administered by the National Cybersecurity R&D
   Directorate. This work was partially done when Guangdong Bai and
   Yongzheng Wu were with National University of Singapore and Singapore
   University of Technology and Design, Singapore, respectively. Guangdong
   Bai is the corresponding author.
CR Anandan S, 2012, MATER SCI FORUM, V712, P1, DOI 10.4028/www.scientific.net/MSF.712.1
   [Anonymous], 2017, OPEN SOURCE 360
   [Anonymous], 2012, NDSS 2012 19 ANN S N
   [Anonymous], 2012, Proceedings of the 7th ACM Symposium on Information, Computer and Communications Security, DOI [DOI 10.1145/2414456.2414498, 10.1145/2414456.2414498]
   [Anonymous], 2014, P 21 NETW DISTR SYST
   [Anonymous], 2015, PROCESS LIFECYCLE
   AppBrain, 2017, NUMB AV ANDR APPL
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Au Kathy Wain Yee, 2012, P 2012 ACM C COMP CO, P217
   Azim T, 2013, ACM SIGPLAN NOTICES, V48, P641, DOI [10.1145/2509136.2509549, 10.1145/2544173.2509549]
   Baars A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P53, DOI 10.1109/ASE.2011.6100119
   Bai GD, 2015, IEEE INT C ENG COMP, P60, DOI 10.1109/ICECCS.2015.17
   Bai GD, 2014, LECT NOTES COMPUT SC, V8442, P110, DOI 10.1007/978-3-319-06410-9_8
   Ball T, 2001, ACM SIGPLAN NOTICES, V36, P203, DOI 10.1145/381694.378846
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cadar C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1066, DOI 10.1145/1985793.1985995
   Ceccarello M., 2014, ACM SIGSOFT SOFTW EN, V39, DOI DOI 10.1145/2557833.2560572
   Chen K. Z., 2013, P 20 ANN NETW DISTR
   Chipounov V, 2011, ACM SIGPLAN NOTICES, V46, P265, DOI [10.1145/1961296.1950396, 10.1145/1961295.1950396]
   Choi W, 2013, ACM SIGPLAN NOTICES, V48, P623, DOI [10.1145/2544173.2509552, 10.1145/2509136.2509552]
   Enck William., 2010, Proceedings of the USENIX Symposium on Operating Systems Design and Implementation (OSDI), P393
   Ernst MD, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1092, DOI 10.1145/2660267.2660343
   Felt AP, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P627
   Flanagan C, 2005, ACM SIGPLAN NOTICES, V40, P110, DOI 10.1145/1047659.1040315
   Fuchs A. P., 2009, CSTR4991
   Gibler C., 2012, P 5 INT C TRUST TRUS, V7344, P291, DOI DOI 10.1007/978-3-642-30921-2
   Grace M C, 2012, P 19 ANN NETW DISTR
   Grace M. C., 2012, PROC 5 ACM C SECUR P, P101
   Guo HY, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P265
   Hao S, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P204, DOI 10.1145/2594368.2594390
   Hatcliff J., 2000, Higher-Order and Symbolic Computation, V13, P315, DOI 10.1023/A:1026599015809
   Hind M, 2001, ACM SIGPLAN NOTICES, P54
   Hoffmann J., 2013, P 28 ANN ACM S APPL, P1844
   Huang JJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1036, DOI 10.1145/2568225.2568301
   IDC, 2017, SMARTPH OS MARK SHAR
   Ionescu C., 2012, OBFUSCATING EMBEDDED
   Jiang X, 2013, P 8 ACM SIGSAC S INF, P329
   Kang Min Gyung, 2011, NDSS
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Li XL, 2014, IEEE INT C ENG COMP, P29, DOI 10.1109/ICECCS.2014.13
   Lu Long, 2012, P 2012 ACM C COMP CO, P229, DOI DOI 10.1145/2382196.2382223
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Mehlitz P., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P584, DOI 10.1109/ASE.2011.6100131
   Mirzaei Nariman, 2012, ACM SIGSOFT Software Engineering Notes, V37, P1, DOI DOI 10.1145/2382756.2382798
   Morsel Joseph, 2013, SEM ARCH FAM F UNPUB, P1
   Octeau Damien, 2013, P 22 USENIX C SEC SE, P543
   Octeau Damien., 2012, FSE 12 P ACM SIGSOFT, p6:1
   Paladion, 2015, INS
   Parízek P, 2012, ACM SIGPLAN NOTICES, V47, P75, DOI 10.1145/2398857.2384623
   Pasareanu Corina S., 2010, P 25 IEEE ACM INT C, P179, DOI [10.1145/1858996.1859035, DOI 10.1145/1858996.1859035]
   Rasthofer S., 2016, P NETW DISTR SYST SE
   Rastogi V., 2013, P 3 ACM C DAT APPL S, P209
   Schwartz EJ, 2010, P IEEE S SECUR PRIV, P317, DOI 10.1109/SP.2010.26
   Shekhar S., 2012, P 21 USENIX C SEC S, P553
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Tkachuk O, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P116, DOI 10.1109/ASE.2003.1240300
   Tkachuk O., 2014, P JAV PATHF WORKSH, P1
   van der Merwe H., 2014, SIGSOFT Softw. Eng. Notes, V39, P1
   van der Merwe H, 2012, SIGSOFT SOFTW ENG NO, V37, P1, DOI DOI 10.1145/2382756.2382797
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Wang HY, 2015, IEEE GLOB COMM CONF, DOI 10.1109/GLOCOM.2015.7417621
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Yan L.K., 2012, SECURITY 12, P29
   Yang JF, 2006, ACM T COMPUT SYST, V24, P393, DOI 10.1145/1189256.1189259
   Yang W, 2013, LECT NOTES COMPUT SC, V7793, P250, DOI 10.1007/978-3-642-37057-1_19
   Yang Zhemin., 2013, P 20 ACM C COMPUTER, P1043, DOI [DOI 10.1145/2508859.2516676, 10.1145/2508859.2516676]
   Ye QQ, 2015, IEEE INT C ENG COMP, P90, DOI 10.1109/ICECCS.2015.20
   Zhang Y., 2013, ACM CCS
   Zheng C., 2012, P 2 ACM WORKSHOP SEC, P93, DOI DOI 10.1145/2381934.2381950
   Zhou YJ, 2012, P IEEE S SECUR PRIV, P95, DOI 10.1109/SP.2012.16
   Zhou YJ, 2011, LECT NOTES COMPUT SC, V6740, P93, DOI 10.1007/978-3-642-21599-5_7
NR 71
TC 17
Z9 22
U1 1
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2018
VL 44
IS 6
BP 595
EP 612
DI 10.1109/TSE.2017.2697848
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GJ4FE
UT WOS:000435335100005
OA Green Published
DA 2024-07-18
ER

PT J
AU Chen, TH
   Shang, WY
   Jiang, ZM
   Hassan, AE
   Nasser, M
   Flora, P
AF Chen, Tse-Hsun
   Shang, Weiyi
   Jiang, Zhen Ming
   Hassan, Ahmed E.
   Nasser, Mohamed
   Flora, Parminder
TI Finding and Evaluating the Performance Impact of Redundant Data Access
   for Applications that are Developed Using Object-Relational Mapping
   Frameworks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Performance; object-relational mapping (ORM); program analysis; database
AB Developers usually leverage Object-Relational Mapping (ORM) to abstract complex database accesses for large-scale systems. However, since ORM frameworks operate at a lower-level (i.e., data access), ORM frameworks do not know how the data will be used when returned from database management systems (DBMSs). Therefore, ORM cannot provide an optimal data retrieval approach for all applications, which may result in accessing redundant data and significantly affect system performance. Although ORM frameworks provide ways to resolve redundant data problems, due to the complexity of modern systems, developers may not be able to locate such problems in the code; hence, may not proactively resolve the problems. In this paper, we propose an automated approach, which we implement as a Java framework, to locate redundant data problems. We apply our framework on one enterprise and two open source systems. We find that redundant data problems exist in 87 percent of the exercised transactions. Due to the large number of detected redundant data problems, we propose an automated approach to assess the impact and prioritize the resolution efforts. Our performance assessment result shows that by resolving the redundant data problems, the system response time for the studied systems can be improved by an average of 17 percent.
C1 [Chen, Tse-Hsun; Hassan, Ahmed E.] Queens Univ, Sch Comp, Software Anal & Intelligence Lab, Kingston, ON K7L 3N6, Canada.
   [Shang, Weiyi] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H4B 1R6, Canada.
   [Jiang, Zhen Ming] York Univ, Dept Elect Engn & Comp Sci, Toronto, ON M3J 1P3, Canada.
   [Nasser, Mohamed; Flora, Parminder] BlackBerry, Waterloo, ON, Canada.
C3 Queens University - Canada; Concordia University - Canada; York
   University - Canada; BlackBerry
RP Chen, TH (corresponding author), Queens Univ, Sch Comp, Software Anal & Intelligence Lab, Kingston, ON K7L 3N6, Canada.
EM tsehsun@cs.queensu.ca; shang@encs.concordia.ca; zmjiang@cse.yorku.ca;
   ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan, Ahmed/AAB-7241-2019; Ali,
   Ahmed/HOF-4672-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Chen,
   Tse-Hsun/0000-0003-4027-0905
CR [Anonymous], 2016, HIBERNATE CRITERIA Q
   [Anonymous], 2016, WHY IS HIBERNATE QUE
   [Anonymous], 2016, DJANGO OBJECTS VALUE
   [Anonymous], 2016, HIBERNATE DYNAMIC UP
   [Anonymous], 2016, NHIBERNATE UPDATE SI
   [Anonymous], 2009, Introduction to the Practice of Statistics
   [Anonymous], 2016, MAKING ONETOONE RELA
   [Anonymous], 2016, JPA2 0 HIBERNATE WHY
   [Anonymous], 2016, DETERMINISTIC COLUMN
   [Anonymous], 2016, GENERATE IDENTICAL C
   [Anonymous], 2016, HIBERNATE PRODUCE DI
   Ballis D, 2008, ELECTRON NOTES THEOR, V219, P51, DOI 10.1016/j.entcs.2008.10.034
   Barry D, 1998, COMPUTER, V31, P33, DOI 10.1109/2.730734
   Binder R.V., 2000, AW OBJ TECHNOL S
   Bowman IT, 2005, ACM T DATABASE SYST, V30, P1056, DOI 10.1145/1114244.1114250
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Chaudhuri S., 2007, P 33 INT C VER LARG, P1039
   Chavan M, 2011, PROC INT CONF DATA, P375, DOI 10.1109/ICDE.2011.5767870
   Chen TH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1001, DOI 10.1145/2568225.2568259
   Chess B., 2007, Secure programming with static analysis
   Cheung A, 2014, SIGMOD'14: PROCEEDINGS OF THE 2014 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P931, DOI 10.1145/2588555.2593672
   Cheung A, 2013, ACM SIGPLAN NOTICES, V48, P3, DOI 10.1145/2499370.2462180
   Chis AE, 2008, COMP 23 ACM SIGPLAN, P925
   Cohen J., 1988, STAT POWER ANAL BEHA
   Dasgupta A, 2009, PROC INT CONF DATA, P1403, DOI 10.1109/ICDE.2009.98
   Django, 2016, SPEC WHICH FIELDS SA
   Dubois J., 2016, IMPROVING PERFORMANC
   EclipseLink, 2016, ECL DOC
   Foundation A. S., 2016, AP OP
   Foundation E., 2016, ECL JAV DEV TOOLS
   Foundation E., 2016, ECL JPA 2 1
   Foundation T. E., 2016, ASPECTJ
   Fourati R., 2011, COMPUTER INFORM SCI
   Georges A, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P57
   Grechanik M., 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, P356, DOI DOI 10.1145/2491411.2491412
   Grechanik M, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P174, DOI 10.1109/ICST.2013.19
   Grechanik M, 2012, PROC INT CONF SOFTW, P156, DOI 10.1109/ICSE.2012.6227197
   Jiang ZM, 2008, PROC IEEE INT CONF S, P307, DOI 10.1109/ICSM.2008.4658079
   Johnson R, 2005, COMPUTER, V38, P107, DOI 10.1109/MC.2005.22
   Jovic M, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P155
   Kalibera T, 2013, PROCEEDINGS OF THE ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT (ISMM '13), P63
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Keith M., 2009, PROJPA 2 MASTERING J
   Keith M., 2008, QUEUE, V6, P38
   Kessentini M., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, P113
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   KRASNER GE, 1988, J OBJECT-ORIENT PROG, V1, P41
   Leavitt N, 2000, COMPUTER, V33, P16, DOI 10.1109/MC.2000.841780
   Maiga A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P466, DOI 10.1109/WCRE.2012.56
   Maiga A, 2012, IEEE INT CONF AUTOM, P278, DOI 10.1145/2351676.2351723
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   McDonald C., 2016, JPA PERFORMANCE DONT
   Meurice L, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P464, DOI 10.1109/CSMR-WCRE.2014.6747219
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Nakagawa S, 2007, BIOL REV, V82, P591, DOI 10.1111/j.1469-185X.2007.00027.x
   Nistor A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P902, DOI 10.1109/ICSE.2015.100
   Nistor A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P562, DOI 10.1109/ICSE.2013.6606602
   O. Inc, 2016, DAT JDBC DEV GUID RE
   O. S. Ltd, 2016, JPA PERF BENCHM
   on Rails R., 2016, WHATS NEW EDGE RAILS
   Parsons T., 2004, P 9 INT WORKSH COMP, P1
   Qiu D., 2013, P 2013 9 JOINT M FDN, P125
   Ramachandra K, 2012, P ACM SIGMOD INT C M, P133, DOI DOI 10.1145/2213836.2213852
   Rohr Matthias, 2008, Proceedings of the IASTED International Conference on Software Engineering, as part of the 26th IASTED International Multi-Conference on Applied Informatics, P80
   Rountev A., 2010, FSE/SDP, P421
   Settas D, 2012, EXPERT SYST APPL, V39, P9041, DOI 10.1016/j.eswa.2012.02.049
   Shang WY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P402, DOI 10.1109/ICSE.2013.6606586
   Sutherland J., 2016, IMPROVE JPA PERFORMA
   Sutherland J., 2013, JAVA PERSISTENCE
   van Hoorn A, 2008, LECT NOTES COMPUT SC, V5119, P124, DOI 10.1007/978-3-540-69814-2_9
   Xiao Xusheng, 2013, P 2013 INT S SOFTW T, P90, DOI DOI 10.1145/2483760.2483784
   Xu GQ, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P174, DOI 10.1145/1806596.1806617
   Zaitsev P., 2008, HIGH PERFORM MYSQL O
NR 74
TC 34
Z9 38
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2016
VL 42
IS 12
BP 1148
EP 1161
DI 10.1109/TSE.2016.2553039
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EF9TG
UT WOS:000390672800003
DA 2024-07-18
ER

PT J
AU Segura, S
   Fraser, G
   Sanchez, AB
   Ruiz-Cortés, A
AF Segura, Sergio
   Fraser, Gordon
   Sanchez, Ana B.
   Ruiz-Cortes, Antonio
TI A Survey on Metamorphic Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Metamorphic testing; oracle problem; survey
ID STATISTICAL FAULT LOCALIZATION; IMAGING SOFTWARE; WEB SERVICES;
   INTEGRATION; PROGRAM; CLASSIFICATION; STRATEGIES; FRAMEWORK; SELECTION;
   FAILURES
AB A test oracle determines whether a test execution reveals a fault, often by comparing the observed program output to the expected output. This is not always practical, for example when a program's input-output relation is complex and difficult to capture formally. Metamorphic testing provides an alternative, where correctness is not determined by checking an individual concrete output, but by applying a transformation to a test input and observing how the program output "morphs" into a different one as a result. Since the introduction of such metamorphic relations in 1998, many contributions on metamorphic testing have been made, and the technique has seen successful applications in a variety of domains, ranging from web services to computer graphics. This article provides a comprehensive survey on metamorphic testing: It summarises the research results and application areas, and analyses common practice in empirical studies of metamorphic testing as well as the main open challenges.
C1 [Segura, Sergio; Sanchez, Ana B.; Ruiz-Cortes, Antonio] Univ Seville, Dept Comp Languages & Syst, Seville, Spain.
   [Fraser, Gordon] Univ Sheffield, Dept Comp Sci, Sheffield, S Yorkshire, England.
C3 University of Sevilla; University of Sheffield
RP Segura, S (corresponding author), Univ Seville, Dept Comp Languages & Syst, Seville, Spain.
EM sergiosegura@us.es; gordon.fraser@sheffield.ac.uk; anabsanchez@us.es;
   aruiz@us.es
RI Jerez, Ana Belén Sánchez/R-4279-2017; Cortés, Antonio Ruiz/B-9056-2008;
   Segura, Sergio/A-9615-2011
OI Jerez, Ana Belén Sánchez/0000-0003-1473-0955; Cortés, Antonio
   Ruiz/0000-0001-9827-1834; Segura, Sergio/0000-0001-8816-6213
FU European Commission (FEDER); Spanish Government under CICYT projects
   TAPAS [TIN2012-32273]; BELI [TIN2015-70560-R]; Andalusian Government
   project THEOS [TIC-5906]; Andalusian Government project COPAS
   [P12-TIC-1867]
FX We would like to thank T. Y. Chen, Robert M. Hierons, Phil McMinn,
   Amador Duran, Zhi Quan Zhou, Christian Murphy, Huai Liu, Xiaoyuan Xie,
   Alberto Goffi, Gagandeep, Carmen Castro-Cabrera, Yan Lei and Peng Wu for
   their helpful comments in an earlier version of this article. We are
   also grateful to the members of the SSE research group led by Mark
   Harman for the insightful and inspiring discussion during our visit at
   the University College London. This work has been partially supported by
   the European Commission (FEDER) and Spanish Government under CICYT
   projects TAPAS (TIN2012-32273) and BELI (TIN2015-70560-R), and the
   Andalusian Government projects THEOS (TIC-5906) and COPAS
   (P12-TIC-1867).
CR AMMANN PE, 1988, IEEE T COMPUT, V37, P418, DOI 10.1109/12.2185
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   [Anonymous], 1980, Software Manual for the Elementary Functions
   [Anonymous], ANN TELECOMMUN ANN T
   [Anonymous], ISA16TR02 U SEV APPL
   [Anonymous], P FDN SOFTW ENG DOCT
   [Anonymous], J SYST SOFTWARE
   [Anonymous], CUCS03910
   [Anonymous], 2005, 2nd International Conference on Electicatl Engineering/Electronics, Computer, Telecommunications, and Information Technology
   [Anonymous], INFORM SOFTW TECHNOL
   [Anonymous], 8 INT S FUT SOFTW TE
   [Anonymous], P 2 INT C INF SCI EN
   [Anonymous], CUCS01108
   [Anonymous], J SYST SOFTW
   [Anonymous], SOFTW TESTING VERIFI
   [Anonymous], WEB SERV PROC EX LAN
   [Anonymous], SIEMENS SUITE
   [Anonymous], 2011, SOFTWARE ENG TECHNIQ
   [Anonymous], ADV INTELLIGENT SYST
   [Anonymous], 2011, SEHC
   [Anonymous], P 11 ANN INT WORKSH
   [Anonymous], IEEE T SOFTWARE ENG, DOI DOI 10.1109/TSE.2014.2372785
   [Anonymous], 2012, PROC ADV COMPUT SCI
   Artzi Shay., 2008, P 2008 INT S SOFTWAR, P261, DOI [10.1145/1390630.1390662, DOI 10.1145/1390630.1390662]
   Aruna C, 2015, 2015 SECOND INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING AND COMMUNICATION ENGINEERING ICACCE 2015, P673, DOI 10.1109/ICACCE.2015.138
   Aruna C, 2014, 2014 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P2244, DOI 10.1109/ICACCI.2014.6968586
   Asrafi M., 2011, Proceedings of the 2011 Fifth International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2011), P147, DOI 10.1109/SSIRI.2011.21
   Batra G, 2011, COMM COM INF SC, V141, P180
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Beydeda S, 2006, P INT COMP SOFTW APP, P265
   Binkley D, 2015, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2015.7335396
   BLUM M, 1993, J COMPUT SYST SCI, V47, P549, DOI 10.1016/0022-0000(93)90044-W
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Cañizares PC, 2015, PROCEDIA COMPUT SCI, V51, P2804, DOI 10.1016/j.procs.2015.05.438
   Cao YX, 2013, INT CONF QUAL SOFTW, P153, DOI 10.1109/QSIC.2013.43
   Carzaniga A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P931, DOI 10.1145/2568225.2568287
   Castoriadis C, 2011, POSTSCRIPT ON INSIGNIFICANCE: DIALOGUES WITH CORNELIUS CASTORIADIS, P1
   Castro-Cabrera C, 2012, COMM COM INF SC, V314, P168
   Chan WK, 2007, INT J WEB SERV RES, V4, P61, DOI 10.4018/jwsr.2007040103
   Chan WK, 2007, P INT COMP SOFTW APP, P397
   Chan WK, 2007, LECT NOTES COMPUT SC, V4498, P84
   Chan WK, 2006, INT J SOFTW ENG KNOW, V16, P677, DOI 10.1142/S0218194006002951
   Chan WK, 2013, INT CONF QUAL SOFTW, P245, DOI 10.1109/QSIC.2013.16
   Chan WK, 2010, SOFTW TEST VERIF REL, V20, P89, DOI 10.1002/stvr.408
   Chan WK, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P470
   Chan WK, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P241
   Chang-ai Sun, 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P283, DOI 10.1109/ICWS.2011.65
   Chen LL, 2012, 2012 6TH INTERNATIONAL CONFERENCE ON NEW TRENDS IN INFORMATION SCIENCE, SERVICE SCIENCE AND DATA MINING (ISSDM2012), P439
   Chen T., 2004, P 8 AS PAC ORCH C AP, P128
   Chen T. Y., 2002, Software Engineering Notes, V27, P191, DOI 10.1145/566171.566202
   Chen TY, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P23, DOI 10.1109/ICECCS.2009.28
   Chen T.Y., 2004, PROC 4 IBERO AM S SO, P569
   Chen T. Y., 2005, ACM SIGSOFT Software Engineering Notes, V30, P1
   Chen T. Y., 1998, Technical Report hkust-cs98-01
   Chen TY, 2015, 10TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST AST 2015, P53, DOI 10.1109/AST.2015.18
   Chen TY, 2012, INT CONF QUAL SOFTW, P285, DOI 10.1109/QSIC.2012.21
   Chen TY, 2012, IEEE T SOFTWARE ENG, V38, P794, DOI 10.1109/TSE.2011.69
   Chen TY, 2011, IEEE T SOFTWARE ENG, V37, P109, DOI 10.1109/TSE.2010.23
   Chen TY, 2009, BMC BIOINFORMATICS, V10, DOI 10.1186/1471-2105-10-24
   Chen TY, 2009, LECT NOTES COMPUT SC, V5522, P243, DOI 10.1007/978-3-642-02138-1_19
   Chen TY, 2002, P INT COMP SOFTW APP, P327, DOI 10.1109/CMPSAC.2002.1045022
   Chen TY, 2003, INFORM SOFTWARE TECH, V45, P1, DOI 10.1016/S0950-5849(02)00129-5
   Chen TY, 2001, P INT COMP SOFTW APP, P172, DOI 10.1109/CMPSAC.2001.960614
   Ding J., 2011, PROC 6 INT WORKSHOP, P1, DOI [10.1145/1982595.1982597, DOI 10.1145/1982595.1982597]
   Dong GW, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P292
   [董国伟 DONG Guowei], 2009, [计算机科学与探索, Journal of Frontiers of Computer Science & Technology], V3, P130
   Dong Guowei, 2008, Journal of Southeast University (English Edition), V24, P437
   Erete I., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P310, DOI 10.1109/ICSTW.2011.98
   Ernst M. D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P213, DOI 10.1109/ICSE.1999.841011
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Gewehr JE, 2007, BIOINFORMATICS, V23, P651, DOI 10.1093/bioinformatics/btl671
   Goffi A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P678, DOI 10.1145/2591062.2591078
   Goffi A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P366, DOI 10.1145/2635868.2635888
   Gotlieb A, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P34, DOI 10.1109/CMPSAC.2003.1245319
   Guderlei R, 2007, INT J SOFTW ENG KNOW, V17, P757, DOI 10.1142/S0218194007003471
   Guderlei R, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P404
   Guowei Dong, 2013, 2013 IEEE 4th International Conference on Software Engineering and Service Science (ICSESS), P193, DOI 10.1109/ICSESS.2013.6615286
   Guowei Dong, 2010, Proceedings of the 2010 IEEE/ACM International Conference on Web Intelligence-Intelligent Agent Technology - Workshops (WI-IAT 2010), P397, DOI 10.1109/WI-IAT.2010.101
   Hong Zhu, 2015, 2015 Second International Conference on Trustworthy Systems and their Applications (TSA). Proceedings, P8, DOI 10.1109/TSA.2015.13
   Hu P., 2006, Proc. of the 3rd International Workshop on Software Quality Assurance, P6
   Hui ZW, 2015, P INT COMP SOFTW APP, P417, DOI 10.1109/COMPSAC.2015.179
   Hui ZW, 2013, WOR CONG SOFTW ENG, P73, DOI 10.1109/WCSE.2013.16
   Hui ZW, 2013, WOR CONG SOFTW ENG, P64, DOI 10.1109/WCSE.2013.14
   Hui ZW, 2013, MATH PROBL ENG, V2013, DOI 10.1155/2013/381389
   Jameel Tahir, 2015, P 16 IEEE ACIS INT C, P1
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jin H, 2015, P INT COMP SOFTW APP, P232, DOI 10.1109/COMPSAC.2015.79
   Junhua Ding, 2010, Proceedings 2010 Fourth IEEE International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2010), P190, DOI 10.1109/SSIRI.2010.25
   Just R, 2011, SOFTWARE QUAL J, V19, P753, DOI 10.1007/s11219-011-9151-x
   Just R, 2009, IEEE ICST WORKSHOP, P205, DOI 10.1109/ICSTW.2009.20
   Just Rene., 2010, Proceedings of the 5th Workshop on Automation of Software Test, AST '10, P91
   Kanewala U, 2014, IEEE ICST WORKSHOP, P237, DOI 10.1109/ICSTW.2014.62
   Kanewala U, 2013, PROC INT SYMP SOFTW, P1, DOI 10.1109/ISSRE.2013.6698899
   Kanewala U, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING (SE-CSE), P48, DOI 10.1109/SECSE.2013.6615099
   Kitchenham B., 2004, PROCEDURES PERFORMIN
   Kuo FC, 2010, IET SOFTW, V4, P294, DOI 10.1049/iet-sen.2009.0084
   Kuo F.-C., 2011, SAC, P1482
   Kuo FC, 2011, C LOCAL COMPUT NETW, P291, DOI 10.1109/LCN.2011.6115306
   Lei Y, 2013, INT CONF QUAL SOFTW, P212, DOI 10.1109/QSIC.2013.45
   Lei Y, 2012, P INT COMP SOFTW APP, P1, DOI 10.1109/COMPSAC.2012.9
   Lindvall M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P129, DOI 10.1109/ICSE.2015.348
   Liu H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P420, DOI 10.1145/2591062.2591109
   Liu H, 2014, IEEE T SOFTWARE ENG, V40, P4, DOI 10.1109/TSE.2013.46
   Liu H, 2012, INT CONF QUAL SOFTW, P59, DOI 10.1109/QSIC.2012.10
   Liu HY, 2010, PROCEEDINGS OF THE 5TH INTERNATIONAL ACADEMIC CONFERENCE ON ENVIRONMENTAL AND OCCUPATIONAL MEDICINE, P81
   Mayer J, 2006, INT CONF QUAL SOFTW, P85
   Mayer J, 2006, P INT COMP SOFTW APP, P475
   Mingyue Jiang, 2013, 2013 IEEE 4th International Conference on Software Engineering and Service Science (ICSESS), P530, DOI 10.1109/ICSESS.2013.6615365
   Murphy Christian, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P867
   Murphy C, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P189
   Murphy C, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P436, DOI 10.1109/ICST.2009.19
   Núñez A, 2012, J GRID COMPUT, V10, P185, DOI 10.1007/s10723-012-9208-5
   Pullum LL, 2012, 2012 ASE INTERNATIONAL CONFERENCE ON BIOMEDICAL COMPUTING (BIOMEDCOM), P62, DOI 10.1109/BioMedCom.2012.17
   Ramanathan A, 2012, 2012 ASE INTERNATIONAL CONFERENCE ON BIOMEDICAL COMPUTING (BIOMEDCOM), P68, DOI 10.1109/BioMedCom.2012.18
   Rao PF, 2013, INT CONF QUAL SOFTW, P260, DOI 10.1109/QSIC.2013.18
   Segura Sergio, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P35, DOI 10.1109/ICST.2010.20
   Segura S, 2015, SOFTW TEST VERIF REL, V25, P138, DOI 10.1002/stvr.1566
   Shin Yoo, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P192, DOI 10.1109/ICSTW.2010.26
   Su FH, 2015, 10TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST AST 2015, P55, DOI 10.1109/AST.2015.19
   Sun CA, 2014, FRONT COMPUT SCI-CHI, V8, P478, DOI 10.1007/s11704-014-3040-y
   Sun CA, 2012, INT J WEB SERV RES, V9, P51, DOI 10.4018/jwsr.2012010103
   Tao QM, 2010, ASIA PAC SOFWR ENG, P270, DOI 10.1109/APSEC.2010.39
   Tse T. H., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P458, DOI 10.1109/CMPSAC.2004.1342879
   Tse TH, 2005, P INT COMP SOFTW APP, P332
   Tsong Yueh Chen, 2010, 2010 Fifth International Symposium on Service Oriented System Engineering (SOSE 2010), P1, DOI 10.1109/SOSE.2010.31
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P216, DOI [10.1145/2666356.2594334, 10.1145/2594291.2594334]
   Webster J, 2002, MIS QUART, V26, pXIII
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   Wu P, 2005, P INT COMP SOFTW APP, P19
   Wu Peng, 2005, Journal of Software, V16, P1210, DOI 10.1360/jos161210
   Xiao-li Lu, 2010, 2010 Proceedings of 7th International Conference on Ubiquitous Intelligence & Computing and 7th International Conference on Autonomic & Trusted Computing (UIC/ATC 2010), P272, DOI 10.1109/UIC-ATC.2010.75
   Xie XY, 2014, INT CONF QUAL SOFTW, P73, DOI 10.1109/QSIC.2014.29
   Xie XY, 2013, INFORM SOFTWARE TECH, V55, P866, DOI 10.1016/j.infsof.2012.08.008
   Xie XY, 2009, INT CONF QUAL SOFTW, P135, DOI 10.1109/QSIC.2009.26
   Xie XA, 2011, J NANOMATER, V2011, DOI 10.1155/2011/152524
   Yao Y, 2013, 2013 FOURTH INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS DESIGN AND ENGINEERING APPLICATIONS, P488, DOI 10.1109/ISDEA.2013.516
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhang Jie, 2014, P 29 ACM IEEE INT C, P701, DOI DOI 10.1145/2642937.2642994
   Zhang Jing, 2011, Journal of Electronics (China), V28, P623, DOI 10.1007/s11767-012-0743-9
   Zhang Zhen-Yu, 2009, Journal of Software, V20, P2637, DOI 10.3724/SP.J.1001.2009.00578
   Zhi Quan Zhou, 2010, IEEE 34th Annual Computer Software and Applications Conference Workshops (COMPSACW 2010), P208, DOI 10.1109/COMPSACW.2010.43
   Zhou Z. Q., 2007, TR200706 U HONG KONG
   Zhou ZQ, 2016, IEEE T SOFTWARE ENG, V42, P264, DOI 10.1109/TSE.2015.2478001
   Zhou ZQ, 2012, SOFTW TEST VERIF REL, V22, P221, DOI 10.1002/stvr.437
NR 144
TC 306
Z9 328
U1 1
U2 34
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2016
VL 42
IS 9
BP 805
EP 824
DI 10.1109/TSE.2016.2532875
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DX8UU
UT WOS:000384666100001
OA Green Accepted, Green Published
DA 2024-07-18
ER

PT J
AU Schur, M
   Roth, A
   Zeller, A
AF Schur, Matthias
   Roth, Andreas
   Zeller, Andreas
TI Mining Workflow Models from Web Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Specification mining; dynamic analysis; model-based testing; web system
   testing
ID FINITE-STATE MACHINES; TOOL
AB Modern business applications predominantly rely on web technology, enabling software vendors to efficiently provide them as a service, removing some of the complexity of the traditional release and update process. While this facilitates shorter, more efficient and frequent release cycles, it requires continuous testing. Having insight into application behavior through explicit models can largely support development, testing and maintenance. Model-based testing allows efficient test creation based on a description of the states the application can be in and the transitions between these states. As specifying behavior models that are precise enough to be executable by a test automation tool is a hard task, an alternative is to extract them from running applications. However, mining such models is a challenge, in particular because one needs to know when two states are equivalent, as well as how to reach that state. We present Process Crawler (ProCrawl), a tool to mine behavior models from web applications that support multi-user workflows. ProCrawl incrementally learns a model by generating program runs and observing the application behavior through the user interface. In our evaluation on several real-world web applications, ProCrawl extracted models that concisely describe the implemented workflows and can be directly used for model-based testing.
C1 [Schur, Matthias] SAP SE, Cloud Platform Team, Walldorf, Germany.
   [Schur, Matthias; Zeller, Andreas] Univ Saarland, Chair Software Engn, D-66123 Saarbrucken, Germany.
   [Roth, Andreas] SAP SE, Walldorf, Germany.
C3 Saarland University
RP Schur, M (corresponding author), SAP SE, Cloud Platform Team, Walldorf, Germany.
EM matthias.schur@sap.com; andreas.roth@sap.com; zeller@cs.uni-saarland.de
OI Zeller, Andreas/0000-0003-4719-8803
FU German Federal Ministry of Education and Research (BMBF) [01IC12S01];
   European Research Council (ERC)
FX The authors thank Vitaly Kozyura, Sebastian Wieczorek and the anonymous
   reviewers for helpful comments on earlier revisions of this paper. The
   work presented herein has been partially funded by the German Federal
   Ministry of Education and Research (BMBF) under grant no. 01IC12S01 as
   well as by an European Research Council (ERC) Advanced Grant "SPECMATE -
   Specification Mining and Testing".
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Alshahwan N., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P151, DOI 10.1109/ICST.2012.95
   Amalfitano Domenico, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P274, DOI 10.1109/ICSTW.2010.34
   Amalfitano D, 2008, WORK CONF REVERSE EN, P69, DOI 10.1109/WCRE.2008.17
   Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], 2007, Software testing and analysis-process, principles and techniques
   [Anonymous], 2012, P 2012 C CTR ADV STU
   BIERMANN AW, 1972, IEEE T COMPUT, VC 21, P592, DOI 10.1109/TC.1972.5009015
   Binder R. V., 1999, OBJECT TECHNOLOGY SE
   Binder R. V., 2014, QUEUE, V13
   CHENG KT, 1993, ACM IEEE D, P86
   Corbett J. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P439, DOI 10.1109/ICSE.2000.870434
   Dallmeier V., 2010, P 19 INT S SOFTWARE, P85, DOI [DOI 10.1145/1831708.1831719, 10.1145/1831708.1831719]
   Dallmeier Valentin, 2012, P WORKSH JAVASCRIPT, P11, DOI [10.1145/2307720.2307722, DOI 10.1145/2307720.2307722]
   Di Francescomarino C, 2009, EUR CON SFTWR MTNCE, P139, DOI 10.1109/CSMR.2009.26
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Frster Klaus-Tycho., 2012, Principles of Distributed Systems, volume 7702 of Lecture Notes in Computer Science, V7702, P151, DOI DOI 10.1007/978-3-642-35476-211
   Garousi V, 2013, INFORM SOFTWARE TECH, V55, P1374, DOI 10.1016/j.infsof.2013.02.006
   Grieskamp W, 2011, SOFTW TEST VERIF REL, V21, P55, DOI 10.1002/stvr.427
   Korel B, 2002, PROC IEEE INT CONF S, P214, DOI 10.1109/ICSM.2002.1167768
   Lee C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P591, DOI 10.1145/1985793.1985874
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Marchetto A, 2012, IET SOFTW, V6, P33, DOI 10.1049/iet-sen.2010.0152
   Marchetto Alessandro, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P121, DOI 10.1109/ICST.2008.22
   Marchetto A, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/SSBSE.2009.13
   Memon A, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P260, DOI 10.1109/WCRE.2003.1287256
   Mesbah A, 2012, ACM T WEB, V6, DOI 10.1145/2109205.2109208
   Mesbah A, 2012, IEEE T SOFTWARE ENG, V38, P35, DOI 10.1109/TSE.2011.28
   Nguyen BN, 2014, AUTOMAT SOFTW ENG, V21, P65, DOI 10.1007/s10515-013-0128-9
   Pradel M, 2012, PROC INT CONF SOFTW, P925, DOI 10.1109/ICSE.2012.6227127
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Schur M., 2013, Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering, ESEC/FSE'13, Saint Petersburg, Russian Federation, August 18-26, 2013, P422
   Schur M., 2014, P 2014 INT S SOFTW T, P413
   Tomasi A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P666, DOI 10.1109/ICSM.2012.6405349
   Tramontana Porfirio, 2013, 2013 15th IEEE International Symposium on Web Systems Evolution (WSE), P83, DOI 10.1109/WSE.2013.6642421
   Utting M., 2007, PRACTICAL MODEL BASE
   Valmari A., 1998, Lectures on Petri Nets I: Basic Models. Advances in Petri Nets, P429
   Vapnik VN, 1999, IEEE T NEURAL NETWOR, V10, P988, DOI 10.1109/72.788640
   Walkinshaw N, 2013, WORK CONF REVERSE EN, P301, DOI 10.1109/WCRE.2013.6671305
   Walkinshaw N, 2013, EMPIR SOFTW ENG, V18, P791, DOI 10.1007/s10664-012-9210-3
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   Wieczorek S, 2009, LECT NOTES COMPUT SC, V5826, P179, DOI 10.1007/978-3-642-05031-2_12
   Wohlin C., 2012, Experimentation in Software Engineering
   Xie Q, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1416563.1416567
   Xie T, 2004, LECT NOTES COMPUT SC, V3308, P290
   Zeller Andreas., 2003, P ICSE WORKSHOP DYNA, P6
NR 47
TC 11
Z9 16
U1 0
U2 21
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2015
VL 41
IS 12
BP 1184
EP 1201
DI 10.1109/TSE.2015.2461542
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CY5TP
UT WOS:000366470700003
DA 2024-07-18
ER

PT J
AU Menzies, T
   Brady, A
   Keung, J
   Hihn, J
   Williams, S
   El-Rawas, O
   Green, P
   Boehm, B
AF Menzies, Tim
   Brady, Adam
   Keung, Jacky
   Hihn, Jairus
   Williams, Steven
   El-Rawas, Oussama
   Green, Phillip
   Boehm, Barry
TI Learning Project Management Decisions: A Case Study with Case-Based
   Reasoning versus Data Farming
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Search-based software engineering; case-based reasoning; data farming;
   COCOMO
ID STATIC CODE ATTRIBUTES; COST ESTIMATION; SOFTWARE; PREDICTION;
   SELECTION; SIZE; VALIDATION
AB Background: Given information on just a few prior projects, how do we learn the best and fewest changes for current projects? Aim: To conduct a case study comparing two ways to recommend project changes. 1) Data farmers use Monte Carlo sampling to survey and summarize the space of possible outcomes. 2) Case-based reasoners (CBR) explore the neighborhood around test instances. Method: We applied a state-of-the data farmer (SEESAW) and a CBR tool (W2) to software project data. Results: CBR with W2 was more effective than SEESAW's data farming for learning best and recommended project changes, effectively reducing runtime, effort, and defects. Further, CBR with W2 was comparably easier to build, maintain, and apply in novel domains, especially on noisy data sets. Conclusion: Use CBR tools like W2 when data are scarce or noisy or when project data cannot be expressed in the required form of a data farmer. Future Work: This study applied our own CBR tool to several small data sets. Future work could apply other CBR tools and data farmers to other data (perhaps to explore other goals such as, say, minimizing maintenance effort).
C1 [Menzies, Tim; Brady, Adam; El-Rawas, Oussama; Green, Phillip] W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
   [Keung, Jacky] City Univ Hong Kong, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
   [Hihn, Jairus] CALTECH, Jet Prop Lab, Pasadena, CA 91125 USA.
   [Williams, Steven] Indiana Univ, Sch Informat & Comp, Bloomington, IN USA.
   [Boehm, Barry] Univ So Calif, Los Angeles, CA 90089 USA.
C3 West Virginia University; City University of Hong Kong; California
   Institute of Technology; National Aeronautics & Space Administration
   (NASA); NASA Jet Propulsion Laboratory (JPL); Indiana University System;
   Indiana University Bloomington; University of Southern California
RP Menzies, T (corresponding author), W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
EM tim@menzies.us; adam.m.brady@gmail.com; jacky.keung@cityu.edu.hk;
   jairus.hihn@jpl.nasa.gov; stevencwilliams@gmail.com; orawas@gmail.com;
   deathcheese@yahoo.com; boehm@sunset.usc.edu
RI Menzies, Tim/X-7680-2019; Keung, Jacky/ABA-7089-2020; Keung,
   Jacky/X-4693-2019
OI Menzies, Tim/0000-0002-5040-3196; Keung, Jacky/0000-0002-3803-9600
FU US National Science Foundation (NSF), CISE [0810879]; Direct For
   Computer & Info Scie & Enginr [0810879] Funding Source: National Science
   Foundation; Division of Computing and Communication Foundations
   [0810879] Funding Source: National Science Foundation
FX This research was conducted at West Virginia University, the University
   of Southern California, and the NASA Jet Propulsion Laboratory under a
   NASA subcontract. Reference herein to any specific commercial product,
   process, or service by trade name, trademark, manufacturer, or
   otherwise, does not constitute or imply its endorsement by the US
   Government. This research was funded in part by the US National Science
   Foundation (NSF), CISE, project #0810879.
CR Afzal W, 2011, EXPERT SYST APPL, V38, P11984, DOI 10.1016/j.eswa.2011.03.041
   AHA DW, 1991, MACH LEARN, V6, P37, DOI 10.1023/A:1022689900470
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2003, The art of UNIX programming
   [Anonymous], P 5 INT S EMP SOFTW
   [Anonymous], 1992, C4 5 PROGRAMS MACHIN
   [Anonymous], THESIS W VIRGINIA U
   [Anonymous], 2010, P 6 INT C PRED MOD S
   [Anonymous], 1995, Empirical methods for artificial intelligence
   Auer M, 2006, IEEE T SOFTWARE ENG, V32, P83, DOI 10.1109/TSE.2006.1599418
   Bagnall AJ, 2001, INFORM SOFTWARE TECH, V43, P883, DOI 10.1016/S0950-5849(01)00194-X
   Banker RD, 1997, MANAGE SCI, V43, P1709, DOI 10.1287/mnsc.43.12.1709
   Boehm BW., 1981, Software Engineering Economics
   Brady A., 2010, P 6 INT C PRED MOD S, P1
   Brady Adam., 2010, Journal of Software Engineering and Applications, V3, P1005
   CHEN Z, 2005, P WORKSH PRED MOD SO
   CHIANG E., 2003, Software Process: Improvement and Practice, V7, P141
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   Chung L., 2000, Non-functional Requirements in Software Engineering
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   Cohen W. W., 1995, Machine Learning. Proceedings of the Twelfth International Conference on Machine Learning, P115
   Craw S., 1994, Proceedings of the MLNet Familiarization Workshop on Theory Revision and Restructuring in Machine Learning (ECML-94), P32
   Cruzes D.S., 2011, P INT S EMP SOFTW EN
   Deb K., 2010, MULTIOBJECTIVE OPTIM
   Dolado JJ, 2000, IEEE T SOFTWARE ENG, V26, P1006, DOI 10.1109/32.879821
   DOLADO JJ, 1998, P INT C SOFTW PROC I
   Dyson George, 2012, Turings Cathedral: The Origins of the Digital Universe
   El-Rawas O, 2010, INNOV SYST SOFTW ENG, V6, P319, DOI 10.1007/s11334-010-0137-9
   Feather M., 2002, P 10 ANN IEEE JOINT
   Fenton N.E., 1991, SOFTWARE METRICS
   Gay G, 2010, AUTOMAT SOFTW ENG, V17, P439, DOI 10.1007/s10515-010-0072-x
   Gay G, 2010, AUTOMAT SOFTW ENG, V17, P87, DOI 10.1007/s10515-009-0059-7
   Geletko D., 2003, P 28 ANN NASA GODD S
   Glover F., 1993, TABU SEARCH
   Goldberg David E, 1989, GENETIC ALGORITHMS S
   Green P., 2009, P 24 IEEE ACM INT C
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, P FUT SOFTW ENG FOSE
   Heaven W, 2011, INT REQUIR ENG CONF, P79, DOI 10.1109/RE.2011.6051653
   Horne G., 2004, P WINT SIM C DEC, V1
   Islam S, 2012, FUTURE GENER COMP SY, V28, P155, DOI 10.1016/j.future.2011.05.027
   Jiang Y., 2009, SOFTWARE PRACTICE EX, V39, P1
   Jun Gu, 1997, Satisfiability Problem: Theory and Applications. DIMACS Workshop, P19
   KADODA G, 2000, P 4 INT C EMP ASS SO, P23
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Keung J, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P229
   Keung J, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P294
   Keung JW, 2008, IEEE T SOFTWARE ENG, V34, P471, DOI 10.1109/TSE.2008.34
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Kirsopp C., 2002, IEE Proceedings-Software, V149, P123, DOI 10.1049/ip-sen:20020695
   KIRSOPP C, 2002, P 22 SGAI INT C KNOW
   Kocaguneli E., 2010, P IEEE ACM INT C AUT
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Kolodner J.L., 1993, Case-Based Reasoning
   Li J., 2007, P 3 INT WORKSH PRED, P6
   Li JZ, 2008, EMPIR SOFTW ENG, V13, P63, DOI 10.1007/s10664-007-9054-4
   Li YF, 2009, EMPIR SOFTW ENG, V14, P603, DOI 10.1007/s10664-008-9104-6
   Li YF, 2009, J SYST SOFTWARE, V82, P241, DOI 10.1016/j.jss.2008.06.001
   Lipowezky U, 1998, PATTERN RECOGN LETT, V19, P907, DOI 10.1016/S0167-8655(98)00075-0
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   Menies T., 2006, P WORKSH PRED MOD SO
   Menzies Tim, 2009, Software Process: Improvement and Practice, V14, P213, DOI 10.1002/spip.414
   Menzies T, 2011, P 26 IEEE ACM INT C
   Menzies T., 2009, P 5 INT C PRED MOD S
   Menzies T., 2007, P 22 IEEE ACM INT C, P303, DOI [10.1145/1321631.1321676, DOI 10.1145/1321631.1321676]
   Menzies T., 2005, P WORKSH PRED MOD SO
   Menzies T., 2009, P 31 INT C SOFTW ENG
   Menzies T., 2007, P INT WORKSH LIV UNC
   Menzies T., 2007, ARTIF INTELL, V25, P211
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   METROPOLIS N, 1953, J CHEM PHYS, V21, P1087, DOI 10.1063/1.1699114
   Mittelmann H., 2007, P 22 EUR C OP RES
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Ngo-The A, 2009, IEEE T SOFTWARE ENG, V35, P109, DOI 10.1109/TSE.2008.80
   Orrego A., 2009, P INT C SOFTW PROC
   Pearce D., 1988, P 7 NAT C ART INT AA
   Pendharkar PC, 2008, INFORM SOFTWARE TECH, V50, P1181, DOI 10.1016/j.infsof.2007.10.019
   Pendharkar PC, 2009, COMMUN ACM, V52, P141, DOI 10.1145/1435417.1435449
   Rodríguez D, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1883
   Rosenbluth M., 2003, GENESIS MONTE CARLO
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saliu M.O., 2007, P 6 JOINT M EUROPEAN, P105, DOI DOI 10.1145/1287624.1287641
   Schank Roger C., 1977, SCRIPTS PLANS GOALS
   SELMAN B, 1993, P 2 DIMACS CHALL CLI
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Sheta A. F., 2006, J. Comput. Sci., V2, P118
   Silver N., 2015, SIGNAL NOISE WHY SO
   Sims C., 1999, QM RBC CODES QUANTIT
   Strickland D., 2003, P 18 COCOMO FOR
   Tran VTK, 2011, INT SYMP EMP SOFTWAR, P265, DOI 10.1109/ESEM.2011.35
   van Lamsweerde A, 1998, PROC INT CONF SOFTW, P53, DOI 10.1109/ICSE.1998.671102
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
   YANG Y, 2003, P 7 PAC AS C KNOWL D
   Zhang HY, 2008, IEEE T SOFTWARE ENG, V34, P301, DOI 10.1109/TSE.2007.70771
   Zhang HY, 2007, IEEE T SOFTWARE ENG, V33, P635, DOI 10.1109/TSE.2007.70706
NR 100
TC 6
Z9 6
U1 0
U2 27
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2013
VL 39
IS 12
BP 1698
EP 1713
DI 10.1109/TSE.2013.43
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 260PO
UT WOS:000327607000005
DA 2024-07-18
ER

PT J
AU Ali, S
   Iqbal, MZ
   Arcuri, A
   Briand, LC
AF Ali, Shaukat
   Iqbal, Muhammad Zohaib
   Arcuri, Andrea
   Briand, Lionel C.
TI Generating Test Data from OCL Constraints with Search Techniques
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE OCL; search-based testing; test data generation; empirical evaluation;
   search-based software engineering; model-based testing
ID SOFTWARE; UML; ENVIRONMENT
AB Model-based testing (MBT) aims at automated, scalable, and systematic testing solutions for complex industrial software systems. To increase chances of adoption in industrial contexts, software systems can be modeled using well-established standards such as the Unified Modeling Language (UML) and the Object Constraint Language (OCL). Given that test data generation is one of the major challenges to automate MBT, we focus on test data generation from OCL constraints in this paper. This endeavor is all the more challenging given the numerous OCL constructs and operations that are designed to facilitate the definition of constraints. Though search-based software testing has been applied to test data generation for white-box testing (e. g., branch coverage), its application to the MBT of industrial software systems has been limited. In this paper, we propose a set of search heuristics targeted to OCL constraints to guide test data generation and automate MBT in industrial applications. We evaluate these heuristics for three search algorithms: Genetic Algorithm, (1+1) Evolutionary Algorithm, and Alternating Variable Method. We empirically evaluate our heuristics using complex artificial problems, followed by empirical analyses of the feasibility of our approach on one industrial system in the context of robustness testing. Our approach is also compared with the most widely referenced OCL solver (UMLtoCSP) in the literature and shows to be significantly more efficient.
C1 [Ali, Shaukat; Arcuri, Andrea] Certus Software V&V Ctr, Simula Res Lab, N-1325 Lysaker, Norway.
   [Iqbal, Muhammad Zohaib] Natl Univ Comp & Emerging Sci FAST, Dept Comp Sci, Islamabad 44000, Pakistan.
   [Iqbal, Muhammad Zohaib] Univ Luxembourg, SnT Ctr, L-2721 Luxembourg, Luxembourg.
   [Briand, Lionel C.] Univ Luxembourg, Fac Sci Technol & Communicat, L-2721 Luxembourg, Luxembourg.
C3 University of Luxembourg; University of Luxembourg
RP Ali, S (corresponding author), Certus Software V&V Ctr, Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
EM shaukat@simula.no; zohaib.iqbal@nu.edu.pk; arcuri@simula.no;
   lionel.briand@uni.lu
RI Ali, Shaukat/H-4121-2013
OI Ali, Shaukat/0000-0002-9979-3519
FU Norwegian Research Council; PEARL grant from the Fonds National de la
   Recherche, Luxembourg
FX The work described in this paper was supported by the Norwegian Research
   Council. This paper was produced as part of the ITEA-2 project called
   VERDE. The authors thank Marius Christian Liaaen (Cisco Systems, Inc.
   Norway) for providing them with the case study. They are also grateful
   to Jordi Cabot, an author of UMLtoCSP, for helping them to run UMLtoCSP
   on the authors' industrial case study. He was in part supported by a
   PEARL grant from the Fonds National de la Recherche, Luxembourg.
CR Aertryck L.v., 2003, P APPR FORM ASS DEV
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Ahrendt W., 2000, P EUR WORKSH LOG ART
   Aichernig B.K., 2005, P 5 INT C QUAL SOFTW
   Ali S., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P41, DOI 10.1109/QSIC.2011.17
   Ali S., 2010, TECHNICAL REPORT
   Ali S., 2011, P 14 ACM IEEE INT C
   Ali S, 2012, SOFTW SYST MODEL, V11, P633, DOI 10.1007/s10270-011-0206-z
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Alshraideh M, 2006, SOFTW TEST VERIF REL, V16, P175, DOI 10.1002/stvr.354
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], 2000, HDB PARAMETRIC NONPA
   [Anonymous], P IEEE INT C SOFTW T
   Arcuri A., 2011, P 3 INT C SOFTW TEST
   Arcuri A., 2011, P INT C SOFTW ENG
   Arcuri A., 2011, P INT S SEARCH BAS S
   Arcuri A., 2010, P IFIP INT C TEST SO
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P258, DOI 10.1109/TSE.2011.121
   Bao-Lin L., 2007, P INT C COMP INT SEC
   Benattou M., 2002, P ECOOP WORKSH INT T
   Berardi D, 2005, ARTIF INTELL, V168, P70, DOI 10.1016/j.artint.2005.05.003
   Bertolino A., 2007, P FUT SOFTW ENG
   Bordbar B., 2005, P IADIS INT C APPL C
   Brucker A.D., 2011, P INT C MOD SOFTW EN
   Burke E.K., 2006, Search methodologies: Introductory tutorials in optimization and decision support techniques
   Chiorean D., 2010, OCLE
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   Clavel M., 2009, P 9 OCL WORKSH UML M
   Coley D.A., 1997, INTRO GENETIC ALGORI
   Distefano D., 2000, P ECOOP WORKSH DEF P
   Doungsa-ard C, 2008, ADVANCED DESIGN AND MANUFACTURE TO GAIN A COMPETITIVE EDGE, P147, DOI 10.1007/978-1-84800-241-8_16
   Drechsler R., 2002, Evolutionary Algorithms for Embedded System Design (Genetic Algorithms and Evolutionary Computation)
   Droste S, 2002, THEOR COMPUT SCI, V276, P51, DOI 10.1016/S0304-3975(01)00182-7
   Egea M., 2010, EYEOCL SOFTWARE
   Fraser G., 2012, P 5 IEEE INT C SOFTW
   Fraser G., 2011, P 4 IEEE INT C SOFTW
   Fraser G., 2012, P ACM IEEE INT C SOF
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M., 2009, TR0903 KINGS COLL
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Iqbal MZ, 2010, LECT NOTES COMPUT SC, V6394, P286
   Jackson D., 2000, P 22 INT C SOFTW ENG
   Kermeta, 2011, KERM BREATH LIF YOUR
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Krieger M., 2008, P 8 INT WORKSH OCL C
   Krieger M.P., 2010, P 9 INT C GEN PROGR
   Kyas M, 2005, ELECTRON NOTES THEOR, V115, P39, DOI 10.1016/j.entcs.2004.09.027
   Lefticaru R., 2008, P INT C SOFTW TEST V
   Li H., 2011, P S SEARCH BAS SOFTW
   Lindlar F., 2010, P 2 INT S SEARCH BAS
   Mantere T, 2005, APPL SOFT COMPUT, V5, P315, DOI 10.1016/j.asoc.2004.08.004
   MATHUR AP, 2008, FDN SOFTWARE TESTING
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   McMinn P., 2012, P 5 IEEE INT C SOFTW
   McMinn P, 2012, IEEE T SOFTWARE ENG, V38, P453, DOI 10.1109/TSE.2011.18
   Poulding S., 2011, P 4 IEEE INT C SOFTW
   Souza J.T.d., 2010, P 2 INT S SEARCH BAS
   Utting M., 2007, PRACTICAL MODEL BASE
   Weissleder S, 2008, LECT NOTES COMPUT SC, V5002, P151
   Winkelmann J, 2008, ELECTRON NOTES THEOR, V211, P159, DOI 10.1016/j.entcs.2008.04.038
   Yoo S., 2011, P 3 INT C SEARCH BAS
   Yue T., 2012, 201206 SIM RES LAB
NR 65
TC 92
Z9 97
U1 0
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2013
VL 39
IS 10
BP 1376
EP 1402
DI 10.1109/TSE.2013.17
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 228FO
UT WOS:000325171400004
DA 2024-07-18
ER

PT J
AU Carnevali, L
   Pinzuti, A
   Vicario, E
AF Carnevali, Laura
   Pinzuti, Alessandro
   Vicario, Enrico
TI Compositional Verification for Hierarchical Scheduling of Real-Time
   Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Real-time systems; hierarchical scheduling; ARINC-653; time division
   multiplexing; preemptive fixed priority; compositional verification;
   preemptive time Petri nets; symbolic state-space analysis
ID PETRI NETS; MODEL
AB Hierarchical Scheduling (HS) techniques achieve resource partitioning among a set of real-time applications, providing reduction of complexity, confinement of failure modes, and temporal isolation among system applications. This facilitates compositional analysis for architectural verification and plays a crucial role in all industrial areas where high-performance microprocessors allow growing integration of multiple applications on a single platform. We propose a compositional approach to formal specification and schedulability analysis of real-time applications running under a Time Division Multiplexing (TDM) global scheduler and preemptive Fixed Priority (FP) local schedulers, according to the ARINC-653 standard. As a characterizing trait, each application is made of periodic, sporadic, and jittering tasks with offsets, jitters, and nondeterministic execution times, encompassing intra-application synchronizations through semaphores and mailboxes and interapplication communications among periodic tasks through message passing. The approach leverages the assumption of a TDM partitioning to enable compositional design and analysis based on the model of preemptive Time Petri Nets (pTPNs), which is expressly extended with a concept of Required Interface (RI) that specifies the embedding environment of an application through sequencing and timing constraints. This enables exact verification of intra-application constraints and approximate but safe verification of interapplication constraints. Experimentation illustrates results and validates their applicability on two challenging workloads in the field of safety-critical avionic systems.
C1 [Carnevali, Laura; Pinzuti, Alessandro; Vicario, Enrico] Univ Florence, Dept Informat Engn, I-50139 Florence, Italy.
C3 University of Florence
RP Carnevali, L (corresponding author), Univ Florence, Dept Informat Engn, Via Santa Marta 3, I-50139 Florence, Italy.
EM laura.carnevali@unifi.it; alessandro.pinzuti@unifi.it;
   enrico.vicario@unifi.it
RI vicario, enrico/ABG-4344-2020
OI vicario, enrico/0000-0002-4983-4386
CR [Anonymous], 2009, UML PROF MARTE MOD A
   [Anonymous], 2005, J EMBEDDED COMPUT
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 2006, TECHNICAL REPORT
   Behnam Moris., 2007, P ACM IEEE INT C EMB, P279
   Berthomieu B., 1983, Information Processing 83. Proceedings of the IFIP 9th World Computer Congress, P41
   BERTHOMIEU B, 1991, IEEE T SOFTWARE ENG, V17, P259, DOI 10.1109/32.75415
   Berthomieu B, 2007, DISCRETE EVENT DYN S, V17, P133, DOI 10.1007/s10626-006-0011-v
   Bicchierai I., IEEE T IND IN PRESS
   BINI E, 2001, P 13 EUR C REAL TIM
   Bucci G, 2004, IEEE T SOFTWARE ENG, V30, P97, DOI 10.1109/TSE.2004.1265815
   Bucci Giacomo, 2010, International Journal on Software Tools for Technology Transfer, V12, P391, DOI 10.1007/s10009-010-0156-8
   BUCCI G, 1995, IEEE T SOFTWARE ENG, V21, P969, DOI 10.1109/32.489073
   BUCCI G, 2003, P 15 EUR C REAL TIM
   Buttazzo G., 2005, S COMP SCI
   Carnevali L, 2011, LECT NOTES COMPUT SC, V6652, P118, DOI 10.1007/978-3-642-21338-0_9
   Carnevali L, 2011, IEEE T SOFTWARE ENG, V37, P826, DOI 10.1109/TSE.2011.4
   Cassez F., 2000, P 11 INT C CONC THEO
   Davis RI, 2006, REAL TIM SYST SYMP P, P257, DOI 10.1109/RTSS.2006.42
   Davis RI, 2005, REAL TIM SYST SYMP P, P389
   Deng Z, 1997, REAL TIM SYST SYMP P, P308, DOI 10.1109/REAL.1997.641292
   Dill D., 1990, P INT WORKSH AUT VER, V407
   Easwaran A, 2007, RTSS 2007: 28TH IEEE INTERNATIONAL REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P129
   Easwaran A, 2007, 10TH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT AND COMPONENT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P274, DOI 10.1109/ISORC.2007.25
   Easwaran A, 2009, IEEE INT CONF EMBED, P371, DOI 10.1109/RTCSA.2009.46
   Feng X, 2002, REAL TIM SYST SYMP P, P26, DOI 10.1109/REAL.2002.1181559
   Gardey G., 2005, COMPUTER AIDED VERIF
   Lime D, 2009, REAL-TIME SYST, V41, P118, DOI 10.1007/s11241-008-9059-0
   Lipari G, 2003, 15TH EUROMICRO CONFERENCE ON REAL-TIME SYSTEMS, PROCEEDINGS, P151, DOI 10.1109/EMRTS.2003.1212738
   Lipari G, 2000, SIXTH IEEE REAL-TIME TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P166, DOI 10.1109/RTTAS.2000.852461
   Locke C. D., 1990, TECHNICAL REPORT
   Mok AK, 2001, SEVENTH IEEE REAL-TIME TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P75, DOI 10.1109/RTTAS.2001.929867
   Roux OH, 2004, LECT NOTES COMPUT SC, V3099, P371
   SASSOLI L, 2006, P 3 INT C QUANT EV S
   SHA L, 1990, IEEE T COMPUT, V39, P1175, DOI 10.1109/12.57058
   Shin I, 2003, RTSS 2003: 24TH IEEE INTERNATIONAL REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P2, DOI 10.1109/REAL.2003.1253249
   Spuri M, 1996, REAL-TIME SYST, V10, P179, DOI 10.1007/BF00360340
   Tei-Wei Kuo, 1999, Proceedings 20th IEEE Real-Time Systems Symposium (Cat. No.99CB37054), P256, DOI 10.1109/REAL.1999.818851
   Traonouez LM, 2009, J UNIVERS COMPUT SCI, V15, P3273
   Vicario E, 2001, IEEE T SOFTWARE ENG, V27, P728, DOI 10.1109/32.940727
NR 40
TC 26
Z9 29
U1 0
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2013
VL 39
IS 5
BP 638
EP 657
DI 10.1109/TSE.2012.54
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 140GL
UT WOS:000318642300004
DA 2024-07-18
ER

PT J
AU Shivaji, S
   Whitehead, EJ
   Akella, R
   Kim, S
AF Shivaji, Shivkumar
   Whitehead, E. James, Jr.
   Akella, Ram
   Kim, Sunghun
TI Reducing Features to Improve Code Change-Based Bug Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Reliability; bug prediction; machine learning; feature selection
ID DEFECT PREDICTION; SOFTWARE CHANGES; METRICS; FAULTS
AB Machine learning classifiers have recently emerged as a way to predict the introduction of bugs in changes made to source code files. The classifier is first trained on software history, and then used to predict if an impending change causes a bug. Drawbacks of existing classifier-based bug prediction techniques are insufficient performance for practical use and slow prediction times due to a large number of machine learned features. This paper investigates multiple feature selection techniques that are generally applicable to classification-based bug prediction methods. The techniques discard less important features until optimal classification performance is reached. The total number of features used for training is substantially reduced, often to less than 10 percent of the original. The performance of Naive Bayes and Support Vector Machine (SVM) classifiers when using this technique is characterized on 11 software projects. Naive Bayes using feature selection provides significant improvement in buggy F-measure (21 percent improvement) over prior change classification bug prediction results (by the second and fourth authors [28]). The SVM's improvement in buggy F-measure is 9 percent. Interestingly, an analysis of performance for varying numbers of features shows that strong performance is achieved at even 1 percent of the original number of features.
C1 [Shivaji, Shivkumar; Whitehead, E. James, Jr.] Univ Calif Santa Cruz, Dept Comp Sci, Baskin Sch Engn, Santa Cruz, CA 95064 USA.
   [Akella, Ram] Univ Calif Santa Cruz, Technol & Informat Management Program, Baskin Sch Engn, Santa Cruz, CA 95064 USA.
   [Kim, Sunghun] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Kowloon, Hong Kong, Peoples R China.
C3 University of California System; University of California Santa Cruz;
   University of California System; University of California Santa Cruz;
   Hong Kong University of Science & Technology
RP Shivaji, S (corresponding author), Univ Calif Santa Cruz, Dept Comp Sci, Baskin Sch Engn, 1156 High St, Santa Cruz, CA 95064 USA.
EM shiv@soe.ucsc.edu; ejw@soe.ucsc.edu; ram@soe.ucsc.edu; hunkim@cse.ust.hk
FU Direct For Computer & Info Scie & Enginr [0811865] Funding Source:
   National Science Foundation; Division of Computing and Communication
   Foundations [0811865] Funding Source: National Science Foundation
CR Ahmad A, 2005, PATTERN RECOGN LETT, V26, P43, DOI 10.1016/j.patrec.2004.08.015
   Alpaydin E, 2004, INTRO MACHINE LEARNI
   [Anonymous], 1999, P 5 ACM SIGKDD INT C, DOI [10.1145/312129.312186, DOI 10.1145/312129.312186]
   [Anonymous], 1998, P AAAI WORKSH LEARN
   Aversano L., 2007, IWPSE 07 9 INT WORKS, P19
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Bevan Jennifer., 2005, ESECFSE 13, P177
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   BIRNBAUM ZW, 1951, ANN MATH STAT, V22, P592, DOI 10.1214/aoms/1177729550
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P345, DOI 10.1109/ICSE.1999.841025
   Challagulla VUB, 2005, WORDS 2005: 10TH IEEE INTERNATIONAL WORKSHOP ON OBJECT-ORIENTED REAL-TIME DEPENDABLE, PROCEEDINGS, P263, DOI 10.1109/WORDS.2005.32
   D'Ambros Marco., 2011, Empirical Software Engineering, P1
   Efron B., 1993, INTRO BOOTSTRAP, VVolume 914, DOI DOI 10.1007/978-1-4899-4541-9
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   Fan RE, 2008, J MACH LEARN RES, V9, P1871
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Friedman J., 2001, ELEMENTS STAT LEARNI, V1, DOI DOI 10.1007/978-0-387-21606-5
   Gao KH, 2011, SOFTWARE PRACT EXPER, V41, P579, DOI 10.1002/spe.1043
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Hassan A.E., 2005, P 21 IEEE INT C SOFT
   Hata H., 2008, P INT WORK C MIN SOF
   Joachims T., 1998, Machine Learning: ECML-98. 10th European Conference on Machine Learning. Proceedings, P137, DOI 10.1007/BFb0026683
   Joachims T., 2006, Proceedings of the 12th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P226
   Khosgoftaar TM, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P344, DOI 10.1109/ISSRE.1998.730899
   Khoshgoftaar TM, 2003, SOFTWARE QUAL J, V11, P19, DOI 10.1023/A:1023632027907
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kononenko I., 1994, Machine Learning: ECML-94. European Conference on Machine Learning. Proceedings, P171
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lewis D. D., 1998, Machine Learning: ECML-98. 10th European Conference on Machine Learning. Proceedings, P4, DOI 10.1007/BFb0026666
   Liu H., 1998, Feature Extraction, Construction and Selection: A Data Mining Perspective, V241, P259
   Madhavan J., 2007, P OOPSLA WORKSH ECL
   MASSEY FJ, 1951, J AM STAT ASSOC, V46, P68, DOI 10.2307/2280095
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Morasca S, 2000, J SYST SOFTWARE, V53, P225, DOI 10.1016/S0164-1212(00)00014-5
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Punera K., 2006, P 15 ACM INT C INF K
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Robnik-Sikonja M, 2003, MACH LEARN, V53, P23, DOI 10.1023/A:1025667309714
   Scott S, 1999, MACHINE LEARNING, PROCEEDINGS, P379
   Shihab E., 2010, Proceedings of the ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, P1
   Shivaji S, 2009, IEEE INT CONF AUTOM, P600, DOI 10.1109/ASE.2009.76
   Sliwerski J., 2005, Proc. MSR 2005, P24
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Wright H. K., 2010, P FSE SDP WORKSH FUT, P411, DOI [10.1145/1882362.1882446, DOI 10.1145/1882362.1882446]
   Zimmermann T., 2004, Proc. of the 1st Int'lWorkshop onMining Software Repositories (MSR), P2, DOI [DOI 10.1049/IC:20040466, 10.1049/ic:20040466]
NR 51
TC 153
Z9 181
U1 1
U2 38
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2013
VL 39
IS 4
BP 552
EP 569
DI 10.1109/TSE.2012.43
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 112UH
UT WOS:000316618800007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mirarab, S
   Akhlaghi, S
   Tahvildari, L
AF Mirarab, Siavash
   Akhlaghi, Soroush
   Tahvildari, Ladan
TI Size-Constrained Regression Test Case Selection Using Multicriteria
   Optimization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software regression testing; test case selection; integer programming;
   Pareto optimality
ID TEST-CASE PRIORITIZATION; MUTATION
AB To ensure that a modified software system has not regressed, one approach is to rerun existing test cases. However, this is a potentially costly task. To mitigate the costs, the testing effort can be optimized by executing only a selected subset of the test cases that are believed to have a better chance of revealing faults. This paper proposes a novel approach for selecting and ordering a predetermined number of test cases from an existing test suite. Our approach forms an Integer Linear Programming problem using two different coverage-based criteria, and uses constraint relaxation to find many close-to-optimal solution points. These points are then combined to obtain a final solution using a voting mechanism. The selected subset of test cases is then prioritized using a greedy algorithm that maximizes minimum coverage in an iterative manner. The proposed approach has been empirically evaluated and the results show significant improvements over existing approaches for some cases and comparable results for the rest. Moreover, our approach provides more consistency compared to existing approaches.
C1 [Mirarab, Siavash] Univ Texas Austin, Dept Comp Sci, Austin, TX 78712 USA.
   [Akhlaghi, Soroush] Shahed Univ, Dept Engn, Tehran, Iran.
   [Tahvildari, Ladan] Univ Waterloo, Dept Elect & Comp Engn, Waterloo, ON N2L 3G1, Canada.
C3 University of Texas System; University of Texas Austin; Shahed
   University; University of Waterloo
RP Mirarab, S (corresponding author), Univ Texas Austin, Dept Comp Sci, Austin, TX 78712 USA.
EM smirarab@cs.utexas.edu; akhlaghi@shahed.ac.ir; ltahvild@uwaterloo.ca
OI Mirarab, Siavash/0000-0001-5410-1518
CR Alspaugh S., 2007, P ACM INT WORKSH EMP
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 1989, INSIGHTS REGRESSION
   [Anonymous], INT S SOFTW TEST AN
   Antoniol G, 2005, PROC IEEE INT CONF S, P240
   Arnold Robert S., 1996, SOFTWARE CHANGE IMPA
   Baker P, 2006, PROC IEEE INT CONF S, P176
   Binkley D, 1997, IEEE T SOFTWARE ENG, V23, P498, DOI 10.1109/32.624306
   Black J, 2004, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2004.1317433
   BOYD L, 2004, CONVEX OPTIMIZATION
   Briand LC, 2002, PROC IEEE INT CONF S, P252, DOI 10.1109/ICSM.2002.1167775
   Canfora G, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1069
   Chen D.-S., 2009, Applied Integer Programming: Modeling and Solution
   Dickinson W, 2001, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2001.919107
   Do H, 2006, EMPIR SOFTW ENG, V11, P33, DOI 10.1007/s10664-006-5965-8
   Do H., 2008, Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering (SIGSOFT '08/FSE-16), P71
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Do Hyunsook., 2006, P ACM SIGSOFT INT S, P141, DOI DOI 10.1145/1181775.1181793
   Elbaum S, 2004, SOFTWARE QUAL J, V12, P185, DOI 10.1023/B:SQJO.0000034708.84524.22
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Fischer K., 1981, P NAT TEL C
   Fischer K. F., 1977, The IEEE Computer Society's First International Computer Software and Applications Conference, P421
   Graves TL, 2001, ACM T SOFTW ENG METH, V10, P184, DOI 10.1145/367008.367020
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harrold M. J., 1988, Proceedings of the Conference on Software Maintenance - 1988 (IEEE Cat. No.88CH2615-3), P362, DOI 10.1109/ICSM.1988.10188
   HARTMANN J, 1990, IEEE SOFTWARE, V7, P31, DOI 10.1109/52.43047
   Jeffrey D, 2006, P INT COMP SOFTW APP, P411
   Kapfhammer G.M., 2007, P ACM WORKSH EMP ASS
   Kim JM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P119, DOI 10.1109/ICSE.2002.1007961
   KINNEER A, 2006, TRUNLCSE20060006
   Leon D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P442, DOI 10.1109/ISSRE.2003.1251065
   LEUNG HKN, 1991, PROCEEDINGS - CONFERENCE ON SOFTWARE MAINTENANCE 1991, P201, DOI 10.1109/ICSM.1991.160330
   Li C, 2007, LECT NOTES COMPUT SC, V4542, P93
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Lin JW, 2009, INFORM SOFTWARE TECH, V51, P679, DOI 10.1016/j.infsof.2008.11.004
   Malishevsky AG, 2002, PROC IEEE INT CONF S, P204, DOI 10.1109/ICSM.2002.1167767
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Mirarab Siavash, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P278, DOI 10.1109/ICST.2008.57
   Mirarab S, 2007, LECT NOTES COMPUT SC, V4422, P276
   Myles G., 2004, TR0411 U AR DEP COMP
   Okumoto K., 1980, Journal of Systems and Software, V1, P315, DOI 10.1016/0164-1212(79)90033-5
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Qu X., 2008, P 2008 INT S SOFTW T, P75
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Saff D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P281, DOI 10.1109/ISSRE.2003.1251050
   Smith A.M., 2009, P 24 S APPL COMP
   Tannenbaum P., 2006, EXCURSIONS MODERN MA
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   White L. J., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P262, DOI 10.1109/ICSM.1992.242535
   Wolsey L.A., 1999, WIL INT S D
   Yih-Farn Chen, 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P211, DOI 10.1109/ICSE.1994.296780
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   Zhang L, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P213
   Zhang XF, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P15
   Zhang Y, 2008, LECT NOTES COMPUT SC, V5025, P88, DOI 10.1007/978-3-540-69062-7_8
NR 61
TC 50
Z9 57
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2012
VL 38
IS 4
BP 936
EP 956
DI 10.1109/TSE.2011.56
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 983LE
UT WOS:000307120000013
DA 2024-07-18
ER

PT J
AU Valente, MT
   Borges, V
   Passos, L
AF Valente, Marco Tulio
   Borges, Virgilio
   Passos, Leonardo
TI A Semi-Automatic Approach for Extracting Software Product Lines
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software product lines; virtual separation of concerns; refactoring
   tools; annotations
ID OBJECT-ORIENTED CODE; TOOL; FEATURES; SUPPORT
AB The extraction of nontrivial software product lines (SPL) from a legacy application is a time-consuming task. First, developers must identify the components responsible for the implementation of each program feature. Next, they must locate the lines of code that reference the components discovered in the previous step. Finally, they must extract those lines to independent modules or annotate them in some way. To speed up product line extraction, this paper describes a semi-automatic approach to annotate the code of optional features in SPLs. The proposed approach is based on an existing tool for product line development, called CIDE, that enhances standard IDEs with the ability to associate background colors with the lines of code that implement a feature. We have evaluated and successfully applied our approach to the extraction of optional features from three nontrivial systems: Prevayler (an in-memory database system), JFreeChart (a chart library), and ArgoUML (a UML modeling tool).
C1 [Valente, Marco Tulio] Univ Fed Minas Gerais, Dept Comp Sci, BR-31270010 Belo Horizonte, MG, Brazil.
   [Passos, Leonardo] Univ Waterloo, Dept Elect & Comp Engn, Waterloo, ON N2L 3G1, Canada.
C3 Universidade Federal de Minas Gerais; University of Waterloo
RP Valente, MT (corresponding author), Univ Fed Minas Gerais, Dept Comp Sci, Av Antonio Carlos, BR-31270010 Belo Horizonte, MG, Brazil.
EM mtov@dcc.ufmg.br; virgilioborges@cotemig.com.br;
   lpassos@gsd.uwaterloo.ca
OI Valente, Marco Tulio/0000-0002-8180-7548
FU FAPE-MIG; CAPES; CNPq
FX This research has been supported by grants from FAPE-MIG, CAPES, and
   CNPq. The authors thank Christian Kastner and Sven Apel for their
   feedback on an earlier draft of this paper and Rogel Garcia for helping
   them with the algorithm implementation. They also thank the anonymous
   referees and the associated editor for valuable insights and comments on
   earlier versions of this paper.
CR Adams B, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P243
   [Anonymous], 2008, SPLC
   [Anonymous], 2001, software focus
   Antkiewicz M., 2004, Proc. of the Wksp on Eclipse Technology eXchange, P67, DOI DOI 10.1145/1066129.1066143
   Batory D, 2004, PROC INT CONF SOFTW, P702, DOI 10.1109/ICSE.2004.1317496
   Beuche D., 2007, Software Product Lines, P143
   Binkley D, 2005, PROC IEEE INT CONF S, P27
   Binkley D, 2006, IEEE T SOFTWARE ENG, V32, P698, DOI 10.1109/TSE.2006.95
   Bruntink M., 2007, P 6 INT C ASPECT ORI, P199
   Calder M, 2003, COMPUT NETW, V41, P115, DOI 10.1016/S1389-1286(02)00352-3
   Clements P., 2002, Software product lines
   Couto MV, 2011, EUR CON SFTWR MTNCE, P191, DOI 10.1109/CSMR.2011.25
   Czarnecki K., 2006, GPCE, P211
   Ebraert P., 2007, P 2007 INT C DYN LAN, P3, DOI DOI 10.1145/1352678.1352680
   Ebraert P, 2009, FEATURE INTERACTIONS IN SOFTWARE AND COMMUNICATION SYSTEMS X, P107, DOI 10.3233/978-1-60750-014-8-107
   Ernst MD, 2002, IEEE T SOFTWARE ENG, V28, P1146, DOI 10.1109/TSE.2002.1158288
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   GODIL I, 2005, P CASCON 2005 TOR CA, P83
   Griswold WG, 2001, PROC INT CONF SOFTW, P265, DOI 10.1109/ICSE.2001.919100
   Harman M, 2009, ACM T PROGR LANG SYS, V32, DOI 10.1145/1596527.1596528
   Igarashi A, 2001, ACM T PROGR LANG SYS, V23, P396, DOI 10.1145/503502.503505
   Janzen D., 2003, Proceedings of the 2nd Annual Conference on Aspect-Oriented Software Development (AOSD), P178, DOI 10.1145/643603.643622
   Jia Liu, 2006, 28th International Conference on Software Engineering Proceedings, P112
   Kästner C, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P223, DOI 10.1109/SPLINE.2007.12
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Kastner Christian, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P258, DOI 10.1109/ASE.2008.36
   Kastner Christian., 2009, Proceedings of the 13th International Software Product Line Conference, P181, DOI DOI 10.1145/1753235.1753261
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Krueger CW, 2002, LECT NOTES COMPUT SC, V2290, P282
   Layouni a., 2007, PROCEEDING 9 FEATURE, P66
   Leavens GT, 2005, SCI COMPUT PROGRAM, V55, P185, DOI 10.1016/j.scico.2004.05.015
   Lopez-Herrejon RE, 2005, LECT NOTES COMPUT SC, V3586, P169
   Malta MN, 2009, INFORM SOFTWARE TECH, V51, P138, DOI 10.1016/j.infsof.2008.02.001
   Murphy GC, 2001, PROC INT CONF SOFTW, P275, DOI 10.1109/ICSE.2001.919101
   Nassau M., 2009, J OBJECT TECHNOLOGY, V8, P1
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, P1, DOI 10.1109/TSE.1976.233797
   Robbins JE, 2000, INFORM SOFTWARE TECH, V42, P79, DOI 10.1016/S0950-5849(99)00083-X
   Robillard MP, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189751
   Robillard MP, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P406, DOI 10.1109/ICSE.2002.1007986
   Soares S., 2008, OOPSLA COMPANION, P737
   SPENCER H, 1992, PROCEEDINGS OF THE SUMMER 1992 USENIX CONFERENCE, P185
   Sugumaran V., 2006, COMMUN ACM, V49, P28
   Thaker Sahil., 2007, P 6 INT C GENERATIVE, P95
   Valente M. T., 2010, J BRAZILIAN COMPUTER, V16, P133, DOI DOI 10.1007/S13173-010-0008-0
   van Gurp J, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P45, DOI 10.1109/WICSA.2001.948406
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
NR 46
TC 20
Z9 23
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2012
VL 38
IS 4
BP 737
EP 754
DI 10.1109/TSE.2011.57
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 983LE
UT WOS:000307120000001
DA 2024-07-18
ER

PT J
AU van Oorschot, PC
   Wurster, G
AF van Oorschot, Paul C.
   Wurster, Glenn
TI Reducing Unauthorized Modification of Digital Objects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Protection mechanisms; software release management and delivery; system
   integration and implementation; access controls; file organization;
   operating systems
AB We consider the problem of malicious modification of digital objects. We present a protection mechanism designed to protect against unauthorized replacement or modification of digital objects while still allowing authorized updates transparently. We use digital signatures without requiring any centralized public key infrastructure. To explore the viability of our proposal, we apply the approach to file-system binaries, implementing a prototype in Linux which protects operating system and application binaries on disk. To test the prototype and related kernel modifications, we show that it protects against various rootkits currently available while incurring minimal overhead costs. The general approach can be used to restrict updates to general digital objects.
C1 [van Oorschot, Paul C.; Wurster, Glenn] Carleton Univ, Sch Comp Sci, Carleton Comp Secur Lab, Ottawa, ON K1S 5B6, Canada.
C3 Carleton University
RP van Oorschot, PC (corresponding author), Carleton Univ, Sch Comp Sci, Carleton Comp Secur Lab, Ottawa, ON K1S 5B6, Canada.
EM glenn@wurster.ca
RI Van Oorschot, Paul/E-2672-2018
OI Van Oorschot, Paul/0000-0002-5038-5370
FU NSERC; NSERC ISSNet
FX The authors thank the anonymous referees whose comments helped improve
   this work, and many individuals who provided feedback on preliminary
   drafts of this paper. Paul C. van Oorschot acknowledges NSERC for an
   NSERC Discovery Grant and his Canada Research Chair in Authentication
   and Computer Security. Partial funding from NSERC ISSNet is also
   acknowledged. Glenn Wurster is the contact author for this paper.
CR [Anonymous], 1994, FED INF PROC STAND P
   [Anonymous], 2011, GOOGLE ANDROID
   [Anonymous], 2011, EXECUTABLE LINKABLE
   [Anonymous], 2011, BSIGN
   [Anonymous], 2008, DEB GNU LIN FAQ
   [Anonymous], 1992, CSCEPL92001 NAT COMP
   [Anonymous], 2008, WRITEFILEEX FUNCTION
   [Anonymous], 2010, BLACKBERRY JAV APPL
   [Anonymous], 2011, KNOPPIX LINUX
   [Anonymous], 2007, DIG SIGN KERN MOD SY
   Apvrille A, 2004, USENIX Association Proceedings of the Eighteenth Large Installation System Administration Conference, P59
   Baliga A., 2006, DCSTR593 RUTG U DEP
   Baliga A, 2007, P IEEE S SECUR PRIV, P246, DOI 10.1109/SP.2007.25
   Bellissimo A., 2006, P USENIX WORKSH HOT
   Butler KRB, 2008, CCS'08: PROCEEDINGS OF THE 15TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P403
   Cappos J, 2008, CCS'08: PROCEEDINGS OF THE 15TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P565
   Collake J., 2007, HACKING WINDOWS FILE
   Davida G. I., 1989, Proceedings 1989 IEEE Symposium on Security and Privacy (Cat. No.89CH2703-7), P312, DOI 10.1109/SECPRI.1989.36305
   Dittrich D., 2002, ROOT KITS HIDING FIL
   Ellison C., 1999, 2692 RFC
   Florencio D., 2007, Proceedings of the 16th international conference on World Wide Web-WWW'07, P657, DOI DOI 10.1145/1242572.1242661
   Garfinkel Simson, 2003, Practical UNIX and internet Security
   Google, 2009, ANDR DEV GUID
   Grizzard J.B., 2006, THESIS GEORGIA I TEC
   Halpern J. Y., 2003, Journal of Computer Security, V11, P581
   Heiner A.P., 2007, P 3 S US PRIV SEC, P155
   Howells D., 2007, MODSIGN KERNEL MODUL
   Jaeger T, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 12TH USENIX SECURITY SYMPOSIUM, P59
   Jajodia S, 2001, ACM T DATABASE SYST, V26, P214, DOI 10.1145/383891.383894
   Kim G. H., 1994, 2nd ACM Conference on Computer and Communications Security, P18, DOI 10.1145/191177.191183
   Kim G.H., 1993, CSDTR93071 PURD U
   Korff Y., 2005, MASTERING FREEBSD OP
   Kroah-Harman G., 2004, Linux Journal, V2004, P48
   Kruegel C., 2004, Proceedings. 20th Annual Computer Security Applications Conference, P91
   Liu Q, 2003, P AUSTR INF SEC WORK, V21, P49
   Loscocco P., 2001, FREENIX 01 P USENIX
   Microsoft, 2007, DESCR WIND FIL PROT
   Oaks Scott., 2001, JAVA SECURITY
   Okuji Y.K., 2008, GNU GRUB
   Padala P., 2002, LINUX J, V103
   Pennington AG, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 12TH USENIX SECURITY SYMPOSIUM, P137
   Petroni NL, 2006, USENIX ASSOCIATION PROCEEDINGS OF THE 15TH USENIX SECURITY SYMPOSIUM, P289
   Petroni NL, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE 13TH USENIX SECURITY SYMPOSIUM, P179
   Pozzo M. M., 1987, Computers & Security, V6, P321, DOI 10.1016/0167-4048(87)90067-8
   Rivest R.L., 1996, SIMPLE DISTRIBUTED S
   Rosenblum Mendel, 2003, P NETW DISTR SYST SE
   Rubin AD, 1998, IEEE INTERNET COMPUT, V2, P30, DOI 10.1109/4236.735984
   Russell R., 2004, FILESYSTEM HIERARCHY
   Rutkowska J., 2006, SUBVERTING VISTA KER
   Skoudis Ed., 2004, MALWARE FIGHTING MAL
   Strunk J., 2000, P 4 S OP SYST DES IM
   Tyler C., 2007, FEDORA LINUX
   van de Ven A., 2008, GIT COMMIT
   van Doorn L., 2002, CSTR4259 U MAR
   Walker K.M., 1996, P 6 USENIX SEC S JUL
   Wang YM, 2005, I C DEPEND SYS NETWO, P368
   Wright C, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE 11TH USENIX SECURITY SYMPOSIUM, P17
   Wurster G., 2008, P WORKSH NEW SEC PAR
   Wurster G., 2010, THESIS CARLETON U
   Wurster G., 2007, P USENIX WORKSH HOT
   Ye Z., 2005, ACM Transactions on Information and Systems Security, V8, P153, DOI 10.1145/1065545.1065546
   Zhao X., 2005, IEEE INT SECURITY ST, P21
NR 62
TC 1
Z9 1
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2012
VL 38
IS 1
BP 191
EP 204
DI 10.1109/TSE.2011.7
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881HG
UT WOS:000299472600013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Garousi, V
AF Garousi, Vahid
TI A Genetic Algorithm-Based Stress Test Requirements Generator Tool and
   Its Empirical Evaluation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Search-based testing; genetic algorithms; stress testing; test tools;
   test automation; empirical analysis
ID OPTIMIZATION; SOFTWARE; SYSTEMS
AB Genetic algorithms (GAs) have been applied previously to UML-driven stress test requirements generation with the aim of increasing chances of discovering faults relating to network traffic in distributed real-time systems. However, since evolutionary algorithms are heuristic, their performance can vary across multiple executions, which may affect robustness and scalability. To address this, we present the design and technical detail of a UML-driven, GA-based stress test requirements generation tool, together with its empirical analysis. The main goal is to analyze and improve the applicability, efficiency, and effectiveness and also to validate the design choices of the GA used in the tool. Findings of the empirical evaluation reveal that the tool is robust and reasonably scalable when it is executed on large-scale experimental design models. The study also reveals the main bottlenecks and limitations of the tools, e.g., there is a performance bottleneck when the system under test has a large number of sequence diagrams which could be triggered independently from each other. In addition, issues specific to stress testing, e.g., the impact of variations in task arrival pattern types, reveal that the tool generally generates effective test requirements, although the features of those test requirements might be different in different runs (e.g., different stress times from the test start time might be chosen). While the use of evolutionary algorithms to generate software test cases has been widely reported, the extent, depth, and detail of the empirical findings presented in this paper are novel and suggest that the proposed approach is effective and efficient in generating stress test requirements. It is hoped that the findings of this empirical study will help other SBSE researchers with the empirical evaluation of their own techniques and tools.
C1 Univ Calgary, Software Qual Engn Res Grp SoftQual, Dept Elect & Comp Engn, Schulich Sch Engn, Calgary, AB T2N 1N4, Canada.
C3 University of Calgary
RP Garousi, V (corresponding author), Univ Calgary, Software Qual Engn Res Grp SoftQual, Dept Elect & Comp Engn, Schulich Sch Engn, 2500 Univ Dr NW, Calgary, AB T2N 1N4, Canada.
EM vgarousi@ucalgary.ca
OI Garousi, Vahid/0000-0001-6590-7576
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
   [341511-07]; Alberta Ingenuity New Faculty Award [200600673]
FX Part of this work was conducted when the author was with the Software
   Quality Engineering Laboratory at Carleton University. This work was
   supported in part by the Discovery Grant no. 341511-07 from the Natural
   Sciences and Engineering Research Council of Canada (NSERC), and also by
   the Alberta Ingenuity New Faculty Award no. 200600673. The author would
   like to sincerely thank all of the anonymous reviewers of this paper for
   their valuable comments, criticisms, and suggestions which greatly
   improved the quality of this paper.
CR [Anonymous], UML 2 0 SUP SPEC
   [Anonymous], 1996, GALIB C LIB GENETIC
   [Anonymous], 2005, UML PROF SCHED PERF
   [Anonymous], 2007, P 2007 INT S SOFTW T, DOI DOI 10.1145/1273463.1273475
   AVRITZER A, 1995, IEEE T SOFTWARE ENG, V21, P705, DOI 10.1109/32.464549
   AVRITZER A, 1994, P INT S SOFTW TEST A, P44
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   BRIAND LC, 2007, P INT S EMP SOFTW EN
   BRUNTON J, 1996, P INT C POW SYST CON, P176
   CHAN EK, 1992, IEEE T POWER SYST, V7, P320, DOI 10.1109/59.141721
   GAROUSI V, 2006, SCE0609 CARL U
   Garousi V., 2008, 10 ANN C GENETIC EVO, P1743
   GAROUSI V, 2006, P INT C SOFTW ENG, P391
   GAROUSI V, 2008, P IEEE INT C SOFTW T, P92
   GAROUSI V, 2005, P EUR C MOD DRIV ARC, P160
   Garousi V., 2006, THESIS CARLETON U, pNON
   GAROUSI V, 2009, GARUS GENETIC ALGORI
   Garousi V, 2008, J SYST SOFTWARE, V81, P161, DOI 10.1016/j.jss.2007.05.037
   GREFENSTETTE JJ, 1986, IEEE T SYST MAN CYB, V16, P122, DOI 10.1109/TSMC.1986.289288
   HARMAN M., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, P155, DOI DOI 10.1145/1287624.1287647
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Haupt R, 1998, PRACTICAL GENETIC AL
   KUHN R, 1997, COMPUTER, V30, P31
   MIN Y, 2006, P INT C COMP SCI, P1032
   *OMG, 2007, UML 2 1 2 SUP SPEC
   RUDOLPH G, 1994, IEEE T NEURAL NETWOR, V5, P96, DOI 10.1109/72.265964
   Sastry K, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1388
   Tsai J., 1996, DISTRIBUTED REAL TIM
   Weyuker EJ, 2000, IEEE T SOFTWARE ENG, V26, P1147, DOI 10.1109/32.888628
   *WIK, 2007, NE BLACK 2003
   Xiao M, 2007, EMPIR SOFTW ENG, V12, P183, DOI 10.1007/s10664-006-9026-0
NR 31
TC 17
Z9 20
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2010
VL 36
IS 6
BP 778
EP 797
DI 10.1109/TSE.2010.5
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 682SU
UT WOS:000284424100005
DA 2024-07-18
ER

PT J
AU Zimmermann, T
   Premraj, R
   Bettenburg, N
   Just, S
   Schröter, A
   Weiss, C
AF Zimmermann, Thomas
   Premraj, Rahul
   Bettenburg, Nicolas
   Just, Sascha
   Schroeter, Adrian
   Weiss, Cathrin
TI What Makes a Good Bug Report?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing and debugging; distribution; maintenance; and enhancement; human
   factors; management; measurement
AB In software development, bug reports provide crucial information to developers. However, these reports widely differ in their quality. We conducted a survey among developers and users of APACHE, ECLIPSE, and MOZILLA to find out what makes a good bug report. The analysis of the 466 responses revealed an information mismatch between what developers need and what users supply. Most developers consider steps to reproduce, stack traces, and test cases as helpful, which are, at the same time, most difficult to provide for users. Such insight is helpful for designing new bug tracking tools that guide users at collecting and providing more helpful information. Our CUEZILLA prototype is such a tool and measures the quality of new bug reports; it also recommends which elements should be added to improve the quality. We trained CUEZILLA on a sample of 289 bug reports, rated by developers as part of the survey. The participants of our survey also provided 175 comments on hurdles in reporting and resolving bugs. Based on these comments, we discuss several recommendations for better bug tracking systems, which should focus on engaging bug reporters, better tool support, and improved handling of bug duplicates.
C1 [Zimmermann, Thomas] Microsoft Res, Redmond, WA 98052 USA.
   [Premraj, Rahul] Vrije Univ Amsterdam, Dept Comp Sci, NL-1081 HV Amsterdam, Netherlands.
   [Bettenburg, Nicolas] Queens Univ, SAIL, Sch Comp, Kingston, ON K7L 3N6, Canada.
   [Just, Sascha] Saarland Univ Comp Sci, D-66123 Saarbrucken, Germany.
   [Schroeter, Adrian] Univ Victoria, Victoria, BC V8W3P6, Canada.
   [Weiss, Cathrin] Univ Zurich, Dept Informat, CH-8050 Zurich, Switzerland.
C3 Microsoft; Vrije Universiteit Amsterdam; Queens University - Canada;
   Saarland University; University of Victoria; University of Zurich
RP Zimmermann, T (corresponding author), Microsoft Res, 1 Microsoft Way, Redmond, WA 98052 USA.
EM tzimmer@microsoft.com; rpremraj@cs.vu.nl; nicbet@cs.queensu.ca;
   sascha.just@ieee.org; schadr@uvic.ca; weiss@ifi.uzh.ch
FU DFG Research Training Group "Performance Guarantees for Computer
   Systems"
FX The authors thank Avi Bernstein, Harald Gall, Christian Lindig, Stephan
   Neuhaus, Andreas Zeller, and the FSE and TSE reviewers for valuable and
   helpful suggestions on earlier revisions of this paper. A special thanks
   to everyone who responded to their survey. When this research was
   carried out, all authors were with Saarland University; Thomas
   Zimmermann was funded by the DFG Research Training Group "Performance
   Guarantees for Computer Systems."
CR ANBALAGAN P, 2008, P 25 IEEE INT C SOFT, P304
   [Anonymous], 2004, Software Engineering and Knowledge Engineering
   [Anonymous], 2007, P 2014 WORKSH ECL TE, DOI 10.1145/1328279.1328284
   [Anonymous], 2006, THESIS U BRIT COLUMB
   [Anonymous], 2004, SPRINGER TEXTS STAT
   [Anonymous], P 16 INT S FDN SOFTW
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   Antoniol G., 2004, TUV1841200405
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   ANVIK J, ACM T SOFTW IN PRESS
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Aranda J., 2009, P 31 INT C SOFTW ENG
   Artzi S, 2008, LECT NOTES COMPUT SC, V5142, P542, DOI 10.1007/978-3-540-70592-5_23
   Ashok B, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P373
   BARKER I, 2010, WHAT IS INFORM ARCHI
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bertram D, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P291
   BETTENBURG N, 2008, P 5 WORK C MIN SOFTW
   Bettenburg N., 2008, P 5 INT WORK C MIN S
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   BIRD C, 2009, P EUR SOFTW ENG C AC
   Breu S, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P301
   Canfora G., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1767, DOI 10.1145/1141277.1141693
   CANFORA G, 2006, P INT WORKSH MIN SOF, P105, DOI DOI 10.1145/1137983.1138009
   CHERRY L, 1980, WRITING TOOLS STYLE
   CUNNINGHAM W, 2005, BEST BUGZILLA
   Dit B., 2008, Proceedings of the 2008 International Workshop on Recommendation Systems for Software Engineering - RSSE'08, (New York, New York, USA), P47
   *ECL FDN, 2010, CALL SIM REL BUG FIN
   Fischer M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P90, DOI 10.1109/WCRE.2003.1287240
   GOLDBERG E, 2010, BUG WRITING GUIDELIN
   Guo P. J., 2010, P 32 INT C SOFTW ENG
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   JEONG G, 2009, P EUR SOFTW ENG C AC
   JOSHI S, 2007, P 23 IEEE INT C SOFT
   Just S, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P82, DOI 10.1109/VLHCC.2008.4639063
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   KIM S, 2008, MSR MINING CHALLENGE
   Kincaid J.P., 1975, Derivation of New Readability Formulas (Automated Readability Index, Fog Count and Flesch Reading Ease Formula) for Navy Enlisted Personnel, DOI [DOI 10.21236/ADA006655, 10.21236/ADA006655]
   KO AJ, 2010, P ACM C HUM FACT COM
   Ko AJ, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P127
   LIBLIT B, 2005, P 2005 ACM SIGPLAN C, P15, DOI DOI 10.1145/1065010.1065014
   Likert R., 1932, Arch. Psychol., V22, P44, DOI DOI 10.4135/9781412961288.N454
   MacKenzie D., 2003, Comparing and Merging Files with GNU diff and patch
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   Moonen L, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/WCRE.2001.957806
   *MOZ ORG, 2010, MOZ SEC BUG BOUNT PR
   ORSO A, 2006, P 5 INT WORKSH DYN A
   Page A., 2008, WE TEST SOFTWARE MIC
   PAGE A, 2008, DUPLICATE BUGS
   Panjer L. D., 2007, P 4 INT WORKSH MIN S
   Passing U, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P120, DOI 10.1109/ISESE.2003.1237971
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   SCHROTER A, 2010, P 2010 INT WORK C MI
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Singer J, 2002, IEEE T SOFTWARE ENG, V28, P1171, DOI 10.1109/TSE.2002.1158289
   Spolsky J., 2004, Joel on Software
   VANLIERE DW, 2009, SSRN ELIBRARY
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   WEIMER W, 2006, P 5 INT C GEN PROGR, P181
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Witten I. H., 2005, DATA MINING PRACTICA
   Xu G., 2007, P THE 6 JOINT M EURO, P85, DOI DOI 10.1145/1287624.1287638
   Zimmermann T, 2009, PROC INT CONF SOFTW, P247, DOI 10.1109/ICSE-COMPANION.2009.5070993
NR 64
TC 194
Z9 213
U1 2
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2010
VL 36
IS 5
BP 618
EP 643
DI 10.1109/TSE.2010.63
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 653YP
UT WOS:000282135000003
DA 2024-07-18
ER

PT J
AU Dong, JS
   Hao, P
   Qin, SC
   Sun, J
   Yi, W
AF Dong, Jin Song
   Hao, Ping
   Qin, Shengchao
   Sun, Jun
   Yi, Wang
TI Timed Automata Patterns
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Timed Automata; timed patterns; TCOZ; UPPAAL
AB Timed Automata have proven to be useful for specification and verification of real-time systems. System design using Timed Automata relies on explicit manipulation of clock variables. A number of automated analyzers for Timed Automata have been developed. However, Timed Automata lack composable patterns for high-level system design. Specification languages like Timed Communicating Sequential Process (CSP) and Timed Communicating Object-Z (TCOZ) are well suited for presenting compositional models of complex real-time systems. In this work, we define a set of composable Timed Automata patterns based on hierarchical constructs in time-enriched process algebras. The patterns facilitate the hierarchical design of complex systems using Timed Automata. They also allow a systematic translation from Timed CSP/TCOZ models to Timed Automata so that analyzers for Timed Automata can be used to reason about TCOZ models. A prototype has been developed to support system design using Timed Automata patterns or, if given a TCOZ specification, to automate the translation from TCOZ to Timed Automata.
C1 [Dong, Jin Song; Hao, Ping; Sun, Jun] Natl Univ Singapore, Sch Comp, Singapore 117543, Singapore.
   [Qin, Shengchao] Univ Durham, Dept Comp Sci, Sci Labs, Durham DH1 3LE, England.
   [Yi, Wang] N Eastern Univ, Sch Sci & Engn, Shenyang, Peoples R China.
   [Yi, Wang] Uppsala Univ, Dept Informat Technol, Uppsala 75105, Sweden.
C3 National University of Singapore; Durham University; Uppsala University
RP Dong, JS (corresponding author), Natl Univ Singapore, Sch Comp, 3 Sci Dr 2, Singapore 117543, Singapore.
EM dongjs@comp.nus.edu.sg; haoping@comp.nus.edu.sg;
   shengchao.qin@durham.ac.uk; sunj@comp.nus.edu.sg; yi@it.uu.se
RI Qin, Shengchao/F-4823-2012; Dong, Jin Song/B-9396-2013
OI Qin, Shengchao/0000-0003-3028-8191; Sun, Jun/0000-0002-3545-1392
FU National University of Singapore [R-252-000-201-112]
FX The authors would like to thank Hugh Anderson, Roger Duke, Sun Jing,
   Wang Hai, Lars Grunske, and the anonymous referees for their insightful
   comments on this work. This research is partially supported by the
   research grant R-252-000-201-112 funded by National University of
   Singapore. Jun Sun is the corresponding author for this paper.
CR Alur R., 1990, Proceedings. Fifth Annual IEEE Symposium on Logic in Computer Science (90CH2897-7), P414, DOI 10.1109/LICS.1990.113766
   ALUR R, 1994, THEORETICAL COMPUTER, V126, P235
   [Anonymous], 1997, The Theory and Practice of Concurrency
   Bornot S, 1997, LECT NOTES COMPUT SC, V1201, P286, DOI 10.1007/BFb0014733
   Bornot Sebastien., 1997, COMPOS, P103
   BOWMAN H, 1999, P 5 INT AMAST WORKSH, P334
   Bowman H, 2005, ELECTRON NOTES THEOR, V139, P25, DOI 10.1016/j.entcs.2005.09.006
   Bowman H, 2006, FORM ASP COMPUT, V18, P459, DOI 10.1007/s00165-006-0010-7
   BROOKE P, 1999, THESIS U YORK
   BROOKE SD, 1983, THESIS OXFORD U
   CHENG A.M. K., 2002, REAL-TIME SYSTEMS: Scheduling, Analysis, and Verification
   Davidson RJ, 2001, SOC SCI INFORM, V40, P11, DOI 10.1177/053901801040001002
   DAVIES J, 1993, SPECIFICATION PROOF
   Dong JS, 1997, FIRST IEEE INTERNATIONAL CONFERENCE ON FORMAL ENGINEERING METHODS, PROCEEDINGS, P161, DOI 10.1109/ICFEM.1997.630423
   DONG JS, 1999, P WORLD C FORM METH, P1855
   DONG JS, 2004, P 6 INT C FORM ENG M, P483
   DONG JS, 2006, P 8 INT C FORM ENG M, P342
   DUKE R, 2000, CORNERSTONES COMPUTI
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Fuhrmann H, 2005, 2005 IEEE Intelligent Transportation Systems Conference (ITSC), P19
   GHEZZI C, 1990, J SYST SOFTWARE, V12, P107, DOI 10.1016/0164-1212(90)90074-V
   Gruhn V, 2006, ELECTRON NOTES THEOR, V153, P117, DOI 10.1016/j.entcs.2005.10.035
   Grunske L, 2007, 2007 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P211, DOI 10.1109/ASWEC.2007.49
   Harel D, 1997, COMPUTER, V30, P31, DOI 10.1109/2.596624
   Havelund K, 1997, REAL TIM SYST SYMP P, P2, DOI 10.1109/REAL.1997.641264
   HAYES IJ, 1998, P IFIP WORK C PROGR
   Hoare CAR., 1985, Communicating Sequential Processes
   HOENICKE J, 2002, P 3 INT C INT FORM M, P245
   JAHANIAN F, 1987, IEEE T COMPUT, V36, P961, DOI 10.1109/TC.1987.5009519
   Konrad S, 2005, PROC INT CONF SOFTW, P372
   LAI LM, 1997, P INT WORKSH HYBR RE, P69
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Larsen K.G., 2005, Proceedings of the 5th ACM international conference on Embedded software, P299, DOI DOI 10.1145/1086228.1086283
   Lindahl Magnus., 2001, SPRINGER INT J SOFTW, V3, P353
   Lynch N., 1996, Formal Aspects of Computing, V8, P499, DOI 10.1007/BF01211907
   Mahony B, 2000, IEEE T SOFTWARE ENG, V26, P150, DOI 10.1109/32.841115
   MAHONY B, 1998, P 11 INT C Z US ZUM, P308
   *OBJ MAN GROUP, 2008, UML RES PAG
   Ouaknine J. L., 2003, Nordic Journal of Computing, V10, P99
   Schneider S, 2000, Concurrent and real-time systems
   SIFAKIS J, 1999, LECT NOTES COMPUTER, V1633, P2
   Sun J, 2002, ANN SOFTW ENG, V13, P329, DOI 10.1023/A:1016513914276
   Woodcock J., 1996, Using Z: Specification, Refinement, and Proof
NR 43
TC 41
Z9 47
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2008
VL 34
IS 6
BP 844
EP 859
DI 10.1109/TSE.2008.52
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 376HR
UT WOS:000261175200009
OA Green Published, Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Telang, R
   Wattal, S
AF Telang, Rahul
   Wattal, Sunil
TI An empirical analysis of the impact of software vulnerability
   announcements on firm stock price
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE information security; software vulnerability; quality; event-study;
   patching; software vendors
ID MARKET VALUE; NETWORK EXTERNALITIES; SHAREHOLDER WEALTH; SECURITY;
   QUALITY; PERFORMANCE; EVENT; FLAWS; RISK
AB Security defects in software cost millions of dollars to firms in terms of downtime, disruptions, and confidentiality breaches. However, the economic implications of these defects for software vendors are not well understood. Lack of legal liability and the presence of switching costs and network externalities may protect software vendors from incurring significant costs in the event of a vulnerability announcement, unlike such industries as auto and pharmaceuticals, which have been known to suffer significant loss in market value in the event of a defect announcement. Although research in software economics has studied firms' incentives to improve overall quality, there have not been any studies which show that software vendors have an incentive to invest in building more secure software. The objectives of this paper are twofold. 1) We examine how a software vendor's market value changes when a vulnerability is announced. 2) We examine how firm and vulnerability characteristics mediate the change in the market value of a vendor. We collect data from leading national newspapers and industry sources, such as the Computer Emergency Response Team (CERT), by searching for reports on published software vulnerabilities. We show that vulnerability announcements lead to a negative and significant change in a software vendor's market value. In our sample, on average, a vendor loses around 0.6 percent value in stock price when a vulnerability is reported. We find that a software vendor loses more market share if the market is competitive or if the vendor is small. To provide further insight, we use the information content of the disclosure announcement to classify vulnerabilities into various types. We find that the change in stock price is more negative if the vendor fails to provide a patch at the time of disclosure. Also, more severe flaws have a significantly greater impact. Our analysis provides many interesting implications for software vendors as well as policy makers. In particular, our study provides some evidence of the value of secure software.
C1 Carnegie Mellon Univ, HJ Heinz III Sch Publ Policy & Management, Pittsburgh, PA 15237 USA.
   Temple Univ, Fox Sch Business, Philadelphia, PA 19122 USA.
C3 Carnegie Mellon University; Pennsylvania Commonwealth System of Higher
   Education (PCSHE); Temple University
RP Telang, R (corresponding author), Carnegie Mellon Univ, HJ Heinz III Sch Publ Policy & Management, 2107D Hamburg Hall,4800 Forbes Ave, Pittsburgh, PA 15237 USA.
EM rtelang@andrew.cmu.edu; swattal@temple.edu
OI Telang, Rahul/0000-0002-9353-7661
CR [Anonymous], GASTROINTESTINAL MIC
   [Anonymous], 2001, P 17 ANN COMP SEC AP
   [Anonymous], 1994, The Capability Maturity Model: Guidelines for Improving the Software Process
   [Anonymous], 1997, The Econometrics of Financial Markets
   [Anonymous], EC IMP IN INFR SOFTW
   [Anonymous], ECONOMETRIC ANAL
   Applewhite A, 2004, IEEE SOFTWARE, V21, P94, DOI 10.1109/MS.2004.1270771
   Arora A, 2006, MANAGE SCI, V52, P465, DOI 10.1287/mnsc.1050.0440
   ARORA A, 2004, P WORKSH EC INF SEC
   Barki H., 1993, Journal of Management Information Systems, V10, P203
   BASILIAND VR, 1991, COMPUTER, V20, P90
   BROWN SJ, 1985, J FINANC ECON, V14, P3, DOI 10.1016/0304-405X(85)90042-X
   BROWN SJ, 1980, J FINANC ECON, V8, P205, DOI 10.1016/0304-405X(80)90002-1
   Brynjolfsson E, 1996, MANAGE SCI, V42, P1627, DOI 10.1287/mnsc.42.12.1627
   Campbell K., 2003, Journal of Computer Security, V11, P431
   Cavusoglu H, 2004, INT J ELECTRON COMM, V9, P69, DOI 10.1080/10864415.2004.11044320
   Chatterjee D, 2001, MIS QUART, V25, P43, DOI 10.2307/3250958
   Cooper MJ, 2001, J FINANC, V56, P2371, DOI 10.1111/0022-1082.00408
   Cusumano MA, 2004, COMMUN ACM, V47, P25
   DAVIDSON WN, 1992, STRATEGIC MANAGE J, V13, P467, DOI 10.1002/smj.4250130606
   DEVANBU PT, 2000, FUTURE SOFTWARE ENG, P225
   Dos Santos BL, 1993, INFORM SYST RES, V4, P1, DOI 10.1287/isre.4.1.1
   Gallaugher JM, 2002, MIS QUART, V26, P303, DOI 10.2307/4132311
   GANDAL N, 1994, RAND J ECON, V25, P160, DOI 10.2307/2555859
   GOLDBERGER AS, 1998, INTRO ECONOMETRICS
   Gordon L. A., 2002, ACM Transactions on Information and Systems Security, V5, P438, DOI 10.1145/581271.581274
   Gordon LA, 2003, COMMUN ACM, V46, P81, DOI 10.1145/636772.636774
   Harter DE, 2000, MANAGE SCI, V46, P451, DOI 10.1287/mnsc.46.4.451.12056
   Hendricks KB, 1996, MANAGE SCI, V42, P415, DOI 10.1287/mnsc.42.3.415
   Hendricks KB, 1997, MANAGE SCI, V43, P422, DOI 10.1287/mnsc.43.4.422
   HOLZMANN GJ, 2001, P WORKSH PROGR AN SO
   Hovav A, 2005, COMPUT SECUR, V24, P409, DOI 10.1016/j.cose.2005.02.003
   Hovav A., 2003, RISK MANAG INSUR REV, V6, P97, DOI DOI 10.1046/J.1098-1616.2003.026.X
   Im KS, 2001, INFORM SYST RES, V12, P103, DOI 10.1287/isre.12.1.103.9718
   JARRELL G, 1985, J POLIT ECON, V93, P512, DOI 10.1086/261313
   Kannan K, 2005, MANAGE SCI, V51, P726, DOI 10.1287/mnsc.1040.0357
   Kannan K., 2004, REEXAMINING IMPACT I
   Kothari S.P., 2007, Handbook of Empirical Corporate Finance, P33
   McGraw G, 2004, IEEE SECUR PRIV, V2, P80, DOI 10.1109/MSECP.2004.1281254
   PALEPU K, 1985, STRATEGIC MANAGE J, V6, P239, DOI 10.1002/smj.4250060305
   Pfleeger C. P., 1997, IEEE SOFTWARE, V14, P15
   RYAN DJ, 2003, IEEE SECURITY PR JAN, P70
   Slaughter SA, 1998, COMMUN ACM, V41, P67, DOI 10.1145/280324.280335
   Subramani M, 2001, INFORM SYST RES, V12, P135, DOI 10.1287/isre.12.2.135.9698
   Wallace L, 2004, DECISION SCI, V35, P289, DOI 10.1111/j.00117315.2004.02059.x
   Wang HQ, 2003, COMMUN ACM, V46, P75, DOI 10.1145/777313.777315
   WESTLAND JC, 2003, DECISION SCI, V37, P229
NR 47
TC 126
Z9 166
U1 0
U2 48
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2007
VL 33
IS 8
BP 544
EP 557
DI 10.1109/TSE.2007.70712
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 182ZJ
UT WOS:000247542200004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Milicev, D
AF Milicev, Dragan
TI On the semantics of associations and association ends in UML
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE object-oriented modeling; Unified Modeling Language (UML); association;
   association end; formal semantics; conceptual modeling; model-driven
   development
AB Association is one of the key concepts in UML that is intensively used in conceptual modeling. Unfortunately, in spite of the fact that this concept is very old and is inherited from other successful modeling techniques, a fully unambiguous understanding of it, especially in correlation with other newer concepts connected with association ends, such as uniqueness, still does not exist. This paper describes a problem with one widely assumed interpretation of the uniqueness of association ends, the restrictive interpretation, and proposes an alternative, the intentional interpretation. Instead of restricting the association from having duplicate links, uniqueness of an association end in the intentional interpretation modifies the way in which the association end maps an object of the opposite class to a collection of objects of the class at that association end. If the association end is unique, the collection is a set obtained by projecting the collection of all linked objects. In that sense, the uniqueness of an association end modifies the view to the objects at that end, but does not constrain the underlying object structure. This paper demonstrates how the intentional interpretation improves expressiveness of the modeling language and has some other interesting advantages. Finally, this paper gives a completely formal definition of the concepts of association and association ends, along with the related notions of uniqueness, ordering, and multiplicity. The semantics of the UML actions on associations are also defined formally.
C1 Univ Belgrade, Fac Elect Engn, Dept Comp Sci, Belgrade 11120, Serbia.
C3 University of Belgrade
RP Milicev, D (corresponding author), Univ Belgrade, Fac Elect Engn, Dept Comp Sci, POB 35-54, Belgrade 11120, Serbia.
EM dmilicev@etf.bg.ac.yu
CR [Anonymous], 1992, The Z Notation
   [Anonymous], PTC041002 OBJ MAN GR
   Barbier F, 2003, IEEE T SOFTWARE ENG, V29, P459, DOI 10.1109/TSE.2003.1199074
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   BOURDEAU RH, 1995, IEEE T SOFTWARE ENG, V21, P799, DOI 10.1109/32.469459
   DISKIN Z, 2006, P ACM IEEE 9 INT C M
   DONG JS, 1995, OBJECT ORIENTED SYST, V2, P41
   FRANCE RB, 1999, P 1999 ACM SIGPLAN C
   GENOVA G, 2004, J OBJECT TECHNOLOGY, V3, P83
   Genova G., 2002, SOFTW SYST MODEL, V1, P86
   MILICEV D, 2005, SEMANTICS ASS ASS EN
   O'Vergaard G., 1998, P PSMT 98 WORKSH PRE
   *OBJ MAN GROUP, 2003, ISS MAIL LIST UML 2
   Overgaard G., 2000, THESIS ROYAL I TECHN
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Selic B, 2002, COMMUN ACM, V45, P70, DOI 10.1145/581571.581595
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Selic Bran., 2004, FORMAL METHODS DESIG
   Smith Graeme., 2000, OBJECT Z SPECIFICATI
   Stevens P., 2002, SOFTWARE SYSTEMS MOD, V1, P68, DOI DOI 10.1007/S10270-002-0002-X
NR 21
TC 12
Z9 13
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2007
VL 33
IS 4
BP 238
EP 251
DI 10.1109/TSE.2007.37
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 140TQ
UT WOS:000244530000003
DA 2024-07-18
ER

PT J
AU Cavusoglu, H
   Cavusoglu, H
   Raghunathan, S
AF Cavusoglu, Hasan
   Cavusoglu, Huseyin
   Raghunathan, Srinivasan
TI Efficiency of vulnerability disclosure mechanisms to disseminate
   vulnerability knowledge
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE information security; software vulnerabilities; disclosure mechanisms;
   responsible vulnerability disclosure; economic modeling; game theory
AB Security vulnerabilities in software are one of the primary reasons for security breaches, and an important challenge from knowledge management perspective is to determine how to manage the disclosure of knowledge about those vulnerabilities. The security community has proposed several disclosure mechanisms, such as full vendor, immediate public, and hybrid, and has debated about the merits and demerits of these alternatives. In this paper, we study how vulnerabilities should be disclosed to minimize the social loss. We find that the characteristics of the vulnerability (vulnerability risk before and after disclosure), cost structure of the software user population, and vendor's incentives to develop a patch determine the optimal (responsible) vulnerability disclosure. We show that, unlike some existing vulnerability disclosure mechanisms that fail to motivate the vendor to release its patch, responsible vulnerability disclosure policy always ensures the release of a patch. However, we find that this is not because of the threat of public disclosure, as argued by some security practitioners. In fact, not restricting the vendor with a time constraint can ensure the patch release. This result runs counter to the argument of some that setting a grace period always pushes the vendor to develop a patch. When the vulnerability affects multiple vendors, we show that the responsible disclosure policy cannot ensure that every vendor will release a patch. However, when the optimal policy does elicit a patch from each vendor, we show that the coordinator's grace period in the multiple vendor case falls between the grace periods that it would set individually for the vendors in the single vendor case. This implies that the coordinator does not necessarily increase the grace period to accommodate more vendors. We then extend our base model to analyze the impact of 1) early discovery and 2) an early warning system that provides privileged vulnerability knowledge to selected users before the release of a patch for the vulnerability on responsible vulnerability disclosure. We show that while early discovery always improves the social welfare, an early warning system does not necessarily improve the social welfare.
C1 Univ British Columbia, Sauder Sch Business, Vancouver, BC V6T 1Z2, Canada.
   Univ Texas, Sch Management, Richardson, TX 75083 USA.
C3 University of British Columbia; University of Texas System; University
   of Texas Dallas
RP Cavusoglu, H (corresponding author), Univ British Columbia, Sauder Sch Business, Vancouver, BC V6T 1Z2, Canada.
EM cavusoglu@sauder.ubc.ca; huseyin@utdallas.edu; sraghu@utdallas.edu
RI Cavusoglu, Huseyin/KFQ-8127-2024; Raghunathan, Srinivasan/KFR-3471-2024
OI Cavusoglu, Huseyin/0000-0002-7982-3602; Raghunathan,
   Srinivasan/0000-0002-2782-3520; Cavusoglu, Hasan/0000-0001-9734-785X
CR *AC, 2004, ASPR NOT PUBL POL
   Arbaugh WA, 2000, COMPUTER, V33, P52, DOI 10.1109/2.889093
   ARORA A, 2004, P WORKSH EC INF SEC
   August T, 2006, MANAGE SCI, V52, P1703, DOI 10.1287/mnsc.1060.0568
   Browne HK, 2001, P IEEE S SECUR PRIV, P214, DOI 10.1109/SECPRI.2001.924300
   CAVUSOGLU H, 2004, P WORKSH INF TECHN S
   Cavusoglu H., 2004, Commun. Assoc. Inf. Syst., V14, P3
   *CBS NEWS COM, 2002, LOCK WIND
   *CERT COORD CTR, 2000, VULN DISCL POL
   CHAMBERS JT, 2004, VULNERABILITY DISCLO
   CULP S, 2000, DEFINITION SECURITY
   *CYBSEC, 2004, CYBSEC SEC VULN DISC
   *EYES, 2004, UPC ADV
   FISHER D, 2003, EWEEK           0324
   HAVANA T, 2003, THESIS U JYVASKYLA
   Kannan K, 2004, P 37 HAW INT C SYST
   LAAKSO M, 1999, P 11 FIRST C COMP SE
   *NAT I STAND TECHN, 2002, 80040 NIST
   NIZOVTSEV D, 2005, P WORKSH EC INF SEC
   Organization for Internet Safety, 2004, GUID SEC VULN REP RE
   OZMENT A, 2005, P WORKSH EC INF SEC
   OZMENT A, 2004, P WORKSH EC INF SEC
   POND W, 2000, ZDNET           0815
   PRESTON E, 2002, WHITTIER LAW REV, V24, P71
   RANUM MJ, 2004, VULNERABILITY DISCLO
   RESCORLA E, 2004, P WORKSH EC INF SEC
   SCHECHTER S, 2002, P INFR SEC C
   SCHILLER J, 2002, SECURE BUSINESS Q, V2
   Schnell R, 2001, LILI, V31, P14
   SHEPHERD SA, 2003, VULNERABILITY DISCLO
   Stone A, 2003, IEEE SOFTWARE, V20, P70, DOI 10.1109/MS.2003.1159032
   Takanen A., 2004, Ethics and Information Technology, V6, P93, DOI 10.1007/s10676-004-1266-3
   Varian H., 2000, NewYork TimesJune 1
   VIJAYAM J, 2003, COMPUTER WORLD  0310
   2002, SECURE BUSINESS Q, V2
   2003, IN PRESS ORG INTERNE
NR 36
TC 54
Z9 67
U1 0
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2007
VL 33
IS 3
BP 171
EP 185
DI 10.1109/TSE.2007.26
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 130GN
UT WOS:000243788000003
DA 2024-07-18
ER

PT J
AU Binkley, D
   Ceccato, M
   Harman, M
   Ricca, F
   Tonella, P
AF Binkley, David
   Ceccato, Mariano
   Harman, Mark
   Ricca, Filippo
   Tonella, Paolo
TI Tool-supported refactoring of existing object-oriented code into aspects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 21st International Conference on Software Maintenance (ICSM 2005)
CY SEP 26-29, 2005
CL Budapest, HUNGARY
SP IEEE
DE aspect-oriented software development; refactoring; program
   transformation.
AB Aspect-Oriented Programming (AOP) provides mechanisms for the separation of crosscutting concerns - functionalities scattered through the system and tangled with the base code. Existing systems are a natural testbed for the AOP approach since they often contain several crosscutting concerns which could not be modularized using traditional programming constructs. This paper presents an automated approach to the problem of migrating systems developed according to the Object-Oriented Programming (OOP) paradigm into Aspect-Oriented Programming ( AOP). A simple set of six refactorings has been defined to transform OOP to AOP and has been implemented in the AOP-Migrator tool, an Eclipse plug-in. A set of enabling transformations from OOP to OOP complement the initial set of refactorings. The paper presents the results of four case studies, which use the approach to migrate selected crosscutting concerns from medium-sized Java programs ( in the range of 10K to 40K lines of code) into equivalent programs in AspectJ. The case study results show the feasibility of the migration and indicate the importance of the enabling transformations as a preprocessing step.
C1 Loyola Coll, Baltimore, MD 21210 USA.
   ITC Irst, I-38050 Trento, Italy.
   Kings Coll London, London WC2R 2LS, England.
C3 Loyola University Maryland; Fondazione Bruno Kessler; FBK-ICT - Center
   for Information & Communication Technology; University of London; King's
   College London
RP Binkley, D (corresponding author), Loyola Coll, 4501 N Charles St, Baltimore, MD 21210 USA.
EM binkley@cs.loyhola.edu; ceccato@itc.it; mark@kcl.ac.uk; ricca@itc.it;
   tonella@itc.it
RI Ceccato, Mariano/T-7139-2019; Ricca, Filippo/ABB-3276-2020; Tonella,
   Paolo/C-1702-2015
OI Ceccato, Mariano/0000-0001-7325-0316; Tonella,
   Paolo/0000-0003-3088-0339; Harman, Mark/0000-0002-5864-4488
CR [Anonymous], P WORKSH ADV SEP CON
   Binkley D, 2005, PROC IEEE INT CONF S, P27
   Borba P., 2002, P WORKSH TOOLS ASP O
   Breu S, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P310, DOI 10.1109/ASE.2004.1342754
   Bruntink M, 2005, PROC IEEE INT CONF S, P37
   Bruntink M, 2004, PROC IEEE INT CONF S, P200, DOI 10.1109/ICSM.2004.1357804
   Canfora G, 1998, PROG COMPREHEN, P136, DOI 10.1109/WPC.1998.693336
   Ceccato M, 2005, PROG COMPREHEN, P13, DOI 10.1109/WPC.2005.2
   Cole L., 2005, Proc. 4th ACM International Conference on Aspect-Oriented Software Development (AOSD), P123
   Dolado JJ, 2003, IEEE T SOFTWARE ENG, V29, P665, DOI 10.1109/TSE.2003.1214329
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Griswold WG, 2001, PROC INT CONF SOFTW, P265, DOI 10.1109/ICSE.2001.919100
   GYBELS K, 2004, P 1 EUR INT WORKSH A
   Hanenberg S., 2003, 4th Annual International Conference on Object-Oriented and Internet-based Technologies, Concepts, P19
   HANNEMANN J, 2001, P WORKSH ADV SEP CON
   HANNEMANN J, 2005, P 4 INT C ASP OR SOF, P135
   Harman M, 2002, PROC IEEE INT CONF S, P2, DOI 10.1109/ICSM.2002.1167742
   Harman M, 2004, IEEE T SOFTWARE ENG, V30, P3, DOI 10.1109/TSE.2004.1265732
   Janzen D., 2003, Proceedings of the 2nd Annual Conference on Aspect-Oriented Software Development (AOSD), P178, DOI 10.1145/643603.643622
   Kiselev I., 2002, ASPECT ORIENTED PROG
   Klusener AS, 2004, SOFTWARE QUAL J, V12, P297, DOI 10.1023/B:SQJO.0000039790.04885.13
   LADDAD R, 2003, ASPECT ORIENTED RE 2
   Marin M, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P132, DOI 10.1109/WCRE.2004.23
   Monteiro M., 2005, Proceedings of the 4th international conference on Aspect-oriented software development, P111
   Monteiro MP, 2005, PROC IEEE INT CONF S, P17
   Robillard MP, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P406, DOI 10.1109/ICSE.2002.1007986
   SHEPHERD D, 2004, P MID ATL STUD WORKS
   Tonella P, 2005, IEEE T SOFTWARE ENG, V31, P819, DOI 10.1109/TSE.2005.115
   Tonella P, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P112, DOI 10.1109/WCRE.2004.13
   Tourwé T, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P97
   TOURWE T, 2004, P SOFTW ENG PROP LAN
   VANDEURSEN A, 1998, SENR9814 CWI
   Ward M., 1999, P IEEE INT C SOFTW M
   [No title captured]
NR 35
TC 43
Z9 48
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2006
VL 32
IS 9
BP 698
EP 717
DI 10.1109/TSE.2006.95
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 087WU
UT WOS:000240774300006
DA 2024-07-18
ER

PT J
AU Miner, AS
AF Miner, Andrew S.
TI Saturation for a general class of models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 1st International Conference on the Quantitative Evaluation of Systems
   (QEST 2004)
CY SEP 27-30, 2004
CL Enschede, NETHERLANDS
SP Royal Netherlands Acad Arts & Sci, Netherlands Org Sci Res, Dutch Res Sch, Inst Programming Res & Algorithm, Univ Twente, Dept Elect Engn, Math & Comp Sci, Univ Twente, Ctr Telemat & Informat Technol
DE model checking; stochastic analysis
ID NUMERICAL-ANALYSIS
AB Implicit techniques for construction and representation of the reachability set of a high-level model have become quite efficient for certain types of models. In particular, previous work developed a "saturation" algorithm that exploits asynchronous behavior to efficiently construct the reachability set using multiway decision diagrams, but using a Kronecker product expression to represent each model event. For models whose events do not naturally fall into this category, use of the saturation algorithm requires adjusting the model by combining components or splitting events into subevents until a Kronecker product expression is possible. In practice, this can lead to additional overheads during reachability set construction. This paper presents a new version of the saturation algorithm that works for a general class of models: models whose events are not necessarily expressible as Kronecker products, models containing events with complex priority structures, and models whose state variables have unknown bounds. Experimental results are given for several examples.
C1 Iowa State Univ Sci & Technol, Dept Comp Sci, Ames, IA 50011 USA.
C3 Iowa State University
RP Miner, AS (corresponding author), Iowa State Univ Sci & Technol, Dept Comp Sci, Ames, IA 50011 USA.
EM asminer@iastate.edu
RI Miner, Andrew/AAJ-1939-2021
OI Miner, Andrew/0000-0002-7737-6888
CR BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   BRYANT RE, 1992, COMPUT SURV, V24, P293, DOI 10.1145/136035.136043
   Buchholz P, 2002, DISCRETE EVENT DYN S, V12, P265, DOI 10.1023/A:1015669415634
   Buchholz P, 1997, INT WORKSH PETRI NET, P81, DOI 10.1109/PNPM.1997.595539
   BUCHHOLZ P, 2004, VALIDATION STOCHASTI
   BURCH J, 1991, P INT C VLSI AUG
   BURCH JR, 1992, INFORM COMPUT, V98, P142, DOI 10.1016/0890-5401(92)90017-A
   Ciardo G, 2002, LECT NOTES COMPUT SC, V2517, P256
   Ciardo G, 2003, LECT NOTES COMPUT SC, V2619, P379
   Ciardo G, 2000, LECT NOTES COMPUT SC, V1825, P103
   Ciardo G., 1999, Proceedings 8th International Workshop on Petri Nets and Performance Models (Cat. No.PR00331), P22, DOI 10.1109/PNPM.1999.796529
   CIARDO G, 1993, PERFORM EVALUATION, V18, P37, DOI 10.1016/0166-5316(93)90026-Q
   Ciardo G., 2001, Proc. Tools and Algorithms for the Construction and Analysis of Systems (TACAS), P328, DOI DOI 10.1007/3-540-45319-9_23
   CIARDO G, 2003, P INT C MOD TECHN TO, P78
   Clarke EM, 1999, MODEL CHECKING, P1
   Davies I, 2002, LECT NOTES COMPUT SC, V2324, P188
   DAVIO M, 1981, IEEE T COMPUT, V30, P116, DOI 10.1109/TC.1981.6312174
   Derisavi S, 2004, LINEAR ALGEBRA APPL, V386, P137, DOI 10.1016/j.laa.2004.01.006
   Fernandes P, 1998, J ACM, V45, P381, DOI 10.1145/278298.278303
   Hoare CAR., 1985, Communicating Sequential Processes
   Kam Timothy., 1998, MULTIPLE VALUED LOGI, V4, P9
   KATZ S, 1988, P WORKSH LIN TIM BRA, P489
   Kemper P, 1996, IEEE T SOFTWARE ENG, V22, P615, DOI 10.1109/32.541433
   KEMPER P, 1996, P INT C APPL THEOR P, P269
   LAMPKA K, 2003, P INT WORKSH PERF MO, P15
   Miner A, 2004, LECT NOTES COMPUT SC, V2925, P296
   Miner AS, 2001, INT WORKSH PETRI NET, P101, DOI 10.1109/PNPM.2001.953360
   Miner AS, 2004, INT CONF QUANT EVAL, P282
   Miner AS, 2004, PERFORM EVALUATION, V56, P145, DOI 10.1016/j.peva.2003.07.005
   MINER AS, 1999, P 20 INT C APPL THEO, P6
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   PASTOR E, 1994, P 15 INT C APPL THEO, P416
   PLATEAU B, 1985, P 1985 ACM SIGMETRIC, P147
   Roig O, 1995, LECT NOTES COMPUT SC, V935, P374
   SANDERS WH, 1992, J PARALLEL DISTR COM, V15, P238, DOI 10.1016/0743-7315(92)90006-9
   VALMARI A, 1990, P 2 WORKSH COMP AID, P156
   Woodside C. M., 1991, Proceedings of the Fourth International Workshop on Petri Nets and Performance Models (PNPM91) (Cat. No.91TH0386-3), P64, DOI 10.1109/PNPM.1991.238781
NR 37
TC 7
Z9 8
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2006
VL 32
IS 8
BP 559
EP 570
DI 10.1109/TSE.2006.81
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 081XU
UT WOS:000240351700004
DA 2024-07-18
ER

PT J
AU Sengupta, B
   Cleaveland, R
AF Sengupta, Bikram
   Cleaveland, Rance
TI Triggered Message Sequence Charts
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Message Sequence Charts; scenarios; requirements modeling; formal
   semantics; refinement
AB This paper introduces Triggered Message Sequence Charts (TMSCs), a graphical, mathematically well-founded framework for capturing scenario-based system requirements of distributed systems. Like Message Sequence Charts (MSCs), TMSCs are graphical depictions of scenarios, or exchanges of messages between processes in a distributed system. Unlike MSCs, however, TMSCs are equipped with a notion of trigger that permits requirements to be made conditional, a notion of partiality indicating that a scenario may be subsequently extended, and a notion of refinement for assessing whether or not a more detailed specification correctly elaborates on a less detailed one. The TMSC notation also includes a collection of composition operators allowing structure to be introduced into scenario specifications so that interactions among different scenarios may be studied. In the first part of this paper, TMSCs are introduced and their use in support of requirements modeling is illustrated via two extended examples. The second part develops the mathematical underpinnings of the language.
C1 Indian Inst Technol, IBM India Res Lab, New Delhi 110016, India.
   Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Delhi; International Business Machines (IBM);
   University System of Maryland; University of Maryland College Park
RP Sengupta, B (corresponding author), Indian Inst Technol, IBM India Res Lab, Block 1, New Delhi 110016, India.
EM bsengupt@in.ibm.com; rance@cs.umd.edu
CR ALSPAUGH T, 2001, P 7 INT WORKSH REQ E
   Alspaugh TA, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P142, DOI 10.1109/ISRE.1999.777994
   Alur R, 1999, LECT NOTES COMPUT SC, V1664, P82
   [Anonymous], 1985, EATCS Monographs on Theoretical Computer Science
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Cleaveland R, 2002, SCI COMPUT PROGRAM, V42, P39, DOI 10.1016/S0167-6423(01)00033-8
   Cleaveland R., 1993, Formal Aspects of Computing, V5, P1, DOI 10.1007/BF01211314
   CLEAVELAND R, 1993, ACM T PROGRAMMING LA, V15
   DAMM W, 2001, FORMAL METHODS SYSTE, V19
   DENICOLA R, 1984, THEOR COMPUT SCI, V34, P83, DOI 10.1016/0304-3975(84)90113-0
   GENEST B, 2004, P INT C FDN SOFTW SC, P195
   Graubmann P., 1993, SDL '93. Using Objects. Proceedings of the Sixth SDL Forum, P179
   GUNTER E, 2001, P TOOLS ALG CONSTR A, P496
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Hennessy M., 1988, An algebraic theory of processes
   Hoare CAR., 1985, Communicating Sequential Processes
   *INT MED SYST INC, 2006, LSTAT
   Jacobson I., 1995, SCENARIO BASED DESIG, P309
   Kruger I., 2000, THESIS TU MUNICH
   KUGLER H, 2005, P TOOLS ALG CONSTR A
   Ladkin P. B., 1995, Formal Aspects of Computing, V7, P473, DOI 10.1007/BF01211629
   LEITE JCS, 1997, P 3 IEEE INT S REQ E
   Maiden NAM, 1998, THIRD INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING - PROCEEDINGS, P148, DOI 10.1109/ICRE.1998.667820
   MAIN MG, 1987, INT J PARALLEL PROG, V16, P383, DOI 10.1007/BF01407903
   MAUW S, 1994, COMPUT J, V37, P269, DOI 10.1093/comjnl/37.4.269
   MAUW S, 1996, P INT C CONC THEOR C, P671
   Milner R., 1989, Communication and concurrency
   RENIERS MA, 1909, THESIS EINDHOVEN U T
   Rolland C, 1998, IEEE T SOFTWARE ENG, V24, P1055, DOI 10.1109/32.738339
   Rolland C., 1998, Requirements Engineering, V3, P23, DOI 10.1007/BF02802919
   Rolland C, 1998, DATA KNOWL ENG, V25, P125, DOI 10.1016/S0169-023X(97)86223-4
   SENGUPTA B, 2003, P 15 COMP AID VER C
   SENGUPTA B, 2005, P 5 INT C INT FORM M, P366
   SENGUPTA B, 2003, P IEEE INT REQ ENG C
   SENGUPTA B, 2003, THESIS SUNY STONY BR
   SENGUPTA B, 2002, P 10 ACM SIGSOFT S F, P167
   SENGUPTA B, 2005, P 2 INT C DISTR COMP
   SENGUPTA B, 2003, P 2 INT WORKSH SCEN
   Uchitel S, 2003, IEEE T SOFTWARE ENG, V29, P99, DOI 10.1109/TSE.2003.1178048
   UCHITEL S, 2002, P ACM SIGSOFT 2002 F
   2006, CTR TRACON AUTOMATIO
NR 41
TC 19
Z9 22
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2006
VL 32
IS 8
BP 587
EP 607
DI 10.1109/TSE.2006.82
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 081XU
UT WOS:000240351700006
DA 2024-07-18
ER

PT J
AU van Moorsel, APA
   Wolter, K
AF van Moorsel, Aad P. A.
   Wolter, Katinka
TI Analysis of restart mechanisms in software systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 1st International Conference on the Quantitative Evaluation of Systems
   (QEST 2004)
CY SEP 27-30, 2004
CL Enschede, NETHERLANDS
SP Royal Netherlands Acad Arts & Sci, Netherlands Org Sci Res, Dutch Res Sch, Inst Programming Res & Algorithm, Univ Twente, Dept Elect Engn, Math & Comp Sci, Univ Twente, Ctr Telemat & Informat Technol
DE restart; software rejuvenation; time-out; fault-tolerant systems;
   performance and reliability modeling; completion time; adaptive systems;
   self-management
AB Restarts or retries are a common phenomenon in computing systems, for instance, in preventive maintenance, software rejuvenation, or when a failure is suspected. Typically, one sets a time-out to trigger the restart. We analyze and optimize time-out strategies for scenarios in which the expected required remaining time of a task is not always decreasing with the time invested in it. Examples of such tasks include the download of Web pages, randomized algorithms, distributed queries, and jobs subject to network or other failures. Assuming the independence of the completion time of successive tries, we derive computationally attractive expressions for the moments of the completion time, as well as for the probability that a task is able to meet a deadline. These expressions facilitate efficient algorithms to compute optimal restart strategies and are promising candidates for pragmatic online optimization of restart timers.
C1 Newcastle Univ, Sch Comp Sci, Newcastle Upon Tyne NE1 7RU, Tyne & Wear, England.
   Humboldt Univ, Inst Informat, D-10099 Berlin, Germany.
C3 Newcastle University - UK; Humboldt University of Berlin
RP van Moorsel, APA (corresponding author), Newcastle Univ, Sch Comp Sci, Newcastle Upon Tyne NE1 7RU, Tyne & Wear, England.
EM aad.vanmoorsel@ncl.ac.uk; wolter@informatik.hu-berlin.de
CR Aalto S, 2005, OPER RES LETT, V33, P519, DOI 10.1016/j.orl.2004.09.009
   Alt H, 1996, ALGORITHMICA, V16, P543, DOI 10.1007/BF01940879
   Bobbio A., 1999, Proceedings 8th International Workshop on Petri Nets and Performance Models (Cat. No.PR00331), P82, DOI 10.1109/PNPM.1999.796555
   Bobbio A, 2001, PERFORM EVALUATION, V46, P45, DOI 10.1016/S0166-5316(01)00037-2
   Bobbio A, 1998, J CIRCUIT SYST COMP, V8, P119, DOI 10.1142/S0218126698000067
   CHALASANI P, 1998, P INT C AUT AG AG 98
   Chen W, 2000, DSN 2000: INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P191, DOI 10.1109/ICDSN.2000.857535
   GARG S, 1996, P ACM SIGMETRICS C M
   Gertsbakh I., 2000, Reliability Theory: With Applications to Preventive Maintenance
   Haverkort B., 1999, Performance of Computer Communication Systems
   Krishnamurthy B., 2001, WEB PROTOCOLS PRACTI
   Luby M., 1993, Proceedings of the 2nd Israel Symposium on Theory and Computing Systems (Cat. No.93TH0520-7), P128, DOI 10.1109/ISTCS.1993.253477
   Maurer SM, 2001, J ECON DYN CONTROL, V25, P641, DOI 10.1016/S0165-1889(00)00040-3
   NICOLA VF, 1995, TRENDS SOFTWARE, V3, P167
   REINECKE P, 2005, P INT SERV AV S ISAS, P86
   RUAN Y, 2002, P 8 INT C PRINC PRAC
   Schrauzer GN, 2001, J AM COLL NUTR, V20, P1
   van Moorsel A, 2004, IEE P-SOFTW, V151, P219, DOI 10.1049/ip-sen:20041090
   van Moorsel APA, 2004, INT CONF QUANT EVAL, P195
   VANMOORSEL A, 2004, P 12 GI ITG C MEAS M, P155
   Wolter K, 2005, LECT NOTES COMPUT SC, V3460, P189
NR 21
TC 38
Z9 38
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2006
VL 32
IS 8
BP 547
EP 558
DI 10.1109/TSE.2006.73
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 081XU
UT WOS:000240351700003
DA 2024-07-18
ER

PT J
AU Bhatti, R
   Bertino, E
   Ghafoor, A
AF Bhatti, Rafae
   Bertino, Elisa
   Ghafoor, Arif
TI X-FEDERATE: A policy engineering framework for federated access
   management
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE federated systems; software engineering; security management; role-based
   access control
AB Policy-Based Management (PBM) has been considered as a promising approach for design and enforcement of access management policies for distributed systems. The increasing shift toward federated information sharing in the organizational landscape, however, calls for revisiting current PBM approaches to satisfy the unique security requirements of the federated paradigm. This presents a twofold challenge for the design of a PBM approach, where, on the one hand, the policy must incorporate the access management needs of the individual systems, while, on the other hand, the policies across multiple systems must be designed in such a manner that they can be uniformly developed, deployed, and integrated within the federated system. In this paper, we analyze the impact of security management challenges on policy design and formulate a policy engineering methodology based on principles of software engineering to develop a PBM solution for federated systems. We present X-FEDERATE, a policy engineering framework for federated access management using an extension of the well-known Role-Based Access Control (RBAC) model. Our framework consists of an XML-based policy specification language, its UML-based meta-model, and an enforcement architecture. We provide a comparison of our framework with related approaches and highlight its significance for federated access management. The paper also presents a federation protocol and discusses a prototype of our framework that implements the protocol in a federated digital library environment.
C1 Purdue Univ, Dept Elect & Comp Engn, W Lafayette, IN 47906 USA.
   Purdue Univ, CERIAS, W Lafayette, IN 47906 USA.
C3 Purdue University System; Purdue University; Purdue University System;
   Purdue University
RP Bhatti, R (corresponding author), Purdue Univ, Dept Elect & Comp Engn, W Lafayette, IN 47906 USA.
EM rafae@purdue.edu; bertino@cerias.purdue.edu; ghafoor@ecn.purdue.edu
CR [Anonymous], 2005, OASIS XACML
   [Anonymous], P 2002 IEEE S SEC PR
   [Anonymous], 1998, 2401 RFC IETF
   BHATTI R, 2004, P 9 ACM S ACC CONTR
   BHATTI R, 2005, ACM T INFORMATION SY, V8
   Blaze M., 1998, P 6 INT WORKSH SEC P, P59
   Carlson D., 2001, Modeling XML applications with UML, practical e-Business applications
   CHADWICK D, 2002, P 7 ACM S ACC CONTR
   Clark D. D., 1987, Proceedings of the 1987 IEEE Symposium on Security and Privacy (Cat. No.87CH2416-6), P184
   Damianou N., 2001, P WORKSH POL DISTR S
   *DEP DEF DIR, 2004, 83202 DEP DEF DIR
   DIVIMERCATI SD, 1996, P 1996 WORKSH NEW SE, P87
   ELLISON CM, 1999, 2692 RFC IETF
   FINK T, 2004, P 1 INT WORKSH VIEWS
   Herzberg A, 2000, P IEEE S SECUR PRIV, P2, DOI 10.1109/SECPRI.2000.848442
   Joshi J., 2005, IEEE T KNOWLEDGE DAT, V17
   Joshi JBD, 2004, IEEE INTERNET COMPUT, V8, P40, DOI 10.1109/MIC.2004.53
   Jurjens Jan., 2002, LECT NOTES COMPUTER, V2460, P412, DOI DOI 10.1007/3-540-45800-X_
   Keromytis Angelos D., 2003, P 3 DARPA INF SURV C
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   Lupu EC, 1999, IEEE T SOFTWARE ENG, V25, P852, DOI 10.1109/32.824414
   LYMBEROPOULOS L, 2003, J NETWORKS SYSTEMS M, V11
   *OBJ MAN GROUP, 2001, RES ACC DEC RAD VERS
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   SEMON D, 2003, CASE FEDERATED DIGIT
   Thompson M. R., 2003, ACM Transactions on Information and Systems Security, V6, P566, DOI 10.1145/950191.950196
   TSIOLAKIS A, 2000, 20003 TU BERL
   Verdickt T, 2005, IEEE T SOFTWARE ENG, V31, P695, DOI 10.1109/TSE.2005.88
   2005, DMTF COMMON INFORMAT
   2005, LIBERTY ALLIANCE
   2001, SHIBBOLETH
   2002, WEB SERVICES ROADMAP
   2004, OASIS SAML
NR 33
TC 20
Z9 23
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2006
VL 32
IS 5
BP 330
EP 346
DI 10.1109/TSE.2006.49
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 045LB
UT WOS:000237742500004
DA 2024-07-18
ER

PT J
AU Darcy, DP
   Kemerer, CF
   Slaughter, SA
   Tomayko, JE
AF Darcy, DP
   Kemerer, CF
   Slaughter, SA
   Tomayko, JE
TI The structural complexity of software: An experimental test
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software complexity; software structure; Wood's model of task
   complexity; coupling; cohesion; experiment; software maintenance;
   software metrics; cognition; procedural programming; object-oriented
   programming
ID OBJECT-ORIENTED SOFTWARE; MAINTENANCE PERFORMANCE; COMPUTER-SCIENCE;
   SYSTEM STRUCTURE; TASK COMPLEXITY; METRICS; DESIGN; OPPORTUNITIES;
   COMPREHENSION; CHALLENGES
AB This research examines the structural complexity of software and, specifically, the potential interaction of the two dominant dimensions of structural complexity, coupling and cohesion. Analysis based on an information processing view of developer cognition results in a theoretically driven model with cohesion as a moderator for a main effect of coupling on effort. An empirical test of the model was devised in a software maintenance context utilizing both procedural and object-oriented tasks, with professional software engineers as participants. The results support the model in that there was a significant interaction effect between coupling and cohesion on effort, even though there was no main effect for either coupling or cohesion. The implication of this result is that, when designing, implementing, and maintaining software to control complexity, both coupling and cohesion should be considered jointly, instead of independently. By providing guidance on structuring software for software professionals and researchers, these results enable software to continue as the solution of choice for a wider range of richer, more complex problems.
C1 Univ Maryland, Sch Business, College Pk, MD 20742 USA.
   Univ Pittsburgh, Joseph M Katz Grad Sch Business, Pittsburgh, PA 15260 USA.
   Carnegie Mellon Univ, David A Tepper Grad Sch Business, Pittsburgh, PA 15213 USA.
   Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
C3 University System of Maryland; University of Maryland College Park;
   Pennsylvania Commonwealth System of Higher Education (PCSHE); University
   of Pittsburgh; Carnegie Mellon University; Carnegie Mellon University
RP Univ Maryland, Sch Business, 4351 Van Munching Hall, College Pk, MD 20742 USA.
EM ddarcy@rhsmith.umd.edu; ckemerer@katz.pitt.edu; sandras@andrew.cmu.edu;
   jet@cs.cmu.edu
CR ABREU FBE, 1994, J SYST SOFTWARE, V26, P87, DOI 10.1016/0164-1212(94)90099-X
   ADAMOV R, 1990, J SYST SOFTWARE, V12, P55, DOI 10.1016/0164-1212(90)90066-U
   Anderson JR, 1996, COGNITIVE PSYCHOL, V30, P221, DOI 10.1006/cogp.1996.0007
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], P 1 INT SOFTW METR S
   [Anonymous], 1991, Design and Analysis: A Researchers Handbook
   BAKER AL, 1990, J SYST SOFTWARE, V12, P277, DOI 10.1016/0164-1212(90)90050-V
   Banker R. D., 1993, Journal of Operations Management, V11, P81, DOI 10.1016/0272-6963(93)90035-N
   Banker RD, 2000, INFORM SYST RES, V11, P219, DOI 10.1287/isre.11.3.219.12209
   Banker RD, 1998, MANAGE SCI, V44, P433, DOI 10.1287/mnsc.44.4.433
   Berry R., 2003, IEE Proceedings-Software, V150, P223, DOI 10.1049/ip-sen:20030806
   BIEMAN JM, 1994, IEEE T SOFTWARE ENG, V20, P644, DOI 10.1109/32.310673
   Brooks FP, 2003, J ACM, V50, P25, DOI 10.1145/602382.602397
   CAMPBELL DJ, 1988, ACAD MANAGE REV, V13, P40, DOI 10.2307/258353
   Chae HS, 2000, SOFTWARE PRACT EXPER, V30, P1405, DOI 10.1002/1097-024X(200010)30:12<1405::AID-SPE330>3.0.CO;2-3
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   Daly J., 1996, Empirical Software Engineering, V1, P109, DOI 10.1007/BF00368701
   DIJKSTRA EW, 1968, COMMUN ACM, V11, P147, DOI 10.1145/362929.362947
   FENTON N, 1994, IEEE SOFTWARE    JUL, P86
   Fjelstad R. K., 1983, TUTORIAL SOFTWARE MA, p[11, 27]
   GIBSON VR, 1989, COMMUN ACM, V32, P347, DOI 10.1145/62065.62073
   Gorla N, 1997, J SYST SOFTWARE, V36, P191, DOI 10.1016/0164-1212(95)00202-2
   GROSS N, 1999, BUSINESS WEEK   0111
   Harrison R, 1998, IEEE T SOFTWARE ENG, V24, P491, DOI 10.1109/32.689404
   HARTMANIS J, 1994, COMMUN ACM, V37, P37, DOI 10.1145/194313.214781
   HUMPHREY WS, 1995, SEI SERIES SOFTWARE, P790
   HUTCHENS DH, 1985, IEEE T SOFTWARE ENG, V11, P749, DOI 10.1109/TSE.1985.232524
   KEARNEY JK, 1986, COMMUN ACM, V29, P1044, DOI 10.1145/7538.7540
   Kemerer C. F., 1995, Annals of Software Engineering, V1, P1, DOI 10.1007/BF02249043
   Kemerer CF, 1998, COMMUN ACM, V41, P63, DOI 10.1145/280324.280334
   Kemerer CF, 1999, IEEE T SOFTWARE ENG, V25, P493, DOI 10.1109/32.799945
   KIM J, 1992, P C HUM FACT COMP SY
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   LAKHOTIA A, 1993, P 15 INT C SOFTW ENG
   Lee HS, 1999, EUR J OPER RES, V114, P354, DOI 10.1016/S0377-2217(98)00125-8
   MACDONELL SG, 1997, METRICS DATABASE SYS
   Mikkola JH, 2003, IEEE T ENG MANAGE, V50, P204, DOI 10.1109/TEM.2003.810826
   MYERS GJ, 1978, COMPOSITE STRUCTURED
   OFFUTT AJ, 1993, J SYST SOFTWARE, V20, P295, DOI 10.1016/0164-1212(93)90072-6
   PARNAS DL, 1972, COMMUN ACM, V15, P330, DOI 10.1145/355602.361309
   PFLEEGER SL, 1997, IEEE SOFTWARE    MAR, P33
   Purao S, 2003, ACM COMPUT SURV, V35, P191, DOI 10.1145/857076.857090
   RAJLICH V, 1997, P INT WORKSH PROGR C
   ROMBACH HD, 1987, IEEE T SOFTWARE ENG, V13, P344, DOI 10.1109/TSE.1987.233165
   Schach SR, 2003, EMPIR SOFTW ENG, V8, P351, DOI 10.1023/A:1025368318006
   SMITH JE, 1988, COMMUN ACM, V31, P1202, DOI 10.1145/63039.63043
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Tonella P, 2001, IEEE T SOFTWARE ENG, V27, P351, DOI 10.1109/32.917524
   VESSEY I, 1983, COMMUN ACM, V26, P128, DOI 10.1145/358024.358057
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   vonMayrhauser A, 1996, IEEE T SOFTWARE ENG, V22, P424, DOI 10.1109/32.508315
   WOOD RE, 1986, ORGAN BEHAV HUM DEC, V37, P60, DOI 10.1016/0749-5978(86)90044-0
   YOURDON E, 1979, STRUCTURED DESIGN FU
NR 55
TC 77
Z9 88
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2005
VL 31
IS 11
BP 982
EP 995
DI 10.1109/TSE.2005.130
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 989GE
UT WOS:000233660100006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Briand, LC
   Labiche, Y
   Di Penta, M
   Yan-Bondoc, H
AF Briand, LC
   Labiche, Y
   Di Penta, M
   Yan-Bondoc, H
TI An experimental investigation of formality in UML-based development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 20th IEEE International Conference on Software Maintenance (ICSM 2004)
CY SEP 11-14, 2004
CL Chicago, IL
SP IEEE Comp Soc
DE comprehension of software models; software engineering experimentation;
   UML; OCL
ID EMPIRICAL TALE
AB The Object Constraint Language (OCL) was introduced as part of the Unified Modeling Language (UML). Its main purpose is to make UML models more precise and unambiguous by providing a constraint language describing constraints that the UML diagrams alone do not convey, including class invariants, operation contracts, and statechart guard conditions. There is an ongoing debate regarding the usefulness of using OCL in UML-based development, questioning whether the additional effort and formality is worth the benefit. It is argued that natural language may be sufficient, and using OCL may not bring any tangible benefits. This debate is in fact similar to the discussion about the effectiveness of formal methods in software engineering, but in a much more specific context. This paper presents the results of two controlled experiments that investigate the impact of using OCL on three software engineering activities using UML analysis models: detection of model defects through inspections, comprehension of the system logic and functionality, and impact analysis of changes. The results show that, once past an initial learning curve, significant benefits can be obtained by using OCL in combination with UML analysis diagrams to form a precise UML analysis model. But, this result is however conditioned on providing substantial, thorough training to the experiment participants.
C1 Carleton Univ, Dept Syst & Comp Engn, Software Qual Engn Lab, Ottawa, ON K1S 5B6, Canada.
   Univ Sannio, Dept Engn, RCOST, I-82100 Benevento, Italy.
   Nortel, Ottawa, ON K2H 8E9, Canada.
C3 Carleton University; University of Sannio
RP Carleton Univ, Dept Syst & Comp Engn, Software Qual Engn Lab, 1125 Colonel Dr, Ottawa, ON K1S 5B6, Canada.
EM briand@sce.carleton.ca; labiche@sce.carleton.ca; dipenta@unisannio.it;
   dyan@nortel.com
RI Di Penta, Massimiliano/AAF-9656-2021
OI Labiche, Yvan/0000-0001-8880-4836; Di Penta,
   Massimiliano/0000-0002-0340-9747
CR [Anonymous], UML 2 0 SUP SPEC
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Berry DM, 2003, IEEE T SOFTWARE ENG, V29, P567, DOI 10.1109/TSE.2003.1205183
   Berry DM, 2002, SCI COMPUT PROGRAM, V42, P11, DOI 10.1016/S0167-6423(01)00026-0
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Briand LC, 2003, SOFTWARE PRACT EXPER, V33, P637, DOI 10.1002/spe.520
   BRIAND LC, 2004, SCE0322 CARL U
   BRIAND LC, IN PRESS J SYSTEMS S
   BRUEGGE B, 2004, OBJECTE ORIENTED SOF
   Campbell D.T., 1990, EXPT QUASIEXPERIMENT
   COOK S, 2002, OBJECT MODELING OCL
   Devore J., 1999, APPL STAT ENG SCI
   Fowler M., 2015, UML Distilled: A Brief Guide to the Standard Object Modeling Language
   Gomaa H., 2000, DESIGNING CONCURRENT
   Hall A, 1996, IEEE SOFTWARE, V13, P66, DOI 10.1109/52.506463
   Henderson PB, 2003, COMMUN ACM, V46, P45, DOI 10.1145/903893.903919
   Iversen G.R., 1987, ANAL VARIANCE
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Larman C., 2002, APPL UML PATTERNS, V2nd
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   *OMG, 2003, OCL 2 0 SPEC
   *OMG UML, 2001, OBJ MAN GROUP V1 4
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Pfleeger SL, 1999, J SYST SOFTWARE, V47, P111, DOI 10.1016/S0164-1212(99)00031-X
   Pfleeger SL, 1997, COMPUTER, V30, P33, DOI 10.1109/2.566148
   SATPATHY M, 2001, P IEEE IFIP JOINT WO, P133
   Sobel AEK, 2002, IEEE T SOFTWARE ENG, V28, P308, DOI 10.1109/32.991322
   Warmer J., 1999, AW OBJ TECHNOL S
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 29
TC 74
Z9 76
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2005
VL 31
IS 10
BP 833
EP 849
DI 10.1109/TSE.2005.105
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 980JR
UT WOS:000233015300004
DA 2024-07-18
ER

PT J
AU Tian, J
   Rudraraju, S
   Li, Z
AF Tian, J
   Rudraraju, S
   Li, Z
TI Evaluating Web software reliability based on workload and failure data
   extracted from server logs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE World Wide Web (WWW) and Internet; Web applications and Web server logs;
   quality and reliability; reliability modeling; workload measurement
ID MODEL
AB In this paper, we characterize usage and problems for Web applications, evaluate their reliability, and examine the potential for reliability improvement. Based on the characteristics of Web applications and the overall Web environment, we classify Web problems and focus on the subset of source content problems. Using information about Web accesses, we derive various measurements that can characterize Web site workload at different levels of granularity and from different perspectives. These workload measurements, together with failure information extracted from recorded errors, are used to evaluate the operational reliability for source contents at a given Web site and the potential for reliability improvement. We applied this approach to the Web sites www.seas.smu.edu and www.kde.org. The results demonstrated the viability and effectiveness of our approach.
C1 So Methodist Univ, Dept Comp Sci & Engn, Dallas, TX 75275 USA.
   Intervoice, Flower Mound, TX 75028 USA.
C3 Southern Methodist University
RP So Methodist Univ, Dept Comp Sci & Engn, Dallas, TX 75275 USA.
EM tian@engr.smu.edu; ksunita999@yahoo.com; lizhao@engr.smu.edu
CR Arlitt MF, 1997, IEEE ACM T NETWORK, V5, P631, DOI 10.1109/90.649565
   BEHLANDORF B., 1996, RUNNING PERFECT WEB, V2nd
   Crovella ME, 1997, IEEE ACM T NETWORK, V5, P835, DOI 10.1109/90.650143
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   *IEEE, 1990, 610121990 STD IEEE
   Kallepalli C, 2001, IEEE T SOFTWARE ENG, V27, P1023, DOI 10.1109/32.965342
   Koru AG, 2004, IEEE SOFTWARE, V21, P54, DOI 10.1109/MS.2004.12
   LI Z, 2003, P IADIS INT C E SOC, P235
   Lyu M.R., 1995, HDB SOFTWARE RELIABI
   Ma L, 2003, LECT NOTES COMPUT SC, V2722, P314
   Montgomery AL, 2001, COMPUTER, V34, P94, DOI 10.1109/2.933515
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   NELSON E, 1978, MICROELECTRON RELIAB, V17, P67, DOI 10.1016/0026-2714(78)91139-3
   Offutt J, 2002, IEEE SOFTWARE, V19, P25, DOI 10.1109/52.991329
   Pitkow J. E., 1999, World Wide Web, V2, P3, DOI 10.1023/A:1019284202914
   SCHNEIDEWIND NF, 1993, IEEE T SOFTWARE ENG, V19, P1095, DOI 10.1109/32.256856
   Singpurwalla ND, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P106, DOI 10.1109/ISSRE.1998.730860
   THAYER R, 1978, SOFTWARE RELIABILITY
   TIAN J, 1995, IEEE T SOFTWARE ENG, V21, P945, DOI 10.1109/32.489071
   Tian J, 2002, IEEE T SOFTWARE ENG, V28, P997, DOI 10.1109/TSE.2002.1041055
   Trivedi K.S., 2001, Probability and statistics with reliability, queueing, and computer science applications, V2nd
NR 21
TC 57
Z9 72
U1 2
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2004
VL 30
IS 11
BP 754
EP 769
DI 10.1109/TSE.2004.87
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 867OX
UT WOS:000224853000004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zeng, LZ
   Benatallah, B
   Ngu, AHH
   Dumas, M
   Kalagnanam, J
   Chang, H
AF Zeng, LZ
   Benatallah, B
   Ngu, AHH
   Dumas, M
   Kalagnanam, J
   Chang, H
TI QoS-aware middleware for Web Services Composition
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Web services; quality of service; service composition; integer
   programming
AB The paradigmatic shift from a Web of manual interactions to a Web of programmatic interactions driven by Web services is creating unprecedented opportunities for the formation of online Business-to-Business (B2B) collaborations. In particular, the creation of value-added services by composition of existing ones is gaining a significant momentum. Since many available Web services provide overlapping or identical functionality, albeit with different Quality of Service (QoS), a choice needs to be made to determine which services are to participate in a given composite service. This paper presents a middleware platform which addresses the issue of selecting Web services for the purpose of their composition in a way that maximizes user satisfaction expressed as utility functions over QoS attributes, while satisfying the constraints set by the user and by the structure of the composite service. Two selection approaches are described and compared: one based on local (task-level) selection of services and the other based on global allocation of tasks to services using integer programming.
C1 IBM Corp, Thomas J Watson Res Ctr, Yorktown Hts, NY 10598 USA.
   Univ New S Wales, Sch Engn & Comp Sci, Sydney, NSW 2052, Australia.
   SW Texas State Univ, Dept Comp Sci, San Marcos, TX 78666 USA.
   Queensland Univ Technol, Ctr IT Innovat, Brisbane, Qld 4001, Australia.
C3 International Business Machines (IBM); University of New South Wales
   Sydney; Texas State University System; Texas State University San
   Marcos; Queensland University of Technology (QUT)
RP IBM Corp, Thomas J Watson Res Ctr, 1101 Kitchawan Rd,RTE 134,POB 218, Yorktown Hts, NY 10598 USA.
EM lzeng@us.ibm.com; boualem@cse.unsw.edu.au; hn12@txstate.edu;
   m.dumas@qut.edu.au; jayant@us.ibm.com; hychang@us.ibm.com
RI kalagnanam, jayant/AAD-6069-2019; Dumas, Marlon/H-2757-2015
OI Dumas, Marlon/0000-0002-9247-7476
CR Alonso G., 2003, Web Services, V2004
   ANKOLEKAR A, 2002, P 1 INT SEM WEB C IS
   [Anonymous], 2004, P 13 INT WORLD WID W
   Aurrecoechea C, 1998, MULTIMEDIA SYST, V6, P138, DOI 10.1007/s005300050083
   Benatallah B, 2002, PROC INT CONF DATA, P297, DOI 10.1109/ICDE.2002.994738
   BENATALLAH B, 2002, DISTRIBUTED PARALLEL
   Bettini C, 2002, DISTRIB PARALLEL DAT, V11, P269, DOI 10.1023/A:1014048800604
   CARDOSO J, 2002, THESIS U GEORGIA
   Casati F, 2001, INFORM SYST, V26, P143, DOI 10.1016/S0306-4379(01)00014-X
   CASATI F, 2001, VERY LARGE DATABASES
   Curbera F, 2002, IEEE INTERNET COMPUT, V6, P86, DOI 10.1109/4236.991449
   DUMAS M, 2001, P INT C UN MOD LANG, P86
   EDER J, 1999, LECT NOTES COMPUTER, V1626
   Georgakopoulos D, 1999, INFORM SYST, V24, P429, DOI 10.1016/S0306-4379(99)00026-5
   Gillmann M., 2002, P ACM SIGMOD INT C M, P228, DOI DOI 10.1145/564691.564718
   Gu XH, 2002, 11TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P73, DOI 10.1109/HPDC.2002.1029905
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   Karloff H., 1991, Linear Programming, DOI [10.1007/978-0-8176-4844-2, DOI 10.1007/978-0-8176-4844-2]
   KIEPUSZEWSKI B, 2000, P INT C ADV INF SYST
   KLINGEMANN J, 2000, P 12 INT C ADV INF S, P126
   KLINGMENN J, 1999, P 9 INT WORKSH RES I
   MECELLA M, 2002, P 10 INT C COOP INF
   Medjahed B, 2003, VLDB J, V12, P333, DOI 10.1007/s00778-003-0101-5
   Nahrstedt K, 2001, IEEE COMMUN MAG, V39, P140, DOI 10.1109/35.965372
   Naumann F, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P447
   O'Sullivan J, 2002, DISTRIB PARALLEL DAT, V12, P117, DOI 10.1023/A:1016547000822
   OULSNAM G, 1982, COMPUT J, V25, P379, DOI 10.1093/comjnl/25.3.379
   Patil S, 2003, IEEE INTERNET COMPUT, V7, P74, DOI 10.1109/MIC.2003.1200304
   Peltz C, 2003, COMPUTER, V36, P46, DOI 10.1109/MC.2003.1236471
   PINEDOF M, 2001, SCHEDULING THEORY AL
   PONNEKANTI S, 2002, P ALT TRACKS 11 WORL
   RAMAN B, 2002, P 1 INT C PERV COMP, P1
   Wackerly D. D., 1996, MATH STAT APPL, DOI DOI 10.1080/00401706.1987.10488256
   XU D, 2002, P SPIE ACM MULT COMP
   Yoon K, 1981, LECT NOTES EC MATH S
   ZENG L, 2003, P VLDB WORKSH TECHN
   Zeng L., 2003, P 12 INT C WORLD WID
   ZENG L, 2003, THESIS U NEW S WALES
   ZENG L, 2001, P 9 INT C COOP INF S
   ZENG L, 2001, P 27 INT C VER LARG
NR 40
TC 1699
Z9 2106
U1 2
U2 129
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2004
VL 30
IS 5
BP 311
EP 327
DI 10.1109/TSE.2004.11
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 813JS
UT WOS:000220904000003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Seaman, CB
   Mendonça, MG
   Basili, VR
   Kim, YM
AF Seaman, CB
   Mendonça, MG
   Basili, VR
   Kim, YM
TI User interface evaluation and empirically-based evolution of a prototype
   experience management tool
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE experience management; knowledge management; experience reuse; user
   interface evaluation; empirical study
ID KNOWLEDGE MANAGEMENT; INFORMATION; TECHNOLOGY
AB Experience management refers to the capture, structuring, analysis, synthesis, and reuse of an organization's experience in the form of documents, plans, templates, processes, data, etc. The problem of managing experience effectively is not unique to software development, but the field of software engineering has had a high-level approach to this problem for some time. The Experience Factory is an organizational infrastructure whose goal is to produce, store, and reuse experiences gained in a software development organization [6], [71, [8]. This paper describes The Q-Labs Experience Management System (Q-Labs EMS), which is based on the Experience Factory concept and was developed for use in a multinational software engineering consultancy [31]. A critical aspect of the Q-Labs EMS project is its emphasis on empirical evaluation as a major driver of its development and evolution. The initial prototype requirements were grounded in the organizational needs and vision of Q-Labs, as were the goals and evaluation criteria later used to evaluate the prototype. However, the Q-Labs EMS architecture, data model, and user interface were designed to evolve, based on evolving user needs. This paper describes this approach, including the evaluation that was conducted of the initial prototype and its implications for the further development of systems to support software experience management.
C1 Univ Maryland Baltimore Cty, Dept Informat Syst, Baltimore, MD 21250 USA.
   Univ Maryland, Fraunhofer Ctr Expt Software Engn Maryland, College Pk, MD 20742 USA.
   Univ Salvador, UNIFACS, NUPERC, Comp Networks Res Grp, BR-40220141 Salvador, BA, Brazil.
   Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
   Univ Maryland, Fraunhofer Ctr Expt Software Engn, College Pk, MD 20742 USA.
   Univ Michigan, Sch Informat, Ann Arbor, MI 48109 USA.
C3 University System of Maryland; University of Maryland Baltimore County;
   University System of Maryland; University of Maryland College Park;
   Universidade Salvador (UNIFACS); University System of Maryland;
   University of Maryland College Park; University System of Maryland;
   University of Maryland College Park; University of Michigan System;
   University of Michigan
RP Univ Maryland Baltimore Cty, Dept Informat Syst, 1000 Hilltop Circle, Baltimore, MD 21250 USA.
EM cseaman@umbc.edu; mgmn@unifacs.br; basili@cs.umd.edu; kimym@si.umich.edu
RI Mendonca, Manoel/A-1579-2011
OI Mendonca, Manoel/0000-0002-0874-7665
CR ALTHHOFF KD, 2001, P IND C DAT MIN JUL
   ALTHOFF K, 1999, P 11 INT C SOFTW ENG, P25
   ALTHOFF KD, 1999, P WORKSH LEARN SOFTW, P72
   ALTHOFF KD, 2002, P EUR C ART INT ECAI
   [Anonymous], QUALITATIVE DAT ANAL
   Bailey C., 2001, Journal of Knowledge Management, V5, P58, DOI [10.1108/13673270110384400, DOI 10.1108/13673270110384400, https://doi.org/10.1108/13673270110384400]
   BARONIDE R, 2001, INFORMATION RES, V7
   BASILI V, 2001, P 13 INT C SOFTW ENG, P102
   BASILI V, 1992, P 14 INT C SOFTW ENG, P370
   BASILI VR, 1989, PROCEEDINGS : THE THIRTEENTH ANNUAL INTERNATIONAL COMPUTER SOFTWARE & APPLICATIONS CONFERENCE, P471, DOI 10.1109/CMPSAC.1989.65127
   BASILI VR, 1995, SLOAN MANAGEMENT FAL, V37
   BASILI VR, 1993, P 4 EUR SOFTW ENG C
   BASILI VR, 1994, IEEE SOFTWARE    MAR, P70
   BRANDT M, 2001, P ADV LEARN SOFTW OR, P178
   BROOME M, 1999, P WORKSH LEARN SOFTW, P87
   Chase R., 1997, Journal of Knowledge Management, Vol, V1, No, P83, DOI DOI 10.1108/EUM0000000004583
   Davenport TH, 1998, SLOAN MANAGE REV, V39, P43
   DINGSOYR T, 2000, P WORKSH LEARN SOFTW, P55
   FELDMANN RL, 2000, P WORKSH LEARN SOFTW, P7
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Greene S., 1999, International Journal on Digital Libraries, V2, P79, DOI 10.1007/s007990050039
   HACKOS JT, 1998, USER TASK ANAL INTER, P258
   Houdek F, 1998, PROC INT CONF SOFTW, P443, DOI 10.1109/ICSE.1998.671602
   Kapyla T., 1998, P 4 ERCIM WORKSH US, P19
   KOTNOUR T, 1997, P IEEE INT C SYST MA, P94
   Lawton G, 2001, COMPUTER, V34, P12, DOI 10.1109/2.933494
   Liebowitz J., 1998, Knowledge organizations: What every manager should know
   LINDVALL M, 2002, P 4 INT WORKSH LEARN
   LINDVALL M, 2001, LEARNING SOFTWARE OR
   Mack R, 2001, IBM SYST J, V40, P925, DOI 10.1147/sj.404.0925
   Marwick AD, 2001, IBM SYST J, V40, P814, DOI 10.1147/sj.404.0814
   MENDES MANUEL OEHEN., 2001, PORTUGAL LEGAL PROTE, P29
   MILLER GA, 1994, PSYCHOL REV, V101, P343
   Nonaka I, 1995, KNOWLEDGE CREATING C
   PRIETODIAZ R, 1990, SOFTWARE REUSABILITY, V1
   ROY R, 2000, P 3 INT C PRACT ASPE
   RUHE G, 1999, P WORKSH LEARN SOFTW, P3
   Schneider K, 2002, IEEE SOFTWARE, V19, P46, DOI 10.1109/MS.2002.1003453
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   SEAMAN CB, 1999, P SOFTW ENG WORKSH
   SHNEIDERMAN B, 1994, IEEE SOFTWARE, V11, P70, DOI 10.1109/52.329404
   SKYRME DJ, 1998, J BUSINESS STRAT JAN, P20
   Tiwana A., 2000, The knowledge management toolkit: Practical techniques for building a knowledge management system
   vonMayrhauser A, 1996, IEEE T SOFTWARE ENG, V22, P424, DOI 10.1109/32.508315
   VONWANGENGEIM CG, 1999, P WORKSH LEARN SOFT, P118
   VONWANGENHEIM CG, 2000, P IBER AMIA SBIA 200, P12
   WEBBY R, 1999, P 2 WORKSH SOFTW ENG
   [No title captured]
NR 48
TC 7
Z9 10
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2003
VL 29
IS 9
BP 838
EP 850
DI 10.1109/TSE.2003.1232288
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 719EY
UT WOS:000185191700006
DA 2024-07-18
ER

PT J
AU Dunsmore, A
   Roper, M
   Wood, M
AF Dunsmore, A
   Roper, M
   Wood, M
TI The development and evaluation of three diverse techniques for
   object-oriented code inspection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE object-oriented; code reviews; software inspection; empirical study
AB This paper describes the development and evaluation of a rigorous approach aimed at the effective and efficient inspection of object-oriented (OO) code. Since the time that inspections were developed they have been shown to be powerful defect detection strategies. However, little research has been done to investigate their application to OO systems, which have very different structural and execution models compared to procedural systems. This suggests that inspection techniques may not be currently being deployed to their best effect in the context of large-scale OO systems. Work to date has revealed three significant issues that need to be addressed-the identification of chunks of code to be inspected, the order in which the code is read, and the resolution of frequent nonlocal references. Three techniques are developed with the aim of addressing these issues: one based on a checklist, one focused on constructing abstract specifications, and the last centered on the route that a use case takes through a system. The three approaches are evaluated empirically and, in this instance, it is suggested that the checklist is the most effective approach, but that the other techniques also have potential strengths. For the best results in a practical situation, a combination of techniques is recommended, one of which should focus specifically on the characteristics of OO.
C1 Formedix, Paisley, Renfrew, Scotland.
   Univ Strathclyde, Dept Comp & Informat Sci, Glasgow G1 1XH, Lanark, Scotland.
C3 University of Strathclyde
RP Formedix, Abbey Mill Business Ctr,12 Seedhill Rd, Paisley, Renfrew, Scotland.
EM AlastairDunsmore@formedix.com; marc@cis.strath.ac.uk;
   murray@cis.strath.ac.uk
OI Wood, Murray/0000-0002-9449-1036
CR BALDWIN JT, 1992, THESIS U ILLINOIS
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Chernak Y, 1996, IEEE T SOFTWARE ENG, V22, P866, DOI 10.1109/32.553635
   Dunsmore A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P467, DOI 10.1109/ICSE.2000.870437
   Dunsmore A, 2001, PROC INT CONF SOFTW, P135, DOI 10.1109/ICSE.2001.919088
   DUNSMORE A, 2002, THESIS U STRATHCLYDE
   DUNSMORE A, 2000, EFOCS372000
   DUNSMORE A, 1999, EFOCS3499
   DUNSMORE A, 2000, EFOCS362000
   FAGAN ME, 1986, IEEE T SOFTWARE ENG, V12, P744, DOI 10.1109/TSE.1986.6312976
   Gamma E., 1994, DESIGN PATTERNS
   Gilb Tom, 1993, Software inspections
   Humphrey W S, 1995, A discipline for software engineering
   Laitenberger O, 2000, J SYST SOFTWARE, V50, P5, DOI 10.1016/S0164-1212(99)00073-4
   LAITENBERGER O, 2000, THESIS U KAISERSLAUT
   Linger R.C., 1979, Structured Programming; Theory and Practice the Systems Programming Series
   Miller J, 1997, INFORM SOFTWARE TECH, V39, P285, DOI 10.1016/S0950-5849(96)01139-1
   *NASA M, 1993, NASAGBA302
   SOLOWAY E, 1988, COMMUN ACM, V31, P1259, DOI 10.1145/50087.50088
   WELLER EF, 1993, IEEE SOFTWARE, V10, P38, DOI 10.1109/52.232397
NR 20
TC 35
Z9 35
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2003
VL 29
IS 8
BP 677
EP 686
DI 10.1109/TSE.2003.1223643
PG 10
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 708KQ
UT WOS:000184566400002
DA 2024-07-18
ER

PT J
AU Kuo, TW
   Chang, LP
   Liu, YH
   Lin, KJ
AF Kuo, TW
   Chang, LP
   Liu, YH
   Lin, KJ
TI Efficient online schedulability tests for real-time systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE real-time systems; schedulability test; division graph; reduced set;
   multiframe process; open system environment; MPEG streams; time
   reservation
AB Many computer systems, such as those for open system environments or multimedia services, need an efficient schedulability test for online admission control of new jobs. Although various polynomial time schedulability tests have been proposed, they often fail to decide the schedulability of the system precisely when the system is heavily loaded. On the other hand, most precise schedulability tests proposed to date have a high complexity and may not be suitable for online tests. In this paper, we present new efficient online schedulability tests for both the periodic process model [8] and the multiframe process model [1] in uniprocessor environments. The schedulability tests are shown to be more precise and efficient than any existing polynomial-time schedulability tests. Moreover, the tests can be done incrementally as each new task arrives at the system. Our proposed tests can also be used for the multiframe model where a task may have different computation times in different periods. We show the performance of the proposed schedulability tests in several simulation experiments.
C1 Natl Taiwan Univ, Dept Comp Sci & Informat Engn, Taipei 106, Taiwan.
   Natl Chung Cheng Univ, Dept Comp Sci & Informat Engn, Chiayi 621, Taiwan.
   Univ Calif Irvine, Dept Elect & Comp Engn, Irvine, CA 92697 USA.
C3 National Taiwan University; National Chung Cheng University; University
   of California System; University of California Irvine
RP Kuo, TW (corresponding author), Natl Taiwan Univ, Dept Comp Sci & Informat Engn, Taipei 106, Taiwan.
OI KUO, TEI-WEI/0000-0003-1974-0394
CR [Anonymous], J ACM
   BURCHARD A, 1995, IEEE T COMPUTERS
   CHANG LP, 2002, P 6 INT C REAL TIM C
   CHENG AMK, 2003, J VLSI SIGNAL PROCES
   DAVIS DI, 1995, P IEEE REAL TIME SYS
   DAVIS DI, 1993, P IEEE REAL TIM SYST
   DENG Z, 1997, P IEEE 18 REAL TIM S
   HAN CC, 1997, P IEEE 18 REAL TIM S
   HAN CC, 1992, P IEEE 13 REAL TIM S
   HAN CC, 1998, P IEEE 19 REAL TIM S
   HWANG RH, 1996, P WORKSH COMM NETWOR
   KAMENOFF NI, 1991, P IEEE REAL TIM SYST
   KIM N, 1996, P 17 IEEE REAL TIM S
   KUO TW, 1997, P IEEE T COMP, V16
   KUO TW, 1997, P INT S MULT INF PRO
   KUO TW, 1999, P IEEE 20 REAL TIM S
   LEHOCZKY JP, 1989, P IEEE 10 REAL TIM S
   Leung J. Y., 1982, PERFORMANCE EVALUATI, V2
   LIN JS, 1997, P WORKSH REAL TIM ME
   LIN KJ, 1996, P 29 HAW INT C SYST
   LOCKE CD, 1991, P IEEE 12 REAL TIM S
   MILLER L, 2000, P 21 IEEE REAL TIM S
   Mok A. K., 1997, IEEE T SOFTWARE ENG
   MOLINI JJ, 1991, P IEEE REAL TIME SYS
   RAO S, 2000, P IEEE INT C MULT EX
   SHA L, 1990, IEEE T COMPUTERS, V39
   SHA L, 1992, LECT NOTE SOFTWARE E
   SHIH WK, 1992, P IEEE 13 REAL TIM S
   SJODIN M, 1999, P IEEE REAL TIM TECH
   SPRUNT B, 1990, THESIS CANREGIE MELL
   TINDELL KW, 1994, REAL-TIME SYST, V6, P133, DOI 10.1007/BF01088593
   VIN HM, 1994, P ACM INT C MULT K
   WEI CY, 2003, P 9 INT C REAL TIM E
   WONG C, 1997, P 22 INT C LOC COMP
   YANG WR, 1997, P 3 WORKSH REAL TIM
NR 35
TC 27
Z9 28
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2003
VL 29
IS 8
BP 734
EP 751
DI 10.1109/TSE.2003.1223647
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 708KQ
UT WOS:000184566400006
DA 2024-07-18
ER

PT J
AU Santone, A
AF Santone, A
TI Heuristic search plus local model checking in selective mu-calculus
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE state explosion; model checking; heuristic search; temporal logic; local
   model checking; AND/OR graph
ID AUTOMATIC VERIFICATION
AB Many tools for the automatic analysis or verification of finite-state distributed systems are based on the construction of the global state graph of the system under consideration. Thus, they often fail because of the state explosion problem: The state spac e I of. a distributed system potentially increases exponentially in the number of its parallel components. To overcome this problem in this paper, we present a model checking procedure, based on the combination of heuristic searches with Ideas taken from local model checking. We use heuristic mechanisms for the exploration of the search space in order to avoid the construction of the complete state graph.
C1 Univ Sannio, RCOST, I-82100 Benevento, Italy.
C3 University of Sannio
RP Univ Sannio, RCOST, Palazzo Ex Poste,Via Traiano 1, I-82100 Benevento, Italy.
EM santone@unisannio.it
CR [Anonymous], 1996, LECT NOTES COMPUTER, DOI DOI 10.1007/3-540-60761-7
   [Anonymous], P 5 INT C COMP AID V
   [Anonymous], 1990, Software testing techniques {
   AZIZ A, 1994, P 6 INT C COMP AID V, P324
   Barbuti R, 1999, J COMPUT SYST SCI, V59, P537, DOI 10.1006/jcss.1999.1660
   BEHRMANN G, 2001, P TACAS 01, P174
   Bertoli P., 2002, P 6 INT C AI PLANN S, P23
   BLOEM R, 1999, P 11 INT C COMP AID, P222
   BOUAJJANI A, 1990, P INT C COMP AID VER, P197
   Bradley J., 1991, PROCESS CONTR QUAL, V1, P157
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Clarke E. M., 1989, Proceedings. Fourth Annual Symposium on Logic in Computer Science (Cat. No.89CH2753-2), P353, DOI 10.1109/LICS.1989.39190
   CLARKE EM, 1994, ACM T PROGR LANG SYS, V16, P1512, DOI 10.1145/186025.186051
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   CLEAVELAND R, 1996, P 8 INT C COMP AID V, P394
   De Francesco N, 1998, SCI COMPUT PROGRAM, V30, P309, DOI 10.1016/S0167-6423(97)00017-8
   Edelkamp S, 1998, LECT NOTES ARTIF INT, V1504, P81
   EDELKAMP S, 2001, P 8 INT SPIN WORKSH, P57
   Edelkamp S, 2002, P 6 INT C AI PLANN S
   Feng ZZ, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P455
   GODEFROID P, 2002, P TACAS, P266
   GRAV S, 1996, FORM ASP COMPUT, V8, P607
   Groce A, 2002, LECT NOTES COMPUT SC, V2318, P242
   GRUMBERG O, 1994, ACM T PROGR LANG SYS, V16, P843, DOI 10.1145/177492.177725
   Jensen RM, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P668
   KAIVOLA R, 1991, P 4 INT C COMP AID V, P248
   Lluch-Lafuente A, 2002, LECT NOTES COMPUT SC, V2318, P112
   MAHANTI A, 1985, J ACM, V32, P28, DOI 10.1145/2455.2459
   McMillan K. L., 1993, Symbolic model checking
   MILNER R, 1989, COMMUNICATIOIN CONCU
   MOLLER MO, 2001, P 11 IFIP WG 10 5 AD, P71
   Pearl J., 1984, Heuristics: Intelligent Search Strategies for Computer Problem Solving
   PNUELI A, 1984, NATO ASI SERIES F, V13
   Robinson JA, 2001, Handbook of automated reasoning
   Santone A, 2002, ACTA INFORM, V38, P531, DOI 10.1007/s00236-002-0084-5
   STIRLING C, 1991, THEOR COMPUT SCI, V89, P161, DOI 10.1016/0304-3975(90)90110-4
   STIRLING C, 1989, CONCURRENCY THEORY L
   VALMARI A, 1990, P 2 WORKSH COMP AID, P156
   Yang CH, 1998, 1998 DESIGN AUTOMATION CONFERENCE, PROCEEDINGS, P599, DOI 10.1109/DAC.1998.724542
   [No title captured]
NR 40
TC 19
Z9 20
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2003
VL 29
IS 6
BP 510
EP 523
DI 10.1109/TSE.2003.1205179
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 685XV
UT WOS:000183290400003
DA 2024-07-18
ER

PT J
AU Mukelabai, M
   Hermann, K
   Berger, T
   Steghofer, JP
AF Mukelabai, Mukelabai
   Hermann, Kevin
   Berger, Thorsten
   Steghofer, Jan-Philipp
TI FeatRacer: Locating Features Through Assisted Traceability
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Annotations; Recording; Software; Large scale integration;
   Manuals; Maintenance engineering; Feature location; traceability;
   recommender
ID LABEL FEATURE-SELECTION; SOFTWARE
AB Locating features is one of the most common software development activities. It is typically done during maintenance and evolution, when developers need to identify the exact places in a codebase where specific features are implemented. Unfortunately, locating features is laborious and error-prone, since feature knowledge fades, projects are developed by different developers, and features are often scattered across the codebase. Recognizing the need, many automated feature location techniques have been proposed, which try to retroactively recover features, i.e., very domain-specific information from the codebase. Unfortunately, such techniques require large training datasets, only recover coarse-grained locations and produce too many false positives to be useful in practice. An alternative is recording features during development, when they are still fresh in a developer's mind. However, recording is easily forgotten and also costly, especially when the software evolves and such recordings need to be updated. We address the infamous feature location problem (a.k.a., concern location or concept assignment problem) differently. We present FeatRacer, which combines feature recording and automated feature location in a way that allows developers to proactively and continuously record features and their locations during development, while addressing the shortcomings of both strategies. Specifically, FeatRacer relies on embedded code annotations and a machine-learning-based recommender system. When a developer forgets to annotate, FeatRacer reminds the developer about potentially missing features, which it learned from the feature recording practices in the project at hand. FeatRacer also facilitates fine-grained locations as decided by the developer. Our evaluation shows that FeatRacer outperforms traditional automated feature location based on Latent Semantic Indexing (LSI) and Linear Discriminant Analysis (LDA)-two of the most common methods to realize such techniques-when predicting features for 4,650 commit changesets from the histories of 16 open-source projects spanning an average of three years between 1985 and 2015. Compared to the traditional techniques, FeatRacer showed a 3x higher precision and a 4.5x higher recall, with an average precision and recall of 89.6% among all 16 projects. It can accurately predict feature locations within the first five commits of our evaluation projects, being effective already for small datasets. FeatRacer takes on average 1.9ms to learn from past code fragments of a project, and 0.002ms to predict forgotten feature annotations in new code.
C1 [Mukelabai, Mukelabai] Univ Zambia, Lusaka 10101, Zambia.
   [Mukelabai, Mukelabai; Berger, Thorsten] Chalmers Univ Gothenburg, S-41296 Gothenburg, Sweden.
   [Hermann, Kevin; Berger, Thorsten] Ruhr Univ Bochum, Univ Str 150, D-44801 Bochum, Germany.
   [Steghofer, Jan-Philipp] Xitaso, D-86153 Augsburg, Germany.
C3 University of Zambia; Chalmers University of Technology; Ruhr University
   Bochum
RP Mukelabai, M (corresponding author), Univ Zambia, Lusaka 10101, Zambia.
EM mukelabai.mukelabai@unza.zm
OI Mukelabai, Mukelabai/0000-0002-3868-4319; Hermann,
   Kevin/0009-0004-6207-4045
FU Swedish Research Council Vetenskapsr#x00E5;det
FX No Statement Available
CR Abukwaik H, 2018, PROC IEEE INT CONF S, P529, DOI 10.1109/ICSME.2018.00049
   Andam Berima, 2017, P 11 INT WORKSH VAR, P100, DOI DOI 10.1145/3023956.3023967
   [Anonymous], 2022, Gensim LDA
   [Anonymous], 2015, P 19 INT C SOFTW PRO, DOI DOI 10.1145/2791060.2791108
   Antkiewicz M, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P130
   Apel S., 2013, Feature-Oriented Software Development: Concepts and Implementation
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Armaly A, 2016, PROC IEEE INT CONF S, P553, DOI 10.1109/ICSME.2016.76
   Asadi F, 2010, EUR CON SFTWR MTNCE, P31, DOI 10.1109/CSMR.2010.17
   Bak K, 2016, SOFTW SYST MODEL, V15, P811, DOI 10.1007/s10270-014-0441-1
   Balebako R, 2014, IEEE SECUR PRIV, V12, P55, DOI 10.1109/MSP.2014.70
   Ballarín M, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106430
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bergel A, 2021, SPLC '21: PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, DOI 10.1145/3461001.3471154
   Berger T., 2013, PROC VAMOS, P1
   Berger T., 2014, P VAMOS
   Berger T, 2020, EMPIR SOFTW ENG, V25, P1755, DOI 10.1007/s10664-019-09787-6
   Berger T, 2014, LECT NOTES COMPUT SC, V8767, P302, DOI 10.1007/978-3-319-11653-2_19
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Beuche D, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P358, DOI 10.1109/SPLC.2008.53
   Biggers LR, 2014, EMPIR SOFTW ENG, V19, P465, DOI 10.1007/s10664-012-9224-x
   BIGGERSTAFF TJ, 1993, PROC INT CONF SOFTW, P482, DOI 10.1109/ICSE.1993.346017
   Blackwell A, 2002, IEEE 2002 SYMPOSIA ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P28, DOI 10.1109/HCC.2002.1046337
   Blackwell A. F., 1999, P PPIG 11
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Brown C, 2021, 2021 IEEE/ACM THIRD INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2021), P11, DOI 10.1109/BotSE52550.2021.00010
   Charte F, 2015, KNOWL-BASED SYST, V89, P385, DOI 10.1016/j.knosys.2015.07.019
   Charte F, 2015, NEUROCOMPUTING, V163, P3, DOI 10.1016/j.neucom.2014.08.091
   Charte F, 2014, LECT NOTES COMPUT SC, V8480, P110
   Corley CS, 2015, PROC IEEE INT CONF S, P556, DOI 10.1109/ICSM.2015.7332513
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Entekhabi S, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P1, DOI 10.1145/3307630.3342392
   Fogdal T., 2016, P SPLC, P252
   Franz P., 2021, 2021 IEEEACM 43 INT, P91, DOI DOI 10.1109/ICSE-SEIP52600.2021.00018
   Galindo JA, 2019, COMPUTING, V101, P387, DOI 10.1007/s00607-018-0646-1
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Jepsen HP, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P203
   Ji Wenbin, 2015, INT SYST SOFTW PROD, P61, DOI DOI 10.1145/2791060.2791107
   Kang K., 1990, Technical Report CMU/ SEI- 90- TR- 21
   Kastner C., 2011, Tec. Rep.
   Kastner C., 2008, SPLC, P303
   KOSCHKE R., 2005, ASE '05 Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering, P86
   Krüger J, 2019, J SYST SOFTWARE, V152, P239, DOI 10.1016/j.jss.2019.01.057
   Krüger J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P764, DOI 10.1145/3180155.3180215
   Kruger J., 2018, Features and How to Find Them: A Survey of Manual Feature Location
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   Larman C., 2008, Scaling Lean and Agile Development: Thinking and Organizational Tools for Large-Scale Scrum
   Liebig J., 2010, P ICSE
   Linsbauer L, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110796
   Liu H, 2008, CH CRC DATA MIN KNOW, P3
   Lotufo R, 2010, LECT NOTES COMPUT SC, V6287, P136, DOI 10.1007/978-3-642-15579-6_10
   Mahmood W, 2021, PROC INT CONF SOFTW, P1658, DOI 10.1109/ICSE43902.2021.00147
   Marcén AC, 2022, SOFTW SYST MODEL, V21, P399, DOI 10.1007/s10270-021-00920-y
   Marcén AC, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P57, DOI 10.1145/3109729.3109734
   Maro S, 2018, J SYST SOFTWARE, V141, P85, DOI 10.1016/j.jss.2018.03.060
   Martinson J, 2021, SPLC '21 - PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL B, P28, DOI 10.1145/3461002.3473072
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Mukelabai M., 2023, PROC ASE
   Mukelabai M, 2018, IEEE INT CONF AUTOM, P155, DOI 10.1145/3238147.3238201
   Nesic D, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P62, DOI 10.1145/3338906.3338974
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Passos L., 2013, P VAMOS, P1
   Passos L, 2021, IEEE T SOFTWARE ENG, V47, P146, DOI 10.1109/TSE.2018.2884911
   Pérez F, 2020, INFORM SOFTWARE TECH, V125, DOI 10.1016/j.infsof.2020.106337
   Pleuss A., 2011, P SPLC, V2, P1, DOI DOI 10.1145/2019136.2019161(CIT.ONP.75
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2007, INT C PROGRAM COMPRE, P37
   Queiroz R, 2017, SOFTW SYST MODEL, V16, P77, DOI 10.1007/s10270-015-0483-z
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Razzaq A, 2020, EMPIR SOFTW ENG, V25, P266, DOI 10.1007/s10664-019-09734-5
   Revelle Meghan, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P14, DOI 10.1109/ICPC.2010.10
   Robillard M. P., PAC ESECIESE 2005, P11
   Robillard MP, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189751
   Rubin J., 2013, Domain Engineering, P29, DOI DOI 10.1007/978-3-642-36654-3
   Savage T., 2010, P ICSE
   Schwarz Tobias, 2020, SPLC '20: Proceedings of the 24th ACM International Systems and Software Product Line Conference - Volume B on ZZZ, P5, DOI 10.1145/3382026.3431253
   Seiler M., 2019, SEKE, P754
   Seiler M, 2017, LECT NOTES COMPUT SC, V10153, P174, DOI 10.1007/978-3-319-54045-0_13
   She S., 2010, VaMoS, P45
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   Sincero Julio., 2008, Software Product Lines, 12th International Conference, SPLC 2008, Limerick, Ireland, September 8-12, 2008, P257
   Spolaôr N, 2016, NEUROCOMPUTING, V180, P3, DOI 10.1016/j.neucom.2015.07.118
   Spolaór N, 2013, ELECTRON NOTES THEOR, V292, P135, DOI 10.1016/j.entcs.2013.02.010
   Struder S., 2020, P SPLC, P1
   The Authors, 2023, Online appendix
   Thomas Stephen W., 2012, Lucene-LDA repository
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   Trifu M, 2009, EUR CON SFTWR MTNCE, P109, DOI 10.1109/CSMR.2009.34
   Tsoumakas G, 2011, J MACH LEARN RES, V12, P2411
   van der Linden F. J., 2007, Software Product Lines in Action: the Best Industrial Practice in Product Line Engineering
   Wang JS, 2013, J SOFTW-EVOL PROC, V25, P1193, DOI 10.1002/smr.1593
   Warr FW, 2007, PROC INT CONF SOFTW, P780
   Wasowski A., 2023, Domain-Specific Languages: Effective Modeling, Automation, and Reuse, P437
   Wasowski A., 2023, DomainSpecific Languages: Effective Modeling, Automation, and Reuse, P395
NR 95
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2023
VL 49
IS 12
BP 5060
EP 5083
DI 10.1109/TSE.2023.3324719
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CL0K1
UT WOS:001125287400003
DA 2024-07-18
ER

PT J
AU Cejas, OA
   Azeem, MI
   Abualhaija, S
   Briand, LC
AF Cejas, Orlando Amaral
   Azeem, Muhammad Ilyas
   Abualhaija, Sallam
   Briand, Lionel C.
TI NLP-Based Automated Compliance Checking of Data Processing Agreements
   Against GDPR
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements engineering (RE); the general data protection regulation
   (GDPR); regulatory compliance; natural language processing (NLP); data
   processing agreement (DPA); privacy
ID LEGAL REQUIREMENTS; KNOWLEDGE
AB When the entity processing personal data (the processor) differs from the one collecting personal data (the controller), processing personal data is regulated in Europe by the General Data Protection Regulation (GDPR) through data processing agreements (DPAs). Checking the compliance of DPAs contributes to the compliance verification of software systems as DPAs are an important source of requirements for software development involving the processing of personal data. However, manually checking whether a given DPA complies with GDPR is challenging as it requires significant time and effort for understanding and identifying DPA-relevant compliance requirements in GDPR and then verifying these requirements in the DPA. Legal texts introduce additional complexity due to convoluted language and inherent ambiguity leading to potential misunderstandings. In this paper, we propose an automated solution to check the compliance of a given DPA against GDPR. In close interaction with legal experts, we first built two artifacts: (i) the "shall" requirements extracted from the GDPR provisions relevant to DPA compliance and (ii) a glossary table defining the legal concepts in the requirements. Then, we developed an automated solution that leverages natural language processing (NLP) technologies to check the compliance of a given DPA against these "shall" requirements. Specifically, our approach automatically generates phrasal-level representations for the textual content of the DPA and compares them against predefined representations of the "shall" requirements. By comparing these two representations, the approach not only assesses whether the DPA is GDPR compliant but it further provides recommendations about missing information in the DPA. Over a dataset of 30 actual DPAs, the approach correctly finds 618 out of 750 genuine violations while raising 76 false violations, and further correctly identifies 524 satisfied requirements. The approach has thus an average precision of 89.1%, a recall of 82.4%, and an accuracy of 84.6%. Compared to a baseline that relies on off-the-shelf NLP tools, our approach provides an average accuracy gain of approximate to 20 percentage points. The accuracy of our approach can be improved to approximate to 94% with limited manual verification effort.
C1 [Cejas, Orlando Amaral; Azeem, Muhammad Ilyas; Abualhaija, Sallam; Briand, Lionel C.] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, L-4365 Esch Sur Alzette, Luxembourg.
   [Briand, Lionel C.] Univ Ottawa, Sch Elect Engn & Comp Sci, Ottawa, ON K1N 6N5, Canada.
C3 University of Luxembourg; University of Ottawa
RP Cejas, OA (corresponding author), Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, L-4365 Esch Sur Alzette, Luxembourg.
EM orlando.amaralcejas@uni.lu; ilyas.azeem@uni.lu;
   sallam.abualhaija@uni.lu; lionel.briand@uni.lu
RI Amaral Cejas, Orlando/KHZ-5400-2024
OI Amaral Cejas, Orlando/0000-0001-5140-6439; Abualhaija,
   Sallam/0000-0001-6095-447X; Briand, Lionel/0000-0002-1393-1010
FU Linklaters, Luxembourg's National Research Fund (FNR); NSERC of Canada; 
   [BRIDGES/19/IS/13759068/ARTAGO]
FX This work was supported in part by Linklaters, Luxembourg's National
   Research Fund (FNR) under Grant BRIDGES/19/IS/13759068/ARTAGO, and in
   part by the NSERC of Canada under the Discovery andCRC programs.
   Recommended for acceptance by P. Spoletini.
CR Aberkane AJ, 2022, 2022 IEEE 4TH INTERNATIONAL CONFERENCE ON TRUST, PRIVACY AND SECURITY IN INTELLIGENT SYSTEMS, AND APPLICATIONS, TPS-ISA, P107, DOI 10.1109/TPS-ISA56441.2022.00023
   Aberkane AJ, 2021, IEEE ACCESS, V9, P66542, DOI 10.1109/ACCESS.2021.3076921
   Abualhaija S, 2022, 2022 30TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE (RE 2022), P39, DOI 10.1109/RE54965.2022.00011
   Agirre E, 2006, TEXT SPEECH LANG TEC, V33, P1, DOI 10.1007/978-1-4020-4809-8
   Akhigbe O, 2022, SOFTW SYST MODEL, V21, P1613, DOI 10.1007/s10270-021-00949-z
   Alhazmi A, 2021, ARES 2021: 16TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, DOI 10.1145/3465481.3470031
   Alhazmi Abdulrahman, 2021, Pers Ubiquitous Comput, V25, P879, DOI 10.1007/s00779-021-01544-1
   Amaral O, 2022, IEEE T SOFTWARE ENG, V48, P4647, DOI 10.1109/TSE.2021.3124332
   Amaral O, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P16, DOI 10.1109/REW53955.2021.00009
   [Anonymous], 2022, Mate tools
   Apache OpenNLP, 2022, About us
   Apache-POI, 2022, The Java API for microsoft documents
   Ayala-Rivera V, 2018, INT REQUIR ENG CONF, P136, DOI 10.1109/RE.2018.00023
   Baker C.F., 1998, P 36 ANN M ASS COMP, P86, DOI [DOI 10.3115/980845.980860, DOI 10.3115/980451.980860]
   Benjumea J, 2019, COMP MED SY, P634, DOI 10.1109/CBMS.2019.00131
   Berant J., 2013, P 2013 C EMPIRICAL M, P1533
   Bhatia J, 2019, REQUIR ENG, V24, P291, DOI 10.1007/s00766-019-00315-y
   Bhatia J, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2907942
   Boella G, 2016, ARTIF INTELL LAW, V24, P245, DOI 10.1007/s10506-016-9184-3
   Bonatti PA, 2020, KUNSTL INTELL, V34, P303, DOI 10.1007/s13218-020-00677-4
   Breaux T.D., 2007, RHAS-6
   Breaux TD, 2022, 2022 30TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE (RE 2022), P101, DOI 10.1109/RE54965.2022.00016
   Breaux TD, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P49
   Breaux TD, 2008, INT REQUIR ENG CONF, P43, DOI 10.1109/RE.2008.36
   Cahyono SC, 2019, IOP CONF SER-MAT SCI, V662, DOI 10.1088/1757-899X/662/5/052016
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Corley C.D., 2005, P ACL WORKSHOP EMPIR, P13, DOI [10.3115/1631862.1631865, DOI 10.3115/1631862.1631865]
   Cozar M, 2022, 7TH IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (EUROS&PW 2022), P181, DOI 10.1109/EuroSPW55150.2022.00024
   D. G. for Justice & Consumers (European Commission), 2018, Justice Consum.
   De Marneffe M.-C., 2008, Stanford Typed Dependencies Manual
   Degeling M, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23378
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Eckart deCastilho R., 2014, ASS COMPUTATIONAL LI, P1, DOI DOI 10.3115/V1/W14-5201
   European Union, 2018, General data protection regulation
   Evans MC, 2017, INT REQUIR ENG CONF, P312, DOI 10.1109/RE.2017.87
   extJWNL, 2022, Extended Java WordNet library
   Feal A., 2020, P COMP PRIV DAT PROT, P1
   Ghanavati S., 2011, 2011 Fourth International Workshop on Requirements Engineering and Law, P25, DOI 10.1109/RELAW.2011.6050270
   Ghanavati S, 2014, INT REQUIR ENG CONF, P73, DOI 10.1109/RE.2014.6912249
   Ghanavati S, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P133, DOI 10.1109/RE.2009.42
   Gildea D, 2002, COMPUT LINGUIST, V28, P245, DOI 10.1162/089120102760275983
   Guaman DS, 2021, IEEE ACCESS, V9, P15961, DOI 10.1109/ACCESS.2021.3053130
   Hamdani Rajaa El, 2021, ICAIL '21: Proceedings of the Eighteenth International Conference on Artificial Intelligence and Law, P40, DOI 10.1145/3462757.3466081
   Horák M, 2019, 14TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY (ARES 2019), DOI 10.1145/3339252.3340516
   Howard J, 2018, Arxiv, DOI [arXiv:1801.06146, DOI 10.48550/ARXIV.1801.06146, 10.48550/arXiv.1801.06146]
   Ingolfo S, 2014, LECT NOTES COMPUT SC, V8824, P275, DOI 10.1007/978-3-319-12206-9_22
   Ingolfo S, 2014, INT REQUIR ENG CONF, P313, DOI 10.1109/RE.2014.6912273
   JARO MA, 1989, J AM STAT ASSOC, V84, P414, DOI 10.2307/2289924
   Jiang NJ, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P6086
   Jurafsky D., 2009, SPEECH LANGUAGE PROC
   JVerbnet, 2022, Java library for VerbNet
   Kingsbury Paul., 2002, P 3 INT C LANG RES E, P1989
   Kipper K., 2006, Proceedings of the International Conference on Language Resources and Evaluation, P1027
   Klaus Pohl e Chris Rupp., 2011, Requirements Engineering Fundamentals: A Study Guide for the Certified Professional for Requirements Engineering Exam - Foundation Level - IREB Compliant, V1st
   Korhonen Anna., 2004, Proceedings of the HLT-NAACL Workshop on Computational Lexical Semantics - CLS '04, P38
   Krapivkina OA, 2017, JEZIKOSLOVLJE, V18, P305
   LESK Michael, 1986, P 5 ANN INT C SYST D, V5, P24, DOI 10.1145/318723.318728
   Li ZC, 2021, COMPUT LINGUIST, V47, P529, DOI [10.1162/coli_a_00408, 10.1162/COLI_a_00408]
   Lin YK, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P34, DOI 10.18653/v1/P17-1004
   Linden Thomas, 2020, Proceedings on Privacy Enhancing Technologies, V2020, P47, DOI 10.2478/popets-2020-0004
   Lippi M, 2019, ARTIF INTELL LAW, V27, P117, DOI 10.1007/s10506-019-09243-2
   Liu Fei, 2014, P COLING 2014 25 INT, P884
   Loideain Nora Ni, 2019, Journal of Cyber Policy, V4, P178, DOI 10.1080/23738871.2019.1635176
   Màrquez L, 2008, COMPUT LINGUIST, V34, P145, DOI 10.1162/coli.2008.34.2.145
   Mashkoor A, 2021, 2021 ACM/IEEE 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2021), P1, DOI 10.1109/ICSE-NIER52604.2021.00009
   Massey A. K., 2009, 2nd Int. Workshop on Requirements Engineering and Law (RELAW'09), P27
   Massey AK, 2014, INT REQUIR ENG CONF, P83, DOI 10.1109/RE.2014.6912250
   Mavin A, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P317, DOI 10.1109/RE.2009.9
   Maxwell JC, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P101, DOI 10.1109/RE.2009.21
   Maxwell JeremyC., 2010, Proceedings of the 1st ACM International Health Informatics Symposium, IHI '10, P629
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Miller George, 1998, WORDNET ELECT LEXICA
   Navigli R, 2007, P 4 INT WORKSH SEM E, P30
   Nazarenko A., 2021, PROC INT C LEGAL KNO, P23
   Nedelchev R., 2020, IFIP INT C ICT SYST, P370, DOI [10.1007/978-3-030-58201-2_25, DOI 10.1007/978-3-030-58201-2_25]
   Newman D., 2010, AUTOMATIC EVALUATION
   Otto PN, 2007, INT REQUIR ENG CONF, P5, DOI 10.1109/RE.2007.65
   Palmirani M, 2018, FRONT ARTIF INTEL AP, V313, P101, DOI 10.3233/978-1-61499-935-5-101
   Pantlin N, 2018, COMPUT LAW SECUR REV, V34, P881, DOI 10.1016/j.clsr.2018.06.009
   Park E., 2019, P IEEE INT C SYST CO, P1
   Pedersen T, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P1024
   Pullonen P, 2019, SOFTW SYST MODEL, V18, P3235, DOI 10.1007/s10270-019-00718-z
   Rahman MS, 2022, IEEE ACCESS, V10, P89248, DOI 10.1109/ACCESS.2022.3199882
   Rex Chen, 2021, WPES '21: Proceedings of the 20th Workshop on Workshop on Privacy in the Electronic Society, P73, DOI 10.1145/3463676.3485601
   Sánchez D, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11041762
   Sangaroonsilp P, 2021, Arxiv, DOI arXiv:2101.01298
   Schuler K.K., 2005, VerbNet: A Broad-Coverage, Comprehensive Verb Lexicon
   Shastri S, 2021, COMMUN ACM, V64, P59, DOI 10.1145/3378061
   Shen Dan, 2007, EMNLP-CoNLL 2007, Proceedings of the 2007 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning, June 28-30, 2007, Prague, Czech Republic, P12
   Shi C, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2245
   Li ZS, 2020, Arxiv, DOI arXiv:2002.06830
   Shi P, 2019, Arxiv, DOI arXiv:1904.05255
   Shwartz V, 2019, T ASSOC COMPUT LING, V7, P403, DOI 10.1162/tacl_a_00277/1923583
   Siena A., 2009, 2009 2 INT WORKSHOP, P45
   Sleimi A, 2018, INT REQUIR ENG CONF, P124, DOI 10.1109/RE.2018.00022
   Soltana G, 2014, LECT NOTES COMPUT SC, V8767, P450, DOI 10.1007/978-3-319-11653-2_28
   Sulaiman RA, 2021, KSII T INTERNET INF, V15, P932, DOI 10.3837/tiis.2021.03.007
   Tesfay WB, 2018, IWSPA '18: PROCEEDINGS OF THE FOURTH ACM INTERNATIONAL WORKSHOP ON SECURITY AND PRIVACY ANALYTICS, P15, DOI 10.1145/3180445.3180447
   Tokas S, 2022, J LOG ALGEBR METHODS, V125, DOI 10.1016/j.jlamp.2021.100733
   Urban Tobias, 2020, ASIA CCS '20: Proceedings of the 15th ACM Asia Conference on Computer and Communications Security, P222, DOI 10.1145/3320269.3372194
   van Binsbergen LT, 2020, GPCE '2020: PROCEEDINGS OF THE 19TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES, P124, DOI 10.1145/3425898.3426958
   Vanezi E, 2020, LECT NOTES BUS INF P, V385, P569, DOI 10.1007/978-3-030-50316-1_40
   Verderame L, 2020, IEEE IJCNN, DOI 10.1109/ijcnn48605.2020.9206660
   Viera AJ, 2005, FAM MED, V37, P360
   Wilson S, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16), P133, DOI 10.1145/2872427.2883035
   Woodsend K, 2014, J ARTIF INTELL RES, V51, P133, DOI 10.1613/jair.4431
   WS4J, 2022, WordNet similarity for Java
   Wu S., 2011, P 5 WORKSH SYNT SEM, P21
   WU ZB, 1994, 32ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P133
   Xu X, 2021, ADV ENG INFORM, V48, DOI 10.1016/j.aei.2021.101288
   Yates A, 2021, WSDM '21: PROCEEDINGS OF THE 14TH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P1154, DOI 10.1145/3437963.3441667
   Yulianto Muhamad Arief., 2021, JURNAL ONLINE INFORM, V6, P88, DOI [https://doi.org/10.15575/join.v6i1.640, DOI 10.15575/JOIN.V6I1.640]
   Zeni N, 2016, LECT NOTES COMPUT SC, V9974, P233, DOI 10.1007/978-3-319-46397-1_18
   Zeni N, 2015, REQUIR ENG, V20, P1, DOI 10.1007/s00766-013-0181-8
   Zhan X, 2022, PROCEEDINGS OF THE 2022 AAAI/ACM CONFERENCE ON AI, ETHICS, AND SOCIETY, AIES 2022, P845, DOI 10.1145/3514094.3534129
NR 115
TC 1
Z9 1
U1 6
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2023
VL 49
IS 9
BP 4282
EP 4303
DI 10.1109/TSE.2023.3288901
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA S4DL9
UT WOS:001070689400002
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Notland, JS
   Nowostawski, M
   Li, JY
AF Notland, Jakob Svennevik
   Nowostawski, Mariusz
   Li, Jingyue
TI Runtime Evolution of Bitcoin's Consensus Rules
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Bitcoin; blockchain; consensus; grounded theory; root cause analysis;
   runtime evolution
ID BLOCKCHAIN
AB The runtime evolution of a system concerns the ability to make changes during runtime without disrupting the service. Blockchain systems need to provide continuous service and integrity. Similar challenges have been observed in centrally controlled distributed systems or mobile applications that handle runtime evolution, mainly by supporting compatible changes or running different versions concurrently. However, these solutions are not applicable in the case of blockchains, and thus, new solutions are required. This study investigates Bitcoin consensus evolution by analysing over a decade of data from Bitcoin's development channels using Strauss' grounded theory approach and root cause analysis. The results show nine deployment features which form nine deployment techniques and ten lessons learned. Our results illustrate how different deployment techniques fit different contexts and pose different levels of consensus failure risks. Furthermore, we provide guidelines for risk minimisation during consensus rule deployment for blockchain in general and Bitcoin in particular.
C1 [Notland, Jakob Svennevik; Li, Jingyue] Norwegian Univ Sci & Technol, Dept Comp Sci, N-7491 Trondheim, Norway.
   [Nowostawski, Mariusz] Norwegian Univ Sci & Technol, Dept Comp Sci, N-2815 Gjovik, Norway.
C3 Norwegian University of Science & Technology (NTNU); Norwegian
   University of Science & Technology (NTNU)
RP Notland, JS (corresponding author), Norwegian Univ Sci & Technol, Dept Comp Sci, N-7491 Trondheim, Norway.
EM jakob.notland@ntnu.no; mariusz.nowostawski@ntnu.no; jingyue.li@ntnu.no
OI Li, Jingyue/0000-0002-7958-391X; Notland, Jakob
   Svennevik/0000-0001-7406-7038
FU National Key Research and Development Program of China; Research Council
   of Norway [2019YFE0105500];  [309494]
FX This work was supported in part by the National Key Research and
   Development Program of China under Grant 2019YFE0105500,and in part by
   the Research Council of Norway under Grant 309494.Recommended for
   acceptance by G. Canfora.(Corresponding author: Jakob Svennevik
   Notland.)
CR Ajmani S, 2006, LECT NOTES COMPUT SC, V4067, P452
   Andersen J. V., 2017, P ICIS
   Andersson Jesper, 2013, Software Engineering Processes Systems, P51, DOI DOI 10.1007/978-3-642-35813-53
   Andresen G., Bitcoin Core
   [Anonymous], Bitcoin-dev email list
   [Anonymous], 1982, Guide to Quality Control
   [Anonymous], Bitcoin, bitcoin cash hashrate historical chart
   [Anonymous], Bitcoin core integration/staging tree
   [Anonymous], Introducing long living masternode quorums
   [Anonymous], All-in-one research software
   [Anonymous], Unlock insights with qualitative data analysis software
   [Anonymous], Consensus versions
   [Anonymous], Proof-of-stake and security
   [Anonymous], GNU GREP
   [Anonymous], Understanding masternodes
   [Anonymous], Organize. code. Analyse. Present
   [Anonymous], ?About us"
   [Anonymous], Understanding dash governance
   [Anonymous], CVE-2018-17144 full disclosure
   [Anonymous], Today's cryptocurrency prices by market cap
   [Anonymous], Sporks
   Aublin PL, 2015, ACM T COMPUT SYST, V32, DOI 10.1145/2658994
   Bahsoun JP, 2015, INT PARALL DISTRIB P, P904, DOI 10.1109/IPDPS.2015.21
   bitcoin, Running a full node
   bitcoin, Some miners generating invalid blocks
   bitcoin, Bitcoin is an innovative payment network and a new kind of money
   bitcointalk, Simple Machines Forum
   BitMEX Research, Empty block data by mining pool
   BitMEX Research, A complete history of Bitcoin's consensus forks
   Brewer EA, 2001, IEEE INTERNET COMPUT, V5, P46, DOI 10.1109/4236.939450
   builduk, ABOUT US
   Chen W., 2007, Tech. Rep. MSR-TR-2006-135
   Corbin J., 2015, BASICS QUALITATIVE R
   De Filippi P, 2016, INTERNET POLICY REV, V5, DOI 10.14763/2016.3.427
   de Lemos Rogerio, 2017, Software Engineering for Self-Adaptive Systems III. Assurances. International Seminar. Revised Selected and Invited Papers: LNCS 9640, P3, DOI 10.1007/978-3-319-74183-3_1
   Deterding NM, 2021, SOCIOL METHOD RES, V50, P708, DOI 10.1177/0049124118799377
   Douceur JR, 2002, LECT NOTES COMPUT SC, V2429, P251, DOI 10.1007/3-540-45748-8_24
   Dwork C., 1993, Advances in Cryptology - CRYPTO '92. 12th Annual International Cryptology Conference Proceedings, P139
   en.bitcoin, Bitcoin Core
   Fry S., Bitcoin Core
   Gilbert S., 2002, SIGACT News, V33, P51, DOI 10.1145/564585.564601
   github, UAHF technical specification
   github, Dash Core
   github, Bitcoin Core
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   Harper C., 2021, CoinDesk Apr
   Holz R, 2020, ACM SIGCOMM COMP COM, V50, P4, DOI 10.1145/3411740.3411742
   Jakobsson M, 1999, INT FED INFO PROC, V23, P258
   Kiffer L, 2017, HOTNETS-XVI: PROCEEDINGS OF THE 16TH ACM WORKSHOP ON HOT TOPICS IN NETWORKS, P94, DOI 10.1145/3152434.3152449
   Knudsen Henrik, 2021, BIOTC 2021: 2021 3rd Blockchain and Internet of Things Conference, P15, DOI 10.1145/3475992.3475995
   Korpela K, 2017, PROCEEDINGS OF THE 50TH ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P4182
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   Kroll J.A., 2013, P 12 WORKSHOP EC INF
   LAMPORT L, 1982, ACM T PROGR LANG SYS, V4, P382, DOI 10.1145/357172.357176
   Lombrozo E., 2020, Bitcoin Mag
   McGhin T, 2019, J NETW COMPUT APPL, V135, P62, DOI 10.1016/j.jnca.2019.02.027
   Mens T., 2008, Software evolution, P1, DOI [DOI 10.1007/978-3-540-76440-3, 10.1007/978-3-540-76440-3_1]
   Mettler M., 2016, P IEEE 18 INT C E HL, P1
   Nakamoto S., 2008, DECENT BUS REV, V21260, DOI https://bitcoin.org/bitcoin.pdf
   Narayanan Arvind, 2016, Bitcoin and cryptocurrency technologies: a comprehensive introduction
   Ninjastic.space, About us
   Node B. C, Bitcoin-ABC
   Oates B. J., 2006, Researching information systems and computing
   Ohno T, 1988, Toyota Production System: Beyond Large-Scale Production
   Penrod J., 2003, J TRANSCULT NURS, V14, P100, DOI DOI 10.1177/1043659602250614
   Rashid A, 2016, PROC INT CONF SOFTW, P866, DOI 10.1145/2884781.2884785
   Reason J., 1991, HUMAN ERROR
   Rosenfeld M, 2014, Arxiv, DOI arXiv:1402.2009
   Saberi S, 2019, INT J PROD RES, V57, P2117, DOI 10.1080/00207543.2018.1533261
   Sayeed S, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9091788
   Segwit/PSBT Vulnerability, 2020, CVE-2020-14199) with Luke Dashjr
   Sharma PN, 2021, PROC INT CONF SOFTW, P1008, DOI 10.1109/ICSE43902.2021.00095
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Svennevik Notland Jakob, 2022, IEEE DataPort
   Tapscott A., 2017, HARVARD BUS REV, V1, P2
   Todd P., Bitcoin Core
   Treleaven P, 2017, COMPUTER, V50, P14, DOI 10.1109/MC.2017.3571047
   Wirdum A. V., 2020, Bitcoin Mag Dec
   Wirdum A. V., 2017, Bitcoin Mag Aug
   Wuille P., Bitcoin Core
   Zamyatin A., 2018, P FC 2018, P31
NR 81
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2023
VL 49
IS 9
BP 4477
EP 4495
DI 10.1109/TSE.2023.3304851
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA S4DL9
UT WOS:001070689400011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wu, HY
   Yu, SY
   Niu, XT
   Nie, CH
   Pei, Y
   He, Q
   Yang, Y
AF Wu, Huayao
   Yu, Senyao
   Niu, Xintao
   Nie, Changhai
   Pei, Yu
   He, Qiang
   Yang, Yun
TI Enhancing Fault Injection Testing of Service Systems via Fault-Tolerance
   Bottleneck
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Business; Fault tolerant systems; Redundancy; Benchmark testing;
   Behavioral sciences; Software; Task analysis; Fault injection testing;
   fault-tolerance bottleneck; redundant component; service system
ID FRAMEWORK
AB Modern large-scale service systems are usually deployed with redundant components to ensure high dependability in distributed and volatile environments. Fault Injection Testing (FIT) is a popular technique for testing such systems, while the application of FIT to validating the correctness of redundant components remains a challenging task, especially when the system's structural information is unavailable when testing starts. In this study, we refer to a minimum set of faults that, when injected, will cut off all execution paths in a service system as a fault-tolerance bottleneck, and we propose a novel Fault-tolerance Bottleneck driven Fault Injection (FBFI) approach to the exploration and validation of redundant components without prior knowledge of the system's business structure. The core idea of FBFI is to iteratively infer and inject bottlenecks of the business structure constructed so far. In this way, FBFI is able to discover and test redundant components by repeatedly triggering new system behaviors. The effectiveness and efficiency of FBFI is evaluated using two microservice benchmark systems with different deployment scales. The results reveal that FBFI is more practical and cost-effective than random and lineage-driven FIT approaches in testing service systems of high redundancy levels.
C1 [Wu, Huayao; Yu, Senyao; Niu, Xintao; Nie, Changhai] Nanjing Univ, Dept Comp Sci & Technol, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
   [Pei, Yu] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
   [He, Qiang] Huazhong Univ Sci & Technol, Natl Engn Res Ctr Big Data Technol & Syst, Sch Comp Sci & Technol, Cluster & Grid Comp Lab,Serv Comp Technol & Syst L, Wuhan 430074, Peoples R China.
   [He, Qiang; Yang, Yun] Swinburne Univ Technol, Dept Comp Technol, Melbourne, Vic 3122, Australia.
C3 Nanjing University; Hong Kong Polytechnic University; Huazhong
   University of Science & Technology; Swinburne University of Technology
RP Nie, CH (corresponding author), Nanjing Univ, Dept Comp Sci & Technol, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
EM hywu@nju.edu.cn; yusy@smail.nju.edu.cn; niuxintao@nju.edu.cn;
   changhainie@nju.edu.cn; max.yu.pei@polyu.edu.hk; hqiang@hust.edu.cn;
   yyang@swin.edu.au
RI Pei, Yu/JJD-3994-2023; Pei, Yu/GRI-9837-2022; Niu, Xintao/JVE-0156-2024
OI Pei, Yu/0000-0001-6065-6958; 
FU National Natural Science Foundation of China [62072226, 62102176];
   Natural Science Foundation of Jiangsu Province [BK20221439]; Douyin
   Group (HK) Limited; CCF-Huawei Populus Grove Fund
FX This work was supported in part by the National Natural Science
   Foundation of China under Grants 62072226 and 62102176, and in part by
   the Natural Science Foundation of Jiangsu Province under Grant
   BK20221439. Thework of Yu Pei was supported in part by Douyin Group (HK)
   Limited and in part by CCF-Huawei Populus Grove Fund.
CR Alvaro P., 2017, QUEUE, V15, P29
   Alvaro P, 2016, PROCEEDINGS OF THE SEVENTH ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC 2016), P17, DOI 10.1145/2987550.2987555
   Alvaro P, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P331, DOI 10.1145/2723372.2723711
   [Anonymous], 2013, P ACM S CLOUD COMP
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arlat J, 2003, IEEE T COMPUT, V52, P1115, DOI 10.1109/TC.2003.1228509
   ARLAT J, 1993, IEEE T COMPUT, V42, P913, DOI 10.1109/12.238482
   Avritzer A, 2018, LECT NOTES COMPUT SC, V11048, P159, DOI 10.1007/978-3-030-00761-4_11
   Barbosa R, 2005, LECT NOTES COMPUT SC, V3463, P246
   Basiri A, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P31, DOI 10.1109/ICSE-SEIP.2019.00012
   Basiri A, 2016, IEEE SOFTWARE, V33, P35, DOI 10.1109/MS.2016.60
   Bittman D., 2019, P 11 USENIX WORKSH H, P1
   Camilli M, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10088-0
   Chandra R, 2004, IEEE T PARALL DISTR, V15, P593, DOI 10.1109/TPDS.2004.14
   Chen HC, 2020, IEEE INT CONF AUTOM, P536, DOI 10.1145/3324884.3416548
   Cotroneo D, 2022, J NETW COMPUT APPL, V201, DOI 10.1016/j.jnca.2022.103334
   Cotroneo D, 2022, IEEE T DEPEND SECURE, V19, P1476, DOI 10.1109/TDSC.2020.3025289
   Cotroneo D, 2021, IEEE T RELIAB, V70, P346, DOI 10.1109/TR.2019.2954384
   Cotroneo D, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P200, DOI 10.1145/3338906.3338916
   Folkesson P, 2022, IEEE PAC RIM INT SYM, P130, DOI 10.1109/PRDC55274.2022.00027
   Ganesan A, 2017, ACM T STORAGE, V13, DOI 10.1145/3125497
   Gazzola L, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2452
   github, 2019, TRAINTICKET BENCHM M
   github, 2016, SOCKSHOP MICR DEM AP
   github, 2016, CHAOS MONK
   Grottke M, 2016, IEEE T RELIAB, V65, P70, DOI 10.1109/TR.2015.2452933
   Gunawi H. S., 2011, P USENIX S NETW SYST, P238
   Hasan M, 2018, COMPUT IND, V99, P156, DOI 10.1016/j.compind.2018.03.027
   Heorhiadi V, 2016, INT CON DISTR COMP S, P57, DOI 10.1109/ICDCS.2016.11
   Hernandez-Serrato Juan, 2020, 2020 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW), P151, DOI 10.1109/ISSREW51248.2020.00057
   Hsueh MC, 1997, COMPUTER, V30, P75, DOI 10.1109/2.585157
   Jha S, 2019, I C DEPEND SYS NETWO, P112, DOI 10.1109/DSN.2019.00025
   Jhawar R., 2017, COMPUTER INFORM SECU, P165, DOI DOI 10.1016/B978-0-12-803843-7.00009-0
   Joshi P., 2013, P 1 ACM SIGOPS C TIM, P1
   Joshi P, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P171
   Khanfir A, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3542946
   Kuang L, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-014-5115-7
   Li ZY, 2021, INT WORKSH QUAL SERV, DOI 10.1109/IWQOS52092.2021.9521340
   Liu JL, 2018, IEEE T CLOUD COMPUT, V6, P1191, DOI 10.1109/TCC.2016.2567392
   Liu P, 2020, PROC INT SYMP SOFTW, P48, DOI 10.1109/ISSRE5003.2020.00014
   Long ZY, 2020, 2020 IEEE 13TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2020), P151, DOI 10.1109/ICWS49710.2020.00027
   Lu J, 2019, PROCEEDINGS OF THE TWENTY-SEVENTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '19), P114, DOI 10.1145/3341301.3359645
   Majumdar Rupak., 2017, Proc. ACM Program. Lang, V2, p46:1, DOI DOI 10.1145/3158134
   McCaffrey C., 2015, QUEUE, V13, P150
   Meiklejohn CS, 2021, PROCEEDINGS OF THE 2021 ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC '21), P388, DOI 10.1145/3472883.3487005
   Mukwevho MA, 2021, IEEE T SERV COMPUT, V14, P589, DOI 10.1109/TSC.2018.2816644
   Natella R, 2020, IEEE T SOFTWARE ENG, V46, P280, DOI 10.1109/TSE.2018.2850755
   Natella R, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2841425
   Natella R, 2013, IEEE T SOFTWARE ENG, V39, P80, DOI 10.1109/TSE.2011.124
   Parry O, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3476105
   Pham C, 2017, IEEE T PARALL DISTR, V28, P503, DOI 10.1109/TPDS.2016.2575829
   Pusz O, 2021, LCTES '21: PROCEEDINGS OF THE 22ND ACM SIGPLAN/SIGBED INTERNATIONAL CONFERENCE ON LANGUAGES, COMPILERS, AND TOOLS FOR EMBEDDED SYSTEMS, P97, DOI 10.1145/3461648.3463851
   Pusz O, 2019, IEEE PAC RIM INT SYM, P138, DOI 10.1109/PRDC47002.2019.00044
   Ray BK, 2022, IEEE T CLOUD COMPUT, V10, P957, DOI 10.1109/TCC.2020.2968522
   Rosenkrantz DJ, 2009, IEEE T SERV COMPUT, V2, P183, DOI 10.1109/TSC.2009.18
   Sangchoolie B, 2022, IEEE T DEPEND SECURE, V19, P1988, DOI 10.1109/TDSC.2020.3043023
   Sangchoolie B, 2017, I C DEPEND SYS NETWO, P97, DOI 10.1109/DSN.2017.30
   Simonsson J, 2021, FUTURE GENER COMP SY, V122, P117, DOI 10.1016/j.future.2021.04.001
   Slimani S, 2021, CLUSTER COMPUT, V24, P361, DOI 10.1007/s10586-020-03108-z
   Wang YC, 2018, IEEE T SOFTWARE ENG, V44, P291, DOI 10.1109/TSE.2017.2681667
   Wang ZG, 2018, IEEE T PARALL DISTR, V29, P1678, DOI 10.1109/TPDS.2018.2808519
   Waseem M, 2021, J SYST SOFTWARE, V182, DOI 10.1016/j.jss.2021.111061
   Welsh T, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3388922
   Wen ZY, 2020, IEEE T PARALL DISTR, V31, P129, DOI 10.1109/TPDS.2019.2929389
   Winter S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P494, DOI 10.1109/ICSE.2015.67
   Yuan Ding, 2014, 11 USENIX S OPERATIN, P249
   Zhang L, 2022, IEEE T DEPEND SECURE, V19, P2695, DOI 10.1109/TDSC.2021.3069715
   Zhang L, 2021, IEEE T SOFTWARE ENG, V47, P2534, DOI 10.1109/TSE.2019.2954871
   Zhao NW, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P527, DOI 10.1145/3468264.3468543
   Zheng ZB, 2015, IEEE T COMPUT, V64, P219, DOI 10.1109/TC.2013.189
   Zhou X, 2021, IEEE T SOFTWARE ENG, V47, P243, DOI 10.1109/TSE.2018.2887384
   Zhou X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P683, DOI 10.1145/3338906.3338961
NR 72
TC 0
Z9 0
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2023
VL 49
IS 8
BP 4097
EP 4114
DI 10.1109/TSE.2023.3285357
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA P3WA9
UT WOS:001049968200009
DA 2024-07-18
ER

PT J
AU Malavolta, I
   Nirghin, K
   Scoccia, GL
   Romano, S
   Lombardi, S
   Scanniello, G
   Lago, P
AF Malavolta, Ivano
   Nirghin, Kishan
   Scoccia, Gian Luca
   Romano, Simone
   Lombardi, Salvatore
   Scanniello, Giuseppe
   Lago, Patricia
TI JavaScript Dead Code Identification, Elimination, and Empirical
   Assessment
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Terms-Dead code; JavaScript
ID ENERGY-CONSUMPTION; FLOW
AB Web apps are built by using a combination of HTML, CSS, and JavaScript. While building modern web apps, it is common practice to make use of third-party libraries and frameworks, as to improve developers' productivity and code quality. Alongside these benefits, the adoption of such libraries results in the introduction of JavaScript dead code, i.e., code implementing unused functionalities. The costs for downloading and parsing dead code can negatively contribute to the loading time and resource usage of web apps. The goal of our study is two-fold. First, we present Lacuna, an approach for automatically detecting and eliminating JavaScript dead code from web apps. The proposed approach supports both static and dynamic analyses, it is extensible and can be applied to any JavaScript code base, without imposing constraints on the coding style or on the use of specific JavaScript constructs. Second, by leveraging Lacuna we conduct an experiment to empirically evaluate the run-time overhead of JavaScript dead code in terms of energy consumption, performance, network usage, and resource usage in the context of mobile web apps. We applied Lacuna four times on 30 mobile web apps independently developed by third-party developers, each time eliminating dead code according to a different optimization level provided by Lacuna. Afterward, each different version of the web app is executed on an Android device, while collecting measures to assess the potential run-time overhead caused by dead code. Experimental results, among others, highlight that the removal of JavaScript dead code has a positive impact on the loading time of mobile web apps, while significantly reducing the number of bytes transferred over the network.
C1 [Malavolta, Ivano; Nirghin, Kishan; Lago, Patricia] Vrije Univ Amsterdam, NL-1081 HV Amsterdam, Netherlands.
   [Scoccia, Gian Luca] Univ LAquila, I-37100 LAquila, Italy.
   [Romano, Simone; Scanniello, Giuseppe] Univ Salerno, I-84084 Fisciano, Italy.
   [Lombardi, Salvatore] Univ Basilicata, Potenza I-85100, Italy.
   [Lago, Patricia] Vrije Univ Amsterdam, Amsterdam, Netherlands.
C3 Vrije Universiteit Amsterdam; University of L'Aquila; University of
   Salerno; University of Basilicata; Vrije Universiteit Amsterdam
RP Malavolta, I (corresponding author), Vrije Univ Amsterdam, NL-1081 HV Amsterdam, Netherlands.
EM i.malavolta@vu.nl; k.j.nirghin@student.vu.nl;
   gianluca.scoccia@univaq.it; sromano@unisa.it;
   salvatore.lombardi@studenti.unibas.it; gscanniello@unisa.it;
   p.lago@vu.nl
RI Lago, Patricia/ABH-2308-2020; Scoccia, Gian Luca/AFA-9951-2022; Romano,
   Simone/ABD-6504-2020; Malavolta, Ivano/E-9018-2017
OI Lago, Patricia/0000-0002-2234-0845; Scoccia, Gian
   Luca/0000-0003-3588-2659; Romano, Simone/0000-0003-4880-3622; Lombardi,
   Salvatore/0009-0004-0296-0803; Malavolta, Ivano/0000-0001-5773-8346;
   Scanniello, Giuseppe/0000-0003-0024-7508
FU European Union [871342]
FX This work was supported by the European Union's Horizon 2020 Research
   and Innovation Programme under the Marie Sklodowska-Curie Grant 871342
   "uDE-VOPS".
CR AlAbwaini N, 2018, INT CONF COMP SCI, P230, DOI 10.1109/CSIT.2018.8486334
   [Anonymous], 2022, MDN WEB DOCS GLOSSAR
   Antal G, 2018, IEEE INT WORK C SO, P177, DOI 10.1109/SCAM.2018.00028
   Banerjee A, 2018, IEEE T SOFTWARE ENG, V44, P470, DOI 10.1109/TSE.2017.2689012
   Baresi L, 2021, IEEE SOFTWARE, V38, P88, DOI 10.1109/MS.2020.2994306
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Boomsma H, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P511, DOI 10.1109/ICSM.2012.6405314
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Browserify, 2021, US
   caniuse, 2022, ES6 MODULES SUPPORT
   Cassieri Pietro, 2022, EASE 2022: The International Conference on Evaluation and Assessment in Software Engineering 2022, P120, DOI 10.1145/3530019.3530032
   Caulo M, 2021, LECT NOTES COMPUT SC, V13126, P3, DOI 10.1007/978-3-030-91452-3_1
   Chakraborty M., 2022, P EUR C OBJ OR PROGR, V28
   Chan-Jong-Chu Kwame, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P190, DOI 10.1145/3383219.3383239
   Chen YF, 1998, IEEE T SOFTWARE ENG, V24, P682, DOI 10.1109/32.713323
   Chugh R, 2009, ACM SIGPLAN NOTICES, V44, P50, DOI 10.1145/1543135.1542483
   Cook T. D., 1979, QUASIEXPERIMENTATION
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Couto M, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P217, DOI [10.1109/SANER48275.2020.9054858, 10.1109/saner48275.2020.9054858]
   developer android, 2022, ANDROID DEBUG BRIDGE
   developer mozilla, 2022, TREE SHAKING
   developers google, 2022, CLOSURE COMPILER GOO
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Ebert C, 2021, IEEE SOFTWARE, V38, P7, DOI 10.1109/MS.2021.3102254
   Eder S, 2012, PROC INT CONF SOFTW, P1102, DOI 10.1109/ICSE.2012.6227109
   Esprima, 2021, US
   Fard AM, 2013, IEEE INT WORK C SO, P116, DOI 10.1109/SCAM.2013.6648192
   Feldthaus A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P752, DOI 10.1109/ICSE.2013.6606621
   Feldthaus A, 2011, ACM SIGPLAN NOTICES, V46, P119, DOI 10.1145/2076021.2048078
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gao Q, 2020, I COMP CONF WAVELET, P300, DOI 10.1109/ICCWAMTIP51612.2020.9317462
   github, 2022, CS AU DK TAJS
   Goel U, 2020, Arxiv, DOI arXiv:2003.07396
   Greif S., 2017, STATE JAVASCRIPT 201
   gs statcounter, 2021, DESKTOP VS MOBILE VS
   gunar, 2022, GUNAR CALLGRAPH
   Hao S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P92, DOI 10.1109/ICSE.2013.6606555
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hindle Abram, 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P12
   Hoque MA, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2840723
   Hu Y, 2018, SCI COMPUT PROGRAM, V162, P132, DOI 10.1016/j.scico.2017.05.002
   Jensen SH, 2010, LECT NOTES COMPUT SC, V6337, P320, DOI 10.1007/978-3-642-15769-1_20
   Jensen SH, 2009, LECT NOTES COMPUT SC, V5673, P238, DOI 10.1007/978-3-642-03237-0_17
   Jensen Simon Holm, 2012, International Symposium on Software Testing and Analysis, ISSTA 2012, Minneapolis, MN, USA, July 15-20, 2012, P34, DOI DOI 10.1145/2338965.2336758
   Juristo N., 2013, BASICS SOFTWARE ENG
   KAM JB, 1977, ACTA INFORM, V7, P305, DOI 10.1007/BF00290339
   Karer HH, 2015, 2015 INTERNATIONAL CONFERENCE ON CONTROL, INSTRUMENTATION, COMMUNICATION AND COMPUTATIONAL TECHNOLOGIES (ICCICCT), P275, DOI 10.1109/ICCICCT.2015.7475289
   Kim KT, 2007, SERA 2007: 5TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT, AND APPLICATIONS, PROCEEDINGS, P584, DOI 10.1109/SERA.2007.102
   Kupoluyi J, 2022, PROCEEDINGS OF THE 2022 22ND ACM INTERNET MEASUREMENT CONFERENCE, IMC 2022, P335, DOI 10.1145/3517745.3561427
   Li D, 2013, P 2013 INT S SOFTW T, P78, DOI DOI 10.1145/2483760.2483780
   Li D, 2014, PROC IEEE INT CONF S, P121, DOI 10.1109/ICSME.2014.34
   Linge S., 2016, COMPUTING INTEGRALS, P55, DOI [DOI 10.1007/978--3-319-32428-9_3, 10.1007/978-3-319-32428-9, DOI 10.1007/978-3-319-32428-9]
   Ma Y, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P691, DOI 10.1145/2736277.2741114
   Malavolta Ivano, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P35, DOI 10.1109/MOBILESoft.2017.7
   Malavolta I, 2020, 2020 35TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2020), P61, DOI 10.1145/3417113.3422184
   Malavolta I, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P56, DOI 10.1109/MobileSoft.2015.15
   Martin R. C., 2008, Clean Code: A Handbook of Agile Software Craftsmanship
   mitmproxy, 2022, MITMPROXY INTERACTIV
   Nejati J, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16), P1305, DOI 10.1145/2872427.2883014
   Neto FGD, 2019, J SYST SOFTWARE, V156, P246, DOI 10.1016/j.jss.2019.07.002
   npmjs, 2022, GULP BUNDLE
   Obbink NG, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P391, DOI 10.1109/SANER.2018.8330226
   phantomjs, 2020, PHANTOMJS SCRIPTABLE
   Pochat VL, 2018, Arxiv, DOI arXiv:1806.01156
   Pramanik PKD, 2019, IEEE ACCESS, V7, P182113, DOI 10.1109/ACCESS.2019.2958684
   Richards G, 2010, ACM SIGPLAN NOTICES, V45, P1, DOI 10.1145/1809028.1806598
   Romano S., 2016, PROC IEEE INT C PROG, P1
   Romano S., 2016, P 31 ANN ACM S APPL, P1538, DOI DOI 10.1145/2851613.2851968
   Romano S, 2020, IEEE T SOFTWARE ENG, V46, P71, DOI 10.1109/TSE.2018.2842781
   Romano S, 2018, EUROMICRO CONF PROC, P167, DOI 10.1109/SEAA.2018.00035
   Romano S, 2015, PROC IEEE INT CONF S, P339, DOI 10.1109/ICSM.2015.7332484
   S2-group, 2022, S2 GROUP LACUNA EVAL
   S2-group, 2022, ONLINE APPENDIX
   S2-group, 2022, S2 GROUP LACUNA IMPL
   Santos EA, 2018, J SYST SOFTWARE, V146, P14, DOI 10.1016/j.jss.2018.07.077
   Scoccia G. L., 2020, PROC IEEEACM 14 INT, P1, DOI [10.1145/3382494.3422171, DOI 10.1145/3382494.3422171]
   Shull F, 2008, GUIDE ADV EMPIRICAL
   stateofjs, 2022, STATE JAVASCRIPT SUR
   Sunitha K. V. N., 2006, ADCOM 2006: Autonomic Computing Fourteenth International Conference on Advanced Computing and Communications, P601
   Thissen D, 2002, J EDUC BEHAV STAT, V27, P77, DOI 10.3102/10769986027001077
   Tip F, 2000, ACM SIGPLAN NOTICES, V35, P281, DOI 10.1145/354222.353190
   TodoMVC, 2022, US
   Tomczak M., 2014, NEED REPORT EFFECT S, DOI DOI 10.1186/S13054-016-1208-6
   Vázquez HC, 2019, INFORM SOFTWARE TECH, V107, P18, DOI 10.1016/j.infsof.2018.10.009
   w3c github, 2021, PAINT TIMING 1
   Wake W.C., 2003, Refactoring Workbook, V1st
   wala, 2022, WALA WALA
   Wang X, 2017, 2017 INTERNATIONAL CONFERENCE ON CYBER-ENABLED DISTRIBUTED COMPUTING AND KNOWLEDGE DISCOVERY (CYBERC), P155, DOI 10.1109/CyberC.2017.69
   webpack, 2022, US
   Xi HW, 1999, LECT NOTES COMPUT SC, V1551, P228
   Ye Renjun, 2022, Emerging Information Security and Applications: Second International Symposium, EISA 2021, Revised Selected Papers. Communications in Computer and Information Science (1403), P128, DOI 10.1007/978-3-030-93956-4_8
   Zizzamia L., 2022, PERFUME JS PAGE SPEE
NR 94
TC 3
Z9 3
U1 3
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2023
VL 49
IS 7
BP 3692
EP 3714
DI 10.1109/TSE.2023.3267848
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA M9RA6
UT WOS:001033501500003
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Yu, ZX
   Martinez, M
   Chen, ZM
   Bissyandé, TF
   Monperrus, M
AF Yu, Zhongxing
   Martinez, Matias
   Chen, Zimin
   Bissyande, Tegawende F. F.
   Monperrus, Martin
TI Learning the Relation Between Code Features and Code Transforms With
   Structured Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Code transform; big code; machine learning; program repair
ID PROGRAM; GENERATION; REPAIR; COMPLETION
AB To effectively guide the exploration of the code transform space for automated code evolution techniques, we present in this article the first approach for structurally predicting code transforms at the level of AST nodes using conditional random fields (CRFs). Our approach first learns offline a probabilistic model that captures how certain code transforms are applied to certain AST nodes, and then uses the learned model to predict transforms for arbitrary new, unseen code snippets. Our approach involves a novel representation of both programs and code transforms. Specifically, we introduce the formal framework for defining the so-called AST-level code transforms and we demonstrate how the CRF model can be accordingly designed, learned, and used for prediction. We instantiate our approach in the context of repair transform prediction for Java programs. Our instantiation contains a set of carefully designed code features, deals with the training data imbalance issue, and comprises transform constraints that are specific to code. We conduct a large-scale experimental evaluation based on a dataset of bug fixing commits from real-world Java projects. The results show that when the popular evaluation metric top-3 is used, our approach predicts the code transforms with an accuracy varying from 41% to 53% depending on the transforms. Our model outperforms two baselines based on history probability and neural machine translation (NMT), suggesting the importance of considering code structure in achieving good prediction accuracy. In addition, a proof-of-concept synthesizer is implemented to concretize some repair transforms to get the final patches. The evaluation of the synthesizer on the Defects4j benchmark confirms the usefulness of the predicted AST-level repair transforms in producing high-quality patches.
C1 [Yu, Zhongxing] Shandong Univ, Jinan, Peoples R China.
   [Martinez, Matias] Univ Politecn Cataluna, Barcelona, Spain.
   [Chen, Zimin; Monperrus, Martin] KTH Royal Inst Technol, S-11428 Stockholm, Sweden.
   [Bissyande, Tegawende F. F.] Univ Luxembourg, L-4365 Esch Sur Alzette, Luxembourg.
C3 Shandong University; Universitat Politecnica de Catalunya; Royal
   Institute of Technology; University of Luxembourg
RP Yu, ZX (corresponding author), Shandong Univ, Jinan, Peoples R China.
EM zhongxing.yu@sdu.edu.cn; matias.martinez@upc.edu; zimin@kth.se;
   tegawende.bissyande@uni.lu; monperrus@kth.se
RI Chen, Zimin/AAC-3540-2022; Monperrus, Martin/I-3640-2012; Yu,
   Zhongxing/KLZ-0880-2024
OI Chen, Zimin/0000-0002-6673-6438; Monperrus, Martin/0000-0003-3505-3383;
   Yu, Zhongxing/0000-0003-3718-8476; Bissyande, Tegawende
   F./0000-0001-7270-9869
FU National Natural Science Foundation of China [62102233]; Shandong
   Province Overseas Outstanding Youth Fund [2022HWYQ-043]; Qilu Young
   Scholar Program of Shandong University; Wallenberg Artificial
   Intelligence; Wallenberg Autonomous Systems and Software Program (WASP)
   - Knut and Alice Wallenberg Foundation
FX This work was supported in part by the National Natural Science
   Foundation of China under Grant 62102233, in part by Shandong Province
   Overseas Outstanding Youth Fund under Grant 2022HWYQ-043, in part by the
   Qilu Young Scholar Program of Shandong University, and in part by
   Wallenberg Artificial Intelligence, the Wallenberg Autonomous Systems
   and Software Program (WASP) funded by Knut and Alice Wallenberg
   Foundation. Some experiments were performed on resources provided by the
   Swedish National Infrastructure for Computing.
CR Allamanis M., 2018, INT C LEARN REPR ICL
   Allamanis M, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P91, DOI 10.1145/3385412.3385997
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Allamanis M, 2016, PR MACH LEARN RES, V48
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Alon U, 2018, ACM SIGPLAN NOTICES, V53, P404, DOI [10.1145/3192366.3192412, 10.1145/3296979.3192412]
   Andersen J, 2010, AUTOMAT SOFTW ENG, V17, P119, DOI 10.1007/s10515-010-0062-z
   [Anonymous], 2004, Proceedings of the International Joint Workshop on Natural Language Processing in Biomedicine and its Applications (NLPBA)
   Asaduzzaman M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P516, DOI [10.1145/2901739.2903500, 10.1109/MSR.2016.068]
   Bader J, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360585
   Bakir G. H., 2007, Predicting structured data
   Bichsel B, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P343, DOI 10.1145/2976749.2978422
   Brody S, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428283
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Campos EC, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2173
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P1385, DOI 10.1109/TSE.2020.3020502
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen K., 2013, EFFICIENT ESTIMATION, P2
   Chen Z., 2019, arXiv
   Choetkiertikul M, 2019, IEEE T SOFTWARE ENG, V45, P637, DOI 10.1109/TSE.2018.2792473
   Darst BF, 2018, BMC GENET, V19, DOI 10.1186/s12863-018-0633-8
   de la Torre G, 2018, IEEE WORK CONF MIN S, P492, DOI 10.1145/3196398.3196404
   DeFreez D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P423, DOI 10.1145/3236024.3236059
   Dyer R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P779, DOI 10.1145/2568225.2568295
   Dyer R, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2803171
   Eberhardt J, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P745, DOI 10.1145/3314221.3314640
   Elkan C, 2001, The Foundations of Cost-Sensitive Learning, P973
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Galenson J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P653, DOI 10.1145/2568225.2568250
   Gulwani S, 2017, FOUND TRENDS PROGRAM, V4, P1, DOI 10.1561/2500000010
   Gvero T, 2015, ACM SIGPLAN NOTICES, V50, P416, DOI [10.1145/2858965.2814295, 10.1145/2814270.2814295]
   He JX, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P531, DOI 10.1145/3319535.3363230
   He JX, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P1667, DOI 10.1145/3243734.3243866
   He XM, 2004, PROC CVPR IEEE, P695
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Henkel J, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P163, DOI 10.1145/3236024.3236085
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Huang XJ, 2018, APPL INTELL, V48, P594, DOI 10.1007/s10489-017-0992-2
   Jensen F. V., 1994, Uncertainty in Artificial Intelligence. Proceedings of the Tenth Conference (1994), P360
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Jiang N, 2021, PROC INT CONF SOFTW, P1161, DOI 10.1109/ICSE43902.2021.00107
   Joshi R, 2002, ACM SIGPLAN NOTICES, V37, P304, DOI 10.1145/543552.512566
   Jousse F., 2006, P WORKSH MIN LEARN G, P1
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Klein G, 2017, Arxiv, DOI arXiv:1701.02810
   Koller D., 2009, Probabilistic graphical models: principles and techniques
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   Lafferty John, 2001, INT C MACH LEARN ICM
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Li Y, 2020, PROC INT CONF SOFTW, P602, DOI 10.1145/3377811.3380345
   LIU DC, 1989, MATH PROGRAM, V45, P503, DOI 10.1007/BF01589116
   Liu K, 2020, PROC INT CONF SOFTW, P615, DOI 10.1145/3377811.3380338
   Long F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/3106237.3106253
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Lutellier Thibaud, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P101, DOI 10.1145/3395363.3397369
   Madeiral F, 2018, Arxiv, DOI arXiv:1807.11286
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Meng N, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P329
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Mesbah A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P925, DOI 10.1145/3338906.3340455
   Miltner A, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360569
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Murali V., 2018, PROC INT C LEARN REP, P1
   Murali V, 2018, Arxiv, DOI arXiv:1703.05698
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Oh H, 2015, ACM SIGPLAN NOTICES, V50, P572, DOI [10.1145/2858965.2814309, 10.1145/2814270.2814309]
   Paletov R, 2018, ACM SIGPLAN NOTICES, V53, P450, DOI [10.1145/3192366.3192403, 10.1145/3296979.3192403]
   Pawlak R, 2016, SOFTWARE PRACT EXPER, V46, P1155, DOI 10.1002/spe.2346
   Pearl J., 1982, P NAT C ART INT, P133, DOI DOI 10.1038/4580
   Perelman D, 2012, ACM SIGPLAN NOTICES, V47, P275, DOI 10.1145/2345156.2254098
   Pradel M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276517
   Proksch S, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P250, DOI 10.1109/SANER.2017.7884626
   Pu YW, 2016, COMPANION PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SYSTEMS, PROGRAMMING, LANGUAGES AND APPLICATIONS: SOFTWARE FOR HUMANITY (SPLASH COMPANION'16), P39, DOI 10.1145/2984043.2989222
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Raghothaman M, 2016, PROC INT CONF SOFTW, P357, DOI 10.1145/2884781.2884808
   Raychev V, 2016, ACM SIGPLAN NOTICES, V51, P761, DOI 10.1145/2914770.2837671
   Raychev V, 2015, ACM SIGPLAN NOTICES, V50, P111, DOI [10.1145/2775051.2677009, 10.1145/2676726.2677009]
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Rice A, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133928
   Rolim R, 2017, PROC INT CONF SOFTW, P404, DOI 10.1109/ICSE.2017.44
   Saha RK, 2017, IEEE INT CONF AUTOM, P648, DOI 10.1109/ASE.2017.8115675
   Sha F, 2003, HLT-NAACL 2003: HUMAN LANGUAGE TECHNOLOGY CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE MAIN CONFERENCE, P213
   Si XJ, 2018, ADV NEUR IN, V31
   Soto M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P512, DOI [10.1145/2901739.2903495, 10.1109/MSR.2016.067]
   Sutton C, 2012, FOUND TRENDS MACH LE, V4, P267, DOI 10.1561/2200000013
   Tax DMJ, 2004, MACH LEARN, V54, P45, DOI 10.1023/B:MACH.0000008084.60811.49
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Tsochantaridis I, 2005, J MACH LEARN RES, V6, P1453
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Wang K, 2018, PROCEEDINGS OF THE 39TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, PLDI 2018, P481, DOI 10.1145/3192366.3192384
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Watson C, 2020, PROC INT CONF SOFTW, P1398, DOI 10.1145/3377811.3380429
   Wei X., 2003, P 26 ANN INT ACM SIG, P235, DOI DOI 10.1145/860435.860479
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Wode Ni, 2021, UIST '21: The 34th Annual ACM Symposium on User Interface Software and Technology, P258, DOI 10.1145/3472749.3474748
   Xin Q, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P226, DOI 10.1145/3092703.3092718
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Yaghmazadeh N, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133887
   Yang JQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P831, DOI 10.1145/3106237.3106274
   Ye DH, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P90, DOI 10.1109/SANER.2016.10
   Yin PC, 2019, Arxiv, DOI arXiv:1810.13337
   Yu ZX, 2019, EMPIR SOFTW ENG, V24, P33, DOI 10.1007/s10664-018-9619-4
   Yu ZX, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P924, DOI 10.1109/ICSE.2015.102
   Yu ZX, 2013, INFORM SOFTWARE TECH, V55, P2076, DOI 10.1016/j.infsof.2013.07.004
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
   Zhongxing Yu, 2011, Proceedings of the 2011 IEEE 13th International Symposium on High-Assurance Systems Engineering (HASE 2011), P325, DOI 10.1109/HASE.2011.29
   Zhou J, 2021, Arxiv, DOI [arXiv:1812.08434, DOI 10.1016/J.AIOPEN.2021.01.001]
   Zhu QH, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P341, DOI 10.1145/3468264.3468544
NR 113
TC 2
Z9 2
U1 2
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2023
VL 49
IS 7
BP 3872
EP 3900
DI 10.1109/TSE.2023.3275380
PG 29
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA M9RA6
UT WOS:001033501500012
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Boufaied, C
   Menghi, C
   Bianculli, D
   Briand, LC
AF Boufaied, Chaima
   Menghi, Claudio
   Bianculli, Domenico
   Briand, Lionel C.
TI Trace Diagnostics for Signal-Based Temporal Properties
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE cyber-physical systems; diagnostics; run-time verification; signals;
   specification patterns; temporal properties; trace checking
AB Trace checking is a verification technique widely used in Cyber-physical system (CPS) development, to verify whether execution traces satisfy or violate properties expressing system requirements. Often these properties characterize complex signal behaviors and are defined using domain-specific languages, such as SB-TemPsy-DSL, a pattern-based specification language for signal-based temporal properties. Most of the trace-checking tools only yield a Boolean verdict. However, when a property is violated by a trace, engineers usually inspect the trace to understand the cause of the violation; such manual diagnostic is time-consuming and error-prone. Existing approaches that complement trace-checking tools with diagnostic capabilities either produce low-level explanations that are hardly comprehensible by engineers or do not support complex signal-based temporal properties. In this paper, we propose TD-SB-TemPsy, a trace-diagnostic approach for properties expressed using SB-TemPsy-DSL. Given a property and a trace that violates the property, TD-SB-TemPsy determines the root cause of the property violation. TD-SB-TemPsy relies on the concepts of violation cause, which characterizes one of the behaviors of the system that may lead to a property violation, and diagnoses, which are associated with violation causes and provide additional information to help engineers understand the violation cause. As part of TD-SB-TemPsy, we propose a language-agnostic methodology to define violation causes and diagnoses. In our context, its application resulted in a catalog of 34 violation causes, each associated with one diagnosis, tailored to properties expressed in SB-TemPsy-DSL. We assessed the applicability of TD-SB-TemPsy on two datasets, including one based on a complex industrial case study. The results show that TD-SB-TemPsy could finish within a timeout of 1 min for approximate to 83.66% of the trace-property combinations in the industrial dataset, yielding a diagnosis in approximate to 99.84% of these cases; moreover, it also yielded a diagnosis for all the trace-property combinations in the other dataset. These results suggest that our tool is applicable and efficient in most cases.
C1 [Boufaied, Chaima; Briand, Lionel C.] Univ Ottawa, Sch EECS, Ottawa, ON K1N 6N5, Canada.
   [Menghi, Claudio] Univ Bergamo, I-24129 Bergamo, Italy.
   [Menghi, Claudio] McMaster Univ, Hamilton, ON L8S 4L8, Canada.
   [Bianculli, Domenico; Briand, Lionel C.] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, L-4365 Esch Sur Alzette, Luxembourg.
C3 University of Ottawa; University of Bergamo; McMaster University;
   University of Luxembourg
RP Boufaied, C (corresponding author), Univ Ottawa, Sch EECS, Ottawa, ON K1N 6N5, Canada.
EM chaima.boufaied@uottawa.ca; claudio.menghi@unibg.it;
   domenico.bianculli@uni.lu; lionel.briand@uni.lu
RI MENGHI, CLAUDIO/AAC-2265-2022; Bianculli, Domenico/AAD-8981-2019
OI MENGHI, CLAUDIO/0000-0001-5303-8481; Bianculli,
   Domenico/0000-0002-4854-685X; Briand, Lionel/0000-0002-1393-1010
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   European Union [957254]; H2020 - Industrial Leadership [957254] Funding
   Source: H2020 - Industrial Leadership
FX This work was supported in part by the Natural Sciences and Engineering
   Research Council of Canada (NSERC), through its DG and CRC programs; by
   European Union's Horizon 2020 Research and Innovation Programme under
   Grant 957254 (COSMOS).
CR Annapureddy Y, 2011, LECT NOTES COMPUT SC, V6605, P254, DOI 10.1007/978-3-642-19835-9_21
   [Anonymous], 2001, Handbook of automated reasoning
   Balaban I, 2010, LECT NOTES COMPUT SC, V5930, P221, DOI 10.1007/978-3-642-11512-7_14
   Bartocci E, 2019, INT J SOFTW TOOLS TE, V21, P31, DOI 10.1007/s10009-017-0454-5
   Basin D, 2018, LECT NOTES COMPUT SC, V11138, P37, DOI 10.1007/978-3-030-01090-4_3
   Beer I, 2009, LECT NOTES COMPUT SC, V5643, P94, DOI 10.1007/978-3-642-02658-4_11
   Bernasconi Anna, 2017, Software Engineering and Formal Methods. 15th International Conference, SEFM 2017. Proceedings: Lecture Notes in Computer Society (LNCS 10469), P54, DOI 10.1007/978-3-319-66197-1_4
   Bochot T., 2010, Proceedings 2010 IEEE 12th International Symposium on High-Assurance Systems Engineering (HASE), P74, DOI 10.1109/HASE.2010.15
   Boufaied Chaima, 2023, Figshare, DOI 10.6084/m9.figshare.21954563.v1
   Boufaied Chaima, 2023, Figshare, DOI 10.6084/m9.figshare.21956924.v1
   Boufaied C, 2021, J SYST SOFTWARE, V174, DOI 10.1016/j.jss.2020.110881
   Boufaied C, 2020, IEEE INT CONF AUTOM, P1004, DOI 10.1145/3324884.3416631
   Chechik M, 2005, LECT NOTES COMPUT SC, V3442, P220, DOI 10.1007/978-3-540-31984-9_17
   Convent L., 2018, LNCS, V11254, P144, DOI [DOI 10.1007/978-3-030-03044-5_10, 10.1007/978-3-030-03044, DOI 10.1007/978-3-030-03044]
   Dawes JH, 2019, LECT NOTES COMPUT SC, V11757, P202, DOI 10.1007/978-3-030-32079-9_12
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dou W, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P279, DOI 10.1145/3239372.3239396
   Dou W, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P323, DOI 10.1109/MODELS.2017.9
   Ernst Gidon., 2021, 8 INT WORKSHOP APPL, P133
   Faymonville P, 2016, LECT NOTES COMPUT SC, V10012, P152, DOI 10.1007/978-3-319-46982-9_10
   Ferrère T, 2015, LECT NOTES COMPUT SC, V9364, P241, DOI 10.1007/978-3-319-24953-7_20
   Fowler M., 2010, Domain-specific languages
   Funke Florian, 2020, Tools and Algorithms for the Construction and Analysis of Systems. 26th International Conference, TACAS 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12078), P324, DOI 10.1007/978-3-030-45190-5_18
   Giannakopoulou D, 2020, LECT NOTES COMPUT SC, V12045, P19, DOI 10.1007/978-3-030-44429-7_2
   Giannakopoulou D, 2021, INFORM SOFTWARE TECH, V137, DOI 10.1016/j.infsof.2021.106590
   Gorostiaga F, 2018, LECT NOTES COMPUT SC, V11237, P282, DOI 10.1007/978-3-030-03769-7_16
   Grebing S., 2020, DEDUCTIVE SOFTWARE V, P261, DOI [10.1007/978--3-030-64354-6_11, DOI 10.1007/978--3-030-64354-6_11]
   Griggio A, 2018, PROCEEDINGS OF THE 2018 18TH CONFERENCE ON FORMAL METHODS IN COMPUTER AIDED DESIGN (FMCAD), P225
   Gurfinkel A, 2003, LECT NOTES COMPUT SC, V2619, P160
   Hantry F, 2011, ELECTRON PROC THEOR, P39, DOI 10.4204/EPTCS.68.5
   Jin X., 2014, P 17 INT C HYBR SYST, P253
   Krstic S, 2020, LECT NOTES COMPUT SC, V12399, P482, DOI 10.1007/978-3-030-60508-7_27
   Li JW, 2018, LECT NOTES COMPUT SC, V11237, P426, DOI 10.1007/978-3-030-03769-7_25
   Luo QZ, 2014, LECT NOTES COMPUT SC, V8734, P285, DOI 10.1007/978-3-319-11164-3_24
   Mebsout A, 2016, PROCEEDINGS OF THE 2016 16TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2016), P117, DOI 10.1109/FMCAD.2016.7886669
   Meng GL, 2021, PROC INT CONF SOFTW, P637, DOI 10.1109/ICSE43902.2021.00065
   Menghi C, 2021, PROC INT CONF SOFTW, P847, DOI 10.1109/ICSE43902.2021.00082
   Menghi C, 2021, IEEE T SOFTWARE ENG, V47, P2208, DOI 10.1109/TSE.2019.2945329
   Menghi C, 2020, PROC INT CONF SOFTW, P372, DOI 10.1145/3377811.3380370
   Menghi C, 2020, LECT NOTES COMPUT SC, V12076, P53, DOI 10.1007/978-3-030-45234-6_3
   Menghi C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P27, DOI 10.1145/3338906.3338920
   Mukherjee S, 2012, IEEE T COMPUT AID D, V31, P1776, DOI 10.1109/TCAD.2012.2203599
   Nickovic D, 2020, LECT NOTES COMPUT SC, V12302, P564, DOI 10.1007/978-3-030-59152-6_34
   Nickovic D, 2018, LECT NOTES COMPUT SC, V10806, P303, DOI 10.1007/978-3-319-89963-3_18
   OMG, 2012, 19507 OMG ISOIEC
   Ott T., 2011, P 8 INT ESA C GUID N, P1
   Peled D., 2001, Model Checking Software. 8th International SPIN Workshop. Proceedings (Lecture Notes in Computer Science Vol.2057), P1
   Peled Doron., 2001, Proc. 21st Conf. on Foundations of Software Technology and Theroretical Computer Science, P292, DOI DOI 10.1007/3-540-45294
   Pnueli A., 2002, CONCUR 2002 - Concurrency Theory. 13th International Conference Proceedings (Lecture Notes in Computer Science Vol.2421), P24
   Reger G., 2017, P INT WORKSH COMP US, P1, DOI [10.29007/2496, DOI 10.29007/2496]
   Schuppan V, 2012, SCI COMPUT PROGRAM, V77, P908, DOI 10.1016/j.scico.2010.11.004
   Szabados J., 1990, INTERPOLATION FUNCTI
   Timm N, 2020, SCI COMPUT PROGRAM, V200, DOI 10.1016/j.scico.2020.102532
   Ulus D, 2019, LECT NOTES COMPUT SC, V11757, P402, DOI 10.1007/978-3-030-32079-9_25
   Wikipedia contributors, 2021, BET ANGL WIK FREE EN
NR 55
TC 1
Z9 1
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2023
VL 49
IS 5
BP 3131
EP 3154
DI 10.1109/TSE.2023.3242588
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA G8MH8
UT WOS:000991628700006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Derakhshanfar, P
   Devroey, X
   Panichella, A
   Zaidman, A
   van Deursen, A
AF Derakhshanfar, Pouria
   Devroey, Xavier
   Panichella, Annibale
   Zaidman, Andy
   van Deursen, Arie
TI Generating Class-Level Integration Tests Using Call Site Information
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Codes; Search problems; Couplings; Software testing;
   Automobiles; Test pattern generators; CLING; class integration testing;
   coverage criteria; search-based software testing; test adequacy
ID ALGORITHMS; MUTATION; TOOL
AB Search-based approaches have been used in the literature to automate the process of creating unit test cases. However, related work has shown that generated tests with high code coverage could be ineffective, i.e., they may not detect all faults or kill all injected mutants. In this paper, we propose Cling, an integration-level test case generation approach that exploits how a pair of classes, the caller and the callee, interact with each other through method calls. In particular, Cling generates integration-level test cases that maximize the Coupled Branches Criterion (CBC). Coupled branches are pairs of branches containing a branch of the caller and a branch of the callee such that an integration test that exercises the former also exercises the latter. CBC is a novel integration-level coverage criterion, measuring the degree to which a test suite exercises the interactions between a caller and its callee classes. We implemented Cling and evaluated the approach on 140 pairs of classes from five different open-source Java projects. Our results show that (1) Cling generates test suites with high CBC coverage, thanks to the definition of the test suite generation as a many-objectives problem where each couple of branches is an independent objective; (2) such generated suites trigger different class interactions and can kill on average 7.7% (with a maximum of 50%) of mutants that are not detected by tests generated randomly or at the unit level; (3) Cling can detect integration faults coming from wrong assumptions about the usage of the callee class (25 for our subject systems) that remain undetected when using automatically generated random and unit-level test suites.
C1 [Derakhshanfar, Pouria; Panichella, Annibale; Zaidman, Andy; van Deursen, Arie] Univ Technol, SERG, NL-2628 CD Delft, Netherlands.
   [Devroey, Xavier] Univ Namur, NADI, Rue Bruxelles 61, B-5000 Namur, Belgium.
C3 Delft University of Technology; Eindhoven University of Technology;
   University of Namur
RP Derakhshanfar, P (corresponding author), Univ Technol, SERG, NL-2628 CD Delft, Netherlands.
EM p.derakhshanfar@tudelft.nl; xavier.devroey@unamur.be;
   a.panichella@tudelft.nl; a.e.zaidman@tudelft.nl;
   arie.vandeursen@tudelft.nl
RI Devroey, Xavier/I-3918-2019; van Deursen, Arie/G-3084-2011; Zaidman,
   Andy/O-6542-2014
OI Devroey, Xavier/0000-0002-0831-7606; Derakhshanfar,
   Pouria/0000-0003-3549-9019; van Deursen, Arie/0000-0003-4850-3312;
   Zaidman, Andy/0000-0003-2413-3935
FU EU Project STAMP ICT-16-10 [731529]; EU Horizon 2020
   H2020-ICT-2020-1-RIA"COSMOS" project [957254]; NWO Vici
   project"TestShift" [VI.C.182.032]; H2020 - Industrial Leadership
   [957254] Funding Source: H2020 - Industrial Leadership
FX This work was supported in part by EU Project STAMP ICT-16-10 under
   Grant 731529, in part by EU Horizon 2020 H2020-ICT-2020-1-RIA"COSMOS"
   project under Grant 957254, and in part by NWO Vici project"TestShift"
   under Grant VI.C.182.032.
CR Abdurazik A, 2009, COMPUT J, V52, P557, DOI 10.1093/comjnl/bxm054
   Alexander RT, 2010, SOFTW TEST VERIF REL, V20, P291, DOI 10.1002/stvr.417
   Alexander RT, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P15, DOI 10.1109/ISSRE.2000.885857
   Almasi MM, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P263, DOI 10.1109/ICSE-SEIP.2017.27
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 1970, ACM SIGPLAN NOTICES, DOI DOI 10.1145/390013.808479
   Arcuri A, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3293455
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Bansal P., 2009, P 2009 INT C METH MO, P1
   Beyene M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P270, DOI 10.1109/ICST.2012.107
   Bin Noor T, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P58, DOI 10.1109/ISSRE.2015.7381799
   Borner L, 2009, 2009 FIRST INTERNATIONAL CONFERENCE ON ADVANCES IN SYSTEM TESTING AND VALIDATION LIFECYCLE, P80, DOI 10.1109/VALID.2009.30
   Brandt C, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10094-2
   Briand LC, 2003, IEEE T SOFTWARE ENG, V29, P594, DOI 10.1109/TSE.2003.1214324
   Cabral RD, 2010, LECT NOTES COMPUT SC, V6435, P16, DOI 10.1007/978-3-642-16573-3_3
   Campos J, 2017, LECT NOTES COMPUT SC, V10452, P33, DOI 10.1007/978-3-319-66299-2_3
   Campos J, 2018, INFORM SOFTWARE TECH, V104, P207, DOI 10.1016/j.infsof.2018.08.010
   Ceccato M, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2768829
   Coles H., 2016, P 25 INT S SOFTWARE, P449
   Coppit David., PROC 20 IEEEACM INT, DOI [10.1145/1101908.1101969, DOI 10.1145/1101908.1101969]
   Danglot B, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.110398
   Delamaro ME, 2001, IEEE T SOFTWARE ENG, V27, P228, DOI 10.1109/32.910859
   Denaro G, 2008, LECT NOTES COMPUT SC, V4961, P246, DOI 10.1007/978-3-540-78743-3_18
   Denaro G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P947, DOI 10.1109/ICSE.2015.104
   Derakhshanfar Pouria, 2021, Zenodo, DOI 10.5281/ZENODO.4300633
   Devroey X., 2020, P IEEEACM 42 INT C S, P545, DOI DOI 10.1145/3387940.3392265
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P611, DOI 10.1007/s10664-013-9288-2
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   García S, 2009, J HEURISTICS, V15, P617, DOI 10.1007/s10732-008-9080-4
   Gay G, 2015, IEEE T SOFTWARE ENG, V41, P803, DOI 10.1109/TSE.2015.2421011
   Godefroid P, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P206, DOI 10.1145/1375581.1375607
   Guizzo G, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1343, DOI 10.1145/2739480.2754725
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Harrold M. J., 1994, SIGSOFT Software Engineering Notes, V19, P154, DOI 10.1145/195274.195402
   Hashim NL, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P11
   Holler Christian, 2012, P 21 USENIX C SEC S, P445
   Jan S, 2019, EMPIR SOFTW ENG, V24, P3696, DOI 10.1007/s10664-019-09707-8
   Japkowicz N., 2011, EVALUATING LEARNING, DOI [10.1017/CBO9780511921803, DOI 10.1017/CBO9780511921803]
   Jiang SJ, 2021, IEEE T SOFTWARE ENG, V47, P1350, DOI 10.1109/TSE.2019.2921965
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Khan S. A., 2014, P 7 INT C GEN EV COM, P115
   Khan SA, 2013, PROCEEDINGS OF THE 2013 10TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P369, DOI 10.1109/ITNG.2013.59
   Kifetew F, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST 2019), P15, DOI 10.1109/SBST.2019.00014
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Ma L, 2015, IEEE INT CONF AUTOM, P212, DOI 10.1109/ASE.2015.49
   Mariani T, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1069, DOI 10.1145/2908812.2908816
   Martinez M., 2016, P 25 INT S SOFTWARE, P441, DOI 10.1145/2931037
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Offutt AJ, 2000, IEEE INT C ENG COMP, P172, DOI 10.1109/ICECCS.2000.873942
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Padhye R, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P329, DOI 10.1145/3293882.3330576
   Panichella A, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106411
   Panichella A, 2018, INFORM SOFTWARE TECH, V104, P236, DOI 10.1016/j.infsof.2018.08.009
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Panichella A, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P32, DOI 10.1109/SBST.2017.7
   Panichella A, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P15, DOI 10.1109/SST.2015.10
   Panichella S, 2016, PROC INT CONF SOFTW, P547, DOI 10.1145/2884781.2884847
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Molina UR, 2018, PROCEEDINGS 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P22, DOI 10.1145/3194718.3194728
   Rueda U, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P19, DOI [10.1145/2897010.2897018, 10.1109/SBST.2016.012]
   Schwartz A, 2018, J SYST SOFTWARE, V144, P106, DOI 10.1016/j.jss.2018.06.024
   Scott A., 1997, YOUR STEP BY STEP HD
   Shamshiri S, 2018, SOFTW TEST VERIF REL, V28, DOI 10.1002/stvr.1660
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Soltani M, 2017, PROC INT CONF SOFTW, P209, DOI 10.1109/ICSE.2017.27
   Souter AL, 2003, IEEE T SOFTWARE ENG, V29, P1005, DOI 10.1109/TSE.2003.1245302
   Steindl M., 2012, Proceedings of the 2012 10th Workshop on Intelligent Solutions in Embedded Systems (WISES 2012), P63
   Su T, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3020266
   Vergilio Silvia Regina, 2012, International Journal on Software Tools for Technology Transfer, V14, P461, DOI 10.1007/s10009-012-0226-1
   Vivanti M, 2013, PROC INT SYMP SOFTW, P370, DOI 10.1109/ISSRE.2013.6698890
   Wang Y, 2019, PROC INT CONF SOFTW, P572, DOI 10.1109/ICSE.2019.00068
   Wei Y, 2012, LECT NOTES COMPUT SC, V7007, P194
   Zhengshan Wang, 2010, IEEE 34th Annual Computer Software and Applications Conference Workshops (COMPSACW 2010), P329, DOI 10.1109/COMPSACW.2010.64
   Zhenyi Jin, 1998, Software Testing, Verification and Reliability, V8, P133, DOI 10.1002/(SICI)1099-1689(1998090)8:3<133::AID-STVR162>3.0.CO;2-M
   Zhu QQ, 2018, SOFTW TEST VERIF REL, V28, DOI 10.1002/stvr.1675
NR 79
TC 0
Z9 0
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2069
EP 2087
DI 10.1109/TSE.2022.3209625
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600037
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Zhang, XW
   Zou, WQ
   Chen, L
   Li, YH
   Zhou, YM
AF Zhang, Xiaowei
   Zou, Weiqin
   Chen, Lin
   Li, Yanhui
   Zhou, Yuming
TI Towards the Analysis and Completion of Syntactic Structure Ellipsis for
   Inline Comments
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Inline comments; syntactic structure; ellipsis analysis; ellipsis
   completion
ID SOURCE CODE; PROGRAM
AB The ellipsis of the syntactic structure is a common phenomenon in ordinary textual documents. Existing studies have found that despite syntactic ellipsis could help avoid repetition of normative documents, it could also, for example, lead to ambiguity and hamper the understandability of document contents. As a fundamental component of software, code comments are generally written by developers in a non-structured way just like normative documents. This naturally inspires us to explore whether syntactic ellipsis is also a common phenomenon in code comments and what potential negative effects would such ellipsis have on software tasks such as code/comments comprehension activities. Such explorations, in our opinion, are expected to facilitate the research on code comments and comments-related software tasks. To this end, we conduct the first large-scale study to explore the syntactic structure ellipsis problem of code comments, with a focus on Java inline comments. Specifically, we construct a data set of 1,000 Java projects with 1,307,457 inline comments and associated codes. Based on this data set, we first study the prevalence of syntactic structure ellipsis in inline comments. We find that syntactic structure ellipsis is quite common in inline comments where 83.6% comments have structure ellipsis (such as subject/predicate omissions). Then, we investigate the effects of syntactic structure ellipsis on code/comment understanding activities. As a result, we find that there indeed exists a negative relationship between them, with a medium effect size. Based on these findings, we further propose neural network based approaches to complete the ellipsis parts for the inline comments. With our approach, we could achieve: 1) a medium improvement in assisting code/comment understanding activities, and 2) a substantial improvement of 11.3% in comment-assisted code abbreviation extension task.
C1 [Zhang, Xiaowei; Chen, Lin; Li, Yanhui; Zhou, Yuming] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
   [Zou, Weiqin] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 210016, Peoples R China.
C3 Nanjing University; Nanjing University of Aeronautics & Astronautics
RP Chen, L (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.; Zou, WQ (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 210016, Peoples R China.
EM xiaoweizhang@smail.nju.edu.cn; weiqin@nuaa.edu.cn; lchen@nju.edu.cn;
   yanhuili@nju.edu.cn; zhouyuming@nju.edu.cn
OI Zou, Weiqin/0000-0002-0913-1539; zhang, xiaowei/0000-0003-1481-5158; Li,
   Yanhui/0000-0003-2282-7175
FU National Natural Science Foundation of China [61872177, 62172202,
   62172205, 62002161]; Cooperation Fund of Huawei-Nanjing University Next
   Generation Programming Innovation Lab [YBN2019105178SW35]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grants 61872177, 62172202, 62172205, and
   62002161, and in part by the Cooperation Fund of Huawei-Nanjing
   University Next Generation Programming Innovation Lab under Grant
   YBN2019105178SW35.
CR Allamams M, 2019, PROCEEDINGS OF THE 2019 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!' 19), P143, DOI 10.1145/3359591.3359735
   Antunes Helder., 2019, P INT C CROSS LANG E, P149
   Arafat O., 2009, Proceedings of Proceedings of the 24th ACM SIGPLAN conference companion on Object oriented programming systems languages and applications, P857, DOI [10.1145/1639950.1640047, DOI 10.1145/1639950.1640047]
   Bai Y, 2019, PROCEEDINGS OF THE 2019 3RD INTERNATIONAL CONFERENCE ON MANAGEMENT ENGINEERING, SOFTWARE ENGINEERING AND SERVICE SCIENCES (ICMSS 2019), P45, DOI 10.1145/3312662.3312710
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Binkley D, 2015, J SOFTW-EVOL PROC, V27, P255, DOI 10.1002/smr.1710
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Bouzid SM, 2021, IEEE-ACM T AUDIO SPE, V29, P3335, DOI 10.1109/TASLP.2021.3120649
   BOWERS J, 1993, LINGUIST INQ, V24, P591
   Cass Stephen., 2018, IEEE Spectrum
   Chen QY, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3434280
   Chomsky Noam, 2002, SYNTACTIC STRUCTURES
   Corazza A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P233, DOI 10.1109/ICSM.2012.6405277
   Farias MAD, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106270
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Freitas JL, 2012, IEEE ANNU SOFTW ENG, P11, DOI 10.1109/SEW.2012.8
   Gunes G., 2022, DERIVATIONAL TIMING, V79
   Guo ZQ, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447247
   Hansen VPB, 2020, AAAI CONF ARTIF INTE, V34, P7887
   Haouari D, 2011, INT SYMP EMP SOFTWAR, P137, DOI 10.1109/ESEM.2011.22
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Hu X, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2269
   Huang Y, 2018, PROC IEEE ACM INT C, P260, DOI 10.1145/3183440.3194960
   Jiang YJ, 2022, IEEE T SOFTWARE ENG, V48, P519, DOI 10.1109/TSE.2020.2995736
   Jiang YJ, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P578, DOI 10.1145/3468264.3468616
   Jiang YJ, 2020, IEEE T SOFTWARE ENG, V46, P732, DOI 10.1109/TSE.2018.2868762
   Jiang YJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P131, DOI 10.1145/3338906.3338929
   Kenyon-Dean K., 2016, P 2016 C EMPIRICAL M, P1734
   Khamis N, 2010, LECT NOTES COMPUT SC, V6177, P68, DOI 10.1007/978-3-642-13881-2_7
   Khoshgoftaar TM, 2014, INFORM SCIENCES, V259, P555, DOI 10.1016/j.ins.2010.11.028
   Khullar P., 2019, P INT C REC ADV NAT, P534
   Khullar P, 2020, PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION (LREC 2020), P34
   Kim MC, 2008, J LOSS PREVENT PROC, V21, P255, DOI 10.1016/j.jlp.2007.11.008
   Kim N, 2019, LANG COGN NEUROSCI, V34, P190, DOI 10.1080/23273798.2018.1513542
   Lapshinova-Koltunski E, 2018, PROCEEDINGS OF THE ELEVENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION (LREC 2018), P423
   Lawrie D, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P213, DOI 10.1109/SCAM.2007.17
   Leitner P., 2017, P 8 ACMSPEC INT C PE, P373
   Likert R., 1932, TECHNIQUE MEASUREMEN, DOI 1933-01885-001
   Liu F, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10140-7
   Liu H, 2016, PROC INT CONF SOFTW, P1063, DOI 10.1145/2884781.2884841
   Liu JK, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P1, DOI 10.1145/3377815.3381377
   Liu Yangchao., 2015, Proceedings of the 19th International Conference on Evaluation and Assessment in Software Engineering, page, P27
   Liu ZY, 2018, P INT COMP SOFTW APP, P154, DOI 10.1109/COMPSAC.2018.00028
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Madani N, 2010, EUR CON SFTWR MTNCE, P68, DOI 10.1109/CSMR.2010.31
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   McBurney PW, 2016, EMPIR SOFTW ENG, V21, P17, DOI 10.1007/s10664-014-9344-6
   Meneses Santos Rafael, 2020, 17th International Conference on Information Technology-New Generations (ITNG 2020). Advances in Intelligent Systems and Computing (AISC 1134), P679, DOI 10.1007/978-3-030-43020-7_93
   Merriam S. B., 2001, Revised and expanded from case study research in education
   Nie PY, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3338906.3338965
   Padioleau Y, 2009, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.2009.5070533
   Pascarella L, 2017, IEEE WORK CONF MIN S, P227, DOI 10.1109/MSR.2017.63
   Petrov Slav, 2012, 1 WORKSH SYNT AN NON
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Rabbi F., 2020, PROC INT C SOFTW ENG, P392
   Rabbi F, 2020, INT C PROGRAM COMPRE, P371, DOI 10.1145/3387904.3389286
   Rani P, 2021, J SYST SOFTWARE, V181, DOI 10.1016/j.jss.2021.111047
   Ratol IK, 2017, IEEE INT CONF AUTOM, P112, DOI 10.1109/ASE.2017.8115624
   Ren XC, 2018, Arxiv, DOI arXiv:1801.06613
   Ren XC, 2018, PROCEEDINGS OF THE ELEVENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION (LREC 2018), P1749
   Rubino-Gonzalez Cindy., 2010, Proc. 9th PASTE, P73
   Saleem M. A., 2021, J TIKRIT U HUMANITIE, V28, P60
   Shin Hwei Tan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P260, DOI 10.1109/ICST.2012.106
   Shinyama Y, 2018, ASIA PAC SOFWR ENG, P325, DOI 10.1109/APSEC.2018.00047
   Spache G, 1953, ELEM SCHOOL J, V53, P410, DOI 10.1086/458513
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   Stulova N, 2020, IEEE INT WORK C SO, P65, DOI 10.1109/SCAM51674.2020.00012
   Sun XB, 2016, INT J SOFTW ENG KNOW, V26, P981, DOI 10.1142/S0218194016500339
   Tan L, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P11, DOI 10.1145/1985793.1985796
   Nguyen TD, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P756, DOI 10.1145/2889160.2892661
   Vaswani A., 2017, Proceedings of the 31st International Conference on Neural Information Processing Systems, P5998
   Wen FC, 2019, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2019.00019
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Ying A. T., 2005, ACM SIGSOFT software engineering notes, V30, P1
   Zhai J, 2020, PROC INT CONF SOFTW, P1359, DOI 10.1145/3377811.3380427
   Zhang J, 2020, PROC INT CONF SOFTW, P1385, DOI 10.1145/3377811.3380383
   Zhang WN, 2019, AAAI CONF ARTIF INTE, P7468
   Zhao G., 2015, THEORY PRACT LANG ST, V5
   Zou WQ, 2020, IEEE T SOFTWARE ENG, V46, P836, DOI 10.1109/TSE.2018.2870414
NR 84
TC 3
Z9 3
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2285
EP 2302
DI 10.1109/TSE.2022.3216279
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600049
DA 2024-07-18
ER

PT J
AU Horcas, JM
   Strüber, D
   Burdusel, A
   Martinez, J
   Zschaler, S
AF Horcas, Jose-Miguel
   Struber, Daniel
   Burdusel, Alexandru
   Martinez, Jabier
   Zschaler, Steffen
TI <i>We're Not Gonna Break It!</i> Consistency-Preserving Operators for
   Efficient Product Line Configuration
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Maintenance engineering; Standards; Genetics; Encoding; Search problems;
   Costs; Computational modeling; Software product lines; feature model
   configuration; search-based software engineering
ID SOFTWARE; ALGORITHMS; FRAMEWORK
AB When configuring a software product line, finding a good trade-off between multiple orthogonal quality concerns is a challenging multi-objective optimisation problem. State-of-the-art solutions based on search-based techniques create invalid configurations in intermediate steps, requiring additional repair actions that reduce the efficiency of the search. In this work, we introduce consistency-preserving configuration operators (CPCOs)-genetic operators that maintain valid configurations throughout the entire search. CPCOs bundle coherent sets of changes: the activation or deactivation of a particular feature together with other (de)activations that are needed to preserve validity. In our evaluation, our instantiation of the IBEA algorithm with CPCOs outperforms two state-of-the-art tools for optimal product line configuration in terms of both speed and solution quality. The improvements are especially pronounced in large product lines with thousands of features.
C1 [Horcas, Jose-Miguel] Univ Malaga, CAOSD Grp, ITIS, Malaga, Spain.
   [Struber, Daniel] Chalmers Univ Gothenburg, S-40530 Gothenburg, Sweden.
   [Struber, Daniel] Radboud Univ Nijmegen, NL-6525 Nijmegen, Netherlands.
   [Burdusel, Alexandru; Zschaler, Steffen] Kings Coll London, Dept Informat, London WC2R 2LS, England.
   [Martinez, Jabier] Basque Res & Technol Alliance BRTA, Tecnalia, E-48160 Derio, Spain.
C3 Universidad de Malaga; Chalmers University of Technology; Radboud
   University Nijmegen; University of London; King's College London
RP Strüber, D (corresponding author), Chalmers Univ Gothenburg, S-40530 Gothenburg, Sweden.
EM horcas@lcc.uma.es; d.strueber@cs.ru.nl; alexandru.burdusel@kcl.ac.uk;
   jabier.martinez@tecnalia.com; steffen.zschaler@kcl.ac.uk
RI ; Horcas Aguilera, Jose Miguel/R-3564-2018
OI Martinez, Jabier/0000-0001-8742-9640; Horcas Aguilera, Jose
   Miguel/0000-0002-7771-0575; Zschaler, Steffen/0000-0001-9062-6637
FU Spanish SRUK/CERU International Mobility Programme (On the Move);
   Spanish Government [RTI2018-099213-B-I00, RTI2018-101204-B-C22]; Junta
   de Andalucia [P18-FR-1081, UMA18-FEDERIA-157]; European Union
   [H2020-101017109]; EPSRC [1805606] Funding Source: UKRI
FX The work of Jose-Miguel Horcas was supported in part by Spanish
   SRUK/CERU International Mobility Programme (On the Move) under Grant
   2018/2019, in part by Spanish Government under Grant
   RTI2018-099213-B-I00 (MEDEA)and Grant RTI2018-101204-B-C22 (OPHELIA), in
   part by Junta de Andalucia under Grant P18-FR-1081 (Rhea) through FEDER
   funds and Grant UMA18-FEDERIA-157 (LEIA), and in part by the European
   Union under Grant H2020-101017109 (DAEMON)
CR Abbasi E. K., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P65, DOI 10.1109/SPLC.2011.41
   Apel S., 2013, Feature-Oriented Software Development: Concepts and Implementation
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Batory D., 2021, PRODUCT OPTIMIZATION, P63
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Benavides D., 2007, PROCEEDING 1 INT WOR, P129
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger Thorsten, 2013, 7 INT WORKSH VAR MOD, DOI DOI 10.1145/2430502.2430513
   Burdusel A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P106, DOI 10.1109/MODELS.2019.00-10
   Burdusel A, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS: COMPANION PROCEEDINGS (MODELS-COMPANION '18), P12, DOI 10.1145/3270112.3270130
   Burdusel A, 2018, LECT NOTES COMPUT SC, V10748, P60, DOI 10.1007/978-3-319-74730-9_6
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P7, DOI 10.1002/spip.213
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P143, DOI 10.1002/spip.225
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   Fleck M, 2016, LECT NOTES COMPUT SC, V9765, P79, DOI 10.1007/978-3-319-42064-6_6
   García-Galán J, 2016, FUTURE GENER COMP SY, V55, P200, DOI 10.1016/j.future.2015.03.006
   Guerreiro AP, 2020, Arxiv, DOI arXiv:2005.00515
   Guo JM, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1027, DOI 10.1145/3180155.3180163
   Hegedüs A, 2015, AUTOMAT SOFTW ENG, V22, P399, DOI 10.1007/s10515-014-0163-1
   Henard C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P517, DOI 10.1109/ICSE.2015.69
   Horcas J.M., 2018, THESIS U MALAGA
   Kang Kyo C, 1990, Technical Report
   Kehrer T, 2016, LECT NOTES COMPUT SC, V9765, P173, DOI 10.1007/978-3-319-42064-6_12
   Knüppel A, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P291, DOI 10.1145/3106237.3106252
   Kosiol J, 2022, SCI COMPUT PROGRAM, V214, DOI 10.1016/j.scico.2021.102729
   Krieter S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P898, DOI 10.1145/3180155.3180159
   Lambers L, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P716, DOI 10.1145/3180155.3180258
   Lienhardt M, 2020, PROC INT CONF SOFTW, P1509, DOI 10.1145/3377811.3380372
   Martinez J, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P50, DOI 10.1109/VISSOFT.2014.18
   Mazo R., 2014, Recommendation Systems in Software Engineering, P511, DOI 10.1007/978-3-642-45135-5
   Munoz DJ, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P289, DOI 10.1145/3336294.3336297
   Nadi S, 2015, IEEE T SOFTWARE ENG, V41, P820, DOI 10.1109/TSE.2015.2415793
   Nair V, 2018, AUTOMAT SOFTW ENG, V25, P247, DOI 10.1007/s10515-017-0225-2
   Ochoa L, 2018, J SYST SOFTWARE, V144, P511, DOI 10.1016/j.jss.2018.07.054
   Oh J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P61, DOI 10.1145/3106237.3106273
   Olaechea R., 2012, Proceedings of the Fourth International Workshop on Nonfunctional System Properties in Domain Specific Modeling Languages, p2:1, DOI DOI 10.1145/2420942.2420944
   Pascual GG, 2015, J SYST SOFTWARE, V103, P392, DOI 10.1016/j.jss.2014.12.041
   Peng KW, 2023, Arxiv, DOI arXiv:2106.02716
   Pereira J. A., 2014, THESIS FEDERAL U MIN
   Pereira JA, 2021, J SYST SOFTWARE, V182, DOI 10.1016/j.jss.2021.111044
   Pereira JA, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P2058, DOI 10.1145/3167132.3167353
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   Schröter R, 2016, PROC INT CONF SOFTW, P667, DOI 10.1145/2884781.2884823
   Siegmund N, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P268, DOI 10.1145/3106237.3106251
   Siegmund N, 2013, INFORM SOFTWARE TECH, V55, P491, DOI 10.1016/j.infsof.2012.07.020
   Siegmund N, 2012, SOFTWARE QUAL J, V20, P487, DOI 10.1007/s11219-011-9152-9
   Strüber D, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P177, DOI 10.1145/3336294.3336302
   Strüber D, 2018, FORM ASP COMPUT, V30, P133, DOI 10.1007/s00165-017-0441-3
   Strüber D, 2017, LECT NOTES COMPUT SC, V10373, P196, DOI 10.1007/978-3-319-61470-0_12
   Sülflow A, 2007, LECT NOTES COMPUT SC, V4403, P715
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Xiang Y, 2020, EMPIR SOFTW ENG, V25, P591, DOI 10.1007/s10664-019-09761-2
   Xiang Y, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3176644
   Xiong YF, 2012, PROC INT CONF SOFTW, P58, DOI 10.1109/ICSE.2012.6227206
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
   Zschaler Steffen, 2022, Zenodo, DOI 10.5281/ZENODO.6457582
NR 61
TC 6
Z9 6
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2023
VL 49
IS 3
BP 1102
EP 1117
DI 10.1109/TSE.2022.3171404
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA A1QF2
UT WOS:000952938700009
OA Green Published
DA 2024-07-18
ER

PT J
AU Tizio, GD
   Armellini, M
   Massacci, F
AF Tizio, Giorgio Di
   Armellini, Michele
   Massacci, Fabio
TI Software Updates Strategies: A Quantitative Evaluation Against Advanced
   Persistent Threats
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Delays; Companies; Testing; Measurement; Faces; Terminology;
   Advanced persistent threats; software vulnerabilities; software updates
ID INTERVAL ESTIMATION; RISK; BEHAVIOR
AB Software updates reduce the opportunity for exploitation. However, since updates can also introduce breaking changes, enterprises face the problem of balancing the need to secure software with updates with the need to support operations. We propose a methodology to quantitatively investigate the effectiveness of software updates strategies against attacks of Advanced Persistent Threats (APTs). We consider strategies where the vendor updates are the only limiting factors to cases in which enterprises delay updates from 1 to 7 months based on SANS data. Our manually curated dataset of APT attacks covers 86 APTs and 350 campaigns from 2008 to 2020. It includes information about attack vectors, exploited vulnerabilities (e.g., 0-days versus public vulnerabilities), and affected software and versions. Contrary to common belief, most APT campaigns employed publicly known vulnerabilities. If an enterprise could theoretically update as soon as an update is released, it would face lower odds of being compromised than those waiting one (4.9x) or three (9.1x) months. However, if attacked, it could still be compromised from 14% to 33% of the times. As in practice enterprises must do regression testing before applying an update, our major finding is that one could perform 12% of all possible updates restricting oneself only to versions fixing publicly known vulnerabilities without significant changes to the odds of being compromised compared to a company that updates for all versions.
C1 [Tizio, Giorgio Di; Armellini, Michele; Massacci, Fabio] Univ Trento, I-38122 Trento, Italy.
   [Massacci, Fabio] Vrije Univ Amsterdam, NL-1081 HV Amsterdam, Netherlands.
C3 University of Trento; Vrije Universiteit Amsterdam
RP Tizio, GD (corresponding author), Univ Trento, I-38122 Trento, Italy.
EM giorgio.ditizio@unitn.it; michele.armellini@studenti.unitn.it;
   fabio.massacci@ieee.org
RI Di Tizio, Giorgio/AAY-3737-2021
OI Di Tizio, Giorgio/0000-0002-8713-8197
FU European Union [830929, 952647]
FX This work was supported by European Union through the H2020 Programme
   under Grants 830929 (CyberSec4Europe) and 952647 (AssureMOSS).
CR Agresti A, 1998, AM STAT, V52, P119, DOI 10.2307/2685469
   Allodi L, 2022, RISK ANAL, V42, P1623, DOI 10.1111/risa.13732
   Allodi L, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1483, DOI 10.1145/3133956.3133960
   Allodi L, 2017, RISK ANAL, V37, P1606, DOI 10.1111/risa.12864
   Allodi L, 2014, ACM T INFORM SYST SE, V17, DOI 10.1145/2630069
   Almukaynizi Mohammed, 2017, 2017 International Conference on Cyber-Conflict (CyCon U.S.), P82, DOI 10.1109/CYCONUS.2017.8167501
   Alsaheel A, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P3005
   Anderson R., 2019, 2019 WORKSH EC INF S, DOI 10.17863/CAM.41598
   [Anonymous], 2017, P FED C COMP SCI INF
   Anwar A, 2022, IEEE T DEPEND SECURE, V19, P4255, DOI 10.1109/TDSC.2021.3125270
   Arora A, 2010, INFORM SYST RES, V21, P115, DOI 10.1287/isre.1080.0226
   Barr-Smith F., 2021, P IEEE S SEC PRIV, P1557
   Beres Y, 2008, ANN COMPUT SECURITY, P33, DOI 10.1109/ACSAC.2008.42
   Bhatt P, 2014, 2014 IEEE 8TH INTERNATIONAL SYMPOSIUM ON SERVICE ORIENTED SYSTEM ENGINEERING (SOSE), P390, DOI 10.1109/SOSE.2014.53
   Bilge L., 2012, CCS 12, P833, DOI [10.1145/2382196.2382284, DOI 10.1145/2382196.2382284]
   Bilge L, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1299, DOI 10.1145/3133956.3134022
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Bouwman X, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P433
   Bozorgi M., 2010, Proceedings of of 16th International Conference of on Knowledge discovery and data mining, P105
   Brogi V. V. T., 2016, 2016_8th_IFIP_International_Conference_on_New Technologies,_Mobility_and_Security_(NTMS), P1
   Brown LD, 2001, STAT SCI, V16, P101, DOI 10.1214/ss/1009213286
   Chandran S, 2015, 2015 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P2001, DOI 10.1109/ICACCI.2015.7275911
   Chen HP, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P3143, DOI 10.1145/3292500.3330742
   Chen P, 2014, LECT NOTES COMPUT SC, V8735, P63, DOI 10.1007/978-3-662-44885-4_5
   Clark S, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1256, DOI 10.1145/2660267.2660320
   Cox LA, 2008, RISK ANAL, V28, P497, DOI 10.1111/j.1539-6924.2008.01030.x
   Crowdstrike, 2014, US
   Dambra S, 2020, P IEEE S SECUR PRIV, P1367, DOI 10.1109/SP40000.2020.00019
   Dashevskyi S., 2014, CSET
   Dashevskyi S, 2019, IEEE T SOFTWARE ENG, V45, P945, DOI 10.1109/TSE.2018.2816033
   Di Tizio  Giorgio, 2022, Zenodo, DOI 10.5281/ZENODO.6514817
   Dong Y, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P869
   Ezell BC, 2010, RISK ANAL, V30, P575, DOI 10.1111/j.1539-6924.2010.01401.x
   FireEye, 2020, THINK FAST TIME DISC
   Friedberg I, 2015, COMPUT SECUR, V48, P35, DOI 10.1016/j.cose.2014.09.006
   Ghafir I, 2018, FUTURE GENER COMP SY, V89, P349, DOI 10.1016/j.future.2018.06.055
   Giura P, 2012, 2012 ASE INTERNATIONAL CONFERENCE ON CYBER SECURITY (CYBERSECURITY), P69, DOI 10.1109/CyberSecurity.2012.16
   Han XY, 2020, 27TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2020), DOI 10.14722/ndss.2020.24046
   Jacobs J, 2020, J CYBERSECURITY, V6, DOI 10.1093/cybsec/tyaa015
   Kaskersky, 2016, US
   Kaspersky, 2015, EQUATION GROUP QUEST
   Kaspersky, 2020, US
   Kotzias P, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23522
   Kunreuther H, 2002, RISK ANAL, V22, P655, DOI 10.1111/0272-4332.00057
   Laurenza G., 2019, PROC INT WORKSHOP IN, P217
   Lemay A, 2018, COMPUT SECUR, V72, P26, DOI 10.1016/j.cose.2017.08.005
   Li VG, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P851
   Liao XJ, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P755, DOI 10.1145/2976749.2978315
   Liu Y, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P1009
   Marchetti M, 2016, COMPUT NETW, V109, P127, DOI 10.1016/j.comnet.2016.05.018
   Marchetti M, 2016, INT CONF CYBER CONFL, P243, DOI 10.1109/CYCON.2016.7529438
   Massacci F, 2021, IEEE SECUR PRIV, V19, P14, DOI 10.1109/MSEC.2021.3050433
   Milajerdi SM, 2019, P IEEE S SECUR PRIV, P1137, DOI 10.1109/SP.2019.00026
   Nappa A, 2015, P IEEE S SECUR PRIV, P692, DOI 10.1109/SP.2015.48
   Nayak K., 2014, P INT WORKSH REC ADV, P426
   Nguyen VH, 2016, EMPIR SOFTW ENG, V21, P2268, DOI 10.1007/s10664-015-9408-2
   Novetta, 2016, OPERATION BLOCKBUSTE
   Ozment A., 2006, USENIX ASS P 15 USEN
   Pashchenko I, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1513, DOI 10.1145/3372297.3417232
   Pei KX, 2016, ANN COMPUT SECURITY, P583, DOI 10.1145/2991079.2991122
   ProjectZero, 2021, 0DAY IN WILD
   Sabottke C, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P1041
   Sahabandu D, 2018, IEEE DECIS CONTR P, P1136, DOI 10.1109/CDC.2018.8619416
   SANS, 2019, SANS VULN MAN SURV 2
   Sarabi A, 2017, LECT NOTES COMPUT SC, V10176, P113, DOI 10.1007/978-3-319-54328-4_9
   Satvat K, 2021, 2021 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P 2021), P598, DOI 10.1109/EuroSP51992.2021.00046
   Scheufele DA, 2007, J COMMUN, V57, P9, DOI 10.1111/j.0021-9916.2007.00326.x
   Sexton J, 2015, STAT ANAL DATA MIN, V8, P353, DOI 10.1002/sam.11296
   Shen Y, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P905
   Shu XK, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P1883, DOI 10.1145/3243734.3243829
   Steffens T., 2020, ATTRIBUTION ADV PERS
   Stevanovic I., 2020, OPERATING SYSTEM MAR
   ThaiCERT, 2019, US
   Ul Hassan W, 2020, P IEEE S SECUR PRIV, P1172, DOI 10.1109/SP40000.2020.00096
   Urban Tobias, 2020, Computer Security - ESORICS 2020. 25th European Symposium on Research in Computer Security, ESORICS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12309), P272, DOI 10.1007/978-3-030-59013-0_14
   Ussath Martin, 2016, 2016 Annual Conference on Information Science and Systems (CISS), P181, DOI 10.1109/CISS.2016.7460498
   Virvilis Nikos, 2013, 2013 International Conference on Availability, Reliability and Security (ARES), P248, DOI 10.1109/ARES.2013.32
   Woods Daniel W., 2021, 2021 IEEE Symposium on Security and Privacy (SP), P211, DOI 10.1109/SP40001.2021.00053
   Xiao CW, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P903
   Yang LX, 2020, IEEE T DEPEND SECURE, V17, P1163, DOI 10.1109/TDSC.2018.2858786
   Zhao W., 2014, INT C ADV COMPUTER S
   Zimmermann J, 2015, I S BIOMED IMAGING, P747, DOI 10.1109/ISBI.2015.7163980
NR 82
TC 1
Z9 1
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2023
VL 49
IS 3
BP 1359
EP 1373
DI 10.1109/TSE.2022.3176674
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA A1QF2
UT WOS:000952938700020
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Song, LY
   Minku, LL
AF Song, Liyan
   Minku, Leandro L.
TI A Procedure to Continuously Evaluate Predictive Performance of
   Just-In-Time Software Defect Prediction Models During Software
   Development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Just-in-time software defect prediction; performance evaluation
   procedure; concept drift; data stream learning; online learning;
   verification latency; and label noise
AB Just-In-Time Software Defect Prediction (JIT-SDP) uses machine learning to predict whether software changes are defect-inducing or clean. When adopting JIT-SDP, changes in the underlying defect generating process may significantly affect the predictive performance of JIT-SDP models over time. Therefore, being able to continuously track the predictive performance of JIT-SDP models during the software development process is of utmost importance for software companies to decide whether or not to trust the predictions provided by such models over time. However, there has been little discussion on how to continuously evaluate predictive performance in practice, and such evaluation is not straightforward. In particular, labeled software changes that can be used for evaluation arrive over time with a delay, which in part corresponds to the time we have to wait to label software changes as 'clean' (waiting time). A clean label assigned based on a given waiting time may not correspond to the true label of the software changes. This can potentially hinder the validity of any continuous predictive performance evaluation procedure for JIT-SDP models. This paper provides the first discussion of how to continuously evaluate predictive performance of JIT-SDP models over time during the software development process, and the first investigation of whether and to what extent waiting time affects the validity of such continuous performance evaluation procedure in JIT-SDP. Based on 13 GitHub projects, we found that waiting time had a significant impact on the validity. Though typically small, the differences in estimated predicted performance were sometimes large, and thus inappropriate choices of waiting time can lead to misleading estimations of predictive performance over time. Such impact did not normally change the ranking between JIT-SDP models, and thus conclusions in terms of which JIT-SDP model performs better are likely reliable independent of the choice of waiting time, especially when considered across projects.
C1 [Song, Liyan] Southern Univ Sci & Technol, Res Inst Trustworthy Autonomous Syst, Shenzhen 518055, Guangdong, Peoples R China.
   [Song, Liyan] Southern Univ Sci & Technol, Dept Comp Scienceand Engn, Guangdong Prov Key Lab Brain inspired Intelligent, Shenzhen 518055, Guangdong, Peoples R China.
   [Minku, Leandro L.] Univ Birmingham, Sch Comp Sci, Birmingham B15 2TT, England.
C3 Southern University of Science & Technology; Southern University of
   Science & Technology; University of Birmingham
RP Minku, LL (corresponding author), Univ Birmingham, Sch Comp Sci, Birmingham B15 2TT, England.
EM songly@sustech.edu.cn; L.L.Minku@bham.ac.uk
OI Minku, Leandro/0000-0002-2639-0671; Song, Liyan/0000-0003-1172-8825
FU National Natural Science Foundation of China [62002148]; EPSRC
   [EP/R006660/2]; Guangdong Provincial Key Laboratory [2020B121201001];
   Program for Guangdong Introducing Innovative and Enterpreneurial Teams
   [2017ZT07X386]; Shenzhen Science and Technology Program
   [KQTD2016112514355531]; Research Institute of Trust-worthy Autonomous
   Systems; Southern University of Science and Technology, Shenzhen,
   Guandong, China; EPSRC [EP/R006660/2] Funding Source: UKRI
FX This work was supported in part by National Natural Science Foundation
   of China Grant 62002148, in part by EPSRC Grant EP/R006660/2, in part by
   Guangdong Provincial Key Laboratory Grant 2020B121201001, in part by the
   Program for Guangdong Introducing Innovative and Enterpreneurial Teams
   Grant 2017ZT07X386, in part by Shenzhen Science and Technology Program
   Grant KQTD2016112514355531, and in part by Research Institute of
   Trust-worthy Autonomous Systems, Southern University of Science and
   Technology, Shenzhen, Guandong 518055, China.
CR Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Cabral GG, 2019, PROC INT CONF SOFTW, P666, DOI 10.1109/ICSE.2019.00076
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen T, 2014, PROCEEDINGS OF THE FIFTH INTERNATIONAL SYMPOSIUM ON TEST AUTOMATION & INSTRUMENTATION, VOLS 1 AND 2, P82
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Ditzler G, 2015, IEEE COMPUT INTELL M, V10, P12, DOI 10.1109/MCI.2015.2471196
   Eyolfson J., 2011, WORKING C MINING SOF, P153, DOI DOI 10.1145/1985441.1985464
   Fan YR, 2021, IEEE T SOFTWARE ENG, V47, P1559, DOI 10.1109/TSE.2019.2929761
   Fieller E. C., 1962, BIOMETRIKA, V49, P185
   Gama J, 2013, MACH LEARN, V90, P317, DOI 10.1007/s10994-012-5320-9
   Gama J, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P329
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kubat M, 1997, LECT NOTES ARTIF INT, V1224, P146
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Misirli AT, 2016, EMPIR SOFTW ENG, V21, P605, DOI 10.1007/s10664-015-9370-z
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Montgomery D.C., 1991, DESIGN ANAL EXPT
   Montiel J, 2018, J MACH LEARN RES, V19
   Nguyen H. M., 2011, 2011 International Conference of Soft Computing and Pattern Recognition, P347, DOI 10.1109/SoCPaR.2011.6089268
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   Shihab E., 2012, PROC S FOUND SOFTW E, P1
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Tabassum S, 2020, PROC INT CONF SOFTW, P554, DOI 10.1145/3377811.3380403
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Wang S, 2018, IEEE T NEUR NET LEAR, V29, P4802, DOI 10.1109/TNNLS.2017.2771290
   Wang S, 2015, IEEE T KNOWL DATA EN, V27, P1356, DOI 10.1109/TKDE.2014.2345380
NR 39
TC 7
Z9 7
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 646
EP 666
DI 10.1109/TSE.2022.3158831
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900010
OA Green Published
DA 2024-07-18
ER

PT J
AU Zhan, DY
   Yu, XZ
   Zhang, HL
   Ye, L
AF Zhan, Dongyang
   Yu, Xiangzhan
   Zhang, Hongli
   Ye, Lin
TI ErrHunter: Detecting Error-Handling Bugs in the Linux Kernel Through
   Systematic Static Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Error handling bugs; static taint analysis; cross-control-flow analysis;
   bug detection
AB Error handling is essential for operating systems, thus, there are many bugs in error-handling code, which could result in serious consequences. In this paper, we revisit the problem of error miss-handling bugs and analyze the root cause of the most common ones in the Linux kernel. Based on the analysis, we propose a systematic static taint-analysis-based approach, ErrHunter, to detect multiple kinds of error miss-handling bugs in the Linux kernel. An automated critical variable identification approach is proposed to identify critical variables in the error-handling paths. A static cross-control-flow taint analysis approach is proposed to construct critical-variable control flow graphs (CCFGs), which describe the processing of critical variables in separate control flows. Based on the CCFGs, ErrHunter can target the root cause of the most common error miss-handling bugs and detect the bugs in a systematic way. ErrHunter is designed for kernel bug detection, so it can handle many specific features of the Linux kernel, such as memory management mechanisms, etc.
C1 [Zhan, Dongyang; Yu, Xiangzhan; Zhang, Hongli; Ye, Lin] Harbin Inst Technol, Sch Cyberspace Sci, Harbin 150001, Peoples R China.
   [Ye, Lin] Sci & Technol Commun Networks Lab, Shijiazhuang 050081, Peoples R China.
C3 Harbin Institute of Technology
RP Zhan, DY (corresponding author), Harbin Inst Technol, Sch Cyberspace Sci, Harbin 150001, Peoples R China.
EM zhandy@hit.edu.cn; yuxiangzhan@hit.edu.cn; zhanghongli@hit.edu.cn;
   hityelin@hit.edu.cn
RI zhang, jiayue/JUF-0129-2023; wang, wenxin/JOZ-3291-2023; Zhang,
   Wenli/JXL-4317-2024; Wang, Chen/JZE-6385-2024; LIU,
   JIALIN/JXN-8034-2024; Li, Shuyao/JRY-8603-2023; zheng,
   liang/JVO-2610-2024; Wang, Yanan/JVZ-7957-2024; Sun, Jia/JXM-0311-2024;
   zheng, xin/JNS-5523-2023; tian, ye/KGL-6485-2024; Zhang,
   Chi/JSK-0744-2023; zhang, hong/CAA-1477-2022; liu, sha/JXL-6600-2024;
   Zhan, Dongyang/N-2241-2017
OI Zhan, Dongyang/0000-0003-1981-5878
FU National Key R&D Program of China [2021YFF0307203]; National Natural
   Science Foundation of China [61872111]; Opening Project of Science and
   Technology on Communication Networks Laboratory
FX This work was supported in part by the National Key R & D Program of
   China under Grant 2021YFF0307203, in part by the National Natural
   Science Foundation of China under Grant 61872111, and in part by the
   Opening Project of Science and Technology on Communication Networks
   Laboratory.
CR Acharya M, 2009, LECT NOTES COMPUT SC, V5503, P370
   [Anonymous], 2020, HIGHPERF WID PORT IM
   [Anonymous], 2020, MPI 3 1
   [Anonymous], 2020, COMM VULN EXP
   [Anonymous], 2022, REP BUGS UPSTR LIN K
   [Anonymous], 2017, WHOLE PROGRAM LLVM
   [Anonymous], 2020, LLVM ALIAS ANAL INFR
   [Anonymous], 2021, LWN NET LINUX KERNEL
   Bai JJ, 2016, PROCEEDINGS OF USENIX ATC '16: 2016 USENIX ANNUAL TECHNICAL CONFERENCE, P635
   Bao T, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P845
   Bauman E, 2018, INT SYM CODE GENER, P75, DOI 10.1145/3168833
   Bian P, 2019, IEEE T SOFTWARE ENG, V45, P984, DOI 10.1109/TSE.2018.2816639
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Chen H., 2011, PROC 2 ASIA PACIFIC, P1
   DeFreez D, 2020, PROCEEDINGS OF THE 25TH ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING (PPOPP '20), P187, DOI 10.1145/3332466.3374515
   Ding Y, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2491, DOI 10.1145/3133956.3138824
   Farkhani RM, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P28, DOI 10.1145/3274694.3274739
   Gens D, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23326
   Gotovchits I., 2018, PROC WORKSHOP BINARY, P1, DOI DOI 10.14722/BAR.2018.23019
   Gunawi HS, 2008, PROCEEDINGS OF THE 6TH USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES (FAST '08), P207
   Jana S, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P345
   Jia ZY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P213, DOI 10.1109/ASE.2019.00029
   Jiang ZM, 2019, PROC INT SYMP SOFTW, P128, DOI 10.1109/ISSRE.2019.00022
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Liang B, 2016, PROC INT CONF SOFTW, P333, DOI 10.1145/2884781.2884870
   Liu HQ, 2014, P INT COMP SOFTW APP, P33, DOI 10.1109/COMPSAC.2014.10
   Lu K., 2016, Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security, CCS'16, P920, DOI DOI 10.1145/2976749.2978366
   Lu KJ, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1867, DOI 10.1145/3319535.3354244
   Lu KJ, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1769
   Machiry A, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P1007
   Min C, 2015, SOSP'15: PROCEEDINGS OF THE TWENTY-FIFTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P361, DOI 10.1145/2815400.2815422
   Musavi SA, 2014, IEEE T INF FOREN SEC, V9, P1465, DOI 10.1109/TIFS.2014.2337256
   Niu B, 2014, ACM SIGPLAN NOTICES, V49, P577, DOI [10.1145/2594291.2594295, 10.1145/2666356.2594295]
   NVD, 2020, NATL VULN DAT
   Open MPI, 2020, OPEN SOURC HIGH PERF
   Rubio-Gonzalez C., 2011, PH D FOR GRAC HOPP C
   Rubio-González C, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P270, DOI 10.1145/1542476.1542506
   Saha S, 2013, I C DEPEND SYS NETWO
   Saha S, 2011, LCTES 11: PROCEEDINGS OF THE ACM SIGPLAN/SIGBED 2011 CONFERENCE ON LANGUAGES, COMPILERS, TOOLS AND THEORY FOR EMBEDDED SYSTEMS, P41
   Shi QK, 2018, PROCEEDINGS OF THE 39TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, PLDI 2018, P693, DOI 10.1145/3192366.3192418
   Son S, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P1069
   Song W, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P606, DOI 10.1145/3243734.3243813
   The linux kernel documentation, 2021, MEMORY ALLOCATION GU
   Tian Y, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P752, DOI 10.1145/3106237.3106300
   Tice C, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P941
   Wang HB, 2020, Arxiv, DOI arXiv:2005.05996
   Wang P., 2020, ARXIV
   Wang WW, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P1899, DOI 10.1145/3243734.3243844
   Wang Xi, 2012, 10th USENIX Symposium on Operating Systems Design and Implementation (OSDI 12), P163
   Weimer W, 2004, ACM SIGPLAN NOTICES, V39, P419, DOI 10.1145/1035292.1029011
   Xu XZ, 2019, PROC INT CONF SOFTW, P512, DOI 10.1109/ICSE.2019.00063
   Yamaguchi F, 2013, P 2013 ACM SIGS C CO, P499
NR 52
TC 0
Z9 0
U1 3
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 684
EP 698
DI 10.1109/TSE.2022.3160155
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900012
DA 2024-07-18
ER

PT J
AU Saidani, I
   Ouni, A
   Mkaouer, MW
AF Saidani, Islem
   Ouni, Ali
   Mkaouer, Mohamed Wiem
TI Detecting Continuous Integration Skip Commits Using Multi-Objective
   Evolutionary Search
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Continuous integration; travis CI; software build; search-based software
   engineering; genetic programming
ID CLASSIFICATION; ALGORITHM; NOISE
AB Continuous Integration (CI) consists of integrating the changes introduced by different developers more frequently through the automation of build process. Nevertheless, the CI build process is seen as a major barrier that causes delays in the product release dates. One of the main reasons for such delays is that some simple changes (i.e., can be skipped) trigger the build, which represents an unnecessary overhead and particularly painful for large projects. In order to cut off the expenses of CI build time, we propose in this paper, SkipCI, a novel search-based approach to automatically detect CI Skip commits based on the adaptation of Strength-Pareto Evolutionary Algorithm (SPEA-2). Our approach aims to provide the optimal trade-off between two conflicting objectives to deal with both skipped and non-skipped commits. We evaluate our approach and investigate the performance of both within and cross-project validations on a benchmark of 14,294 CI commits from 15 projects that use Travis CI system. The statistical tests revealed that our approach shows a clear advantage over the baseline approaches with average scores of 92% and 84% in terms of AUC for cross-validation and cross-project validations respectively. Furthermore, the features analysis reveals that documentation changes, terms appearing in the commit message and the committer experience are the most prominent features in CI skip detection. When it comes to the cross-project scenario, the results reveal that besides the documentation changes, there is a strong link between current and previous commits results. Moreover, we deployed and evaluated the usefulness of SkipCI with our industrial partner. Qualitative results demonstrate the effectiveness of SkipCI in providing relevant CI skip commit recommendations to developers for two large software projects from practitioner's point of view.
C1 [Saidani, Islem; Ouni, Ali] Univ Quebec, ETS Montreal, Dept Software Engn & IT, Montreal, PQ H3C 3P8, Canada.
   [Mkaouer, Mohamed Wiem] Rochester Institue Technol, Dept Software Engn, Rochester, NY 14623 USA.
C3 University of Quebec; Ecole de Technologie Superieure - Canada;
   University of Quebec Montreal
RP Ouni, A (corresponding author), Univ Quebec, ETS Montreal, Dept Software Engn & IT, Montreal, PQ H3C 3P8, Canada.
EM islem.saidani.1@ens.etsmtl.ca; ali.ouni@etsmtl.ca; mwmvse@rit.edu
RI Mkaouer, Mohamed Wiem/N-7476-2017; Ouni, Ali/Y-8280-2019
OI Mkaouer, Mohamed Wiem/0000-0001-6010-7561; Ouni, Ali/0000-0003-4708-0362
FU Natural Sciences and Engineering Research Council of Canada
   [RGPIN-2018-05960]
FX This work was supported by the Natural Sciences and Engineering Research
   Council of Canada under Grant RGPIN-2018-05960
CR Abdalkareem R, 2021, IEEE T SOFTWARE ENG, V47, P2740, DOI 10.1109/TSE.2020.2967380
   Abdalkareem R, 2021, IEEE T SOFTWARE ENG, V47, P448, DOI 10.1109/TSE.2019.2897300
   [Anonymous], 2021, SKIPCI DATASET
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bhowan U, 2014, IEEE T EVOLUT COMPUT, V18, P893, DOI 10.1109/TEVC.2013.2293393
   Bhowan U, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1331
   Bhowan U, 2013, IEEE T EVOLUT COMPUT, V17, P368, DOI 10.1109/TEVC.2012.2199119
   Bhowan U, 2010, LECT NOTES COMPUT SC, V6021, P1, DOI 10.1007/978-3-642-12148-7_1
   Bhowan U, 2009, IEEE C EVOL COMPUTAT, P2802, DOI 10.1109/CEC.2009.4983294
   Cervantes J, 2013, IEEE SYS MAN CYBERN, P2659, DOI 10.1109/SMC.2013.7
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   di Perro F, 2007, IEEE T EVOLUT COMPUT, V11, P17, DOI 10.1109/TEVC.2006.876362
   Ekambaram R, 2017, IEEE SYS MAN CYBERN, P2420, DOI 10.1109/SMC.2017.8122985
   Fowler M., 2006, Continuous integration
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Frénay B, 2014, IEEE T NEUR NET LEAR, V25, P845, DOI 10.1109/TNNLS.2013.2292894
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Garcia S, 2019, PROCESSES, V7, DOI 10.3390/pr7060361
   Ghaleb TA, 2019, EMPIR SOFTW ENG, V24, P2102, DOI 10.1007/s10664-019-09695-9
   GitHub, GITH ACT DAT
   Gupta S, 2019, PROCEDIA COMPUT SCI, V161, P466, DOI 10.1016/j.procs.2019.11.146
   Hadka D, 2014, MOEA FRAMEWORK USER
   Hadka D., US
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Harman M, 2010, LECT NOTES COMPUT SC, V6013, P1, DOI 10.1007/978-3-642-12029-9_1
   Hassan F, 2017, INT SYMP EMP SOFTWAR, P157, DOI 10.1109/ESEM.2017.23
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Jin XH, 2020, PROC INT CONF SOFTW, P13, DOI 10.1145/3377811.3380437
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Karnopp DC., 1963, Automatica, V1, P111, DOI [DOI 10.1016/0005-1098(63)90018-9, 10.1016/0005-1098(63)90018-9]
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   Kessentini Marouane, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P122, DOI 10.1109/MOBILESoft.2017.29
   Li MQ, 2020, Arxiv, DOI [arXiv:2002.09040, DOI 10.1109/TSE.2020, 10.1109/TSE.2020]
   Li MQ, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3300148
   Luo Y, 2017, 2017 14TH WEB INFORMATION SYSTEMS AND APPLICATIONS CONFERENCE (WISA 2017), P139, DOI 10.1109/WISA.2017.17
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Meng HY, 2005, LECT NOTES COMPUT SC, V3611, P1044
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Ni AS, 2018, PROC IEEE ACM INT C, P366, DOI 10.1145/3183440.3195012
   Ni AS, 2017, IEEE WORK CONF MIN S, P455, DOI 10.1109/MSR.2017.26
   Ouni Ali, 2020, GECCO'20. Proceedings of the 2020 Genetic and Evolutionary Computation Conference Companion, P1114, DOI 10.1145/3377929.3389887
   Ouni A, 2017, IEEE T SERV COMPUT, V10, P603, DOI 10.1109/TSC.2015.2502595
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Riquelme N, 2015, PROC LAT AM COMPUT C, P286, DOI 10.1109/clei.2015.7360024
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   Saidani Islem, 2020, GECCO'20. Proceedings of the 2020 Genetic and Evolutionary Computation Conference Companion, P313, DOI 10.1145/3377929.3390050
   Saidani I, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1530, DOI 10.1145/3468264.3473115
   Saidani I, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106392
   Santolucito M, 2018, Arxiv, DOI arXiv:1805.04473
   Santos EA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P504, DOI [10.1109/MSR.2016.065, 10.1145/2901739.2903493]
   Scalabrino S, 2016, LECT NOTES COMPUT SC, V9962, P64, DOI 10.1007/978-3-319-47106-8_5
   Scikit-learn.org, PARAMETER ESTIMATION
   Sofianopoulos S., 2011, Proceedings 2011 IEEE Symposium on Computational Intelligence in Multicriteria Decision-Making (2011 MDCM), P97, DOI 10.1109/SMDCM.2011.5949279
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   Tibshirani Robert, 2009, SPRINGER SERIES STAT, V2
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Wang S, 2016, PROC INT CONF SOFTW, P631, DOI 10.1145/2884781.2884880
   Wilcoxon Frank, 1970, SELECTED TABLES MATH, V1, P171, DOI [DOI 10.1002/9780471462422.EOCT, DOI 10.1007/SPRINGERREFERENCE_205698]
   Xia J, 2017, 2017 14TH WEB INFORMATION SYSTEMS AND APPLICATIONS CONFERENCE (WISA 2017), P234, DOI 10.1109/WISA.2017.53
   Xia J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P311, DOI 10.1109/QRS-C.2017.59
   Xie Z, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2875
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Zhao F., 2016, MATER RES LETT, V2016, P1
   Zitzler E., 2001, TIK-Report, V103, P1
NR 73
TC 3
Z9 3
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 4873
EP 4891
DI 10.1109/TSE.2021.3129165
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 7B5SL
UT WOS:000899192600002
DA 2024-07-18
ER

PT J
AU Soremekun, E
   Udeshi, S
   Chattopadhyay, S
AF Soremekun, Ezekiel
   Udeshi, Sakshi
   Chattopadhyay, Sudipta
TI Astraea: Grammar-Based Fairness Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software fairness; machine learning; natural language processing;
   software testing; program debugging
ID BIAS
AB Software often produces biased outputs. In particular, machine learning (ML) based software is known to produce erroneous predictions when processing discriminatory inputs. Such unfair program behavior can be caused by societal bias. In the last few years, Amazon, Microsoft and Google have provided software services that produce unfair outputs, mostly due to societal bias (e.g., gender or race). In such events, developers are saddled with the task of conducting fairness testing. Fairness testing is challenging; developers are tasked with generating discriminatory inputs that reveal and explain biases. We propose a grammar-based fairness testing approach (called Astraea) which leverages context-free grammars to generate discriminatory inputs that reveal fairness violations in software systems. Using probabilistic grammars, Astraea also provides fault diagnosis by isolating the cause of observed software bias. Astraea's diagnoses facilitate the improvement of ML fairness. Astraea was evaluated on 18 software systems that provide three major natural language processing (NLP) services. In our evaluation, Astraea generated fairness violations at a rate of about 18%. Astraea generated over 573K discriminatory test cases and found over 102K fairness violations. Furthermore, Astraea improves software fairness by about 76% via model-retraining, on average.
C1 [Soremekun, Ezekiel] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, Esch Sur Alzette 4365, Luxembourg.
   [Udeshi, Sakshi; Chattopadhyay, Sudipta] Singapore Univ Technol & Design, Singapore 487372, Singapore.
C3 University of Luxembourg; Singapore University of Technology & Design
RP Udeshi, S (corresponding author), Singapore Univ Technol & Design, Singapore 487372, Singapore.
EM ezekiel.soremekun@uni.lu; sakshi_udeshi@mymail.sutd.edu.sg;
   sudipta_chattopadhyay@sutd.edu.sg
RI Soremekun, Ezekiel/ADE-1138-2022
OI Soremekun, Ezekiel/0000-0002-0039-8106; Udeshi,
   Sakshi/0000-0001-6484-6249
FU University of Luxembourg, Ezekiel Sore-mekun; Institute for Advanced
   Studiesof the University of Luxembourg; OneConnect Financial
   [RGOCFT2001]; Singapore Ministry of Education (MOE), President'sGraduate
   Fellowship and MOE [MOE2018-T2-1-098]
FX This work was supported in part by the University of Luxembourg, Ezekiel
   Sore-mekun acknowledges the financial support of the Institute for
   Advanced Studiesof the University of Luxembourg under Audacity Grant
   AUDACITY-2019-Laiwyers. This work was also supported in part by
   OneConnect Financial underGrant RGOCFT2001, Singapore Ministry of
   Education (MOE), President'sGraduate Fellowship and MOE under Grant
   MOE2018-T2-1-098.
CR Aggarwal A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P625, DOI 10.1145/3338906.3338937
   Albarghouthi A, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133904
   Amazon Web Services Inc, 2020, AM COMPR
   Angwin Julia, 2016, ProPublica
   Nguyen A, 2015, PROC CVPR IEEE, P427, DOI 10.1109/CVPR.2015.7298640
   [Anonymous], 2020, Labor force statistics from the current population survey
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Asyrofi M. H., 2021, IEEE Transactions on Software Engineering
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bastani O, 2017, ACM SIGPLAN NOTICES, V52, P95, DOI [10.1145/3062341.3062349, 10.1145/3140587.3062349]
   Berend D, 2020, IEEE INT CONF AUTOM, P1041, DOI 10.1145/3324884.3416609
   Bissell D, 2020, CURR SOCIOL, V68, P116, DOI 10.1177/0011392118816743
   Biswas S, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P981, DOI 10.1145/3468264.3468536
   Biswas S, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P642, DOI 10.1145/3368089.3409704
   Blodgett S.L., 2017, FAIRNESS ACCOUNTABIL
   Blodgett Su L., 2020, THESIS
   Blodgett Su Lin, 2020, P 58 ANN M ASS COMPU, P5454, DOI DOI 10.18653/V1/2020.ACL-MAIN.485
   Blodgett Su Lin, 2016, P EMPIRICAL METHODS
   Bolukbasi T, 2016, ADV NEUR IN, V29
   Calders T, 2009, INT CONF DAT MIN WOR, P13, DOI 10.1109/ICDMW.2009.83
   Caliskan A, 2017, SCIENCE, V356, DOI 10.1126/science.aal4230
   Chakraborty J, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P429, DOI 10.1145/3468264.3468537
   Chakraborty J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P654, DOI 10.1145/3368089.3409697
   Crawford Kate, 2017, C NEUR INF PROC SYST
   Denton E., 2019, PROC IEEE C COMPUT V
   Dev S, 2019, PR MACH LEARN RES, V89, P879
   Dev S, 2020, AAAI CONF ARTIF INTE, V34, P7659
   Devlin Jacob, 2019, C N AM CHAPTER ASS C
   Díaz M, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173986
   Dola S, 2021, PROC INT CONF SOFTW, P226, DOI 10.1109/ICSE43902.2021.00032
   Dwork C., 2012, P 3 INNOVATIONS THEO, P214
   Field A, 2021, 59TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 11TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1 (ACL-IJCNLP 2021), P1905
   Friedman B, 1996, ACM T INFORM SYST, V14, P330, DOI 10.1145/230538.230561
   Galhotra S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P498, DOI 10.1145/3106237.3106277
   Gardner M, 2018, NLP OPEN SOURCE SOFTWARE (NLP-OSS), P1
   Goneni H, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P609
   Google Cloud Natural Language, 2020, DERIV INS UNSTR TEXT
   Grammarly, 2021, US
   Halpern JY, 2005, BRIT J PHILOS SCI, V56, P843, DOI 10.1093/bjps/axi147
   HAMPEL FR, 1974, J AM STAT ASSOC, V69, P383, DOI 10.2307/2285666
   Harel-Canada F, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P851, DOI 10.1145/3368089.3409754
   Havrikov N, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P189, DOI 10.1109/ASE.2019.00027
   Hemmati H, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P151, DOI 10.1109/QRS.2015.30
   Hodován R, 2018, PROCEEDINGS OF THE 9TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON AUTOMATING TEST CASE DESIGN, SELECTION, AND EVALUATION (A-TEST '18), P45, DOI 10.1145/3278186.3278193
   Hort M, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P994, DOI 10.1145/3468264.3468565
   Hovy D, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2016), VOL 2, P591
   IBM Watson, 2020, NATURAL LANGUAGE PRO
   Johnson Brittany, 2020, arXiv
   Kamiran Faisal, 2010, Proceedings 2010 10th IEEE International Conference on Data Mining (ICDM 2010), P869, DOI 10.1109/ICDM.2010.50
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Kiritchenko S, 2018, P 7 JOINT C LEX COMP, P43, DOI [10.18653/v1/S18-2005, DOI 10.18653/V1/S18-2005]
   Lois FA, 2019, GENDER BIAS IN NATURAL LANGUAGE PROCESSING (GEBNLP 2019), P76
   Lundberg SM, 2017, ADV NEUR IN, V30
   Ma PC, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P458
   Madaan N, 2021, AAAI CONF ARTIF INTE, V35, P13516
   Microsoft Azure Cognitive services, 2020, TEXT AN DET SENT KEY
   Miller T, 2021, KNOWL ENG REV, V36, DOI 10.1017/S0269888921000102
   Nasukawa T., 2003, P 2 INT C KNOWLEDGE, P70, DOI DOI 10.1145/945645.945658
   Radford A., 2019, LANGUAGE MODELS ARE
   Rezabakhsh B, 2006, J CONSUM POLICY, V29, P3, DOI 10.1007/s10603-005-3307-7
   Ribeiro M. T., 2020, ARXIV200504118, DOI 10.18653/v1/2020.acl-main.442
   Ribeiro MT, 2018, AAAI CONF ARTIF INTE, P1527
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   ROUSSEEUW PJ, 1993, J AM STAT ASSOC, V88, P1273, DOI 10.2307/2291267
   Rudinger R, 2018, P 2018 C N AM CHAPT, V2, P8, DOI DOI 10.18653/V1/N18-2002
   Scott J., 2006, Social theory: Central issues in sociology
   Solaiman I, 2019, Arxiv, DOI arXiv:1908.09203
   Soon WM, 2001, COMPUT LINGUIST, V27, P521, DOI 10.1162/089120101753342653
   Sun T, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P1630
   Sun ZY, 2020, PROC INT CONF SOFTW, P974, DOI 10.1145/3377811.3380420
   Tian YC, 2020, PROC INT CONF SOFTW, P1122, DOI 10.1145/3377811.3380400
   U.S. Social Security Administration, 2020, TOP NAM LAST 100 YEA
   Udeshi S, 2021, IEEE T SOFTWARE ENG, V47, P2487, DOI 10.1109/TSE.2019.2953066
   Udeshi S, 2018, IEEE INT CONF AUTOM, P98, DOI 10.1145/3238147.3238165
   Verma S, 2018, 2018 IEEE/ACM INTERNATIONAL WORKSHOP ON SOFTWARE FAIRNESS (FAIRWARE 2018), P1, DOI [10.1145/3194770.3194776, 10.23919/FAIRWARE.2018.8452913]
   Wolf T., 2019, STATE ART NEURAL C R
   Yang Z, 2021, Arxiv, DOI arXiv:2105.14874
   Zafar MB, 2017, PR MACH LEARN RES, V54, P962
   Zemel Rich, 2013, PMLR, P325
   Zhang BH, 2018, PROCEEDINGS OF THE 2018 AAAI/ACM CONFERENCE ON AI, ETHICS, AND SOCIETY (AIES'18), P335, DOI 10.1145/3278721.3278779
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang PX, 2020, PROC INT CONF SOFTW, P949, DOI 10.1145/3377811.3380331
   Zhao J, 2018, P 2018 C N AM CHAPT, V2, P15, DOI DOI 10.18653/V1/N18-2003
   Zhao JY, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P4847
   Zhao Jieyu, 2017, Men Also Like Shopping: Reducing Gender Bias Amplification Using Corpus-level Constraints
   Zhou P, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P5276
   Zliobaite I., 2011, Proceedings of the 2011 IEEE 11th International Conference on Data Mining (ICDM 2011), P992, DOI 10.1109/ICDM.2011.72
   Zmigrod R, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P1651
NR 88
TC 7
Z9 7
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 5188
EP 5211
DI 10.1109/TSE.2022.3141758
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600025
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Dann, A
   Plate, H
   Hermann, B
   Ponta, SE
   Bodden, E
AF Dann, Andreas
   Plate, Henrik
   Hermann, Ben
   Ponta, Serena Elisa
   Bodden, Eric
TI Identifying Challenges for OSS Vulnerability Scanners-A Study & Test
   Suite
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Open source software; Databases; Java; Benchmark testing; Tools;
   Security; Software; Security maintenance; open-source software; tools;
   security vulnerabilities
AB The use of vulnerable open-source dependencies is a known problem in today's software development. Several vulnerability scanners to detect known-vulnerable dependencies appeared in the last decade, however, there exists no case study investigating the impact of development practices, e.g., forking, patching, re-bundling, on their performance. This paper studies (i) types of modifications that may affect vulnerable open-source dependencies and (ii) their impact on the performance of vulnerability scanners. Through an empirical study on 7,024 Java projects developed at SAP, we identified four types of modifications: re-compilation, re-bundling, metadata-removal and re-packaging. In particular, we found that more than 87 percent (56 percent, resp.) of the vulnerable Java classes considered occur in Maven Central in re-bundled (re-packaged, resp.) form. We assessed the impact of these modifications on the performance of the open-source vulnerability scanners OWASP Dependency-Check (OWASP) and Eclipse Steady, GitHub Security Alerts, and three commercial scanners. The results show that none of the scanners is able to handle all the types of modifications identified. Finally, we present Achilles, a novel test suite with 2,505 test cases that allow replicating the modifications on open-source dependencies.
C1 [Dann, Andreas] Paderborn Univ, Heinz Nixdorf Inst, Secure Software Engn Grp, D-33098 Paderborn, Germany.
   [Plate, Henrik; Ponta, Serena Elisa] SAP Secur Res, F-06250 Mougins, France.
   [Hermann, Ben] Tech Univ Dortmund, Secure Software Engn Grp, D-44227 Dortmund, Germany.
   [Bodden, Eric] Paderborn Univ, Dept Comp Sci, Secure Software Engn, D-33098 Paderborn, Germany.
   [Bodden, Eric] Fraunhofer IEM, Software Engn & IT Secur, D-33102 Paderborn, Germany.
C3 University of Paderborn; Dortmund University of Technology; University
   of Paderborn
RP Dann, A (corresponding author), Paderborn Univ, Heinz Nixdorf Inst, Secure Software Engn Grp, D-33098 Paderborn, Germany.
EM andreas.dann@uni-paderborn.de; henrik.plate@sap.com;
   ben.hermann@tu-dortmund.de; serena.ponta@sap.com;
   eric.bodden@iem.fraunhofer.de
RI Hermann, Ben/AAG-9524-2019; Dann, Andreas/GQZ-6686-2022; Bodden,
   Eric/AAE-1365-2021
OI Hermann, Ben/0000-0001-9848-2017; Bodden, Eric/0000-0003-3470-3647;
   Dann, Andreas/0000-0002-6587-7431; Plate, Henrik/0000-0001-8862-3488
CR [Anonymous], 2017, FORBES FEB
   [Anonymous], 2020, BLACKDUCK
   Bauer V, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P483, DOI 10.1109/ICSM.2012.6405311
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1275, DOI 10.1007/s10664-014-9325-9
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Dann A, 2019, SOAP'19: PROCEEDINGS OF THE 8TH ACM SIGPLAN INTERNATIONAL WORKSHOP ON STATE OF THE ART IN PROGRAM ANALYSIS, P14, DOI 10.1145/3315568.3329966
   Dietrich J, 2017, J OBJECT TECHNOL, V16, DOI 10.5381/jot.2017.16.4.a1.
   Eclipse, 2020, CAS STUD SCALL MONTH
   GitHub, 2020, SEC AL
   Heinemann Lars, 2011, Top Productivity through Software Reuse. Proceedings of the 12th International Conference on Software Reuse, ICSR 2011, P207, DOI 10.1007/978-3-642-21347-2_16
   Krebs B., 2018, EQUIFAX BREACH
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Livshits, 2012, SECURIBENCH
   Lopes CV, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133908
   MvnRepository, 2020, 100 POP PROJ
   Nguyen VietHung., 2013, P 8 ACM SIGSAC S INF, P493
   Nilson G., 2013, 6 WORKSH CYB SEC EXP, P1
   NIST, 2020, NVD
   NIST, 2018, SAM SOFTW ASS METR T
   NIST, 2017, JUL TEST SUIT
   NVD, 2017, CVE 2017 5638 DET
   OffSec Services, 2020, EXPL DAT
   Oliver J, 2014, 2013 FOURTH CYBERCRIME AND TRUSTWORTHY COMPUTING WORKSHOP (CTC 2013), P7, DOI 10.1109/CTC.2013.9
   Pashchenko I, 2022, IEEE T SOFTWARE ENG, V48, P1592, DOI 10.1109/TSE.2020.3025443
   Pashchenko I, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268920
   Pittenger M., 2016, STATE OPEN SOURCE SE
   Pivotal Software, 2020, CVE20181271 PIV SOFT
   Ponta Serena Elisa, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P383, DOI 10.1109/MSR.2019.00064
   Ponta SE, 2020, EMPIR SOFTW ENG, V25, P3175, DOI 10.1007/s10664-020-09830-x
   Ponta SE, 2018, PROC IEEE INT CONF S, P449, DOI 10.1109/ICSME.2018.00054
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sajnani H, 2014, PROC IEEE INT CONF S, P231, DOI 10.1109/ICSME.2014.45
   SAP, 2020, VULNERABILITY ASSESS
   Sonatype, 2020, CENTR DOWNL STAT OSS
   SourceClear, 2020, EV FRAM DEP AN
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Williams J., 2014, UNFORTUNATE REALITY
NR 37
TC 4
Z9 6
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3613
EP 3625
DI 10.1109/TSE.2021.3101739
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500023
DA 2024-07-18
ER

PT J
AU Kuhrmann, M
   Tell, P
   Hebig, R
   Klünder, J
   Münch, J
   Linssen, O
   Pfahl, D
   Felderer, M
   Prause, CR
   MacDonell, SG
   Nakatumba-Nabende, J
   Raffo, D
   Beecham, S
   Tuzun, E
   López, G
   Paez, N
   Fontdevila, D
   Licorish, SA
   Küpper, S
   Ruhe, G
   Knauss, E
   Ozcan-Top, O
   Clarke, P
   McCaffery, F
   Genero, M
   Vizcaino, A
   Piattini, M
   Kalinowski, M
   Conte, T
   Prikladnicki, R
   Krusche, S
   Coskunçay, A
   Scott, E
   Calefato, F
   Pimonova, S
   Pfeiffer, RH
   Schultz, UP
   Heldal, R
   Fazal-Baqaie, M
   Anslow, C
   Nayebi, M
   Schneider, K
   Sauer, S
   Winkler, D
   Biffl, S
   Bastarrica, MC
   Richardson, I
AF Kuhrmann, Marco
   Tell, Paolo
   Hebig, Regina
   Kluender, Jil
   Muench, Juergen
   Linssen, Oliver
   Pfahl, Dietmar
   Felderer, Michael
   Prause, Christian R.
   MacDonell, Stephen G.
   Nakatumba-Nabende, Joyce
   Raffo, David
   Beecham, Sarah
   Tuzun, Eray
   Lopez, Gustavo
   Paez, Nicolas
   Fontdevila, Diego
   Licorish, Sherlock A.
   Kuepper, Steffen
   Ruhe, Guenther
   Knauss, Eric
   Ozcan-Top, Ozden
   Clarke, Paul
   McCaffery, Fergal
   Genero, Marcela
   Vizcaino, Aurora
   Piattini, Mario
   Kalinowski, Marcos
   Conte, Tayana
   Prikladnicki, Rafael
   Krusche, Stephan
   Coskuncay, Ahmet
   Scott, Ezequiel
   Calefato, Fabio
   Pimonova, Svetlana
   Pfeiffer, Rolf-Helge
   Schultz, Ulrik Pagh
   Heldal, Rogardt
   Fazal-Baqaie, Masud
   Anslow, Craig
   Nayebi, Maleknaz
   Schneider, Kurt
   Sauer, Stefan
   Winkler, Dietmar
   Biffl, Stefan
   Bastarrica, Maria Cecilia
   Richardson, Ita
TI What Makes Agile Software Development Agile?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Instruments; Companies; Data collection; Market research;
   Collaboration; Standards; Agile software development; hybrid development
   methods; survey research; software development; software process
ID CHALLENGES; MANAGEMENT; APPLICABILITY; METHODOLOGIES; ARCHITECTURE;
   BENEFITS
AB Together with many success stories, promises such as the increase in production speed and the improvement in stakeholders' collaboration have contributed to making agile a transformation in the software industry in which many companies want to take part. However, driven either by a natural and expected evolution or by contextual factors that challenge the adoption of agile methods as prescribed by their creator(s), software processes in practice mutate into hybrids over time. Are these still agile? In this article, we investigate the question: what makes a software development method agile? We present an empirical study grounded in a large-scale international survey that aims to identify software development methods and practices that improve or tame agility. Based on 556 data points, we analyze the perceived degree of agility in the implementation of standard project disciplines and its relation to used development methods and practices. Our findings suggest that only a small number of participants operate their projects in a purely traditional or agile manner (under 15 percent). That said, most project disciplines and most practices show a clear trend towards increasing degrees of agility. Compared to the methods used to develop software, the selection of practices has a stronger effect on the degree of agility of a given discipline. Finally, there are no methods or practices that explicitly guarantee or prevent agility. We conclude that agility cannot be defined solely at the process level. Additional factors need to be taken into account when trying to implement or improve agility in a software company. Finally, we discuss the field of software process-related research in the light of our findings and present a roadmap for future research.
C1 [Kuhrmann, Marco] Univ Passau, Fac Comp Sci & Math, D-94032 Passau, Germany.
   [Tell, Paolo] IT Univ Kobenhavn, DK-2300 Copenhagen, Denmark.
   [Hebig, Regina] Chalmers Univ Technol, Comp Sci & Engn, S-41296 Gothenburg, Sweden.
   [Kluender, Jil; Schneider, Kurt] Leibniz Univ Hannover, Software Engn Grp, D-30167 Hannover, Germany.
   [Muench, Juergen] Reutlingen Univ, Herman Hollerith Ctr, D-72762 Reutlingen, Germany.
   [Linssen, Oliver] FOM Hsch Oekon & Management, D-40476 Dusseldorf, Germany.
   [Pfahl, Dietmar; Scott, Ezequiel] Univ Tartu, Inst Comp Sci, EE-50090 Tartu, Estonia.
   [Felderer, Michael] Univ Innsbruck, Dept Comp Sci, A-6020 Innsbruck, Austria.
   [Prause, Christian R.] German Aerosp Ctr, D-53227 Bonn, Germany.
   [MacDonell, Stephen G.] Auckland Univ Technol, Dept Comp Sci, Auckland 1010, New Zealand.
   [Nakatumba-Nabende, Joyce] Makerere Univ, Sch Comp & Informat Technol, Kampala 7062, Uganda.
   [Raffo, David] Portland State Univ, Maseeh Coll Engn & Comp Sci, Portland, OR 97201 USA.
   [Beecham, Sarah] Limerick Univ, LERO, Limerick V94 T9PX, Ireland.
   [Tuzun, Eray] Bilkent Univ, Dept Comp Engn, TR-06800 Cankaya, Turkey.
   [Lopez, Gustavo] Univ Costa Rica, CITIC, San Jose 115012060, Costa Rica.
   [Paez, Nicolas; Fontdevila, Diego] Univ Nacl Tres Febrero, Fac Ingn, Buenos Aires C1678, Buenos Aires, DF, Argentina.
   [Licorish, Sherlock A.] Univ Otago, Dept Informat Sci, Dunedin 9016, New Zealand.
   [Kuepper, Steffen] Tech Univ Clausthal, ISSE, D-38678 Clausthal Zellerfeld, Germany.
   [Ruhe, Guenther] Univ Calgary, Dept Comp Sci & Elect Engn, Calgary, AB T2N 1N4, Canada.
   [Knauss, Eric] Chalmers Tekniska Hgsk, Dept Comp Sci & Engn, Campus Lindholmen, S-41756 Gothenburg, Sweden.
   [Ozcan-Top, Ozden] Middle East Tech Univ, Dept Informat Syst, TR-06800 Cankaya, Turkey.
   [Clarke, Paul] Dublin City Univ, Sch Comp, Dublin 9, Ireland.
   [McCaffery, Fergal] Dundalk Inst Technol, RSRC, Dundalk A91 K584, Ireland.
   [Genero, Marcela; Vizcaino, Aurora; Piattini, Mario] Univ Castilla La Mancha, DTSI, Ciudad Real 13001, Spain.
   [Kalinowski, Marcos] Pontificia Univ Catolica Rio de Janeiro, Dept Informat, BR-22541041 Rio De Janeiro, Brazil.
   [Conte, Tayana] Univ Fed Amazonas, Inst Comp, BR-69067005 Manaus, Amazonas, Brazil.
   [Prikladnicki, Rafael] Pontificia Univ Catolica Rio Grande do Sul, Dept Comp Sci, BR-90619900 Porto Alegre, RS, Brazil.
   [Krusche, Stephan] Tech Univ Munich, Dept Comp Sci, D-80333 Munich, Germany.
   [Coskuncay, Ahmet] Ataturk Univ, Dept Comp Engn, TR-25030 Yakutiye, Turkey.
   [Calefato, Fabio] Univ Bari, Dipartimento Informat, I-70121 Bari, Italy.
   [Pimonova, Svetlana] Natl Res Univ Higher Sch Econ, HSE, Moscow 101000, Russia.
   [Pfeiffer, Rolf-Helge] IT Univ Copenhagen, Comp Sci Dept, DK-2300 Copenhagen, Denmark.
   [Schultz, Ulrik Pagh] Univ Southern Denmark, DK-5230 Odense, Denmark.
   [Heldal, Rogardt] Western Norway Univ Appl Sci, Dept Comp Sci Elect Engn & Math Sci, N-5063 Bergen, Norway.
   [Fazal-Baqaie, Masud] Next Data Serv AG, D-10559 Berlin, Germany.
   [Anslow, Craig] Victoria Univ Wellington, Sch Engn & Comp Sci, Wellington 6012, New Zealand.
   [Nayebi, Maleknaz] Ecole Polytech Montreal, Dept Comp Sci, Montreal, PQ H3T 1J4, Canada.
   [Sauer, Stefan] Paderborn Univ, D-33098 Paderborn, Germany.
   [Winkler, Dietmar; Biffl, Stefan] Tech Univ Wien, Dept Software Engn, A-1040 Vienna, Austria.
   [Bastarrica, Maria Cecilia] Univ Chile, Comp Sci Dept, Santiago 8330015, Chile.
   [Richardson, Ita] Lero Irish Software Engn Res Ctr, CSIS, Limerick V94 NYD3, Ireland.
C3 University of Passau; Chalmers University of Technology; Leibniz
   University Hannover; University of Tartu; University of Innsbruck;
   Helmholtz Association; German Aerospace Centre (DLR); Auckland
   University of Technology; Makerere University; Portland State
   University; Ihsan Dogramaci Bilkent University; Universidad Costa Rica;
   University of Otago; TU Clausthal; University of Calgary; Chalmers
   University of Technology; Middle East Technical University; Dublin City
   University; Universidad de Castilla-La Mancha; Universidade Federal de
   Amazonas; Pontificia Universidade Catolica Do Rio Grande Do Sul;
   Technical University of Munich; Ataturk University; Universita degli
   Studi di Bari Aldo Moro; HSE University (National Research University
   Higher School of Economics); IT University Copenhagen; University of
   Southern Denmark; Western Norway University of Applied Sciences;
   Victoria University Wellington; Universite de Montreal; Polytechnique
   Montreal; University of Paderborn; Technische Universitat Wien;
   Universidad de Chile
RP Kuhrmann, M (corresponding author), Univ Passau, Fac Comp Sci & Math, D-94032 Passau, Germany.
EM kuhrmann@acm.org; pate@itu.dk; regina.hebig@cse.gu.se;
   jil.kluender@inf.uni-hannover.de;
   Juergen.Muench@Reutlingen-University.DE; oliver.linssen@fom.de;
   dietmar.pfahl@ut.ee; michael.felderer@uibk.nc.at;
   christian.prause@dlr.de; macdonell@aut.ac.nz; jnakatumba@cis.mak.ac.ug;
   raffod@pdx.edu; sarah.beecham@lero.ie; eraytuzun@gmail.com;
   gustavo.lopez_h@ucr.ac.cr; nicopaez@computer.org;
   dfontdevila@untref.edu.ar; sherlock.licorish@otago.ac.nz;
   steffen.kuepper@tu-clausthal.de; ruhe@ucalgary.ca;
   eric.knauss@cse.gu.se; ozdenoz@metu.edu.tr; paul.m.clarke@dcu.ie;
   fergal.mccaffery@dkit.ie; Marcela.Genero@uclm.es;
   Aurora.Vizcaino@uclm.es; mario.piattini@uclm.es;
   kalinowski@inf.puc-rio.br; tayana@icomp.ufam.edu.br;
   rafael.prikladnicki@pucrs.br; krusche@in.tum.de;
   ahmet.coskuncay@gmail.com; ezequielscott@gmail.com;
   fabio.calefato@uniba.it; skarpycheva@hse.ru; ropf@itu.dk;
   ups@mmmi.sdu.dk; rohe@hvl.no; masudf@gmx.de; craig@ecs.vuw.ac.nz;
   mnayebi@ucalgary.ca; sauer@uni-paderborn.de;
   dietmar.winkler@tuwien.ac.at; stefan.biffl@tuwien.ac.at;
   cecilia@dcc.uchile.cl; ita.richardson@lero.ie
RI López, Gustavo/AFM-7065-2022; Tuzun, Eray/AAD-7282-2021; Calefato,
   Fabio/H-4177-2014; Lopez, Gustavo/HSH-6835-2023; ozcan top,
   ozden/AAB-3520-2020; Pfahl, Dietmar Alfred Paul Kurt/H-3084-2015;
   Piattini, Mario/F-6271-2013; Clarke, Paul/JAX-9606-2023; Paez,
   Nicolas/HSI-3604-2023; Coskuncay, Ahmet/M-5099-2019; Bastarrica, Maria
   Cecilia/AGN-6617-2022; Beecham, Simon C/M-1544-2016; Schultz,
   Ulrik/O-7985-2018; Hebig, Regina/B-5284-2015
OI López, Gustavo/0000-0003-0510-8857; Tuzun, Eray/0000-0002-5550-7816;
   Calefato, Fabio/0000-0003-2654-1588; ozcan top,
   ozden/0000-0001-6608-0726; Pfahl, Dietmar Alfred Paul
   Kurt/0000-0003-2400-501X; Piattini, Mario/0000-0002-7212-8279; Clarke,
   Paul/0000-0002-4487-627X; Coskuncay, Ahmet/0000-0002-7411-310X;
   Felderer, Michael/0000-0003-3818-4442; Prause,
   Christian/0000-0003-4856-529X; Klunder, Jil
   Ann-Christin/0000-0001-7674-2930; Munch, Jurgen/0000-0003-0327-8094;
   Schultz, Ulrik/0000-0003-4119-2689; Kuhrmann, Marco/0000-0001-6101-8931;
   Hebig, Regina/0000-0002-1459-2081
FU Estonian Centre of Excellence in ICT Research (EXCITE); Science
   Foundation Ireland [13/RC/2094_2]; European Regional Development Fund
   through the Southern & Eastern Regional Operational Programme; Science
   Foundation Ireland Research Centre for Software; ECLIPSE Project,
   Ministerio de Ciencia, Innovacion y Universidades-FEDER
   [RTI2018094283-B-C31]; Software Center Research Network; Vinnova FFI
   NGEA Project; CNPq; Christian Doppler Research Association; Austrian
   Federal Ministry for Digital and Economic Affairs; theNational
   Foundation for Research, Technology and Development
FX HELENA is a huge endeavor in which many people participated and helped
   improve the understanding of modern software and system development. The
   authors would like to thank all persons, which include Philipp Diebold,
   Eckhart Hanser, Simon Oberthur, Sabrina Marczak, Guilherme Horta
   Travassos, Vahid Garousi, Kai Petersen, Nauman Ali, Abdur Razzak, Casper
   Lassenius, Nicole Novielli, Giuseppe Iaffaldano, Dan Houston, Ian De
   Silva, Martin Kropp, Benjamin Kanagwa, Mushtaq Raza, Joao Pascoal Faria,
   Julian Bass, Filippo Lanubile, Andreas Meier, and John Noll, who
   directly or indirectly supported HELENA and Rory V. O'Connor, who sadly
   left us and will be missed as a great colleague and friend. The work of
   Dietmar Pfahl and Ezequiel Scott was supported by the Estonian Centre of
   Excellence in ICT Research (EXCITE). The work of Sarah Beecham, Ita
   Richardson, Ozden Ozcan-Top, Paul Clarke, and Fergal McCaffery were
   supported in part by the Science Foundation Ireland under Grant
   13/RC/2094_2 and in part by the European Regional Development Fund
   through the Southern & Eastern Regional Operational Programme to Lero
   -the Science Foundation Ireland Research Centre for Software. The work
   of Marcela Genero, Aurora Vizcaino, and Mario Piattini was supported by
   ECLIPSE Project, Ministerio de Ciencia, Innovacion y
   Universidades-FEDER, under Grant RTI2018094283-B-C31. Thework of Eric
   Knauss was supported in part by Software Center Research Network and in
   part by Vinnova FFI NGEA Project. The work of Rafael Prikladnicki was
   supported by CNPq. The work of Dietmar Winkler and Stefan Biffl was
   supported in part by Christian Doppler Research Association, in part by
   the Austrian Federal Ministry for Digital and Economic Affairs, and in
   part by theNational Foundation for Research, Technology and Development.
CR Abrahamsson P, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.36
   Adali OE, 2016, COMM COM INF SC, V609, P135, DOI 10.1007/978-3-319-38980-6_11
   Aitken A, 2013, P ANN HICSS, P4751, DOI 10.1109/HICSS.2013.31
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   [Anonymous], REAL WORLD RES RESOU
   [Anonymous], 2014, 8th Annual State of Agile Survey
   Armbrust O., 2011, P INT C SOFTW ENG, P237, DOI [10.1145/1987875.1987920, DOI 10.1145/1987875.1987920]
   Balaji S, 2012, International Journal of Information Technology and Business Management, V2, P26
   Beck K., 2011, MANIFESTO AGILE SOFT
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Begel Andrew, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P255
   Boehm B, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.129
   Boehm B, 2003, COMPUTER, V36, P57, DOI 10.1109/MC.2003.1204376
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Clarke P, 2018, PROCEEDINGS OF THE 2018 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS (ICSSP 2018), P142, DOI 10.1145/3202710.3203162
   Clarke P, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP), P86, DOI [10.1145/2904354.2904369, 10.1109/ICSSP.2016.019]
   Clarke P, 2016, COMM COM INF SC, V609, P351, DOI 10.1007/978-3-319-38980-6_25
   Clarke P, 2015, IEEE T SOFTWARE ENG, V41, P1169, DOI 10.1109/TSE.2015.2467388
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   Cusumano M, 2003, IEEE SOFTWARE, V20, P28, DOI 10.1109/MS.2003.1241363
   Diebold P, 2015, LECT NOTES BUS INF P, V212, P40, DOI 10.1007/978-3-319-18612-2_4
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   DYER M, 1980, IBM SYST J, V19, P451, DOI 10.1147/sj.194.0451
   Eliasson U, 2014, LECT NOTES COMPUT SC, V8767, P433, DOI 10.1007/978-3-319-11653-2_27
   Fitzgerald Brian, 2013, 2013 35th International Conference on Software Engineering (ICSE), P863, DOI 10.1109/ICSE.2013.6606635
   Garousi V, 2020, IEEE SOFTWARE, V37, P68, DOI 10.1109/MS.2018.2880823
   Garousi V, 2015, J SYST SOFTWARE, V108, P148, DOI 10.1016/j.jss.2015.06.036
   Giray G., 2018, Internet of Things, P141
   GPM Dt. Gesellschaft f. Projektmanagement, 2017, STAT QUO AG
   Gren L, 2020, IEEE SOFTWARE, V37, P63, DOI 10.1109/MS.2019.2955675
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hebig R., 2014, P 2014 INT C SOFTWAR, P164, DOI [10.1145/2600821.2600846, DOI 10.1145/2600821.2600846]
   Hebig R., 2016, P MAN SOFTW PROC EV, P257
   Hebig R, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1863
   Hohl Philipp, 2018, Journal of Software Engineering Research and Development, V6, DOI 10.1186/s40411-018-0059-z
   Houston D.X., 2014, Proceedings of the International Conference on Software and System Process (ICSSP'14), P65
   Jalali S, 2014, J SYST SOFTWARE, V98, P172, DOI 10.1016/j.jss.2014.08.067
   Johnson P., 2012, IEEE Software, V29, P94, DOI 10.1109/MS.2012.127
   Kasauli Rashidah, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P31, DOI 10.1145/3383219.3383223
   Kasauli R, 2018, EUROMICRO CONF PROC, P470, DOI 10.1109/SEAA.2018.00082
   Klünder J, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES, ICSSP, P61, DOI 10.1145/3379177.3388898
   Klünder J, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P255, DOI 10.1109/ICSE-SEIP.2019.00036
   Klünder J, 2016, LECT NOTES COMPUT SC, V9856, P111, DOI 10.1007/978-3-319-44902-9_8
   Klunder Jil, 2019, Human-Centered Software Engineering. 7th IFIP WG 13.2 International Working Conference, HCSE 2018. Revised Selected Papers: Lecture Notes in Computer Science (LNCS 11262), P31, DOI 10.1007/978-3-030-05909-5_3
   Klunder J., 2018, COMPLEMENTING MAT HE, DOI DOI 10.13140/RG.2.2.11032.65288
   Knauss E, 2019, IEEE SOFTWARE, V36, P9, DOI 10.1109/MS.2019.2896875
   Kortum F, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP 2019), P34, DOI 10.1109/ICSSP.2019.00015
   Kruchten P.., 2004, RATIONAL UNIFIED PRO
   Kuhrmann M, 2016, LECT NOTES INFORM LN, P59
   Kuhrmann M, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP 2019), P9, DOI 10.1109/ICSSP.2019.00012
   Kuhrmann M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-SEET), P1, DOI 10.1109/ICSE-SEET.2019.00009
   Kuhrmann M, 2017, ICSSP'17: PROCEEDINGS OF THE 2017 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS, P30, DOI 10.1145/3084100.3084104
   Kuhrmann M, 2016, J SYST SOFTWARE, V121, P49, DOI 10.1016/j.jss.2016.07.031
   Larman C., 2016, Large-Scale Scrum: More with LeSS
   Liu HY, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES, ICSSP, P125, DOI 10.1145/3379177.3388905
   Lous P, 2017, INT CONF GLOBAL SOFT, P1, DOI 10.1109/ICGSE.2017.13
   Marinho M., 2019, P IEEE ACM INT S EMP, P1
   McHugh M, 2012, COMM COM INF SC, V290, P141
   Meier A., 2019, SWISS AGILE STUDY
   MILLS HD, 1980, IBM SYST J, V19, P415
   Mortada M, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES, ICSSP, P71, DOI 10.1145/3379177.3388899
   Murphy Brendan, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P75, DOI 10.1109/ESEM.2013.21
   Nascimento ED, 2019, INT SYMP EMP SOFTWAR, P145
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Noll J, 2019, LECT NOTES COMPUT SC, V11915, P341, DOI 10.1007/978-3-030-35333-9_25
   Noll J, 2017, LECT NOTES COMPUT SC, V10611, P307, DOI 10.1007/978-3-319-69926-4_22
   Nurdiani I, 2019, J SYST SOFTWARE, V156, P1, DOI 10.1016/j.jss.2019.05.035
   O'Connor RV, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1866
   Paasivaara M, 2017, INT CONF GLOBAL SOFT, P36, DOI 10.1109/ICGSE.2017.15
   Prause C. R., 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P130, DOI 10.1109/ICSSP.2012.6225956
   Qumer A, 2008, INFORM SOFTWARE TECH, V50, P280, DOI 10.1016/j.infsof.2007.02.002
   Royce W.W., 1970, IEEE WESCON
   Shull F, 2009, IEEE SOFTWARE, V26, P6, DOI 10.1109/MS.2009.145
   Solinski A, 2016, SOFTWARE QUAL J, V24, P447, DOI 10.1007/s11219-014-9253-3
   Steghöfer JP, 2019, LECT NOTES COMPUT SC, V11915, P350, DOI 10.1007/978-3-030-35333-9_26
   Strassburger K, 2008, STAT MED, V27, P4914, DOI 10.1002/sim.3338
   Tell P, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2315
   Tell P, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP 2019), P105, DOI 10.1109/ICSSP.2019.00022
   Theocharis G, 2015, LECT NOTES COMPUT SC, V9459, P149, DOI 10.1007/978-3-319-26844-6_11
   Tripp JF, 2014, P ANN HICSS, P4799, DOI 10.1109/HICSS.2014.589
   Tüzün E, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP 2019), P115, DOI 10.1109/ICSSP.2019.00023
   van Waardenburg G, 2013, INFORM SOFTWARE TECH, V55, P2154, DOI 10.1016/j.infsof.2013.07.012
   Vijayasarathy L, 2012, INFORM SOFTWARE TECH, V54, P137, DOI 10.1016/j.infsof.2011.08.003
   Vijayasarathy LR, 2016, IEEE SOFTWARE, V33, P86, DOI 10.1109/MS.2015.26
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1857, DOI 10.1109/TSE.2019.2937083
   West D., 2011, Water-Scrum-Fall is the Reality of Agile for Most Organizations
   Yang C, 2016, J SYST SOFTWARE, V111, P157, DOI 10.1016/j.jss.2015.09.028
NR 88
TC 19
Z9 20
U1 30
U2 104
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3523
EP 3539
DI 10.1109/TSE.2021.3099532
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500018
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Cummaudo, A
   Vasa, R
   Grundy, J
   Abdelrazek, M
AF Cummaudo, Alex
   Vasa, Rajesh
   Grundy, John
   Abdelrazek, Mohamed
TI Requirements of API Documentation: A Case Study into Computer Vision
   Services
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Documentation; Taxonomy; Computer vision; Usability; Guidelines;
   Measurement; Tools; Intelligent web services and Semantic Web; code
   documentation; computer vision
ID SOFTWARE; PATTERNS
AB Using cloud-based computer vision services is gaining traction, where developers access AI-powered components through familiar RESTful APIs, not needing to orchestrate large training and inference infrastructures or curate/label training datasets. However, while these APIs seem familiar to use, their non-deterministic run-time behaviour and evolution is not adequately communicated to developers. Therefore, improving these services' API documentation is paramount-more extensive documentation facilitates the development process of intelligent software. In a prior study, we extracted 34 API documentation artefacts from 21 seminal works, devising a taxonomy of five key requirements to produce quality API documentation. We extend this study in two ways. First, by surveying 104 developers of varying experience to understand what API documentation artefacts are of most value to practitioners. Second, identifying which of these highly-valued artefacts are or are not well-documented through a case study in the emerging computer vision service domain. We identify: (i) several gaps in the software engineering literature, where aspects of API documentation understanding is/is not extensively investigated; and (ii) where industry vendors (in contrast) document artefacts to better serve their end-developers. We provide a set of recommendations to enhance intelligent software documentation for both vendors and the wider research community.
C1 [Cummaudo, Alex; Vasa, Rajesh] Deakin Univ, Appl Artificial Intelligence Inst, Geelong, Vic 3220, Australia.
   [Grundy, John] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Abdelrazek, Mohamed] Deakin Univ, Sch Informat Technol, Geelong, Vic 3220, Australia.
C3 Deakin University; Monash University; Deakin University
RP Cummaudo, A (corresponding author), Deakin Univ, Appl Artificial Intelligence Inst, Geelong, Vic 3220, Australia.
EM ca@deakin.edu.au; rajesh.vasa@deakin.edu.au; john.grundy@monash.edu;
   mohamed.abdelrazek@deakin.edu.au
RI Vasa, Rajesh/GOK-1135-2022; Grundy, John/I-6681-2012
OI Vasa, Rajesh/0000-0003-4805-1467; Grundy, John/0000-0003-4928-7076
FU Australian Government Research Training Program (RTP) Scholarship;
   Laureate Fellowship [FL190100035]; ARC Research Hub for Digital Enhanced
   Living [IH170100013]; Australian Research Council [IH170100013] Funding
   Source: Australian Research Council
FX Cummaudo was supported by an Australian Government Research Training
   Program (RTP) Scholarship. Grundy was supported by Laureate Fellowship
   FL190100035. We acknowledge additional support provided by the ARC
   Research Hub for Digital Enhanced Living IH170100013.
CR Aghajani E, 2019, PROC INT CONF SOFTW, P1199, DOI 10.1109/ICSE.2019.00122
   [Anonymous], 2008, PROC 12 INT C EVAL A
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   [Anonymous], 2019, RIGHTSCALE 2019 STAT, P32
   Aversano L, 2017, PROCEDIA COMPUT SCI, V121, P423, DOI 10.1016/j.procs.2017.11.057
   Baruch Y, 1999, HUM RELAT, V52, P421, DOI 10.1023/A:1016905407491
   Bottomley C, 2005, 2005 IEEE INTERNATIONAL PROFESSIONAL COMMUNICATION CONFERENCE (IPCC), P802
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Brooke J., 1996, USABILITY EVALUATION, P189, DOI DOI 10.1201/9781498710411-35
   Brooke J, 2013, J USABILITY STUD, V8, P29
   Cicchetti D. V., 1994, PSYCHOL ASSESSMENTS, V6, P284, DOI [DOI 10.1037/1040-3590.6.4.284, 10.1037/1040-3590.6.4.284, https://doi.org/10.1037/1040-3590.6.4.284]
   Cummaudo A, 2020, PROC INT CONF SOFTW, P1584, DOI 10.1145/3377811.3380404
   Cummaudo A, 2019, INT SYMP EMP SOFTWAR, P392
   Cummaudo A, 2019, PROC IEEE INT CONF S, P333, DOI 10.1109/ICSME.2019.00051
   Dey I., 2003, Qualitative data analysis: A user-friendly guide for social scientists, DOI DOI 10.4324/9780203412497
   Gamer M., 2019, IRR VARIOUS COEFFI C
   Garousi V., 2017, P 21 INT C EV ASS SO, P170
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Geiger RS, 2018, COMPUT SUPP COOP W J, V27, P767, DOI 10.1007/s10606-018-9333-1
   Glass RL, 2009, INFORM SOFTWARE TECH, V51, P68, DOI 10.1016/j.infsof.2008.09.015
   Hallgren Kevin A, 2012, Tutor Quant Methods Psychol, V8, P23
   Haselböck S, 2018, IEEE INT CONF SERV, P1, DOI 10.1109/SOCA.2018.00008
   Head A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P643, DOI 10.1145/3180155.3180176
   Hosseini H, 2017, 2017 16TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P101, DOI 10.1109/ICMLA.2017.0-172
   Inzunza Sergio, 2018, Trends and Advances in Information Systems and Technologies. Advances in Intelligent Systems and Computing (AISC 746), P229, DOI 10.1007/978-3-319-77712-2_22
   Jeong SY, 2009, LECT NOTES COMPUT SC, V5435, P86
   Jiarpakdee J, 2022, IEEE T SOFTWARE ENG, V48, P166, DOI 10.1109/TSE.2020.2982385
   Kitchenham B., 2007, TECHNICAL REPORT EBS, P2007
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Ko AJ, 2011, S VIS LANG HUM CEN C, P173, DOI 10.1109/VLHCC.2011.6070395
   Kotula J, 1998, IEEE SOFTWARE, V15, P84, DOI 10.1109/52.663791
   Krosnick JA, 1999, ANNU REV PSYCHOL, V50, P537, DOI 10.1146/annurev.psych.50.1.537
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   McLellan SG, 1998, IEEE SOFTWARE, V15, P78, DOI 10.1109/52.676963
   McLeod L, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978803
   Meng M, 2018, Journal of Technical Writing and Communication, V48, P295, DOI [10.1177/0047281617721853, 10.1177/0047281617721853?journalCode=jtwa, DOI 10.1177/0047281617721853]
   Myers BA, 2016, COMPUTER, V49, P44, DOI 10.1109/MC.2016.200
   Myers BA, 2016, COMMUN ACM, V59, P62, DOI 10.1145/2896587
   Nybom K, 2018, EUROMICRO CONF PROC, P462, DOI 10.1109/SEAA.2018.00081
   Nykaza J., 2002, PROC 20 ANN INT C CO, P133, DOI DOI 10.1145/584955.584976
   Parnas DL, 2007, HASE 2007: 10TH IEEE HIGH ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P237, DOI 10.1109/HASE.2007.70
   Robillard MP, 2017, PROC IEEE INT CONF S, P479, DOI 10.1109/ICSME.2017.17
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Sauro J, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2215, DOI 10.1145/1978942.1979266
   Schwandt TA, 1996, EVAL PROGRAM PLANN, V19, P106, DOI 10.1016/0149-7189(96)88232-2
   Seaman C. B., 2007, GUIDE ADV EMPIRI CAL, P35
   Singer J., 2007, GUIDE ADV EMPIRICAL, P9
   Spector P.E., 1992, SUMMATED RATING SCAL, V82
   Taulavuori A, 2004, INFORM SOFTWARE TECH, V46, P535, DOI 10.1016/j.infsof.2003.10.004
   Team R.C, 2017, R LANG ENV STAT COMP
   Usman M, 2017, INFORM SOFTWARE TECH, V85, P43, DOI 10.1016/j.infsof.2017.01.006
   Wang BL, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1281
   Watson R., 2013, P 31 ACM INT C DESIG, P165, DOI DOI 10.1145/2507065.2507076
   Watson R, 2012, SIGDOC '12: PROCEEDINGS OF THE 30TH ACM INTERNATIONAL CONFERENCE ON DESIGN OF COMMUNICATION, P295
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Zhi JJ, 2015, J SYST SOFTWARE, V99, P175, DOI 10.1016/j.jss.2014.09.042
NR 59
TC 5
Z9 6
U1 2
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2022
VL 48
IS 6
BP 2010
EP 2027
DI 10.1109/TSE.2020.3047088
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2D5IM
UT WOS:000811580600011
OA Green Submitted
DA 2024-07-18
ER

EF